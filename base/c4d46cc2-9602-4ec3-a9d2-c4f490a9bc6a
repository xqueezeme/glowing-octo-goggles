{
    "title": "One Prince Revisited",
    "pages": [
        "Summer would never be the same\n\nAuthor's note: This is a submission for the 2018 Summer Lovin' contest on Lit. It builds off of \"One Prince of Serendip,\" my submission for the Nude Day contest. You may want to read that one first. Or not. This is ending up to be a long one, since it covers weeks. Regardless of inspiration, this story is fiction, and if you think you recognize yourself in it, don't worry about it... no one else should. I'm putting this in Erotic Couplings, although I often have a hard time deciding between that and Romance. If I've picked the wrong category, please don't let it affect your enjoyment. Thanks for reading, and I particularly appreciate voting and constructive comments, regardless of any contest. That's how I know how well I am pleasing you, the reader. Cheers!\n\n*~*~*~*~*\n\nI want to thank you for giving me the most wonderful summer of my life...<br> It was so heavenly, you meant the world to me <br> and anyone could see that I was so in love...<br> Wonderful Summer - Robin Ward (1963) \n\n* * * * *\n\n[Wednesday 6/23]\n\nHi. It's me again. The guy who thought he was the luckiest guy on the planet a few short weeks earlier. Earlier than this story, that is. I had the incredible good fortune to meet Marsha and Kate over the Memorial Day holiday. To say we hit it off well would be severe understatement. Though we only had two more days after our first meeting, we promised to stay in touch and to try to get together over the summer. The odds were fairly high, since both our families liked to vacation at our properties on \"the Thumb.\" The odds were unfortunately also very high that we wouldn't be alone.\n\nSo much for being a Hippie-Naturist. That's what Marsha and Kate had decided to call me when they stumbled across me sunbathing nude on my family's private beach. We'd had an incredible two and a half days of screwing our brains out, as well as just goofing around and getting to know each other, before we all had to go back to our realities.\n\nFor me and for Marsha it was back to college, to finish Spring Quarter. For Kate it was back to home... she'd just graduated high school and wasn't starting college until Fall. I put in my mandatory two weeks to finish the term, then went back to my parents' to rejoin the rest of my family. My next younger brother, Matt, was Kate's age and had also just finished high school. He was lobbying our folks to let him spend a couple of months with his best friend, whose parents also owned vacation property near ours. And I think my parents were getting ready to cave.\n\n\"I think you ought to let him go,\" I told them, when it came up around the dinner table. \"He doesn't start until the Fall... why not let him have one last summer fling?\" Matt was looking at me like I had sprouted additional heads because I never supported him in any of his wild-hair schemes. My parents may have been looking at me weirdly for the same reason.\n\n\"And what do you intend to do with your summer?\" my Mom asked. \"Another 'last summer fling' for you, too?\" She had a way of bypassing your eyes and going straight for your soul. I had a very selfish reason for wanting to be alone up at the house. Or rather, I had two reasons. But I wasn't about to tell her that.\n\n\"Actually, I thought I'd get a bunch of the maintenance done on the house before everybody descends on it,\" I told her. I wasn't lying. I really did intend to do a bunch of the stuff the house needed. It's just... well, that wasn't all I intended to do.\n\n\"The gutters need cleaning and painting, the front porch needs to be stripped and painted... and since it's concrete, it's better to use the hydrochloric acid when no one else is around... the front hedge and walkway to the beach need trimming... there's a lot of things to do to keep me busy, Mom, and I don't have any good prospects for a summer job since Mr. Evans sold the Standard station.\"\n\n\"You don't want your brother's help with all that?\" Mom asked. I'm sure she was poking at my motives.\n\n\"Am I going to start a civil war if I tell you I'd rather not have him underfoot?\" I countered. \"There's some stuff, like pulling out the dead wood and like that, that Matt and Jim could be helpful with. And Jim's folks are only twenty minutes from our place. But otherwise? He'd just be getting in my way.\"\n\nMy Dad finally chimed in. \"I don't see a problem with it, Hon\" he told Mom. \"They both have their own cars. You're not going up until after the Fourth, because Mary and Luke are involved in the parade down here. So Matt could go to Jim's, Mark could start on the house and everyone else can go up after my sister and her brood get here.\" He was careful to express his opinion but leave the final decision in Mom's lap.\n\n\"Okay, I suppose that's fine,\" she caved. \"Just both of you, be careful!\"\n\n\"Yes, ma'am!\" I smiled. \"I always am.\" The look I got from both of my parents indicated I was probably wrong about that. Matt snorting into his milk didn't help any, either.\n\n\"Buy what you need at Borden's,\" Dad told me. \"Charge it to my account. I'll call up there and let them know you're working on the house and it's okay. And if you could add putting up the screen house to your list, I'd appreciate it. Just don't put it up between the trees we hang the hammock on.\"\n\n\"Yes, sir,\" I told him. \"I wasn't going to leave until the weekend, and I'll put together a list for you and Mom to check before I go. And thanks...\"\n\n\"Thanks?\" Dad iterated, quizzically.\n\n\"Yeah... for understanding why it's easier not to have people around when I'm trying to get shit done.\"\n\n\"Language...\" That was my mother. My Dad just frowned.\n\n\"Okay, get stuff done,\" I amended. \"Anyway, thanks. Oh, and can I make a couple of long distance calls? I want to see if some of my friends are going to be around, for later.\"\n\n\"Yeah, sure,\" Dad told me. \"Just keep it short.\"\n\nI agreed, we finished dinner, I cleared the table (my dinner chore that week) and I went to make my calls.\n\n* * * * *\n\n\"Yeah, seriously... they won't come up until, like, the 9<sup>th</sup> or so.\" I was talking to Marsha. \"I've got a shit-ton of work to get done around the house, but it will be only me. My younger brother will be partying with a friend of his on the other side of the peninsula, so no worries.\" I paused to listen to her plans.\n\n\"Okay, so your whole family's coming up. When?... Oh... Well, hopefully you two can get some time to visit down at mine... Your Dad wants to meet me? Shit. He doesn't own a shotgun, does he?... Charter member of the Sand Hill Rod and Gun Club. Marsha, you're not making me feel any better... Of course I'm going to sweat it! He doesn't by any chance know... he does? Oh, fuck!...\"\n\nFew telephone conversations have left me pale, shaking and with sweaty palms. This one did.\n\n\"Okay, so I'm driving up Saturday. I want to get to the grocery before Vivian closes, so I should be there mid-afternoon at the latest. By the way, have you ever had their brats? I love 'em! Should I pick up extra for us?... Okay, will do. How's Kate doing?...\"\n\n\"Marsha, I don't think I'm physically capable of doing that...\" Marsha's take on it was that Kate wanted me to fuck, and cum in, every one of her orifices while making her cum so hard that she passed out. All I got in response was laughing.\n\nWe wrapped it up and rang off. I went to start packing. I was about halfway through when Matt knocked at my open door. I looked over to him. \"What?\"\n\n\"So... you got something going on the side?\" he asked as he stepped in and closed the door. \"You never back me when it comes to me doing something on my own. Why now?\"\n\n\"If I told you the truth, you either wouldn't believe me or would be insanely jealous and would say something to the wrong person,\" I told him. \"So just be grateful that I'm on your side this time.\"\n\n\"So is she a hottie?\" he asked, unfortunately jumping to the correct conclusion.\n\n\"They both are,\" I told him with a smirk. \"If you're a good boy, I might introduce you.\"\n\n\"Both?\" The shocked expression was worth it.\n\n\"Yeah... sisters. From up the beach. Remember the Morrisons?\"\n\n\"Yeah... they had a nice boat.\"\n\n\"Well, they sold the place to the Terneys, and Marsha and Kate are awesome. So keep your mouth shut and I'll keep backing you.\"\n\n<br >\"You're right,\" he told me, getting over the shock. \"Jealous. And yeah, I'd like to meet them.\"\n\n\"Well, I'll see you up there,\" I smiled. \"I've gotta finish packing.\"\n\n\"Sure,\" he told me. \"See you up there. Oh, and if you stop by Bay House, would you pick me up a couple of bottles of sweet cherry wine?\"\n\n\"I'll let you know if I can get them,\" I told him. \"You can come by the house to pick them up, if I can.\"\n\n\"Cool,\" he nodded. \"Two sisters... Jesus, you are one lucky fuck! Catch ya later...\" With that, he exited, closing the door behind him. I made sure to pack some condoms and some primo weed. Then I hit the sack.\n\n* * * * *\n\n[Saturday 6/26]\n\nMy life tended to be feast or famine. When my life would get adventurous, everything seemed to happen at once. Case in point: I was north of Milwaukee, driving in a nasty rain, and I saw two girls hitchhiking on the side of the highway. I had several chivalrous reasons for stopping and offering them a ride, and a whole bunch of horny, lascivious ones. They accepted the ride and I realized it was White Knight time. They were both excellent examples of underage baby pussy. The soaked clothes were showing off the attributes that would net me twenty years in jail, so I had to become the Nice Guy. Which I did. They were trying to get to Mishicot and it was on my way, sort of.\n\nWe talked, I treated them to lunch at the A&amp;W in Two Rivers and I finally dropped them off. As a \"thank you,\" they both flashed me, getting out of the car. I dutifully did not react. Much. After pulling away, I was harder than Pharaoh's Heart, all the way to Vivian's Grocery. Shopping with a hard-on is a bitch, especially when you don't want the proprietress to notice it.\n\nI got my groceries and got on up to the house, opening it up and putting the stuff away. It was just as I'd left it and it was easy to fall into the usual routine. Marsha had said her family wasn't going to be up until the next day, Sunday, so I spent the rest of Saturday getting organized. I made a list of the things I needed to buy and headed north to Borden's Ace Hardware. Dad had been as good as his word and Mr. Borden was waiting for me. I'd known him since I was a mini-kid and had even hung around with his daughter, growing up. He treated me like an old family friend and made short work of getting everything I needed loaded into my car. He wished me good luck as I drove away, swinging by Bay House on the way out.\n\nAgain, I was in luck. Suzy, a friend from a lot of years past, was clerking and sold me six bottles of sweet cherry wine. It cost me twelve bucks and a really sloppy, sexy kiss. I drove back to the house to sort out my supplies, wondering why I hadn't gotten together with her more. Then I remembered her boyfriend.\n\nI realized I should make sure the Jeep was gassed and ready to go, and found out that whoever put it away -- it wasn't me -- left less than a quarter of a tank. So I burned the last part of the day driving back down to Vivian's and gassing up. I filled the outboard's gas tank and a couple of 5-gallon Jerrycans while I was at it. Then it was drive back to the house and start dinner.\n\nI spent the evening tending some brats on the grill down on the beach and lounging around naked, fantasizing about Marsha and Kate. There was just enough breeze coming in off the lake to keep the mosquitoes at bay and it definitely felt good on my nethers. So good that I started getting hard, lying back in the canvas deck chair. Of course, my memories of the girls were contributory.\n\nNot one to squander an opportunity, I started stroking myself, the sounds of the waves and the gulls providing a pleasant background to my imagination's moans and cries of pleasure. For some reason, I got obsessed with a scene of sodomizing the two girls... something we hadn't tried earlier, other than my tongue up Kate's bum. I had this really nice movie playing in my head of them on all fours, side by side, while I went back and forth between them, doggy-style. I'd be fingering one while fucking the other, and they were both getting off like crazy. Would that it were real life.\n\nIn any case, I finished off with a spray of cum all over my chest and belly. When I got calmed down enough, I walked out into the water to rinse off, then came back to find out my brats were done. Poppy seed buns and a squeeze bottle of French's and I was in heaven. I decided to retrieve my weed and a bottle of wine and just sit out under the stars, digging the tranquility, until it was time to hit the sack. Prior to Marsha and Kate, it was these kinds of moments I lived for...\n\n* * * * *\n\n[Sunday 6/27]\n\nI was up on the roof, cleaning the gutters, when I heard the phone ring. Two long, two short. Two long, two short. There was no way I was getting down off the roof in time to answer it, so I just let it go. I'd use Mildred, the precursor to the answering machine, later. Right then, I needed to finish blowing the leaves and other shit out of the gutters with the hose. There was a reason for doing them first -- they were dirtier than hell and it would be better not to dump that crud on fresh paint. I took my time and did it right, then climbed down and washed up before going to the phone.\n\nI picked it up and toggled the hook, waiting for the operator.\n\n\"Hello, Mildred?\" I asked when she came on. \"This is Mark Engle. Somebody tried calling here a while ago. Did they leave a message?... Marsha Terney?... Okay, thanks. Can you put me through to them?\"\n\nMarsha had left a message with Mildred that the whole family was now up at their house and to call back whenever I had a chance. Mildred finally came back on to tell me that there wasn't any answer. I thanked her and hung up. I considered my options. Next up on the chore list was going to be painting the gutters, but I wanted them to dry more before I started that. Ergo, they could wait until tomorrow.\n\nTrimming the bushes and the walkway could be next, but honestly, I didn't feel like it. What I felt like was seeing the girls. I finally got the wild hair to drive up there. Take the Jeep up the beach to see them. Net result, that's what I did, making sure to stay out in the water a bit, so as not to piss off my neighbors. I parked next to their boathouse when I got there, but looking around, I didn't see anyone. So I headed up the path that led to the main house.\n\nThe Morrisons had maintained a really nice place, with lawn under the trees and two houses... the main house which was sort of traditional and rectangular, and an A-frame guest house next to the covered in-ground pool. The Terneys hadn't changed anything immediately noticeable. I saw a Caddy in the drive but no one to go with it, so I figured they must be inside. I walked up onto the porch to ring their bell and stopped dead in my tracks.\n\nA very beautiful, very naked woman was sunbathing on the porch, and from the looks of her, she had to be the girls' mother. Absolutely fucking stunning. Long before the term MILF was coined, the concept existed and she was the embodiment of it.\n\n\"Oh, excuse me,\" managed to escape my lips before I could just quietly back away and escape. She came up onto her elbows and lifted her sunglasses to look at me while I froze. Then she smiled and I started to melt. And tent my shorts.\n\n\"Hi!\" she greeted me. \"You must be Mark.\" I nodded, trying very hard to look at her face.\n\n\"The kids took the boat down to town to gas it up,\" she went on. \"They'll be back pretty soon. You're welcome to wait, if you want.\"\n\n\"Um... uh, thanks, Mrs. Terney,\" I told her. \"I, uh... I think I'll just go and wait back by the boathouse.\"\n\n\"Whatever you'd like,\" she smiled and looked pointedly at my crotch. She didn't say anything. She just gave me a leer for the ages. I turned to leave and ran into a naked god. Well, man, actually, but he was incredibly handsome. I suddenly had no illusions about where the girls got their looks.\n\n\"You must be Mark,\" he told me as he put out his hand. I took it out of reflex.\n\n\"Uh, yes, sir,\" I nodded. This was the father of the girls I was fucking and despite Marsha's comments, I wasn't at all sure he'd be happy about it.\n\n\"That your MB out there?\" he asked, nodding towards my Jeep.\n\n\"Uh, yes, sir,\" I answered. He still hadn't let go of my hand. \"My grandfather got it after the war. Dropped from a plane one too many times and put back together by a guy down in Two Rivers.\"\n\n\"Come on with me,\" he told me, dropping my hand but putting his arm around my shoulder. \"I want to show you something.\"\n\nHe's going to show me where he buries the bodies, I was thinking as we walked around the corner of the guest house. Christ, I am so fucked...\n\nIt was more than a little strange having a naked man with his arm around me, guiding me around the back of the house. I realized as soon as we turned the corner that he was taking me to the garage. There was a horse trailer next to it and I could see a temporary corral beyond it. He let go of me to open the garage door and I edged away a little, but I have to admit, my curiosity was getting the better of me. What he showed me was a CJ3A in pristine condition.\n\n\"Couldn't get my hands on an MB that wasn't a major rebuild project,\" he told me. \"By the way, I'm Don, and that was my wife Natalie on the porch.\"\n\n\"Yes, sir, Mr. Terney,\" I told him as I looked at his Jeep. \"I kind of figured out who you were.\"\n\n\"Marsha and Kate have told us a lot about you,\" he commented as my eyes were drawn to a tarp-covered motorcycle. I must have visually cringed at that because he went on, \"and don't worry about any of it. You're good.\" I breathed a premature sigh of relief right before he added, \"and feel free to lose the clothes around here. You may have noticed, we're pretty much nudists.\"\n\nFear of the man had made me lose the hard-on. Thoughts about his daughters, naked, were bringing it back.\n\n\"Mind if I come down and look at your Jeep?\" he asked, turning to leave.\n\n\"Uh, sir?\" I ventured. I mean, I was still upright and breathing, so I let go of the idea of reaching room temperature sometime soon.\n\n\"Yes?\" He paused, turning back towards me.\n\n\"Um... if I can ask... what's under the tarp?\" He broke out into a huge grin.\n\n\"One of my pet projects, still in the restoration phase,\" he told me, walking over to the bike and pulling off the tarp. \"1940 Indian Four. Technically, Indian Model 440.\" I just about shit.\n\n\"How do you even find parts for something like this?\" I asked, completely flummoxed.\n\n\"It ain't easy, son,\" he told me. \"If I ever get her done, you can take her for a spin.\"\n\n\"Sir, I'd be afraid to even breathe on her,\" I told him and meant it. \"That's like, a $10,000 bike, or better.\" Remember, this was back in '71. He smiled and threw the tarp back over her.\n\n\"Let's go look at your ride,\" he smiled, and we headed out. I guess I was getting used to walking around with a naked man. I was not used to seeing his naked wife standing up on the porch as we came around the corner. Nor her walking up to me with a smile and a tall glass of cold lemonade.\n\n\"Before Don spirits you away,\" she told me, \"I thought you might like some lemonade.\"\n\n\"Thanks, Mrs. Terney,\" I told her, taking the glass and a deep pull off of it, mostly to give me something to look at that wasn't her amazing tits and pussy. It was too late for my cock, though. He decided to come roaring back, making his presence known through the tent in my shorts. Despite the offer to join them sans clothes, I decided that I wouldn't... because I'd be hugely embarrassed to confirm that this man's wife was turning me on, big time.",
        "I finished the lemonade and gave her back the glass, making sure to keep eye contact, then headed down to the beach with Mr. Terney following me. We had the hood up and were engrossed under it when I heard the motor of their boat returning. I looked up and saw Marsha and Kate in the stern seats with two guys I didn't recognize up front.\n\nThose better be their brothers or we're going to have a serious problem, I thought, surprising myself with how territorial I was suddenly feeling. I didn't need to worry, though. As soon as the boat idled up to the dock, Marsha, Kate and one of the guys jumped out and tied it down. The other guy cut the engine and joined the others on the dock. Then Marsha and Kate made a beeline for me.\n\nThey had on t-shirts and bikini bottoms, and that was about it. It became obvious as they reached me, Marsha in the lead this time, and she threw her arms around me and pulled me into an incredible kiss. In front of her naked father. And two guys I hoped were her brothers. I'm not sure if it was fear or embarrassment on top, but Marsha just blew right through it and I had to respond to her. She just plain felt so damned good, and we hadn't seen each other for a few weeks.\n\nI was getting lost in her when Kate tapped in. \"Stop hogging him, Sis,\" she told Marsha and I could hear the males gathered around laughing. I hoped that was a good sign. Marsha eased up and then whispered \"Later...\" in my ear before she stepped back, simultaneously making room for Kate and peeling her t-shirt off. I only got a second to ogle before Kate blocked my view.\n\nKate did the same thing Marsha had done, throwing her arms around me and pulling me into a major make-out session. When her Dad finally said, \"Okay, girl, let the man breathe...\" she eased up and whispered \"Later...\" in my ear before stepping back and stripping off her shirt.\n\n\"You must be Mark,\" one of the guys told me, stepping forward with his hand out. He, like the other one, had a swimsuit on.\n\n\"Uh, yeah,\" I answered, taking his hand. This was really blowing the doors off my version of reality.\n\n\"I'm Tom,\" he continued. \"Good to meet you. Nice Jeep.\"\n\n\"Likewise,\" I told him. \"And thanks.\" He stepped back and the other stepped forward, hand out.\n\n\"You must be Steven,\" I told him, thinking I was being clever to get in the \"you must be\" first.\n\n\"Steve,\" he corrected me. \"And yeah. Kate says you've got a really nice place down the beach from here.\"\n\n\"Well, it's only mine when I'm here alone,\" I told him. \"The real owners, my parents, will be arriving a week after the Fourth, I think. But you're welcome to drop by whenever you want.\"\n\n\"Thanks... we'll probably take you up on that. Maybe do a bonfire or something, later. I think Mom's grilling here tonight.\"\n\n\"She is,\" Mr. Terney interrupted. \"And to that end, don't you all have some chores to get done?\"\n\n\"Dad...\" Marsha protested and Kate was getting ready to join her.\n\n\"We just got here,\" he told her. \"You'll have plenty of time to get together later. Go help your Mom.\"\n\nWith a bit of grumbling and a couple of see you later's from the girls, the four of them headed on up towards the house while Mr. Terney stayed with me.\n\n\"Marsha says you've got a bunch of maintenance to do down at your place,\" he told me as we buttoned up the Jeep. \"You might want to see about roping the kids into helping you, Mr. Sawyer.\" His grin and Tom Sawyer reference let me know he was kidding, but I did see a sort of beauty to the idea and told him so.\n\n\"You better head on back,\" he told me. \"Otherwise I won't get anything useful out of the girls. For some reason, they're rather smitten with you.\"\n\n\"Well, thank you, sir, for sharing your collection... kids included,\" I smiled as I climbed back in and fired up the Jeep. I don't know where I was getting the balls, but he smiled, so I figured we were cool. \"Tell the girls if they call and I don't answer, I'm probably working outside and to leave a message with Mildred, like Marsha already did. I'll get it eventually. Or they can just ride down, or whatever.\"\n\n\"I'll tell 'em,\" he told me. \"Enjoy your evening.\"\n\n\"You, too, sir,\" I told him and headed back down the beach, my heart going ninety miles an hour. It was going take a lot to get rid of the adrenaline.\n\n* * * * *\n\n[Monday 6/28]\n\nEight loads Sunday night. Eight major orgasms over several hours before I could get my mind off the girls and back onto the house. Mr. Terney was right. If I could get them to help with the painting, it would go a lot quicker. I had three ladders that would reach the gutters, so three of us could be working at one time. The porch was a different issue. Clothing and rubber boots were required because of the hydrochloric acid. That had to be applied, scrubbed and hosed off before I could put on the concrete paint. Unless they had boots, I was going to be doing that part alone.\n\nI realized the only reason I was in a hurry was because I thought I'd be competing with their family for the girls' attention and I didn't want anything in the way of maximizing my time with them. With their parents' attitudes, though, it didn't seem like there was going to be a problem. Still, I decided to do the bushes in the morning and get in some serious sunbathing, then see if I could get ahold of them in the afternoon. Again, I needn't have worried.\n\nTrimming the bushes and along the walkway took about an hour, and another hour scouring for poison ivy. It was one of the banes of my existence, along with the mosquitoes. I decided to fog the area around the house and that took another hour. So around noon or so, I was finally lying out naked under the sun and loving it. It wasn't the sound of a horse that interrupted me this time, though. It was a boat motor.\n\nWhen I sat up and looked out, I saw the Terney's boat coming in, with the entire family aboard. The girls waved at me as Mr. Terney swung the boat around to put the bow into the waves and the guys dropped anchors fore and aft. It was at that point that I realized they were all naked. And I realized that between Mrs. Terney and the girls, I was going to get hard whether I wanted to or not, and that it would be obvious to Mr. Terney and the guys. I was creeping up on panic when Mr. Terney called out to me.\n\n\"Hi, Mark! Greeks bearing gifts!\" He gestured back to where the naked guys had jumped in the water and the naked girls were bending over, handing a couple of coolers to them. Missus was standing up and getting ready to jump over the side and Mister was right behind her.\n\nI had one of those horribly excruciating moments where Fight-or-Flight was kicking in and I was painfully torn over what I wanted to do. I was still scared shitless of what Mister or the guys might do to protect the women's honor, but I really, really didn't want to insult them by running to cover up. The phrase \"deer in the headlights\" probably describes it best. I was frozen with indecision. The decision was taken away from me.\n\nMissus was the first to reach shore while Mister followed and Marsha and Kate were helping Steve and Tom. I stood up at her approach and prayed I wouldn't do something stupid. She walked right up to me with arms open for a hug... what was I supposed to do? A smiling Mister was ten feet behind her.\n\nWe slid into the hug and she pushed those awesome tits against me and... well, my body betrayed me. I got hard and I got hard fast and I'm sure she noticed because I was stabbing her in her belly.\n\n\"Don't sweat the comment about bearing gifts,\" she told me as we hugged, and she made sure it was a tight one. \"There's no Trojan Horse and we only do Greek occasionally.\"\n\nWhat??? She was seriously messing with my mind. She backed off, but was still holding me to her, so I could take Mister's offered hand.\n\n\"We were out for a cruise,\" he told me as we shook hands. He didn't seem to find it odd that his naked wife was clinging to me. \"And we decided to pay a social call, if that's okay with you. The girls have been non-stop bugging me to come down here.\" Then he leaned in so he could say something quietly and confidentially.\n\n\"And don't sweat the erection,\" he told me. \"It happens to all of us.\" He stepped back and looked down pointedly. I looked down, too, and saw that he was semi-hard... and put me to shame. I looked back up at him and he just gave me a wink. A sort of don't worry about it wink. That's the point where Marsha, Kate, Steve and Tom arrived with the two coolers.\n\n\"Since the plans seem to include the occasional party down here,\" Mister went on, \"we figured we should contribute. The green cooler is meats and stuff, and the blue one is drinks. The stuff in the green cooler should probably be refrigerated. \" Marsha, Kate, Steve and Tom set the coolers down in the sand and Marsha made a beeline for me. Again.\n\n\"Mom!... move!\" she told her mother and Missus stepped back, incidentally exposing my raging hard-on. Marsha noted it as she pressed into me for the hug.\n\n\"Mom!...\" she looked over at her mother with a chastising tone, then turned back into me. \"Well, hellooo Big Boy!\" she drawled with a smile. We didn't get as far as the kiss hello before Kate stepped in behind me and pressed her luscious body into me, wrapping her hands around from behind and laying her head on my shoulder. She didn't say a word. She didn't need to.\n\n\"Girls, you are smothering our host,\" Mister's voice made his point, with a smile you could hear. Both girls heaved huge sighs and let go.\n\n\"Hey, Mark...\" Tom spoke up. \"I don't give naked hugs until the third date.\" That got a snort from me. \"The girls say you've got a boatload of work to do on this place. Mind if we look?\"\n\nI was grateful for the distraction. My mind was seriously bouncing all over the place between really liking these people and being terminally embarrassed to be naked and hard in front of them. How the hell they could stay soft between the girls and their mother was beyond me.\n\n\"I don't mind,\" I told him.\n\n\"Where do you want these?\" Steve asked, indicating the coolers.\n\n\"Do you mind schlepping them up the stairs and the walk?\" I asked. \"I mean, if they're too heavy, I can go get the Jeep.\"\n\n\"Not a problem,\" he told me, then turned to the girls. \"Ladies...\"\n\n\"Lead on, Macduff,\" Kate told me as she and Marsha moved to help the guys.\n\n\"It's 'lay on',\" I told her, correcting her Shakespeare.\n\n\"That's later,\" she told me. I cringed. Her father was right behind her when she said it. I decided I'd better get to the head of this parade, so I grabbed my gear and headed up.\n\nI gave the group the nickel tour of the house and grounds, we got the green cooler off-loaded into the fridge, and then I showed them the various projects I wanted to get done.\n\n\"I fogged this morning,\" I explained, \"but if we're going to work au natural, then I need to fog a couple of times a day. Otherwise, it's clothes and Off! Painting the gutters was going to be next. I've only got one pair of boots for scraping the porch. No help is expected and any help is appreciated.\"\n\n\"Hey, I'm good with that,\" Steve told me, looking up at the roof line. \"Tom and I can do the gutters while you scrape the porch.\"\n\n\"And what are we supposed to do?\" Kate demanded.\n\n\"Keep us entertained,\" Tom put in.\n\nI swear, I could not have choreographed it any better. In perfect unison, the girls cocked their hips, put their hands on them, got identical Get Real! expressions on their faces and glared at Tom.\n\n\"I think that's my cue to suggest we head on out,\" Mister said, stifling a laugh. \"I'll break out the Jeep so you don't have to sweat taking care of the horses.\" He turned to his kids. \"You can take it down the highway so you don't scratch up the paint.\"\n\nThe girls started making noises about staying, but their Dad pointed out their suits were in the boat, and besides, they could come back later, if it was okay with me. He stressed that it always had to be okay with me. They grumbled a little, but gave me a see you later and headed back to the boat. I tagged along to say goodbye. Missus hung back a little, to have a private word with me before they left.\n\n\"You're a handsome young man, Mark,\" she told me. I wanted to disagree but figured keeping my mouth shut was a good idea. \"I'm a little envious of the girls, actually. If you get the time, I'd like to have a private chat with you.\"\n\n\"I am but a leaf blowing on the winds of Fate,\" I told her in a somewhat exaggerated tone. When she smiled, I added, \"I'll see what I can do, Mrs. Terney.\"\n\n\"Please, it's Natalie,\" she told me. \"Mrs. Terney makes me feel old... and you wouldn't want to do that, would you?\" Her implications suddenly slammed home in my dense brain.\n\n\"Uh, no... Natalie... I wouldn't want to make you feel old.\"\n\n\"Good,\" she smiled, then headed out into the water to get into the boat. They all waved as Mister powered them through the slight surf and on out onto the lake. I waved back as I realized that this summer was turning into fantasy material very, very quickly. A whole family of cool neighbors, and I was already fucking two of them. Could Life get any better?\n\nActually, it could. And did. After a few stumbles.\n\n* * * * *\n\nAfter the Terneys left, I thought about what entertaining might mean. They'd brought an assortment of grillables, like burgers, brats, chops, chicken, veggies... so we would be using the grill, which I could do either on the porch or down on the beach, where I usually grilled. They'd also brought some beer, wine and soft drinks, which I could ice as needed. I decided to clean up and recondition our fire scar. Grandpa had designated an area for bonfires and we'd laid a stone ring to contain them. We'd also brought in a few large logs, stripped of their bark, to put around it for seating. It hadn't been used in a couple of years, so I spent the rest of the afternoon getting it ready.\n\nAround 7pm or so, I had a fire going and was relaxing, clothed this time, when I heard a truck pull into my drive. So I went on up to check it out and it was the guys and the girls in the Jeep. They were dressed kind of nice, the girls in sundresses and the guys in slacks and polos. I walked on down to greet them.\n\n\"Hey, Mark!\" Steve called over. \"Just dropping the girls off. Dad hasn't got the TV working yet, so Tom and I are heading to the Inn to catch the game. I'd ask if you wanted to come along, but they'd kill me.\"\n\nWhile he was talking, Marsha and Kate were getting out of the Jeep. They walked over to me, then turned and told their brothers, \"okay, you can go now... thanks for the ride... don't wait up...\" With a smile and a wave, and a \"yeah, right...\" to the don't wait up comment, the guys took off. In the meantime, I'd been contemplating the girls.\n\nI'd actually seen them with their clothes off more than on. Right now I was looking at On, and being amazed. With their sundresses flowing around them, accented with open sandals and their hair pulled back in loose ponytails, they were beyond cute. They were fucking gorgeous! And I was starting to tent my shorts before they got to me. I was going to have to figure out how to get some pictures of us, because my buddies at home were never going to believe me. Clothed pictures, I mean. I don't think I'd want to share the other kind.\n\nMarsha reached me first and slid into one of her trademarked hugs and kisses, and she didn't even hog me, making room for Kate to do the same when she got to us.\n\n\"You two look fucking awesome!\" I told them as Kate stepped back. \"Who knew how good you'd look with clothes on?\" They laughed and Kate gently elbowed me.\n\n\"We were presuming you'd want to see us,\" Marsha told me. \"It just occurred to me that we didn't check, and that might be a problem.\"\n\n\"Yeah, especially if your girlfriend was over,\" Kate smiled. I almost blushed.\n\n\"You know I don't have any girlfriends other than you,\" I told them. \"And why you two are interested in me is beyond me, so don't sweat it.\"\n\n\"There's a serious answer for that,\" Marsha told me, \"but now isn't the time for it.\"\n\n\"Agreed,\" I told her. \"Have you guys eaten? I already ate, but I can throw something on the grill for you, if you want. I've got a fire going, down on the beach.\"\n\n\"We guys,\" Kate told me, emphasis hers, \"already had the obligatory family dinner. So no, not hungry. For food.\"\n\n\"Then I'll grab a bottle of wine and some glasses and we'll go laze around the fire,\" I told them. That met with their approval and a few minutes later we were sitting by the bonfire, using one of the logs for a backrest, one girl snuggled up on each side of me, and me thanking the Universe for being the luckiest guy in it.\n\nPart of me knew I was in trouble, though. I was falling for them and falling hard. And that was the problem -- I was falling for them. Not just one of them. They were each burrowing into my heart and I never wanted to have to choose between them. I knew full well this could end up just being a summer fling and come Fall, everybody goes back to Real Life. I knew it and I hated it. That isn't what I wanted.\n\nMarsha's comment about there being a serious answer echoed in my mind and I agreed... I just didn't know what it was.\n\nWe were about halfway through the bottle when Marsha kissed my neck and said, \"Mark, I want to fuck your brains out. But not on the sand. In case you were getting any ideas.\"\n\n\"Ditto,\" Kate told me, kissing the other side of my neck. \"That shit can get places you wouldn't believe.\"\n\n\"Oh, I'd believe,\" I told her. \"I've gotten sand in places only a proctologist could love. Not interested in doing it again. Besides...\" I paused to look at both of them. \"I like sitting here quietly, snuggling and looking out over the lake. It's romantic.\" I heard and felt them both gasp slightly, then hold their breath for a moment before sighing as they moved back so they could both look at me.\n\n\"What?\" I asked. \"I like romantic. Just 'cuz I'm a guy doesn't mean I can't lo...\" That's as far as I got. Marsha slapped her hand over my mouth.\n\n\"Don't,\" she told me. \"Don't go there. Not yet.\"\n\n\"There's a long story you probably need to hear,\" Kate told me from the other side. \"Especially before you start throwing the L-word around.\"\n\n\"Okay,\" I nodded as Marsha took her hand back. I leaned back into the log and told them, \"I'm listening. I'm not going anywhere except to piss and I've got all night.\"\n\nThey looked at each other with that sister-mind-meld thing, sort of like a Vulcan one but with emotions, and it was Marsha who spoke. After they both drained their glasses and held them out for more.\n\n\"We've got a special family, Mark,\" she told me. \"Inside of it. Outside of it, our Free Spirit attitudes can be... have been... taken really wrong.\" She paused, but I was committed to just listening.\n\n\"A lot of brothers and sisters mess around, growing up,\" she went on. She was watching me for any kind of reaction, I'm sure negative, but that's not where I was at. I really wanted to know where this was going. \"We weren't any different. None of us graduated high school a virgin.\" She kept pausing, but I just kept listening.\n\n\"The difference is, by the time Kate and I had graduated, we'd had non-consensual sex. Raped, basically.\"\n\nOkay, I really had to sit on that one. I felt punched in the gut. The idea was horrible. And horrible became anger and sadness and fear... I was suddenly feeling really upset with no target to vent on. I think Marsha saw the change in my expression. I know she felt the tension rip through my body.\n\n\"We're past that, Mark,\" she told me, \"but there have been... aftereffects.\"\n\nShe must have known the next illogical leap I was making because she added, \"and it wasn't our brothers. When they found out, they put the bastards in the hospital. Two different incidents, two different parties, same attitude that we must be 'loose women' and ignoring our demands, then pleas, to stop. It makes it kind of hard to deal with the concept of 'love' or 'romance' outside our family.\"",
        "\"That's one reason Mom and Dad are so keen on you,\" Kate spoke up softly. \"We came back all bubbly and excited, and we haven't been like that for a long time. Steve and Tom saw it, too. So they all jumped to the conclusion that you were some kind of magic for us. And who knows? Maybe you are. But my sister and I are still really gun shy.\"\n\nI started to pull my arms back from around them, but they both grabbed a wrist and Marsha said, \"Don't.\"\n\n\"I, uh... I need to,\" I told her. \"Gotta go use the facilities...\" She and Kate both let go. \"But I'll be right back, I promise.\" I got up and headed for the tree line. With my back to them, I relieved myself as I had said, but I was also burning brain cells.\n\nThese two wonderful creatures had been through a hell I wasn't going to be able to understand. It was totally wrong that anybody could have hurt them like that. And it meant I'd be walking on emotional eggshells from here on out. Which, I suspected, is exactly what they didn't want. I was completely confused. I figured I'd better level with them. I zipped up and headed back.\n\nI made a point of sitting back down between them, filling my glass and drinking half of it, then putting my arms back around both of them. \"Sorry about that,\" I quipped. \"Hydrostatic equalization and all that.\"\n\n\"Please tell me you're not freaked out,\" Marsha jumped right in as she snuggled up against me. I took a deep breath and let it out.\n\n\"Okay, I'm not freaked out,\" I told her. \"Confused as all hell about what I should do, how I should treat you, the whole fucking walking on eggshells thing... but not freaking. Pissed at the assholes and wanting to do something about it and feeling helpless. And unfortunately, regardless of your gun shyness, I love both of you. Just give me some clues of how to be around you and you've got it.\"\n\nMarsha buried her head in my shoulder. \"Dammit!\" Her voice may have been muffled, but the emotion wasn't. I felt her start to tremble. On my other side, Kate leaned into my shoulder as well.\n\nAll of a sudden, Marsha yelled \"FUCK!\" into my shoulder and struggled to her feet. \"Fuck!\" She turned and started walking away. \"Fuck! Fuck! Fuck-fuck-fuck! FUCK!!!\" she yelled into the night as she headed down the beach.\n\n\"Go get her!\" Kate pushed on me. Hard. I got to my feet and started dogtrotting after Marsha with no clue what I was doing. When I reached her, I grabbed her shoulders... bad move. She whirled around and hit me in the chest. She had tears running down her cheeks.\n\n\"Marsha, I...\" I started, but she interrupted me, hitting my chest for emphasis.\n\n\"Fuck!\" she started. \"We haven't even had a week and it's fucked up! Not even a week! Why? Why can't we just have normal??? What did we do to deserve this???\"\n\nI didn't know what she was ranting about, and I didn't know how to handle a woman's tears -- I still don't -- and I sure as hell didn't know what to do. My chest was really starting to hurt, so I pulled her to me and kissed her. Which got me kneed in the balls. Hard. I went down to one knee and tried not to vomit. Then I got a knee to the face.\n\nI rolled away, hurting and bleeding all over the place. And... I figured I deserved it. But, fuck! she was strong...\n\n\"What the fuck did you do?!?!\" I heard Kate yelling through the pain.\n\n\"I fucked up,\" I tried to say, trying to get focused and pinch off the bloody nose.\n\n\"I hit him,\" Marsha said, over top of what I was saying. She must have thought the question was for her. \"Oh, God, Mark... I'm sorry... I didn't think... I just...\"\n\nI tried waving my hand to shut her up. I wasn't going to stand up right then -- my legs and stomach were still wobbly from the hit to the testicles. \"My fault...\" I tried to say. Kate came over and pulled up on my shoulders, making me sit.\n\n\"Damn, you're a mess...\" she muttered. She pulled off her panties and used them like a handkerchief on my nose. Well, at least Marsha wasn't crying anymore.\n\nKate had Marsha hold the panties to my nose while she ran up to the house and got ice, wrapped in Saran Wrap, to use on my swelling face. I tried telling Marsha how sorry I was that I basically assaulted her, but she kept shushing me.\n\nFinally, she just told me, \"Mark, shut up! You don't get to say you're sorry. You don't ever get to say you're sorry about my issue. My problem, you're just the victim. So just shut the fuck up!\"\n\nI did what I was told.\n\nWe spent a couple of hours getting the bleeding under control and the swelling down before I was somewhere near functional again. There were all kinds of things I wanted to say, things I wanted to apologize for, and I couldn't because I'd been told to shut up. I finally got up the balls.\n\n\"Marsha, I'm going to say this once and then shut up because I don't want to get hit again,\" I told her. \"Regardless of your opinion, I am sorry and I do get to say it. I don't know how to handle emotional trauma, but I do know that I don't want to hurt you, ever, and I don't want whatever you think is fucked up to fuck up our fucking, and maybe even a decent relationship. All I know right now is that I want you both, as friends, as lovers, as whatever I can have. You're driving this bus. Just let me know what you want.\"\n\n\"I want not to have hit you,\" she said quietly. I chuckled and she looked at me strangely.\n\n\"Well, if you wanted to let me know you could take care of yourself, that was one hell of a warning shot into the bow,\" I told her. \"Remind me not to grab you again.\"\n\n\"But I want you to grab me,\" she almost whined. \"And I want you to kiss me, and everything else. I don't want my problems to fuck things up, but they already are.\"\n\n\"No, they're not,\" I told her. \"When my face gets back to normal, I'll show you.\" She looked away like she didn't believe me, but she came over and snuggled against me all the same. Kate joined in on the other side. We sat like that for I don't know how long, until I heard the Jeep horn up in the drive.\n\n\"That'll be the guys,\" Kate told me. \"Picking us up to go back. You want I should invite them down for a drink?\"\n\n\"Whatever you two want,\" I told her. \"Like I said, you're driving this bus.\"\n\n\"I'll go get them,\" Kate decided and left to go up to the house. She came back with Steve and Tom trailing behind her. As she walked into the firelight, I suddenly realized she had my blood on the front of her dress. I was damned sure the guys had seen it, too. I was hoping I wasn't going to get put in the hospital.\n\n\"So I hear you took one for the team,\" Steve said as he approached where I was sitting with Marsha. \"Shit, mate, you look fucked up!\" Marsha turned her head into my shoulder again and I was pretty sure it was a sob I felt.\n\n\"I've been worse, Steve,\" I told him. \"And it's nobody's fault. Or rather, she won't let it be mine and I won't let it be hers. She got upset, I tried to kiss her, I paid for it. I'll know better in the future. She's kinda paying for it, too, so you might want to cut her some slack.\"\n\nTom walked over and squatted down next to Marsha.\n\n\"Hey,\" he said gently, putting his arm softly across her shoulders. \"We need to get home. Whatever you're feeling, I don't think you did the damage you think you did. Let's just make sure Mark has what he needs and come back to help him tomorrow, okay?\" She took a deep breath and let out a huge sigh.\n\n\"C'mon, Marsha, go with them,\" I told her. \"They'll get you home okay and I'll be fine. We can all get back together tomorrow, okay?\" She started to get up, then threw me a twist by pushing against me so I slipped away from the log, onto my back. Then she slipped off her panties and sat down, straddling me. She leaned down and carefully kissed me, trying to avoid the bruising. Not that easy to do.\n\nShe sat up and handed me the panties. \"Kate isn't the only one that gets to leave you a souvenir,\" she told me. I hoped she was joking. \"If the bleeding starts up again, you can use those. I'm pretty sure hers are soaked.\" I looked over to where they were lying on the log and I had to agree.\n\n\"Jesus, girl!\" Steve muttered in awe as he picked them up. \"Is this all his?\"\n\n\"Yeah,\" she turned to look at him and she was pretty irritated. \"Now give it a rest!\" He didn't say anything. He just dropped the panties back on the log and held his hands out in a sort of surrender gesture.\n\nKate and Tom got Marsha up and moving, and Steve helped me stand. \"Anything you need, mate?\" he asked.\n\n\"Just aspirin, alcohol and more ice,\" I grimaced. \"It's all up at the house. I'll be okay.\" He took me at my word and we went on up after the others. I stayed up on the porch while the four of them headed down towards their car.\n\nMarsha paused for a moment before she got in and looked back up to me. I wasn't sure what her expression meant, but I wanted to find out, because there was too much sadness in it, whatever she was feeling. But then she turned and got in the car and they drove off, headed home. I went inside and got the aspirin, alcohol and ice, sitting in the living room and looking out the picture window as I slowly wound down to sleep.\n\n* * * * *\n\n[Tuesday 6/29]\n\nIt wasn't the Terneys that showed up first. It was my brother.\n\n\"What the fuck happened to you?\" he asked. He and his buddy Jim had stopped by to see if I'd scored the wine for him.\n\n\"I had an accident,\" I told him.\n\n\"With a tree?\" he asked. \"Unbelievable...\"\n\n\"No,\" I told him, \"with a young lady quite capable of defending herself. But it was an accident. Don't sweat it. I've got three bottles for you. They're in the fridge.\"\n\n\"Don't get up,\" he told me. \"I'll get them. Out of curiosity, which one corrected your erring ways?\"\n\n\"Don't worry about it,\" I told him. \"Get your wine and head out. The guys are coming down today to help me with some of the maintenance shit. You probably want to be gone before they get here.\"\n\n\"The guys? I thought you said two sisters. What are ya doing? Switch hitting?\"\n\n\"The girls' older brothers, Matt,\" I told him, \"and the girls.\"\n\n\"C'mon, man, let's bail,\" Jim told Matt. \"We don't want to get roped into helping. We're supposed to meet everybody at the Yacht Club in half an hour.\"\n\nMatt decided there was wisdom in his buddy's words and the two of them left. I took a look in the mirror and decided he was right. I looked like I'd smashed into a tree. It wasn't hurting nearly as bad as last night and the swelling was down, but the bruising looked worse. I tried putting some aloe on it, although I didn't really see any difference. I was contemplating just how ugly I looked when I heard the Jeep in the drive. Heaving a sigh, I went out to greet them.\n\nI was a little surprised to find Steve and Tom there, but not the girls. When I went down to meet them, Tom explained that Marsha and Kate were having a \"relationship summit\" with their parents, but since they weren't involved, they thought they'd come on down and get started.\n\n\"They're having a what?\" I didn't get it.\n\n\"They're talking about you, mate,\" Steve told me.\n\n\"Me? What did I do?\" I couldn't figure how kissing Marsha and getting my ass kicked for it could cause a family crisis.\n\n\"It isn't what you did,\" Steve answered.\n\n\"It's what Tim Jenkins and Bob Connelly did,\" Tom added.\n\n\"Who?\"\n\n\"The two rapists we put in the hospital,\" Steve answered.\n\n\"Look, guys...\" I almost pleaded. \"I'm not stupid. But you're talking circles around me. What the fuck is going on? In plain American.\"\n\n\"Look,\" Steve told me, \"the girls have got it bad for you and they're scared shitless that Marsha's knee-jerk reaction just fucked up any possibility of have a 'normal' relationship with you, and their angst was a major bummer at breakfast, so Mom and Dad are talking them off the ledge.\"\n\n\"Marsha didn't fuck anything up,\" I protested. \"I grabbed her and kissed her and got nailed for it. I pretty much deserved it. And I don't give a rodent's rear-end about past shit. They're beautiful in my eyes... goddesses... I just need somebody to tell me what the fuck to do. I don't want to set off some emotional landmine just because I don't know what the fuck I'm doing.\"\n\n\"We know that,\" Tom told me. \"They don't. So let Mom and Dad have a crack at them while we get started on this stuff. You want to show us the ladders and paint and shit?\"\n\n\"Uh, yeah... sure.\" I took them around the side of the house where I had everything laid out. They checked it out, pronounced themselves good to go and sent me off to start scrubbing the porch.\n\nIt was around noon when we broke for lunch. They'd gotten two sides done, I'd gotten the porch scrubbed down with the hydrochloric acid and then rinsed down with water. I had to wait for it to dry before I could put down any paint, and they needed me out of the way to get that side of the house.\n\nI made some cold cuts and cheese sandwiches, we opened a few beers, and we sat in the house, talking. I pointed out that I was going to need to fog again or the flying bloodsuckers would descend on us in the afternoon. And that led me to remember that the screen house needed to be put up. And so forth.\n\nThey tried to explain the machinations of a young woman's mind and I tried to follow along. What it came down do was, just me keep being me and not try to second guess anything about the girls. I asked them if I was crazy to want them both and they told me I'd be crazy not to. I decided to be bold and ask...\n\n\"So, in our pre-knee conversation,\" I put out there, \"they told me basically that you guys had a special and intimate relationship. Actually, your whole family was special, and they intimated that their loss of virginal status was because of you guys... and please don't hit me, I'm sore enough already.\"\n\n\"You're not the only one that loves them, Mark,\" Steve said quietly. \"All four of us ex-virgins changed our status with each other. Nobody got hurt, everybody got loved and we're rock solid with it. Mom and Dad are whatever that one is that isn't Liberal and isn't Conservative... the one that's both.\"\n\n\"Libertarian?\" I suggested.\n\n\"Yeah, that one,\" he nodded. \"They believe strongly in personal freedom and personal responsibility. Doesn't make 'em very popular with the neighbors, so they pretty much keep it to themselves. The point is, we've got public faces and private faces and the private faces are nobody's business but ours. Except you're getting a glimpse because somehow you're special. Definitely with the girls, and I think with Mom and Dad. So far, I don't have any problem with you.\"\n\n\"You just need to remember, discretion is the better part of valor,\" Tom added. \"What's said or done here, stays here.\"\n\n\"Gotcha loud and clear,\" I told them. \"Did the girls happen to tell you how we met?\"\n\n\"In great detail,\" Steve grinned. \"Guess you made a big impression on them!\"\n\n\"Oy!...\" I buried my face in my hands.\n\n\"C'mon, dude,\" Steve told me. \"Let's finish this up. We'll get the front gutters while you put up the screen house and fog. When we move to the garage side, you can paint the porch. Voila! Most of your work is done.\"\n\n\"That sounds better each time I hear it,\" I smiled. \"Let's do it.\"\n\n* * * * *\n\nIt was late afternoon when we finished up. Having the guys' help cut the time way down. We were cleaning up when I heard the phone ring -- the two long, two short that was our extension on the party line. I left the guys to finish up and went in to answer it.\n\n\"Mark, it's Don,\" Mr. Terney told me when we'd cleared the line of eavesdroppers. \"When you guys get to a stopping point, I'd like you to come on up here for dinner and a swim, or whatever. I'll be blunt. There's some clearing the air that needs to happen, and besides, Natalie wants to see your buff bod again. And to ease your mind, in case it makes a difference to you, clothed is fine.\"\n\n\"I guess I'm okay with that, Mr. Terney,\" I told him. \"We're almost done here, anyway. You can guess I'm pretty nervous about seeing the girls again.\"\n\n\"Marsha promises not to hit you again,\" he told me and he sounded serious.\n\n\"Mr. Terney...\" I started.\n\n\"Don,\" he told me.\n\n\"Okay, Don... I'd let her punch me in the face every damned day if that's what it took to get the shit out of her system and maybe get some healing in there. I don't want her feeling guilty at all. I just don't know what to do. I know she's got to work it out herself. I know Kate's got to have similar issues. She just doesn't show them. So if you've got any advice on how to handle young women's emotional trauma, I'm all ears. But scared shitless or not, I can be there for dinner.\"\n\n\"You're a good man, Mark,\" he told me. \"We can talk later. See you for dinner.\"\n\n\"Yes, sir,\" I told him. \"See you for dinner. Bye.\"\n\nWe hung up and I went and told the guys about the dinner invite. They decided to head on back as soon as we had everything cleaned up and put away. I decided to get a shower and clean clothes, and meet them up at their place. I was getting dressed when I got a good look at myself in the mirror.\n\nBluntly, I looked like shit. And that bothered me. In a move that was pure desperation, I raided my mother's makeup kit which she kept in the master bedroom. Easier not to have to lug a bunch of stuff back and forth, I guess. I rifled it, looking for something to hide the bruising. I had no idea what I was looking for, so I just tried a little bit of everything. I also didn't know how to wash the shit off when it made me look like a psychotic circus clown. I was fucked.\n\nFinally, I gave up in disgust. Maybe Mrs. Terney would know how to get the paint off. I was going to be late if I didn't get my shit together and drive up there, so I just wiped off what I could, grabbed my keys and left.\n\n* * * * *\n\n\"What the hell did you do to your face???\"\n\nThat was Kate's reaction when she saw me pull the Corvair in and park.\n\n\"Trying out your psycho-circus clown persona?\" Tom was hot on her heels.\n\n\"Gimme a break,\" I told them as I exited the car. \"I tried covering up the bruising and blew it. So sue me. I just didn't want to be a constant reminder of a couple of well-placed knee strikes.\"\n\n\"Well, you better come with me,\" Kate told me. \"Let's see if we can get you cleaned up before Marsha sees you.\"\n\n\"Too late.\" It was Marsha, coming off the porch with her Mom. \"Let me guess... you've never taken a theater class. God, you're a mess. A well intentioned mess, but still... a mess.\"\n\n\"Thanks,\" I sort of mumbled. You know, sex and nudity aren't the only embarrassing things in the world.\n\n\"Mark, I can get you squared away in a jiffy,\" Missus told me. \"Come on with me and if you really want the bruising covered up for tonight, I think I can help you. Or you can just flaunt your battle scars.\"\n\n\"Yeah...\" I looked over to her. \"Except I lost.\" That got a chuckle out of everybody but Marsha.\n\n\"Come on, Mark,\" Missus gestured to me. I started to follow her and it suddenly registered, everybody was wearing clothes. Missus looked as awesome in clothes as her daughters did. I shook my head to try to clear such blasphemous ideas, but I started to get hard, even as I walked. It didn't matter which way I turned, there were three of them that could get to me just by existing.\n\nEverybody else started to troop along behind us, but she nixed that.\n\n\"Go help Steve and your Dad,\" she told them. \"I've got this. Give me ten minutes and we'll be ready for dinner. Make sure we're not dining with the mosquitoes.\" With a little grumbling, Tom, Marsha and Kate peeled off and headed a different direction. Missus took me back to her bedroom and its private bath. She sat me on the toilet and started digging out stuff. Whatever the paint stripper was that she used on my face, everything came off alright... and several layers of skin with it.",
        "\"Okay, you're clean,\" she finally told me. \"Do you want me to try to hide the bruising?\"\n\nI thought about it for a minute. Then I summoned up the testicular fortitude.\n\n\"What do you think?\" I asked. \"If you were the young woman who had done this to me and you had to sit across from me at dinner, would you want to see an ugly, bruised wreck? Or a guy with makeup on to try to hide the fact that he was an ugly, bruised wreck?\"\n\n\"That's not a fair question, Mark,\" she told me.\n\n\"Why not?\" I asked. \"You're a woman...\"\n\n\"Thank you for noticing,\" she smiled. \"It's not fair because I'm not in love with you. I find you very attractive, and if I got the chance to boff your brains out, I would. But the guilty hook isn't there. Either choice would be fine with me. How're the testicles, by the way? I understand she walloped you pretty good.\"\n\n\"Still a little tender, but not bad,\" I told her honestly, wondering why she cared about the state of my balls and wondering about her comment about not loving me and its implications. \"I'll get better. And I don't want Marsha thinking I'm suffering or something. It's bad enough she thinks she's responsible for my fuck-up, when all she was doing was reacting to protect herself.\"\n\n\"She may be coming around to see that,\" Missus told me. \"Let's forgo the make-up and just go join the others. You know, I've seen worse in my life... a lot worse. I think you'll be fine.\"\n\nShe leaned over to finish wiping some of the goopy stuff off from behind my ears and the back of my neck, and in so doing, put her tits in my face. As in, buried in her cleavage. That fanned the fire down below and I started reacting.\n\nI will swear on all that is holy that some devil made me do it. I just couldn't keep my tongue in my mouth. She was rubbing her tits on my face, for Christ's sake! So I licked her.\n\nShe froze for a moment, then pushed her tits even farther into my face, encouraging me to lick more. So I did. I was rock hard by the time she stood up and straightened her dress.\n\n\"My, my...\" she smiled. \"An adventurous young man! And naughty... we'll have to discuss this in more detail... later.\"\n\nThen she reached down and squeezed my straining hard-on through my shorts. \"And this...\"\n\nShe took a deep breath, let it out and stood up, moving towards the door. \"Let's go get some dinner.\"\n\nI wasn't about to argue. I followed along, trying to hide the wood.\n\nIt turned out that they had a really neat way of dining outdoors without having to share it with the mosquitoes. A portion of their porch had an extendable awning with mosquito netting that hung down to make the walls. Inside was a picnic table big enough for eight, with bench seats, and you could enter and exit it from the house. Add some citronella candles and so forth, and you had a comfy place to eat or just laze about without becoming a moveable feast for the little bloodsuckers.\n\nI don't know if the seating was planned or just happened. Missus, Marsha, Steve and Tom were on one side, while Mister, Kate and I were on the other. Another odd thing that I wasn't expecting was saying Grace before chowing down. When Mister thanked the Good Lord for sharing his beautiful Creation and bountiful resources with his Children, for granting them health and happiness and good fellowship, and for allowing them to love one another, I was impressed. Mostly because I felt a lot of the same way.\n\nI wasn't a particularly religious guy, but being alone with the sun and sand and trees and water... I did feel a connection with the Earth, and I was feeling the same pull towards this family, and in such a short period of time. I'd say it was weird, but really, it was just natural. Something I think they've lost in the cities.\n\nAnyway, the meal was excellent. They'd cooked up steaks, with baked potatoes, a three-bean casserole, some Jell-o and various drinks. I had to pace myself so I didn't look like a starving boor. Dinner conversation revolved around what kinds of things we liked to do on the Peninsula and as expected, since there was a lot to do, favorites were all over the map. Literally.\n\nI think I surprised them when I mentioned liking to dive the wrecks off Porte des Morts and off of Cana Island. I explained that yes, I had a PADI open-water cert. Apparently, they'd had a home over by Ephriam, but didn't like the growing touristy invasion, so they'd sold it and bought the Morrisons' place. We all agreed that waterskiing was better over on the Bay or on Clark's Lake or Kangaroo Lake, and damn near impossible on Lake Michigan. We went on like that, covering a whole lot of things to do, until Missus stopped conversation cold.\n\n\"Then there's always sex,\" she observed. Dead silence. \"Oh, come on...\" she smiled. \"Midnight on Moonlight Bay... Eagle Tower and hope the rangers don't catch you... a quiet night on a private beach with a small bonfire and a bottle of wine...\"\n\nI wasn't the only one looking very uncomfortable. It was the girls that got it together first, though.\n\n\"Mom...\" Marsha warned in a low tone. \"I thought sex was off limits.\"\n\n\"Why?\" her Mom asked. \"We all like it, and Mark is obviously a good-looking young man who knows how to treat you right...\" I could see the burn starting up both Marsha's and Kate's necks. But Missus, of course, had to plunge right ahead.\n\n\"Of course, if you two girls are tired of him, I don't mind taking your castoffs...\"\n\n\"MOM!!!\" Both girls yelled at her at the same time.\n\n\"Well...\" she smiled. \"I'm glad to see you're both still invested.\"\n\nBoth girls were well flushed with embarrassment and I was on my way to joining them. Apparently, the reference to invested must have been to something in the parental powwow, but for me, the idea that it was open season on the fact that I was having sex with both of them was bothering me. Especially since this discussion was going on in front of both their parents and their brothers.\n\n\"Nat, I think you should give the kids a break,\" Mister stepped in. \"Mark's our guest and the subject looks like it's making him uncomfortable. I don't think he's accepted the fact that we are all fine with him having an intimate relationship with our daughters.\"\n\n\"I suppose you're right...\" Missus sighed. Or, Natalie, rather. She'd said she wanted to be called Natalie. \"So let's switch subjects... what are you kids going to be doing tonight?\"\n\n\"Mom!\" It was both girls, again.\n\n\"Oops?\" she smiled. \"Okay, then what about tomorrow?\" I decided to jump in before civil war broke out between the girls and their mother.\n\n\"Well, since Steve and Tom did such a fantastic job helping me today, my next chore is clearing some of the dead wood, cutting and splitting it, and stacking it to dry,\" I told them. \"Usually I would enlist my brother and his friend to help. Matt, that's my younger brother, is up visiting his buddy Jim. He'll wish he could wiggle out of it, but it's the price he pays for using our place. I'm ahead of schedule, so I could take a lazy day tomorrow, though.\"\n\n\"Dude,\" Tom spoke up with a smile, \"we could help you with the logging, let your brother off the hook and earn his undying gratitude.\"\n\n\"We could, too!\" Kate broke in.\n\n\"He already wants to meet you two,\" I turned to her. \"You two being your usual, vivacious selves will give him a heart attack. Or at least an embarrassing accident in his jeans. Not sure that's such a good idea.\"\n\n\"Vivacious. I like that,\" Missus interjected.\n\n\"How old is he?\" Kate asked, undeterred.\n\n\"Eighteen, like you,\" I told her. \"Also just graduated high school. He's headed for Northern in the Fall.\"\n\nKate sat there giving me a raised eyebrow, like well??? I just sighed and caved.\n\n\"Okay, you can meet him.\"\n\n\"Mark, do you use your Jeep to pull the logs out?\" Mister asked, derailing me for a moment.\n\n\"Yes, sir. Fastest, easiest way to do it. Why?\"\n\n\"I'm being a bit of a prima donna, Mark, but I'd rather not get mine scratched up. Would you be interested in doing me a favor?\"\n\n\"If you mean, would I be interested in coming up here and helping pull out dead wood for you, sir, the answer is of course!\"\n\n\"Maybe the Magnificent Seven could do a turn at yours and a turn at mine,\" he suggested. To my blank look, he added, \"You, Steve, Tom, Marsha, Kate, your brother and his friend. Seven. The Magnificent Seven.\" I finally got what he was saying.\n\n\"Yes, sir,\" I smiled. \"I can do that. I'll have to bribe my brother, but I know how to do that.\"\n\n\"So do we,\" Marsha told me and brought me to a screeching halt. I hadn't considered the possibility of both of them doing Matt. He would never be the same. And, I suddenly realized, I would be jealous. That was not good. The jealousy, I mean. Thinking someone else has what's rightfully yours is a bad, bad way to live your life. Envy, I could cope with. Jealousy? Not good at all.\n\nMy thoughts must have shown on my face because everyone at the table got a Knowing Look. I sat hard on my feelings and told Marsha, \"then between us, we will certainly be successful.\" I decided taking the conversation in another direction would be a good idea. \"So, when would you like it done, sir?\" I asked Mister.\n\n\"Mark, please don't keep calling me sir,\" Mister asked me. \"I'm Don, or Mr. Terney if you absolutely have to. And whenever it's convenient for you and your crew. We're still getting settled in here, so I don't know yet how we're fixed for firewood and so forth.\"\n\n\"Okay, then tomorrow I'll get hold of my brother and we'll set something up. We can organize playtime around that. I've been thinking in terms of day trips, like a picnic at Cave Point, or a day over at Peninsula State Park. Touristy, I know, but they're still fun. And there's the Egg Harbor fireworks.\"\n\n\"Would you like us old fogeys to stay out of your way?\" Mister -- Don -- asked and I had to think it over.\n\n\"If it isn't an insult,\" I told him. \"I like hanging around people closer to my own age. Not that I don't love your taste in motor vehicles...\"\n\n\"Done,\" he told me. \"We have friends to visit, anyways. Maybe we can get together for the Fourth or something.\"\n\nThe conversation turned to Steve, Tom, Marsha, Kate and I hashing out a work-a-day/play-a-day schedule that would still get everything done that I needed, plus time for whatever Mr. Terney needed. It wasn't so much the \"one woman, nine months; nine women, one month\" situation because in our case, division of labor really did get more done in less time.\n\nThe subject of the evening's activities came up and both Steve and Tom indicated they were going back to the Inn to watch the game. That's when the girls floored me. Again.\n\n\"I'd like to go back to Mark's tonight,\" Marsha told her parents. In front of me. \"As in, stay overnight.\"\n\n\"Me, too,\" Kate added and I started looking for some crack in the floorboards to sink through.\n\n\"That's fine,\" Missus told them and I about dropped my jaw.\n\n\"Sure,\" Mister added. \"Just call if there are any problems. We'll be home tonight. That's presuming, of course, that it's okay with Mark.\" Both girls turned to look at me with very serious Don't Fuck This Up expressions.\n\n\"Uh, sure...\" I sort of stammered. \"If that's what they want to do, it's okay with me.\" I had no idea what was going to happen... I was still trying to deal with the walking on eggshells routine.\n\nDinner wrapped up, the guys took Mister's Jeep to town and I took the girls back in my Corvair.\n\n\"Do. Not. Freak. Out.\" was the first thing out of Marsha's mouth when we pulled away from their house.\n\n\"Um... okay?\"\n\n\"We've got some serious stuff to talk about, but we don't want you all 'walking on eggshells' and stuff,\" she went on.\n\n\"Um... okay?\" I wasn't sure how I was going to do that, but I'd sure as hell try.\n\n\"The rest can wait until we've had a glass of wine or three,\" she finished up.\n\n\"Um... okay?\" I was getting a bit repetitive.\n\n\"I'd ask if you can say anything other than 'okay',\" Marsha told me, \"but in this case, 'okay' is just fine.\"\n\nI kept my mouth shut the rest of the drive back to mine. And all the way through getting settled in the living room with a nice fire, a bottle of wine and three glasses.\n\n\"This bearskin is really soft,\" Kate commented as we spread around it in front of the fire.\n\n\"Yeah, it is,\" I agreed, \"and you just reminded me that I probably want to move it out of the way. Hot embers and beverage spills are two things I don't want to have to explain to my Dad.\" They helped me roll it up and stash it along the wall farthest from the fireplace. I decided I would make a preemptive strike over the eggshells problem while we were doing it.\n\n\"Look...\" I said as we sat back down.\n\n\"Mark...\" Marsha said right over me.\n\n\"You know...\" Kate also announced. Three of us. In unison.\n\nWe sat there looking at each other for a few moments before something, I have no idea what, struck me as funny and I laughed. And that broke the wall and they laughed.\n\n\"Mark,\" Marsha started again before I could say anything, \"just shut up and listen for a minute.\"\n\n\"You do that a lot, you know,\" I told her. \"Telling me to shut up.\"\n\n\"That's because you're the only guy that listens,\" she retorted and though I thought she was trying to be funny, I had a feeling there was some reality behind it.\n\n\"Okay,\" I told her, open palms out, \"shutting up.\" When I did actually shut up, she took a moment to compose herself.\n\n\"Here's my problem,\" she started in. \"I'm a control freak. Or, I am now. Kate's a lot more laid back. What I want is a fun, relaxed... yeah, caring... relationship with a guy who doesn't treat me like a freak because some guy stuck his dick in me without my permission. Kate's kind of the same way, but she can speak for herself. By the way, I wasn't a virgin when he did it, which is part of how it happened. But in your case, when I told you and you tensed up like oh, my God, what do I do about the damaged chick? I pretty much lost it. I could feel it in you. And true to my usual form, I got it all wrong. Or at least, that's what my parents think and I'm starting to believe them.\"\n\nI was trying very hard to concentrate on her words... to really hear her... \"Got it wrong in what way?\" I asked.\n\n\"I guessed you were freaking out because I was damaged goods, some kind of psychotic bitch that was going to cut it off if you crossed the wrong line.\"\n\n\"Really?\" I asked, somewhat astounded. Then I remembered Freshman year at college. \"Um... remind me to tell you sometime about the first of only two virgins I've ever had, and her umbrella.\" Marsha gave me the oddest look, but didn't let it stop her.\n\n\"So what I've been told,\" she went on, \"is that there are actually guys in the world who give a shit about women for more than sex and when they come across a... um... Dad called it an 'ethical travesty'... anyway, the guys actually do care about not offending or hurting the woman who's been the victim. But they've never been taught how to deal with it. So they go all Eggshells.\"\n\n\"And that,\" Kate put in softly, \"is what Mom and Dad think you are... a guy who actually gives a shit.\"\n\n\"Well, they've got that right!\" I sort of spluttered. \"And no, I've never been taught how to handle the aftermath of an asshole committing a violation of a woman's body, except to pulverize the fucker. You're lucky it was your brothers that put him in hospital. Me, it would have been the fucking morgue!\" I was more than a little incensed and my own self control was slipping.\n\nMarsha moved away from me a little bit. \"Mark, I don't need your anger,\" she told me quietly.\n\n\"Well what do you need?\" I answered. \"Please, enlighten me. Because this poor excuse for a male hasn't got a clue!\" Marsha heaved a sigh, but Kate stepped in.\n\n\"You remember when we first met, and you were embarrassed but trying to cope with it?\" she asked. \"And you used humor as a sort of weapon, or tool, against the embarrassment? You had us amused, and not like a comedian, but just an amiableness... shit, what's the word I want?... An affability... an easygoing, fun kind of banter. And when it came to sex, you let us do what we wanted but made sure to take care of us?\"\n\nI nodded. It was burned in my memory like a brand.\n\n\"Well, that vibe is what we're talking about,\" she explained. \"It was real and heartfelt, and not faked or calculated. That's what made you so special to us. You want to talk about the L-word? Marsha and I spent the whole ride home cautioning each other not to fall in love with you. You were too fucking perfect. You still are. Dad told us about your comment about letting Marsha hit you in the face every day if it would fix the hurt...\"\n\n\"So what I want, Mark,\" Marsha spoke up again, \"is for you to think of the whole non-consent thing as just a really bad date and let it go at that. I know that's a lot, but that's what I want. And I want to feel your wonderful cock filling me up. And by the way... we were both so serious that when we got back from Memorial Day, we went with Mom to her OB-GYN and got on the Pill. After having to explain to her why we wanted to, of course.\"\n\n\"So in a week or so, we're safe,\" Kate put in.\n\n\"Although condoms are still a really good idea,\" I pointed out and they agreed.\n\n\"Although we are very careful to wash our toys before and after,\" Marsha smiled. Actually smiled. Kate giggled.\n\n\"What's that about?\" I asked.\n\n\"Oh, nothing,\" she told me. \"Just... last Spring Break, Mom came home early one day. We usually do the dishes when we're home and she decided to be nice and help us out. And was surprised as hell to find the dishwasher full of our toys.\" I laughed. I couldn't help it, the image was just too good.\n\n\"Where do you get your toys?\" I asked. \"I have a hell of a time finding any place that carries that stuff.\"\n\n\"Steve knows a place near where he works,\" Marsha told me. \"He brings home interesting stuff for us.\"\n\n\"Remind me to talk to the man,\" I smiled.\n\n\"So,\" Marsha brought us back on topic, \"are you going to get all freaky about damaged goods?\" I let out a long sigh.\n\n\"No,\" I told her. \"I don't see you as damaged goods. I can't. I see you as a couple of goddesses who deserve to be treated with adoration. But if I cross some line, or I get near it, I'd appreciate a warning. One that doesn't involve testicles and faces.\" They both looked a little chagrined, but nodded. \"In which case, this soldier's nearly dead. Time for another bottle.\"\n\n\"How about something a little different?\" Kate asked, moving up against me.\n\n\"Yeah, what she said,\" Marsha echoed moving in to my other side. I decided to get a little bold.\n\n\"Seems a little warm in here,\" I commented as I stood up and started stripping. I don't know what it cost my eternal soul in exchange for the chutzpah to override my normal embarrassment, but the grins I got from the two of them were worth it. They jumped up and started stripping, too.\n\nI was already getting hard just watching the clothes come off. That's when I realized the condoms were in my duffel in the bedroom. I excused myself and went to retrieve them. When I walked back in with the box of a dozen, Marsha gave me the Raised Eyebrow.\n\n\"Cocky, much?\" she asked, looking pointedly at the box in my hand. I could see she was fighting a smile, but Kate got me laughing when she reached in her purse (more like a satchel) and pulled out three more boxes.\n\n\"Shouldn't I be?\" I asked, grinning. I moved back over between them and they descended on me like the Mongol Hordes descending on the Caucasus. Id est, I was swarmed and overwhelmed, and not gently, either. Kate was straddling me with her tits pushing into my chest while she fired up a ferocious make-out session. Marsha, meanwhile, had my very erect self buried in her throat while her nails were driving my balls up a wall. These two were owning me and I was just lying there, taking it.",
        "Okay, well... not exactly just lying there.\n\nKate's ass was getting mauled as I held her to me, trading tongue-lashings, sliding my fingers between her already soaking thighs. I couldn't do much about Marsha except thrust back into her, challenging her ability to take me deep. I'm lucky enough to have above average equipment and I felt pretty smug about making Marsha stretch for it, in a manner of speaking. Don't get me wrong... she was damned good at what she did and she was about to rip a cum out of me unless I did something to stop her.\n\nIn fact, what stopped my impending orgasm was the feeling of her backing off my cock and sliding a condom onto it. She was definitely prepping the decks for action, but I wasn't sure whose. Kate answered that one for me. She slid back and sat down as her sister guided me into her.\n\nGod, she felt wonderful... even through the condom, her heat and firm sheathing were exciting as hell. She started a slow rocking on me, pushing up off my chest, making room for Marsha to slide up and start making out with me. She owned me... they both did... I was going to cum pretty soon and I told them that.\n\n\"Then go ahead,\" Marsha told me in a low growl. \"There's plenty more where that's gonna cum from...\"\n\nReally weird, but it was Marsha's tone of voice -- the raw, fierce, animal -- that took me over the edge.\n\n\"Oh, fuck! Cumming!\" I moaned as I started to spend and Kate was right behind me with her \"Oh, fuck, yeah! Yes! Yes! Yes!... Cumming! Oh! Fuck! Cumming!!!\" I could feel her clamping down on me as I pulsed into her. I was cumming so hard I started getting lightheaded, and I felt Marsha kissing me while she told me, \"no passing out, Mark... you haven't done me, yet.\"\n\nWhat is my life, but to serve? I thought. I also thought I was being clever. To serve? To service? It was closer to reality than I thought. Kate eased off me, pinching the condom so it came out, also.\n\n\"Jesus!\" There was definitely awe in her voice.\n\nI struggled up on my elbows to see what she was Jesus-ing about. It was the condom. Marsha obviously knew how to put one on. She had left a healthy amount of leeway and Kate's Jesus! was because it was entirely filled up, plus about halfway down my cock, with so much cum you couldn't see any dick. I'd never thought about how much I actually came.\n\n\"I take it that's a lot?\" I asked and got looks of incredulity from both of them.\n\n\"I thought it was my imagination last time,\" Kate told me. \"I figured no way does a guy cum that much. But really?...\"\n\n\"Okay,\" Marsha took over. \"Let's get this one taken care of and you ready for your next Welcome Home...\"\n\n\"Welcome home?\" So I can be a little slow on the uptake.\n\n\"Yeah,\" she smiled as she peeled the condom off and tied it shut. \"Home... like, that's where you belong. Like, I want your hot rod parked in my garage.\"\n\n\"That's a little corny, isn't it?\" I asked as she wiped my shrinking member off with a cool washcloth.\n\n\"Blame Steve,\" she told me. \"I got it from him.\"\n\n\"Yeah, I meant to ask about that,\" I told her and I could feel her almost imperceptively stiffen. \"If he's five or six years older than you and he graduated at eighteen a non-virgin, how old...\" Kate was the one that put her hand over my mouth.\n\n\"Let's not go there, stud,\" she told me. \"I'll tell you this once and then you're going to forget it. Mom took care of the boys when they were ready, then the guys took care of us when we were. All four of us were at least fourteen. It was consensual and loving and very private. You're the first outside of family to know, and now you're going to forget it.\"\n\n\"Yes, ma'am,\" I nodded. \"Forget what? I haven't a clue what you're talking about.\"\n\n\"Smart man,\" Marsha muttered as she finished cleaning me and lay back down beside me. Kate lay down on the other side.\n\n\"Now we see what kind of recuperative powers you have,\" Marsha smiled, idly fondling my cock and balls. After a cum like that, it was going to take a little while, anyway. I mean, it's not like when I was thirteen or anything.\n\n\"As long as we are waiting, Mistress,\" I told her -- and got a rather firm squeeze in return -- \"what about a picnic at Cave Point tomorrow? I'll call Matt in the morning and schedule a work day for hauling out the dead wood and then we can drive down there.\"\n\n\"Bonfire on the beach afterwards?\" she asked.\n\n\"Of course,\" I smiled. \"We could even grill some of the stuff you guys brought down.\"\n\n\"You'd better invite Mom and Dad, then,\" Kate told me. \"They'd be ticked to miss a good grilling where they didn't have to clean up.\" I had to chuckle at that one. I could identify.\n\nWe kicked around ideas for things to do -- and not do -- at the county park until Marsha noticed what I'd been feeling. I was coming back up for Round 2. She decided to assist the process by going down on me. Marsha had the most amazing mouth. The only one in her class was her sister and it was pretty much a tie. It didn't matter. She had me rock solid and ready to fuck in under a minute. And fuck was exactly what she intended, apparently, because as soon as she had me where she wanted me, she slipped on a condom, straddled me and eased me into her. I keep using the word amazing, and I know it gets repetitious, but I just have a hard time coming up with anything else, because that's what she and Kate were -- amazing.\n\nMy life before these two was hardly celibate, but it wasn't anywhere near as intense. While Marsha was slowly rocking me up to another crashing cum, Kate decided it was time for a moustache ride. I'm a quick study and they were more than willing teachers, so it didn't take long for me to get Kate off.\n\nMarsha took longer, but that's probably because she was driving this bus and doing what felt good to her. And what felt good seemed to be a long, languorous build up, because when she finally did go over the edge, it was with a howl I swear they could hear over in Michigan and that firm pulsing that made me feel like she was squeezing me in half like a tube of toothpaste. It was a little distracting, as was Kate, but it wasn't very long before I was cumming up right behind her, pun intended.\n\nAnd if that wasn't enough, I lifted Kate up off my face (mostly so I could breathe) and realized they were leaning into each other above me. I don't know if they were making out or not, but just the thought of it was more than enough. Everything pulled up tight and I got that magic tickle that told me I'd hit the Point of No Return. With my own loud moan, I emptied myself into Marsha for what seemed like forever. She hadn't slowed down and from the sounds and the feelings, she came again when I did.\n\nJust fucking awesome.\n\n* * * * *\n\n[Wednesday 6/30]\n\nThe rest of the night consisted of Rounds 3 and 4, then crashing in front of the fireplace. I hadn't pulled the drapes on the big picture window, so \"dawn's early light\" woke us around 5am. Every bloody muscle in my back and legs hurt. I pried myself loose from between my luscious young lovers and crawled over to the pulls for the drapes, dragging them shut. Much better.\n\nAs long as I was up and the girls weren't, I decided I'd better hit the head, then get some coffee going. A lot of sins can be forgiven if there is fresh hot coffee available upon waking. I was standing at the toilet, dick in hand, when Marsha walked in and took over. I mean, really weird... she slipped in behind me, pushed those wonderful tits into my back, reached around front and took my dick out of my hand. Pretty good aim, too... didn't miss the bowl at all. I think she was enjoying freaking me out.\n\nThat's when I heard the other toilet flush and realized Kate was up, too.\n\n\"When you're done there,\" Marsha told me, kissing my shoulder blades, \"I need the facilities, too.\"\n\n\"Let me finish up and I'll be out of your way in 5 seconds,\" I told her. \"Keep playing with me like that and it's going to be hours.\" She laughed and gave me back my dick and as promised, I finished up and got out of her way -- not forgetting to put the seat down, mind you.\n\n\"Good boy,\" she told me as she sat. I slipped out and ran into Kate trying to figure out where all the pieces and parts of the percolator were. I took over and got the coffee going, then made toast. I really didn't want to be awake, but with them up, it would be a pretty bad host that went back to bed. Unless they went first.\n\n\"Breakfast in bed?\" I offered.\n\n\"Nnn-nnn,\" Kate told me. \"Don't like crumbs in the bed.\" I was pulling out a basket of fresh fruit to go with the toast when she added, \"but if you want to go back to bed for a couple of hours, feel free.\" I chuckled, pointed at the fruit and took her up on her offer. It was maybe fifteen minutes later that my two naked femme fatales rejoined me in front of the fireplace.\n\nThey were very interested in cuddling and I wasn't about to object. I couldn't remember the last time I'd been this happy. I did, however, remember that I had to call my brother. So somewhere around 8:30 or so, I called over to Jim's parents' house, getting his mother. She rousted Matt and when I got his sleepy voice on the line, I laid it out for him. The next day, Thursday, was going to be a work day. Logging at ours and logging at the Terneys'. His compensation would be a couple more bottles of wine and a chance to meet the girls. I'm pretty good at being a merciless tease when I want to be.\n\nAmazingly, he agreed -- for both Jim and himself. We agreed on a 9am start at ours and the Terney's in the afternoon. I added picking up some more wine to my mental checklist before joining the girls for the rest of breakfast and breaking out the picnic supplies. I got a call from Steve around 9:30 asking if we were still going to the park. I told him yes and about the bonfire afterwards, he passed the info on to his parents, and he told me he and Tom would be at mine in about a half hour.\n\nThe net result was, they showed up with Mister's Jeep and a bunch of picnicking stuff as well. The five of us drove down to the Point and enjoyed a wonderful day, climbing the cliffs, exploring the \"sea caves\" where the lake had worn away the limestone bluffs, talking about anything and everything, and not once feeling an overwhelming need to run off into the bushes and screw. I figured I must be getting comfortable with all four of them. Pretty good, considering how horny I usually was.\n\nWe got back to my place around 5pm and lit the bonfire and I started up the grill as well. We called up to the Terneys' and told them we were back and getting ready to start cooking. Fifteen minutes later, the Caddy pulled into our drive and Don and Natalie -- I really had to work on using their first names -- joined us down on the beach. At which point, Marsha blew my mind.\n\nShe walked up to her Mom and gave her a long hug and very intimate kiss, right in front of me.\n\n\"You were right, Mom,\" she told her, and she wasn't trying to hide the conversation from me. \"I laid it out for him and he got it, and we just had the best day ever.\"\n\n\"See?\" Natalie responded. \"Some men actually give a shit.\"\n\nNow, I know that had to be a reference to their \"talk\" and I knew it had to be me they were talking about, but I just didn't get it. I decided to ask Missus about it later. In the meantime, we got the food going and I got busy playing host. Eventually, Mister took me aside.\n\n\"Mark, you've got a nice place here, and it's perfect for clothing optional. I've got two questions.\"\n\n\"Yes, sir?\" I answered. I wasn't sure where he was going with this.\n\n\"One, do you mind if I strip off? There's enough breeze to keep the mosquitoes down but not so chilly as to be uncomfortable. And to be perfectly honest, I really do prefer not wearing clothes.\"\n\n\"Uh... you can do whatever you want, sir,\" I told him. \"I mean, Don. Mi casa es su casa, or whatever it is.\"\n\n\"Which brings up question number two,\" he smiled. \"Are the rest of your family into clothing optional or do we need to cool it when they come up?\"\n\n\"Oh...\" I tried to think of a tactful way to put it. \"Um... my folks are pretty traditional,\" I told him. \"Nudity isn't an embarrassing thing, but it is considered bad taste in mixed company. Plus, my sister is only sixteen and confused. She can't decide if she has body image problems or likes being a flirt. It usually depends on who's around. And my youngest brother is thirteen and pretty embarrassed about his hormonal reactions most of the time. So I guess I'd say, treat them as conservative?\"\n\n\"What about your brother Matt?\" he asked.\n\n\"He's borderline,\" I told him. \"When it's a bunch of kids just larking, then skinny dipping and like that is fine. Put adults in the mix and he goes conservative. In fact, so do I. If there's anyone here but me, it's usually clothes on, all the time. Plus my aunt and cousins are going to be coming up, too. So I'd say, when everyone else shows up, the clothes stay on.\"\n\n\"Okay, thanks,\" he smiled. \"I can work in that world. I'm looking forward to meeting your parents.\"\n\nThey'll probably be fine, I thought. He'll win Dad over with that Indian right away. And I suspect Mom and Natalie will be fine. What I told him was, \"well, I'll warn you when they show up.\"\n\n\"Mark!\" Marsha called to me. When I looked over, she went on, \"are we going to be doing any corn on the cob? I don't see any here.\"\n\n\"I probably left it up at the house,\" I told her and headed that way. She fell in beside me and took my arm. The thrill always surprised me... I felt like I was floating on a cloud. I really had it bad for her.\n\nWe got to the house and rummaged in the fridge and pulled out seven ears and some tin foil. She stopped me as we started back down.\n\n\"While I have a moment away from everybody else, I want to tell you something,\" she told me, very seriously. I just met her gaze and waited.\n\n\"I'm confused about how I feel, and you're the first guy that's tripped my triggers on such a heavy emotional level,\" she told me. \"I've been going over what's going on in my head almost constantly and I think I've come to some understandings. I'm going to say this, because I feel I need to, but you don't have to respond and it doesn't have to be a big thing, okay?\"\n\n\"Okay...\" I drawled, waiting for the other shoe to drop.\n\n\"I think I love you.\" You could have knocked me over with a feather. To hear those words... words I desperately wanted to hear from her and her mean them... I was dumbstruck. I had forty million emotions bouncing around inside me and the self-preservation instinct to only let the smile show. I was overjoyed, fearful, excited, unsure and cautious... I didn't want to blow this. So I did what I thought was right. I took her in a hug.\n\n\"Marsha, I think I love you, too,\" I told her. \"You and your sister are two amazing women and I am damned glad you came into my life, no matter what happens. And I've got all the bullshit fear and excitement and everything else running around in me. All I want is for you to be happy.\" Then I leaned down to kiss her.\n\nIt wasn't lustful. It was soft and gentle and caring, and she returned the same. It was... romantic. We kissed with subdued passion for maybe a minute, maybe two, before I broke it and looked her in the eyes.\n\n\"Do you know the Lovin' Spoonful?\" I asked.\n\n\"Did you ever have to make up your mind?\" she smiled. \"You've got it bad...\"\n\n\"Well, yeah,\" I admitted rather sheepishly. \"Kate's awesome, too.\"\n\n\"You don't have to love just one of us,\" she told me and stood my brain on end. It had never occurred to me that when it came to intimate emotions, that she'd be okay with me loving both of them.\n\n\"I, uh... I mean, um...\"\n\n\"Don't freak out, Mark,\" she told me. \"We three can talk about it later. Shall we get the corn to the grill?\"\n\nThere she went again, saving my ass from terminal embarrassment. We gathered up the stuff and headed back on down to the beach where we discovered everyone else sans clothes. Marsha helped me set the corn up to cook, then started stripping off. The lecher in me was never going to get jaded when it came to her undressing. I'll admit it... I stared. Until she turned her naked self to me and looked pointedly at my clothing, which was still on.\n\nI suppose I sighed before I began disrobing. I still wasn't used to this kind of personal freedom and tolerance. But I did strip off. I still struggled a little with being comfortable, naked, in front of Don and Natalie but I was working on it. After that, the nudity became inconsequential.\n\n\"Just to remind anyone who is getting ideas,\" I told the group, \"in about an hour, the water's going to be too cold for swimming. The current usually comes up from the south and it stays tolerable on the sandbars for awhile, but it will get cold enough to freeze off your favorite body parts if you wait too long.\"\n\n\"No freezing my favorite body parts of yours,\" Kate told me, patting me on my bare ass on her way to the drinks cooler.\n\n\"Perish the thought,\" I smiled in return, then went back to tending the grill and generally settling in. We got into a discussion of what we wanted to accomplish the next day and that Matt and Jim would be joining us, which included a plea from me for \"appropriate behavior\" from the others, whatever that meant. I kind of got laughed at, but I also got assurances that they wouldn't embarrass me... too much.\n\nI realized that it was both really weird and also very natural to be hanging around this family of nudists, even given the explicitly sexual relationship I had with two of them. Everyone knew it, everyone accepted it and the rest of life just went on like it was no big deal. And I was getting lulled into a comfortable carelessness because of the easy intimacy being shared. I realized that this summer was twisting my perceptions of what life should be like... and I was definitely embracing it.\n\nIn retrospect, the combination of the Memorial Day holiday and the two weeks around that Fourth of July effected a basic change in my life philosophy and I'm damned glad it did, although I didn't have the sophistication at the time to understand what it was going to mean to the rest of my life.\n\nThe sun set behind the trees and it got a bit chillier. Don and Natalie gravitated to each other, sitting up against one of the logs, nestled into each other, while -- in order -- Steve, Marsha, me, Kate and Tom snuggled up against one of the other logs. Marsha started humming a tune and I started laughing.\n\nDon asked, \"what's so funny?\"\n\n\"She's humming You Were On My Mind,\" I explained, then sang the opening line, \"when I woke up this morning, you were on my mind...\"\n\nTo Don's confused look, Marsha told him \"We Five\" while sweeping her arm to include all of us kids. To his continued confusion, she added \"the name of the group, Dad? We Five?\" That's when he got it and smiled. God, I loved that girl's sense of humor.\n\n\"Well, 'You Five' need to start thinking about getting a decent night's sleep,\" he smiled. \"Tomorrow's going to be a long day.\"\n\nWe agreed and I suggested the girls go on back home and leave me to sleep alone. Kate asked me where the fun was in that and I pointed out it wasn't fun so much as R&amp;R. We wound it down and packed it up, got dressed and went our separate ways. I was so happy and peaceful, I only had to jack off twice to get to sleep.\n\n* * * * *\n\n[Thursday 7/1]\n\n\"Because your idiot brother had to go and open his mouth about working with some 'hot chicks' today.\"\n\nMatt's buddy Jim was explaining to me why not only had he and Matt shown up to work, so had Jim's girlfriend, Sarah. I suppressed the smile. Or tried to.\n\n\"A little territorial?\" I asked.\n\n\"You have no idea,\" he told me. \"I hope these girls make Eleanor Roosevelt look like a beauty queen.\"",
        "\"Sorry, dude,\" I smiled. I couldn't help it. \"You're S-O-L.\" And with perfect timing, I could hear Don's Jeep coming through the woods on our drive. Jim, Matt and Sarah heard it, too, and turned to look.\n\nI was pleasantly surprised to see all four of them in jeans, boots and heavy shirts. But they could have been dressed in gunny sacks and the two girls would have sparkled. I saw Sarah stiffen.\n\nMaybe, if we get into the work right away, she won't have a chance to go ballistic, I thought. Here's hoping the girls recognize 'territorial' and leave Jim alone.\n\nSteve brought the Jeep up next to mine and the four of them piled out. I decided a preemptive strike was in order.\n\n\"Okay, everybody meet everybody,\" I told them and got the expected gee-that's-cute looks from more than one. \"Actually, okay... so. Steve, Tom, Marsha, Kate (pointing at each) meet my brother Matt, his buddy Jim and Jim's girlfriend, Sarah. And vice versa. Steve, Tom, Marsha and Kate are Don and Natalie Terney's kids and they've bought the Morrisons' place.\"\n\n\"Introductions complete, here's the plan. I've got two major trees that have fallen over and need to come down. One is simple. It's just going to block the Jeep trail when it falls. The bigger problem is that one.\" I pointed to a large tree, maybe three feet in diameter, leaning in the direction of the house.\n\n\"That one needs to be belayed so it doesn't fall into the house, then back-cut and hauled back towards the road. If we can pull it onto the apron, we can section it there. Just to keep life interesting, there's a shitload of poison ivy back there. We need to be well protected, gloves included, and wash everything thoroughly afterwards. We can probably back our Jeep in close enough so a couple of us can go up the trunk and find a place to tie it off. Who hasn't done this kind of stuff before?\"\n\nSarah, of course, raised her hand.\n\n\"Okay, then you're going to be working with whoever's running the Jeep and staying out of the woods. Do you know how to drive a stick?\" She nodded and I went on.\n\n\"Okay, so everybody take a potty break, get something to drink, load up on Off! and let's divvy up the work.\" I thought I was doing a damned good job of keeping everybody focused on task. Of course, as soon as I was done, Marsh and Kate walked up to Sarah.\n\nOh, fuck. Oh, fuck. Oh, fuck I think I'd better be busy somewhere else... I thought and headed for the house. Matt caught up to me using the half-bath downstairs.\n\n\"What the hell did your girlfriends say to Sarah?\" he asked. Or demanded, rather. \"All of a sudden, they're all chummy.\" Okay, so I was surprised.\n\n\"I have no idea,\" I told him. \"I'm just here taking a leak and avoiding Ground Zero.\" I shook it off and asked, \"so they really are acting chummy? Sarah, too?\"\n\n\"Go look for yourself,\" he told me. \"I thought Jim was going to piss his pants when your two 'oh my god you lucky sonofabitch' hotties headed for her. And by the way? I am now officially very jealous.\"\n\nI was grinning like an inebriated clown. \"Nice, huh?\" I just had to rub it in.\n\n\"That's a mild way of putting it,\" he told me. \"And you're boffing both of them?\"\n\n\"Yes and that does not get repeated,\" I told him. \"They're here as friends to help with the logging. If we can get those two trees down this morning, Mr. Terney has asked us to come up to his place to take care of some similar problems he's got, this afternoon.\"\n\n\"Okay, man,\" he told me -- somewhat grudgingly -- \"just don't forget the wine.\"\n\n\"It's in the fridge upstairs.\"\n\nTo simplify the story a bit, we went back to join the others and set up our plan of attack. We went after the threat to the house first. It turned out Kate was part monkey. She volunteered to take the first line and the collar up the tree and she made it look easy. We ran several lines to other trees to use as capstans, and we hooked one heavy one to the Jeep so it could put some pull on it. Then Steve and Tom as a team, and Matt and I as the other, began cutting the notch with the big chainsaw. Jim and Marsha spelled us when it came to knocking it out with the sledges and then everybody scattered to man the belaying lines while Steve and I made the final cut.\n\nMatt was driving the Jeep with Sarah acting as spotter and we did an almost professional job of dropping that tree on the driveway. We broke up into teams again, some of us hacking off the limbs with the chainsaws, others dragging them away either by hand or with the Jeep until all we had left was the central trunk. That got hauled onto the apron and cut down into 6' sections. We just stacked them off to the side. I figured we'd cut all that wood down to 18\" sections and split it later.\n\nWe did a sort of repeat with the other tree. And all through it, everybody was getting along just fine. No drama at all. Blew me away. When we got to lunch is when it got weird.\n\n\"Okay, everybody! Strip!\" Marsha called out and started taking of her boots, shirt and pants, carefully turning them inside out. My heart was literally in my throat until I realized she, and then Kate, had shorts and a tank top underneath. Steve and Tom joined in, too, stripping down to shorts and t-shirts and handing the clothes to Marsha.\n\n\"I'm running these through the wash,\" she told me. \"I don't like poison ivy or insect repellant. Want to give me yours, too?\"\n\n\"I'm not as prepared as you,\" I told her. I realized that if I stripped off, I'd be standing there in my briefs.\n\n\"So?\" she leered.\n\nOkay, that was a challenge. And just like the first time I met them, nude on the beach, part of me reared up on his hind legs. I started unlacing my boots. I think I had everybody's attention. Steve and Tom were looking at me sort of bemused. Marsha and Kate were leering. Matt and Jim were incredulous. And Sarah... Sarah didn't seem to know what to think. Kind of like watching a train wreck. No matter how bad it was, you just couldn't look away.\n\nThe boots and socks came off, then the jeans and the shirt, which I dutifully turned inside out. I handed the pile to Marsha and stood there in my briefs, embarrassment keeping me soft -- thank goodness.\n\n\"What about you guys, Matt... Jim?\" Kate asked. \"Want make sure you're not exposed to poison ivy? Not to mention stinking to High Heaven?\"\n\nMatt, predictably, took it as a challenge, like I did. Jim was more hesitant, especially in front of Sarah. But they both caved when they saw my smug expression as I stood there with Marsha and Kate. They were down to their boxers in short order.\n\nMarsha looked over at Sarah and told her, \"I don't think you got into the thick of it... you're probably okay for the poison ivy. But you're probably going to want to shower.\" That's when I got to see a side of Sarah I would never, in a million years, have suspected existed.\n\nShe told Marsha, \"well... I suppose I ought to be sure...\" and started taking off her clothes until she was down to her bra and panties. I was intrigued. Matt was salivating. Jim was thunderstruck. He was staring at his scantily clad girlfriend with his mouth hanging open. Sarah walked up to Marsha and handed her the pile of clothes. Marsha, now thoroughly buried behind the pile of laundry, tried to stumble to the door. I decided some gentlemanly assistance was a good idea.\n\nI guided her to it, opened it for her and helped her through, back to the laundry where we got everything loaded into the washer, using the Mark School of Clothes Washing. That is, everything went in one load, on Warm-Warm and Regular. My Mom is still trying to break me of that habit. When we got upstairs, people were cycling through quick rinse-off showers. Thank God my mother believed in a lot of towels. Marsha and I ducked into the master bath when it became available and she had a grand old time messing with me while we rinsed off.\n\nBy the time we got out, somebody had put together a soup and sandwiches lunch and everyone was sitting around the fireplace, chatting. And everyone was avoiding the elephant in the room, which was the fact that four of us were in our underwear.\n\nA lot of what we were talking about instead was rehashing felling the trees. We'd had some close calls, and those of us who were not Kate's family were impressed with her climbing abilities. We got into talking about what we might run into up at the Terneys' and the four of them admitted they had no idea what the situation was. The banter was light, like that, until I decided to go move the clothes over to the dryer. When I came back up, everyone was gone.\n\nThe Jeeps were still there. So was Jim's car. Just... well, the people were missing. A suspicion worked its way into my brain and I went to go check out the beach. Yep. Five in the water. Naked. I walked down to join my brother and his friend.\n\n\"I do not fucking believe it,\" Jim muttered to me as he watched Sarah out in the water with the others.\n\n\"What?\" I teased him. \"That she can swim?\" He turned to look at me in disbelief.\n\n\"If you had told me yesterday,\" he started in, \"that today Sarah would be taking off her clothes in front of us and then going swimming with four naked strangers, I would have filed commitment papers on you. But...\" and he gestured out into the lake.\n\n\"Well, it's better than getting your underwear wet,\" I told him, then stripped off my briefs and walked for the water. I was enjoying this way too much, but I wouldn't trade that moment for the world. The girls -- my two girls, that is -- let me get past the first sandbar before attacking and trying to dunk me. I was doing a valiant job of holding the two of them up, just enough off the bottom so they couldn't push me down and reveling in the naked wet skin, until Sarah The Wildcard pulled a sneak attack from behind me, grabbing my ass and knocking my knees out from under me. That was all it took for Marsha's and Kate's combined weight to drag me down.\n\nWhen I finally got spluttering to my feet, the three of them -- not to mention Steve and Tom -- were laughing their asses off at me. Sarah's the one I targeted, though.\n\n\"Oh, you sneaky vixen, you...\" I started after her. She squealed and tried to flee, but I was an expert in moving through the water and quickly caught up with her, grabbing her from behind and lifting her up in front of me. I had sort of forgotten where my hands, belly and cock were going to be when I did that. As the realization was sinking in and I was distracted with thoughts like oh, shit! this is Jim's girlfriend, she managed to twist in my arms enough so that her weight threw me backwards and we both went down with a huge splash, her firm breasts and nubile pussy pressing into me. I let her go and we struggled to our feet, but not before several salient points were burned into my synapses.\n\nFirst of all, she was in the same class of beautiful as Marsha and Kate. Second, she had handful-sized boobs with pointy hard nipples. Third, she shaved. Fourth, she was incredibly strong for a little shit, especially with her legs. Fifth, it was unbelievably tempting to kiss her as we stood close and she wasn't doing anything to discourage it.\n\nI have occasionally been accused of having the morals of an alley cat. I thing that's probably an insult to the cat. In this case, though, it did cross my mind that this wasn't my girl and I'd stir up a whole lot of trouble if I did anything, so I wisely didn't. What I did notice, though, was Marsha, Kate, Steve and Tom sort of moving to surround us as I heard, then saw, Matt and Jim wading naked through the water out to join us. Maybe they thought there would be trouble from my manhandling -- woman-handling? -- of Sarah.\n\nThere wasn't a problem, though. As soon as Jim got near enough, Sarah went and draped herself all over him. Apparently, anything he was going to say got lost somewhere along the line of his naked wet girlfriend rubbing all over his naked wet body.\n\n\"Okay, so fed and refreshed,\" she announced to the crowd. \"Do we go attack some nasty trees next?\"\n\nMarsha and Kate, Marsha and Kate, Marsha and Kate I kept repeating to myself. Anything else would be ridiculously greedy.\n\nWe did, in fact, decide to get going and move the work gang to the Terneys'. When we got there, we were met by Don, also decked out for work, and he showed us a couple of fallen trees he wanted pulled out. We did basically the same routine as before and a little under three hours later had a stack of wood to keep busy anyone with a will to section and split it. The follow-on R&amp;R took a weird twist.\n\nI could have predicted Marsha and Kate going for the \"laundry\" routine again. I was having to quickly change my assessment of Sarah, though, when she entered into open conspiracy with them. Which eventually led to a naked pool party with a naked Natalie serving soft drinks and snacks. All of which, I think, was doing a slow roast of my brother's brain. And probably Jim's.\n\nI managed to get Sarah on the side at one point and ask her, point blank, why she decided to get rowdy with the rest of us and she gave me an honest answer. She told me, \"I took one look at Marsha and Kate and realized they wouldn't even have to try to get Jim's attention. They are fun and free and exotic and bawdy and all kinds of things men can't resist. I'm a firm believer in the adage 'the best defense is a good offense.' So I decided to join them. Especially after they confirmed they weren't out to steal him from me.\"\n\n\"Well, you surprised the hell out of me,\" I admitted. \"And just so it gets said, you're a really beautiful girl and Jim's a lucky guy.\"\n\n\"Thank you for noticing,\" she smiled, sort of impishly, then got serious. \"You know that Marsha and Kate own you, right? You're definitely off limits for fucking around, regardless of what Jim would think.\"\n\nOwn me? I hadn't really thought in those terms. I wasn't sure if the idea bothered me or not.\n\nWhen we got back to the others, I found Matt and Jim in a huddle with Marsha and Kate. It turned out that Marsha and Kate had several friends back over on the Green Bay side, near where Jim's and Sarah's parents had their vacation homes. They'd been comparing notes about who knew who and there was some surprising overlap. The one that had my brother's attention, though, was a girl named Jeannie who had a reputation for being fun... and voracious. I walked up to hear Marsha asking for Jim's phone number.\n\nThe inappropriately jealous part of me took that way the wrong way, until I found out it was so she could have her friend Jeannie call Matt about getting together. Then I relaxed like Atlas having the world removed from his shoulders. I figured when this summer was over, I was going to be a sorry excuse for a broken-hearted Lothario. But for now, I was going to enjoy the hell out of my fantastic luck.\n\nIt got well past 10 o'clock that night before we called it quits. Matt, Jim and Sarah had their plans for the next day and \"We Five\" had ours. Specifically, we were going to trailer the Terneys' boat over to Kangaroo Lake and get some waterskiing in. The girls decided to be nice to me and let me have another night of solo R&amp;R, so when Matt and crew left, so did I.\n\nAll in all, I was really happy with the way the day worked out.\n\n* * * * *\n\n[Friday 7/2]\n\nIf it is axiomatic that if you want to score in High School, you need to have a car, it is similarly axiomatic that picking up chicks is easier with a boat. A nice boat. A Glasspar Flying V-175 with Bimini canvas. Sweet. So sweet that within the first hour we were on the lake, Steve and Tom had picked up girls. It didn't hurt that they were incredibly smooth operators and that I learned a lot from them that day. Knowledge that Marsha and Kate informed me would remain archived as long as they were in my life. I was starting to understand Sarah's comment about them owning me.\n\nThe girls, Teri and Julie, got along seamlessly with Marsha and Kate and we spent 4 hours and 3 tubes of suntan lotion, plus a break for lunch, having a blast. Teri and Julie were older, 23 or 24 I think, and very good friends. They were nicely stacked and filled out their bikinis in a most arresting way. And, they managed to have the most interesting twin wardrobe malfunctions I'd ever witnessed. They were skiing together and showing off a little, crisscrossing our wake and dodging the tow-ropes, when they both managed to pearl their slalom skis at the same time.\n\nThe skis took a nosedive, both skiers got launched parallel to the surface of the water and they both executed nearly flawless pancakes -- kind of like skipping stones but with a human body. Marsha called the fall and Steve spun the boat around. Both girls surfaced, hands clasped over their heads in the \"I'm okay\" gesture, and started swimming for their skis. Kate nudged me and pointed. So I looked.\n\nAs we were headed back towards Teri and Julie, throttled way back, Kate had spotted a bikini top floating on the surface of the water. I pointed it out to Tom, who pointed out to me another one, on the other side of the boat. We were going to split the difference between them. I looked at Tom, he looked at me, we both shrugged... and eased over the transom to go retrieve them. I'm pretty sure Kate thought I was being a gentleman, to go get the top and bring it back aboard. I think she began to suspect I wasn't when I gave it to Tom and went to go sit up by Steve.\n\nOkay, so I did happen to mumble something to him about a couple of lost bikini tops, and he did happen to look back to see Tom tying them to the flagstaff while Marsha and Kate were busy pulling in the tow ropes. And yes, he did smile in a most devious way. Teri and Julie had recovered their skis by that point and were patiently treading water, waiting for the boat. So what did Steve do?\n\nHe slowly turned the boat to present the stern to the skiers, per normal, and called to Marsha and Kate, \"toss out!\" Normally, that would mean toss the tow ropes to the skiers so they could line up for the start of another run. All seven of us realized what that meant. Steve was not returning their tops to them. Almost as if he didn't know they were topless. Teri and Julie earned permanent places in my Gutsy Hall of Fame. They knew they were topless. They knew that they either had to take the tow rope for a now bare-breasted run or swim over to the boat and demand their tops, which they could see flying from the flagstaff. They took the tow ropes.\n\nI think irritated would best summarize Marsha's and Kate's expressions as they pushed Tom out of the way and started untying the tops. That's why I'd moved up to sit next to Steve and stay out of it. But Teri and Julie had their skis on and tow ropes in hand before the tops came off the flagstaff.\n\n\"Hit it!\" Teri called out and irritated changed to incredulous, which changed to surprised laughter as Marsha and Kate scrambled to sit down before Steve punched it. He pushed up the throttle and the two girls in the water came up absolutely cleanly. We were now being treated to bare-breasted waterskiing, a first for me. To give those girls credit for more chutzpah than I could ever have shown on a public lake, they did a run most of the way down the length of the lake and back. I don't think the people they were flashing knew what they were seeing. Well, a couple of the guys did, because their eyes were glued to the girls as they went by.\n\nSteve slowed up as we got to the end of the lake and let Teri and Julie coast down and sink gracefully into the water. We went and picked them up, they climbed over the transom and retrieved their tops from Marsha and put them on, then turned to Tom.\n\n\"Okay,\" Julie told him. \"Your turn.\"",
        "\"You, too,\" Teri told Steve. I was doing my best imitation of an innocent bystander at that point.\n\n\"Here,\" Steve indicated I should take over the right-hand seat, then stood up and moved aft.\n\n\"Water ski bare chested?\" Tom grinned. \"Sure.\"\n\n\"Not bare chested,\" Julie told him and I could see Tom and Steve hesitate. There was, after all, only one other logical conclusion. Steve and Tom, though, were the wrong two guys to challenge. They stripped off their trunks and walked to the stern, jumping into the water and leaving Teri and Julie with astonished looks. I could see Marsha and Kate trying to suppress the laughter as they handed their brothers the skis and ropes.\n\nTo shorten the story a bit, we did one run down and back the center of the lake with Steve and Tom displaying their waterskiing prowess, among other things. And also earning a permanent place in my Gutsy Hall of Fame. When I throttled down and let them get back on board, they told me it would probably be a good idea if we called it a day before the County Sheriff got there, so that's what we did.\n\nWe pulled the boat out and headed back to the Terneys', Teri going with Steve in the Jeep hauling the boat, Tom going with Julie in her car and Marsha and Kate going with me in mine. We stopped at a drive-in on the way for burgers, fries and malts -- McDonald's hadn't made it that far, yet -- and the seven of us descended on Don and Natalie. Steve, Tom and I busied ourselves with getting the boat back into Lake Michigan and then into the boathouse while Marsha and Kate took Teri and Julie to meet their parents.\n\nBy the time we were done with the boat and got up to the house, there were six naked sunbathers hanging around the pool. I kind of stopped short, taking in the beauty, which prompted Marsha to get out of her chaise and walk over to me. She leaned in, pressing those awesome tits against me, and whispered, \"breathe...\"\n\nI was rapidly getting hooked on this whole clothing optional routine and it wasn't because I was some kind of sexless purist... anything but, actually. It was close to 6 o'clock when Natalie decided it was time for dinner and left, with Marsha and Kate, to go start getting food together. Which left we guys, plus Teri and Julie, to talk about what we wanted to do tomorrow.\n\nI told them I was going to try to make a dent on sectioning and splitting the wood we'd gathered, and they could take a day off from my labors if they felt like it. I really wasn't used to the kind of open, freely offered help I was getting, from people who knew what they were doing. Steve and Tom jumped on it, of course, and told me they'd be down to help. Oddly enough, when Teri and Julie heard about our work-a-day / play-a-day routine, they invited themselves along, assuring us they could work right alongside us.\n\n\"My brother will be forever indebted to you,\" I told them. \"This way, he doesn't have to interrupt his partying to do some actual work.\"\n\nDinner was Natalie's usual phenomenal and at dinner, in front of Teri and Julie, both Marsha and Kate insisted on coming back with me and staying overnight. Once again, I was looking for a crack in the floorboards to sink through as Marsha and Kate explained to Teri and Julie, with assistance from Don and Natalie, the rather intimate relationship they shared with me. Only Tom and Steve appeared to empathize with the idea of not sharing my sex life everybody else.\n\nBut I wasn't going to fool myself, either. Horndog or not, there was a lot I'd put up with to be able to spend intimate time with those two sisters. And I wasn't fooling myself, either, about wanting to get as much time with them as I could before my parents, siblings, aunt and cousins descended on the house.\n\nAs we were getting ready to head back to mine, Steve met me at my car.\n\n\"Thank you,\" he told me with a straight-faced serious look.\n\n\"For?...\" I asked.\n\n\"For getting them out of our collective hair,\" he told me, nodding at his sisters.\n\n\"Ah, so...,\" I intoned with a horrible Japanese affectation. \"You have planned special endeavors for this evening. Be mindful of the Forces of Nature...\"\n\n\"Oh, we're going to be very mindful of them!\" he smiled. \"You be mindful of yours.\"\n\n\"Always, Bro',\" I smiled. \"Always.\"\n\n\"Would you two quit gabbing?\" Kate leaned forward from the backseat. \"Some of us have important business to attend to...\"\n\nSteve and I laughed and I headed back to my place. Marsha and Kate remained ominously quiet on the short ride there. We got settled and broke out a bottle of wine and some cheese and crackers type snacks, choosing to stay in the living room, in front of the fire. On the bearskin.\n\n\"So,\" Marsha addressed me rather abruptly as we settled in. \"Ready to fall in love?\"\n\nThat surprised me. A lot. I took a breath and let it out while my mind went into overdrive, trying to figure out the \"best\" answer. I finally realized it was going to be the truth, or nothing.\n\n\"Sorry, no,\" I told her and waited a split-second for her face to fall. \"Too late. I already have. Twice. Don't think I can go for a third time.\" I could see my answer bouncing around in her mind, but she didn't say anything right away.\n\n\"Our plans for this summer,\" she went on after a bit, and in a subdued, serious tone, \"were to hang around the new house, explore, and generally be lazy. Neither of us was looking for a summer fling, or any kind of romance. We'd had enough assholes in our lives. Then you happened.\"\n\nI wanted to spout out something about what's wrong with me? but had the dumb luck not to say anything out loud. Because where she went next stood my brain back on end, like she had before.\n\n\"So we both end up falling for you, which was totally out of our plans, and we both know that the summer's going to end and you'll go your way and we'll go ours. And ours won't even be in the same directions. So we'll be scattering to the winds. And I hate it. And so does Kate.\"\n\n\"And so do I,\" I told her softly. \"And I haven't got a clue what to do about it. I mean, we can stay in touch. Letters, which I'm lousy at, or phone calls. But my Dad's only going to front me so much in long distance charges. I don't know about you guys, but I come up here year-round, when I can. So if we happen to be here at the same time...\"\n\n\"Yeah,\" Kate put in, also subdued, \"but that's a lousy way to run a relationship. Even a long distance one.\"\n\n\"Besides,\" I added, thinking I was agreeing with them, \"you wouldn't want to be passing on your Prince Charming because you were thinking about me.\"\n\nI cannot describe the glare I got from both of them, but it was identical. I knew somewhere in my gut that I'd said something really wrong.\n\n\"Okay...\" I drawled, suddenly very uneasy. \"What did I say?\"\n\n\"You are Prince Charming, Prince Charming,\" Marsha told me, rather vehemently. \"Deal with it.\"\n\n\"I'm trying to,\" I told her. \"I don't know how. Do you really want to be committed to a guy 500 miles away? Or more? I know what's going to happen with me... hours jerking off or mindless fucks with some bimbette I picked up in a bar while thinking about the two of you. Marking time until I can see you again. And there's the see you two again. I've got it bad for both of you and I've never been here before. How do I make that work? How do we make that work? Wouldn't you rather be free to pursue whatever tickles your fancy? Wouldn't you rather not have boat-anchor me around your hearts?\"\n\nMarsha looked sullen, but it was Kate that moved in front of me... and slapped me.\n\n\"You shut that fucking potty mouth before I have to fuck some sense into you,\" she told me, and she really sounded angry. Not to mention, my face stung where she hit me. Me, I just looked back at her, probably a lot like a whipped puppy dog. And what I saw was tears starting to fill her eyes.\n\nOh, fuck, here we go again, I thought. Jesus, Mark, can you fuck things up any more? I probably shouldn't have thought that, but at least I didn't say it aloud. Instead, I did the only thing I could think of... I reached forward and pulled her to me in a hug. What I got in return damn near crushed my ribs.\n\nWe fell over onto the rug and she clung to me like I was some kind of life preserver. I wasn't going to fight it. I did my best to wrap her up in me and just hold her. And that's when I felt Marsha move in behind me and cuddle into me. A three-way hug that lasted longer than I could tell. When we finally did ease up on the hug, I realized Kate had been crying. A lot. The whole front of my shirt was soaked.\n\n\"It isn't fair,\" she mumbled into my chest. \"I find the one guy I can fall in love with and he's going away. I don't mind sharing you with Marsha. It feels good. It feels right. Hell, I don't mind sharing you with Steve and Tom, or even Mom and Dad. I mind sharing you with several thousand college students ten hours away.\" She shut up, but she wasn't crying anymore. And I still don't know how to deal with a woman's tears.\n\n\"So what do we do?\" I asked. \"I can't very easily transfer to UW Madison, or even Stevens Point. Besides, I'm pretty much at Southern for Bucky and his gang. I wouldn't want to walk away from that opportunity, regardless how much I love you two.\"\n\n\"We do the best we can,\" Marsha told the back of my neck, right before kissing it. \"We spend as much time together as we can until we have to go back to school. Then we write and call religiously. Kate and I can come up with reasons for visiting Chicago on holidays and over breaks. We could try to get together for most, if not all of them. I don't think Mom and Dad will give us any grief.\"\n\n\"Remember, I've got my Mom, other brother and sister coming up in a few days,\" I reminded her. \"Plus my aunt and cousins. Finding alone time is going to be difficult.\"\n\n\"We can be together at our place,\" Kate told my chest. \"I'm sure Dad would love to have you around. And Mom still wants to get in your pants. You know, your shirt is soaking wet.\"\n\nMaybe it was a genetically-linked trait, their ability to derail me with the simplest of statements and then keep right on going as if there was nothing important there.\n\n\"Um... what?\"\n\n\"Your shirt is soaking wet,\" Kate iterated. \"You should probably take it off.\"\n\nIn a testament to my conditioning to obey the female of the species, I pulled it off as I thought about And Mom still wants to get in your pants. Marsha reached around and started working on my belt buckle and the pants came off next. Then the briefs. And weirdly enough, I wasn't hard. What I was, was confused.\n\n\"Are you saying I should have sex with your mother?\" I asked as they made short work of getting undressed and lying back down with me.\n\n\"Don't you want to?\" Marsha asked me.\n\n\"Um, well... uh...\"\n\n\"If you say no, you're lying,\" Kate informed me. I took a deep breath and let it out.\n\n\"Well... yeah?\" I answered tentatively. \"I mean, the thought did cross my mind. But with you two fulfilling my every fantasy, including her would just be greedy. And stupid. I wouldn't want to alienate you two or piss off your Dad. Or brothers. So want is different from going to.\"\n\n\"True,\" Marsha agreed. \"But isn't a mother-daughter combination like, the second favorite male fantasy? Right behind twins? You could have that. And you're not interested? Seems odd...\"\n\nOkay, so I like strong, assertive women who can hold their own and fuck like whores when they want to. But these two were taking it to a level I could only dream of...\n\n\"I didn't say not interested,\" I pointed out. \"I said, isn't going to happen. Because I have you.\"\n\n\"But you haven't had us,\" Kate told me. \"At least, not tonight. Yet.\"\n\n\"If I were you,\" Marsha interjected, \"I'd hold off on that 'isn't going to happen' for awhile and just turn your attention to making us a couple of very happy women. Who knows what circumstances might pop up out of nowhere?\"\n\n\"Make you a couple of very happy women,\" I echoed. \"And I would do that how?\"\n\n\"Sis, I think too much sex is getting to his brain,\" Kate told Marsha. \"He's having short-term memory loss issues.\"\n\n\"Then let's remind him,\" she smiled. And they did.\n\n* * * * *\n\n[Saturday 7/3]\n\nTwo long, two short. Two long, two short. Two long... I realized I had to answer the goddamned phone. And I still had two comatose female bodies draped across me. And I needed to piss.\n\nI struggled out from under the pile and made it to the phone.\n\n\"Hang on a minute...\" I answered it and put the phone down, limping to the bathroom. One huge piss later, I went back and picked up the phone. \"Hello?\"\n\n\"Rise and shine, stud-muffin,\" Steve's voice assailed me.\n\n\"I done rose and shine ain't in the picture,\" I told him. \"I presume, since I haven't looked at the clock, that you're calling about working today?\"\n\n\"Yep,\" he confirmed. \"8am. Are you decent?\"\n\n\"Well, I've been told I'm fairly good,\" I wisecracked. \"I suppose 'decent' would be a fair characterization?\"\n\n\"Are you and my sisters dressed?\" he rephrased.\n\n\"No, but we can be, depending on how soon you get here,\" I told him. \"I need to get coffee on before the girls wake up.\"\n\n\"No wonder you've won their hearts,\" he smiled and I could hear it through the phone. \"The four of us are on our way. Ready or not, here we come.\"\n\n\"You do mean c-o-m-e, right?\" I asked, still in wise-ass mode.\n\n\"Yeah, the libido's been pretty well drained for the time being,\" he told me. \"Again, thanks.\"\n\n\"You come down now, you get what you get,\" I told him. \"You can help with breakfast.\"\n\n\"Deal,\" he told me and rang off. I headed for the kitchen to start coffee.\n\nSteve, Tom, Teri and Julie walked in on me in the kitchen in sweatpants, making breakfast, and the girls curled up asleep, naked, with each other in front of the fireplace.\n\n\"Wow...\" Julie murmured and fanned her face when she saw Marsha and Kate.\n\n\"Yeah, pretty much,\" I agreed in a low voice. \"You're first-time guests, so why don't you go grab a chair at the table while we guys finish getting food together?\" They thought that was a good idea and did while we put together eggs, pancakes, bacon and sausage, OJ, V8 and coffee. We were almost done when a naked Marsha, followed by a naked Kate, stumbled into the kitchen, looking for me.\n\n\"Oh! Hi...\" was her greeting to finding her brothers and their... dates?... in the kitchen with me. I turned the heat off the griddle and walked over to her, giving her a soft, intimate, good-morning kiss. Then I did the same with Kate.\n\n\"Breakfast is almost ready,\" I told them. \"Hit the head and throw whatever you want on and come join us.\"\n\n\"Aye-aye, sir,\" Marsha smiled and the two of them turned to go to the bathroom. I kind of had to smile... they were walking funny.\n\n\"Whatever you're doing to keep them happy, more power to you,\" Tom commented as we put the serving dishes on the table. \"I would not have bet any one guy could keep the two of them happy.\"\n\n\"Do not ask me how that's happening,\" I told him. \"I haven't got a clue. I'm just grateful. Like I'm grateful for your help. We can use the long saw to section the trunk. I want to call up to Borden's and see if he's got a hydraulic splitter I can rent. Otherwise, it's going to be a long day.\"\n\n\"We've got this,\" Steve told me. \"You go call. We can use your Jeep to go get it, if he's got one.\"\n\nThat became the plan and by the time I got back with the splitter, everybody had eaten, gotten dressed and Steve and Tom had started cutting sections with the long bar chainsaw. Steve had thought to bring work clothes for Marsha and Kate. Teri and Julie were decked out for work as well. We got the splitter set up and managed to get most of one of the trunks done that morning. An 18\" section with seven splits gave us eight wedges per section, which got stacked up in an \"outdoor pile\" out back. The \"indoor pile\" was in the basement and was the dry wood. As it got used up over the year, it was replenished from the outdoor pile.\n\nWe were seriously focused on getting the wood done, and didn't have any of the shenanigans about poison ivy this time, so when we got to a stopping point, we cleaned everything up, grabbed a quick lunch and hightailed it up to the Terneys', where we did the same for one of the trees we'd taken down up there. Then I had to get the splitter back to Borden's before he closed. I went back to mine to clean up while everyone else stayed at the Terneys'. I'd just gotten out of the shower when I got a call from Don asking me to come to theirs for dinner, or drinks if I'd already eaten. Like I was going to refuse?\n\nI found out that Teri and Julie were visiting family friends who lived out on Moonlight Bay and that they'd pretty much glommed onto Steve and Tom. The four of them went into town after dinner to watch the game, leaving the girls, me, Mister and Missus at the house. It rapidly degenerated into a naked soak in the spa with the five of us, and that's when the heavy discussion came up.\n\n\"Mark, I want to thank you,\" Mister started.\n\n\"Sir?\" I was a little apprehensive where this was going to go.\n\n\"For helping my daughters,\" he explained. I looked over at them and they were just looking back with a carefully masked impassive. \"My family doesn't know me as a particularly tactful man, regardless of my business persona,\" he went on. \"So here's the blunt. They were fucked over by a couple of real assholes and crawled into a protective shell. Not unusual. But they turned away from a general social life and began relying on our familial relationships to get their emotional and physical needs met. I was concerned that if they didn't get out of their shells, they'd cut themselves off from some, to my mind, necessary experiences. Not the least of which would be falling in love. Repeatedly, if necessary.\"\n\nSomebody had been talking to somebody else. A lot.\n\n\"So it turns out you're a nice guy. You care about them, maybe love them. And apparently you're a good lover. So once they could accept that, miracles started happening. You weren't here to see them, and I don't know if they've shared, but even the smallest things like attitude and interests and just a general happiness to see a new day... things changed, for both of them, and I am going to hold you responsible.\" He gave me a sort of smile that let me know being held responsible wasn't a bad thing.\n\n\"So the next piece is, I understand your folks and relatives are coming up soon, and you are concerned that you'll have to back off the intensity of your relationships, plural, because of the lack of privacy. Not to mention, the end of the summer is going to really fuck things up. So here's the deal. Anytime you want to come here and help me out, whether it's working on the Indian or fucking the hell out of my daughters, you are welcome. And I'll see what I can do with your folks to grease the skids for you on that account.\"\n\n\"Does that sound good to you?\"\n\nI sat there in the bubbling water, stunned. He was offering to be complicit in Marsha, Kate and I keeping the intimate relationships we had going. And he was saying it as if he were grateful I was fucking his daughters. Um... fathers didn't usually act like that, that I remembered.\n\n\"Say yes, Mark,\" Marsha spoke up.\n\n\"Ditto,\" Kate added.\n\n\"Um... yes?\" I answered. I'm pretty good at taking directions.\n\n\"Good!\" he smiled. \"So... what are we doing for the Fourth?\"\n\n* * * * *\n\n[Sunday 7/4]\n\n\"Would you please fuck my mother so she stops mooning over you?\" Marsha asked me.\n\nI was barely awake. I'd stayed over at the Terneys' house that night and had a marathon sex session with the girls, fully aware that Don and Natalie could hear us. The conversation the night before, after Don had given his explicit approval of me, Marsha and Kate continuing our relationships, had drifted to a discussion of favorite sex techniques, with Natalie leading the charge and Don corroborating. Marsha and Kate had to embarrass me, of course, with explicit description of what they liked me to do to them, and Natalie kept looking... shall I say more than interested?... when they did. And Don seemed to find it amusing.",
        "The corker, though, was when we were heading to bed in the girls' room and Don pulled me aside.\n\n\"You should know, regardless of what does or does not happen, that I have no problem with you boffing my wife. She is randy as hell and 'strange stuff' only comes back to me in spades. You are in her sights, but she will absolutely defer to you and the girls. I just don't want you thinking I'll kill you if you fuck her. If you don't, that's okay, too. It's whatever you want.\"\n\n\"Um... okay?\" I answered. This was way out of my normal reality.\n\n\"That said, you have a couple of young ladies waiting for you. Do you need condoms?\"\n\n\"Um, I think the girls are prepared?\" I told him and he laughed.\n\n\"Probably,\" he agreed. \"Come find me or Nat if they're not. Goodnight, Mark.\"\n\n\"Goodnight, sir,\" I told him. \"I mean, Don.\" He smiled and patted me on the shoulder, and walked off.\n\nHoly. Fuck. Holy what-the-hell-am-I-into fuck... I was thinking as I walked into Cutesville.\n\nCutesville as in the epitome of Cute. Two full beds, rather than twins, frilly and pastels all over the place, some equestrian ribbons and trophies, some family pictures including waterskiing and lounging around the beach... the only thing missing were tasteful art nudes. There was probably a reason for that.\n\nMarsha was sitting on one bed with a UW Badgers football jersey on and Kate was on the other wearing an oversized Woodstock t-shirt. They both smiled as I walked in.\n\n\"What did Dad want?\" Marsha asked.\n\n\"To give me his blessing,\" I told her, skirting the truth.\n\n\"He did that in the pool,\" she commented, starting to slide the jersey off.\n\n\"To fuck his wife,\" I added. She stopped with the jersey halfway up, exposing her breasts. She and Kate were staring at me.\n\n\"He explicitly told you it was okay to fuck Mom?\" Marsha asked.\n\n\"Yep,\" I told her. \"But she's not the one I'm interested in right now.\" I was hoping I was coming across as suave and sophisticated... and dedicated to these two. Marsh slowly peeled the jersey the rest of the way off.\n\n\"And you're going to take a pass...\" she added, now nude on her bed.\n\n\"I don't know,\" I admitted. \"I haven't thought that far ahead. Forces beyond my ken are pushing me that direction, including you two, but what I want is right here, right now.\" That got a smile and a shake of the head from both of them. Kate peeled off the t-shirt and now matched her sister.\n\n\"So, which bed?\" Marsha asked. I didn't want to play favorites and wasn't sure how I was going to avoid it, until I was suddenly inspired.\n\n\"Well, one can be for the three of us fucking and the other can be for the three of us sleeping,\" I told them. \"Doesn't make any difference to me.\" Apparently I might have a career in politics.\n\n\"Fuck,\" Marsha said, pointing at the bed she was sitting on. \"Sleep,\" she added, pointing at Kate's.\n\n\"Strip,\" she said, pointing at me. I grinned and took my clothes off.\n\nThat night was a little different. Initially, Marsha and I made love, trading oral and intercourse, while Kate lay to our side playing with herself and occasionally petting me. After I came with Marsha, and she had several times, the three of us lay together and gently petted each other. When I got back up again, Kate and I made love, trading oral and intercourse, while Marsha took the adjunct role, playing with herself and occasionally petting me. I completely enjoyed myself and tried to pleasure both of them as best I knew how. Something, though, was bugging me. It took me until morning to figure it out.\n\nSo when I woke up Sunday morning and Marsha asked me to fuck her mother, I grabbed it as an opportunity to get out what was bothering me.\n\n\"So you want me to add her to the list of 'I can't haves'?\" I asked.\n\n\"What are you talking about?\" was the general response.\n\n\"Look, can I talk seriously here for a minute? I want to bring something up, but I don't want to blow the rest of the summer, because what I have with you two is precious.\"\n\n\"Okay,\" Marsha nodded while Kate added, \"sure...\"\n\n\"Let's pretend that this can go on forever,\" I told them. \"Or at least past Kate graduating college. What happens then? To my knowledge, there isn't any place in the civilized world where three people can be married, including all marital rights, especially involving kids. I mean, science fiction is full of group marriage scenarios, and there's stuff like Proposition 31 out there, or the line marriages in The Moon is a Harsh Mistress. But where does it work for real? So I'm stuck with having to propose to one, not both, of you. And that kind of fucks everything up.\"\n\n\"I'm not trying to be a wet blanket,\" I tried to explain. \"I am, to put it mildly, desperately in love with both of you. One way or another, though, it's going to come to an end. And I hate that. And it's eating at me.\"\n\nI fell silent and they stayed that way. We sat there looking at each other without a word. It was one of the most uncomfortable times of my life.\n\nIn what may have been a classic example of avoidance behavior, Marsha took a breath, let it out and asked, \"so what does that have to do with fucking Mom?\"\n\n\"Because it might be easy for me to fall for her, too, even though she's married,\" I told her. \"And that would suck. You and Kate are a lot alike. Maybe you get it from your Mom. Maybe it's just more emotional damage I'm lining up when I have to kiss this whole wonderful fantasy good-bye.\"\n\n\"Okay, one...\" Kate spoke up and her voice was husky, like she was holding back crying. \"This isn't ending now or in the near future. We have, at minimum, the rest of the summer and we are fucking well going to enjoy it.\"\n\n\"Two,\" she went on, \"there has got to be a way we can work it out so we can be together. I haven't got a fucking clue what, but the eternal optimist in me refuses to give up on what has been the most awesome non-family guy I've ever had in my life, and even that may be a tie.\"\n\n\"So, three,\" she told me, standing up and pulling on her t-shirt, \"I'm going to go pee and look for coffee. And we're going to the parades and the fireworks and we're going to enjoy ourselves. I am declaring this our Independence Day, where we start figuring out how to be independent of the current social norms.\"\n\nAnd with that, she walked out of the bedroom.\n\n\"I'm with her,\" Marsha told me, standing and pulling on the jersey. \"See you in a bit.\" And then she walked out, leaving me to stew. It hadn't gone the way I expected it to, nor the way I wanted it to. The way it was shaping up, we were going to have to find some wilderness hidey-hole where we could live as we wanted and tell the government to go fuck itself. That hasn't worked so well for others in the past.\n\nI decided I'd better back-burner it or risk ruining the day, so I pulled on my pants and looked for an unoccupied bathroom. The only one I could find was the one off the master bedroom. Since it and the bedroom were currently unoccupied, I chanced it. I did remember to close the door. Lock it, no.\n\n\"Don?\" I heard Natalie's voice asking from the other side of the door, just before she opened it.\n\n\"Oh!\" She stopped when she saw me standing there with my dick in my hand, pissing. \"Hi, Mark. Sorry. You're not Don.\"\n\n\"I'm sorry I'm not Don, too,\" I told her, willing my bladder to empty faster and trying to be cool. She laughed a little.\n\n\"And why would that be?\" she asked, not moving, not looking away.\n\n\"Four reasons,\" I told her as I shook it off. \"Marsha, Kate, you and he's built...\" I pulled my pants up and flushed. \"Sorry about commandeering the only open bathroom.\" I moved to leave the bathroom but she was still standing in the doorway.\n\n\"Mark,\" she told me as she moved up to me, \"you and I need to have a talk. Soon.\" Then she reached her hands up to my face and drew me down. I knew what was coming. I didn't fight it.\n\nHer kiss was every bit as sensual and exciting as her daughters' and it was easy to get lost in. She was gentle as she ran her tongue around my lips and teeth, pushing for me to open, which I eventually did. By the time she got done with me, I was rock hard. She patted the erection through my pants and iterated \"soon.\" Then she stepped back to let me leave. I didn't. Instead I asked her a question.\n\n\"Natalie... are you mooning over me?\"\n\n\"Mooning?\"\n\n\"Yeah... that's what Marsha called it. She is of the opinion that I need to fuck you to revert you to normal... so you stop 'mooning' over me. So I just wondered if she's right.\"\n\n\"You should definitely fuck me so I stop mooning over you,\" she smiled. \"But I don't think anyone but God can make me normal again.\" I smiled. I couldn't help it.\n\n\"You're right... we need to talk,\" I told her, \"but right now I've got to go do some damage control.\" To her questioning look, I added, \"I brought up the fact that this fairy tale was going to end. Let's just say, I got some stiff resistance.\" She nodded and pointed out the door.\n\n\"Sic 'em, Tiger,\" she told me. So I did. I went and found Marsha and Kate, who happened to be having coffee with the rest of the clan, including Teri and Julie. I grabbed a cup and joined them as they talked about the timing for hitting both parades and then the fireworks. I made no reference to my previous confrontation with Kate and they ignored it, too, concentrating on what we were going to do to have fun.\n\n* * * * *\n\nWe spent the day having a gas. The seven of us hooked up with Matt, Jim, Sarah and surprisingly Jeannie, who seemed to be aligned with Matt. And Matt looked like he was going to burst. Maybe she was alleviating some of his jealousy. So we had eleven in our entourage for the Egg Harbor parade and the Bailey's Harbor parade. Then we had to haul ass back to Egg Harbor for the fireworks. And somewhere in there, we got some beer and wine and Fish Boil, also known as Poor Man's Lobster, and managed decent parking spots for the fireworks. I had Marsha and Kate in my Jeep, Steve had Tom, Teri and Julie in Mister's Jeep and Jim had his family's '66 LeMans drop-top for Matt, Sarah, Jeannie and himself. It was turning out to be a perfect day.\n\nThe fireworks were launched from a raft out in the harbor and they put a lot of effort into the show. It started around 9 o'clock and went almost an hour. Jim and his crew opted to come back with the rest of us to a bonfire on our beach. By arrangement, we let Don and Natalie know we were back and they came down and joined us. The night was getting chilly in a hurry, so we all decided to stay clothed, but Teri, Julie and Jeannie were introduced to the concept of a clothing optional beach. It was going to be a real bummer when my folks showed up and we had to knock it off.\n\n\"If you young folk want to help us old fogeys build a fire scar tomorrow,\" Don told us, \"we could move the clothing optional beach to ours. We don't have as much isolation from our neighbors as Mark does, but it should be sufficient.\" He got several takers on that proposal.\n\nWe ended up pairing up... or in my case, tripling up... around the fire, telling stories of past exploits on the Thumb and sharing things we thought we might like to do. Feeding the bear soda pop over at Aqualand was one of my favorites. Ice Cream Sundays was one of Don's. That was when they'd go to Wilson's ice cream parlor in Ephriam on Sundays and order sundaes and other treats, like house-brewed root beer and really thick burgers. That ice cream parlor went back to 1906 and as far as I know, it's still going. It was a great place to socialize. Steve and Tom got into topping each other with stories about learning to water ski and all the screw ups they'd endured. Marsha and Kate talked about taking long rides along the beaches and trails, and that's when Sarah found out they had horses... and started wheedling some riding time.\n\nIt was after 1am when we finally broke it up. Jim took Matt, Sarah and Jeannie with him, since they'd promised to get the girls home before dawn. Teri and Julie went with Steve and Tom, and Don and Natalie, leaving Marsha and Kate with me. I wasn't looking forward to trying to avoid the end of summer issue, but I was looking forward to just being with them.\n\n\"How about we just get some sleep tonight?\" Marsha suggested. \"And get energetic in the morning?\"\n\nThat worked for me. Curled up with the two of them had become my favorite way to sleep.\n\n* * * * *\n\n[Monday 7/5]\n\nI was in the middle of screwing Marsha with Kate riding my face when the phone rang. And unfortunately, it was for me. I decided to ignore it. I'd get the message from Mildred when I, when we, were done. It turned out to be my Dad. I called him back.\n\n\"I'll keep this short, Mark,\" he told me. \"One, how is it going?\"\n\nI told him about meeting the new owners of the Morrisons' place and how much we'd managed to get done. He was impressed. I told him about Mr. Terney's Indian and he decided he definitely wanted to meet the man.\n\n\"Okay, so two,\" he went on, \"Mom, Mary and Luke will be up sometime Wednesday, probably late, and Aunt Barbara will be there Thursday with Michael, Suzy and Robert. I need you to find sleeping space for everyone. If you look in the paint locker off the shop, there's a bunch of camping equipment and rollaway cots and so forth. You know the drill. If you need something extra, call me and I'll make it happen. I can't get up there until Saturday, but I'm sure you can handle it.\"\n\n\"Can I put up the squad tent on the beach and throw all the kids in it?\" I asked. I was half-serious.\n\n\"No, but you can put it up and use it yourself, if you want,\" he told me, and then very out of character added, \"or for whatever guests you might have over. You do know I moved it to the sail locker, right?\" I got the distinct impression he knew something was going on and he wasn't disapproving. That was a little unsettling.\n\n\"Okay,\" I told him. \"I'll get on it.\" He thanked me and we hung up. I passed the gist of the conversation on to Marsha and Kate and they, in turn, suggested calling in the troops. I agreed and started tallying it up. I had seven people showing up. Eight when Dad got here. Mom and Dad would take the master bedroom. My aunt and Suzy would take the two twin beds in the front room. Michael and Robert could take the two rollaways down by the furnace.\n\nThat left the couch in the living room for Mary and Luke. That was going to be a problem unless somebody wanted to camp out in the screen house. Which actually wasn't a bad idea. I'd have to let Mom referee that one when she arrived.\n\nTo shorten this up a bit, we did in fact mobilize \"the troops\" and got everything pulled out and set up the best we could. Don offered to make a run down to Sturgeon Bay and pick up another cot, and I took him up on it. Especially after he said he'd donate it to the cause unless we didn't need it, in which case he'd just store it at his.\n\nMarsha, Kate and I spent as much time together as we possibly could, even if we weren't screwing around sexually. How things unfolded after my family descended on the place is a different story and not part of this one. The girls and I did fight to keep our threesome going, though, well after the end of the summer. And the Terneys became very good friends, not only to me, but to the rest of my family as well. Maybe I'll manage to get that story written out sometime.\n\nI might even get to explain Marsha's take on the Sheb Wooley song: \"It was a one-eyed, horn-y, veiny purple pussy beater.\" Til later...\n\n*~*~*~*~*\n\nI want to thank you for giving me the most wonderful summer of my life...<br> It was so heavenly, you meant the world to me <br> and anyone could see that I was so in love.<br> I want to thank you for giving me the most wonderful summer of my life...<br> I never will forget that summer day we met, <br> you were so shy and yet you stole my heart away.<br> We walked along the sand, walking hand in hand.<br> Then you kissed me and I knew<br> I would love you my whole life through.<br> I want to thank you for giving me the most wonderful summer of my life...<br> And though it broke my heart the day we had to part,<br> I want to thank you for giving me the most wonderful summer of my life.<br> Wonderful Summer - Robin Ward (1963) "
    ],
    "authorname": "eidetic",
    "tags": [
        "ffm",
        "sisters",
        "young man",
        "young women",
        "group",
        "orgasm",
        "18-year-old",
        "20-year-old",
        "summer lovin",
        "romance"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/one-prince-revisited"
}