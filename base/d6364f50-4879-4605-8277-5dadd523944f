{
    "title": "Farm Ch. 02",
    "pages": [
        "A/N - Due to overwhelming popular demand, I've written a second chapter for this story. As soon as I saw the clamour for a second chapter in the comments of the first chapter, I started thinking about where to take this. I like a 'happily ever after' like most people so that's basically what you're going to get here. Hope that's not a spoiler!\n\nSpent some time putting this together, hope you enjoy it as much as the first chapter.\n\n*****\n\nDinner that evening was awkward. Emily and June chatted away without a care in the world, but Mick was unusually quiet, though he was monosyllabic at the best of times. The fact he looked embarrassed hurt. I'd lied to the face of my best friend to protect the woman I loved, but also myself. There was nothing else I could have done. If I'd admitted to sleeping with my niece, what would his reaction have been? I figured fists thrown, threats levied, and my name quickly spread across the community and beyond as some sort of creep.\n\nJune kissed my cheeks as always beyond leaving. Mick met my eyes, and I could barely look into his as we shook hands, another short embrace. \"See you in the morning, Bruce.\"\n\n\"Yeah, Mick. Early as always.\"\n\nWatching them walk towards their ute, he tooted the horn before they disappeared towards the horizon. With a sigh, running a hand through my hair, I turned and walked back into the house. Wandering into the kitchen, Emily was busy cleaning up. I helped her as always, but I found words hard to find. I wasn't exactly a conversationalist myself, instead loving listening to Emily natter away about anything that came to mind. It wasn't awkward but I could see she was deep in thought and incredibly upset. Before I could say a word, she folded up the tea-towel and disappeared. I stood at the sink and sighed.\n\nHeading outside for a much needed drink, Emily didn't join me that evening. I sighed when realising I'd be out there alone for a little while, but I honestly didn't know what to do. If Mick had picked up on it, then surely many of my lads would have noticed something untoward. But I didn't want to end things with Emily at all. I loved her to bits. Best thing I ever did was invite her to the farm. But neither of us needed what we were currently experiencing. I'll admit, I was shit scared of what might happen next.\n\nI had a shower and washed away some of the dark thoughts, standing with my hands against the wall, letting the hot water run through my hair and down my back. It invigorated me somewhat, gave me time to think. It wasn't just my relationship with Emily that worried me. I still thought about that phone call with my sister. The last thing I needed was her showing up and making our lives even worse.\n\nWalking back to my room, I stopped at Emily's door. I heard the soft sobbing from behind it and that just made my heart break even further. I couldn't just leave her there to cry alone. Knocking on the door, I heard a muffled 'Come in', walking in to see her curled up in a ball on her bed. There was only one thing to do. I picked her up in my arms and carried her back to our bed, lying her down before I threw on some underwear and lay next to her. Caressing her cheeks, she sniffled a few times while looking at me with those gorgeous eyes of hers. The agony in them was almost too much.\n\n\"I love you so much it hurts,\" she sobbed, \"And I can't bear the thought of anything happening to us.\"\n\nI took her hand in mine, kissing the back of it, before holding it to my chest. \"We'll figure it out together. Okay?\" She nodded before scooting closer to me. \"I'm past forty and, honestly, I don't think I've fallen in love like this before, Emily. You simply make my life better, and I'm not letting you go.\"\n\n\"What do we do?\"\n\nI sighed. \"I'm not sure yet.\"\n\nWe made love that night, an air of desperation to our coupling. Neither of us thought it would be the last time, and I think the added emotion of possible discovery and its ramifications added a certain flavour to it. Feeling her legs around my hips, she almost begged me to finish inside her. Fingers digging into my back, my thrusts were slow but deep, enjoying watching her face with each pump of my cock. Lasted longer than usual as I simply used every trick I could think of not to cum, though once I did, the groan I released was long, enough that it provoked a little giggle from her, which earned a grin from me in return.\n\nShe needed an orgasm too, and after giving me the usual few minutes and a little more, she happily straddled my lap as she slid down my cock. I knew I'd never tire of watching my niece ride my cock. Her body was simply perfect, but I spent more time watching her face, the sheer delight in her eyes, her mouth making certain shapes and sounds when my cock hit the right place inside her. She did the same thing as me, holding back her orgasm, but once it hit... tears. It wasn't any surprise to me, giving me an excuse to hold her tightly to my chest, whispering words of my love for her as she softly cried.\n\nWhat happened did hover like a diminishing dark cloud for the next week. Mick was fine with Emily and everyone else, but our relationship suffered. And that just added further hurt to the fact I'd lied to my best friend. It was awkward when it shouldn't have been, so we did what men like us do. Bury it all down and just try and focus on what was important, which was the farm. Sheep. Cattle. Cows. Horses. Chickens. Crops. Fruit. Focus on that, worry about the supposed inconsequential shit later. It was only on Friday, when I offered him the usual end of the week beer or two, that we finally had a chance to really talk.\n\nStanding out on the veranda, taking in another glorious sunset, we sipped at our bottles of beer. Removing his hat, he flicked at a couple of flies hovering nearby. \"So, Emily is in love with you?\"\n\nI almost spat out my beer, then spent a couple of seconds coughing. \"Yeah, seems so,\" I managed to reply.\n\n\"What about you, Bruce? No bullshit. Man to man. Mate to mate.\"\n\nI glanced at the distant horizon, taking another sip of beer. \"Mick, I...\" I sighed, shaking my head. What surprised me was the hand on my shoulder. That helped. \"Mick, she's the best thing to happen to me in years. I know I shouldn't return any sort of feelings but...\"\n\n\"Can't control what the heart wants.\" I glanced at him in surprise, earning a shrug in return. \"We're told who and who not to love, but it's all in your head and heart, right?\"\n\n\"Never had you picked as an old romantic, mate.\"\n\nHe snorted. \"Well, I don't think I am, but June married me, kids and all that, and we're still together, so guess I'm doing something right.\"\n\n\"You... suggesting anything here, Mick?\"\n\nHe gazed at the horizon. \"Not right now, mate. Not right now. Just... I can understand her feelings for you. You were and are her saviour. And I remember when she used to visit. You doted on her, and her brother, while she loved every minute she was here. And you, Bruce. You need someone in your life. But... she's also your niece. There's quite the age gap. And I'm fairly sure it would be illegal too, though I know cousins can marry and such, so...\" He flicked his hat at more flies. \"I came at it the wrong way, Bruce, and I apologise for that, at least. Just flat out accusing you of sleeping with her. And if I'd approached Emily first, I'm not sure how it would have gone. Probably upset the poor girl and left her thinking less of me in return. But I just want the best for both of you, that's all.\"\n\nI took a sip of my beer and chuckled. \"Mick, I think that's the most words I've heard you put together at once in twenty years. But thanks, mate. I appreciate it.\"\n\n\"As Emily said, we're family. And we look after each other.\"\n\nEmily joined me out the front as Mick stepped into his ute, both of us waving him goodnight before he set off home. Soon as we were alone, she cuddled into my side as I led her back into the lounge room. Grabbing a couple of beers from the fridge, I sat down next to her, enjoying the silence as she curled up and cuddled into me again, wrapping an arm around her in return, turning her head to give her a soft kiss on the lips.\n\n\"Good conversation?\" she asked.\n\n\"Yeah, I think. I'm not sure, to be honest.\"\n\n\"What do you mean?\"\n\n\"I think the man has been thinking, and is trying to come around to the idea of... us being together. To be honest, I think you've been more affectionate with me than normal this week. Maybe that's helped?\"\n\n\"I figured pulling away would make us look guilty. So now that he knows I'm in love with you, he shouldn't be surprised that I'll want constant hugs among other things.\"\n\n\"Quite the brain in that noggin of yours.\"\n\n\"This is for both of us to figure out, Brucey.\" I gave her a glance, earning a cheeky grin in return. \"I'm doing research on this sort of relationship, what our options are. Once I've figured it out, we can sit down then go from there.\"\n\n\"I haven't simply because I'll admit, Emily, part of me doesn't want to know. We're out here on this farm, miles from anywhere. And what we do in the privacy of our home is nobody's business but ours.\"\n\nI felt her move and her hot breath near my ear. \"Want to take your niece into our bedroom and fuck her brains out?\"\n\nI laughed. Couldn't help it. \"When you put it like that, Emily.\"\n\nFive minutes later, I had Emily bent over our bed, fucking her from behind. We were slowly but surely experiencing new things together. She knew I'd had an active sex life and a few partners before her. She enjoyed the fact I had experience and could then apply it to her. She had certainly learned I love to hear her suggestions. If she wanted me to eat her pussy, just walk up and almost demand it from me. I'd practically drop anything I was doing to please her.\n\nThe sound of my skin slapping against hers earned a giggle from her. I did worry I'd hurt her while driving my cock into her, but the moans she released suggested she was loving it. Leaving a trail of kisses up her back, I placed my chin on her shoulder and just listened to the noises she made. \"I love you so much,\" she whimpered.\n\nPulling out, I flipped her over and slid back inside her, feeling her legs around my hips as she hooked hands around the back of my neck, leaning down to kiss her. \"Such a tight little pussy, Emily,\" I grunted.\n\n\"My uncle has a big fat cock that I love.\" I smiled at that. She had certainly learned. \"You like your niece's incredibly tight pussy?\" she asked, ever so innocently, it actually brought me to a halt. When she grabbed my hand and sucked on one of my fingers, I nearly exploded inside her. \"It's so naughty you're fucking me, Uncle Bruce. I'm your young, incredibly innocent, very inexperienced niece. Only been with one partner before.\"\n\nI kissed her hard for that, feeling her return the kiss immediately. The passion increased with every second as I really started to pump into her, earning a whimper every few thrusts. Breaking the kiss, I met her eyes and they were filled with nothing but lust and desire in that moment. Gently pushing her onto her back, my mouth found one of her nipples, sucking and nibbling at one of them, earning another moan and giggle. Taking her legs from around me, I spread them wide, holding them apart with my arms.\n\n\"Oh fuck, that's deep,\" she groaned.\n\n\"Okay?\" I asked, always making sure.\n\n\"Fuck... yes... God, I want you to cum though. I need you to cum.\"\n\n\"Soon, my not so innocent niece.\"\n\nI actually lied. It was going to be soon. I lasted another minute at most before I groaned, buried my cock, and just blasted away. I'm not sure what it was but it was one of the best orgasms I could remember since we'd started fooling around. Resting my head next to hear, she immediately cuddled with, limbs wrapped around my body, easily able to pick her up so I could at least lie on the bed.\n\nShe started to giggle again. \"That was fun, Bruce. I love turning you on so much.\"\n\n\"Emily, you will be the death of me, though hopefully when I'm eighty-five and ready to go.\" I ran my fingers through her hair, her face and eyes changing to one of nothing but love for me in return. \"I love you just as much in return.\"\n\n\"Lie back as I'm riding you until I cum again and again.\"\n\nAs I'd just experienced quite the orgasm, she knew I needed a few minutes, so she happily had me lie back as she sat between my legs, spending time just playing with then licking up and down my cock before it was hard again, then she seemed to change her mind and started blowing me. She never stopped looking at me, enjoying the sight of my cock disappearing into her mouth. Then she stopped and just stroked me again. I always enjoyed it when a lover just showed an interest in my cock.\n\nI was now rock hard, watching as Emily straddled my lap, running her pussy along the shaft of my cock. She was leaking a bit of my cum, though she was now used to that by now, aware sex could be and would be messy. She'd already confessed to loving the feeling of it leaking out of her. Made her feel like a woman, in her mind.\n\nSliding down my cock, she moaned softly, mesmerised by my cock disappearing inside her incredibly tight pussy. Resting my hands on her hips, I got my legs comfortable and allowed her to take complete control. If she wanted me to thrust, she'd let me know.\n\nHer pussy was easily the best I'd had in my life. Though the physical sensations were superb, it was the psychological and emotional connection that I cherished the most. Sure, I had to forgot from time to time that I'd known her nearly all her life, but she was now an adult, more than capable of her own decisions, and the fact I was lying back while she happily bounced away on my cock suggested she was just as keen on me.\n\n\"Bruce,\" she moaned, \"I can't get enough of your cock.\"\n\n\"Keep enjoying it, sweetie.\"\n\n\"I will,\" she whimpered, \"God, this orgasm is going to be immense.\"\n\n\"You'll keep going?\"\n\nShe opened her eyes and met mine. \"I want you to blast inside me again later.\"\n\n\"I hope your birth control doesn't fail, otherwise...\"\n\nShe smiled at me. \"Well, then I'd be pregnant and we'd have a child.\"\n\nThe thought didn't even begin to scare me, and she seemed genuinely thrilled by the idea. Guess we'd just have to cross that bridge if it arrived. I knew she'd be smart and wouldn't stop taking the pill until we decided, but that was going to take a long, meaningful conversation to decide if it was sensible to do. Considering what happened recently with Mick, we would have to remain careful for now.\n\nThen she had an orgasm and I focused on her, watching her entire body quiver, feeling her thighs tighten against me, her pussy practically clamp against my cock. She didn't release loud moans or groans, they were more adorable little squeaks sometimes. I'd told her to really let loose every time, but I could understand why she sometimes still didn't feel entirely comfortable. Not because of me, it was a personal thing.\n\nSoon as the euphoria passed, she placed both hands on my chest and really started to ride me. I loved the determined look on her face, saying 'I'm going to ride your cock and cum hard. And you're just going to lie there and love it'. Apart from running my hands up from her hips to her breasts, giving those plenty of gentle squeezes, while also playing with her nipples again, which did earn some cute giggles again, she remained in control.\n\nUntil she had another orgasm. Then she rode me hard and fast, and enjoyed another one almost straight away. Now feeling rather warm, she kept on riding me, her cheeks and face now looking rather red, forehead glistening with sweat, having to blow her hair out of her face. \"Don't want to stop,\" she whimpered, \"Loving it too much.\"\n\nRunning my fingers up and down her back, I assured her I was going to last a little longer. \"Whenever you need me to cum, sweetie,\" I said softly.\n\n\"Fuck, I love you...\"\n\n\"I know, sweetie. I'm in love with you too.\"\n\nShe had one more orgasm before she simply couldn't take anymore, though amused me when resting on my chest and telling me to just use her pussy for my own enjoyment until I came. While I slowly started to pump into her, aware I wasn't going to last long, I gave her pert little arse a few gentle squeezes, while ever so slightly brushing my finger against her tighter little hole.\n\n\"Maybe,\" she whispered. I stopped as she lifted her head to meet my eyes. \"Let me think about it. But I said I want to do everything with you.\"\n\n\"You don't have to though. As I said, never agree to...\"\n\nShe kissed me softly on the lips. \"Bruce, I'd love to try but the thought of your big cock in my tight little butt is intimidating. I'll think about it, then agree, then I know you'll do everything you can to ensure I love every second.\" She kissed me again. \"But right now, I just want to feel you fill my pussy again.\"\n\nI filled her pussy within a couple of minutes, then we headed to the bathroom for a shower.\n\nWith the shearing season now thankfully complete, it was back to what I'd call the monotony of daily life. Might have been monotonous but it was never dull, and we were always kept busy. Emily was now as affectionate as ever with me, and I allowed myself to return that affection, whether in front of Mick or the lads. Never so far as to kiss her intimately, but the lads knew how much I cared for her, and had probably figured out how much she cared for me.\n\nEach night, Mick would join Emily and I for a beer before he headed home. We'd discuss nothing in particular, just taking in the sunset as we relaxed after another hard day's grind. Emily would snuggle against me, Mick occasionally glancing, and I think with each day that passed, his approval of what he thought was happening went up. Whether he thought we slept together or not wasn't the issue, he could see she was in love with me, and that I simply adored her in return.\n\nAfter doing our usual morning's work on the Saturday, Emily asked if I was wanted to go for a ride to the river for the afternoon. As there was still enough heat, though even the approaching winter wouldn't cause a major drop in temperature, except at night, I thought it was a fantastic idea. Emily prepared a picnic for us again while I got the horses ready, mounting up not long after noon and riding off.\n\nBarely a cloud in the sky once we approached the river, still as full as last time we'd visited. After tying the horses to a tree, we laid down the rug and placed everything down before I pulled Emily close. \"Close your eyes and listen,\" I whispered, holding her against me.\n\nThe flowing river. Insects. Maybe the flap of wings from nearby birds. Our breathing. The horses nearby. That was all you could hear. I had no idea how people lived in cities with the constant noise, or at least, that's how it seemed to me on the few times I'd visited one. Too noisy. Too crowded. Too busy.\n\n\"Want to skinny dip?\" she asked.\n\nBefore I could even reply, she'd taken a step back and started undressing, then she turned and jogged bare arsed into the water. She shrieked again at how cold it was before diving underneath, rising up with her hair slicked back, high enough I could see her breasts, no surprise the cold water had hardened her nipples.\n\nI stripped off and joined her, hearing her laugh as my cock swung from side to side. I cried out as well once the cold water hit by balls, the pair of us swimming about, earning more shrieks and plenty of laughter as I swam after her, tickling her constantly. If not doing that, we spent a lot of time making out, her legs wrapped around me.\n\n\"Want to make love after lunch?\"\n\n\"I figured that's why you suggested this, Emily. I'm thinking I eat your pussy for an hour or so.\"\n\nThat had me dragged out of the river as she lay back and spread her legs. \"Well, consider this a pre-lunch meal then,\" she said, running a finger along her slit, \"And maybe you can have this for dessert, too.\"",
        "For a laugh, I checked the time on my phone before I lowered my mouth and started teasing her. I dragged it out for as long as I could. I wanted her to plead. I wanted her to beg. I wanted to hear her whimper and moan. I wanted her to almost cry with desperation at how turned on she was going to be. I wanted her thoughts to be of nothing but her orgasm. I ate her out long enough that my jaw ached.\n\nChecking the time, I chuckled to myself before showing it to her. \"My god, Bruce, you enjoyed it for that long?\"\n\n\"Emily, I'd do that all day and night. I love you, love your pussy, love your taste, and love making you orgasm.\" I kissed her softly. \"Now I think we should eat as I am hungry for something other than your pussy right now.\"\n\nWe stuffed ourselves with food, enjoying a beer each, before we lay back on the rug, ensuring we were mostly covered by the large umbrella, Emily cuddling into my side. She was now confident enough to ask about my history, so asked about my own first time and other lovers I'd had. She knew I'd had a bit of a dry spell before she'd arrived. I told her my first time had been with a girl I'd gone to school with, the typically awkward experience of two virgins. We'd dated for a while until she left for university. After that were a couple of serious relationships that eventually fizzled, and then mostly just brief affairs since then. I had a few female friends in towns nearby where, if they were free, they might be willing for a night or weekend of fun.\n\n\"But that's all in the past now. I have you with me, and I definitely don't want anyone else.\"\n\n\"Want a blowjob?\"\n\n\"I'd love one, sweetie. Then we'll swim again before heading back.\"\n\nShe was getting better and better at blowing me, but it was her enthusiasm that warmed my heart and made my cock even harder. And she was ever so desperate, each and every time, to please me. Honestly, she was willing to do it for me, so I would never complain, but she clearly did reading and maybe used one of those internet forum places for advice, as she certainly applied new things every time she did.\n\n\"Fuck,\" I groaned as she nearly swallowed my entire length. She was ever so pleased with herself, raising her head and grinning, some spit and drool connecting my cock to her mouth, before she swallowed me again. Running my fingers through her hair, she looked up at me as her head bobbed up and down. \"I'm close, sweetie.\"\n\nShe stopped long enough to say, \"Fill my mouth and throat,\" before she resumed.\n\nI loved that young woman a little bit more each and every day. And she got what she wanted, groaning so loud, I'm sure they heard me back on the farm. Hell, Mick probably heard me, knew she was blowing me, and probably just shook his head before resuming reading his paper or watching the afternoon footy.\n\nReturning to the water to cool off and wash ourselves down, Emily wanted cuddles. Just cuddles. Asking if she could ride with me, I said that wasn't a problem, connecting the reins of her horse to my saddle. She sat in front of me, relaxing back against me, one of my arms around her, both hands still holding the reins.\n\n\"I love being out here,\" she said softly, \"There's a rugged beauty to everything. The sky is enormous as well. And at night, the stars are so beautiful. I just realise there's so much we miss every day when all we're surrounded by is steel, glass and concrete.\"\n\n\"Can't beat nature. Just an afternoon by the river is enough to recharge the batteries. It's just a shame to be miles from anywhere, and with the farm...\"\n\n\"You don't have many holiday's, do you?\"\n\n\"Farming is a full-time occupation. Your grandfather rarely took time off. That's why I always take Sunday's to myself, at the very least, but I can't remember the last time I took a week to myself.\" I kissed her cheek. \"I do have a good reason to think about it now.\"\n\n\"I'm happy just being here with you,\" she replied quietly.\n\nLife was back to normal that week, Mick and I cracking bad jokes and talking shit like usual. There is no doubt the presence of Emily was infectious. He treated her like a daughter, which again, perhaps explained that question he asked me. As for all my lads, it was clear they adored here, more than one fancied her, but while she was friendly, I think she put every single one of them straight very quickly. She would be their friend, nothing more. And she had no problem telling them when they were being out of line. They were good boys, though. All of them.\n\nThough the days remained long and tiring, at least it wasn't shearing season, so Emily and I could manage some lovemaking during the week. Nothing like our sessions on the weekends, where we'd make love for hours on end, but enough to leave us both falling asleep with grins on our faces, Emily always spooned against me so I could hold her in my arms.\n\nWe were finishing up that Friday when I noticed Emily chatting away with Mick. He smiled about something before she gave him a quick hug, skipping back in my direction, kissing my cheek, before disappearing inside. He followed her in my direction a minute or so later, chuckling to himself.\n\n\"Damn, if that girl doesn't bring a smile to the face,\" he said, taking the offered beer. Taking a seat on the veranda, he added, \"She's invited June and I for dinner tomorrow night. She's cooking, apparently.\"\n\n\"She's dynamite in the kitchen, mate. Better than anything I can rustle up on the old barbeque.\"\n\n\"Well, I've eaten your dinner and it's not killed me yet, mate.\"\n\n\"She'll probably bake too. I'll give her tomorrow off so she has time to prepare. Not like we're overly busy at the moment anyway. I'll pop into town, make sure we have some decent grog.\"\n\n\"Snifter of port wouldn't be amiss.\"\n\n\"I'll pick up something you should like.\"\n\nEmily woke up early the next morning to start breakfast. She didn't cook me breakfast every morning, but I think because I'd said she could just worry about dinner that evening, she wanted to thank me for some reason. Wasn't going to complain when I had bacon, sausages and eggs ready for me to eat. Soon as we finished eating, she led me to the bathroom where she spent a long time soaping me up, washing me down, then dropped to her knees and blew me.\n\nOnce I'd cum, I had to ask, \"What the hell was all this for?\"\n\n\"Because I love you. Do I need another reason?\"\n\n\"No, sweetie. Even though this has been going a while now, I'm still getting used to the attention myself.\"\n\nShe rose to her feet and hugged me, wrapping my arms around her in return. \"Well, like you do with me, sometimes all I'm going to want to do is take your cock out, blow you until you cum, then go about my day otherwise.\"\n\n\"I'd better get dressed, otherwise I'm dragging you to the bedroom and not leaving most of the day.\"\n\nI still picked her up over my shoulder and carried her to the bedroom, gently throwing her onto the bed as I started to dress. All she did was spread her legs and start masturbating. It was rather distracting, watching two fingers disappear inside her, moaning my name constantly. She was smiling the entire time, aware she was only teasing me, though I did lean over once I was dressed and booted. \"Going to orgasm?\"\n\n\"I'd better, otherwise I'll be crazy all day.\"\n\nI left a soft kiss on her lips. \"I'll be back after lunchtime.\"\n\n\"Want me naked on the table waiting for you?\"\n\n\"Be still my beating heart. Dessert?\"\n\n\"I'll have some proper lunch ready for you first.\"\n\nI think I was distracted as Mick called me an idiot twice during the morning. Nothing dangerous, but my mind clearly wasn't on the job. It was actually nice to have something to think about other than just the farm. It had been the only thing in my life for years. Neither of us was getting much done, so by the time the clock struck one in the afternoon, we agreed to knock off the rest of the day. Letting me know he'd see me later that night, I headed inside to find a plate already on the table, Emily sitting naked behind the plate, legs spread around the plate, already fondling her pussy.\n\n\"Lunch is served, lover,\" she moaned.\n\nI ate that plate of food so fast, I was surprised I didn't give myself indigestion. Wiping my mouth of crumbs, I moved the plate and dragged Emily closer, hearing her giggle away as I buried my face. I was surprised at how quickly she had an orgasm. \"I've been fondling myself all morning, but didn't let myself cum,\" she moaned once she'd recovered, though my mouth was still busy.\n\nMade her cum once more, than we needed to clean the table. Gave it a very good scrub. Once she was dressed, we needed to head into town for groceries and to the bottle shop. I happily followed her around as she prepared the menu for the evening and also for the week. I was perfectly capable of cooking, but Emily had practically insisted she wanted to do it for me. So I made sure I helped out regardless. After shopping, we bought some booze. She did prefer wine to beer, so I bought a few bottles for herself and June, a couple of slabs of beer for Mick and I, and also a bottle of port.\n\nEmily got to work as soon as we were back. I think I ended up just getting in the way more often than not, Emily eventually shooing me out of the kitchen, gently pushing me all the way to the couch, ensuring I was sat down. She switched on the television, handing me the remote, before returning a few seconds later with a beer. \"If I have to suck your dick to get you to stay here...\"\n\nI laughed. \"Okay, okay, I'll stay out of your way.\"\n\n\"Want me to suck your dick regardless?\"\n\n\"You're getting well and truly fucked tonight, Emily. I can wait until then.\"\n\nHer eyes lit up before leaning down to give me a soft kiss. \"I can't wait until you pound my pussy again,\" she whispered.\n\nYep. Definitely going to be the death of me, but boy, was it going to be a great time until then. Mick and June arrived a few hours later, both chuckling as Emily apparently bounced around the kitchen, hearing her sing away to some music. I had the television on but wasn't really paying attention. Mick sat next to me, winning approval for the bottle of port I'd bought him. June said hello before immediately staying in the kitchen to chat with Emily. That was my only concern regarding her, the fact she had little female company, though apparently she did chat with her friends by phone constantly, usually by one of those messaging services.\n\nMick and I watched some footy, sank a couple of beers, before Emily announced dinner was ready. There was a dining table that was rarely used, usually just eating in the kitchen, so I had pulled out a tablecloth, some of the fancy plates and cutlery, Mick and June to one side, Emily and I to the other. The ladies had wine, Mick and I enjoyed another beer. The food was exquisite, Emily showing her culinary skills. I savoured every bite. Mick looked at his wife and asked if she could make it at home.\n\n\"I'll make you some, Uncle Mick. All you need do is heat it up in the oven.\"\n\nIf he didn't adore her by then, that's what sealed it in his eyes.\n\nFor dessert, Emily had baked a cake, made a filling for it, then covered it in thick, delicious icing. I'll admit, I had a big piece as it was the perfect end to the meal. After quickly putting everything in the dishwasher, we returned to the table where I poured Mick and June a glass of port. I poured a whiskey while Emily sipped at another glass of wine.\n\n\"Be back in a second,\" she said, disappearing to her room. She returned holding a folder a couple of minutes later, placing it in front of her as she glanced at all of us. \"Auntie June, has Uncle Mick... said anything recently about... me?\"\n\nMick looked a little concerned. June smiled at her. \"He mentioned how much you love Bruce.\"\n\n\"Not just how much, Auntie. I'm in love with him. Head over heels sort of love. The sort of love you no doubt feel for Uncle Mick.\"\n\nJune shuffled in her seat, leaning forward. But the smile didn't waver. Mick glanced at me. All I could do was shrug. I had no idea what she was going to say either. \"I've been fortunate to be married to my husband for many years now, Emily. It's been a life I wouldn't swap for anything. He's a good man.\"\n\n\"I think I'd have the same thing with Bruce.\" She took a deep breath and opened the folder. \"Uncle Mick, that question you asked Bruce a while ago. I know why you asked, and I love the fact you showed such care for me, and wanted to protect me, just like Bruce always has. I thank you from the bottom of my heart for it.\" Mick had to look away for a moment, clearing his throat. \"But the thing is, I do want to have...\" She cleared her throat. I knew what she wanted to say and could understand the embarrassment.\n\n\"Sex, sweetie?\" June asked gently.\n\nEmily blushed but nodded. \"I feel nothing but desire for the man next to me. But it's not just sex I want. I want to spend my life with him. I want to marry him. I want to bear his children. I don't want to be anywhere else than here for the rest of my life.\" She patted the pile of papers. \"This will explain why it's... okay for us to do this.\"\n\nNow Mick leaned forward, his interest peaked. \"What do you mean, Em?\"\n\n\"Legally, at least, Bruce and I can enjoy a sexual relationship. If it was to work out between us, and we wanted to marry, the Marriage Act of 1961 states who, or who cannot, get married. In this country, the only relations who are not allowed to marry are a person and their ancestor or descendant, nor can a brother or sister, whether whole or half-blood. Ergo, first cousins can marry without issue, and that means, as uncle and niece, Bruce and I can legally enter a relationship and could possibly marry in the future.\"\n\n\"What about children?\" June asked, sounding rather understanding already, \"Won't there be issues?\"\n\nEmily shook her head, taking out another piece of paper. \"There was research done in the United Kingdom a few years back. If Bruce and I were to try for children, the chances of any issues would be no worse than a woman trying for children after 34. But I'm a healthy near enough 20-year-old woman, while Bruce might be in his early forties but he's fit as a fiddle. If we wished to conceive, I honestly don't see an issue, though I obviously don't want to jinx it either.\"\n\nJune took a deep breath. \"Legally, it might be okay, sweetie, but... socially, people won't understand. There is still the moral argument too, about being intimate with family. Just because something is legal doesn't make it right.\" Then she looked at me. \"What do you think, Bruce?\"\n\n\"I'll put it simply, June. I love her with all my heart. But taking that step is her choice. I could try and talk her out of it, but look at what she's done to just convince you two that this is what she wants.\"\n\n\"And the stigma that comes with it?\" she wondered.\n\n\"I guess we wouldn't be telling every man and their dog about it. But Mick's understandable question and concern has obviously lit a fire in her belly and she wants to show how much this would mean to her, but considering who you are to both of us, she doesn't want to live a lie in front of you.\"\n\n\"I would love for you to understand, but more important accept our relationship if or when it starts,\" Emily said softly.\n\nMick slowly finished his port, stood up and walked towards the back door. Emily glanced at me, fear in her eyes. I patted her shoulder and gestured for June to stay where she was. He hadn't gone far, just standing at the edge of the veranda near the steps leading down. Standing beside him, we stared out in the darkness. When I glanced at him, I noticed his were glistening. I'd never seen the man cry in my life.\n\n\"I can't claim to understand, but that girl needs to be loved, and if it's you that she wants, then I accept it,\" he said, \"You'll love her. You'll provide and protect her. You'll be all she needs. June has already said she'd accept it, but that she'd want to speak to her first.\" We turned to each other and embraced. \"You're a good man, Bruce. Just treat her right. For me and your dad.\"\n\n\"I will, mate. You have my word. Never do a thing to hurt her.\" Breaking apart, we both cleared our throats, doing that man thing of confronting our feelings, then feeling embarrassed about it. \"Want to go chop some wood or something?\"\n\n\"No, I should say the same thing to her.\"\n\nWhen he did say the same thing, Emily stood up, rounded the table to hug him, bursting into tears at the same time. June then received a hug as it was obvious she'd accepted it immediately, a couple of gentle warnings about what Emily might face wanting to pursue such a relationship at most. She smiled at me, adding her approval, warning me to simply take care of her like she knew I already did, just with added intimacy.\n\nEmily sat back next to me, sighing with relief, before she shuffled across and snuggled into me. I kissed the top of her head as we relaxed. \"Well, I don't know about you, but I'm stuffed,\" Mick stated, \"You want to cook for the wife and I again, Em, I won't be saying no.\"\n\n\"We should make this a usual thing then.\"\n\n\"That would be great. Guess we'll have to get used to you two together.\"\n\n\"When not if,\" June added, \"We know it's going to happen.\"\n\n\"Wonder what my dad would say?\" I wondered.\n\n\"He'd approve, Bruce. Like us, he'd find it a little strange, but he'd see how you've looked after her nearly her entire life. And it's obvious this is what she wants above all. That's what matters. And if you want to be with her in return, then I can't think of anyone better.\"\n\nAfter waving them goodnight a little later, the sense of relief emanating from Emily was palpable. Standing together in the living room, I had to ask, \"How long were you preparing that?\"\n\n\"From the moment I realised how I felt about you, so I started looking into the legalities of it. I don't care about the morality. If we love each other, that's all that matters. As for the social aspect, if we were to go into town, no-one would know I'm your niece. They'd just think I'm your hot younger girlfriend.\"\n\n\"Well... you are now.\"\n\nShe smiled. \"Yeah, I guess I am.\" Kissing my cheek, she added, \"Wait out here. I'm going to go for a shower then meet you in the bedroom. Don't come in until I yell for you.\"\n\n\"Okay, I'll keep myself amused until then.\"\n\nI heard her call for me around fifteen minutes later, undressing before I strolled in. She was leaning over the side of the bed, feet on the floor, arse raised slightly. She looked at me with a grin as I stepped behind her. She glanced back and handed me the bottle of lube I kept on the side table. \"I don't want anal, but was hoping you might slide a finger or two, maybe your thumb in my butt while fucking me,\" she said.\n\n\"Okay.\"\n\nI'm sure she expected an argument, but as I'd told her, if she wanted something, all she had to do was let me know and we'd do it. As I was experienced, though I was eager to do certain things with her, I'd let her decide on making certain leaps and decisions. I was happy just being intimate with her, something she knew and loved herself.\n\n\"I want you to fuck me hard, Bruce. I just want to try it. Like this,\" she said, opening up her phone. She flicked through to a particular website and showed me a video she must have enjoyed watching, \"I've masturbated to this video before a few times. The sex is... something else. It's obviously porn, but there's something about it that's left me thinking 'I want to experience that too.' And you know I'll immediately say if it hurts.\"\n\nI leaned down and kissed her cheek. \"Please tell me if it does. The thought of hurting you, sweetie...\"\n\n\"I'm already nice and wet, Bruce. All I need is your cock. I had two fingers in my pussy during my shower. Now all I want is my uncle's fat cock in my tight little pussy and for him to just pound me stupid.\"\n\nSliding my cock inside her in one swift movement made her gasp. I started out nice and slow, placing a hand on her lower back, immediately grabbing her ponytail and pulled her head back slightly. Once I was comfortable, and was sure she could handle it, I immediately upped the tempo of my thrusts.",
        "\"Oh fuck yes,\" she moaned, \"Fuck my tight little pussy.\"\n\nPulling her ponytail a little harder arched her back, changing the angle as I really started to pump into her. I stroked her back while I fucked her, not wanting to cause her any discomfort. I was going to fuck her harder than I had before. Eventually resting my free hand at her side, I leaned down and kissed her cheek. \"Your pussy is mine, Emily,\" I growled, getting into the act.\n\nShe could barely say a word, making do with a whimper of desire. \"Fuck... me...\" she managed to say through my thrusts.\n\nLetting go of her hair, she flopped to the bed as I grabbed her firmly by the hips, repositioned her slightly, and really started to ram my cock into her. \"Oh fuck,\" I grunted, \"I'm going to fill you up tonight.\"\n\n\"Pull my hair again!\"\n\nI did as she asked, pulling harder still but not enough to hurt. Resting on her forearms, I switched hands as I held her in place with the other, but I couldn't get comfortable, stopping long enough to get us both up on the bed, and once the position was better, I resumed pounding her. Letting go of her hair, I gently forced her head down by the back of the neck as I leaned forward over her, really starting to drive my cock into her.\n\n\"I own your pussy, my pretty young niece,\" I growled, \"Your body is mine. Those tits. Your mouth. Your pussy. And soon your arse. I will own them all.\"\n\n\"Please,\" she whimpered.\n\n\"Please what?\"\n\n\"Please keep fucking me. God, I just want you to keep fucking me.\"\n\nI leaned down and kissed her on the cheek. \"Okay?\" I asked softly.\n\n\"I love you so much.\"\n\n\"I love you just as much. Ready for more?\"\n\n\"I want something in my arse!\"\n\n\"I'll cum first, then we can have a little fun.\"\n\n\"Go hard or go home, Bruce.\"\n\n\"Oh, I like a challenge. Good thing I own your pussy.\"\n\nI barely lasted another couple of minutes, truth be told. But those last couple of minutes, I was driving into her so hard, I earned a couple of grunts from her. But she was either a trooper, willing to put up with it, or she was loving it. Considering I could see the glimpse of a smile on her lips, I think it was the latter. Then I drove my cock into her and practically exploded, grunting and groaning so loudly, Mick and June would have heard it and thought 'Well, that didn't take long'.\n\nSitting back on my knees, I pulled her up to rest back against me, both of us needing to catch our breath. I worried I'd see tears but turning her head to face me, I was greeted by love in her eyes and smile on her face. \"I'm a little tender, but totally worth it,\" she said, kissing my cheek.\n\n\"That's all I want to hear, that you had fun, sweetie.\"\n\nShe rested back against me, wrapping my arms around her. \"I loved it when you were saying you owned me. You sort of do, like I own you.\"\n\n\"Just thought it fit what we were doing.\"\n\nTo my surprise, I'd stayed pretty hard, something she recognised as I felt her squeezing my cock with her pussy. \"Guess having a young girlfriend is helping, Bruce,\" she said, giggling away, \"Soon you'll be walking around with a constant erection.\"\n\n\"Certainly crack more of them nowadays than I used to. Invigorated these old bones.\"\n\n\"Well, I'm loving the hard bone in me.\" She gave me a look as I burst into laughter. \"Yeah, that was a little on the nose, wasn't it?\"\n\nI hugged her tightly against me. \"As I said, sex can and should be fun. And my hard bone is loving where it is too.\"\n\nRecognising when I was at full mast again, she lay forward again, making sure I had my bottle of lube in hand. Leaving my cock buried inside her, I poured some lube all over her arse including her little hole, kneading it into her firm cheeks. She giggled a couple of times, complimenting me on my strong hands.\n\nMoving to her little hole, I rubbed my thumb across it, and it provoked an immediate reaction, Emily making sure she glanced back and smiled at me. \"It tickles,\" she said, giggling away.\n\n\"It'll feel different when inside. Just getting you nice and relaxed. When I slide it in, just try and relax still.\"\n\nProdding my finger at her arsehole, I let barely a couple of centimetres slowly slide inside her. She gasped but relaxed immediately, getting used to the foreign object inside her. Sliding a little more inside her, I felt her squeeze my finger a couple of times, but each time she did, she relaxed again. Just one finger was incredibly tight, and add to that her arse was fantastic regardless, little wonder m cock was steel and she started to move her hips against me.\n\nA bit more of my finger provoked a moan, though I think that might have been my cock, before I had my entire middle finger inside her arse. As I started to slowly thrust my cock, I also moved my finger at the same time, not too fast to start out with. I was barely moving my cock either, letting her take control of that. I think it was helping her relax... or turning her on even more.\n\n\"How is it?\" I asked.\n\n\"I like it,\" she whispered.\n\n\"Let me know if you want another one inside you.\"\n\nShe wanted a second one within a couple of minutes. Sliding two fingers inside her like I did her pussy was something else entirely. And... she loved it. Absolutely loved it, rocking back on my cock while asking me to move my fingers faster in her arse. I could see her arm moving at the same time, figuring out she was fondling herself. There was a lot going on down in her groin area.\n\nWhen I started to thrust, she moaned loudly, starting to thrust my fingers into her faster at the same time. \"Oh god,\" she groaned, \"Oh god... fuck...\"\n\nLifting her up so she was on her arms, I changed the angle of my hand and thrust my fingers even faster. \"Bruce,\" she whimpered, \"Oh fuck, keep going... fuck... cum... orgasm... fuck...\"\n\nI had to keep her lifted up as she had one of the biggest orgasms I'd seen her enjoy since we started making love. She squeezed my cock, squeezed my fingers, whimpering and quivering, her entire body seeming to shudder and shake. As soon as it passed, she almost went limp back against me, breathing deeply. \"Keep going,\" she murmured.\n\n\"Sure?\" I asked, kissing her cheek.\n\nShe nodded eagerly. \"I'd love your cock there but not sure yet.\"\n\n\"Then we'll do it another night. Like my fingers?\" She nodded again. \"Want them to stay there?\"\n\n\"Until you cum, then we'll shower. I'm knackered, Bruce.\"\n\nI did have a little more fun with her though took my fingers out of her arse so I could fuck her comfortably, eventually turning her over, onto her back, so I could fuck her gently to end the night. She loved that, covering my face in kisses, her fingers moving all over my body, and once I came again, that was me over as well. It had been quite the night, in more ways than one.\n\nAfter a shower, we cuddled in bed, and I could still sense the relief Emily was feeling after confessing what she wanted. \"Guess we can now be a little more open at times,\" she whispered\n\n\"I'd like that. Mick and June, sure. Anyone else, we'll have to be careful.\"\n\n\"Guess I can't just fall to my knees and start sucking your cock in the middle of the yard?\"\n\n\"I'd love it, don't think anyone else would particularly approve.\" I cuddled her tighter. \"I'll take you out on a date again. A proper one. Dinner, drinks, dancing. We'll do it more often. They know me in town, they don't know you.\"\n\n\"How did we meet?\"\n\n\"One of those internet dating sites. I wouldn't be the first lonely farmer to use one of them.\"\n\n\"I'd love to go on a date with you,\" she whispered, \"First of many, I hope.\"\n\n\"Young woman on my arms, every man in town will be immensely jealous.\"\n\nWe only waited a week before I kept my word about taking her out for a date into town. Despite the weather being cool, she wore a short dress that showed off her legs, a small jacket to keep away the evening chill. She wore a necklace, the pendant sitting in her cleavage, and I knew exactly why she wore it, as it was the first gift I'd given her. I bought her little things online, leaving them around the house for her to find. I just went with jeans, boots, shirt. I was going to shave, but she loved my stubble. Didn't want me with a beard, but liked running her hand and feeling a slight roughness to my face.\n\nI took her to the next town past the closest as it was far larger. Dinner was the RSL club. Full of the elderly and workers, but it was well funded by the pokies, and the food it served was bloody good. We both tucked into some steaks, chips and veggies before sitting in the bar area, enjoying a beer. We found a good pub playing some decent music and a lively atmosphere. No-one knew me so I certainly received a few glances, an obviously middle-aged man walking in with a young woman on my arm. No-one said anything, of course, and Emily barely noticed. If she did, that's when I earned a cuddle and kiss on the cheek. When she headed to the bar to get a drink, she was hit on within thirty seconds. I laughed when she pointed in my direction, watching the faces of the two young men fall. I'm fairly sure I heard something along the lines of 'he's old enough to be your father'... \"God, don't give the young woman ideas,\" I muttered.\n\nPlacing our drinks down, she kissed my cheek and snuggled into my side. \"Can't wait until you fuck me later, Daddy,\" she said. I groaned loudly, which just made her giggle. \"Don't worry, I'll stick with what we usually say to each other.\"\n\nNeither of us drank too much, sticking to light beer so I could drive us home at the end of the night. It was mostly just an evening for us to relax, act like a couple for once, not stuck to the confines of our home. Ending up chatting with a few other couples, and the cover story actually went down a charm. I was a farmer looking for love, Emily was looking for love and willing to move wherever. We met up a few times before I just bit the bullet, asked her to the farm. Been together ever since. Only one asked about the age gap, both of us casually stating that we didn't care.\n\nDriving us home later that night, Emily had us stop on the side of the road between the nearest town and home so we could sit on the tray in the back and watch the stars. I'd packed a rug so we wouldn't get too dirty, and we must have spent an hour at least before she started to fall asleep against me. Making sure she was safely sat next to me, I drove us the rest of the way home before carrying her into our bedroom.\n\nWoken up by soft lips on mine the next morning, I opened my eyes to see hers gazing at me. \"I fell asleep and didn't end our date by having some really hot sex, Bruce,\" she whispered. Her hand moved down my chest towards my cock, which was rock hard. \"Should we make up for lost time?\"\n\nWe stepped into the shower an hour later, grinning away like idiots.\n\nLife continued on as normally as possible after that. Farm work continued as always. I recognised Emily started to spend more time indoors, happy to look after the house, keeping it clean, making us breakfast, lunch and dinner, even going so far as to make lunch for some of the boys during the week. She loved baking, and there were almost endless treats from time to time. After a couple of weeks, I had to ask if she was happy doing that. Earned me a hug as she replied, \"This is what I want to do, Bruce. Look after you in return. This is now my home too and I want to look after it. Plus, it does need a good clean from time to time.\"\n\n\"Well, I did my best but... you know... single bloke...\"\n\nShe stood up on her tiptoes and kissed me. \"I love cooking. I find cleaning therapeutic. And I can relax in between all the chores. You're busy all day, Bruce, but you still help me regardless when you're home at night and during the weekend.\"\n\n\"My home too, sweetie.\"\n\n\"When you marry me, I won't be the house girlfriend, I'll be the housewife.\" I raised eyebrows at how adamant she sounded. \"You will marry me... right?\"\n\nI hugged her tightly. I'd have married her then and there, to be honest. \"I'd love to, sweetie, but... that's one hell of a bridge to cross.\"\n\n\"I know,\" she said softly, \"But that's not all I want. It's my birthday soon.\"\n\n\"Ten days, Emily. I remember your birthday better than mine.\"\n\n\"Maybe not this birthday, but I'd love to... try...\" She trailed off as I heard a sniffle. \"I want a baby with you,\" she added softly.\n\n\"So I should make an honest woman of you first?\" She giggled at that. \"Well, you've just given me lots to think about, Emily. Anything you want this birthday, at least?\"\n\n\"I have everything I want in my arms right now, but I'm sure I'll think of something.\"\n\nWhat she wanted was dinner out with family. That meant inviting Mick and June along. She wanted dinner at the same RSL as our date, then a night out at one of the pubs or bars. June offered to drive us all the way, looking in the rearview mirror every so often as Emily happily snuggled into me, wearing another beautiful dress that showed plenty of skin, tight to her curves, having done her hair as well.\n\n\"Twenty-year-old girlfriend, Bruce. How old are you again?\"\n\n\"Old enough, June. Old enough.\"\n\n\"Well, certainly put a smile on her face. I look at her and see me when I was dating Mick all those years ago.\"\n\n\"Warned him he had to look after her, June,\" Mick stated, glancing back at me, \"Think he's taken my warning to heart.\"\n\nDuring the journey, my phone started to ring. No surprise there. Usually one of the boys letting me know he'd be late or missing the next day. Most of the time, it was a family problem. Considering they worked for me through little more than verbal agreement and cash in hand, I looked after them. Glancing at the lock screen, I noticed it was my sister calling. Letting Emily know, that had her sitting up and at attention, Mick and June both glancing from the front seats.\n\n\"Hello,\" I answered.\n\n\"Hello, Bruce. How are you?\"\n\nWell, that was a better greeting than I imagined. \"I'm okay, Maggie. I'm okay. You doing well?\" She was quite a few seconds, long enough I had to ask, \"Maggie, you there?\"\n\n\"It's my daughter's birthday and I haven't heard from her in months. Is she okay, Bruce?\"\n\nI glanced at Emily. \"She's happy, Maggie. She's home.\"\n\n\"Oh... You're looking after her?\"\n\n\"Of course, Maggie. She's my niece, and she came to me for...\" I didn't expect the sound of soft crying to come over the phone. \"Maggie, are you doing okay?\"\n\n\"No,\" she cried softly, \"I don't know what I'm doing anymore.\"\n\nShe didn't sound particularly drunk though her speech was slurred a little bit. She sounded like a woman now regretting some decisions she'd made. I glanced at Emily and made a gesture. She made me smile when she nodded, handing her the phone. She put it on speaker so we could hear.\n\n\"Mum?\"\n\n\"Emily? Oh, Emily! It's so good to hear your voice again. Happy birthday!\"\n\nEmily looked at me, a little confused. I could understand why. The last time she'd spoken to us, she'd been full of fire and brimstone. This was not the same woman at all. I could see June looking at me again. All I could do was shrug.\n\n\"Bruce is treating you well, Emily? You're feeling at home at the farm?\"\n\n\"Yes, Mum. Bruce and I are getting along really well.\" I had to glance out the window to hide my smile. \"And the farm has always felt like home in a certain way. I'm glad I chose to come here.\"\n\n\"Good, baby, that's... good... Look, I just wanted to call and wish you a happy birthday. I'm sorry I can't be there. I'd love to give you a hug.\"\n\nEmily looked at me, now utterly dumbfounded. So was I. All four of us in the car were. \"Um, thanks, Mum. I'm glad you called.\"\n\n\"I miss you.\" Emily couldn't say those words back because she simply didn't feel the same way. Then there was a soft cry again. \"I know you don't miss me. It's all his fault, of course. Not Bruce. He's always looked after family. No, I mean... him... tried to put hands on you...\"\n\n\"Mum... look, maybe we should speak later? Another time maybe?\"\n\n\"I'd like that, baby. I just wanted to hear your voice today. Hopefully I'll be there when you turn twenty-one...\"\n\n\"Sure, Mum. Fingers crossed things get better, then we'll see.\"\n\n\"I love you, baby. I miss you. Give my love to Bruce. I'm glad he's looking after you. I'll speak to you soon.\"\n\n\"Bye, Mum.\" She hung up and handed me the phone. \"Okay, what the fuck was that all about?\" she asked.\n\nI stared at my phone, shrugging helplessly again. \"I have absolutely no idea, Emily.\"\n\nWe put it out of our minds, Emily snuggling into my side for the rest of the drive. Letting the RSL know it was her birthday, we ensured she got a couple of presents, and we certainly enjoyed a fine meal. No fancy restaurants in the outback. Most you'll find is an RSL club and pubs that'll serve food. You want fine dining, you're driving at least a couple of hundred kilometres, and that's if you're lucky.\n\nNo idea how long we stayed out for, Emily and I certainly enjoying a few drinks together, though we still behaved in front of Mick and June, though they were now used to us kissing and cuddling, at least. June looked on with nothing but approval. It had taken Mick time to get used to it. Now he just looked away, but he could see the love on display.\n\nWe did find ourselves in a pub that had music blaring a small dancefloor, finding myself dragged up yet again. I might not be able to dance, but having a young woman cavorting against me had me rock hard in seconds. Thankfully, she danced against me in such a manner that she covered that, running my hands up her body though avoiding her tits and groin area. Mostly... By the time she'd had enough, the look in her eyes suggested she wanted to end the night in another manner.\n\nWe behaved in the car on the way back, Mick fast asleep in the passenger seat next to June. \"Bruce, can I ask a question?\"\n\n\"Sure, June.\"\n\n\"Were you having sex before that night?\"\n\n\"We were,\" I admitted.\n\nShe smiled. \"I thought so. That's all I wanted to know. You look so happy, you two. Let me know when you propose, Bruce. I'd love to help Emily plan the wedding.\"\n\n\"Won't be a big thing, June. Quite a few people know she's my niece.\"\n\n\"True, so we'll just make it a small, intimate thing. Don't need a big bash if all you want to do is confirm your love for each other.\"\n\n\"We're getting married, then we're having a baby,\" Emily said softly.\n\n\"More than one, I bet,\" June retorted, making Emily giggle next to me, \"Well, I'm always here for advice about that too, Emily.\"\n\n\"Thank you, Auntie.\"\n\n\"You're welcome, sweetheart.\"\n\nWe might have been worn out once June dropped us home, but Emily dragged me inside to our bedroom, dropped to her knees and eagerly fished out my cock, her head quickly bobbing up and down on my cock. I lasted five minutes at most. She swallowed every drop of cum before sitting back on her knees, looking rather pleased with herself.\n\n\"Now you'll last longer when we make love,\" she said.\n\nHaving got that out of her system, we undressed each other slowly, our mouths rarely apart before I lowered her to the bed. I showered her body with attention, barely an inch of skin going untouched, except her pussy, which I completely avoided. Drove her wild, earning one soft moan after another, and she was soon begging me to lick her pussy. Lowering my mouth, I inhaled her scent, earning another giggle.\n\n\"Love your scent, Emily,\" I whispered, \"That alone makes my cock harder than steel.\"\n\n\"But you prefer the taste?\" she asked softly.\n\n\"Well, while I could sit here and just sniff you, I don't think either of us will get satisfaction from that.\" For some reason, that made her laugh out loud. \"So yes, sweetie, I much prefer your taste. Want to know what I'm going to do?\" Her nod was very eager. \"I'm going to eat you out, but slowly. Really tease you until you orgasm. Then we'll make love. Sound good?\"",
        "\"Best birthday ever,\" she whispered.\n\nI teased her for so long, by the time she enjoyed her first orgasm, I think it near enough knocked her out. Considering we'd returned from town rather tired as it is, I don't think either of us had much energy, but the desire to make love was overwhelming. Sliding my cock inside her, she wrapped her arms around the back of my neck as I slowly thrust into her, just gazing into each other's eyes.\n\n\"So you'll knock me up next birthday?\"\n\nShe said it so seriously, I stopped and gulped. It didn't bother me in the least. Then she grinned and kissed me. \"We've got a year to discuss it,\" I finally replied.\n\nOnce I came inside her again, that was me done for the evening, eventually lying beside her and using my fingers to get her off again. That set off some tears, wondering why, until she finally murmured that it was simply for the fact I always cared. I could have just cum in her, rolled off and not bothered. But she still had to pinch herself at how considerate I was. I hugged her, said I'd always look after her, every way possible.\n\nThen we drifted off together.\n\nIt was only two days later that my phone rang again, this time at breakfast. It was my sister again. Another glance of surprise was shared across the table, placing my phone down and putting in on speaker. \"Morning, Maggie.\"\n\n\"Bruce...\" The voice was slurred, but not drunk, almost as if medicated. \"Bruce... are you there?\"\n\n\"I'm here, Maggie. So is Emily. Are you okay, Maggie? You don't sound well?\"\n\n\"Did I speak to you the other day, Bruce? Emily's birthday?\"\n\n\"You did, Maggie. Wished her happy birthday. Said you missed her. Maggie, are you okay? What's going on?\"\n\nWhat we saw next shocked me, and upset her daughter. She switched on her camera... Her face. My sister, despite the attitude, was a good looking woman. \"He did that,\" Emily whispered.\n\nThe bruising on her face was horrific. I'd seen reports of domestic violence on television, but seeing it for myself. I wasn't just shocked, I was beyond angry. My sister and I didn't have a particularly good relationship, but she was still blood, and deep down, I'd always loved and would always love my sister. \"Where are you, Maggie?\"\n\n\"Hospital... Not sure how long...\" She broke down. \"I think he tried to kill me... I've made so many mistakes, Bruce. So many. I don't know what to do anymore. And it's all my fault.\"\n\n\"Margaret, get that out of your head. Nothing you could have done would have deserved you ending up in hospital. Which hospital are you in?\" She told me after asking a nurse. \"Maggie, I'm coming to get you.\"\n\n\"No, Bruce. If I leave him...\"\n\n\"I'll fucking kill him if I have to. You're my sister. I've stood by long enough, watching you make these mistakes. No more. It's time to look after my family, and you're my little sister. So I'm going to arrive in a couple of days, then we're going to pack your shit up, then you're coming home.\" I glanced at Emily. She was concerned about us, I could understand that, but I smiled when she gave me a firm nod. Mother and daughter needed a heart to heart too. \"Maggie, Emily and I are going to drive there. We'll gather you when you're released. If need be, we'll pack up whatever you'll need first.\"\n\n\"Bruce, what happened with Chris... and Emily... I... Emily, I'm... I'm a bad mother. Always have been. I deserved...\"\n\nEmily burst into tears. \"We'll be there soon, Mum. I promise. Then we can talk.\"\n\n\"I don't deserve that.... You should just leave me here...\"\n\nThen the line went dead. Emily sat on my lap and sobbed. No-one deserved to see their mother in such a condition. As soon as she'd had her cry, she pulled out her own phone and called her brother. I know they spoke at least once a week. I'd occasionally have a chat with him too. He was doing well for himself. Again, she put him on a speakerphone, letting him know what happened. He couldn't drop everything to come visit the farm, but we let him know we'd take care of everything, and ensure he could talk to his mother if he wanted to when we had her back.\n\nI called Mick and let him know the situation. He arrived with June in a matter of minutes. \"You're bringing her here?\" he asked, a little surprised.\n\n\"I know, mate, I know. But you didn't see her, didn't hear her. Everything has gone wrong since she left the farm. I know what happened between dad and her was bad. But right now, she needs us. All of us. Then we need to sit down and simply get everything off the chest. Maybe if we do that, the future will be better.\"\n\n\"When will you leave?\" June asked.\n\n\"Emily and I will leave at the crack of dawn tomorrow. No idea when we'll be back. Been a long time since I've driven to the city. Shit, when Emily came out this way, she flew here.\"\n\nWe left before dawn the next morning. Well, I did. I carried a still sleeping Emily to the cab and made sure she was buckled up before I dumped our bags in the back. Mick was up to meet us, telling me to drive safely as normal, but I grinned when he said to bring my sister home too. Getting behind the wheel, I knew the way to the city, though would have to rely on GPS once I was in the city itself, though Emily could possibly guide me.\n\nIt was a long two days and nights, plenty of sights along the way, passing through small and large country towns, kilometre after kilometre of highway. It was lunchtime of the third day by the time we made it to the outskirts of the city, Emily awake and alert, so in addition to GPS, she was able to guide me to the hospital.\n\nAfter parking up, flabbergasted at the price I had to pay for parking, we headed into the reception. I felt out of place in my flannel shirt, jeans, boots and Akubra, but after giving the name we wanted to see, we were pointed in the right direction. She was in a ward shared with four others. Her face was still a mess, and I was left with little doubt the rest of her body was bruised. When she saw us, she started to cry, Emily going to her mother and hugging her without hesitation. I stood to her other side, taking her hand.\n\n\"Thank you,\" she whispered.\n\n\"I'm taking you home, Maggie.\" She nodded without a word. \"Then we need to talk.\"\n\n\"I know. I know.\"\n\n\"Do you know where he is?\"\n\n\"Probably at home.\"\n\n\"Emily, stay here with your mother.\" She met my eyes. I thought she'd say it wasn't worth it, but a quick glance at her mother firmed her mind. All she did was meet my eyes and nod her head. \"Good girl. I've got your address in my GPS. I'll collect your things then return here. Emily and I will stay close by until the hospital says you're good to go.\"\n\n\"Bruce...\"\n\nI shushed her. \"Not now, Maggie. I've watched from afar for too long. Time for your older brother to finally put his foot down. You are coming with me. No arguments.\"\n\nShe squeezed my hand tighter, watching tears cascade down her cheeks. \"I don't deserve you.\"\n\n\"You do as you're my sister, Maggie. I love you, and I'm... I'm the older one and should have been as responsible for you as I've been for Emily. And I see my sister in hospital right now after some scumbag...\"\n\n\"Just don't get in trouble.\"\n\n\"Trust me. What's his name?\"\n\n\"Brian.\"\n\n\"Good. I'll know who to hit when I see him.\"\n\n\"Fuck him up, Bruce,\" Emily stated.\n\nI strode out of the hospital with fists clenched, no doubt murder in my eyes and on my face. I hadn't liked my sister for a long time, but I always loved her. You always loved family. She was blood. She was kin. And no-one, man nor woman, deserved what had happened to her. I got behind the wheel of my ute and practically tore out of the car park, heading straight for her house.\n\nIt was quite the dump, that wasn't a surprise. Pulling up on the road outside, I was tempted to go armed with a tool of some kind, a wrench or a hammer. But I'd get pulled up on a murder charge. Striding down the driveway to the front door, I banged on it until it was answered. Didn't recognise the guy at all, but I figured this was Brian.\n\n\"You Brian?\" I asked.\n\n\"Yeah, who the fuck are you?\"\n\n\"You know someone called Emily?\"\n\n\"Yeah, she's the daughter of some slut I know.\" I felt my fists curl. \"Shame she left. Would have been some good pussy.\" I could smell the alcohol on his breath. He was already drunk so little wonder he barely thought about his responses. \"Who are you again?\"\n\n\"You with Maggie?\"\n\n\"That slut? Yeah...\"\n\nI smacked him in the face before he could add anything else. He went staggering back down the hallway as I stalked in after him. He was already bleeding from the nose, but managed to take a swing in my direction. I wasn't going to fight this prick fair, putting my boot straight between his legs. He went down to his knees, and my boot connected with his face. He was lucky I wasn't wearing steel-capped boots, otherwise I probably would have killed him. Instead, he ended up on his back, groaning away.\n\nCrouching down next to him, I grabbed him around the throat. \"Now, Brian, listen very carefully. I'm going to be grabbing Maggie's things. She won't be returning to this dump you call a home. I would suggest you lose all her details. And if I even get a hint of you trying to contact her or Emily, I will personally tie you up like a sheep, drive you to the outback, and bury you in a deep, dark hole.\"\n\nI saw a hint of recognition in his eyes. No doubt Maggie had mentioned a brother. \"You're... him...\"\n\nI squeezed a little harder. \"Did you understand what I just said, or do I need to stamp on your balls to make sure you do?\" He was no doubt used to pushing around and hitting defenceless women. Unfortunately, our country had a long standing domestic violence issue. Too many dickhead men at times. But he was nothing but a coward, nodding as I stood up over him. \"Very good. Now, I'm going to grab her things. You just lie there, think about the decisions in life you've made to this point. You want to take this further, you're more than welcome. But I don't particularly want to go home with a murder charge looming over me.\"\n\nI packed three bags of what I figured was her things, grabbing one or two items I knew would prove of sentimental value, putting it all in the rear of the cab on my ute, before performing one last check of everything. I could see one or two things that she might want, but all that mattered was getting her away from this life. And away from him. By the time I was ready to leave, he was laying back on the couch. When I stalked towards him, he almost cowered with fear.\n\nCrouching in front of him, I asked, \"Do we need to have a conversation?\" He shook his head. \"You beat my sister. The urge to return the favour and more is incredibly overwhelming. I have adrenaline flooding my veins right now. Voices in my head telling me to just beat you senseless. But it won't prove anything. What does matter to me is that my sister and niece are now safe. It's time I took care of my family. All of them.\"\n\nWith that, I walked out of the house, sat in my ute, and drove back to the hospital. Taking a seat next to Emily, her mother was asleep so she took my hand, leaning her head against my shoulder. \"Sorted?\" she asked.\n\n\"Sorted,\" I replied.\n\nAsking how long my sister was going to be kept, once they learned I was her brother, they told me she was being kept for observation for another couple of days, and for the swelling to go down, then they'd likely release her. Asking if she'd be okay to travel, explaining the situation and my plan, they suggested it was actually a good idea, obviously aware she'd been a victim of domestic violence.\n\nEmily and I found a bed and breakfast only a short distance from the hospital. I called Mick and let him know the situation. He assured me the farm wouldn't collapse without my presence, telling me to just do the right thing. After grabbing some dinner, nothing more than a bite from a nearby takeaway, we snuggled in bed later. Despite the situation, we made love, though it was the slow and gentle sex that made up the beginning of our relationship.\n\nWe spent most of the next two days with my sister when visiting hours allowed. She spent much of the time asleep, recovering from her injuries. Whenever she was lucid enough to talk, I shushed her, stating everything would be discussed when we got home, but let her know that the situation with Brian was sorted out. That earned a grab of my hand, kissing it before she simply whispered her thanks.\n\nShe was released the fourth morning after we'd arrived, given prescriptions for a few medications we could pick up nearby. Wheeling her to the ute, Emily got up into the back seat, picking up her mother and carefully sliding her inside so she was laying down, head on her lap. I stopped at a nearby pharmacy to pick up her medicine, including some other things I guessed she'd need, then a convenience store to pick up a load of snacks and drinks, before turning us towards the farm.\n\nIt was a long couple of days as I didn't stop except for the evening. Maggie slept nearly the entire way, pretty much knocking her out with sleeping tablets, while ensuring she took the pills required. Emily sat in the back with her the entire time, making sure she was comfortable. I would glance in the mirror to earn a loving smile in return.\n\nPulling into the farm, Mick and June were waiting for us. Noticing me pick up my sister from the back seat, having been startled at how light she was when I'd done so at the hospital, they followed me in as I carried her to Emily's old room. The living situation didn't bother me at that moment. My sister was going to find out and she'd have to deal with it.\n\nJune pulled back the blankets so I could place Maggie down, taking off her shoes, before lying her back and covering her. The swelling had finally gone down but the bruising still made me wince. Having undressed her in the hotel on the way to make sure she had a wash, her body was a mess. I had no idea if she'd done drugs or not, but the bruises and other scars suggested Brian, or god only knows who... well, the urge to go back and finish the job was on my mind while I was driving the three of us along.\n\n\"What have I done to deserve this?\" she whispered. Emily heard the croak and returned a few seconds later, Maggie sipping at the drink before lying back on her side. \"Bruce, all I've done for years...\"\n\n\"Maggie, when you're feeling better. We'll talk about everything. Right now, you just need to get better. So what you're going to do is lie here and relax. There's a TV you can watch. I grabbed your phone and you can connect to the WiFi. We'll bring your meals in until you feel fit enough to get onto your feet. If you need help having, just give either of us a shout.\"\n\n\"We need to talk later too, Mum.\"\n\n\"I know, baby,\" she whispered, looking at us with wet eyes, \"I made a mess of everything.\"\n\nIt was weird having my sister back in the house, but as she was confined to the bedroom for the moment, Emily and I lived our lives mostly the same. The day after arriving back, I was back at work, Emily enjoying her role as house girlfriend, cooking up a storm for our first night back after living on crap food for around a week. Mick and June did join us for dinner that night, and we discussed the situation quietly. Emily was adamant nothing was going to change. Her courage impressed me, and I was equally as adamant. We were consenting adults, and by the law, doing nothing wrong. Society would never know the real truth, and morals... Well, we didn't think our love was immoral either.\n\nI passed by the bedroom door to find the pair deep in discussion more than once. My sister was slowly healing, but I think the wounds inside were far deeper than those on her skin. I had this feeling she carried some turmoil. I just didn't know what, but I had a further feeling it led to where she now was in life. But I when I heard laughing for the first time between them around the third or fourth day, I walked away, grinning to myself. At least their relationship was mending.\n\nIt was a week before Maggie was able to move about by herself without needing help, hobbling into the kitchen on a Sunday to join us for breakfast. The bruising was slowly fading, but she looked incredibly pale and thin. Emily placed an enormous plate of food in front of her and ordered her to eat. \"Every morsel, Mum. Need to put some meat back on those bones,\" she said.\n\nMaggie glanced at me. \"She do this for you?\" she asked, surprising me with a smile.\n\n\"Every Sunday, Mum. And I generally cook for him every evening. Make his lunch every day. Bruce is a hard-working man. I like looking after him, just like he's looked after me.\"\n\nMaggie couldn't meet my eyes, moving them to her plate. \"Maggie, we'll talk about it. Don't worry.\"\n\n\"It was him...\" she started, \"He was... I don't know even know how to explain it. The last in a long line of men I seem to find myself with?\"\n\n\"We've all made mistakes, Maggie.\"\n\nShe shook her head. \"My life has been one giant mistake since...\" She trailed off and sighed. \"Yeah, guess we'll need to have that talk later.\"\n\nAfter breakfast, I escorted her outside for some fresh air, sitting her down in the chair on the veranda, Emily and I sitting to either side of her. I talked about life on the farm, what we were doing nowadays. Being the time of year, we were now seeding the fields as we grew wheat, barley and oats. Had a lot of cows and cattle, some for milking, others for meat. And, of course, sheep. Lots and lots of sheep.\n\n\"Have to diversify in today's world. No farm can focus on just one or two fields of production. Shit, some farms around here are going organic and all that sort of stuff.\"\n\n\"Doing well for yourself?\" she wondered.\n\n\"Milk sucks. Has done for years. But meat will always sell at a profit, particularly if we have good qualify. Wool will never be an issue. The crops are the newest addition. Done well so far. Yeah, I think dad would be happy with the progress.\"\n\n\"God, feels like I've just wasted my life,\" she muttered.\n\n\"Maggie, you hated living here most of the time. This life never suited you, though... I guess the city hasn't exactly worked out either.\"\n\n\"True. Can't lie about that.\"\n\nMaggie was understandably a little lost during the week. I have no doubt she noticed the affection between Emily and I. The only thing we didn't do in front of her was kiss, but there were the same number of hugs, whispered words of loves, and everything else one would expect to see from a couple in love. I noticed more than one glance from my sister, but I was surprised that she didn't raise any concerns. Perhaps she just thought her daughter had the hots for me and I was playing along.\n\nTo my surprise, she never asked where Emily and I were sleeping. I certainly didn't put any pillows and blankets in the living room to suggest I was sleeping on the couch. Sure, there was a third room, but that was mostly for storage, with a bed in there that was unmade. She never noticed Emily and I go to bed together, generally as she was in bed early each night. Emily and I certainly didn't stop making love, though made sure we kept the noise to a minimum. It was a little frustrating as Emily loved being vocal nowadays.\n\n\"I want to go see our parents' tomorrow,\" she said at breakfast on Saturday. Seeing the surprise on my face, she smiled. Now that the bruising had basically disappeared, she'd been sleeping okay, and was on the mend, she was starting to look like her old self. \"While we're there, I guess the three of us should talk.\"\n\nI wondered if she meant talk about what was obviously going on between Emily and I.\n\nMaggie wanted to walk the next day. She still hobbled slightly, holding her arm, Emily holding my other hand, as we strolled up to where our parents were buried, our grandparents and other generations before them. We'd owned this land since the first white settlers had arrived in the area. Emily had brought along a rug and picnic basket, figuring we'd be spending a while there.",
        "As always, the first thing I did was have a drink with dad, opening the bottle of whiskey and pouring two shots, sipping at one while pouring the other where he was buried. It was a tradition I'd done since I'd first put the old man in the ground, and if or when I had a son, hoped he'd do the same thing with me once I dropped. Laying the rug on the ground, Emily and I sat down as my sister sat on her knees near my father's plaque.\n\nWiping it clean of dirt and dust, she leaned down and kissed it. \"I miss you so much, daddy,\" she whispered, \"So much that it hurts every single day. And it has hurt ever since the day I saw you lowered into this place.\" I took Emily by the hand as Maggie sat back on her knees, gazing out over the horizon. I think whatever was coming was for our benefit as well as hers.\n\n\"I always loved you, daddy, but I knew when I was growing up that it was more than just the love of a daughter for her father. Well, it was that, it was always that, but it was always something more. I knew it was wrong, I knew it was taboo, but I always thought that maybe, because I loved you so much, that you would love me in return the same. Once mother died, and losing her hurt me because I know it broke your heart, I thought I could... help you. Have you.\n\nBut you broke my heart by rejecting me, daddy. I would have done anything to make you happy. I would have been your woman from the moment I was of age until the end of our days.\" She choked back a sob. \"I wanted you to be my first, daddy. I wanted you to make me a woman. I wanted to be with you, to feel you inside me, to take me to our bedroom every night and make love. But you said no, that it wasn't right, that I wasn't going to replace your mother. I never wanted to replace her. Never! I was going to be a good daughter by making my father happy. We would have made love every night. I would have been a good little housewife. And I would have been happy.\n\nBut you hurt me with everything you said, and that's why I had to leave. I couldn't remain here, being in love with you, and have to deal with the fact I wanted but couldn't have you. I know I'm... weird. I know what I wanted is wrong everywhere. But I didn't care. I just wanted you.\"\n\nShe took a deep breath, wiping her cheeks. \"You left me thinking I was worthless of any real love. I knew what I wanted was thought to be wrong, but I left here thinking no-one would want a freak like me. And I could never be with any sort of man who would remind me of a you. A good man. A proud man. A kind man.\" She glanced my way, tears falling down her cheeks. \"Someone like my brother is too, daddy. I look at my brother and see you in many ways.\"\n\nShe turned back to the plaque and kissed it. \"I'm so sorry for leaving how I did, daddy. But I couldn't bear coming back here, knowing how I felt, you knowing how I felt, yet you just wanted me to act like the good little daughter I'd always been. I couldn't do that, daddy. I couldn't lie to myself. It hurt me too much. So that's why my life is like it is. I didn't deserve real love. I didn't want it. Emily's father... Chris's father... they were half-decent at best. But with every passing year, knowing you're no longer here, that I can't even speak to you...\" She stared to sob, lying on the grass. \"I'm sorry, daddy. So, so, sorry. But I loved you more than life itself. All I wanted in my life was for you to love me the same way. Then you were gone... and I couldn't come back.\"\n\nEmily cuddled into me, knowing she was crying too. Hell, I could feel the moisture in my eyes. Suddenly, everything was now very clear. My sister was a broken woman. The fact she loved our father in that way? Yes, it was a surprise, but to see her so clearly shattered in front of me... the fact she loved him like that didn't matter. But it explained everything, in a way.\n\nStanding up, I walked over and helped my sister to her feet, holding her in my arms as she sobbed. Cried harder than I'd ever seen. Years, even decades of sorrow and regret was flooding out. Emily walked over and hugged her, wrapping my arms around both of them. I let her cry for as long as she needed. That sort of heartache for so long, no wonder she was a mess.\n\nShe calmed down a little later, eventually just sniffing, before leaning back to wipe her cheeks. Leading them both back to the rug, we sat down and I poured her a shot of whiskey, pouring one for myself. I offered one to Emily, but she shook her head. Maggie knocked it back, holding the glass out for another one, no surprise her hand was shaking. She knocked the second one back slower before she sighed.\n\n\"How long have you two been having sex?\"\n\n\"About two months after I got here, Mum.\"\n\n\"Guess I can't really say anything, otherwise I'd sound like a hypocrite.\"\n\n\"It does explain a few things though, Maggie,\" I said, meeting her eyes, \"I had no idea...\"\n\n\"I'm sure you remember the arguments, but you probably only heard yelling, not the content.\"\n\n\"I don't really remember to be honest. But, yeah, I remember the arguments.\" I ran fingers through my hair. \"Shit, I mean... what you're talking about, Maggie... I know what Emily and I...\"\n\n\"I'm proud of you, Mum.\"\n\n\"You are?\"\n\nEmily smiled. \"That took courage to share those sort of feelings in front of us. The depth of emotion, the heartache you must have felt and still feel, the fact you knew it was wrong but were determined to try and make it work...\"\n\n\"I thought I could convince daddy it was okay, that only we would ever know,\" she whispered, sniffing again, \"But he never gave in. Never came close to even thinking about it. He never called me any names, but I knew he thought I was weird, deviant, any other word you can think. That's what I've thought of myself for years now so... I've spent most of that time just trying to forget about it. But that's just impossible without... help.\"\n\n\"That night, Maggie... before Emily came here...\"\n\nShe sighed again. \"I barely remember, Bruce. Gods honest truth. Brian made sure I spent most of the time fucked up, one way or another. Again, comes to wanting to just forget. At heart, I knew he was a fuckwit but...\"\n\n\"So that phone call?\" I wondered.\n\n\"He spun me bullshit, and in my frazzled mind, I believed him. My tart of a daughter coming onto my boyfriend, suggesting she should have him instead of me. You wouldn't know the sort, Bruce, but I've obviously known some real pieces of work.\" She started to cry again. \"But I know I've been a horrible mother most of her life. And then there's Chris...\"\n\n\"What happened, Mum? Why has he basically disappeared from our lives?\"\n\n\"I thought he was going to be like me, that he'd want to be with his mother, so I let him know that was okay, that I'd be willing to give myself to him, unlike my father, who denied me. It... horrified him. He said I was completely fucked up in the head. He packed up within a couple of days. I haven't heard from him since.\"\n\n\"Fucking hell, Maggie,\" I muttered.\n\nShe cried a little harder. \"I thought I was doing the right thing. I knew Emily wasn't a lesbian. My son is a good man, but I thought if his mother has such thoughts, then maybe it's... genetic or something. But all he had to do was say no, he wasn't interested, and would have left it at that.\"\n\n\"Did you want to have sex with my brother, Mum?\"\n\nShe shrugged. \"I don't know. Shit, being with him would be better than most of the idiots I've been with over the years. But it was more a case of what he wanted, not me. If he wanted me, I would have... liked it. At least I knew my son did love me.\"\n\nI ran fingers through my hair again. \"Shit.\"\n\n\"I'd just like to hear his voice again,\" she said softly.\n\n\"I'll sort it out, Maggie.\"\n\nShe looked between the pair of us. \"I should be mad at you, Bruce.\"\n\n\"Mum...\" Emily warned.\n\nTo my surprise, she smiled. \"I said I should be mad, Emily, but I'm not.\" She took a deep breath. \"I needed to get that off my chest. The heartache will always remain, but... coming back here has done me some good. And seeing how you two are together, I can almost close my eyes and imagine it's me and daddy.\" She opened her eyes and looked at me. \"How long can I stay?\"\n\nI took her hand and squeezed it. \"You're home, Maggie, so as long as you need to stay.\"\n\n\"But Bruce and I are together, Mum. Can you handle that?\"\n\n\"It'll take getting used to, I guess, but you're now a young woman, capable of her own decisions. And considering I've just confessed I was in love with my own father and wanted him intimately, I guess I can't really give advice.\"\n\n\"We're going to get married and I want his children, Mum. This is serious.\" She paused before adding, \"I'm really surprised you're not freaking out a lot more about this. It's actually worrying me.\"\n\n\"My life has been a mess since I left this place, Emily. The only place I've ever felt at home was here, despite the fact I hated being here. And I know you felt the same way. I remember how you cried whenever you left here after your visits.\" She looked at me. \"And I know what Bruce is like. No surprise he practically ordered you out here so you were safe. He's a good man, a good provider, and he'll make a good father to your children.\"\n\nI looked around. \"Right, where is the real Maggie and who is this impostor?\"\n\n\"I'm feeling better, Bruce. I'm still sore, and still hurt, but I'm feeling better. Better than I have in a long time. Helps when one has a clear head. Sure, that doesn't really help with the memories that come flooding back, but I think it's about time I faced instead of running from my demons.\"\n\n\"Remember when we were little and we actually liked each other?\"\n\n\"Brother hugs?\"\n\nI glanced at Emily, who returned a grin. \"Yeah, brother hugs.\"\n\nReturning home together, it seemed a weight had been lifted from the shoulders of my sister. I wasn't the only one to notice during the next couple of weeks. Emily said she couldn't remember her mother smiling as often. It helped she was also not taking anything except the medicine provided. Even Mick and June suggested the new Maggie was a breath of fresh air. We obviously couldn't tell them the real truth about my sister and why everything fell apart, but coming around for dinner one evening, the five of us enjoying a long, pleasant conversation late into the evening.\n\nEmily and I were clearing up later when my sister wandered in. \"So going to fuck my daughter tonight?\" Emily giggled while I just stared at her. \"Look, I know I'm getting in the way here. But I don't want to go back to the city, so I'm going to look at the next town over, the bigger one with the RSL. Maybe I can get a job there? I've done waitress and bar work. See if I can find a house or room to rent.\"\n\n\"You don't have to, Maggie. This is your home too.\"\n\n\"It's nice that you still think that, Bruce. But, more importantly, this is your home with Emily, and once you start having children, you're going to need space to raise them. And they won't need their... shit, I think I'd be their grandmother and aunt, all at once.\" She put a hand to her forehead, shaking her head. \"This family at times...\"\n\n\"Heard from Chris?\"\n\nThat earned a smile. \"He messaged me during dinner. He's going to call me tomorrow. I'm going to explain everything and see what he says.\" She glanced away. \"Think I'm weird?\"\n\n\"No, Mum. Not weird. Sometimes, you just can't control your feelings.\"\n\nTurning off all the lights, we headed to our respective rooms, Emily hugging her Mum, the relationship mending with time and healing, and then she hugged me. \"You're a good man, big brother. Keep looking after my daughter for me.\"\n\n\"Don't even have to ask. But I will.\"\n\n\"Good. And Emily? You don't have to keep the noise down. I'll just turn the TV up or put something in my ears.\" I glanced at Emily, who was already blushing, my sister laughing to herself as she wandered into her room.\n\nFinding myself dragged to our bedroom, I kicked the door shut as Emily was rather eager to get undressed, and me undressed with her. As soon as my cock was free, she was on her knees again. I'd learned that she loved being on her knees when blowing me, admitting she found it more submissive than if I was lying back on the bed. I was happy either way, but looking down into her eyes, watching my cock disappear into her mouth, I certainly appreciated it.\n\n\"Fucking hell, Emily.\"\n\n\"I want it on my face.\"\n\n\"Okay,\" I groaned. Sure, we'd never done that before, but what she wanted, she generally got.\n\nShe could now take my entire length, getting every so excited every time her nose bumped into me. Caressing her hair, she never stopped looking up at me, the eagerness in her eyes to make me happy making both my heart and cock swell. She learned plenty of little tricks when blowing me, had learned that my balls also liked attention, but the best thing I liked to see was that she was enjoying it just as much. Considering she'd whisper dirty thoughts during the day, there was no doubt she loved doing it for me.\n\n\"God, so close,\" I moaned.\n\nShe stopped sucking, pulling back and sitting with a smile as I stroked myself. Warning her to close her eyes, I quickly covered that beautiful face in my cum. As soon as I'd recovered my breath, I looked down and immediately grabbed a towel. She gently grasped my wrist, opening her eyes and giggling. \"I love the feeling. Like you've marked me, Bruce,\" she said.\n\n\"Well, that's one way of looking at it.\"\n\n\"It's your birthday soon. I've already thought of what to do for you.\"\n\n\"Oh, and what's that?\"\n\nShe happily bounced up onto the bed, resting on her knees and lowering herself down, grasping her cheeks and spreading them wide. \"I'm thinking you take my arse on your birthday.\"\n\n\"Fuck it, if that's what you want, Emily, I'm not going to say no.\"\n\n\"You've had your fingers up there often enough by now. I'm used to that. I'll get used to your big cock.\"\n\nGrabbing and turning her so she was sat down, I wiped her face clean of my cum before kissing her. \"I'd love you to do that again too,\" she whispered, \"You make me so happy, Bruce.\"\n\nGently pushing her back, I got down on my knees in return, spread her legs nice and wide, and simply went to town on her pussy. She didn't hold anything back that night. In fact, I was left thinking she was putting it on a little. Whatever it was, she certainly enjoyed her first orgasm rather quickly, and once I had her lubed up and slid a couple of fingers into her arse, earning that sort of smile I always loved seeing, she enjoyed quite a few more until she had to plead with me to keep going... then stop, which I did, of course... then keep going... then finally stop for good.\n\nI stood up, looking down at her as her body quivered, turning onto her side, giggling away. \"Oh my god,\" she cried, \"What the fuck do you do to me? How is it possible to cum that hard, that often?\"\n\nRock hard again, I lay down next to her as she needed a few minutes to just cuddle me first. I'd made sure to wear her out a little bit, wrapping an arm around her, feeling her fingers trail up and down my chest before moving down to my cock. \"No problem there, sweetie,\" I said.\n\n\"Is it just me, or is your cock even bigger and harder nowadays? Or maybe it's just my small hands?\"\n\n\"Well, I don't think it's any different, though I'm sure the fact I'm fucking a hot twenty-year-old helps.\"\n\n\"And the fact that twenty-year-old is your niece?\"\n\n\"That just adds a good level of kink.\"\n\nShe almost snorted at that, laughing away. \"Well, it's going to be kinky when you're buried in my arse in a couple of weeks,\" she breathed into my ear.\n\nStraddling my lap a few minutes later, she rode me nice and slow for what felt like hours. I didn't care how long it was, it felt fantastic the entire time, Emily either resting back when riding me, or lying down to kiss me as I'd gently thrust up into her. She enjoyed more than one orgasm while I enjoyed two myself, amazing myself that I only went partially soft, Emily making sure my cock remained inside her though she stopped moving until I was solid again.\n\nMy sister had never really liked living on the farm when growing up. I could understand why. It was incredibly isolated, miles and miles from anywhere. The nearest large town was a distance away, and even that lacked a lot of entertainment for kids. To my surprise, though, she walked into the kitchen Monday morning in a flannel shirt, jeans and boots. Even Emily did a double take at that.\n\n\"While I'm here, I want to help out,\" she said, \"I've sent an application to the RSL. I have plenty of experience working behind a bar. They said they'd let me know.\"\n\n\"I'm rather regular there. I'll put a good word in for you. Er, sure you want to get involved?\"\n\n\"Hard work will do me some good, Bruce. I've been idle for too long. Good diet, exercise, some sun and fresh air. One day, I might be able to look in the mirror and not hate myself.\"\n\nI stood up and hugged her, feeling her hug me back in return. \"Nothing to hate, Maggie. We've all made mistakes. I should have stepped in sooner.\"\n\n\"Bruce, I spent years detesting you for no reason. I wouldn't have listened. Too many dickhead men in my ear, and considering what I was doing at the time, trying to forget by any means necessary...\"\n\nI obviously gave her some simple tasks to start with, but she got stuck right in with everyone else, and it seemed to do her the world of good. She was exhausted by the end of the day, using muscles she didn't know she had, earning herself a long soak in a hot bath after each day. Emily cooked up a storm, the three of us sitting at the dinner table, chatting away about any old thing. Seeing mother and daughter mending their relationship was beautiful to see, and while things had never been that bad between my sister and I, we'd both made mistakes in our relationship. I was just pleased to see her happy and smiling again.\n\nOn my birthday, Mick and June, Emily, my sister and I headed out for dinner. You guessed it, the RSL. It honestly was one of the few places to go that was within a reasonable driving distance. It comes with living in the outback. The nearest large town with any sort of variety was at least three to four hours away.\n\nSitting at the table for dinner, it was reasonably busy, the hum of conversation and laughter. The food was excellent as always, the steaks sourced locally. Not my beef, unfortunately, but I wasn't going to stop going for that reason. After we'd finished desert, I stood up and helped Emily to her feet. Before she could react, I dropped to a knee and took the box I'd hidden in my jacket.\n\n\"Emily, you make this old man the happiest man on this green earth, and what I've realised from very early on since you arrived is that I want to spend the rest of my life with you?\" I opened the box to show her the ring I'd bought. \"Will you do me the honour of being my wife?\"\n\nShe couldn't answer verbally as she was already crying, managing to nod as I carefully slid the ring onto her finger before standing up to kiss and hug her. There was loud applause from everyone around us, and a bottle of wine quickly arrived on the table, compliments of the manager. \"This is what I wanted for my birthday,\" I whispered into her ear, \"I love you with all my heart, Emily.\" She couldn't reply, too busy sobbing herself. Nearly got me going again.\n\nWe received congratulations from anyone who was leaving. Mick shook my hand warmly, June kissed my cheek, Maggie doing that plus giving me a long hug, before the two women sat with Emily and started planning the wedding straight away. I would have groaned, but I knew Emily was now going to be extra excited until the wedding day. \"I want to get married soon,\" she did say, \"We should get married at the farm.\"\n\n\"You see, I was thinking the same thing, Emily.\"\n\n\"It was meant to be, Bruce.\"\n\nThere was further good news as my nephew called as we enjoyed drinks later. After everything that happened, particularly with his mother, he wanted to come spend time at the farm. He wondered if it would be possible to visit and work at the same time. Assuring I had bloody good internet, considering I had to do most of my own business online, he said he was already looking into flights to the nearby strip, and that he'd arrive within the week. Emily was even more excited to hear that. Maggie lowered her head and silently wept, Emily cuddling her. I told Chris to send me the details of his flight when he'd booked them.",
        "That night, once back at the farm, Emily and I enjoyed anal sex for the first time. One thing I'd learned is that Emily researched things, so she'd already prepared herself and everything we needed to enjoy it. We stripped each other nice and slowly in our bedroom, falling to her knees where she practically made love to my cock with her mouth, asking where I wanted it. As it was my birthday, I asked her to swallow it. She was delighted to hear that, blowing me to completion and eagerly gulping it down.\n\nI returned the favour of course, eating her pussy just to the one orgasm before I turned her over and started to get her ready. Lots of lube, taking it slowly with a couple of fingers, cock sliding into her pussy nice and slow.\n\n\"Oh god, I can't wait,\" she murmured.\n\n\"Good things come to those who wait, my cute fianc\u00e9e.\"\n\nShe glanced back and grinned. \"I can't wait until you're in my arse, future husband.\"\n\nI usually only slid two fingers into her arse when fooling around. This night, considering I would be sliding my cock into her, I added a third finger. I worried as always but she smiled the entire time, really enjoying it. I had to eventually stop fucking her as I was getting far too excited, far too quickly. Lubing up my cock, I asked once if she was ready. Her nod was so eager, I was left thinking she wanted this far more than I did. Not saying I didn't, but she'd proven eager to experiment and try new things.\n\nI'll be honest, we both had a lot of fun. I took it nice and slow, and her arse was incredibly tight. I mean, it was just ridiculous, and considering she had a pert little butt to begin with, I had to resist the primal urge to just nail her nice and hard. I did eventually lean forward, feeling my cock deeper inside her, Emily lowering herself down and gasping loudly.\n\nI didn't last much longer, both of us chuckling as I unloaded inside her. She wanted me to keep it inside her for a while longer, before whispering that she wanted to try riding me that way. I think she loved that a lot more as she could control it. I was surprised that she did start to bounce rather fast, but her face was an absolute picture. When I licked my thumb and fondled her clit, her next orgasm was something else entirely. She had to get off my cock as she was just far too sensitive.\n\nNeeding a good soak after that, Emily leaning back against me as we enjoyed a bubble bath and all sorts of other things she'd poured in the water, while also enjoying a bottle of wine. \"Did you love my arse, Bruce?\"\n\n\"I did, Emily, but you know I prefer pussy.\"\n\n\"Honestly, I do too. I had fun, but your fingers are... easier. But I do like it when you play with my butt.\"\n\n\"Tell you what, we can get some small toys or something. Doesn't just have to be my cock and fingers. I'm not completely up to date, but I know they sell all sorts of things online now.\"\n\n\"I've bought sex toys myself, Bruce, so we can look together. Maybe a plug and a dildo or something? Maybe we can use that while you also fuck me?\"\n\n\"Honestly, Emily, whatever you want. All that matters to me is that you're happy, and I'm willing to do almost anything. Notice I said almost.\"\n\nShe giggled. \"Yes, I can guess what you mean too.\" She snuggled back against me. \"You will have to fuck your wife in the arse after the wedding though.\"\n\n\"Okay, I'll agree to that.\"\n\nWe both fell asleep in the tub, waking up to find my sister, her mother, standing next to the tub, laughing away. Thankfully, the water was still lukewarm, and she told us to go to bed. \"You're leading my daughter astray, Bruce.\"\n\nI returned a cheeky grin. \"That I am.\"\n\nEmily snorted. \"Please, you think I'm that innocent with him nowadays?\"\n\nMy sister's face was priceless for a few seconds before she turned and walked away, laughing her head off. Emily glanced at me, looking smug, before suggesting we should really head to bed.\n\nA week later, Mick and I were waiting at the airstrip. \"Now this feels familiar,\" he said. I gave him a glance. \"Best thing you ever did was invite her, Bruce. The farm has never felt as alive as it does. Your old man and mother would be looking down proudly.\"\n\n\"Thanks, mate.\"\n\nThe little Cessna landed, six people disembarking, including my nephew. He grinned as he noticed Mick and I waiting for him. Shaking his hand, I took his things, placed them in the back before we got into the ute and began the long journey home. Living on the other side of the country, he'd had to change planes twice to make it to even close to where we lived. Asking after his mother and sister, I assured him they were eager to see him, but they were already preparing dinner for that evening.\n\nHearing our vehicle return, they hurried outside to greet us. Emily shrieked and practically leapt on her old brother, both of them laughing away. The siblings had always been close, and it was nice to see that relationship remained into adulthood. Then came mother and son... Maggie cried. She sobbed as her son opened his arms and held her close. The fact he was already crying...\n\nA lot of healing was going to take place, but I think seeing his mother finally looking fit and well, but more importantly happy, meant the world. And now that I knew what had really broken their relationship, no doubt they were going to need a few discussions going forward.\n\nGathered around the table that evening for dinner, Chris already knew about our relationship as Emily had told him, but figured she'd probably have to sit down and talk to him in person about it. Maggie beamed. She had her children back with her, and she was home again. I think a little part of her had always regretted leaving the way she did.\n\nAfter dinner, I grabbed a pair of beers, beckoning my nephew to follow me. We wandered around the backyard, sipping at our beers. \"Anything you want to know, Chris?\"\n\n\"If you're worried about what I think about you and Emily, I wouldn't worry, Unc...\"\n\n\"Just Bruce, Chris. We're past those sort of titles.\"\n\n\"I approve, Bruce. It's clear she's absolutely besotted by you, and I know you love her just as much in return. I'll be here for the wedding.\"\n\n\"We're considering telling all the lads here. We're tired of keeping it hidden, always having to be careful, even in our own home at times. Emily is of the opinion that people can judge, and that's their right to do so, but we're adults, we're in love, and that is all that matters.\"\n\n\"I think a lot of people are more open-minded than others believe,\" he said, taking a sip of his beer, before he stopped, \"Bruce, did Mum...\"\n\nI knew what he was going to ask straight away. \"Before you ask me, I think you need a long talk with your mother.\"\n\nMother and son disappeared a couple of days later up to the family's resting place. They were gone quite a while, I think having a very long heart to heart. From what Emily had told me, their relationship had always been better, but had deteriorated as he lacked a good father figure, and what Maggie then discussed was the straw that broke the camel's back. Or that's what she believed anyway.\n\nWhen they returned, Maggie couldn't stop smiling while Chris had this dazed look on his face. I'm thinking what he learned was probably quite the shock. As Emily approached her mother, I grabbed a few beers and escorted Chris to the edge of a nearby paddock, leaning back against it, remaining silent. I'd let him get whatever he thought off his chest.\n\n\"Bruce, remember what I wanted to talk about the other night...\" He trailed off, and what I didn't expect was laughter, shaking his head. \"I guess I am my mother's son.\" I glanced at him in surprise. \"Bruce, I freaked the fuck out when she approached me about it. I thought she'd figured out what I thought about her. I... I guess I wanted to be her knight in shining armour in some manner or other, but I also wanted her for myself. But having all those thoughts, I thought I was seriously fucked in the head. So that's why I reacted like I did when she approached me. I honestly thought she was mocking me, or the fella she was with at the time was putting her up to it. And if that was going to be the atmosphere I was forced to live in, I had to get out quick. That's why I just packed and left with nary a word to anyone. I felt awful leaving Emily behind, as I'd been the one to protect her.\"\n\nI'd just had a lot of information dumped on me, so all I could do was sip at my beer and say, \"Yeah, see what you mean.\"\n\n\"Mum wanted to fuck our grandfather? Fucking hell, I honestly didn't see that coming. Guess some of it makes sense now though, right? She couldn't handle anyone that reminded her of her daddy. She said the only decent men she was with were those who fathered her children. That's putting it mildly, though. I guess you've heard it all though, right.\"\n\n\"It was an emotional afternoon, Chris.\" Clearing my throat, I had to ask, \"So what are you going to do?\"\n\n\"I don't know. Mum is in a good place, a much better place now. Starting work at the RSL soon. But... she doesn't want to leave here. Part of her wants her independence, but she's enjoying it here.\"\n\n\"Already thinking of a way she can have both. Just need to sort out the details.\"\n\nAll of us pitched in to organise the wedding. I spent a couple of weeks cleaning out a barn with Mick, Chris also pitching in when time allowed. Maggie now worked at the RSL and I'd bought her a second-hand 4x4 to get around herself. June took Emily and her mother shopping for a dress, while I headed out one weekend to look for a suit, though Emily insisted I wear a good pair of boots and my akubra. \"You're a farmer at heart. A man of the outback. I would love you in a suit, but still looking the part,\" she said.\n\nA week before the wedding, I sat my sister down at the table with Chris. The latter had suggested he was now staying indefinitely, as he'd proven to his employer that he could work from home. No real idea what he did except it was in finances, and he made good money for himself. Mick joined me as I'd talked to him about my idea. He admitted it would be a good one.\n\nLaying a couple of plans of the farm in front of Maggie, I showed her my idea. \"This house will obviously become home for my family, Maggie. I mean Emily, myself and our children. So you need somewhere to live. I know you mentioned living in town, whether one, two or three over.\" I pointed at the top plan. \"This is the farm as it is now. I won't point and explain as you're not stupid, but these are all the buildings in the vicinity. Now, this is the idea...\" I removed the top sheet and showed her the bottom one. \"You need your own place and independence while still remaining here. So I'm going to build you a cottage. Two bedroom, so you can stay here as long as you want, Chris. It won't be large, but we're going to make sure it's modern.\"\n\nMy sister looked at me, utterly flabbergasted. \"Bruce... what...?\"\n\n\"I neglected you for too long, Maggie. I'm trying to make things right.\"\n\nShe was up immediately, shaking her head and crying, hugging me tightly. \"It wasn't your fault... never your fault... I was broken and forced you to... I don't know, just not like me...\"\n\nI stroked the back of her head, her hair vibrant once again. \"The fact you were broken meant you needed me more than ever. I helped protect my niece. I should have done the same for my sister. So what I can do is build you your very own home. I can easily afford it. Won't need a massive loan. Already spoken to builders, decorators, plumbers, everyone important. Six months to a year, they reckon. I'm calling in plenty of favours.\"\n\n\"When do they start?\"\n\nI grinned when I replied, \"Tomorrow, Maggie.\"\n\nThe morning of the wedding, Mick and I were putting the finishing touches to our suits. He kept muttering about looking like a 'damned penguin' but I knew he was enjoying himself. Emily was getting ready in her mother's room, so we grabbed a last minute beer from the kitchen and headed towards the barn. The celebrant was waiting inside.\n\nWhat I didn't expect was the cavalcade of cars, utes and 4x4's to suddenly arrive. \"What the hell?\" I wondered, glancing at Mick, who looked as pleased as a pig in shit. \"Mick, what...?\"\n\n\"Didn't seem right that so few were here to give your vows to the woman you love, Bruce. So June and I have slowly but surely invited all the lads to our house and explained the relationship between you and Emily. Obviously, they were a little taken aback, but saw how you two were with each other, knew love when they saw it and, well.... Word spread further and here everyone is.\"\n\nI didn't even bother counting how many vehicles arrived. Some came in suits, others in jeans and a good shirt. All of them in good boots. The women were all in fancy frocks. Hands were shaken, cheeks were kissed. June appeared, looking rather pleased with herself, stating this would be a surprise for Emily, as she didn't expect anyone except the family.\n\nStanding in front of the celebrant, Mick standing next to me, the music started up from speakers we'd hooked up in the rafters as June approached us first, carrying some flowers, following by my sister.\n\nThen Emily appeared, radiant in her white dress, smiling it was only as low as her knees without a long train behind her, face covered by a veil, being escorted by her brother. She stopped at the opening when she noticed the crowd of faces greeting her. All the lads from the farm. Friends I'd known for years who approved of the relationship. Mick had said one or two didn't approve, but I didn't care any longer. They were entitled to their opinion. All that mattered was the woman walking towards me.\n\nI saw her smile broaden with each step, glancing left and right at the people she recognised, taking her hand and hugging her as she was doing her best not to cry. \"Did you do this?\" she whispered.\n\n\"Mick and June,\" I whispered back.\n\n\"Thank you,\" she whispered to Mick, before she turned and hugged June.\n\nIt was a short ceremony as Emily and I were not religious, it was just a way of confirming our love for each other in front of friends and family, while also making it official in the eyes of the law. The celebrant was aware that she was my niece, but what her personal opinion was didn't matter. We sealed our vows with a kiss, signed the certificate, the celebrant stating we'd receive the documents within a matter of days. Emily was adamant about taking my surname as she was tired of being reminded of her long negligent father.\n\nMick had obviously prepared as a van showed up while Emily and I were taking pictures. Once they were done, he led us back towards the barn to show how quickly they'd managed to convert it. Emily couldn't stop herself crying this time. To be honest, nor could I, wrapping the man in a bear hug.\n\n\"The old man would be proud,\" he stated.\n\nThis wasn't going to be a wedding reception of fine dining, soft music and good behaviour. An enormous barbeque was wheeled near the barn, meat and chicken soon being cooked in vast quantities. The alcohol was soon flowing. The music was turned up and the dancing started. Emily and I enjoyed a first dance, and she proved her memory by selecting the very first song we'd danced to what felt like only yesterday at times.\n\nWe managed to disappear into the house long enough for a wedding day quickie, bending her over our bed and we just rutted, amusing me further that, after I'd cum in her, she took the handkerchief from my breast pocket and put her panties there instead. \"They were wet from the moment I saw you in your suit, Bruce,\" she whispered into my ear as we walked back outside.\n\nIt was a great night. Everyone had a grand old time. We received plenty of questions, of course. They knew how old I was, how old Emily was, the fact we were uncle and niece. But June had found the same documents Emily had, and went even further with the history of such relationships. Once people were told, and the very fact it was legal, while they still might have found it weird, there wasn't really much they could do. It was a case of support or not.\n\nThe party went late into the night before we had to call it quits. Emily and I stood side by side as we wished everyone goodnight. We had a pile of gifts, many of them relating to future children, as June had made subtle jokes during her conversations that Emily was eager for our own. I was too, but Emily reminded me at least once a day about having a bun in the oven. Always with a smile, as she knew I wanted the same thing. Many of the lads said they'd come in early Monday to help clean it up, admitting none of us would want to do a thing the next day, being Sunday and all.\n\nMick and June were last to leave. I honestly didn't have the words to express my gratitude. June insisted it was nothing, while Mick just looked proud as punch. It was a fond farewell before Emily and I headed inside, agreeing that while sex was on the mind, we weren't sure we'd have the energy.\n\nThen we heard noise coming from Emily's old room, now Maggie's. Stopping at the door, Emily covered her mouth and started to giggle, though I returned a quizzical look. Emily raised her eyebrows and gently pushed open the door, as it wasn't locked. The bed was at an angle we could see who was on the bed. The women on top was definitely my sister though I could only see the back of her head. The man underneath her was definitely her son.\n\nIt didn't shock either of us. It had been coming ever since that conversation I'd had with him. I hugged Emily to me as they didn't even register our presence.\n\n\"I love you, baby,\" my sister whispered, \"My boy has a wonderful cock.\"\n\n\"I love you, Mum.\"\n\n\"Everything you wished for?\" she whispered, leaning down to kiss him.\n\n\"I'm glad we're doing it here, Mum. We're home.\"\n\n\"And we'll have our own one soon, if you want to stay...\"\n\n\"I do now, Mum, if you want me to.\"\n\n\"I want nothing more, baby. Nothing more.\"\n\nWe shut the door and headed to our own room to consummate the marriage. Again.\n\nPerhaps not surprisingly, Emily and I were up before the other two, as there was no doubt they'd made love into the night. Once we'd got Emily out of her dress, an endurance event in itself, she'd straddled my lap, rode me for around five minutes before lying on my chest and almost falling asleep. We agreed to finish in the morning.\n\nIt was Sunday, which meant a big breakfast, Emily proudly saying that, as the housewife, she was going to look after her hard-working husband by keeping him stomach full and his balls empty. I remembered those words from long ago and they still made me chuckle. We were sitting side by side, talking quietly, when my sister and nephew wandered in together. Urging them to sit, Emily served them breakfast before sitting back next to me. My nephew couldn't stop smiling, my sister alternating between delight and guilt.\n\n\"Maggie?\" She met my eyes. I reached across and took her hand. \"Just be careful, okay? Emily and I... we can. But you and Chris? I just don't know... But Emily and I support you. No matter what.\"\n\nThe new home went up rather quickly as I was paying top dollar, as long as no corners were being cut. But the weather remained good, which meant the work could proceed at pace. Emily and I did our best not to fall into a routine. Saturday afternoon remained our time. Sometimes we'd go for a horse ride. Sometimes we'd drive to one town or another. Sometimes we'd just laze about at home. Sometimes we'd spend the entire afternoon in bed.\n\nOur sex life simply got better and better. We shopped online together for toys and added that to our sex life. We did dabble in a certain type of sex every so often, but I much preferred sliding my cock into that beautifully tight pussy, and she would certainly admit to the same feelings. So, when the mood took us, we'd get a toy or two out and have a little fun. When she was really in the mood, she'd insert a small plug and wear it all day around the house while I was at work. By the time I'd finished for the day, she'd be all over me. We did occasionally forget about others in the household, both my sister and my nephew walking in to find Emily bent over, or on the table, while I was fucking her. They'd notice and quickly retreat to another room.",
        "As for my sister and nephew, once we said we accepted, Chris moved into his mother's room. She now worked full time at the RSL, with word that she might move into a management position before too long. So he'd drive her to work, while he'd spend the day working in the town library or somewhere else quiet, then drive both home. Whenever they returned home later than usual, Chris looking smug, my sister rather rosy cheeked, Emily and I laughed as we knew exactly what they'd been doing.\n\nStanding on the veranda one afternoon, I was watching the cottage nearing completion. Another month at most until my sister and nephew could move in. I was waiting for Emily to return as she'd gone shopping that day, her mother happily tagging along. Sitting back on the couch with a beer, I looked down at the ring on my finger, smiling away.\n\nHearing a cleared throat, I looked up to see Emily smiling at me but with tears running down her cheeks. I stood up and went to her, taking her hands in mine, unable to stop the smile forming on my own face.\n\n\"Four months, Bruce. I'm four months along.\"\n\n*****\n\nEpilogue\n\nEmily was cuddled into my side on the couch outside, reading a book, while I sat back and relaxed. The backyard had been extended with turf laid, and it was now seemingly covered in children's toys. The three of them were currently messing around. The oldest, Harold, though we called him Harry, of course, was named after my father, her grandfather. Then there were our two daughters, Elizabeth, though she already preferred Beth, named for my mother, her grandmother, and then Alicia, for no other reason than Emily liked the name.\n\nEach pregnancy had gone smoothly, and our children were... quite close in age. Approaching fifty, having a six, five and four-year-old child would probably sound exhausting, but I loved it. Aware that I was getting older, I now made sure I had regular medical check-ups, did my best to remain fit and healthy. I cut down on the beer, though my diet remained roughly the same. Hair was going a little greyer at the temple, though Emily thought I carried it with dignity. Still felt as strong as ever, fit as a fiddle, to be honest. But I didn't want to tempt fate.\n\nAs soon as she'd given birth to our third, I was booked in for a vasectomy. She didn't want to go back on the pill, and for good reason. Her libido went through the roof once she was off them, and considering we were looking after three small children, trying to find time for ourselves was difficult at times. But Emily and I had long been a team and it continued through those early years. Midnight feeding and nappy changes. No end of cleaning up bodily fluids. Endless crying at times. It was probably the first real test of our marriage.\n\nWe continued to 'date' each other, always trying to keep the affection going, no matter how hard life might have seemed at times. I doted on my wife and children. My wife kept me happy by doing what she'd said from the start. No matter how tired she might have been, she loved sex as much as I did. She never wanted it to feel like a chore, so we always made sure it was better than good. It also helped that my sister and Chris lived nearby, my sister admitting that she'd make sure she did it right with her daughters' children. Knowing he wouldn't have kids of his own, at least with his mother, Chris doted on our kids, as did Mick and June, basically adopting them as their own grandchildren.\n\nAt least that gave Emily and I time to breathe. That's when we'd head to a nearby town for the night, book a hotel room, and after a night out for a meal and a drink, return to the room and either fuck each other silly all night, or simply enjoy a solid eight hours of sleep. It really depended on our mood each time.\n\nMy sister and nephew were a couple. It could never be official. I'm sure Mick and June suspected, but they never said a word. Only Emily and I would ever know the truth. As soon as they moved in together, they kept the second bedroom with the appearance of him sleeping there, but there was no doubt he slept with his mother all night, every night. My sister had never been happier, and I regretted those long years apart when things had been so bitter. We'd spoken more than once about everything that happened. We'd both made mistakes, but at the end of the day, we're only human. None of us are perfect, and you never stop learning, whether about yourself or about other people.\n\nAs for Chris, he was a happy young man. He had his mother and lover looking after him, he was making a career for himself, and made plenty of friends with all the young lads who worked for him, while joining a couple of nearby sports teams as he liked to keep fit himself throughout the year. I did sit him down one evening, about a year after the relationship started, and asked what he wanted for the future, the insinuation clear.\n\n\"I'm not bothered about kids, Bruce. Mum can't have any, so we don't have to worry about that. No doubt Emily and you will have a couple, at least, and Mum is eager to be a grandmother. I'm happy with how my life is now.\"\n\nMick and June were growing older, though Mick wasn't even speaking about retirement, and June was now a regular visitor to our household. She doted on our children as much as anyone, and the friendship between herself and Emily, despite the significant age gap, was wonderful to see. No doubt Emily basically adopted her as a grandmother, something I know June loved deeply.\n\n\"What are you thinking about?\" Emily asked.\n\n\"That's a loaded question, sweetie,\" I replied.\n\nShe placed the book down and looked at me. \"You often look thoughtful, Bruce. I just like to know...\" I kissed her softly on the lips, which made her smile. \"Well, I know you weren't just thinking about that.\"\n\nI pulled her up on to my lap, holding her tight to my body. \"Just thinking about our life to this point. And I know the best decision I ever made. It was inviting you here. But I think it was fate. Never believed in it but I honestly think it is. Something died, something lived. That day, long ago, my father's ute breathed it's last. It was one of the last remaining links to the old man. Since you arrived here, Emily, this place has been full of life, but more importantly, love. Maybe I'm just being a sentimental old fool, holding you in my arms while we watch and listen to our kids, but I honestly don't know how life could get any better right now.\"\n\nShe moved her lips to my ear. \"Well, I could be naked in bed with you, with your thick cock buried in my still incredibly tight pussy. Mum is just over there so she can watch them for an hour or two.\"\n\nI heard my sister laugh to herself. \"I can't hear you but if you need some alone time, I can watch them for a little while.\"\n\nEmily slid off my lap and offered her hand. \"Want to come spend some quality time with your niece, my handsome uncle?\"\n\n\"Now that is the best idea I've heard today so far, my beautiful niece.\"\n\nWe shut the door to our bedroom and proved our love to each other yet again. The day I tired of Emily, my wife, niece, lover, confidant, soulmate, would be the day I keeled over and died. Until that day, I was going to treat each day with her as my first and last. Never leave a room without telling her I love her. Never stop showing her affection. Never stop showing how much I truly loved her.\n\nThe farm now meant nothing without her there with me. I would spend every day of my life making her as happy as she made me.\n\nFIN\n\n*****\n\nA/N -- Well, there we go. I'll admit, I'd never actually planned on writing a second chapter but, once I started to write, the words and ideas flowed rather easily. Wanted a happy ending for the entire family. Think I might have gone a tad overboard with the 'evil sister' thing in the first chapter, so hope I resolved that satisfactorily, at least. Otherwise, hope you all enjoyed it. Feedback and comments appreciated as always.\n\nFurther information: an uncle and niece / aunt and nephew marrying is known as an avunculate marriage. If you look at the Wikipedia page, you can see such marriages were popular in royal lines, particularly ancient Egypt and then the House of Habsburg. It's allowed in some countries, including Australia. It is generally outlawed in the United States except for two states, circumstances permitting."
    ],
    "authorname": "UltimateSin",
    "tags": [
        "taboo",
        "romance",
        "uncle",
        "niece",
        "mother",
        "son",
        "romantic"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/farm-ch-02"
}