{
    "title": "All I Need Pt. 03",
    "pages": [
        "Author's Note: \n\nAll characters are 18 in this story. This story contains incest and graphic sexual content. You have been fairly warned.\n\nThis is the third part of All I Need and picks up immediately where part two ended. I would highly encourage you to read parts one and two before reading this in order to understand what is going on.\n\nSpecial thanks to cliffhangingtom for providing valuable feedback and encouragement. Constructive feedback is always appreciated. I enjoy reading what people think of my story and respond to all rational correspondence.\n\n*****\n\nPart 3.\n\nThat Friday, our parents left in the early afternoon for their trip. The night before, I had told Amy that I felt it was overdue for me to take her on a real date. I made reservations for us at an Italian restaurant in the next town over that I'd read good reviews of online. It was an hour's drive each way, but I didn't want to run into anyone that knew us, as I was determined to make the night special for her. \n\nI dressed wore a charcoal gray dress shirt and khakis, as I didn't own a lot in the way of dress clothes. Honestly, what did she see in me? She owned a wardrobe that filled her closet to the brim and routinely had to get rid of a few dresses and other apparel to make room for new things. I waited in my room, listening to music on the computer, while she got ready. I was getting fidgety and changing songs every minute or so, unable to find anything I was interested in listening to at the moment. I'd just about given up on finding anything worth hearing when Amy turned up in the doorway.\n\n\"Are you ready?\" She was dressed in a dark red blouse that was low cut and exposed a fair bit of her cleavage and tight black skirt that appeared to be painted on to her hips and ass. Her hair framed her face perfectly, falling well past her shoulders now and her make up was perfect. She had clearly put a lot of work into her look tonight and it had paid off. She stood in the doorway with her hands folded together at her waist as she looked at me, a shy smile on her face. I found myself marveling at her ability to look both very classy and unbelievably sexy at the same time. \n\n\"Fuck me.\" I mumbled almost beneath my breath at the sight of her, drawing out the first word, having to remind myself yet again that breathing was important. The effect she had on me was one of the great mysteries of my life. But it was one I was grateful for.\n\nHer smile transformed from shy to a self-satisfied smirk. \n\n\"Oh, I plan on it.\" She said in her most seductive voice as she sashayed over to wrap me in a hug, her hips swaying with every step. Her lips lifted up close to my own and she whispered almost directly into my mouth. \"Just not quite yet.\"\n\n\"My boyfriend promised to take me out for Italian.\" She said as she dropped away from me, never actually letting our lips touch. Her eyes danced mischievously across my face. She looked quite pleased with herself for teasing me, which made her all the more adorable to me. \"I'm getting hungry.\"\n\nThe restaurant had exactly the pleasant, romantic atmosphere that I was hoping for. It was in a dark brick building, softly lit, with beautiful wood furniture and candles on the tables. The whole place felt warm, inviting and the smells in the air were mouth watering. It felt really different to be able to walk into the restaurant with Amy, as my girlfriend, and not as my little sister. Sitting next to her, holding her hand in public, while we waited for our table to be ready was such a unique feeling that I don't think either of us were in a hurry to be seated. She squeezed my hand affectionately and had a permanent smile plastered on her face.\n\n\"This is so nice,\" she sighed, leaning her head gently on my shoulder, still unwilling to let go of my hand. \"Thank you for this.\"\n\n\"You deserve it,\" I replied. \n\n\"I love you.\" She sighed quietly as she planted a tiny kiss just below where my jaw met my ear.\n\nThe hostess arrived to seat us at exactly that moment, smiling apologetically for interrupting the kiss that Amy was giving me. \n\nThroughout the meal, Amy's eyes shone at me. She had a small smile plastered on her face that almost never faltered. I could tell that she really enjoyed the attention and being able to be out in public without having to pretend like we were just siblings. Which was exactly what I had hoped for her. I have always been a more or less quiet and reserved kind of person. I knew it was harder for her to keep her feelings under wraps than it was for me. That being said, I caught myself smiling more than once.\n\nAs for the food, it was incredible. I had to catch myself before I started licking the plate clean right there in the restaurant. Amy felt the same way about hers and we vowed to come back.\n\nOn the ride home, Amy draped her arm across my car seat and started slowly running her fingers through my hair as I drove. She was being a lot quieter than at the restaurant. I glanced at her a few times as I drove and she was leaning back in her seat with her eyes closed each time. I would have thought she was asleep except for her hand lightly massaging my head and neck. \n\nAfter a while, she slid closer to me and draped my arm over her. Snuggling up against me as I attempted to drive.\n\n\"If we get in a wreck, this will be hard to explain.\"\n\n\"I'm sure you'll manage,\" she replied. It was the first words out of her mouth in about fifteen minutes. \n\nA few more minutes of silence followed. She moved a bit and I felt her lips on my neck. Then I felt something wet drip on my neck. I brought my hand up to her cheek and felt the line of a tear.\n\n\"What's wrong, baby?\" I asked.\n\n\"Sorry,\" she said, pulling away from me to wipe her face. \"I didn't mean to cry.\"\n\n\"What's wrong?\"\n\n\"I'm just... I..\" she faltered, \"I'm a little scared is all.\"\n\n\"Of what?\"\n\n\"Change, I guess. I mean, everything's kind of turned on end. Tonight kind of reminded me of that.\" \n\nI sensed what she meant and felt my chest tighten. I took my arm from around her and put it back on the steering wheel. She sat up a little bit and glanced at me before staring out into the night.\n\n\"Are you having second thoughts?\" I asked, my mouth starting to dry. \"You think we should stop this?\"\n\n\"I couldn't stop this if I wanted to, Adam.\" She took my arm in both of hers, gripping it so tightly to her that I felt the circulation slowing. \"And I don't want to. I'm not scared of us.\"\n\nI dropped my captive arm to her thigh, as she continued to hug herself to it.\n\n\"Me either.\" I sighed a little in relief.\n\n\"It doesn't scare you, though? Living in secret forever?\"\n\n\"I've always thought we wouldn't stay here. If you stick it out with me, I mean. I thought we'd go somewhere that no one knows us. Start over, kind of. Then the only secret would be our old lives, not our new one.\" I gave voice to the half formed idea I'd had kicking around in my skull for a couple of months now. \n\n\"I love sound of that.\" She responded. \"It's still a little scary, though. And our parents. They'll never forgive us. This will crush them.\"\n\n\"Probably. And that's the hardest part, to be honest. I mean, dad doesn't think much of me anyway. But he adores you.\" I chuckled bitterly to myself. \"Man, it would really boil his piss to find out the black sheep was banging his little princess.\"\n\n\"You're no black sheep.\" She admonished me, passing the back of her hand along my cheek lovingly. \"And you haven't banged your little princess yet, either.\"\n\n\"Mine, huh?\" \n\n\"Yep. Yours.\" There was zero hint of uncertainty in her voice. \n\n\"I can live with that, I guess.\" I shrugged, trying for a little humor in the face of such a sobering declaration that made me want to pull over to the side of the road right there and take care of some highly unsavory black sheep-like business.\n\n\"Always a jackass.\" She tried to sound venomous but it wasn't working. \"I'm sitting here telling you that I belong to you, and your response is to tell me you 'can live with that' you 'guess'.\" \n\n\"Sorry.\" I laughed, but her words ensured that my cock was now engaged in a painful battle with the zipper of my pants. I saw a sign for a rest stop a mile ahead, and accelerated the car a bit.\n\n\"You don't sound sorry,\" she tried to sound like she was pouting, but she was fooling no one. I had her amused and she knew it.\n\n\"You've had me at your mercy since we were little kids.\" I toyed at placating her. \"And I'm pretty sure you know it.\"\n\nShe drew my hand down from her thigh to rest above her panties, pulling her skirt up as she went, making sure that my hand felt the warm dampness below them. \"True, but you didn't used to make this happen every time I saw you in those days.\" \n\nIt took every amount of self control I had to stay on the road. I lightly massaged her slit through her panties as I drove, rewarded with little gasps and moans from the passenger seat. \n\n\"Now who's a damned tease?\" she purred seductively. I resolutely refused to look her direction and kept my eyes on the road, determined to keep us from getting in a wreck. Amy kept one arm locked around mine, holding my hand in place, as the other slid under her blouse and back playing with her breast. I swallowed hard and kept driving, my cock straining against my pants for all it was worth.\n\n\"I love your hands.\" she gasped in a hoarse whisper, \"I love the way you feel me.\" \n\nThe sound of her voice was killing me. I swear she was the sexiest creature on the planet. I felt her shift the fabric of her panties aside and slid my middle finger into her. She let out a loud gasp and started kissing my upper arm, encouraging me as I slid my finger in and out of her. Her hips raised up and tilted toward me, giving my hand better access to her. I felt her grinding her body against my arm, clinging to me for dear life. \n\nI pulled into the rest stop, taking note of the fact that the parking area was nearly empty. I could see only two other vehicles in the main parking area with a few truckers parked closer to the exit, taking their required naps. I parked in a far corner, as far away from the other vehicles as I could and as fast as I could unbuckle my seat belt she was on me.\n\nHer mouth slammed into mine hungrily, our tongues in a war for dominance. She crushed herself against me as hard as she could, our bodies aching for one another with a magnetism like I had never felt before. I felt my lower lip split, crushed under her assault and tasted the saltiness of blood in my mouth. She pulled away after a moment, breathless, with a slight red smear on her lower lip and chin.\n\n\"Oh baby, I'm sorry. I didn't mean to hurt you.\" She half-whispered as she licked the blood from her lip. She reached for her purse to grab a napkin but I stopped her.\n\n\"It's fine. I'll live.\" I replied, pulling her back in my tight embrace. \"Unless a little blood creeps you out.\"\n\nHer mouth closed on my lower lip in reply, gently sucking it clean, before she buried her face in my neck and purred \"It just gives me another part of you to taste, is all.\" \n\nShe moved further across the seat, climbing into my lap, kissing my neck. I kissed her neck and shoulders in return, leaving a row of little red dots at first that I went back and licked away gently with my tongue. I slid my hand back under her skirt, cupping her ass in my palm, gliding my thumb into her. I felt one of my fingers slide across her rosebud, which made my dick throb at the thought of how intimately I was touching her. She gasped under my touch and began to moan into my shoulder as she wrapped her arms around me. \n\n\"Oh god, Adam. Yes!\" She ground her ass into my crotch as she rocked back from my hand before sliding back forward to meet it, establishing a rhythm of fucking my thumb.\n\n\"You want to belong to me?\" I asked, my own voice dropping into a harsh, throaty whisper.\n\n\"I already... uhnnn... belong to you!\" she replied, whimpering between gasps. \"I'm so yours, baby.\" \n\n\"Do you want a life with me, away from here? A new life?\" \n\n\"God, yes!' \n\nHer breath was quickening, strained squeaks punctuating her breath as she exhaled. She continued to fuck my thumb with her hips, my forefinger gliding back and forth over her asshole with every stroke. Her wetness was leaking down into my palm and between her ass cheeks as she rocked. The whole situation was incredibly sexy to me, despite me not being in an ideal position to achieve my own release. This beautiful girl, my beautiful little sister, was so turned on and about to have her orgasm here in my arms. It turned me on tremendously just seeing her getting off like this. And her voice, her sexy goddamned voice, was an endless fuel to my desire for her.\n\n\"I want you to come for me.\" I whispered urgently. I wanted... I needed to hear her orgasm. I loved the sounds she made when she came. I rotated my thumb inside her slightly. My free hand slid to the small of her back and guided her into my palm over and over. Her moans were building to a fevered pitch in the confines of the car. \n\nI felt her nails digging into my shoulders, and her legs clamped tight around my hand locking us in place. Her whole body shuddered in my lap as her climax overtook her. It was glorious to hear her cries. When she finally relaxed into me, I kissed her gently as I pulled my hand from beneath her. She sighed at the loss of contact with my hand, and opened her eyes halfway to look at me.\n\n\"Like that?\" she giggled.\n\n\"Yeah, exactly like that.\" I kissed her forehead and started the car. With a sigh of disappointment, she slid back into the passenger seat.\n\n\"I thought you'd take me right here.\"\n\n\"I considered it, but do you really want to have sex with me for the first time in the front seat of a Honda? Or twenty minutes from now somewhere much more comfortable?\" I asked.\n\n\"You have a point.\" She admitted, while attempting to give me another pouting look. \"But your admirable self control is bad for my ego.\"\n\nI leaned over and kissed her deeply.\n\n\"I'm sure your ego will survive, sweetheart.\" I backed the car out and got us headed back down the interstate toward home.\n\nWe had barely reached the speed limit before I felt her hand snake across my groin and give my shaft a light squeeze.\n\n\"I can't wait to finally feel that thing inside me.\" She said in the most seductive voice she could manage.\n\n\"You are really trying to make sure it's a short evening, aren't you?\" I asked with some amusement, trying to ignore my cock's straining in my pants.\n\n\"It doesn't feel very short to me,\" she purred as she gave my full length a meaningful rub. I groaned a little against my will.\n\n\"Wasn't what I meant.\" I replied as I struggled to remain near the speed limit and avoid getting a ticket. I wanted to be home and inside her. \n\nBack at home, the moment she turned to shut the front door behind us, I was on her. I slammed her forcefully against the door, kissing her hungrily, ignoring the distracting soreness of my lip. I held her body so tightly against the door that she could barely breath. She struggled to grind her hips against me, kissing me as forcefully as I was her. My hands traveled her body relentlessly, groping here and grabbing there. She had one arm around my neck, holding me to her, while her other hand grabbed my ass, trying to pull me against her harder. Her legs came up to wrap around my waist, and I lowered my arms to support her. I lifted us away from the door, allowing us room to breathe again. We were both gasping for air between moans as our mouths continued to duel each other. \n\nFrom the way I was holding her, Amy's head was above mine, Her hair fell across my neck as she bent down to continue kissing me. I could smell her shampoo and a hint of perfume, one of those light perfumes that I'd seen described as fresh rain scented or something. Combined with her natural scent, it was intoxicating. I raised her higher and kissed her neck, planting a soft lick at the base of her throat.\n\n\"My god,\" she sighed happily above me. \"I love the way you hold me.\"\n\nI was too involved in kissing the tops of her cleavage above her blouse to reply. I had lost count of the number of times I'd buried my face between those beautiful breasts by now, but I never tired of it. She interrupted my kisses to pull her blouse over her head and wrap her arms back around me. I lowered her back to the ground, just enough for her to drop her legs from me. As soon as her feet hit the ground, I scooped her up, cradling her in my arms this time like a child. She let out a delighted laugh, which made her breasts jiggle deliciously in her black lace bra, and she hooked an arm around my neck. I thumbed the lock on the door with one hand, and carried her upstairs to my room. \n\nAmy dragged her arms slowly down my body as I lowered her to the bed and immediately unzipped her skirt and dropped it on the floor along with the blouse she'd been clutching in one hand. Now clad in only her lace bra and matching panties, she parted her legs seductively toward me and motioned for me to join her. I pulled off my shirt and unbuckled my belt, taking in her beautiful form as I worked. I moved toward the bed, now clad in only my boxers when she suddenly sat up and put a hand to my stomach.\n\nShe slid her hand down from my stomach to my crotch, gliding over my cock and griping it slightly. Amy leaned forward and kissed my stomach, hooking her fingers into the waistband of my boxers before pulling them down. I could suddenly feel her warm breath on my erection as she nuzzled her face up against it. Her tongue snaked out and planted a lick along it's length, swirling around the head of my cock, poking her tongue around my slit. Her hand cupped my balls as she began taking me into her mouth. I groaned at the welcome sensations her mouth delivered to my cock. My eyes closed for a moment as I felt like my very being was centered on my prick, focusing all of my energies on the blow job my little sister was giving me.\n\nAmy continued to take more and more of me in with each stroke, moaning appreciatively around my cock when my hand dropped to cup one of her breasts. I opened my eyes and looked down at her. The sight of her sitting on the edge of the bed with two thirds of my hard shaft gliding in and out of her mouth nearly took my breath away. She noticed the change in my breathing and looked up at me, our eyes locking for a moment. The corners of her mouth turned up a little, attempting to smile around the cock in her mouth, as she pulled back from me until only the head of my penis was still in her mouth. She took a deep breath, still holding my gaze, and glided back down over my dick, her tongue bathing the underside of it the whole way. I felt the back of her throat, then felt a tightening sensation as she kept going and my dick slid down into her throat. I let out a loud involuntary moan as her throat massaged my cock. The feeling was indescribable and I couldn't help being in awe of her. Her lips closed around the base of my shaft and she pulled back up to the end, releasing me from her mouth, She coughed as a bit of spit drooled down from her mouth. \n\n\"I told you I'd do it!\" She gasped between breaths and looked up at me, absolutely elated. She leaned in close, jerking me off with her hand against her cheek while she caught her breath. \n\n\"You are goddamned amazing, baby.\" I replied in total appreciation.\n\nAs soon as she caught her breath, she grabbed my cock in her mouth and did it again, shutting off all rational thought for me. The tightness of her throat around the head of my dick made me want to grab her head and start fucking her throat with abandon. I managed to hold off, groaning aloud, as she continued to bob her head on my full length, gliding me into her throat each time. She managed to avoid gagging, but her eyes were watering and large amounts of spit were dripping from her mouth and my cock. Within a few more strokes, I could resist no longer. Lost in the sensations, my hands fell to her head when she descended, holding her in place as my hips involuntarily jerked and I launched a volley of come directly into her open throat. She made a surprised noise, but didn't resist me, holding herself in place, doing her level best to swallow around my swollen member. After the first few bursts from my exploding cock, I became coherent enough to let go of her head and she pulled away from me, keeping only the tip of my cock in her mouth. Amy continued to swallow rope after rope of my semen, allowing it to pool on her tongue before taking fast gulps, working my shaft with her small hands, and gasping for air around my cock. When I was finally spent, she released my deflating member from her mouth and wiped the spit from her chin, gazing up at me with a pleased expression.",
        "\"I think someone enjoyed that.\" She smiled sexily up at me. \n\n\"That was unbelievable.\" I sighed adoringly as I sat next to her on the bed. I reached up and wiped the tears from her face with my thumbs as I framed her face in my hands. I leaned in and gave her a gentle, loving kiss. That was something I had noticed happened with us more than I'd ever experienced with any girl before. We could be intense and hungry with each other, then switch seamlessly into a more gentle, loving mood with the bat of an eye. \n\n\"I didn't hurt you, did I?\" I asked, reflectively.\n\n\"No, it was fine. I mean, it did kind of hurt a little... but not in a bad way.\" She pulled me down to lay beside her and put her head on my chest.\n\n\"Sorry.\" \n\n\"Don't be. I loved it.\" She reached down and gave my cock an appreciative squeeze. \"It's okay to be a little rough sometimes.\"\n\n\"Says the girl who left teeth marks all over my neck a while back and nearly got us caught.\" I grinned.\n\n\"It has been established that your photographer slut was responsible for that. I am innocent of all charges.\" She reached behind her back and popped the latch on her bra, sliding out of it in one fluid motion and dropping it on the floor. Her panties soon followed. She wrapped her naked body around mine and sighed contentedly.\n\nI had been planning to make a show of rolling my eyes at her for the comment, but seeing her naked breasts again eliminated that possibility. I lay there happily taking in the feel of her naked form against mine for a few minutes. I gently stroked her hair, pulling it from her face and tucking it behind her ear. My eyes gazed over her affectionately for a long time until, finally, she tilted her head to look up at me.\n\nI leaned down and kissed her. I wrapped her in my arms and raised her body on the bed, putting our heads at an even level so that I could kiss her more easily. My hand slid up her side to cup her breast and I felt a sharp exhalation of breath in my mouth for my trouble. Her mouth smiled over mine as she arched her back, forcing her tit to mash harder into my palm. She let out a loud moan when my fingers found her nipple and lightly pinched it between them. I guided her onto her back, never fully releasing her breast, and rolled up to position myself above her. Leaning down, I ran my tongue around her areola, barely allowing my tongue to graze her hardened nipple, before I closed my lips over the delightful nub and sucked it into my mouth. \n\n\"Oh god, yesssssss...\" she hissed out as her hands grabbed at my head, her fingers running wildly through my hair. \n\nI lifted my head, pulling her nipple lightly with my lips while running my tongue over the very end of it. My lips parted just enough to release her breast and for me to dive on her other nipple, repeating the treatment. Her hips raised to meet my groin as she tried to grind herself against me. The feel of her wet, white hot, hairless pussy grazing against my mostly spent, flaccid cock began to have an effect on it. I felt myself lengthening and starting to provide her with something to slide herself against. \n\nEvery time she would raise her hips, her back would arch a bit, causing her tits to shift up toward her face and roll slightly around on her chest. It was almost mesmerizing to watch. I seized her hips in my hands and ground my groin against her, feeling the head of my dick part her folds as it slipped in about half an inch. Realizing what was about to happen, I moved my crotch away from hers.\n\n\"What?\" she asked, breathlessly.\n\n\"Reality.\" I sighed heavily as my face sank between her tits, hugging her chest to my face. I suddenly found myself asking myself if this was really happening. I was holding my beautiful, naked, baby sister in my arms, my face buried between her breasts, and was on the verge of sliding my cock into parts of her that no brother should ever know anything about much less have access to. This was so far beyond what was normal, acceptable sibling behavior. \n\nThis was the last line to cross between us. It was a feeble line, at best, considering all of the other things we had done together at this point. I knew what I wanted, but I felt like I had to give her one last chance to back out. It was so fucking wrong, and yet I wanted it with every fiber of my being. Part of me had long since abandoned thinking of her as my sister. My love for her was far beyond that now. But she was still my sister, my flesh and blood. I felt foolish for what I had to ask her, but I felt like it had to be asked. \n\nI must have been locked in these thoughts for longer than I realized because I became aware that she was staring at me intently. I propped myself up on an elbow and smoothed her hair back against her head with my other arm, trying to give her a reassuring, loving stare. Her hands were resting on my shoulders before I moved, and she moved one to cup over the hand that was now lovingly caressing her cheek. She was still breathing hard, but was making no move toward me, clearly unsure of what had been going through my mind. \n\n\"Amy...\" I tried to find the words that I needed to come out. \"Is this what you want?\"\n\n\"Of course it is.\" She replied, as her eyes closed and she nuzzled her face to my palm. \"Don't you want me?\"\n\n\"More than anything, sweetheart. I know it probably sounds stupid after everything we've already done, but if you really want this, I need to hear you say it \" I ran my thumb gently along her eyebrow as she turned her face toward my palm, half burying it and giving it a quick, playful lick. That derailed my train of thought for a half second. She could be so adorably intoxicating, unlike anyone I had ever known.\n\nShe cocked an eyebrow at me and grinned mischievously.\n\n\"Are you trying to get me to beg for your dick? Is that a thing for you?\"\n\nI pulled my hand from her face to cover my own in a mixture of frustration and mild amusement. To say nothing of the fact that the idea of her begging for my dick did kind of add an extra couple of milliliters of blood to my erection. \n\n\"I could try it, if it's something you really need. Begging for your dick, I mean. I can be a team player, after all.\" She dropped her voice to a sexy whisper, wrapping her hand around my cock as she finished her sentence. It was hard to be annoyed in the face of that.\n\n\"That wasn't what I was talking about, and you know it.\" I tried to sound stern as her small hand stroked the length of my shaft.\n\n\"I know,\" Amy replied. \"But it's fun to annoy you.\"\n\n\"Brat.\" I slid myself down a bit on her body allowing my mouth access to her tits. \n\n\"Jackass.\" She breathed as my mouth closed over one of her divine nipples, my tongue having its way with her hardened nub. An appreciative moan followed as my hand glided along her thigh and fastened itself to one of the globes of her ass.\n\nI lost myself in the feel of her body, worshiping her chest with my lips and tongue while my hands roamed along her legs, hips, ass, and ribs. Her body responded to my touch in a series of light moans, occasional gasps, and light shudders. She kept one of her hands wrapped around the back of my head, guiding me across her breasts, while her other hand slid rhythmically down my back, dragging her nails up my spine repeatedly. Her hips ground her white hot pussy against my stomach, and I had to keep fighting the intense urge to move up and slam myself into her. \n\nOne of my hands traveled up, pausing briefly to cup the breast my mouth wasn't currently feasting on, before continuing up along her neck and jaw line. Finally it came to rest against the side of her face, the palm resting against her cheek and my fingers barely sliding into her hair. I felt her face turn as she took my thumb in her mouth, giving it a seductive suck, breathing raggedly against it. She released my thumb and moaned something that I did not hear, as I was so lost in the feel of her wonderful body.\n\n\"What was that?\" I asked, raising my head from her chest just slightly.\n\n\"Come here.\" She repeated.\n\nI moved my arms down on either side of her and lifted myself up to be able to better move across her body. I planted little kisses, licks, and nibbles to various parts of her body as I moved my head up even with hers. She took my head in her hands and gently pulled me up to face her. Her tongue slipped out to moisten her lips as she gazed at me affectionately a moment before opening her mouth to speak.\n\n\"I love you,\" She began, keeping her beautiful piercing blue eyes locked on mine. \"I love you more than I have ever loved anyone. I know that I am your sister. I know that most people think it's wrong, but it doesn't feel wrong to me. I don't have all the answers, but I know that I want this more than anything. I want my big brother to make love to me. I want his dick inside me. I want to be with him forever. I want to belong to him completely.\"\n\nI opened my mouth to reply, but found myself temporarily at a loss for words. There was no uncertainty or hesitation in her voice. Her eyes shimmered at me, unblinking. Finally, her lips turned up in a small, shy smile. \n\n\"Is that saying it clearly enough for you?\" \n\nI nodded as her hand snaked down my abdomen, across my stomach and I felt her long delicate fingers wrap around my shaft again, giving my cock a slow stroke. She rubbed me against her clit a couple of times, using the head of my dick to tease herself, before lining me up with her entrance.\n\n\"I love you, Amy,\" I said as I gently moved my hips forward, my cock slowly sliding into her welcoming folds. She was more than ready for me, her opening glistening wet with her desire. I took my time entering her, in part because I didn't want to hurt her, and in part because the gravity of what we were doing was not lost on me. I felt like I was aware of my nerve endings to such a degree that it seemed like I could feel each cell of my penis as it was coated by her body's fluids. As I continued deeper into my little sister, I felt like time was at a standstill and my breathing ceased completely. My body yearned to crawl into hers, becoming one with her. I felt a tiny pang of disappointment when our pelvises met and she had taken all I had to give. When she had taken my full length into her, she closed her eyes and sighed happily. \n\n\"You're finally inside me.\" She giggled. \"Oh god, I've wanted this for so long.\"\n\nThe giggles stopped the moment I pulled back from her and thrust in again, repeating the sensations I had felt on the first stroke. Her warm pussy gripping my cock in protest each time I withdrew. I felt her legs wrap around me, her small feet hooked on the backs of my legs pulling me toward her. She let out a whimpering cry as her legs pulled me against her a second time. \n\n\"Oh yes, I want this,\" she began chanting urgently, \"I want this. I want this.\"\n\nI found myself gasping for air, my breath quickening in response to the amazing feelings I was experiencing inside my beautiful baby sister. It had never been like this with others I had slept with. No other vagina or mouth that any woman had been kind enough to allow me to get near had ever felt anywhere near as amazing as this. I felt like her beautiful, soft pussy had been molded specifically to fit my cock. I wanted to ask her if she felt the same, but I didn't have the words. I was too lost in the experience to be able to think. \n\nAmy's long slender arms were wrapped around my body in a tight embrace as our pelvises thrust toward each other in rhythmically. She held me so tight that she actually lifted from the bed at one point, my body supporting us both as she clung to me. Her mouth devoured mine, sometimes wandering to my neck, throat, and shoulders before returning back to resume the battle between our tongues. Our kisses were heated, urgent, built on a need that was months, maybe years in the making between us. The sex was no longer gentle, it was driven, our bodies slamming together in unison. Her fingernails dug into my back, as her moans gave way to wails of desire. I found myself pulling her body so tightly against mine that I worried I was hurting her and I barely summoned enough willpower to ease up on my ferociousness. \n\nAmy continued to chant \"I want this. I want this. I want this. I want this.\" over and over. She was reciting it like a mantra, exhaling the words, using gasps to refill her lungs at the end of each \"this\" almost like punctuation. I wasn't sure that she was fully aware she was saying the words, and as her body rushed toward her orgasm, her words became less of a sentence.\n\n\"I want this. I want thi- ...I want ...I want\" The words poured from her mouth into my ears, her breathing becoming more and more ragged as our bodies continued to collide. \"Want\" sounding like a desperate plea, straining her voice with its need. Her cries were urging me toward my own orgasm as I could feel my balls tightening and the rush through my groin that told me the inevitable was on the way.\n\nWith a last few, almost tearful pleas of \"Want... want... want...\" coming from Amy's delirious mouth, her orgasm washed over her in a wave. A joyful cry, almost like a shriek, escaped her lips as her upper body flushed and she gripped me like I was all that was keeping her from certain death. I felt her warmth escalate as her body bathed my cock and balls with her oils as she came. That was all it took for my cock to surrender to her and release bursts of semen deep into her body. After the first few ropes bathed the walls of her canal, my thrusting ceased and we could both feel the pulsing of my dick as it fired a few more volleys of come into her. I lowered myself against her slowly, holding her close, remaining inside her. \n\nWe both were completely out of breath, sweat pouring from our bodies. When my rapidly softening cock finally fell free from her body, I rolled to lay beside her on my back, still catching my breath. I became aware that my back was stinging from where her fingernails had scratched me all along my shoulder blades. I noticed that my left ear was ringing from her screaming into it during her orgasm, and felt a little bit of an ego boost. I both loved and marveled that I had had that kind of effect on her.\n\n\"Holy... shit.\" Amy was the first to speak, after several minutes. \"That was fucking incredible!\"\n\n\"Yeah,\" I replied, my eyes were closed, reflecting on what had just transpired. \n\nShe rolled herself up against me, resting her head on my shoulder. I was immediately distracted by her bare breasts smashed against my side, although I was in no condition to do much about it just yet. \n\n\"I didn't know it would be like that. Wow.\" She spoke softly, \"I love you so much.\"\n\nI tilted my head and kissed her gently for a moment.\n\n\"I love you, too.\"\n\nWe both drifted to sleep shortly after.\n\n* * * \n\nWhen I woke up, I discovered I was alone in the bed. I glanced at the clock in the darkness and saw it was not long after midnight. I'd only slept a little over an hour, it seemed. I heard the shower running down the hall, and pondered if she would mind if I joined her. Probably not, I reasoned.\n\nI sat up and was surprised when the bed sheet clung to my back before falling away with a strange pulling sensation on my skin. I looked back at the bed and saw little red dots and stripes where I had been laying. I remembered her nails on my back and thought \"aw.. shit.\" \n\nI gathered up the bed sheets and carried them downstairs to the utility room. After chucking them in the washing mashing, hoping that they'd come clean in the wash, I padded back upstairs and grabbed fresh sheets from the linen closet. I'd managed to wash acrylic paint out of the sheets more than once, hopefully I'd be just as lucky with relatively fresh blood stains. \n\nTossing the clean sheets in the general direction of the bed, I headed to the bathroom where I found the door open. Leaning in the doorway, I spent a moment watching her wash her hair through the frosted glass of the shower door. After a moment, she cracked the shower door open and looked out at me.\n\n\"You gonna stand there staring or are you going to join me?\" She asked. \n\nWhen I didn't immediately get in the shower, she stepped out, water dripping from her gorgeous naked form, grabbed my hand and drug me in with her.\n\n\"I guess I'm joining you,\" I laughed.\n\n\"Damn right, you are.\" She said, smiling, as she wrapped her arms around my neck. I took put my hands on her waist as I stepped under the shower head. We swayed back and forth under the water with our eyes closed, holding each other close, seemingly slow dancing together to a song that only we could hear. We gently kissed each other for a while, until I remembered that hot water was a finite thing.\n\n\"So, how far along are you with the soap?\" I asked, picking her body wash up from the shower shelf and looking at her with a sense of purpose.\n\n\"If you're bathing me, we can just start over as far as I'm concerned.\" She grinned at me. So I did exactly that and bathed every part of her, paying particular attention to her more intimate bits. I let my hands roam over every inch of her body, thus ensuring that she had been thoroughly lathered and rinsed by the time I was finished. I found her so breathtakingly beautiful that I could have worked on cleaning her body all day and never uttered a word of complaint. When I crouched down to wash her legs, she noticed the scratches all over my shoulders.\n\n\"Oh shit, did I do that to you?\" She exclaimed. \n\n\"Unless you have an angry badger stashed around here somewhere, yeah.\" I replied with a smirk.\n\n\"Sorry,\" Amy replied, not looking particularly apologetic. To be honest, she looked kind of pleased with herself.\n\n\"A smarter man than myself might suspect you have it in for me.\" I said, which made her laugh. She fell silent as I resumed focusing my attention on rinsing the soap off of her legs. I particularly enjoyed watching the water stream down the swell of her hips.\n\nI let my hands glide up the backs of her calves and thighs as I stood, cupping the magnificent globes of her ass in my hands as I stood and kissed her. Her body shivered appreciatively. She took reached back and took one of my wrists, guiding it up so that my hand cupped her breast as she leaned up to kiss me. Her arousal, while not as driven as it had been earlier, was clearly evident. Finally, she pulled away from me and grabbed the soap.\n\n\"Your turn,\" she said as she began lathering up my chest and arms. I watched her as she methodically washed me all over, enjoying the feel of her hands on me. Her breasts hypnotically swayed as she leaned this way or that and proved to be a great distraction. The water began to cool considerably by the time she was done rinsing me off. The cool water had little effect on my erection, which drew me to her body like a divining rod. \n\nI shut the water off, grabbed a towel and began drying her off. Eventually, she took over, wrapping the towel around her shoulders as she dried her hair. I grabbed a towel of my own and was drying myself when I saw her stop and stare at me with a strange little smile on her face.\n\n\"What?\" I asked, waiting for her to point out something stupid I had done. This was usually the case when she would stop and grin at me like this.\n\n\"Just remembering what we did a little while ago.\" Her smile widened.\n\n\"Oh yeah? What was that?\" I said, smiling back at her myself.\n\n\"My big brother finally put his big dick in me.\" She kept smiling, emphasizing that we had just committed pure incest. \"And I loved every moment of it.\"\n\n\"Speaking of that,\" I began, bracing myself for the hit that I knew was about to come, \"Does sex with you always involve chanting and bloodshed? I just wanna know what to expect. Is this some kind of occult thing?\"\n\n\"Oh god. Don't make fun of me for that.\" She whined, her face blushed deep red. She buried her face in the towel around my neck in embarrassment.",
        "\"I'm just teasing, sweetheart.\" I replied, wrapping her in a hug and feeling a little guilty. I hadn't expected that reaction.\n\n\"I know, but I didn't mean to scratch you. Or say all that stuff. It's embarrassing.\" She mumbled into my chest.\n\n\"You shouldn't be embarrassed. I think it's kinda hot that I had that much of an effect on you.\"\n\n\"Really?\" She looked up at me, unsure if she believed me.\n\n\"Seriously. It's kind of an ego boost to drive you wild like that.\"\n\n\"If you knew what kind of effect you had on me, your ego wouldn't fit in the room. And you're such a jackass as it is, can't have you getting cocky on top of it.\" She smiled. \n\n\"If I'm such a jackass, why do you love me so much?\"\n\n\"I have terrible taste in men.\"\n\n\"Ouch.\" I replied as I swept her towel clad body up in my arms again and carried her back to my room. She helped me remake the bed with minimal difficulty aside from what was brought on by me popping her on the ass with my towel. That started a slight skirmish that lasted a few minutes before we got back to the task at hand. As soon as the bed was made, I was climbed back in and took her in my arms.\n\n\"Can it be like this for us all the time one day?\" She asked, lovingly stroking my cheek with her hand.\n\n\"I certainly hope so.\" I pulled her to me in a deep, passionate kiss. It was clear by now that I was forgiven for my towel popping incident. \n\nAmy was smiling again when I paused to look at her beautiful face. Her smile made me smile until I caught myself and became self conscious about it. \n\n\"This has been such an awesome day,\" she said quietly, \"We went on our first date, we finally had sex, and now we can finally spend the entire night together.\"\n\n\"It really has been.\"\n\nShe rolled away from me on her side and drew her knees up. I propped myself up on one elbow, turned toward her, and stroked my other hand slowly down the length of her from shoulder to hip. It had been obvious that she wanted me to spoon her, but she didn't complain when I elected to stroke her body instead. I let my hand wander over her, sometimes just petting her body, others rubbing it harder in almost a massage motion. With her knees drawn up as they were, her ass took on almost an inverted heart shape from the angle I was laying. I ran my hand over one of those magnificent curves, my fingertips grazing the underside of her slit and then her rosebud as I drew my hand back up toward her back. She didn't say anything, but there was a perceptible change in her breathing for a moment.\n\nI moved my body up behind hers, giving her the spoon she had originally wanted and began kissing her neck as my arm wrapped around her small frame. Part of my brain still marveled that I was curled up naked in bed with such a beautiful girl. She pulled my hand up and cupped it over the soft globe of her naked breast. Her nipple hardened against my touch as I gave her breast a gentle squeeze. A soft moan escaped her lips and she arched her neck a little toward my mouth. My prick, having taken notice, rose to the occasion and bumped her ass crack. She backed her ass up against me, trapping it between her ass cheeks in response. I groaned a little in appreciation and pushed forward so that my cock slid along her crack in a short stroke. That got a definite gasp out of her. I pulled my hips away from her to repeat the thrust and she moved her ass back toward me in protest. When I moved forward again, I felt myself sliding deeper between her cheeks than before as my shaft glided through her. She clenched her ass, her wonderful ass gripping my cock in place behind her. I let out a low groan and squeezed her breast, renewing my kisses to her neck. She was really gasping by now.\n\n\"You really do... uhnnn... love my ass, don't you?\" She groaned.\n\n\"I love every part of you, baby.\" I replied, as she released her grip enough to allow me to continue grinding against her.\n\n\"Yeah, but you've always... oooohh... loved my ass. For years.\"\n\n\"It is a magnificent ass. I couldn't help stealing a look sometimes.\" I admitted.\n\n\"I didn't mind.\" She said as she gave me another clench with her cheeks. \"And I certainly don't mind now.\"\n\n\"It's a good thing, because if you haven't noticed... I can't keep my eyes off of you these days.\" I whispered in her ear just before I nibbled lightly on her earlobe.\n\n\"I like your eyes on me.\" Amy replied, wrapping her arm up over her shoulder to hold my head close to hers. \"I love your eyes on me. Your hands on me. Your lips... uhnnnn... on me. Your tongue on me. Your cock on me. In me.\"\n\nI pulled my hips away from her enough to slip my cock under her ass, moving forward again after so that it slid along her soft folds. She brought her knees up slightly higher and angled her ass back just enough for me to slide into her from behind.\n\n\"Oh yessss\" She hissed as her hot pussy swallowed my entire length. \n\nI rocked forward into her, sliding my free arm under her torso to be able to cup each of her tits in my hands. My lips planted kisses along her neck and jaw, while she moaned softly with each stroke.\n\n\"You feel so good, Amy.\" I crooned in her ear, \"I love being inside you.\"\n\nShe smiled in reply, trying to mold her body against mine for maximum contact as we found our rhythm with each other. We made love to each other this time, unlike the urgent frenzy of fucking that had overtaken us earlier. Our hands explored each other more carefully, paying attention to how our bodies responded and learning each others favorite places to touch and be touched. We changed positions to me lying on my back while she straddled me. I loved watching her tits sway hypnotically above me while she rocked her hips back and forth over mine. She responded eagerly to my touch when my hands reached up to cup them. When her orgasm hit her, she arched her back away from me, thrusting her breasts harder into my palms. Her thighs quivered over mine, clenching me against her as tight as she could. She let out a long, shuddering gasp that sent me over the edge into my own climax, my cock releasing it's payload deep into her convulsing depths. \n\nAmy collapsed contentedly against me. She reached up and grazed her fingers along my jaw.\n\n\"We are so good together.\" She sighed. \n\nI was almost asleep when she slipped out of bed and padded down the hall to the bathroom. When she returned, she cleaned me with a washcloth that she dropped beside the bed and climbed back in with me. She spooned herself back against me, snuggling up as close as she could and I wrapped my arm around her. Her hand clutched mine between her breasts.\n\n\"Can we sleep this way?\" I heard her whisper softly.\n\n\"Anytime you want.\" I replied, my eyes closed but my nostrils taking in the smell of her hair again.\n\n\"That means every night.\" Her hand gave mine a squeeze and she lifted it up to kiss it. \n\n\"Well... Anytime we can get away with it, at least.\" Our less than ideal circumstances popped back into my half-asleep mind. Amy didn't respond. My mind drifted off toward sleep when she brought me back from it one last time softly saying my name.\n\n\"Adam?\"\n\n\"Yeah?\"\n\n\"No nightmares this time, okay?\" Her body shook a tiny bit with her chuckle.\n\n\"No nightmares.\" I nuzzled her neck a moment and was asleep the next.\n\nWhen I awoke the next morning, she was still fully nude and asleep in my arms. I stared, not moving, at the back of her head, the curve of her neck, the one exposed shoulder that was not under the bed sheets covering us. I found my mind wandering as I gazed at her. I thought about the little girl that I'd walked with down to the creek behind our home as a child and taught about the different types of animals that we'd see there. I thought about the little girl that would come home from elementary school with coloring books for me that she had bought at the book fairs with her own money because she thought I would like them. I thought about the girl, barely a teenager, who followed me to the skate park the first few times I went, thinking that I had not seen her trailing behind. I thought about how that teenage girl came running from her hiding spot when I misjudged a turn and launched myself into the air on a half pipe, knocking the wind out of myself when I landed on the bottom of the pipe. I thought about the cheerleader in high school who would go out and give it her all on the football field. I would watch her from the corner of my eye despite having no interest in the sport, whatsoever, content to drink whiskey John had stolen from his dad's liquor cabinet and secretly brought to the game instead. I thought of the beautiful young woman that the little girl from my memories had grown into. And I smiled because she now lying in my bed, sleeping peacefully next to me. \n\n* * *\n\nThe Fall semester started at college and life became busy again for both of us. My classes were mostly in the fine arts building, while the majority of Amy's were in the business building on the far end of campus. It meant we wouldn't see each other as much on campus as we would have liked, but that was probably for the best if we had any hope of keeping up appearances. There were still a few hours here and there, those unfortunate gaps between classes that made the school day last longer, where one or the other of us had enough free time to make the journey across campus to see each other for a moment. Twice a week there was even an hour long gap that we both had free. \n\nI was in Dr. Miller's art class again, but this time around Dr. Miller wasn't as confrontational with me. To be fair, I wasn't as stubborn of a student with him either. I guess I did have the potential to be a dick occasionally. He even invited me to participate in the Fall art show. My art history class was going to be a bit daunting, I decided, after seeing the size of the text book. Amy was excited about her classes, especially her finance class. How anyone could get that excited about math and economics was beyond my comprehension. \n\nAmy became a common fixture in the art building those two days a week when we could meet up on campus. Because we both knew too many people on campus, we had to keep our relationship under wraps. It was not uncommon for guys to come up and try to flirt with her in my presence. She always let them down gently, giving them a story about a boyfriend off campus. I wasn't bothered by it at all anymore. It was even mildly amusing to watch, as I learned that guys are not as smooth as they generally think they are when they try to flirt with a woman. \n\nMegan was around the art building, of course, and while Amy was never anything but polite, I picked up on the tiniest hint of irritation when Megan would visit with us. Of course, this could have to do with Meg's physical nature, as she often greeted me with a hug and would linger a perceptible second too long when she had occasion to touch me. Megan knew that I had a serious girlfriend now that was not attending the college and that none of our mutual friends had met. She once asked Amy if she had met my mysterious girlfriend, which made for a surreal conversation. \n\nAmy mischievously described a fictional blonde girl named Marie, who was so loud in bed that Amy had once threatened to record us and put it on the internet so that she could finally get some sleep. I had smiled to myself at the name \"Marie\" as it was Amy's middle name. She then told the breakfast bite mark story, enjoying my embarrassment, changing the name of the suspected biter from Megan to that of my fictional girlfriend. That had made Megan give me quite a look, given that we used to sleep together and I had never caused her lose her self control to that level. Then again, I hadn't exactly tried. I only shrugged, somewhat bashfully at the look that Megan gave me. She had excused herself rather quickly after that conversation, to Amy's complete amusement.\n\nAt home, she continued to sneak into my room almost nightly once everyone had gone to bed. We did not dare have sex with our parents home as we both had no faith in her ability to keep quiet during intercourse, but we spent a lot of time keeping each other sexually satisfied in other ways. Our parents appeared to be still oblivious to our relationship, and we remained vigilant in keeping it that way. We found that our lives sort of fell into two halves, almost like two separate worlds. \n\nThere was the \"outside world\" where we had to interact with other people and maintain some kind of distance from each other and the \"our world\" that we fell into when we were alone. We tried our best to keep ourselves in that kind of a mindset, which made it easier to keep our forbidden relationship a secret. While we never exactly discussed the \"rules\" of the \"outside world\", we more or less understood them. We kept physical contact to a minimum. We purposely antagonized one another over petty things like we had done pretty much since birth. And we made a point of doing things separately with our friends. I still went out to the bar occasionally with John and the rest of the guys. She would go clubbing with her friends most weekends. Of course, this meant that we were usually the first ones to leave the bar or club so that we could get back home to each other. \n\nMidway through the semester, the owners of the music store I worked for informed me that they were going out of business. It was not unexpected in the ever increasing digital era, but it was still disappointing. Finding myself temporarily unemployed, I was totally shocked when Dr. Miller offered me a position as his teaching assistant, which extended to helping him with things at his personal art studio. This was the kind of job offer that most of the art students on campus would kill for. I readily accepted the job, to Amy's complete delight. \n\n* * *\n\nOne Friday afternoon, I came home from class and set about working on a new canvas for the upcoming Fall art show. Amy was going to a friend's after work and wouldn't be home until late. I spent about an hour on it before I heard my mother call for me from downstairs. I went downstairs wiping the paint from my hands on a heavily stained dishrag and found her in the kitchen, working on dinner. \n\n\"How was class?\" She asked.\n\n\"Fine. I got my art history paper back today. I scored a 92 on it.\" I replied, quite relieved about that paper. Art History often bored the piss out of me.\n\n\"That's great, honey.\" She paused slicing up a bell pepper to look up at me. Something was clearly on her mind.\n\n\"Do you know if Amy has a boyfriend?\" She asked me after a pregnant pause. I found myself cocking an eyebrow, curious where this was going.\n\n\"Not that she's mentioned. Why?\" I tried not to sound as wary as I felt.\n\n\"It's just that she used to date all the time. I haven't heard her so much as mention a boy in a couple of months now. I'm not sure if I should be worried about her or not. Does she seem okay to you?\"\n\n\"She seems fine to me, mom.\" I replied, dialing my hidden panic meter back down a couple of notches. This conversation wasn't headed where I initially feared it may be. \"You remember that dickhe- er.. Sorry, mom. You remember that jerk she was seeing, Jeff? He cheated on her and really hurt her feelings. I think she's just taking a break for a little while from dating after that. But I think she's fine.\"\n\nThankfully, she elected to ignore my cursing. Normally, I'd have gotten a bit of a tongue lashing for that. It didn't matter how old I was, it was still her house. In her younger days, Amy had seen it as her personal mission in life to report me for every foul word that ever crossed my lips within earshot, despite her being the root cause of most of them. \n\n\"I guess so.\" Mom replied. \"It's just not like her, you know? She should be out having the time of her life right now.\" \n\n\"I'm sure she's fine.\" I certainly hoped that she was having the time of her life, as well. Just not quite the way that our mother did. \n\n\"You'll keep an eye on her at school, right? Make sure she doesn't fall for the wrong guy?\" She added.\n\n\"I can try, mom. She doesn't exactly value my opinion in the dating department.\" I felt the guilt stabbing me in the chest, feeling like my baby sister perhaps had fallen for exactly the wrong guy. The last guy she should ever fall for, in fact.\n\n\"I know, but you two are getting along really well these days.. Just try to watch out for her is all I ask.\"\n\n\"Sure. I'll do what I can.\" I replied, noncommittally. I felt bad about my relationship with Amy for the first time in a long while. It was one thing to not mention it to people and hide it. Directly lying about it to our mother was harder. Harder than I had expected.\n\n\"Thanks, sweetie. Dinner will be ready in about an hour. Love you.\" \n\n\"Love you too, mom.\" I replied and went back upstairs.\n\nI didn't fully exhale until I retreated to the relative safety of my bedroom. While our mother clearly had no idea about us, that entire exchange rattled me. I went to my computer and turned the music back on. I paced back and forth in front of the canvas for a while, trying to shake the darkened mood that I was slipping into. My mother's words \"the wrong guy\" kept repeating in my head, feeling like I was very much the wrong guy, even if I was the only one who seemed to realize that. I paced more, feeling my chest tighten. My eyes bored holes in the black canvas in front of me. An image began to form in my mind... I grabbed the paint knife from my shelf and set to work.\n\nI painted with an almost feverish intensity, working entirely in shades of black and white. I painted straight through dinner, never hearing the call that the food was ready. I kept layering on white paint, then scraping much of it away with the paint knife. Then I'd layer on black paint and scrap it the same way. Ghostly smears remaining behind. Subtle, mournful faces emerged from the background. Walls of tall, ominous shades of gray towered over them. Figures, not fully defined and only hinted at, cowered in the corners of the canvas, their faces covered in shame. The knot in my stomach finally began to loosen it's intense grip on me, as I wrapped up working on it for the night. \n\nI backed away from the canvas a moment to take in what I had done so far. My now black and gray forearms ached from how hard I had been gripping the paint knife. The shorts I generally painted in, the ones with the yellow hand prints all over them, were now heavily flecked in black and white, like a wearable Jackson Pollock canvas. With a heavy sigh, I dropped to my knees in front of it and closed my eyes wearily. I sat on the floor that way for several long minutes, emotionally drained and exhausted. \n\nA small, gentle hand came to rest on my shoulder. I almost flinched from it, but recognized the touch immediately and caught myself. I looked up at Amy's beautiful face to see a worried expression staring back at me.\n\n\"What's wrong, baby?\" \n\nInstead of replying, because I was unsure of what to say, I buried my face in her hip. For once, I remembered the paint all over my hands and didn't hug her. She placed a worried hand on the back of my head, holding me to her. She smelled so fucking wonderful to me, as always.\n\n\"I'm going to go take a shower, real quick. I'm a damned mess.\" I stood up and tossed the paint rag on the drop cloth by the rest of my art crap. \n\n\"I'll try to explain when I get out, okay?\" \n\nShe nodded, still looking concerned, but not wanting to push the issue just yet.\n\nI had been in the shower for a few minutes, collecting my thoughts and scrubbing my forearms clean. I was watching the paint from my arms create a gray line of water racing toward the drain, when the shower door opened and Amy, now fully naked, stepped in to join me.\n\n\"Are you nuts? What if one of them comes upstairs?\" I gave her an alarmed look.\n\n\"They're asleep. They won't come up.\" ",
        "\"Already?\" I replied, puzzled.\n\n\"What do you mean 'already'? It's after midnight.\" She still looked confused.\n\n\"Damn. I had no idea.\" I must have been working on that painting for hours.\n\n\"You were really intense with that painting. Something's really bothering you. I was in the room for about fifteen minutes before I touched you. You never even looked up.\" She took the washcloth from me, knelt down, and began scrubbing the paint flecks from my shins and calves. The sight of her gorgeous, wet, naked body kneeling before me caused my cock to take notice and twitch approvingly. \"We don't have to talk about it now, if you don't want. I just felt like I should be here with you right now. If you want me here?\"\n\nShe looked up at me questioningly. I cupped her cheek in my mostly clean hand, leaving a bit of a dark gray smudge on her face, and nodded. She flashed me one of the mid-sized smiles from her arsenal of things that she could use to melt my heart at any given moment. \n\n\"Mom is worried about you because you haven't been going out on dates lately.\" I cleared my throat.\n\n\"Oh really?\" Her eyes sparkled in amusement.\n\n\"She asked me to watch out for you with the guys on campus.\"\n\n\"Hmm... So my big brother is going supposed to be the door man with the clipboard of names of who's approved to date me?\" She asked playfully. Her hand came up to stroke my cock affectionately as she spoke.\n\n\"She wants me to make sure you don't fall for the wrong guy.\" I emphasized \"the wrong guy\" when I spoke, and swallowed hard. Her hand dropped from my cock to her thigh and she titled her head up at me. It was goddamned adorable. Why did she have to make this so difficult? \n\n\"So you are worried that you are 'the wrong guy'?\" She asked.\n\n\"The worst guy.\" I replied, feeling that knot move its way into my throat. \"The absolute worst guy you could ever fall for. Your brother. And isn't it part of my job to make sure that doesn't happen?\"\n\nShe stood and wrapped her arms around me in a tight hug. Her naked form felt fantastic against me. My dick remained erect in defiance of my troubled emotions.\n\n\"You aren't the worst guy, baby. Not by a long shot. You are the best thing that has ever happened to me. The absolute best. I'm so glad that I fell for you.\" Her hug tightened.\n\n\"You're biased.\" I made a tiny stab at humor, despite the circumstances.\n\n\"I am. But I'm also the most the most qualified to know what makes me happiest. YOU make me happy. It took me nineteen years to figure it out, but I did.\" \n\n\"I just want what's best for you, Amy. I love you more than anything.\" I whispered into her ear.\n\n\"That's easy. You are the best thing for me. You. So just keep loving me, and it will all work out, okay?\" \n\n\"Okay.\" I nodded, and hugged her back. She tightened her hug even more, a desperately tight hug.\n\n\"Amy? I'd like to breathe now, if it's okay.\" \n\n\"Fuck you, jackass. I'll hug you as tight as I want.\" She slapped my arm playfully, but her eyes were rimmed in tears. \n\n\"You feel better now?\" She asked, her voice totally serious.\n\n\"Much better.\" I kissed her forehead. She grabbed my face and pulled it down to hers in a deep, long kiss. \n\n\"Good. Glad that's settled. Now let's get this paint off before the hot water runs out.\" \n\nI smiled at her, wiping the paint streak from her cheek, and did feel a bit better.\n\n* * *\n\nThe Fall art show took place the weekend before Thanksgiving. Between prepping for the show, my class load, and work, I was insanely busy. The entire semester felt like it had gone by like a whirlwind. Amazingly, my classes were all going quite well. To no one's surprise, Amy's were going better. As it turned out, Dr. Miller gave me one of the most prominent placements in the show. I was one of five art majors who would have display space twice as large as the allocations that were given to the other students. The most noteworthy thing about this was that I was a sophomore. The other four art majors with the larger display space were all seniors and grad students. I heard rumblings of favoritism from some of the other art students, as I was Dr. Miller's assistant, but more than one student congratulated me. Amy was, of course, more excited than I was. \n\nOn top of how busy our schedules were kept between school and work, our parents had not gone on any of their weekend trips in over well over a month. As a result, Amy and I had been unable to even secure as much as an hour alone together in the house without a parent home in more than two weeks. As wonderful as her mouth and hands felt on my cock, I was absolutely dying to be inside her and she made her mutual feelings on the matter abundantly clear in a series of increasingly explicit text messages scattered through the passing days. There was also our upcoming Thanksgiving trip that would certainly keep us apart for a while. \n\nThe day before the show I had narrowed my choices down to ten paintings that I felt were decent enough to display. Amy asked to see the ones I chose and she agreed with most of my picks. I pulled two of them out that she seemed uncertain about. \n\n\"Why aren't you showing that one?\" She pointed at the black and gray painting that I had placed midway through a pile of older paintings leaning against a far wall. \n\n\"I'm going to paint over it.\" I replied.\n\n\"What? Why? You worked really hard on that.\" She looked astonished.\n\n\"Bad memories. I only painted it to try to clear my head that night. It has too much meaning for me. I don't like looking at it.\" I admitted.\n\n\"I still think you should show it. I know you were really upset when you painted it, but it's a great painting. I bet it will sell.\"\n\n\"If it doesn't sell by the time we get back from Colorado, I'm burning the fucker.\" I muttered, more to myself than her. The following week, our family was going to visit our aunt, our mother's sister, and her family in Colorado. In the past, I had enjoyed snowboarding in the mountains. This year, I felt like trying to get out of going, but could not think of a good reason for Amy and I both to remain behind. Actually, I could. But I couldn't bring myself to tell our parents that I wanted to spend the week deep inside their precious daughter. I harbored a few concerns about being around family that had known us our whole lives that may see something that our parents had overlooked between Amy and I. I didn't know what exactly. Just something that may give us away.\n\nI relented and put the painting in the show. Instead of naming it something arbitrary, as I usually did, I named it \"Judgment.\" It turned out to be one of the first paintings in the show to sell. At least I was rid of the damned thing.\n\nOur parents didn't come to this show, but Amy did. As before, seeing her in her outfit took my breath away. This time she wore a short, dark blue dress that showed a lot of leg. Her hair was again pulled back to show her sensuous neck, for my benefit, and her makeup was flawless. I wanted to take her home and fuck her the moment she walked in the door. I told her that very thing as soon as a safe opportunity presented itself. The death grip that she gave my arm, combined with the slight flush of her skin told me that my compliment, however obscene, had been well received. She moved among the people who would come to look at my paintings, playing up my artistic abilities and details of my work to them. Amy was far better with people than I was. I watched her with admiration as she seemed to effortlessly move from stranger to stranger, easing in and out of conversations. \n\nAs for myself, when Amy was chatting people up, I hung back near my work and visited with John, and for a brief while Dr. Miller. Dr. Miller commented again on my improvement as an artist, and to my annoyance, declared \"Judgment\" to be the best painting of mine he had seen thus far. But the majority of my time was spent with Amy, who intentionally kept me in a constant state of arousal throughout the event by shooting me seductive looks when no one was looking and occasionally whispering how badly she wanted my tongue or cock inside her when no one was in earshot. Needless to say, we left as soon as the show ended.\n\nWhen I got home, my phoned vibrated with a text message from Amy telling me that our father was still awake and that she'd come to my room once everyone went to bed. Being the paranoid sort that I was, I promptly deleted the message and headed inside.\n\nAfter a shower, I pulled on some cargo shorts and flopped in my office chair. I put on a jazzy electronic album and started a new sketch at the drafting table next to my desk. I liked to use calligraphy pens to draw when I worked on something larger than a sketchbook. Something about having to dip them in the ink reminded my of painting. I could see where it would annoy some people to have to stop every minute or so to reload their pen with ink, but I didn't mind. It felt like I had only started just begun to draw when I felt a hand snake down my chest and a head lightly rest on my shoulder. My face broke out in a smile as a familiar scent made its way into my lungs.\n\n\"Finally,\" I mumbled, dropping my pen on the table and spinning in my chair to face her.\n\nAmy stood over me, wearing her blue kimono style bathrobe. Without an invitation, she dropped herself in my lap and wrapped her arms around my neck. I chuckled and kissed her.\n\n\"You don't have a shirt on.\" She smiled, pointing out the obvious. \"That's not fair.\"\n\n\"Someone keeps stealing all mine. I'm running out of clothes.\" I no longer cared in the least if she wore my shirts. \n\n\"Well, you made all kinds of money tonight. You could go buy some more shirts with some of it.\" She replied as she looked down at my bare chest, dragging her fingertips over it.\n\n\"Or... you could just spend it all on me!\" She smiled brightly at me. \n\n\"I dunno if you're worth it, really.\" I cut my eyes away from her, trying to contain my smirk.\n\n\"Excuse me?\" She responded with the expected amount of indignation as she stood up. \"I should just go back to my room tonight, if you feel that way about it.\"\n\nShe made a show of walking to the bedroom door, but spun back to face me, letting her kimono fall open as she turned. \n\n\"You sure you don't want to rethink that?\" She asked. My eyes, operating on a will of their own, devoured the vision before them. Amy was wearing set of blue lingerie with black lace trim that I'd never seen before. She was so fucking beautiful that I had trouble remembering how to speak for a moment, and she knew she had me.\n\n\"My god...\" That was as far as I got, before she shot me one a sultry look and began sashaying back toward me. \n\nA new song started on the album that was playing. Amy clutched the robe closed and began dancing playfully to the music. I made a move to stand, but she gave me a stern look.\n\n\"Bad, brother, bad! Stay down.\" She snickered as she said it, but kept dancing. I took the hint, mildly amused, and sat back to take in whatever it was she was planning.\n\nShe swayed her hips as she danced, and allowed her robe to slip off of a shoulder. Her eyes would lock on mine, just long enough for the look in them to make my cock throb in excitement, then she'd look away closing them as she kept moving. A long, shapely leg would glide into view and then vanish behind the folds of the robe again as she danced. Whenever she would move close enough for it, I would reach for her, but she would slide away. There was laughter in her eyes when this would happen, but she kept her face serious and seductive. I kept my seat by sheer force of will alone as she continued to tease me.\n\nShe finally drifted just a little too close, and I managed to grab the edge of her robe. It was only after that I realized she had done that on purpose. She slid out of the robe in a single, graceful shrug and continued to dance around me in only her underwear. My beautiful little sister was completely mesmerizing. I snapped out of it as the song drew to a close and she twirled herself up next to me. This time I stood and wrapped her in my arms from behind. She sighed and leaned back into me, curling one arm over mine as I held her.\n\n\"Gotcha.\" I mumbled into her delicate throat as I began kissing it.\n\n\"Yes, you do.\" She sighed back, hugging my arm against her bra covered chest. Her other arm moved over my thigh, sliding back to pull me tighter against her. \n\nOne of my hands moved up to rest along the curve of her jaw, and she nuzzled her cheek into my palm in response. I kissed my way up to her ear, giving her lobe a quick nip before sliding my tongue along the crease behind it. She gasped softly and arched her back to push her head and shoulders against me harder. I cupped an undeniably inviting breast in my hand, feeling her nipple through the fabric of the bra and pinching it gently. Her body trembled and a shaky moan escaped her. \n\nShe reached back and unhooked her bra. I pulled her shoulders back toward me as she shrugged out of it, watching her glorious breasts come into view from over her shoulder. My hands skimmed the surface of her skin until they came to rest over the curves of her tits and began massaging them. Her head fell back against my shoulder with a long shuddering moan. \n\n\"God, I love you so much.\" I heard my sweet, baby sister whisper. Despite myself, a small smile broke out on my face as I continued kissing her throat. \n\n\"I love you, too.\"\n\nAmy's hands snaked back between us as she fumbled for the buttons of my shorts. She let out a grunt of frustration after a few moments of groping around at my waist. Chuckling, I reached down and unbuttoned them, allowing them to slide to my ankles before getting back to groping her magnificent tits. She sighed, momentarily satisfied and ground her hips back against mine. I became aware that my erection was forcing her panties into the crack of her ass as we ground together. \n\nPulling her hair to the side, I began kissing the back of her neck and working my way down to her shoulders. I kept kissing her, watching the muscles of her back tense up as my lips played over them, gliding slowly and gently down. My fingers hooked into the sides of her panties and pulled them down as I settled on my knees. She moaned as my lips touched the small of her back. I brought my hands up to cup the globes of her beautiful ass, kneading them slightly. I could smell her arousal, her scent filling my lungs with anticipation. I unconsciously licked my lips.\n\nAmy leaned over, supporting herself on the drafting table and parting her legs to allow me better access. I spread her ass cheeks and exhaled a breath of air across her softly parted folds. She gasped above me. I leaned in and kissed the back of her inner thigh, watching it twitch in response. I angled my face to the other thigh and gave it a light lick before pulling away.\n\n\"Mmm... you're a mean brother.\" She groaned in frustration. \"Teasing me like that.\"\n\nI smiled to myself behind her. I loved drawing out the last moments before I touched her. If that made me a mean brother, I'd learn to deal with it. I dropped one hand from her ass and caressed the inner thigh that I had kissed, bringing my hand up to the point of almost touching her already glistening pussy. I heard her suck in a breath and hold it, expecting my touch, and angled my hand at the last second so that my fingers never touched her pussy and brought my hand back down her thigh. The disappointed groan from above me was all I had hoped for. \n\n\"I'll remember this.\" She threatened.\n\n\"Says the one who started this.\" I replied, sending another warm breath across her lips. My hand moved back up to part her ass cheeks again, and I took in the sight of her beautiful pussy and the rosebud above it. It was just too inviting. My tongue licked down her slit, making her jolt as if I had zapped her with electricity.\n\n\"Oh yessssssssssss.\" She gasped, gripping the sides of the table, and lightly pressing her ass back toward me. My tongue parted her labia, drinking in the hot fluids that poured from her. I leaned forward, thrusting my tongue deeper into her. As I drew my tongue back, I impulsively did something I'd never done before with anyone. I ran my tongue along her puckered rosebud. \n\n\"WOAHSHIT!\" She yelped and flinched away from me in shock.\n\n\"That was my asshole.\" She stared at me wide eyed.\n\n\"Sorry, I just saw it and suddenly wanted to taste all of you. Guess I shouldn't have?\" I muttered, slightly embarrassed. She visibly relaxed.\n\n\"Don't be.\" She said, \"I was just surprised is all. No one's ever done that to me before.\" She turned back toward the table, parted her legs even farther than before, and bent over as seductively as she could. \n\nI ran my hands over her hips, leaned in and began planting kisses on her warm lips. I felt her clit with just the tip of my tongue, and she shuddered. My tongue made a lap around it twice, then ran back the full length of her slit. In moments, we were back to our rhythm and I could feel her desire radiating from her warm center.\n\n\"You.. uhnnn... can do it again.\" She groaned. \"If you want.\" I kept my focus on licking her beautiful, aromatic pussy, thrusting my tongue as deep into her as it would reach, not wanting to break the mood again. It was a different experience going down on her from behind like this, her anatomy being positioned the opposite of what I was accustomed to when eating her out. After a few moments, she slightly bent her knees, lowering her ass the tiniest bit. Taking this as a sign she did wish for me to repeat my earlier action, I slid my tongue the full length of her pussy and kept going up to her tiny puckered hole. \n\nShe didn't flinch away this time. I watched it twitch slightly in response to my touch. My hands lightly gripped her hips as my tongue traced the perimeter of her asshole. She sighed and put a hand to her breast. I applied a little gentle pressure and felt my tongue penetrate her just the tiniest bit. \n\n\"Oooooohhh..\" she hissed. \"that feels.. different.\"\n\n\"Should I stop?\" I asked, pulling away slightly and planting kisses across her beautiful ass.\n\n\"God, no. Do whatever you want to me.\" She gasped.\n\nI brought my hand up to rub her slit, gliding a finger into her as my tongue bathed her rear entrance again. She moaned above me and began to quiver. I rubbed her clit lightly with one of my fingers as I pumped a second one inside her, my tongue prodding gently just above them. Amy's hips pushed back toward me, trying to get more of me into her. I complied, increasing my hand and tongue pressure until I was penetrating both of her holes. \n\n\"So close.\" She moaned. \n\nI intensified my hand's efforts on her pussy, while my other hand roamed her back and hips. I kept tonguing her asshole, finally inserting it as far as I could and dragging it out slowly in a circular motion. Her orgasm hit her hard as she released a long series of muffled moans, and she bucked away from me, dropping to her knees. Only then did I notice she'd covered her mouth with one of her arms trying not to cry out. I sat back, watching her beautiful form gasp for breath as she came down from it. I couldn't help smiling softly. I loved and marveled that I could do this to her. \n\nI went to wrap my arms around her, but she motioned me away. She had done this once before after a particularly strong orgasm, telling me later that it was just too much sensation at that moment. I knew better than to take offense and pulled myself, smiling, up into my office chair to let her recover. I leaned back in my chair and closed my eyes. They opened again a few moments later when I felt her straddle me in the chair.\n\nAmy's arms wrapped around my neck as she looked deep in my eyes, her throat and chest still flushed from the orgasm I'd given her.\n\n\"You, my dear brother, are fucking amazing.\" She whispered softly. ",
        "\"Funny, I was thinking the same thing about you.\" I replied. Without meaning to, I inhaled sharply as I felt my cock brush against her pussy. She grinned and ground her hips against mine, increasing our contact.\n\n\"I need my big brother's big dick inside me.\" She groaned in my ear. \"The hell with our rules tonight. I need it.\"\n\nAs if she felt I needed convincing, she thrust her hips toward me, raising herself up at the same time so that her nipples grazed my chest. She knew the effect this had on me, and if she didn't, the feel of my cock's lurch against her mound should have left no doubt. I shifted my hips a bit when she rose up again, and felt the head slide between her wet lips.\n\n\"Ooohhhh yessss.\" She purred as my dick made its way into her tight canal. I released a groan of my own.\n\nI dipped to take one of her breasts in my mouth, bathing her nipple with my tongue. She moaned almost too loudly and caught herself. Amy began rocking herself up and down, impaling herself on my cock. I closed my lips around her nipple and tugged gently, hearing her react with a whimper. Tilting my head back, I brought my hand up to cup the back of her head and draw her lips down to meet mine.\n\nOur tongues sought each other out, hungrily darting around in each others mouths exploring every crevice. We both groaned into each other as I thrust up to into her. \n\n\"You are so goddamned gorgeous, Amy.\" I breathed, breaking contact with her mouth a moment. \"I'm so lucky to have you.\"\n\n\"You'll always have me, sweetheart. I'm so yours.\" She whimpered in my ear, gasping softly, as her thrusts increased.\n\nAfter a few minutes, her thrusts stopped momentarily, and she slid her hands back to rest on my knees, arching her back away from me. With her hands on my knees like that, her beautiful breasts were thrust upward toward me and I could see the lust filled expression on her face. She began moving up and down again, her chest heaving, breasts bouncing. The sight of my beautiful baby sister bouncing on my dick like that nearly made me come on the spot. I felt cemented in place, my attention focused on her amazing tits and beautiful face. \n\nAmy brought a hand up to cup one of her breasts, pulling on her own nipple and moaning as she impaled herself on me over and over. It may have been the sexiest thing I had ever seen, and the sharp gasp of air I inhaled made her grin. She knew what she was doing to me. \n\n\"Fucking hell, you look sexy like that, baby.\" I breathed.\n\nShe brought her head up to meet my gaze, an intense, predatory look in her eyes. Her body rocked forward again to regain her balance. She gave me a hungry, lustful smile as she cupped the breast in her hand and brought it up to her lips. Her tongue snaked out over her nipple, her shimmering eyes closing momentarily as she moaned into her own nipple. My dick throbbed appreciatively, and she cocked an eyebrow, acknowledging that she felt it happen. She gave her nipple another lick and wrapped her lips around the little nub. A whimper escaped her as her lips held her nipple in place and her hand dropped away. My hand shot up to replace it, holding her breast for her and the corners of her mouth curled in a small smile. She released her nipple only to give me another hungry look.\n\nMy head shot forward, my tongue rocketing out to lick the underside of the same nipple she had licked. Our tongues wrestled with each other for a second around her nub, sharing the licking duty on her breast. Her eyes went wide at that, and I felt a warm rush of fluid against my crotch. She locked my mouth to hers, breast forgotten, in a bid to silence the scream threatening to break out of her throat. My hands dropped to her hips, pulling her onto my dick as hard and tight as I could. Blood was rushing in my ears as I felt the first surge of my semen burst forth deep into her. She let out a high pitched cry, her hot breath forcing its way into my lungs, as rope after rope of my semen splashed inside her. Her vagina held my dick like a vice, pulsing around it, her own orgasm rocking her body as strongly as my own. As she continuously shook against me, her hands gripped my shoulders with a fierce intensity. Finally, after what felt like a glorious eternity, our lips broke contact and she collapsed against me, her head on my shoulder.\n\nI held her to me, breathing raggedly. As I regained my senses from the incredible release I had just had, I was struck once again by the realization that I'd never been with anyone who even compared to Amy. She was, without question, the most amazing lover I'd ever had. She was always telling me that I was full of surprises, but she seemed to blow my mind on a daily basis. She certainly had blown me away tonight. \n\nHer breathing began to slow against me, and I began to wonder if she was awake. I resented that our parents were home. I really wanted to carry her to my bed and cradle her all night. I loved her more deeply than I had ever loved anyone. The risk of one of our parents coming upstairs to look for either one of us was kind of remote, but still a real possibility. One of her hands moved up behind me and she ran her fingers gently through my hair. I guess she was awake, after all.\n\n\"I really, really needed that.\" She whispered dreamily against my neck. I couldn't see her face, but I could feel from the way her lips brushed my skin that she was smiling. She kissed the side of my neck affectionately.\n\n\"Makes two of us.\" I replied. \"You made me need it a hell of a lot more by the end, though.\"\n\n\"You liked my little show?\" She asked, a playful tone in her voice.\n\n\"God, yes. It was incredible.\"\n\n\"After that move you pulled, I felt like trying something I'd never done before either. I'm glad you enjoyed it.\" Amy pulled away from my shoulder enough to meet my lips in a smiling kiss. \n\n\"Did you enjoy what I did?\" I asked, just a little hesitant. \n\nShe blushed visibly at my question, and looked away at the floor. \n\n\"Yeah, I did. I enjoy everything you do to me.\" Her eyes shifted back to meet mine. I saw the emotion swirling in them. \"I love you so much, Adam. I really do.\"\n\n\"I love you too.\" I responded, giving her a kiss of my own. We held each other a while longer, before she begrudgingly climbed off of me and went to the bathroom. \n\nIt wasn't until I was left sitting in my chair alone that I saw the India ink dripping from the drafting table. Somewhere along the way, we had knocked over the uncapped bottle of ink. So much for that drawing. I pulled my shorts on and set about cleaning it up. Thankfully, there hadn't been much on the drafting table to get ruined. I smiled to myself, thinking that a year ago, I would have wanted to kick Amy's ass for knocking over a bottle of India ink like that. At the moment, I felt like it was more than worth it. \n\nAmy, wearing her robe again, got back in time to find me on my hands and knees scrubbing ink off of the floor.\n\n\"What hap- Oh!\" She asked as realization sank in. \"Sorry about that.\"\n\n\"No big deal.\"\n\nShe dropped down next to me and used the washcloth she had brought to clean up our other mess from the chair and the floor. Something about the two of us on our knees cleaning next to one another struck her as amusing and she gave me a playful shove. I ignored her just long enough to finish cleaning, then pinned her to the floor with my hand over her mouth while I tickled the living shit out of her with the other. She thrashed like wild, screaming into my hand but muffled enough to not wake the house. Once I could felt she was sufficiently harassed, I let her up. \n\n\"Meanie.\" She pouted.\n\n\"As if.\" I laughed. I reached over to where she was sitting on the floor and brushed the mess of her hair from her face to behind her ear. My hand slid down to cup her cheek and she nuzzled her face into it. \n\n\"I whine about it a lot, but it is torture that I have to go to bed alone every night while the love of my life is only 30 feet away.\" She sighed, her eyes still closed. \"Especially after an amazing night like this.\"\n\n\"That must really suck. I can't imagine what that would be like.\" I quipped. Her eyes shot open and narrowed at me. She was right, but I had a sense of duty to be a wise ass. Reputation to uphold and all that.\n\n\"You jackass. I'm being serious.\" \n\n\"I could ask if mom will let us move your shit to the basement. It would give me a room to use for an art studio up here and add at least another 50 feet of distance for you.\" \n\nShe fought hard not to grin, but I could see the muscles on the side of her mouth twitching upward. \n\n\"Kiss my ass, damn it.\" \n\n\"Uhm... I kind of alrea-\" I started.\n\n\"Oh, shut the fuck up!\" She laughed, cutting me off at the same time, and turned crimson at the same time. \"I set myself up for that one, I admit.\"\n\n\"By the way, I thought it was pretty funny the way you turned 'whoa, shit' into one word earlier.\" My grin widened.\n\n\"Damn it, you are in a mood, aren't you?\" She scooted over against me where I sat with my back against the bed. \"You always make me laugh.\"\n\n\"I try. I like your laugh.\"\n\n\"What am I gonna do with you?\" She asked. \n\n\"I'm pretty sure you've done a lot more with me than any sister is supposed to do.\" I replied. \"Not that I mind.\"\n\n\"Well, I'm pretty sure brothers aren't supposed to do most of what you do to me either.\" She pulled my arm around her in a snuggle.\n\n\"Want me to stop?\" I teased.\n\n\"Not in the least. I never want you to stop.\"\n\n\"Good.\" \n\nWe hung out until we could barely keep our eyes open. Finally, I walked her to her room and tucked her into bed. She made a show of not letting me leave. She pouted when I made myself go to the door to leave.\n\n\"Adam.\" She called softly when my hand touched her door facing.\n\n\"What?\" I glanced back at her.\n\nShe'd pulled the covers down and removed her top. She held one of her breasts in her hand and as soon as she saw me look back, she gave her nipple a long, sexy lick. Releasing it, my goddamned tease of a baby sister gave me a seductive wink. I stared at her hard for a moment, trying to will myself to head for the door. \n\n\"Still want to go?\" She asked as innocently as she could.\n\n\"No, brat. I don't.\" I sighed, but I left anyway. I could hear her chuckle as I closed her bedroom door behind me. I was still smiling to myself when my face hit the pillow in my own room.\n\n* * * \n\nEnd of Part 3"
    ],
    "authorname": "Anomic",
    "tags": [
        "sister",
        "littler sister",
        "taboo",
        "sibling",
        "incest",
        "sibling love",
        "incest drama",
        "romantic incest",
        "brother sister romance",
        "loving"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/all-i-need-pt-03"
}