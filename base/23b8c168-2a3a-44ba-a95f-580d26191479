{
    "title": "Lost Empire Ch. 51",
    "pages": [
        "0001 - Tempro\n\n0003 - Conner\n\n0097 - Ace - Zimmel\n\n0098 - Lucy\n\n0101 - Shelby (mother ship) - Derrick\n\n0125 - Lars\n\n0200 - Ellen\n\n0301 - Rodrick\n\n0403 - Johnathon\n\n0667 - Marco - Brown\n\n0778 - Jan\n\n0798 - Celeste - Shelby (human)\n\n0908 - Tara - Mara\n\n0999 - Zan\n\n1000 - Sherry - Lucie (for the moment)\n\n_________________________________\n\nDerrick was moving through the access way toward the main section of the shipyard. Ahead to his right Staff Sergeant Randall Jimison signaled to his left. Sergeant first class Daniel Norman nodded as he adjusted the mirror. Looking back he signaled two guards in a standard patrol. Nodding Derrick signaled to take them quietly no noise. Shaking his head he thought back to Tempro. \n\nBoth men slipped around the corner as Derrick watched in the mirror that they had left. As quiet as he remembered them being, Derrick watched as they approached then put both guards away with little to no noise. \n\nDerrick came to both men at a run as they stood in front of the thick security door. When both men shrugged at him Derrick again thought to Tempro, a moment later the door clicked then slowly opened. Smiling both men nodded as they moved inside. \n\nDerrick nodded to both men as he signaled to spread out looking for any more guards. Shaking his head Derrick hadn't expected the situation that was here. Apparently the ship yard had been infiltrated by some really bad characters. According to Tempro all that was known was that there had been an explosion on the transport as it moved away from the ship yard. \n\nDerrick had cursed when he saw what appeared to be pirates again in the main hallway. So far the scans had indicated thirty men that were here, well twenty eight now. All the reports had said that thirty bodies had been found after the transport had exploded. Further into the complex Derrick almost growled when he saw that their enemy had tripled their guards. 'Damn' he thought, 'did they know that they were here?' \n\nDerrick saw that both men were working their way back to him. \"I can see at least eight out here, and another eight at the next junction. Might get one set of them not sure about both.\" Norman told him. \n\n\"I tend to agree, we could get five or six, but afraid the last two or three might set off the alarm. Sorry Commander.\" Jimison told Derrick. \n\nDerrick sat a moment as he was listening to Tempro. Nodding Derrick described a way into where the people from the transport were being held. A mere ten minutes later they were well inside about to make a move when an alarm went off. \n\n\"What's with all the damn noise?\" A large man with several scars on his older face snarled into his com. \n\n\"Found the outer most guard dead sir,\" came the voice of a young sounding man. \n\n\"WHAT!!?? Everyone out! Find the bastards! Leave three here with me, ought to be enough to control these scared pansies.\" The obvious leader was yelling into the com. \n\nDerrick smiled then nodded to both Norman and Jimison. Both men, moved through the back of the walls picking their positions. Taking a deep breath Derrick knew that this next part was risky as it always was. Checking his repulser vest he stepped out into the room. \n\n\"Hey asshole!\" Derrick yelled then dived back in the wall. \n\nAll four of the pirates whirled toward where they had heard the shout. \"They are in here with us!\" The older scar faced man yelled into his com. Then toward the room he said, \"You're dead you piece of shit!\" \n\nRushing toward the wall, the leader only heard the first then the second of his men go down. \"Get back...\" The man started to yell then the com. was flying across the room with a hole in it. A moment later the third of the men went down. \n\nGrabbing one of the females in the room the man shouted to the air placing a wicked knife at her throat. \"Go ahead but I guarantee that's she's dead whether or not you get me!\" Two shots from different directions were heard. Then the knife was flying in one direction as the man was falling back with a hole in the side of his head. \n\nDerrick ran out to check on Shiloh and Grant. \"Lieutenant Shiloh, Warrant Grant can you both stand?\" \n\nBoth men looked up at Derrick with both their mouths hanging open. \"Sir?\" Shiloh stated. \"Is that really you?\" \n\nDerrick had to chuckle, \"Yes, though I think we're about to have company. I want you and Grant to get everyone out of here and back to your ship.\" Derrick smiled more as he patted both of the men on their backs. \n\nGrant snapped to attention as did Shiloh. \"Will do sir!\" Grant said as they gathered everyone up heading for the open wall. \n\nDerrick waited until they were all out then entered the wall himself moving to a better position. Touching his ear he said. \"Take them all no survivors!\" \n\n\"No problem,\" came Jimison's grim reply. \n\n\"Happy to clean up the filth.\" Norman said with a smile. \n\nThe next ten minutes could only be described as a blood bath as the men came in en masse. Then they were falling almost as fast, as all three of the men took them out. Unable to see their targets the final few panicked trying to escape. They were also taken down by several well placed shots. \n\nA sound Derrick hadn't heard in a long time came from his communicator. \"Yes?!\" Derrick stated when he opened the channel. \n\n\"Commander?\" Came the voice of Shiloh. \n\n\"Yes Lieutenant?\" Derrick said a moment later. \n\n\"Just wanted to let you know that we are secure. The wife and four children were well hidden so they were safe.\" Shiloh replied. \n\n\"Wife and four children? I never knew you were married! Before you leave I'd like to meet them.\" Derrick told the man as he silently cursed to himself. Damn it! Why in the hell hadn't he thought that they might be married AND have children. Shaking his head he guessed he thought that they were all loners like he was. \n\n\"Sure Commander, we've got a bit of time before we leave. We have to restart the plasma drive so it's going to be at least an hour.\" Shiloh responded. \n\n\"Oh, good then I'll get to meet all of them.\" Derrick said through tight drawn lips. \"At least I hope I get to meet all of them.\" \n\n\"Yes sir. Mika is thrilled to meet the man she says kept me alive to come back to her!\" Shiloh chuckled. \n\n\"Well, I'm glad I have a fan.\" Derrick said with a hint of laughter in his voice. Looking up Derrick's face was suddenly grim as he nodded. Damn it! They had so little time! \n\nTurning toward both Norman and Jimison, Derrick advised them. \"I'm sending you both back to Tempro, we've only got three hours before all hell breaks loose. I really don't want to be here when the Rangers arrive. It's going to take all Tempro has to get clear enough. Unfortunately the ripalon energy prevents him from using a lot of his apparatus.\" \n\n\"Are we in danger commander?\" Jimison asked. \n\n\"No I don't think so as long as we are away before the time.\" Derrick replied. \n\n\"Do we have to sir? Can't we just save them all?\" Norman said with a grim face. \n\n\"I wish I could. Few know of Tempro and I'd rather keep it that way as long as possible. That plus I'd hate for others to think I was changing their and my past. No I have to keep things as close to what they should be as possible. You know I need all of you, I am taking a very big risk taking Shiloh's family. Though if I don't, I know he'd hate me as long as he lived.\" Derrick told them. \n\nBoth men nodded with large eyes then they winked out as Derrick thought to Tempro. [\" I want you to be ready to go as soon as possible. Are the trackers working?] \n\n[\"Yes Sire, they are functioning at optimum efficiency. I have another five ready for you sire.\"] Came Tempro's thoughts. \n\n[\"Good send them now.] Derrick replied. On a table next to Derrick there was a shimmering as five extremely small electronic pieces appeared. [\"Range,\"] Derrick asked. \n\n[\"I can get a clear signal for at least 200,000 kilometers. After that a booster is needed. I estimate that this is barely enough distance to render minimal damage.\"] Tempro answered. \n\nDerrick nodded as he scooped up the electronics heading toward where the transport was docked. Stepping onboard he was suddenly surrounded by three of Shiloh's children, and then a slender Asian looking woman walked to him giving him a hug as he patted her back. \n\n\"I am so glad to finally meet you sir.\" The woman said as soon as she released him. \"Thanks to you I still have my Gunter.\" \n\nDerrick had been prepared to actually hate the woman. Now he could see why Gunter Shiloh had been drawn to her. \"Thank you ma'am. I just hope that the next few hours aren't too much of a stress to you or your children.\" Derrick said as he was shaking the hand of the sixteen and fourteen year old sons of the woman. A ten year old boy was hiding further back walking out when his mother called him. \n\nDerrick shook his head there was no way he could ever hate any of these offspring of Shiloh. Slyly he patted all three of the males on the back as he moved toward where Shiloh and Grant were in the command of the ship. \n\nBoth men stood to salute Derrick as he came in. \"Glad to see you commander. You really saved us back there.\" Shiloh said. \n\nLooking down Grant stated. \"We should be ready to go in half an hour. Can we give you and your men a ride?\" \n\n\"My men?\" Derrick said with a surprised look. \n\n\"I know when more than one shot is taken sir. Especially when the leader went down. Two shots from two different directions. Hell if I didn't know better I'd say it was Norman and Jimison.\" Here Grant hung his head. \"I know that's impossible as they both are dead.\" \n\nIt took all Derrick had not to smile as he thought of both the men alive and well back on Tempro. \"Yes, it was a sad day when both of them died. I felt a part of myself ripped away when I found out.\" \n\nBoth Grant and Shiloh were nodding as they hung their heads. \"I'm glad you got to meet the family.\" Shiloh told Derrick. \n\n\"Yes, you have some fine boys Lieutenant.\" Derrick told him. \n\nNodding Shiloh suddenly looked up. \"Thank you sir, what did you think of little Shelly?\" \n\n\"Shelly? I didn't meet a Shelly. I was wondering why you told me you had four children when I only met three!\" Derrick stated. \n\nShiloh's eyes got wide then he nodded as he picked up a com. \"Shelly Shiloh! You better not be in the plasma reactor room again! I'm afraid I have to go get her. I'll be right back.\" \n\n\"I have to go Lieutenant; I just hope our paths cross again.\" Derrick said as he was cursing under his breath. [Follow him Tempro! If you have to take him early when he is touching her then do it!\"] \n\n[Yes Sire. I have him on now. I will IMT you as soon as you are clear.\"] Tempro replied. \n\n[\"Alright leaving now. Start away as soon as I am aboard.] Derrick said. \n\n\"Sir?\" Derrick heard from behind him as he was about to step out of the ship hatch. \"It would only take a moment; do you really have to go?\" \n\nDerrick stopped, turned around towards Shiloh standing to his full six foot two inch height. \"I'll meet her one day Lieutenant, I suggest no matter what happens in the next few hours? You hold that little girl tight, very tight understand?\" \n\nShiloh nodded a look of surprise and worry on his face as he thanked the commander. Hurrying past Derrick, Shiloh made his way to the reactor room as fast as he could. Derrick smiled sadly as he stepped outside the ship then winked out. \n\nShiloh started to hunt in the reactor room for Shelly as fast as he could. Something cryptic in what the commander said was nagging at him. Finally! Shilo found her sitting on the other side of the reactor room watching the engineer. \n\nHis hands on his hips he walked up behind her. Slowly turning her head she gulped a bit at the look on her father's face. \"Uh-oh.\" She stated. \"I'm in trouble?\" \n\n\"Not as much as when your mother finds out young lady!\" Shiloh told her with a grim look on his face that was quickly melting. The sorrowful, almost pitiful look Shelly's face held was about to cause Shiloh to laugh. He knew all her tricks though he wasn't immune to all of them. \n\n\"Are you going to tell mommy?\" The nine year old asked of her father. \n\n\"Hmmmm, not sure, though this is a good thing to hold over your head don't you think?\" Gunter said a small smile on his lips. \n\n\"Daddy! I'm just a kid!\" Shelly cried. \n\nShiloh was shaking his head as he touched the black curls on her head. \"Oh yeah?\" Shiloh said with his hand on his chin. \"Sometimes I wonder about that! Your vocabulary and knowledge seem to be far beyond that of a mere kid! Come on let's go get you strapped in with your brothers and mother we're about to leave.\" \n\nThey were walking toward the berthing area when the Commander's last words came back to him. [Lieutenant, I suggest no matter what happens in the next few hours. You hold that little girl tight, very tight understand?] Damn it! Gunter still couldn't shake the feeling that something was up. It seemed way to damn much a coincidence that the Commander had shown up. \n\nTaking out his com. Gunter called his wife. \"I'm taking Shelly to the control room Mika.\" \n\n\"I thought you didn't allow her in there.\" Came her reply. \n\n\"Usually I wouldn't, but I got a strange feeling. I haven't had one like this in a long time last time was with the Commander also. I almost ignored it, damn near got me killed.\" He told his wife. \n\n\"Gunter, are you alright? I can hear almost fear in your voice!\" She replied. \n\n\"Like I said not sure, things just seem odd.\" he said. \n\n\"Alright but hold her tight hon.\" Mika told him. \n\nClicking off Gunter could only stare at the com. with a startled look. Almost the same thing that the Commander had said! \n\nMaking his way to the control room he sat with Shelly on his lap. To say the little girl was thrilled was an understatement. It was almost an hour later when Shiloh looked over to Grant as they both started the procedures to undock then leave. \n\n\"Levels look good, all hatches closed, all seals good. No ruptures, no loss of atmosphere. Now backing out, ready when you are sir.\" Grant told him. \n\nShiloh was about to activate the engines when he noticed they were still a little close to the station. \"Mr. Grant I suggest we put more than a mere thousand Kilometers between us and the station. Did you notify the Rangers of what happened?\" \n\n\"I have been trying; it appears that there is an unknown energy coming from the station. I have compensated for it though still no contact.\" Grant told him. \n\nSomething was nagging at Shiloh's brain more as he watched them start to finally slip further from the station. The energy he was seeing he swore he'd seen it before. \"Ranger command. This is transport R-00101. Do you read me Ranger command?\" \n\nA moment later there was a crackling as they both heard, \"this - --command. You are in a -- --- --. Repeat you -- - - high --- area.\" Came the weak sounding staticky signal. \n\n\"Command we we're attacked by pirates. Please send help to old space yard OR - 030 near outer rim.\" Grant said. \"Crap can't seem to get through. Guess we need to get further away.\" \n\nShiloh nodded they were at 4000 kilometers and steadily moving though it was all inertia. Reaching for engine control Shiloh pressed forward gripping Shelly tighter, as what had been nagging at his mind broke free! \n\n\"Follow them as close as you dare Tempro.\" Derrick said as he gripped the control chair. Damn it he hated to wait like this! \"Time?\" \n\n\"Information says that the ship exploded five minutes from now.\" Tempro said as they watched the ship slowly make its way further from the station. \"4000 kilometers, 4100, 4300, 4500. Now initiating.\" \n\nA minute later the entire ship exploded! \"Did you get them all?\" Derrick almost yelled. \n\n\"I am having difficulty retrieving the last two! Sire I am afraid I am going to lose them!\" Tempro cried. \n\nDerrick flew to the control input key board as he was typing faster than he'd ever done. \"Shelby!\" Derrick was screaming as she appeared. \"I need you to interlock your IMT with Tempro's\" \n\n\"Derrick that would burn my IMT out completely. It would require at least a week to regenerate.\" Shelby told him. \n\nDerrick was still typing as fast as he could. \"Please Shelby I can't lose them! I can't let them die out there alone! I can't!\" \n\nShelby's eyes had tears in them as she nodded: \"Now syncing IMT systems together. Brother I am increasing and matching you IMT frequency. I can see them brother now increasing to one hundred percent, now one hundred ten, one twenty, one thirty five. Now at one fifty.\" \n\n\"I have them sire the increase is helping. Almost there!\" Tempro told Derrick. \n\nDerrick looked at Shelby as tears started to fall from her eyes. \"I'm sorry Derrick I have no more. I can feel the system starting to fail.\" \n\nDerrick heard a distant explosion as the ship shook a bit. \"Shelby are you alright?\" \n\n\"Not completely Derrick, I am afraid that my IMT system has exploded. It also seems to have taken out a few of my systems. I'm afraid I will have to regen for a time. I'm sorry I failed you Derrick.\" Shelby said with tears in her eyes then she vanished. \n\n\"Shelby!\" Derrick was yelling as there was a shimmer on the floor near him. Shining bright a moment then Derrick saw an unconscious Shiloh with his arms wrapped tightly around a nine year old girl. \n\nThe girl struggled out of his arms as she started to cry then tried to wake her father up. \"Daddy, please wake up! I'm sorry I was in engineering again please daddy!\" Looking up seeing Derrick the little girl asked, \"Can you please help my daddy? He's hurt!\" \n\nDerrick immediately looked at Tempro, \"infirmary now!\" Tempro nodded as Gunter winked out the little girl staring at the spot he'd been in. \n\n\"He's ok, he's in the infirmary. You know what that is don't you?\" Derrick asked a worried look on his face. \n\n\"Of course mister,\" the little girl said as a strange look came over her face. \"It's a place for the care of the infirm, sick, or injured; hospital or facility serving as a hospital.\" \n\nDerrick nodded as he looked closely at the child. She appeared to be normal though as he well knew looks were ALWAYS deceiving. \"Please follow Tempro to where he is please that way you can be there when he awakes.\" \n\nSlowly getting off the deck she finally noticed the other men who were there with him. Then she turned toward Derrick, \"is daddy going to be ok? I remember that something exploded as daddy was reaching to do something with the controls. I heard him yell as he held me tight then he was quiet. Then all of a sudden we were here. This is really strange.\" \n\nDerrick was nodding as he watched the little girl following Tempro out. Yes he thought, strange indeed! \n\nIt was perhaps a day and a half later when Gunter jerked awake then tried to get up. To his surprise he could hardly move. A little girl's giggle drew his attention to the other side of the bio-bed. \"Shelly?\" he said. \n\n\"Hey daddy, you're finally awake! I was afraid that you weren't going to wake up!\" Here the little girl threw her arms around the man as tears of joy started to fall from her eyes. \"I was so scared I was going to lose you!\" \n\n\"I feel fine, where exactly are we?\" Gunter asked. \n\n\"Well, the see through man said we are on an...\" Here she was thinking a moment then her face lit up. \"Yes! The see through man said we are on one of the Elite Imperial Guardian ships!\" \n\n\"WHAT!?? I thought all of those were destroyed centuries ago.\" A startled Gunter said. \n\n\"Basically they were.\" Came Derrick's voice from the door. Though one survived, with her I have managed to find fourteen others.\" \n\n\"Commander! Dear God it's good to see you again! Are you a prisoner here also? I'd get up but I seem to be held here.\" \n\nDerrick started to laugh as Gunter again tried to rise then struggle to get loose. \"No, not a prisoner though I know how you feel. I have experienced the bio-bed a few times myself.\" ",
        "\"Bio-bed? I... Shelly are you ok? You weren't hurt?\" A now very worried Gunter asked. \n\n\"I'm fine daddy; the see through man checked me and said I was in excellent health.\" Shelly said. \n\n\"The see through man? What is she talking about?\" Gunter asked. \n\nA shimmering of light appeared beside the bio-bed as Tempro appeared. With a sigh Tempro said, \"I believe she is referring to me Lieutenant.\" Then Tempro gasp as Shelly ran her hand through his visage with a giggle. \n\n\"See daddy? The see through man!\" Shelly said with another giggle. \n\nSighing again Tempro looked at Gunter, \"Please sir, could you please get her to stop doing that? I find it quite rude!\" \n\n\"Well I'll be! A holo-gram! What exactly are you?\" Gunter asked. \n\n\"What you see is a holographic representation of me. I am called Tempro the living Artificial Intelligence of this ship.\" Tempro said with a sigh as Shelly giggled passing her hand and arm through Tempro. \n\n\"Shelly please stop passing your hand through the hologram!\" Gunter told her. \n\nShelly suddenly stopped a strange look and light in her eyes. Turning toward Tempro she said, \"You are an encoding of the light field as an interference pattern of seemingly random variations in the opacity, density, or surface profile of the photographic medium.\" \n\nTempro stopped suddenly as he looked at the young girl. \"Yes I am Miss Shelly. Do you have questions?\" \n\nStill with a strange look on her face she asked, \"Are you generated via lens and lasers?\" \n\n\"No Miss Shelly I am a projection contained within a harmless gas. It sustains the image no matter what the light is in the room. I can be made with lens and lasers though they are crude and faulty.\" \n\nShelly was nodding as she took in everything that Tempro was telling her. \"It may be possible to erect a system to provide you a way to exist outside the ship on your own while maintaining control of the ship. I fear though that with the current technology that it might not be possible for a bit.\" \n\nTempro was nodding as he was conducting a scan of the little girl. Looking over to Derrick Tempro's eyes got large. \"We have to get her to shut that area of her brain off! Sire if we don't it will kill her!\" \n\nDerrick looked at the girl completely at a loss for the first time in a long time. \"Please let me sir.\" Derrick heard from the bio-bed. \n\n\"Please if there's anything you can do!\" Derrick told the worried father on the bed. \n\n\"Shelly? Shelly it's daddy. Come back to me baby girl, it's ok just come back to daddy.\" Gunter said. \n\nSoftly at first then they all saw the tears start from her eyes they heard. \"Daddy? Daddy? DADDY!\" Suddenly the little girl was running to her father as she threw her arms around him. The only sound they heard was the sobbing of Shelly on her father's chest. \n\nThen they all heard a sigh as she fainted on him. Gently picking her up Derrick put her into another bio-bed. \"I want a full analysis of her. Find out if there is a way to help her... somehow.\" \n\nAnother door opened as Grant walked in. \"You better let his wife out soon or we're going to have a BIG problem with that little woman. She damn near took my head off!\" \n\n\"She's probably still pissed about the last time you got me drunk.\" Gunter growled. \"I am afraid that I can't leave yet.\" \n\n\"What exactly did she say?\" Derrick asked. \n\nGrant snapped to attention then stated, \"she said and I quote. 'If another god forsaken person or thing'.\" Here he looked at Tempro, \"sorry Tempro. 'Comes in here to tell me to relax I am either going to violently kill them or put a hole in the wall.' Unquote.\" \n\n\"Oh crap!\" Shiloh said. \"She is REAL pissed. Better let her out before she starts destroying stuff.\" \n\nDerrick's eyes got large as he looked at both men. \"Tempro bring her straight here. Explain you are taking her and the boys to see her husband. Close off everything, straight here.\" \n\nTempro looked at the door then nodded. \"They are all on the way though she seemed to be rather distressed. Oh my! She is yelling at me to hurry!\" \n\nA moment later a rather angry Asian woman walked in with three boys. \"Gunter? Shelly? WHAT IN THE HELL is going on here?\" Walking to Shelly tears started then she walked to Gunter. \"It happened again didn't it?\" \n\nMika hugged Gunter as much as she could then was staring wide eyed at the medical room. Then even wider when Gunter told her that Derrick was trying to find a way to help Shelly. \n\nNodding to her husband she got up walking to Derrick. \"Thank you sir for helping them both, I just hope it is possible. She is the only girl I have or will ever have. I damned near died having her I can never have children again.\" Derrick nodded as he leaned to whisper in her ear, causing another round of tears. Then she kissed Derrick's cheek telling him thank you as she went to her daughter."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-51"
}