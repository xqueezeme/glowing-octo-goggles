{
    "title": "I Kissed a Girl Ch. 12",
    "pages": [
        "The moment I saw Jenna Swallow walk by me and take a seat at a table on the other side of the bar, my past hit me like a punch to the gut.\n\nEven though I regained an iota of control of my senses, my pulse continued to quicken. My breaths remained shallow. I took a big gulp of beer to try to compensate, cringing at how painful it was to swallow.\n\nShe looked just as beautiful as she had the first night I'd met her. And as forlorn. Lost. Alone. In need of a friend.\n\nLike that first time, I hesitated. Not out of nerves now but concern. To make sure I was in control of my emotions when I approached. Fate had us crossing paths again. There was no doubt about that. But why? That's what\u2014dare I say\u2014scared me.\n\nI'd been her first. I'd coaxed the frightened kitten out of her cage. Encouraged her to embrace the fact that she was a lesbian. Made her feel comfortable associating with others like us. Ultimately, I'd shown her pleasures she'd only imagined. And then I'd left her high and dry while she was sleeping with a \"Dear John\" note. I'd been too chicken-shit to tell her to her face that I was leaving. To explain.\n\nEven twenty years later, guilt still nagged at me every now and then in the silence with only my thoughts. I wondered where she was...what she was doing. Did she hate me as much I hated myself for what I'd done?\n\nBut mostly, I wished I could have been there to wipe her tears at my goodbye instead of being miles away when she'd woken up the next morning after her college graduation and found me gone.\n\nNow, I stared at her as I had in that gay club so long ago.\n\nHer long hair was still that silky blonde that curled and lay perfectly over her shoulders, just the way most women dreamed they had. Her legs and ass were just as toned in her jeans as they'd ever been. But her face, though more striking than ever, looked...troubled. Downcast eyes. Slightly shiny cheeks indicative of a recent crying session. Then there was the way she kept her left hand fisted on her lap, her right hand shaking whenever she reached for her glass.\n\nThe years had obviously been good to her. Yet, they'd been hard on her, too. At least of late.\n\nMy instincts to help her told me to get up. But still, I watched her from my spot in the shadows at the end of the bar closest to her for a few minutes. Wondering what she was thinking. Feeling. What had brought her into this particular bar at the same time I was here. Why she was even on the East Coast.\n\nI chugged down the last of my beer for liquid courage and stood. I would be lying if I said it was easy to walk up to her again. A voice in my head tried to dissuade me...insisted I turn around. That it would be better to leave our history exactly where it was...in the past. But my heart won out, just as it had that first time in the dance club after watching Jenna all night.\n\nWhat would I say, though? What if she wouldn't talk to me?\n\nJenna had her head tilted down, seemingly studying the bottom of her now-empty glass. My eyes zeroed in on her forehead. That was the last place I had touched her with my fingertips...my lips. I'd stroked her hair while she slept and then kissed her softly there. All before turning my back on her for what I thought was forever.\n\nIt may have been two decades ago, but I could still remember how she'd felt in my arms that night when I'd made love to her, knowing it would be the last time. How she'd felt. Sounded. Tasted. Smelled.\n\nI swallowed heavily and stopped beside her. \"Can I buy you a drink?\"\n\nShe didn't even look up. It was just like d\u00e9j\u00e0 vu. Time rolled back in my head when she said, \"I'm sorry. Thank you, but\u2014\"\n\n\"I'm not interested in dancing. It's just a drink.\" The words just flowed out of my mouth without thought. My hand moved, pulling out the chair next to her. And then I was sitting without invitation, trying to remember how to breathe. \"My name is Susie.\"\n\nHer head jerked up, those violet eyes shiny and slightly red, her mouth gaping. Anything she might have thought of saying was lost to a mumble of gasps and tears as she lurched to her feet, her hands clenching and releasing while they reached out to me like a child.\n\nI welcomed her into my arms with the warmest of hugs, feeling her trembling. Or maybe I was the one shaking. I chuckled and rubbed my hand across her back until she settled down. \"I would ask how you've been, honey, but it's obvious you're doing great.\"\n\nJenna hiccupped and laughed, squeezing me tighter. She eventually returned to her own seat\u2014a little to my dismay\u2014then used her napkin to blot her face. \"Susie...it's so good to see you.\"\n\nRelief rushed through every part of me, erasing all of my fears. But not my guilt. Never my guilt.\n\nA serious question was on the tip of my tongue, but she rested her left hand on the table. Jealousy briefly swirled through me. Somehow, I restrained my emotions and swallowed my envy.\n\n\"I was just about to ask what brings you out to our little spot on the East Coast, but that rock on your finger explains it.\" I flagged down the waitress and held up two fingers. I was going to need some more of that liquid courage to hear Jenna's happy story. After a moment to collect my thoughts, I leaned my arms on the table and narrowed my eyes, amazed that my voice didn't shake. \"The question is, who's the lucky gal? Or maybe you gave up on true love and swung for the other team?\"\n\nJenna's face lit up when she smiled softly. \"Oh, it's true love. The one and only.\"\n\nI whistled long and low, my heart thumping hard in my chest. But I was smiling, too. \"You found her again. Did you have to tie her down and beg her to marry you?\"\n\nJenna's grin widened, adding a sparkle to her eyes I'd forgotten about. \"Well, there has been some rope and quite a lot of begging through the years, but it wasn't in regards to the proposal. That came very willingly.\"\n\nI couldn't help it. I grasped her hand and squeezed it, my words sincere. \"I'm so happy for you, Jenna. You deserve it.\"\n\nThe waitress returned with two full glasses of beer and a basket of fries and a burger. Jenna cut the burger in half and gestured for me to help myself. She picked up one section but just held it.\n\nI studied her. Noticed how her smile faltered. The way she avoided my eyes. It all reminded me of the night we'd met. The Jenna I'd observed then was the same one sitting next to me now. She was carrying the weight of another secret. I'd been able to tell what it was before...she'd had the same look I'd seen on so many others in the club who hadn't come to terms yet with being gay. This secret, though? I had no clue. It could be that no matter of coaxing would get her to reveal it. There was just a strong resolve to try to help. I owed her that much after how I'd hurt her.\n\nMy heart ached for whatever pained her. And my arms still tingled from our hug. She had left her mark on my soul all those years ago, though she was not my true love. I took a swig of beer and a deep breath. Even though I'd already eaten, I snagged two fries to be polite and nibbled on them.\n\n\"So...you've found wedded bliss out here in the mecca for lesbian lovers. Yet, you are a hot mess, once again hiding from...something.\"\n\nShe dipped her head even more and finally took a bite the sandwich in her hands.\n\n\"You can delay all you want, honey, but you'll spill.\" Sipping my beer and holding another fry between my fingers like a cigarette, I settled in, looking forward to the distraction from my own thoughts.\n\nThe longer we sat, though, the more I became certain of one thing. Jenna had grown more confident of herself since we'd last seen each other. Not so easily swayed.\n\nHer mouth contorted from partial smiles to frowns, her eyes varying from being bright then dark and back again. After a few minutes of watching her eat not only one but both halves of the sandwich and over half of the fries without a word, I began to doubt my presumption that it would just take time and a stern look from me for her to tell me what was bothering her.\n\nBut I had the patience of a mule, too. Some called it stubbornness. I told them it was all about perspective. And my perspective was, I tried to paint things in a positive light. Usually.\n\nI kept Jenna company, and the waitress refilled our glasses when they got low. My prot\u00e9g\u00e9 was halfway through her third beer before she sat back and burped. She excused herself under her breath. I arched an eyebrow and smiled softly. \"You'll feel even better once you get it off your chest. Honesty is the best medicine. Remember how twisted up inside you were when I met you?\"\n\nHer whole countenance suddenly fell completely, just shy of possibly crying. And once more, I was back in that bar watching her struggle as one after another, she rebuffed the advances of four different women. How she'd been able to do that and keep from breaking down back then was beyond me. Hell, how had I thought I stood a chance after observing all those rejections?\n\nGranted, the first one I was glad she'd turned down. Lisle had had a reputation to love 'em and leave 'em, her cowboy image usually a magnet for anything with breasts. I'd realized after the fact that Jenna was drawn more to the femme type. While she'd preferred to wear pants, she was very much comfortable being a woman. Still was, from what I could tell. I chalked it up to being a newbie\u2014a fluke, even\u2014that she'd been interested in me, a butch.\n\nBut the rest of those women? Maybe Jenna had seen through their ulterior motives...a drink and a dance that led to other types of dancing in the dark. I, myself, had not hoped for anything that night except to console her. Be a friend. Maybe pursue her intimately down the road. So it had all come as a surprise when she'd invited me into her home after sharing a cab...and then into her head and eventually her heart.\n\n\"I'd help you unwind,\" I blurted, \"but I think your wife would hunt me down and skin me alive.\"\n\nThat made her grin. But once more, her face went through the motions, my words seeming to trigger thoughts in her mind.\n\nJust shy of sighing annoyingly, I said, \"Okay. As much as I've always loved watching your facial expressions, tonight is the exception. Jenna, you need to start talking, and now. I can't help if I don't know what the problem is.\"\n\nShe blinked at me, confusion then resignation flitting through her eyes. But she didn't tell me to mind my own business.\n\nI watched her sip her beer and lean forward, wrapping both hands around her glass. And then I breathed a sigh of relief when she finally opened up.\n\nFor the next sixty minutes, I listened to her tell me all about finally reconnecting with Kat, the love her life. The trials and tribulations of one woman Jenna had worked with who'd ended up stalking her because Jenna had turned down her blatant advances...resulting in the woman accidentally shooting Kat. That Jenna was drowning her sorrows in beer today because her wife had just found out about the stalking part. Then there was the fact that Jenna had never told Kat about her estranged brother.\n\nI let her vent. Cry. Hash out her thoughts aloud. I tried to remain calm and be supportive. Not necessarily for the decisions she'd made, but to know I was still her friend despite what had gone down. When she asked for advice, I gave it to her, even though I knew she might not like it. All in all, she was back to sniffling and shaking her head while the features of her face contorted.\n\n\"What Lauren...your brother...Kat's old boss...the man on the moon thinks?\" I sighed and shook my head. \"It means diddly squat. When I met you, you were trying to prove yourself to the world, Jenna. Even after all this time, you still are. But you don't have to. The only opinions that matter belong to yourself and the person waiting at home for you. Her willingness to marry you\u2014carry your child\u2014means she knows you're not always going to be strong. With Kat, you've got nothing left to prove. I am certain she still loves you despite any faults you may have, because she has faults, too. And having weak moments is not a fault. It just means you're both human.\"\n\nShe was in the midst of apparently absorbing my synopsis of her ordeal when she suddenly shoved her chair back and looked around. \"I-I have to go.\"\n\n\"Yes, honey, you do.\" I stood and gave her one of my big bear hugs, holding on longer than necessary. God, she felt so good in my arms. \"If she didn't truly care about you, it wouldn't bother her so much that you remained silent.\"\n\nJenna nodded against my shoulder, her fingers gripping at my back. Just like she used to do when...\n\nNot for the first time, memories of our time together were crystal clear in my head. I quickly shoved those thoughts aside because I knew I would start crying, too.\n\n\"It doesn't mean she won't get upset, Jenna, but you have to be completely open with her going forward. Because you love her. Just keep that in mind when you tell her the rest, which you have to do. There's no question about that. You can't change what happened with her previous job or the shooting, but she needs to know you were hurt that she didn't stand up for the two of you...why you kept Lauren's communication to yourself.\" I swallowed heavily and held her out at arm's length, smiling softly. \"And you definitely need to tell her about your brother. You owe her that much.\"\n\n\"I will,\" she said gruffly.\n\nI watched her set her jaw in a determined way I'd not witnessed before. It made me smile. My Jenna was all grown up. Assertive and no longer the scared, young woman I'd once known. I was happy for her. Proud of her.\n\nOn impulse, I pulled her into my arms again. I breathed her in. Kissed the side of her head. And forced myself to swallow my tears when I released her.\n\nJenna gathered her things and started to leave when she asked, \"Are you living here in Northampton?\"\n\nShit. Shit. Shit. Please, voice, don't fail me now.\n\n\"For a time, I did. After us. I'm just back visiting a sick friend. She has breast cancer. Doesn't look good.\" I glanced up, praying that my eyes did not reflect the lump in my throat. Thankfully, I managed a smile and patted her hand. \"It was so good to see you, Jenna. Must be fate that we crossed paths again.\"\n\n\"Yeah. Fate.\" She squeezed my shoulder. Acted as though she might say something else but closed her mouth. She was on her way again when she spun around. \"Oh, wait! I have to pay for my food.\"\n\nI smiled wider. \"I'll take care of the bill, honey. Now, call yourself a cab. You're in no shape to drive, and your wife needs you home in one piece.\"\n\n\"Thanks, Susie,\" Jenna whispered, leaning over to hug me again. \"For everything.\"\n\nAnd then I was alone with my thoughts.\n\n###\n\nI don't know how I ended up in my car. Or on the other side of town. It was a miracle I hadn't crashed after all of the beers I'd drunk today. What a hypocrite I was for telling Jenna she should get a cab.\n\nThe rain had finally let up, but it left the sky a dreary gray. It matched the feeling in my soul. And the color of the house that rose two stories beyond the hood of my car.\n\nI could no longer keep the tears at bay. They came pouring out of me in sobs that wrenched my body. I screamed. Stomped my feet on the floorboard of my car. Pounded my fists against the steering wheel. Cursed God for handing me such a raw deal. For making it ten times worse for my old friend who was bed-ridden on the other side of the south-facing window with the drawn curtains.\n\nWhen I was all out of emotions, I crossed my arms against the wheel and rested my forehead on top of them, closing my eyes.\n\n\"Oh, Lizzie,\" I groaned. \"Why has the world been so cruel to us?\"\n\nThen I snorted softly. Did I really think anyone would ever answer that question? I'd been asking it ever since that dreaded day during our senior year of high school. Ever since Lizzie's mom had given me an ultimatum. A quite unreasonable one, but I'd had to accept it...for Lizzie's sake.\n\nLong before I'd met Lizzie, there had been just my mom and I. My dad had left before I could crawl. My mom's parents had disowned her when she'd gotten pregnant out of wedlock. The one attempt I remember of her trying to reconcile with my grandparents was when I was five. They'd not even let us in the front door. Grandpa had told her to take her tomboy bastard and never come back.\n\nIt wasn't my mom's fault that I only wore jeans and T-shirts growing up. We couldn't afford to buy dresses or pretty things for me. Mom worked three jobs just to pay the bills, keep a roof over our heads, and put food on the table. She always made sure I ate\u2014even though there were nights I knew she didn't\u2014and my clothes were clean despite being secondhand from a coworker who had four sons. I kept my hair in a ponytail after the elderly neighbor lady who couldn't cut paper straight offered to trim my bangs one summer. Mom agreed because it was free. I wore a baseball cap for weeks to hide how uneven it looked. The hat became a fixture outside of school, even after my bangs grew out.\n\nThen there was the fact that all of the kids on my block were boys. I just developed a tough skin and hung out with them. Sometimes, girls joined us at school. But not usually.\n\nAll that changed the summer before fifth grade. That was when a new girl, Elizabeth \"Lizzie\" Rhodes, moved into the house two doors down from our apartment building. She was shy at first and stayed indoors. My mom suggested I go introduce myself since she thought I could use at least one close female friend. Once I'd gotten to know Lizzie, I'd threatened the other kids in the neighborhood and at school that I'd beat them up if they didn't let her play with us.\n\nAt first, Lizzie seemed to enjoy being in our group. But only two months into the school year, she started sitting down by herself on a bench at recess. She wouldn't come out to play with me or the neighborhood kids after school. When I went over to her house, her mom would tell me my new friend wasn't feeling well.\n\nI thought I had done something to hurt her feelings. My mom found me crying in my room one night and finally told me that Lizzie had leukemia. That why she was always so tired and didn't want to play anymore. I was happy Lizzie wasn't mad at me, but unfortunately, because she was so sick, she was going to have to stay home from school while she got better. I convinced my mom that I could help Lizzie with her schoolwork...that she'd want a friend to keep her company. To play with indoors when she was strong enough.\n\nAround that same time, one of my mom's jobs changed her shift. She talked to Lizzie's mom, and they made a deal that I would come over after school, eat dinner with Lizzie's family, and then I'd go home. I brought Lizzie the day's assignments, and I helped her when she wasn't sleeping or feeling sick to her stomach. Sometimes we just watched cartoons. She smiled a lot, but I could tell she was scared.\n\nLizzie eventually went into remission. But it was still several months before she regained all of her strength. Before she was able to go back to school. Even then, the arrangement with Mrs. Rhodes stayed in place. Lizzie and I spent all of our free time together over the next six years. Doing homework. Having sleepovers. Becoming best friends.\n\nBy our senior year, I had evolved to wearing an open, flannel shirt over graphic Tees every day. I'd continued to wear only jeans. To keep my hair short thanks to a local barber who cut my hair pro bono if I kept his shop clean. I'd even bulked up a little in the shoulders and arms from playing basketball with the guys during lunch and on the weekends. I wore the tomboy title with pride.\n\nI still remembered the final conversation I'd had with Mrs. Rhodes. It had been a snowy Thursday night in February, and we'd just finished eating dinner. It would also be the last time I saw Lizzie for almost three decades.",
        "---\n\n\"I ran into Marlow Jenkins this afternoon at the market.\" Mrs. Rhodes wiped her mouth daintily and folded the cloth napkin before continuing. \"I do believe her son, Patrick, is in your class. Isn't that right, Elizabeth? He's such a handsome boy. Solid morals. Good grades.\"\n\nThe crumbs on my plate were suddenly entertaining. Her mom had brought up specific boys in my presence before. But there was something different in her tone tonight. Not to mention the fact that she'd just interrupted Lizzie and I discussing what we were going to do this weekend.\n\n\"Mother\u2014\"\n\n\"Elizabeth.\"\n\nI glanced up to see Mrs. Rhodes reaching for her daughter's hand.\n\n\"Just hear me out, darling. It's never too early to start thinking about prom. And you didn't have a date last year.\"\n\nLizzie snapped her hand out of reach. \"None of us girls did! We went as a group.\"\n\nI didn't need to look at her to know that the sickeningly sweet smile on Mrs. Rhodes's face had dropped into a scowl.\n\n\"Yes, but this is your senior year. I think you should try talking to this boy. Marlow said she'd be happy to encourage him to ask you out.\"\n\n\"Mother!\"\n\nIn my peripheral vision, I saw Lizzie's cheeks flush. I normally enjoyed seeing them pink up. This wasn't one of those times.\n\n\"Elizabeth, if you would just give him a chance, you would see\u2014\"\n\n\"No!\" Lizzie tossed her crumpled napkin on the table and shoved her chair back. \"I'm not interested in Patrick Jenkins...or any of the other boys you've tried to set me up with. Just stop meddling!\"\n\nI watched my best friend storm out of the room. I wanted to go after her but also not be rude. It was my responsibility to clear the table whenever I ate with them. After a long minute of awkward tension, I softly cleared my throat and stood up.\n\n\"Thank you for dinner, Mrs. Rhodes. I'll clean up.\"\n\nThere was absolute silence from her while I stacked all of our plates and silverware. I carried them to the kitchen counter and jumped when I turned to go back to get the serving bowls. Mrs. Rhodes was standing in the doorway, pulling the door to the dining room shut behind her.\n\n\"Susannah...\"\n\nI tried not to let my distaste show. I hated my given name. And she knew it.\n\nShe refused to call me by my nickname. But she didn't even extend that privilege to her daughter. Everything was always so formal in this household. Mrs. Rhodes had always been a bit of a religious zealot as though she were still living in the deep south of the 1950s, not the other side of the Mason-Dixon Line in Indiana during the 1980s and 90s. But ever since Mr. Rhodes had died from a heart attack two years ago, Lizzie's mom had become a bitch. Not many people scared me, but she did. Her and that cliquey, gossipy gaggle of friends.\n\n\"Maybe you can answer a question for me.\"\n\n\"I'll try.\" I leaned back against the counter and shoved my hands into the front pockets of my jeans.\n\n\"Why don't you have a boyfriend?\"\n\nI was independent...just fine on my own. I shrugged. \"I have no need for one.\"\n\nThe scowl on her face should have warned me that she hadn't read my easy-mannered response the way I'd meant it to come across. \"Are you one of those dykes?\"\n\nThat made the hair on the back of my neck bristle. My jaw clench. I stood up straighter, but I managed to keep my composure. Barely. What I really wanted to do was lurch at her and knock her down a few pegs. Maybe it would teach her to mind her own damn business. Though, I doubted anything ever would. Putting her nose where it shouldn't be then exacting judgment was her whole livelihood.\n\nSo, she'd heard the rumors, too. I'd tried to ignore them. Hoped that maybe they'd go away. So much for wishful thinking. It actually perplexed me. Just because I hung out with the guys in the neighborhood but didn't date any of them... Why did that automatically make me gay?\n\nBefore I could think of how to respond, Mrs. Rhodes crossed the room and stopped only inches away. It took a lot of effort not to smack that contemptuous smirk off her face.\n\n\"I've seen how you are with my Elizabeth. All these years, pretending to be her friend? No wonder she's not interested in any of the nice, handsome boys. Do you deny it, Susannah? Hmm?\"\n\nI blinked at her. \"Deny what?\"\n\n\"That you're trying to woo my daughter. I already know the answer to my first question,\" she scoffed. \"Someone who dresses like you? You're a grown woman and you still wear your hair that short?\"\n\nHuh. I was gay because I continued to dress like a tomboy and have short hair at eighteen? Did she not see the hypocrisy in her claim? Lots of straight women wore jeans and T-shirts. Had short hair. Hell, her own daughter...\n\nI recoiled, unable to stop the shock from crossing my face at realizing the vindictive woman's implication. She thought her daughter only looked the way she did because I was trying to convert her into a lesbian! Nevermind the fact that Lizzie had had the same pageboy hairstyle since her hair had grown back in after her chemo treatments half-a-dozen years ago. Or that she dared to find jeans more comfortable than A-line skirts, as did most girls our age.\n\nBut yes, it made more sense to lay the blame on the tomboyish girl next door that the church ladies' rumor mill found convenient to lambast when the victim wasn't around to defend herself. Not that anyone would have believed me anyway. Look at how I dressed and wore my hair. And maybe, according to them, I'd gotten my hooks in Lizzie way back when she'd moved in next door. Because a ten-year-old had that much influence. I must be a persistent little recruiter for the lifestyle.\n\nIn all truth, I'd only recently thought of Lizzie as more than a friend.\n\nIt had been that night just before Christmas...at her sleepover. There had been six of us girls in her bedroom, dressed in our PJs, hair pulled up while we did our nails. Well, the other girls, not me. I just watched from my backwards perch on her desk chair in my loose boxers and the same T-shirt I'd worn all day. Listening to them giggle. Partly wishing this kind of activity made me happy, too.\n\nI'd only agreed to attend because Lizzie had begged. She'd said her 18th birthday wouldn't be the same without me. It was a milestone, and we needed to celebrate it together, just as she had done for my birthday. Except mine had been just her and I in my kitchen with a \"1\" and an \"8\" candle in a pair of Hostess cupcakes. Still, it had been meaningful to me.\n\nSo there I had been in the midst of five high school senior girls. They were all pretty. But Lizzie? Her face had just glowed, even when she wasn't smiling. The only thing out of place was that her blonde hair hadn't been long enough to be up in curlers like everyone else. What had once made her adorable as a kid had helped emphasize her slender neck and high cheekbones in her teens.\n\nThe longer I'd stared at her, the more I'd appreciated her curves in all the right places. That her pink, spaghetti-strapped tank top and matching sleep shorts had revealed her smooth arms and legs. Every time she'd laughed, something warm and unfamiliar had blossomed in my own chest. And whenever she'd glanced my way, her smile had widened...her eyes brightened.\n\nNever before had I considered that I could be attracted to a girl. It had scared and excited me at the same time. Explained so much yet left so many more questions unanswered.\n\nBut I wasn't stupid. I'd known what the consequences would be if I acted on my feelings. Even if the other person reciprocated them.\n\nFor the first time in as long as I could remember, I hadn't been able to go to Lizzie for advice.\n\nI'd attempted to stay away from her after the holiday. But she was like a magnet...drawing me to her with that smile. That laugh. So when I was around her, I'd tried to keep what I thought was a friendly distance. It was at the end of January when I'd realized I'd fallen for her. But I couldn't let her know. Let anyone know.\n\nAnd yet as I stood in Lizzie's kitchen with her self-righteous mother blocking me from any exit, I knew that someone...somehow...had seen through my fa\u00e7ade. Maybe Mrs. Rhodes was bluffing. But could I take that chance? Now that I had more insight, I wouldn't be surprised if she was the one who'd started the rumors in the first place.\n\n\"My daughter will not be swindled into this...this...\" Mrs. Rhodes looked me up and down, her hand waving at the air, \"...abhorrence. This sinful life you've chosen. There will be no more coming over after school. Dinners. Sleepovers. Any of it. I don't want your kind influencing my daughter. You will have no further contact with Elizabeth.\"\n\nI arched an eyebrow, silently asking, \"Or what?\"\n\nMrs. Rhodes seemed to accept my challenge. With a gut-wrenching smirk, she took another step forward\u2014making me retreat into the edge of the counter\u2014and bared her cold, dark heart to me. \"Or so help me by the Lord Jesus himself, I will send Elizabeth to that conversion camp upstate. They will pray the gay right out of my blessed child.\"\n\nI literally felt the color drain from my face. They did more than pray for the kids at that camp.\n\nA classmate named Jeremy had disappeared from school around Thanksgiving. He'd always been a fun-loving kid. A little on the effeminate side with his mannerisms and dress, but completely harmless. When he'd come back for the next semester, he'd looked like he'd been wrung out to dry. His skin had been a sickly pallor, his hair was stringy and dull, and he'd lost a lot of weight. He showed up to class every day, but he didn't speak much anymore. His spirit was gone.\n\nSome kids had found out he'd been at that camp for a whole month. He'd not even seen his family for Christmas. His parents had gotten worried about him being gay, and their pastor had recommended they send him upstate. The pastor promised that when Jeremy came back, he would be all better. I don't know what Jeremy was anymore, but better was not it.\n\nTo think that Mrs. Rhodes would put Lizzie through that all because of a rumor about me?\n\nSomething akin to evil glared in her eyes when she narrowed them at me. \"I think it's a fair deal, Susannah. Don't you?\"\n\nWhat the hell was I supposed to say? I couldn't let her do that to Lizzie. There was only one choice.\n\n\"Fine. But leave Lizzie alone. She has done nothing wrong.\"\n\nMrs. Rhodes nodded curtly. She stepped aside and held her arm out. \"I will finish cleaning up.\"\n\nI took the opportunity and skedaddled. In the dining room, I started toward the staircase.\n\n\"Ah, ah, ah. Where do you think you're going?\"\n\nI glanced back to see the older woman standing with her arms crossed. \"To say goodbye to Lizzie.\"\n\n\"I don't think that's a good idea, Susannah. You will just upset her. Go on home. I'll explain to her.\"\n\nI hesitated but then obeyed. I didn't want her to renege on our deal. Hell, she could still do that even though I'd agreed to cut all ties with my best friend.\n\nI grabbed my coat instead, catching a glimpse of her smug smile before she closed the front door between us. I trudged back home through the snow. That whole night, I lie awake in the cool darkness of my bedroom, wondering if I'd made the right decision.\n\nI faked being sick the next morning. I couldn't bear the thought of seeing Lizzie in class\u2014that day, or any day after\u2014and not being able to talk to her. I prayed that her mom would explain. Had to trust that she would. But mostly, I prayed that Lizzie would understand. That she wouldn't hate me for it.\n\nWhen my mom left for work, I stole her emergency funds from the coffee can at the back of the freezer behind a pile of mystery meat she'd brought home from her diner jobs. I wrote her a note, apologizing about the money...explaining that I'd known I was gay for a while and just couldn't stay in this bigoted town any longer. I hoped that someday she'd be able to forgive me. Then I packed all of my belongings in a duffle bag and ran away from home.\n\nI hitchhiked west, hoping to get to California. I made it as far as Nebraska before a snowstorm stopped me. I found a bed in a women's shelter there. Made a friend. Got a job flipping burgers by day and studying for my GED at night. And I never looked back.\n\n---\n\nI let out a shaky sigh, blinking away fresh tears, but my vision was still blurry. It took a moment to realize a light rain was misting my windshield. The sky to the west was cloudy and even darker on the horizon. I hurried inside before it poured.\n\nShucking off my jacket and toeing off my boots, I paused by the door, blinking to adjust to the change of light. Though it was gloomy out, the back hall was even darker. Much like the rest of the house these days. I ran my hand through my short, blonde hair streaked with silver\u2014one of many reminders that I wasn't getting any younger\u2014and finally padded across the kitchen to the bedroom that had become my haven for the past five months.\n\nI paused again outside and took a couple of deep breaths. Buried my emotions. And then I plastered a smile on my face and slowly pushed the already ajar door open the rest of the way.\n\nA table lamp on the far side of the hospital bed's headboard softly illuminated two women. The one in scrubs\u2014Idgie\u2014was checking the monitors at the head of the bed. The other was lying down with blankets tucked around her, her eyes closed.\n\n\"She's back.\"\n\nI heard Idgie's whisper before my eyes met her shiny gaze while she leaned over the smaller form in the bed. A moment later, the other woman turned her scarfed head toward me, her eyes opening. Then she smiled softly.\n\nA frail hand reached out toward me. \"Susie\u2014\"\n\n\"Shh, Lizzie.\" I sat in the chair next to her bed and gently placed her hand back down beside her hip. I cupped my hands around hers, trying not to think of how much cooler her skin was compared to mine. \"It's okay, love.\"\n\nIdgie set a small bell by Lizzie's left hand then moved around the bed. When I glanced up, she gave me a sad smile and a minute shake of her head.\n\nI gulped. Nodded the same way. My time with Lizzie was ending. It would probably be days, not weeks like the doctor had predicted.\n\nIdgie gestured with her head that she'd be in the kitchen where she usually hung out when I was in here. Then she lightly squeezed my shoulder and left us alone.\n\n\"Is it still raining?\" Lizzie asked. Her voice was raspy and soft. Much like it had been when she was sick as a kid except that she'd been able to sit up in bed and play cards with me then.\n\nShe was much too weak for that now. The several unsuccessful rounds of chemo over the past six months had knocked out every ounce of energy. She'd lost her hair at the onset and worn a wig until it became too cumbersome then switched to a baseball cap before deciding on nothing at all. She'd said she didn't need to worry about vanity now that she was homebound. Both Idgie and I had insisted on at least the scarf she now wore for warmth's sake.\n\n\"Yes. But just a drizzle.\"\n\nA loud thunderclap resounded with a flash of lightning right on its tail. It wasn't a second later that I heard the telltale pounding of a downpour.\n\nThere was a raspy laugh before Lizzie said, \"Liar.\"\n\n\"Guilty as charged,\" I chuckled.\n\nWhile the storm surged outside, one built inside my head...my heart. How was I going to let her go? It seemed like I'd just found her again. I knew she was ready. She'd said she'd made her peace. But I hadn't. I'd thought so many times that I should come clean with her. About the past...how I felt for her. Would I regret it if I didn't? If I did? Damn it!\n\nI studied the black scarf with orange and red flames and the logo of a popular motorcycle brand embossed on it. We'd seen it at a booth during one of the downtown festivals. Lizzie had joked that she'd always wanted to date a guy with a bike growing up just to piss off her mom. I'd bought to spite her mom's memory.\n\nNeither of us had known it would come in handy so soon. I lightly stroked the images on the scarf, remembering how that weekend had been one of her last good ones. When she didn't move, I thought maybe she'd fallen asleep. She did that a lot when I was reading her a book or just talking. I started to stand, intending to let her rest, but Lizzie squeezed my hand.\n\n\"No, don't go, Susie.\"\n\n\"Shh, I'm right here, love.\"\n\n\"I have to talk to you.\"\n\n\"Shh, rest.\"\n\n\"No. Listen.\"\n\n\"Okay.\"\n\nShe turned a soft smile to me. \"Thank you for coming.\"\n\nI forced my own smile, remembering the Email I'd received telling me she had breast cancer. That her mom had had a stroke and died. That Lizzie needed me now. I was glad I'd come. It had been an uphill struggle for a couple of months before we'd found out the cancer had metastasized to her liver and bone marrow. That's when she had decided not to fight any more.\n\nI sniffed back tears and whispered, \"What are best friends for?\"\n\nShe just closed her eyes, her grip loosening around my fingers.\n\nWhen there was no other response after a couple of minutes and I heard her steady breathing\u2014or as steady as it got for her\u2014I knew she was finally asleep.\n\nI turned off the lamp and quietly left the room. Just as I suspected, Idgie was sitting in the kitchen with her elbows propped up on the tabletop, a cup of coffee between her hands.\n\nWe both nodded at each other. I went about making my own cup and sat across from her, mirroring her stance. We drank to the sound of the rain as the thunder rolled.\n\nIdgie cleared her throat after a few minutes. \"So, earlier you were about to tell me how you got back in touch with Lizzie after running away from home. Was that out here in Northampton?\"\n\nI swallowed heavily and set my cup down, shaking my head with a soft smile. \"I was in Nebraska for about three years. I got my GED and became a certified welder. Met someone. She was the first woman I was ever with. Older by about ten years. She took me under her wing. It was scary and amazing at the same time. But I took to the lifestyle like a duck to water. For the first time, I felt I could relax. I could be me. She taught me so many things.\"\n\nIdgie smiled. I'd previously shared with her before that I was a lesbian, and at first, I'd only hinted at my affections for Lizzie. But the more time we'd spent around each other, the more I'd opened up. The more I'd come to find myself leaning on Idgie's shoulder, and not just figuratively.\n\nA week after I'd moved in with Lizzie, Idgie had found me wandering listlessly around the lower level of the house. Lizzie had had a rough morning, throwing up her pain meds. I'd managed to get her cleaned up and as comfortable as possible in her room\u2014back when she was still able to climb stairs. I guess I'd gone back down afterwards. All I remember was Idgie guiding me to the living room couch.\n\nThe emotions I'd tried to hide had just spilled out the moment she had sat beside me. She'd held me while I sobbed. And then she'd rubbed my back while I'd shared bits of my sordid past. Attempts to fit in when I stood out. Of meeting Lizzie and helping her through her first cancer. Realizing I loved her. Not caring that it was taboo. Then deciding I couldn't risk ruining her life so I would risk potentially destroying my own by leaving instead.\n\n\"But?\" Idgie nudged softly, reminding me we were here now, not last fall...and not twenty-odd years ago. Her eyes shone in the dim light, her smile now hidden by the rim of her cup.\n\nI blinked away a sudden tear and sighed. \"We were together for a year when an old lover of hers came back to town. I could tell they still cared about each other whenever we were out as a group. I didn't want to stand in their way. When a couple in my apartment building asked if I wanted to go with them to Chicago, I saw the out and took it. I spent my last night at her place. Left her a note before slipping out in the morning. It seemed I was getting good at that.\"",
        "Idgie tilted her head toward the coffee pot.\n\nI nodded, watching how she stood and topped off our cups. Her movements were fluid. I felt the corner of my mouth twitch. Her grace reminded me of Jenna.\n\n\"After I moved, I got a job welding in the Windy City. Met a lot of women over the next two years or so. Dated several of them. But I refused to get too attached.\" I doctored my coffee and took a tentative sip, remembering clearly those days despite the time that had passed. \"I was frequenting a popular gay bar at the time. It's where I eventually met Jenna. She was a college student, brand new to being a lesbian. It was my turn to be the teacher. To protect her.\"\n\nIdgie set her cup down and crossed her arms on the table. \"What happened?\"\n\nMy mouth twitched again. I stared into the steaming liquid in my cup between my hands. \"When we first met, she told me about Kat, the girl she'd fallen in love with the last year in high school. Except Kat was straight, so there was no chance. She rarely brought her up, but I remembered that sparkle in Jenna's eyes when she did. And I'd see it whenever she would stare off into space. As time went on, though, that look turned into one of longing...regret. I could tell that Jenna still carried a torch for Kat no matter the improbability of being with her. It took me a while to realize I still carried one myself. For Lizzie. They were the girls that got away.\"\n\n\"So you ran.\"\n\nI pressed my lips together and nodded. \"I was afraid that Jenna would beg me to stay if I told her to her face we should break up. That I would relent only to ease the ache I knew she'd have written across her face. That wasn't fair or right for either of us. So I wrote her a note and left before she woke. Again.\"\n\nWe sipped our drinks in silence. Idgie didn't press me to continue. I could hear the faint sounds of the machines in Lizzie's room now that the storm had departed as quickly as it had arrived.\n\nI smirked. \"When all the planets seem to align.\"\n\n\"Hmm?\"\n\nI glanced up at Idgie, realizing I'd spoken aloud. \"I ran into Jenna this afternoon when I was out.\"\n\nShe had lifted her cup but slowly set it down. Her back seemed to slump a little. She kept her eyes on the table when she said, \"Oh?\"\n\n\"Yeah, she was at Darla's drinking a beer. Turns out, she'd run into Kat years after I'd left. They're married now. Have two kids. They actually live here in town. I'm happy for her.\"\n\n\"Really? That crease on your forehead tells a different story.\"\n\n\"Just thinking that Jenna got her fairytale. But me...\" I choked on my breath suddenly. \"My princess is dying down the hall. And I never had the guts to tell her I love her like that!\"\n\nI didn't hear her move at all, but Idgie was suddenly by my side, her arms wrapped around my head as she held it against her. I gripped her arms and cried while she gently rocked me.\n\nAnd then we were both sitting upright in our respective chairs again, our hands wrapped around the mugs of cooling coffee. Except she was sitting beside me instead of across from me. My eyes felt slightly puffy and my cheeks a little stiff from my dried tears. I ran the back of my hand under my nose and sighed.\n\n\"After I left Jenna, I came out here to Northampton. Figured it would be a good place to start over. Blend in with the locals and all. It was the best thing I could have ever done.\"\n\n\"But then you ran into Lizzie?\"\n\nI nodded. \"We reconnected. Spent a lot of time together. It was great. Except she had a boyfriend and I always felt like a third wheel. Brian and I got to be good friends, though. So much so, that he asked me to help him propose. Do you have any idea how gut-wrenching that feels to help a guy ask the woman you love to marry him?\"\n\nIdgie cringed just as I lifted my gaze to hers.\n\nI cringed as well. \"It gets worse.\"\n\n\"I can't imagine...\"\n\n\"Lizzie told him she had to think about it. Her mom, on the other hand, was already planning the reception before Lizzie had gotten off the phone with her. Lizzie told me she loved Brian, but they'd only been dating for two years. Wasn't that too soon for marriage? I hated having to share her, and I dreaded the thought of her mom showing up and thinking I was there to sabotage the wedding.\"\n\n\"So you ran.\"\n\nI took several gulps of coffee. \"Alabama this time. I gave Lizzie my best wishes in person, though. Told her I had a job lined up down south and couldn't stay around in Massachusetts. I hated lying to her, but I had freshly opened wounds. It wasn't safe for me to stay. I got a job welding down there and buried myself in my work. Tried to forget about Lizzie. About everything in my past.\"\n\n\"Oh, Susie...\" Idgie clasped my free hand on the table.\n\n\"I touched base with my mom once. She forgave me for running away, but she thought it best I just continue to live my life without her. She must have kept my number though, because the hospital called me when she had a heart attack. I went back home to be with her until she passed only a week later. I'd just returned to Alabama when I got Lizzie's Email that she had breast cancer and her own mom had died recently after a stroke. Lizzie didn't want to continue treatment alone. That she needed her best friend to help her through this again. It wasn't until I'd gotten here that I found out Brian had divorced her after two years because she couldn't have kids. All the chemo she'd received when she was younger had made her sterile. So here I am. Here we are.\"\n\nIdgie squeezed my hand and said sadly, \"Yes, here we are.\"\n\n\"I suddenly feel so old,\" I sighed, on the verge of tears again. I just didn't have the energy to shed them.\n\n\"Mmm hmm. The process can take a lot out of the caregivers as well as the patients.\"\n\nI didn't resist when Idgie gently pulled my head to her shoulder and wrapped her arms around me. My eyes closed automatically, and I dozed there in the kitchen under a dim lightbulb in the loose embrace of the hospice care nurse while my best friend lay dying down the hall.\n\n###\n\nThe week crept by. The stormy weather only made the already sullen mood in the house worse.\n\nKnowing Lizzie was in more and more pain\u2014evident by the increase in meds Idgie brought with her\u2014made me even wearier. If I could have given any physical part of me to save Lizzie, I would have. All I could offer was my time. But even that was limited.\n\nI read to Lizzie. Watched TV with her. Just talked. Promised I'd be there when she woke. And then I prayed while she slept that she would actually wake up at least one more time.\n\nLather, rinse, repeat.\n\nIdgie had to force me to the kitchen to eat throughout the day or go up to the room I occupied to rest. Several times, I mentioned how I felt bad that she was taking care of two people instead of just the one we were paying her for. She just shushed me and told me it was part of caring for Lizzie. That I needed to keep up my strength to be there for my friend who seemed to be hanging on despite her odds.\n\nOn one such occasion, we were drinking coffee after Idgie had physically walked me to the kitchen to eat some breakfast.\n\nI pushed away my empty plate and folded my arms on the table. \"Your name...it's quite unique. Do you mind me asking if it's your real name?\"\n\n\"Not at all. I'm an open book.\" Idgie smiled over the rim of her cup. \"My mom was a huge fan of Imogen Stuart, the famous German-Irish sculptor. Mom had a copy of one of her statues that had been in the family. I was the first daughter, so I was given my mom's favorite name...and eventually, the statue.\"\n\n\"I was going to say, I think I've only heard of the name Idgie in 'Fried Green Tomatoes.' But you were about six when the book was written.\"\n\n\"Actually, that's when I got my nickname. Everyone started calling me 'Idgie' because of it. Even my parents. I liked it so much, I started using 'Idgie' instead of 'Imogen.' Then the movie came out, and I felt special to share the name with my favorite character in it. It's one of my favorite movies, too.\"\n\nI grinned. \"Same here.\"\n\nI mentally compared her to Mary Stuart Masterson's portrayal of Imogene 'Idgie' Threadgoode in the movie. It wasn't hard to imagine the woman sitting across from me walking around barefoot in bib overalls, her hair haphazardly pulled back. Gambling with the men in town. Getting fresh honey for Ruth to impress her. Trying to convince a pestering lawyer that she had nothing to do with the disappearance of a certain abuser of women who also happened to be Ruth's husband.\n\nIdgie sipped her drink, watching me watch her. She would raise her eyebrows slightly, tilting her head every now and then. Finally, she asked, \"What are you thinking? You keep squinting.\"\n\nI shrugged. \"I like your name. It fits you.\"\n\nHer smile softened, her eyes sparkling now. She leaned in conspiratorially. \"I have more in common with the character than most people think.\"\n\nI sat upright and blinked. I started to ask if she thought Ruth and Idgie were lovers, like so many presumed\u2014myself included. But Idgie the nurse stood up and went to the sink, rinsing out her cup.\n\n\"Don't know about you, Susie, but I could go for some good ribs tonight.\" She glanced back with a wink.\n\nWe both said at the same time, \"The secret's in the sauce!\"\n\nOver our laughter, I could hear Lizzie's bell.\n\nIdgie paused at my chair and gently squeezed my shoulder. \"I've got her. Just rest.\"\n\nSo I sat there pondering that she had been trying to tell me something more than where she'd gotten her nickname. That the reason she seemed to understand me so well was because my situations were similar to her own. She truly was Idgie. Did that make me Ruth?\n\n***\n\nIt was Sunday, a week after my conversation with Idgie in the kitchen, when Lizzie seemed to perk up. She had a little more color in her cheeks. Maybe it was just the sun shining in her window. She waved her hand when I picked up the TV remote. I sat beside her instead and took her hand in mine.\n\n\"I know, Susie,\" she rasped, smiling in her gentle way.\n\nI caressed her forehead with my free hand. \"You know what, love?\"\n\n\"You love me.\"\n\nThe corners of my mouth turned up more. \"You're my best friend, Lizzie. Of course I love you.\"\n\nHer gaze met mine. For a moment, the brilliance of the wild spirit inside of her\u2014never crushed by her mother's overbearing nature\u2014flashed at me. \"No. You love me, love me.\"\n\nI swallowed hard but couldn't make any sounds when I opened my mouth.\n\n\"I know here.\" She pulled my hand toward her heart. \"Always have.\"\n\nMy breath caught in my throat. I didn't know how to respond to that truth. All these years?\n\n\"I'm sorry...\" She closed her eyes and swallowed slowly, licking her lips several times.\n\n\"Shh.\" I slipped an ice chip into her mouth, barely hearing her sigh of gratitude. I silently begged her to open her eyes again so I could see that spirit I loved, but she didn't.\n\n\"I was selfish. Couldn't tell you the truth. I needed my friend and was afraid you'd leave. Then you did.\"\n\n\"It's okay, love. I'm here now.\" My words were barely a whisper, but I know she heard them by the twitch of her lips in an attempt to smile again. I brought her hand up to my lips and kissed it softly, barely succeeding in holding back my tears.\n\nShe licked her lips and said, \"More please.\"\n\nI spent the next several minutes alternating between feeding her ice chips and listening to her talk. Every time she paused, her breathing seemed even more labored, like sandpaper on a piece of wood.\n\n\"When Mom died...she said she made you leave. Didn't want me to be gay. She since realized she was wrong. I'd always thought you'd left because you knew I couldn't love you that way. I'd wished so many times you'd taken me with you anyway. I was so glad to see you that summer. I never told her you were there ...that you helped Brian propose. She was sorry it was too late to mend my friendship with you.\"\n\n\"No, love, you weren't too late. Thank you for writing to me. It has been my honor to be with you.\"\n\n\"Promise to find love.\"\n\n\"Lizzie, my love dies with you. You're the only one\u2014\"\n\n\"You still have a chance.\" She pressed her lips together and faintly shook her head when I tried to give her another piece of ice.\n\n\"I've tried. It's why I run. I can't get over you. Besides, who would want a rough and tired old woman? Butch dykes like me are better off alone.\"\n\n\"Why do you always have to do things the hard way?\"\n\n\"What are you talking about?\"\n\n\"I'm dying, not blind.\" Lizzie coughed and loosely gripped my hand. \"Idgie is a wonderful woman.\"\n\nI nodded. \"She's been excellent with you.\"\n\nLizzie finally cracked an eye open. \"She'll be excellent with you, too, Susie.\"\n\n\"I don't need her to take care of me,\" I scoffed.\n\nLizzie hummed softly. \"Idgie and I...we talked a lot before you came. She's had her share of girlfriends. Was engaged, once, too, but her fianc\u00e9e broke it off. Idgie's married to her job, now.\"\n\n\"Lizzie\u2014\"\n\nShe tugged on my hand. \"All I'm saying is, it hasn't been easy for her, either. She gets you.\"\n\nI opened my mouth to protest more, but she continued with both eyes open now, her voice more strained than ever.\n\n\"Give her a chance. Let someone love you. I couldn't be that person you needed. Idgie can.\"\n\n\"I-I...\"\n\nHer grip tightened, or at least I think it did. \"Promise you'll try.\"\n\nI gulped, feeling a tear finally trickle down my cheek. \"I promise.\"\n\n\"I love you, Susannah.\"\n\nOh, God, no. I choked, struggling to find my voice. \"I love you, too, Elizabeth.\"\n\nHer eyes drifted closed again. Her hand eventually relaxed then fell off of mine.\n\nFor the longest time, I just stared at her slightly furrowed brow. At her shaking chest as it struggled to rise and fall under the blanket with each raspy breath. I knew her body had been working overtime for so long to keep her alive. She'd fought a good fight. It wouldn't be much longer now.\n\nIdgie must have known, too, because she left us alone.\n\nThe sun slowly shifted across the room. As it finally touched Lizzie's face, the crease in her forehead relaxed and her lips parted. There was the softest hiss of a breath. Then a sense of peace seemed to settle on her...on the room.\n\nAs tears rolled down my cheeks, I lifted her limp hand to my lips, kissing it. \"Goodbye, my love.\"\n\n###\n\nAll of my strength seemed to have gone with Lizzie. The next two weeks left me dazed and confused. I had trouble concentrating when people asked me questions. Especially when I had to deal with the legalities of Lizzie's estate. She'd left me her house and a small monetary inheritance from her mother. I'd never felt so honored, and yet at the same time, so unworthy. I'd gone from being a nomad of sorts\u2014traveling wherever life took me\u2014to being a homeowner. That both excited and scared me.\n\nI was glad we'd already discussed plans for her burial. I hadn't even tried to dissuade her. Lizzie would get whatever she wanted. It was the least I could do to carry out her final wishes.\n\nThe instructions had been brief and explicit. She was to be cremated with no ceremony, as there was no one left she cared about except me. I was to purchase one of those necklaces that could hold ashes in a pendant so I could always have her close to my heart. Then I was to take a trip to Italy\u2014someplace Lizzie had talked about extensively in the long, intimate hours we'd finally gotten to spend together\u2014where I would scatter the rest of her ashes over the countryside.\n\nAccomplishing the first part had been easier than I'd anticipated. I'd cried something awful as the funeral home took her body, but I knew Lizzie was no longer in the shell that had deteriorated before my eyes over the course of too many weeks. That her soul was free of the restrictions this world had placed on it. I'd gotten a chain with a rectangular urn pendant, both black-plated stainless steel. Sleek and sophisticated, yet not too feminine because that's not who I was. I wore it constantly with the white-and-brown beaded necklace I'd picked up on my arrival in Nebraska so long ago. That one had been a symbol of starting over\u2014true independence\u2014and I'd rarely removed it.\n\nI kept the Harley scarf under my pillow, too. I'd never been one to trade an article of clothing or jewelry with my partners, as I knew many couples did. Not that the relationships hadn't been meaningful, but I'd not placed any significance on objects before. Maybe because of my nomadic lifestyle and not having many possessions. Or just wanting to be able to let go of my memories once I'd moved on. But Lizzie's scarf was different. She was different.\n\nHer last request...that was the hardest. Not because I didn't have the money now to travel overseas, but because a part of me was too afraid to let the physical embodiment of her go completely. I needed more time to grieve.\n\nI'd had my share of nightmares and restless nights through the years after all the heartache I'd caused others. But the night Lizzie passed away? I wished I'd died right along with her. There was this deep-seated feeling as though I could have prevented her death. If I'd stayed behind all those years ago... If I'd stood up to her mom... If she'd only contacted me sooner... If, if, if. I knew none of it was true, but that didn't stop the thoughts from popping up in my already addled brain, especially during the silences.\n\nThe worst was every time I fell asleep. I startled awake with a scream from one dream or another where her mother was trying to prevent me from getting to Lizzie. From saving her. I could never get to her no matter how hard I tried. But each time, Idgie was right there in the darkness to comfort me, rubbing my back until I drifted off once more.\n\nShe had returned to sleeping in the bedroom she'd been accustomed to for the last couple of months. It was down the hall from mine, connected by a Jack-and-Jill bathroom of which we kept the doors open unless occupied. She'd been staying upstairs until Lizzie had gotten worse. Then Idgie and I had taken turns sleeping on a cot by Lizzie's side.\n\nIdgie treated me with the same care as she had Lizzie. Making sure I was eating and bathing. Getting up each morning instead of staying in bed all day. She encouraged me to go to the gym again, something I'd told her I'd done every evening after work wherever I'd called my home. I found it helped relieve the tension I'd built up in my shoulders...both then and now.\n\nSometimes we talked. Sometimes we just sat in front of the TV together. There were even a few days where we sat out on the porch and drank a beer in the silence.\n\nWhatever the situation, she never chastised me when I cried. Which I did often. She either held my hand or wrapped an arm or two around me and waited out the episode in her professional way.\n\nFunny, I'd never been so emotional in all my life.\n\n###\n\nIt was three weeks without Lizzie when they finally came to take away the hospital bed and medical equipment. I took a shower since I'd worked out and had helped dispose of what couldn't be used. Then I crawled into bed and crashed. It was one of the first silent nights. No dreams. No tossing and turning or jolting upright, screaming. Just pure, unadulterated sleep. It was fucking amazing.\n\nThe next morning, I wandered into the bathroom to pee. It took me a moment to realize I'd pushed the door open from my room. Once I saw the reason for the closed door, I stood blinking in the doorway, my fingers halfway buried in my hair.\n\nIdgie was opening the shower door, naked as the day she was born. Her black hair hung in long, wet strands, grazing her shoulders.\n\nI gulped, letting my eyes wander down her revealed body. At four years my junior, she was my height and my stocky build, though in a feminine way. I'd always known that. But the scrubs\u2014and even her casual clothes lately\u2014had hidden just how soft her curves were. How very beautiful she was.",
        "The water that still clung to her skin gave sheen to her arms, legs, and everything in between.\n\nI couldn't help but stare, especially at that in-between part. I licked my lips, my fingers twitching when my hand dropped to my side.\n\nShe stepped one foot out and reached for a towel.\n\nMy eyes bounced between her breast and thigh. I suppressed a soft groan. Or at least I thought I had.\n\nIdgie's head jerked up with a loud gasp. The shower door rattled in its metal frame when she grabbed it with one hand while the other clutched the towel uselessly to her chest.\n\nMy eyes snapped up from her naked hips to her wide eyes. My mouth would not work. My hands decided I was Italian and made some kind of motions in the air, as though to excuse my gawking. Then I did what I did best. I turned and ran.\n\n\"No, Susie! Wait!\"\n\nI was already down the stairs before I realized that I was just wearing the boxers I'd slept in. No sports bra, no shirt, no pants. Shit!\n\nThere was a racket upstairs with a bunch of cursing while I stood frozen in the hall, looking around as though the walls could provide a solution. I managed to uproot myself and run into the first-floor bathroom before pounding feet echoed down the stairs.\n\nI leaned against the wall, eyes closed. Damn! Damn! Damn!\n\n\"Susie?\"\n\nI shrieked at her muffled voice. Breathing hard, I stared at my reflection in the mirror and mumbled, \"Calm the fuck down, girl.\"\n\nShe knocked softly. \"Please come out.\"\n\nI took care of business and splashed water on my face. Flexing my shaking fingers, I slowly slid the pocket door open.\n\nIdgie stood there wearing a long T-shirt. It clung to her still-damp body, doing nothing to erase the image of her burned into my brain. The ends of her hair soaked the collar and dripped downward, emphasizing the swells of her breasts tipped with straining nipples.\n\nI swallowed hard, my voice a squeak when it came out. \"I'm sorry! I should have knocked.\"\n\n\"Shh, Susie. It's okay.\" Idgie wrapped her arms around me and pulled me to her. One hand rubbed my lower back while the other slid up to the back of my neck where her fingers buried in my hair.\n\nI could feel her heart racing against my chest. Her breasts pressing into mine. I groaned and hugged her back, ignoring the chill from her wet body snuggled up to my bare skin. I mirrored her motions without even thinking about it.\n\nWhen I inhaled, I got the most wonderful scent of her freshly washed skin. It was clean and warm, like a summer rain. What stood out was the sandalwood from whatever she'd used in the shower. It swirled through my brain, stirring my emotions before I could process what was happening.\n\nAfter a long moment, she walked us over to the couch and had me sit down first. I was still blinking when she pulled a blanket around my shoulders and sat beside me.\n\n\"It was an honest mistake.\"\n\nI just nodded. I couldn't get her body out of my mind. Her scent. It was worse when I closed my eyes. I shook my head, pressing one hand to my forehead, snorting softly.\n\n\"Are you okay, Susie?\"\n\n\"Why have you stayed?\"\n\n\"Do you want me to go?\" The couch cushions shifted.\n\nMy other hand shot out, seizing her wrist. \"Wait!\"\n\nShe didn't say anything, but she settled again.\n\nI loosened my grip. \"What I meant was, I guess I figured you'd leave once the job was done.\"\n\n\"Lizzie was more than a job, Susie.\" There was a tinge of disgust in her voice as she tugged her hand free. \"She became my friend. So have you.\"\n\n\"I know that. I'm sorry.\" I cursed under my breath then sighed. \"Everything is going wrong today. I'm just saying you could have gone home. Surely, they need you for another client. But you've stayed here for three weeks, taking care of me. Why? I'm not paying you to.\"\n\nIdgie smirked. \"I would be offended if you had even offered.\"\n\n\"So why?\" I shrugged. \"Why stay?\"\n\nShe caressed my cheek, whispering, \"Because I want to.\"\n\nAnd with that, she kissed me.\n\nIt wasn't a simple peck on the lips. It was a full-blown \"do you understand now?\" kind of kiss. Her lips were warm and soft. Plying mine. Making me fucking whimper. And I didn't do that.\n\nBoth of her hands cupped my cheeks now. Holding my head still, as though I intended to go anywhere. She nipped my bottom lip, tugging then licking it before pulling away herself.\n\n\"I see,\" I breathed, my eyes slowly coming back into focus with hers.\n\n\"Good.\" The corner of her mouth twitched. She swept her thumb over my cheek. Licked her lips. \"Now, kiss me, Susie. Take my breath away.\"\n\n\"Fuck,\" I growled, reaching to cup her face now.\n\nAs much as I suddenly wanted to ravage her, the desire to savor the feel and taste of her mouth on mine was stronger. I kissed her slowly. Her moaning filled my head. I couldn't wait to hear it while we were doing more than kissing. When we were bringing each other so much more pleasure.\n\nShe whimpered, her hand fluttering at my cheek before it fell away. It landed in my lap, just resting there. Her whole body slumped sideways against the back of the couch. If I were to let go, she would have collapsed backwards.\n\nI smiled and pressed a little harder at her lips. Slipped my tongue into her mouth. Sucked on her tongue. When her hand gripped my thigh and she seemed to regain a little bit of her strength, I tugged on her lip with my teeth. Licked it then released, just as she had.\n\n\"Like that?\" I panted, leaning my forehead against hers.\n\nShe blinked. Swallowed noticeably. Licked her lips. \"Uh huh.\"\n\nWe stared at each other for a long moment, catching our breaths. Then we were kissing again. In tandem, our hands shifted into exploration mode. Discovering the sweet spots behind the ears. Along the jugular. At the nape and collarbone.\n\nI longed to feel the softness of her hair, but I was satisfied with the damp strands between my fingers. Gently gripping it while we tilted our heads this way and that. Both seemingly insatiable once we'd gotten a taste of each other.\n\nShe shifted her body, facing me more, her hands lightly clutching the back of my arms. When she started to lean back, I followed her lead and moved with her. Our bodies adjusted, molding to each other. Her knees parted and allowed me to settle between them.\n\nWe both groaned then. God, it felt so good to feel her under me. So soft and feminine. The smile on her face and the way her eyes closed and reopened slowly told me she enjoyed my weight on her, as well. Her fingers trailed up and down my arms, making me shiver. The heat of her pussy was palpable against my mound despite my boxers.\n\n\"Did you put on panties?\"\n\nShe just bit her lip and grinned wider.\n\n\"Brat.\" I playfully ground against her.\n\nShe cried out. Arched.\n\n\"That would be a no,\" I grinned. I rolled my hips again, getting the same reaction. I went to do it a third time when she whimpered and tilted her head up, pulling my head back down.\n\n\"Susie\u2014\"\n\n\"Okay, baby.\"\n\nMy fingers took hold of her hair while I kissed her. I groaned when she opened her mouth and our tongues tangled once more. When she stroked up and down my back. It was my turn to arch, pressing my mound into hers once more.\n\nHer moan was muffled but telling.\n\n\"You like that?\" I growled in her ear.\n\n\"Yes!\" she hissed, her fingers clawing lightly.\n\nI repeated the gesture a little harder. She rewarded me with more delightful moans. Using my grip on her hair, I tugged her head back and held it there, deepening the kiss. Tasting more of her. Letting her taste me. Continuing to grind our mounds together. Wishing I wasn't wearing my boxers but not wanting to take the time to remove them.\n\nShe alternated between stroking and clawing my shoulders and spine. My sides and lower back. Making me grunt and shudder.\n\nGod, we had just started, and she was already driving me wild!\n\nIdgie groaned when I pulled back for another break. Her inhales and exhales were sharp. I was gulping down air, myself. For a moment, her hands stayed frozen in mid-claw, and then they relaxed on my back.\n\nHer soft whimpering drew my gaze to her face...her mussed hair. Closed lids. Flushed cheeks. Her swollen, parted lips. How beautiful she looked.\n\nAs we caught our breath, I wondered if she'd planned for only a simple make-out session to test the waters. Maybe she didn't want it to go any further than this. Maybe she was satisfied\u2014\n\nHer fingertips stroked my hips.\n\nI jerked on top of her and growled. My naked breasts pressed against hers through the cotton fabric of her T-Shirt when I settled again, my nipples aching.\n\nShe let out a deep, shuddering sigh. \"I never took you for a tease.\"\n\n\"I'm a tease?\" I arched an eyebrow then remembered she couldn't see it.\n\n\"Yes.\"\n\nI was tempted to grind against her to prove she was right. I was worried, though, that I wouldn't want to stop there. She'd awakened something in me I'd long ago buried. If I let it out... What if she wasn't comfortable with anything more than kissing right now?\n\nAs though knowing I was thinking about her, Idgie slowly opened her eyes. She stroked the back of her fingers over my temple, smiling. \"Make love to me.\"\n\nMy heart thudded in my chest. I wanted to do that. More than she could know. But I was suddenly nervous that I wouldn't satisfy her. Sure, I'd scratch the itch. Would it be enough, though? Would she still want to stay?\n\n\"Please?\" Her other hand played at the back of my neck, making goosebumps prickle my skin.\n\nFuck. How could I resist? But I was doing this on my terms. I was going to be in control.\n\nI leaned down and kissed her ever so softly. When she started to wrap her arms around my neck, I gently pushed them away and sat up, kneeling between her legs.\n\nShe blinked up at me. \"Susie?\"\n\n\"Hmm?\" My eyes dragged downward over her heaving chest where I could see her nipples straining even more against the T-Shirt.\n\n\"What's wrong?\"\n\n\"Nothing, baby. Nothing at all.\"\n\nBefore she could speak again, I slid my hands one time from top to bottom over her breasts, abdomen, and sides, settling on her hips. Her whole body trembled with her soft sighs. I stroked my thumbs over the material of her shirt. Then I slowly pushed the hem up, finally touching her skin.\n\nShe arched as though I'd shocked her. Undulating and cooing while I moved my fingertips over her hips.\n\nI gradually slid my hands upwards. Relishing in unveiling her body. The softness of her skin under my fingertips while I defined her bones and curves. The heat I could feel radiating from between her legs. I could hear her gasping and gulping. See her chest rising and falling rapidly.\n\nMy own breath caught when I uncovered her breasts. They were just over a handful with large, dark areolas and plump nipples that reached out, begging for attention. I wasn't one to disappoint.\n\nThe moment I leaned down, Idgie put her hand on the back of my head. Her fingers fisted in my hair, a soft whimper reaching my ears.\n\nI glanced up while stretching my tongue out to taste her and saw her eyes dilate. Her tongue ran back and forth over her lips. I licked my own. Slowly. Deliberately. Finding satisfaction when she gasped. Then I descended again, finally flicking the tip of her nipple with my tongue before gathering it between my lips. My teeth.\n\nIt was blissful. Succulent. Soft and pliable. Warm and perfect.\n\nShe held her grip on my hair and arched her chest up to me, mewling while her knees squeezed my hips.\n\nI gladly took her offering, nipping the flesh around her areola with my teeth. Soothing the bites with kisses. Repeating the process, watching her roll her head back and forth on the couch cushion.\n\nThe more I played, the more she writhed and whimpered. It was delightful. Very encouraging. So I switched to her other nipple and started again. Taking my time.\n\nHer pale skin was now tinted rose. Slick and glossy from my saliva. Her breast swelled with more arousal in my palm while I fondled and devoured it. I echoed her moan, sucking harder on her nipple.\n\n\"Susie!\" Her hand clamped around my wrist. \"I need\u2014\"\n\nBefore she could finish, I slid two fingers down through her pussy and up into her. I'd been ready. Waiting until she'd given a sign she was struggling to hold onto her resolve. Until she'd stared to beg.\n\nShe cried out something unintelligible, her lower body arching hard while I turned my attention down below, abandoning the onslaught above.\n\nI was the one shuddering now. Damn, she was wet. Scalding. And tight. I cussed under my breath when her inner muscles clamped down even more on my digits.\n\nHer teeth closed on her lower lip as I pulled my hand out another time. Her neck strained for a moment, her eyes clenched shut. She started to relax when I pushed forward again. Then back to apparent deep concentration on the outward movement. It was like a seesaw. I moved slowly, not only for the pleasure it was giving her but also the amazement of watching the emotions play over her face. Knowing she must be on the brink.\n\nOn the next gentle thrust in, I brushed my thumb over her clit.\n\nIdgie's jaw dropped and her eyes flew open in a silent cry as her body shook. As she came.\n\n\"That's it, baby.\" I felt my own pussy clench at the pulsing of hers around my fingers. How badly I wanted to come, too. To lean down and lick up her release. But I didn't stop stroking until she batted my arm and moaned.\n\nShe continued to shudder with aftershocks for a couple of minutes. Her head twitching from side to side. Small noises punctuating the silence of the room between our heavy breathing.\n\nI just knelt between her legs, still buried deep inside of her while I tried to wrap my head around how breathtaking she was when she orgasmed. The color of her skin as she flushed throughout. The heat continuing to emanate from her mixed with the stickiness of her cum on my knuckles.\n\nShe groaned when I finally eased my fingers free, her peaceful face contorting for a moment. Then she sighed when I leaned down and kissed her softly.\n\n\"Susie?\" she whispered against my lips.\n\n\"Yes, Idgie?\" I smiled, kissing her again.\n\n\"Let's move to the bed.\"\n\n\"Excellent idea.\"\n\nWe made a pair, both of us half dressed, hands groping and our legs slightly unsteady while we tried to kiss and climb upstairs.\n\nFinally making it to our destination, we tumbled onto my bed. The make-out session resumed full force. Arms and legs tangled while we mussed up the sheets with our rolling around. We came up panting for air, her on top. I reached for her breasts, but she knocked my hands away.\n\n\"My turn,\" she grinned, pulling her T-shirt over her head.\n\nI stared hypnotized at the naked beauty straddling my waist. I licked my lips when she scooted back, tugging down my boxers in the process. Gulped when she spread my legs. Growled when she lay between my knees and locked her gaze on mine.\n\nHer breath tickled my mound when she whispered again, \"My turn.\"\n\nBreathing became difficult after that.\n\nWhen she kissed my mound, my lower body levitated. She waited until my hips had returned to the bed before pressing her hands on my inner thighs. Her tongue darted out and licked along the seam between my outer lips, drawing vulgarities from between my clenched teeth. Then she parted the divide and lapped at the arousal I knew awaited her. Searched for and located my clit. Explored even deeper.\n\nI tried to focus on her dark hair that had dried in clumps of tangled curls. Her bare ass wiggling playfully down by my ankles. The creamy curve of her back, her calves. Anything to hold on to sanity. But the more her tongue danced about, the more I knew I was a goner.\n\nIt was maybe five minutes, tops, before I held her face to my pussy, growling out her name. Thrashing beneath her. Waves of pleasure rolled over me. Through me. Her fingernails gripping my thighs only heightened my release.\n\nShe continued licking and sucking. Proving herself a fateful match as a lover.\n\nI must have dozed off. I opened my eyes to see her lying beside me with a smile, stroking my cheek.\n\nShe kissed me softly. \"Welcome back, Susie.\"\n\n\"Mmm.\" I returned her kiss and slid a hand behind her neck, stroking her skin, slick with sweat. \"That was amazing. Thank you.\"\n\n\"My pleasure.\"\n\nShe rolled onto her back, drawing me with her until I settled my weight on top. Her knees parted, moving up to frame my hips. For a while, we resumed kissing. Hands roaming. Especially between our legs. When I pulled back for air, she sighed.\n\n\"Too bad we don't have\u2014\"\n\n\"Don't move.\"\n\nMy whole body felt like J-ELLO while I made my way to the closet. After locating the correct suitcase and making the necessary adjustments, I strutted back into the bedroom, my left hand on my hip.\n\n\"Oh, shit, Susie!\" Idgie scrambled to sit up, gawking at me.\n\n\"You were saying?\"\n\nI slowly stroked my right hand up and down the strap-on dildo secured in the harness around my waist and thighs. Reveling in the pleasure of wearing it again. It had been way too long. Having a fake cock for packing was satisfying. Even that had been a while ago. But wielding the longer version? Being able to use it on another? My body was shaking from anticipation.\n\nIdgie didn't speak. She just kept licking her lips, her eyes jumping from my eyes to my waist.\n\nI contemplated how I wanted to take her the first time. From behind, gripping those lovely, round hips and buttocks? Or missionary style where I could watch her come undone?\n\nHer whimpering made my decision.\n\n\"Lie back, baby, with your ass on the edge of the bed.\" When she didn't move, I coaxed her. \"Idgie?\"\n\nShe blinked and shuddered. Then she moved into place, draping her legs over the side.\n\n\"Just relax. I'll be gentle.\"\n\nShe blinked again. Nodded.\n\nI knelt on the floor, wanting to prolong the excitement a little longer. Besides, she'd gotten her chance. I had yet to taste her honey.\n\nShe propped her arms behind her and opened her mouth to speak when I stroked my hands up and down her legs. First on the front. Then the outside. And finally on the inside when I parted her knees. All that came out were gasps while she trembled under my touch.\n\nJust like I'd done before I had leaned in to touch her nipples for the first time with my tongue, I lifted my eyes to hers. I tried to keep our gazes locked when I made contact with her pussy. But the moment I smelled her sweet arousal, I closed my eyes and gave into the headiness.\n\nI'd felt her with my fingers downstairs on the couch. Brought her to an exquisite climax. Tasting her, though, was on a completely different level. It reminded me of the saltiness of the ocean with a hint of the deep sweetness of caramel. I took my time lapping up her thick cream. Inhaling her clean yet slightly spicy scent. Tracing her folds with a new perspective. Rediscovering the spots that made her squeal and try to squirm away.\n\nHer heavy panting interspersed with whimpers reached my ears. In case I hadn't heard her desperation, she grabbed my hair and tugged until I released my mouth from her and looked up.\n\n\"Please...Susie. Please.\"\n\n\"I'm sorry, baby. I got carried away.\" I quickly stood and stepped between her thighs.\n\nThe rubber phallic bounced from my movements, bumping against her swollen pussy. She groaned. I reached down and caressed both of her breasts, running my thumbs over her nipples. Trailing my fingers down her sides. Stroking her waist. Her hips. The tops of her thighs.\n\n\"Susie!\" she growled.\n\nI held my breath and positioned the cock. I heard a prolonged, shaky cry while I entered her in one fluid movement after breaching her barrier. My hands settled on her hips, giving me leverage while I pulled back and slowly plunged back in. It had been years, but using the strap-on came back to me like second nature. I quickly found and settled into a rhythm.\n\nBeneath me, she writhed, clenching and releasing the sheets. Her mouth perpetually open wide and her eyes closed. Her breasts jiggling with my motions, nipples straining once more.",
        "The sounds of her pleasure drowned out everything else in my head. The only thing that mattered was Idgie. Bringing her up to that precipice and tipping her over. Being there to catch her on the other side.\n\nIt wasn't long before she was begging for release. I gladly acquiesced. My hips thrust faster, harder. I dug deeper. And then she gurgled out my name, her body thrashing in ecstasy.\n\nI gathered her still-trembling body in my arms and climbed back into bed, pulling the covers over us. Her breath caressed my lips when I kissed her softly. And I moaned when her hand nestled between us, cupping my breast. I anticipated her playing, but her slower breathing told me she was drifting off.\n\n***\n\nThe faint caresses on my chest made me think I was dreaming. Then something wet covered my nipple. My eyes drifted open. I saw Idgie's smiling face staring up at me, her head resting on my right breast.\n\n\"And here I thought I was a sleepyhead,\" she giggled, lathing her tongue over my nipple again.\n\n\"And I thought I was the tease,\" I growled. I gripped her hair at the back of her neck and gently tugged until she scooted up so I could make better use of those lips.\n\nShe moaned into my mouth, clutching the back of my arm when I wrapped my leg over her hip. She snuggled closer, rocking gently.\n\nIt took a moment to realize the strap-on had rubbed against her. That she was actually humping me.\n\nI chuckled. \"Are we insatiable?\"\n\n\"Mmm.\" She leisurely kissed me. \"Apparently.\"\n\nI just stroked her side from hip to breast and back again. Letting my eyes drift closed, enjoying her moving beside me. I thought that maybe she was going to make herself come when she stilled and shifted.\n\n\"Susie?\"\n\nI cracked one eye open and saw her leaning over me. I smiled at her. \"Yes, Idgie?\"\n\n\"Has anyone ever used this on you?\" Her fingers played over the straps of the harness, giving me delicious goosebumps.\n\n\"Mmm, no. It's kind of been my specialty. You know, being butch and all. The one with the cock.\"\n\n\"I see. I've only ever been with femme women before.\" She lay down again, nestling her head on my shoulder. \"I quite prefer being with you. Sex with you is amazing.\"\n\nMy chest swelled with pride. I grinned like a fool, staring hazily at the ceiling while my fingers resumed caressing her skin. \"I would agree. I love making love to you.\"\n\nAfter several minutes, she whispered, \"Would you let me use it on you?\"\n\nMy heart pounded in my chest. I'd used vibrators and even the cock I wore for packing, though I mostly just used my fingers. It had never crossed my mind to have someone fuck me with the strap-on. I both gave and received pleasure when I had it on. Then again, no one had ever asked. But Idgie had. And the thought had my pussy clenching. I suddenly wanted nothing more than for her to give me that pleasure.\n\nI tilted her chin up and kissed her softly. \"Yes, baby. I would be honored.\"\n\nShe giggled, her eyes sparkling. \"Just relax. I'll be gentle.\"\n\n###\n\nThe sweet and tangy scent of sex lingered in the room. It clung to our bodies like a second skin from rolling around on the sheets soaked in it. Every breath I took reminded me of what we'd just done.\n\nIdgie slept on her side, facing away from me. The sheet over her conformed to the curves of her hip and ass. Her hair lay fanned against the pillow in messy strands. How wonderful it had felt tangled in my fingers. In the moonlight coming from the windows, I could see the sheen of sweat decorating her backside. The whole package was delectable.\n\nI turned onto my back and stared at the ceiling, my chest still heaving. My brain went into overdrive, realizing my time here was done. I could return to Alabama and get my welding job back. I'd told them it had been a family emergency. They'd said they'd understood, to take my time. A hard-working employee in the trade was hard to find these days. Plus, I was comfortable there. No one knew my past. Or I could go somewhere else. Further west as I'd originally planned when I was first on my own. I'd only been a kid then. I could make it now as an adult. Hopefully.\n\nAll I knew was, if I stayed, I'd surely ruin Idgie's life. I had a fear of commitment. I knew it. She knew it. Old habits die hard, wasn't that the saying?\n\nI wondered what Jenna would have done if she'd told Kat how she'd felt and Kat had rejected her. Or if she'd finally found Kat only for Kat to die a few months later. Would Jenna have been able to move on? I could really use her advice this time.\n\nI decided to get up and start making plans to get my own affairs in order. First would be putting the house up for sale. Contacting my old employer.\n\nIdgie chose that moment to roll over. She sighed in her sleep, her breath caressing my chest when she snuggled up to me.\n\nI kissed the top of her head and closed my eyes. The warmth of her body pressed to mine. Her arms curled between us, one knee sliding between my legs.\n\nShe made a soft cooing sound when I pulled the covers tighter over us, wrapped my arms around her, and tucked her head under my chin.\n\nFuck it. My plans could wait until the morning.\n\n***\n\nThe dream was familiar:\n\nI was standing by the kitchen door in Lizzie's childhood home. Across the dining room, I could see Lizzie going up the stairs. A sense of urgency passed through me: I had to get to her.\n\nDespite knowing the scenario that would follow, something in me hoped it would change.\n\nEvery time I tried to move forward, her mom held me back. Always with a nagging voice over my shoulder that she wasn't going to let me turn her daughter gay. Eventually, I broke free. But then the room stretched out, like in a cartoon. Mrs. Rhodes caught up and dragged me to the front door. I begged Lizzie to turn around before her mom shoved me outside and slammed the door in my face.\n\nThat's when I would wake up. Every. Single. Fucking. Time. Usually in tears.\n\nTonight, I took those initial steps from the doorway to the dining room table. There was the usual resistance on both of my arms. The feeling of someone tugging me backwards. I persisted and wasn't surprised when the hands fell away.\n\nBut when Mrs. Rhodes didn't spew her hatred at me? When I hurried past the table and the distance to the stairs decreased? When Lizzie looked at me after I yelled for her to stop?\n\nSomething in my brain told me this wasn't the same dream, but the rest of me kept moving forward. I was suddenly at the foot of the stairs. Running up them. Spinning Lizzie around when I met her midway.\n\n\"Susie?\"\n\nLizzie tottered for a moment before I yanked her into my arms, trying to stop myself from trembling. I was crying so hard I couldn't speak.\n\n\"Shh.\" She untangled her arms to embrace me as well, rocking me slightly from side to side. One hand gently guided my head to her shoulder where she stroked my hair.\n\nI felt her rest her head against mine. I clung to her arms, my voice croaking when I spoke. \"Don't go!\"\n\n\"Oh, sweetie. I have to. It's the only way.\"\n\nI gripped her tighter to me. \"Then I'll\u2014\"\n\n\"What?\" Lizzie laughed and kissed the top of my head. \"Run away?\"\n\n\"Humph,\" I grumbled.\n\n\"When things get hard, you're gone. I know.\" She tilted my chin up. \"But why on earth would you want to run now? You've just had the most incredible sex with a woman who thinks the world of you.\"\n\nI blinked away my tears. \"But what if\u2014\"\n\n\"Stop.\" Lizzie adjusted to cup my cheeks, her hands warm. Comforting. \"You won't know unless you give her a chance.\"\n\n\"I'm afraid.\"\n\n\"Of what? Falling in love? Love hurts. We both know that.\"\n\nMy throat hurt when I swallowed the lump there. \"Of replacing you.\"\n\n\"Shh. It's time to let me go, Susie. Here's your chance to be happy. Go after it.\"\n\nI sniffled, blinking rapidly because she was fuzzy again. But it didn't clear my vision this time. \"Lizzie?\"\n\n\"Don't give up just because everything seems stacked against you. Remember Lloyd Dobler? He didn't give up on Diane.\"\n\nI scrunched up my nose. \"Our movie?\"\n\nLizzie nodded and kissed my nose.\n\n\"I don't understand.\"\n\nShe smiled at me. \"Be Lloyd.\"\n\n\"Be Lloyd?\"\n\n\"Be Lloyd,\" she repeated, and then she released me and continued up the stairs.\n\n***\n\nHeaviness on my arm prevented me from bolting upright in bed the moment my eyes flew open. My body tried, though. I flopped back against damp sheets and sucked in gulps of air, trying to rationalize that it had been a dream.\n\nIt took a moment to orient myself.\n\nIdgie lie curled up beside me, her head weighting my arm. Moonlight made the closed curtains glow a soft blue. The scent of our lovemaking met my nose when I took deep breaths to calm down.\n\nI was in my room at Lizzie's house. Her house in Massachusetts, not in Indiana...as adults. No, wait, my house now. My body trembled slightly at that fact.\n\nI eased my arm out from under my new lover's neck then grabbed a T-shirt and my boxers from the floor. Dressing myself as I padded downstairs, I struggled to not trip over my own two feet in the semidarkness. I had to search through the rack by the TV several times until I found the correct DVD. A light would have helped, but I was too stubborn to turn on the table lamp.\n\nMy chest tightened when the opening credits to \"Say Anything\" came on the screen. I curled deeper into my usual corner of the couch and pulled the blanket tighter around my shoulders. The same blanket Idgie had thrown around me hours earlier before she'd proven to me that she wanted me as more than a friend. Before she'd given me a reason not to run...even though I was still struggling to listen to reason.\n\nI kept imagining Lizzie sitting beside me as the movie started. Remembering all the times we'd watched it while she was sick with her first cancer. And again a couple of times while I was out here on the East Coast before she'd succumbed to be bedridden for the second and final time in her life.\n\nHow we'd both giggled and swooned at Lloyd's constant attempts to woo Diane. How we'd sung along to the song he played on his boombox\u2014a scene that had become iconic through the decades. We'd cried a little when we thought he was going to lose her...and again when he hadn't. Then we'd fallen back dramatically on the couch or bed during the closing credits, saying we'd take an average, romantic, and persistent guy like Lloyd over a preppy jock any day.\n\nIdgie joined me on the couch about twenty minutes in. She didn't say a word. Just sat there beside me, the lights from the TV flashing over her face whenever I glanced her way and saw her staring ahead.\n\nI found myself scooting closer to her. Laying my head on her shoulder. She wrapped her arm around me, and we both sighed.\n\nWhen she went to adjust her arm several minutes later, I lay across her lap, my head resting on a pillow propped against the arm of the couch. Her right hand settled on my hip, stroking absently. Her other hand brushed at my forehead, playing with my hair.\n\nI was so engrossed in the movie and the relaxing sensations running through me, I didn't realize at first that she was stroking my mound through my boxers. Her fingers were very light and subtle, but her movements were erotic, nonetheless.\n\nAt my soft grunt, she whispered, \"Shh. Watch the movie.\"\n\nI bit my lip and tried to focus on the TV. But in my head, I was less concerned about Lloyd and Diane's predicament than Idgie's fingers that were pressing a little harder...moving a little lower.\n\nHer hand suddenly disappeared, making me growl softly. But then I gasped when she slipped under the elastic waistband. Her fingers maneuvered to stroke my mound skin on skin. Her hand in my hair resumed playing there, too. Tugging gently. Lightly scratching my scalp.\n\nI was spellbound, letting out shaky exhales. My pussy clenched. Hard.\n\nShe kept the pressure and location the same for several minutes. Torturing me.\n\nI was used to being the one in charge in a relationship. Maybe I needed to lower my defenses and give her a chance to take that lead position if she wanted it. I'd been fighting so hard for so long. I was exhausted. But I wasn't ready to beg. Yet.\n\nMy legs fell open when I shifted more onto my back. A silent but all-too-clear signal. I felt her chest shake slightly, as though she were laughing internally.\n\nWe continued to watch the movie\u2014or rather pretend, at least in my case\u2014while she teased me with her fingertips. Making me stifle my moans with big gulps of air. It took everything in me not to push her hand down further where I ached for her touch.\n\nAs though planned, she dragged out her foreplay to the most opportune moment: when Lloyd went to confirm his dedication to Diane with the iconic scene. This time instead of singing along, I punctuated the room with gasps and growls while Idgie finally stroked my clit and slid a finger inside me.\n\nFuck! Her fingers were so skilled! She knew just where to touch me. It was so amazing, I wanted to cry.\n\n\"That's it, baby,\" Idgie whispered. Her left hand continued to stroke my hair.\n\nI gripped the pillow under my head with both hands, clawing the fabric. Whimpering. Shaking. Allowing myself to hump her hand. Crying out her name when I came.\n\nAnd then I was panting. Blinking sweat out of my eyes. Glad that I was already lying down.\n\nHer hand remained between my legs for the duration of the movie, occasionally playing and pleasing. I just laid there in pure bliss. Thanking Lizzie for her words of wisdom, though the details of the dream became murky the longer I remained coupled on the couch with Idgie.\n\n###\n\nLater that day, Idgie and I sat on opposites sides of the same table Jenna and I'd used at Darla's Bar. Idgie had insisted we get out of the house to have a meal. I'd obliged as long as I paid. Two beers later and our bellies full, I thanked her for the brilliant idea.\n\nShe shoved the empty, stacked baskets between us aside and crossed her arms on the table. \"I think we should talk about it. Don't you?\"\n\n\"What's that?\" I took another sip of my fresh beer, lowering my eyes.\n\n\"Whatever it is that's made you so melancholy today. It's different than it has been the past few weeks. Improved, which I'm happy about, but you're still not fully here mentally. I thought you were coming out of your shell last night. Is it something I did? Something I said?\"\n\nMy head jerked up. \"No!\"\n\n\"Then what?\"\n\nI worried my bottom lip.\n\nIdgie shook her head. \"I thought I was learning to read you after all this time. But you're still an enigma, Susie. I can't figure you out. Each time I get a peek, you shut down tight again. I wish you wouldn't. I wish you could trust me.\"\n\n\"I do trust you, Idgie.\"\n\n\"Then explain what's going on in your head. Open up to me. Please.\"\n\nWith a deep sigh and some more liquid courage, I gave in. I silently begged for Lizzie's help from beyond the grave. \"I've told you about how I met Lizzie. Why I left my hometown and travelled for so long. How I met Jenna. The women in between. Since.\"\n\n\"Yes, but your past doesn't matter to me.\"\n\n\"It does to me. Or at least it did. It was why I'm used to running. I guess it was a way of believing I had control of my destiny. To try to move on from Lizzie. But she kept popping back into my life. I've always loved her, even if she didn't love me in return.\"\n\n\"I can see that.\" Idgie gently took my hand on the table and squeezed it. \"So what has changed?\"\n\nI smiled softly. \"Lizzie.\"\n\nIdgie tilted her head. \"How so?\"\n\nI took in her wavy black hair, which she'd left loose around her shoulders. I liked it better that way than pulled back like while she was working. It reminded me of a wild mare, happy to be free. The true spirit of her released. Much like Lizzie had kept locked inside.\n\n\"She was the reason I've never had a legitimate, full-on relationship with someone. In the back of my mind, I'd convinced myself that I would never get over her and didn't deserve to love anyone else. For anyone to love me.\"\n\n\"Susie\u2014\"\n\nI held up my free hand and continued, managing to keep any tears at bay.\n\n\"The day Lizzie died, she set me straight. The longing I have felt for her all these years? It would fade in time. That I was worthy of being loved. Loving another.\" I looked the woman across from me deep in her emerald-green eyes. \"I may not be successful, but I promised her I would try. To love you. To let you love me.\"\n\n\"Good.\" Idgie moved to the chair next to me and kissed me softly.\n\nI vowed I would give her the chance she deserved. I owed her that much. I owed it to myself, too.\n\n###\n\nBefore we knew it, three months had passed. It hadn't taken much to slip into a routine with each other. One where we weren't nurse and caregiver to someone we both treasured. Maybe the shift to a deeper level had come naturally because we'd already had a relationship where we'd depended on each other.\n\nHer two new clients were both home-palliative-care patients who only required daytime assistance while their family members were at work. A good change, in my opinion, after doing hospice for so long. Constantly being around dying people had to drain one's spirit after a time. It also meant she could be at home at night and on weekends to decompress both physically and mentally.\n\nI got a part-time job welding. When I wasn't working, I was going through my new house. Deciding what to keep and what to get rid of. Making plans for redecorating down the road. It was both exhilarating and exhausting. And maybe a little scary knowing I had all these options available to me now. I had to keep myself in check that the power didn't trump common sense and practicality.\n\nNo more was the house's atmosphere dark and gloomy. There was laughter and music. Mornings with breakfast together. Evenings lounging on the couch. Nights wrapped in each other's arms. Talking over mundane things like the bills and chores on the weekends. Taking turns cooking for each other. Being 'domesticated,' as Idgie called it. I quite liked it.\n\nBut I kept waiting for her to find some reason to bail on me. I wouldn't have blamed her if she had. I didn't deserve Idgie. Whenever I admitted that to her, she would pat my cheek and say, \"I know.\" Which made me blush and grin.\n\n###\n\nOn a dreary autumn morning, I woke to see Idgie was already bustling around the bedroom in her bra and panties. I shifted to my side to watch her pull her hair up into her standard ponytail, fascinated by the way her body moved. How her muscles and curves put on an effortlessly graceful private dance.\n\n\"Perv,\" she laughed when she noticed I was ogling her. She leaned down and kissed me.\n\n\"Your perv,\" I growled against her lips.\n\nShe grinned wider. \"Damn right.\"\n\n\"Fucking-A.\" I stroked her ass when she stood and turned.\n\n\"Behave!\" She batted my hand away, but she was still grinning.\n\nI hugged the pillow tighter and snuggled under the covers, sighing. \"I'm sorry I overslept. We said we were going to shower together this morning. Give us both a little boost to get through the day.\"\n\n\"I know, sweetie. But you looked so peaceful. We can do that this weekend.\"\n\nI laughed this time, knowing that if we had time for that shower, we'd just end up in bed together again afterwards. Her letting me sleep in was probably a good thing. Neither one of us would have probably made it to work.\n\n\"We'll have plenty of time to get dirty while cleaning each other later.\"\n\n\"You know I love enjoying your body up close and personal in the shower rather than from across the room through the doorway,\" I grinned, licking my lips at the memory of the first time I'd seen her naked.\n\nShe shook her head, pulling on her scrub bottoms. \"If you hadn't barged in on me, I was going to give up that afternoon and leave you to mope around the house on your own.\"\n\nThe moment I tried to retort, she leaned down and kissed me soundly, silencing me.\n\n\"I'm glad you invaded my personal space,\" she whispered, caressing my cheek.",
        "I took advantage of her position and grabbed her around the waist, pulling her onto the bed. Grinning at her startled cry. A moment later, I was on top, tickling her mercilessly.\n\n\"Susie! Stop!\" There were tears in her eyes, but she was laughing while trying to fight me off.\n\nI kept it up for another minute then grabbed her wrists, holding them over her head while straddling her waist. We stared at each other, panting. Licking our lips. Her hair was coming loose and looked seductively messy. She kept darting her eyes down to my naked chest.\n\nI wanted to continue our play, but I noticed the alarm clock. Damn the time. Instead, I tampered down my desire and kissed her softly, cursing under my breath at her whimper.\n\n\"Rain check, baby.\"\n\nShe nodded and closed her eyes for a moment. I imagined her mentally calming herself. When our eyes met again, she kissed me back. Then she took advantage of my distraction and shoved me off of her.\n\n\"Speaking of rain, I have to hurry. Supposed to be thunderstorms today. I want to get to the Craigs' before it gets too bad. Plus, their daughter would have left for work an hour ago. She hates leaving her elderly parents alone for much longer than that.\"\n\nI chuckled and resolved myself to watching her set about fixing her hair and finish getting dressed.\n\n***\n\nIt was a busy Friday at the shop. The rain had been constant since nine. Thunder accented the steady pounding on the tin roof. And the radio station kept cutting into the music to give updates on the local severe alerts.\n\nI mostly tuned it all out. My focus was on finishing the job at hand and punching out at five so I could have a nice dinner with Idgie before we continued what I'd started that morning. Two more hours to go, then I was free to relax for the weekend. Other than the make-up shower time, we had scheduled to have nothing but nookie and cuddling until Monday.\n\nThe best laid plans... That was how the saying went, wasn't it?\n\nI took a bathroom break at three o'clock and used the time to check my Email for information from the high school. Someone was supposed to be sending me details about a project I was collaborating on with the welding students and the city for Christmas. What I saw instead were three missed calls from the same unknown number and a matching number of voicemails.\n\nBefore the first message had even completed playing, I grabbed my keys and hastily told my boss there was a family emergency. Everyone got the F-word while I drove a little erratically across town to the hospital. All for me to be ushered to a waiting room and told to have a seat. That the doctor would talk to me after he was out of surgery.\n\nI finally listened to all of the messages. They were from an elderly sounding man who said his name was Harold Craig. The information ranged from telling me he was the husband of one of Idgie's patients, Betty, and Idgie had been in an accident; to apologizing that he forgot to tell me which hospital she'd been taken to; and then begging in a shaky voice that I call him with an update when I knew anything. Oh, and he still had her phone.\n\nAlone in the waiting room, I felt cold and scared. But I was glad that no one could see or hear me crying. What was the accident? What had happened to Idgie? Why was the surgery taking so long?\n\nThe desire to go call this Mr. Craig grew stronger the longer I waited. He could fill in all of the missing details, which was practically everything. The ER nurse had only said Idgie had come in by ambulance. My guess was, Mr. Craig hadn't come with her in order to stay home with his wife. I had his phone number. But I didn't want to worry him any further until I knew something about Idgie's status, so I tamped down my restlessness. Barely.\n\nI distracted myself by surfing the web on my phone. Mentally critiquing the celebrities as I flipped through outdated magazines. Reading the closed captioning of a black-and-white TV show on the silent, wall-mounted screen. Even standing at the picture window to stare at puddles in the parking lot below.\n\nThe rain eventually stopped. I was watching the sun set behind the front\u2014the parking lot lights come on\u2014when I realized it was after five o'clock. I snorted softly and shook my head. Guess I was officially free for the weekend.\n\nI was turning to go sit down again when I saw a man in blue scrubs at the nurses' station. Dare I hope? I tried to act nonchalant as I took the closest chair. Just because he looked like a doctor didn't mean he had been working on Idgie. Yet the woman he was talking to pointed towards me, and the man headed over. He had a neutral look on his face, giving nothing away about Idgie's condition.\n\nWhy did it seem like he was so far away? It was like that repetitive dream where I couldn't get to Lizzie. Now the doctor couldn't get to me. Fuck.\n\nI grabbed the arms of the chair and silently begged him to hurry. Prayed that he had good news although I'd resigned myself for the worst.\n\nPlease don't let her be gone. Please don't take Idgie from me. I need her.\n\nMy chest hurt when he finally sat beside me and talked about the surgery, what the paramedics had told him about the accident. It took a moment to realize Idgie was alive. She had a long road ahead of her, but she was going to be okay. Then the doctor told me I could see Idgie although she was still groggy from the anesthesia. Even when he stood, I just sat there.\n\nHe said he'd be by later to talk to us both. Asked if I was okay.\n\nI nodded numbly. Then I was alone again with my thoughts. The missing details now filled in.\n\nThe accident. The surgery. The cause and effects of both.\n\nAll of it left my heart thudding in my chest and tears choking my throat.\n\nThe nurse gave me instructions on how to get to Idgie's room. A fog filled my head on the elevator ride upstairs. I stood in the hallway for a few minutes, taking deep breaths and counting to ten\u2014repeatedly. Drying my eyes. I had to pull it together before I saw her. I had to, for both of us.\n\nWith a sincere smile, I quietly opened the door and made my way over to the far hospital bed. My girlfriend had a white sheet and blanket tucked around her, her head turned toward the windows. A dull lamp was on over the bed.\n\n\"Idgie, baby?\"\n\nShe didn't look my way, but the jerking motion under the covers and her soft groans indicated that she had heard me.\n\nI gingerly reached for her right hand where it lay on top of the blanket, mindful of the IV taped to her skin. She didn't respond except for a small whimper, so I just held on loosely, hoping it would provide her some comfort.\n\n\"You don't have to say anything. Just know I'm here, baby. I'm here.\" I used my foot to drag a chair closer and sat beside the bed, gently stroking my thumb across the back of her hand.\n\nAfter about thirty minutes, I heard her crying softly. Her fingers curled around mine. Then she pulled on my hand.\n\nI stood again and leaned over her, smiling when I saw her shiny eyes. \"There's my girl.\"\n\n\"Susie?\" Her bottom lip trembled. \"I'm in the hospital?\"\n\n\"Yes, baby.\" I gently brushed her hair off her forehead with my left hand, avoiding the bandaged area on her left temple. I traced the lines of her face with my eyes. \"But you're going to be okay. We'll get through this together. Do you want some water? Ice?\"\n\nShe licked her lips. \"Ice.\"\n\nI fed her a couple of spoonfuls after propping up the head of the bed a little and then resumed holding her hand and stroking her forehead.\n\n\"What happened?\" She closed her eyes and swallowed noticeably, cringing. \"My head hurts like hell, just like the rest of me.\"\n\n\"Mother Nature unleashed her wrath.\"\n\nShe cracked an eye open. \"Huh?\"\n\nI smiled wryly. \"Sounds like a combination of lightning striking a tree and heavy winds.\"\n\n\"Oh. There were supposed to be storms today, weren't there?\"\n\n\"Yes, baby.\" I gave her some more ice when she kept licking her lips. \"Better?\"\n\n\"Mmm hmm.\" A small smile lit up her face. \"I'm glad you're here.\"\n\n\"Always, Idgie.\"\n\n\"What can you tell me?\"\n\n\"The doctor will be in later to talk to us both.\"\n\nShe turned her head fully toward me and sighed. \"How bad is it? Be honest with me. I can take it.\"\n\nI caressed her cheek, trying to get a handle on my emotions while she held my gaze. Where was that hardened, butch exterior I'd perfected when I needed it now? This woman had become my kryptonite.\n\n\"Susie?\" She weakly squeezed my hand. \"The last I remember, I went to get another tank of oxygen out of my car for Betty. She has COPD. It was raining. And then I woke up in this room.\"\n\nMy voice was strangely calm despite the fear rising up inside at how close it had been as I repeated what the doctor had told me. \"Mr. Craig saw lightning strike a tree before it fell across the driveway on top of your car. The paramedics found you unconscious half-buried under the branches. One of the heavy limbs was pinning your left leg. You also have a slight concussion.\"\n\nIdgie stared somewhere over my shoulder for a moment, apparently processing what I had said. Her eyes flickered back to mine. \"Wait, so is my leg broken?\"\n\nI tried to keep my face neutral. Maybe my lip trembled. Maybe there was something in my eyes. My sudden silence. Or just the intuition of a lover. All I know is, she saw right through me.\n\n\"Susie?\" Her hand gripped mine harder when I didn't answer. She tugged me to her and slowly growled, \"Why can't I move my foot? My toes?\"\n\nI'd never felt so small in my life. Not even when Mrs. Rhodes had berated me because of her wild idea that I wanted to turn Lizzie gay. I managed to choke out the truth, unable to stop the tears this time.\n\n\"You can't move them because they aren't there, Idgie. The limb crushed your bones. They had to amputate your leg at the knee.\"\n\n###\n\nTwice in the past year, I was at the bedside of the one I loved, and she was in critical condition.\n\nIn Lizzie's case, she had been dying physically inside.\n\nIn Idgie's? It was internal, as well, but it was more an emotional process. And just like Lizzie, she grew worse each day. However, Idgie was reluctant to talk about anything and always wore a frown when she wasn't asleep. In the year that I'd known her, I'd never seen her truly miserable.\n\nI let her pout. I understood, to a point. Losing a limb was traumatic, and I hadn't even been the one to lose it. I couldn't imagine the thoughts constantly running through her mind. She had every right to be depressed. But I wished she would at least talk about something, even if it wasn't her injury.\n\nFrustration was only half of what I was feeling. It had been months since I'd considered running. Since she'd shown how she felt about me. I'd opened up to her in my most trying time. I couldn't understand why she couldn't reciprocate now. Even a little.\n\nI took the week off work. Slept at home\u2014or rather tossed and turned without her beside me\u2014and then visited for as long as possible during the day. I ate my meals with her. Watched TV since she was never in the mood to converse. Talked with her doctor about expected physical therapy. The options for a prosthesis. It all sounded promising. The caveat? Idgie had to have the right attitude for any of it to be successful.\n\nWhile I showered Friday morning, I made up my mind that I was going to ask the nurses about having a counselor come in. Idgie had to talk to someone. I was nowhere near qualified to try to understand her psyche. She needed more help in that department than I could give.\n\nBut I was determined that I wasn't going to leave her. I'd stopped running that day I'd arrived to help Lizzie. I just hadn't known it at the time. If Idgie chose to be wheelchair bound the rest of her life, I'd take care of her. It would be hard, but I'd find the strength because I loved her.\n\nI'd told her that so many times this week. I didn't think she'd be instantly optimistic after five days, but at least I wanted her to want to recover. To live her life. So I resolved that if she wasn't going to be positive, I would be for both of us.\n\nWith a new plan in my mind, I held my head up high and headed over to the hospital. Her door opened when I approached. A nurse exited wearing a frown. She wished me luck before heading in the opposite direction. I took a deep breath and entered the lion's den.\n\n\"Good morning, sunshine.\"\n\nIdgie was still on her back, per doctor's orders, with her head turned toward the door. The moment she saw me, though, she looked out the window, growling.\n\n\"Hey, she's making sounds, today. That's improvement over perpetual silence.\"\n\nI removed my jacket and got comfortable in my regular chair by her bedside. Usually, I tried to initiate her in conversation despite it always being one-sided. Stupid things like how the weather was even though she could see outside. Or what should we watch on TV? Choose from the menu for her meals?\n\nToday, I filled out the online menu with what I knew she liked and just pulled up an article on my phone.\n\nAfter thirty minutes, I heard the crinkle of her head moving on the pillow. Felt her eyes on me. I refused to look up and just kept reading. A few minutes later, she huffed out a deep sigh. When I still ignored her, she sighed again.\n\nI expected her to either continue pouting or give up and call my name. When I heard her sniffle and realized she was crying, I felt like a jerk and set my phone aside. \"Idgie? Are you in pain?\"\n\nHer eyes were glossy, her cheeks red and wet.\n\n\"Is it your leg?\" I couldn't help but look at the section of the blanket that dipped below her left knee. The doctor had said Idgie would have phantom pains for quite a while. They could possibly never go away completely. But given time, she'd learn to live with them.\n\nShe just turned her head away from me again.\n\nTo hell with my plan. My heart was wrenching from her stubbornness. From holding it together all week. I loved her, but I would not put up with this.\n\nI walked around the other side of the bed, only for her to turn her head the other way again.\n\n\"For fuck's sake, Idgie! It was a freak accident. I'm sorry you lost your leg. I'm sorry that you're in pain. But giving me the silent treatment? I did not do this to you!\" I raked my fingers through my hair and turned to watch the clouds drifting across the sky. \"You need help! If you won't talk to me, talk to the doctor then. Talk to someone! Just stop acting like a child!\"\n\n\"You're not supposed to take care of me,\" she mumbled.\n\nI spun around. \"What?\"\n\nShe didn't face me, but at least she was talking. \"I'm the caregiver.\"\n\nI stamped down my groan and spoke slowly. \"That's your job, Idgie. But it doesn't define you. And it doesn't mean others can't care for you when you need it. I love you. I'm here for you.\"\n\nShe scoffed.\n\n\"What, you don't believe me?\" I was getting angry now. What more did I have to do to prove it to her?\n\n\"Why would you want to be with a deformed woman like me?\"\n\n\"Are you serious, Idgie?\"\n\n\"You can have any normal woman you want.\"\n\n\"I don't want a normal woman.\" I cringed the moment the words came out. \"That's not what I meant.\"\n\nShe was silent again.\n\n\"Idgie? Please. I don't want another woman, I want you. All of you.\"\n\n\"I'm not whole anymore. Go find someone who can fulfill all your needs.\"\n\n\"What the hell are you talking about? You can still do that. You just have to want to.\"\n\n\"Go away.\"\n\nI knew she was angry and frustrated with her situation. That she didn't mean the words she'd said, either. But it still broke my heart to hear them.\n\nMaybe my presence wasn't helping. That my absence would. At least temporarily. So I grabbed my things and left, just as she wanted.\n\nMy intention was to go home. But my stomach rumbled as I passed a breakfast cart on the way to the elevator. At the ground floor, I followed the signs to the cafeteria rather than the main entrance.\n\nA cup of coffee, a banana, and a breakfast sandwich on my tray, I paid and sat down at a table far away from everyone else. Idgie's attitude was rubbing off on me.\n\n***\n\n\"Where do you want to sit?\" a feminine voice asked.\n\n\"Let's go over there, out of everyone's way.\"\n\nMy ears perked up at the second woman's voice.\n\nA moment later, two women\u2014a brunette carrying a tray of food with a mini-me girl in tow; the other a blonde pushing a baby stroller with another tray balanced on top\u2014came around the post nearest me. The brunette kept walking, urging the little girl to keep up. The blonde? She stopped and gawked at me.\n\nShe took a hesitant step toward me then laughed brightly. \"Susie!\"\n\nI smiled back at her, my legs suddenly shaky when I stood. \"Hi, Jenna.\"\n\nThen, like in the movies, we fell into each other's arms. God, it felt like no one had hugged me in ages when it had only been a week ago. I didn't want to let her go, but I knew it was because I was lonely.\n\nHer soft hair brushed my cheek, making me shiver. I remembered a time when I loved rubbing it between my fingers...feeling it tickle my skin. It was usually when I was teasing her neck. But I smiled wider, knowing the only one I wanted to nuzzle and play with her hair now was upstairs having an adult temper tantrum.\n\n\"It's so good to see you, Susie.\"\n\n\"Likewise, Jenna. I see you worked everything out with Kat?\" I gestured over her shoulder where the brunette had finally stopped and was looking around.\n\n\"Oh yes!\" Jenna waved at her wife and tilted her head when she turned back to me, her smile drooping. \"What about your friend? Did she...\"\n\nI swallowed heavily and nodded. \"Fate played her hand.\"\n\nJenna hugged me tightly. \"I'm so sorry.\"\n\n\"Thank you.\" Lizzie still held a soft spot in my heart\u2014always would\u2014but the pain wasn't as bad now when I thought of her. I had Idgie to thank for that; for helping me move on. Except even that relationship was rocky right now. Still, I smiled softly at the thought of Idgie. \"But there is a silver lining.\"\n\nJenna arched her eyebrows. \"Oh?\"\n\n\"I'll tell you all about it, if you have the time?\"\n\n\"Most definitely.\" Jenna parked the stroller at the end of the table and pulled back a blanket to reveal the cherub face of a dark-haired baby boy. \"This little slugger is Evan. You're getting the rare glimpse of him sleeping. Don't expect it to last.\"\n\n\"He's adorable. I'd say he gets his good looks from you, but I haven't met Kat yet.\"\n\nJenna rolled her eyes and covered up her son again. \"I remember that attempt at a sense of humor.\"\n\nI just grinned and sat back down, gesturing to the empty seat between the stroller and my chair while watching Kat approach. I could definitely see why Jenna had been obsessed with her for well over twenty years.\n\nThe mysterious Kat was a very beguiling woman. She was about Jenna's and my height. Slender yet curvy in the right places. Impressive after having had two children, especially with one still so young. And even with her hair pulled back, it was evident that she had the same enviously shiny hair that fell around her shoulders as Jenna's did, except Kat's was a deep reddish-brown color. She moved with a gracefulness like Idgie, easily managing a purse, child, and lunch for two.\n\nI was happy for Jenna. She deserved the best. As much as I'd hated how I'd left her, I was glad I'd let her go. That she'd been persistent on following her heart.\n\n\"Please, join me,\" I offered once they were close enough.\n\n\"Thank you. We were just trying to keep the kids from bothering anyone,\" Kat said, setting down her tray across from me and pulling out a chair for the little girl. \"Not that they aren't good in public...\"\n\n\"Stop fretting, sweetie,\" Jenna laughed.\n\n\"I take it you two know each other,\" Kat said once she'd set up a juice box for the little girl. \"I'm Kat, Jenna's wife, and this is our daughter, Essie. And that's baby Evan in the stroller.\"\n\n\"I just met your son. It's nice to finally meet you.\" I reached across the table and shook Kat's proffered hand. Then I smiled wider and gave a little wave at Essie who leaned her head against her mother's arm but gave me a shy grin in return. \"I'm Susie.\"",
        "Kat's eyebrows shot up. She looked from her wife, to me, and then back at Jenna. \"Susie as in...\"\n\n\"Yes,\" Jenna and I said at the same time.\n\nThere was an awkward silence before Kat smiled. \"I'm glad I finally have a face to go with a name. I want to thank you, Susie.\"\n\nI blinked. \"Uh, you're welcome. But what did I do?\"\n\n\"You helped Jenna come out of her shell. To embrace her true self. I have a feeling that if it had been anyone else who'd taken her under their wing, she would have had a rougher time coming out.\"\n\n\"Well, she wasn't an easy subject for me.\" I matched her grin. \"She made it clear from the start that she was adamantly in love with you. I just showed her the ropes and set her on the right path.\"\n\n\"Excuse me?\" Jenna huffed. \"I'm sitting right here.\"\n\nI ignored her and added, \"She can be pretty headstrong, too.\"\n\nKat propped her elbow on the table and rested her chin on her fist. \"You don't say?\"\n\nJenna sliced a hand through the space between Kat and I. \"Come on, guys.\"\n\n\"Well, when she gets her mind set on something...\" I shrugged.\n\n\"Oh, I know all about her little crush in high school.\"\n\n\"Little?\"\n\n\"I mean, the lady was downright obsessed with me!\"\n\n\"Still is,\" I stage-whispered with a grin.\n\n\"That's enough!\" Jenna growled.\n\nKat and I both jumped. Essie grabbed Kat's arm with a squeal. Apparently, Mommy Jenna had used that tone before.\n\n\"Shh, it's okay.\" Kat offered her daughter another piece of cut-up chicken nugget to placate her then glared at Jenna. \"We were just teasing.\"\n\n\"So, Susie, you were going to tell me about a silver lining from your friend dying?\" Jenna said, ignoring her wife.\n\n\"Jenna!\" Kat gasped, checking to see if Essie had heard.\n\n\"What? That's what we were talking about before...\" Jenna waved her hand in the air between her wife and me, apparently to explain the way the conversation had gotten derailed.\n\nI sobered up and crossed my arms on the table. Remembering why I was on the East Coast. In the cafeteria of a hospital. Maybe I should take my own advice and talk to someone. Get an outsider's perspective, just as I'd given to Jenna several months ago when we'd run into each at the tavern.\n\nKat reached across and laid her hand on mine. \"Don't feel obligated to say anything, Susie.\"\n\n\"It's ok.\" I absently rubbed at a spot on my arm with my free hand, figuring I should start at the beginning. Give them the Cliff Notes version. \"You know how you've known since high school that Kat was the one for you?\"\n\n\"Mmm hmm,\" Jenna hummed.\n\n\"I got you beat. I had my own Kat since fourth grade.\"\n\nJenna gasped. \"Well, sh\u2014\"\n\n\"Jenna...\" Kat growled.\n\n\"Sorry. Go on, please.\"\n\nI smiled sadly at the two of them. \"We were just really good friends at first. She got leukemia, and they allowed me to keep her company when she was bedridden. She went into remission and we stayed friends. It wasn't until I was eighteen when I realized I liked her as more than that. But like you with Kat, I never told her. Or at least, I never got the chance. Her mom was a very strict Bible thumper who thought she was above the religious law. She put the kibosh to our friendship\u2014accused me of trying to turn her daughter gay\u2014and banished me from ever seeing her again.\"\n\nKat moaned, releasing my hand and lightly rubbing my arm. \"Oh, Susie.\"\n\n\"I ran away. Made a life on my own. Eventually met you, Jenna. But I knew you loved Kat. If there was even the slimmest chance you could be together, I wasn't going to stand in your way. And deep down, I still pined for Lizzie. That was her name.\" I felt a twinge in my chest from saying her name out loud.\n\n\"I understand.\" Jenna took my hand and waited until I lifted my gaze to hers before she squeezed my fingers, smiling at me. \"I don't blame you for anything.\"\n\n\"Thanks, Jenna.\" I took a deep breath and continued, glad that my old girlfriend still held my hand. It provided an anchor of sorts, keeping my emotions grounded. \"Fast forward and Lizzie got in touch with me again last year. She was dying of breast cancer. Her mom had been taking care of her but died. So I came to be her caregiver. And all those old emotions resurfaced after decades of trying to bury them with my past.\"\n\nI watched Kat multitask with listening to me and taking care of her daughter. I could imagine that Lizzie would have been that kind of attentive mother. I knew it had crushed her to find out she couldn't have kids. That her husband didn't want her once he'd discovered that fact. Even if they had been able to have a family, I doubted he would have stayed by her side when she'd gotten sick.\n\n\"Susie?\" Jenna said softly, squeezing my hand.\n\n\"Sorry, my mind wandered. Where was I? Oh yes, taking care of Lizzie. It was only a few weeks after we saw each other, Jenna, when she passed away. I had planned to keep my secret forever. But just before she died, she told me she knew how I really felt about her. That she was sorry she hadn't felt the same way. And she made me promise to give Idgie a chance. Idgie has become my silver lining. Which brings me to why I am\u2014\"\n\n\"I must have missed something,\" Kat interrupted. \"Who's Idgie?\"\n\nI blinked, glancing between the other adults. \"Oh! Did I skip over that?\"\n\n\"Mmm hmm,\" Jenna nodded.\n\nI smiled sheepishly. \"Idgie was Lizzie's hospice nurse. She'd been doing all of the medical tasks when I came to live with Lizzie. I grew very close to her during those last months. She's helped me since Lizzie's passing. Become my everything. Which is why I'm here at the hospital.\"\n\nEssie looked up at me for the first time since we'd started the conversation, her face so innocent. \"You got a shot like baby Evan? Ouch.\"\n\nKat and Jenna both covered their mouths as they dropped open, glancing at me with wide eyes. I could tell they were trying not to laugh in the midst of our serious conversation. I just pressed my lips together for a moment to figure out how to word it appropriately for the child.\n\n\"No, sweetie. I'm here because someone I love had an accident. She's hurt real bad.\"\n\nEssie blinked at me a couple of times. \"Are you sad?\"\n\n\"Yes, I am. Very.\"\n\n\"Did you cry?\"\n\n\"Mmm hmm.\"\n\n\"I cry when I'm sad. Baby Evan cried from the shot. He cries when he's hungry. Or his diaper is stinky.\" Her little nose scrunched up, and her eyes narrowed for a moment. \"Oh, and when he's tired.\"\n\n\"Babies do cry a lot, don't they?\"\n\nEssie nodded then returned to coloring the page Kat must have given her sometime during the synopsis of my love life.\n\n\"Uh, Essie, why don't we get an ice cream?\" Kat said, standing up. She smiled at me and tilted her head at Jenna, mouthing that we should talk.\n\nThe moment we were alone, Jenna turned to face me in her chair and took both of my hands in hers. \"We may not have a lot of time. Essie's picky about her desserts, but she's also five. Short attention span. So spill.\"\n\nI explained the accident. The surgery. My frustrations this past week. Idgie's stubbornness. The fact that I hadn't slept for days. Warm tears were streaking my cheeks by the time I was done.\n\n\"I don't know what to do!\"\n\nJenna pulled me into her arms and held my head to her shoulder, stroking my hair. \"Shh. It'll be okay.\"\n\n\"I don't want to lose her, too!\" I mumbled, trying to get control of my emotional release.\n\n\"Give her time.\"\n\nThe longer she held me, the more I was tempted to close my eyes and drift off. I'd easily done it many times when we were dating.\n\n\"You need to take care of you, Susie. If you aren't in the right frame of mind, you're no good to Idgie.\"\n\nI nodded against her, sighing.\n\n\"Have you eaten?\"\n\n\"Barely.\"\n\nShe released me and ran her hands over my upper arms. Her lips pursed while she looked over my face. \"Go home. Take something for your headache.\"\n\n\"How did you\u2014\"\n\n\"We dated for three months. You always got a headache when you were overwhelmed. Plus, your forehead is creased.\"\n\nI blinked at her. \"You remember that?\"\n\n\"I remember a lot of things.\" She brushed the back of her fingers across my cheek. Her own cheeks were tinting pink. Her voice was softer when she said, \"A lot of things I'm very grateful for now.\"\n\n\"You're welcome,\" I said lowly.\n\n\"Come back this evening after you've rested, Susie. You've been here every day, all day ever since Idgie had her accident. She's in good hands here.\"\n\nWe both stood and hugged. The exhaustion of the morning alone hit me suddenly. I knew once I got home that I was going to crash. Hard.\n\nI sighed and whispered, \"Thank you. For everything.\"\n\n\"Anytime.\" Jenna kissed my cheek. \"Go. Take care of Susie. Idgie will come around. I'm sure of it.\"\n\n###\n\nIt was dark when I woke. Moonlight shone in the window by the dresser, a light breeze rustling the parted curtains. I shivered and realized I'd forgotten to shut the window this morning. I'd been in too much of a hurry to get to the hospital.\n\nThe hospital!\n\nThe clock showed there was still ninety minutes left before visiting hours were over.\n\nI bolted out of bed and scrambled to pull my clothes back on. My headache was gone, but not my heartache. I had to talk to Idgie right away. I prayed she was awake.\n\nTraffic couldn't move fast enough. Nor the elevator up to her room. A nurse glared at me as I rushed past the nurses' station. I cringed and slowed down, apologizing.\n\nLight shown from under the closed door. I knocked and entered without waiting for an answer. The moment I saw Idgie sitting up in bed, my words tumbled out.\n\n\"I love you, Idgie! And I refuse to let you do this on your own. If it takes you months or even years to get that through your head...well, so be it. I'm not going anywhere. I'm done running. So you can give me the silent treatment. You can kick, scream, and tell me to go to hell. But I'm not leaving you.\"\n\nIdgie arched an eyebrow. \"Is that all?\"\n\nI leaned a hand on the footboard of the vacant bed in the room, panting. I mentally ran through everything I'd thought of on the way over then nodded. \"Uh...Yeah. That's it. For now.\"\n\n\"You were right. She's wasn't going to back down,\" Idgie said, glancing further to her right.\n\n\"Huh?\" I took the few short steps toward her bed and staggered back for a second.\n\nJenna sat in a chair with her legs and arms crossed on the other side of the extended privacy curtain between the two beds. Her mouth was set in a stern line.\n\nI glanced between the two women, swallowing hard. \"Uh, hi, Jenna. What are you doing here?\"\n\nBefore Jenna could explain, Idgie said, \"She was telling me how you picked her up in a gay bar and showed her the ways of the dark side. That if you hadn't, she may not have ever had the courage to go after what she really wanted. True love.\"\n\nI just nodded. It was similar to what she had admitted this morning in the cafeteria.\n\n\"That was before she said I needed to get my head out of my ass.\"\n\nJenna held up a finger. \"I said you needed an attitude adjustment.\"\n\n\"My own interpretation,\" Idgie said with a shrug.\n\nJenna seemed to think of that for a second then shrugged as well and nodded in agreement.\n\n\"She was threatening to bring someone here to talk some sense into me when you stormed in.\"\n\nI arched an eyebrow at my ex-girlfriend. \"Who would that be?\"\n\n\"My dad,\" Jenna said. \"He's a retired army colonel. I know he misses ordering troops around. He'd jump at the chance to put you through physical therapy basic training.\"\n\nI tried not to smirk. Mostly because I knew Jenna would actually make good on her threat. She'd mentioned her dad a few times when we were dating. I was afraid of getting on his bad side, and the only person who had scared me up until then was Mrs. Rhodes.\n\n\"The bottom line, ladies,\" Jenna sighed, \"is that you love each other. Susie didn't fall in love with your left leg or any other single body part more than you as a whole, Idgie. She loves what's inside. Your heart. And you still have that. You're still you.\"\n\nIdgie stared at the bed, probably at her missing leg.\n\n\"And she's continually expressed that she isn't going anywhere. She doesn't want to. Please believe me when I say I know she means it. I've never met someone so loyal and considerate of others.\" Jenna gave me the biggest smile. \"What was it you said Lizzie told you to do?\"\n\nI stepped up beside my girlfriend's bed and took her hand. Noticing that her cheeks were wet. \"To give Idgie a chance.\"\n\n\"Now, that's my advice to you, Idgie,\" Jenna said. \"Give Susie a chance.\"\n\n###\n\n=======\n\nEPILOGUE: SIX MONTHS LATER\n\n=======\n\nI was proud of Idgie. It hadn't been easy, but she'd battled physical therapy head-on and come out like a champ on the other side.\n\nMaybe it was the threat of Jenna's ex-military dad coming to oversee her rehab.\n\nOr Jenna's final missive that day in the hospital. Every day we saw her since, actually, because the four of us\u2014Jenna, Kat, Idgie, and I\u2014got together regularly. Sometimes for meals...sometimes just to talk.\n\nBut I honestly believe Idgie had overcome all of her obstacles because she'd finally taken to heart that I would be with her every step of the way, no matter what.\n\n***\n\nI woke up to the heavenly feeling of Idgie's lips on mine. Her hand between my legs. I was just falling into the rapture of her caresses when the alarm clock went off.\n\n\"Fuck. We don't have time right now, love,\" I groaned, struggling between pulling her to me and rolling out of bed.\n\nShe made the decision, rolling off me to her side of the bed and leaning over to attach her prosthesis. \"Do you want to shower together?\"\n\n\"You know us. We're already on a tight schedule and have to make a stop on the way.\"\n\n\"Right. Separate showers.\" She met me on my side of the bed and cupped the back of my head, kissing me hard. \"But I want a raincheck. You're all mine tomorrow.\"\n\n\"Deal,\" I mumbled, sliding my hands over her ass.\n\nShe pressed against me and nipped my bottom lip. \"We could be fast.\"\n\nSo fucking tempting. But I groaned again and released her. \"Go first. I'll get the coffee on.\"\n\n***\n\nI leaned my head on Idgie's shoulder in the cemetery, clutching the black-and-silver pendant that rested against my chest. She tightened her arm around me and kissed the top of my head.\n\nLizzie had said not to bury her...not even her ashes. I'd tried to honor her wishes. I just wanted somewhere to be able to visit her. Putting on the necklace each morning had lost its significance. Become part of my natural routine. Automatic, like wearing my watch. My special friend deserved more than that.\n\nI felt a sense of peace standing at her final resting place now. I'd chosen a simple grave marker and had it installed under a flowering tree on a hill too small to bury anyone. When I'd explained what I wanted to the cemetery owners, they'd been happy to oblige.\n\n\"I think it suits her perfectly, Susie.\"\n\nI nodded, blinking at the tears blurring my vision. My neck felt strangely bare when I removed the chain. I palmed the piece of jewelry for a moment before wrapping the tiny urn of Lizzie's ashes in her Harley scarf and pocketing the bundle. I'd put them both somewhere safe at home. Because it was time to let go of the past.\n\n\"She understands,\" Idgie said softly, resting her head against mine.\n\n\"I know.\" I smiled at the metal plate with the embossed letters of Lizzie's name and the dates of her time with us. \"I took your advice, love. I gave Idgie a chance.\"\n\nIdgie clutched my fingers in hers and lifted our joined hands. The sun glinted off the matching narrow band of diamonds on our left ring fingers. \"And I gave Susie a chance.\"\n\nI kissed my wife, sighing happily. \"We miss you, Lizzie. Wish you could have been here to celebrate, but we know you were there in spirit. That you were dancing right along with us.\"\n\n\"We have one final wish to fulfill for you,\" Idgie said softly. \"You're going to take a trip.\"\n\n\"Do you remember me telling you about Jenna? She married her high school crush, Kat. They own a villa in Tuscany and lent us the keys for our honeymoon.\" I wiped the back of my hand at my eyes. \"We'll be able to scatter your ashes over the countryside, just like you wanted.\"\n\nA warm breeze picked up for a moment and tousled Idgie's hair, rustling the leaves on the tree so they made a clapping sound. We both laughed.\n\n\"Thank you, Lizzie, for the best advice anyone's ever given us,\" I whispered, kissing my fingertips and squatting down to press them on the grave marker.\n\nIdgie looped her arm through mine on our way back to the car. \"Are you okay?\"\n\n\"Yep.\" I glanced over the roof to see the tree branches shaking again, as though waving goodbye. \"Until next time, Lizzie.\"\n\n\"Susie? We have a flight to catch.\"\n\nI slid behind the wheel and waggled my eyebrows at Idgie. \"Next stop, Tuscany!\"\n\n~ H"
    ],
    "authorname": "secretsxywriter",
    "tags": [
        "butch",
        "femme",
        "lesbian sex",
        "lesbian"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/i-kissed-a-girl-ch-12"
}