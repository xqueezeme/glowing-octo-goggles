{
    "title": "My Little Ventrue Pt. 08 Ch. 06",
    "pages": [
        "~~Eric~~\n\nJack, Clara, and S\u00e1ndor, had taken a very strange route. First, they'd left the mansion, and headed into North Side. Then their trail ended inside an old, abandoned hotel. Not a hotel, but some sort of motel? Hard to tell. According to Jessy, the city went through some gold rushes and job rushes during development at the beginning of the twentieth century, and a lot of people moved to the city for seasonal work, building the subway and whatnot. So some companies set up temporary housing.\n\nInside the building, it was obviously very old, and Eric recognized the look of its hallways and floor. It wasn't far removed from the hallways in S\u00e1ndor's castle, especially with the lights off. Plus, it was abandoned, unkempt, dirty, and a bit damp, again, all like the hallways of his castle. If Begotten needed to enter their lairs from places that looked like their lairs, this would probably do.\n\nFiona and Athalia looked at each other, and then to the rest of them.\n\n\"S\u00e1ndor opened a pathway here, like you've probably put together already,\" Athalia said. \"I can see where this path opened up, and can follow it. But, we'll be breaking into his lair.\"\n\n\"That's bad?\" Jessy said.\n\nAthalia nodded. \"Imagine someone breaking into your sleeping den, vampire. Whether you were asleep in it or not, it would piss you off, wouldn't it? And I--\"\n\n\"We don't have a choice,\" Damien said. \"If Jack and Clara have not contacted their respective groups, then something's wrong. And after everything that's happened, I'm not taking chances.\"\n\n\"So, you vampires take full responsibility?\"\n\n\"Yeap,\" Jessy said with a small hand wave. \"Now pop her open.\"\n\nFrom there, the group of them entered S\u00e1ndor's lair. Damien, Fiona, Noah, and Athalia had seen it, and Eric and Jessy too, but for Caleb, it was brand new. Stepping out of darkness and into a castle's hallway, lit only by strange gargoyle braziers, was enough to shock anyone, even veteran Uratha who'd done some insane shit in their lives.\n\nFiona followed them into the hall, and Caleb whistled as he looked her up and down. She was scary, sure, with giant black horns growing out of her bald head, along with horns growing out and curling back where her eyes should have been. But the horns on her head looked kinda beautiful, in a fancy crown kinda way, and the horns coming out of her eyes almost looked like a black veil. Her spider legs that stuck out from her back were smooth, enormous, and sharp. And, the spidersilk dress she wore was partly see-through, and showed off a huge rack and inhumanly tiny waist.\n\nShe was some dude's ultimate monster girl kink. But, he was hardly one to judge. He was dating a girl with a monster guy kink.\n\nIf Fiona and him had actually tried a relationship, would monster guy have fucked monster girl? Strange thought. Stranger, because even thinking about him and Fiona didn't make sense in his brain. He was with Jessy now, and she fit him like a glove. Fiona did not.\n\nBefore Damien had a chance to say anything to the staring werewolf, Caleb jumped back at the sight of Athalia. Athalia was fucking freaky as shit, and Eric stepped back as well. He knew what she looked like when transformed, but nothing could prepare him for the sight of her obsidian skeleton body, its skeleton wings, its size, or the fact it was missing everything below the spine.\n\n\"Holy shit,\" Caleb whispered.\n\nFiona, or Vrall or whatever, chuckled, and Athalia hissed, and moved on.\n\nThey picked up the trail, and were soon standing on a narrow cliff path, a thousand miles up, castle behind them perched precariously on the cliff, and a village down the path onto the mountain. He didn't need to ask, it was obvious. Haunted. The village was haunted.\n\nAs they walked past the old and decrepit houses, obviously built hundreds of years ago, eyes watched them from the windows. There wasn't any light in the houses, and it was nighttime, but the eyes were still visible. Glowing, but not really glowing, they were simply visible, and disturbing.\n\n\"If S\u00e1ndor had wanted to,\" Athalia said, \"he could have his Horror attack us, or his lair.\"\n\n\"He's in control of his Horror, while not here?\" Jessy said.\n\n\"Not true control,\" Vrall said, Scott accent completely gone, and replaced with something Eric guessed came from South America. \"But, guide, yes.\"\n\nAthalia hissed at the spider woman. \"Enough sharing of secrets. They only need to know that the S\u00e1ndor has told his lair to leave us be, preemptively at that.\"\n\n\"Sounds like an olive branch, sorta,\" Caleb said.\n\nFrom there, they entered the haunted forest, found a giant creepy tree, went into it, and entered another chamber of S\u00e1ndor's lair. A haunted hospital. He was surprised, but he shouldn't have been. They were going through the chambers of a nightmare monster's lair. They were going through nightmares so strong they left a permanent imprint on... wherever it was dream monsters lived. Of course they'd run into a lot of haunted shit. Fake haunted, since it was nightmare stuff, not real ghosts, but since nightmares were apparently real, they didn't seem so fake.\n\nThankfully there was a scent trail to follow, and they followed it along the hospital hall, until it stopped. Not the hall, the trail, it just stopped. They didn't go through any door, but the hallway continued on, with no scent trail.\n\n\"Here,\" Fiona said. \"It's... it's another one of the tears.\"\n\nTears? Jessy and Eric looked at each other, shrugged, and looked to everyone else. Besides the two of them, everyone else looked very anxious about the mention of tears.\n\nThe skeleton creature gestured to the empty space. \"If the trail ends here, then they went through the tear and into whatever realm it cut into.\"\n\n\"Can you tell?\" Damien asked.\n\n\"Not until I open it and see where it goes. It's... covered, in some kind of... webbing?\" She hissed louder, alien rasp grating on Eric's brain.\n\nNoah and Caleb both took a step back, and rumbled in their throats. For the life of him, Eric could not resist the reflex to do the same, and not because of Athalia. Something instinctual told him to be fucking wary of webbing in this context.\n\n\"Do it,\" Noah said.\n\nThe monster nodded her giant skull, set her weight onto one huge hand of claws, pointed the other at the hallway, and ripped it to the side. Ripped, because despite it being nothing but open air, something gave her claws resistance. Snap, snap, a vibration struck Eric's insides, inaudible, without touch, but it was there, echoing in his mind. It was like someone snapping guitar strings; stronger, like steel strings used on big bridges.\n\nShe swiped again, and again, and all three werewolves cringed as they felt whatever was happening. Fiona noticed, but didn't seem disturbed. The vampires seemed completely unaware. It did look like Athalia was slashing at the air and nothing but, and the snapping web must have not existed in a way the vampires could sense it. They were creatures of blood, he supposed. This webbing shit was not.\n\nThe vampires stepped back when the air split apart, and a pathway revealed itself, lined in gold and marked with dots of white. Along its edges, white lightning streaked across, some of it moving like a snake through an endless ether of oblivion.\n\n\"The Gauntlet,\" Noah said. \"But I... I don't recognize the smell from the other side.\"\n\nAfter a moment's silence, Caleb let out a quiet snarl and stepped closer to the hole floating in the air. \"I hear something. Clicking sounds...\"\n\nWhile Noah and Caleb used their werewolf senses, spirit or otherwise, Eric came in closer, stood between them, and stared through the hole into the distance. It was dark in there, with some sort of gray fog blocking their vision, but through it, a green glow moved. Tiny, almost invisible, but something green drifted along, far in the distance. And another, and another. Almost like green fireflies, the strange green lights moved with uniform motion. If they'd been red, he'd have imagined an army of history, holding torches and marching through a swampland or something, with the fog to hide their approach.\n\n\"We going in?\" Jessy said.\n\nNoah nodded. \"If the azlu is in there, wherever there is, we need to know. And we need to get Clara.\"\n\n\"We need to find Jack,\" Damien said.\n\n\"We need to find S\u00e1ndor,\" Athalia said.\n\nVrall nodded, crown of horns nodding with her. \"Then I'll go first.\" She raised a hand -- too few fingers on that hand of claws -- before Damien could say anything. She gave him the hand, he took it, and then she walked toward toward the tear, her spider legs carrying her while her human-ish legs dangled an inch above the floor. A thick white rope connected her hand to Damien's.\n\nThe man looked down at his hand, surprised, but he caught on quick, and reached out with his other hand for a door frame.\n\nEveryone froze when Athalia took his hand in her grasp. Her hand was big enough to circle his whole damn body, making the sight of clutching his hand, er, arm, almost comical. Damien stared at her, eyes wide for a moment, obviously ready to defend himself if Athalia attacked; not that he could do much with each hand being pulled in opposite directions by a couple of dream monsters, but still.\n\nAthalia snorted, angry, and with rough claws that had Damien's eyes wide, the huge monster took the thread from Damien's hand, and ripped it free. After wrapping it around her enormous right hand, she slammed her free hand into the hallway behind them. Her claws sank into the floor. Everyone nodded as they came to understand. Of course she'd make the better anchor than Damien. And, if shit went to hell, Athalia could yank them out with some serious brute strength.\n\nFiona chuckled, shrugged an apology to Damien, and crawled through the hole with her spider legs. The sharp points pressed against the air where the gold of the Gauntlet showed itself, and Fiona stepped along them. Noah and Caleb both let out tiny grumbles, and Eric forced a rising smirk off his face. They didn't like the Begotten, and how they had the freedom to go wherever the fuck they wanted, be that Gurihal or the Hisil or whatever the old word was for the Dream world. But in a time like this, they needed them. Forced cooperation.\n\nHonestly, Eric didn't care if they didn't like each other. He just wanted to chill in Dolareido, hang with his girlfriend, and defend his territory. If he had to piss a circle around the damn city so people could calm down, he'd do it.\n\nFiona disappeared through the circle for only a moment, and then appeared again a moment later. \"The Gauntlet is very thin here. Those spiders have been repairing it. Come, it is a long way down.\"\n\n\"Spiders?\" Caleb said, coming over to the strange hole in the air. \"Multiple?\"\n\n\"Yes. Is that strange?\"\n\n\"Very. Hosts devour each other, become strong, take over a human mind, and mutate into giant killing machines. Working together is pretty damn strange. Could be just a first step, before a strong one starts to eat the others?\" he asked, looking over his shoulder to Noah.\n\n\"Science later, ya fucking nerds. Let's go find our people now.\" Jessy pushed past the wolves, grabbed onto the thick rope, and climbed through the tear.\n\nNoah and Caleb glanced back at him, and he smiled and shrugged. No point in trying to change Jessy. Better to roll with her.\n\n\"Can your thread handle the weight?\" Noah said.\n\n\"This many people? Only if Athalia does not need to suddenly pull us to safety.\"\n\n\"She might,\" Damien said. \"Let's do two groups. Fiona, Jessy and Noah go first. Then Eric, Caleb, and me.\"\n\n\"And Athalia?\" Noah said.\n\n\"Athalia can fly.\"\n\nAfter a few minutes, the thread wiggled like a whip a few times, and Athalia gestured for the rest of them. The thread didn't inspire confidence, but silk was a damn strong material for its weight. Eric took it, looked up at the black skeleton monster holding the end, and sighed. If it took a few minutes for the others to reach the bottom, then a fall would kill them, or at least kill Eric and Caleb. All Athalia had to do was let go, and two werewolves would probably die. Scary thought.\n\nCrawling through the hole felt strange. They weren't actually going through Gauntlet the way Uratha typically did, by literally passing through it. This was more like one of those glass underwater tunnels in large aquarium parks; they were bypassing the water, not swimming through it. He was surrounded by air, not the strange material of the Gauntlet, and when he reached out to his sides, he touched the strange, undefinable essence of the barrier that separated humans from spirits.\n\nHow the fuck did something actually tear up the fucking Gauntlet? And why wasn't anyone surprised? Anyone except him and Jessy.\n\nThe silk thread took him out into a grand abyss, and he sucked in a hard breath as he realized he couldn't see the ground. Fog, so much fog. He lowered himself along the sticky thread as fast as he reasonably could, but there was no getting around that he was a pile of meat high enough in the air that a fall would break a lot of limbs, and potentially kill him; that was assuming Fiona was correct about the distance to the bottom, too.\n\nAs he went down, he stared out into the fog, and shivered as the thousands of green glowing dots moved along, slow, and creepy as all fuck. Something about them really screamed eerie horror vibes, and he found himself looking down and around for more of the green lights. If there were any underneath him, he would not like that. Very much not like that. But there weren't. It was nothing but a smooth descent through fog, and eventually, onto rock.\n\nDamien, last off the wire, gave it a few hard jerks, and looked around at the strange fog, the smooth, flowing rock base underneath them, the equally smooth, dark rock of the wall beside them, and the distant green, drifting lights. It was a gigantic cavern, the size of a fucking city.\n\n\"Spirits?\" Damien said, pointing to the drifting green.\n\nThe three werewolves all shook their head.\n\n\"I don't sense spirits,\" Noah said. \"I do smell ephemera, but... not spirits.\"\n\n\"What else smells like ephemera?\" Fiona asked. It was Fiona again, the redhead, the girl he'd dated for like a day, jeans and brown leather jacket, no spider legs or horns anywhere. Which scared him shitless for a second. How the fuck were they going to get back out? But if the dream monsters didn't seem worried, they could probably do something, even when not in their dream world.\n\nNoah shrugged. \"Not sure. But we're not in the Hisil.\"\n\nHe was right. Being in the Hisil was like the difference between being in the air or in water. Every nerve in the body would be telling you and warning you of the familiar, dangerous environment.\n\nEveryone but Fiona jumped away when Athalia landed. Enormous skeleton wings, silhouettes of black shadow, jutted from her very human back, and disappeared seconds later as the woman got up from a foot and knee.\n\n\"Can you smell our companions?\" she said. Her first steps into a new dimension and all she was concerned with was the mission. In any other circumstance he'd want to take things slow, but the atmosphere around them was oppressive, and cold. He wanted out.\n\n\"Yeah,\" Caleb said, \"and... lots of blood. This way.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Damien~~\n\nIt took them several hours to piece together what happened. There'd been a chase and fight with the azlu, and judging from the blood they found, it'd been a fully formed azlu host. Damien could still remember the feel of it stabbing him through his guts, and leaving behind a rather massive hole.\n\nJack and company had apparently chased the azlu off, and the three of them had come back to the tear. Then, they'd left again, probably after realizing they couldn't get out. Fiona and Athalia insisted that was strange, since S\u00e1ndor was with them; he could fly, tear open a hole through the tear if it was repaired, or make a new pathway. But the Uratha insisted he'd lost a lot of blood, from the smell of it.\n\nDamien and the crew followed the trail, through the gloom and fog of their new environment, and as the uncomfortable silence of the strange place settled upon them, they all grew quiet to match. The werewolves became wolves, as did Jessy, and the sounds of their feet disappeared. Fiona and Athalia, both monsters of darkness, found it easy enough to be quiet, and Damien risked a peek at them with Auspex to see what they were doing. The two monsters were pulling something from within, something his eyes didn't recognize, that coated them in invisible blackness. A Horror's version of the vampire's Cloak of Night, he supposed.\n\nDamien did his best to wrap them in his Cloak, but the environment did not seem to accept his efforts well. It took more vitae than usual to encompass them, as if the fog around them was a heavy blanket they had to drag with them. But, with some concentration, he was confident his efforts to mask at least their most obvious sounds worked, along with helping them blend into the fog a bit better.\n\nAfter a couple hours of careful but expedient prowling through the fog, with the three werewolves in front leading them, noses to the ground, they stopped. Four wolves sat up, pointed their ears forward, and listened. Message understood: noises up ahead. They resumed their prowling, slower, quieter, and as they pushed ahead, the sound of banging metal became clear.\n\nDamien squinted as the fog thinned. Lampposts? They came closer, and everyone looked confused as it became clear that yes, those weak, flickering lights overhead were old lampposts. Then, train tracks, and dirt. Closer, they found actual train carriages and cargo crates. Closer, they found knocked over towers of metal, some large hammers and metal spikes scattered around, and a distant warehouse, rusted and broken. And with every minute they grew closer, the sound of metal banging against metal grew louder, as did the alien clicks and shrieks of an azlu, and the roars of a man.\n\n\"Fuck you!\" a voice yelled out in the dark. Banging metal followed, loud, heavy, and with more than enough impact for Damien to feel it. Closer, it only got worse, with more metal crashing against other metal, and vibrations so powerful they had Damien's brain rattling in his skull. It was like an intermittent earthquake that came in pulses spurred by the violence of monsters.\n\nHe knew that voice.\n\n\"Hide!\" another voice whispered. They all whipped their heads toward the sound, and everyone froze as the met the empty eyes of a ghost. For a moment, Damien thought it was Mary, but a second to look at her showed it was another woman, another translucent creature that leaked mist. She was underneath a train, hiding where its wheels sat on the tracks.\n\nWhile everyone stared at her, Damien crouched low and crept over to her.\n\nThe hunt for Jack and the others had taken them through two nightmare chambers, through a tear, and into a world of darkness and mist. Of course there'd be ghosts. He'd seen caverns like this in many paintings, those that tried to capture the misery and sadness of an Underworld roaming with the dead. There weren't any train yards in those paintings, but still, it didn't take a genius to put it together when they found an eyeless, see-through woman.\n\n\"Who are you?\"\n\n\"Sabrina!\"\n\nThe name poked at a memory, but he last it pass.\n\n\"Have you seen our friends? They--\"\n\n\"Yes, yes I have! They're around here somewhere. Couldn't have gotten far.\"\n\nA little voice in his head warned him this could be a trap. Who knew what sort of horrible things a ghost lurking under a train, in some sort of Underworld, might say or do to them?\n\n\"Do you know their names? I--\"\n\n\"Clara, and S\u00e1ndor.\" She nodded, empty eyes wide as if in a panic. \"Jack's fighting the spider monster. The other two are hiding and sneaking away.\"",
        "Clara and S\u00e1ndor sneaking away? It was true then, they were injured, as the Uratha said they were. Damien pointed at the four wolves, pointed to his nose, and gestured out to the rest of the train yard. Then he pointed at himself, and to the noise. Noah and Caleb nodded without so much as a moment's hesitation, and the two wolves headed off together. Eric and Jessy took a moment to figure it out, but once they did, they took off in their own direction together.\n\nLook for Clara and S\u00e1ndor, look for an opportunity to engage, and fight. And Damien was going in first. They all knew who was fighting the azlu, and they weren't going to leave him to do it alone.\n\nMaybe they should have. Damien had seen first hand what the curse could do, twice. He wasn't anxious for a third time.\n\nDamien withdrew his sword, and reached into his coat for his pistol. And put it back. A pistol wasn't going to do anything against an azlu, and the sheriff had made it clear how much better a sword was to a Kindred in most circumstances. Time for a little payback for the gut stab?\n\nHe gripped the hilt with both hands, and looked behind him at Fiona and Athalia.\n\n\"Fiona, can you be ready to ensnare the monster?\"\n\n\"Aye!\" she whispered, and even the whisper sounded enthusiastic. He loved her joviality, and he prayed to God it didn't get her killed.\n\n\"And, if this one breaks apart into small spiders when it dies--\"\n\n\"Ah will catch them, too!\"\n\n\"Athalia, can you provide support?\"\n\nShe frowned at him, a mix of hate and surprise in her eyes. \"You trust me to help you?\"\n\n\"I trust you to help because S\u00e1ndor is out here somewhere, and if he dies, your mission is lost.\"\n\nShe grit her teeth loud enough he heard it, but after a few seconds consideration, nodded. \"I will attack from the shadows when you create an opening.\"\n\nNodding, he turned toward the ghost still hiding under the train. \"You, uh...\"\n\n\"It hurt me already! I'm not fighting it again.\"\n\nWell, he could understand that. Not like most people would survive being hurt by this monster. Then again, she was a ghost. The monster could hurt ghosts? It was something from the Uratha side of the paranormal, so that sorta made sense. Spirits, ghosts, different but the same?\n\n\"Alright, we'll take care of it. Thank you for the information.\"\n\nThe ghost raised an eyebrow at him like he was crazy, but he paid her no mind. Behind the train she hid under, beyond a pile of metal, rust, bent steel, and thousands of scattered bricks, Jack was fighting the azlu. Even now, the boy screamed and roared; his young voice didn't match the psychotic rage in it, or the violence he was capable of. But, when Damien jumped onto the train cart, and looked out over the train graveyard, he knew it was Jack.\n\nNot Jack. It was the curse.\n\nJack and the enormous spider creature circled each other, and where Damien was sure there'd once been cargo crates, train carriages, towers, fences, steel beams, and lampposts, was only destruction. Piles of debris circled the two monsters, much of it broken and dented, with shredded remains under their feet. As if a bomb of chaos had exploded, the two fought in a crater of mayhem, and Damien gulped as he scanned the battleground.\n\nJack's suit was mostly gone, except for some tattered pants and his shoes. No jacket, no shirt, no vest holster. A couple glints buried in the insanity lying about suggested where the boy's weapons might be, probably used and either empty or damaged, or useless. The azlu that nearly killed Damien had been extremely resilient to anything but the most extreme damage, and fire. No one had fire, which all the vampires were surely thankful for, but it was the tool the werewolves had used last time to make sure the other azlu died and died completely. Jack had killed the second one with a giant metal rebar, straight down through the skull and into its body, only for it to supposedly break into a bunch of small spiders and escape.\n\nThis time, they'd be ready for it.\n\nBlood coated Jack's skin, dark blood, darker than human. It swirled, coursing up and down his body, and tiny whips of the heavy liquid cracked the air as it did. The boy's eyes were gone, or maybe hidden, but all Damien could see in his eye sockets was more vampire blood, swirling, leaking but never leaving his body. Gashes and holes decorated his skin and muscles, some small, some large, and blood flowed from them, as if veins had become external. The monster must have punctured him with its scythe arms, breaking through the barrier Jack's curse protected him with. What damage the spider managed to accomplish wasn't enough to stop him though. The curse could probably be left with nothing more than a skeleton, and still survive. Immortal, as long as the curse protected him with its unending tides of damned blood.\n\nImmortal, but thoroughly damaged. The spider must have hit him thirty or forty times, and the only thing keeping Jack from literally collapsing into a pile of shredded limbs, was the blood surging through him. The azlu wasn't doing much better. Several of its spider legs were missing, and it struggled to get its huge body off the dirt and rock beneath it. More obvious, was that it was missing one of its arms. Those arms were massive, each ending in a giant bone scythe, and more than capable of splitting a car in half. Jack had managed to rip one off?\n\nNo, not rip. Not even he was that strong, to de-arm a creature of such insane strength. However, beside the spider's removed arm, coils of barbed wire sat, ripped free of one of the metal and wood fences nearby. It was coated in flesh and blood, and broken into two long pieces.\n\nJack must have sawed through its arm with the barbed wire.\n\nThe curse was pushing his Ventrue blood far further than it should have been able to reach, when it came to strength. When Damien had described Jack's assault on S\u00e1ndor's Horror, Maria had been quiet and contemplative, but he'd managed to detect a hint of fear on her. According to Maria, only ancient elders with many centuries to their name could push their bodies so deep into Disciplines that did not come naturally to them. For a Ventrue to be fighting a giant gargoyle in a melee brawl was an extremely impressive feat, something Maria doubted Viktor would be capable of.\n\n\"Come on, bring it!\" Jack yelled, and he kicked a rock at the spider. It bounced off harmlessly. \"Fucking animal, weak, pathetic, mindless. Come on!\" The boy circled the huge creature, but his feet were heavy, and he nearly tripped several times as he failed to lift his shoes higher than the debris. He didn't fall, but it wouldn't be long before he did.\n\nDamien managed to get a peek at his friend's palms. They were shredded.\n\nThe alien creature charged. Like Jack, it stumbled, five spider legs struggling to manage its weight, but only thirty feet separated the two combatants, not far enough to be a serious hindrance to the enormous monster.\n\n\"Fuck you! Fucking die!\" Jack couldn't get out of the way in time, but the spider's charge was a mess. Its attempts to hit him with its scythe arm failed, and it fell forward. It bowled over Jack, crashed into him, and fell onto its stomach at the same time, with Jack literally underneath it.\n\nJack screamed and roared fury, spat venom, and swung his fists into where the human and spider melded at the chest and waist. The spider shrieked in pain and pushed off the ground in an attempt to try again, but Jack dove at one of the spider's legs. Like some sort of crazed, hungry animal, Jack got his bloody hands on one of the legs, and bit into it. The monster's shrieks rose an octave, and Damien winced as its inhuman cry deafened him, and as the monster's blood gushed out onto the ground. Jack's bite had been vicious, and had ripped a giant chunk of the relatively thin spider leg out. A moment later, Jack ripped the leg in half, and the monster screamed its agony.\n\nBehind him, Fiona and Athalia got into position, Fiona close, Athalia between his train cart and a nearby cargo crate. He couldn't see Athalia's face, but Fiona stared at the mayhem like watching a horror movie. It was not a pretty sight. Damien forced himself to look back to his friend, at his torn and ravaged body, at the dark blood flowing up and down his flesh and through it like it was alive, and he grit his teeth.\n\nFirst, the azlu, then they could deal with Jack.\n\nHe looked around for signs of the others. One wolf sat upon a leaning tower of metal bars, and from his posture, Damien knew the other wolves were hidden in the darkness and mist. Hopefully they were waiting for a signal.\n\n\"Fiona, be ready to catch any spiders that escape.\"\n\n\"Aye.\"\n\nHe nodded, tightened his grip on his sword, and poured every ounce of vitae he had into his Cloak, and speed. It was like that time he'd landed his sword on the Prince, and had cut off one of her legs, and one of her arms. Even a mighty beast could be felled by a single swing of the sword, if it could be done undetected. And the spider was very distracted. He just had to be careful to not get hit by that scythe arm on the entry.\n\nThe monster raised his arm, ready to strike at Jack again. At this point, Damien doubted the strike would kill Jack. Hell, Jack was likely to win this fight if it continued, but the more the kid drained his blood, the more problematic dealing with him might be. It was as good an opening as any.\n\nDamien leapt from the train, landed maybe a couple hundred feet away from the monster, and closed the distance in a single moment. The spider noticed him somehow, despite the crazed Jack biting and ripping one of his long spider legs apart. But it noticed too late, and Damien jumped up at it from Jack's side, sword up and out.\n\nThe spider monster's human, mutated head went flying.\n\nNot waiting to find out if the creature could live through beheading, Damien landed on the monster's fat, hairy arachnid back, turned, and sliced his sword down straight onto its neck with both hands. There was clear, obvious resistance from the monster's flesh, far more than a human's body would give, but Damien put every bit of power he could into the strike. The sword would have broken, but swords for Kindred were built to withstand brutal amounts of punishment.\n\nHis blade pushed down through the flesh, down between its shoulders, shoulder blades, down beside its spine, and into its guts. Cutting off its head hadn't stopped it from attempting to swipe its scythe arm at Jack, but it had missed. And, despite losing its head, it tried to swing again. But once Damien pushed his sword down further, and further, cutting through the human half's guts and then into where it joined the spider, the creature finally stopped. It fell over onto its side, and Damien jumped free to land beside Jack.\n\n\"The fuck?\" Jack said, releasing his bite. He turned to face Damien, anger in his blood-filled eyes, and Damien took a step back as he lowered his sword. Lowered, not sheathed.\n\nThe flesh of the monster beside them churned, tore, and broke apart. The human, ultimately a small piece of the creature's body, fell off and away, while the spider half shimmered and dissolved before their eyes. Jack didn't seem to care, eyes still locked on him, but Damien raised a hand. It was enough of a signal to draw everyone.\n\nThe wolves arrived first, and Damien took a step back from them as well to give them room. They weren't in their normal wolf forms anymore, they were in much larger wolf bodies, so large Damien and Jack both had to step aside to not get knocked over, as the titanic creatures jumped upon the scattering spiders.\n\n\"Jack, we must--\"\n\n\"I had it! You fucking took my--\"\n\n\"Jack! Focus! We have to kill the azlu before this situation happens again!\"\n\n\"Aye!\" Fiona said. She ran over to them, excited smile on her face as she made her way through the mist, the silhouette of her spider legs visible like shadows against fog. She pointed them and her hands out at the spreading swarm of large spiders, and began to unleash her webbing.\n\nMore than Fiona joined in. Jessy emerged from the mist in her wolf body, and transformed. Gangrel transformations were a lot more disgusting than Uratha transformations, with twisting flesh and bubbling muscle contorting like rubber stretched over bone. She became partly human, partly something else, something grotesque that ran on all fours, and was covered in spikes. She fell upon the spiders, and started tearing.\n\nAthalia did as well, though she stayed well clear of Jack as she approached. The scattered spiders needed to be slain, and she knew it, but that didn't mean she had to be near Jack as she got to work. The titanic silhouette of her Horror reached out, and slashed out with its bone claws, tearing spiders to bits.\n\nSabrina must have realized what was happening, because the crazy ghost let out a maniacal cackle, and dove upon the spiders, slashing away with a small blade. Ok, mental note, be careful with Sabrina.\n\nJack continued to glare at him, and Damien took another step back. The boy wasn't stupid. He knew how important it was they take care of these vermin before they evolved into another one of the giant, deadly monsters. Jack knew, but the curse seemed more interested in a satisfying fight, or rather, how Damien had taken its conclusion from him.\n\n\"I fucking had it, Damien.\"\n\n\"Maybe. But... look at you.\"\n\n\"The fuck are you talking about?\" Jack took another step toward him, and again, Damien took a step back.\n\nDamien looked around for something reflective. No such luck. The train graveyard was enormous, but everything in it was broken, rusted, stained and worn. So with heavy sigh and heavier concern, he lifted his sword slowly, and pointed the flat side at the kid standing in front of him.\n\nKid. It was hard to think of Jack as a kid anymore, not after everything that'd happened to him, and everything he'd done. But more so, thinking of him as a kid just wasn't possible with the curse in control. The boy looked like a monstrosity, a mythic entity, a phantasm of blood, with dozens of enormous cuts along his near naked body flowing with tendrils of tainted crimson. The blood pulsed, resisted gravity, and flowed up and down his body like slithering snakes; maybe more like slithering millipedes, burrowing into and out of the wounds of a corpse.\n\nJack looked at his reflection, and froze. The blood pools for eyes melted away, exposing the honest green Damien was used to, and the kid reached out for the sword. He was tempted to hold onto it, but helping Jack was worth the risk. He let the sword go, and Jack held the blade with both hands, finger and thumb pinching it, grip perfectly still.\n\nAnd then he threw the sword down. It bounced several times before half spinning, and coming to a halt at Damien's feet.\n\n\"Jack doesn't deserve me. He'd be dead if it wasn't for me!\"\n\nDamien blinked at the man, and looked beside him to the slaughter. The wolves, and Jessy, Fiona, and Athalia did a great job assaulting the spreading spiders, with Fiona's webbing helping in particular. The spiders seemed impervious to its stickiness, they were spiders, but she crafted the web into nets, and hauled on the dozens of enormous spiders like fish being hauled from the ocean. The giant wolf abominations were particularly effective, and they shredded through the spiders with familiarity.\n\nNone of them could spare a moment to deal with Jack. If Damien yelled, called for help, they'd come, but it was better they deal with the scattering swarm of arachnids while they could. And besides, Jack hadn't attacked him, yet.\n\n\"Jack, this isn't you. This is--\"\n\n\"What? The curse? You act like I'm some sort of thing, and not a person.\"\n\nDamien raised a brow, and forced himself to hold still as Jack took a step closer. His eyes weren't pools of blood anymore, likely regenerated from whatever the azlu had done to them, but he could still see madness in them.\n\n\"So then... what are you?\"\n\n\"I'm Jack, you fucking asshole.\"\n\n\"You're not Jack.\"\n\nThat was not the best thing to say. The boy in front of him stared at him with rediscovered anger, and clenched his hands into fists as he came closer again.\n\nLuckily for Damien, New Jack had spent who knew how long throwing trains, giant metal fences, steel beams, and had handled barbed wire with his bare hands, to dismember a giant spider monster. He was covered in dozens of enormous gashes, along with several holes that likely went through and through. For all his rage, New Jack wasn't God, and he stumbled as he approached him. The coursing snake veins of exposed blood dissipated and fell apart. The rippling of his skin where the blood poured underneath calmed and smoothed. The rage in his eyes began to fade.\n\nSo Damien did the only reasonable thing he could, and gambled. He poured every bit of vitae he could into his speed again, snapped up a piece of broken wood nearby, and jammed it into Jack's chest, straight into his heart.\n\n\"The fu--\" Jack managed to look down and stare at the piece of jagged wood sticking out of his bare chest, before torpor took him. His eyes closed, and he fell into the mist and rubble. Maybe gambling wasn't such a sin.\n\nDamien grabbed his sword, and squatted beside his friend. He'd been worried maybe putting Jack into torpor would prevent the curse from keeping the boy alive through all his injuries, but Jack remained intact. Currents of dark blood continued to run through his body, deep in his wounds, but otherwise the boy looked normal again, save for the holes and gashes, many of them a couple inches deep.\n\n\"Damien!\" Clara's voice. Oh bless the Lord, she was alive. If she was dead, Jack would never forgive himself.\n\nDamien raised his head and looked around. It was hard to hear much, considering a slaughter was currently going on, spiders screeching and clicking and dying everywhere, but Clara's voice managed to punch through the mess.\n\nShe walked through the fog, body heavy, each step dragging along the rock and metal underneath her. Her clothes were soaked in her blood, but she didn't look injured; probably healed from her earlier wounds. But she was exhausted, to the point she could barely move.\n\nS\u00e1ndor walked beside her, limping, and moving with a similar level of exhaustion. Unlike Clara, there was a blatant wound in his shoulder, and a grimace on his face as he looked down at the boy at Damien's feet.\n\n\"Jack!\" Sabrina's voice. Uh oh. The ghost swam down for Jack, and scooped the boy up. For a second Damien thought she'd fly away, but she whimpered as she tried to lift him, settled on the ground, and released him. The injury the azlu dealt her must have been powerful. \"Why did you stab him!\"\n\n\"Sabrina,\" he said, \"it's... complicated. He'll be fine, ok?\" Reasoning with a ghost. How does one reason with a ghost? His first introduction to ghosts was Mary, and she'd been very unstable, even with her two closest relatives there to calm her. \"He's a vampire, and--\"\n\n\"I know he's a vampire! He's the master's grandchilde. And you stabbed him!\"\n\nHe blinked, several times. Master's grandchilde? Who was--\n\n\"You're Sabrina Douville. One of Viktor Honor's ghoul.\" A rather menacing person Damien had spied on once or twice. She'd died in a pointless turf skirmish between the Carthians and Invictus.\n\nThe ghost hissed at him, and floated circles around the unconscious vampire. \"You hurt the grandchilde!\"\n\nDamien stood there, dumbfounded. Looking around showed the spiders had been thoroughly destroyed, and while Noah and Caleb ran around, looking for potential leftovers, the rest of the group rejoined him. Slowly, they all circled the ghost and the boy she protected, both Eric and Jessy returned to human form, and each raised brows in confusion. Athalia kept a healthy distance back, but she too stood close enough to look down at the unconscious vampire, surprised and confused; whether by the ghost or the destruction one vampire had managed to unleash, Damien didn't know.",
        "\"Sabrina,\" Clara said, tone of her voice suggesting she knew this ghost, \"don't worry. Jack is just... uh... a little troubled. Something's wrong with him. Damien's his friend and staked him for his own good, but he'll be fine. Ok?\" She spoke like speaking to a child. It sounded terribly condescending to Damien, but to Sabrina, it was apparently the exact right thing to say, and way to say it.\n\n\"Ok. Ok.\" She let go of Jack, floated higher, stopped at ten feet up, and hovered around in a circle. Mist flowed from where her feet and shins should have been, and one of her legs still looked blurrier than the other. \"Take good care of him! He said Mister Mire is dead, so he must be the last of the master's bloodline.\"\n\nEveryone looked around at each other as confusion turned into comprehension, and took a step back from the boy. Damien sheathed his sword, scooped Jack up onto his shoulder, and smiled up at the ghost.\n\n\"We'll take good care of him,\" he said.\n\n\"He will,\" Clara added. \"So, Fiona... and Athalia. That tear--\"\n\n\"Open!\" Fiona said with a big bright smile, totally at odds with the gloomy train graveyard atmosphere. \"We can go back whenever ye want.\"\n\n\"I think now would be as good a time as any. I am fucking thirsty.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Natasha~~\n\nThey found something. She'd hoped they wouldn't find something, but they did find something, and that meant things. Bad things.\n\nShe and the boys crept along, and she wrapped them well in her Cloak. Damien had been practicing with her sire regularly, but so had she. He focused on speed, but to her, the ability to stealth and sneak was the better skill to focus on. So she wrapped herself and the boys up in her Cloak of Night, and the three of them crept toward the Grand Cathedral.\n\nIt. Was. Terrifying. The cathedral didn't look like it did in the city; like everything in the Hisil, it was a warped version of its physical sibling. Colossal gargoyles perched atop towering pillars, and the ornate facing circling the roof rose into gigantic points, each topped with curling spears. A cross sat upon the highest point in the center of the cathedral's roof, gigantic, and the sky around it glowed red. It hadn't glowed nearly as red from a distance, but now that they were close to it, it blanketed the sky. From whichever angle she looked at the giant cross, the red sky highlighted it, so it looked like it was bleeding.\n\nThe fence around the cathedral was much bigger in the Hisil, topped with giant spikes, and each spike was topped with a statue of an angel. Maybe it was some sort of reference to how angels could dance on the head of a pin, but more likely, it was a statement of how angels, warriors of God, were not to be trifled with, evidently immune to the tips of the spears they stood on. Some of them were smiling, some of them were frowning, all of them were naked and beautiful, perfect examples of peak physical condition, and all armed with a sword and two angel wings.\n\nDamien probably would have found the Shadow Realm version of the Grand Cathedral to be a powerful and majestic sight. Powerful, yes, but to her, it was creepy.\n\nThe parking lot was gone. Instead, the main gate opened up to a long, narrow path of dark asphalt, while all around it sat bushes with sharp branches, each covered in thorns. Another metaphor, something about the road to Heaven or God. The path stopped at the stairs of the cathedral, and the stairs were really, really big. Climbing up them would be tough for any human.\n\nShe was surprised there wasn't a big needle head people, or spirits, would have to jump through to get into the building.\n\nNatasha, Matthew, and Arturo sat outside the gate, and looked on from a distance, as two red, hovering creatures with long claws flowed down the path toward them. A small growl drew Natasha's attention, and she looked down at Arturo; he was transformed into his wolf form, and Matthew too. Red wraiths. Taking a cue from his noise, she took them back further and further, and the three of them went completely silent as the two spirits started to talk.\n\nAnd she didn't understand a single word. It almost sounded Egyptian, but it definitely wasn't. It sounded older, less refined, and harsher.\n\nShe looked down at the boys, and the two of them stared at the two wraiths with ears up and pointed. Whatever the spirits were saying, the boys understood it, and from how they were raising their lips in silent snarls, they didn't like what they heard.\n\nNatasha reached into her coat, withdrew her sword, and crouched even lower, until she was head level with the two wolves. They backed up and up, keeping their bodies to the huge fence that circled the cathedral, until they eventually worked their way past the fence corner. There were no nearby structures, leaving only grass between the cathedral and other buildings. A long, winding path led to Three Kings Cemetery, but a look back into that darkness, with her special Auspex to pierce the blackness, showed nothing. They were in the clear to keep eavesdropping.\n\nThe two spirits didn't say much. It wasn't like people went around announcing their plans, though she doubted these spirits thought and acted with the same individualism and awareness of people. But they were talking, more strange words she didn't get, but one word stabbed her through the chest. Maria. There was no translation for Maria, it was a name, and they said it.\n\nThe three of them merged into the darkness the fence cast onto the grass, nothing but shadows, and the two wraiths drifted by. As they moved on, Matthew, the larger wolf, took a step forward, but Arturo nudged the wolf with his snout and stopped him. The wraiths continued on, and on, until they disappeared into the city heading toward the entertainment district of South Side.\n\nArturo transformed back into human shape, and remained crouched beside her. Matthew did the same, though he didn't transform as smoothly as Arturo did.\n\n\"They were talking about some sort of plan,\" Art said. \"Something about a ritual that will make blood flow.\"\n\nShe shivered. \"Make b-blood flow?\"\n\n\"Yeah. They said a few more tears, and the ritual will work.\"\n\nShe frowned, sheathed her sword, and took a deep breath. \"Did they mention Maria?\"\n\n\"They... did,\" Matthew said, tone sad. He knew she knew they did. \"Said something about Maria will soon be ready to trigger the ritual.\"\n\n\"They said rituals will make blood flow. They said the tears will m-make rituals work. They said... M-Maria will trigger the ritual. In three different sentences?\"\n\nArt nodded with a weak shrug. \"The First Tongue isn't very good at describing linked logic or events in single sentences. Things get broken up.\"\n\n\"And... and you're sure they said--\"\n\n\"They said Maria,\" Matthew said. \"Come on, you heard it, I know you did. I saw you flinch.\"\n\nShe frowned at the big man, but it didn't last long. \"C-Come on, let's investigate the cathedral.\"\n\n\"You sure?\" Art asked. \"We know what we wanted to know.\"\n\n\"It's strange for these spirits to be hanging out here, r-right?\"\n\n\"Not if they work for Maria. Right?\"\n\nShe shook her head. \"Maria's smart, very smart. She w-wouldn't leave a trail. Spirits hanging around her d-den is a trail.\"\n\nArturo squatted down in front of her as he looked around. \"Maybe she started this deal with spirits before we showed up? So she assumed no one would track her movement in the Hisil. Figured her den was a safe place to do her work?\"\n\n\"Maybe... maybe.\" If Maria had to do something extreme, like create a ritual site or something like Jacob might do, to give her the tools required to communicate with spirits, then it made sense for her to do it somewhere she felt secure.\n\nExcept, Damien often slept in her den now, and said he found nothing to suggest she had a ritual site or anything like that. And Natasha still couldn't help but feel Maria would create such a ritual site -- or whatever she'd need -- in a place that wasn't her den. Too many unknowns. Not enough evidence. There was only one option: investigate further.\n\n\"Let's go in,\" she said.\n\nThe two boys looked at her like she'd lost her marbles.\n\n\"Uh, my nose is picking up something,\" Matt said. \"There's something in there.\"\n\n\"I will keep us hidden.\" To her surprise, her voice was solid. This was important. She wasn't going to allow another Minerva situation over a misunderstanding.\n\nArt frowned at her, frowned at Matt, frowned at the cathedral, and sighed. \"Alright.\"\n\nShe nodded, and continued around the corner, toward the back of the cathedral. If it was anything like the cathedral in Dolareido, there'd be a lot going on behind it, a garden, trees, and another gate that took a very, very long path through trees near the street, then a winding path between old mausoleums, before eventually arriving at the Three Kings Cemetery a mile away. Buildings in the area generally had a political or religious tilt, with things like christian and catholic schools, a couple of city buildings like a courtroom, and one food shelter.\n\nIn the Hisil, those buildings looked weird, very weird. The schools had colorful bars for doors, like a prison for children. The court building looked like it was upside down. Spirits drifted in and out of them every now and then, but for the most part, this part of the city was void of movement. Still, she did not relax her Cloak of Night, and kept the three of them shrouded as they crept along the huge fence that surrounded the cathedral. Further and further back, behind the building, there was indeed a garden, and she winced at the sight of it. Huge plants full of vines, covered in thorns, like some sort of overgrown evil greenhouse from a comic book.\n\nThe gate was open. They could have jumped over, but it would have landed them directly onto the nasty plants. Besides, she didn't see any spirits, and Art and Matt didn't see any either, so they went through the gate.\n\nThey backyard of the church wasn't really the back. It was the backyard, but it connected to a door on the building's side, and the three of them had to navigate the path of deadly plants to get to it. She assumed they were deadly anyway, and from how the boys avoided the thorns, they assumed it as well.\n\nThe side-back door, a far less impressive thing than the grand double doorway at the top of the front stairs, was little more than a slab of wood with a couple metal bars attached to it. But when Art gave it a tug, it didn't move.\n\n\"Locked,\" he whispered.\n\nNodding, she looked up, and pointed.\n\nThe Hisil did not detract from the Gothic majesty of the building, only enhanced. That meant there were a lot of beautiful stained glass windows, with lots of ridges of stone under sharp facings. Above them were pillars, many with ornate gargoyles, and others with sharp protrusions. For anyone with good grip and body strength, it'd be an easy building to climb.\n\nUp they went. For Natasha, this was beyond easy. She didn't even weigh a hundred pounds, short as she was, and Kindred strength made it easy for her to latch onto stones and metal, and jump to the next ledge no matter how high it was. Eight feet up? No problem. Twelve feet up? A minor problem, but not much once she put a little vitae into the leap.\n\nThe boys had a harder time. Art was very tall, muscular, and heavy. Matthew was taller, more muscular, and heavier. On more than one occasion, Art had to find a good spot to stop, reach down, and help Matthew; he was simply too big. But once they got past the purely vertical, most outward wall of the cathedral, it was easy climbing for all of them. Up slopped roofs, up tilted pillars that connected higher, up tall windows, and eventually up to one of the towers. Up, and into.\n\nFrom there, it was a slow, quiet descent down into the cathedral. Such an enormous building, meant to be both a majestic display, but also a function as headquarters for Lucas. Lots of rooms, lots of hallways, and several floors.\n\nThe goal was simple. Red wraiths were hanging around the cathedral, so, figure out why they kept coming back to the cathedral. The Uratha were convinced the red wraiths were connected to the tears, or maybe even worked for Black Blood. The Uratha -- or anyone but Jacob -- didn't know what Black Blood actually did, what its goals were, what it was up to, or anything. Knowledge about it was priceless.\n\nWhatever was happening inside the cathedral, it was likely dangerous, and it likely contained knowledge. The Uratha may have wanted knowledge so they could know how to prevent another Minerva situation, or force the same conclusion. Natasha wanted knowledge so she could help the Prince find out about whatever it was threatening her city, be it Black Blood, or the tears, or Maria, or all of them. She wanted to protect the city. They wanted to protect the Gauntlet and the balance. Hopefully those two goals coincided.\n\nThe descent between floors continued without incident. No movement in the darkness within the cathedral, down the winding stairs of the tower, and onto the balcony that overlooked the church pews. The center hall of the gathering was the nave. The left and right wings were the transepts, and the presentation stage was the chancel. The balcony circled the nave and transepts, not the chancel, leaving the enormous, glorious pipe organ free to impose its majesty up to the high ceiling.\n\nCandles lined the walls beneath them. The actual cathedral in Dolareido didn't normally do the candle thing, using electric lighting modeled to look like old school lighting when it could. It was made by a vampire after all, and when a vampire had the option to use electricity, they used electricity. But in the Hisil, electricity didn't power the lights of the cathedral, fire did. The candles were large, and arranged to look like crosses in a sloped pattern. Each pew had a candle cross between it and the wall, and beyond them, behind the pulpit and beside the organ on each side, was a much larger arrangement of candles, again forming the cross.\n\nWithout any electric light, or sunlight, the candle lighting was very moody, and she did not like the mood it was going for.\n\nBut, despite her and the boys walking from end to end of the balcony, all they found below them, was pews and candles. The pulpit, a much larger version than the one in normal Dolareido, didn't have anything creepy going on, or anything that would suggest spirit summoning. The pipe organ, also emphasized and exaggerated by the Hisil's warping effect, actually looked like an instrument, not some deadly tool of musical summoning.\n\n\"What d-do you think?\" she whispered.\n\nMatthew and Arturo both sniffed the air deep, and looked down over the wooden railing.\n\n\"There's a loci down there,\" Art said. \"But I don't see it.\"\n\n\"Then... we should go d-down there.\" Sword in hand, she moved toward the stairs that led down into the right transept.\n\nMatt stopped her, hand on her shoulder. \"Tash, why are you pushing so hard to dig up more evidence? We know the wraiths are working with Maria. That's enough for us to--\"\n\n\"We d-don't know that! And... and... and Maria's not the person she used to be. We... we aren't being fair, by assuming she's doing something bad.\"\n\n\"You're defending her?\" Art said. \"You told us about how she treated you in the Invictus. And you told us what kind of person Lucas used to be, a man she loved, desperately. Come on, Natasha. You have to admit our suspicion is warranted. Let's go back and tell Avery what we learned. It's not like we're going to kick down Maria's door and kill her.\"\n\nNatasha sighed and shook her head. They didn't know, they weren't there. That time when Maria had visited, and had actually talked to Natasha one on one, that'd been a very important night for her, and for the elder. Maria still owed Natasha for a lot of pain, but more than anything, for betraying her and handing her over to Damien and Lucas. But, elders took a long time to change, and Maria had tried. That was something, wasn't it?\n\n\"She deserves the benefit of a doubt.\" She shrugged herself free of Matthew's grip, and headed toward the stairs down. The sounds of their footsteps told her they were following, and she relaxed a little. She was being brave, but she still wanted backup when exploring a potentially dangerous area. Normally it'd be Jessy, but since she started working for the Prince, she had to get used to dealing with things on her own.\n\nExcept, of course, now she had a couple of werewolves willing to frontline for her, so, she'd be stupid to not take them up on it.\n\nOnce they were down among the pews, she took a step back and let Arturo and Matthew go first. They had the noses, and the extra senses to find something invisible like a loci. The two of them walked toward the organ, sniffed a few times, turned around, and walked toward the pulpit.\n\n\"It's a small one,\" Art said. \"Not exactly sure what it's drawing. Seems like... a pretty vague influence. A command?\" He shrugged. \"It's very weak. Nearby spirits were just little motes of essence, barely aware, and they took off the moment we got near the building.\"\n\nShe approached the huge pulpit of beautiful, rich wood, and eyed it closely as she circled it. \"Tony had something similar, I think. No wonder Lucas w-went to his old lair, to establish his new one on his return.\" It was a pulpit after all, a symbol of authority, if indirectly instead of directly. \"Would this b-be enough? For Maria to communicate with spirits?\"\n\nArturo nodded. \"Yes, but, barely. There are lots of ways to communicate across the Gauntlet, rituals and stuff, and taking advantage of a loci makes them work a thousand times better. Except this loci is weak. I... I don't think it's what I'm smelling.\"\n\n\"It's not,\" Matt said. \"I think what we're looking for is... beneath us?\"\n\n\"Maria's lair?\" Shivering, Natasha gestured to the organ, and a pathway cut perpendicular of the curving chancel back wall. Except, it wasn't there. She walked over to the wall where the giant cross of candles sat on the organ's right, avoided the candles, and pressed her hands against the smooth wall. \"Um, the stairs are usually here.\"\n\nMatthew came up beside her, and knocked on the wall with a knuckle. \"Solid. The Hisil's probably recreated it somewhere else. This building have a history? Avery only knows a little.\"\n\n\"A long and t-terrible history,\" she said, her voice shifting into storyteller tonality without her meaning to. \"Lucas came to D-Dolareido, established the Lancea et Sanctum, and often overstepped himself. The Grand Cathedral was b-built without the Prince's permission. He attacked Carthians, had some killed. He... killed the P-Prince's ghouls, when she began to push back against him.\"\n\nThe long and terrible history of Lucas, his growing relationship with the Invictus, his attacks on the Carthians, and his eventual war with the Prince, were stories told in whispers. Many of the Kindred in Dolareido didn't know the specifics. Daniel knew them all, and now that Natasha was a young dragon, he shared with her sensitive details. And she felt comfortable sharing them with Matt and Art, to a point.\n\n\"This was his headquarters,\" she continued. \"He called himself Archbishop, and had b-bishops here, along with his congregation, and new recruits.\" Like his new childe, Damien. \"I... I'm sure he did... powerful things here. Some bad. Some good. Some... horrible.\"\n\n\"He sounds like a colossal asshole,\" Art said. \"Glad I never met him.\"\n\nIf only she could say the same thing. She'd never met Lucas at first, since she'd been sired around the time he'd been supposedly killed, over half a century ago. Her first meeting with him, fifty years later, had been a painful experience.\n\nShe nodded as she crouched by the wall, and looked for a secret switch. Nothing. \"I--\"\n\nThe cathedral began to shake, and the pews, the candles, and the ground. Several of the enormous candles fell over, some coming toward her, but she jumped away instantly, putting twenty feet between her and the deadly fire. Art had reached out for her to try and save her, but she'd been faster, earning a small smile from the man.",
        "Earthquake? Felt like an earthquake, except not. Felt more like a volcano erupting under their feet.\n\n\"Let's get out of here,\" Matt said. \"Avery said if Red Tide came around, we were to avoid it. It's hard to predict, and it's always angry.\"\n\n\"Red Tide?\" She put her weapons away, and pointed to the side door. \"Uh, do we have to run quick? We can break down the door, and--\"\n\nThe front doors of the church swung open, and true to name, a red tide poured into the church. A lot of red, a lot lot. Crimson. And it was blood. Natasha almost squealed, but managed to keep her voice under control as she snapped her gaze to the boys, but found neither of them panicking. In fact, they were standing their ground, each watching the oncoming wave of thick, red liquid as it crashed over the pews. Wood cracked and smashed, and many of the candles died to the splashing fluid as the entity filled the nave of the cathedral, and the transepts.\n\nThe Grand Cathedral was a massive building. Hundreds of people, maybe thousands could have filled the pews on the bottom floor. Red Tide filled the church until Natasha looked down, and found the liquid churning and splashing up against the three-step stairs that led onto the stage with the pulpit. It was almost overflowing. Where, where had she scene this before? As the spirit thrashed and smashed weight against the walls of the church, tossed pews around, and roared with the anger of the ocean, she stared at the blood red liquid and where it splashed back and forth against the stairs of the stage. Where had she seen this before?\n\nA movie, one she'd seen when she was still human, before her embrace. A man with a staff told the pharaoh to let his people go. The pharaoh said no. The man called upon God, and God turned the rivers to blood. In the movie, that had included a temple that doubled as a fountain and river. That scene had terrified her as a child.\n\nRed Tide made that scene look tame.\n\nShe didn't really know what to expect from the spirit called Red Tide. According to the boys, the pack avoided it. It was in a turf war with Black Blood and Street-Tail King, and as far as the pack could tell, it was a spirit of blood, likely birthed hundreds of years ago by early vampire activity. When Dolareido's vampire population began to boom, back when the elders had grown comfortable with their work on the city, about two hundred years ago, blood became a commodity. According to the boys, that sort of event triggered all sorts of spirit development in cities; it was always cities with the greatest spiritual upheavals, because of the human population.\n\nWell, if the boys weren't going to run, it was either because they knew it was pointless, or they weren't worried. They did just say they were supposed to avoid it, but now they stood their ground. Not long ago, they'd all run into Black Blood in the middle of the street, and the spirit hadn't touched them, so maybe Red Tide wouldn't be a concern either? Or, running was pointless?\n\nShe fidgeted, fought the desire to pull out her weapons, and watched the giant pool of red settle. As it did, something surfaced from the red. It didn't come up onto the stage with them, but rather emerged from the center of the red liquid itself, in the center of the pool. With only the two big sets of candles behind the trio still lit, the lighting drowned Red Tide in high contrast, emphasizing the shadows of its squirming body, and Natasha trembled as she stared. It was like watching some sort of god of blood who deigned it necessary to form itself, for communication purposes.\n\nIf it'd taken the form of a burning bush, she'd have turned around and bolted. Damien would have probably imploded.\n\nUnlike Black Blood, who seemed to be made of black ooze, and a giant black skeleton that put Athalia to shame, Red Tide didn't show any bones. At first, the form it took was far closer to Flowing sanctuary, a torso atop a slowly spinning vortex. But as the blood dripped away from its body, she realized it looked nothing like Flow. The mass of its body, if that's what it actually was, looked a lot more like a tentacle monster with leathery red skin. Much as she tried to think of it more like an octopus or a squid, those weren't accurate. Tentacle monster was the best her brain could come with, considering the borderline panic surging through her, sending vitae into her fingers and toes.\n\nIt had a mouth, something huge and carved out of the red, with enormous white teeth within. It had eyes, dozens of them, all black and all over the upper half of its fat body. And, of course, it had tentacles, red tentacles made of leathery red that crashed down against the crimson liquid around it. Each forty-foot tendril cracked at the air, and Natasha braced herself to get splattered. She didn't. Somehow the entity's pool of red and dripping crimson droplets remained attached to it, like how Flow's water body followed her perfectly.\n\n\"Uratha. K... Kindred,\" it said, struggling with the second word. Uratha was a word in the First Tongue. Kindred was not. It had trouble with other languages then. \"Why here?\" Oh god that voice. If a kraken sea monster could have a voice, it'd be this.\n\nShe raised a brow as she looked up at the boys. Black Blood was verbose and even artful with its English. Flowing Sanctuary spoke well, too. Even Safe of Grey Street spoke decently. Red Tide struggled. Either it didn't know English, was too stupid to talk in any language, or it just didn't care. Then again, it was talking English, and since the Uratha spoke the First Tongue, it was doing it for her sake. How... nice of it?\n\n\"Red Tide,\" Art said, and he nodded to the spirit. \"We're here investigating the wraiths that abandoned you.\" For some reason, he started grinning. Hitting the spirit in its ego was a surefire way to make it angrier. Damn it, Art.\n\nThe red kraken creature snorted, and slapped a tentacle against the pool around it. \"You. Here. Hunting tears.\"\n\nNatasha opened her mouth, and shut it quick. Don't speak unless spoken to was probably a healthy approach right now.\n\n\"Maybe.\" Art stepped out from around the pulpit, and slowly walked the edge of the stage, feet inches away from the red liquid. \"What's it to you?\" Wow. He was being very ballsy with the colossal, and likely very deadly spirit. Maybe it wasn't allow to attack them? It had bans, like any spirit, but she didn't know what they were. Far as she knew, the Uratha didn't know them either.\n\n\"They grow. Black Blood near. Azlu.\"\n\n\"Azlu?\" Matthew, never leaving Natasha's side, ground his teeth until Natasha heard a click. \"Street-Tail King said the azlu showed up unnaturally.\"\n\n\"Tears,\" Red Tide continued, \"and more.\"\n\n\"More?\" Art said.\n\n\"Azlu came for tears. Came for different... reasons.\"\n\nArt, on the other side of the stage, looked at Matthew with raised brow. Something about Red Tide's information shocked them, which was weird, because it mirrored what Street-Tail King told them about the azlu.\n\n\"Know what those reasons are?\" Art asked.\n\nThe spirit snorted, a loud, booming sound that made the pews floating around in its body tremble. \"No. I am... controlling... tears, until resolution.\"\n\n\"Makes sense. If you can control them, you can prevent problems. But, I don't understand why you're here, in the Grand Cathedral.\"\n\n\"Tear... below.\" It slapped the red water once. \"Get out.\"\n\nEveryone stood up rigid, glanced at each other, looked at the floor beneath them, and then back to Red Tide.\n\n\"Are you sure?\" Matt asked. \"We can--\"\n\n\"Yes. Get out.\"\n\nNatasha took a small step forward, and slightly raised a hand. \"B-B-But, we're trying to find out if--\"\n\n\"GET. OUT.\" The pool of red churned and boiled, and the kraken grew higher and higher, adding a dozen feet, and then another onto its colossal height, until a monster capable of swallowing a house stared down at them with its many eyes. \"GET. OUT.\" The cathedral shook, pews cracked against each other, and crimson liquid splashed up against the walls.\n\nNatasha backed off. So did the werewolves. She didn't need to know much about spirits to recognizing when something far stronger than reasonable, was no longer willing to be reasonable. They turned, and fled; upstairs, because the titanic, angry blood monster didn't bother to move out of the way despite its orders. It wasn't a very nice monster. She found herself wishing it was Black Blood.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThey rejoined the rest of the pack in the apartment building Avery stayed in, and Natasha could see the pack leader was angry. But judging from the expression on her face, she wasn't angry with them specifically. Woo.\n\n\"Ran into Red Tide too?\" Avery asked. That explained her mood, then.\n\nArt matched her mood as he explained what happened. It wasn't usually what Art did when talking, but Natasha could see he was matching Avery's mood because it made Avery easier to deal with. It was a family thing, something family did when they were around each other for years and years. They figured out each other's personalities and learned to work with -- or fight -- each other's idiosyncrasies. If Avery was grumpy, it seemed she was happier if she felt everyone else was grumpy.\n\nAnd Arturo played into that with expert control. The man really was smarter than he let on.\n\n\"A tear, in the Grand Cathedral?\" she said.\n\nHe nodded. \"But we didn't have time to find a way down there. Or, hell, maybe there isn't a way down there? Could be an underground passage or something that comes from somewhere else, or--\"\n\nAvery shook her head, \"Red Tide ran into us, and told us... mostly that we're useless and can't find the azlu. It'll kill them itself. Then it moved onto the cathedral, and booted you three out because it doesn't trust us. It thinks the cathedral is a way to that tear.\"\n\n\"Red Tide's an idiot. It could be wrong.\"\n\n\"Red Tide isn't an idiot, idiot.\" Growling, Avery poked the big man in the chest a couple times. \"It just doesn't think the same way we do. If it went to the Grand Cathedral because it doesn't want you three around a tear, then it's a safe bet there's a tear you can get to from the fucking Grand Cathedral.\"\n\nMatt and Art sighed but nodded, growing quiet.\n\n\"Now,\" Avery continued, \"you said you found red wraiths talking about Maria?\"\n\n\"Yes,\" they said, in unison.\n\n\"And they were talking about the tears? And a ritual? Blood flowing?\"\n\n\"Yes,\" they said.\n\nUgh, it was happening. People were making assumptions, and that was not acceptable. She stepped up, and Avery eyed her as she sat down on her couch.\n\n\"What, Tash?\"\n\n\"D-Damien sleeps in Maria's den. He's with her all the time. He hasn't seen a thing t-t-to make him think Maria is doing anything strange, anything involve tears, or anything involving sp-pirits.\"\n\nEvery werewolf in the room, which was all of them save three, watched her with sad eyes. They all knew where Avery was going, and none of them looked ready to disagree with her. If anything, they all looked convinced, even Matthew and Arturo, and that was not acceptable.\n\nAvery shook her head. \"Tash, come on. If it quacks like a duck, it's--\"\n\n\"There are plenty of birds that quack and look similar to ducks from a d-distance!\" She glared at the woman as she stood in front of her. Avery was short, not as short as Tash, but short, and was sitting on the couch. Easy eye contact. \"It's... it's not smart, to assume anything.\"\n\nAvery watched her for a while, her hard expression softening to something closer to reasonable. After a minute of silence, Avery sighed and nodded as she sank back into her dingy old couch.\n\n\"The only reason I brought you in on this is because Matt and Art can vouch for you. But the evidence is piling up, Natasha. I trust that you're not telling Maria about any of this?\"\n\n\"I'm n-not. I made that promise, remember?\"\n\nAvery leaned forward, and held out her pinkie finger. \"Swear? Even with this new info?\"\n\nNatasha blinked at the finger, at the woman, the finger, and eventually took it in her own. \"N-No spit? Or cut open the palm?\"\n\n\"You can't spit or bleed without faking it.\"\n\n\"True.\" Tash looked down at where their two fingers were hooked, and then gave Avery her best serious face. \"I swear.\"\n\nShe meant it, too. But, just because she promised to not tell Maria about the pack looking at her like she was a target, that didn't mean Natasha wouldn't do something else to prevent a catastrophe.\n\n\"Alright,\" she said with finality, then let go. \"You really think Maria isn't the cause of these tears?\"\n\n\"T-Too many things don't add up.\"\n\n\"Yeah, I get that. If they did add up, I'm sure a lot more people than us would be looking at her. But, if you think Maria's innocent, I'll try and be more thorough with our recon.\"\n\n\"Thank you. How long d-do you think you'll be?\"\n\n\"I don't know. I'm not rushing into anything, Tash, but I'm not going to sit around and wait for shit to get worse.\"\n\nWhich meant Natasha had an unknown deadline to race against, if she wanted to help Maria.\n\nMekhets hunted out the truth behind secrets like moths to flame; the curse of their bloodline. But she had a hard time believing her desire to find the root of this mystery was the only reason. A part of her wanted to help Maria, the part of her that was too damn nice.\n\nHopefully that niceness wouldn't get her killed.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nWaking up from a stake in the heart was never fun. It probably wasn't a good thing he recognized the feeling, but also probably something a lot of vampires did as they got older. Still, it really sucked. Pain flooded him, and only began to recess when his vampire blood filled the hole a piece of wood had put there.\n\nHe lifted his head. Apparently he was against a wall, and when he looked up at his hands, they were bound by some seriously hefty chains. Like, extremely serious chains. He gulped. Those were the sorts of chains someone would use to tie up a ludicrously powerful person.\n\nThere was light, some LEDs built into the ceiling, and he sighed relief as a few more glances around showed the familiar black marble under the familiar light. This was the Elysium Tower.\n\nMovement drew his eye. There were people in the room with him, two of them standing very close, and a few standing further back.\n\nAfter a harder sigh, and a few experimental jingles of his chains, he smiled at the two women in front of him, wearing business suits, with arms folded under their chests like they were in an important meeting. They kinda were, he supposed.\n\n\"Prince. Great grandsire.\"\n\n\"Jack,\" they said together. He chuckled a little at that.\n\n\"My little Ventrue,\" Antoinette continued, \"what have you gotten yourself into?\"\n\nElaine came closer, and took his chin in her grip. She was gentle. \"It is him. It's in his eyes.\" Eye contact. A dangerous thing, considering what the curse could do. But then, she was an ancient Ventrue, and one who'd survived the curse. If anyone could handle a mind meld with the Strix curse, it was her.\n\nShe had really pretty eyes, brown, with a hint of harshness to them he didn't see in Antoinette. Maybe it was a Ventrue versus Daeva thing. He knew Antoinette could become an ice queen, and slaughter dozens with her bare hands if she needed to. He was sure Elaine could do the same. But Antoinette could hide her brutal side, pretend to be the innocent doe or the playful vixen. He doubted Elaine could ever disguise the edge in her gaze.\n\n\"It is him,\" a quiet voice whispered in the dark. \"Auspex sees only Jack.\"\n\nThat was probably the sheriff, but Jack couldn't see him anywhere. Creepy. Impressive.\n\n\"He won't take over unless I let him. That seems to be the pattern,\" Jack said. \"He's never taken over without my permission.\"\n\n\"He?\" Antoinette said.\n\n\"He, it. It's a part of me. It...\" He winced and looked away, only to get a glimpse of the people standing further back. Damien and Jessy, his friends and fellow Right Hands. They looked at him like he was dangerous.\n\nHe looked down at himself. Suit gone, weapons gone, pants half gone, shoes still mostly intact. His wounds were mostly healed, but some remained, and he winced. It wasn't like he didn't remember what happened in the fight, what he'd done to beat that monster in a legit fist brawl, but seeing the result of it must have painted a pretty horrible image for his friends. Seeing it actually happen wouldn't have painted a much better one, honestly.\n\n\"Where're the others?\" he asked.\n\nAntoinette sighed, came closer, and gave his cheek a soft pat. \"Athalia and Fiona took S\u00e1ndor back into the Dream, and likely off to speak with Azamel. Now that he owes them, he will be more apt to listen to their request.\n\nJack nodded. \"That's... good. He'll be fine.\"\n\nElaine chuckled and gestured to Damien. Damien, a little hesitant at first, eventually walked up to join them. The door out of the prison cell was wide open, letting in more light from the hallway, and telling him where he was: one of those hallways he normally avoided. Antoinette kept prisoners in these cells, and she still had some.\n\n\"S\u00e1ndor will be fine,\" Damien said. \"Once he got back into his lair through the tear, his recovery was quick. Clara will be fine, too. Sabrina--\"\n\n\"Sabrina?\" Antoinette asked, eyebrow raised.\n\n\"A ghost,\" Jack said. \"We ran into her when the azlu attacked us. She, uh, was Viktor's ghoul.\" Elaine, who'd been looking down in contemplation, raised her head at that, and they met eyes again for a few seconds. Jack continued. \"She found out who I was, and pledged to help me, because I am... Viktor's grandchilde.\" The words tasted bitter.\n\n\"That is strangely fortuitous, my love.\" Antoinette stepped back to stand beside Elaine, and also held his gaze. \"And from Damien's recounting, as much as it pains me to say, you owe your life to the curse. It defeated the azlu, alone. Damien and his companions merely dealt with what remained.\"\n\nHe choked on a small chuckle, looked at his palms, squeezed them a few times with the disgusting memory of what the curse did, and then looked back at the two elders. \"Think... think you can leave me here for tonight? I'm starving, but I need some time to... to do a little soul searching, I guess. The curse is weak without blood.\"\n\nDamien nodded and stepped back with Jessy out of the cell. Elaine stayed with Antoinette for a moment as the two looked at him with worried expressions, before they too, eventually left.\n\n\"I will be here come dusk, with food, my love,\" Antoinette said.\n\nDaniel stepped out of the shadows, making Jack jump a little, before the man stepped past the Prince and into the hall.\n\nJack gave Antoinette a small smile, nodded, and closed his eyes. Antoinette closed the door.\n\nOk, curse. We need to talk."
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "paranormal romance",
        "vampire",
        "werewolves",
        "suspense",
        "slow",
        "violent",
        "romance",
        "romantic"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-08-ch-06"
}