{
    "title": "The Vengeful Tide Ch. 18",
    "pages": [
        "By the morning of the next day, I was already awake. I didn't get much in the way of sleep. That weird voice from last night haunted me. At first, I thought it was simply my tiredness. Perhaps I heard things I actually hadn't. Yet, I found my mind accurately replaying those words like the lyrics to some old bard's tale.\n\nI took my mind off the matter with some magic practice. I tossed a fireball, water ball, and wind ball across the tips of my fingers. Young mages do this shit to get 'familiar' with casting different types of magic at the same time. From Liara's memories, this was apparently what 1st-tier mages needed to do to become 2nd-tier.\n\nBy Ilzahold's definition, there were at least ten tiers of mages, but very few could surpass those titles and become, like Liara, a Grand Mage. That said, Liara didn't even consider those grand mages worth too much effort. I had fought about two grand mages myself in my lifetime. Nearly had my own soul tormented to life in the Eighth Circle of Haganthar. \n\nAye, good times!\n\nAnyway, I tried to focus on my task, but it proved increasingly difficult. Now you might be asking, what could be so difficult about manipulating three different types of magic on three fingers? Well, I shall tell you that I ...\n\n\"OooooOOOooh! L-Lady Liara! Please, mmmmmmmmnph! Hnnnnnnnnngaaahhhh!\"\n\n...had a rather pleasant distraction to my ears and eyes. \n\nConstantly, my eyes shifted between my exercise and the two ladies who had spent their time in my bed. \n\nLiara laid her stomach on my bed with her face between Diane's legs. The Great Witch buried her tongue in her guard's snatch. She slurped the muscular woman's insides greedily like it was her breakfast for this morning.\n\n\"Focus, Diane! I did not allow words to utter from thine lips! Do keep in mind that our dear captain is concentrating upon his task. Would you seek further punishment by incurring his wrath? Not even I could save thee from such a fate. Now, do be silent while I delve deeper between this glorious garden before me,\" Liara said.\n\n\"But Lady Liaraaaaaaaaaaaa,\" Diane groaned as she back arched up. \n\n\"I shall not ask again, Diane. Do not test your good fortune,\" Ilzahold warned. \n\nThere was something in her voice that I absolutely loved. I also had a feeling this was as much about her teasing me as it was about teasing Burnwood.\n\nI tried to turn back to my work, but my eyes drifted back to the debauchery happening on my bed. Diane heeded Liara's commands and tried to stifle her moans, but even I knew the arduous task presented before her. I too had felt the skills of the mighty witch and realized that there were very few who could ever be her sexual equal. The things that woman could do couldn't easily be matched by other people, mortal or otherwise.\n\nDiane bit her knuckles. She resisted the rise in her voice as much as she could. I could tell whatever Liara was doing to Burnwood had a grand effect. The lust rising from my bed was being absorbed into my body like a sponge. I could feel Diane's desires blazing like a great fire. Hell, I could feel the way Liara licked and fingered her clit. It was almost like I was doing it to her myself.\n\n\"Mmmmoooooooooooaaaaah!\" Burnwood wailed. \n\nLiara held her guard's quivering legs in place and struck her swollen clit. I hadn't seen Diane writhe so energetically. She was more frantic than our time together. I watched the sweat poured down her face like droplets of rain.\n\nMy cock sprang forth vigorously. The three orbs of fire, water, and wind quickly shuffled across my fingers. Again, my eyes darted to my bed. Up and down, Diane humped her mistress' face with great vigor. Liara seemed unperturbed by her guard's motions. She just kept pleasuring the corners of her body. \n\n\"Diane, you move too much, my dear. E\u014bj\u0137\u01c0,\" Liara chanted. \n\nI felt the flow of magic within my room. Four swaying luminescent ropes like octopus tentacles appeared above them both. The first one wrapped Diane's ankles together and held them in the air. The second one grabbed her wrists and bound them together. The last two covered her mouth. Burnwood was utterly helpless before Liara.\n\n\"There. Do feel free to participate, dear Captain,\" Liara said without turning to me. She then continued her movements without missing a step.\n\nIntrigued by the idea, I pulled out my chair and placed it in front of my bed. I would be blessed with the only seat to a spectacular performance. Liara pushed up Diane's body so her knees were rather close to her chest.\n\n\"MmmmmmmmmmmmmmNNNNNHNG! HhhHooOOOOOOOooo! NNnnNNNNNGH!\" Diane's muffled cries flowed out. \n\nI watched Liara plunge her tongue deep down through Burnwood's snatch. Each flick of her tongue must have been like a great surge of magical lightning through the gun wielder's body. The way the sweat fell from her body and down to her fit stomach became quite the sight for my eyes.\n\n\"GHHHHHHHHHHHHHHHHHHHHNNNNNHHHHHHG!\" \n\nI watched Diane try to thrust her bound body upwards. Liara dunked three long fingers into Burnwood's pussy. Their lust flowed into my body. It granted me the same sensations they felt. I could practically taste the riches of Diane's womanhood on my lips and tongue. Her body gushed juices. The squelching noises tickled my ears. By this point, I couldn't tell if I failed the exercise or not. All I focused on was these beautiful ladies and the raunchy atmosphere circulating around them. My cock was begging me to join in, but I held my nerve.\n\nDespite Liara's invitation for me to join them, I didn't want to appear like I couldn't properly control myself. That wouldn't go unnoticed by someone like Ilzahold. She was a perceptive woman and one not to be trifled with.\n\n\"NNNNNNGH! OOOOOOoooOOOOOOOOOOH! Huuuuuuuuuuummmmmmmmmmmhnnnnn!\" Diane cried and I watched her pussy fire like a volcano. \n\nHer sticky cunt juices splashed over Liara's face. Ilzahold contained the eruption with her mouth and all that lust was sucked into my body. It fueled my own desires and even heightened them. My cock leaked precum from its open slit. I could feel the way some of it slid down my thigh within my pants.\n\nOnce Diane came down from her sexual high, Liara eased off her pussy and licked her lips. \"As pleasant as that was, Diane, I did not offer words for you to cum on my face. Now, I must wait to procure more refines fluids. Never did I think my guard was so unruly,\" Liara said with a sly smile.\n\nThe Witch of Draegnar licked her glistening fingers and even collected some of Diane's orgasmic fluids in a small vial. She placed a cork in its mouth and set the vial on my table. I imagined she would collect that later.\n\nI watched Liara dispel the magic around Diane's mouth. Burnwood huffed and her eyes blinked slowly. I wondered if Liara had stimulated her guard so much that the lass had seen stars. The drool which slid off the corner of her mouth was great evidence to that. Her head must have been so far into the clouds that she saw Olympus.\n\n\"Pray thee not leave us yet, Diane. There is still much for you to do! Pray tell, dear Captain, what should I do to my disobedient guard?\" Liara asked.\n\nI smiled and turned Burnwood's head to me. Her eyes pleaded for more. Her arms still laid over her head and her ankles were still bound together.\n\n\"Aye, a fine question, Liara,\" I stated as I pulled down my pants and exposed my cock.\n\nImmediately, Diane's eyes sought it out. I provided a few flexes of it for my own amusement. I then brought it to her lips and slowly glided it up and down. Her hot breath tickled my skin. Her tongue reached out and licked my shaft. I quickly bent over and twisted one of her nipples.\n\n\"NnnnnnnnnnnhhhhgnnH!\" Diane moaned.\n\n\"I didn't tell ya to lick my cock, Diane. Only good sluts be privileged to do that,\" I claimed. \n\nI then proceeded to rub my cock over Burnwood's quivering lips. I pushed her upper and lower lip apart. I could feel her shaky breaths against the nerves on my male flesh. I quickly moved my hips over her mouth. Thanks to the combined lust circulating throughout the room, I could feel Diane's desire to suck my cock and feel it climb through every inch of her throat. Her body was crying to be used for the sexual gratification of my cock.\n\nInstead, I continued with my deliberate pace. With Diane taken care of, I focused on Liara. She stared at me mysteriously. I leaned over Burnwood's body and grabbed Liara's head. She rose to meet me and we kissed each other with great passion. As soon as we did, I felt Diane's mouth tremble. With an open eye, I noticed Liara plunged three fingers into her soaked cunt.\n\n\"Were you always so perverse, witch?\" I asked.\n\n\"My materials must be harvested, dear Captain. The methods by which they must be are not so disadvantageous to the recipient. Much less my dutiful guard,\" she replied as her tongue licked my lower lips. We released our desires for each other over Diane's body. We ignored her moans and focused on ourselves.\n\n\"Indeed, fair Witch,\" I returned with restless breaths. I took note of how wet my cock felt. I could feel the flesh rubbing softly over Diane's lips. She puckered them a few times. Her teeth parted a few times, almost tempting herself to let my cock into her mouth. Yet, she stayed a good slut and didn't let that happen. Seas, her breath was like fine fire roasting the nerves of my flesh.\n\n\"Mmmmmmm! Ooooooooooh!\" Liara groaned into my mouth and I into hers.\n\nMy magic exercise forgotten, I grabbed Liara and moved her body against mine. I turned her around so that she faced away from me. After that, I moved my cock away from Diane's lips. When I looked down I noticed her mouth was covered with the sticky substance of my prick. Her eyes stared at Liara's pussy and my flesh pistol. \n\n\"Aye, very good, Diane. Now, watch as Liara takes my cock that was just rubbing the corners of your lips. Just imagine what I shall do to you when it's your turn!\" I exclaimed.\n\nI lined my cock with Liara's cunt and quickly pushed inside. \"NNnnnMMmMMNNGHHH!\" Ilzahold groaned and I with her.\n\nJust like last night, our bodies meshed together perfectly. So wet and inviting was Liara's body that her juices dropped down onto Diane's face. \"Mmmmmmm, a fine cock you have, dear Captain. I shall return my thoughts. I doubt most incubus would dare keep up with you! Hnnnnnnnngh!\" Liara said.\n\nThe witch's breasts swayed back and forth. I pulled her back and fondled them between my fingers. She turned her head and kissed me. I sought to claim her lips with no less fervor than her own. There was just something about Liara and myself that seemed to work so well together this time. It actually felt like my aura was mixing with her own to create one perfect unity. I can only liken this feeling to what I felt when I first had sex with my mother and with Aesteal. I was hopelessly drawn to her body and she reciprocated those perverse feelings. My hips shoved my cock into her treasure cove. She rewarded my exploration with wonderful massages and caresses. \n\nAt this point, I'm unashamed to say that I groaned and fired my first load into Liara's pussy. However, so turned on and filled with lust was I that I continued thrusting anyway. \"Mmmmmm yessss! Yes, Eric Drakclaw! Find pleasure in my body! Hnnnnnnnn, a wonderful feeling you have over me,\" Liara claimed as we fucked hard enough for my bed to creak. \n\nOur juices spilled over Diane's face and chest. Liara continued rubbing her captive guard's cunt with her fingers. \"Just imagine it, Diane! For your disobedience, the captain shall take this cock within me and relish in your body as well. This hole right here,\" Liara claimed as she withdrew her fingers and stuck them in her guard's virgin ass.\n\n\"Mmmmmmmmmmnnnnaaaaaaaa!\" Diane groaned as she wriggled beneath us.\n\nJust hearing Liara talk about what I would do to Diane was enough to make me grab her hips and fuck her harder than I already was. Ilzahold's fingers tickled my hair and toyed with Diane's asshole.\n\n\"Yessssss, Diane! I'm preparing our dear Captain to fuck you in any way that he might please. The young man has garnered so much of my interest that I should show him favor. What better favor would there be than granting him the body of my guard? Does that turn you on, Diane? Tell me of your perverse desires! Deny them not from...mmmmmmmmmhmmm me,\" she moaned.\n\n\"Yes, Lady Liara! Oooooooooh! This shit bastard is gonna fuck my ass!\" Diane growled in hoarse pants. Her body started to shiver violently. She was so close to another orgasm, but Liara then slowed her fingers. Burnwood groaned.\n\n\"Lady Liara...,\" she cried.\n\n\"Keep your wits, Diane. Dare you receive more disfavor? I think I've pleasured you enough. Now, I shall relax myself in the aura of our captain! Stand there and watch carefully, for this shall befall you!\" Liara teased. She pointed to the floor.\n\nDiane moaned in frustration, but stood up and watched as I fucked Liara like it would be the last fuck I would ever give. I pinned her arms to the bed and she wrapped her legs around my waist. Our lust fed us endlessly. I stared into her golden eyes. So enchanting were they that I think we melded our minds. Once again, it felt like we became one being. We felt what the other felt. Her eyes started to glow and so did mine.\n\n\"HnnnnnnnnnggghghhH! Yessssss! Ooooooooooh! Fuuuuuuuuuck yes, Eric! OoooOOOoOOoOOOOOH!\" Liara moaned as her pussy clamped down on my cock which drove me into another orgasm.\n\nWe then switched positions and Liara fucked me into my mattress. Her hips pushed down against mine as the sweat fell down our faces. We had utterly forgotten Diane in our embrace of lust.\n\nBy the time we remembered ourselves, Liara was sucking my cock better than an entire brothel's worth of sluts. My knees gave out on me when I grabbed her head and forced my cock into her throat. My spunk fired down her throat and she partook of it without a word of complaint. \n\nTemporarily sated, we both fell to my bed. I remembered Diane and I noticed that she wasn't standing any longer. She was on her knees in glorious ecstasy from what she had just witnessed. Tired though I was, I found the strength to lean into her ear.\n\n\"You be next,\" I announced to her.\n\nI was only offered a restless pant of desire as a response.\n\nI handed Liara a cup of water which she accepted. \"Keep this up, LIara, and I'll return to Draegnar as a soulless husk,\" I said.\n\n\"I doubt thee would complain,\" she replied. She was certainly right about that.\n\nOnce I sat on my bed, Diane spoke. \"May I cum, Lady Liara?\" the gun woman asked.\n\nLiara eyed her guard and granted her a disarming smile.\n\n\"Ask the dear Captain for he's the one you have offended,\" she answered and returned to her cup of water that I had granted her.\n\nMeanwhile, Burnwood turned to me and stared into my eyes. Even now, I could make out the burning desire in her eyes to shoot me dead. That was no surprise. I was still some no-name brat to her. However, that couldn't stop her inner desires from resurfacing. She longed for the strength of someone to stand against her. She longed for someone that could bring her down. She just didn't expect that to be someone like me.\n\n\"May I...cum, Sir?\" she asked in that way Ellen does when she really hated to ask, but needed to anyway. \n\n\"No, you may not,\" I said which stunned Burnwood. \n\n\"In fact, until I'm ready to fuck your ass you're forbidden from touching yourself. I bet you know what shall befall ya if you don't follow through. The Great Witch will know if you disobey. You're dismissed,\" I said.\n\nDiane's lips quivered and I could feel the bubbling anger within her. However, beyond that, I could see the bubbling volcano of lust circulating in her aura. \n\n\"Thank you, Sir,\" she growled out before she stood up and stomped out of the room.\n\nIt made me laugh actually.\n\nLiara stretched across my bed. \"I dare say she enjoys you,\" she replied.\n\nI laughed. \"As much as ye do?\" I asked.\n\n\"Perhaps not so much. Now, I do believe there is work to be done, dear Captain. Shall we continue upon the paths of Delverhold?\" Liara asked.\n\nI grabbed my captain's coat. \"Aye, Witch! It be time to press on,\" I returned.\n\nOnce we were dressed, we walked out of my room. We took a bit of time to take a bath, courtesy of Ilzahold's washing methods. Once that was done, I tasked my mother with bringing the barrels of fruit from Th'am's tree that were collected the other day. \n\nThree groups of about five men and women brought the barrels of fruit. They set them on the deck of the ship. While Liara checked them over for any problems, I gathered the others together.\n\n\"Maeloson, Aesteal, you're coming with me today. We're going back into the tower with Liara,\" I stated.\n\nThe two elves looked at each other and then at me. \"I take it you've found something?\" Maeloson asked.\n\nI nodded. \"Aye, something very important,\" I said and left it at that. Neither spoke a word further and simply accepted the task which I had given them.\n\nOnce that was done, I faced my mother. \"Mom, I want you to take Alteria and a few men under your command. I'd send the Xhaluter with you, but Nz'ia's better off where I can see the bastard. Anyway, take them to the highest point of the island. Look to the West and record what you see,\" I told her.\n\nMy mother crossed her arms. \"Gonna need more specifics than that, Eric,\" she replied.\n\nI sighed and thought for a few seconds. I delved into the depths of my memories of my time on Delverhold.\n\n\"Alright, look for a stone tablet with strange archaic markings on its face. I don't care what order the markings appear in, but write them down as best you can. However, you must write them backwards if you see them,\" I told her.\n\nShe raised an eyebrow. \"Why?\" She questioned.\n\n\"Because the thing beyond that tablet doesn't need to know we exist just yet. That said, I want ya to check because the things which happened on this island shouldn't have happened yet. I ain't letting more surprises mess with my ship nor its crew members,\" I stated.\n\nMy mother quickly nodded. She then looked at me in a way that told me what her next question might be. I sighed and shook my head. She just silently wrote down my answer on her notepad. That was now over two days since I had touched that moonstone. The feeling was rather foreign to me now.\n\nWith those orders being directed, Liara took the time to ease my concerns. \n\n\"Worry not, dear Captain. As far as I can tell, there is nothing wrong with these delectable fruits. On the contrary, I dare say that will prove useful to those who would feast on them daily,\" she uttered to me.\n\nI looked at the various fruits and picked one up. \"Is that right? Then we'll store them for later. I don't need Th'am's madness seeping into the fruits its body created as well,\" I said, and placed that fruit back in its barrel.\n\n\"Ah, yes. You did inform me that you would tell me of this...Th'am that you desired I not encounter,\" Ilzahold reminded me.\n\nI slowly nodded and ordered for someone to take the barrels into the storage room for the food. Once that was taken care of, we began rowing back to the island. I took notice that Diane, who had joined us, tried not to meet my gaze as the island grew larger in size. \n\nOnce we disembarked, I noticed that Ellen was nowhere to be seen. There were also fewer people on the shore than last night. I noticed the various burnt out fire pits in the sand.\n\nAs usual, I saw Alteria practicing whatever H\u00e6\u0148garamian exercises that fancy her interest. I also notice the men I assigned to her as punishment gasping for breath. I took note of their bruised bodies. Clearly, the Balamar knight held nothing back from training them.\n\n\"Captain!\" someone called me.\n\nI turned my head in the direction of the noise. A boy about a year younger than me came up to me. \n\n\"What is it?\" I asked.",
        "\"Captain, Ellen Sothshore told me to tell you that she was taking some men and heading to another part of the island. Something about the trees and fine coin. She said not to worry about her,\" he told me.\n\nI half-chuckled and half-snoted. Well, at least that silent question in my head had been answered. I knew that ever since Alteria mentioned the quality of the wood on this island, Ellen pondered the ways she could sell it to people who worked with her. \n\nWell, I had already planned on doing that anyway. Sothshore merely sped it along. Plus, there wasn't much I could do about stopping her now. She was already gone. I supposed I didn't have to worry about her too much. Th'am was the biggest threat on this island. With it disposed of, I doubted I needed to worry about anything else. Besides, if anything did bother Ellen I need only follow the sound of gunshots to find her.\n\n\"Fine. You can go,\" I said.\n\nThe young boy nodded and then ran off to whatever adventures laid before him.\n\nI watched him go before I turned my attention to the others. \"Alright, let's go,\" I said.\n\nThey agreed and I gave my mother a swift kiss before parting from her. Before we disappeared into the forest once again, the last thing I saw of her was her walking over to Alteria.\n\nLiara, Diane, Maeloson, Aesteal, and I walked through the forest back to the tower. It was during this walk that I told the Witch of Draegnar of Th'am, the Maddened Reaver of Roots. The longer my tale went on, the more interested she became. \n\nAt the end of my story, all she gave me was, \"I see.\"\n\nShe didn't dig deeper into my story. Maeloson and Aesteal even confirmed my words, but I saw that the witch was lost in her own thoughts. It wasn't until we reached the large tower that she regained her usual composure.\n\nWe entered the building and walked through the familiars halls. It wasn't long before we came back into the study room. I noticed Goron barking orders to the two idiots that had been frozen in black crystal. They pulled books down from the shelves and stacked them in separate piles.\n\nOnce he took notice of us, Goron made his presence known. Not that such a feat was hard to begin with.\n\n\"Dear Goron, I see that you have been working them very hard,\" Liara said.\n\nThe big lug bowed. \"The captain has placed them in your servitude, Lady Liara. I shall make them have a use in some capacity for you,\" he told her.\n\nIt was rather clear to see just how devoted Goron was to the Witch. Kings and Emperors would pay for that kind of loyalty. \n\n\"'Tis much appreciated. However, do not work them too much. The passages contained within these books are invaluable to me. Besides, something tells me they will be needed for something more important than stacking books. Isn't that right, dear Captain?\" Liara asked, turning towards me.\n\nI nodded. \"Aye, something much more important,\" I replied.\n\nThough I enjoyed Goron's curious gaze, he offered no words of retort. Instead, he called the two over to us. Once they were added to our little group, we continued into the tower.\n\nAs we walked, none of us spoke, but I could feel Aesteal's aura searching out mine. It was rather funny how used to her presence I got over the voyage.\n\n\"I know ya got questions, Aesteal. Ask them. You as well, Maeloson\" I said.\n\nFor a time, the only sound was our steps knocking against the stone floors. The rays of sunlight which pierced through the windows. They created little pockets of rings in the darkness. They made it a bit easier to see now as opposed to last night when I had explored with Diane.\n\n\"Sir, what are we searching for?\" Aesteal asked.\n\nWe turned down a familiar corridor. There were no windows in that hallway, so I prepared a light spell again. The familiar ball of light appeared in my hand and illuminated the way for us. I also took in a few more moments of silence to figure out how to properly answer Aesteal's question.\n\nOnce I had the time, I spoke. \"Tell me, Aesteal, what do you know of Rune Keys?\" I asked.\n\nI turned my head back and noticed not only Aesteal's pondering of my question but also Maeloson's intense gaze. Perhaps he too was wondering about what I meant.\n\n\"Rune Keys. I have heard members of other races identify them that way. However, the Northern Elves call them by a different name,\" Aesteal said.\n\n\"\u1e62\u016f\u0127\u0127ran, The Breaths of Illhiem Souls,\" Maeloson completed for Aesteal.\n\nConfused, I spent some time scanning through Liara's memories, but that didn't seem to bring anything up for me. \"Oh? And what's that?\" I asked.\n\nMy beautiful elf smiled. \"Tales and elven texts state that when the first of the races came together, the spirits dwelled among them. From the soul of the earth, and from the breath of Creation, the \u1e62\u016f\u0127\u0127ran were created to house the souls of Illhiem, the first minor spirits created by the Spirits of Water, Fire, Earth, and Air. The Illhiem were meant to reside with each race, blessing them and keeping them connected to the magic tethers of the Realms. The spirits blessed the races, and the races cared for the spirits,\" she told as we continued walking.\n\n\"Many believe it was the spirits that changed the races to what they are now. Elves, Dwarves, Beastmen, Dragonkin, Humans, Mermaids, and so much more were the results of blessings of the Illhiem. The spirits were meant to bring unity to the lands, but...that is not how it turned out,\" she said. \n\nI felt her aura waver against mine. To ease her, my aura sought out hears and wrapped it once again. She sighed. \"A spirit by the name of \u0191iaen tempted its guide with the power to control the will of others in exchange for the magics within its fellow spirits. The guide accepted, for the guide was a woman who sought to elevate herself to the realm of Gods and Divine entities. With her power, she sowed dissent between the races and the spirits. The Breaths of Illhiem were used to contain various spirits, their blessings used at the whim of those who caught them. The elder spirits punished that woman with the Thorn of Oura, a poison needle which can only be continuously cured by righteous acts,\" Aesteal said.\n\n\"And your evil spirit?\" Diane asked.\n\nMaeloson took over. \"For its wicked ways and disruption of the unity and balance between all things, \u0191iaen was sealed in a stone guarded in a place no one knows about by the spirits of Balance and Unity. Should it escape, legends state that it will return to finish what it started. However, the damage was done. The Illhiem were seen as powerful prizes to be won by those with the capability to capture them. Just like your Rune Keys,\" he spoke.\n\nThe brief, if rather incomplete, story was finished. I assumed there would be more to the tale, but I don't think the elves were too keen to discuss the finer details. Aesteal's aura seemed to solemnly mix with mine. Perhaps I would have to ask her more on this story later.\n\n\"Well, the basic idea is the same. Objects meant to hold spirits and minor deities that only those with certain abilities can hold. The alchemist who made these isles his home was trying to make new variations of them.\"\n\n\"Impossible!\" Maeloson exclaimed rather heatedly.\n\nWe stopped walking and I quickly turned back to face him. When I stared into the eyes of that proud, elven warrior I saw a deep fear that one has when they think of their nightmares. For someone as collected as Maeloson, I wondered what terrified him so badly.\n\n\"I...sorry for my outburst. Though the creation of Rune Keys is not abnormal, it is...something sacred to many races. Whether one believes in gods or the Spirits, to deviate from the methods bestowed by divine inspiration is sacrilege. Plus, to even attempt that requires...,\" Maeloson didn't finish.\n\n\"I believe Maeloson claims that to gather the magic and essences for Rune Keys our dear alchemist must have performed some rather heinous methods,\" Liara said this time.\n\nI stared back into the darkness. So much was being thrown at me now that I had not learned of during my first time here. I had no idea the alchemist was crafting Rune Keys. I wasn't even sure if he was successful or not in his endeavor. All I knew was that I had not even fully delved into the true purpose of these isles when I was here last.\n\nWe all finally reached the door that Diane and I had made it to last time. Liara dispelled the traps that she could. We treaded carefully over the ones that would have taken her more time and effort to undo. I noticed the chains that laid on the floor, courtesy of the gunshot Burnwood fired to open the door. \n\nI pushed the doors open and we all moved inside. Since the room wasn't that spacious, it was a bit cramped for us. I shall not name who took up the most space.\n\nAs one could expect of Liara, as soon as she stepped through the door, her eyes landed on the very wall Diane and I had uncovered.\n\n\"Hmmm indeed. I now see why you have brought me. How you manage to uncover such spectacular secrets shall never cease to impress me, Eric,\" Liara praised me.\n\nI pushed the orb of light over the room once again. Liara quickly tasked the two men of my crew that I had given her with collecting the notes on the floor. When they handed them to her, I held out another orb.\n\n\"Can ya read it?\" I asked.\n\nShe held the papers close. \"Indeed,\" she replied.\n\nI turned back to the wall. \"Does it say anything about what might await us beyond these walls?\" I asked,\n\nIlzahold shook her head. \"Unfortunately not. They merely contain notes about the failed experiments which have gone on here. I would like to study these in-depth when I'm given the time,\" She returned to me.\n\nI nodded. \"You'll have the time, Liara, but a greater importance brings us to this room right now,\" I said, staring at the wall as I did so.\n\nLiara chuckled. \"Indeed you are right, dear Captain,\" the mighty witch answered.\n\n\"Goron, make haste! Collect everything within this room with the extra hands the captain has provided me. Such materials and notes must not be wasted. In ten days, the moon shall reach its zenith of the month. 'Tis most the opportune time,\" Liara spoke, a mysterious smile on her face.\n\n\"Yes, Lady Liara,\" Goron said before he pushed the two mates I had given her to work. \n\nWhile they tried to pick up what they could, Maeloson and I moved the bookcase away from the wall. The aged wood creaked harshly upon the stone floor, but we successfully moved it away. As soon as we did, I felt Aesteal's aura flare against my own. I turned around to look at her, but she looked no different from any other time. In fact, she looked at me as if there was something wrong with me.\n\nI turned back to the wall. Liara was already in front of it. She then reached out her hand and touched it. \"My, my, quite the number of arrays used within this wall. I dare count about 160. Whatever's beyond this wall, he truly desired no one discovering it. To actually make the ancient G\u1eb1 array overlap the X'lu seal. Why if these were handled incorrectly, unspeakable horrors would be placed upon us,\" she commented.\n\n\"Like what?\" Maeloson asked.\n\nIlzahold hummed for a moment. \"Well, there is one array that would send us to the realm of Nazukul, the Endless Void. Great demons and unspeakable monsters wander. So thick and heavy is the darkness that you shall not even hear your own screams before you're pulled away. Shall I say, the Ten Circles of Haganthar are preferable to Nazukul,\" she told us.\n\nAn air of unease settled over us all before I stepped forward.\n\n\"Is that gonna stop you, fair witch?\" I asked.\n\nLiara laughed. \"Dare thee not underestimate me, boy,\" she replied.\n\nWe all watched Liara place her hand on the wall. \"Oh, perhaps I should inform you all. Hold onto something!\" she said.\n\nOnce those words left her mouth, the Witch of Draegnar activated over a hundred magic arrays left by the Alchemist of Delverhold. The tower shook with the temper of a violent earthquake. The arrays in the wall shined with a magnificent glow in more numerous colors than that of a rainbow in the sky.\n\nAesteal crashed into me and I held her against the wall. Goron held Diane and fell to the floor as well. Maeloson leaned against one of the shaking bookshelves, and I'm sure I heard the other two members of my crew screaming Draegnarian about the wrath of Zeus.\n\nAs Aesteal held onto me, I watched Liara break through array after array. The tower shook even stronger than before and the stone ground beneath our feet split from the end of the room to the door. The walls broke as well and piles of cemented stone and rock crashed overtop of us all. \n\n\"Z\u1ebf\u01d0,\" I called out and held up my hand. A blue barrier of magic surrounded us as stones fell against it and pulled up at the corners of its form. \n\n\"Marvelous. Absolutely marvelous, you clever alchemist!\" Liara praised as she broke through more and more arrays.\n\nWith each array broken, the tower, nay the very island itself seemed to tremble and shake. I knew this because I heard what sounded like a tree being torn from its roots. The tower rumbled as the tree crashed into its side.\n\nNext came a beautiful, if harsh myriad of colors from the wall that made me squint my eyes. The colors pierced the orb of light I had created and drained it of all its magical essence. It got smaller and smaller until it vanished from the middle of the room. I noticed those colors even attacked my barrier which kept the debris from falling over us and crushing my group where we laid.\n\nThe colors seeped into my barrier and its strength diminished. One of the broken stones fell through my barrier and shattered on the floor. I growled and pushed more mana into the barrier, but it was no use on my own. The magic within the colors was draining my spell too quickly for me to maintain.\n\nJust before my spell was completely sucked away, I felt Aesteal grab my hand. I then felt the embrace of her mana next to my own as we powered the barrier with the reserves from within our bodies. \n\nThankfully, between an elf and a young pirate, the barrier regained its strength despite the pressure between the magic-draining colors and the falling stones. However, the shaking never stopped. Violent rumbling was heard outside and it felt like the very life of the island was being torn into pieces.\n\nSuddenly, the shaking stopped. I kept the barrier up since it had accumulated quite the sizable amount of debris. Should I drop it, I was sure we'd all end up as Florgdorian pancakes.\n\n\"Is it over?\" Maeloson asked.\n\nI noticed Liara smile. The pressure got noticeably heavier.\n\n\"I'm afraid no, dear elf. Now comes the exciting part,\" Ilzahold claimed.\n\nWhen those words left her lips, my entire world had been thrown upside down.\n\nWe had no time to react.\n\nWe had no time to prepare.\n\nWe had no time...to cope.\n\nThe magical pressure within the structure exploded with great intensity. Orbs of beautiful colors, some I had never even seen before, floated upwards. They reached the ceiling. Like it wasn't even there, they passed through it, never to be seen again. We could all feel the accumulation of great mana in the sky outside. Whatever was happening, it must have been grander than anything we might have seen before.\n\n\"I hear them,\" Aesteal said.\n\nI looked at her.\n\n\"I hear them too,\" Maeloson told us.\n\nDiane growled. \"Hear what?! How can you hear anything in all this noise?!\" she yelled to us.\n\nAesteal turned to me and cupped my face. \"I hear them, Sir. I hear the spirits of magic outside this tower. Something grand is happening outside this tower!\" my wonderful elf told me.\n\nIt was true.\n\nThough I couldn't hear the voice of spirits, I could feel the magic around me. Magic was gathering into one point at some place from Liara's tampering with the arrays. What sounded like righteous, divine thunder drowned out any other noise in my ears. The tower was breaking apart. Pools of magic, like hot lava, flowed down from the arrays. Into the sealing formula that laid in the middle of the room they lined its frame. The magic filled in the grooves along the floor and then flowed out of the room.\n\nI desired to follow them, but with the tower seemingly ready to collapse on all of us, one can imagine my reluctance. \n\nI wasn't sure how much time had passed since Liara had started, but I heard her speak. \"Dear, Captain,\" she called.\n\n\"What?\" I asked impatiently.\n\nThe mana Aesteal and I had poured into the barrier was draining away fast. I was actually surprised the tower was even still standing at this moment. Various traps in the room had activated and we had to guard against them all. Fire spells, lightning spells, soul-rending spells, and even holy spells. I had to guard against them all with Aesteal's help. Had I been without her, I doubt we would have survived if Maeloson didn't help. As expected of a legendary alchemist mage. His knowledge into the magical realm was fucking beyond compare by any current mage, aside from Liara.\n\n\"Brace yourself,\" Ilzahold said.\n\nThe crack of the last array filled my ears. Before we could even let out a sigh of relief, the wall exploded. Light as harsh as the rays of the Helios covered over bodies. My barrier could do nothing to stop it. All I knew was that I had Aesteal in my arms when I closed my eyes.\n\n\"Sir? Sir! Captain, wake up!\"\n\nI slowly opened my eyes and noticed Aesteal looking at me with relief on her face. She leaned me against something cold. I turned my head and noticed we were in a cold, damp cavern. Pieces of illuminated rocks provided enough light that Aesteal and I would not stumble in the dark.\n\nI inhaled the cavern air. It smelled like shit, very wet shit. I don't know what else I expected it to smell like, but that was what I got.\n\n\"Sir, are you alright?\" Aesteal asked.\n\nI rubbed my left hand over my face. I slowly nodded to her question.\n\n\"Aye. Where are we?\" I asked slowly.\n\nMy beautiful elf looked around the cavern we found ourselves in. \"I'm not sure. I woke up a little bit before you. I couldn't find the others. I tried to investigate down the tunnel, but I dared not stray too far from you,\" she explained.\n\nI shook my head back and forth in some vain attempt to clear the dizziness from my head.\n\nI thought about what Aesteal told me and it was rather concerning. The last thing I remembered was us all being engulfed in that vast light while I kept the structure's walls from collapsing in on us. Wherever we were, it wasn't a place I've been before on Delverhold.\n\nOnce my mind was clear. I stood to my feet. Aesteal stood to hers as well and we surveyed our new environment. I observed the walls and touched the glimmering stones embedded into the wall. They were neither hot nor cold. They merely glowed like a thousand stars in the night sky. Without them, Aesteal and I would be left stumbling in darkness.\n\n\"Well, it shouldn't be too difficult to locate them,\" I said. \n\nI reached into one of my pockets and pulled out a vial filled with blue liquid. It was a common mana potion that one could find for about one to two gold. I opened the vial and drank its contents. The taste was as sour as a lemon, but I bore it without complaint. As I drank, I felt the reserves of my mana refill themselves. \n\n\"What the...,\" \n\nI was shocked. I felt the mana within my body drain at such an alarming rate that it was gone before I even realized it. I saw the mana I had just attempted to restore get sucked away into the wall with those bright stones.\n\n\"My mana was taken,\" I said to Aesteal.\n\n\"Yes. It seems the cavern's walls have gained the ability to drain magic and mana. I believe that's why I couldn't cast any healing magic on you while you were unconscious,\" the elven archer replied.\n\nI frowned and stared at the walls. The stones continued to sparkle like fine jewels. When I touched them, I felt their rough surfaces. By Liara's knowledge, I already knew that there were mystical items and spells capable of restricting or draining a person's mana. However, I hadn't expected there to be so many fragments from the Mountain of Uer here.",
        "The Mountain of Uer. Once claimed to be the Mountain That Bends Mages was a mountain somewhere in the southern continents of D'orn. It was a big mountain whose tip was said to surpass the very clouds. Nomads and natives made the mountain their home.\n\nThis mountain received its name when a woman named Uer escaped from slavery to it while she was chased by sixty 8th-tier mages from the long gone Kingdom of Chuqya. It was on that mountain that she made her stand against them. Uer led the mages into the mountain and they were stunned to discover the mountain's body had stripped them of their mana. With their magic rendered null, Uer killed them all and obtained her own freedom.\n\nFrom there, she governed a country beneath the mountain free from the oppression of rulers and their mages. The mountain's geography also made it too unfavorable for foot soldiers which was why only mages were sent. Levitation magic certainly helped with that. With no one to go against her, Uer created the great nation of Ueranmias, their armor and weapons forged from the very stones that lined this cavern wall.\n\n\"Uerantite,\" I said to myself.\n\nAesteal touched the stone as well. \"The ore that is said to carry the will of Uer, the woman who rebelled against the mages of the Chuqya Kingdom? Never had I thought I would see this ore in my life,\" she said.\n\nI chuckled despite our situation. \"Did your northern kingdom not trade with it?\" I asked.\n\nAesteal shook her head. \"Though her intentions were noble, Uerantite is seen as cursed and unholy ore by most of the Fgg'rial Kingdom. Any mineral or substance which would disrupt one's connection with the divine spirits is said to be born of evil and wickedness. If seen on its own, it is an elf's duty to destroy it,\" She replied.\n\nI reached out my hand and touched her cheek. My elf shivered at my touch. She fixed her eyes on mine.\n\n\"Then why aren't ya destroying it?\" I asked, a playful tone in my voice despite our circumstances.\n\nI can wholeheartedly say I wasn't prepared for a playful smile to appear on Aesteal's face as well. It was just so unlike her.\n\n\"You didn't order me to do so, Sir. Your word is my law now,\" she claimed as she took my hand and kissed it.\n\nI smiled and caressed her cheek with my thumb. \"Ya tempt a man well, Aesteal,\" I told her.\n\n\"Only you, Sir,\" this wonderful elf answered me.\n\nI leaned forward and kissed her. Her lips pursed and I enjoyed the full embrace of her lips. My aura wrapped around hers and I could feel a slight tingle on the back of my neck. Aye, kissing Aesteal always did my heart good. There was a serene feeling I got when I was with her.\n\nOnce we parted, I led Aesteal down the dark tunnels. We couldn't stay where we were and there was no way of contacting anyone else. I had no will over the tides, and I had no magic to draw from. I hadn't the slightest idea where Diane, Liara, Goron, Maelon, or even those two grunts were. I also hadn't the slightest idea where Aesteal and I were. \n\nAll I had was my beautiful elven archer, two guns, a cutlass, and a robe filled with some magical items. I've still had worse in my previous adventures.\n\nAnyway, Aesteal and I ventured through the dark tunnels. The walk was long and the darkness was heavy. The glimmering light of Uerantite didn't help much. At best, it only let me know I wouldn't walk into something in front of me.\n\n\"Sir, where do you think we are?\" Aesteal asked.\n\nI shook my head. \"Well, ya can rest assured we ain't in Haganthar, Aesteal. That's about all I can tell ya,\" I replied.\n\nI wasn't sure what to tell Aesteal. For all I knew, that light could have teleported us to the other side of D'orn. I wouldn't dare rule out the possibility. We were dealing with a very powerful alchemist after all. That thought was terrifying in and of itself.\n\nAfter some time, our travels led us to the end of the long tunnel. I advised Aesteal to ready her body. She did so. She grabbed one of the arrows from her quiver and nocked it. I grabbed one of my pistols.\n\nThe closer we got the entrance, the quieter I told us to be. I heard the unsettling noise of water hitting the cold ground. Like tiny drops of ending rain, they smacked against the ground. Their voice echoed through the open air.\n\nI grabbed my gun. Nay, I clenched it. Something was wrong. I felt a bead of sweat fall down my face. I couldn't explain it, but something unnerved me. A silent pressure washed over me. It wasn't there when we were back near the cavern we woke up in. No, it wasn't a sinister feeling like with Th'am and Liara. It was something different.\n\nOnce Aesteal and I made it to the entrance, I peeked out. When I stepped out, I cursed as my foot slipped on a ledge. Aesteal grabbed me and I fell back as chunks of broken rock fell down the side of a steep cliff. So far down did they fall that not a sound was uttered when they hit the bottom. That is if there even was a bottom.\n\n\"Sir, are you alright?\"\n\n\"Aye, I be just dandy, Aesteal,\" I replied, a hint of sarcasm in my voice. \n\nClearly, my frustration leaked into my voice. That hadn't been Aesteal's fault. It was mine for not paying attention. I thanked her for the aid and stood more carefully along the ledge. I faced Aesteal. \n\n\"Shoot a fire arrow down there,\" I told her quietly.\n\n\"Yes, sir. I'll set the shot,\" Aesteal said.\n\nI turned around to look at my elf. As soon as I did, my blood ran cold. Thanks to the glimmering uerantite from the cave we were in, I was able to see the bug on Aesteal's shoulder. It wasn't a very large bug, but it's shiny body filled me with dread. I now understood what that feeling was. When my eyes laid on that bug, I understood where we were. I had been here before.\n\n\"Aesteal,\" I said slowly. \n\nShe must have heard the caution in my voice because she looked at me.\n\n\"Don't. Move,\" I told her.\n\nThough concerned, Aesteal followed my orders. Thankful she must have been because we both heard the squeaking noise of the bug on her shoulder. Aesteal tried to turn her head to see it, but I vigorously shook my head. It was close enough to her. I desired not for it to be given a reason to go further.\n\n\"Raaaaaaaeeeeek!\" that insect squealed as its limbless body slithered over my elf's shoulders. \n\nBeneath the glimmering lights, I made out some of the insect's more defining features. It had no eyes. Its body crawled like that of a long earthworm. The front of its face was like the entrance to a barren cavern. It was a wide hole for a mouth with rows of sharp teeth on the top and bottom.\n\n\"Eaaaarreeeeek!\" It creaked as it lifted its mouth near Aesteal's long ears.\n\nI named these worms \u1e44we\u1ed1, Crawlers Within The Void, in my past life.\n\nI had just finished the first and second islands before I made my way to the third. By that time, I had amassed quite a few treasures. Though they weren't as plentiful as they were now, they were nothing to snub your nose at. On that third island, I realized just how out of my depth I was against a legendary alchemist. I know because I almost died twice on that island. The very reason for that was because of these bugs, the \u1e44we\u1ed1.\n\nThe \u1e44we\u1ed1 were small creatures, insects that I discovered during my first time on Delverhold. They were predatory amalgamations of dark magic, demonic arts, and bug corpses that laid on the ground. \n\nOn Delverhold, the \u1e44we\u1ed1 hunt in dark places. In a place like this, there were many of them. There could be hundreds of thousands of them residing in the walls of this cavern system. One could find them on the floor, walls, or ceiling in the darkness of the third island. Though they have no eyes, do not underestimate their other senses. I'd rather face Th'am a hundred times than deal with these demonic worms. I would dare call the first and second islands a paradise compared to the third one.\n\nThe \u1e44we\u1ed1 don't see, hear, or even smell their prey to hunt. Instead, they were created to sense the highs and lows of mana essence. Low mana depicted a target to be left alone. High mana depicted a suitable target that could be...harvested.\n\nAye, the \u1e44we\u1ed1 don't actually eat their prey. Instead, once they find a suitable target, they latch their mouths to the skin and worm their way inside. By itself, one wasn't a big problem. When a swarm of them gather upon you, then the horror begins.\n\nThe \u1e44we\u1ed1 proceed to burrow into the victim's skin and take residence around the mana veins in the body. They feast on the mana of their prey, remaining inactive for days or even weeks. However, once they've feasted enough, they breed. Hundreds of \u1e44we\u1ed1 feast on your mana veins. They then evolve to feasting on their prey's life essence. They'll move to the stomach and breed more. Space becomes tight. Fighting ensues. The body explodes from carrying too many of the fuckers. \n\nHowever, that ain't the thing that kills the victim, surprisingly. It's actually not even a painful process. Long before the prey's stomach explodes, the \u1e44we\u1ed1 numb the body of its senses. I believe it's from a type of concentrated void magic. \n\nNay, what kills the poor shit is the suffocation. The corpses of those killed in the battle for space somehow attracts more. They swarm the victim. Their overwhelming weight finally grants the victim death's sweet kiss. The body becomes just another nesting hole for them.\n\nSuffice to say, it ain't pleasant.\n\nI believed the \u1e44we\u1ed1 to be more of the alchemist's creations. I had not seen them in any other part of the world except Delverhold. Even in Liara's memory before she discovered the islands I didn't recall her having ever encountered these creatures. Usually, I wouldn't fear for The Eternal Witch, but her mana must have been a feast fit for thousands of \u1e44we\u1ed1 kings and queens.\n\nI still remembered when I was infected with five of them. I remembered the disgusting feeling as they crawled through my arms and legs. I slowly lost all feeling in my body. I couldn't taste the food I ate. I couldn't feel the cool embrace of water on my tongue. When I slept, I wondered if Haganthar would greet me next morn. I still remembered the chilling way I survived.\n\nThe crawler on Aesteal's shoulder wiggled up and down. I could already see it moving towards her ear. I slowly pulled out my cutlass. I placed the blade on Aesteal's shoulder. The slithering worm crawled onto my cutlass and I slowly moved it from my wonderful elf's shoulder. I saw her eye the creature with caution. She must have wondered how such a thing got so close to her without her knowledge.\n\nIf you wondered why I was being so careful with it, the \u1e44we\u1ed1 were easily startled. It didn't take much to set them off. I also didn't want to kill it. For a mage, the \u1e44we\u1ed1 were a piece of shit to deal with. I don't know how the Alchemist did it, but they were born highly resistant to all forms of magic except for advanced classes. If they were killed, their bodies secreted some kind of substance. It drew more to where the one died. A duel with them wasn't the most pleasant thing.\n\n\"Aeeeeeek!\" it squeaked before I held it over the cliff.\n\nI swiped my cutlass away and the worm screamed before it fell down the bottomless pit that I almost slipped into. Once it was gone, I breathed a sigh of relief. \n\n\"Sir, what was that?\" Aesteal asked.\n\n\"A problem, Aesteal. A damn big problem,\" I replied.\n\nI explained to Aesteal what I assumed happened to us. Though I don't think someone of Liara's caliber could mess up those arrays, something happened that teleported us in different directions. She and I were, I guessed, teleported to the third island. \n\nIt was a guess because the first island was different now as opposed to my memories. Th'am wasn't on the first island and neither were those treasures. If the first island changed, then there was no telling what changed on the second, third, fourth, or even fifth island.\n\nFor all I knew, we could be on the fourth island. However, to avoid a headache thinking about the ifs, I settled on the belief that this was the third island until I confirmed otherwise. I also told Aesteal about the bug we just encountered. I spared no detail of our current situation. \n\nUnsurprisingly, Aesteal adapted well to this. I saw no fear in her eyes. There was only the burning fire that I would expect from a woman trained in the elven ways.\n\n\"So, what are your orders, Sir?\" she asked.\n\nI stared at the cliff. What could barely count as a rock ledge formed a spiral which headed up and down the massive pit. Whether I looked up or down was no help. It was all dark. The only light was the glimmering stones of Uerantite. I remembered seeing all of this in my previous life. Unfortunately, only now do I realize the weight it carried.\n\n\"First, we gotta get outta here. I don't know where Maeloson and the others landed. I can't track them with magic or with my powers over the sea. Plus, we're on an island I wished I had more time to prepare for. We'll head for the surface. I ain't gonna damage your pride as a warrior, Aesteal, but as we are now we aren't gonna survive if we go down,\" I said.\n\nShe slowly nodded. \"What's down?\" she asked.\n\nI frowned. \"One might call it 'The Rage of the Alchemist',\" I responded.\n\nConfused though I knew she was, Aesteal didn't ask anymore. Instead, we pressed our bodies against the hard, cold wall. We moved our legs slowly over the rock ledge as we made our way up. It wasn't easy. I actually don't remember it being this hard to go up and down the first time. I knew not what to say about it. I thought these isles were fucking with me more than they had previously.\n\n\"Ah!\" \n\nI turned around quickly and grabbed Aesteal's arm before she slid off. I grabbed one of the stones which jutted out from the wall. I shall keep the thought to myself, but in my current body, Aesteal wasn't very light. \n\n\"Ya alright?\" I asked.\n\n\"Yes, Sir! The ledge feels wet,\" she said. \n\nAs I pulled her back up, I heard the drips of water around us. It was no surprise why she had fallen.\n\n\"Aye, well just be careful then,\" I remarked.\n\nShe nodded.\n\nWe continued along and minutes seemed to pass by slowly. Sweat poured down the side of my face. Whether this was from the death-defying climb, the thoughts of the \u1e44we\u1ed1, or my worry of everyone else, I wasn't sure. I was sure that I wasn't having the easiest time with the isles anymore than the last.\n\n\"Sir, a question. You said that you've conquered these islands before. How did you even survive your first time before you came back?\" Aesteal asked.\n\nI chuckled. \"Men might tell ya that fortune favors the bold. Well, I can't say much on that. I nearly died about three times while I explored these islands. Two of those times were on this one. Can't say how I survived. What I can tell ya is that it involved a lot of traps and a lot of running,\" I said, a laugh on my lips.\n\n\"How did you survive those times?\" she asked.\n\nMy laugh slowly stopped. \"Can't say it was by my own power at least. That's all I know,\" I told her.\n\nThe elven warrior slowly nodded before we continued climbing. I don't know how much time passed before I finally grabbed onto a platform. I pulled myself up and I grabbed Aesteal next. As I stood to my feet, I noticed two fire pillars standing at the edge of the platform. Neither was lit but something felt off when I stared at them.\n\n\"Something wrong, Sir?\" Aesteal asked.\n\nI shook my head. \"No. Probably not,\" I said.\n\nI turned away from the fire pillars and stared up. Just as the pit was bottomless, so too was the ceiling. I could see the end of neither. Hell, I couldn't even see where we had come from despite. The only indication that we had gone up was the spiraling ledge that continued to go into the darkness above.\n\nHow long would it take us to reach the top if we kept climbing?\n\n\"Sir, there's an entrance here.\"\n\nI turned around and noticed the wide entrance Aesteal pointed out. The way her silver hair whipped through the air moved my chest well. She scanned both directions of the tunnel, her bow at the ready. I stared at the fire pillars one more time before I joined my elf.\n\nWhen I came to Aesteal, I noticed the unease written on her face.\n\n\"What's wrong?\" I asked.\n\nHer beautiful face scrunched up. \"I smell something strange,\" she replied.\n\nI stared in her direction. Aside from the smell of a dank cave, I didn't smell anything out of the ordinary. However, I knew better than to question Aesteal's senses. A woman like her doesn't become a formidable warrior without keen senses.\n\n\"From which direction?\" I asked.\n\n\"From the right,\" She said. The same direction she had been observing with her arrow.\n\nI tried to think back to what I knew from the third island. I tried to think back to what challenges I had met and survived. I tried, but I don't recall anything I smelled when I was down here. Nothing but a bug shit and a dank cavern. \n\nI stared into the vast darkness. Aesteal's words unsettled me. Frustration filled my spirit.\n\nI inwardly cursed this island.\n\nHow was it that despite my coming here a second time, I was still bumbling around like a rat-stained cabin boy on this island?! \n\nI inhaled deeply and exhaled slowly. Though I desired otherwise, now wasn't the time to get frustrated. Delverhold would not turn out like it did last time. I swore that to myself already.\n\n\"Fine, then let's...,\"\n\n\"RaeeeaaaAAAAAeeeeeEEeeeeeek!\"\n\nThe words died in my throat when I heard a familiar sound from the left. I turned my head and my fists clenched. \n\n\u1e44we\u1ed1. \n\nOver fifty \u1e44we\u1ed1 lined walls of the tunnels to our left. They screeched at each other. Their sharp teeth flexed inside their open mouths. Though it was dark, and tough to see, I was able to make out the subtle moments they made. They were crawling towards us.\n\n\"Shit,\" I cursed inwardly.\n\nI grabbed Aesteal's arm. \"Fuck it. We're heading right!\" I told her.\n\nWhen my elf saw what had me so concerned, she quickly agreed. I took the front and she protected our rear. I had to admit, though we were in a very dangerous situation, I felt a thrill rush through my body. Though I loathed these circumstances, the pirate in me which longed for adventure loved it. A man with only his blade of steel and guns of fire, his lovely elven warrior with bow in hand at his rear.\n\nWhat could be much better?\n\nAesteal and I were silent as we walked through the tunnels. The only sound we heard were our steps. The glimmering uerantite provided light where it could, but not enough to be helpful.\n\nAs we walked, I replayed my memories of the third island over and over again. Every gruesome detail I pushed through in order that this woman beside me would not share that fate.\n\nI paused. I kept walking, but I turned back to Aesteal. I wondered when I started to become so concerned of her fate. Clearly, the bond was making me delusional. Yet, somehow, I feared that wasn't exactly true.\n\n\"Be careful, Aesteal. I can't sense mana and magic down here. The traps shall be mighty!\" I exclaimed.\n\n\"Yes, Sir!\" she responded.\n\nWe continued walking until we came to a three-way split path. One to the left, one to the right, and a large hole right down the middle. As we entered the room, I felt my body shiver. I noticed Aesteal felt the same thing.\n\n\"There's no uerantite here,\" Aesteal replied.\n\nI nodded.\n\n\"Aye. There's no pull on my mana anymore,\" I replied. \n\nAesteal walked further into the room. Though there was no uerantite to sap away our mana, there was also no light to help guide our way. There were also additional problems to consider.\n\n\"Something tells me that wasn't an accident,\" the warrior elf said.\n\nI had to agree. If one were trapped here, they might think it a safe haven, a place to restore mana. However, there was a vicious pitfall of spikes waiting for such thoughts. I still had a few mana potions to use. That said, if I did use them then I had no doubts every \u1e44we\u1ed1 in these walls would be crawling towards us. Though they weren't very fast, I don't know where they are. They could leap down on top of us right now if we weren't careful. ",
        "We'd be a meal just aching to be devoured. Plus, we had no idea what laid beyond each path. They could all lead to our death if we didn't handle this carefully. I could teleport us out, but without an array to drop us at a destination I knew not where we'd end up.\n\nTrying to combat the \u1e44we\u1ed1 was out of the question. I'd need advanced magic to deal with them. Though I had refined and increased my mana over the course of this voyage, I doubted I could use such magic over and over. Hell, to use that type of magic even five times was a stretch. Those five times couldn't possibly deal with over a thousand crawlers of the void that slithered through these walls.\n\nI stared at our options. There was no telling what laid beyond the right or left tunnel. Then there was this hole in the center of the room. \n\nWhere did that lead?\n\nAnother curse fell through my lips. Why did it feel like I was dealing with an entirely different Delverhold with a different alchemist?!\n\nAesteal waved to me from the right tunnel.\n\n\"Sir,\" she called out.\n\nI walked over to her as she inspected the right tunnel. \"The smell resonates from this direction,\" she remarked.\n\nI stared at the wall, but I still smelled nothing out of the ordinary. When I looked at Aesteal's face, disgust was written across it.\n\n\"What does it smell like?\" I asked.\n\nShe sniffed again and grimaced. \"It smells like something's rotting. It's something big, old, and unpleasant. It's also moving,\" she explained.\n\nThere were times in a person's life where they desire to hear something so badly that their brain fucks with them. It made them think they heard or smelled something when it wasn't there. I couldn't say for sure, but when I focused all my efforts into smelling, I thought I smelled ... something.\n\nIt was a grotesque smell. It was worse than the biggest pile of dog shit I had ever seen. How had I not been aware of such a stench?\n\nI pulled Aesteal away from the right tunnel. Something in the smell made me dizzy. I didn't like it.\n\nOnce we were away, we leaned against a wall for a short break. Over our breath I told Aesteal of our options. None of them were great. Some were better than others. One of them would need to be made eventually. \n\n\"Pardon the question, Sir, but have your abilities come back?\" Aesteal asked.\n\nI sighed. \"That's not an option, Aesteal. I shall be honest with ya. We might be moving through Delverhold without them,\" I answered.\n\nShe slowly nodded. \"How many mana potions do we have?\" she asked.\n\nI opened one of the pockets of my coat. Three blue vials filled my eyes. I showed them to her. My elf didn't look so hopeful at this. As I said before, these were only common potions. They were only good for restoring a slight amount of mana.\n\nI stared at Aesteal quietly. Her eyes gazed up at the ceiling aimlessly. Her white hair shined light silver flowers under the bright moon. Her aura lingered in the air wistfully. I mixed my aura with hers and surprised her when I grabbed her head. I pulled her to me and she rested on my shoulder.\n\nWe stayed like this for a little while. \n\n\"I'll follow whatever you choose, Sir,\" Aesteal said.\n\nI chuckled. Aye, that was an answer befitting of this beautiful elven warrior.\n\nIn a moment of odd sentimentality, I leaned over and kissed her cheek. \"Tell me, Aesteal. Back in the Lindengar Estate, why did ya truly wish to follow me?\" I asked.\n\nWhen she opened her mouth to speak, I interrupted. \n\n\"And don't tell me it's because I be F\u00e4\u0113gahar, the Spirit of Water. As ya can see, I ain't much of a god or divine spirit,\" I added.\n\nShe then closed her mouth. More silence came for a moment. She stared at me and I stared back. \n\n\"I...,\" \n\n\"Aeeeaaeeeeearek!\"\n\nWhatever Aesteal was going to say died in her throat. We turned our gaze to the tunnel we just came from. I cursed as more of those overgrown worms slithered along the wall. Unfortunately, that wasn't the end of our misfortune. I saw other worms crawl out of the left tunnel. Others crawled out of the right tunnel. They bit and snapped at each other like rabid dogs.\n\nI felt some rock and dust fall onto my shoulder. I looked up.\n\n\"Fucking cunts! Why are they so aggressive?! They never chased anything this far!\" I thought to myself as I saw the \u1e44we\u1ed1 burrowing through the walls. Countless numbers of them crawled on the walls. I started to wonder if they would begin crawling out of the large hole in the middle of the floor.\n\nI sucked my teeth. \"Fuck it. Fate shall decide whether we live or die today, Aesteal! Grab hold of me!\" I said.\n\n\"Yes, Sir!\" the elven archer said. \n\nShe grabbed my arm and I pulled out the three common potion vials. I drank both like they were filled to the brim with C'ula's finest ale! The fluids burned my throat and I felt the stores of my mana pulse through my body. I threw the vials down the hole and placed my hands on the ground.\n\n\"Prepare yourself, Aesteal. I don't have the time to put down a teleportation array so I'm just jumping shit randomly!\" I warned her.\n\nAesteal prepared an arrow and fired into the crowd of large worms. \"Understood, sir! You said their blood makes them attract more. Should I kill a few then, spirits willing, they will migrate here!\" She explained before she fired another arrow into the crawling crowd of void worms.\n\nAesteal displayed the deadly proficiency of her elven heritage's archery. Arrows flew from her bow like the finest streaks of lightning. I could feel her spirit was unnerved when some of her arrows bounced off the bodies of the worms. Even with the sewed runes I had forged into her clothing, she couldn't pierce their frames. Nevertheless, that elven grit which I adored shined across her face. She pulled three more arrows back and fired them. The arrows bounced off the large worms again as they crawled towards us.\n\nI placed my right hand on the cold ground. \"Qjn,\" I chanted.\n\nI grabbed Aesteal as I white light enveloped us. In an instant, we vanished from the room. \n\nWhen we appeared again, I noticed we were in the air. I didn't know where we were, but we fell straight down with great speed. Aesteal clung to me tightly as she could while I touched my temple. \n\n\"Maeloson...Liara...Diane...Goron...Ehimn...Gail!\" I called out. \n\nI tried to link the edges of my mind to anyone who was in reach. However, as Aesteal and I fell further and further down so too did my hopes for a response. \"Qjn,\" I chanted again.\n\nWe teleported again. This time, I noticed we were in someplace rather hot. I could see a lot of flaming flowers that lined the walls. Aesteal gasped as globs of fire spiraled in the air from one flow and into the next. The air in the room was very tight and filled with smoke. \n\nI called out to Maeloson, Liara, and the others again, but I received no reply. \"Sir!\" Aesteal exclaimed.\n\nI turned my head and shivered when I noticed the flames began to form into a great fire demon. From the pits of fires that surrounded the flaming flowers, its body crawled out of the depths. Black spikes ruptured from its body and I already knew what would come next. It's long tongue slithered from its mouth. The smoke around us suddenly grew black. Under any other circumstance, I might've been thrilled to be in this chamber once again. Unfortunately, I would have to leave in a hurry.\n\n\"Sorry Dnora. We ain't fated to meet right now!\" I said within the confines of my own thoughts.\n\nI chanted the spell again. He vanished before the fire demon could complete its attack. Where we landed next made my body shiver from the cold. I felt the freezing embrace of snow over my body. I heard the sharp howls of a blizzard.\n\nWhen I opened my eyes, I stared into an almost infinite space of winter wonder. I could see hundreds of trees from Northern countries planted here. Hell, some of these trees I had never seen in my lifetime. Their leaves remained still against the frozen storm. It was so cold that I could see my breath.\n\n\"By the Great Spirits,\"\n\nI turned my head. Aesteal admired the scenery as well. As far as the eye could see, there was snow, ice, mountains, and trees. \n\n\"I think your teleportation spell worked a little too well, Sir. These look like the frozen lands of Yul. We might be on the other side of the world!\" Aesteal exclaimed in shock.\n\nI stared out into the frozen tundra. Aye, one might think that when they first see something like this. \"Ya might think so, Aesteal, but we're still on the island. In fact, we're lower than where we started,\" I said.\n\nAesteal looked at me stunned. \"Lower? This is below the island than where we just were?! How is that possible?\" she asked.\n\nI smiled. I remembered this place well. I was the only one who had been to this particular floor on the third island. So cold was the weather I thought my blood would freeze. This was another place where I should have died. I remembered the fatigue and cold weighed down on me heavily. I passed out in the snow. I accepted my death. When I opened my eyes, I was out of the frozen lands. Even now, I don't know what saved me.\n\n\"Anything be possible on these islands, Aesteal. I told ya these islands were subject to the alchemist's many experiments. He even created a self-sustaining frozen land. No sane man would attempt such an endeavor,\" I said.\n\nMy female elf hung onto my words as she stared into the blizzard. She rubbed her shoulders as cold air expelled from her soft lips. \"Can you teleport again, Sir?\" she asked.\n\n\"No. 'Twas my last teleport. Between that and trying to connect with the others, I drained it fast,\" I said as I took off my coat.\n\nI dropped the coat on Aesteal's shoulders. She looked at me. I looked back at her. I held out my hand. She took it and I pulled her up. \"Well, at least we're away from those worms. It wasn't the most clever idea I've ever had, but it worked. We're also in a place that doesn't absorb mana. If we could find some place to recover mana, then I'd be more suited to these circumstances,\" I said.\n\n\"Well, what about over there?\" Aesteal asked. \n\nShe pointed into the distance. I saw nothing but mountain ranges. \"What's out there?\" I asked.\n\n\"It looks like another of those structures that we saw on the first island. It's hard to tell with how heavy the wind and snow is. I also hear something,\" she said. \n\nShe took her finger and pointed to the nearby ridge just a mile or two away from where we stood. I frowned.\n\n\"What do you hear?\" I asked.\n\n\"Snarling. I also hear trudging footsteps,\" she replied.\n\n...shit.\n\nI grabbed Aesteal's arm. \"Aesteal, we gotta move. Now,\" I told her.\n\nI offered no explanation. Instead, I ran us through the snow. Flakes of the stuff stuck to my hair and burned my cheek, but I kept us moving. With such rough weather, it was hard to see in front of me, but I was able to make out a forest of trees. I already knew Aesteal had questions, but I think they were answered when we both heard a loud, distorted, almost demonic roar over the hills. I think Aesteal quickly got the idea after that.\n\nThe snow was heavy. It was hard to run through. Each step left an obvious trail, but I dared not stop. A trail soon to be covered by more snow and hail was the least of our worries. The howl in the distance made me chuckle. Aye, how could I have forgotten about that detestable beast? \n\nAesteal and I ran into the willows and heaths. I grabbed her and pulled her close to me. We laid against one of the tree barks. She looked at me. I placed a finger to my lips. She silently nodded.\n\n\"GRRRRRRRRRROOOOOOOAAAAAAAAWWAAAAAAARRRRUGGGRRH!\"\n\nA loud, booming roar shook the ground beneath our feet. I pulled Aesteal closer to me as snow and ice fell from the tree leaves. We silently gasped as spikes of the pure, frozen tundra exploded from the ground in a vicious avalanche. The attack crushed the part of a mountain they had been standing on. The spikes blasted through open terrain. The ground exploded. I did all I could to keep our feet steady.\n\nThe rupturing got too intense. I fell on my ass and held Aesteal to my chest. We closed our eyes.\n\n\"RAAAAAAAAAUUAUAUAUAUAUUUUUUGH!\"\n\nFootsteps. The sounds I heard could only be those of a giant's footsteps. I remembered those steps well. When I was here the first time, lost amidst the freezing expanses and mountainous wilderness, those footsteps constantly tormented me. No matter when I slept, what I ate, where I slept, how I traveled, those steps haunted my dreams. Even now, the cold didn't make me shiver. Those steps did.\n\nSlowly, the steps got further and further away. I opened my eyes and I saw him. His gigantic form climbed over the mountains and disappeared into the frozen winds. I couldn't make out his body, but I didn't need to. I had seen it before. In my mind, I can picture it. His body was covered in white fur. His face was like that of a mountain troll. His eyes, red like the blood on Draegnar's docks, could pierce through the darkness. His mouth was lined with rows of sharp teeth and an underhung jaw.\n\nIn his big gorilla-like hands was a very large club made from pure ice fragments. By Liara's knowledge which flowed through my head, I had seen many great weapons and artifacts. They were held by great figures and that club of ice was no different. One might name it a legendary weapon if a dwarf had to classify it.\n\nThe club had no official name, but I called it the \u0147iri\u00ebn. That's Draegnarian for 'The Divider of Frozen Tombs. As one might guess, it was indeed crafted by the alchemist. One swing of that massive club could turn a hot desert into a frozen wasteland. Should it hit a person, they could only pray that the blow killed them. If it didn't, they would be encased in ice magic. Not even the hottest fire spells beneath divine-tier can melt it. How fit that it was given to that giant beast to wield as his own.\n\nIndeed, Aesteal had guessed right. The weather on this floor was almost impossible to maintain. However, that beast keeps it like that with every swing he made. One swing, I believe, holds enough ice magic to sustain the land for a thousand years. The animals here knew him as king, god, and devil.\n\nIn the forgotten pages that the alchemist left behind, I too learned his name. He was \u1ef2rm\u00efndle, the Giant Frost Troll of Delverhold.\n\n\u1ef2rm\u00efndle, contrary to his title written about in the alchemist's journals, wasn't a frost troll. He was a creature of the alchemist's study into fusing ice magic with living flesh. The idea was that by fusing pure ice with flesh then the flesh would never melt. If the flesh never melted then the consciousness would fade, or something like that. \u1ef2rm\u00efndle was supposed to be a true eternal beast. The alchemist took the blood of many animals and poured them into the body of a giant. That giant became \u1ef2rm\u00efndle. \n\nUnfortunately, the alchemist cataloged his failures. \u1ef2rm\u00efndle was the last before the alchemist went on to other projects. No flesh could handle the greatness of pure ice, so the alchemist had to forge a weapon to help channel the pure ice magic. If \u1ef2rm\u00efndle doesn't swing that club of his then the ice magic will overwhelm him and he'll be just like any victim that crossed his path.\n\nSince he was a failure, \u1ef2rm\u00efndle was sealed to this place. Should he leave this type of environment, then his body will dissolve from the unstable ice magic. He might be a god to the other creatures here, but he's a god in a prison.\n\n\u1ef2rm\u00efndle's howls became distant. So did his footsteps. We both released a cold sigh of relief. \n\n\"I-Impossible!\" \n\nI heard the shock in Aesteal's voice. I followed her gaze and chuckled nervously. Seas, the fucker was even stronger in this time than my time. One of the spikes of ice ruptured the bottom of a mountain and split it in two. The avalanche covered the trees at the base of the mountain in mounds of snow while other ice shards splintered through the ground, rupturing its body and opening its soul for any to wander inside.\n\n\"Sir, what was that?\" Aesteal asked.\n\n\"\u1ef2rm\u00efndle, Aesteal. Not one to be trifled with as we are now. Let's move before we freeze to death,\" I told her.\n\nAesteal agreed and we trudged through the snow. Our travels took us far, but we were both cold. With some time, I was able to make out the structure that she saw before. We dodged snarling wolves, skittish deer, and other creatures one might find in this type of environment. The sting of frostbite fell on us both. My hands grew numb and our shared body heat did nothing against the howling cold. We certainly didn't have the attire meant to combat the cold.\n\nI didn't know how much time passed. I think it was more than an hour. To be honest, Aesteal and I should have been dead here. However, her natural elven body and my resistance to cold magic made us survive much longer than any normal person might. Without proper set up, one would hardly survive in five to ten minutes here. \n\nWe finally made it to the base of the mountain that the structure was on. I called it a structure, but hell it might as well have been a giant castle. My breath shivered. The ice started to encase my body. My feet were sluggish. I saw the freezing cold stuck. We would need to get inside fast before the cold threatened to overwhelm us. \n\nShit, my eyes felt heavy. This was the same feeling I had before. It was this feeling that made me pass out in the ice and snow before I woke up at the exit. \n\n\"Aesteal, it's just up ahead. We can...,\" \n\nMy breath stopped. Aesteal laid in the snow, unmoving. Harsh winds blew snow over her body. This land was ready to claim her as another victim which fell to its might.\n\nSuddenly, thoughts of my own problems left me. Great worry filled my spirit as I raced to my bonded elf. I could feel it in the very depths of my spirit how she felt. She was tired. Her aura desperately called out to my own. I cursed.\n\nI ran back back to Aesteal and picked her up out of the snow. I grabbed my coat and threw it over her body. \"No, Aesteal. Ya won't dine in the halls of Hades this day,\" I said.\n\nMy legs shook. My vision became marred by sleet and snow. Nevertheless, I pushed on. I admit it was rather foolhardy of me to run so close to the castle. I didn't scan for danger or magical traps like back on the first island. My concern for my bonded elf impaired my judgement in that regard, but I dare not say I made the wrong choice.\n\nI walked up to the castle doors. They were locked. An iron chain wrapped around their massive door handles. I thought to shoot the lock, but that plan quickly headed south. While a gunshot in this type of howling void might be concealed, I'd rather not waste the bullets. I might need them.\n\nInstead, I noticed an open window near one of the castle ledges. It felt ominous to me, inviting even. Even though no one should have been here for thousands of years, I couldn't help wondering why that window seemed like it was made for me. I exhaled the cold air through my lips.\n\nThe sides of the wall weren't easy to cling to, especially with my cargo. The nerves in my hands were numb and my senses had dulled. I fell off two times into the cold snow before I finally found my rhythm. Sweat poured down my face as I climbed. The winds picked up and my fingers slipped. I tried so hard to remain on the wall that my fingernails scratched the stone. It was pretty damn painful.\n\nFinally, after about ten minutes, my efforts were rewarded. I grabbed the open window ledge. Curtains flapped in the severe storm. With all my strength, I pulled us through the window sill and we fell inside one of the castle rooms.\n\nI caught my breath, but I already knew we couldn't stay here. Aesteal kept shivering my arms and my concerns increased. I fared no better, but at least I was conscious...if dizzy. I couldn't even fully take it in the room we were in. The strength of the cold left a haze over my eyes.\n\nI picked up Aesteal again. I stumbled through the door. I walked down a long hallway until I was sure the cold didn't touch us. I don't know what room we settled in, but it wasn't very big. It was filled with books and tomes. I probably should have cared more about their contents, but I didn't. ",
        "Instead, I set Aesteal down. I kicked down and destroyed some wooden bookshelves. The next step took some doing, but I managed to find some loose bricks in the castle. I did what I could and placed them in a circle. I threw the wood, books, and papers into my shitty attempt at a fire pit. My shaking hands reached into my coat and I pulled out some fire beads.\n\nFire beads aren't anything too amazing. If you crush them, they cast little spouts of fire magic. On its own the fire doesn't last too long, no more than a second or two. Supposedly, their only use is for igniting cannons if ya run out of matches. Never thought I'd use them for something like this.\n\nI crushed the fire beads and flickering flames dropped from their shattered ashes. The fires landed on the books, wood, and paper. In no time, we had fire. I made sure to stoke the flames with a piece of wood from the fire.\n\nThough the room was small, about the size of an adult's bed chamber, I quickly made another three fire pits. I kept the room door open so that Aesteal and I wouldn't suffocate from the flames and pulled her as close to the fires as I could. I ripped off one of the window curtains and folded it into a shitty pillow. I carefully placed it under Aesteal's head. Her body remained so unnervingly still I would have thought her dead if not for her moving aura.\n\nI made my way into other rooms. I didn't inspect them. In hindsight, I very well could have died over a hundred times if there were traps, but luckily there were not. Again, this should have surprised me. However, my mind was too focused on other things. I grabbed some more curtains and drapes, enough to make some bed sheets.\n\nI returned back to our little...indoor campsite. I stripped Aesteal of her clothes. They were already soaked from the melting snow and ice. So were mine. I took my off as well and pulled all the drapes over us. I folded the curtains into more makeshift pillows and held Aesteal's body to mine. Seas, she was cold.\n\nI don't know how long I stayed awake, but my exhaustion got the better of me. With Aesteal in my arms, three fire pits, warm covers, and cold winds storming outside, I fell asleep. The last thing I remembered was my aura mixing with my bonded elf's. I was ferried off to the land of dreams.\n\nSuddenly, I didn't feel cold anymore. My breaths became measured and steady. I opened my eyes.\n\n\"First the Desert, and now a Forest. How many more locations shall I be dropped in?\" I thought.\n\nAll around me were trees. I laid in a peaceful meadow. It was quite the contrast from the frozen tundra I had just trudged through. I leaned up. Oh, another contrast between these visions. I had my clothes in the desert. Now, I was without them in the forest. \n\n\"All this mystic shit didn't happen to me last time, Liara. Your memories are more trouble than they be worth!\" I inwardly exclaimed. \n\nStill, though I complained, I much preferred this to the other one. I surveyed my surroundings. Once again, I had no idea where I was. That said, this place held a mysterious familiarity to me. I must have been here before, or that was what I believed. A beautiful world, with clean air, untouched by the corrupting hands of men. That's what I thought it was.\n\nI stood to my feet. My body stiffened. In the distance, I saw Aesteal. However, she looked different from before. The Aesteal in front of me exuded the very woven fabric of sexuality. Her beautiful eyes blinked at me from behind the trees. Her silver hair glimmered like fine glass in the sun. Her body hugged the trees. Her long legs and graceful feet moved through the grass. I might mistake Aesteal for a spirit if I hadn't met her before. \n\nMy bonded elf winked at me. The sway of her breasts was a feast for the eyes. Her hip movements were almost hypnotic. Her fingers massaged the tree bark. Up and down, she drew him in with her movements.It was like her means of seduction had reached a new level. There was a natural, pure, unrestrained sense in her movements that called out to me.\n\nWith a finger, she beckoned me to come to her. As if our roles had been reversed, I found myself willing to submit to her spell. I walked. My walk turned into a run. My run turned into a sprint. \n\nI sprinted for the trees until I came to the bark Aesteal leaned her luscious body on. Surely this wasn't a dream since my beloved elf wasn't in my arms. In fact, she was nowhere in sight. It was like she disappeared. \n\nI then heard Aesteal laugh. Her voice was like soft music on the wind and leaves. I looked around and I spotted her a few steps away. She beckoned me again. I once again disregarded my thoughts. My body merely moved. I ran after her. \n\nI ran and ran and ran.\n\nAesteal lead beyond my grasp. Through forests and valleys, hills and mountains, plateaus and meadows, I chased Aesteal. It mattered not how long I ran, I didn't tire. I thought not of where she was leading me. I didn't even think that this might not be Aesteal. I just obediently followed. \n\nI wasn't sure how long I followed Aesteal. It must have been a long time because the seasons changed. Summer became Fall. Fall led into Winter. Yet, I did not feel cold. I heard the crunch of my feet in the snow and ice, but not once did I shiver. It was like a bright flame took residence within me. It kept me warm amidst these changing times.\n\nHow many seasons passed me by? I couldn't tell you.\n\nI just kept running and running until there was no need to run anymore. Aesteal ran into the woods in front of me. She giggled and asked me to follow with her finger. The grass tickled my feet, but I ignored it. I walked past the trees. The air smelled nice.\n\nI touched one of the trees. I blinked. On the back of my left hand, I saw a glimmering green diamond-shaped symbol. It was etched into my skin. When I touched it with my other hand, I noticed the same symbol on its back as well.\n\nI was surprised. If this was something to do with elf bonding, then I didn't know what it was. I also couldn't access Liara's memories in this dream of mine. It felt like my entire consciousness slipped away from the world I had known.\n\n\"Jhfingu. Dashalmael Haendazvae Unrelamenied un can laol hunraul. Nmam xhandu rolyia faldonri!\" \n\nThere was a voice. Its ancient speech wiggled into the crevices of my mind. I knew not the origin of the language. I felt like I've heard it before. In fact, I'm sure I have. Yet, without Liara's knowledge, I can't decipher what it meant. Instead, I walked.\n\nI pushed tall branches out of my way and nearly tripped over long roots. I still walked. By this time I lost sight of Aesteal, but that didn't concern me. Even if I didn't see her, I knew where she was. Don't ask me how I knew. I just did. I can't say it was because of her aura. It covered the entire woods. If I were relying on her aura, I'd be standing here with one thumb in my ass and the other in my mouth.\n\nNo, I didn't need her aura. I was her Bonded. Though the circumstances of that bonding continue to elude me, still I pushed on. \n\nMy travels brought me out of the forest.\n\nI smelled water.\n\nI pushed the remaining trees out of my way. I now stood at some kind lake encircled by the forest I wandered in for so many days. At the very center of it, Aesteal stood. I should have questioned why she was standing there...on water, but her beauty took the questions from my mind. Instead, she beckoned me again.\n\nI looked down at the water. I was rather surprised that my arms, my face, and my chest all had similar markings to the ones on the back of my hands. Each of them glowed like finely illuminated flowers in the night. Yet, I still felt no warmth. I knew not what this meant.\n\nI stepped onto the water. I expected to sink immediately. \n\nI didn't.\n\nI stepped again. Before long, I was walking on the lake towards Aesteal. Magical orbs expelled from the markings on her body. When I looked at mine, the same happened to me. I stared at Aesteal, but she kept her smile.\n\nI stood in front of Aesteal. She wrapped her arms around my neck. As if something was pushed into my head, I held her waist. Then, we kissed. Her lips were like fire grass, hot and soft to the touch. I focused on the way she nibbled my tongue. Her body fit perfectly in my arms as I partook of her and she of me.\n\nSlowly, we sank into the lake. Unfortunately, my sense of self-preservation hadn't registered this. I just continued to kiss this sexy elf until we were fully submerged. In that lake, we drowned together. Water filled my nose. Aesteal's taste filled my lips. My consciousness slipped away.\n\n\"Mmmmmmm! Ngggggh! Ooooooooh!\"\n\nI heard a moan. My lips felt wonderful and my cock stood at attention. The warm embrace of naked flesh caressed it well. It made me shiver in delight.\n\nI opened my eyes. \"What the fuck?\" I thought.\n\nI was back in the castle, the warm fire pits heating the room Aesteal and I fell asleep in. Even now, I could hear the wind intense blizzard rage outside the windows. Yet, despite the cold, I felt a powerful warmth that not even the fire pits could provide me. My hazy eyes landed on Aesteal. Her neck turned her head to me. Her lips were on mine. We were kissing like lovers.\n\n\"Naaaahhhhgh. OHhhhhhhh!\" she moaned as she sucked on my tongue.\n\nMy hands rolled on Aesteal's breaths. Her body grinded against mine. My cock laid between her asscheeks. Pleasure rocked through my brain. I began to return my wonderful elf's affections. Her delicate hands laid on top of mine. We massaged her tits together. \n\n\"Mmmmmmnnnn! Oooooooh...ahhhhhhhhh! Ooooooh! Mmmmmuaaa,\" she groaned as her warm breath mixed with mine.\n\nThough I enjoyed this attention, questions popped into my head. What was that dream? Why was Aesteal in it? Why were we kissing now like we were in my dream? What did all that fucking shit mean?\n\nThese questions and more riddled my breath, but I could not hold my rising lust. My brain refused to concentrate on those matters. Instead, it pleaded that I attend to this woman in front of me. It told me to not possess her strongly. Possess her carefully, embrace her like the many lands we ran through in my dream. \n\nI slowly bucked my hips against the crack in my elf's behind. She shivered from my hot touch. Her body was like a thousand bundled nerves being touched at once. She took one of her hands off mine and caressed my cheek. Her nails clawed me gently like I was some newborn babe. Her touch thrilled me.\n\nAesteal then slowly drew her long arms down. She flew past my chest and stomach. \"Nnnnnngh!\" I groaned when I felt her hands grab hold of my cock.\n\nNeither of us spoke a word. Her delicate skin fondled my shaft. She stroked it up and stroked it down. Her movements were divine. Her ass and her hands worked on me while my hands memorized her nips and orbs. Beneath the heat of the blanket and warmth of the fires, I connected with Aesteal like we were having our first bonding all over again.\n\nI turned Aesteal to me. When she faced me, I stared into her eyes. She told me all that she needed to. For a moment like this, words were only a nuisance. She continued to pump my cock, staring at me with some feeling that I couldn't place. The speed of her hands increased. I squirmed and shivered in delight.\n\nI bent down and took her tits in my mouth. \"Uuuuoooooooooh!'\" she moaned as her head whipped back.\n\nHer breasts were wonderful. There was so much of them to partake of. My tongue swiped her sensitive tips. Her free hand caressed my head and hair. She pushed me in further to eat her, feast on her, entertain her, and worship her. My cock pressed against her stomach and she rolled the crown with her thumb. Her legs and mine intertwined with each other.\n\nI moved to the next breast. Her skin was warm, hot even. I licked the sweat from her chest while she moaned for me. Her grip on my cock got faster. I even felt her thigh rub against my dick. When I looked at her, in the light of the fire. Her silver hair seemed to glow like the stars in the night sky. \n\n\"Hnnuuuuoooooooh!\" Aesteal huffed into the room.\n\nI bit her nipple playfully. There was no pain or twisted interpretation of desires. There was just us, alone in a castle with the howling wind.\n\nI felt Aesteal pull her body back. She also stopped stroking me. My cock was so hard I could feel it slap against my stomach. Yet, I didn't speak to her. I didn't demand she continue. Our desires, our thoughts, our bodies, they were of one purpose. \n\nPleasure...together.\n\nThe Fgg'rial elf touched my body. She kissed my neck. \"Nnnnngh!\" I groaned for her as her warm tongue licked my earlobe.\n\nAesteal kissed my chest. She then licked and toyed with my nipples. I allowed her free reign to my body. I can't say this intimacy displeased me. It was rather exhilarating to say the least. She then moved her tongue down to my stomach. Finally, her lips rested on my risen flag.\n\nI thought she would toy with it a bit more, but instead, I felt the air escape from me in shock. Aesteal sucked my cock down until I felt her nose hit my pelvis. I resisted the urge to cum. Why did her mouth feel so good? It was warm, wet, vibrating with heat. The back of her throat held me without issue. I clenched the blankets and curtains. I could not describe this feeling. It was like her body was a piece that completed my own. The beginning juices of my arousal flowed from my shaft and onto her tongue.\n\nWithout pause, she quickly started to bob her head. Hot, cold, warm, wet, in, out. So many sensations ran through my mind as Aesteal tickled my balls with her fingers. Her mouth worked well against my flesh. Her tongue licked the crown with passions so hot the fire pits could not compare. She drank of me like the finest wine cup. Small gobs of cum entered her mouth. I couldn't stop them. She milked me too well for my cock to not respond!\n\n\"OooooooH! Mmmmmnnnngh! Huuuuuugh!\" I squirmed and wiggled as I enjoyed the feel of my beautiful elf's mouth. By her aura, I could feel how turned on she was. The heat that rose in my body was equal to the one that rose in hers. My dick was coated with her spit and saliva. It glistened in the light of the flames. \n\nOne second it was there, the next it was in her mouth. Aesteal moaned in garbled grunts. The slopping sounds of her pussy and fingers moved me. I touched her hair and head. I did not direct her movements. I allowed her to do as she wished. Instead, I caressed her beautiful face. Her aura exploded with mine. Her hair flowed through my hands like water. \n\nShe continued sucking me off for a while. I merely laid back and enjoyed this, only wishing that I might taste the fruits of her body as well. Luckily, we were so connected, I think she knew this. I said this because she removed the covers and placed her cunt right on top of my face. \n\nAs soon as Asteal's pussy was in my face. I had to close one of my eyes from the dripping waters that flowed due to her arousal. I dared not wait. She certainly didn't. She never lost her strike as she pleasured me. So, pulled her hips down and attacked her pussy with my tongue and mouth.\n\n\"MMMMMMMMNHNNHG!\" Aesteal cried, her mouth full of my cock.\n\nI worked Aesteal as best as I could. Her walls clung to my tongue like they were afraid it would never come back. I drank from her wildly. My tongue pierced inside her and slathered every corner that it could reach. The winds outside soon became an afterthought. Her legs clenched my head and my thumb vigorously worked her clit. Her body shook, but she did not cum. Neither did I. We both knew what we wanted. We knew what this was about. \n\nIt wasn't long before Aesteal panted. She released my cock from her clutches. I also removed her cunt from my face. She then faced me. I looked at her. She grabbed my cock and lined it with her pussy. We never broke eye contact. We stared at each other as she eased my length fully, deep inside her. Once her pelvis met mine, we knew we were connected.\n\nHer hands on my chest, Aesteal moved her hips up and then slammed them down. \"Oooooooaaaaaaooooh! Rnnnnnnnnnnnuuuuugh!\" she wailed. \n\nShe fucked me. She fucked me good. Aesteal's elven pussy clenched around my cock as I speared through her body. Our bodies moved together perfectly. Our eyes stared at each other. Her eyes were glassed and filled with lust. She didn't stop her movements. It was like she was possessed.\n\n\"Ahhhhhh! ooooooOOOoOOGH! Mmmmmmmmmmmmm!\" She said as she rode me.\n\nI grabbed her hips and then pushed into her. Our wet slaps and gentle fucking warmed our bodies and our aura. The room was rich from our thirst for the other. Her walls gently massaged me while my cock rubbed her insides. Her head moved up to the ceiling. Her chest heaved excitedly. Her tipped nipples filled my ears. I could not get enough of her gentle nature. Her body hugged me and mine offered her what it could. \n\nSweat rolled down my face. My breath was hot. My legs were weak. Nevertheless, my hips continued. Aesteal bent down and kissed me. We rolled over and I pinned her to the sheets. Her arms grabbed my head as she moaned into my air. I grabbed her legs and held them up. I vigorously drove my body to meet her lustful needs as a woman.\n\n\"Haaaaa. OooooHaaaa! Nnnnnghgghgh! MMMMNNOOOOOOO!\" she claimed. The soles of her feet knocked against my ass. Her wails increased like a siren and her body locked. Her orgasm fell upon me, but I didn't stop. She demanded that I not stop.\n\nI don't know what drove us to perform this act of gentle, yet vigorous love sex, but I understood that I wished for no less. My ass clenched and the slaps of her flesh against mine only fueled me further. \n\nI fucked her. I made love to her. I enjoyed her. Aesteal kissed me and sucked on my tongue again. Her nails clawed at my back. Her legs locked around my waist. We were starved for each other. I don't know why. Well, I knew why I was. I had chased her for so long in my dream. To have her now was a blessing bestowed upon me. So many years passed and so much running for this.\n\nI decided to switch the position again. I grabbed Aesteal's legs and held them together. My tongue rolled over her long, beautiful legs. Her delicate skin was the finest meat for a king to feast upon. Her skin shivered from my touch. I desired every inch of her body, held captive by her sensual, yet wanton beauty.\n\nI nibbled and sucked Aesteal's toes. Her cunt coiled around my cock like a Dhrinn viper. \"NnaaaaaaahhhhhH!\" she groaned while her sweat stained our covers.\n\nI pulled her legs to the side. Her pussy was much tighter this way. Her thighs pressed together, I made delicate love to her. My hands pressed on the covers, towering my body over hers, I stared at her. Her eyes filled with unbridled lust and affection for me. As a pirate, I can't say I know the gaze too much. It excites me and stimulates me. It reminds me of my Beloved.\n\nThe thought doesn't drive me to anger, as I thought it might. Instead, it moved me to perform for Aesteal. To treat her as the great elf I knew her to be. Her hand caressed my cheek. Her screams were my song. \"Oooooooooh! Ghhhaaaaaaaaaaaaaugh! HHNNNNNNNNHHHHHGHHHHH!\" Aesteal cried as I felt her cum again.\n\nSuddenly, I grunted as my hips locked. \"NNNNNNNNNGH!\" I roared as I fired a stream of cum into her pussy.\n\n\"AaaaaaaaaoooooooH!\" Aesteal cried again.\n\nUnfortunately for us, the same thing that happened with Liara...now happened with Aesteal. Our aura seeped into our bodies. Our lust reignited.\n\n\"NNNNNANAAAAAAAAAAH! OOOOOOOOOOOH! YAAAAAAAAAAAAAH!\" Aesteal cried as I fucked her from behind. I leaned forward and nibbled on her long ears while we rutted like loving beasts. My balls slapped against her pussy while she took more of me. The drapes and curtains were stained with our juices and lust.\n\nI pulled up her head and kissed her while she flicked her fingers through my hair. Her tongue brushed against my teeth while I bucked against her. I massaged her clit and her hand tickled my sacs full of cum. I wondered when was the last time I had known such bliss?",
        "\"OooooooooooooooooooooooooooooooooooH!\" Aesteal moaned as she came again on my cock.\n\n\"Uggggggghhhhh!\" I groaned. More of my cock juice filled her womb.\n\nF-Fuck, how could two people orgasm in unison so well? It defied all reason. We couldn't help ourselves. I was enslaved by her beauty and she was enslaved by my power. Yet, we worked and fed off each other so well. We started up again.\n\nThe harsh winds continued to blow outside. Aesteal bounced on my cock. Her ass slapped against my pelvis. My cock reached further into the glory of her body. At the same time, my arousal further exceeded the clouds.\n\n\"Haaahaaaaaaaaaa! OOooooooooooh! Nhgggghghghhgh! Mmaaaaaaaa! Ugh! Oh! HUUUUUUUGH!\" Aesteal and I groaned together. My hands on her tits, her hair flailing wildly, we were hopelessly lost in each other.\n\nMy wonderful elf seemed to gain a new command over her body. This time, she didn't bounce. Instead, she merely wiggled her pussy. Her clit rubbed against my dick and her walls slithered and slathered me down. The lightning in my soul struck me in a whirl of pleasurable pain.\n\nOur senses linked, we were aware of each other's pending orgasm. I grabbed her hips and pounded my hips into her body. \"Nnanananaahahh! Yessssssss! Fuck yes! Ooooooh Sir! Oooooooo goooooodoods! Fuck me, sir! Ooooooooooh sshiiiiiti!\" Aesteal moaned, her first words exciting me.\n\nIn a moment of odd clarity, I smiled. \"Call me Eric, you slutty elf! Tell me who's gonna make ya cum all over his cock!\" I said.\n\n\"Eriiiiic! Oooooooh sha'lrin! Eric, you're gonna make me cum! Ooooooooooh spirits! Oh hghaaalrin! I can feel your cock inside me! You're gonna cum inside me! Release your hot cum in my shameless pussy, Eric!\" Aesteal begged.\n\nThe sweat on our bodies was no longer a gentle river. It was a rapid seastorm falling down our faces as we rode each other. My cock grew so hard, so sensitive, that I could feel every bump and curve in her lower body. Our aura turned into an intense bonfire of lust that seeped into our bodies.\n\nI could hold on no longer. Neither could Aesteal. The cum left my balls and flowed through the tip of my cock. Aesteal's gripped me and threw her head back.\n\n\"UUUUUUUUUUUUUUUUUUUUUUGHHHHH!\" we both groaned in perfect unison. Her pussy drenched my cock and my cum fired into her milking hole. I don't know about Aesteal, but I shut my eyes so tight I saw colors. Rope after rope of cum fired from my cock and stained her feminine walls. My hips twitched while my legs locked.\n\nSlowly, we fell to the sheets exhausted. This Fgg'rial elf stared at me and I stared back. I leaned forward and kissed her. She returned my kiss with no less passion. Her fingers explored my chest. My hands roamed her back. I don't know why there is a peace in my crusty soul when I'm with her. Perhaps I shall never know.\n\nWe rested for a time, basking in the afterglow of sex. \"You won't believe the dream I just had, Sir,\" Aesteal suddenly said.\n\nI pulled up the covers. \"Beautiful fields, cold mountains, falling leaves, a mystical lake?\" I asked.\n\nShe blinked. \"How did you...,\" she began, but quickly stopped. She then laid her head on my chest.\n\n\"Aye. I had the same dream as you then. You gave me quite the run,\" I spoke.\n\nAesteal circled my chest with her finger. \"Funny. I was the one chasing you,\" she replied.\n\nI frowned for a moment. So, it seemed that not only did we experience the same dream, but from different perspectives. I still didn't know what that voice was that I heard.\n\n\"I also heard a voice in the wind. It said, 'Finally. Mine search hath come to an end. May the gods above and demons below bear witness',\" she said.\n\nI leaned up. \"You could understand it?\" I asked. \n\nShe nodded.\n\nI leaned back down and stared at the ceiling. May the gods above and demons below bear witness. Bear witness to what exactly?\n\nI stared at the ceiling as the fire cackled near us. I turned my head and looked out the window. Snow covered the landscape. I kindled the fires and pulled Aesteal closer to me. I closed my eyes and concentrated the magic available to me.\n\n\"Maeloson? Goron? Diane? Liara?\" I called.\n\nI received no answer. So clearly, it wasn't only me who had this problem.\n\nI had some mana to play with so I pushed the range. \"Mother? Ellen?\" I called.\n\n\"Eric, you bitch! You fucking shit for brains, cocksucking, ass-licking, dungstain!\"\n\nAh, there was my mother. Her fiery voice rang like a thousand war bells.\n\n\"Glad to hear you too, mom,\" I replied.\n\n\"You fucker! Are you alright? Where did you go? Everyone nearly panicked when you all disappeared. Can't find hide nor hair of...,\"\n\n\"Mother, later. Right now, you gotta let me know. Are you lot still on the first island?\" I asked.\n\n\"What first island?! The damn thing sank to the fucking seabed! You could at least have warned us that was going to happen!\" My mother exclaimed.\n\n...What?!"
    ],
    "authorname": "WordsToTheWise",
    "tags": [
        "maledom",
        "femsub",
        "threesome",
        "creampie",
        "femdom",
        "submissive",
        "domination",
        "fantasy",
        "elf",
        "bondage"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-vengeful-tide-ch-18"
}