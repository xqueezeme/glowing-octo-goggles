{
    "title": "The Harem Tales Vol. 03 Ch. 14",
    "pages": [
        "The Celebration\n\nFlipping the pillow in his hands Zalen looked around, wondering just how long he'd have to wait. Maybe he should have brought something to read - or would that have been a sign of disrespect? He doubted the Rose herself would care but she had implied she'd be bringing somebody else which might change matters.\n\nBut what would be the correct way to wait for her arrival? Maybe he should have asked her - but then again he half expected the answer to be 'stroking his dick'.\n\nOh well, it wasn't the first time he'd spent time waiting, just lost in his thoughts. He tossed the pillow up again, flipping it over.\n\n\"Shoot.\"\n\nThe sound made Zalen look to the side. There was indeed Vivariel, dressed somewhat like a Veiled One, except her veils didn't even attempt to hide her sensitive parts, instead highlighting them.\n\n\"I waited to see if you would indeed start pleasuring yourself. Now I'm disappointed.\"\n\nZalen laughed.\n\n\"My apologies. I had no idea how long I'd have to wait and I didn't want to blow my load before you arrived.\"\n\n\"Well, now I'm here! And umm... Remember when I said I'd bring a few others with me?\"\n\nZalen nodded.\n\n\"My plan had indeed been to bring two friends of mine. But someone else must have heard about it because...\"\n\n\"Greetings, Zalen. Nice to see you again.\"\n\nZalen whirled around. On the huge mattress sat five women, one of whom he already knew.\n\nEven though her face didn't look exactly the same as during the dwarven festival there was no doubt it was Dumanna again. She still looked sexy as hell and now she was wearing what looked like a leather corset, a really tight skirt and boots that went up to her knees.\n\n\"Greetings, Dumanna, the Goddess of Sex and Pleasure.\"\n\nThe second lady he had never seen before but he could easily guess who it might be based on her elven ears.\n\n\"Greetings, Vana. The Goddess of Partying, Revelries and Orgies.\"\n\nShe was indeed as Lady Veryel had described her, gorgeous. Even though she had a body to die for her his attention was still getting drawn to her beautiful eyes. She looked like she was clad from head to toe in some kind of a shimmering lace that still left the important parts free.\n\n\"Greetings, Zalen. After you nearly stole my priestess from me I couldn't really turn down Vivariel's invitation, could I?\"\n\nThe third arrival was also easy to identify. After all she was way shorter than anyone else in the room. Now what was her name again...\n\n\"Greetings Zuz. The halfling Goddess of Sex and Healing.\"\n\n\"Greetings!\"\n\nDespite her short stature she was quite curvy. She didn't quite have the hips and breasts Dumanna did but they were pretty close and her thinner waist certainly made them more pronounced. She was wearing an outfit that reminded him of the nightgowns he knew some noblewomen used - except it was thin enough to be practically see through and short enough to barely cover her butt.\n\nThe fourth woman Zalen couldn't recognize. Her skin was blue and the air in her direction was clearly feeling colder. Her outfit seemed to made of crystals that had just formed to cover the essential parts and very little else. And she was really tall.\n\n\"Greetings! And my apologies, oh divine beauty. I have to admit I do not know your name!\"\n\n\"Greetings,\" came her reply, sounding cool and certain.\n\n\"She is known as the Lady of Ice and only her own know her true name,\" Vivariel's voice explained from behind him. \"I was really surprised to see her arrive.\"\n\n\"Xudaal was once one of mine. I came here to satisfy my curiosity, nothing more.\"\n\nThe last woman in the room stood out even more than the others. She looked, well, demonic. Her skin was dark, her eyes looked like they were reflecting an open flame somewhere nearby, her outfit was made of long thin strips of black leather with bright red rubies highlighting her curves. She looked like she should have had a tail and horns but neither was there. Her eyes were measuring Zalen.\n\n\"Vivariel stole a succubus from us. I'm here to seduce his boy toy instead.\"\n\nDumanna laughed. \"Sure you are, Empress of Lust! You're here because you wanted a taste of the mortal cock Vivariel's been gushing about!\"\n\nThe demon empress tilted her head slightly. \"Same thing.\"\n\n\"And he might not be that easy to steal away,\" Vivariel smiled. \"You're welcome to try though.\"\n\nAll five were gorgeous in their own ways which wasn't exactly a surprise considering what they were.\n\n\"So which one of us do you find the most alluring?\"\n\nThe others turned to look at the Empress.\n\n\"We're not here to compete, you know,\" Vivariel chided.\n\n\"Afraid you'll lose?\"\n\n\"Never! Especially since he's already mine.\"\n\n\"A little contest might actually be fun,\" Zuz piped up.\n\nThe others murmured their agreement.\n\n\"Well,\" Vana began. \"Since there are six of us, let's make this a six part contest with him as the judge.\"\n\n\"What would the six parts be then?\"\n\n\"Let's say kissing, erotic dance, naughty talking, pleasuring with hands, pleasuring with mouth, actual sex.\"\n\n\"Isn't kissing already pleasuring with mouth?\"\n\n\"Yes, but undressing him isn't allowed during the first three stages.\"\n\n\"And what does the winner get? An apple?\"\n\n\"I don't think we need a price,\" Zuz announced. \"I just want to see your faces when you lose!\"\n\nThe others looked at each other.\n\n\"Deal!\"\n\n\"So we start with kissing,\" Vana continued. \"No hands so you only get to use your mouth!\"\n\n\"You're the hostess Vivariel so you get to go first,\" Dumanna said.\n\nShe smiled, gliding towards Zalen with her hips swaying erotically. She wrapped her arms around Zalen's head.\n\n\"I can still do this, right?\"\n\n\"Sure,\" Vana replied.\n\nVivariel hadn't even waited for the answer before moving in for a long, erotic kiss that made his cock harden.\n\nShe released him much sooner than he would have hoped. \"It's not fair if I win every time,\" she murmured in his head.\n\nThe next goddess to walk to him was Dumanna. She wrapped her arms around his head - but instead of pulling his lips against hers she pulled them to the side - and moved her lips right by his ear.\n\n\"Ooaaahhh... aaahh... aaahhh...\"\n\nHer moan certainly had the expected effect, especially when it was followed by a short and fierce kiss.\n\n\"Nice trick,\" Vana smiled as the dwarf goddess walked away, looking at Zalen over her shoulder.\n\nThe next one to approach was the biggest mystery for him, the blue skinned goddess.\n\nShe moved slowly, seductively. Her lips met his. They felt cold, even icy. Her arms locked behind his back and he groaned as he felt her also wrap her leg around him, pressing their bodies together. And it felt like the crystal garment that was the only thing covering her private parts was beginning to melt!\n\nAfter a long kiss she let go, walking back as Zalen admired her body.\n\nHis gaze quickly moved to the next goddess approaching him - or demoness in this case. The empress approached him like prey, then captured his jaw with her long nails and began playing with his lips. If the Lady of Ice had had cold kisses, the Empress' lips felt nearly equally hot. And intoxicating.\n\nSuddenly she released his lips and with a smooth motion squatted down, pressing her lips against the thin fabric covering his crotch and against the bulge within.\n\n\"Hey!\"\n\nBefore the others had time to protest further she stood up again, heading back to her seat.\n\nAs his eyes were still on her he felt a hand on his chest. Zuz had slipped in front of him and now pushed him back.\n\n\"Sit down, you're a little too tall otherwise!\"\n\nAs his legs hit the chair he fell down on it with the short goddess quickly climbing on his lap.\n\nZuz was certainly quite a divine kisser but what really drew his attention was the fact that she wasn't wearing anything under her short gown. And even though her movements weren't big, they were certainly effective in rubbing against his bulge.\n\n\"Now now, Zuz -\" someone began but the short goddess was already climbing down and heading back.\n\n\"Ah, I guess it's my turn then,\" Vana murmured. She looked at Zalen for a moment - and suddenly pulled the surprised Empress into a kiss instead!\n\nWith Zalen as the audience the two women were now making out in front of him in an incredibly erotic show. The demoness had quickly recovered from her initial surprise and the two were devouring each other in a frenzy.\n\nFinally Vana slipped her finger between their lips and pulled back, the gaze between them still charged with passion.\n\n\"So who won?\" \n\nThe question had come from Vivariel, even though her eyes were still lingering on the duo.\n\nZalen chuckled, noting that so were the others.\n\n\"I think I have to agree with you. As amazing as all your kisses were, Vana wins this one!\"\n\n\"Time for a dance then,\" Vivariel noted, standing up. A tune appeared and the gorgeous goddess began to move.\n\nThe Veil dance was one of the things most Veils were taught at some point and Zalen had seen it a couple of times. Latest from Mirada and Sumi who had been eager to show off their skills after having learned it.\n\nSeeing Vivariel dance it was obvious who had been the first to teach it to the Veils.\n\nIt was amazing just how fluently she could move different parts of her body and how independently they seemed to move. Her dance was drawing his eyes on various parts of her and he groaned out loud when she finally stopped.\n\nAs she walked back to her seat Dumanna walked up to him.\n\n\"Since I know how much you love butts...\"\n\nShe stopped a few steps from him and turned around. Again a tune sprang up but this time it had a much harder beat. The dwarven goddess began to move - or specifically her butt did.\n\nZalen could only stare as Dumanna's fantastic butt began bouncing and doing circles in front of him. It looked damn hot, especially as she was now so close to him that she sometimes brushed against his bulge. He was tempted to just pull down his britches or to grab that sexy behind but he couldn't really do either without spoiling the contest, could he?\n\nWhen Dumanna finally stopped, Zalen groaned again. Whether from disappointment or from relief he could not really say.\n\n\"I need you standing for this,\" the Lady of Ice announced as she walked towards him. As he stood up his eyes were drawn on the crystals covering her essential parts. There were fewer of them now! So maybe they had indeed begun melting during the kissing stage!\n\nAgain a tune began and the blue-skinned goddess began dancing. To Zalen's surprise she was using him like a pole of some kind - both as support when whirling around and as something to wrap around. And given how little she was wearing, having her crotch pressing against his thigh was rather distracting. Or having her bend backwards while using his neck as support. Or having her butt glide along his bulge as she moved from one side to the other.\n\nOnce again he was both disappointed and relieved when the music ended and the icy goddess walked back to her seat.\n\n\"I'm next,\" came Vana's voice from behind him. When had she moved there? And when had she changed outfits?\n\nAlthough it was questionable whether you could call what she was now wearing an outfit - she was now completely naked except for two huge feathers she was using to cover her essential parts. What bird they had belonged to he could not say but it had to have a big one.\n\nOnce again the unseen band began as Vana did.\n\nThe elven goddess was certainly just as skilled at moving her body than Vivariel and she was using those two feathers to make sure he was constantly seeing tantalizing glimpses of her body - but never a full look. \n\nVana was also using the feathers to hide the caresses she was giving Zalen as she danced.\n\nAnd all too soon was the dance over and the elven beauty heading to her seat, now again wearing her previous outfit.\n\nZalen's attention was quickly drawn to the next contestant. The Empress approached him silently as the music began pulsating around him. She pushed him back on the chair, climbing on top of him. Only then did she began her dance.\n\nThe demoness was not even trying to hide the fact that the position left her crotch in contact with his bulge - and the thin leather strips she had covering her crotch had already parted, leaving very little between them. And her dancing was also serving to highlight the fact to him quite well.\n\nShe finally moved back a little, giving his strained britches a little more space. She did however grab Zalen's right hand and surreptitiously slide it between them - and then guiding its fingers right inside her wet entrance.\n\n\"Just waiting for you,\" she mouthed before pulling back.\n\nAs she stood up and began walking to her seat she raised her fingers to her mouth, sucking them with a knowing look. He was highly tempted to do the same, especially since he could still feel her juices on his fingers.\n\n\"It's me then!\"\n\nZalen realized the sound had come from behind him. The next thing he noticed was his chair tilted backwards!\n\nHe had barely time to squeak before the chair was on its back and he was horizontal except for his legs that were still on top of the chair's lower part.\n\nThe next surprise was a lot more pleasant one as Zuz stepped astride his head and began dancing to the energetic beat there. And since she had on only that short nightgown this gave him a really nice view!\n\nThe halfling goddess was certainly skilled at moving her hips. It would have probably looked great from the side but from below it was really erotic, especially once she began doing dips that brought her attractive cooch nearly within his tongue's reach.\n\nWhen Zuz finally ended her dance Zalen groaned.\n\nAs Zuz walked back to her place Zalen's eyes kept following her.\n\n\"As erotic as all your dances were, that one was clearly the winner.\"\n\nZuz smiled and momentarily spread her thighs, giving him one more look.\n\n\"So what's next?\"\n\n\"Talking dirty,\" Vana replied. \"You can only use your words to excite him, no touching. And just to make sure this is just about what we say - Zalen, can you close your eyes for this part? Thank you.\"\n\nA moment later he heard footsteps and Vana's soft voice continued, this time right by his ear.\n\n\"Remember Lady Veriel? You should really go meet her next month. You see, she will be travelling to the elven capital and she would be happy to include you in her entourage.\n\nShe is going there to meet the Queen. And it is a well known secret that the royal maids are quite... eager. They would find an excuse to lure you somewhere and start kissing you.\"\n\nVana's sexy voice continued describing what else the maids would then do, and in quite detail. \n\nThe next voice appearing by his ear belonged to the Empress. Her words painted him a scenario where he'd stumble across two succubi, captured and tied down by band of orcs. He'd surprise the orcs with his spells, sending them fleeing and leaving him with the two captives. Two sexy, helpless captives he could do whatever he wished with.\n\nThe empress even mimicked their moans and quite well at that.\n\nAs she finally left Zalen heard Vivariel's giggle.\n\n\"If you're planning to steal him from me you really should get to know him better first! Let's see...\"\n\nVivariel also began telling a little story how he'd end up captured by a lost tribe of women. Despite their initial suspicions they'd one by one sneak to him to try out his tongue and dick, some during the day, some during the night. From young to old.\n\nFinally a few would free him and then sneak him away for a wilder threesome.\n\nAs Vivariel's story ended just as the tribe's matriarch was about to join in, he couldn't help but groan out loud.\n\n\"See? I told you I know him better than you!\"\n\nVivariel's voice was soon replaced by the one from Zuz.\n\n\"Hi! Say, I know you had quite a bit of fun with the fairies! But what if you became tiny the next time you met Nuni? \n\nShe'd have to slip you inside her bosom to keep you from getting stepped on, and you'd be travelling huddled against her now gigantic breasts!\"\n\nZuz then went on to describe her moans every time he'd begin caressing her nipples and how she'd be forced to slip him inside her panties before meeting her friend. And when she'd find out he'd have to help her out too.\n\nOnce again the story came to an end and another goddess stepped in to titillate him further. This time the voice belonged to the Lady of Ice.\n\n\"Before meeting Xudaal you may have heard someone mention the sexual appetite of moon dragons. It's not exaggerated.\n\nYou see, on an island south-east from these lands live a trio of moon dragons. Every month they kidnap a new man from one of coastal cities and use him for their pleasure before taking him back.\n\nThey would love to finally find a stud like you!\n\nRemember how Xudaal goes crazy after her first orgasm? Now imagine three like her!\"\n\nWith Zalen still imagining just how that would play out another voice had replaced the previous one. Dumanna's.\n\n\"You remember how Umaru hinted you should return to Um-Barrad when you had the chance? Well, she has something of a plan for when you do.\n\nShe's been planning to find out just how many secluded spots there really are in the city where you could go for a quickie without anyone noticing.\n\nSo she was hoping to take you on a tour around the city, wearing nothing underneath her dress, and fill out her map of pleasure.\n\nAnd she can be a bit... insatiable. Do you think you could help her out?\"\n\n\"That's everyone then,\" Vana's voice announced. \"You can open your eyes and choose the winner!\"\n\nZalen opened his eyes again, blinking a few times to get them used to the light again.\n\n\"Now this is a hard one. There were so many great ones. But I think... I'll choose Vivariel this time.\"\n\n\"And I actually do know of a lost tribe like that,\" Vivariel replied with a wink.\n\n\"So hands are now free game?\"\n\nVana answered Dumanna with a nod. \"And you can take off his clothes if you wish.\"\n\n\"Perfect,\" Dumanna murmured. \"Come here,\" she beckoned, climbing to sit on the large bed.\n\nAs he walked up to her she smiled and helped him undress. With his hard cock now free she moved backwards and tapped on the bed next to her.\n\nHe followed.\n\nAs he stopped next to her Dumanna's hands reached towards his dick - but instead grabbed his right hand and guided it between her thighs.\n\n\"I want it inside me,\" she murmured, leaning back with her thighs wide apart.\n\nHe was more than happy to oblige, pushing two fingers inside her. She was just as hot inside as the last time.\n\n\"More...\" she whispered.\n\nA third finger. \"More...\"\n\nA fourth. \"More...\"\n\nA moment later he had his whole fist inside her hot cunt.\n\n\"Ooohhh my... So good... Now fuck me with it!\"\n\nHe would have done that soon even without her request. With her hot cunt squeezing his hand he began pumping it in and out of the curvy dwarf, with her moving her ample butt towards him with each stroke.\n\nAnd she was quite vocal as well.\n\n\"Ooh yes... yess... OHHhhh... just like that... harder... ooh YESsss...\"\n\nTheir steamy activity was finally halted by a significant little cough from Vana.\n\n\"Already? Oo, I wish the time had been a little longer,\" Dumanna murmured as she pulled away. \"That felt so amazing...\"\n\n\"So will this,\" the Lady of Ice whispered from behind him.\n\nHe felt her icy kiss on the back of his neck, her hands wrapping around his chest - and her soft, cool breasts pressing against his back.\n\nA moment later he felt another pair of hands began caressing his lower stomach but when he looked down there was nothing there. And a moment later he felt a third unseen pair begin caressing his hard cock.\n\n\"Extra hands?\"\n\nThe goddess behind him answered Vivariel's question with a chuckle.\n\n\"They're my hands but just a little forward in time.\"\n\nIt took him a moment to understand what she meant, but once her real hands moved to caress his lower stomach it finally dawned on him. The unseen hands were indeed showing him a preview of what her real hands were about to do a little later. They all felt exactly the same though, all equally firm and cool.",
        "He couldn't really say which felt better, the three pairs of hands caressing him or her soft body squirming against his back. The rest of the crystals covering her had clearly melted as he could feel nothing like that between them anymore.\n\nFinally the first pair of hands vanished, followed a little later by the second pair. The reason came clear when Vivariel's voice interrupted the cool caress.\n\n\"I think it's my turn now.\"\n\nWith the Lady of Ice moving aside Vivariel crawled in front of him. She stopped, looking at Zalen's erect cock - and then slowly spread her thighs, beginning to caress herself in front of him.\n\n\"You've made me so wet...\" she whispered. The squelching sound coming from her fingers as they pushed inside her confirmed her words and made Zalen groan out loud. \n\nIt was also clear she was quite enjoying having his eyes on her, along with everyone else's. Her caresses were quickly turning from slow seductive to hard and needy.\n\nJust before hitting her peak she stopped, giving Zalen a wink. \"I want to wait for you...\"\n\nTheir shared look was interrupted by a curvy halfling figure.\n\n\"My turn now.\"\n\nShe pushed him on his back, grabbing a hold of his hard cock. She climbed on top of him, aligning her cunt with his rod and slid down - but stopped right before the tip would have touched her crotch.\n\nShe began moving up and down. His hard member slid in her grip and as she was making sure to keep her delicious looking cunt aligned with him, he couldn't help but imagine his cock sliding inside her.\n\n\"Oo, I think I want you like this now,\" she murmured, whirling around on top of him. She tilted his cock forward, now backing her butt towards him. Again she stopped just before actual penetration, using only her hands as the rules demanded.\n\nHer erotic show was finally cut off by the dark shape of the demon empress.\n\n\"Time's up.\"\n\nZuz gave Zalen a wink over her shoulder and was about to head to her seat but the Empress stopped her.\n\n\"You're not going anywhere yet,\" the demoness murmured and began caressing the halfling goddess!\n\nThe demonic beauty was certainly quite skilled as well, with her smaller target quickly beginning to squirm and moan under her caresses. \n\nHer administrations didn't look that gentle either. More than a few times he found himself wondering whether she was getting a little too rough. But as the halfling never made a move to stop her or pull away he just watched and listened to Zuz moaning in pleasure.\n\nBy the time the Empress finally pulled away the halfling goddess looked quite razzled and it took her awhile to turn her eyes towards Zalen again.\n\n\"This was about hands but do you mind if my use my feet instead?\"\n\nThe question made Zalen turn his attention back on Vana who was looking around.\n\n\"No objections then. Good.\"\n\nUse her feet? How?\n\nHe got his answer quickly. Vana had moved closer and before he even noticed her feet had begun caressing his cock.\n\nWith the strange, diaphanous material covering her legs their touch certainly felt like a new experience for him. And with the skill she was displaying with her feet it was certainly a pleasurable one.\n\n\"Feels good, doesn't it? So soft... I know you like looking my thighs... What about these?\"\n\nVana emphasized her question by raising her chest a little. \"They're just waiting for your touch. Just like this...\"\n\nShe spread her thighs to provide him with a glimpse between them.\n\nAnd so she continued, caressing his thick rod while talking more and more naughty.\n\nFinally she pulled her legs back, crawling again to her place. \n\n\"So... who won this time?\"\n\nZalen blew out a breath. \"A hard choice again.\"\n\nHe had raised his hand to scratch his beard and his nose picked up Dumanna's smell from his fingers. He smiled.\n\n\"But I think I'll have to say Dumanna this time.\"\n\nShe bit her lower lip and gave him a sultry look in response.\n\nZuz had finally recovered properly from her earlier treatment and was now crawling towards Zalen.\n\n\"After all that teasing I think you deserve this,\" the halfling goddess murmured, leaning down to engulf the tip of his cock with her mouth.\n\nDespite her small size Zuz's oral skills were quite - well, divine.\n\nHe was even more surprised when Dumanna moved closer to join them! And a moment later so did Vana!\n\nSo now there three mouths alternating on his cock and every now and then kissing each other right above it. It both felt and looked divine.\n\n\"You were right Dumanna,\" Vana muttered,\" This is a gorgeous cock!\"\n\nHe wasn't sure whether he felt more disappointed or relieved when the trio finally moved back. He had a feeling he wouldn't have lasted long under the trio's care.\n\nThe next one to approach him was the Empress. She took one hungry look at his thick cock but then moved her hand behind his head.\n\nGrabbing a firm hold he pulled his lips between her thighs. And the next thing he noticed he was already on his back, the demoness riding his face, murmuring demands to lick her. He was happy to oblige.\n\nHe was even more happy when he felt another cool crotch pressing against his left calf and an icy mouth capture his cock again.\n\nA moment later he felt another crotch settle on his other calf and another pair of lips joining the first one.\n\nHe groaned. Instead of two mouths there were suddenly four! Three icy ones and one normal one. Apparently the Lady of Ice was again using her time trick to triple her oral caresses, using Vivariel's mouth to warm him back up in between.\n\nAnd if this wasn't enough both goddesses were grinding their crotches against his legs.\n\nDespite these Zalen was doing his best to focus on pleasuring the demonic beauty above him. And based on the increased amount of moans between her words it was having the desired effect.\n\n\"Lick me... Unnh... Harder! Just like that! Aahh... Your tongue in now mine. Unnh... Gaah... For my pleasure. OOhh... Suck it! Yess...\"\n\nAs the trio finally pulled back Zalen was left shaking his head.\n\n\"Whooh. How am I going to pick a winner after that?\"\n\nHe moved his hand to touch his dick. It still felt cool.\n\n\"Oh, all right. The Lady of Ice wins this one!\"\n\nThere was a hint of a smile on her lips and she arced her back a little, emphasizing her breasts.\n\n\"The last event then,\" Vana announced. \"And no more restrictions except the time limit.\"\n\n\"Good.\"\n\nThe reply had come from the Lady of Ice who was now moving towards him.\n\n\"Finally...\"\n\nWrapping her cool fingers around Zalen's cock she climbed astride him. He gasped as she engulfed his cock. Damn she was cold down there! Compared to Xudaal it was like the difference between standing in the snow naked and doing so in a blizzard.\n\nAs she pulled up again he felt a hand wrap around the base of his cock and a warmth spreading from it. As the hand released its hold the freezing cunt engulfed his rod once more but this time it just felt cold, not painfully so.\n\n\"Just to make sure you don't freeze him until I get my chance,\" Zuz explained from behind the blue buttocks.\n\nCrooning quietly she began riding him properly. Her hips were swaying from side to side as she rode, her hands were caressing her beautiful breasts, her eyes locked on his and making it hard to decide just where to look.\n\nThis time she wasn't really using any special tricks to ensure she'd win but instead it felt like she truly just enjoyed this chance to get him inside her.\n\nAnd it was truly enjoyable for both of them. Her croons had given way to moans, her movements becoming more and more passionate, her cold cunt riding his cock with an increasing fervor.\n\nThe icy beauty suddenly slowed down though, then leaned in to give him a long kiss. \"We can continue this later...\"\n\nAfter that she stood up in a fluid motion.\n\nThe cool goddess had barely taken a few steps before a pair of breasts blocked his view.\n\n\"Stand up and carry me!\"\n\nZalen wrapped his arms around the petite goddess, lifting her with him as he climbed back to his feet and out of the bed.\n\nZuz gave him a kiss and then smiled. \"Just hold me and I'll handle the rest!\"\n\nAs the halfling had climbed on his lap his cock had gotten trapped between their bodies. Now she suddenly flexed her body, guiding the tip of his rod to her wet entrance.\n\nThen she went wild.\n\nEven though she was short and light Zalen suddenly had his hands full just trying to hold Zuz. Her feet were squeezed against his sides, her hands were holding on to his shoulders, and with his hands holding her up she was free to move the rest of her body anyway she wanted.\n\nCompared to Nuni her cunt was devouring his dick with ease and although he suspected she was only riding the top half of it, with the crazy way she bounced against him there was really no way to tell for sure.\n\nCompared to the soft moans of the Lady of Ice she was also quite vocal, unleashing all kinds of moans as she made full use of his cock.\n\n\"Ooh... aah... FUCK! Hrrh... yess... Mwah... \"\n\nOn and on she bounced until someone coughed. She suddenly slowed down. \n\n\"Damn this time limit,\" Zuz muttered, wiggling her hips one last time against him. She planted her legs against his chest and pushed herself away, surprising Zalen with a neat little backflip out of his arms.\n\nBefore he had time to say anything Vivariel was already guiding him back towards the bed.\n\n\"Sit there,\" she murmured, pointing towards the edge of the bed.\n\nHe did so and the curvy goddess spun around, moving her butt right above Zalen's cock.\n\n\"Dumanna's dance looked kinda fun,\" she purred - and dipped her hips to engulf him, beginning to immediately move her butt like the dwarven goddess had done.\n\nHe groaned. Dumanna's dance had certainly looked arousing but she had still just brushed against his crotch every now and then. Now that he was inside Vivariel the dance was even more captivating. He did quickly peek at Dumanna who had a broad smile on her face and was now clapping the beat for Vivariel but then his eyes were again drawn towards the sexy butt doing bobs and shakes on his hard cock, sometimes with just the tip inside her, sometimes with him a lot deeper.\n\nStill, all too soon she also slowed down, then raised her butt off his lap.\n\nHe felt someone bite down lightly on his earlobe. As he turned around he saw the Empress behind him. She was on her knees but her eyes were full of challenge.\n\n\"Do you want me next? You can take me, but only if you pin me down!\"\n\nA good thing he had been training with Kity then. Whether that would help him much against a higher demoness was of course a different question but would she even want to win?\n\nTheir hands met and the epic wrestling match began. She was fast and strong and every time he managed to get a good hold of her she let out an erotic moan that distracted him just enough for her to break his hold.\n\nHe quickly changed tactics. Instead of trying to wrestle her down he now just tried to grope her - tweaking her nipples, slapping her butt, pulling her hair just to get to lick her neck for a moment. And it was clearly working.\n\nHe finally managed to score a hold with one arm that allowed him to grope at her butt with the other. And as her own movement happened to push his finger inside her butt she let out a vocal moan - and lost her concentration long enough for Zalen to pin her body down completely.\n\nA moment later the Empress let out an even stronger moan as his cock began pushing inside her.\n\n\"AAH... Just how many goddesses have you been inside?\"\n\n\"Umm, six?\"\n\n\"Six? Oooohhhh... \"\n\nHer appearance suddenly changed and he was suddenly on top of the buxom tavern maid he had been ogling in the nearby town.\n\n\"Now take me hard!\"\n\nShe even sounded completely like her - not that he'd heard the tavern maid say quite those words, but still.\n\n\"And tiimeee...\"\n\n\"Curses!\"\n\n\"Hey, you can only blame yourself,\" Dumanna chuckled. \"You're the one who had him first wrestle you down!\"\n\nAs Zalen had rolled off the Empress, Vana was already waiting beside him. She turned her head towards the Lady of Ice.\n\n\"You gave me an idea,\" she murmured.\n\nShe leaned over to kiss Zalen - and when she pulled back there were now three Vanas smiling at him.\n\nHe was now sitting on his legs and one of the three elves promptly turned around, backing her butt towards him on all fours. A second one grabbed his cock, guiding it inside the approaching pussy. She then stepped astride the other clone, pulling his head gently between her thighs.\n\nThe third one had slipped behind Zalen, using her body to rub against his back and her hands to caress his sides and chest.\n\nUnlike with the Lady of Ice the three Vanas did not seem to be time-separated versions of her. And all three certainly felt equally real, at least based on the two cooches he could feel around his cock and against his tongue.\n\nAnd the pair of breasts against his back felt just fine as well.\n\nAll three Vanas also felt equally lustful, equally hungry for pleasure. While the first Vana's hips continued their skillful dance against his cock he did his best to satisfy the two others with his mouth and hands.\n\n\"And tiiime...\"\n\nWith a wistful sigh the trio pulled away from him, then seemed to merge into one.\n\nZalen didn't have much time to recover though as Dumanna immediately moved up to him and wrapped her arms around his neck.\n\n\"I don't really care if I win or not at this point. I just want your cock inside me! Now lay down...\"\n\nAnd indeed, a moment later the dwarven goddess was on his rod, riding him enthusiastically. True to her word she wasn't even doing anything special, just enjoying the opportunity and him inside her.\n\nStill, he loved every moment of it, her expression, her breasts bouncing along with her movements, her hot cunt engulfing his cock again and again.\n\n\"Time.\"\n\nAs the dwarven goddess moved away from him Vana spoke up.\n\n\"Soo, who won this one?\"\n\nZalen looked around, then chuckled.\n\n\"These just keep getting harder to pick every time! Umm... I think I have to pick the Empress this time. Even I was highly tempted to just keep going!\"\n\nThe demonic beauty smiled, giving him a wink.\n\nVana's lips quirked into a half smile. \"Well, aren't you the diplomatic one. Now everyone has won an event and the score is tied!\n\nSo if we want a winner for this little contest you'll have to pick one directly!\"\n\n\"Vivariel,\" Zalen announced without hesitation. \"You're all incredibly sexy but my heart still belongs to her.\"\n\nVivariel's smile looked genuinely happy. She then turned to grin at the Empress.\n\n\"Told you I'd win!\"\n\nThe demoness rolled her eyes.\n\n\"Ah who cares, we're all still going to fuck him now anyway!\"\n\nTo Zalen's surprise the first one to claim his cock turned out to be the Lady of Ice who climbed on his lap, sliding her chilly cooch on his hard cock and thrust her beautiful breasts against his face.\n\nAs the icy goddess began riding him he noted that the Empress had decided to settle her loss by putting Vivariel's lips and hands to good use.\n\n\"Whoa, is she that close already?\"\n\nZuz's question made Zalen turn his eyes back on the Lady of Ice who was now grinding hard on his cock. Her expression was indeed one of sheer pleasure.\n\n\"This little contest was clearly a great idea, looks like I'm not the only one who's already really worked up,\" Dumanna added, then frowned. \"O-oh...\"\n\nThe Lady of Ice hit her peak. She let out a loud roar - and not only did her eyes suddenly turn draconic but half of her skin suddenly went scaly and a pair of silvery wings sprouted from her back.\n\n\"Quick, help me out,\" Vana barked, moving towards the draconic goddess.\n\nDumanna and Zuz nodded, doing the same.\n\nThe reason for their reaction became evident as the Lady of Ice went - well, feral.\n\nHer nails that now felt like claws had sunk painfully in his shoulders, her cooch suddenly felt like it was flooding his whole lower body with ice and with the way it was squeezing down on his cock it felt like she was trying to use her hips to rip his dick out.\n\nA moment later the other three were there.\n\nOnce again he felt Zuz wrap her hands around the base of his cock, the warmth from them cutting off the freezing cold.\n\nThe other two descended on the Lady herself, Dumanna beginning to pleasure her breasts and neck while Vana apparently slipped a finger inside her tighter hole while using her free hand to slap her buttocks.\n\nNeither was enough to stop the draconic goddess' rampage though. This was certainly not the first time he'd been ridden hard but this was the first time he'd felt this much in danger from it. It was like his cock was being used for pleasure by a wild beast and one wrong move could mean his end.\n\nThe Lady soon came again. Then a third time.\n\nWith the three goddesses caressing her in addition to the pleasure brought by his hard cock she was coming again and again. \n\nBy her fifth or sixth orgasm she finally calmed down. Her nails released their grip on his shoulder, her eyes and skin returned to normal, her wings vanished.\n\nThe Lady of Ice turned her eyes on Zalen again - and she actually blushed!\n\n\"My apologies,\" she mumbled, gently touching the wounds left by her claw-like nails.\"I can heal these.\"\n\n\"No need to. They're something to remember you by.\"\n\nTheir eyes met again.\n\n\"Enough with that already,\" the voice of the Empress interrupted. \"Now get off him, I want him next!\"\n\nAs the Lady of Ice climbed off him the Empress suddenly changed appearance.\n\nAs she stepped to stand astride him, she was suddenly looking like a queen of some jungle tribe, with a skin that was even darker than Kity's except that it was also adorned with white, short, painted stripes, thighs that could only be described as voluptuous and a butt to match.\n\n\"The jungle will test you now,\" she intoned before mounting his cock.\n\nShe didn't get to do much more than that before Dumanna and Vana suddenly pulled her off him, pinning her elbows to the ground.\n\n\"Come, take her now!\"\n\nTheir move had indeed left the 'jungle queen' with her curvy butt up in the air and pointed towards him.\n\n\"The jungle will claim you all, you will - mwwaahhh...\"\n\nWhatever she may have been about to say was cut off by her moan as Zalen's cock impaled her dark cunt.\n\n\"Now if only someone would do that to the real Queen of Suban,\" Vivariel murmured from somewhere behind Zalen.\n\nWith Vana and Dumanna holding her in place the Empress quickly resorted to a another way of throwing him off.\n\nInstead of the jungle queen he suddenly found himself fucking a street rat - a young woman wearing little more than rags. His cock was plunging inside her through a tear in her muddy britches.\n\n\"Aahh... Please mister, your cock is too big for me!\"\n\nZalen blinked and slowed down. That was all the distraction the Empress needed and in a flash she had ripped free from Vana and Dumanna and rolled Zalen underneath her.\n\nThe figure now on top of him looked like elven royalty.\n\n\"Let's see if you truly are worthy or your reputation,\" the elf announced, sliding on his cock. \"Why it is - ohhhh...\"\n\nThis time she had been interrupted by Vana who had gone after the spot below her ear with her tongue.\n\nDumanna wasted no time wrestling the 'elf' down again.\n\nNeither did Zalen and a moment later he was both on top and inside her.\n\n\"Oh lord, can my old cooch even handle such a cock,\" she gasped, now suddenly looking like a grey-haired old matron.\"Ohh lordy, what a young stud!\"\n\nDumanna chuckled at the sight unfolding in front of her. \n\n\"I don't think your trick will work twice.\"\n\nIndeed, this time he hadn't even slowed down and was plowing the 'matron' just as eagerly. \n\nAgain the Empress changed, now looking like a half-orc.\n\n\"Urrr... bang me harder!\"\n\n\"She's too vain,\" Vana noted. \"Even her old crone still looked too sexy! She just can't stand actually looking unattractive.\"",
        "As her moans were growing stronger and stronger the Empress finally returned to her own shape.\n\n\"Fuck me,\" she whispered.\n\n\"I can't hear you...\"\n\n\"Fuck me!\"\n\n\"You really want it?\"\n\n\"Fuck me hard! Make me CUM!\"\n\nWhen her orgasm finally came, it was almost explosive.\n\nHer moan came in a short, loud burst and her body arced so fast that it threw him off her.\n\nAs the Empress lay there gasping he sat up, feeling a joint kiss on his cheeks.\n\n\"Now it's our turn,\" Dumanna and Vana whispered, their hands grasping his cock.\n\nAfter that the rest became like a long, sexy blur. He lost count how many ways they fucked and and he wasn't even sure who he finally blew his load inside. But when he finally did it was like all the strength had finally left his body and he could barely even move anymore.\n\nWith Zalen now laying exhausted on the ground things were finally calming down around him as well.\n\n\"I think we've worn him out,\" Zuz remarked.\n\n\"I think we have.\"\n\nZalen felt icy lips against his own.\n\n\"I'm... Lizanna,\" the soft voice whispered.\n\nZalen opened his eyes to see the Lady of Ice walking away and then vanish into a glimmering portal. Once she had walked in the portal disappeared as well.\n\nA pair of eyes beside him pulled his gaze towards her. Alluring, almost hypnotic.\n\nThe demon empress wrapped her thigh around him, pulling him closer for a kiss.\n\n\"Come with me...\" she whispered in a voice that felt like a caress.\n\nZalen shook his head. \"That wouldn't be fair to my wives. Or Vivariel.\"\n\n\"Told you,\" Vivariel piped up.\n\nThe Empress smiled. \"I only promised to seduce him. I didn't say it would happen today. We will meet again.\"\n\nShe planted one last fierce kiss on Zalen's lips. When he opened his eyes again she was gone as well.\n\nZuz, Vana and Dumanna had stood up as well.\n\n\"This was fun,\" Dumanna announced.\"I hope you'll attend the next Festival again!\"\n\n\"And the next Party of Masks,\" Vana added. \"You were quite entertaining at the last one!\"\n\nZuz looked at the other two, faking a pout. \"Bah. I don't have a suitable event to lure him in.\"\n\nVivariel chuckled. \"I'm sure he'll eventually visit the halfling lands as well.\"\n\n\"He'd better! Or I'll have to drag him there myself!\"\n\n\"And thanks for the invitation, Vivariel,\" Dumanna added.\n\nAfter that the trio left.\n\nWith everyone else gone Vivariel was laying next to Zalen, her fingers idly caressing his dick.\n\n\"Would you like to become a demigod?\"\n\nZalen turned to stare at her.\n\n\"Huh?\"\n\nThe goddess smiled.\n\n\"Yeah, you heard me. I could share part of my power with you. You'd become my lover and live forever. And there would be... other advantages.\"\n\nAn image of a long line of willing women waiting outside a temple popped in his head.\n\nZalen shook his head.\n\n\"I don't really want to live that long. I'd rather grow old together with my wives. I'd be happy to be your lover if you wish but I'm quite happy with my current life as it is.\"\n\nVivariel shrugged. \"I thought you might say that.\"\n\nShe smiled. \"I'd better keep sex with you a rare treat then so I won't accidentally turn you immortal!\n\nBut actually our little orgy just now did already have one permanent effect on you.\"\n\n\"Which is?\"\n\nVivariel tapped his cock. \"No matter how old you live, you'll never have trouble performing in bed.\"\n\nZalen looked at the goddess with a smile.\n\n\"Thank you.\"\n\nHe was silent for a while. \"What's next? Do you have another quest lined up for me?\"\n\n\"Not yet. In six months you'll be going on a sea trip but until then you are free. There'll be plenty of visitors coming to the grand temple or you can go visit some of the friends you've made. Or just spend time with your harem.\"\n\nHe nodded. Then his eyes were drawn to her hands again as they had returned to caress his rod. And it didn't feel just idle anymore. He smiled.\n\n\"Want to go for one more round, just the two of us?\"\n\nThe goddess smiled, giving his thick member a squeeze. \"I thought you'd never ask!\"\n\nEpilogue\n\n\"Are you sure about this?\"\n\nXudaal answered his question with a nod.\n\n\"We talked it over. I know quite well just how amazing you felt after you'd had sex with a goddess. After an orgy with six? Even Di was too afraid to try. I'm the only one who can handle it.\"\n\nZalen nodded. \"Very well.\"\n\nShe turned her head forwards, beginning her transformation back to her real form.\n\nA moment later, instead of the elven skin there were now the silver scales of a moon dragon. His own growth spell took hold, making him a similar size.\n\n\"I'm ready,\" Xudaal whispered.\n\n\"Here I go,\" Zalen replied, moving his hips forward.\n\nFar from the coast a ship was making its way towards its next port. A sudden sound made all the sailors stop what they were doing and stare towards north.\n\n\"What 'n the Six Seas was that?\"\n\n\"I say it was a dragon!\"\n\n\"But... that was no roar. A moan it was, that I can bet my rum on!\"\n\n\"You know what they say - a dragon's moan at night, a sailor's delight!\"\n\n\"That's not how the saying goes, ye baboon's butt!\"\n\nBesides the squabbling sailors there were two others on the deck, one of them carrying something round wrapped in a cloth. Coryel and Darnac turned to look at each other.\n\n\"Zalen?\"\n\n\"Zalen.\""
    ],
    "authorname": "Zalminen",
    "tags": [
        "sci-fi",
        "fantasy",
        "harem"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-harem-tales-vol-03-ch-14"
}