{
    "title": "Cuntlet",
    "pages": [
        "(Author's note: Oh, hello! It's you again - Good to see you! I've just remembered that in the first chapter of my autobiography...\n\n [That was 'Some Day, All This Will be Yours' - Ed.]\n\nYes... well, as I was saying... In there, I promised I'd tell you about learning to masturbate. Well, here's the story, although it didn't turn out quite the way I expected. And in case you are wondering, no one under the age of eighteen (years, that is) engages in any sexual activities in this story... Perish the thought!)\n\n ***\n\n My parents were away on one of their frequent trips, and they had packed me off to stay with my Gran (whom I just adored) in her cottage in the country. You're right!... It was the same ramshackle old house she left to me when she died. Oh, how I miss her!\n\nIt was a beautiful evening in early summer, and the setting sun was bathing the fields and trees with a gorgeous rosy glow. I'd had my dinner, done the washing up, finished my homework, and there was nothing worth watching on TV (So what else is new?). I kissed my Gran goodnight and went early to my room.\n\nOh, I bet you'd like to know how old I was. Let me see...I must have been about...\n\n[Eighteen - Ed.]\n\n [Who are you? And what are you doing in my story? - Author.]\n\n [I'm your editor; and believe me, you were eighteen or more.]\n\n [There, were you? Hiding in the closet, maybe?]\n\n [No, but if you want this story to see the light of day, you were eighteen, minimum. Trust me, I'm an editor and it's my job to know these things.]\n\n [I don't get this...One, this is not a story; it's another chapter in my autobiography. And two, you're a complete stranger who claims to know when I first learned to masturbate. Give me a break!]\n\nAnyway, as I was saying before I was so rudely interrupted... I was about [eighteen - Ed.] at the time...\n\n[I cannot write if you keep on butting in all the time!]\n\n [Do you want this to be published or not?]\n\n [Of course I do. I really enjoy writing about sex, but only if someone's going to read it. And before you ask: No... my brother doesn't count as someone.]\n\n [Well then... either you were eighteen or older, or you must stop right now!]\n\n [Get real! I don't believe there's anyone on the planet who didn't discover masturbation before they were eighteen!]\n\n [I didn't. I had a very strict upbringing. My parents used to tie my hands to the bedposts at night.]\n\n [Oh! How awful! You poor guy... Umm, you are a guy, aren't you?]\n\n [I am.]\n\n [So when did you learn to masturbate?]\n\n [Umm...Not until a couple of years ago. I was twenty-three, would you believe?]\n\n [Jeez! You must have been chewing the carpet and climbing the walls by then!]\n\n [I was; and having wet dreams almost every night...mostly about bondage and rape, funnily enough.]\n\n [Yuck! May I get on with my sto...chapter?]\n\n [Only if you agree that you were eighteen.]\n\n All right... Now I remember! I was eighteen at the time, and being an incredibly late developer, I was just becoming aware of my body. My hairless cuntlet...\n\n[No! Stop right there, dammit! I can see exactly what you're doing!]\n\n [What's that, then?]\n\n [You're putting all these illegal, immoral, and probably fattening thoughts into your readers' heads without actually writing anything actionable. I'm onto you, my girl!]\n\n 'In your dreams!' I thought to myself.\n\n[Mister Ed.... One: I am not your girl; two: you are ruining my story; and three: I think you're a pedantic little prick! There!... What do you say to that?]\n\n [.......]\n\n [Hello...Mister Ed., are you still there?]\n\n [......]\n\nHmm, maybe he's given up and gone away at last... Hello, Mister Ed.? Anybody there? Testing, testing... cuntlet, hairless cuntlet... Come in please!\n\n[Ma'am, after that last exchange, your previous editor stormed out of the office, saying that you are, without a doubt, the most impossible author with whom he has he's ever had the displeasure of working. And on top of that, he simply hates being called 'Mister Ed.'! (I should add that he took 'pedantic' as a compliment, but he felt that 'little prick' was below the belt! (Ha! And who says that editors don't have a sense of humor?))]\n\n[So who the hell are you?]\n\n[I'm your new editor; you can call me Ned.. I hope you and I can get on better than you and Ed. ever did.]\n\n[Well, so do I, Ned.; why don't you start by telling me exactly what I must avoid?]\n\n[Okay... Rule one, no bestiality.]\n\n[What?!... not even with snails? I'm working on this great story about a sixteen-year-old virgin and her pet snail...It's called 'Snail Male'.]\n\n[Absolutely not! That one also violates Rule two: no sex whatsoever under eighteen.]\n\n[Months or years?]\n\n[I can see why Ed. walked out on you! Come on... Be reasonable! It's for the lawyers, you see...]\n\n[Oh, you mean no lawyers ever have sex under eighteen. Well, that I can believe. In fact I've known some who have probably never had sex in their entire lives! Not even with snails. All right, now I know the rules. So... May I use the word 'cuntlet'?]\n\n[Er...cutlet?]\n\n[You're as bad as my spellchecker! No!... 'Cuntlet'. C, U, N, T, L, E, T. Got it?]\n\n[What does it mean?]\n\n[Can't you guess? Henry Miller used it to describe the...er... the pudenda of a not-yet-ready-for-prime-time young lady who was... well, never mind what she was doing; I don't think you'd approve. Anyway, may I use 'cuntlet'? Please? Just by way of paying homage to Henry Miller...?]\n\n[Well, I suppose so... Provided its owner is eighteen or older. But no snails and no underage lawyers!]\n\n[An eighteen-year-old me with a cuntlet would be a stretch, if you know what I mean! Perhaps if I were an Olympic gymnast? Just imagine what their contortions do to their poor cuntlets! Okay, I'll give it a try...]\n\n[Remember, I'll be watching!]\n\n[Like to watch, do you, Ned.? Is that why you became an editor? Turn you on, does it?]\n\n[Stop teasing me and get on with your story...sorry, your chapter. Tell me about your eighteen-or-more-year-old cuntlet...]\n\n[I'll show you if you like, Ned.. Here, I could take off my panties and... Wait just one cotton-picking minute here! Are you a guy?]\n\n[Yes, I am.]\n\n[Are you quite sure? I need to know to whom it is that I am about to expose myself (D'you like the elegance of my grammar, Mister Ned.?)]\n\n[Of course I'm sure. Don't you trust me?]\n\n[Not an inch... Prove it!]\n\n[Well, it's way more than an inch; that's for sure! You know, I'm rather attached to my prick! But how shall I prove it?]\n\n[Umm... Do you Skype?]\n\n[I do.]\n\n[Oh, I just love hearing guys say that! Well, let's set up a Skype link and then I'll be able to see if you're really a guy, and you can see my once-upon-a-time cuntlet. How does that sound? My email address is... [Deleted; I'm keeping this one for myself! - Ned.].]\n\n***\n\n[Talk to me, Ned., while we get this set up.]\n\n [So... what sort of name is 'Conversations'?]\n\n [It's my name, all right? My first name, that is. But you can call me 'Con' - that's French slang for 'cunt'; did you know that? I think that's why I like it.]\n\n [And what's your last name, Con?]\n\n [You had to ask, didn't you? It's 'Topper', all right? My parents had this weird sense of humor...]\n\n [Oh, you poor girl! I bet you got teased something wicked in school.]\n\n [Well, I made that up, actually. You think I'd give my real last name to a complete stranger online? Even if we were about to get naked together? Get real!]\n\n [Fair enough, I suppose. Hold on a minute while I lock the office door. Con... Should we really be doing this?]\n\n [Don't be tense, Ned.; what's past is past. You are my future and you are perfect - pluperfect, in fact! Please don't decline; let's conjugate!]\n\n [Oh, very funny!]\n\n [Don't be sarky! Can you see me yet?]\n\n [Yes, I can! But only from the waist down.]\n\n [Right; and that's the way it's going to stay. I don't want you greeting me in church one day. And by the way, Ned., what we are about to receive may be recorded, for training purposes, you understand! Is that okay with you?]\n\n [Sure. I've always fancied myself as a porn star. Hollywood? Here I come!]\n\n [Open up, then, and let me take a look. Let's see how you measure up. Right... You are a guy, and that's not bad! Uncut, too. What is it?]\n\n [It's my prick, of course! What d'you think it was? And I'm rather attached to it.]\n\n [So you said already. You know, repeating a joke doesn't make it any funnier. I meant how long is it, dummy?!]\n\n [Oh! Sorry... On a good day it weighs in at about seven inches. Which reminds me of what Winston Churchill once said during WW II: 'It will be long; it will be hard, and we will never withdraw!']\n\n [All right, Ned., enough with the jokes. Now, make it long and hard for me, why don't you?]\n\n [Well, show me your pussy, then! Hey!...You are a natural blonde; just like you said!]\n\n [Would I lie about a thing like that? Anyway, have been reading my posts?]\n\n [Reading them? I edited them! And I've had a crush on you ever since I read 'Your Turn'.]\n\n [A crush, is it? Well, thank you, kind sir!]\n\n [So, would you spread your legs a little so I can see your pussy lips? Ahh... that's nice. See what you're doing to me?]\n\n [Hold on... I'll pull my inner lips apart so you can see my clit. Is that close enough for you? Oh, I wish I could sit on that lovely long prick of yours! Shall I tell you how it would feel? See the mouth of my vagina here? Well, your prick begins to stretch that little hole as I slowly - ever so slowly - lower my cunt onto you. Go on rubbing yourself! You can see what it's doing to me... Look how wet I'm getting! With a guy as big as you, I like to take in just the head of your prick to start with, just until the ridge plops into my vagina. Then out again, in again, out again, in again... you know? I love that feeling! Most men can't resist plunging all the way into me, but if I'm on top I can take you just the way I want you. Is that okay for you?]\n\n [I bet you feel like satin in there!]\n\n [Not cotton? Not chintz?]\n\n [That's plagiarism from 'The Wizard of Oz']\n\n [It's not plagiarism, Ned., it's homage! Like 'cuntlet'. Can't you tell the difference? And must you still nedit, even at a time like this?]\n\n [Sorry... Once a neditor, always a neditor. Anyway, would you slip your finger in? Please...?]\n\n [Like this, you mean? What if I lick it now? Hey, catch that drop of your pre-come and taste it for me, would you? How is it?]\n\n [Oh, God! I've never done that before! It tastes salty and slick and yugely erotic...]\n\n [Rub the rest of it over the head of your prick and around the end of your foreskin. And now pull your foreskin all the way back. Oh, I'd like to take that into my mouth! I'd lick all the way round the ridge and then take you as far down my throat as I possibly could. And now that your shaft is wet with my saliva, I'm going to slide your prick back into my cunt like these two fingers and sit all the way down on you... God, you're big! I can feel your balls nestling up against my ass and your wiry pubic hair against my clit; I love that feeling! And would you put your knuckle against my asshole - can you reach it? Never mind, I can. Just to stretch it a little - no, don't go in, just rub around the rim; that's where I'm the most sensitive... Oh, that's heaven! And let me grind my hips down on you at the same time. \n\n With your prick buried deep inside me and your knuckle against my asshole, there's only one more thing I need: I'm going to rub my clit and imagine looking into your eyes as we climb Mount Ecstasy together.]\n\n [You've used that line before!]\n\n [Shut up, Ned.! Just nedit me! Wrap your arms around me like parentheses! Dot my T's and cross my eyes! Sentence me to ecstasy! If you don't like my period, give me an exclamation mark instead! Pump your white-out into me!]\n\n [I'm nearly at the top! Are you with me, Con? Will you come for me, Con? Look out, Hollywood... Here I cum! ... Wham! Bam! Thank you, ma'am!]\n\n [Ahh!... Ned., you gorgeous hunk of faraway prick! I'm coming! I'm coming! Yessss...! That's right! I can feel your penis throbbing inside me, and I can see your semen flying towards the screen! Oops!... What just happened? Ned.... Are you still there?]\n\n [Oh shit! I just ejaculated all over the camera. Can you still see me?]\n\n [Yes, I can just make you out through all that semen you spurted at me! That's a first for me, Ned.: long distance sex with a neditor. And to think that I've got it all on video! I can replay that last bit in super-slow motion over and over again and watch your first gob of semen as it flies towards the screen! There's an Oscar in this, I think! How was it for you?]\n\n [Wonderful! I loved watching the contractions in your cunt as you came. That's what drove me over the top. Well, I guess I'd better get all this cleaned up...]\n\n [Thank you, Ned.. You can nedit me any time you want to! May I publish this one now?]\n\n [Just so long as you delete the bit about sliding your young fingers down over your... [Regretfully deleted - Author.]]\n\n THE END "
    ],
    "authorname": "Conversations",
    "tags": [
        "first time",
        "masturbation",
        "skype",
        "editing",
        "humor",
        "autobiography",
        "ejaculation",
        "sexual internet"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/cuntlet"
}