{
    "title": "Carnal Knowledge Ch. 09-10",
    "pages": [
        "Dear Readers,\n\nThank you for your continued support. I read and appreciate each and every one of your comments!\n\nForgive me for the longer delay for this installment, but Chapter 10 insisted it must go along with Chapter 9, so of course I had to listen, lest Chapter 11 go completely awry.\n\nI am never sure how my story will be received, but I hope you will enjoy this latest bit!\n\nAll my love,\n\nEmmeline\n\n*******\n\nChapter 9\n\nSilence fell again inside the carriage. Eliza stared stonily out the window, and Rockdale sighed.\n\nAnd though he hadn't said a word, her head swung back around to face him, eyes narrowed.\n\n\"Couldn't you have warned me of your plans to deceive everyone? And thus spared me the terror of thinking my mother dying?\" she demanded.\n\nRockdale spread his hands wide. \"I was feeling plagued by unwelcome houseguests.\" He shrugged. \"The idea occurred to me last night, and it seemed to be a reasonable and believable means to accomplish several things I wanted.\"\n\nSeeing her thunderous expression, he shifted on the seat and continued. \"Perhaps...I should have given more thought to your feelings. For this, I do...apologize.\"\n\nHe waited for her reply, but she only nodded curtly and resumed her stare out the window.\n\nNonplussed, the earl sat back against the seat and plucked his hat off. Bloody hell.  He had lowered himself to apologize to the damned woman, and yet she still seemed unsatisfied.\n\n\"You were supposed to be a biddable, docile young woman from the country,\" he muttered irritably.\n\nWithout turning she replied, \"And you were described as a kind, but distant, lord looking for a governess. It seems we were both sorely misled.\"\n\nThey rode in silence a while longer, and Rockdale continued to stew. He was growing a bit tired of Miss Lockhart's haughty attitude.\n\nBored and restless, he found himself staring at her breasts. Even in the confines of bodice and stays, they bounced most charmingly on the uneven spots in the road. He was broodingly hoping for the wheels to find a sizable rut when a soft snore pulled his attention upward.\n\nThe sunlight through the window played over the pale skin of her face. Eliza's head had listed to the side and her eyes were closed. Looked damned uncomfortable to him, but he figured touching her might well get his bloody head bitten off, so he let her be.\n\nHe did notice there were dark smudges under her eyes and wondered if she felt poorly from her illness the night before. A twinge of guilt assailed him. Perhaps he had been thoughtless forcing her to travel after she'd been recently sick.\n\nNothing to be done for it now, he reasoned. They couldn't exactly turn around and go back at this point.\n\nHer head continued to list further over, and he winced. A sore neck surely wasn't going to improve her surly disposition when she awoke.\n\nRockdale cocked his head. Where the creamy skin of her throat met the high neckline of her dark blue gown there were strange discolored spots barely visible...\n\nAlmost before the thought had completed in his mind, his body launched across the floorboard to the opposite seat. He leaned over her dozing form and carefully lifted the fabric of her gown away from her neck.\n\nUnmistakable at close range, bruises indeed bloomed on either side of her throat, almost as though someone's fingers had closed\u2014\n\nBlood began to pound hard and fast in his head. Some person, someone strong by the looks of it, had touched her, hurt her.\n\nHis hands clenched into fists. How could this have happened at Verity Hall? It was supposed to be a safe and secure haven for his children...dear God. Surely if they were in danger she would have told him.\n\nWhy had she not told him?\n\nHe moved back to his own seat across from her.\n\n\"Eliza,\" he said. \"Wake up.\"\n\nShe stirred and opened her eyes slowly, blinking. \"Sorry, did I doze off?\"\n\nRockdale gripped his knees and tried to keep his voice even. \"Darling, who put those bruises on your neck?\"\n\nHer hand flew protectively to her throat, and she swallowed hard.\n\nFury quite unlike anything he had ever felt surged into his chest when he saw her tremble and bow her head.\n\n\"Eliza?\" he prompted, his voice strained. \"Was it Willoughby?\"\n\nShe shook her head and darted a quick look at his face. \"It...it was the footman George.\"\n\nRockdale stared hard at her pale face as he struggled to absorb this information. \"Tell me what happened, every bit.\"\n\nHe waited impatiently while she twisted her hands in her lap. Part of him wished to spare her more unpleasantness, but the black rage controlling him demanded to know.\n\n\"He has harassed me before,\" she admitted. \"He claims to have seen us together. Enough to surmise that we are...\"\n\n\"Lovers?\" he asked bluntly.\n\nShe stared out the window again. \"Yes. I was walking in the gardens yesterday afternoon when he accosted me. I tried to get away\u2014\" \n\nHer breathing hitched, and Rockdale dearly wished to inflict bodily harm upon the man who had hurt her.\n\n\"But you couldn't?\" he prompted.\n\nHer hands wrapped around her abdomen. \"He pulled me behind the shrubberies and...put his hands on me.\" She shuddered. \"He kept saying that he was going to tell everyone what a whore I was, and that Mrs. Biddleton would corroborate his story.\"\n\nRockdale grimaced. \"She is his aunt, I believe. That is possible.\"\n\nThe earl dragged a hand through his hair, rumpling it. \"Dear God. How far...Eliza...did he force himself on you?\" he forced the words out, dread of her answer sickening his stomach.\n\nShe bit her lip. \"He wanted to,\" she said hoarsely. \"He pulled my skirts up but kept babbling about needing to get me in the house.\" She shook her head. \"I didn't understand why he waited, but I'm glad he did.\"\n\n\"How on earth did you get away?\"\n\nA harsh look passed over Eliza's face. \"I butted him with my head,\" she said, nodding. \"And then I rammed my knee into his bollocks.\"\n\nSome relief eased his worry. \"Good girl,\" he murmured.\n\nTears glimmered on her lashes as she angled a look up at him. \"I should have done that to you,\" she said and sniffed.\n\nMoving slowly, he eased back over beside her and drew her into his arms. \"Yes, you should have.\"\n\nShe cried softly for a bit, and he held her close, stroking her back.\n\n\"I would never let him touch me voluntarily, never!\" she said into his chest.\n\n\"I know, darling,\" he soothed.\n\nEliza raised her head to look at him. \"You believe me?\" she whispered.\n\nRockdale laid a hand on her cheek that wasn't quite steady. \"Every thought you have is written plain on your face,\" he said, smiling slightly. \"I think you may be the most honest and true person I've ever known.\"\n\nRockdale frowned at her surprised expression. \"Did you think I wouldn't believe you? Is that why didn't tell me immediately?\"\n\nShe ducked her head and took a shuddering breath. \"I don't know. I was just so shaken by the incident and frightened, too. I didn't know where to turn.\"\n\n\"Eliza, you must always come to me,\" he reproached, tucking a loosened curl behind her ear. \"I can't believe I allowed someone like this horse's arse near you and the children.\"\n\nShe sniffed. \"What will you do about him?\" she asked, looking up at him, uncertain.\n\nRockdale took both her hands into his. \"You are mine,\" he said simply. \"No one else touches what is mine.\"\n\nHer expression was troubled, and he stared into her fathomless dark blue eyes, wondering what she was thinking.\n\nHe pressed her hand over his heart. \"Will you forgive me for not protecting you?\"\n\nHer eyes were wide and serious. \"Yes, but who will protect me from you?\" she whispered.\n\nRockdale had no answer for her and truthfully did not care to dwell upon her question. Somehow this young woman from the country, meant to be used for an amusing romp of bedsport had become quite necessary to him. Her spirit refused to be diminished when, by all rights, she should have been cowed by his greater power and influence over her.\n\nAt turns she drove him absolutely incensed, made him laugh out loud, compelled him to use his wits to spar with her, and not only did he have an almost uncontrollable lust for her delectable body, but he found himself desiring just to have the simple pleasure of being in her company. She made the mundane pace of his days sparkle with a life unlike anything he had ever experienced.\n\nHe pressed a soft kiss to her lips. \"For now, just trust me take care of you,\" he whispered against her mouth.\n\nHe could feel her trembling. \n\n\"You ask too much,\" she said unsteadily. \"You demand everything of me but give nothing in return. How can I possibly trust you?\"\n\n\"You shouldn't, but you're going to,\" he commanded and lowered his head to capture her lips again.\n\n***\n\nEliza turned her face away from the earl's seeking mouth.\n\nHis eyes narrowed in displeasure.\n\n\"I need time to collect my thoughts.\" She took a deep breath. \"I don't know what to think about anything anymore, and you're trying to befuddle me with kisses.\"\n\n\"Is it working?\" he said, lifting his brow.\n\n\"No. Now go back to your side of the carriage. I want to read the letter from my mother.\"\n\nFor a long moment, he stared down at her, and Eliza almost felt sure he was going to press the issue or at least try further seduction, but at last he grudgingly nodded and returned to the opposite seat.\n\nEliza smoothed her hair and with trembling fingers picked up the letter Rockdale had given her and realized it was actually two letters folded together. Opening the first, joy buoyed her spirits to see her mother's handwriting.\n\nDearest Eliza,\n\nI hope this letter finds you well, daughter. How missed you are in this little home! Abigail and Mrs. Wick send their love, as do I. I'm sure you are settling well into life at Verity Hall and are a valuable addition to that grand household.\n\nThe earl must be a kind employer indeed to send a doctor all the way from London to attend the mother of his governess! You cannot imagine my surprise when that distinguished physician arrived at the door of our humble cottage!\n\nI must admit I was resistant at first to his methods of treatment. The gentleman is insistent on daily walks outside to build my strength. Dr. Morgan is quite a stubborn man...and quite a handsome one, too, I must say if you will forgive an old woman's silliness.\n\nIn other news, I should tell you that Mr. Dillingham has sold our cottage and its small property to some distant lord. I was most distressed to learn of this, but Mr. Dillingham has told me not to worry, we will be allowed to stay, and our rent is to be reduced by half!\n\nThings are finally looking up for our family, and it is all because of your sacrifice, dear Eliza.\n\nIf given the chance, please express my gratitude to your generous employer for the thoughtful treatment he has arranged for me to receive from Dr. Morgan.\n\nI pray this letter finds you well and content.\n\nLove always,\n\nMama\n\nEliza snorted. Generous employer my arse, she thought.\n\nShe unfolded the second letter, written from the doctor himself to the earl and browsed the neat, sparse handwriting.\n\n\"He thinks my mother really is improving,\" Eliza said, smiling in delight. \"I can almost forgive you for lying to me. And maybe I even feel a bit grateful to you for sending the doctor from London.\" She paused and looked up. \"I couldn't have arranged that on my own.\"\n\n\"How grateful are you feeling?\" he asked silkily, mouth turning up at one end.\n\n\"Not that grateful.\"\n\n\"Pity,\" he murmured. \"It's a long trip.\"\n\n***\n\nThe day was growing late when the earl's carriage stopped in front of a small townhouse nestled on a quiet street in the outskirts of London.\n\n\"Is this our destination?\" Eliza asked, puzzled.\n\n\"For now,\" Rockdale answered, assisting her out of the carriage.\n\nEliza resisted the urge to pester him for more answers. No matter how many questions she posed, it seemed the blasted man was determined to be vague about his plans.\n\nWith a small sigh, she accepted the arm he offered and let him to steer her toward the front door. She looked over the house with interest and slight trepidation; it had a pleasant, elegant dignity without appearing ostentatious.\n\nEliza halted abruptly and refused to budge another step.\n\nRockdale glanced askance down at her. \n\n\"Is this where you house your mistress?\" she demanded in a whisper.\n\n\"No, there's nothing sordid about the place,\" he assured her with some exasperation. \"I keep a small household here. I find it quite a pleasant escape at times.\"\n\nShe reluctantly allowed herself to be towed along toward the entrance.\n\nAt the door, they were heartily welcomed by an older couple Rockdale introduced as his housekeepers, Mr. and Mrs. Crawley. The pair seemed genuinely pleased to see the earl even as Rockdale apologized for their unannounced arrival.\n\nEliza hovered near the door, stiff and uncomfortable, but the Crawleys raised not the slightest qualm at the sight of her. Mrs. Crawley bustled over, fussing over Eliza as she whisked away her shawl, urging her further into the house.\n\n\"Poor lamb, you look completely chilled!\" Mrs. Crawley exclaimed. \"Let's get you warmed up with some nice tea and a bite to eat.\"\n\nShame reddened Eliza's cheeks, and she kept her gaze on the floor, mortified to be such an inappropriate guest of the earl's. No respectable, unmarried lady would be in his company sans chaperone.\n\nBut as she had no other option, Eliza allowed herself to be directed into a cozy parlor, and within what seemed like minutes, she and Rockdale were comfortably seated across from one another before a warm fire with tea and plates of sandwiches that had seemed to magically appear.\n\nEliza hid her nose in her teacup, breathing in the rising steam before sipping gratefully. The journey from Verity Hall had not been an arduous one, but tiring nonetheless.\n\nGladly, no one seemed to expect her to make conversation, and she found herself becoming rather drowsy absently listening to Rockdale's deep voice as he conversed with the Crawleys.\n\nAfter receiving Rockdale's instructions, the couple rose, leaving them to their supper. Mrs. Crawley gave her a soft pat on the shoulder before she exited.\n\nEliza and the earl sat quietly by the fire for a few moments, eating and drinking their tea.\n\n\"The Crawleys are nice,\" she said, giving him a quick look over the rim of her teacup.\n\n\"Yes, I am very lucky to have them.\"\n\nEliza rested her cup in her lap, cradling the warm china in her hands. \"Do they...do they know?\" she asked hesitantly. Being a woman of loose moral principles was a new and embarrassing concept for her.\n\n\"They know nothing about you,\" Rockdale said. \"And they won't ask, believe me. You are my guest here, that is all that matters.\"\n\nHe stared silently at her for a moment then reached out and took her hand. Both of them had removed their gloves to take refreshments, and his bare skin felt hot and oddly intimate against hers.\n\n\"Here in this house we are simply William and Eliza,\" he said, drawing her hand up to his mouth and gently kissing the back.\n\nHer heart gave a lurch at this courtly gesture despite herself. \"Not Lord Rockdale and his lowly bumpkin governess?\" she queried with a sardonic quirk of her brow, attempting to disguise his effect on her.\n\nHe laughed softly. \"Ever my prickly little dove, aren't you?\"\n\nHis dark eyes seemed to glow with warmth in the flickering light, and Eliza felt strangely disarmed when he turned her hand over and pressed a kiss to her palm. She shivered at the unexpected flick of his tongue and tried to pull her hand away in reflex. \n\nHe held fast to her captive hand. \"Mrs. Crawley is going to show you to your room upstairs. I want you to lie down and try to sleep for a couple hours. I have some things I need to do in the meantime.\"\n\nEliza frowned at him. Sleep now? What was he about? It wasn't even dark outside yet. \"I don't understand,\" she said.\n\nHe raised her hand and laid it against his cheek. \"I know you aren't accustomed to city hours, my dear, but we have a ball to attend tonight.\"\n\n\"Tonight!\" Eliza was aghast. \"I have nothing to wear!\"\n\nRockdale's answering smile immediately made her uneasy. \"You must trust me. You will have everything you need for the masque.\"\n\nEliza chided herself for feeling a bit forlorn and abandoned when Rockdale stood and took his leave a short time later. You're being ridiculous, she told herself. You are not a child.\n\nBut she did feel very alone when Mrs. Crawley led the way up the stairs of the unfamiliar house. The housekeeper escorted Eliza into a large bedroom dominated by a giant wooden bed. Eliza's eyes riveted to it, wondering if she would be sharing this bed with Rockdale. Her mind conjured him, imagining his muscular body sprawled nude over the plush, deep-red counterpane.\n\n\"Here we are, dearie,\" the housekeeper said, drawing Eliza's attention back with a self-conscious jerk. \"Mr. Crawley has already stirred the fire so it's nice and toasty warm in here. Your wee trunk is there by the bed. Shall I help you undress? His lordship says you're wanting a bit of a lie down.\"\n\nThe older woman's kindness was almost her undoing. Eliza cleared her throat as tears threatened. How could this woman treat her so graciously when it was obvious she was nothing but the earl's light-o'-love?\n\n\"Ahh, no. Thank you, Mrs. Crawley,\" Eliza managed. \"I'll be just fine on my own. I'm used to doing for myself.\"\n\nMrs. Crawley beamed and nodded. \"Very good, miss. You just let me know if you'll be needing anything. There's fresh water in the ewer if you wish to wash up. Someone'll be back in a while to wake you.\"\n\nOnce alone, Eliza collapsed on the big bed. How on earth could Rockdale expect her to attend a ball tonight? They had traveled most of the day only stopping to change horses and eat a quick luncheon. She hadn't even packed her one ill-fitting evening gown. What could the earl be thinking?\n\nShe had never been to a ball before...let alone a masque!\n\nHer mind twisted and twirled in morass of unending thoughts and worries of what the night might bring.\n\nStop it, she told herself. Just stop it.\n\nIf Rockdale meant to drag her around half the night and carouse with God-only-knew what kind of people, then she had better try to rest now and worry later.\n\n\"Right,\" she muttered.\n\n***\n\nThe household staff at Verity Hall was gathered around the kitchen table, lingering over the last of their supper.\n\n\"I'm glad those troublesome ladies packed up and left after his lordship did,\" the housekeeper said stoutly.\n\nSimpson frowned but nodded in agreement. Life was certainly simpler when the house was empty of its high-born occupants. But he did wish Mrs. Biddleton would hold her tongue on such matters. It wasn't proper to be saying such things, even with the earl away.\n\nThe butler nearly upended his teacup when the kitchen door loudly banged open. The household's youngest footman stood in the doorway trying to catch his breath.\n\n\"Ned!\" Cook exclaimed. \"I thought ye went along with his lordship!\"\n\n\"I did,\" the young man said, panting. He brandished a folded piece of foolscap in his hand. \"But the earl sent me back the first time we changed horses with an urgent message for Mr. Simpson.\"\n\nSimpson rose at once and strode to Ned's side. \"Well, give it here then, boy.\"\n\nThe butler opened the letter and scanned the contents, swallowed hard and read it again. He pinned Ned with a hard look. \"Did his lordship discuss this with you?\"\n\nThe younger man shifted his feet, looking uncomfortable. \"Yes, sir. He did, sir. He said he wanted it done immediately.\"\n\nSimpson nodded, grim at the prospect of carrying out his lord's wishes. \"Go and fetch Robbie from the stable then.\"\n\n\"What is it, Simpson?\" Mrs. Biddleton demanded as Ned dashed back out the door. \"What's going on?\"\n\nSimpson ignored her and turned to his two other footmen, seated at the table and watching with interest.",
        "\"Oliver, George, I need you both to come with me outside. The rest of you lot stay in here.\"\n\nThe two footmen stood, casting questioning glances at each other.\n\nThe butler sighed when Mrs. Biddleton followed them out the door, wishing he could command the housekeeper to stay in the house. She wouldn't like what was to come, that's for certain.\n\nMinutes later, Ned and Robbie appeared from the direction of the stables. Robbie was unmistakable, even from a distance; the head groom was easily the largest, most muscular man on the entire estate. \n\nSimpson met them a short distance away from the others. Quietly and succinctly, the butler explained the letter, and the earl's instructions to Robbie. The other man looked puzzled for a moment, then broke out in a large grin and nodded.\n\nSighing again, Simpson gestured back at the others. \"George, please step forward, if you will.\"\n\nGeorge complied, scowling darkly as he did so. \"What the bleeding hell is going on, Simpson?\"\n\nRobbie stepped up to meet George, smiling broadly. With no hint of warning, the large groom reared his arm back and punched George in the face.\n\nThe other man reeled backward, stumbling. \"What the devil!\" George yelled.\n\nRobbie shrugged and followed, grabbing George by the coat and jerking him upright. George gaped at him a moment as the groom continued to smile before slamming another fist into the footman's stomach.\n\n\"Christ,\" George groaned, slumping to the ground.\n\n\"Stop! Stop!\" Mrs. Biddleton cried. \"What's the meaning of this, Simpson? Why are you allowing this to happen?\"\n\n\"Stand back, madam,\" Simpson ordered in a voice that brooked no argument.\n\nTo Ned and Robbie, Simpson said, \"Lock him in the stable's storeroom when you're finished.\" \n\nThe butler steeled himself to remain stoic as the groom kicked George viciously in the abdomen.\n\n\"Sorry, mate,\" Robbie said cheerfully. \"It's compliments of his lordship.\"\n\n***\n\nRockdale directed his carriage to take him to the larger townhouse in Mayfair that served as his primary residence in London.\n\nAfter a quick cleanup and change of clothing, he set out for St. James Street where he had a feeling he might find the gentleman he sought.\n\nLord Pelham frequented Rockdale's own gentlemen's club; both men were long time members. Though Pelham was his uncle by marriage, Rockdale wouldn't have said they were particularly close, but their relationship was cordial. If luck was on his side, Rockdale would find Pelham happily imbibing brandy in their mutual club and then successfully convince the fellow that Miles Barlow\u2014Lord Atherton, now\u2014could never make a suitable husband for his daughter, Caroline.\n\nRockdale entered the club, glancing about through the men gathered inside drinking, smoking, and chatting. He nodded to acquaintances, not taking time to stop and speak to anyone.\n\nAt last he spied Pelham through a cloud of smoky haze and made his way over to a table in the back of the social room. Rockdale realized with a jolt of surprise the man sharing a table with him was none other than Atherton himself.\n\nThe two men looked up, startled, when Rockdale halted before their table.\n\nPelham beetled his wiry brows and pulled his cheroot from his mouth. \"Evening, Rockdale.\"\n\nOut of the corner of his eye Rockdale saw Atherton sit up straight and still.\n\n\"Rockdale,\" Atherton said coolly.\n\nRockdale refused to even acknowledge the younger man's presence. \"Evening, Pelham. I need to speak to you privately.\"\n\nRockdale felt a comforting degree of petty satisfaction when Atherton's face reddened at the deliberate snub.\n\n\"Damnation, Rockdale.\" Pelham gestured around the table. \"Why don't you just sit down here and have a drink with me and Atherton? I know full well you two are acquainted.\"\n\n\"Sorry, Uncle, this is a family matter.\"\n\nPelham lifted his brows upon being addressed as \"Uncle,\" and Rockdale shrugged.\n\n\"Oh, very well,\" Pelham agreed at last with a grudging sigh and moved to heft himself to standing.\n\n\"No need,\" Atherton said stiffly and rose. \"I'll leave.\"\n\n\"Well, sit down and quit looming over me, Rockdale,\" Pelham said irritably. \"What the hell is it you need to speak to me so urgently about?\"\n\nRockdale waited until Atherton had walked out of earshot. \"Your wife and daughter recently dropped in for a visit at Verity Hall.\"\n\n\"Don't blame me,\" Pelham interjected. \"You know that woman does as she pleases.\"\n\nRockdale waved a hand in dismissal. \"Lady Pelham informed me that Atherton has asked for your daughter's hand in marriage.\"\n\nPelham took a drink of his brandy. \"What of it? His pockets are rather slim, it's true, but you know how women go into a blather over a title. Caro seems in favor of the match and her mother as well.\"\n\n\"He's a blackguard who bedded my late wife while we were married.\" Rockdale spat the distasteful words in a low voice. \"I also found letters from him after her death where he proposed they run away together.\" \n\nHis uncle shifted uncomfortably. \"If you couldn't satisfy your wife in bed...\"\n\n\"He was supposed to be my friend!\" Rockdale growled.\n\nPelham sighed and avoided meeting Rockdale's eye.\n\n\"I called the bastard out and would have killed him with bloody pleasure the following morning if Isabelle's carriage hadn't overturned\u2014\" Rockdale cut himself off, cursing himself for allowing his emotions to show.\n\n\"Rockdale...\" Pelham began.\n\n\"He was nobody,\" Rockdale said icily. \"He has inherited this title by some twist of fate, and I find it unacceptable.\"\n\n\"You're being ridiculous, man!\"\n\n\"Listen to me, Pelham.\" Rockdale leaned closer, turning a flinty stare upon his uncle. \"I fully intend to ruin Miles Barlow.\"\n\nPelham started to bluster, and Rockdale held up a quelling hand. \"I would dislike hurting Caroline by association, but if I must\u2014I will.\"\n\nThe older man stared back at him with narrowed eyes. \"You're a right bastard, you know that, Rockdale?\"\n\nRockdale stood and smoothed non-existent wrinkles from his evening coat. \"So I've been told.\"\n\n***\n\nEliza dreamt of the earl's laughing face and his warm naked skin sliding over hers as their limbs intertwined. His hand teased at the juncture of her thighs, and she moaned in encouragement, aching for him to touch her intimately.\n\n\"Please,\" she whispered.\n\n\"Miss?\" a voice intruded. \"Miss, it's time to get ready.\"\n\nEliza opened her eyes and groaned as the tapping at the door got louder.\n\n\"Come on now, miss. We have to get you ready and dressed, don't we?\"\n\nEliza pushed unbound and unruly hair out of her face and tried to shake off the explicit dream. Her skin felt hot and sensitive against the blankets that had twisted around her body.\n\nShe extracted herself from the stubbornly clinging bedcovers and found herself gazing up at an unfamiliar young woman. \n\nThe girl looked down at her expectantly. \"I'm Jane,\" she said, grinning. \"You'll have met my mum and dad earlier, the Crawleys, right?\"\n\nEliza nodded and scrubbed at her face with both hands. This girl was far too cheery for her current state of mind.\n\n\"Um, yes,\" Eliza answered, feeling dull-witted. \"I'm Eliza.\"\n\n\"Well, get up, sleepyhead!\"\n\nUnder Jane's bullying, Eliza went to wash then settled down at the dressing table as the other woman instructed.\n\nJane's skills as a lady's maid were not to be disparaged, she soon discovered, as Eliza's hair was brushed, painstakingly curled, and woven into an intricate upswept arrangement with a center part. Golden ringlets framed Eliza's face, and one long curl was left to drape against her shoulder.\n\nJane frowned as she brushed a light hand over Eliza's throat. \"Someone has hurt you,\" she said.\n\n\"Yes,\" Eliza answered with a lift of her chin. \"But I gave him a hard knee in his bollocks.\"\n\nJane nodded. \"Not his lordship,\" she said firmly. \"Does the earl know?\"\n\nEliza met the girls' eyes in the mirror. \"Yes.\"\n\n\"I wouldn't want to be in that man's shoes,\" she said, opening a wooden box painted with flowers.\n\nEliza had never worn cosmetics before and watched with some wariness when Jane produced an assortment of small bottles and boxes. She first applied a light dusting of pearl powder to Eliza's face and throat. The powder enhanced the gleam of Eliza's skin and helped to disguise the ugly bruises on her neck.\n\nJane's deft hand applied a bit of carmine to Eliza's cheeks, a rosy dye on her lips, and subtle eye paint. She finished with a sweep of a burnt hairpin across Eliza's lashes, darkening them.\n\nWhen Jane finally stepped back, Eliza felt almost as though a stranger was peering back at her in the mirror.\n\n\"You look lovely,\" Jane said with satisfaction.\n\n\"How did you learn all this working here with your parents?\" Eliza marveled, still staring at her reflection.\n\nJane laughed. \"Oh, I don't live here with Mum and Dad. I'm a real lady's maid, you see. I worked for Lady Augusta Ashefield for several years, but now she has left to marry some American upstart,\" she said with distaste. \"So, I'm only here visiting until I find another position.\"\n\n\"Oh,\" Eliza murmured.\n\n\"Come now, let's get you dressed.\"\n\nEliza rose reluctantly. \"But I'm sure I have nothing anything to wear,\" she protested.\n\n\"While you washed I laid the clothing his lordship brought you on the bed,\" Jane said, bustling over and sweeping a swath of material off the bed.\n\nHis lordship brought? Eliza's brow wrinkled as she approached the maid curiously.\n\nIn a smooth movement, Jane divested Eliza of her shift and settled what felt like a filmy cloud over her head.\n\nIt was both the strangest and most beautiful garment Eliza had ever seen. \n\nThe material was a pearlescent, alabaster silk, so finely woven it was nearly transparent. The gossamer fabric skimmed and flowed over her body like a living, undulating thing.\n\nIt fastened with a filigree golden clasp over one shoulder like some sort of Roman toga, leaving her other shoulder and both arms bare. The neckline crossed daringly low in a diagonal over her bosom revealing an alarming amount of the side of her left breast. \n\nAs she turned in front of the mirror Eliza realized that there were clever seams sewn into the gown to mold the bodice closely over her breasts, and the gown was tailored in such a way to allow the material to fall in artless drapes to the floor. To her astonishment, she saw the sides of the dress from her waist to the floor were completely open.\n\nJane slipped a snug gold belt around Eliza's middle that matched the filigree clasp.\n\n\"Where is the rest of my clothing for this evening?\" Eliza asked, looking about the room.\n\nJane appeared a touch abashed. \"There isn't any, miss.\"\n\n\"No drawers?\" Eliza stared at the other girl in disbelief. \"No actual dress to go over this?\"\n\nJane patted her shoulder. \"You look very beautiful,\" she assured her. \"Let's get your slippers on.\"\n\nAt Jane's urging, Eliza donned delicate white slippers with long ribbons that laced up her calf and tied.\n\nEliza stepped back in front of the mirror and stared at her reflection in dismay.\n\nThe whole ridiculous garment could probably be dislodged by a strong wind, she vowed. It both covered and revealed every detail of her body with the rosy color of her nipples and dark gold of her nether curls clearly visible through the thin silk. For heaven's sake, there weren't even any stockings!\n\n\"Jane,\" Eliza said, trying to stay calm. \"There must be more to the ensemble, surely. When I walk the sides flutter about, and you can see...that is...I don't think this was sewn at all correctly!\"\n\nJane shrugged as the door to the chamber opened, and Rockdale sauntered in.\n\nHe stood and looked at her for several long moments.\n\n\"Damn it all to hell,\" he said finally, gritting his teeth.\n\nMomentarily thrown off balance, Eliza forgot for a moment she was practically nude. \"What?\" she asked.\n\n\"I want to forget the damn ball and take you straight to bed.\"\n\n\"Rockdale!\" Eliza hissed.\n\nJane giggled and winked at Eliza before she slipped quietly out the door.\n\n\"Christ almighty, woman. You look tasty enough to eat.\"\n\nHe circled her like a stalking cat, and Eliza fought the urge to try to cover herself with her hands. As much as this excuse for a dress exposed she'd likely need ten sets of hands anyway.\n\nHe toyed with the clasp at her shoulder, and she smacked his hand.\n\n\"Where did you get this...this thing I'm wearing,\" she demanded.\n\n\"Madame Bissette, of course,\" he said, grinning. \"It's amazing how much work can be done with the correct incentive.\"\n\n\"Of course,\" Eliza said and sighed. \"My lord, this is too scandalous, even for you. I cannot go out in attire like this. I simply can't.\"\n\n\"Darling,\" Rockdale said. \"You will be fine. You must trust me.\"\n\nEliza was not at all reassured. \"But...\"\n\n\"Tell me, what do you think of this?\" The earl asked, bringing forth a velvet bag.\n\nDistracted, Eliza sucked in a breath as he pulled out a glittering necklace. It was a wide band of light blue stones and pearls woven into a setting of gold. She stood motionless, hardly breathing, as he moved behind her to fasten it around her neck.\n\nThey stood in front of the mirror; he behind her, tall and elegantly dressed in black and snowy white evening attire.\n\nThe choker fit closely, its unaccustomed weight cold and heavy around her throat. She raised a hand to touch it with an unsteady finger.\n\n\"It's stunning,\" she murmured.\n\nHe pressed a kiss to her shoulder. \"It will serve the purpose of covering up those bruises on your neck.\"\n\nRockdale nuzzled the sensitive skin behind her ear, and she shivered, feeling both skittish and vulnerable in her revealing outfit. His hands slid over her shoulders to cup her breasts, barely contained in the pearly sheen of fabric.\n\nShe felt him shudder as he caressed her, his thumbs finding her peaked nipples. Eliza stared at their reflection, helplessly aroused by the sight of his hands on her body, his darker skin and coloring a startling contrast to her own fair skin so thinly concealed that even the small mole on her hip was visible.\n\nShe angled her head to look back at him. \"William, please,\" she entreated. \"How can you expect me to go out dressed like this?\"\n\n\"There's a cloak,\" he said soothingly. \"Does that help?\"\n\n**********\n\n\u2003\n\nChapter 10\n\nNerves jittering, Eliza tugged the black velvet of her new sable-trimmed cloak closer around her while huddled once more in the earl's plush carriage.\n\nThough the vehicle's interior was dim as they rattled down the road in the dark night to their unknown, at least to Eliza, destination, Rockdale's eyes seemed to glitter at her from the opposite seat.\n\nDamn the man, she thought unsteadily, not for the first time since he had towed her out of the warm, relative sanctuary of the small townhouse and into his carriage.\n\n\"Stop worrying,\" Rockdale commanded. \"Trust me to take care of everything.\"\n\nShe glared at him. Easy for him to say, wasn't it? He wasn't the one practically naked under a cloak. He wasn't the one everyone was going to see unclothed.\n\nOh, God... She blanched in terror and squeezed her eyes shut. How could this be happening?\n\nHer head whipped around as the carriage began to slow and turn.\n\n\"Ah,\" Rockdale said in satisfaction. \"I think we've arrived. You'll be perfectly safe tonight, but stay close to me, just in case.\"\n\n\"I can't do this!\" Eliza wailed.\n\n\"You're a brave and beautiful woman. Of course, you can.\"\n\nShort of clinging to the carriage handle and screaming for help\u2014and wouldn't that make a grand spectacle\u2014she had no option but to follow Rockdale as he firmly took her hand and exited the vehicle.\n\nThey alighted the carriage in front of a sedate manor house, its aged-stone fa\u00e7ade and brightly lit windows a contrast to the wild, sordid expectations of Eliza's imagination.\n\n\"I almost forgot something,\" Rockdale said, reaching inside his evening coat.\n\nHe held up a white silk mask, studded with gleaming pearls. \"Let's get this on you, shall we?\"\n\nWordlessly, she let him tie the mask on, convinced the woman she knew had now been completely overtaken by an impostor. \n\nThe front door swept open grandly to admit them, and Eliza swallowed hard; her mouth suddenly felt dry as though it had been coated with ashes.\n\nThey were greeted by two extraordinarily tall footmen in gleaming livery. Eliza could hear the distant sound of voices, laughter, and music, and she glanced around nervously, relieved to see no shocking behavior in sight as of yet.\n\nShe clutched her cloak tightly, desperate to hang on to it as long as possible.\n\nHer hopes were immediately dashed as Rockdale himself reached over to unfasten the cloak and drew it off, handing it away to one of the footmen.\n\nEliza gritted her teeth against the almost overwhelming urge to snatch her cloak back. \n\nPractically nude in front of these strange men, she could plainly see and almost physically feel their eyes traveling her form. Were they not supposed to act more chivalrous than this? She longed to shout at Rockdale to make the footmen stop their slow perusal.\n\nHe didn't, however. Eliza raised her chin and pointedly stared at her devilish escort.\n\nThe footmen bowed. \"My lord, my lady, please enjoy your evening,\" one of them intoned.\n\nThe earl smiled slightly and offered Eliza his arm.\n\n\"They're still watching you,\" Rockdale murmured as he escorted her to ascend the curving staircase.\n\n\"Undoubtedly getting a good show,\" Eliza said with resignation. \"Shall I waggle my backside as well?\"\n\n\"Darling, I've watched your arse enough to know it waggles quite enticingly all on its own. But please, feel free to waggle more if you desire. Just keep in mind, they have to stay on duty the rest of the evening and not rush away to some darkened corner to relieve what must be a painful stiffness in their breeches.\"\n\nEliza stifled the strange urge to giggle and looked back despite herself.\n\nOne footman stood at the bottom of the stairs avidly watching their climb, his eyes locked on her retreating bottom. Her own eyes dropped to the unmistakable bulge at his groin, the man's tightly fitted breeches and waist-length coat doing nothing to disguise the shape of his burgeoning cock.\n\nEliza sucked in a breath when the footman caught her watching him. He slid his hand down to stroke himself, and he winked cheekily at her.\n\nRockdale tugged at her arm to get her moving upward again. \"Told you,\" he said smugly.\n\nThe doors to the ballroom were opened by yet another smartly dressed footman. Rockdale held her arm in an unbreakable grip as he ushered her inside the room. When they entered, immediately the din of voices audibly lessened, and heads began to turn.\n\n Good heavens.  There were people everywhere. Breathless, Eliza's head swiveled to and fro as she tried to absorb her surroundings.\n\nEliza realized with a frisson of shock that the servers mingling through the crowd with refreshments were almost completely nude. Both male and female, they balanced large trays, clad only in loin cloths with gold bands encircling their ankles, wrists, and necks.\n\n\"Dear lord,\" Eliza murmured. \"They're dressed like slaves!\"\n\nThe guests were attired in scandalous states of dress and undress. There were outlandish costumes mixed with clothing that ranged the full gamut of lavish ball gowns and evening finery to scraps of lace and silk and exposed corsets. Most of the attendants were masked, some with simple dominos and some wearing elaborate masks with beads and feathers.\n\n\"Ho, Rockdale! I hadn't thought to see you tonight.\"\n\nEliza turned as an elegant older man with graying dark hair approached to clap Rockdale on the shoulder.\n\n\"Haven't seen you here in some time,\" the man said, glancing down at Eliza. \"Perhaps this lovely flower is the reason.\" He winked suggestively, his eyes glinting over her with appreciation.\n\n\"Evening, Sinclair,\" Rockdale said. \"Hope you don't mind us attending your f\u00eate unannounced.\"",
        "\"Not at all, old man. You have a standing invitation, don't you know.\"\n\n\"Rockdale!\" a husky female voice cried.\n\nEliza watched with some bemusement as a scantily clad young woman launched herself into the earl's arms and proceeded to devour his mouth passionately.\n\n\"Violet,\" Sinclair murmured after a few moments. \"Lord Rockdale has a companion tonight.\"\n\nViolet slowly broke her kiss with Rockdale, whom, Eliza noted, did not seem to be protesting overly much. Her dark curls of hair tumbled in abandon over her shoulders and back, looking much like a gentleman had rumpled it recently. \n\nThe sloe-eyed beauty wore a silvery-satin corset laced tightly to showcase her tiny waist. Edged in black lace, the corset pushed her bosom up into a deep cleavage but left her breasts entirely exposed. The material molded closely over her shapely hips but below the lace hem of the corset, Eliza noticed with a jolt, Violet was nude. Even her mons Venus was bare; the gently rounded mound appeared smooth and hairless as a young girl's.\n\nEliza jerked her eyes away, hoping the mask disguised her shock. Rockdale watched her closely, and she hoped he couldn't discern the direction of her perusal.\n\nViolet spun to face Eliza. \"Oh,\" she said with wonder, reaching out to stroke Eliza's single, long curl. \"She's so lovely!\"\n\nEliza jumped in surprise and sidled closer to Rockdale when Violet's fingers lightly traced over her silk-clad breasts.\n\n\"Lord Sinclair, Violet,\" Rockdale said, \"I'd like to introduce you to my friend, Rose. She's very shy, so treat her gently, if you will.\"\n\nEliza's eyes darted to Rockdale at his use of a false name.\n\n\"Rose, I'd like for you to meet the lord of this estate, Lord Sinclair. This exquisite lady is his companion, Violet.\"\n\n\"I am delighted to make your acquaintance, Rose,\" Lord Sinclair murmured, eyes twinkling as he reached for Eliza's hand and lifted it to his mouth.\n\n\"Likewise, my lord,\" Eliza said, feeling self-conscious as he lingered over her hand.\n\n\"Is the tour going on tonight?\" Rockdale asked.\n\n\"Of course,\" Sinclair replied, finally releasing Eliza's hand. \"It should be available in a few moments; you remember the routine.\"\n\n\"Excellent,\" Rockdale said. \"Excuse us, won't you, please?\"\n\n\"What kind of tour?\" Eliza asked in a low voice as she and Rockdale took their leave and crossed the ball room, skirting the area where several couples were dancing. It was hard to miss the men and women staring at them, some of the gazes lustful and some merely curious.\n\n\"More of a show than a tour, I suppose,\" he replied. \"You'll see for yourself soon enough.\"\n\nRockdale retrieved two glasses of wine from a smiling slave girl server, and Eliza gratefully gulped hers down.\n\n\"Bosoms bobbing out at me everywhere,\" she muttered.\n\nThe earl chuckled and offered her his own glass. \"Thirsty or building courage?\"\n\nShe accepted his glass and downed it as well. \"Both,\" she answered shortly.\n\nAfter discarding the empty glasses, Rockdale led her to another door leading out of the ballroom. One of the servers, this one male, stood outside the door.\n\n\"Good evening, my lord,\" the man said, bowing. \"Would you and your lady like to take the tour?\"\n\n\"Yes,\" Rockdale answered. \"May we enter now?\"\n\nThe server opened the door. \"Right this way, my lord. Please enjoy.\"\n\nEliza's heart thudded as Rockdale led her into a darkened hallway. There was no one else inside, only a series of room doors, all closed.\n\nThey paused in front of the first door, and Rockdale rapped on it. Eliza's fingers flexed on the earl's arm, and she wondered nervously who would open the door. But to her surprise, no one did.\n\nRockdale moved a few paces past the door and paused in front of a large, rather innocuous painting of crimson roses. To Eliza's surprise, he grasped one side of the painting's frame and lifted. The frame opened away from the wall in a soundless motion, exposing a hinged attachment and an opening presumably into the room within.\n\n\"How peculiar,\" Eliza murmured, stepping closer to glimpse what or who might be within, only to see the inside was veiled from view by a heavy red curtain.\n\n\"What\u2014,\" Eliza tried to ask, but Rockdale shushed her.\n\n\"Just watch quietly.\"\n\nWith a small huff, she turned her attention back to the red curtain.\n\nThe curtain began to draw back slowly, revealing a sizable chamber opulently draped in rich tapestries and luxuriant furs. In the center of the room, there was a raised dais with an enormous armless chair that resembled a throne. Its gleaming golden surface was crusted in gems and pearls.\n\nAs they watched, a large, imposing male dressed in elaborate robes and wearing a gold crown entered the room from somewhere in the back. He was followed by two muscular men dressed in old-fashioned warrior garb of leather and light armor.\n\nEliza frowned as the man mounted the dais and settled into the throne. He waved a scepter at one of his attendants. \n\nWas this some sort of play, she wondered. What could be the purpose in this?\n\nA third armored attendant came into view gripping the arm of a woman dressed as some sort of medieval peasant. Her white, ruffled blouse was torn at the sleeve, and she visibly trembled as the guard towed her in front of the dais.\n\nRockdale shifted directly behind Eliza and bent his head to whisper in her ear. \"Don't fret, it's all for show.\"\n\nEliza found herself holding her breath and tried to relax as the guard released the woman's arm and stepped back. The king looked the peasant woman over for a long moment. \n\nNibbling her bottom lip, Eliza shivered slightly in her thin gown. Rockdale's body felt warm and reassuring behind her, and she fought the urge to lean back against him.\n\nThe king gave another imperious dip of his scepter. The woman shook her head, her long ash-blonde braid swaying down her back.\n\nScowling, the king gestured toward his attendant. The man unsheathed the nasty-looking sword at his side and brandished it toward the woman.\n\nThe peasant woman cast her eyes toward the floor and slowly began to unlace the ties of her white blouse. Once undone, she tugged it over her head and cast it to the side.\n\nThe king's scepter moved again, and her fingers went to the fastenings of her long brown skirt, loosening them until the rough fabric slithered to her feet.\n\nLeft in a simple shift to shield her body from the eyes of the king and his men, the woman lifted her chin proudly.\n\nLeering openly, the king leaned forward on his throne and pointed his scepter at her once more.\n\nSlowly, the woman gathered the folds of material in her hands and skimmed her shift upward, revealing shapely long legs and a plump bottom. Her full breasts came into view as she pulled the shift over her head and tossed it to the floor.\n\nEliza's breath came faster, even though she knew the scene was all pretend. Rockdale's hand glided over her hip, making her shiver.\n\n\"What do you think the king intends now?\" Rockdale murmured into her ear.\n\nHis warm breath stirred the sensitive small hairs around her ear and neck. Almost imperceptibly she felt Rockdale drawing her closer back against him and pressing her closer to the wall.\n\nBy all rights she should have felt trapped, but scene playing before her held her rapt as the king again motioned with his scepter toward the peasant woman.\n\nShe looked to refuse, but the armored guard, his sword still at the ready, urged the captive forward. Her steps hesitant, the woman mounted the dais and halted before the king.\n\nThe king pointed to the floor.\n\nEliza could see the flush coloring the woman's pale skin as she went to her knees in front of the throne.\n\nA lascivious smile lit the king's face as he crooked his finger at the woman. Prodded by the guard behind her, she obediently shuffled closer until she knelt between his thighs.\n\nThe king drew his robes open wide, and the captive woman stared as though transfixed at his erect, exposed phallus. Her tongue darted out to lick her lips, and again she shook her head vehemently.\n\nHis smile turning unpleasant, the king seized the peasant woman's long braid and wrapped it several times around his hand. His other hand grasped his cock as he urged the woman's head down.\n\nEliza couldn't tear her eyes away from the sight of the woman opening her mouth to accept the swollen cockhead between her lips. The king groaned audibly, the first sound any of the actors had made in the strange erotic play.\n\nGooseflesh erupted over Eliza's body. Rockdale's fingers played lightly over her breasts, caressing her already stiff nipples. The rasp of his evening clothes against the thin barrier of her silk-encased skin increased the sensations already flowing over her body.\n\nThe king was using his grip on her hair to dictate the woman's motions as his cock worked in and out of her mouth.\n\nWith a nod from the king, the guard closest to the peasant woman went to one knee close behind her. The captive jerked in surprise, her hands flailing as his gloved hands reached around to fondle and cup her bare breasts.\n\nThe king growled as his cock popped out of her mouth. He gestured at the guard, who grabbed hold of the captive's hands and secured them behind her back with a length of thin rope he pulled from this belt.\n\nThe woman squirmed as the guard pushed her knees further apart and slid one gloved hand between her legs from behind. Her eyes were wide upon the king's lust-filled face as he tightened his grip on her braid and thrust himself back into her mouth.\n\nArousal tingled between Eliza's legs. It was sinful to watch such a debauched scene, she knew it was. But something about the dominant men surrounding the submissive, kneeling woman triggered a shameful reaction inside her she couldn't seem to deny.\n\nLook away, she ordered herself. Demand the earl take you back outside...anything... \n\nThe guard's gloved hand worked between the peasant woman's legs, stroking her until she began making small noises around the king's cock. The guard used his other hand on her breasts, the black leather stark against her white flesh as he ruthlessly plucked the dark-pink tips.\n\nEliza's breathing deepened. Was it her lessons with Rockdale that made this shocking display so exciting to her? Or had the inclination already been there, hidden, until a certain wicked earl had introduced her to a carnal education the likes of which she could have never before imagined.\n\nRockdale's hand slid from her hip through the thatch of dampened curls between her legs. She heard the hiss of his exhale as his fingers discovered just how deeply she was affected.\n\nHis beard-roughened jaw nuzzled her neck, his dark, low chuckle vibrated across her skin. His tongue began to lap at her throat above the choker necklace while his fingers danced across the sensitive flesh at the apex of her inner labia.\n\n\"Oh, William,\" Eliza whispered when he dipped into her wetness and delicately painted her small bud with the slickness.\n\nInside the chamber the king had pulled his cock from the peasant woman's mouth. The guard pulled her roughly to standing and lifted her astride the king's lap.\n\nThe woman's eyes drifted closed as the king positioned her over his cock. Her long, keening moan was audible as the thick shaft penetrated and disappeared inside her.\n\nEliza panted softly, watching the king fuck the peasant woman with her hands tied behind her back, his hand still gripping her braid, tugging her head back.\n\nRockdale's fingers stroked her to a feverish high, his hips pushing her flush up against the wall, the press of his cock unmistakable. Eliza's sense of decorum and dignity had deserted her, leaving sheer instinct in control. She rubbed her bottom wantonly against his hardness, relishing the feel of Rockdale's desire for her. \n\nSome unseen communication between the king and his guard had them lifting the woman up and turning her so that she faced away from the king. He quickly sheathed himself between her thighs once more, her breasts bouncing as he thrust repeatedly, his hands holding tight to her hips.\n\nThe guard, standing before the king and his captive, quickly loosened the ties of his breeches and pulled his own cock out. He stroked it up and down, masturbating himself while watching the king impale his subject. Stepping forward, it was now he who wound his hand in the woman's braid, forcing her to bend forward.\n\nShock reverberated through Eliza as she watched the woman open her mouth and the guard pushed his cock inside. While the king pummeled her sex from behind, the guard eagerly thrust his shaft between her lips.\n\nHer body strung tightly as a piano string, Eliza writhed back against the hard solidness of Rockdale's tall body. She felt more than heard him growl as his free hand jerked at the clasp at her shoulder. The robe fell down to her waist with a whisper of sliding fabric. His hand sought the curves of her bare breasts, his touch rough as he fondled her.\n\nHer senses enflamed with a strange mad yearning, she gloried in the tightness of Rockdale's grip, his teeth scraping over her jaw, the harsh rasp of his breath in her ear.\n\nHer climax tantalizingly close, Eliza writhed in Rockdale's arms, unable to tear her gaze away from the two men simultaneously thrusting their cocks into the bound peasant woman.\n\nRockdale withdrew his fingers from between her legs, making her whimper in protest. \n\nShe turned in his close embrace to face him, her arms sliding around his neck and pulling him down toward her. Eliza pressed her open mouth to his, desperate to taste him. He obliged her with a possessive stab of his tongue as his head slanted over hers.\n\nHis hands roamed hot and familiar over her body as he plundered her mouth. Rockdale clutched the cheeks of her arse, dragging her tight up against his cock.\n\nShe rubbed against him, wild and unashamed; her inhibitions completely lost in the midst of her hunger for this man who endeavored to drive her mad at every turn.\n\nRockdale seemed as overtaken as she felt herself. He shoved her back up against the wall, his cheeks flushed. He released her mouth to lick and bite his way down her chest, cupping her breasts together and feasting at her nipples with tugs of his lips and teeth, drawing the tips into his mouth for a rough suckling.\n\n\"Yes, yes,\" Eliza chanted, tunneling her hands into his thick hair, pressing him closer to her breasts.\n\nHe abruptly bent, lifting her bodily up into his arms.\n\nShe gasped as he strode a short distance down the hall to a doorway at the end. He let her down and wrenched open the door, hard enough to practically tear the thing off its hinges. Grabbing her arm, he propelled her inside with him and slammed the door shut.\n\nBreathing heavy, he stared at her, unsmiling.\n\nEliza swallowed hard, a trickle of trepidation finding its way down her spine. His face was harsh and predatory in the dim lighting.\n\nSome instinct she didn't know she possessed had her turn away from him, taking a few steps inside the room which appeared to be a small bedchamber.\n\nShe looked back at him over her shoulder and slowly unfastened the gold belt around her waist. The robe slithered the rest of the way to the floor.\n\nEliza felt a thrill of pleasure as his eyes widened in surprise.\n\nHe crossed the short distance between them, and Eliza fought the urge to back away. Instead, she listened to the instinct still whispering in her ear and sank to her knees before him, positioning herself as he had taught her.\n\n\"Oh, what a good girl you are,\" he murmured, circling around her.\n\nHis low words touched something dark and forbidden inside her, something that desired above all things to please him.\n\n\"Thank you, my lord,\" she whispered.\n\nRockdale's hand slid over her bare shoulder, and she leaned further over, presenting herself prostrate to him, holding her bottom high.\n\nShe heard his shuddering breath as he exhaled.\n\n\"Don't move,\" he instructed, his voice gruff.\n\nShe heard rustling behind her and knew he was removing his clothes. Shivers of anticipation coursed over her. She could hardly wait to feel his naked skin against her own.\n\n\"What do you want, Eliza?\"\n\nHe wanted to ask her questions now? When she felt as though she might burst if she didn't soon ease the ache between her legs?\n\n\"Please, my lord,\" she moaned, pressing her thighs together vainly.\n\nHis finger trailed down her spine, sending a jolt of pure heat to her groin.\n\n\"Tell me,\" he commanded.\n\n\"I want you,\" she answered impatiently, caught between frustration and need.\n\n\"To do what?\" he pressed.\n\n\"I burn, William. Please touch me, don't stop touching me,\" she begged. \"I need you inside me.\"\n\nRockdale drew her up off the floor to standing.\n\n\"I'm going to give my good girl what she needs,\" he growled, pulling her hard into his arms.\n\nShe melted into his embrace, eagerly opening her mouth for the kisses he fed her.\n\n\"Go lie on the bed and spread your legs wide for me,\" he whispered against her lips.\n\nAcutely conscious of his hot, dark eyes tracking her, Eliza obeyed, stretching herself over the satiny red counterpane, legs splayed wide, exposing her damp center.\n\nIn an instant, he was there kneeling on the bed between her legs. He pressed his mouth to the tender flesh that wept for him, spreading the lips of her mons wide with his thumbs.\n\nThe shock of sensation became maddeningly intense when his tongue rasped repeatedly over her pearl, lashing and laving it both the tip and flat of his clever tongue.\n\nWithout warning, his finger pressed against and into her slickened opening. The blunt, sudden penetration ratcheted the gathering tension within her to an impossibly-high pinnacle as fiery bolts of lightning streaked from her inner passage to pulsate deep inside her body.\n\nEliza thrashed on the bed, her need for release all consuming. The world outside of Rockdale's mouth upon her sex fell away. A hoarse cry burst from her lips, and she rocked her hips wildly against his mouth and tongue.\n\nHe held her hips down as he continued to devour her; she shuddered uncontrollably as the tumult built. She babbled and panted, begging him not to stop. Two of his fingers now stabbed inside her as he lifted his head slightly.\n\nHis wicked, knowing smile was brief before he lowered his head once more.\n\nEliza jerked helplessly as his tongue swept across her spread labia from bottom to top before settling again on her most sensitive spot, sucking lightly before lapping it over and over.\n\nThe air around her ears seemed to strangely buzz for a few beats as the delicious tension finally peaked\u2014hovering, rippling, and then crashing over her in a dizzying rush of pleasure.\n\nHigh-pitched cries and moans she couldn't contain streamed from her lips as Rockdale continued to use his fingers and mouth between her legs while she rode out the mind-bending climax.\n\nAnd in that heart-shattering moment of time, Eliza suddenly gained an understanding of why all those men and women had flocked to this sinful gathering tonight. It became clear why seemingly good, decent girls ended up with ripe, rounded bellies before the union had been sanctioned in a church. She could finally see why marriages waxed and waned, why men sought mistresses, and why women took lovers on the sly.\n\nShe watched, panting desperately for air, as the large male who had wrought this destruction of mind and body upon her reared up between her splayed thighs.\n\nHe looked too handsome to be real\u2014his hair rumpled and those bottomless, intense eyes intent upon her face as he crawled over her.\n\n\"William,\" she whispered in a broken voice.\n\n\"I know, sweetheart,\" he crooned, smoothing ringlets back from her damp face. \"I know.\"\n\nShe felt shattered like a carelessly dropped teacup, her pieces fragmented and tossed about. Her defenses and her sense of self-possession had all been stripped away leaving her raw and trembling.",
        "He covered her body with his, claiming her lips in a gentle but heated kiss. His cock nudged insistently at her spread inner labia, its entry eased by her slick arousal.\n\n***\n\nRockdale pressed his forehead against Eliza's, sweat dripping off his face onto hers as he penetrated her tight body, his breath hitching when he pressed his full length inside.\n\nHe was undone by her unexpected surrender to him. What an unexpected delight she was in every way. Never before had he bedded a woman who came to him with an unfettered passion that matched his own.\n\nHer sweet but sultry spirit fed his desire like a potent aphrodisiac and never failed to surprise him. And strangely, she evoked an unfamiliar tenderness that he had never before experienced.\n\nHe rained kisses over her face, his gut twisting with something more than mere lust. She stared up at him with wide eyes, lips parted and swollen from his kisses.\n\nThough part of him now acknowledged he had been wrong to force her into a sexual relationship, he selfishly did not regret it. He was fiercely glad to have been the man to take her maidenhead, the first to stroke her to climax, the first to put her submissive and kneeling on the floor.\n\nAnd the last man, some stubborn voice inside his head insisted.\n\nRockdale shied away from this troubling thought, but the words spilled from his mouth anyway. \n\n\"This is where I belong,\" he said staring down at her, shocked to feel himself trembling. \"Inside you. Always.\"\n\nHis hips pumped with a relentless hunger, filling her repeatedly, fucking her with her cock.\n\n\"You know it, too, don't you, darling?\" he demanded, half expecting her to deny him.\n\n\"Yes,\" she murmured, her arms lifting and encircling his neck. \"Yes.\"\n\nHeady satisfaction mixed with the lust coursing through his blood. The tenderness was fading to a clamoring need to claim her in a primitive, animalistic way.\n\nHe disengaged her arms from around his neck and sat back, pulling his erection from the clinging sweetness of her body.\n\n\"Turn over,\" he ordered.\n\nWithout a word she complied, rolling over onto her front.\n\nGrabbing handfuls of her delectable arse, he straddled her thighs impatiently, his body thrumming with the need to get his cock back inside her. He heard her sharp intake of breath when he spread the cheeks of her bottom apart, seeing the rosy bud of her fundament and the glistening folds of her quim.\n\nHe grasped her hips, canting her up slightly to get the angle he needed. She shuddered beneath him as his cock breeched her sex from behind.\n\nLeaning over her prone torso, he pumped hard and fast against her buttocks. \"Give me your hands,\" he rasped.\n\nEliza shifted, sliding her hands from near her head, down toward her stomach.\n\nRockdale took her wrists and pulled her slim arms behind her back. Holding her thus, he unleashed the full power of his desire upon her, hammering his cock inside.\n\nShe was so beautiful, so perfect, her curves and softness; the want of her flowed over him like an unquenchable desire. He licked his lips, the sweet combined nectar of her mouth and cunt lingering on his tongue.\n\nHer keening moans filtered through his haze of lust and he realized she was pushing her hips back against him in an effort to meet his thrusts. Her eyes were closed, but a light flush and sheen of sweat covered her satiny skin.\n\nRockdale remembered calling her a slut and shook his head, now realizing what a gift to him her burgeoning sexuality was.\n\nHe released her hands and slid his hand between the cheeks of her bottom, dipping his thumb into her wetness where she was stretched to accommodate his girth. She stilled when his thumb gently rubbed over the entrance to her bottom.\n\n\"Rockdale!\" she gasped when he pressed down slightly, still fucking her with his cock.\n\n\"Shhh,\" he soothed, continuing to play with her tight opening. \"Do you trust me, Eliza?\"\n\n\"I\u2014well\u2014yes,\" she answered, her voice almost a sob.\n\n\"That's my good girl,\" he said, using more of her creamy juice to lubricate before slowly penetrating her with his forefinger.\n\n\"William,\" she whimpered. \"That feels...so strange. I don't know if...oh!\"\n\nHer whimpering increased as he began to pump her harder.\n\nShe came again with a high-pitched squeal, her little arse quivering and flexing against him while Rockdale rammed inside her cunt forcefully, groaning at the rhythmic ripples of her muscles tightening around him when she found her climax.\n\nHeart thundering, he grasped her waist and pounded her rump furiously until he found his own powerful release, grunting as his cock jerked and erupted deep within her.\n\nRockdale panted raggedly, his hips still spasming over her bottom. \"Damn,\" he mumbled and collapsed boneless beside Eliza's unmoving form.\n\nHe was about to check to see if she was still breathing when a knock at the door startled them both.\n\nFlushed and delightfully rumpled, Eliza sat up, looking alarmed.\n\n\"I guess our time in here is up,\" Rockdale drawled, rising from the bed.\n\n\"Our time?\" Eliza echoed. She glanced around and jumped up.\n\n\"William!\" she gasped. \"Can other people see us?\"\n\n\"Oh,\" he said. \"Er, probably...actually...\"\n\n\"Oh, MY GOD!\" she wailed, throwing her hands up to her face. \"My mask!\"\n\n\"It's still on your head, darling. Just pull it down.\"\n\nHe poured some water from the ewer into the bowl, eyeing her when she hurried over to her crumpled gown and muttered about losing her slippers.\n\n\"No one probably has any interest in us,\" he tried to assure her. \"Here, come wash up.\"\n\nHe tried unsuccessfully to swallow a grin when she spied her reflection in a mirror hanging near the bed. \n\n\"Oh, MY GOD! I look a complete fright! What did you do to me?\" she demanded.\n\n\"If you have to ask, I evidently didn't do it well enough.\"\n\nShe marched over and snatched the cloth out of his hands. \"This is no time for your clever remarks,\" she said, dampening the cloth and wiping at the smudged paint on her face.\n\n\"No one's going to be looking at your face overly much while you're wearing that gown,\" he said helpfully.\n\nHer answering glare spoke volumes.\n\nSeveral more minutes had passed before they had both washed and redressed. Rockdale found the missing slipper under the bed and escorted his lady out of the private area, much too relaxed and sated to be bothered by her displeasure.\n\nRockdale had discovered that under her prickly exterior was a woman of rare sensuality. He was determined to strip away her outer layers until she had yielded to him every bit of her hidden lustful nature.\n\nIn all his years of unhappy marriage and futile searching he had finally found a sexual partner who was a proper foil to him. He really should send Harry Cavendish one of his best horses as thanks\u2014perhaps a cask of fine brandy from his cellar...\n\n\"Stop looking so pleased with yourself,\" Eliza said crossly.\n\n\"You certainly weren't saying stop a short while ago,\" he replied with a wink. \"In fact, if my memory serves, you were moaning something along the lines of\u2014\"\n\n\"Oh, do be quiet!\"\n\nThey exited the darkened hallway back into the brightly-lit ballroom. A hush fell over the people congregating nearby, and Rockdale wondered uneasily just how many of them had watched him and Eliza in the bedroom.\n\n\"Excellent show, Rockdale!\" a voice boomed out, its owner a portly gentleman very familiar to Rockdale.\n\nThe earl froze, certain his good evening had just come to an unpleasant halt.\n\nOut of the corner of his eye, Rockdale saw Eliza become very still and her fingers clenched his arm.\n\n\"G'evening, Harry,\" Rockdale said slowly. \"I thought you were traveling abroad with your family.\"\n\n\"I left 'em in Venice,\" Sir Harold Cavendish explained. \"All those boats and Italians just ain't natural.\"\n\nRockdale blinked.\n\n\"Well, well,\" Cavendish continued. \"I see you've been busy with our governess.\" He leered at Eliza's breasts. \"I knew she was ripe for the picking, but I never thought she'd take to a good fucking like THAT. Damnation, man, I nearly spent in my breeches watching you work her over.\"\n\n\"Keep your voice down, for God's sake,\" Rockdale growled, his fist clenching with the urge to slam it into his friend's face.\n\n\"Why?\" Cavendish asked. \"Everyone else was enjoying the show as well.\"\n\nThe older man shrugged. \"It seems to me you owe your good friend some time with her, seeing as how I was the one who sent her your way. What do you say, Rockdale? Will you let Harry dip into this little honey pot?\"\n\nEven with her mask in place, Rockdale could see Eliza's face had gone from flaming crimson to frighteningly devoid of color.\n\nHis gut filled with a sickening fury, and he inwardly cursed. Damn Harry for showing up here!\n\n\"Let's go somewhere private to discuss this, shall we?\" Rockdale said through gritted teeth. If nothing else, he would make certain the lecher would never lay a finger on Eliza.\n\n\"I'll oblige you, Sir Cavendish,\" Eliza spoke up suddenly, her voice cloyingly sweet. \"I've been looking so forward to seeing you again.\" She smiled and stepped forward, the intimate details of her lush body quite clear through the thin silk.\n\n\"See, Rockdale?\" Cavendish said smugly. \"She wants to show old Harry a bit of what she's learned.\"\n\nEliza's eyes were fixed on Harry, and her smile boded something unpleasant. \n\nOh, shit, Rockdale thought uneasily."
    ],
    "authorname": "Emmeline",
    "tags": [
        "blackmail",
        "romance",
        "historical",
        "england"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/carnal-knowledge-ch-09-10"
}