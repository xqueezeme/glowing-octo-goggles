{
    "title": "Ideal Suburbia Ch. 07b",
    "pages": [
        "This is a series of stories that are a sort of sequel to two text-adventure games. Each installment is a complete story on its own, but for a full understanding, the reader may want to start with Chapter 1.\n\nThis installment is again a fairly vanilla bridge between meatier stories. It sets up several upcoming chapters, so it should be worth the short read.\n\n+++++\n\nOn Sunday, I woke up... sore.\n\nI groaned as I sat up in my bed. I was used to the very occasional painful waking hangover, but I was definitely not used to my body waking up feeling, um, over-used. It had been a very energetic sexual escapade yesterday, but I was used to those. What I was not used to was feeling it the next day. I flopped back in the bed and reflected that my lifestyle had changed. It had become more, ugh, adult.\n\nI was spending much more time driving around, sitting in offices, eating with clients in restaurants, and buying shit for my new house. The only exercise I was getting was sex, and while that was... awesome, it wasn't nearly enough, and even sex was no substitute for the gym. I needed to get back into fighting trim. Or, fucking trim. Whatever floats your boat.\n\nIn short, I need to find a gym or a personal trainer. But where? I had really let this agenda item slide since moving to town and now I was regretting that. That regret, however, was no help in finding a solution. I sure as hell wasn't joining a Planet Fitness or any other corporate gym. Not my style.\n\nI crawled out of bed and tried some limbering up exercises, and a few half-hearted pushups. But when I'm working out, just as when I am having sex, or engaging in other strenuous activity, I do my best with someone else exhorting me to do better. In San Francisco, I had a gym with a great staff who loved yelling at me (Two of the female trainers had loved doing more than yell to motivate me, but that was another story). While I was staying in the company condo upon my first arrival, I had mostly kept up a basic schedule, but I'd been slacking off even before I lost access to the equipment there. No, I needed a personal trainer. I was sure there were plenty in town, but where to begin? I was definitely not down with a long series of try-outs to find one I liked.\n\nI lay back in bed with a groan, and my mind drifted instead to my backyard escapade with my neighbor Blanche. She had said something about The Rumor Mill. I still couldn't wrap my mind around how she could have heard about me (and my cock), but it did remind me that word of mouth was always the best referral.\n\nThat Thursday, when I went in for my haircut at Yvonne's (where the owner and all the customers thought I was gay) I resolved to put my network of local contact to some use. As I sat in the chair, the only man in a room full of women, I listened until someone mentioned some physical complaint. For the first time that any of them remembered, I actually broke into the conversation uninvited.\n\n\"Goodness,\" I grumbled, \"This Sunday I woke up and was sore all over. I could barely move.\"\n\n\"Listen to him complain,\" chuckled Petra, who at 55 probably woke up every day at least sore and stiff.\n\n\"No, I mean it,\" I protested. \"My lifestyle has changed. I'm spending all my time at my desk. I need to get back into shape, and I need someone to whip me into doing it!\"\n\nThere was various talk of corporate gyms and aerobics workout studios, but I shot those down.\n\nDaria, the youngest woman in the room, only 15 years older than me, exclaimed, \"Oh, I know! How about Miss Culver? Courtney Culver? She's a private trainer, and her place is right near here.\"\n\n\"Courtney Culver?\" sneered Wanda, another regular, cattily. \"I tried her water aerobics class at the Y. I'm not sure that her main selling points are what our friend here is in the market for.\"\n\n\"Oh come on, Wanda!\" put in another woman whose name I did not know yet. \"I remember that she ran you out of that class because you couldn't keep up with her pace! It sounds like she's exactly what he needs.\"\n\nThe women went on about options for the rest of the time I was there, mostly as if I wasn't there. But for all the ideas they had, this Courtney sounded the most interesting. They all thought I was gay, and that made her LESS appealing? I guessed that meant she was pretty. Well, if I was going to get yelled at for my own good, I'd prefer that the yeller at least be easy on the eyes.\n\nI looked her up on Yelp, and though the reviews were fairly sparse, they intrigued me. Everyone either hated her because she was too mean, or didn't mind that she was so mean, because she got them results. I booked an appointment online.\n\nCourtney's personal training studio was in the far back of a little light industrial/distribution complex that was fairly near the downtown of the suburb where I lived. It is the kind of business location that you would never in million years know was there without being told about it. Heck, I had driven past this entire development more than half the days that I lived here and until that first visit, I had been completely unaware that the place even existed. Rent must have been cheap.\n\nVery cheap. The studio was against the very back wall separating the complex from the residential areas around it. The driveway and parking spaces back there had not been resurfaced in I had no idea how long, meaning I parked on something more akin to asphalt gravel than pavement. Each unit had a garage/loading door and a gray metal utility door. No windows. No large signage. Definitely not retail-friendly. Her studio was flanked on either side by an auto detailing shop that I resolved to ask about, and a tool and die firm that took up three units in a row.\n\nI made sure I had the correct unit, then pushed on the door. It was locked. I noticed a buzzer and pressed it. There was a very brief pause, then the door lock clicked open and I entered. Inside was actually quite nice. Instead of bare concrete, the floor was covered in a thick, black, rubberized tile that almost felt like walking on a wrestling mat. One wall was all mirrors, and there was a quite extensive selection of varied exercise equipment, from several weight machines and racks of free weights, down to ropes, balls, and other smaller pieces of equipment, most of which I was at least familiar with. The lighting was bright but warm and flattering, and there was energetic music playing, just loud enough to still make conversation possible.\n\nI took all this in later, as my first impression was limited to Courtney. One long look at her and I knew that unless she was an axe murderer or some kind of Flat Earther, here was my personal trainer for the foreseeable future. If there were one word to describe her wardrobe, it was apparently lycra. And why would anyone with as exquisitely chiseled a figure as she had, wear anything else? She wore a long-sleeved, electric blue leotard with a modestly scooped neckline over icy blue leggings that cut off at the ankles of her bare feet. The outfit may have covered her entire body, but it did little to conceal it.\n\nCourtney was average height, about 5' 4\", and while it was hard to tell her age, I guessed late twenties or early thirties at the most. Everything about her appearance simply screamed \"fit\". And she wasn't bulky or large either, though her shoulders and back in particular gave an impression of power. Her ass was small but muscular and very pert, and her legs managed to be both curvy and slender at the same time. Her belly was not so much flat as strong, and I had a moment's hesitation as I considered how many crunches a woman with an abdomen like this would consider to be reasonable. Her breasts were a lovely mystery. Clutched hard against her body by the lycra in her leotard, it was hard to discern their natural shape or size, other than to know that they were most certainly there and quite attractive as displayed.\n\nWe introduced ourselves, and Courtney said, \"I've got a bunch of questions for you about yourself and where you want to go with your body, but let's do that while you use the treadmill. I want to see you move.\"\n\nI went to the treadmill. It was a deluxe model with an excellently shock-absorbing surface. Unlike most units these days, there was no TV to watch while running. Courtney looked disapprovingly of my loose white cotton t-shirt. \"I'd like you to wear something a little tighter or more form-fitting in the future. If I can't see your musculature, it's harder for me to evaluate which muscles are being most worked in each activity. Each exercise has an area that it should be working, but if your form is out of balance, you will be too. Also, that loose shirt will probably chafe with this,\" she added, holding up a biometric chest band as I began to step on the treadmill.\n\nI shrugged and just removed my shirt and tossed it aside. \"All my workout shirts are loose like that one,\" I replied.\n\n\"Or you can just do that, if you are going to be so male that you won't go shopping for a new shirt or two,\" she replied sardonically. I took the offered monitor, strapped it on like she showed me, and got on the treadmill. I reached for the controls, but Courtney forestalled me, holding up a remote. \"I'll control it with this, so I can walk around.\" She pressed a few buttons, the machine beeped and I began to walk, then stride lightly.\n\nI may have been feeling out of shape, but I still felt like I looked in pretty good shape. Not good enough to impress this panther when I took off my shirt, but pretty good. My worry was that was that she might decide that since I looked in such good shape, she could run me ragged. She did have that mean reputation.\n\nAs she watched me run, slightly increasing or decreasing my speed without warning (mostly increasing), she said, \"Let me guess, you've always worked out to stay in shape, but it was never very hard for you to accomplish. But now you have a good enough job to afford fees like mine, and to buy a watch like the one that you are wearing, but the lifestyle and demands of the job have made you realize it suddenly isn't so easy.\" It was not worded as a question.\n\nI nodded my head without speaking for a moment. She had the speed turned up right then, and I was experiencing a lack of oxygen I felt I should not have. I regained my breath and said, \"I do swim every day. I have a pool.\"\n\n\"What kind? And does your complex have lifeguards?\" she asked, eyeing my running for critically.\n\n\"No, I have a pool. In my back yard. I bought a house,\" I added stupidly.\n\n\"Good,\" Courtney said, but with a frown. \"A daily swim is great for keeping limber and fresh. But home pools are usually way too short to sustain effort enough to get even a decent aerobic workout. Or anaerobic for that matter. And most people won't really let themselves get properly tired in the water without someone else around in case they get TOO tired. I assume you live alone? You aren't married.\" That last was again, not a question.\n\n\"No, I'm not. What made you so sure though?\" I asked.\n\n\"Married guys who look like you don't shell out for personal trainers.\" It was the first vaguely complimentary thing she'd said to me, and I was already too tired to enjoy it.\n\nAfter the warm-up, she started testing me out with free-weights to gauge the strength throughout my body. She never invited me to put my shirt back on, and as we worked, she kept touching me here and there to correct my form or otherwise instruct me. Ordinarily, having as fascinating looking a woman as this touching my bare torso, arms, and legs, even my ass at one point, leaning over the top of me, otherwise simply staring at me, would have triggered a potentially embarrassing problem my baggy workout shorts would not have concealed, but she kept me so damned tired, I barely felt a twitch down there.\n\nAt one point, during one of the frequent water breaks she demanded I take, I managed to turn the conversation to her. I asked her how long she had had the independent studio. When she told me just under a year, I observed I was lucky to get a time slot.\n\n\"I make the rent,\" she replied curtly. \"Finding clients who are willing to work as hard as I ask them to is not easy.\"\n\n\"This is certainly work, but I don't know that it is all that miserably hard.\"\n\n\"Today is just an evaluation. Your workouts start next session,\" she replied ominously.\n\nAt my next hair appointment, I got a grilling from the regulars about my new workout solution. When I told them I had taken the leap of going with Courtney, a few were impressed at my guts. Most apparently thought I was idiot, or a masochist. Given the way I had felt the morning after the first session, I kind of sided with the majority.\n\nBut, today was the first time I was the center of the conversation, I decided to try an idea that had come to me recently. I had already unwittingly benefitted from the suburban rumor mill, and not known I had until this little nexus of the greater overall gossip machinery enabled me to figure out what it was and how it worked. Now I was going to try to actively employ the network to give something a try while I had their attention.\n\n\"Listen, I'd love to keep talking about this,\" I said, employing my best effeminate body language these women seemed to expect of their gay mascot, \"but I've got to tell you the craziest thing!\"\n\nThe 'craziest thing', I had learned, was a term of art among these pro-level gossips. It meant a juicy story that was always sex-related. The ladies leaned in. Even Yvonne slowed down her clippers to ensure I could finish my story before she finished my cut.\n\n\"I was coming home from work a while ago and I saw from the truck in the driveway that my neighbor has a pool, and it was getting cleaned,\" I began. \"After I grabbed a glass of post-work wine, I went into my back yard. We have a pretty thick hedge between us, but what I heard made me go take a peek....\" I carefully changed any details that could tie this story to either me or my neighbor Linda; things like the hedge instead of my actual privacy fence, and the fact that Linda was married, not single. I certainly omitted my climbing the tree to spy!\n\nWhat I concentrated on in juicy, bordering on graphic detail was they way she sunbathed nude while he worked, then how she 'tipped' him afterward. I omitted discussing how banging hot Linda was, but went into some detail on how the pool guy looked, how he was built... and how he was equipped. There were questions from the assemblage about him. I elaborated in truthful but glowing terms. Overall, I wove a compelling, slightly crazy, true except around the edges piece of epic gossip with only two specific pieces of identifying data: The names Danny and Glistening Waters Pool Service."
    ],
    "authorname": "Publius68",
    "tags": [
        "gym",
        "hairdresser",
        "rumors",
        "workout",
        "gossip"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/ideal-suburbia-ch-07b"
}