{
    "title": "Lactation Is Sexy As Hell",
    "pages": [
        "Making the fantasy sound real. \n\nAuthor's Note: I'm not a nurse or a lactation consultant. None of what I say should be construed as medical advice. The purpose of this essay is to use my breastfeeding experience to assist lactation fetish authors in discussing the sexy reality of the fetish. I've nursed three babies. I know what I'm talking about. \n\nIt's important to note that no two women are the same, and no two babies are the same. Each nursing experience is different. I am widely generalizing here, but again, I'm not dispensing medical advice. I know that some women never get a \"let down\" and that hormones and other factors can affect when lactation begins, etc. Keep in mind that my advice comes from my own experience and parenting books, and that my purpose is to help authors write realistically. I'm not trying to titillate the reader; lactation isn't my fetish. \n\n* * * * \n\nProducing milk is one of the most womanly things a human body can do. It's the reason a woman has breasts and a man just has nipples. Other than being able to grow another person inside her body, nothing separates woman from man more than this ability to nourish her infant from her own breasts. \n\nAnd that's only one reason it's sexy. \n\nIn the fetish category at Literotica, tags like \"milk,\" \"milking,\" \"lactation,\" \"lactating\" and others will take the reader to a plethora of stories involving mother's milk. Like any other fetish, some of these stories represent fantasy more than reality, and there are readers seeking the fantasy more than the reality. Other readers crave the down and dirty reality of their fetish. To write for these readers, an author needs the down and dirty. Here is the down and dirty. \n\n1. An author will portray a sexier, more realistic mother if Baby is at least six weeks old. \n\nThe first weeks with a new baby are NOT sexy. Mama needs those first six weeks to heal and to establish a nursing relationship with Baby. A story will be much more believable if the author acknowledges that Mama will have stitches, swelling, hemorrhoids, bleeding, etc., and sex is really out of the question during those early weeks. Mama will also be exhausted to a depth that she never imagined was possible, and she might be a little depressed. \n\nShe'll also feel fat. That baby bump that was so adorable a couple of weeks ago now looks like ripples of flab. Her breasts will be huge and sore sometimes. The hormone shift after giving birth may have speckled her face with pimples she hasn't had since she was fifteen. Not sexy. \n\nThe other thing that many people don't know is that breastfeeding isn't easy at the beginning, even if it's Mama's third baby. It's natural and Baby has that \"rooting reflex\" that causes him to open his mouth like a baby bird to find Mama's nipple, but it isn't that simple. Newborns don't always \"latch\" properly. To get a good latch, Baby has to take Mama's nipple and areola into his mouth, and get the proper suction with his tongue. As soon as he gets it, Mama will hear the rhythmic swallowing that lets her know that Baby's getting her milk. If he doesn't get it and continues to suckle, Mama will get a hickey and cracked nipples. Sure the lanolin ointment soothes and protects, but that stuff is disgusting. It's thick and sticky and it stains clothes. Nothing sexy about that. \n\nBreastfeeding is a hormonally controlled system of supply and demand. The more Baby nurses, the more milk Mama produces. When Baby goes through a growth spurt, Mama can start to feel as though Baby is on the boob twenty-four/seven. It gets frustrating when Mama wants to do something non-baby related, like take a shower, for example. After six or so weeks, Mama and Baby are more likely to have a good routine established, and any story in which Mama is turned on by the act of nursing another adult will sound less contrived and sexier. \n\n2. Boobs are confusing body parts. \n\nGirls spend their early years wishing they had boobs. When they finally appear, they are intensely sexual. Boys stare at them. Girls wish they were bigger, more beautiful. It feels good when someone touches them. Intensely sexual. \n\nWhen a woman becomes a mother, boobs are no longer a fashion accessory to dress up in whatever new style Victoria is peddling this season. They aren't the hot pair of tits that used to attract men. They're not hooters anymore, worthy of winning a wet t-shirt contest. \n\nWhen Baby is born, they become breasts, Baby's sole source of nourishment for the first three months or so. Mothers talk about their breasts and how the breastfeeding is going. They discuss with perfect strangers how their nipples are feeling, and how well the lanolin works to keep them from cracking. They let the lactation consultant grab their breasts and squeeze their nipples to get Baby to latch. Unless Mama happens to be a porn star or a prostitute, more people will see her breasts in the first three months of Baby's life than in the rest of her life put together. \n\nAdd to the mix the fact that the nipple goes into Baby's mouth. Even if Mama's sex partner isn't suckling, Mama can feel a little weird about her partner's saliva being on her nipples. What if Baby needs to be fed in the middle of sex? Mama might feel that she has to clean up first. She boils the binkies, if she's a first-time mother. (By the third child, she'll just blow off the dust and give it back to Baby.) Whether or not any of this concern is rational doesn't matter. A new mother isn't the most rational of all beings. \n\nThe bottom line is that breasts become desexualized when a woman is nursing a baby. It's confusing for women and can cause stress in a sexual relationship. If the author wants a lactation story to sound realistic, acknowledge the confusion that Mama feels about her breasts. The story will be hotter for it. \n\n3. Fuck caffeine and alcohol. Put a turbo-shot of oxytocin in the coffee. \n\nOxytocin is an awesome little chemical. It's responsible for a whole bunch of good things in our bodies, but it is the hormone responsible for both orgasm and \"let down\" of breast milk. This is the number one reason that lactation is sexy. \n\nWhen Baby latches and stimulates the nipple and areola with his tongue, it sends the message to the brain to release the milk. At first, Baby gets a small amount of watery milk, called foremilk. This is the thirst quencher. After a minute or so, the breasts get the memo from the brain, and let down occurs. Later in the nursing session, the creamier hindmilk comes through. This contains more fat, and it satisfies Baby's hunger. \n\nWhy is let down sexy? It feels like an orgasm in the breasts. Both breasts, no matter which side Baby is nursing on. Sometimes let down occurs more than once, and when Baby switches to the other side, there is another let down. Awesome and intensely sexual. Oxytocin is good stuff. \n\n4. Sharing mother's milk is a little bit taboo for Mama. \n\nA new mother struggles with an awful lot of feelings, even if it's not her first baby. The postpartum hormones are a crazy cocktail, and they make Mama a little wonky. Acknowledge that in the story, and it adds realism. Acknowledge that Mama is reluctant to admit that any of it is sexy, and it touches on the taboo. Taboo is hot. \n\nImagine this. Baby is about three months old. Mama has healed and has had sex a few times since Baby was born. Daddy wants to indulge in a little \"lactation play.\" \n\nScenario #1 \n\n\"Sweetie. How 'bout you let me take a taste of that nectar dripping from your luscious breasts?\" asked Daddy as he thrust his cock in and out of Mama's pussy. \n\n\"Oh, yeah,\" said Mama. \"That would be so hot.\" \n\nDaddy put Mama's nipple in his mouth and started to suck. Milk sprayed from her nipple as she got more and more aroused. Daddy swallowed his first mouthful, and said, \"Oh, let me put that in my coffee tomorrow.\" \n\n\"Sure, honey,\" she said. \"Oh, no. The baby's crying. Go get him for me, would ya?\" \n\nDaddy gets the baby from the crib in his nursery and places him gently at Mama's naked breast. Baby nurses on the nipple that Daddy had occupied just a moment ago. \n\nScenario #2 \n\n\"Sweetie. How are your nipples feeling? Is that lanolin helping?\" asked Daddy as he fucked Mama gently. \n\n\"It worked like a charm. I don't even have to use it anymore,\" said Mama. \n\n\"Do you think it would be OK if I kiss your nipples?\" \n\n\"I don't know, hon. What if your saliva is on them, and Baby needs to eat?\" Mama said. \n\n\"I'll get you a washcloth if he wakes up,\" he said. \"Please? It's been such a long time.\" \n\n\"OK. But don't suck on them. That's too weird.\" \n\n\"Why is it weird? You always liked having your nipples sucked.\" \n\n\"I don't know. I just don't like the idea of them being in your mouth before they go in Baby's mouth,\" she said. \n\nDaddy gently caressed Mama's breasts, causing her to shiver. Her breasts were full and heavy. He thought she had never been so sexy in her life. \n\n\"You're so beautiful,\" he said. He reached up to kiss her nipple. \"Just my lips, hon. No tongue.\" He placed gentle kisses all around her nipples and areolae and then let his tongue slip over the top of the nipple. He hoped she'd think it was accidental. \n\n\"Hon?\" she asked. \n\n\"It's OK, sweetie. I'll get a cloth if he wakes up. Just let me taste you.\" \n\nMama didn't answer. Daddy took advantage of her silence and put his lips around her nipple, drawing it gently into his mouth. He suckled again and again, until he felt the warm milk from her breast washing over his tongue. \n\n\"Oh,\" Mama sighed. \"This is so wrong, but don't stop.\" \n\nDaddy reached between her legs to finger her clit while he nursed at her breast. He took more of her areola into his mouth and sucked harder. Mama moaned, so he sucked again. And again. His finger swirled around and around the hard nub hidden in her pussy as he sucked even a little harder. \n\nAll of a sudden, Mama's body tensed, and she started to cry out, \"Oh my god. Oh. I'm coming. I'm coming in my tits too. Oh, god!\" \n\nDaddy's mouth was suddenly filled with warm milk as it sprayed from Mama's nipple. The other nipple sprayed as well, but Daddy didn't notice until he pulled off and was sprayed in the face. Mama giggled with embarrassment. \"I shoulda warned you, I guess. Usually I cover the opposite breast with a nursing pad.\" \n\nDaddy got up to get a washcloth to wipe his face just as Baby started to cry. \"I'll be right back with Baby and a washcloth,\" he said. \n\n* * * * \n\nWhich scenario seems more realistic? Number 1 for Mama's willingness to indulge in Daddy's fantasy? Or Number 2 for Mama's reluctance to take part in an act that seems wrong to her, even if it's OK to the rest of the world? The taboo makes it hotter. \n\nThere is a readership for every fetish at Literotica, and for every fetish, there is the audience that looks for the exaggerated, fantasy-laden tale. There are other readers, however, that like their fetish fiction with a heavy dose of realism. To write to those readers, authors should acknowledge that the \"Mama\" character shouldn't be hopping straight from the delivery room to nursing her partner. Mama won't be feeling too sexy, and she'll still be wrestling with her feelings about her body and having sex. Set the story a few weeks after delivery, and your story will be more realistic and sexier. \n\nAcknowledge Mama's conflicting feelings. Unless she's a robot, she'll have all kinds of things going through her head. Let the reader experience those feelings. Talk about the taboo. \n\nFor god's sake, don't skip the let down. Remember that oxytocin is responsible for letting down the milk and for both partners' orgasms. Play with that in the story. The orgasms that will result will be powerful. \n\nOf course, there are other faux pas that fetish authors make when writing a lactation story, but there are other \"how to's\" that deal with the basics of breastfeeding. If nothing else, parenting websites will have that information too. Do research and make it real. That's the key to making your lactation story sexy as hell."
    ],
    "authorname": "patientlee",
    "tags": [
        "how to",
        "writing advice",
        "fetish",
        "lactation fetish",
        "lactation",
        "breastfeeding",
        "nursing",
        "breast milk"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/lactation-is-sexy-as-hell"
}