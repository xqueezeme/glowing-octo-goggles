{
    "title": "Witness Ch. 04",
    "pages": [
        "Chapter Four - Braidwood\n\n\"If you hadn't spent all your time trying to put your pee-pee in her pooper and done your job we wouldn't be in this predicament,\" Brett Mendelsohn was ropeable and taking it out on Elliot Granger.\n\n\"I know you're angry Brett but you better curb your mouth. The tranny cooze had changed her mind and I did everything I could to get her to stay the course,\" Elliot replied.\n\nBrett eyed him suspiciously.\n\n\"Everything? What does that mean?\" he asked.\n\n\"I'm saying that maybe if she was given a physical right now there might be a few bumps and bruises on her,\" Elliot gave him a knowing look but he was lying.\n\n\"Without her evidence I don't have a case and I'll have to drop the prosecution. The Napolitano lawyers will want prejudice attached which means that I can't charge Luca Tattaglia with the same crime again. He walks and I look like a schmuck,\" Brett shook his head. \n\n\"I'm going to give her one last chance,\" Brett sighed and opened the door to the living room.\n\nPoppy was sprawled on the sofa in her hooker attire, micro-miniskirt, crop-top, L'eggs sheers, red heels, heavy makeup and teased out hair.\n\n\"You know that from now on your life is fucked. If the Napolitanos don't kill you to keep you quiet, your life is still not going to be worth living. Every time you show your face on the street I'll have you locked up. You'll have so many raps that you'll have to do hard time,\" Brett threatened her.\n\n\"That kid in the fancy school won't be there much longer, you won't be able to pay the tuition, besides which when I tell the school board that he's being sponsored by a hooker, those skinny white bitches will see to it that he's kicked out,\" he continued.\n\n\"If you ever finish your legal studies I'll make sure you never get a job. You'll live your life sucking off old geezers for rent money, maybe your brother will have to join you selling his ass,\" Brett kicked her feet off the coffee table.\n\nPoppy glared at the ADA when he mentioned her brother.\n\n\"I'm recanting my testimony and that's that! You can't make me say that Tattaglia guy did it,\" Poppy folded her arms.\n\n\"Get the tranny whore packed up and drop her off at her apartment. Charge her with soliciting, she admitted that she was having sex for money at the Metropole,\" Brett Mendelsohn was defeated.\n\n\"Ok. Get packed up, your holiday is over. At least I can go back to doing real police work,\" Elliot snatched Poppy's elbow and dragged her to her feet.\n\nWhen Brett Mendelsohn left both Poppy and Elliot breathed a sigh of relief.\n\n\"Well that went better than I thought it would. I thought he would throw me in the clink on some trumped up charge,\" Poppy said, wiping off her heavy makeup with a towelette.\n\n\"It went almost too well but I suppose there isn't much else he can do,\" Elliot rubbed his chin thoughtfully.\n\n\"Are you going to charge me with soliciting at the Metropole like he said?\" Poppy asked.\n\n\"He was just angry. You made the admission during testimony that you have since recanted, the custody Sergeant wouldn't even lock you up,\" Elliot replied and felt instantly guilty about when he had her thrown into the tank and withheld her legal counsel. \n\nPoppy had not told him about what she'd had to do to prevent herself from being gang raped.\n\n\"What do I do now?\" Poppy asked.\n\n\"You get packed up and I take you home,\" Elliot replied.\n\n\"Do you think he's right? Will the Napolitanos kill me anyway?\" Poppy looked frightened.\n\n\"I've thought long and hard about it. The mob is about making money not attracting undue attention from law enforcement. You and I are the only ones who know that Robert has been kidnapped and they aren't going to kill me; they hardly ever kill coppers, that draws way too much heat,\" Elliot explained.\n\n\"They know that it's highly likely that if they do take you out that I will testify about Robert's kidnapping and that means bringing in the FBI which they definitely don't want. Also if they kill you the ADA can use your recorded testimony as you won't be around to recant it. It's classic Catch Twenty Two. I think that once they hear that the ADA is dropping the charges against Luca Tattaglia they will let Robert go and leave you alone. They've sent their message. With prejudice attached the ADA can't charge Tattaglia again anyway,\" Elliot took Poppy in his arms and comforted her.\n\n\"When will I get Robert back?\" Poppy began to shiver.\n\n\"The honest answer is I don't know but I'm guessing as soon as the charges are dropped, so soon,\" Elliot hugged her.\n\n\"Go and get packed. We've still got to play this out until we get Robert back. You're the crazy hooker who I hate and I'm the angry detective who you despise,\" Elliot let her go.\n\nPoppy was far from happy with the current situation but her ears had pricked up when Elliot had used the words 'until we get Robert back'.\n\nShe packed two battered suitcases and the box of books and had to admit that she would be sad to leave the safe house. Although it was effectively a prison except for their daily exercise, it had become their home; she and Elliot had lived together as a couple. Her government stipend would cease. She would need to earn money. She would have to go back to the streets.\n\nThe drive back to her city apartment was conducted mostly in silence; both she and Elliot were lost in their thoughts.\n\nElliot helped Poppy carry her suitcases up to her tiny one-bedroom apartment. The locals looked at Elliot suspiciously; it was obvious to them that he was a cop.\n\nThe first thing that Poppy noticed was that there were new locks fitted to her apartment door. Strong, commercial grade locks. The keys had been left on the kitchen counter.\n\nShe looked at Elliot questioningly.\n\n\"I had them fitted today. It will give us more security,\" Elliot began to unpack her books.\n\n\"Us?\" Poppy looked surprised.\n\n\"You don't think I going to let you live here alone until all this over do you?\" Elliot smiled at her.\n\n\"I don't get it?\" Poppy was confused.\n\n\"I'm going to have to work my day job; I have to keep up the fa\u00e7ade. But I'm staying here with you,\" Elliot smiled at her again.\n\n\"How do you know I want you to?\" Poppy sulked.\n\nElliot was surprised; the disappointment on his face evident.\n\nPoppy locked the three deadbolts fitted on the door and turned to him and smiled.\n\n\"Don't be silly. Of course I want you to stay here and keep me safe. But I only have one bed so we will have to share. Why don't we go and see if we can both fit into it?\" she smiled at him coyly and took his hand and led him towards the bedroom door.\n\n\"Don't you have to... you know?\" Elliot blushed.\n\n\"I already 'you knowed' before we left the safe house. I always intended on throwing you a farewell fuck,\" Poppy was using her street voice again.\n\n\"I hate it when you talk that way,\" Elliot bowed his head.\n\n\"Then come and make love to me. Make me feel safe. Make me feel like you care,\" she looked up him with her big green eyes and Elliot's heart melted.\n\nHe scooped her up in his arms and carried her through the door and she squealed like a girl. He put her down on the bed and looked down at her. She posed for him, splaying out her arms, tucking her legs, her hair fanned out on the pillow. Elliot sat on the bed and leaned down and kissed her softly, working at the knot on his tie, then unbuttoning his shirt, all the time kissing her.\n\nPoppy reached up and helped Elliot take off his shirt and then she reached for his belt buckle. Elliot became impatient and ripped his pants open and pushed them down where they bunched around his feet. Poppy giggled as he maniacally ripped off his shoes and socks without untying his laces.\n\nShe stopped giggling when he loomed over her, naked and rampant, his muscled torso pumped, his eyes clouded with lust. He fell on her and pulled her tank-top up over her head and then fumbled with her bra which he eventually managed to unclasp and throw across the room. Poppy lifted up her feet so that he could pull down her miniskirt which ended up being tossed next to her bra.\n\nPoppy hooked her fingers into the waistband of her panties and pantyhose with the intention of rolling them down her legs but Elliot fell on top her and kissed her passionately as his hands went to her bosom.\n\nTheir lovemaking recently had been tender and unhurried but Poppy had to admit that she was turned on by Elliot's new eagerness and passion. His mouth alternated between her breasts and her mouth, sucking and nibbling her nipples and excitedly driving his tongue into her mouth and crushing her lips with his.\n\nShe reached for him and found him hard, throbbing and ready; precum leaking profusely from his glans. Elliot surprised her when he leapt off her and spun her around on the bed and pulled her to her knees. He yanked her pantyhose and panties down her thighs and tore away her tuck. \n\n\"Oh my God!\" she gasped as he plunged his rampant cock into her anus.\n\nShe arched her back and wriggled her buttocks, pushing back against him.\n\n\"Fuck me Elliot! Fuck me!\" she moaned like a slattern.\n\nElliot placed one hand on her hip and reached under her with the other and found her erect. He squeezed Poppy's penis and began to fuck her. He stroked her in time with his thrusts as he violated her anus.\n\n\"Yes, Elliot, yes!\" Poppy screamed as his cock pressed against her prostate and stretched her sphincter.\n\nHis hand milked her, squeezing and caressing her throbbing her cock, eking pre-ejaculate from her pulsing phallus. He drove his cock deep inside her, feeling her anus squeeze his bloated organ.\n\nPoppy's semen spattered on the bedspread as she orgasmed. She would have collapsed but Elliot gripped her hips with both hands and held her as he pounded his cock in and out of her tight passage as he inseminated her anus.\n\nPoppy squealed and writhed as she felt Elliot's cock pulsing inside her, filling her with hot ejaculate. The last of her issue dribbled from her sensitive cock, she milked it with her fingers, relying on Elliot to keep her on her knees. She fell flat on the bed and Elliot collapsed on top her, squirming and bucking as he squirted the last of his spunk deep in her bowels. She lay there gasping, the weight of his body pressing her to bed, his breath ragged in her in her ear. He bit her shoulder, but not painfully, it was a passionate nip.\n\nWhen they had their breathing under control Elliot climbed off Poppy and fell onto the bed beside her. She rolled over and clung to him and he enfolded her in his arms.\n\n\"What was that?\" Poppy gasped.\n\n\"I don't know. It was just... I don't know... I just wanted to fuck you, to possess you,\" Elliot panted, wiping her sweaty bangs from her eyes.\n\n\"Well you can do that again but not until my ass has recovered,\" Poppy smiled and ran her fingers though his sweat-soaked hair.\n\n\"So you liked it,\" Elliot grinned at her.\n\n\"Don't grin at me like you're some champion lover,\" she teased him.\n\n\"I thought I was pretty good,\" Elliot propped himself up on one elbow.\n\n\"Well now I need a shower and I need to change the bedding,\" Poppy pouted.\n\n\"Oh shut up,\" Elliot laughed jovially.\n\nHe leapt off the bed and picked Poppy up and threw her over his shoulder.\n\n\"Put me down you Neanderthal!\" Poppy beat her fists on his back and kicked her legs, but she was giggling uncontrollably.\n\nShe managed to kick off her heels before Elliot dropped her on her feet in the shower, stepped in with her and closed the door.\n\n\"There isn't enough room for both of us,\" Poppy protested.\n\n\"Well we'll just have to wash the bits we can't get to on each other won't we,\" Elliot laughed and turned on the water.\n\nLater when Elliot was getting dressed things became serious again.\n\n\"I have to go down to the squad room Poppy and go back to work. I'll be assigned a partner and a shift and being gone from the squad for so long I will likely get the graveyard shift,\" Elliot explained.\n\n\"Which isn't a bad thing. It means I'll be working nights so you can stay here locked up safe while I'm working. I'll check on you during my breaks and I'll be able to spend my days with you,\" Elliot thought it was a good deal but when he saw the storm clouds in Poppy's eyes he realised that she was going to push back.\n\n\"You're not telling me that I've got to hold up here in my apartment while you're working? That I can't go out at night? How am I going to make a living?\" Poppy put her hands on her hips.\n\n\"You're not telling me that you're going back out on the streets?\" Elliot was incredulous.\n\n\"You told me I'm safe from Napolitanos so why not?\" Poppy inclined her head, giving Elliot attitude.\n\n\"Because I assumed that your hooking days were over,\" Elliot's face was becoming red with anger.\n\n\"Robert still has a place at the Grosvenor School and I need to keep paying for it so he can go back there when he's released. In case you didn't hear your friend fuckwad Mendelsohn, the gov'mint turned off the tap honey; I ain't got jack-shit,\" Poppy had reverted to her street voice which irritated Elliot.\n\n\"We don't know for certain about the Napolitanos. Anyway, how can you go back to selling your body like that? How can you throw away what we have together?\" Elliot was nearly shouting he was so angry.\n\n\"What he have together? You had your pretty little tranny fuck-doll all to yourself at the safe house living in our little fantasy world. Me pretending to be a housewife and you pretending to be my knight in shining armour but what did you think was going to happen after?\" Poppy was seething.\n\n\"You goin' to take me home to meet mom? You goin' to take me to the annual policeman's ball? Am I going to live in the suburbs, cooking and cleaning and waiting for you to come home? You goin' to be a brother-in-law to a junkie whore's son?\" Poppy was livid.\n\n\"You really are just a whore aren't you?\" Elliot leaned in, his face inches from hers, his fists balled.\n\n\"And you really are just a cop. Go ahead and hit me. That's what cops usually do. They take a freebie or they give me a kicking or sometimes both. You'd know all about that wouldn't you?\" Poppy glared at Elliot's clenched fists.\n\nHe threw a punch at her but he aimed it to miss and he smashed a hole in the wall beside her head.\n\n\"Fucking tranny whore!\" Elliot screamed at her, snatched up his coat and slammed the door on his way out.\n\nPoppy triple locked the door and folded herself up into a ball on the floor and sobbed uncontrollably.\n\nElliot took the stairs, fuming. He hated Poppy but he hated himself more. He hated that he had called her a whore, he hated that the last time they had lain together it had been a ferocious animalistic fuck instead of the tender, caring, intimate, lovemaking they usually enjoyed but most of all he hated that Poppy was right.\n\nElliot met with Danny Logan, the Chief of Detectives, and briefed him. The Chief was livid that Poppy had recanted her testimony.\n\n\"What the fuck happened Elliot? You had that cooze cooped up in that fuckin' holiday shack... you didn't beat her did you? I heard about what you did to her in the lockup tank... Jesus... did you knock her around?\" Danny ran his hands through his hair.\n\n\"Not that I'd blame you. That fuckin' tranny hooker has a mouth on her and she had it coming, but fuck man, we don't need to get the blame for this,\" Danny continued before Elliot could answer.\n\n\"Chief, I think we can lay this right at the feet of the prosecutor. The cooze was ready to testify but it just all took too long. The longer she had to think about it, the longer she had to think about what would happen to her if she did. Then the fucking ADA recorded her testimony just in case she was killed. Shit, that would've scared the shit out of anyone,\" Elliot offered.\n\n\"Yeah, well that's the line I'm taking. The ADA is making a formal announcement this evening. He's going to say that all charges against Tattaglia are being dropped because his only witness refuses to testify. It's a fucking half-truth but it saves his face. He'll infer that the Napolitanos got to her, try to push the blame away. I don't care so long as we don't have to eat the shit sandwich. Get down to the squad room and pick up your assignments; I want you to lay low for a while until this blows over,\" the chief dismissed him with a wave of his hand.\n\n*****\n\n\"Hey girl, you lookin' fine. You been on vacation, I ain't seen you in a coon's age. You nearly lost your corner sister,\" Latisha Collins was squeezed into leopardskin lycra leggings and a black lycra longsleeved top; her gold fuck-me heels, high hair, heavy makeup and junk jewellery advertised her trade.\n\n\"I took my brother away on an extended vacation. Lake Tahoe. Frolicking on the beach during the day and fuckin' high-rollers for money at night,\" Poppy hugged Latisha and air-kissed her cheeks.\n\nPoppy was back in her hooker's livery: black velvet hotpants, a mauve satin blouse with a cheap imitation chinchilla fur coat to keep warm. She had re-dyed the blue and cerise highlights into her blonde hair. Her makeup was heavy and she was wearing cheap cherry-red fuck-me shoes and L'eggs Sheer Energy pantyhose. It felt almost like she had never left the streets but her heart sank every time she recalled her time at the safe house with Elliot so she tried her hardest not to.\n\nAll she was worried about at the moment was when Robert was going to be released and how she was going to continue to pay for his board and education.\n\nA car backfired and Poppy ducked down and turned away. This was not lost on Latisha.\n\n\"Word on the street is that you got tied up in that mob hit at the Metropole. They say you were a material witness or some shit,\" Latisha came over and offered Poppy a smoke.\n\n\"They say a lot of things don't they?\" was all Poppy replied, looking up when a passing man showed interest in her.\n\nHe approached Poppy and solicited her. She took him down the alley behind the dumpster and blew him for twenty five dollars. She was pleased to find that the car floor-mat was still under the dumpster and she was able to pull it out and kneel on it while she worked. The girls used it to protect their knees from the filth-strewn ground while they fellating the customers.\n\nShe was busy that night and she was happy to be. It was sorely needed money and it kept her mind off thinking about Robert, even though worrying about him took up every second of her free time. She did a few knee-trembling tricks up against the wall. It was easy work for her, lean against the wall, pull down her shorts and pantyhose just far enough to provide the john access to her ass, let him finish the job then pull the condom off his cock and flick it in the dumpster.\n\nA few of the johns wanted full service and the comfort of a bed. She led them back to the Metropole Hotel where a new guy had replaced Stanley Britton as concierge and the bloody carpet had been replaced in the hallway where the shooting had taken place. Even murder didn't stop commerce.\n\nOne of her regular leg fetish guys paid her extra to keep her pantyhose after he had blown his load over her legs and feet. It was money for nothing because she would have changed into a fresh set of L'eggs anyway.\n\nFor a few days life returned to normal for Poppy, she worked the streets in the evenings and returned to her little apartment exhausted just before sunrise.\n\nOne morning just after she had returned home and taken off her makeup and changed into a housecoat there was a knock on the door and Poppy froze. The door was triple locked but she still didn't feel completely safe. The nearest phone was located in the corridor near the stairwell and she wished that she had paid for her own telephone to be installed but it was an expense she could do without. She doubted that Elliot would have given it to her but she wished she'd asked him for a gun.\n\nPoppy shivered with fright waiting for the door to be forced open or for a fusillade of bullets to rip through panels but she heard nothing other another series of knocks on her door.",
        "\"Poppy! Poppy! Let me in; it's me Robert,\" she heard her brother cry through the door.\n\nShe ran to the door and fumbled with the locks, ripping off an acrylic fingernail in her eagerness to open the door. Robert stood there looking forlorn, carrying a backpack. He was still dressed in his school uniform but he looked clean, well fed and unharmed. Poppy pulled him inside, slammed and locked the door and wrapped her arms around him, nearly crushing him in her eagerness and excitement.\n\nPoppy smothered his face with kisses and Robert squirmed in her grasp. As much as he loved being cuddled and kissed by his big sister, this was becoming embarrassing.\n\n\"Are you ok? Did they hurt you?\" Poppy began to bombard him with questions which the boy calmly ignored until she let go of him and allowed him to sit down.\n\nHe looked around her apartment and studied it. It had been a long time since he had been here and he had expected that his sister would have moved into a well-appointed condo, not still be in this one bedroom flat in a low rent apartment block. He might be a kid but he knew that hot-shot legal eagles didn't live in tenements.\n\nRobert explained to her that he had stayed at the cabin with Frankie for the few days that he was kidnapped. Frankie had treated him well and was friendly. Frankie taught Robert how to play cards and they had also played checkers. Frankie made him Italian food and told him stories of his life as a boy in Sicily. Robert had been well treated and talked to Poppy about his abduction as if it had been adventure. She recognised the symptoms of Stockholm syndrome.\n\nFrankie had delivered Frankie to Poppy's front door and told him to count to twenty before knocking and left him there.\n\nPoppy hated that Robert talked about Frankie like he was some sort of burly benevolent uncle but Robert wasn't to know that Frankie had sexually violated his sister repeatedly ... nor would he ever know. \n\nPoppy explained away the tenement apartment she was living in as being a contingency.\n\n\"Remember when I visited you at the Grosvenor School with Mister Granger?\" Poppy asked Robert.\n\nShe kept stroking and touching Robert and like most young boys his age he was becoming annoyed with her being overly affectionate.\n\n\"Elliot? He seemed like a nice man. He was with you when the men took us away, I remember that,\" Robert hopped off the lounge and made his way over to the small refrigerator.\n\n\"Well I suppose you've already guessed that he is a policeman and that he was my bodyguard. He put me here to keep me safe because those guys know where I really live,\" the lies just rolled off her tongue.\n\n\"I was involved in a big mob case but now it's gone away and we are no longer in danger. You can go back to the Grosvenor School and I can go back to my apartment,\" more lies, easily told.\n\nPoppy joined him at the refrigerator and took the candy bar he had selected from him and gave him an orange instead.\n\n\"Can I say with you at your real apartment for a while Poppy?\" Robert asked.\n\n\"I want you back in school Robert. You've already missed some tuition. We'll go somewhere nice next semester break ok?\" Poppy mussed his hair and he allowed her to because she relented and gave him the candy bar too.\n\nPoppy left Robert in front of the TV and went to use the public phone near the stairway.\n\n\"I need a favour Elliot, please don't hang up,\" Poppy breathed into the phone.\n\n\"I'm not in the favour business Miss Evesham,\" Elliot said gruffly but if Poppy could see his face she would see the glimmer of hope in his eyes.\n\n\"They released Robert. He's safe and well,\" Poppy said.\n\n\"Thank god,\" Elliot said and she could hear the genuine relief in Robert's voice.\n\n\"I need to get him back to the Grosvenor School as soon as possible and I don't have a car and I can't ask anybody I know. Robert is here at the apartment, he thinks this is the safe house. He still doesn't know about... about how I make a living,\" she said reluctantly.\n\n\"I don't know Poppy,\" Elliot sighed.\n\n\"Don't do it for me. Do it for Robert. I won't ask for anything else I promise,\" she pleaded.\n\n*****\n\nThe long drive to the upstate school was uncomfortable for Elliot and Poppy who kept their conversation to a minimum. Poppy was wearing one of her business suits, passing herself off as a legal professional. Elliot and Robert hit it off and Poppy let him sit in the front seat of the unmarked police car so that Elliot could show him how the lights, siren and police radio worked.\n\nHe entertained Robert with police stories, nothing too grisly or gruesome but exciting 'cops and robbers' tales that kept Robert amused and fascinated. Robert bombarded Elliot with questions about being a policeman which Elliot gladly answered and embellished.\n\nEvery now and then Elliot would look at Poppy in the rear vision mirror but she seemed lost in thought. They stopped for a break halfway and over Poppy's objections Elliot bought Robert an ice-cream.\n\n\"He likes you,\" Poppy said to Elliot when Robert went to use the bathroom.\n\n\"He's a good kid,\" Elliot licked his ice-cream cone.\n\n\"He is a good kid,\" Poppy agreed with him.\n\nThe silence became uncomfortable.\n\n\"I'm sorry for what I called you; I apologise,\" Elliot finally broke the silence.\n\n\"Apology accepted. You didn't really insult me; you just told me what I am. It doesn't change anything Elliot,\" Poppy folded her arms and looked away from him.\n\n\"You ever wonder how they found out about Robert? How they knew you were visiting him? How they knew where the safe house was?\" Elliot changed tack.\n\n\"Someone in law enforcement told them. Brett Mendelsohn kept carping on about corruption and the need for secrecy,\" Poppy answered.\n\nThe truth was that Poppy hadn't given much thought as to how the mob knew about Robert; she was too concerned about the consequences.\n\n\"Until the ADA recorded your testimony, the mob would have been happy to just take you out so there were no witnesses left to the homicide. If they knew about the safe house they would have come for us. So logic says that they didn't know where the safe house was until after you recorded your testimony,\" Elliot explained.\n\n\"So what?\" Poppy sounded disinterested.\n\n\"Listen to me Poppy. Their lawyers would have told the Napolitanos about the recorded testimony because the prosecutor would have had to tender a copy of the tape to the court and the defence attorneys. But Robert's existence and whereabouts were not common knowledge. Only myself and Brett Mendelsohn knew about him so if Brett got mouthy then word would have got to the Napolitanos,\" Elliot continued anyway.\n\n\"What does it matter Elliot? I have Robert back now and I'm safe now that Luca Tattaglia has immunity from prosecution,\" Poppy sounded exasperated.\n\n\"What matters is someone put your life at risk. Someone put Robert's life at risk. They did it on my watch!\" Elliot said grimly.\n\n\"So as usual it's all about you,\" Poppy hissed and turned away.\n\nElliot spun Poppy around by her elbow so that she was facing him. Her green eyes were aflame with anger.\n\n\"No, it's about someone putting people I care about lives in danger. Someone sold you out,\" Elliot tried to sound calm.\n\n\"That's what people do to me Elliot. They sell me out. So now I'm selling myself out, but I'm selling myself out on my terms,\" Poppy glared up at him.\n\n\"Why do you hate yourself so much?\" Elliot appealed to her.\n\n\"Why do you hate me so much?\" Poppy continued to glare at him.\n\n\"I don't hate you Poppy, I...\" Elliot looked away.\n\n\"Yes?\" Poppy waited anxiously for the rest but Robert came skipping up to them with a smile on his face.\n\n\"What were you two talking about?\" Robert grinned at them.\n\nElliot took a step back and breathed out.\n\n\"Nothing important Robert. I was telling your sister that I think that you are very brave boy,\" Elliot took the car keys from his pocket.\n\nThey spent the rest of the trip explaining to Robert that he couldn't tell anyone about his kidnapping. That even though Frankie had been nice to him, that if he told anyone found out what had happened to him that Frankie and his cohorts would come looking for Poppy and him.\n\nRobert was intelligent enough to understand the seriousness of the situation.\n\nAt the Grosvenor School they parked in the same place they had parked in before. It was midweek and the visitor's car park was empty.\n\n\"I won't be long. I just need to check in with the Dean and get Robert settled,\" Poppy said, helping Robert into his blazer and straightening his tie. \n\n\"I need to use the phone anyway,\" Elliot said and walked over to a public phone in the corner of the car park.\n\nHe turned and watched Poppy walk away from him down the path holding Robert's hand. He tore his eyes away when the longing he felt for her began to resurface. He turned to the phone and picked up the receiver.\n\nThe Dean of the Grosvenor School was a tall man in his fifties. He spoke with a clipped accent and welcomed Poppy and Robert into his office. Poppy noticed that his eyes crawled over her. Something had changed.\n\nPoppy told the story they had fabricated during the journey about a family emergency and apologised for taking Robert from the school without notice.\n\n\"We kept Robert's place of course because you continued to pay his board and tutelage in his absence. His teachers will provide him with make-up tuition so that he won't be disadvantaged,\" the Dean smiled at them both.\n\n\"Now Robert, go outside and meet up with Mrs Frobisher who will settle you in your dorm and take you to class,\" the Dean smiled at Robert.\n\nRobert gave Poppy a hug and a peck on the cheek; he picked up his backpack and left the office. \n\nThe Dean's demeanour changed immediately that Robert left the room.\n\n\"I had a call from Assistant District Attorney Mr Brett Mendelsohn,\" he announced and Poppy felt the ground open beneath her.\n\n\"He didn't tell me everything because he couldn't for legal reasons but he did tell me that you are not the legal secretary you claim to be. He told me that you are in fact making a living immorally,\" the Dean's eyes scathed her breasts and drifted down to her demurely crossed legs.\n\n\"I'm a progressive man Ms Evesham but if this were to come to the attention of the school board I'm afraid that Robert would have to be expelled,\" he got up from behind his desk and walked to the office door and locked it.\n\nPoppy wasn't stupid. She knew what was coming next. She just wandered if Brett had also told him that she was transgender.\n\nShe looked at the Dean who stood before her, looming over her, his eyes filled with lust.\n\nPoppy dropped to her knees and unzipped his fly. The Dean was already erect and she had difficulty taking his penis from his underpants but when she freed it, it stood out proud and throbbing. It was nothing impressive but then again Poppy had seen hundreds of penises.\n\nShe dutifully lowered her mouth to his organ and lapped at it. The Dean was so excited that he climaxed immediately, spattering Poppy's face with the first rope of ejaculate. Poppy engulfed his penis and swallowed the remainder, not to pleasure the Dean but to keep his spunk off her clothes.\n\nThe Dean put his hands on her shoulders to steady himself whilst she sucked him dry and then spat him out. He patted his penis dry with a handkerchief which he pointedly didn't offer to Poppy. She took the box of tissues off the Dean's desk and wiped her face whilst he tucked his penis into his pants and zipped.\n\nPoppy got to her feet.\n\n\"I take it you will be wanting this type of payment every time I visit the school?\" Poppy said pragmatically.\n\n\"You are indeed an intelligent young woman, even if you are a whore,\" the Dean's smile held no warmth.\n\n\"See yourself out Miss Evesham,\" the Dean made his way back behind his desk.\n\nPoppy stopped at the ladies room to rinse out her mouth, wash her face and reapply her makeup. She wasn't so much angry as disappointed but then again she expected men to treat her this way and she would do anything to keep Robert at the prodigious school.\n\nShe walked to the car and found Elliot leaning against it waiting for her. She desperately wanted a cigarette but she knew he would get angry so she didn't ask.\n\nHe got the door for her and she noticed the appreciative look he gave her legs as her skirt rode up when she climbed into the car but she was in no mood for men's appreciative glances at the moment.\n\nThey drove in silence, Poppy wondering how long she could keep Robert at the Grosvenor School with the sword of Damocles hanging over her head. Men like the Dean were seldom kept happy with a monthly blowjob. He'd want a regular fuck and likely pass her around his friends. She wondered how many other women the Dean had blackmailed into providing him with sex so that their children could attend the school.\n\nShe was leaning against the window and not paying much attention when she suddenly realised that they had entered a town that was not on their route back to the city.\n\n\"Where are we?\" Poppy asked as she stopped daydreaming.\n\n\"Welcome to Braidwood,\" Elliot said, his voice noncommittal.\n\n\"Why are we here?\" Poppy asked looking around the main street of the town.\n\nIt wasn't exactly a small town but it wasn't a metropolis either; far from it in fact. The buildings were well maintained but they had an air of antiquity to them. The businesses seemed to be prospering and the townsfolk well-heeled.\n\nElliot drove through the town without stopping and without answering her question.\n\nHe turned down a long well-kept gravel drive that led to a ranch-style house where a woman wearing an apron waited on the porch watching the car approach. When Elliot stopped in front of the house Poppy could see that the woman was wearing a stylish housedress, low heels and nylons. Her makeup was light but perfect and her long brunette hair was piled loosely on top of her head, held in place with long wooden pins. She looked like a country wife who had style.\n\nShe also had a strong resemblance to Elliot. She was tall, slim and very attractive.\n\nElliot parked the car and the woman came down off the stoop and hugged Elliot and kissed his cheek. A Labrador scampered around Elliot and he hugged the dog, stroked it briefly and threw a stick for it to catch. Elliot opened Poppy's door and helped her out of the car. \n\n\"Penelope Evesham this is my sister Sharon Granger,\" Elliot grinned.\n\nPoppy offered her hand nervously but Sharon leaned in and hugged her and kissed her cheek. The Labrador returned and got under everyone's feet.\n\n\"That's Charlie, I see his manners haven't improved since I was last here,\" Elliot threw the stick again and the dog bounded after it.\n\n\"You go set the table. I've made us a late lunch. Don't you dare touch a thing until we join you, now scoot. I want to talk to the woman who has turned my misogynist asshole brother into a gentleman,\" Sharon waved Elliot away.\n\nPoppy was speechless and dumbfounded and allowed Sharon to lead her onto the porch and seat her at a white cane outdoor setting under the shade of the veranda.\n\n\"He said you were beautiful but he didn't do you justice,\" Sharon smiled at Poppy and poured homemade lemonade from a pitcher.\n\nPoppy still didn't know what was going on.\n\n\"That lunkhead didn't tell you did he?\" Sharon passed Poppy a glass of ice-cold lemonade.\n\n\"This is our family home left to us by our parents. We were going to sell it and split the profits but it has too much sentimental value and when Elliot left for the city it made sense for me to live here,\" Sharon at least explained something.\n\nPoppy sipped the lemonade. She was parched and needed to wet her mouth so she could talk.\n\n\"Ok. Why am I here?\" Poppy asked, still confused.\n\n\"Do you know how many women Elliot has bought to this house since he moved to the city?\" Sharon looked at Poppy over the rim of her glass.\n\nPoppy couldn't get over Sharon's resemblance to her brother or how beautiful she was.\n\n\"That many,\" Sharon circled her finger before Poppy could answer.\n\n\"Oh we're not... we're just... we are not a couple,\" Poppy blurted out.\n\n\"Bullshit!\" Sharon retorted but she was grinning.\n\n\"My brother hasn't been as enthusiastic about telling me about a woman since he took Helen Carter to the prom,\" Sharon patted Poppy's knee affectionately.\n\n\"It's not what you think? How much has Elliot told you about me?\" Poppy's anger was simmering under her outward appearance of calmness.\n\n\"Come and walk with me a little. He can wait awhile,\" Sharon got to her feet and Poppy followed suit.\n\nShe led Poppy along a path shaded my trees to a large garden crisscrossed by a sandstone path.\n\n\"Elliot hated me until I was in my I was nineteen. I'm a lesbian and he despised me for bringing shame on the family. He thought it was something I could change if I just tried hard. This town is small enough that people still know everyone else's business and he was a police officer on the Braidwood PD,\" Sharon paused to smell a rose.\n\n\"Two brothers from the wrong side of town thought they could fuck the lesbian out of me. They abducted me and took me to an old barn were they took turns on me until they were exhausted. Needless to say their strategy didn't work,\" Sharon smiled wanly.\n\nPoppy was amazed and appalled that Sharon could talk so matter-of-factly about her rape.\n\n\"Elliot told me that similar things, no, far worse things have happened to you. He told me about the scars on your body. He was crying into the phone when he told me,\" Sharon offered the bloom to Poppy.\n\n\"He told you about me?\" Poppy was stupefied and appalled.\n\n\"Everything,\" Sharon looked pointedly at Poppy.\n\nSharon stepped into Poppy and hugged her briefly.\n\n\"He told me about how badly he treated you when he first met you and how he despises himself for it. When they arrested the two men who raped me they had to confine Elliot to another cell to prevent him from beating them to death,\" Sharon continued.\n\n\"Elliot begrudgingly came to understand me after the rape; he came to love me but it took the assault and the loss of our parents for him to find his real feelings for me. I forgave him but he still hates himself for how he treated me. He still blames himself for my rape,\" she paused at another bloom.\n\n\"He confessed to me that he recently allowed history to repeat itself. That he mistreated a woman he loved because of prejudice and self-loathing,\" Sharon offered Poppy the second bloom to smell.\n\nPoppy had not noticed that Sharon had used the word love.\n\n\"So why has he brought me here?\" Poppy asked.\n\n\"Because he knows that you won't listen to him. Because you told him that he was never going to take you home to meet his mom. He doesn't have a mom now, I'm his only close family and now he's taken you home to meet me,\" Sharon's smile was beatific.\n\n\"He told you I'm transgender?\" Poppy was incredulous.\n\n\"He told me that you are beautiful. Not just pretty but beautiful inside too. He told me about Robert, about what you have to do to look after him,\" Sharon touched Poppy on the cheek.\n\n\"I can't imagine... I don't want to imagine,\" Poppy was surprised when a tear ran down Sharon's cheek.\n\n\"So what do we do now?\" Poppy's head was spinning.\n\n\"We go and have lunch... provided Elliot hasn't eaten everything,\" Sharon laughed and it was infectious.\n\n\"He does like to eat,\" Poppy smiled.\n\nThe two women walked back to the house and found Elliot waiting anxiously on the porch.\n\nHe opened the screen door for them and stood aside to let them in ahead of him.\n\n\"Get that shit grin off your face brother. If this beautiful girl ever forgives you I'm taking her for a sanity test; you're not out of the doghouse by a long shot,\" Sharon dug her brother in the ribs when she squeezed past him.\n\nThe three had a long lunch, conversation carefully steered clear of anything painful. Elliot and Sharon told Poppy stories of their childhood growing up in Braidwood. His father had been a Deputy Sheriff for the county and Elliot had followed his father into law enforcement and joined the Braidwood PD.",
        "When Elliot and Sharon reconciled Elliot got his sister a job as a Public Service Officer on the front desk at the police station. By then he had risen through the ranks to Deputy Commander of the Braidwood PD but after their parents died in an automobile accident Elliot moved from Braidwood to undertake a career as a detective in the city.\n\nIt was just on dark when another vehicle pulled up outside of the ranch house and an attractive woman in a business suit alighted. Sharon raced outside to meet her and the two women kissed unashamedly on the porch.\n\n\"Sharon's partner, Bethany,\" Elliot explained and Poppy smiled at Elliot's discomfort at watching the two women kiss.\n\nBethany was a lawyer who had met Sharon through work it was explained over a cup of coffee prior to Elliot and Poppy's departure.\n\nDespite everything that had transpired Elliot and Poppy had not really reconciled and an uneasy truce entailed during the drive home. Little was said and Poppy kicked off her heels, pushed back her seat and tried to sleep. Elliot had the radio turned down low, grateful for the caffeine in his system to keep him awake.\n\nElliot gently woke Poppy when he pulled up outside her apartment block.\n\n\"Do you want to come up?\" Poppy asked but she said it without conviction.\n\n\"I don't think I should,\" Elliot shrugged.\n\n*****\n\nOver the next two weeks Elliot put ADA Brett Mendelsohn under surveillance. Twice Brett Mendelsohn met with members of Napolitano crime family. To Elliot it confirmed that Brett had given up Poppy and Robert to the Napolitanos. Elliot ascertained that the ADA had purposely recorded Poppy's statement and deliberately leaked it to Napolitanos and then sold them the information that Poppy had a brother in boarding school.\n\nMendelsohn had likely entered into a conspiracy with the Napolitanos, trading Robert and Poppy's location and devising the kidnapping plan, all for money.\n\nElliot put all of the evidence he had collected into an envelope and instead of delivering it to the Chief of Detectives or the DA's office he anonymously dropped it at the offices of the Napolitanos lawyers.\n\nHaving achieved everything in his power to avenge Poppy he dropped an envelope containing his resignation into the Chief of Detectives in-tray along with his Detective's badge.\n\nElliot drove to Poppy's corner but she wasn't there. She was likely with a customer.\n\nLatisha Collins dressed in skin-tight leggings and heels with her big hair and heavy makeup, approached Elliot's car.\n\nElliot rolled down the window.\n\n\"You might as well hang a sign that says Five-O around your neck sugar,\" Latisha leaned on the car door and looked in at Elliot.\n\n\"I'm looking for Penelope... for Poppy,\" Elliot said.\n\nLatisha studied Elliot and broke into a smile.\n\n\"If I was cooped up with you for two months I'd probably go all gaga too sugar,\" Latisha crooned.\n\nElliot looked at her quizzically.\n\n\"Poppy ain't been on the streets for weeks. I checked up on her to make sure she be ok. She's fine but she workin' hard. Got a full time day job bussing tables and works nights cleaning offices seven days a week. That girl gonna work herself to death but she won't come back to the streets,\" Latisha explained.\n\n\"Where is she now?\" Elliot asked, his concern evident.\n\n\"You the detective, so go and detect,\" Latisha pushed herself off the car and went back to her corner.\n\nElliot found Poppy on her hands and knees dressed in coveralls scrubbing the floor of a middle-school classroom. When she heard his footsteps behind her she panicked. She was a woman alone in a school building late at night. She turned around on her knees with her hands raised ready to fight.\n\nElliot grabbed her wrists to stop her failing at him. She stopped fighting when she realised that it was Elliot. She lowered her head in shame.\n\nElliot bent down and picked her up and carried her from the classroom. She put her hands around his neck; she was exhausted. He took her to his car and put her in the passenger seat.\n\n\"What?\" Poppy was confused and disoriented.\n\nShe woke up in a strange bed on clean sheets, sunlight streamed through the window, the light dappled by the leaves of the trees outside the window.\n\nA towel, toiletries, cosmetics and clean clothes were laid out on a camphorwood chest at the bottom of the bed. Poppy found the bathroom in the strange house and took a long shower and washed her hair. She put on some makeup, the jeans and t-shirt laid out for her and padded down the polished wooden stairs barefooted where she was met with the smell of bacon, eggs and pancakes. Her hair was still damp and she was carrying a pair of trainers with clean socks tucked into them.\n\nElliot and Sharon were sitting at the kitchen table. She had no idea what day it was but she knew where she was.\n\nElliot kicked back the chair and strode over to her. He hugged and kissed her unashamedly in front of his sister who politely left the room.\n\n\"Why did you bring me here?\" Poppy asked.\n\nElliot didn't answer; he just moved the bangs out of her eyes.\n\n\"It's Saturday. The weekend,\" Elliot said.\n\nPoppy had never been more confused in her life.\n\n\"You don't have to work weekends anymore,\" he smiled down at her but Poppy remained dumbfounded.\n\nSuddenly the outside door slammed open and Robert burst into the kitchen his face flushed, grinning like a Cheshire cat. Charlie the Labrador followed him and began bounding around the kitchen excitedly.\n\n\"They have horses Poppy! And they have a dog! And I have my own room... well I do if you let me stay,\" Robert ran up to his sister and hugged her.\n\nElliot gave Poppy and Robert some space and took Charlie outside. Five minutes later Robert burst through the door and he and Charlie ran out back towards the stables.\n\n\"So you kidnapped my brother?\" Poppy said but she was smiling.\n\nShe held a cup of coffee and she sat down in the cane chair across from Elliot.\n\n\"The Dean allowed me to take Robert for the weekend knowing that you will be joining us. We had a frank and honest conversation which I'm sorry to say resulted in the Dean falling down a few times but he has agreed to halve Robert's tuition fees and will not require any ancillary services from you any longer,\" Elliot said purposely.\n\n\"How did...\" Poppy began but Elliot silenced her by putting a finger on her lips.\n\n\"You didn't have to say anything Poppy. I knew as soon as you got into the car. I think I know you as well as I know anyone,\" Elliot said.\n\n\"So what now?\" Poppy sighed.\n\n\"Robert seems to like it here and it's close to his school. He wouldn't have to board,\" Elliot pursed his lips.\n\nPoppy looked concerned.\n\n\"Are you going to take custody of Robert away from me?\" Poppy began to panic.\n\nElliot burst out laughing and once again Poppy was perplexed.\n\n\"No. I'm proposing you move in here. Just for now until we find our own place,\" Elliot smiled.\n\n\"I'm confused Elliot. What about my apartment? What about my jobs?\" Poppy began to realise what Elliot was proposing.\n\n\"What about them? You and Robert can live here with me, Sharon and Bethany. Bethany has an opening for a legal secretary. It's not charity, she really needs one and you can continue your studies,\" Elliot beamed.\n\n\"What about you? How are you going to work, it's too far to commute,\" Poppy's head was still spinning.\n\n\"I have my job back at Braidwood PD. They were looking for a replacement Deputy Commander and it just turns out I'm available,\" Elliot's smile was beginning to annoy her.\n\n\"So you kidnap me and my brother and bring us here and make me an offer I can't refuse. It seems to me like you've been planning this for a little while,\" Poppy's emerald green eyes flashed anger at him.\n\nElliot liked it a little when Poppy got angry. He liked the fire in her. He liked the fight.\n\n\"Go and get some breakfast and think about it. You have nothing to do all weekend but think about it. Sharon has gone to pick up Bethany, we have the place to ourselves,\" Elliot stood and picked up her empty coffee cup.\n\nShe followed him into the kitchen and made herself a plate of the delicious food left warming on the stove. She didn't realise how hungry she was and Elliot watched amused as she ate two full plates.\n\n\"You'll get fat,\" he teased her.\n\nShe threw a pork rind at him.\n\n\"Where are these horses?\" she pushed back her chair.\n\nIt was just as well that the house was big. Sharon and Bethany had the master bedroom but Elliot, Poppy and Robert each had a room of their own and even then there was still one spare bedroom. After a barbeque dinner they retired to their respective bedrooms. Robert had gone to bed early; Charlie and the horses had tired him out.\n\nElliot couldn't sleep knowing that Poppy was sleeping only just down the hall from him; his need for her was a deep ache.\n\nHe thanked god when his bedroom door opened and her perfume preceded her.\n\nPoppy was dressed in a t-shirt and panties because she had none of her own clothes with her. She took them off before slipping under the sheets.\n\nElliot lifted his arm and Poppy snuggled up to him.\n\n\"Do you really think this will work?\" Poppy asked.\n\n\"Why shouldn't it?\" Elliot whispered; the house was quiet.\n\n\"Because of who I am. Because of what I am,\" Poppy stared up at the ceiling lit by the moonlight coming through the window.\n\n\"You're not that any longer. This is a fresh start in a new town, no one here needs to know about your past,\" Elliot replied.\n\n\"That addresses the situation with who I am but not what I am,\" Poppy said flatly.\n\n\"What are you? You are a beautiful, kind, considerate woman who I am deeply and unashamedly in love with. You decide who needs to know you're a trans woman but the way I see it it's no one else's business,\" Elliot sighed.\n\n\"Wait... go back to that part about being deeply and unashamedly in love,\" Poppy said, her voice trembling.\n\nElliot rolled over and straddled Poppy, his knees either side of her, his body supported on his elbows.\n\n\"I love you Poppy. I can't live without you. You don't have to move to Braidwood if you don't want to. You don't have to change your way of life if you don't want to but nothing can stop me loving you. I know because I've tried,\" Elliot kissed her cheek.\n\n\"But...\" Poppy tried to reply but Elliot cut her off.\n\n\"You were angry when you asked me if you were going to live in the suburbs, cooking and cleaning and waiting for me to come home and was I going to be a brother-in-law to a junkie whore's son. I don't want that. But what I do want is for you and Robert to live here with me and for Robert to keep attending the Grosvenor School and for you to do whatever you want but the offer of the job with Bethany is real,\" Elliot continued.\n\n\"How long do I have to make up my mind?\" Poppy asked.\n\n\"Only the rest of your life because that's how long I intend to love you,\" Elliot smiled down at her.\n\nPoppy put her arms around Elliot's neck and pulled his face down to hers so they could kiss.\n\n\"This place is as quiet as a church,\" Poppy whispered when the bed creaked as they kissed.\n\n\"Then we will have to make love slowly,\" Elliot grinned.\n\nHis penis was hard and pressing against Poppy's, pre-seminal fluid lubricating their hard shafts.\n\n\"Can you do that?\" Poppy grinned up at him cheekily.\n\nShe wriggled under him so that his glans was nestled in her sphincter.\n\n\"Let's see,\" he lowered his face and kissed her, sliding his tongue into her mouth at the same time that he slid his penis into her anus.\n\nPoppy suppressed a gasp and when he was fully inside her she locked her legs around his waist and her arms around his neck and let him press his body against hers. His cock was stretching her anus, delightfully grinding her sphincter and pressing on her prostate. She mewed softly and hung onto him as he slowly began to fuck her.\n\nElliot valiantly held on for what seemed like Poppy to be an eternity, edging her to the brink of orgasm and then backing off but eventually he couldn't control himself and he began to fuck her with long hard strokes and Poppy moaned beneath him.\n\nThe bedsprings creaked and complained as Elliot ground his cock deep inside Poppy's anus and ejaculated which timed perfectly with her own orgasm as she spent herself against her lover's belly.\n\nThey clung to each other as they writhed and wriggled their slick bodies against each other.\n\nIn the bedroom next door Sharon looked up from between Bethany's legs and smiled knowingly and then went back to her task, making Bethany squirm and squeal when Sharon's tongue lapped her tender clitoris.\n\nPoppy and Elliot lay in each other's arms uncaring about the scent of sex that permeated the air. Later that night Elliot perched Poppy on the seat under the window and took her again, the moonlight illuminating her beautiful face which was contorted with passion.\n\nThey went back to bed and fell asleep exhausted and when Elliot awoke he found Poppy leaning over him. He looked up at her quizzically.\n\n\"I love watching you sleep,\" she smiled down at him.\n\n\"Then why don't you do it on a permanent basis. If you live with me you can do it every night,\" Elliot teased her.\n\n\"Ok then,\" Poppy smiled and lowered her face to her lover and kissed his lips.\n\n*****\n\nAt an undisclosed location somewhere in the city the Commission consiglieres met to discuss their bosses' business matters. The Dons had voted unanimously that Assistant District Attorney Brett Mendelsohn was to be quickly and quietly eliminated for his role in manipulating the Luca Tattaglia prosecution for his own financial gain. It was ironic that the contract was awarded to Luca Tattaglia who carried out the task discretely. Brett Mendelsohn simply disappeared from the face of the earth. There were no witnesses to his dying screams.\n\nThe End\n\n(Or maybe not... I'd like to visit Poppy again sometime in the future and see how she gets on)\n\nAuthor's Note: As always, your comments and critiques are always welcome and gratefully accepted\n\nMichele Nylons, Feb 2021"
    ],
    "authorname": "MicheleNylons",
    "tags": [
        "anal",
        "doggy",
        "fellatio",
        "happy ending",
        "high heels",
        "nylons",
        "panties",
        "pantyhose",
        "romantic",
        "transsexual"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/witness-ch-04"
}