{
    "title": "A World for the Taking Ch. 06",
    "pages": [
        "Tammy was out of her bedroll and on her feet before she even knew why she was awake. Her hand already held her Johnson Big Bore and the fur all down her spine was on end. F`reet `du Hom, who had been on watch, looked at her through the darkness of the forest, her eyes shining in the light of the setting moons. Neither spoke or moved. Only then did Tammy realize it was the sound of a large flyer that woke her.\n\n\"Roy,\" she whispered. She stooped and reached out a hand to shake him, but he was already sitting up, his rifle in hand.\n\n\"Is that a flyer?\" he asked, rolling to a crouch beside her.\n\n\"Sounds like one,\" she said. \"A big one.\"\n\n\"Maybe it's Pa looking for us,\" Jean said hopefully.\n\n\"You think so?\" Yoshi said sleepily. He almost sounded disappointed.\n\n\"It's a big one,\" said Roy and got out his binoculars, setting them for night vision. He stepped carefully to where he would have a better view north. They had ridden until midnight, traveling several kilometers in the dark down unfamiliar trails, finding their way to this little thin patch thanks mostly to Roy's NVGs. Putting the lenses to his eyes he strained to see through the forest canopy.\n\n\"Sounds like it's pretty far away,\" Tammy said in a hushed voice.\n\n\"Moving slow,\" said Roy, still looking through his binoculars. \"I can't see it. I think it's on the far side of Kitt's Hole.\"\n\n\"Really?\" Yoshi said, rubbing his eyes. \"I wouldn't think engine noise would carry this far.\"\n\n\"It's a big lifter,\" Roy told him. \"Big engine. Probably the one from the Town Works Department we use for moving robots and stuff. Biggest one in the valley.\"\n\n\"Why would Pa come looking for us in that?\" asked Jean.\n\n\"Well, his spinner was shot down,\" Yoshi opined. \"Maybe it was the only one he could get.\"\n\n\"Maybe it isn't Pa,\" said Tammy, rising. \"If the Dusig don't have their own ships anymore, they might be using one of ours.\"\n\nThe group fell into an apprehensive silence while Roy continued to watch. The sound of the big flyer grew closer.\n\n\"I see it!\" hissed Roy. \"Like I figured. It's the Town Works lifter. Looks like it's hovering near the crash.\"\n\n\"We need to get going!\" Tammy said and rushed to start packing their kit.\n\nNobody spoke while they hurriedly got their tired mounts ready for another day of riding. The animals all seemed resigned to the trail. The steelies were accustomed to hard use at times, but this journey up and down the valley, back and forth across the river and along unimproved game trails was taxing and it was beginning to show. They became restless from the agitation of their riders and expressed their discontent with grunts and moans.\n\n\"Come on Roy!\" Tammy urged. \"We're ready.\"\n\n\"Tammy, listen to me,\" he said, turning to face the group. \"I want you to take the lead. Follow whatever trail you think is best. You know the lay of the land as well as I do down this end. Get them to the tower.\"\n\n\"What?\" she demanded. Jean and Yoshi just stared. F`reet `du Hom looked questioningly from one Human to another.\n\n\"I'm going to hang back and see what they do,\" Roy explained, gesturing north at the unseen flyer. He moved to the carry pack and opened the explosives chest. \"I'll follow in a bit. Don't worry about leaving a trail. These are the only steelies this far south. I can track you.\"\n\n\"You can't stay, Roy!\" Tammy protested.\n\n\"We need you!\" Yoshi added.\n\n\"No you don't,\" Roy argued. \"I don't know enough about the electronics to help. Tammy can find the way to the tower as well as I can. Better even. If the Dusig come after us, I'm going to slow them down.\"\n\n\"You're going to get yourself killed!\" Tammy cried half desperate and half angry.\n\n\"I won't let that happen, babe,\" he said and stepped up to take her in his arms. She grimaced and pushed him but when he leaned down she met his kiss. He stepped back and looked to Yoshi. \"Give me half the detonators. I left half the explosives, just in case. You might need them for something.\"\n\n\"I love you, Roy.\" Tammy kissed him fiercely before mounting Boudi.\n\n\"Here you go,\" Yoshi said tensely, handing over a small box. \"There are only half a dozen of them.\"\n\n\"I hope I don't need even one,\" said Roy. He took the younger boy by the hand and clapped him encouragingly on the shoulder. \"I was wrong about you, Yoshi. You're tougher than I thought.\"\n\n\"Thanks, Roy,\" Yoshi whispered. \"Good luck.\"\n\nJean was too choked up to speak. Instead she gave Roy a quick hug and then mounted. \n\nF`reet `du Hom seemed to understand they were going to leave him behind. She clasped him by the shoulders firmly, looked him in the eyes and rubbed her muzzle on both of his cheeks. \n\n\"Take care of them,\" he whispered to her and kissed her cheek.\n\nWith one last backward glance, filled with emotion and concern, Tammy rode off down the trail.\n\n*****\n\nThe sky above the trees turned pale with the coming dawn and the riders sagged tiredly in their saddles. Mist gathered down by the river and thickened slowly into a thin fog. Just before sunup Tammy found a game trail that led up slope away from the water and the chill air. Deer were moving and the morning chorus of bird song grew in volume. The forest was all astir and any other day it would have been beautiful. This day, though, dawned in fear and doubt for the young woman who had left her love behind to face their enemies alone.\n\n\"Any idea how much further it is?\" Yoshi asked softly, as if he feared disturbing the forest around them.\n\n\"I don't know for sure,\" she said. \"I mean, you can check your pad for distance, but how much time it will take to get there, I don't know.\"\n\n\"Sorry,\" he said and glanced back over his shoulder. \"I'm a little worried about Jean. Since the ship flew by yesterday she's been acting funny. Scared, you know?\"\n\n\"I know. I grew up with her.\" Tammy looked back at her sister. Jean was almost asleep in her saddle. \"We'll get to the tower, fix the transceiver, send the message and then find someplace to hide out for a few days.\"\n\n\"You can take a shower while I'm installing the electronics,\" he suggested with false cheer.\n\nTammy snorted and laughed wryly.\n\n\"I think showers can wait a bit longer,\" she said. \"A hot meal would be good, though.\"\n\n\"Oh man,\" the boy sighed nostalgically. \"I would kill for a cheeseburger right now. Onion rings on the side and a big ol' glass of sweet tea.\"\n\n\"Sounds good to me too,\" she chuckled. \"I'd have regular ice tea, though.\"\n\n\"Because you can't process sugar?\" he asked.\n\n\"Right,\" she said. \n\n\"Does your ear hurt?\" he asked, peering at the notch. \"Looks bad.\"\n\nTammy's free hand shot up to her wound and she narrowed her eyes on the off-world boy. She could feel the long, narrow V shaped notch, but Roy had assured her it did not look bad. Had he lied?\n\n\"I mean, it looks like someone tried take it off with dull scissors,\" Yoshi went one obliviously.\n\n\"It doesn't hurt right now,\" she told him and hurriedly looked away.\n\nSuddenly she pulled Boudi to a dead stop and stared into the underbrush. Yoshi drew up next to her and signaled behind to get F`reet `du Hom's attention. The jZav`Etch reached out and shook Jean awake and they came to a stop, reaching for their weapons.\n\n\"What is it?\" Yoshi asked very softly. He dragged his shotgun from the boot on his saddle and peered around fearfully.\n\n\"Hold still,\" Tammy whispered, her ear forgotten. \"And be ready in case Little Gertie bolts.\"\n\n\"Why?\" he asked.\n\n\"There's a puma about fifteen meters up the slope and it's looking right at me,\" she said.\n\n\"Holly shit!\" Yoshi hissed.\n\n\"Stay calm,\" she urged. \"Boudi sees him, too. We're a little too large for their usual prey. We'll be alright.\"\n\n\"What is it, Tammy?\" Jean called in a stage whisper.\n\n\"Puma,\" Yoshi called back, unconsciously mimicking her tone. He leaned forward in his saddle enough to see around Tammy and blinked. \"Holly crap! That's the biggest cat I've ever seen in real life. I mean, next to you.\"\n\n\"Ha, ha. Very funny,\" she said deadpan.\n\n\"Sorry,\" he said. \"I'm nervous.\"\n\n\"You're lucky we're staring down a puma right now,\" she whispered. \"Otherwise I'd slug you.\"\n\nUp the hill the puma shifted. It seemed confused by Tammy, somehow. It rose up and slunk off into deeper brush. Tammy clapped her heels into Boudi's sides and the big mare bounded up the slope to where the cat had been. Tammy scanned the forest for any sign of the creature, but it had vanished like a ghost.\n\n\"Come on!\" she called down to her companions. \"Get up here quick.\"\n\nWhen they got to her she pointed further up the slope.\n\n\"Slow and easy, make for that rise over there,\" she said. \"I'm going to stay here to make sure it doesn't come up our back trail.\"\n\n\"We can't leave you, too,\" Jean insisted.\n\n\"You aren't,\" Tammy assured her. \"I'll be right behind you. Just go up there and wait. Have some water. Maybe we can even stop for breakfast.\"\n\nNot mollified at all, Jean took the lead with Yoshi following closely. F`reet `du Hom waited, giving Tammy a questioning look. She turned her palm up the way Tammy had when asking for information.\n\n\"Puma,\" Tammy enunciated distinctly. Movement among the trees caught her eye and she pointed. The pilot looked and her eyes went very wide. Her tail snapped back and forth over Duchess's hunches and her ears lay back against her head. Tammy said again, \"Puma.\"\n\nWith its head low the big predator, a male by the size of it, took a few tentative steps towards them and stopped. F`reet `du Hom leaned forward and surprised Tammy when she spat a throaty hiss. The cat pulled his head back and twitched his ears. His eyes narrowed and he sniffed the air curiously. Slowly he glanced around and rotated his ears, apparently assessing the situation before returning his attention to the riders. After another long minute of staring he turned and sauntered off, disappearing once more.\n\n\"Puh`Mha,\" F`reet `du Hom purred. Her eyes were still intent, but she visibly relaxed.\n\n\"I've never seen one in the wild,\" said Tammy, forcing herself to start breathing again. \"Seen three grizzly bears, a couple packs of wolves from a distance and a lynx. We better get going.\"\n\nAfter the close encounter with the puma the party decided to stop and eat, partly to give their steelies a rest and partly in hopes that Roy would catch them up. Reluctantly, Tammy decided to move on after about twenty minutes. Though her heart told her to wait or go back and find her love, her mind drove her to make certain Roy's choice to face the enemy alone was not for nothing. She chivied the others back into their saddles and they continued on to the south.\n\nIt was nearly ten when they heard a distant engine. Thinking to save time Tammy had chosen to cross an open slope where five summers prior a forest fire had burned nearly a square kilometer before the settlers had been able to contain it and let it burn itself out. Upon hearing the engine Tammy's head snapped around to look northwards.\n\n\"I guess they didn't like us shooting up their patrol last night,\" said Yoshi.\n\n\"What do we do?\" Jean asked.\n\n\"Got to get somewhere we can hide,\" Tammy told her. \"What's it look like on the map, Yoshi?\" \n\nThere was little cover, only young trees having sprouted to replace those that had burned. Large, blackened trunks still stood here and there but the young growth had not achieved anything like a canopy.\n\n\"I thought you knew this part of the valley,\" he said as he dug in his pocket and came out with his pad.\n\n\"We know more about the area around Big Lake.\" Tammy fished out her binoculars and searched over the treetops for any sign of the flyer. \"Hurry up! They're coming this way.\"\n\nThe white and blue fuselage of the heavy lifter from the Town Works Department glided into view twenty meters above the river about two kilometers north. Its side door was wide open and even at this distance with the naked eye a figure could be seen hanging out of it.\n\n\"I think there's a little valley a hundred meters south-east,\" said Yoshi anxiously.\n\n\"Valley?\" Tammy demanded, still watching the lifter.\n\nJean dragged the pad from Yoshi's fingers and glanced at it. \n\n\"It's a draw with a creek,\" she said. \"Beyond the burn. Shallow, I think. Might do.\"\n\n\"Get going,\" Tammy ordered. \"I'm right behind you. Hurry!\"\n\nF`reet `du Hom looked back and forth between the fleeing adolescents and Tammy. Tammy waved her off, indicating she should follow Jean and Yoshi, but the jZav`Etch pilot shook her head. Tammy's tail lashed the air over Boudi's haunches, but she couldn't force the pilot to leave. The noise of the flyer was increasing as it closed and they were running out of time. She wanted to see what they were doing, but here she was too exposed. Tammy tugged her reins and spun Boudi around. F`reet `du Hom grabbed her headstall and pulled the big mare to a stop.\n\n\"What are you doing?\" demanded the girl in frustration. Boudi backed away from the pilot, nearly pulling her from Duchess's back before she let loose. \"We need to go!\"\n\nA hissing, splattering sound of impact followed by a gout of black soil told them they had been spotted. Tammy slammed her heels into Boudi's sides and the big mare bounded up the slope like a massive squirrel. Duchess followed instinctively, but in her first leap she left F`reet `du Hom sprawling in the grass. With a curse Tammy spun Boudi around to go back. More blasts from the gun on the flyer threw up clouds of dirt and knocked down saplings. \n\nF`reet `du Hom rose from the grass with her rifle in hand and fired off several quick shots. One of her rounds struck the flyer but seemed to do no actual damage.\n\n\"Come on!\" Tammy cried, leaning out of her saddle and holding out a hand.\n\nThe jZav`Etch pilot ignored her and fired again as more enemy rounds walked closer.\n\n\"Goddamnit!\" snarled Tammy. A bolt from the ship struck between her and F`reet `du Hom. \"Fuck!\"\n\nDragging her rifle from its boot the girl dropped to the ground, smacked Boudi on the flank to send her away and sighted on the flyer. She had no time to pick a vital point. She fired anyway. \n\nMore enemy rounds cast soil into the air around them and the two females continued their fusillade. The flyer came on rapidly and soon Tammy could see the cargo compartment was filled with soldiers. She fired and fired again, every shot making her torn ear flop forward and sending sharp needles of pain through her scalp. Her rounds impacted on the ship's fuselage and stitched holes along the stumpy tail. Smoke sprouted from the engine compartment and puffed out an instant later. She had hit something vital, but the redundant systems had compensated.\n\nF`reet `du Hom fired again and the clear duroplast* canopy shattered. The cockpit flashed bright white and the ship slewed into a flat spin. Tammy fired and fired. The soldier in the door was thrown back into the cargo compartment and more smoke sprouted from holes in the fuselage.\n\nThe flyer had lost a lot of altitude and looked as if it was going to crash when suddenly it fishtailed and stabilized. Tammy and F`reet `du Hom slammed more rounds into it as it rose higher and turned away. Miraculously, one of Tammy's 12mm bullets smashed the aft starboard gravitic stabilizer vane and the ship slalomed, pitching a body from the open door. F`reet `du Hom put a ball of viridian energy into the main thruster exhaust. A blast of fire followed and the ship drunkenly turned south over the river. Nose up it began to drop. Even from a kilometer away they could hear the power plant whine.\n\n\"Christ!\" Tammy swore, lowering her rifle. \n\nShe stared agape as the flyer continued to drop, picking up speed. Soon it fell below the line of trees at the river's shore. No sound of impact came, though.\n\n\"We need to get out of here!\" the girl said, grabbing F`reet `du Hom by the arm and all but dragging her up the hill towards their steelies. \n\nF`reet `du Hom jerked away and snatched at Tammy, turning her around. The pilot gestured urgently at the place where the ship had gone down.\n\n\"Fuck that!\" snarled the girl. \"You almost got us killed! We need to get the fucking transceiver installed! Come on!\"\n\nF`reet `du Hom snarled back in her own language and pointed emphatically towards the downed flyer. Her gesticulations and chittering speech ended at the sound of a distant explosion from the north. The sound was dulled by the intervening landscape and tall trees but there was no mistaking it. The two of them froze, their ears cocked northward. Soon they could faintly hear the sharp snaps of a Johnson Big Bore and the hissing sizzle of Dusig rifles.\n\n\"Roy,\" Tammy whispered.\n\n\"Rddoy,\" F`reet `du Hom said softly. She swallowed hard and shook herself. Turning to Tammy she said, \"T` Emmi, go.\"\n\nTammy blinked at her, torn between rushing north to help Roy and staying to look after her sister and complete the mission they had undertaken.\n\n\"T` Emmi, go!\" F`reet `du Hom insisted more forcefully, pointing up the slope to where Yoshi and Jean had disappeared into the undergrowth.\n\nThe gunfire in the north ended and Tammy bit her lip. Finally she began marching up the hill to Boudi. Taking the mare by the lead strap she continued towards the tree line.\n\nThey found Yoshi and Jean hunkered among some rocks overlooking the trail. The young teens greeted them with cries of relief and hugs for both.\n\n\"We heard the shooting,\" Jean said, shaking with nerves. \"I thought you were going to get killed.\"\n\n\"So did I,\" Tammy admitted, still shaking.\n\n\"Why'd you stay?\" Yoshi wanted to know.\n\n\"I wasn't going to, but she fell out of her saddle,\" Tammy explained, gesturing at F`reet `du Hom who was chugging water from her canteen. \"I couldn't leave her behind. We shot up the flyer.\"\n\n\"Was that the explosion we heard?\" asked Jean.\n\n\"No,\" said Tammy, getting her own canteen out. \"I think that was Roy. We heard gunfire to the north right after. I think he ambushed another patrol.\"\n\nJean's eyes said how horrible she thought that was and she put a comforting hand on Tammy's arm.\n\n\"Roy's tough,\" Yoshi said, his hands gripping his shotgun tensely. \"He's smart, too. He'll get away.\"\n\n\"He will,\" said Tammy, not looking at anyone. She scowled and shook her head, unable to think of a world without Roy. After a silent moment she said, \"I don't think all the soldiers on the flyer are dead. We need to get moving before they cut us off or catch us. Come too far now to quit.\"\n\n\"I still have explosives,\" said Yoshi. \"We could ambush them. Do what Roy did.\"\n\n\"No,\" she said firmly. \"We've got hours ahead of us before night. I want to be at the tower by tomorrow afternoon. We need to make that call for help.\"\n\n******\n\nTammy sat upon Boudi's back listening to the forest sounds. Jean had led Yoshi and F`reet `du Hom on towards the next landmark while she stayed behind. She did not know why, but she felt they were being pursued. She thought she had heard things. Over the past four hours she had become convinced of it. Yoshi had twice suggested setting an ambush, but Tammy did not want to waist the time. Besides, what if it was Roy?\n\nDown on their back trail, she could not guess how far, something tripped and fell. That was not Roy. As much as she teased him, he was not clumsy enough to make that much noise. Neither would forest animals. Well, maybe bear cubs, but they would cry out for their mother.\n\n\"Damn these trees,\" she murmured. She had loved the forest all her life, it was a natural love, but now the trees hid her enemies from her eyes. Of course, the trees hid her from her enemies, too, but Tammy was young and not always rational.\n\nShe took her binoculars and reset them for thermal vision. It would not provide as detailed an image as a broad spectrum view, but she wanted to see if anyone were there. Down slope two point three kilometers, according to the binoculars' range finder, a group of heat signatures moved among the trees. She could only see an occasional blip between the trunks and therefore could not determine how many they were. She was sure these blips were not deer or some other group of animals, though, because they moved slowly and steadily without pausing to graze. One, far in the lead, paused. It shrank as if squatting down. It grew again and the other forms rushed to it.",
        "\"Damn!\" the girl swore. \"Maybe we should ambush them.\"\n\nShe considered leaving a lump of the Pugh 36 under a pile of rocks the way she and Roy had back in the gully, but there was no way for her to make a sensor to trigger it. She would have to stay within sight of an ambush and that would mean her little sister would be there. Tammy did not want Jean to get hurt. Actually, she did not want anyone at all to get hurt. She was not a soldier and the killing she had already done weighed heavy on her mind. Something had to be done, though.\n\n\"If we were on the southern continent we could take to the trees,\" she murmured, still watching the heat signatures below.\n\nThe forests of the southern continent were tangles of dense jungle where the settlers rode lighter, slimmer steelies through the canopies as often as on the ground. In the trees they moved slower and there was constantly the danger of falling, but they could go farther over rougher terrain. Here in Mid Valley the trees were dense, but they did not tangle their branches. The steelies could, of course, have made the leaps necessary to go from tree to tree. Any rider would be thrown from the saddle and end up with multiple broken bones or killed outright. That was no good and she needed to focus on the problem at hand.\n\n\"We shouldn't have stopped to eat,\" she admonished herself. \"Need to move faster and lose these bastards.\"\n\nPulling out her data pad she called up the holographic map of the surrounding area. On the other side of the next rise was a narrow creek that wound its way all the way down to Big Lake below the river mouth many kilometers away. She traced the line of the creek and found an even smaller stream that fed into it from the hills to the south. Tammy grinned and shot a derisive middle finger at the unseen Dusig far below.\n\n*****\n\n\"I don't get it,\" said Yoshi. \"You wanted to take the creek so we wouldn't leave footprints but now you want us to get up on the bank?\"\n\n\"See how sandy it is?\" Tammy replied, pointing at the soft, loamy soil ahead. \"We can move faster over that and they'll be able to see the prints.\"\n\n\"Kind of my point,\" the boy said.\n\n\"I want them to think we're staying with this creek,\" she said. \"When we turn off into the stream I don't want them thinking we took a different route.\"\n\n\"Ooohhh,\" Yoshi said, finally understanding. \"Pretty sharp.\"\n\nWhat Tammy didn't tell anyone was that she had another idea for leading their pursuers astray. An idea she was not sure would pay off. Hours dragged by and night was coming on before they came to the stream. There had been no further sign of the Dusig on their back trail, but she did not trust that. Her constant fear was the sound of a flyer's engines. None had come since the fight in the burned field, but she listened with more than half her attention. \n\nThe stream turned out to be dryer than she had anticipated. Its course was steep and rocky, though, with very little sand. That was all to the good.\n\n\"You guys are turning off here,\" she told them. \"You know where to go. Don't stop until you get there.\"\n\n\"What?\" demanded Jean, staring at her sister in the waning light of early evening.\n\n\"I'll find you, but not unless you stop on that hill,\" Tammy told her. \"You should get there by about twenty-two hundred. I'm going to keep following the creek for a while. I want to leave a false trail the way raccoons and fox sometimes do. I'll double back and meet you on the hill and we'll rest the steelies.\"\n\n\"You aren't going to set a trap without us, are you?\" Yoshi asked.\n\n\"No.\" Tammy shook her head. \"If I don't find you by first light, go on to the tower and I'll catch up there. Sending the message is the important thing.\"\n\n\"I don't like it, Tammy,\" her sister said. \"First Roy stays behind and now you? Ma and Pa wouldn't want you doing this. Just come on. We'll be okay.\"\n\n\"Ma and Pa aren't here,\" Tammy said firmly. \"If one of them were here maybe they'd have a better idea, but this is all I can think of.\"\n\n\"Why don't we just go up the stream a ways and wait for you?\" asked Yoshi.\n\n\"Because I'm not coming back this way,\" she said, starting to lose her patience. \"We don't have time to debate this. You two take F`reet `du Hom and get the tower working. It's up to you to call for help. Tell Tyne & Harper all about what's going on and they'll send their quick reaction force. Now get going!\"\n\nJean shook her head, tears glistening on her cheeks, but she turned Tinkerbelle up the shallow stream. Yoshi hesitated briefly, then followed, the carry pack gliding smoothly behind him. F`reet `du Hom waited. When Tammy did not follow the boy she turned her palm up in question.\n\n\"Go, F`reet `du Hom,\" Tammy said, pointing after the younger teens.\n\n\"T` Emmi, go?\" asked the jZav`Etch pilot placidly.\n\n\"T` Emmi go that way,\" said Tammy, pointing down the creek.\n\n\"F`reet `du Hom go `Thzat wh`hay,\" the pilot said firmly.\n\n\"F`reet `du Hom go tower,\" the girl insisted, pointing after her sister and the off-world boy. \"Go that way.\"\n\nWhen the pilot stubbornly refused Tammy took out her pad and called up the holographic map.\n\n\"We are here,\" she said, indicating the intersection of the stream. \"You go up the stream. I go down the creek. You stop on this hill. I cut through the trees and meet you. We all go to the tower.\"\n\nF`reet `du Hom shook her head and pointed back the way they had come, saying, \"Dusig.\"\n\n\"Dusig come here,\" said Tammy with a nod, pointing back and forth between their location on the map and the actual confluence of the stream and the creek. \"Dusig follow me down the creek. You and Jean and Yoshi will be safe. Go that way. Please, F`reet `du Hom. Go. Keep them safe.\"\n\nThe pilot's gaze lingered on the map for a time, her ears twitching and her tail flicking. Finally she sighed a very Human sounding sigh and brushed her muzzle on Tammy's cheeks. She turned Duchess up the stream and followed the younger teens. Tammy sighed with relief. Maybe what she was planning would work. Maybe. If she could find the right spot to get out of the creek, it would work, she was sure. But what if she did not find the right spot? At least her sister would be safe for a while.\n\n*****\n\n\"Okay, Boudi, come on,\" Tammy said, climbing from her saddle onto an old dead green ash tree. Like white pine, green ash grew quickly and died quickly. They were useful for creating forested land in a hurry, but heartier species always over ran them.\n\nThe green ash's upper branches rested in the water with a collection of small sticks and driftwood hanging around them. The trunk had long since lost its bark, but the wood looked sound. The claws on the girl's hands and feet made her climb easy though she knew her sister and Yoshi would not have been able to do it. Up and up she climbed until she got to where the tree's trunk had broken in some storm or other. The lower portion of the tree was still alive and sprouted many small green leaved branches that were all vying to be the new trunk. Her father would need to come and harvest this one. Such a tree was unprofitable and the nutrients it took from the soil could be better used by other healthy trees.\n\n\"Come on up, Boudi,\" Tammy called down to her steelie. The mare looked puzzled by this, though, were she better rested she might have been more willing. \"Come on girl!\"\n\nStill the mare did not move. She slashed her forked tail and blinked through the twilight. Night was approaching fast and if Tammy could not get her out of the water her ruse might not work. Finally she took a chance. She picked a nearby tree and leapt. Catching hold of the thick trunk she pulled herself onto a branch and looked back. Boudi was climbing swiftly up the dead tree, branches creaking and cracking as she moved. When she arrived at the break the mare hesitated only long enough to get her bearings and leapt. The impact of her five hundred plus kilograms made the tree shake and Tammy had to hold fast or be thrown to the ground twenty meters below. Boudi blinked up at the girl as if asking if she were insane.\n\n\"A couple more,\" panted Tammy. \"A couple more and we'll be far enough they won't find our tracks.\"\n\nTammy moved around the tree and picked another. She leapt, straining her muscular legs to reach one that would not collapse under the weight of her mount. Boudi made the leap with ease and waited. Her expression suggested she was beginning to enjoy this new game, or was at least interested. Tammy leaped again, covering a distance of ten meters. She had a close call upon landing when the branch she aimed for snapped off and she had to grab hold of the next nearest. Boudi bugled at her in alarm and bounded over, again shaking the tree with her impact.\n\n\"That's enough of that!\" Tammy said in a shaking voice. \"I need to practice more.\"\n\nShe climbed down from the tree and reckoned they were about forty or fifty meters from the stream. It would have to do. There was not enough light for Boudi to see properly and they were heading deeper into the woods where there would be far less light.\n\nTammy took up Boudi's lead strap when the steelie dropped to the ground beside her. On shaking legs the girl led the way south and east. She had a good idea of where they were and was not at all sure she would be able to get to the hilltop before dawn. She was just too damned tired and Boudi had to be in worse shape. Somewhere to the north, maybe beyond the nearest line of hills, she could hear a flyer's engine whine.\n\n\"Oh shit,\" she breathed and took out her binoculars. They proved useless. Wherever it was, it was below the treetops. \"We need to keep moving, Boudi. A little while longer, girl.\"\n\nTammy stayed afoot, wanting to give Boudi a break while she could. Maybe she was making a mistake, but she could not bring herself to push her steelie any harder. Boudi's head was sagging and she hadn't snapped her tail in hours. Tammy wasn't in any better shape, really. Every joint ached and she was sure the fur on the insides of her thighs was worn off. They both needed rest, but not while there was enough light to see a path.\n\nTwilight transitioned into night. Tammy rested while darkness prevailed. Even her more than Human eyes could not see without light. There was no sense going on until the moons rose above the rim of the valley. She ate a small meal of cold sausages and a few biscuits. Boudi grazed on leaves and some small pinecones for a while and then sank to the cool ground to sleep.\n\nTammy woke with a start. Where was she? What was going on? What happened to Roy?\n\nShe shook herself. She had been dreaming and Roy had been in some sort of danger. It had only been a dream, though. She rose wearily and brushed last autumn's leaves from her clothes. The air was damp and chill and the moons were high above the valley, not quite to their zenith.\n\n\"Goddamnit!\" she hissed. \"Boudi girl, time to get moving again.\"\n\nBoudi groaned, lifted her head and blinked at Tammy, too sleepy to protest more. They had lost at least four hours. The sleep had done them much good, but the lost time meant they would not make the hill before dawn. Tammy pulled out her pad and checked the map. If she turned southwest towards Big Lake now she might get to the tower by noon. Or she could aim for a point between the hill and the tower and maybe intercept the others. She was already farther west than they were, anyway.\n\n\"What would Roy do?\" she wondered aloud. \"What would Ma or Pa or Mike do?\"\n\nAnd it came to her that all of them would consider what Jean would do. Jean was the pathfinder now. Jean would be making the decisions on which route to take. What would she do?\n\n\"She'd take the easiest way,\" Tammy said, brightening. \"Go straight for the tower and not think about what's behind her.\"\n\nThe faint sound of a flyer's engine drew her attention skyward but she could not localize it. Suddenly she was very worried about her sister. Jean was young and emotional. She would want to get the job over with the same way she always tried to take shortcuts when doing a chore. But she had Yoshi with her, and F`reet `du Hom. Yoshi would try to hurry along as much as possible. That was obvious by the way he had become so insistent about his idea of getting the tower working. F`reet `du Hom would want to be sure they were not ambushed. She would be more cautious. That would not matter much, though. Only at a critical point would she try to force them from their path. But she might get Yoshi to listen. Yoshi seemed to like the idea of having an alien among them. He would bend to her will more easily than Jean.\n\n\"And where does that get me?\" grumbled Tammy. \n\nShe dug a ration bar from her haversack and chewed as she continued to think. She had to choose. If she went to the hill she could follow them and maybe, just maybe catch up. \n\n\"But Roy hasn't caught up with us yet.\"\n\nShe shook her head. She couldn't afford to worry about her boyfriend. She had to believe he was still alive and on his way.\n\n\"Roy is heading for the tower.\" Of that she was certain. \"As soon as he lost our trail in the creek he'd make across country for the tower. He'd see the Dusig were after us and he'd know what I was doing. Roy's too smart to be fooled like them. He'd know we wouldn't go down to the lake. Take too long to climb all the way back up to the tower.\"\n\nShe contemplated the map for a while longer, trying to look at it the way Jean would. From the hill there were several routes that would appeal to her younger sister. And she guessed Jean would want to wait for a while after the suns came up. She'd want to give Tammy more time. Yoshi would rush her, though. Yoshi would get them moving. That was the good thing about having those two together. \n\n\"She'll go this way,\" Tammy said. \"There are a couple of little ponds and some streams where they can get water. She's softhearted and won't want to push the steelies and she'll stick to even ground. She'll go this way and Yoshi won't argue because he doesn't ride well enough to chance the other routes.\"\n\nTammy switched off her pad and strode to Boudi purposefully.\n\n\"Get up, girl,\" she said encouragingly. \"I know. I know. I'm tired too. We need to go.\"\n\nBy the light of the moons Tammy wove her way through the forest, listening constantly for any sound that might betray danger. Fox crossed her path. She startled white tail deer from their feeding. In the far distance wolves howled. But there came no sound of pursuers on her back trail. The whine of the flyer never got closer. She was alone in the woods and her loneliness and fear were kept at bay only by her force of will.\n\nIt was nearly ten in the morning by the time she came to a wide dell she thought Jean's path would have crossed and the suns were well above the valley's rim. Few trees grew in the dell and Tammy feared exposing herself to hidden eyes. She hesitated, listening and scanning the far wood line. She slowly realized the sound of the flyer was gone. Now she heard only the wind in the trees, birds flitting and squirrels playing. A grumpy porcupine trundled into view and paused at the base of a large pine to munch on something. Above cruised a hawk. She took out her binoculars and scanned again. Still no sign of enemies. No sign of her friends.\n\n\"Boudi, I'm leaving you here for a minute,\" she said quietly, tying the lead strap to a branch. She left the knot loose so the mare could get away if something unexpected happened. With that in mind she took her rifle and checked its magazine. There were only seventeen rounds left. The magazine on her belt was empty from the fight in the gully. She grimaced at that. She had never emptied a magazine except when doing target practice. From the pack on Boudi's saddle she took her seldom used bandolier and slung it over her shoulder. Three more magazines would surely be enough. They would have to be.\n\nMoving from cover to cover under small trees and clumps of bushes she inspected the ground for signs the others had come this way. She found nothing until she got to the far tree line. There, some twenty meters in, she found the path of three laden steelies. Tammy almost sobbed with relief. She had guessed rightly. They were hours ahead of her, but maybe not too far. And what was more, they were being more careful than she had feared. Likely that was F`reet `du Hom's influence. The pilot would have enough sense not to expose the group to attack.\n\nWith less care and more urgency Tammy returned to Boudi. The mare was cropping leaves from the tree to which she was tied and greeted Tammy with a chuffing snort. Tammy quickly mounted and turned her track down west and south, skirting the dell to find the path her sister and friends had left. As much as she wanted to, she did not urge Boudi to greater speed. The mare was tired and flagging. If pushed she might founder or go lame. Neither would be good in any way.\n\nAn hour or so later Tammy felt sure she was catching up. She found a place where the steelie tracks trample each other and spread from single file to a grouping in such a way that made her think they had stopped to talk or discuss something. The tracks milled about and she could see where the steelies had clawed the ground as the animals sometimes would when getting impatient. She did not think they had stopped to eat. There was no sign the steelies had browsed the trees, though there were a couple piles of dung.\n\n\"Bet they were talking about the route or arguing whether or not to wait for me,\" Tammy said softly to herself. \n\nShe rode on a little lighter of heart after seeing the signs. Only a short time later she heard voices ahead and the chuffing of steelies. \n\n\"Come on, Boudi!\" she said aloud and kicked her heels back lightly.\n\n\"I don't know!\" groused Yoshi plaintively. \"Something went bad. I'm surprised the power cell lasted this long. The recharger looks like it's in good shape but it isn't charging the cell.\"\n\n\"You need to be more quiet,\" Tammy called before her friends came in sight. She broke through some brush and there they were on a flat spot in the middle of the trial. The carry pack was resting on the ground and Yoshi was on his knees next to it. Puzzled, Tammy asked, \"What happened?\"\n\n\"Tammy!\" Jean cried and rushed to her. F`reet `du Hom said something that sounded like a prayer of thanks and Yoshi just gaped for a second before getting to his feet to join Jean in greeting Tammy.\n\n\"I'm fine, Jean,\" Tammy said, dismounting. \"You guys okay?\"\n\n\"Yeah,\" Jean said, hugging her. \"We were really worried about you, though. What happened?\"\n\n\"I got sidetracked and fell asleep waiting for the moons to rise.\" Tammy went on to explain how she had found them, leaving out most of her reasoning process and making sure to compliment Jean on the care they took to stay under cover of the trees.\n\n\"F`reet `du Hom insisted,\" Jean said. \"She learned the word 'no' somewhere along the line.\"\n\nThe jZav`Etch pilot smiled warmly and rubbed her cheeks on Tammy's the way she had done on parting.\n\n\"I've been listening to her,\" Yoshi said. \"I think it might be easier for her to learn Japanese or Mandarin. I'm glad you're back, Tammy.\"\n\n\"Me too,\" she said and for the first time ever, she hugged Yoshi. \"Now, what is wrong with the carry pack?\"\n\n\"The power cell is almost drained,\" he told her, waving at the open panel. \"Started beeping an alert a while ago and I needed to get it somewhere I could have a look.\"\n\n\"Has it got enough of a charge to get it to the tower?\"\n\n\"No,\" he said.\n\n\"I still think we should just leave it,\" said Jean petulantly.\n\n\"How are we going to get the transceiver and tools to the tower if we do?\" the boy demanded. \"Putting the transceiver on one of the steelies isn't a good idea. We've been over that. And the toolboxes are way too heavy.\"\n\n\"We could build a travois,\" suggested Jean. \"Take us about half an hour.\"",
        "Tammy frowned at the carry pack and let the younger teens bicker while she thought. F`reet `du Hom interrupted her, saying a few soft words in her own language and touching the girl's wounded ear.\n\n\"It hurts, but not bad,\" Tammy said, interpreting the question.\n\nF`reet `du Hom fished the jZav`Etch medical kit from her belt and ran the stubby scanner over Tammy's ear while reading from the screen. She frowned and nodded before producing an ampule and what had to be an injector.\n\n\"No. It's alright,\" Tammy protested, but F`reet `du Hom insisted. The injection stung for an instant but all of a sudden the area around Tammy's ear felt much cooler. She touched it and there was no ache, though she frowned at the feel of matted blood in her fur. \"Wow. That's a lot better. Thanks.\"\n\nF`reet `du Hom smiled and patted the girl lightly on the cheek. \n\n\"Dusig?\" she asked.\n\n\"Over there,\" Tammy told her, gesturing northward, though she did not know for certain where they were.\n\n\"T` Emmi eat?\"\n\n\"I'm okay,\" said Tammy, nodding. \"You really are picking up some words.\"\n\n\"What do you think, Tammy?\" asked Yoshi, drawing her back into the debate.\n\n\"I think you are still making too much noise!\" Tammy snapped, short tempered from lack of rest. She stopped herself before she got carried away. Yoshi and Jean had not had much more rest than she had and they were younger and less able to deal with stress. \"Sorry. You need to be more quiet, though. I don't know for sure that we aren't still being followed. I don't think we are, but there were at least two groups of Dusig out there and maybe they could hear you the way I heard them yesterday. And there's a flyer up and cruising.\"\n\n\"Sorry, Tammy,\" Yoshi said. He shrank into himself a little and gestured lamely at the carry pack. \"Just frustrated with this thing, I guess.\"\n\n\"What's wrong with it? Can you fix it?\" she asked.\n\n\"Like I was telling Jean, the power cell is fine,\" he said. \"The panels are dirty but not enough to matter. We can wipe them off, anyway. I think it has to be the linkage or the converter. Either of those would cause the cell to fail to charge.\"\n\n\"So the outflow is okay?\" she asked, meaning the energy flow from the cell to the gravitic motors.\n\n\"Nothing wrong with it,\" he said. \"Not even old enough to need servicing.\"\n\n\"What can you do?\" she asked.\n\n\"Not much,\" he admitted. \"Don't have a diagnostic kit, so I can't tell which part is bad. If I had replacements I could swap them both out and we wouldn't have any more trouble.\"\n\n\"But we don't have the parts!\" Jean said waspishly. \"Let's forget the carry pack and build a damned travois! We're wasting time!\"\n\n\"Jean!\" snapped Tammy. \"Knock it off. You aren't helping.\"\n\nJean scowled at her. She stopped haranguing Yoshi, though.\n\n\"Have you got anything you could swap parts out of?\" Tammy asked the off-world boy.\n\n\"Nothing,\" he said, throwing up his hands. \"I'd have this thing floating already if I did.\"\n\n\"Fine,\" she said. \"Aside from the transceiver, what do we actually need this thing to carry?\"\n\n\"The tools,\" Yoshi said instantly.\n\n\"Aren't there tools at the tower?\" she asked.\n\n\"A few, but those are mostly big things like the fabricator.\"\n\n\"What tools do you actually need?\" she asked, waving at the boxes in the carry pack.\n\n\"That blue toolbox, I guess,\" he said thoughtfully.\n\n\"The transceiver weighs about two kilos, doesn't it?\" she asked.\n\n\"Closer to three,\" he said.\n\n\"The toolbox?\"\n\n\"Twenty-five or so.\"\n\nTammy went to Tinkerbelle, patted the mare on the neck and undid a pair of straps at the back of Jean's saddle, releasing the bundled stretcher.\n\n\"This can carry two hundred kilos for eight hours without recharging.\" She unfolded the stretcher and activated it. The frame instantly rose to hip height and remained there. \"Load the transceiver, the explosives and the tools and let's get going.\"\n\n\"But it won't follow us,\" argued Jean.\n\n\"Really, Jean?\" Tammy asked dryly, holding up the follower beacon. \n\nJean clapped her mouth shut and blushed deeply, not meeting Tammy's glare.\n\nMore gently the older girl said, \"Clip this to Yoshi's saddle. We'll be done soon. The tower is close. In a couple of days we'll be back home.\"\n\n\"I'm sorry, Tammy,\" Jean sniffled.\n\n\"It's alright,\" her older sister said and kissed her forehead. \"I didn't mean to snap at you. We're all tired. Come on now.\"\n\n*****\n\n*duroplast - A lightweight polymer used in a wide range of construction applications. Favored in the manufacture of aircraft."
    ],
    "authorname": "RipperFish",
    "tags": [
        "adventure",
        "cat",
        "furry",
        "forest",
        "sci-fi",
        "future",
        "multi-chapter",
        "survival"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/a-world-for-the-taking-ch-06"
}