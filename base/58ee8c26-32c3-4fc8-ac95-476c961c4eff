{
    "title": "Diary of a High Price Escort Ch. 09",
    "pages": [
        "Mitch stirred in the middle of the night, waking me from a deep sleep. From the rapid movement of his eyes behind closed lids and his indistinguishable mumblings I assumed he was in the middle of a dream. He didn't seem to be in any kind of distress making me think he wasn't having a nightmare. \n\nI slipped out of bed and went to the bathroom. As I sat there in the dark waiting for my bladder to empty itself of the Coronas we had earlier, I thought about the events of the evening. \n\nWhile I was pleasantly surprised that Mitch had overcome his dysfunction, I hoped it wouldn't be a once and done thing.\n\nI got my answer upon my return to the bedroom. The satin sheet covering his body was tented up above his loins. He was clearly still in a dream state, almost inaudible sounds coming from his lips confirming that fact. I stood by the bed for several minutes watching him. His fingers occasionally moved a little and his eyes continued moving under his closed eyelids I wondered if I should try climbing back into bed and just snuggle next to him, or uncover his erect cock to give him a blowjob knowing that he'd wake up and find my mouth encircling his cock. His arms rested on top of the sheet by his sides and I knew that if I tried to pull it from beneath he would wake up before I had a chance to slip his bulbous cock head between my lips. \n\nInstead, I moved to the foot of the bed and pulled the top satin sheet out from under the mattress. I slithered up under it carefully crawling toward his loins, making sure not to touch him until my mouth was poised over his erect cock. \n\nThe sheet slid down my back as I moved, finally reaching a point where it was draped over my head instead of his hard erection. He smelled clean having showered after we'd had sex earlier and I couldn't wait to take his cock between my lips. I lowered my mouth letting the head slip inside, then closed my lips around the shaft just below his flaring silky smooth corona. His cock felt wonderful and tasted even better as I slowly began bobbing my mouth up and down on his hard erection. \n\nI heard him moan softly and wondered if he was still dreaming or if my soft oral caresses had brought him from his dream state. The feel of his hand against my head provided me with the answer and the slightest of pressure urged me to take more in my mouth.\n\nAs he turned on a light illuminating the room, a wonderful moan escaped from his lips. He drew back the satin sheet to watch as I sucked his very hard cock. The warm light from the lamp on the night table provided me with an opportunity to closely examine his cock. I let him slip from my delicate oral grasp and began slowly stroking the length of his shaft with my hand. The pear shaped head, smooth and glistening with saliva rose above a flaring corona. The hard shaft was without any visible matrix of veins, the only bulge being that of his thick urethra extending up from his scrotum to just below the head. \n\nAs I licked along the bottom of his shaft, my hand lightly caressed his corona and as I reached the top I looked up into his eyes still somewhat sleepy but with a definite stare of total amazement as he watched. I knew it had been years since Mitch had watched a sexy woman pleasure him in this way. My hand opened and slid down the top of his shaft coming to rest in the patch of pubic hair at the base, then pulled it toward my open mouth as my tongue reached the tip of his head. \n\nWhile I continued to look at him, my teeth slid over the cock head until the tip pressed against the roof of my mouth. I continued pulling the shaft down as more and more of his cock slipped beyond my lips until the tip was wedged into the back of my mouth. I smiled at him with my eyes, signaling that I wasn't completely done, then closed them and dipped my head slightly letting the cock head slip through the tight ring of flesh leading to my throat. In an instant my upper lip touched my index finger and I quickly removed my hand so I could impale him completely. \n\nHis lustful moan was followed in short order by firm pressure on my head as he tried to sink his throbbing cock deeper in the soft moist flesh. \n\nI held him in my throat slowly swallowing to caress the head and part of the shaft with my muscles. \n\n\"Oh my god!\" Mitch finally moaned as the full impact of my oral talents caused his cock to surge. \n\nHis hand moved away and I lifted off a little giving me room to fill my lungs with oxygen, then took him deep again repeating the swallowing motion of my throat muscles. The next time I lifted off his surging cock to breath, he thrust up off the mattress to meet my plunging throat as I swallowed him again. \n\nI slid my hands up over his belly to claw at the mat of hair on his chest as I again made eye contact with him, his wide eyed lustful stare fixed on the oral spectacle unfolding before him.\n\nAs I lifted off his cock, now coated with a layer of saliva, it lurched toward his belly, a long thick strand of spit extending from my tongue to the head of his cock. Mitch watched intently as I cupped my tongue into a U shape then slurped it back inside my mouth, much like someone would suck a long strand of spaghetti dangling from their lips. \n\nI moved one hand from his chest to capture his cock and pulled it toward my pursed lips smearing the moisture over the soft flesh surrounding my mouth. \n\n\"Suck it again.\" Mitch pleaded. \n\nI smiled briefly at him before I began sucking, licking and kissing his cock head softly. His cock surged again as I pleasured just the head with my mouth, knowing that I wanted his thick sauce where I could best taste it. \n\n\"I want you to cum in my mouth.\" I softly whispered between kisses on his bulbous cock head. \n\nIn absolute amazement he answered me instantly. \"Yes!\" \n\nMy delicate hand stroked the base of his shaft as my even softer lips caressed the head. Mitch moved his hand to cover mine urging me to jerk his shaft faster. Instead, I moved my hand down to cup his balls allowing him to control the pace of his approaching climax. His hand moved faster, the top side of his index finger bumping into my chin each time he stroked up. \n\n\"Cum for me, I wanna taste your hot sauce.\" I urged him on. \n\nI lightly placed my thumb against the base of his cock and actually felt the surge of hot cum fill his thick urethra. An instant later it shot from him flying above my mouth and splashing across my nose. He moaned deeply, his eyes fixed on my face, watching me accept every drop. I moved my mouth to cover the tip just in time for his second blast to shoot against the roof of my mouth coating it with his sweet cum. He groaned again as my lips closed around the head, capturing every savory drop his cock provided. His thick creamy cum tasted sweeter than most men, and I enjoyed every drop until he started to just ooze the final few onto my waiting tongue. \n\n\"God damn.\" Mitch finally spoke as his cock slipped from my mouth. \n\nI slid my hand up and grabbed him smearing his cum coated cock head across my lips, then drew him away so I could open my mouth and show him the reward he'd given me before swirling it around and letting it slip down my throat. With a smile on my lips I brought his cock back to my face using it to smear the wad on my nose across both cheeks, then took the head between my lips and sucked gently on it hoping for one final sweet droplet of his seed. \n\n\"That was fucking incredible.\" Mitch softly whispered as I sucked him until he was nearly flaccid. \n\nAs he slipped from my lips, I began crawling up over his body dragging my tits over his soft cock and softer belly. I shook my shoulders letting my nipples slide through the thick mat of silvery hair on his chest, then positioned my face just above his. I moved my mouth toward him, but he turned his face away. \"I've never tasted...\" He began to say but my mouth covered his before he could finish. \n\nHis lips were held tightly together as I tried to give him a taste of his seed. Mitch either found the taste un-offensive or decided to just give in to my wishes and parted his lips letting me probe beyond with my cum coated tongue. Our kiss grew in intensity, until he was sucking my tongue and licking at my sweet cum coated lips. \n\nBreaking our savory kiss I slipped my mouth to his ear and whispered. \"I love the taste of your cum.\" \n\nMitch just giggled and replied. \"I could tell.\" \n\nI slid off his body and snuggled into his side. He reached down and pulled the satin sheet up over us both and slid an arm under me to pull me even closer, his fingers slowly caressed my shoulder. My head rested on his chest as I ran my soft fingertips across his paunchy belly. \n\n\"Were you dreaming?\" I asked. \n\n\"I was and you made my dream come true.\" He replied. \n\nHis chest began to rise and fall at a slower rate and soon after he no longer moved his fingers on my shoulder. I closed my eyes and joined him in a blissful sleep. \n\nHours later I awoke, bathed in sunlight but alone. As I rolled onto my side to shield my face from the sun's rays streaming through the window, I noticed a single red rose bud resting on the pillow beside me. I reached for it and brought the blossom to my nose its lovely fragrance stimulated my nostrils, but more importantly the gesture warmed my soul. \n\nSlipping from under the satin sheets I walked to the dresser where I'd carefully sorted my clothes the day before. I had the perfect complement to Mitch's early morning gift and slipped into a short red satin robe, tying it loosely around my waist. As I walked to the living room the smell of fresh coffee filled the air. I approached the room service cart and found a vase containing another two beautiful red rose buds, an insulated carafe of hot coffee and an assortment of danish pastries he had ordered for breakfast. \n\nSoft tropical music was playing from unseen speakers and I looked toward the open balcony door where the gentle ocean breeze was again ruffling the sheer curtains covering the opening. Mitch was seated on one chair waiting for me to join him. I poured a cup of coffee and walked through the curtains. \n\n\"Good morning lover.\" I greeted him from behind, my fingers touching his naked shoulder as I move to his side. \n\nHe turned and looked up at my face. A broad smile appeared on his lips before he spoke. \"Good morning to you Angel.\" \n\nI leaned down and kissed him softly on the mouth as my robe fell away exposing my lush full breasts. \n\nMitch peeked down inside and smiled as I straightened up and sat down next to him. His eyes followed checking out how the satin fabric clung to my breasts and showed off my nipples. \n\n\"Great tits.\" He said. \n\nI smiled and shook my shoulders a little causing my tits to sway side to side allowing him to appreciate the ripe fullness of my breasts. \n\nI took a sip of my morning java then sat the cup on the table beside me. \n\n\"You know what I like most about my tits?\" I asked. \n\nMitch was still checking them out as he looked up and replied. \"What's that?\" \n\n\"I love how they look with a hard cock sliding between them.\" I answered smiling widely at him. \n\nHe kept watching me, but I knew he was enjoying a mental image of his hard cock being caressed between my soft tits. \n\n\"So what's on tap for today?\" I asked. \n\nHis mind was still focused on that mental image. \"You mean beside me thinking all day about fucking your tits? He replied. \n\nI smiled. \"Well I wouldn't want that to distract you, so if you like I can get down between your legs and suck your cock till its rock hard and you can fuck them right now.\" \n\nMitch giggled then answered. \"I think I might enjoy the distraction. Lord knows the anticipation of that will benefit us both later this evening.\" \n\n\"Okay, so if you don't want my body this morning whatever shall we do today?\" I politely asked. \n\n\"You know I'd really like to just relax for a while, maybe we could go down to the pool or if you want we could sit on the beach.\" Mitch suggested. \n\nI grinned then stated. \"You just want to see this sexy body in a swimsuit.\"\n\nHe leaned toward me. \"You've read my mind.\" \n\n\"The pool looked so inviting when I walked by yesterday and I'd hate to get sand everywhere so I'm voting for the pool.\" I remarked. \n\n\"The pool sounds good to me, that way we won't have to worry about man eating sharks.\" Mitch replied. \n\nI giggled then asked. \"But what about woman eating men?\" \n\nMitch laughed loudly at my reference to his woman eating talents.\n\n\"So tell me what your preference is?\" I asked. \n\n\"Preference for what?\" Mitch replied looking a little confused. \n\n\"Should I wear my white suit or black?\" I asked. \n\nHe moved his bent finger to his chin like he was deep in thought about his choice. \"I believe I'd like the black.\" He requested after what seemed like an inordinate amount of time. \n\nI grinned at him. \"Good choice, I look very sultry in black.\" \n\nHe laughed again. \"You would look sultry in a burlap bag.\" \n\n\"And what about you, did you remember to pack your Speedos?\" I asked. \n\nMitch laughed almost hysterically. His hands slid to his pot belly as he replied. \"I don't think so, this old body is no longer built for a Speedo.\" \n\nI finished my coffee then announced. \"I'm gonna change into my suit.\" \n\nMitch just smiled and nodded his head. I could tell from his expression that he couldn't wait to see me in my swimsuit. \n\nWith a fresh cup of java and a tasty looking pastry in hand I headed for the bedroom to prepare for a late morning visit to the Royal Cancun's awesome pools. \n\nSlipping my satin robe off, I surveyed my body in the dresser mirror. My augmented breasts looked very natural without the ripples often seen on women who paid less for their implants. The tiny scars below each nipple had almost completely faded away. My flat stomach blended perfectly down to my silky smooth pubic mound, accentuated by the fullness of my hips and shapely thighs below. I smiled at my reflection knowing my body could still bring a dysfunctional cock to life. \n\nI took a bite of the pastry before stepping into my one piece suit sliding it up my legs, carefully tugging it evenly over my hips, then slipping my arms through the shoulder straps. The deep plunging V between my tits showed off my impressive cleavage and just a hint of the big soft mounds of pleasure. Turning sideways, I inspected how the suit rose over my hips, exposing every luscious inch of my shapely legs. Lifting up on the balls of my feet to see how I'd look in heels, my legs looked even longer and sleeker. The miracle wet look fabric gave the appearance that I'd already dipped my sexy body into the water of the pool. I loved how it clung to my body. \n\nI regretted not buying a pair of black heeled sandals to wear, knowing black pumps or even worse stilettos would give me a trashy appearance. Instead, I opted to wear the same sandals I'd almost left on the beach last night. \n\nI draped my beach cover up over one arm and headed for the balcony. Mitch was sitting there enjoying the soft breeze and warm sunlight as I slipped through the curtain. I placed my cover up over the back of the other chair and walked past him to the railing leaning over it just a little which showed off my sexy ass. \n\n\"Oh shit!\" He exclaimed. \n\nI knew his eyes were glued to my ass and I paused a moment to give him time to fully appreciate how shapely my hips and ass were. I turned sideways and paused again to show him every inch of exposed leg, his eyes clearly savoring its length. \n\nHe forced his eyes up to meet mine as I turned again revealing the best part. \n\n\"Oh my god!\" Mitch exclaimed. \n\nHis eyes reminded me of the look a small child gets on Christmas morning, but his present was covered in black shimmering material with a streak of creamy white cleavage serving as the ribbon. I slipped my hands up and pulled the fabric at the sides of my cleavage widening the streak of white, giving him a glimpse of the gift he could unwrap whenever he wanted. \n\nI asked the obvious silly question. \"So you like my suit?\"\n\n\"Like is the understatement of the decade.\" He replied, smiling widely and raising his hand. He pointed a finger toward the floor and made a circular motion with it for me to spin around again. \n\nI pirouetted on the balls of my feet giving him an opportunity to again check out how well the suit covered my body while still exposing the important naughty bits. Coming to a stop again facing him, I smiled waiting for him to comment. \n\n\"I don't think I've ever seen a sexier swimsuit.\" Mitch said. \n\nI cocked my hips and replied. \"It makes me feel sexy wearing it for you.\" \n\n\"I'm not sure I want to share this with all the other men here.\" He commented. \n\nI took a couple steps toward him and as I bent at the waist I said. \"That's funny.\" Pausing until my lips were beside his ear. \"I want every other man here to see what a hot woman you're spending the weekend with.\" I softly whispered. \n\nI straightened up and slid my nails over his chest, then retrieved my cover up. As I stepped toward the door I said. \"So get a move on buster so I can make them all jealous of you.\" \n\nHe didn't need to be told twice and caught up to me as I stepped back inside. \"Give me two minutes.\" Mitch said as he headed to the bedroom. \n\nIt took him less than that to change into his swim trunks. He returned looking a little disappointed. \"These used to fit a lot better.\" He remarked, then sucked in his gut trying to show me how they fit years ago. \n\n\"I like the cute little bulge in front.\" I commented \n\nHe shook a finger at me and with a serious look said. \"Never call a guy's cock cute or little.\" Then a wide smile came to his face.\n\nI apologized. \"You're right, that cute little cock filled me just fine last night.\" \n\nStill smiling, he walked over and gave me a playful slap on my ass telling me that was for my last comment after being warned. He then took my cover up from my hand and draped it over my shoulders, his fingertips sliding down along my sides until they reached my hips.\n\n\"I can't wait to get you in the water so I can play.\" Mitch commented as we left the room. \n\n\"You think I'm getting wet?\" I asked. \n\n\"One way or another.\" He replied. \n\nI smiled accepting my fate that I'd be his pool toy sometime in the next few hours. \n\nAfter exiting the elevator, we made our way through the resort to the pool. As we walked out onto the deck I spotted Tiffany reclined on a chaise lounge enjoying the sun at the deep end of the pool, but James was nowhere in sight. \"There's Tiff.\" I commented pointing in her direction. \n\nMitch put his arm around my waist and directed me toward the shallow end. Tiffany saw us and waved realizing that Mitch wanted me all to himself for now. \n\n\"Do you want to sit under an umbrella?\" Mitch asked as we neared two open chaise lounges both protected from the bright sunlight. \n\n\"Yes please, the last thing I want is to get a burn so you wouldn't be able to touch me later.\" I remarked. I hung my cover up over the back of the chaise lounge and slipped out of my sandals, then sat down and stretched my long shapely legs out on the comfortable cushion of the chaise lounge. \n\nMitch dropped his shirt to the deck and kicked his Docksiders off. \"Think I'll test the water.\" He said. \n\nI watched as he stepped down the stairs in the shallow end until the water covered the bottom of his trunks. \n\n\"It's like bath water.\" Mitch said, than dove into the water. \n\nI watched to make sure he surfaced expecting him to climb back out and join me. Instead he began swimming toward the other end of the pool. He reached the other end then turned and began swimming back. Surely he'd climb out and sit beside me I thought as he approached the stairs. Much to my disappointment he turned again and I realized he was actually going to swim laps. I wanted him next to me so I could flirt and tease him, but Mitch must have decided it was time to start getting in shape. ",
        "Tiffany was also watching from the far end of the pool and on his sixth or seventh lap she stood up and walked toward me. \n\nHer bikini, if you could call it that, consisted of three tiny triangles of pale yellow fabric with the thinnest of strings connecting the patches of material together. The color contrasted perfectly with her dark tan and her huge tits jiggled as she walked toward me, every male eye with the exception of Mitch's were staring at her as she walked. \n\n\"Morning Angel.\" Tiff greeted me \n\n\"Hi Tiff.\" I replied then added. \"That's some suit.\" \n\n\"I hate it.\" Tiff answered. \"Damn thing won't stay in place.\" She quickly added as she adjusted one triangle that a nipple was peeking out from.\n\n\"Well all the men seem to like it.\" I remarked. \n\n\"Yeah, they'd like it even better if I just took it off.\" Tiff answered as she sat down on Mitch's chaise lounge. \n\n\"I see the silver fox is something of a swimmer.\" Tiff commented, as Mitch made a turn and began another lap in the pool. \n\n\"Where's James?\" I asked. \n\n\"I guess he's still sleeping one off.\" Tiffany remarked. \n\n\"Really?\" I answered. \n\nTiffany explained. \"When we left your room last night, we weren't alone for more than a minute and he had me on my knees sucking his cock. After he unloaded all over my tits he started drinking and didn't stop until he passed out.\" \n\n\"That's not cool.\" I answered \n\n\"On top of that, the fucker snores incessantly, so after about an hour I just curled up on the sofa and slept there.\" Tiffany explained. \n\n\"Sorry to hear that.\" I commented knowing she had to be disappointed. \n\n\"So how'd the silver fox treat you?\" Tiff asked. \n\nI smiled. \"He took me for a late night walk on the beach. Then after he got over his shyness, he showed me what great oral talents he has and he finished by fucking me on one of the bar stools. I rewarded him with an awesome blowjob during the night while he was dreaming.\" \n\n\"Sounds like you got the best one of the lot.\" Tiffany remarked. \n\n\"I may have and the added bonus is that his cum is the sweetest I've ever tasted.\" I admitted proudly. \n\nTiffany giggled. \"Maybe we could trade tonight.\" \n\n\"No way hun, I've got grand plans for him tonight.\" I replied. \n\nMitch was just approaching the shallow end again, and stood up at the bottom of the steps. \"Join me girls.\" He suggested. \n\nI looked at Tiffany who instantly said. \"This suit has a snowball's chance in hell of staying put in the water.\"\n\nI grinned knowing she was absolutely right. \"I think I'll take a dip.\" I said knowing Mitch would be surprised that I'd joined him. \n\nAs I started toward the water Tiffany asked. \"Are we having dinner together tonight?\" \n\n\"I'd like that, but let me run it by Mitch.\" I lied knowing I was already planning a romantic dinner for two. \n\n\"Great Angel, I think I'm going to go check on James, hopefully he's recovered some from his hangover and I'll get some hard cock for lunch.\" Tiffany remarked, making sure her nipples were covered by the tiny pale yellow triangles before standing to leave. \n\nI watched as she walked toward the hotel, her magnificent almost naked ass and long sexy legs, not to mention her huge tits drew the attention of just about every male in the area. I giggled to myself thinking. \"If James isn't up to it she could seduce any one of the men who were fantasizing about fucking her right now.\" \n\nI took a timid step down the stairs dipping my foot under the water. \"It's freezing cold!\" I exclaimed as Mitch watched me. \n\n\"You'll get used to it quickly.\" He promised. \n\nAs I stepped deeper into the chilly water I smiled at him. \"You said it was like bath water.\" \n\nHe giggled and replied. \"What can I say I like cold showers?\"\n\nThe water was waist deep where I stepped off the last of the stairs. I held my hands above the surface trying to avoid the cold water. \n\n\"Just dive under and get completely wet.\" He suggested. \n\n\"I wasn't planning on getting my hair wet.\" I replied. \n\nHe giggled then splashed water at me. \"Wanna bet?\" The splash missed its mark but I still reacted like he'd just soaked me. \n\nI slowly walked toward him and he teased me by moving back toward the deeper water as I tried to catch up with him. \n\n\"I love the way you react to the cool water.\" He commented as he stared at my hard nipples. \n\nAs I neared where he waited he reached out. \"Come on, let's go into the deep end.\" He said.\n\n\"And why would I want to go all the way over there?\" I asked pointing to the other end of the pool. \n\nHe smiled and stretched his fingers toward me wiggling the wrinkled tips at me. Mitch teased me saying. \"So I can play with your sweet tits. I know you want me to, but you've got to be underwater or everyone will see.\"\n\n\"Like they'd care.\" I replied. \n\nI have to admit that my body was beginning to get used to the water and I let my hands slip under the surface. \n\nMitch moved deeper into the pool, the water now covering most of his curly chest hair. \n\n\"Come on, you can do it.\" He urged me on. \n\nI did want his touch and knew that even in the cold water it would send shivers up my spine. I half jumped, half dove toward him letting my body sink below the surface. The water actually felt very refreshing and as I surfaced Mitch captured my hands and pulled me toward him. My hair cascaded everywhere covering my face as well as my shoulders. I dipped backward and came up face first clearing the hair off my face. \n\nMitch was smiling widely knowing he had teased me into the pool. I moved closer to him. \"You're really something Mitchell Freeman.\" I remarked. \n\nHe reached out and placed his hands on my hips, then easily lifted me and brought my body against his. I circled my arms around his neck and pressed my big tits against his chest, slowly moving my shoulders and rubbing my tits in the thick patch of silvery hair. \n\nHis eyes stared into mine almost as if he was waiting for me to give him permission. \"Kiss me you fool.\" I whispered. \n\nOur mouths met not in a tender, tentative kiss but in a passionate, soul searching kiss his tongue piercing my lips and searching out its sensual dance partner. I melted into his arms as he circled my waist drawing our loins together. My toes barely touched the bottom as our kiss found a way to intensify. A soft moan escaped my throat as his gentle touch and passionate mouth caressed me. I could have stayed there in his arms kissing him endlessly until my flesh wrinkled like a prune. His sensuous touch making it all worthwhile. \n\nMitch finally broke our kiss and moved his lips beside my head. Through dripping wet hair he whispered. \"You are so beautiful.\" \n\nHis words warmed me from the inside out and I tilted my head toward his lips to feel his breath on my ear.\n\nMitch turned me around so I was facing away from him and let my feet come to rest on the bottom. I instantly ground my ass back against his loins as his hands slid up to gently cup my big tits. My already hard nipples poked at the fabric covering them. I needed to feel my nipples in his palms and reached for his hands drawing them to the edge of my swimsuit so he could slide them beneath the fabric. His hands covered my nipples, this time flesh on flesh, the sensitive erect nubs slipping around in his soft palms. \n\n\"Your nipples get so hard.\" Mitch whispered in my ear. \n\nI placed my hands over his and pressed them firmer against my flesh urging him to be more aggressive. \"Squeeze them.\" I implored him. \n\nHis hands tightened on my tits as he used the tip of two fingers to circle my erect nipples. A lustful moan escaped my lips as he squeezed both tits and pinched their nipples. \n\nOur lustful foreplay had drawn the attention of several men and a few couples who clearly enjoyed watching him pleasure my chest. \"People are watching.\" Mitch said quietly in my ear. \n\n\"We should stop.\" I admitted, but hoped he'd continue. \n\nMitch slipped his hands from my tits and again lifted and turned me around. Before my toes reached the bottom of the pool he drew me tightly against his body. \n\n\"I can't wait to get you alone later.\" He said. \n\nI smiled at him. \"I can't wait to seduce you.\" \n\nHis smile confirmed that was exactly what he wanted. \n\n\"Let's get out.\" I suggested. \n\nMitch nodded his head and moved to my side letting his arm circle my waist as we began walking to the steps at the shallow end. Before we got too far, I slid my hands over my breasts making sure the fabric of my swimsuit was covering them. \n\nAs we stepped onto the deck, dripping wet, Simon who was working the pool today approached with two large beach towels. He handed both to Mitch as we stood beside our chaise lounges. \n\n\"Would you like a drink?\" Simon asked. \n\nI smiled at him. \"I'd love one.\" \n\nMitch dropped his towel on the chaise lounge and as he draped mine over my shoulders he said. \"Let us have two bottles of Perrier.\" His hand slid down my back and came to rest just above my ass. \n\n\"Very good sir.\" Simon replied as he turned and headed to get our drinks. \n\n\"I've gotta use the men's room.\" Mitch said as I sat down on the chaise lounge. \n\n\"I'll be here trying to warm up.\" I replied. \n\nMitch grabbed his towel and as he walked away he used it to soak up the water on his body. \n\nI stretched my legs out on the chaise lounge and lay back allowing the towel to slip off my shoulders, the warm midday air already beginning to take the chill off my lush sexy body.\n\nSimon returned. \"I have your Perrier Ma...\" he paused and corrected himself \"Angel.\" \n\nI turned my head and smiled to thank him for remembering my name. \"Simon, you told me yesterday that if I needed anything I should ask you.\" I remarked. \n\n\"That's correct.\" He replied. \n\n\"This is going to sound strange, but could you possibly get me a couple of blank score cards from two of the local golf courses, and a supply of Viagra?\" I asked.\n\nHe smiled at me. \"Viagra?\" He asked, with an almost surprised expression on his face. \n\n\"Yes Viagra, I want to try a little experiment tonight.\" I replied. \n\nI assumed Simon was usually asked to secure a supply of cocaine or pot so his surprised expression didn't seem too out of line. \n\n\"I'll have to work on the Viagra. The score cards I can pick up this afternoon when I get off.\" He explained. \n\n\"Well I need the pills for tonight.\" I commented. \n\nSimon crouched down next to me. \"Angel, illegal drugs are easy but prescription drugs are a little more difficult, but I'll do my best.\" He said. \n\nAs Simon stood up Mitch returned. He handed Simon a ten and said. \"That'll be all.\" \n\n\"Thank you sir.\" Simon answered with a grin knowing Mitch would be in for a real treat later. \n\nAs Mitch sat down on the chaise lounge next to me he commented. \"Getting cozy with the staff?\" \n\nI looked toward him as he stretched his legs out. \"Simon's a great guy, he's just trying to be helpful.\" I said. \n\n\"You're on a first name basis with him?\" Mitch questioned me. \n\nI wasn't sure I liked the tone of his voice. \n\nMitch continued his questions in the same tone of voice. \"Maybe you'd like to fuck him while I watch.\"\n\nHis statement pissed me off. \"Maybe you'd like to fuck yourself.\" \n\nMitch grinned, which I found rather strange considering his suggestion. \"I'm just kidding Angel.\" \n\nI cooled down a little but wondered about his statement \"Do you like to watch?\" I asked. \n\n\"Watch what?\" Mitch answered. \n\nI giggled hoping he was playing games with me. \"Mitch, you just asked me if I'd like to fuck Simon while you watched.\" \n\nHe didn't reply directly to my question, instead he asked. \"Would you like to watch me fuck Tiffany?\" \n\nSo his entire line of questions was to see if I'd mind if he fucked Tiff. \"Do you wanna fuck her?\" \n\n\"Do you wanna watch?\" He replied, continuing his playful way of answering with a question of his own. \n\nI sat up and turned to face him, my feet coming to rest on the deck between our chairs. \"No I don't want to watch you fuck Tiffany, I want to watch you fuck ME!\" I replied. \n\nHe grinned and placed his hand on my knee. \"Good, cause that's exactly what I want too.\"\n\nAs I reclined again on my chaise lounge I commented. \"Mitchell Freeman you have a weird sense of humor.\" \n\nHe smiled and in his best Popeye impression answered. \"I am's what I am's.\" \n\nAfter a few minutes of complete silence I decided to try and get our conversation started again. \n\n\"So what would you like to do for dinner tonight?\" I asked.\n\nMitch turned his head toward me, a smile spread across his lips as he spoke. \"Well I hate Mexican food so Taco Bell is out of the question.\" \n\n\"I was hoping for something a bit more elegant.\" I answered. \n\n\"Do we want to invite the kids?\" Mitch asked, wondering if a triple date might be something I'd enjoy. \n\nI frowned at him. \"I don't really want to share you with anyone.\" \n\nHis smile confirmed that he agreed. \"I do enjoy seafood, how about you?\" He asked. \n\n\"I'd like that, in fact yesterday when I was exploring the resort I saw a restaurant with a tank of live lobsters. There was a sign on the tank that said Caribbean lobsters are the sweetest in the world.\" I explained. \n\n\"That's odd, my experience is that rock lobsters have a saltier taste and the tail meat isn't as tender as cold water lobster. I actually lean toward something more exotic in seafood. Grouper, wahoo, and especially swordfish are species that I really like.\" He explained. \n\nObviously Mitch knew his seafood so I suggested. \"I think we should get dressed up and have a romantic dinner for two in that restaurant.\" \n\n\"All this talk about food is making me hungry. Do you wanna grab some lunch?\" Mitch asked. \n\n\"That sounds good. I think there is an outdoor caf\u00e9 over that way somewhere.\" I replied pointing back and over my head.\n\nMitch reach for my hand as he turned on his chaise lounge, then helped me stand. I grabbed my cover up and slipped it on. He continued holding my hand as we walked in the direction I'd pointed. \n\n\"Damn, I forgot my shoes again.\" I exclaimed as I pulled my hand from his and walked back to slip my sandals on. \n\nAs I returned to where he was waiting he smiled widely at me. \"You seem to always be running off to grab your shoes.\" He remarked. \n\nI just giggled and accepted his outstretched hand. \n\nThe outdoor caf\u00e9 is nestled between the two pools at the Royal Cancun, and had seating for about 35. Most of the tables were set for four and the few that seated two were already taken. There didn't seem to be anyone greeting diners so we just found an open table and sat down. \n\n\"Good afternoon, I'm Wendy, and I'll be your server today.\" The cute blonde waitress said as she stopped beside our table. \n\n\"Hello Wendy.\" Mitch replied as I checked out how nicely her shorts fit over her petite ass. \n\n\"Will you be having lunch?\" Wendy asked. \n\n\"I believe we will.\" Mitch replied as he reached for the menu Wendy offered. \n\nI grinned at her as she handed me a menu then began reading what the caf\u00e9 offered. \n\n\"Would you like a cocktail?\" Wendy asked. \n\nMitch glanced at me. \"I'd like an unsweetened ice tea.\" I said. \n\n\"I'll have the same with lemon.\" Mitch said. \n\n\"Very good, I'll be back in a few minutes to take your order.\" Wendy said as she turned and headed off. \n\n\"She's cute.\" I commented as Mitch began scanning the menu. \n\nHe looked up and grinned. \"My daughter is older than her.\" \n\nI continued watching him as he returned his attention to the menu. \n\n\"You didn't tell me you had kids.\" I commented. \n\n\"You didn't ask.\" Mitch replied looking up again. \n\n\"How many children do you have?\" I questioned. \n\n\"Three daughters and a son, my youngest is 27.\" Mitch answered. \n\nI did some quick math, if his youngest is 27 then he most likely has grandchildren also. \"So are you a Grand Pop?\" I asked with a smile on my lips.\n\nHe dropped his menu and looked into my smiling face. \"Yes, three times over and if you start calling me Pop Pop or Poppy I'll send you packing.\" His smile confirming that he wouldn't really do that. \n\nI grinned and resisted the urge to reply calling him Poppy. \n\nAs I was about to begin looking over the menu again, I noticed Jasmine and Avery approaching from the beach. She was wearing that same tiny white string bikini, which looked absolutely fabulous against her skin. \n\n\"It's Avery and Jasmine.\" I said catching Mitch's attention. \n\nBefore he could react Jasmine was standing between us. \"Hey girl having lunch?\" She said. \n\n\"Hiya Jasmine. Yes we're grabbing a quick bite.\" I answered, glancing at Avery then down to Mitch. \n\n\"Join us.\" Mitch suggested, surprising me somewhat. \n\nAvery replied. \"You sure it's not an inconvenience?\" \n\n\"Not at all, we'd love the company.\" I lied. \n\nJasmine sat next to me which left Avery the chair across the table from me. \n\n\"That's a sexy swimsuit Angel.\" Jasmine remarked.\n\nI noticed Avery's lustful stare, his eyes focused on the deep cleavage exposed in the plunging V of my black swimsuit. For a moment I regretted not fastening the buttons on the front of my cover up, but I decided to allow Avery to thoroughly enjoy the same view of my tits that the other men had.\n\nI glanced at Mitch again and he was back to the menu. \n\n\"Thanks Jasmine. I love your little number too.\" I remarked just to change the subject while trying to divert Avery's eyes from my deep cleavage. \n\nI have to assume Mitch noticed Avery staring at my big tits because he spoke up. \"Are we playing golf tomorrow morning?\" He asked Avery. \n\n\"I would love to if this hot thing will let me outta bed.\" He replied as he placed his hand on Jasmine's forearm. \n\nFrom his comment I had to figure that since they had left our suite the night before they had both enjoyed multiple orgasms and as many lines of coke. \n\nWendy returned with our drinks and asked. \"Should I get two more menus?\" \n\n\"They can share mine.\" I replied for us all knowing I'd most likely have the same thing that Mitch ordered. \n\nWendy placed our ice tea in front of us then asked. \"What would you like to drink?\" Seeming a little frustrated that she'd need to go for another drink order. \n\nAvery spoke for Jasmine. \"Give us two Coronas.\" \n\nShe dashed off to retrieve their beers. \n\n\"So are you enjoying your weekend?\" Avery asked directing his question to Mitch. \n\n\"Immensely!\" Mitch exclaimed as he slipped his hand to my thigh under the table. \n\n\"Me too.\" Jasmine chimed in grinning at Avery. \n\nI just slid my hand over Mitch's and gave it a gentle squeeze letting him know I was also enjoying myself. \n\nWendy returned again carrying a tray that held two Coronas and a pair of frosted beer glasses and after placing Avery and Jasmine's drinks in front of them asked. \"Are you ready to order?\" \n\nMitch replied first. \"We'll have the lobster caesar salad.\" \n\nI smiled and nodded my approval. \n\n\"Miss?\" Wendy asked looking toward Jasmine. \n\n\"Can I get a cheeseburger and fries?\" She replied giving away her fast food addiction. \n\n\"I'll have the Ruben.\" Avery added. \n\n\"Very good, please let me know if I can freshen up your drinks.\" Wendy said before she walked away. \n\nWe made small talk while we waited for our food. Avery explained that he was a lover of Mexican food and that they had plans to eat at a small caf\u00e9 downtown. Mitch vaguely told them of our plans. \n\n\"Have you been on the beach?\" Jasmine asked as she looked toward me. \n\n\"Mitch took me for a very romantic star lit walk on the beach last evening.\" I answered giving his hand another soft squeeze. \n\nJasmine giggled then said. \"I know it doesn't really show but I think I may have gotten too much sun this morning, I'm feeling a little burnt.\" \n\n\"Yeah and I even covered everything exposed with sunscreen.\" Avery commented. \n\nI figured he most likely covered even the tiny triangles of unexposed parts too judging from the grin on Jasmine's face. ",
        "Mitch was sitting back in his chair listening to our conversation not offering much until he laughed and remarked. \"Damn, I must be getting old, I completely forgot about the opportunity to smear sunscreen all over you.\" His eyes sparkling at me knowing he'd had his hands all over me in the pool. \n\nI just smiled confirming that I had enjoyed his underwater massage much more and squeezed his hand again to reinforce my smile. \n\nWendy and another waitress approached carrying two trays of food and in short order we were enjoying a savory lunch. The lobster caesar salad was fabulous, a delectable combination of dressing and slightly salty rock lobster. \n\nJasmine, like most fast food addicts, doused her fries in ketchup. She removed the slice of onion from her burger, then pretty much devoured her lunch again confirming she ate more fast food than fine dining. \n\nWendy freshened up our ice tea and brought two more Coronas. \"Are your lunches okay?\" She asked. \n\n\"Wonderful.\" Mitch answered. \n\nWendy smiled at him apparently assuming he'd be the one adding her tip to the bill. \n\nMitch watched her walk away, apparently not too old to enjoy a young, tight, little ass. I noticed his gaze and slipped my hand to his thigh giving it a firm squeeze. He slipped his hand over mine and moved it deeper between his thighs. I resisted the urge to fondle his cock, instead sliding my hand from under his and returning it to my lap as I savored a large chunk of lobster. \n\n\"So what are you guys planning for the rest of the afternoon?\" I asked looking toward Avery. \n\n\"I think we'd had enough sun so I guess we'll just go up to our room and relax.\" He answered with a lecherous smile on his lips that seemed to indicate that relaxation was the furthest thing from his mind. \n\n\"What about you two?\" Jasmine asked. \n\n\"I am thinking about taking a nap.\" Mitch announced to them and me. \n\n\"That doesn't sound like much fun.\" Avery remarked. \n\nWhen I thought about it perhaps a nap was perfect. I had a long evening planned and if Simon came through with my order for little blue pills I expected it to extend on toward dawn. \n\n\"A nap might be just what the doctor ordered.\" I chimed in. \n\nMitch looked at me with a somewhat surprised expression on his face. \n\nWendy returned with our check which Mitch quickly grabbed. He added a healthy tip then signed the check. \"Thanks Johnston.\" He commented, confirming he already had an expense account and that our lunch was compliments of the Senator Elect's campaign war chest. \n\nWendy thanked Mitch and said to all of us before heading off. \"Enjoy your afternoon.\" \n\nAvery and Jasmine also thanked us for our hospitality then scurried off to \"relax\". \n\nAs they walked off Mitch leaned toward me. \"Wanna bet they will be snorting coke and fucking each other silly in less than 30 minutes?\" \n\nI leaned back in my chair and grinned. \"Aw yes the exuberance of youth, quantity instead of quality.\" \n\nMitch's wide smile acknowledged that unlike them our fucking would be of the highest quality.\n\nAfter we left the table, we walked hand in hand and as we exited the caf\u00e9 Mitch asked. \"You don't mind if I take a nap?\"\n\n\"Of course not, as long as you're okay with me relaxing by the pool while you sleep.\" I asked. \n\n\"I'm good with that.\" He replied. \n\n\"Since you got me all wet earlier and I'm not just talking about my hair, I'll shower before I wake you. How about I come up in two hours or so?\" I suggested. \n\nA lustful grin creased his lips. \"You gonna wake me the same way you did this morning.\" \n\nI giggled. \"You never know.\" \n\nOur arms stretched out as Mitch headed up the path toward the resort and I turned right and headed for the pool. Our fingertips parted and I stopped to watch him until he disappeared beyond the doors. As I walked toward the pool, I noticed Tiffany and James were each reclined in their chaise lounge at the deep end of the pool enjoying the warm sun. I decided to join them. \n\n\"Angel what's up girl?\" Tiffany exclaimed as I approached. \n\nJames was wearing a pair of white trunks and a green Notre Dame tee shirt, his eyes covered by dark sunglasses. Tiff was still in her almost nonexistent pale yellow bikini but was now sporting a very satisfied grin on her lips. \n\n\"Mind if I join you?\" I asked. \n\n\"Please do.\" James spoke for them both. \n\nI sat down on the edge of the chaise lounge next to James, unprotected by an umbrella, with Tiffany beyond. I slipped my cover up off and placed it on the chaise lounge near the bottom. James turned his head toward me and even with his sunglass hiding his eyes I knew his eyes were fixed on my deep cleavage. \n\nTiffany sat up and turned to face me with James between us. \n\n\"Where's Mitch?\" She asked. \n\n\"He's taking a nap.\" I replied without going into any details why. \n\nJames laughed. \"What'd you do, wear the old guy out?\" \n\nI curtly smiled and answered. \"Actually, he wore me out.\" \n\nTiffany was clearly self-conscious about how poorly her swimsuit fit because she constantly kept adjusting the tiny patches of pale yellow fabric trying to cover her nipples. \n\n\"How's you weekend going?\" I questioned. \n\n\"It started off a little rocky but we're enjoying it now.\" Tiffany replied, her statement a clear reference to James getting drunk and passing out the night before. \n\nI discovered instantly that James was kind of an asshole when he chimed in. \"Yeah, I got to use the other two holes earlier this afternoon.\" His crass remark caused Tiffany to frown deeply. \n\nI glanced around to make sure that no other guests were within ear shot before replying in a sarcastic tone of voice. \"What, you didn't fuck those big heavenly tits too?\" \n\nTiffany smiled at me thanking me for the attempt to put him in his place. \n\n\"Hell Jimmy, maybe you'd like to fuck both our chests and then plaster our faces with your hot sticky load.\" Tiffany remarked. \n\nI giggled and kept our conversation in the gutter where James liked it. \"We could take turns deep throating your hard cock too.\" \n\n\"He's pretty big Angel and his cum load is awesome.\" Tiffany remarked. \n\nI noticed James fidget on his chaise lounge, our dirty conversation apparently causing his cock to harden some. \n\n\"I can deep throat any cock, it's my specialty.\" I explained for James.\n\nTiffany grinned then looked at James. \"Maybe Angel can teach me to throat your big hard cock.\" She said almost like it was a promise. \n\nWe continued our verbal onslaught of his sexual senses as his cock started lifting his swim trunks off his loins. \n\n\"You know Tiff, I like to lie on the floor and have a sexy body like yours on top in a 69 while a man fucks you doggie style. I can lick both his balls and hard shaft and your clit at the same time.\" I suggested. \n\nShe grinned and I imagined she was thinking about me licking her clit. \"And if Jimmy wants he can slip his big hard cock in your mouth and throat fuck you too.\" She added.\n\nJames' cock was now completely erect and he slipped his hand to it adjusting the shaft to one side to give it more room to surge. \n\nJames either had a m\u00e9nage a trios or fantasized about having one because he chimed in. \"How about the two of you on the floor face to face and I come up from behind and fuck both hot pussies.\"\n\nWe both looked at him and smiled, knowing that while he fucked us we could be kissing and rubbing our big tits together. \n\nTiffany leaned further toward me and moved her hand to his hard cock. \"Trust me Angel, this big cock is more than enough to satisfy us both.\" \n\nI suddenly had the urge to fuck them both. \n\nJames took his sunglasses off and said. \"Let's go right now ladies. You can see I'm ready.\" His hand covered Tiffany's and moving it along the hard shaft. \n\nI smiled and burst his bubble. \"All that screaming would surely wake Mitch, but he's planning on a round of golf tomorrow so maybe an early morning m\u00e9nage a trios might be fun.\" \n\nTiffany smiled, confirming she would love that. \n\n\"But what about this?\" James remarked looking down at his hard cock. \n\n\"I can take care of that.\" Tiffany replied. \n\n\"Gotta go!\" James exclaimed as he turned toward Tiff and stood up pulling her along with him. \n\n\"Have fun.\" I said as they headed for the doors. \n\nI turned and reclined on the chaise lounge, my pussy seeping moisture from our hot sexy conversation. I'd have to be careful that Mitch didn't find out about our plans while he was on the links tomorrow, but I knew that I had to feel James' big cock buried in my throat. \n\nApparently once he had recovered from his drunken stupor, James was able to satisfy Tiffany completely and I couldn't wait to see if he could do the same to both of us. \n\nI relaxed with my eyes closed for several minutes thinking about my upcoming dinner with Mitch and the possibility of a threesome with Tiff and James tomorrow. This weekend was about to turn from great to fantastic and I couldn't wait. \n\n\"Hi Angel.\" A familiar voice spoke to my right. \n\nI opened my eyes to see Simon's smiling face. \"Have a seat Simon.\" I suggested. \n\n\"I'm not supposed to but I am off duty now.\" Simon replied as he looked around checking for any supervisors. \"I was able to fill your request but I could only get four.\" He said. \n\n\"One should do the trick.\" I replied smiling at him. \n\nSimon tried his best not to look at my big tits and the deep cleavage showing between but his eyes dropped to my chest as he said. \"I can't believe any man would need one of these if he's with you.\" \n\n\"Why thank you for the compliment, but the Viagra is to improve his staying power.\" He has no problem getting it up but I want to go for a four hour erection.\" I admitted. \n\nSimon giggled. \"Do you want the number of the hotel doctor in case his erection lasts longer than four hours?\" His remark clearly referenced the warning during television commercials for this wonder drug. \n\nYou're a sweetheart Simon, what do I owe you?\" I asked. \n\n\"Would forty dollars be okay?\" He replied. \n\n\"That's fine hun, but I don't have any cash on me now.\" I answered. \n\n\"That's okay I'm gonna stop and pick up those golf score cards you wanted on my way home today so I can bring them up to your room after twelve o'clock when I'm back on duty tomorrow.\" Simon explained. \n\n\"That would be great.\" I replied. \n\nSimon handed me a rolled up tissue containing the Viagra then stood up. He had a noticeable bulge in his pants and I grinned knowing I could arouse such a young man just by letting him examine my big tits. \n\n\"I'll see you tomorrow then.\" Simon said as he turned to walk away. \n\nI watched him from behind and noticed his hand move in front, I assumed to adjust his erection so it wasn't so noticeable to everyone else. I smiled thinking perhaps if play was slow tomorrow morning I'd have time to give Simon a quick blowjob before Mitch got back from his round. \n\nI didn't have a watch but it seemed like two hours had passed since I sent Mitch off for a nap so I slipped my sandals on and draped the cover up over my shoulders and headed for the resort doors. \n\nAs I walked toward the elevators I realized I didn't have a key card. I didn't want to chance that he was already awake so I sidetracked to the front desk and asked for a spare explaining why I needed it. \n\nFortunately Maria was working the front desk. \"We don't normally provide key cards to guests who don't have identification, but I remember you from yesterday so I guess I can bend the rules a little.\" Maria said. \n\n\"You're a darling Maria.\" I replied \n\nShe handed me a key card and I again thanked her before heading back to the elevator. \n\nAs I waited for the elevator the fat, little Italian guy that had confronted me yesterday came through the doors from the beach. His wet trunks, still dripping, were wedged up between his thighs and his pot belly drooped over the waist band of his swimsuit. \n\nI considered walking away and waiting for another car but decided I could handle any crass remark he might make. I stepped inside and move to the left. He followed turning in the center of the car as the doors slid quietly closed. \n\nI reached out and pressed number seven then said bluntly. \"What floor?\" \n\n\"Sex.\" He replied. I assumed he meant six and pressed the button below mine. \n\nAs the elevator began to rise he spoke. \"So what about it?\" \n\n\"What about what?\" I questioned. \n\nHis lecherous smile that had disgusted me yesterday returned. \"What do I have to do to fuck you?\"\n\nI was stunned. This fat, old Italian was actually asking if he could fuck me. I decided I needed to put this bastard in his place once and for all. As I turned to face him I slipped my hands to my cleavage then peeled my suit off my lush big tits. His eyes instantly widened and looked like they were about to pop from their sockets. \n\n\"There's only two ways you'll ever get a chance to touch these. One would be when you come up with ten grand, and the other would be when pigs fly.\" I sharply shot back at him as I quickly covered my big tits again. \n\nHe stared at my tits as he answered. \"There's no fuck worth ten grand.\" \n\n\"Well you better sprout a pair of wings then you fucking pig.\" I instantly replied. \n\nThe car slowed at the sixth floor and once the doors opened he began to move forward. His hand stopped the door from closing and he turned to face me. \"Fuck you bitch.\" He said. \n\nAs the doors were closing again I got the last word. \"Not a chance you pathetic little man.\" I said. \n\nOne floor up, I was still giggling as I exited the elevator. His eyes had gotten so large when I exposed my big tits to him that I'm certain when he jerked off or fucked his wife later he'd be imagining the little freebee I'd given him. \n\nI slid the spare key card through the lock and was glad to see the little green light come on. As quietly as I could I closed the door behind me then walked to the bedroom. Mitch was still napping stretched out buck naked on the bed. The digital clock on the night table read 3:48 PM. \n\nI wondered if he actually wanted me to wake him with my mouth again but decided that once was enough. Besides I wanted to have him watch as I slithered toward his cock later when I would suck him to a complete erection. Before heading to the bathroom I slipped the rolled up tissue holding the Viagra under some of my clothes in the dresser. \n\nI closed the bathroom door slowly and held the lever down to not make any noise. Once safely inside I turned on the lights and the hot water. As I stripped out of my swimsuit I noticed a distinct red hue to my flesh. Two white lines ran over my shoulders where the straps of my suit had protected me. \"I should have used some sunscreen.\" I thought. I rinsed out my swimsuit and after ringing it out hung it on the back of the door to dry, knowing that tomorrow morning I could fold it and pack it away as I planned on wearing the white version on Sunday afternoon. \n\nSteam began bellowing above the heavy shower curtain and I reached in and turned on the cold water a little at a time until the temperature reached my comfort level. I showered fairly quickly, shampooing my hair and lathering every part of my body with my favorite strawberry scented bath gel. After rinsing off I still had the fragrance of strawberries on my body. \n\nAs I stepped out of the shower, I looked at my reflection in the mirror. With my hair plastered tight against my scalp and my entire body glistening with droplets of water I looked very sexy. I imagined that I could just join Mitch in bed and seduce him now, but the thrill of watching me all evening until I again stood before him totally naked was something I wanted him to enjoy and remember for a very long time. \n\nI patted my body dry, then wrapped the damp towel around my head and used a dry one to cover my body from the armpits down to mid-thigh. I knew that the sound of my blow dryer would wake him so I waited to do my hair. \n\nHe was still stretched out on the bed laying on his back, his cock resting on one thigh. I sat down on the edge of the bed and gently touched his arm. \"Mitch it's time to wake up.\" I said softly. He stirred a little but didn't open his eyes. I moved my hand up to his shoulder then gently ran the tips of my nails along this arm. \"Mitch.\" I said a little louder. \n\nHis eyes slowly opened and I slipped my hand into his. \"It's a little after four baby.\" \n\nHe smiled and rolled toward me his free hand lightly touching my thigh below the towel. \n\n\"Did you have a good nap?\" I asked. \n\n\"Yes, I slept very soundly.\" He answered as his eyes and smile widened in unison. \n\nHe reached up and pulled the towel from my head. \"You know we could just stay here and make love all night long.\" He suggested. \n\n\"But I have something very special planned for us tonight.\" I remarked, giving him a quick wink and a sexy smile. \n\n\"I need a shower.\" Mitch said while sitting up in bed. \n\n\"I'm all done in there, so please take your time. I have to dry and style my hair while you're showering.\" I replied. \n\nHe disappeared into the bathroom, and I headed for the dresser to retrieve my blow dryer and curling iron. Just before I turned the blow dryer on Mitch stuck his head out around the door. \"Did I tell you how sexy you smell?\" He remarked, complimenting me. \n\nApparently my strawberry bath gel was appealing to his senses. \"Thanks, I'm always aiming to please.\" I answered as my finger pushed the button starting my blow dryer. \n\nMitch smiled and pulled his head back into the bathroom closing the door as he did. \n\nI almost always dry my hair the same way, giving it the sensuous waves that accent my face, but tonight for added appeal I was planning on a few tighter ringlets near the bottom on either side of my head. As I turned the blow dryer off, I couldn't hear the shower running and I assumed Mitch was finished. \n\nI plugged my curling iron in and while I waited for it to heat up, I started my make-up. I only needed a hint of blush since my cheeks already had a rosy color from the hours I spent outside this afternoon. I wanted my eyes to hypnotize him and gave them a smoky light gray shadow with a dark eye liner and extra mascara to extend my lashes. \n\nMitch came out of the bathroom wearing a towel around his waist, and a tiny dab of tissue on his jaw line just as I finished curling my first ringlet. \n\n\"Cut myself shaving.\" He explained. \n\nI grinned and asked. \"Were you in a hurry?\" \n\n\"Well you did tell me you had special plans for tonight and I absolutely love surprises.\" He replied. \n\nI just smiled confirming that my special plans would be something he'd certainly love. \n\nGuys are lucky, they can dress quickly and be ready for an evening out in no time, and Mitch was no exception. He chose a light gray suit and a white shirt. \n\nAs I started curling the second ringlet Mitch asked. \"Which tie do you like?\" \n\nI turned holding my curling iron in one hand, to see what options he had. Both neckties were striped, in his right hand Mitch held a gray, black and white tie and draped over his other a gray and light pink tie. I pointed to the more colorful choice. \"I think a little color would be good.\" I commented pointing at the one with pink highlights. I also chose that one because the pink was nearly a perfect match for the lip color I had picked but not yet applied. \n\nI returned to the mirror but could see his reflection there also. His skillful fingers moved almost like a conductor leading a symphony as he tied a perfect Windsor knot around his neck. \n\n\"You've done that before.\" I commented looking at him in the mirror. \n\nMitch grinned and replied. \"Yes, every day for the last thirty years.\"\n\nHe picked up his suit jacket and walked over to me. I heard him inhale deeply as he drew my fragrance into his nostrils. \"I'm going to sit on the balcony and let you finish.\" He said. \n\n\"I'll try not to keep you waiting.\" I promised. ",
        "He turned and left the bedroom without saying another word, but I was certain his mind was racing with the anticipation of how he expected our evening together to unfold. \n\nWith two tight ringlets extending down in front of my ears I used my hair brush to soften them some giving a more sensuous appearance to my hair style. \n\nFinishing my make-up with a dazzling coat of pink on my lush lips, I opened another dresser draw and picked up my silk stockings, a light gray color of fashion thigh highs. Gathering the silk fabric on my fingers I carefully slipped my foot into the stocking and slid it up my shapely leg making sure the seam was as straight as an arrow, repeating the process on the other leg. I stood up and smoothed both over my thighs, the lacy top hems grasp my thighs. \n\nA black satin thong ensured my ass would appear as silky smooth as my legs once I slipped the black cocktail dress I'd selected over my head. The dress was chosen knowing that I wanted my sensual eyes to not only hypnotize him but be his focal point for the entire time as we dined. My cocktail dress had a loose fitting cowl neckline that softly rose up over my shoulders then plunged nearly to the small of my back. As it floated down over my braless chest, I felt the material cling to my nipples as they began to harden slightly. The dress reached nearly to my knees, covering enough of my sensuous body to give me a sophisticated alluring look, while providing Mitch with my naked back to touch whenever he desired. \n\nMy most sexy pair of black stilettos, the ones with ankle straps, completed my wardrobe for dinner. After applying a spritz of a new perfume I'd purchase called Hypnotic Poison behind each ear, I gathered the essentials I would need to touch up my make-up and slipped them into a tiny black leather clutch. Before leaving the bedroom I surveyed my reflection in the mirror. \"Perfect.\" I thought as I checked the seams of my silk stockings one final time.\n\nThe lengthening shadows of another tropical evening were beginning to fade as I approached the fluttering sheer curtains at the door to our balcony. \n\n\"I've finished.\" I remarked as I stopped short of the door. \n\nMitch stood up and turned toward my voice. I smiled widely at him as he paused a moment to visually appreciate the partially obscured vision of loveliness standing before him. He moved forward drawing the sheer fabric aside and stepped into the room, his eyes slowly devouring every part of my appearance. \n\n\"Stunning, absolutely stunning.\" Mitch remarked as smiled broadly at me. \n\nI waited for a moment before asking. \"Would you like to see the rest?\" \n\nMitch just smiled and nodded his head. \n\nI slowly turned around. \n\nHe gasped as the naked flesh of my back came into view. In a moment he was behind me his hands gently resting on my hips. I again heard him inhale this time savoring the sexy vanilla fragrance of my perfume and the lingering scent of strawberries. His lips moved next to my ear. \"I'm stupefied by your beauty.\" He whispered. \n\nI leaned back against him letting my intoxicating fragrance waft into his nostrils. He inhaled deeply again then lightly kissed my ear. \n\n\"I can't wait to show you off.\" Mitch said as he moved to one side and slipped a hand onto the small of my back. Unlike the night before when his hand seemed to be stuck there leaving me wondering if he found me sexy, tonight it made me yearn for more of his gentle touch. \n\n\"I'd like to buy you a cocktail before dinner.\" Mitch said as the light touch of his hand urged me to move toward the door.\n\nAs Mitch and I walked past James and Tiffany's suite we heard a muffled scream of ecstasy. \n\nI giggled and remarked. \"It sounds like they might be skipping dinner.\" \n\nI stepped into the elevator and turned around. Mitch pressed the lobby button then leaned against the side wall of the car. I sensed his eyes roaming over my lush form. \"You look incredible.\" He remarked. \n\nI turned just my head and smiled widely at him acknowledging his compliment. As the car came to a stop Mitch stepped forward and turned as the doors glided open. He offered his arm which I happily accepted gently placing my hand on his forearm. \n\nIt had been years since he had the chance to walk with such a stunning woman on his arm and his gait was that of a man filled with pride. I gave his forearm a tender squeeze, hopefully sending him a message that I was ecstatic to serve as his trophy wife for the weekend. \n\nArm in arm we strolled across the lobby toward Pelicano's where we would begin what I was certain would be a most pleasurable evening. Pelicano's is the beachfront restaurant at the Royal Cancun, with a magnificent view of the white sand beach and blue Caribbean. The open setting provides guests with the romantic sounds of waves crashing against the beach and the gentle warm ocean breeze. \n\nAs we entered the restaurant Mitch remarked. \"Pelicano's specializes in seafood.\" Explaining why he chose this over the other seven restaurants spread throughout the resort. \n\n\"Good evening sir.\" The ma\u00eetre d greeted us with a broad smile. \n\n\"A table for two please.\" Mitch replied.\n\n\"The breeze is quite strong tonight, may I suggest a table nearer the center of the room?\" The ma\u00eetre d asked. \n\nI glanced at Mitch who appeared to be waiting for me decide. \"We'd like to sit as close as possible to the beach.\" I said, knowing the sounds of the ocean and the breeze would add to the romantic setting, plus the fact that we may not have too many other guests nearby would allow me to be more risqu\u00e9 in my teasing of Mitch without embarrassing anyone. \n\nMitch grinned confirming that he agreed with my choice, then placed his hand on the small of my back as we followed the ma\u00eetre d toward the open air setting for our meal. \n\n\"Your waiter will be with you in a moment.\" The ma\u00eetre d stated, then added. \"Please enjoy your meal.\"\n\nMitch being the perfect gentleman helped me with my chair, his smooth fingertips slowly sliding up my naked arms sending a tingle along my spine. He moved to his left and sat next to me with his back to the remainder of the tables in the restaurant. We sat facing the lovely blue waters of the Caribbean with the sound of breaking waves nearby and the breeze fluttering my hair.\n\n\"I like having you close enough so I can touch you.\" I remarked as my delicate hand covered his. \n\nAs we waited to order our drinks Mitch concentrated on my sensuous eyes. \"Your eyes seem to sparkle even more tonight.\" He remarked. \n\nI just continued to stare back into his eyes as my fingertips gently stroked the back of his hand. \n\n\"Good evening, my name is Ramon, welcome to Pelicano's.\" Our waiter greeted us as he stood across the table from me. \n\nI smiled at him and replied. \"Thank you Ramon.\" \n\nHe returned my smile then directed his attention to Mitch. \"Can I get you a cocktail?\" Ramon asked. \n\nMitch looked at me as he replied. \"We're celebrating so I believe a bottle of champagne is in order.\" \n\n\"Very good sir.\" Ramon answered as he placed a menu in front of us both. \n\nAs Ramon headed off I returned my attention to Mitch. \"What are we celebrating?\" I asked. \n\nHe turned his hand over and gently held mine, as his eyes searched mine he answered. \"Actually I should have said I'm celebrating, your stunning beauty and my rekindled desire for sex.\" \n\nI smiled broadly at him as I moved my other hand to hold his between mine. \"And I'm celebrating your incredible talent to make me feel very special.\" \n\nMitch reached out with his free hand and slid it along my jaw line, his adoring caress made me shudder involuntarily. \n\nNoticing my shudder Mitch asked. \"Is it too cool here?\" \n\n\"No it's fine, that's the second time you've caressed my face like that and both times it made me shudder.\" I replied. \n\nMitch just smiled and pressed his hand firmer against my jaw line. \"I can hardly wait to caress you more.\" He whispered.\n\nRamon returned with our champagne and after removing the cork with a resounding pop, poured a small amount in one fluted champagne glass. \"I hope this is to your liking sir.\" He said while handing the glass to Mitch. \n\nMitch sipped the bubbly and immediately said. \"Perfect.\" \n\nHe didn't seem to savor the taste very long and I wasn't sure if that was because it truly was perfect or if he wanted to dispatch Ramon quickly so he could return his attention to me. I hope his reason was the latter. \n\nAs Ramon filled our glasses he asked. \"Are you ready to order?\" \n\nWe hadn't even glanced at the menus but Mitch already knew what we would be ordering as our entr\u00e9e. We'll both have the blackened swordfish.\" Mitch quickly replied. \n\n\"An excellent choice, the chef serves the swordfish on a bed of maque choux and your entr\u00e9e comes with a house salad.\" Ramon explained. \n\n\"That'll be fine.\" Mitch answered rather bluntly as he returned his attention to me. His eyes searched mine almost as if he was trying to read my mine. \n\nI smiled than asked. \"What are you thinking about?\" \n\nHis hand slid over mine as he spoke. \"To be completely honest I was thinking about how much harder it's going to be for me to see you when we return to the States.\" \n\nI loved the fact that he was already contemplating another appointment back in DC, but reminded him. \"Let's enjoy our time together now and worry about that later.\" \n\nHe squeezed my hand lightly and answered. \"Thanks for keeping me focused.\" \n\nA blast of air blew in from the ocean, the soft ringlets of hair alongside my face fluttered and the cooler air caused my nipples to harden some. \n\nMitch noticed and asked. \"Are you sure it's not too cool for you?\" \n\nI slipped my hand from under his then placed it on top. \"Actually I was just thinking about your gentle fingers touching my tits and the anticipation excited me.\" I answered giving him credit instead of the cooler night air for my aroused nipples. \n\nRamon returned with our salads and apparently understood that Mitch wanted no part of a friendly conversation. \"I'll have your main course in a few minutes.\" He announced as he placed our salads in front of Mitch and me and quickly moved away. \n\nI decided to try and heighten Mitch's anticipation of what would happen once we'd finished our meal and used my fork to pierce a cherry tomato. He watched intently as I lifted the fruit to my lips and sensually licked the dressing from its skin. He smiled just before asking. \"Maybe I should ask our waiter for a bottle of that dressing. You seem to really enjoy its flavor.\" \n\n\"It's not the dressing I enjoy as much as the juice that squirts from it when I bite into it.\" I teased after biting into the tomato, letting him know that I planned on savoring his juice later. \n\nMitch giggled than asked. \"I hope you don't bite into everything that squirts juice?\"\n\nI leaned toward him slightly and batted my long lashes at him and said seductively. \"Only if it is absolutely necessary to make it squirt.\" \n\nMitch began eating his salad in earnest, while I continued teasing him while I picked at mine. I used my fork to place a second cherry tomato into my mouth whole. I left my mouth partially open so Mitch could watch as I rolled it around using my tongue before chewing it. After seeing this he placed his fork down and reached to touch my arm. \"I think you're the first woman who has ever used a salad to seduce me.\" He commented. \n\n\"Seduction is best when it takes a very long time.\" I remarked as I slipped my hand between his thighs and gently squeezed his cock. \n\nHis smile confirmed he was enjoying my playful teasing immensely. \n\nI continued. \"Do you know why it's called foreplay?\" \n\nMitch grinned. \"I suppose you're going to tell me?\" He replied. \n\n\"It's called foreplay because if done correctly it should take forever.\" I explained. \n\nMitch giggled at my play on words but got the message that I was planning on a marathon later. \n\nRamon returned with our swordfish entr\u00e9e and as before quickly served the sizzling meal. \"Please call me if you need anything.\" He stated before leaving us to enjoy our food. \n\n\"Swordfish is best if eaten while sizzling hot.\" Mitch mentioned. \n\nI wasn't sure if that were true, or if he mentioned it because he couldn't wait to finish and get me into a more private setting so I'd be free to begin taking forever to pleasure him. \n\nThe swordfish was delicious and I wished I could have taken more time to savor the wonderful taste, but Mitch obviously had more important things on his mind. We finished our meal in less than ten minutes and as I drank the last of my champagne Mitch motioned for Ramon. \n\n\"Is everything to your satisfaction?\" Ramon asked as he approached our table. \n\n\"Yes everything was wonderful, but I'm wondering if you could ask room service to deliver the remainder of our champagne to our suite?\" Mitch asked. \n\n\"Yes of course sir.\" Ramon replied as he picked up the ice bucket containing our champagne. \"I'll be right back with your check sir.\" He said as he turned to leave. \n\n\"You seem to be in a hurry, we have all night.\" I commented, smiling at him.\n\nMitch grinned and lifted my hand from the top of the table. He moved my hand underneath where he positioned it on his loins. \"We don't want to waste this.\" Mitch replied. \n\nHis erect cock pressed against my delicate fingers. I smiled and flattened my palm against the hard bulge in his pants. \"I can't wait to hold this in my hand.\" I whispered. \n\nMitch grinned. \"I can't wait to see and feel your lips wrapped around it.\" He replied. \n\nRamon returned with our check, and Mitch quickly signed it. \n\n\"Very good sir, I'll have room service deliver your champagne as soon as possible.\" Ramon said as took the check from Mitch. \n\nAfter standing up, Mitch offered me his hand which I happily accepted and stood beside him. We walked hand and hand as we left Pelicano's to head back to our suite.\n\n\"Thank you for a wonderful dinner.\" I mentioned while we waited for the elevator. \n\nMitch grinned and replied. \"I should apologize for making it so brief.\" \n\n\"No need to apologize, I'm as anxious as you.\" I remarked. \n\nAs the elevator doors closed Mitch turned toward me than moved forward pinning me against the wall. His hands slid to my big tits and squeezed them through the fabric of my dress. \"I can't wait to take this dress off you.\" He whispered. \n\nI stared into his lustful eyes, slipped my hand between our bodies and softly squeezed his cock. \"I can't wait to kneel before you and suck this wonderful hard cock.\" \n\nHe continued slowing massaging my tits until the elevator car lurched to a stop at the seventh floor. I smiled knowing that soon enough we'd both have what we couldn't wait for. \n\nMitch's hand captured mine again and he briskly led me to our suite. After opening the door, his hand touched my ass as I slipped past him into the room. I stopped once I heard the door close behind me wondering if he'd want to remove my dress immediately. Instead he moved to stand behind me his erect cock pressing against my ass and his hands circled my body to cup both big tits and press them firmly under his palms. \n\n\"I guess we'll have to wait for room service.\" He mentioned not seeing our champagne anywhere in sight. \n\nI turned to face him. \"I have time to freshen up a little.\" I remarked as my delicate fingers slipped to his loins and gave his cock a gentle squeeze. \n\n\"Let's hope room service is prompt.\" Mitch remarked as he reached behind and squeezed my ass firmly. \n\n\"I'll be quick.\" I promised as I slipped away from him and headed to the bedroom. I knew his eyes were glued to my ass and I gave him a seductive wiggle as I walked away. \n\nAs I stood before the mirror studying my reflection I wondered if my plan for a marathon fuck session would come about. I applied a fresh coat of pink gloss to my lush lips then brushed my hair softening the ringlets that dangled beside my ears. I applied a spritz of Hypnotic Poison behind each ear then pulled the cowl neckline of my dress away and gave my cleavage a tiny spray too. My fingers tweaked both nipples so that they poked at the fabric which I hoped Mitch would be stripping from me shortly. \n\nAgain surveying my reflection I was certain my sultry appearance would entice his cock to complete hardness, but to ensure it would remain rock hard I unfolded the tissue Simon had given me and picked one tiny blue pill from the center.\n\nMitch was tipping the room service delivery boy as I returned to the living room. \"Thank you sir.\" The young Mexican boy said as he turned to leave. \n\nMitch had removed his suit jacket and hung it over the back of one bar stool. As I approached with the same seductive wiggle as before he smiled. \"You look incredible.\" He said, complimenting me. \n\nI smiled and answered. \"Let's have some champagne.\" \n\nHe poured the bubbly and handed me a glass then returned the bottle to its cradle of ice. I moved closer and used my three free fingers to check the condition of his cock. It still felt firm but wasn't nearly as hard as when he guided my hand to it under the table in Pelicano's. \n\n\"To marathon sex.\" I whispered holding my champagne glass up. \n\nWe toasted marathon sex together, then I lifted my fingers from his cock and showed him the Viagra I held between my thumb and index finger. \n\n\"What's that for?\" Mitch asked. \n\nI smiled and replied. \"Insurance that we'll enjoy a marathon.\" \n\nMitch grinned. \"I suppose it couldn't hurt.\" He replied then extended his tongue. I placed the tiny blue pill on his tongue and he used the rest of his champagne to swallow it. \n\nAfter placing his empty glass on the bar he moved his hands to my hips. \"Finish your drink.\" He suggested. I tipped my glass and did as he asked. I reached beyond him and placed my glass on the edge of the bar, then moved my hand to his shoulder as he pulled my hips tightly against him.\n\nOur eyes were glued together, both searching deeply in a tentative moment before the first kiss. I tilted my head slightly to one side and parted my lips as his hands slid up my back pulling my chest against his and our mouths together. His tongue pierced my lips probing deeply, then began an oral dance of passion as our kiss intensified. Mitch's fingertips slid up and down my naked back causing goose bumps to rise on my arms. Our mouths moved in unison, his lips sucked my lower lip and I sucked his tongue as he pressed it into my mouth. \n\nHis hands moved down and slipped onto fabric again as he squeezed my ass firmer than before. A muffled moan escaped my lips as he drew my loins tightly against his, the growing bulge in his pants pressing against my pubic mound.\n\nMitch broke our kiss as his hands moved to my hips. \"I have to see your naked body!\" He urged. \n\nI stepped back and lifted my arms above my head. He grasped the fabric of my dress and slowly lifted it toward my outstretched arms. I took a step back as the dress slipped over my head and off my arms, shaking my head with it tilted back slightly caused my wavy blonde hair to cascade down behind my shoulders. \n\nMitch tossed the dress aside as his eyes slowly moved down over my partially naked form. I slid my hands to the tiny black strips of my satin thong and pulled them high on my hips as his eyes moved down. \n\n\"Fucking incredible!\" He exclaimed as he studied my sexy body. His eyes moved up from my long sleek legs to my full breasts. I slipped my hands to them lifting both in a seductive offering. \"Please touch them.\" I pleaded. \n\nMitch's hands move to cover my tits, his soft palms pressing against the erect nipples and his long fingers spread across each large orb. In a playful tone of voice he remarked. \"I like big tits!\" I just smiled and pressed them harder into his hands. I had learned all during the day that he loves caressing big tits and let him fondle me as long as he wanted, closing my eyes and tilting my head back allowing the tingling in my chest to grow as his magical touch continued.",
        "\"Suck my hard nipples.\" I pleaded knowing his mouth would heighten my arousal. His hand moved from one erect nipple and was instantly replaced with his lips as he kissed and sucked on the tip of one heaving tit. I moved my hands to his head and combed my nails through his hair guiding his mouth from one tingling nipple to the other then back again. Alternating between breasts, he flicked each nipple with his tongue, every contact sending lightning bolts of pleasure shooting to my brain and causing my pussy to begin growing moist. \n\n\"I have to touch your naked body.\" I pleaded as my hand slid along his shirt sleeves. \n\nMitch straightened up, his eyes fixed on the twin nubs of pleasure he had so expertly caressed. Each taut nipple glistened with is saliva. \n\nMy fingers made short work of his Windsor knot and I slipped it from his neck before I started unbuttoning his shirt. Once I reached his waist I undid the buttons at his wrists then moved to loosen his belt. \n\nHis eyes were fixed on mine as I pulled his shirt tails from his slacks and opened the last two buttons. \n\nI leaned forward and flicked my tongue at one nipple as my hands slipped the shirt off his shoulders. It joined my dress where Mitch had tossed it earlier. I pressed my mouth into the mat of silvery gray hair on his chest suckling one nipple as my fingernails scratched across his shoulders then down his naked arms. \n\nHe slid his hands into my hair drawing it tight along my temples then pulled my lips from his chest and guided my mouth to his. Our kiss, more passionate then before, caused me to moan softly against his lips. His hands guided my mouth as he probed with his tongue and sucked with his lips. \n\nI moved one hand to his loins and pressed it against his erect cock. He pressed forward capturing my delicate hand between our bodies. My hand moved up and down against the throbbing cock beneath his slacks. \n\nHis kiss left me panting for breath as I broke our oral grasp and pleaded. \"Please let me suck it.\" My delicate hand squeezing his pulsing cock as I spoke. \n\nHis smile confirmed that he wanted my mouth on his cock also. \n\nI slipped my hands to his waist and as I undid his pants I kissed his neck, shoulder and down his chest until I began bending my knees so I could softly kiss over his paunchy belly. Mitch's eyes followed my slow seductive descent down his body, his hands resting on his hips. As my knees settled into the soft carpet, my deft fingers pulled the metal tab of his zipper down, then I reached up and peeled his slacks from his hips slowly sliding them down around his ankles. Mitch steadied himself on the bar as he kicked off his shoes and I slipped his pants over his feet and removed his socks.\n\nI looked up into his eyes, the lustful stare urged me on. His surging erection covered by the white cotton fabric of his briefs begged to be released. My nails lightly traced up the back of his legs then slipped across the cotton covering his ass until they reached the elastic waist band of his underwear. The waist band pulled his hard cock down as I slipped his briefs off, it snapped up fully erect when the elastic released its grip on his cock.\n\n\"Hmmmmmm.\" I moaned as I looked up at his proud, look what I've got, smile. \n\nMy delicate hand surrounded the solid shaft and I stretched the flesh tight causing his corona to flare even wider. My mouth watered in anticipation of his cock slipping between my glistening lips. \n\n\"I've wanted to suck your beautiful cock all day.\" I admitted, as I slowly stroked the hard shaft. Mitch just kept smiling knowing that I'd be savoring what I've wanted. \n\nI rose up and extended the tip of my tongue to tease the sensitive flesh where his shaft blends with the head, then circled the smooth flaring corona once with my tongue. Mitch's eyes were fixed on mine as I pressed my pursed lips against the very tip of his hard cock, then slowly let them part sliding over the head until his corona disappeared behind my lips. My free hand slid up his leg to gently cup his balls using my nails to tease the flesh and the hard nuts inside. Very slowly I started bobbing my mouth back and forth giving his corona a massage with my soft lips. \n\n\"God that feels so good!\" Mitch exclaimed his lustful eyes watching every move I made. \n\nI spent an inordinate amount of time just slowly sucking his flaring cock head like that, occasionally using my hand to stroke his surging shaft. I was confident that if I made him cum the Viagra I'd given him would keep him hard, hopefully for hours. \n\nI could tell by his expression that Mitch loved having me caress his cock head this way, but my own craving for the feel of a throbbing cock in my throat urged me to swallow more of his shaft. I began letting a little more slip between my lips each time I bobbed forward, but still drew back and let my lips tease his sensitive corona. More and more of his shaft began to glisten with saliva and I let his head slide along my tongue as it neared my throat. Mitch groaned deeply as his cock head wedged into the back of my mouth for the first time. I let him slip from my lips the next time I drew back, a string of saliva extending from my tongue to the tip of his pulsing cock. \n\n\"Put your hands on my head.\" I suggested. \n\nMitch's hands instantly moved from his hips and laced into my hair pulling it tight back along my temples. I opened my mouth wide and moved forward, his cock head slid along my wet tongue until it reached the back of my mouth.\n\n\"Uh ha.\" I tried to say granting him permission to impale my throat with his rock hard cock. \n\nHis fingers pressed firmer into my head as he drew it toward his loins. A throaty moan escaped his lips as the flaring cock head spread my throat open then slipped into its tight wet confines. I swallowed once then again as he pressed my nose into his pubic hair. \n\n\"God damn!\" Mitch exclaimed as I used the soft hot flesh to caress his beautiful cock. \n\nHe held my head firmly as he flexed his pelvic muscles causing his cock to twitch inside my mouth and throat. I loved that feeling, the sensation, of a man holding my head tightly with his hard throbbing cock deep in my throat until my lungs screamed for oxygen before he removed it momentarily, watching his eyes as I gasped for air before he impaled my mouth and throat again.\n\nPerhaps it's the whore in me, but that feeling excites me more than any other sexual sensation. I slid my hands up his legs and lightly applied pressure signaling for him to let me fill my lungs. Mitch pulled back on my hair until his shimmering cock slipped from my lips. I gasped for air several times before extending my tongue to provide his cock a cradle to my throat. He dug his fingers into my scalp and pushed my mouth over him again, faster and with more force this time. My nose ground against his pubic bone, as he thrust forward trying to drive his pulsing cock deeper, spearing my throat with his cock head. I swallowed once, twice, then again letting my throat muscles caress his cock head, then moaned knowing the vibrations of my moan would pleasure him even more. \n\nI wanted him to throat fuck me, but Mitch had other ideas. He pulled my head back, his cock slipped from my oral grasp with a resounding pop then stretched up in front of my eyes glistening with a thick coat of spit. His hands slipped from my head and reached down to grasp my big, soft tits. He almost pulled me up by my chest until his hard, slippery cock was positioned outside my deep cleavage. \n\n\"I want to fuck your big beautiful tits!\" He exclaimed. I leaned forward capturing his wet cock between my tits, then he pressed them together encasing the erection in the warm flesh of my cleavage. \n\n\"Yes fuck my tits.\" I agreed as he began thrusting between my orbs of pleasure. His thumbs moved to roughly circle my erect nipples as his cock slid up and down between them.\n\n\"Sweet tits!\" Mitch proclaimed as he watched his cock pop out the top on the upstroke and then retreat between the big soft mounds of pleasure on the down stroke. \n\nI stared up at him, my eyes glistening with moisture and urged him on. \"Fuck my titties.\" \n\nI reached between my thighs and slipped two fingers into my pussy. I was sopping wet and ready for him to thrust his rock hard cock inside me. \n\nHe pounded my tits with abandon and I fully expected he would shortly coat my big tits with his first cum load, but again he had other cravings. Mitch pulled his cock from between my big tits then slapped the head against each nipple sending exquisite sensations shooting up my spine. \n\n\"Fuck me!\" I pleaded. \n\nHis strong hands easily lifted me to my feet, then turned me around and shoved me toward the small dining table. As my thighs pressed into the edge of the table Mitch pressed his cock against my ass. His hands moved up to my shoulders and bent me over the table until my tits rested on the surface. \n\n\"Yes fuck me from behind!\" I pleaded. \n\nOne of his hands slid down to my silk covered leg then lifted it until my knee rested on the surface of the table and my loins were spread wide open for his assault from behind. His hand moved to my ass and I felt the satin fabric of my thong being pulled tight, giving me a sensual cameltoe for a moment, before his strong hand shredded the thin sliver of material between my ass cheeks. As he moved his hand down, he slid a finger between the cheeks of my ass and over my puckered asshole. When his hand reached my pussy, he extended his middle finger to dip into the wet folds. He took the finger dripping with my juices and gently rubbed it over my tight sphincter before he briefly penetrated it with just the tip. He returned to my wet pussy and this time he inserted two fingers. I moaned softly as he swirled his fingers around deep inside me.\n\nI glanced over my shoulder as he withdrew his fingers and smeared the moisture on his throbbing cock then guided it to the wet lips of my pussy. I felt the head press against my lips then slip inside. We moaned in unison as he drove his cock deep inside my wet flesh. His hands firmly grasped my hips so he could pull my ass toward him as he thrust forward.\n\n\"Fuck my wet pussy.\" I begged as he pulled back then impaled me again. \n\nMitch snorted as he continued pounding his hard cock into me. My flesh began to swell grasping his cock as he pummeled me from behind. His cock head slid roughly over my G-spot each time he thrust in. \n\nMy breath started coming in short gasps and indistinguishable sounds of pleasure were all I could mumble as his glorious cock carried me closer and closer to orgasm. The numbing sensation of climax spread from my loins through my entire body as he pounded my hot wet pussy harder and harder. \n\n\"YES I'm cumming!\" I was able to scream as the incredible waves of pleasure coursed through me. \n\nMitch continued his assault driving his rock hard cock against me as I rode him through a mind blowing climax. My body reduced to a quivering mass of sexual flesh, every muscle twitching and grasping at his cock as he thrust it inside. \n\nI moaned almost continuously until my orgasm mercifully began to subside and my gasps of pleasure slowed. \n\nMitch pulled out and stepped back away from me. I let my leg drop off the table but lay there my quivering body still basking in the spectacular glory of an incredible orgasm. \n\n\"Now that's what I call fucking!\" Mitch proclaimed from behind. \n\nI pushed my body up from his altar of lust and turned weak kneed and sexually spent. As I turned to face this glorious man his broad smile acknowledged that he'd satisfied me completely. His rock hard cock stood at attention and he grabbed it with one fist and said. \"Let's fuck some more.\" \n\nI moved toward him and pretty much collapsed into his arms, his cock pressing against my stomach. \n\n\"Take me to bed.\" I pleaded. \n\nMitch smiled and scooped me off my feet. I circled his neck with my arms and he carried me through the doorway to the bedroom. Reaching the bed he slowly lowered my feet until I was standing, then circled my body and pulled it tight against his. Our mouths blended together, lips, tongues and even teeth pleasuring the other. His hands moved continuously over my back sliding up to my neck then down again to squeeze my ass. Our kiss lasted forever and I slowly began grinding my loins against his hard cock trapped between us.\n\nHis fingers slipped up into my hair and he pulled my ear to his lips. \"I want you on top this time.\" He whispered. \n\nI turned my mouth to his ear and slid my tongue along the edge then pierced it with the tip giving him an erotic sensation.\n\nI pushed him back against the bed causing him to flop down on the soft comforter. Mitch instantly scooted to the center and reached in to grasp his totally erect cock, his proud smile again spreading across his face. \n\nAs I crawled toward him I whispered. \"I'm gonna ride your hot cock till you explode.\" \n\nI lifted one leg over his body and placed my stiletto flat on the mattress, then lifted my other leg and did the same so that I was crouched above his loins. \"Give it to me.\" I demanded. \n\nMitch guided his cock head to my swollen slit and rubbed it back and forth a couple times. I lowered my wet pussy over his cock letting him slide inside slowly. He moaned as the tight flesh engulfed his cock. Once I felt his pubic bone against mine, I lifted up until just the tip of his cock head was still inside. His hands moved to my tits and began squeezing the big soft mounds. Again and again I moved my body up and down on his raging cock until my leg muscles ached, then I dropped to my knees and slipped my feet back along his legs. \n\nOur eyes stared lustfully into one another, his hands were glued to my big tits and my hot, wet pussy encased his rock hard cock. I slowly began grinding my pussy on him pressing the head against my cervix and letting the flaring corona massage my G-spot. \n\n\"God fucking damn that feels so good!\" Mitch exclaimed as I pleasured his cock with every part of my hot wet pussy. \n\nMitch reached up and pulled me down tight against him kissing me deeply as I continued humping his cock, letting it stretch my flesh, filling me perfectly. As we kissed he released a sinful moan and his hips began lifting to meet every sensual plunge I made with my tight, hot wet pussy. \n\nI felt that awesome numbing sensation begin again and broke our kiss to whisper in his ear. \"You're gonna make me cum again.\" \n\nHis hands slid down to my hips to control the tempo of my movement, holding me down while he flexed his pelvic muscles causing his cock to lurch deep inside. I began grinding my clit against his pubic bone and together we started climbing the mountain of pleasure toward the peak of orgasm. \n\n\"YES, YES, YES I'm cumming.\" I screamed while I rode his surging hard cock over the top. My pussy flooded with juices bathing him in my hot orgasmic flow. My entire body convulsed uncontrollably while intense waves of ecstasy shot along my spine. \n\nMitch closed his eyes almost as if he was concentrating on reached his own pinnacle. I urged him on. \"Cum for me, fill me with your hot load.\" \n\nHis beet red face contorted and a deep guttural escaped his throat as I felt him swell inside me. \n\n\"Yes baby that's it gimme that thick, hot sauce.\" I pleaded. \n\nHis fingers dug into my hips, his strong hands pressed my loins down to meet this thrusts. Our loins slapped together again and again until his cock exploded inside me. \n\n\"Fuck yes!\" Mitch exclaimed as he pumped my soaking wet pussy full with his wonderful hot cum. \n\nOver and over again he spurted until my pussy could hold no more and it began seeping out of me coating his groin with our combined fuck juices. He groaned again then released his firm grip on my hips. I instantly began moving my hips up and down riding his rock hard cock through the final few mind numbing moments of our mutual orgasm. I finally collapsed forward pressing my tits against his chest, kissing his neck and shoulders as his cock soaked inside me.\n\nMitch turned his head and captured my mouth with his, a soul searching kiss with tongues entwined together as tightly as our loins.\n\n\"Fuckin incredible.\" He whispered between kisses. \n\nI just moaned in agreement. \n\nWe lay there joined at the mouth and loins as together we basked in the glow of an awesome climax. Mitch's cock remained rock hard and he occasionally flexed his pelvic muscles causing it to lurch inside me. \n\nI wanted more, and I wanted to give him more. Rising up off his erect cock until it slipped from my wet pussy, I slithered down his body smearing his cum coated cock along my stomach, between my big tits, and finally into the soft flesh below my chin. \n\nHe lifted his head from the bed and watched as I slid my mouth along the shimmering shaft then licked and sucked the puddles of sweet cum from around the base and off his balls. I smiled up at him, my lips and cheeks glistening with his thick sauce. \"I want more of your sweet juice.\" I whispered just before sucking his cock head between my lips. \n\nMy delicate hand circled his throbbing shaft and stroked along its length as I used my lips and tongue to pleasure just the head of his cock. His eyes widened as he watched my lips slide again and again over the smooth sensitive flesh of his corona. His cock tasted incredible still coated with our combined sex. \n\nAfter pleasuring him for what seemed like an eternity, I lifted my mouth from his cock and with the head pressed against my pursed lips I asked. \"Throat fuck me?\" \n\nHis instant smile confirmed he wanted that. \n\nI slipped from between his legs and reclined on the bed dangling my head over the edge. \"Fill my throat like you filled my pussy.\" I pleaded. \n\nIn an instant Mitch rolled off the bed and moved over me. \n\n\"Gimme that beautiful, hard cock!\" I exclaimed as he guided the tip to my lips. \n\nI pressed my head firmly against the edge of the mattress and extended my tongue as his cock head slipped between my lips. His hands now free covered my big tits squeezing and pinching the heaving flesh as he slowly thrust inside my wet mouth. \"Hmmmmmmmmmmmm......!\" Mitch moaned as I closed my lips around the pulsing shaft. He didn't stop until his balls rested against my nose and cheeks and his cock head was surrounded by the hot tight flesh of my throat. \n\nMy primeval groan signaled that I loved the sensation of having him buried deeply in my throat. \n\nMitch pulled back just a little then began making short jabs at my throat, his corona slipping back and forth through the tight ring of flesh at the entrance to it. His balls slapped my face again and again as he assaulted my mouth. \n\nMitch knew I needed to fill my lungs with life sustaining oxygen and pulled back bringing a thick coating of saliva with his cock. As I gasped for air the wad of spit ran down my face toward my eyes. I reached up behind him and grasped his ass. \n\n\"Give it to me! Fuck my mou.\" I said but his cock cut off the last syllable.\n\nHe thrust forward until his cock head was again buried in my soft wet throat and his balls slapped into the puddle of moisture covering my face. Mitch leaned forward sliding one hand down over my belly then slipped his middle finger into my steamy wet pussy. I moaned again as he swirled his finger around inside the slippery flesh. The ball of his hand pressed against my clit heightening the pleasure his hand was providing as he continued jabbing at my throat. Over and over again he repeated the entire process, pulling back so I could gasp for air then driving his cock deep in my throat so he could make the short jabs inside. \n\nMy eyes were pasted shut with the thick saliva he'd pulled out of my mouth with his cock and the moisture was smeared across my face. I slid my hand through the mess then coated my tits with it. \n\nI craved his thick load, and I began begging him for it between deep thrusts into my throat. \"Cum for me, gimme that sweet sauce.\" ",
        "Mitch must have known that in order for him to climax again he would have to fuck my mouth harder and faster than I could handle. He pulled his throbbing cock from my mouth and nearly demanded. \"Turn over now!\" \n\nI rolled over and swiped at the thick coating of saliva smeared on my face, wiping my hand on the comforter. \n\n\"I'm gonna jerk off on your face!\" Mitch exclaimed. His hand began moving at a steady pace along his cock shaft twisting a little as it slipped up over the head. \n\nI urged him on. \"Give it to me!\" \n\nHis hand moved faster and faster. \n\n\"I want your hot cum!\" I exclaimed. \n\nA blur of movement covered his raging cock. \n\n\"Coat my face with thick hot sauce.\" I begged. \n\nHis strokes slowed and his eyes closed as those beautiful balls pumped my reward toward the tip. \n\n\"Yes, give it to me!\" I pleaded. \n\n\"Arrrgh!\" Mitch groaned as the hot sauce reached the tip. It shot across the tiny space between his cock and my face splattering across my cheek. His hot cum felt like it burned my flesh. The second shot coated my tongue and I moved forward closing the distance so he could shoot the rest into my cum craving mouth. \n\n\"Yes\" Mitch bellowed as his cock filled my mouth with sweet thick cum. He pulled his cock up then slapped it against my upper lip, a splatter of cum coating my nose and lip. \n\nI swallowed his load then remarked. \"I love the taste of your cum.\" \n\nMitch moved sideways and sat down on the edge of the bed beside me. He was sweating profusely and his breathing seemed somewhat labored. \n\nI turn on my side and placed one hand on his thigh. \"Are you okay?\" I asked. \n\n\"I'm fine, I just need to catch my breath.\" He replied. \n\nAs I gently stroked his thigh I suggested. \"Let's take a bath together in the Jacuzzi.\" \n\nMitch smiled at me and answered. \"I'd like that.\" \n\nI twisted around to sit next to him and undid the ankle straps on my stilettos and slipped my silk stocking off my legs. Standing I leaned down and kissed him tenderly on the mouth. \"I'll start the bath water, join me when you're ready.\" I said knowing he still needed a few minutes to fully recover. \n\nAfter adjusting the water to a comfortable temperature, I wet a face cloth and wiped my face clean. I added just a cap full of bath bubbles and set the Jacuzzi to low before slipping into the warm frothy water. Bubbles covered all but the very tops of my large tits as the soothing warmth surrounded my body. Mitch came in carrying the bottle of champagne, two glasses and sported a haft erect cock. \n\nI smiled as he approached. As he sat the bottle and glasses on the edge of the tub I remarked. \"Looks like you're good for another round.\" \n\nHe grinned and replied. \"It's amazing what a sexy woman and a little blue pill will do for a tired old fuck like me.\" \n\nI sat up, which lifted my tits from beneath the bubbles. \"Slide in behind me.\" I suggested. \n\nHe slipped into the tub behind me and sat down, as I leaned back against him I felt his semi-hard cock press between my ass cheeks and up toward the small of my back. \n\n\"That doesn't feel like an old fuck's tired cock to me.\" I commented as I wiggled my ass a little. \n\nMitch poured champagne for us then handed me a glass. \"I guess your toast earlier was quite appropriate.\" He said. \n\n\"Isn't marathon sex wonderful?\" I asked.\n\nHe giggled and answered. \"If I survive.\" \n\nIt felt so nice leaning back against him as we relaxed together and sipped champagne. I especially liked the feel of his cock sliding against my skin in the bubbly water. Mitch apparently liked the feeling also because his cock seemed to harden further. He reached around me with his free hand and gently caressed one full breast letting his fingertips slide around and over my sensitive nipple. \n\nI finished my drink and placed the empty glass on the edge of the tub, then leaned my head back to rest on his shoulder cooing softly as I felt his cock slide between our bodies. \n\n\"You are so damn sexy.\" He commented. \n\nI turned my head a little so I could look up into his eyes. \"You're pretty sexy yourself.\" I replied. \n\nHe tipped his glass swallowing the rest in one gulp then placed his empty glass next to mine. I moaned softly as his other hand joined the first and his sensual caresses on my tits became more aggressive. \n\nI moved my hands to his thighs on either side of me and slowly massaged his muscles under the warm bubbles. \n\n\"I believe we have a fantasy to fulfill.\" I remarked. \n\nHe squeezed my tits a little harder and pinched both nipples in unison. \n\n\"We do, don't we.\" Mitch replied, knowing I'd promised to pleasure him orally in the Jacuzzi. \n\nI slid away from him a little then turned and knelt between Mitch's legs, just the tip of his cock poked up from under the bubbles. I moved my delicate hand toward his loins circling his shaft with my fingers. His eyes were fixed on mine as I slowly stroked the length of his cock beneath the water, softly massaging the flaring corona with a handful of bubbles. \n\n\"That feels so good.\" Mitch whispered while my hand caressed his cock. \n\nI slid my fingers down and cupped his balls. \"Is there another load of hot savory cum in here for me?\" I questioned. \n\n\"Absolutely.\" Mitch replied with a confident tone to his voice. \n\nI continued stroking his cock as I leaned forward and flicked my tongue across his nipples. He moaned quietly while my hand slowly stroked up and down on his pulsing cock as my tongue moving up his chest and toward his mouth. I slid my tongue around his lips then probed between seeking his tongue. \n\nMitch sucked gently on my tongue then opened his mouth to kiss me passionately on the lips. His hands slid to my big tits and pressed them together as he arched his hips trying to thrust up between the big soft orbs and into my deep cleavage. \n\nI broke our kiss and patted the edge of the tub with my free hand. \"Sit up here.\" I said. \n\nMitch hoisted himself up and slid back onto the edge of the tub, his rock hard cock covered with soapy bubbles and water cascading off his body. \n\nI straighten up and cupped my big soft tits lifting them as I asked. \"You want to fuck these big titties?\" \n\nMitch just smiled and nodded his head. \n\nI released my tits and gathered handfuls of bubbles then dribbled them over my tits and between. As I moved forward he slid his hand to either side squeezing the wet flesh and pressing my tits firmly together. I reached up and grasped his throbbing cock pressing it into the soapy flesh of my deep cleavage. My hands slid to cover his as I began slowly humping his cock with my chest. His eyes dropped to watch as I moved my body up and down caressing his cock head with the soft wet flesh between my tits. \n\n\"That feels so fucking good!\" Mitch exclaimed \n\nI smiled and replied. \"Your hard cock feels wonderful between my big tits.\" \n\nAfter several minutes of sensuous tit fucking most of the bubbles had either popped or slid back into the water and his cock slipped out uncovered from my cleavage. \n\nI looked up into his eyes, his lustful stare signaled that he wanted my lips surrounding his cock. \n\nI let him slip from between my tits and hooked on sexy finger around the shaft keeping his cock from slapping back against his belly. \n\nHe watched intently as I dropped down and took one of his balls into my mouth, sucking and caressing it with my tongue. I repeated that with his other one. After removing the second one from my mouth, I extended my tongue and licked from the base of his scrotum up over the bulging urethra along the underside of his shaft. \n\nHis soulful moan confirmed he loved the sensation. \n\nMy tongue paused a moment at the flare of his corona teasing the sensitive flesh then continued up to the tip of his pulsing cock. I pulled with my finger drawing the tip toward my parted lips. \n\nJust before it slipped between my parted lips I whispered. \"I love sucking your cock.\" \n\nMy moist lips spread over the head then caressed his corona and down an inch or so along his cock shaft. \n\n\"Yes.\" Mitch nearly whispered as my hot mouth surrounded his cock head. \n\nI lifted up again using my lips to massage the corona then let him slip from my mouth so I could circle his cock head with my tongue. The pace of my oral pleasures was slow and steady, constantly moving my mouth over his cock then teasing him with my tongue. Every once in a while I'd dip my mouth along the throbbing shaft to lick and suck his scrotum and the big swollen balls it held.\n\n\"You're an incredible cock sucker.\" Mitch happily said. \n\nI lifted my mouth from his cock and replied. \"I'm the best cock sucker on the planet.\" \n\nHe giggled and answered. \"I believe you are.\" \n\nOver the next twenty minutes or more I showed him why. I didn't suck his cock to make him cum, even though that was the ultimate goal, but instead gave him head to provide pleasure, sucking, licking, kissing and teasing his pulsing cock and heavy balls with my talented mouth, tongue and throat.\n\nHis eyes stayed focused on my mouth as I slowly pleasured his cock wanting to fulfill his oral sex fantasy. His breathing became heavier and he began lifting off the edge of the tub trying to press his cock deeper in my mouth. I knew what he wanted and had waited until his throbbing cock was surging with every movement of my mouth. As I took more of his shaft between my lips his hands moved to my head and urged me deeper. \n\n\"Suck it, swallow my hard cock.\" He demanded. \n\nI wanted his cock deep in my throat nearly as much as he did. I let his hands press my mouth down slowly stretching the flesh at the back of my mouth. I moaned soulfully as his cock head slipped through and into the soft flesh of my throat. His hands pressed even firmer pushing me down until my lips stretched around the base of his cock. \n\nHis lustful moan turned into a gasp for air as I extended my tongue over my lower lip to lick at his scrotum and the large swollen balls it contained. He held me firmly impaled on his cock and I used my throat muscles to massage the head and the part of the shaft buried deep inside. \n\n\"God damn!\" Mitch exclaimed just before he let me lift up to fill my lungs with air. His hands remained on my head but I began controlling the tempo of my sensual oral sex. I moved my mouth faster and faster lifting off to breath then plunging down to massage his swelling cock with my throat. \n\n\"That's it, fuck me with your throat.\" Mitch exclaimed as I continued to orally pleasure him. \"Make me cum!\" He nearly screamed.\n\nI could tell he was on the verge and even though I wanted to savor his incredible sweet cum I knew he wanted to explode with his cock buried in my throat. \n\n\"Yes, yes, yes that's it!\" Mitch bellowed as his orgasm began to build. \n\nI clawed at his thigh with the sharp nails of one hand while my other one slid to grasp his balls, squeezing them tightly as his cock filled my throat with sweet thick cum. There was no need to swallow his hot cum, it shot down my throat coating the soft flesh to my stomach. \n\n\"Fuckin A!\" Mitch screamed as his climax peaked. \n\nI lifted off his cock just in time to receive his second blast across my tongue, the sweet fruits of his balls coating the inside of my mouth. I released my tight grip on his balls and stroked up the shaft wanting to draw every savory drop into my mouth. His cock continued to ooze cum and I let him slip from my mouth to smear his seed across my lips. \n\nHis hand moved to my shoulder and he dug his fingertips into my soft flesh while I licked and sucked every drop from his cock. As he watched me intently, I opened my mouth to proudly show him the thick coat of cum he'd rewarded me with and I smiled at him as I swallowed his sweet juice. \n\n\"Your cum tastes so good!\" I said between licks and kisses on his cock head. \n\nMitch slid forward off the edge of the tub and slipped back into the water pulling me up on top of his body so he could press my tits against his chest. Unlike before when he hesitated, this time he gladly kissed me sharing the taste of his cum. \n\nUnder the water his cock began to soften and I massaged it with my stomach and loins as we cuddled together in the warm water. I slid my lips to his ear and softly whispered. \"Take me to bed.\" \n\nWe patted each other dry, then slipped under the cool sheets of our bed. I snuggled into his side as he held me with one arm. \n\nHis free hand captured mine and he moved my delicate fingers to his soft cock. I slowly began stroking it hoping to bring him back to life. His hands touched me everywhere, and eventually like a phoenix raising from the ashes his cock began to swell. \n\n\"You have an incredible effect on me.\" Mitch whispered as he moved between my legs and spread me open, mounting me missionary even though he'd remarked before that he couldn't care less if he never had sex in that position again. Mitch only climaxed once more, but before he did he pleasured me with his cock and mouth through at least four incredible orgasms. He fucked me in every position he knew and a few that I suggested during the waning hours of the night. \n\nIt was clear that his erectile dysfunction was more a problem with his sex partner than him, because long after the Viagra had worn off his cock remained rock hard, a fact that I happily accepted again and again that night.\n\nWe fucked until the darkness of night gave way to the first light of a new morning and then we drifted into a satisfied and blissful sleep entwined in each other's arms.\n\nTo be continued..."
    ],
    "authorname": "R_U_Romantic",
    "tags": [
        "sexy swimsuit",
        "lingerie",
        "oral sex",
        "deep throat",
        "cum in her mouth",
        "straight sex",
        "romantic setting"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/diary-of-a-high-price-escort-ch-09"
}