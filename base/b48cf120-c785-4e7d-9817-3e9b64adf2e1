{
    "title": "The Twelve Tables Ch. 29",
    "pages": [
        "Authors Note: Thank you to everyone left comments or sent me feedback about previous chapters of this story. Thank you again to Margaret who continues to proofread for me. She's a lovely friend to have. ~ellie\n\n*****\n\nIt had not taken long to settle the children in from their big day out and all of them, even the older ones, had fallen asleep relatively quickly. Adding a loose skirt to the lingerie she had bought made it seem more appropriate for public viewing, and she had swooned appropriately as her heroes and the rest of the family had walked through the door.\n\nIt had been difficult to face Bridgette, who was unrepentant, declaring that she was the only one in this household who truly cared about Peri. She thought of her as a daughter and had been treated as a mother figure. She had the right to run this household as she saw fit, she had declared belligerently.\n\n\"Please stop,\" Peri had said distressed by the scene and the things Bridgette was saying to Antonia. \"When you came to us I'd been through a great deal of trauma and was facing quite a few life changing experiences. I needed you to help me,\" Peri explained. \"I probably let you do too much, because just like my mother, you made me feel useless and I felt bad that I couldn't look after my house or family to the same standard. The point is, I should have been stronger and not let you take over my home, as if I was incompetent, instead of helping me to do it myself. I should have asked you to help me, and show me what to do, but I didn't and now it seems it's too late for me even to try to do that with you. I need to start looking after my family my way, not your way or Antonia's way, my way. I can't do that with things the way they are now. I'm sorry Bridgette, I agree with Antonia. You need to return to the farm. You were only ever on loan to us, until we got settled into our lives. It was her that you signed your contract with, not myself or Josh.\"\n\nBridgette gaped at her as if stunned by a physical slap. The reality that Peri wasn't going to intervene on her behalf, knocking all of the argument out of her, as she seemed unable to believe that the woman she thought of like a daughter would treat her this way. She had collapsed on the floor then and wept, begging Peri to change her mind but it was all too late. Joseph and Antonia decided to return home immediately following dinner and had ordered Bridgette confined to her room once more until their departure.\n\nThe dinner was wonderful, and Zara showed why the exacting Lio had hired her as a cook. Peri ate little of it, though, her stomach turning over at the devastating affect her words had had on Bridgette. She felt guilt at how she had allowed her to take over and now that she was ready to take control herself, had to send the woman, who had done so much for her away. Maybe in time she would come back, and they could make peace again.\n\nShe'd spent a long time down in the nursery with the babies after dinner and talking with Heather about her plans for the children, if Ben agreed and the work on listing school requirements for each one that she had asked Bridgette to make and had not received. Heather accepted the responsibility given to her seriously and said she would have what Peri needed by lunch time tomorrow. \n\nBy the time Peri returned to the upper apartment, Antonia and Joseph had left, Ben had gone to the hospital to see Emily and Josh and Dante were firmly ensconced in the office. They were discussing details of the changes in the household staff and Josh's request that she hire a PA before she went back to work, as well as their schedules for the week ahead. She had kissed them both and picked up her journal before leaving them to talk freely. She would have plenty of time to argue about returning to work and the restrictions they would place on her.\n\nAfter grudgingly giving in to Josh's stance on hiring a PA, she'd told them both what she wanted to do about work, the staff and the children and left them to discuss it along with their plans for the following weeks. They had to make a decision about where they would live as a permanent home base. It made sense particularly now with the extra family staying with them indefinitely to be in the semi-rural location of the house and keep the apartment here for when they had to be in town for business or family events. \n\nPeri sat in the living room writing in her journal. She realised as she journaled that returning to work was not going to be as easy as she had hoped and once again having a purpose built library and office on the land surrounding her home was going to be the best idea. She could add on a cottage or townhouse as they had in the Battaglia village in case family representatives wanted to stay. She could design it from the floor up and make it exactly what she needed. Not just for the next few years but into the future. \n\nShe was musing over where it could be situated and wondered how serious Josh had been about acquiring the land surrounding their house, when Ben came back from the hospital looking serious and drawn. \n\n\"Can I get you a drink?\" Peri said getting up from her position on the couch.\n\n\"You know what I'd love?\" Ben gave a half smile. \"Someone to make me hot chocolate and put five little marshmallows into it.\"\n\n\"I think I can manage that do you want to come and help me count the marshmallows, so you know you got the right amount?\" She said like she would to one of the children. \"I'd hate for you to think I would give Josh and Dante more than you.\"\n\n\"Angie told me five was the perfect number, so it didn't get too sweet and didn't leave it bland,\" Ben smiled but once again it didn't reach his eyes. \"I better supervise, it's too important to leave to chance.\" He walked with her to the kitchen and saw how at ease she was there. \"Do you cook much?\" Ben asked. \n\n\"I used to; I love to cook for the people I love. Life has been a bit crazy though over the last year so I haven't had as much chance to cook. I am planning to remedy that though once we are properly settled and in a routine again after the holidays.\" She spoke lightly as she gathered everything she needed. \"Ben I know you are probably exhausted and don't want to think about anything else but could I talk to you about a few things?\" Peri asked tentatively.\n\n\"If you can find me some cookies to go with my hot chocolate I will be all ears for as long as you want,\" he looked around hoping for a cookie jar of some description.\n\n\"It just so happens that Zara made some for the children tonight that haven't made their way downstairs, I'm sure they won't miss a few,\" Peri laughed and took a container from under the bench and opened it for him to see.\n\n\"Excellent,\" he picked one up and bit into it. \"What would you like to talk about?\" He asked.\n\n\"I was thinking that when Emily got better and came home, she may still need some help managing the day to day things and like to stay with us for a while. We have plenty of room for you and the children, and I think they like having Josh and Dante around to play with,\" Peri laughed fussing with the warming milk as she spoke, so she didn't have to face him directly. \"It's just that school goes back soon, and it's a lot for you to manage alone and there is the sweetest little school out near our house that the children could go to rather than having to commute into the city. It's just something for you to think about,\" she said lamely feeling like she was intruding on his life. \"Angie's orientation for Fairmont is this week, though, and we can't put that off, it wouldn't be fair to her. She's been so excited about it.\"\n\n\"Em always sent me reminders that we needed to do the school stuff,\" Ben said as if unsure about how to process what she had said.\n\n\"I can help,\" Peri suggested gently again. \"Everyone needs some help sometimes. I know you are used to looking after everyone else, but you have to let us look after you sometimes. I can go with you to Fairmont or take her myself. Maybe Arianna would like to show her around. I expect she's been there for a year or two already.\"\n\nBen ran his fingers through his hair and turned an anguished look on her that tugged at her heart. He opened his mouth to speak but shut it again and swallowed noisily.\n\n\"I'm sorry, I know you probably don't want to deal with this right now, but I didn't want to make plans when you might have already decided what you wanted to do,\" she immediately apologised. She poured the warm milk into Ben's cup and stirred it slowly before slowly dropping five little marshmallows into the steaming brew.\n\n\"You have nothing to be sorry about,\" Ben murmured taking the cup she offered him with a half-smile. \"I haven't made any plans and until tonight I had thought that Em would be home within a week or two. She won't be, though. She won't even acknowledge me when I am there. It's like she has exiled herself for what happened to D. The doctors said she speaks of the incident as if the worst case scenario had happened and we were all dead. She won't look at me even if I stand right in front of her.\"\n\n\"Oh Ben, I'm so sorry. She will get better, though. It will just take some time. You were all brought up with such a strong sense of duty to the family that it's understandable that she feels she has betrayed you in the worst way. You were the leader of your siblings for such a long time. Josh told me you were like a father figure to him here in the city,\" she tried to make sense out of Emily's actions for him. \"You've always been the strong one for everyone else let us help you now. Stay with us, or at least let the children stay and I promise they will want for nothing.\"\n\n\"You don't have to do that,\" Ben said, \"We have nannies, or they could go to the farm with Mama.\"\n\n\"The farm is too far for you to be commuting to and you don't want them to be missing both their parents, do you? Our house isn't so far away that you couldn't come and see them whenever you wanted. You could stay with us and commute into the city with D. We have so much room there. Josh built a house big enough for six families! You'd be miserable if they were on the farm, I want to help, please let me, Ben. I promise not to take over and always ask before assuming I know best,\" she said gently.\n\n\"Do Josh and D. know you are inviting the kids and me to stay with you?\" Ben asked with a frown. \n\n\"Yes, they are happy to do whatever you need,\" Peri answered honestly. \"I wouldn't be doing it all on my own, I have help from your nannies and the enormous number of people who work for us now,\" she shook her head. \"Carmen will be back soon, and you know she will want to help too.\" She added as an after-thought. \"Emily will be back in no time and organising you and the children again.\n\n\"Where are they?\" Ben asked not wanting to appear rude but knowing that if he sat here with this amazingly generous woman he would break down. He needed the dry, acerbic taunting of his brothers to bring him back to reality and make decisions unclouded by the emotions that ran through him at that moment.\n\n\"In the office making plans for the week,\" she smiled. \"I imagine they are expecting you.\"\n\n\"Thank you, Peri. Thank you for caring so wonderfully for my family, I am grateful beyond words,\" he stood and leaned over the bench to kiss her cheek. \"I need to see Josh and D. before making any decisions.\" He picked up his mug and a few cookies then gave her a lop-sided smile then walked to the office.\n\nPeri watched him go with a heavy heart. He seemed like he was about to open up to her when he spoke of Emily and then just as quickly he had shut down and became flat and unemotional. She watched him walk away wondering if she had been too pushy and now he believed her to be an interfering busy-body.\n\nZara appeared out of nowhere and started to help her tidy up the remains of the chocolate making. She said nothing as she began to help and then got out a large bowl and placed it on the bench as if she was about to start cooking again. \n\n\"Can I help?\" Peri asked seeing Zara go to the pantry for ingredients.\n\n\"Hot chocolate and cookies are always so comforting no matter what age you are,\" Zara said conversationally without any indication that she had heard any of the conversation Peri had just had with Ben. \"I just thought it might be nice to have a batch of fresh cookies for the grown-ups as well as well as the children. My mother used to make the most delicious cookies for my father that we were never allowed to have. He would sneak one to us now and then, though. I think that's why they tasted so good, like contraband.\" She gave a soft laugh as she worked quietly.\n\n\"I can't remember my mother baking, she cooked, but just the basics,\" Peri said thoughtfully. \"It must be nice to have such fond memories of your parents.\" Zara looked at the young woman she worked for and saw the sadness in her expression after speaking and decided to change the subject.\n\n\"Do you have a favourite cookie?\" Zara asked. \"Something you like with hot chocolate or coffee?\"\n\n\"One of the first things I learned to cook at school was a simple chocolate slice. We used crushed up wheat bricks. You know the kind you had for breakfast and added cocoa and brown sugar and butter? I still make that sometimes. I learned all my cooking skills at high school I am afraid,\" Peri admitted.\n\n\"It sounds like they are still using the same cookbook I used at high school,\" Zara chuckled. \"It didn't answer my question, though, do you have a favourite cookie?\" She asked as she added ingredients to the bowl without measuring any of them.\n\n\"Not really, I like slices or small tea cakes. My home economics teacher used to have us make high tea for the faculty or special occasions. She always made these little vanilla patty cakes with the most amazing passionfruit icing. It's probably just as well I never learned how to cook them; I'd be as big as a house,\" Peri grinned. \"Is that close enough to a cookie?\"\n\nIt seemed like only minutes later that Peri was helping roll the dough into small balls and press her thumb into the middle flattening them to place a small piece of chocolate coated caramel on the top. Fifteen minutes after that Zara was lifting the first tray from the oven when Josh appeared in the kitchen.\n\n\"Something smells good,\" he grinned.\n\n\"Ben was stealing the kid's cookies earlier, so we thought we should make you and your brothers some of your own,\" Peri laughed as he burnt his fingers trying to pick up one of the hot cookies.\n\n\"Speaking of Ben, he'd like to talk to you. No need to tell him about the cookies, though,\" Josh said as he juggled a hot cookie between his hands. \n\n\"If it weren't for Ben you wouldn't have warm cookies straight from the oven,\" she admonished him and picked up the small plate on which Zara had placed a few of the cookies. \"I thought we had the talk about sharing,\" she grinned.\n\n\"I wouldn't mind revisiting the talk we had last night,\" Josh shrugged making her blush and shake her head. \"You know just to refresh my memory.\" Peri shook her head and walked to the office.\n\nBen seemed more at ease and was smiling like his usual self when Peri entered the office bearing the small plate of cookies. \"I'll take those for you,\" he offered.\n\n\"You take the cookies. I'll take her,\" Dante chuckled pulling Peri into his lap and wrapping his arms around her making her laugh. \"I missed you,\" he buried his face in her hair and kissed her shoulder.\n\n\"You might have mentioned that already,\" she teased conscious of the fact that Ben was sitting across from them missing Emily. \"There're more cookies coming out of the oven if Josh doesn't eat them all,\" she offered.\n\n\"Don't mind me,\" Ben smiled seeing her look at him guiltily. \"Dante would probably just tell us you're sweeter than cookies anyway.\"\n\n\"I wouldn't be lying,\" Dante chuckled and kissed her neck.\n\n\"I've had a chat with Goofy here, and the king of the kids, and I can see that this year is going to be particularly busy for all of us. I'm just not sure that moving the kids away from everything they're familiar with is the best thing to do, right now. Em could snap out of it by then. Can we meet sometime tomorrow and have a talk about it, after I've seen the doctors again?\"\n\n\"Maybe talking to Carmen will help, she and Emily were close, and maybe she would like to help with the children, so they don't have to make any big changes,\" Peri suggested. \"I'm sure Marcus would organise that for you if you called the facility. I wasn't trying to take over for Emily or anything. I was just suggesting one solution. I'm sure there are other options that you might be more comfortable with, and Carmen may come up with things I haven't thought about, because she has children at school too,\" Peri smiled showing that she didn't mind what he decided to do. \n\n\"That's not a bad idea,\" Ben mused thoughtfully.\n\n\"I'd still like to take them out to the house this week. Let them run around and have some adventures before school goes back for the year, if that's okay? I will still have Carmen and Romey's children with me as well, and it will be fun after being cooped up downstairs for so long,\" she asked hopefully.\n\n\"Yeah,\" he said. \"Romey's boys probably need it more than the girl's, they were energetic today, to say the least,\" he chuckled. \n\n\"There's no hurry to make any decisions, aside from the orientation day for Angie,\" Dante interrupted their careful conversation. \"You have to go to that one big guy, but Rosanna and Arianna will probably jump at the chance to go with you, as would Carmen if she could. Don't feel pressure to take Peri anywhere. You know how grumpy the kid gets when she goes anywhere without him.\"\n\n\"She went out today without me, and I was pretty happy with the result,\" Josh said smugly walking back into the room eating cookies with Romey following him. \n\n\"Really? I hadn't noticed,\" Ben said with a perfectly straight face. \"Where've you been?\" he asked Romey.\n\n\"Had a bit of a nap while Davey read me a bedtime story,\" Romey scratched the stubble on his cheek. \n\n\"So Peri wants to kidnap our children and torture them by making them run around in the sun and have an adventure or two before school goes back,\" Ben said casually. \n\n\"Yeah I heard a rumour about that,\" he nodded. \"I can do the commute if she's prepared to torture them. I can't be both parents. I can't keep up with it all. The nanny is good, but the kids need us both. Carmen's the driving energy in our house, without her I'm a bit flat to tell you the truth,\" he said honestly knowing Ben was struggling with the need to look after everyone the way he always had but without the quiet support Emily had always given him to manage the day to day things.\n\nBen looked at his brother in surprise. Romey was the last person he had expected to hear self-depreciation from and he worried that the loss of the chair and then his twin moving overseas had taken a greater toll on him than just Carmen's involvement in Emily's betrayal. He seemed to have mellowed over the last few weeks since Christmas, he seemed less driven and on edge now, and Ben considered him curiously.\n\n\"Today was great, thanks for that Josh, the boys had a ball,\" Romey added. \"I don't know that Mark was altogether happy when you made him walk the plank, though,\" he chuckled.\n\n\"We were rescuing you, geez. Someone had to walk the plank, why not the Captain?\" Josh rolled his eyes as if it was the most obvious thing in the world.\n\n\"Well gentlemen, I'm going to call it a night,\" Peri said interrupting their banter. \"Call me tomorrow about when you would like to meet tomorrow. Anything I can do to help, just ask,\" she reached out and touched Ben's hand. She kissed Dante and stood to face Josh. He seemed to be considering her quietly.\n\n\"I just read Gerrard's report from today,\" he held up his phone with the email on it. \"You seemed to have glanced over the part about running into an old friend.\"",
        "\"You seemed distracted when you got home, and then I forgot. We can talk about it in the morning,\" Peri said easily, being conscious of the other men looking curiously at her. \"It wasn't a big deal, she was lovely, honestly. I think what happened to Nik affected her profoundly.\" \n\n\"Distracted might be a bit of an understatement,\" Romey chuckled. \"Not that I blame Josh at all, just saying.\" He added as Josh looked at him with the same stare he had been giving Peri. \"He was dignified compared to Goofy's reaction.\" He deflected the conversation to Dante.\n\n\"You're lucky you saw us again tonight,\" Dante grinned. \"She's a woman worth coming home to.\"\n\n\"And on that note, I am going to bed,\" Peri blushed. \"See you all in the morning.\"\n\n*****\n\nPeri's morning had been full. She'd met with Rae and Zara first thing and then with Heather regarding all of the children's needs and wants. It was interesting to find Heather's impressions on the other nannies and her ability to differentiate their wants and needs from those of the children.\n\nShe'd set the deadline for Wednesday morning to go to the house and began plans with the help of the three women, for entertaining the children. Rae had already been in contact with the steward at the house who was happy to find that the family would be returning along with so many extra charges and had made suggestions of his own. \n\nHeather had suggested online shopping of a bulk order for the school supplies that the nannies could then sort and pack into individual needs. School uniforms were a little more difficult, but it could be done on Friday when she and Ben were at Angelina's orientation. That would still give them a week for alterations or if they have to wait for pieces to be ordered that were out of stock. Although she didn't voice it, it also gave them the opportunity to wait until Ben had made a final decision regarding where his children would live and which school they would attend.\n\nShe was happy and content that the plans she had worked on with her household team, as she thought of the three women now, were fluid and flexible enough to cope with any sudden changes as so often happened in this family. She felt happy, and even though she still had a lot to learn, she knew after the weekend that Josh would always push her in the right direction. She was sitting on the couch with her day book going through the plans she had made with each of the staff members and working out a running timetable for the first few days at the house when Dante appeared from the office.\n\n\"I thought I kissed you goodbye this morning?\" Peri said quizzically.\n\n\"You did, and I went to work in the office,\" he chuckled. \"You know you can work in there with me, right?\" he said.\n\n\"I know but I like my own space when I work, and I am sure you and Josh do too,\" she spoke with a smile. \"I asked Rae yesterday if there were any spaces I could turn into an office, something with a window preferably. She said there were a few spaces to choose from but even though she said I could look at them, she seemed reluctant to show me.\"\n\n\"That would be my fault,\" Dante admitted. \"The journals I gave you for the holidays, were part of a larger surprise that I didn't have time to complete the way I wanted. I'd always planned to show you and let you complete it yourself, but life became complicated again.\"\n\n\"I think our lives are always going to be complicated,\" Peri laughed. \"It's about managing everything with the right people in place to support us,\" she echoed Josh's lecture from Saturday night. \"So you were building me an office space?\"\n\n\"Not really,\" he seemed at a loss to explain. \"Come on then, let's take a look,\" he held out his hand to her. They lived in the front half of an apartment, that took up the whole floor and as Peri walked through with Dante she marvelled again at how much space they had for family and visitors to stay and still have privacy. They arrived at a door that had gold and black construction tape pinned to it and Dante bent to kiss her as he used a key to open the door. Then he stood back and let her explore. \n\nThe room was chaotic, to say the least. A hodgepodge of furniture which at first glance didn't belong together blended well as it held a range of books and manuscripts as well as sculptures and porcelain antiques. Peri smiled at the framed posters on the wall that were just a little off centre and knew somehow that this marvellous man had seen the bedroom she had lived in until Josh came into her life. She turned to look at him as he leaned on the door jamb watching her with a smile. \n\n\"I can't believe you did all of this for me,\" she laughed picking up a toy panda just like the one she had left behind when she had moved in with Josh knowing he would hate it. \n\n\"No one can,\" he shrugged. \"Rae has been itching to get in here and clean it up so you could use it. I have had to keep it locked.\" \n\n\"I'm so glad, it's perfect just the way it is,\" she scooped up an old manuscript with loose pages to make room on the couch before sitting and trying to take it all in. \"How did you know this was what I would want?\"\n\n\"When you were still recovering at home, with Andie, Josh mentioned your cluttered room,\" he said, not telling her that Josh had been appalled by what a hoarder she was and how cramped and unorganised her room was, particularly compared to how meticulous she was with her work.\n\n\"He didn't like being there, we stayed at his place mostly, which took some getting used to, it was so sterile and clean,\" she laughed, \"Well compared to my chaos.\"\n\n\"I asked your mother, and she showed me your room. I might have stolen a few things from there,\" he walked to where she sat picking the panda up from her hands. \"I thought it was better to leave it up to you about how to arrange this mess, but I chose everything myself. So there's a little of me in this room as well. I tried to find things I thought you would enjoy discovering. I did this before our date night when I just wanted to know more about the woman I loved.\" He pulled her up into his arms and kissed her. \n\n\"You are a wonderful man. I am so lucky that you love me the way you do,\" she said breathlessly. \"You just seem to get me. Like you crawled around inside my mind and rifled through to find the happiest memories aside of loving you and Josh,\" she kissed him with passion. \n\nDante backed her up against the closed door. \"What I wouldn't give to be inside that incredible mind of yours,\" he murmured. \"Being inside of you is always amazing,\" he ran his hand up her leg and nibbled at her ear.\n\n\"I think you had ulterior motives for working from home today,\" she breathed feeling her body react to his attention.\n\n\"Can you blame me? Thursday night was mind blowing and then a quickie three days later with you and Josh, and I'm supposed to be satisfied? I'm a starving man Peri, take pity on me,\" he gave a soft groan and kissed her again making her feel his need.\n\n\"Unless you want another quickie maybe we should retire to our room?\" she suggested pulling together the vestiges of her self-control. \n\n\"I'm sure I could manage both,\" he replied huskily his hand moving under her skirt to rub over her panties feeling the warm dampness and marvelling at how hot and ready she always seemed to be when he was horny. Which felt like all the time lately he admitted. \"I love you, need you, want you,\" he kissed her deeply as his fingers found their way inside her panties and she wrapped one leg around his hip.\n\n\"Is that a sex toy in your pocket or is one of your brothers having a crisis?\" Peri asked feeling his phone vibrate in the back pocket of his pants against her leg.\n\n\"Fuck! I can't ignore it now that you have said that,\" he growled and stepped back from her answering it, his frustration evident in his voice. \"Yeah?\" he barked into the phone as he took her hand and led her from the room stopping and indicating she should close the door again and handing her a key to lock it.\n\n\"Yeah, I'm with her now,\" he said, and Peri looked at him cocking her head to the side wondering who was on the other end. He took her hand again and started walking back towards the other end of the apartment again as he continued to talk. \"Yeah I get it, what time do you need her?\" he seemed irritated. \"No I'll get one of her goons to drive,\" he grumbled. \"Fine but I'm coming. You know she will say yes. Right give us an hour, I got it, stop nagging already. When did you morph into an old woman?\" By the time Dante hung up from his call they were entering the bedroom and he closed the door, and Peri looked at him quizzically.\n\n\"If I tell you what that call was about your going to get preoccupied and curious and not be in the moment with me anymore,\" Dante said considering her. \"If I don't tell you, you are going to be worried and anxious, and that will ruin the moment too.\"\n\n\"How well, you know me,\" Peri laughed. \"Chances are though that if you tell me what you know and I know that I can't find out anymore until we go where ever we have to go, I will relax again and focus on you. It's clearly the better option and offers a small ray of hope for your plans to ravish me.\"\n\n\"While that sounds like a reasonable argument,\" he advanced on her and pulled her to him. \"I'm liking my chances of being able to distract you from the call for a few minutes at least right now,\" he murmured and kissed her.\n\nHe was right she knew. Both he and Josh had the ability to turn her mind and body to a quivering mess of hormone driven endorphins that wiped anything but the excruciating pleasure they gave her. Peri didn't argue but melded into his body. \"Just promise me no one is hurt, please?\" \n\n\"No one is hurt, or in trouble,\" he smiled down into her face. \"I promise. So can we get rid of these now?\" he tugged her shirt out of the waistband of her skirt and helped her by lifting it over her head.\n\n\"I'm assuming I will have to change to go out anyway,\" she grinned her curiosity still eating at her.\n\n\"Good point so that means we can get rid of this too,\" he unzipped her skirt and hooking his fingers into her panties at the same time lowered them both over her hips. He bent his head and kissed the tops of her breasts as he took off her bra. Dante stood back then and pulled off his shirt as he surveyed her. Even her imperfections were perfect to him, and he moved forward to kiss her again.\n\nPeri ran her hands down his chest to his belt his hands there eagerly helping her to remove the fabric between his cock and her mouth as she sank to her knees before him. He kicked his jeans away and closed his eyes as he felt her tentative touch and heard her almost purr in heat. She caressed his balls as her lips made feather light kisses around the tip of his cock. He closed his eyes, his mind rolling back to the vision he had of her on the yacht, and he groaned deeply\n\nOpening his eyes, he looked down on her his need to have her like this being fed by her obvious heat and need he growled, \"Suck it. Take it all, just like I know you can.\" He watched her lips slip over him, and his cock disappear into her mouth his knees bending slightly with the intensity of the feeling of power it gave him to see her obey his command so easily. \"Oh, fuck yes,\" he groaned as she took him all the way down rubbing her nose into the dark thatch of hair that crowned his cock. He wanted nothing more than for this amazing woman, to be his forever. \"Fuck,\" he groaned again as once more she took him all to the base.\n\nHe felt his cum rising too soon as he watched her revelling in her submission to him. His hands locked tightly in her hair he pulled her head back and took a hissing breath through his clenched teeth. He felt her hands wrap around him to his ass and the pull to bring him back to her open mouth. \n\n\"If you do that, I'm going to come in your mouth,\" he growled knowing they were hampered by time but unable to resist the look she gave him through her long dark lashes as she nodded her head slightly. He allowed her to pull him gently forward again, and he placed his cock on her tongue once more. His hips began to move as her hands pulled him closer, and she swallowed around the head of his cock once more. He stopped holding back as he fucked her mouth and he groaned deeply as he began to spurt ribbons of cum onto her tongue. \"God you sexy fucking cocksucker!\" he exploded and felt his legs trembling with the immense pleasure she gave him. She didn't let up as she milked every last drop from his cock, and finally unable to take any more he pushed her backwards to sprawl onto the floor below him. \n\nHe gazed at her for long moments before collapsing to his knees. The roughness and dirty talk only rose up in him when she was his alone. He desired every inch of her being and as she looked at her from his place on the floor he had an amazing view of her hot wet cunt. He reached forward dragging his fingers over the surface, parting the lips, playing with her cunt just to hear her mewls of pleasure, which turned him on incredibly. He leaned his face forward and pushed her legs wider apart. The lips parted further and despite his climax of a few minutes ago he felt his cock jump in a surge of renewed arousal. He pulled the lips wider with his fingers and pushed his tongue as far into her cunt as it could go. He wanted to give her as much pleasure as she had just given him and give himself a little longer for his cock to fully recover its former erection. \n\nPeri quivered at the first touch of his tongue; she let out a small whimper as he stroked over her clit and his fingers began to delve deeper into her cunt, feeling the wetness her cock sucking had caused. Her hand went down to gently touch his head and run through his hair. She felt him slide his free hand underneath her lifting her ass from the floor to part the cheeks of her ass and run his tongue from the tight dark star up and over the plain of her cunt. Her hands twisted into his hair as he continued the long slow teasing lick until he lowered her ass once again and began licking furiously over her clit and pushing not one but two fingers into her cunt making her gasp and squeal with pleasure. \n\nHer legs began to shake as they draped delicately over his shoulders and wanting to hear and feel her cry out in an orgasm that rocked her, he delved a finger from his other hand into the free flowing cunt juices and pushed it against the tight dark star of her ass. He could hear her hot whimpers escape her clenched lips, and she lifted her hips from the floor, fucking up against his mouth as he sucked hard on her clit nibbling lightly at it.\n\n\"Oh God, Oh, God... Dante...\" She continued the last syllable in a long squealing sigh as her body arched up, and she came. Dante drank in the sweet flowing cum that oozed from her. She had the sweetest cunt he had ever tasted, but then he had only eaten one other in his lifetime. He'd never found much enjoyment in it before but as she cried out his name he knew this would become a regular part of their scenes. He loved making her come so hard she screamed out his name and his cock hardened fully at that moment.\n\nHe crawled up her body to kiss her, his erect cock digging into her side. \"You,\" he murmured nuzzling her ear, \"You are fucking incredible.\" Then he bent his head to kiss and nuzzle her breasts, once again lamenting the lack of milk in them. Rolling to his back, he pulled her with him, her body still trembling from the after effects of her orgasm as he positioned her to sit on his cock.\n\nPeri leaned forward and stroked his cheek with a delicate hand, \"It's you who is incredible,\" she whispered as she sank down on his cock. \n\nHe groaned and slapped her ass as she rolled her hips and ground down into his pelvis. \"Fuck me,\" he growled and slapped her ass again leaving a wide red handprint. His hands went to her breasts, and he mauled them roughly between pinching and twisting her nipples making her elicit the sounds that made him need to dominate her even more. Pulling her forward by the nipples to lie on his chest he rolled with her and reared up on his arms above her. He pulled her legs up one by one bending them at the knees and pushing them wide, then he began to drive his cock into her with force.\n\nHe was a man possessed. Since his fantasies became real on the yacht, all he had wanted to do since arriving home last night was to fuck her brains out again before reality resurfaced to pull them apart for yet another day. The call he had just received flared in his brain and knew times like this would become a rare occurrence over the next few weeks if not months.\n\nPeri began bucking up against him as he pounded into her needing her to feel his strength and power. He felt her tremble beneath him, her thighs locking to his hips and her hands run down his back, \"Come! Come with me!\" He groaned loudly.\n\nHe exploded within her as she stiffened and let out her cry of pleasure. He kept up momentum until he was sure she was done and then collapsed on top of her letting out a huge breath and releasing her legs. He rolled to his side and nuzzled at her breasts licking over the hard pink nipples as she stroked his hair.\n\n\"No rest for the wicked,\" he bit the soft underside of her breast lightly and stood to help her to stand on shaky legs. \"We'll have to shower again since you got me all hot and bothered,\" he grinned blaming her fully for his need to fuck her so completely.\n\n\"Mmhmm,\" she mumbled in a daze and let him lead her into the bathroom. Even without the pain the men she loved usually showered on her, Peri felt shattered by the intensity of Dante's need to possess her body and soul as he had fucked her.\n\nThey showered together, and he had helped her dress, constantly touching and kissing her. While Josh always remained in control even when being affectionate, Dante seemed to be able to slip out of that dominant role and show his need for her and vulnerability to her. Their relationship was still so new, and she was constantly discovering more about him that made him so very different from Joshua despite their similarities.\n\n*****\n\nPeri walked into the private hospital feeling oddly uncomfortable. She had been a patient here last year around this time, and the memories of her painful healing and broken heart threatened to overwhelm her. She made it into the lobby gripping Dante's hand tightly making him look at her and murmur, \"What's wrong?\"\n\n\"Nothing I'll be fine. I'm here for Emily. Are you sure she didn't give any clue as to why she asked to see me?\" Peri whispered. \n\n\"No but Pete didn't say a great deal, I might have been distracted when he called,\" Dante admitted. They paused at the front desk and asked for Emily's room inquiring if her doctor or husband were there as well.\n\n\"It's nice to see you fully recovered, Miss Wells,\" the nurse behind reception said politely making Peri wonder if she should know the woman by name. \"If you'd like to take a seat the doctor has asked to speak with you before you see Mrs Donati,\" the nurse at the reception desk informed them and picked up the phone to inform the doctor of their arrival. \n\n\"Thank you,\" Dante said abruptly. Peri had felt Dante stiffen as the nurse spoke to her directly and they turned to sit in the comfortable waiting area. \"You were here?\" He asked in a low voice. \n\n\"Yes, for a couple of weeks before they let me attend the trial,\" Peri admitted unconsciously tightening her grip on his hand. \"Pete arranged it when I returned from Canberra.\"\n\nDante was torn, he wanted nothing more than to protect her from what must be frightening memories but he also knew that this was the first time Emily had roused from her self-imposed stupor and asked for any family member. Despite visits from Ben every day she still wouldn't acknowledge him or even look at him. Pete and Ben walked into the lobby a moment before the doctor.",
        "\"Mrs. Donati,\" he greeted her after the introductions were made. \"Would you come with me please?\" \n\n\"Oh, of course,\" she stood, and Dante stood beside her. \"Just Mrs. Donati, thank you, gentlemen.\"\n\n\"No,\" Dante said with a finality in his voice. \"I go with her or she goes home. I won't interfere, but I won't leave her alone in this place again.\"\n\n\"Again?\" he queried.\n\n\"She was a patient herself last year, and is struggling with the memory of it,\" Dante informed the doctor. \"So you can either let me observe, or we can leave.\" He wrapped an arm around her waist protectively and watched the doctor carefully as he took in the information. \n\n\"Follow me,\" the doctor said after looking at Dante speculatively for several moments.\n\n\"If he's observing, I am,\" Ben murmured to Pete getting to his feet, who shrugged and stood as well. \n\n\"Just hang back a little,\" Pete said. It hadn't occurred to him that Peri would still be so affected by the time she had spent here, and he became concerned for her as well. He couldn't be sure of Emily's reaction if Peri arrived with Ben and himself as well as Dante.\n\nPeri followed the doctor down a long corridor and felt an ominous sensation that something wasn't quite right. \"Just a second,\" she said louder than she had meant to and stopped walking. She turned as if to leave and walked back a few steps making Dante frown. She saw Pete and Ben at the other end of the corridor and took a deep breath. She was surrounded by people who loved her, and she couldn't work out why she had this bad feeling that made her want to run from the doctor she followed.\n\n\"Pete, did you hear Emily ask for me?\" she asked in a whisper. \"I mean I wouldn't have thought she would have asked for me. Wouldn't she have asked for Carmen if anyone? It just feels wrong somehow, especially if she isn't speaking to Ben, yet.\" She peeked over her shoulder at the doctor who seemed increasingly agitated and the ominous black cloud hanging over her worsened.\n\n\"No, I got the call from the hospital and called you. I was at my practice this morning,\" Pete said with a frown.\n\n\"Gentlemen I am going to have to ask you to wait in the lobby,\" the doctor said authoritatively from where he stood a few feet away.\n\n\"I can't explain why it feels wrong. I want to see Emily and make sure she is alright here and help her with whatever she needs. I just feel something's not right, and I can't shake that feeling,\" she took a deep breath and felt Dante's arm circling her waist again. \"Do you think you could bring her out to the lobby? In a wheelchair or something?\" her voice had become high-pitched and strained as she spoke. \"I'd do anything to help you and Emily, Ben. Honestly but,\" she looked over her shoulder nervously, \"Nothing about this feels right and I can't go in there, I'm so sorry.\"\n\n\"He doesn't seem happy to see us here, that's for sure,\" Ben said looking at Pete. \"Do you know that doctor?\"\n\n\"No, Dixon is at his practise in the mornings, too,\" Pete mused thoughtfully. \"It's okay, Peri. Ben and I will go and get Emily. D. can take you back to the lobby,\" Pete reassured her sensing the seriousness of her anxiety.\n\n\"Mrs. Donati this way please,\" the doctor called testily.\n\n\"Change of plans, my friend,\" Pete said stepping forward. \"I'm Doctor Peter Donati, the family physician. I'd like to examine my patient before she meets with Mrs. Donati,\" he said easily. \"I'm sure you are aware this is a stressful time for us all, and it is best to ensure no further damage is done to Emily's psyche. I'm sure Doctor Dixon has been quite thorough in his notes on this.\" Pete said naming the attending specialist whose care Emily was under.\n\n\"I'm under instructions that the only visitor today should be Mrs. Peri Donati,\" the doctor argued. \n\n\"Instructions from whom? I think you will find that I am one of the attending physicians listed on her chart and as such you have no authority to keep me from my patient,\" Pete had drawn himself to his full height and Ben stood behind his left shoulder. The two men made an intimidating sight as they stood blocking the corridor and the doctor's view of Peri returning to the lobby.\n\n\"I'm being silly,\" Peri stopped walking and turned around again her emotions swinging widely. \n\n\"No, you're not. If it doesn't feel right then you shouldn't do it,\" Dante said sternly taking her hand and leading her toward the lobby. \"Always listen to your gut feeling,\" he said his mind working over the Doctors strange treatment of his family. Though it was not widely known, the Donati family owned his hospital. It had been started by his Grandfather and Uncle. A board and qualified professionals managed the day to day running of the facility, but it was reasonably well known who the founders if not the current owners were.\n\n\"Call Josh, tell him where we are and why. Then tell him how you're feeling,\" Dante's voice took on a commanding tone that made her do what he asked without arguing. It was unusual for her to hear that tone in his voice outside of the bedroom. He too picked up his phone and made a call as she called Josh.\n\n\"Hey there beautiful,\" Josh answered his phone on the second ring. \"I was just thinking of you. How's Emily?\" He asked. Peri was glad she didn't have to explain where she was and why and she felt better just hearing his voice.\n\n\"I don't know. Being back here has made me feel like something bad is going to happen, and the doctor was abrupt and seemed agitated that I wouldn't go with him by myself, but I just couldn't go with him to see her,\" she babbled nervously. \n\n\"You left without seeing her?\" Josh was immediately alert to her distress.\n\n\"No I'm sitting in the lobby with Dante, I asked if she could come out of the room to see me. I couldn't go in there, Josh. I feel so silly and scared and just plain awful about it,\" Peri's voice held all her anxiety. \"I couldn't go in that room even with Dante.\"\n\n\"You did the right thing,\" Josh said in an even tone that belied his concern on hearing her obvious distress. \"Can I talk to D.?\"\n\n\"He's calling someone else,\" she said looking at Dante. \"He asked me to call you and tell you how I was feeling.\"\n\n\"I'm just getting into my car to drive over, I'm putting you on hands-free, keep talking to me,\" he explained as his voice became hollow and she heard her voice feedback from the speakers. \"Is Pete there or Ben?\"\n\n\"Both, they went to get Emily and bring her out to the lobby,\" Peri explained. \"It's probably just that the last time I was here, I was in so much pain,\" she said quietly without elaborating that it wasn't only the physical pain she suffered from at the time.\n\n\"I understand,\" Josh said simply. \"We couldn't have known it would affect you so strongly. I'm sorry I didn't consider that when D. told me that you were going to see Emily.\"\n\n\"I'm just being silly,\" she argued again. \"You have nothing to be sorry for it's me who is sorry to be making a big deal out of this when Emily asked to see me. I just feel all sorts of awful right now.\"\n\nPete emerged with Emily in a wheelchair. Ben, looking like he could murder someone, was close behind them. Peri saw Emily's face blanche as she caught sight of Dante and she lowered her head as if unable to bear the sight of him.\n\n\"Josh, Emily's here. Ben doesn't look happy I'll pass my phone to him while I talk to her okay?\" she said getting to her feet.\n\n\"Yeah Alright, I'm still a good thirty minutes away, stay in sight of D.,\" he commanded.\n\nShe walked to Ben and handed him her phone, \"It's for you,\" she smiled in the face of his obvious anger. She went to Emily then. \"Did you ask to speak to me?\" she questioned. She watched as Emily nodded but her eyes darted around the room, and a worried expression came over her face. \"Would you rather if Ben and Dante waited somewhere else?\" Again Emily nodded. \n\n\"Pete, could you ask Dante to have Gerrard and Phillip come into the lobby and maybe the three of you could take a small walk?\" She asked knowing they would not be happy to leave the women on their own. She turned back to Emily then. \"Let's go over to the couches in the corner, we'll be safe there, and they might give us some space,\" Peri said in a conspiratorial whisper. Emily gave a small nod and Peri pushed her to the corner and sat on a couch in front of the wheelchair, keeping Emily's back to the room. Emily glanced over her shoulder and saw the men watching from a small distance and seemed satisfied.\n\n\"I'm sorry for making you come out here. I was in this hospital myself after Nik attacked me,\" Peri said honestly. \"I'm surprised you asked to see me and not Carmen,\" she blurted nervously.\n\n\"Carmen's being punished for my mistakes,\" Emily said sadly. \"She's with the Battaglia.\"\n\n\"She's there because of the mistakes she made, not you,\" Peri said gently. \n\n\"I don't want to be sent there,\" Emily looked frightened. \"Don' let Ben send me there please, Peri. You're the mother you can ask them not to send me there.\"\n\n\"No one is going to send you there. It's two very different things. You were caught up in something, not of your making, and you were scared. No one blames you, Emily. Carmen wasn't being threatened or coerced, yet she still didn't say anything instead she tried to take matters into her own hands. That's why she is there.\" Peri explained without pulling any punches. \"Carmen and I talked before she left and she understood that. She and I made peace and even started trusting each other. She accepted the punishment even though she was scared. She will be back next weekend, and you can see her and make sure she is just the same as always.\"\n\n\"She was always braver than I was. Peri I don't want to be here. I want to be home with the children. Can I live with the nanny as my punishment? I don't want to be sent away to the Battaglia, but I can't face Ben or Dante. Does he have to use that walking stick all the time now?\" She closed her eyes as if the thought of it caused her pain.\n\n\"No one wants to punish you Emily, least of all Dante. You've punished yourself enough. No one blames you,\" Peri reiterated.\n\n\"I blame me,\" she said sadly. \"I betrayed them all, most of all Ben, because I didn't trust him enough to talk to him about what I had done,\" she began to cry, and Peri reached out to take her hand. \n\n\"Emily, Ben's lost without you. Angelina has asked me about her orientation day and school supplies for the other children, but I'm just grasping at straws. Come home with us, talk to Ben, he loves you. You can stay with us as long as you need to, you can have your own room until you are ready to face everyone, you don't have to stay with the nannies.\"\n\n\"You'd let me do that?\" Emily asked and there was a tone in her voice that bordered on incredulous but was tinged with something that Peri couldn't quite put her finger on. The ominous black cloud over the her seemed to darken. Maybe Emily also felt uncomfortable in his hospital with that doctor, she thought.\n\n\"We were thinking about taking the children to the house so they could have a few days of fun in the sun before school goes back, and it will allow Carmen and Romey a few days of alone time once she returns if they like,\" Peri said. \"Come with us Emily. You might find that being away from the city and everything that's happened, you can put it behind you and talk to Ben about the future. Not to mention helping me with all the back to school plans for everyone. It will be nice to have you there when Carmen returns.\" Less than a month ago that was the last thing she would have wanted she realised.\n\n\"Do you think Ben would let me stay with you?\" she asked frowning. \n\n\"Josh can handle Ben. He's on his way because I freaked out when I got here. That's why we are sitting in the lobby. I couldn't get as far as your room,\" Peri admitted. She told Emily of being here broken in body and spirit and how painful that was for her.\n\nHearing the reasons for Peri's reluctance to come to her room, Emily considered her sister-in-law's resilience. Peri owed her no loyalty or concern, yet here she was in the place of one of her worst memories because she had been asked. They talked quietly until Josh's arrival. He had ignored his brothers and walked directly to where Peri sat scooping her up in his arms and holding her tightly.\n\n\"Thanks for looking after her until I got here, Em,\" he said easily. \"This place holds some pretty bad memories for both of us.\"\n\n\"You were here too?\" Emily asked incredulously. She hadn't known hat piece of information.\n\n\"Every day and she refused to see me. Worst time of my life,\" he admitted hoping she could see the connection to what she was doing to Ben.\n\n\"I don't want to be here Josh,\" Emily began to cry again. \"I just can't face Ben, not after. . .\" she sobbed and couldn't finish the sentence.\n\n\"Come home with us then. The kids are there already, and Angie needs you,\" Josh spoke casually \"You'll have to face Ben some time, and it might be easier with the people who love you both around for support.\"\n\n\"Josh, I'm so sorry. I don't deserve your love, I got Nik killed, and Dante shot, and it could have been so much worse,\" the tears continued, and she appeared to be in distress now with loud sobs that sounded strange and almost hollow to Peri who was trying to comfort her.\n\n\"It wasn't though, and D.'s a fricken hero now,\" he rolled his eyes. \"As if he needed a bigger head.\" He looked up then at the approaching doctor. \"Take one more step and I will get that guy to give you a lobotomy through your nose,\" Josh threatened pointing at Gerrard. \"She's just fine, better than fine. Tell the doctor, Em,\" Josh encouraged.\n\n\"I'm fine honestly, these are cathartic tears,\" she dashed them away and gave a sad smile and the distress seemed to have evaporated as quickly as it had started. \"I would like to check myself out please, if you could ask Doctor Donati to sign the paperwork,\" Emily informed him, some authority entering her voice as if she spoke to an employee rather than her doctor.\n\n\"Can I please stay with nannies, just for a little while?\" she looked at Peri rather than Josh.\n\n\"I don't think that's a good idea for the nannies or you, Emily. How about a compromise and you can have your own room on the same floor as the family? I'm sure Josh will explain to Ben that you just need a little more time to be able to process what happened. Josh knows what that feels like,\" Peri said gently.\n\n\"Would you do that for me, Peri? He will listen to you, I know he will,\" Emily asked in a pleading voice, ignoring Josh almost entirely now.\n\n\"I think it would be better coming from Josh. He's been in Ben's place and he gave me the space I needed. At least for a little while,\" she smiled and touched his cheek. \"I thought I couldn't bear to see him again, but he loved me enough to be patient and kind and wait for me to be ready. Within reason, there were small lapses but the Donati men love deeply, and we are two of the luckiest women alive to be given that love,\" She smiled and clasped Emily's hand. \"We have to forgive them for not always being as willing to wait as we would like because of that love.\"\n\n\"Em, you want to discharge yourself?\" Pete asked softly as he approached them. \n\n\"Yes, Peri has said I can stay with her for a while, and Josh as agreed to let me. I don't want to be here, Pete, don't make me stay, please. I need to see my babies,\" she implored him.\n\n\"Ben signed you in Em, you need to talk to him, tell him you want to go home,\" Pete said gently but firmly. Emily looked in panic at Peri and clutched her hand. \n\n\"I'll go talk to him,\" Josh said and reluctantly pulled his arm from where it rested around Peri's waist.\n\nPeri could see an argument erupt between the doctor and Pete as Josh spoke to Ben who constantly looked at where the two women sat.\n\n\"Does everyone know? I'll never live this down. I'll have to resign from the charities I work with,\" Emily said sadly oblivious to what was happening behind her.\n\n\"Aside of Carmen and our husbands no one knows anything,\" Peri said remembering Emily's love of gossip. Home run for karma she thought to herself. \"I doubt any of us are about to confirm or deny any rumours going around.\" Peri said despite knowing that Emily would have spread the rumours herself had it been anyone else.\n\n\"Thank you,\" Emily said simply. She'd worked hard to have the perfect husband, the perfect family and the perfect life, and she had judged everyone else by that standard. She needed the world and the family to still see her through that same lens. She hated the thought of being judged in the same way she had judged others and would die if she thought her parents would ever find out how badly she had messed things up. Despite being married for over a decade, she still thought of herself as belonging to the Pellegrini family and table.\n\n*****\n\nIt had taken a fleet of minivans to move the family from the apartment to the house. It had gone particularly smoothly thanks to the organisation of Peri's core team of Rae, Zara, and Heather.\n\nOnce they had arrived and settled in Peri met with the Steward, Jackson, who would be a large part of her team when they were at the house. He oversaw the maintenance and the large army of landscapers who were working on the land surrounding the new house. She had spoken with him via Skype regarding their return and her plans for some fun for the children they would be bringing with them. He took her through the plans he had already started within the last two days.\n\n\"The beauty of working for the Donati family is that things can happen in a hurry if the sun is shining,\" Jackson chuckled. \"We have all the equipment to create the kitchen garden, but the children can do most of the work with Zara and a few of the gardeners. Tarsia and Paul sent a small team to start on the tree forts in the old orchard. The older children can help out there in a day or two, and I believe Carlo would like to see you about something he had planned for the weekend.\"\n\n\"That sounds wonderful, thank you, Jackson,\" Peri said with a smile. \"I know I have changed plans more than once in the last two days. I appreciate your flexibility.\"\n\n\"Your most welcome, Mrs. Donati,\" he replied with a smile to match her. \"In fact, I am looking forward to this coming weekend.\"\n\nPeri had walked through the house to find Emily, who as always was with at least one of her children. It was as if she wore them like a shield from unwanted conversations with Ben or any of his brothers. In stark contrast, she constantly sought out Peri to discuss preparations for the children's return to school and Angelina's orientation day at Fairmont. Peri was busy making plans of her own and her patience with having to hold Emily's hand was wearing thin. She needed to talk to her about breaking her silence with both Ben and Dante. She seemed able to speak to Josh but even when Dante was his most obnoxious self; she would ignore him and hurry away.\n\n\"All settled in?\" She asked finding Emily in the kitchen with Zara. \n\n\"A package arrived while you were meeting with the Steward. I hope you don't mind that I opened it, it was addressed to Mrs. Donati,\" Emily said sweetly. \"Antonia sent us a cookbook I can't wait to try out some of the recipes.\"\n\n\"Why would you think it was okay to open a package sent to me?\" Peri asked aghast.\n\n\"I didn't know it was for you,\" Emily said indignantly. \"It was addressed to Mrs. Donati,\" Emily said.\n\n\"Who knows you are here that would send you mail?\" Peri said trying to keep her voice even.\n\n\"Well, Antonia obviously,\" Emily said.\n\n\"Zara could you take that book into my desk in the library please, it is very old and sentimental to Mrs. Donati Senior and she has lent it to me as a favour not to keep. I will transcribe any recipes we may like to try,\" Peri kept her eyes on Emily the whole time. Emily had regained all her former confidence where the household staff and children were concerned including treating Peri as if she had no knowledge of how the family operated. It was time, Peri realised, to stop tip-toeing around the woman who used her as a shield when it came to her husband and his brothers. She waited until Zara hurried off after shooing the rest of the staff out of the kitchen.",
        "\"You knew very well that the package was for me. This isn't your home you are a guest here. Why would you open it?\" Peri asked in a voice much calmer than she felt. \"Not only open it but then take it upon yourself to use it as if it was your own, sent to you personally.\"\n\n\"I wasn't thinking, it was addressed to Mrs. Donati, that's my name,\" Emily whispered her rehearsed excuse staring at Peri as if she had grown to heads.\n\n\"That's a dreadful excuse, and you know it. Tell me what would happen if I did that in your home?\" Peri asked moving closer as Emily continued to stare at her. \"Does this mean I can start opening all your mail when it is delivered from your home to here?\" She asked he stupid question to make her point. \"I took you into my home, and I have been protecting you from the realities you haven't wanted to face for days, and you have taken my kindness and given nothing in return, not even the respect of being a guest in my home.\"\n\n\"I didn't realise you would be so bothered by me looking at the book. It was an easy mistake to make,\" Emily said again sounding less sure of herself.\n\n\"No, Emily it wasn't. You took my mail for yourself. It wasn't sent to us as you put it, it was sent to me under strict conditions which you had no knowledge of. I think we need to talk about the real reason you wanted to come and stay with me,\" Peri said. \"Do you think my kindness and acceptance of everyone here, including yourself make me weak. Did you think you could just come in here and take over my household and my life so you could avoid going home and facing Ben? Was all of the histrionics just an act to get out of any punishment for betraying your husband and his family? Did you only think me so weak-willed that I wouldn't mind?\"\n\n\"You don't know how the families work. Carmen told you that you need us. I am only helping you, Peri,\" Emily said as if talking to a simpleton. \"You're not capable of looking after a household this big let alone my family. Carmen said so,\" she said blaming her absent sister-in-law for her current behaviour.\n\n\"I see,\" Peri nodded. \"So helping me means you feel the need to treat me like a child or a staff member and take over the running of my home and invade my privacy? You honestly thought I would just let you because you have grown up within the families and knew better than me.\"\n\n\"I wouldn't have put it like that. It's obvious you are out of your depth, though,\" Emily answered. \"You should be thanking me, not scolding me. Someone needed to take control around here. You have no clue how to manage the house and children while being a good wife to your husband.\"\n\n\"Let's see about that, shall we? I certainly never endangered the family or betrayed them. I have never kept secrets from Josh or Dante because I was scared of the consequences. I would never have entered yours or anyone's home and treated them with the disregard you have shown me since returning from the hospital,\" Peri's voice lowered in anger. She knew it was just a book but it was the last straw in a large pile of straws, and she realised she had done both Emily and Ben a disservice protecting her from facing up to the consequences of what she had done.\n\n\"That's unfair of you Peri. You said that I was duped and didn't understand who I was talking to on those emails,\" Emily protested. \"You are the one who told everyone that I wouldn't have done it purposefully.\"\n\n\"Wouldn't you Emily? When you realised that you were being duped you tried to hide it rather than trusting Ben to help you and look after the family. Instead, you drew Carmen into the mess you created, and she is paying the penalty while you stand in my kitchen, commanding my staff and opening my personal mail as if it is your right,\" Peri let her anger show in her voice.\n\n\"I've apologised about the package. I didn't realise you would be so upset about it,\" Emily stated again. \"It was a simple mistake, and now I know.\" The haughtiness came back into her voice and Peri realised there wasn't an apology coming, not a sincere one.\n\n\"As much as I will miss the children, and the plans I have made for them will have to change. I think you and your family will be happier at the farm if you don't wish to return home with Ben,\" Peri said abruptly realising that Emily had no idea why she was so angry. It was more than the book, at that moment she just felt used by a manipulative woman who had no respect for her.\n\n\"You can't mean that, think of Ben, think of the children,\" Emily said finally realising just how upset Peri was with her and not understanding why. \"It was just a book Peri, You are being ridiculous!\"\n\n\"It isn't about the book, Emily. It's about how you treat my staff and me. You just told me that you thought I was incapable of running my household,\" Peri's voice rose. \"You have been using me to avoid the consequences of your actions, while the rest of us have to continue cleaning up the mess Nik, and you made. You need to talk to Ben today because I will be talking to Josh and Dante. I don't keep anything from them, even the unpleasant things.\"\n\n\"I can't,\" Emily began to cry.\n\n\"I would rather you contained yourself to your suite or the children's rooms until I have spoken to them about you going to the farm or home with Ben,\" Peri said too angry to be moved by the tears or even believe the tears were real. \"I'll call Pete for you if you feel another stupor coming on,\" Peri didn't hold back her anger.\n\nEmily fled to her room, and Peri stalked to the library. It was just a book, but it was so much more than that, and she knew she had to call Josh straight away before she lost her resolve. She saw the book sitting on her desk as she sat down and sighed. She knew she was going to sound petulant and whiny when she told Josh and Dante how the argument had erupted, but there was no point worrying about that now. She had told Emily she would be speaking to Josh and Dante, and she knew the sooner she did so, the better it would go.\n\nIt was eleven thirty and she hoped she wouldn't be disturbing anything important for Josh and Dante if she called now. Picking up her iPad, silently thanking Rae for unpacking her office equipment first, she used Skype to call Josh and Dante in a three-way conference call. They both answered immediately as she had hoped and she explained the argument that had just occurred and the ultimatum she had just given Emily.\n\n\"I confined her to her room or those of the children until she speaks to Ben or we do,\" she finished speaking and waited for the rebuke she knew was coming for over-reacting.\n\n\"I wanted to do that yesterday, but Josh convinced me to let you handle it,\" Dante said. She could hear the concern in his voice, and there seemed to be a lot of noise in the background of the skype call.\n\n\"It's time to make Emily face the music whether she likes it not. If she tries that that whole hysterical stupor thing again I will suggest the Battaglia facility as the hospital,\" Josh said in a hard voice. \"I agree with Peri. It's all been a bit of a game for a spoilt woman not to have to be held accountable for the things she's done. Biting the hand that fed and protected her, however, was a mistake she won't live down in a hurry. Even if we don't have all the proof we need to confront her.\"\n\n\"We'll be home as soon as we can, you did the right thing,\" Dante reassured her. Both men ended the call with words of love and Peri was left sitting and staring at her iPad. Wondering what had just happened. She had been ready for recriminations or a talk about over-reacting. Not the totally agreement she had received. The more she thought about it the more she got the impression that they were talking about something different, something bigger. \n\nWhat proof were they talking about? She had confessed to them about the emails. Peri immediately felt guilt and sadness over how Josh and Dane had reacted to her argument with Emily. It was just a book, and she had provoked her, but the woman had managed to make her angrier in two days than anyone ever had in her lifetime. Emily had treated her like a servant at best ordering her to change all of her plans time and time again without even an iota of consideration for the people who had worked long and hard on them. She felt her anger rise again and took a calming breath. It wasn't like her to get angry, and she wondered why this woman seemed to be able to press her buttons so easily.\n\nShe heard men's voices enter the house, and she wondered how the men she loved had managed to get here so quickly. She only just hung up the phone minutes ago. Confused she walked out into the entryway and saw CJ and Carlo striding through the house toward the guest suites asking questions of Rae and Jackson who had seen their approach and met them at the door. \n\n\"Carlo? What are you doing here?\" Peri called after him.\n\n\"Today I am a plumber's apprentice,\" he grinned. \"Nothing to worry about, I'll fill you in once we're done.\"\n\n\"CJ is a plumber?\" she asked her confusion deepening. \"In a manner of speaking. I'll be back after we've dealt with it. I wanted to talk to you about plans for the weekend too,\" he smiled. \"Go check on the babies I'll come find you.\"\n\n\"Mrs. Donati, it would be best if you remained in the residential wing for the moment,\" Phillipe said quietly from behind her. \n\n\"No, I'm not going anywhere until someone tells me what's going on?\" Peri said her anger and confusion rising to make her belligerent. Phillipe didn't argue with her, he simply picked her up and moved her bodily to the small corridor that led to her bedroom suite and nursery and then stood in front of the closed door essentially trapping her in the area.\n\n\"I need to speak to Josh about how much authority he has given you and Gerrard. Speaking of which, where might he be?\" Peri asked icily.\n\n\"I've just done a sweep of the rooms, and you and the angels are quite safe in here,\" Gerrard came from behind her.\n\n\"This is my home, of course, I'm safe,\" Peri sighed swinging her head between them both. \"Care to tell me why I wouldn't be?\"\n\n\"Mrs. Donati, if the choice is between your anger and that of your husband, I am assuming you know how that will go,\" Phillipe spread his hands.\n\n\"Urgh!\" Peri yelled in frustration and stomped into the nursery to find Heather had bundled up the babies into one cot and was standing in front of it with a frightened looking Melanie like a human shield.\n\n\"Oh this is ridiculous,\" Peri wasn't frightened for a change, she was angry. She threw up her hands in frustration and fished her phone out of her pocket only to find there was no reception. \n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "family",
        "d/s relaionship",
        "hospital",
        "brothers",
        "submission",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-tables-ch-29"
}