{
    "title": "My Voyage of Submission Ch. 10",
    "pages": [
        "In this chapter, Joshua and his crew ransom a woman taken for ransom by Mahmoud. Before she's recovered, she's gang raped by her captors. Sahar steps up. This chapter contains oral, lesbian sex, regular sex, and non-consensual sex. There is no COVID-19 nor STD's to worry about in this story. My thanks to JohnnyGalt for his help.\n\nMy Voyage of Submission, Ch 10, Freetown\n\nLeo arrived with the Hofflers around one. James took their luggage to the cabin Master had set aside for them with two queen beds, one for them and one for Johanna after she was recovered. Leo also brought uniform styled clothes so everyone would look about the same. Hannah took possession of those so they could be given to everyone. He also had another package of clothes that Master took possession of. I didn't know what they were. Master and I took the Hofflers to the dining room so they could eat after their trip. Everyone had to go back to non-slave mode in deference to them.\n\nBoth Ben and Marian were on the heavy side, though both looked as though they'd lost weight recently and both had bags under their eyes from lack of sleep.\n\nAs soon as everyone was seated, Ben said, \"Mr. Greenbriar, thank you so much for helping us recover our daughter. We can't thank you enough.\"\n\n\"We haven't recovered her yet,\" Master replied. \"In fact, we've run into some issues you should be aware of.\"\n\nThey looked at each other worriedly. Were they going to get their daughter back or not?\n\n\"Please eat first and we can discuss some things.\"\n\n\"I don't think I could eat a bite if I'm not getting Johanna back,\" Marian said. \"Please tell us what's going on.\"\n\n\"Do you know why we flew you into Dakar instead of Monrovia?\"\n\n\"No, Congresswoman Ward said we had to change plans and not to talk about it with anyone,\" Ben replied.\n\n\"We believe the man or men who kidnapped your daughter were waiting in Monrovia, hoping to take this ship and capture more slaves. Through mischance, we've managed to free seven human trafficked women, taken from several different parts of the world, four of them from North Africa by Mahmoud, the man responsible for taking Johanna. Those four were brutally trained as sex slaves, then branded with a hot iron and sold to individuals in South America. Fatima, the first woman we've freed said sometimes, the women taken were ransomed back to their families if the family could pay more than they could be sold for. That appears to be the case with Johanna.\n\n\"At this point, we think someone at Interpol we've been sharing information with has been sharing that same information with Mahmoud. It appeared that some of his men were gathering in Monrovia. That's the reason we changed your location to Dakar. They know we have to make the exchange at Freetown, so there's no getting around going there without screwing up the exchange, but I'm taking steps to keep everyone safe and recover your daughter. Through the auspices of my wife, the US Navy has sent a destroyer down here to help, but if we start shooting, your daughter could very well be injured or killed.\"\n\n\"Was it a Geraldo Espinosa?\" Ben asked.\n\n\"He was one of the two we're concerned about, why?\"\n\n\"He called us and asked when we were scheduled to arrive in Monrovia.\"\n\n\"What did you tell him?\" Master looked worried.\n\n\"Congresswoman Ward told us to tell anyone who inquired, that we didn't know, the State Department was making all the arrangements.\"\n\n\"Good,\" Master said, breathing a sigh of relief. Might be why Leo didn't have any issues.\n\n\"We have to arrive by ten tomorrow morning, giving them a chance to put eyes on our ship. I'm reasonably sure they will know what you look like, so we'll let them get a peek at you, figure they're going to get paid. Before we get to Freetown, we're going to go to a war footing. Everyone on the ship has gone through firearms qualification and will be armed. We'll issue you ballistic armor similar to what soldiers wear. If you leave your cabin, I want you to put it on. My security guy, Edgar Reynolds, will show you how to wear it tomorrow morning. If by some nasty chance, shooting does start, one of my people will go with you to your cabin and lock themselves in with you to keep you safe.\n\n\"The other thing you should be aware of, is your daughter may have been severely mistreated, even though they agreed to ransom her. These are evil men and don't seem to have an ounce of kindness and compassion in their bodies. They try to impress on the young women they capture that they are totally helpless and nothing more than sex toys for their owners. I want you to speak to Beth and Fatima. Beth is working on her doctorate in psychology and Fatima was captured by this man and enslaved for eighteen months. They can discuss the problems your daughter might have experienced and may continue to face over the next few months.\"\n\nThe faces of both of them sank, their worst fears being realized. I felt so sorry for them. \"Please eat,\" I said. \"I know this is hard news, but you need to remain strong for Johanna. She'll need all the help you can give her. We'll talk after lunch. I should tell you the other young women we've freed are much stronger than I thought they'd be. I believe Johanna might surprise you.\"\n\n\"We've got medical staff on board,\" Master said, \"a former Navy Corpsman, now a Physician's Assistant and former Navy nurse. They will examine her and determine if she needs more medical assistance than we can provide. With the Navy helping us now, we may have a doctor available and they can fly her somewhere she could receive more help if needed.\"\n\nMarian started to cry and Ben didn't look very good himself.\n\n\"I'm so sorry,\" Master said. \"I know this isn't the news you hoped to hear, but better to hear it now so you can put a brave face on for your daughter.\"\n\nThey both picked at their food, eating perhaps half of it. When it looked like they couldn't eat anymore, Fatima and I took them back to their cabin. I said I wanted them to see what was done to Fatima, so they could be prepared.\n\n\"How bad is it going to be?\" Ben asked.\n\n\"I warn you this might be worse than your daughter's condition because Fatima's Owner liked to beat her. It helped him become sexually aroused. Many of the scars you see will be from him. Fatima would you please pull up your shirt and show them your back?\"\n\nFatima grasped the bottom of her shirt and turning, pulled it up to show them her back. They both gasped loudly when they saw it. She lowered her shirt.\n\n\"Show them your brand, Fatima.\"\n\nShe lowered her pants to her thighs and pulled aside the bottom of her panties over the lower buttock to show them her brand, then pulled everything back on, tucking everything back in. Both of them were crying openly now.\n\n\"They might not have branded Johanna. Fatima said they usually did it right before slaves were sold. Johanna isn't being sold, so she might have been spared this last indignity, but we don't know.\"\n\nWe sat on the opposite bed facing them. \"When Fatima was freed, she didn't feel free. She thought the brand identified her as a slave and she would remain a slave forever. That whoever saw it and recognized it as a slave brand could recapture her, punish her and return her to her owner or resell her to someone else. She was frightened of everyone and tried to do everything she was ordered to do, even contradictory orders. That was in mid-July, a bit over three weeks ago. It took her about a week to get her bearings, maybe a few days longer, but she no longer obeys any order she's given. She's improved to the point our Captain is training her to sail this ship. Fatima speaks Arabic and Spanish in addition to English, so she's helped with the other women we've recovered, helping them through the same ordeal. It will take a long time to recover fully from all they've been through, but no one will obey orders anymore which don't apply to free women.\" I sighed.\n\n\"Your daughter may require long term counseling. She will likely be emotionally scarred by her experiences in ways we don't even know. I would recommend a specialist who works with women who have suffered human trafficking. I can refer you to someone where you live who does specialize. It will be a little like your daughter was brainwashed. It's likely she'll suffer from PTSD episodes like soldiers sometimes do. I'll work with her as much as I can before you leave, though I warn you I'm not yet licensed to practice. I'm still working on my Ph.D., but I've worked with my college professor who was visiting me when we recovered all of these women so I understand the concepts.\"\n\nMarian asked Fatima, \"Do you think our daughter can recover if they've done similar things to her?\"\n\n\"She'll need help, yes. I have wished to commit suicide because I felt nothing would ever get better. I received a lot of help from the people on this ship. They've become like family to me. She already has a family, you. As Beth said, you'll have to be strong for her. She'll be frightened of everything, and it will help if you're not. Keep telling her everything will be all right if only she fights for it and does not sink into the pit she'll want to sink into. Anger helps, not anger at the world in general, but anger at those who did this to her. She needs to place the blame on someone, but it can't be herself. I sometimes would believe it was my own fault I was taken; that I'd been too pretty, or too flirty, or too friendly. The thing is, it doesn't make any difference what I'd done or even if I'd done anything.\n\n\"They broke into my hotel room in the middle of the night, killed my parents and took me. Do I blame my parents because they couldn't somehow protect me? Do I blame myself because they found me somehow attractive enough to take? Do I blame the hotel I stayed for not being safer? Do I blame the governments of the world who allow these atrocities to exist; blame God because there is such evil in some men's hearts? There are a million things or people to blame but it is wrong to blame anyone but those who harmed me. There was nothing anyone could have done. I was in the wrong place at the wrong time. There is no one to blame but evil men. They were evil people and evil people do evil things and life must go on. Your daughter will have to understand this. Good people still exist in this world. She will need to realize that.\"\n\n\"Thank you both,\" Ben said. \"This has been hard, I know. Your kindness is much appreciated. Please give us some time alone.\"\n\n\"Dinner will be at seven tonight. Someone will come to fetch you,\" I said.\n\nBefore we left. Fatima put her hands on the shoulders of each of them and squeezed. She returned to the bridge and I went back to my room. I hadn't had time to enter the survey results from the club at Buenos Aires, so set about doing that until supper.\n\nAround 1700, there was a timid knock on my door. \"Enter,\" I said.\n\nHibbah slowly came in the room. She said into her iPad, \"Your Master said I could see you here.\" She hit the respond microphone.\n\n\"What can I do for you, Hibbah?\"\n\nHibbah fumbled a bit for her next words. \"Please, the others say they enjoy you very much. I would enjoy if you...\" She stopped, unable to continue, looking at the floor, flustered and confused.\n\nShe glanced at me and I waved her to come closer. She slowly approached and I took her iPad and pushed the microphone button. \"If I would have sex with you?\"\n\nHibbah nodded quickly when the words came out.\n\n\"I would be willing to have sex with you, but may we talk first?\"\n\nShe nodded again. I stood up from my desk, took her hand and led her to the bed and sat down, inviting her to sit beside me.\n\nI spoke and had my words translated. \"Sahar told me that you might wish a woman more than a man, but you thought it was sinful for two women to be together. Have you changed your mind?\"\n\nShe shook her head. \"I know it's a sin, but I cannot be with a man anymore. I have no love for men. Any love for a man has been burned from my heart. I cannot stand their touch any longer.\"\n\n\"I understand. You still wish for an intimate connection with another human, but cannot love a man. What was done to you might make many women feel that way. I myself do not consider love between two women to be a sin, so I will not feel guilt if we do. Do you not think you will feel guilty if we do this? Will you be able to live with the guilt? I don't want more bad things to happen to you, Hibbah. I do not want you to hate yourself if you do something you believe to be a sin. Self hatred is a bad thing, it eats at us on the inside.\"\n\n\"What can I do? It is terrible. My owner forced me to have sex and even though I hated it, I enjoyed it. Is it wrong to want to enjoy something?\"\n\n\"I don't think so, Hibbah, but you do. That is your dilemma. You believe in the sin, yet want to experience it anyway. I would enjoy sex with you. I really would. I would love to make you feel good, to take away some of the pain you've been given. But feeling good physically, may harm you spiritually and emotionally. Did Sahar tell you what I think about the sin of women loving each other?\"\n\n\"She said you believe Allah made you the way you were and you only follow the nature Allah created in you, thus commit no sin.\"\n\n\"That is correct. But other people believe differently. You believe differently. I would not wish on you a loveless life. There is much joy in loving another person, but you must be sure in here,\" I touched her chest over her heart, \"you will not suffer from the sin. It is possible, you could meet some of the needs you feel with a close friendship with another person. To laugh, and talk, and share dreams and feelings with another. If you wish such a friend, I would be that friend, almost like a sister. We could share gentle touches, and friendly kisses and not stray into sin. That is one option. I would like to be that friend for you, and if, after much consideration, you want more, to have a lover and not just a friend, I would be that as well. All I ask is you are sure in your own heart what you want, and I will give you all I can. If in two days you still want me to love you, I will, gladly, risking even the anger of my Master because you are that important to me.\"\n\n\"He would be angry with you?\"\n\n\"Not generally. He sent you to me now, so he has no problem with the act of love, perhaps only the timing. He gets to decide when I have sex, even if he doesn't care who I have sex with. But even if it were not a time he would choose, I would give you what you need in two days time. He would not hurt me more than a little and such little would be nothing to me to help you. I suspect he would not care at all, but it is always his choice. Do you understand?\"\n\n\"I think so.\"\n\n\"I will spend much time with you over the next two days. We will talk, we will laugh. We will hide in my room together when Mahmoud comes. We will practice your English and talk about life and love and happiness. You will think about what you want and how it will make you feel. At dinner time, in two days, you may tell me what you want from me and I shall give it to you. This I promise to you, sister to sister. Is this agreeable to you?\"\n\n\"Yes, Beth; thank you.\"\n\nI gave her a gentle kiss on her forehead, each of her cheeks, then her lips, feeling them quiver under mine.\n\n\"Sit with me at dinner. With Johanna's parents joining us, Master can not ask me to sit on his lap and feed me. I shall have to feed myself. I'm unsure I still know how. Perhaps you'll have to remind me.\"\n\nHibbah smiled. I began to ask her about her life as a child. We talked until it was time for me to get the Hoffler's from their room. I took her hand and we went to get them.\n\nAfter I knocked and they opened the door, I said after setting up her translation app, \"This is my friend, Hibbah, who was taken from South Sudan by Mahmoud's men. Hibbah, this is Ben and Marian Hoffler, the parents of the woman we wish to ransom the day after tomorrow. You will see Hibbah is carrying an iPad around. It is her means to communicate as she only knows her native language and Portuguese as she was sold in Brazil. If you press this button here, anything you say will be translated to Portuguese, and anything she says back will be spoken in English. She's wearing ear buds so we don't hear all the different languages being spoken. She understands what your daughter might have gone through and can talk about how it's affected her. Feel free to ask. She has a very good heart and would be happy to help.\"\n\n\"Thank you, Hibbah,\" Marian said. \"You poor, poor child. I can't imagine what was done to you.\" She gave her a big American hug. Hibbah flinched a little.\n\n\"She's not used to the friendliness of Americans. On the whole, only family members may touch Muslim women. It's probably best if you don't hug her; at least unless she initiates it. I suspect her former slavery also makes her uncomfortable with the affections of others.\"\n\n\"Oh, I'm so sorry. You're right. Foolish me.\"\n\nI pressed the microphone. \"Marian is not yet familiar with your customs, Hibbah. She's sorry she hugged you. She won't do it again until you hug her.\"\n\nHibbah nodded. She said something and \"I accept your apology,\" came out.\n\nAs we headed down to the dining room, I continued, \"Fatima spoke English, Spanish and Arabic when she was taken. The others are trying to learn English so we all have a common language. Sahar is the most advanced. She may speak haltingly to you in English, simple things. They each have a native language and the language of their owner. They needed to comprehend their owner's orders or they were punished. So four of them, sold in Brazil, speak Portuguese, and one sold in Argentina speaks Spanish. Sahar is from Oman and speaks Arabic. Ateefah is from Pakistan and speaks Urdu. Maahnoor is from Morocco and speaks Arabic, Farah is from Libya and speaks Arabic. She's the one who speaks Spanish. You'll meet everyone at dinner.\"\n\n\"I hope we remember everyone's name,\" Ben said.\n\n\"Don't worry. It's a little overwhelming at first. It took me a couple weeks before I knew everyone's name.\"\n\nWe arrived and Master had seats saved to his left. I sat on his right with Hibbah. The Captain was at the other end of the table. J\u00ecngyi, James, and Sherry were serving tonight, along with Reggie. Master introduced everybody. The crew was quite solicitous of the Hoffler's, telling them we'd be sure to get Johanna back. I sure hoped so. Master primarily talked to the Hoffler's. I talked quietly to Hibbah continuing our earlier conversation.\n\nAt one point, Master quietly asked, \"Did you and Hibbah...?\" Leaving the real question unasked.\n\n\"Not yet, sir. Hibbah is thinking about the nature of sin as it pertains to the topic under discussion. We thought it best she consider all options first.\"\n\n\"You seem friendlier than usual.\"\n\n\"Yes, sir. Perhaps she just needs a real close friend. She's trying to decide.\"\n\nHe smiled at me. After all, the Hofflers knew Congresswoman Ward was married to Master. Who knew what they would think of our extra-marital sex, so we had to keep it on the down low. Real life kept intruding on our fun. I might not get to sleep with him tonight, depending on how nosy they were. I wondered if Roberta and J\u00ecngyi would make room for me. I suppose it didn't make any difference who I roomed with, I wasn't allowed to cum much anyway.\n\nOf course, the Hofflers had to ask.\n\n\"You must get kind of lonely without your wife here, Joshua,\" Ben said. \"How do you get along without her?\"\n\nEdgar and Ethan couldn't help it. They chuckled. Master smiled and said. \"It is a burden, but I somehow manage.\"\n\n\"Your wife is a lovely woman, Joshua,\" Marian said. \"You're very lucky to have her.\"\n\n\"I'm very lucky to have all of the people in my life. I feel very fortunate. I hope to see her in a few weeks.\"",
        "\"Beth, where's your room?\" Ben asked, \"in case we want to ask you more about what our daughter must face?\"\n\nMaster sighed. I said, \"I share a cabin with Hibbah, Ben. She needed a good friend and I'm trying to be that friend.\"\n\nHibbah heard my statement through her ear buds and she started to say something in response and I laid a gentle kiss on her lips. \"It's okay, Hibbah. I know it's a sudden change, but it will be okay. I'll show you where later. Do you know what you're going to do this evening, Mr and Mrs. Hoffler? It's always nice to soak in the hot tub after a long trip. It really helps you unwind.\"\n\nI saw Hannah whispering something to Sahar and she said something in Portuguese to Maahnoor, who had been Hibbah's roommate. Room assignments were going to undergo a sudden change.\n\n\"We didn't think to bring swimsuits. We couldn't imagine having any time for relaxing. We're just here for our daughter,\" Marian said.\n\n\"I understand. We do have a spa on the top deck. If you wanted to go up there, Mr. Greenbriar could put it off limits to everyone for the evening. You wouldn't need any suits. It really would help you relax. It might help you sleep better tonight and you'll need a good nights sleep before meeting your daughter day after tomorrow. Perhaps a glass of wine to help relax you.\"\n\nThey looked at one another. \"It does sound wonderful, Ben. I am wound up and exhausted at the same time. I think it would be helpful.\"\n\n\"Thanks, we'll take you up on the offer,\" Ben said.\n\n\"When you're finished with dinner, Beth will show you up there, provide you with towels and robes,\" Master said.\n\n\"What is your job on the ship, Beth?\" Marian asked. \"Do they need a full time psychologist on the ship or do you have other talents?\"\n\n\"I work in guest relations and crew morale,\" I said, \"in addition to working on my doctoral thesis.\" Ethan and Edgar snickered again, and Leo couldn't help laughing some himself. Even Master smiled.\n\n\"Morale is very good among my crew,\" Master said. \"Beth is a big part of that.\"\n\n\"You do seem to operate like a well oiled machine,\" Ben said. \"And may I give my complements to the chef. This meal is fabulous.\"\n\n\"Thank you, sir,\" Pierre said. \"I don't think it was my best effort, but I appreciate it.\"\n\n\"You have an unusual accent. Where are you from?\"\n\n\"I'm French.\"\n\n\"I have an international crew,\" Master said, \"Ethan and Edgar over there are both British and the Captain is Norwegian. In fact, Bj\u00f6rn and Lynn just announced their engagement. They intend to get married on this cruise in Norway.\"\n\n\"How romantic,\" Marian said.\n\nThe talk for the remainder of the meal was more mundane. I squeezed Master's hand under the table on one side and Hibbah's on the other. Just ducky.\n\nAt the conclusion of the meal, I showed Ben and Marian where Hibbah's and now, my room, was located; on the opposite side of the ship and two doors farther aft. I left Hibbah there and got both of them guest robes and showed them up to the deck two spa. I got a bottle of wine and two glasses from the bar and left it with them plus a couple large towels. I told them they would be alone up here and went back to Master's cabin.\n\nI started packing some things, clothes for me from Master's closet and personal items like toothbrush, birth control pills and the like. Master came in while I was throwing my things together. He stared at me for a few minutes, a pained look on his face.\n\n\"I don't like it any better than you do, Master, but this is to protect Miranda.\"\n\n\"I know. It was fast thinking on your part, but I can't say I'm happy about it.\"\n\n\"The worst part of it, sir, is they're with us now until Casablanca, plus Johanna. It will be however the fuck long that is before we get there. We can't even head there until Johanna is aboard. My only consolation is I couldn't cum anyway.\"\n\n\"Do you want permission to cum with Hibbah?\"\n\n\"I'm not having sex with her, Master. Sahar told me Hibbah considers sex between women a sin. I asked her to wait a couple days and think about whether or not she can live with the sin before we do anything. I told her if she still wants to have sex after two days, I'd have sex with her. I was originally thinking I could bunk with Roberta and J\u00ecngyi, or Hannah and Ange, but I told Hibbah that as much as she might desire sex, she might just want a close friend, so if I'm going to be parted from you, I should make an effort to be that friend. The thing is, sir, you can't replace me with anyone else either. Fucking someone else instead of me doesn't do Miranda any good. How long has it been since you've spent a night without fucking a woman?\"\n\n\"Not since you came aboard.\"\n\n\"Looks like I'm not the only one going without, sir. Perhaps you can play with Miranda and stroke one off.\"\n\n\"It's not like I haven't had dry spells before.\" He pulled me close and held me while laying a gentle kiss on me.\n\n\"I don't regret saving a single woman, Master, but it's sure throwing a crimp in my sex life.\"\n\n\"You and the entire rest of the crew. In charge of crew morale indeed.\"\n\nI laughed. \"Sure sounded good though, didn't it?\"\n\n\"Damn straight, and not a lie either.\"\n\nI plastered myself against him for another kiss, a bit more torrid this time, then broke it off and grabbed my bag. \"I better explain to Hibbah why she's got a new roommate. I think she was about to spill the beans.\"\n\n\"I'll miss you,\" Master said.\n\n\"Not half as much as I'll miss you, sir.\"\n\n\"Don't be too sure.\"\n\n\"Master, I know you want me secure when the ransom is paid, but if you could, I'd like to witness it. Maybe a video feed to your cabin. It will not only give me some valuable information on Johanna's condition, and perhaps an advance warning if things go to shit.\"\n\n\"I can arrange that.\"\n\n\"Thank you, Master. I love you.\"\n\nOne last quick kiss and I was gone. I knocked on Hibbah's door when I got there. She opened the door and let me in.\n\nI took her iPad and told her, \"I need to tell you what happened.\"\n\n\"Yes?\"\n\n\"My Master is married to a very important woman in the Congress of the United States. Her name is Miranda, and she left the ship before you arrived. She knows about me and the other women Master has been with and approves, but it is an unconventional relationship she has with all of us. Just as Master shares me with the crew and your friends, she doesn't mind sharing him with other women. If this information became known off of this ship, it would hurt her, damage her place in the government, and she's the one working hard to save women such as yourself from involuntary slavery.\n\n\"Ben and Marian Hoffler do not know this and they can't know. When they asked which room I stayed in, I could not tell them I stayed with Master. I had to think of something else to tell them. I just told you I was going to be a good friend to you and thought this would be a good chance to get to know each other better.\"\n\n\"So it was not to have sex with me?\"\n\n\"Not yet, but I will have to stay with you until the Hoffler's leave the ship in Casablanca. So when you're sure you want to have sex, I'll be here for you.\"\n\n\"Your Master won't be mad at you?\"\n\n\"Not mad at all. He even thanks you for putting up with me for a few days. Why don't you show me where I can put my things.\"\n\nAfter I put my things away, we continued our pre-dinner conversation and I told her about myself, the loss of my parents, my Aunt Helen and going to school, plus we worked on her English. We stayed up until midnight.\n\n\"We should go to bed now,\" I said. \"Morning will come soon.\"\n\nShe nodded and I undressed down to bra and panties. Hibbah followed suit and we each got into our beds. I said good night and turned out the light. I was almost asleep when I felt her get into bed with me.\n\n\"Hibbah, what are you doing?\"\n\n\"Not sex, sleep. Please.\"\n\nWhy not. I moved over and felt her curl against me, her back to my front. I kissed the back of her neck and went to sleep.\n\n******\n\nWhen my watch alarm woke me in the morning, I stretched, jostling Hibbah, who also woke up, glancing shyly at me. I smiled at her, gave her a light kiss and got up. I let her shower first, then I showered and we took care of our other morning needs. She saw me take my birth control pill and asked if I was sick.\n\n\"No. Keep baby from growing,\" about half sign language.\n\nShe nodded, looking down at her own flat belly. I put on clean clothes and we went to eat followed by morning muster. After it was taken, Master turned the microphone over to Edgar.\n\n\"Listen up,\" Edgar said. \"Starting now, everyone goes armed. Put on your armor and nine MM. You can put a magazine in the firearm, but don't load one in the chamber unless we give an alert signal. Beginning at 0930, Henderson and Roberta will man the upper deck. We'll bring food to you up there. I want you looking at the hills and bluffs looking for signs of binoculars or scopes being aimed at us. Try to note their location and we'll have the Navy's eye in the sky give them a look see. Rafael and Thomas will be issuing rifles to those who can carry them immediately after muster beside the main spa. Try keeping it within arms reach at all times.\n\n\"Mr. and Mrs. Hoffler, you'll be coming with me to be fitted for your armor. We expect they'll be keeping an eye on us to see if you're aboard. Don't be afraid to move around the ship, but when you leave your cabin, wear your armor. We assume they want to get paid, so no bullets will fly until they do, but I prefer not to take chances.\"\n\n\"How much danger do you think we'll face?\" Ben asked.\n\n\"I think there's a ten percent chance bullets might fly, but only a one percent chance one of us will be hurt. We plan on having control of the situation. If rational minds prevail, we should do okay. I worry more about some new guy getting jumpy than I do about some full blown attack. Please, come with me.\"\n\nThey left and I went with many others to be issued one of the rifles. In addition to the rifle, I was given three, thirty round magazines, two of which went into pockets on the ballistic vest. The third was loaded into the magazine receiver.\n\n\"Don't cock the rifle until right before the exchange unless we get a pirate warning, Beth,\" Thomas said.\n\n\"Aye, aye, sir,\" I said. He smiled at me and sent me on my way, giving the next one to Hannah.\n\nWe returned to Hibbah's room and I placed my armor and rifle beside the door. Hibbah followed my example. I started working with her again, concentrating mostly on her English, but still trying to learn about her. At ten, I heard the anchor drop and the ship came to a halt. We were in Freetown, probably being spied upon.\n\nAround eleven, Hibbah said, \"You don't seem afraid, Beth.\"\n\n\"I'm not too afraid, just a tiny bit nervous, but I know everyone is doing everything they can to keep us safe. They have planned for almost anything.\"\n\nShe nodded. \"Would you promise me something?\"\n\n\"What?\"\n\n\"If it looks as if I will be taken slave again, please kill me.\"\n\n\"That's pretty drastic, Hibbah. It's permanent. If you get taken, we will come looking for you.\"\n\n\"If we're not all dead or captured, perhaps, but I would rather die than spend another day as a slave. Promise me.\"\n\nHow bad was it she would rather die than spend one day in the custody of Mahmoud's slavers. I didn't know if I could actually do such a thing, but I could put her mind at ease at least.\n\n\"If I'm positive you're being taken, I'll kill you, but only if I'm positive. They'll have to have their hands on you.\"\n\n\"Good. That makes me feel better.\"\n\n\"It doesn't make me feel any better at all. It would make me feel terribly sad.\"\n\nAt noon, we put on our armor and I took my rifle and went to the mess. We didn't have to leave the confines of the superstructure at all.\n\nMaster was eating with the Hoffler's and Edgar. Hibbah and I got our food and sat with them.\n\n\"How does it look out there?\" I asked. \"Any surprises so far?\"\n\n\"Only that they have a huge telescope aimed at us,\" Master said. \"Looks like an astronomical model. From that distance, they can probably count the fillings in our teeth. How are you doing, Hibbah?\"\n\n\"Very fine, sir.\"\n\n\"Very good, Hibbah. Your English is improving.\"\n\n\"Beth works with me. Good teacher.\"\n\n\"Beth is good at a lot of things,\" Master said, sending a smile my way. \"Everyone says so.\"\n\n\"Any sign of Johanna?\" I asked.\n\n\"Not yet,\" Edgar said. \"I wouldn't expect to see her until shortly before the exchange.\"\n\n\"Can we come to your room after lunch and talk some more?\" Marian asked.\n\n\"Of course. I'll make a stop on the way to get you some reading information and a referral. Where do you live?\"\n\n\"Colorado, near Denver.\"\n\n\"I'll see what I can find.\"\n\nAfter lunch, I had Hibbah take Mr. and Mrs. Hoffler to her room while I went to mine and printed out a couple of articles dealing with sexual slavery, PTSD in enslaved women and a list of psychologists and psychiatrists in the Denver area that focused on victims of sexual abuse.\n\nThey had apparently asked Hibbah to describe what had happened to her while she was in Mahmoud's possession and she was quietly recounting her story in Portuguese, being translated to English for the Hofflers and they were both struggling with the description. It was not pretty and I'd heard it before.\n\n\"Hibbah, please stop.\" She held her tongue. \"Ben, Marian, every one of those women can give you horrific stories of what happened to them. And they are horrible. Your daughter is being ransomed, and while I don't think she's been treated kindly, it may not be as bad as it was for these women. It might still be bad, but don't go into this expecting the worst, go into it hoping for the best. No matter what it was, you must face it bravely, for if you fall apart and go to pieces, who will Johanna have to hold her together.\n\n\"That is the fear we have with these other young women. Two of them are pregnant, with belief in a faith which frowns upon abortion, and a culture that looks upon what happened to them as a sin on their part; that they should have killed themselves before allowing themselves to be defiled. We don't know what the reaction of their families will be. Will they receive the love and support they need to get through this, or not, especially the pregnant ones. It's possible their families will cast them out as unclean and unfit for decent society.\n\n\"Hibbah has already asked me to kill her if there's any chance she would fall into their hands again. She'd rather die than spend another day in the power of these men. Hopefully, you will give Johanna something they aren't sure of, a loving home which will do the best they can to help her overcome and eventually deal with what happened to her. No matter what happened, you have to be the rock she can lean on. Don't fill your heads with all the what-ifs and might have beens. Don't blame her for her choice to help the less fortunate which put her in Ethiopia. It was an act of compassion on her part and she doesn't need her empathy torn down in recrimination and despair. Praise her for her desire to help those who need it and blame the men who took her.\n\n\"Here's a list of people who specialize in crimes of sexual abuse in the Denver area, and two articles dealing with the problems faced by women who've been trafficked, both short term and long term, including some disturbing after effects of their slavery, which can include drug or alcohol abuse, promiscuous behavior, difficulty in forming long term romantic relationships, and a host of other problems. Two of the women we've recovered want nothing more to do with men. They may never be able to love or trust a man again. Even one who may still be interested in forming a heterosexual relationship, is not ready to have sex with one at this time. It may be weeks before she's ready to be touched by a man. Each of you read an article, then pass it to your spouse and read the other one.\"\n\nThey started reading the articles. No more than a page into the first one, Marian said, \"These all happened in the United States. How is that possible?\"\n\n\"Human Trafficking is an international problem which exists in every country on the globe. These crimes exist everywhere; don't fool yourself into thinking we're too civilized for this. We theoretically have better police forces, more treatment for victims, better documentation of the problem and it's still huge. It's estimated more than twenty-five percent of the young women who enter this country illegally are destined for the sex trade. Eight out of ten women coming to the US from Central America are raped, often multiple times, and it doesn't stop once they cross the border. Every woman and girl ICE comes into contact with on the border is given a pregnancy test because so many have been raped. It is believed there are 9000 illegal massage parlors in the United States whose masseuses are human trafficked victims. Despite these women and even children being forced to commit these sex acts by their traffickers through coercion and physical beatings, the victims themselves are still arrested and prosecuted for the crimes they were forced to do. Young women, even in the US, particularly runaways and foster children, are often forced into the sex trade, estimated to be one out of every seven.\n\n\"We've found evidence of many more people who might be illegal slaves on this trip than the few we've been able to help. The auction house in Venezuela where Fatima was sold, was probably selling 50 to 100 people per auction by her estimate. Joshua believes there seem to be many more slaves than he might have expected considering what he thought the price should be. He believes that means the price must be dropping, which means the supply must be increasing. The problem is accelerating, not shrinking. Human trafficking is a 100 billion dollar a year business internationally as of 2016 which is when estimates were last made. It's why Congress has committees to study the problem and come up with solutions, which is how Representative Ward became involved. Your daughter was only one of thousands of young women who were snatched up by sex trafficking rings. The people who are doing much of the slaving we've discovered thus far are moving their slaves out of their countries where they don't know the language, have no one to turn to and without any documentation or paperwork at all.\"\n\n\"My God, I never believed the problem was this huge!\" Ben said.\n\n\"Be thankful your daughter might be coming home. If she'd been sold in Asia or South America, you might never have found her. You wouldn't have known where to look.\"\n\nThey continued to read, astounded by the problems their daughter might still face, even if they got her back. Both of them were crying again.\n\n\"Get it out now,\" I said. \"Cry your tears now, and get them out, because the only tears you'll want to cry from now on are tears of joy and happiness. Don't burden your daughter with your sadness. She'll have enough of her own.\"\n\nWhen they'd finished reading, Ben asked, \"Is that why you're with Hibbah? She doesn't want to be with a man anymore? You're her lover?\"\n\n\"For now, I'm only a friend. Lover may come later, but for Hibbah, sex with a woman is a sin. So she's unable to love a man and will go to hell for loving a woman, and is caught somewhere in between. She's trying to decide what she can live with and I'll help her if and when she's ready.\"\n\nI could tell Marian wanted to hug her again, maternal instincts kicking in, but she restrained herself. \"You poor, poor girls,\" she said, knowing she was speaking of her own child as well.\n\nThey left, tears still trailing down their faces, but I could tell they were beginning to steel themselves for the ordeal which lay ahead.\n\n\"Hibbah, I need to work on some things in my room. Would you like to come with me while I work?\"\n\n\"Yes, Beth.\"",
        "I didn't want to enter Master's cabin through his doors, so I went through the playroom. Hibbah stopped when she saw all of the things inside, beginning to shake inside. I took her iPad.\n\n\"Hibbah, remember yesterday before the Navy came, Master punished me after muster?\"\n\n\"Yes.\"\n\n\"You know I orgasmed when I was punished, don't you? That I was not punished harshly?\"\n\n\"Yes.\"\n\n\"To me, all of this...this stuff is like sex. I enjoy many orgasms here.\" I pulled down my pants to show Hibbah the stingray barb wounds still visible on my buttocks. \"The reason Master whipped me instead of using a paddle is because of these. The stingray barb broke my skin. Master refuses to strike me there until it is fully healed. I may stop this at any time, refuse to be his slave. I need continue only as long as I enjoy what I'm doing. Master will stop when I say. He asked my permission before he made these.\" I touched the wounds, still with a light scab over them. \"He wanted to get the barb away from Farah's owner so she wouldn't be punished with it anymore, so he pretended to enjoy it, but when Farah came, he gave it to her and let her throw it into the ocean. He paid a great deal of money for it so she could get rid of it. All of this is not intended to hurt me. It is another form of sex.\"\n\n\"Do you enjoy pain?\"\n\n\"Not the type of pain you refer to. Not the barb type of pain. I enjoy a teasing pain, one in which sex is involved. Pain like yesterday. It was not unpleasant, merely uncomfortable. I know you don't like this, Hibbah. Let's go.\"\n\nWe went into my room from there. I cranked up my computer to finish entering the survey results. I only had the one chair, but invited Hibbah to grab a pillow and sit beside me on the floor so we could talk as I worked.\n\n\"I am studying people such as myself. People who want to be in a relationship like mine to my Master. I gave a survey to many people like myself and Master in a club in Buenos Aires. I am entering the results of the survey into a data base and a matrix. It helps me identify characteristics and reasons why I am the way that I am, and others are like Master. It also helps me to predict who might be like myself or like Master. I would actually like to give it to you, but you don't read Portuguese.\"\n\n\"I don't know how to read any language. I never went to school.\"\n\nI got a marvelous idea. \"Would you like to learn to read and write English, since you are learning to speak it anyway?\"\n\n\"You have a teacher on board?\"\n\n\"Anyone who knows it can help you learn it, but this iPad you have; it is frequently given to children in school to help them learn to read and write. It can help you learn other things as well, almost anything you wish to learn. You just need the right program. May I see it for a moment?\"\n\nI went to the App Store and found some basic reading programs. She would have to start with her ABC's, and then go to basic reading lessons. I found a couple with high reviews. I downloaded them under my account name. I showed Hibbah how she could use a split screen so she could keep her translation program open while she used other programs, then I opened the ABC program.\n\n\"All words are made up of different combinations of 26 different letters in the English alphabet. This program teaches you the letters which make up the words. It is relatively easy to learn the letters, but to write, you need to learn to form the letters, which this will also do. You can write the letters on the screen and it will help you do it correctly.\"\n\n\"How do I write my name?\"\n\n\"I don't know the correct spelling in English, but the way it sounds is H, I, B, B, A, H.\" I wrote it on a piece of paper. Because your name is a proper noun, the first letter is capitalized, given more importance, so people know it is a name, and not a regular word. So the H at the beginning of your name looks like this,\" pointing out the capital H, \"and the last H is different, like this one.\" I pointed to the lower case H.\n\n\"My name is Elizabeth.\" I wrote that down, saying out the letters. \"You see the E at the beginning is big, the E back here is small. You will learn both ways to write all the letters. Now, my friends call me Beth, which is the shortening of the word for convenience, a nickname. ElizaBeth becomes Beth, stressing the Beth. \"When you write B for Beth, the B is different because it is now the first letter in my name.\"\n\nI handed it back to her. \"Play with the program. It will teach you how to say each letter and write each letter with a picture of an object that uses the letter in its name.\" I showed her the first one. \"Like A, as in apple. Big A, little a.\"\n\nEntranced, she began going through the program. It was good she had earbuds in or I would have gone crazy listening to her do her ABC's. At least she spoke them softly, almost under her breath. I went back to my work. As I finished up, I realized that many of the people who had been identified as submissive, didn't fit the profile as submissive. Either my survey was proving unreliable or .... Or they weren't submissive at all, but slaves.\n\nI got on the loudspeaker. \"Joshua Greenbriar, please call extension 69.\"\n\nA couple minutes later, my phone rang. \"What is it, Beth?\"\n\n\"Master, I noticed some funny things in the surveys I just downloaded from the club in Buenos Aires. Either my survey is now giving me entirely erroneous results, which I doubt because it has tended to predict everything we've seen thus far; or, it's identifying involuntary, human trafficked slaves, perhaps five or six of them, sir.\"\n\n\"Why not more?\" Master asked. \"We saw the Mandarin Chinese tattoo that seemed to indicate another slave trader. There were more tattoos than that.\"\n\n\"Perhaps they couldn't read Spanish, sir. Hibbah can't read or write Portuguese, nor even her own native tongue since she's had no schooling. If the women came from someplace else, they may not have been able to take the test, like Farah. Oliva had to read the questions to her. As far as I know, Farah was the only one we did that way and that was a ploy to get her away from her owner.\"\n\n\"Are you saying it's possible we might be able to identify trafficked slaves using your survey?\"\n\n\"Not everyone, but possibly, sir. Those serving as submissive sex slaves as opposed to just people in brothels, who may or may not be submissive anyway. Many prostitutes may be doing sex for money, a commercial enterprise as opposed to a Dominated relationship.\"\n\n\"Mmm. I'lll speak to Miranda about the possibility.\"\n\n\"I'd like to confirm it through testing first, sir.\"\n\n\"Have any of the freed slaves taken it?\n\n\"No, sir. But they'd need to read and write Portuguese, or have someone read them the questions. I'd butcher any attempt to speak Portuguese to them.\"\n\n\"Ask them through the translator app?\"\n\n\"It will be time consuming, sir.\"\n\n\"What else have you got to do.\"\n\n\"Yes, sir. I'll start with Hibbah.\"\n\nI set up the translation app on my iPad so I wouldn't have to take hers away from her and she could leave it on her ABC program.\n\n\"Hibbah. I want to ask you a lot of questions. Some of them may be embarrassing to you as they are very personal, about your life, including experiences with sex. I'm hoping to find out if this survey can help identify women held against their will. May I please ask you these questions?\"\n\n\"Can't you ask a woman if they are held against their will?\"\n\n\"If your owner was in the room when you were asked, and you didn't know if it would result in his arrest and your freedom, what would you answer if you thought it would make him angry?\"\n\nShe nodded. \"I'd lie.\"\n\n\"Using this, you could tell the truth and the owner wouldn't know we were asking if you were held against your will. To him, it would be sex questions, nothing more.\"\n\n\"I understand. I will answer.\"\n\nTaking the survey this way, having to read the questions, and all the possible answers and pick the best one, took four times longer than normal. Hibbah struggled with some of the questions, as they delved into all the unsavory things she'd been forced to do. If I asked her if she wanted to stop or pause, she insisted I continue so she wouldn't have to do it again. I think we had both cried some before it ended, but we got through it. I ran it through the matrix and it showed up like the anomalies from the club, and I knew she was involuntary.\n\n\"Thank you, Hibbah. I'm going to eat in here. Master doesn't want the men on shore to see me. We could eat in the mess, but I'm comfortable staying here with you. Would you like to eat with me?\"\n\n\"Okay.\"\n\nI called the galley and asked if someone could bring some food for Hibbah and me in my room.\n\n\"Your real room, or Hibbah's room?\" Reggie asked.\n\n\"We'd better make it Hibbah's room. What's on the menu tonight?\"\n\nHe told me and I conferred with Hibbah and we ordered. \"Fifteen minutes, and we'll be in Hibbah's cabin. Thanks, Reggie.\"\n\nWe packed stuff up and went back through the playroom to get to Hibbah's. \"Oops,\" I said, hustling to get out of sight.\n\n\"What is oops?\" Hibbah said, hurrying after me.\n\n\"Oops is a mistake. I'll tell you later.\"\n\nIn her room, I explained the only door out of the playroom is visible from the shore. Master didn't want me visible to Mahmoud's men. But I'd tried to avoid being seen leaving Master's room by Ben and Marian, instead making me visible to Mahmoud.\n\n\"They can see us this far?\"\n\n\"He has a big telescope. We probably look like we're standing beside him.\"\n\n\"So they saw me, too? They know I am on this ship?\"\n\n\"Possibly, yes., though we think they knew you were on the ship anyway. We reported you to the police. The only one they may not know about already is Farah. We did not tell the police about her.\"\n\n\"Remember your promise.\"\n\n\"I remember.\"\n\nA few minutes later Albert delivered the food. \"Thank you, Al.\"\n\n\"You're welcome. How are you doing, Hibbah?\"\n\n\"Fine, thank you.\"\n\n\"Good to see you again.\"\n\nHmmm. Seemed Albert was interested in Hibbah. Poor lad. Hard to make any headway with someone who didn't think she could be with a man anymore. He'd hardly looked at me.\n\n\"Joshua said he'd be by to see you later, Beth.\"\n\n\"Thanks again.\"\n\nAfter supper, I continued to work with Hibbah on her English. Master came to our room around 1900. He knocked and I told him to come in. I stood up to greet him with a hug and a kiss. He held me for half a minute squeezing me, his lips on my neck. He made sure we were doing better.\n\n\"I saw you came out of the playroom, Beth.\"\n\n\"Yes, sir. Trying to avoid coming out of your room. Realized what happened after.\"\n\n\"I'm unhappy.\"\n\n\"Yes, sir.\"\n\n\"How are things going with Hibbah?\"\n\n\"Very well, sir. Her English is improving quickly. Her survey results matched that of the anomalies from the club. When I get the chance, I'll do the others. Did you miss me last night, sir?\"\n\n\"What do you think?\"\n\nI smiled. \"That your cock was cold and lonely, sir.\"\n\nHe laughed. \"Very cold and lonely.\"\n\n\"I could give you some warm and wet, Master.\"\n\n\"What about Hibbah?\"\n\n\"Hibbah, May I fuck my Master in your presence, or would you prefer to leave for a short while?\"\n\n\"No difference to me.\"\n\n\"Are you sure, Hibbah?\" I asked.\n\n\"No difference.\"\n\n\"You may work on your alphabet on your bed, Hibbah.\"\n\nI removed my clothes, folding them and setting them aside, then Master's. I noticed Hibbah was watching, though surreptitiously, sneaking peeks. I couldn't tell if she was watching Master or me. Master wasn't yet hard, so I knelt at his feet and accepted his cock in my mouth. It was the work of a couple minutes before he was hard, his cock thick and veined.\n\n\"Would you have me on the bed or over the chair, sir?\"\n\n\"On the bed.\"\n\nI backed up until my legs touched the bunk, then lay back with my legs spread. I expected Master to fill me immediately, but he put his face in my core instead. I squeaked a bit, feeling his tongue run up my slit from rosebud to clit.\n\n\"May I cum, Master,\" I moaned, more than a bit frustrated from my lack of sex recently.\n\n\"I should continue to deny you pleasure, Beth, but I cannot. Perhaps it's what you said the other day, but if things do go awry and I should lose you, I would be lost. A hole as big as the world would open in my heart. As much as I care for the others, you are my heart, Beth. Feel free to cum as much as you like.\"\n\n\"Thank you, Master.\"\n\nHis tongue began to work his magic on me. In less than a minute, I was climaxing, Spasming, my legs began squeezing his head between my thighs.\n\n\"No,\" he ordered, \"keep them spread, wide.\"\n\n\"Yes, sir,\" I moaned, parting them again. Two of his fingers entered me, fucking hard, as he continued the slithering of his tongue against my molten folds. I was wet, dripping, and he gathered each drop of my nectar, almost slurping.\n\n\"Master, I'm going to cum again. You're driving me crazy with your mouth.\"\n\n\"Then cum.\"\n\nMy back arched, moaning, straining to keep my legs apart for him. He made me orgasm a third time before he planted his cock at the gateway to my womb and thrust hard, filling me with a single stroke.\n\n\"You feel so good in me, sir. I crave you with every fiber of my being.\"\n\nHe kissed me, then bent to suckle my puckered nipples, a rhythmic thrusting filling me over and over again. I surrendered a fourth time, my fingernails digging at his back, vibrating as waves of pleasure poured through me.\n\n\"Fuck me, Master, harder. I want you. I need you. Cum in me, sir.\"\n\nHe sped up, our flesh slapping together with every stroke. Minutes passed, the only sound our breathing and the wet, sucking sound of his cock pounding me. The pressure of another climax built with each plunge of his prick in my pussy. Finally, I let go, spasming over his shaft, clinging wetly to it with each stab of his sword. Moments later, he groaned and I felt him throbbing inside me, emptying himself as he reached his own ending.\n\nWhen his pulses ceased, he cleaned me off himself, lapping his own seeping seed from my pussy. Finished, he kissed me again and I tasted us on his lips.\n\n\"I can't stay, Beth. I need to go to bed early. I'll be getting up around 0330 to see where Mahmoud's men might be and what they're doing.\"\n\n\"Sir, I was wondering if I could see what's going on as well?\"\n\nHe considered my request. \"If you come up the port side of the ship, you should be able to come to the bridge without being seen. Be there about 0400. We'll have identified who's who by then.\"\n\n\"Thank you, sir.\"\n\n\"If you're getting up that early, you should get some sleep.\"\n\n\"Yes, sir.\"\n\n\"I'm sorry to have disturbed you, Hibbah.\"\n\n\"Okay, yes,\" she said.\n\nMaster left, taking our dirty dishes with him. I didn't bother putting on any clothing. It felt natural to be naked again and Hibbah had already seen me fucking. A little nudity shouldn't be too bad. I set my watch alarm and told her I was going to bed and to turn out the light soon. I pulled a sheet over myself, faced the wall and closed my eyes, Four minutes later, the light went out. There was the soft rustling of clothes and I felt a hand on my hip.\n\n\"Beth, please to sleep with you again,\" Hibbah whispered.\n\n\"Okay.\"\n\nHibbah lifted the sheet and slid in behind me. She was naked. I felt her kiss my neck as I'd done last night, put an arm around me, snuggling against me until I felt her firm breasts against my back.\n\n\"You love your Master?\" Voice soft against my neck.\n\n\"I really do, with all my heart.\"\n\n\"Is good to love.\"\n\n\"Very good.\"\n\nHer breathing slowed and we went to sleep.\n\n******\n\nMy alarm went off, vibrating against my wrist. I disentangled myself from Hibbah's arm and got up as carefully as I could, threw on the clothes I'd put aside when I fucked Master. I nearly forgot, almost tripping over my vest as I left, but grabbed it and took my rifle and went up to the bridge. There were men with rifles stationed on either side of the bridge, and from what I could see on the ship's cameras, one on the prow and one on the stern. They seemed to have something on their faces, which I realized were night vision goggles. Edgar, Ethan and Rafael were on the bridge which was dimly lit with red lights, with Master looking at a screen with a bunch of little reddish-yellow blurs on it, but marked with brighter triangles, a couple really bright yellow flares, some reddish blobs.\n\nThere seemed to be about two dozen green triangles, three dozen red triangles, and a yellow triangle. The green triangles weren't moving, or barely moving, the yellow triangle wasn't moving, but the red ones would occasionally move about.\n\n\"What are we looking at?\" I asked.\n\nEdgar answered, \"The drone is giving us infrared, an infrared signature of heat sources on the ground. The drone equipment can designate a heat source as human and put a track on it. When that heat source moves, the triangle moves with it, so we can keep track of people. We could attach names or other information to the triangle, but we don't know who anybody is at the moment. We know where all our people are at the moment, so Smitty and his boys are marked with green tags. They're sitting on the back side of those hills and bluffs we talked about when planning this thing. They're slowly creeping up on the eight red markers at the tops of the hills. Six of them are scattered pretty good on a few different high points. They should be their sentries, keeping an eye for any movement towards them from us. Due to their numbers, they're looking for some kind of mobile strike force in pick ups, trucks or whatever. The two together I suspect are the two on the telescope. They probably take turns looking through the bugger, watching us.\n\n\"The really bright flares of yellow are a couple fires they have burning. A piss poor idea because they're fucking up their night vision. I suspect they're not well trained, just brave enough to kidnap women and pull a trigger. The dull red spots here and here,\" he pointed at the display, \"are trucks and the engines are still warm, but cooling. They were more yellowish earlier. The four red guys on the outside of that loose conglomeration in the middle all moving about, are more sentries. That mess in the middle is the balance of his men, some sleeping, some eating, some getting ready to take over sentry duty.\"\n\nEdgar stopped explaining. \"What about the yellow triangle?\" I asked.\n\nHe coughed. \"We think that's Johanna.\"\n\n\"How would we know?\"\n\n\"Watch.\"\n\nThe yellow triangle always had three or four red ones around it. About every five to ten minutes, a red triangle would leave and another red triangle would replace it. There'd be indistinguishable movement, then another red one left and one replaced it. Suddenly, I realized what was happening.\n\n\"They're raping her, aren't they?\"\n\n\"Probably,\" Master admitted.\n\n\"How many?\"\n\n\"Maybe a third to a half so far,\" Edgar said. \"The drone was over the encampment at 0300. It had already started.\n\nThat poor, poor woman.\n\n\"The Navy is a little less reluctant to help than they were before. I think they'd like to blow that encampment to smithereens if Johanna wasn't in it, fuck if it's a foreign country. Right about now, she probably wishes they would.\"\n\n\"I'm glad her parents aren't here to see this,\" I said.\n\n\"Me too,\" Master replied. He turned away from the screen and held me. \"Is it wrong of me to be glad it's someone else and not someone I know?\"\n\n\"It's human.\"\n\nI couldn't watch any more. They all needed to die. I went back to Hibbah's cabin, tears already flowing down my cheeks. I stripped, climbed in behind her this time, and held her close, softly sobbing.\n\nShe turned, facing me and held me, confused. \"What is wrong, Beth?\"\n\n\"People can be total bastards. It's a wonder Allah hasn't burned us all in hellfire.\"\n\nShe pulled me close and kissed my cheek. \"I not know all you say, but I many times think same thing.\"",
        "Cry it out, Beth, I thought. You're going to need to be strong tomorrow too. I cried myself back to sleep, my face in her shoulder.\n\n******\n\n\"Time get up, Beth. Get up,\" was what I heard when Hibbah's shaking roused me.\n\n\"I'm awake,\" I said. \"What's going on?\"\n\n\"It late. Master come by, say get you up, come his room when dressed.\"\n\nHibbah was still behind me, still naked like last night. She looked good nude, but then, I supposed Mahmoud or his men looked for pretty women to turn into slaves. I stretched, working the kinks out, swung my legs over the side and stood up. I showered, Hibbah getting in the shower with me. We washed each other, not going the last tiny step, but soaping each other off. We both dressed, armed ourselves, and went to Master's room, entering from the port side, still the sea side.\n\nHe was on his phone and he held up his hand for silence when we came in. The conversation went on for a few minutes, sounding important and officious, before he ended the call.\n\n\"Any change from last night, sir?\" I asked.\n\n\"Only that it's no longer colored smudges, but living color, no. She's barely moved in a half hour. Might be passed out, half dead. We don't know.\"\n\n\"Master, her parents can't be at the exchange. They can't see her when she comes aboard. Not until she is seen by Manuel and Sherry and gets cleaned up.\"\n\n\"How do I stop them from seeing their daughter?\"\n\n\"You just do it, sir. Lock them in their room if you must. I'll speak to them, see if I can't make them understand. She'll need sedatives, maybe painkillers. This is not how she'd want her parents to see her.\"\n\n\"I've already spoken to Manuel and Sherry. They're prepared for almost anything. I've got the Porter staff and their helicopter on standby. We'll airlift her over to them if she needs more than we can provide. Edgar is setting up a camera and feed to this room. Eat your breakfast here.\"\n\n\"Yes, sir, as soon as I've talked to Ben and Marian.\"\n\nHe sighed. \"God, I hate this.\"\n\n\"What happened? Why you cry last night?\"\n\nI turned on my translation app, unsure if she could follow a complex conversation. \"Johanna was gang raped last night. It is still going on this morning.\"\n\nWhen she heard the translation, Hibbah asked, \"How you know this?\"\n\n\"The Navy has a drone flying over their camp. It can see in the dark and light. We could see it occur.\"\n\n\"You not stop?\"\n\n\"Not without Johanna getting hurt or killed, maybe others,\" Master said.\n\n\"Maybe she want die.\"\n\n\"But we couldn't ask her, Hibbah. We can't decide for her,\" I said. \"Sometimes, things get better than they are now. Do you still want to die?\"\n\n\"Only if they take me again.\"\n\n\"Maybe in six months, a year, Johanna would not want to be dead.\"\n\n\"Me come with, see parents.\"\n\nI nodded. \"I'll send Ethan with, in case they give you a hard time,\" Master said. \"When it's time for the exchange, load a round in the chamber, make it ready to fire, then put the rifle on safe.\"\n\n\"Yes, sir.\"\n\nHe called up to the bridge and Ethan came right down. \"Ethan, please go with these two when they talk to Johanna's parents. Beth is going to tell them to stay away from the exchange. Don't let them leave their room. Send them their breakfast and put a watch on them if need be.\"\n\n\"Aye, aye, sir. Hate sparing the extra man.\"\n\n\"Put Kelly on it. Probably best if it's a woman anyway.\"\n\n\"Yes, sir. I'll let her know.\" He made a call on his comm system.\n\nThe three of us went to the Hoffler's room and knocked. \"Just a minute,\" Marian called.\n\nWe waited, Kelly joining us as we waited. A couple minutes later, Marian opened the door. Hibbah immediately went in and hugged Marian, startling her. Then she hugged Ben.\n\n\"I thought she could only be touched by family,\" Marian whispered.\n\n\"I suppose you're family now.\" The family of all those who suffered from these men.\n\n\"I thought the exchange wasn't until ten,\" Ben said. \"Why are you here?\"\n\n\"I don't think you should be at the exchange, Mr. and Mrs. Hoffler. Remember I told you to get your tears out now and then be cheerful and happy to get your daughter back? I don't think you can be happy and cheerful this morning. You will be incensed and want to kill someone, and that is not what we need if we want to bring everyone home safely.\"\n\n\"Why? Has something happened?\"\n\n\"Something very bad. We think she's still alive, since that's the only way they'll get their money, but she was treated very harshly last night and this morning. We've got our medical staff standing by and we may have to take her to the USS Porter for transport to a medical facility. She wouldn't want you to see her in this condition.\"\n\n\"What condition? What happened? What aren't you telling us?\" Ben demanded.\n\n\"Imagine the worst thing that could happen to a young woman alone with vicious, evil men for a night and you'd probably be right.\"\n\nBen immediately began to rage as Marian started to cry. \"They said the would return her unharmed,\" he yelled, clenching his fists. Ethan and Kelly became more alert.\n\n\"This is the reason you can't be there. You'll want to kill somebody and who knows how many people will get hurt. Kelly will stay with you. If something goes wrong, she'll be here to protect you.\n\n\"I don't think these are the type of men who consider what they did as harming someone. They sell women as slaves. It went on most of the night and into the daylight. I can't imagine this is the way Johanna would want you to see her. We'd like to get her medical care immediately and get her cleaned up before you see her, perhaps sedate her a little, give her pain killers. As soon as we know she can see you, we'll bring you to sick bay.\"\n\nBen handed us a bag with bearer bonds in it. \"Don't give them a penny if she's dead.\"\n\n\"I don't think they'll survive if she's dead. Everyone is pissed as hell, Ben,\" Ethan said. \"Right now, everyone has an itchy trigger finger. This morning, Joshua talked to the President of Sierra Leone. Gave the country ten million dollars and showed him a video of what happened. As far as he's concerned, we've got permission to kill the lot of them without it being a diplomatic incident.\"\n\n\"You witnessed this?\"\n\n\"The Navy had a drone up so we could prepare for whatever could happen,\" Ethan replied. \"I saw parts of it. No one could watch all of it. We found out how big their force is, where they were located. As a result, we don't think they can throw any surprises at us and we can beat them if trouble breaks out, but not without losses, and that includes the loss of your daughter, which is our primary concern right now. If Johanna is dead, we can loose the dogs of war.\"\n\n\"Get my baby girl back. I just want her back,\" Marian said.\n\nThree of us left, Kelly remaining behind, Ethan taking the bearer bonds. I returned to Master's cabin, checked the feed, which seemed to be working well. Apparently, the exchange would take place in the stern room. We ordered breakfast and J\u00ecngyi brought it. She was geared up too.\n\n\"Joshua wanted me to stay with you two.\"\n\n\"Thank you. Glad to have you. Did you bring breakfast for yourself?\"\n\n\"I ate already, though I couldn't eat much. Too nervous, I guess.\"\n\n\"I am nervous,\" Hibbah said. \"If Beth dead, please kill me.\"\n\n\"What?\"\n\n\"Hibbah doesn't want to go back to those animals. She'd rather die. Don't kill her unless it looks as if she might be recaptured, not just if I'm dead.\"\n\n\"Shit, I'm not sure I could do it. It's one thing if people are shooting at you, but hell, Hibbah, I feel like you're a friend.\"\n\n\"You heard what they did to Johanna, right?\"\n\n\"Yeah, it's kind of why I'm here. Joshua felt three guns are better than two.\"\n\n\"Considering what happened to Johanna, dying might be a blessing.\"\n\nWe ate our food. I was on edge too, and picked at it after eating half. Finally, I pushed it aside.\n\n\"Let's work on your English some more, Hibbah. You're doing well.\"\n\nAt 0930, men started showing up in the stern room, all of the ex-special ops types, rifles, nine MM's, knives. The looked nasty, grease paint on their faces. J\u00ecngy said Art and Jake, the two mountainous ex-Marines, were at the top of the ladder from the stern room to the sundeck. Two sailors were with the Captain and Fatima on the bridge, ready to engage the engines. Leo, Manuel and Sherry were ready to go, to either take Johanna to sick bay or fly her directly to the Porter. Henderson and Roberta were on deck two with their sniper rifles zeroed in on the beach. Everyone else was stationed around the ship, with a couple watching the hallways near where the other women were behind locked doors. Suddenly, Sahar joined the group, walking beside Master. I don't know where she got the grease paint, but she looked as deadly as the special forces guys did, less the rifle as she hadn't qualified with it yet. She had her knife strapped to her side though.\n\n\"Are you sure you want to be here, Sahar?\" Master asked.\n\n\"Mahmoud not one who take me, but I would look on faces of dead men.\"\n\n\"You're not to start anything, Sahar. We're getting Johanna back.\"\n\n\"They die some day. I be there to watch, no lie.\"\n\nThat's my girl. I believed her.\n\nAt 0955, the mike picked up the sound of a boat motor and a couple minutes later, one came into view, with what looked like five men and no woman. Master looked pissed, but he didn't say anything. Hibbah and I put rounds in the chambers of our nine MM's and restowed them in the integrated holster. I loaded one on the rifle and put it on safe, keeping it close by. The boat came up to the back of the ship and Ethan tied it off. Two men stayed in the boat and three of them came up the short ladder to the stern room.\n\nThe first one up the ladder looked vicious, with a nasty scar on his face. The other two were smaller men but looked almost as disreputable.\n\n\"Man with mark on face, his name Abdul,\" Hibbah said. \"Bad like Mahmoud.\"\n\n\"Do you know the other two?\" J\u00ecngyi asked.\n\n\"Never see before.\"\n\nJingyi said in her comms, \"Scarred man named Abdul, Joshua. Hibbah recognized him.\"\n\nMaster nodded slightly.\n\n\"Ah, Joshua Greenbriar, rich and powerful man, buy white girl.\"\n\n\"Not buy, Abdul, ransom.\"\n\nAbdul seemed surprised Master knew his name, then he must have remembered we had some of Mahmoud's former slaves on board. He gave his version of a smile, and it wasn't pretty.\n\n\"Where's the money?\"\n\nMaster kicked at the bag from the Hofflers. \"Here. Where's the woman?\"\n\n\"Back on beach waiting for us to return with the money.\"\n\n\"No woman, no money.\"\n\n\"Joshua, we bring the girl, you can kill us all, keep the girl without paying. I'm not a foolish man.\"\n\n\"Yes, you are. Foolish and stupid. Roberta, telescope.\"\n\nA clear shot rang out, Abdul's men nervously went for their guns, then pulled their hands away when seven rifles were aimed at them.\n\n\"That was only the telescope. The next one could be a man.\"\n\n\"I have snipers too. Don't threaten me.\"\n\n\"No, you don't. You have no one.\"\n\n\"I have six snipers.\"\n\n\"You have none. Call them if you don't believe me.\"\n\nLooking at Master, Abdul picked up a handheld radio and said something in Arabic. A voice responded, \"Smitty here. The person you're calling is not at home presently. Leave a message and he'll get back to you.\"\n\nAbdul looked a lot less confident.\n\n\"Send those two back for the girl. If she's alive,\" Master said, \"you'll all get to live. If she's dead, you are too. I had a little chat with the President of Sierra Leone this morning, gave ten million to his country and explained our little situation and sent him footage of you and your men gang raping Miss Hoffler. He told me if she was dead, I could kill you and he'd use a bulldozer to dig a big hole and bury the lot of you in it. So bring the girl, get the money and I'll let you live.\"\n\n\"Why should I believe you? Why don't I just kill the girl and be done with it?\"\n\n\"Because no one's dead yet. Smitty, let Abdul talk to the man you're sitting on.\"\n\n\"Here you are.\" You heard a couple slaps in the background and Smitty saying, \"Wake up, fella. Your boss wants to talk to you.\"\n\nA man started speaking rapidly in Arabic. There was a brief conversation. The other four men heard the conversation and understood it. They looked more worried.\n\n\"Send them back for the girl, Abdul, and you will walk out of this.\"\n\n\"She's unconscious, had a rough night last night.\"\n\n\"We already know. The only reason you're not dead already is I'm a man of my word. On the other hand, the woman was supposed to be returned unharmed. That was the agreement. Don't test my patience, Abdul. I won't ask politely again.\"\n\nAbdul said something to the two still in the boat and they took off for shore at high speed. Nobody sat down, nobody relaxed. Master looked calm, but pissed. Sahar kept looking at the men, cocking her head from side to side and looking them over. It seemed to make Abdul nervous.\n\n\"What's she looking at?\"\n\nSahar said something to him in Arabic. Whatever it was didn't please him, but he didn't say anything afterward.\n\nFifteen minutes later the boat came speeding back. There was a woman in the boat, but she was slumped over to the side, limp, unconscious or dead. Her clothes had been ripped from her body and the tatters they'd tried dressing her with weren't enough to cover her decently.\n\n\"Buck, get her a blanket,\" Master said. \"Call Manuel out.\"\n\nPerry disappeared behind the camera, coming back with Manuel and a blanket. Manuel was geared up, but also had a medical bag. They went down to the boat where Manuel looked her over.\n\n\"She's alive, Joshua. Bad shape, but alive.\"\n\nHe gave her an injection and they wrapped her in the blanket, then Buck carried her up the stairs, Manuel trailing after. Leo brought out a gurney from behind the camera and Johanna was loaded on it, tied down and wheeled away. Master kicked the bag over to Abdul.\n\n\"You'd better hope we never cross paths again, Abdul. Get the fuck off my ship.\"\n\nAbdul picked up the bag and they got off, fast. When they were well away, Master asked. \"We get the GPS trackers on them, Smitty?\"\n\nWhatever Smitty said in return, I couldn't hear, but J\u00ecngyi might be on the same comm net.\n\n\"What did Smitty say?\"\n\n\"They put trackers on both the trucks and all of the unconscious men's clothes. Smitty is not particularly hopeful though. The trucks looked like they were hired locally and except for the bunch that came out to the ship, looked like they might be local talent as well except for the two on the telescope, so he's not sure if we're going to find Mahmoud this way either. We'd have had better luck if we could have gotten a tracker on Abdul. Joshua said there's also one in the money bag, so if they take that, we might still find out where he is.\"\n\n\"So Abdul was right. Master could have killed him. There was no reason for Master to let him live except he still wants to find out where Mahmoud is.\"\n\n\"None at all. Still worried about Johanna, but once she was on the boat headed for the ship, they could have taken all the rest out.\"\n\n\"I hope it works.\"\n\n\"I do too, and if they find it, I wish we could just bomb the place out of existence, but we can't.\"\n\n\"Because they probably have more women slaves there.\" Almost a question.\n\n\"Right. Women who would likely be hostages if anyone tried to attack.\"\n\n\"I need to check on Johanna,\" I said, \"maybe talk to her if she's awake.\"\n\n\"I'll go with you,\" J\u00ecngyi said.\"\n\n\"I also,\" Hibbah said.\n\nWe made our way to sick bay. Master was already there, checking on her. She didn't look good from what I could see. The blanket was covering her torso and legs, but she had various and sundry bruises on her arms and her cheek, dried cum in her hair and face. I could hear the anchor being hauled up and the engines starting, heading north, the direction we'd been facing. Johanna had an IV stuck in her arm giving her fluids.\n\n\"How is she doing?\" I asked.\n\n\"She's asleep for now,\" Manuel said. \"I gave her a morning after pill and a wide spectrum antibiotic. I want to get her cleaned up so her parents can come see her. Beth, can you help Sherry get her cleaned up?\"\n\n\"Of course. I wanted to stay in case she was awake anyway. Why did they have to rape her, Master?\"\n\n\"It might have been partly our fault for not doing as they expected. Smitty said he questioned one of the men. He said they'd all been promised women to fuck in Monrovia. Apparently we were right; they were planning on taking the ship there. When we didn't show up, they were pretty pissed about it. Not a very disciplined group and they were making noise about leaving, so Abdul gave Johanna to them. Is she going to need the medical help on the Porter?\"\n\n\"I don't think that's necessary unless she starts showing signs of major internal bleeding. She has abrasions vaginally and rectally and in her throat. X-rays were negative.\"\n\nHow long before her parents can see her.\"\n\n\"Give it a half hour,\" Manuel replied. \"We should have her washed and dressed by then and the sedative should be wearing off.\"\n\n\"I'll tell them,\" Master said.\n\nHibbah stayed to help and Sherry and us two amateurs carefully removed her torn and tattered clothing, gently washing her skin and hair. Some of the bruises were large and she'd moan if we had to touch them too hard. We got a hospital gown over the top of her and covered her with a blanket again before Master brought the Hofflers down. They rushed into sick bay where Hibbah hugged Mrs. Hoffler again.\n\n\"She not awake, but soon,\" she said. \"We wait with you.\"\n\n\"Mr. and Mrs. Hoffler,\" Master said, \"if you see Hannah later and give her your account information, she'll transfer funds equivalent to what you paid for your daughter's return, plus some more. I'm sorry for what happened and wish we could have done more.\"\n\nHe left before they had a chance to realize what Master had said or thank him.\n\n\"Why would he do that?\" Ben asked.\n\n\"You'll have to ask him, sir, but I have my suspicions,\" I replied.\n\nThey sat down on either side of her bed, each of them holding her hand. It was about five to ten minutes later when Johanna began to come out her drug induced sleep. As she started waking, she groaned. Realizing someone was clinging to her hands, Johanna tried yanking them away and started screaming.\n\n\"Let go of me. Leave me alone.\"\n\n\"Shh, Johanna,\" I said, smoothing her hair on her forehead. \"You're on an American ship now, and it's your parents holding your hand. You're headed home. Everything will be all right.\"\n\nShe cracked open an eye, saw she was in a hospital type setting, looked at her parents who'd leaped to their feet and were now bending over her. Tears started flowing down her cheeks, seeing them.\n\n\"Baby, are you all right?\" Marian asked.\n\n\"I hurt. I hurt all over.\"\n\nSherry stepped up and said, \"My name is Sherry and I'm a nurse. We didn't want to dose you with two many pain killers without asking you some questions first. Where do you hurt?\"\n\n\"All over. Mostly down there.\" She gestured to her groin.\n\n\"We know you have some bruises and abrasions; any significant pain anywhere else?\"\n\nYou could tell Johanna was doing a mental inventory of her pieces and parts. \"Some aches and pains everywhere,\" she replied.\n\n\"On a scale of one to ten with one being minor and ten agonizing, what level would you assign to your pain?\"\n\n\"A five or maybe a six.\"\n\n\"I'm going to give you a shot to knock it right down. In addition to your parents, the woman by your head is Beth Wilson. She's studying to be a psychologist, and if you need to talk to someone; she's your gal. The other person in the room is named Hibbah. She was a former slave, previously captured by the same people who held you. She'll understand what you went through, okay?\"\n\n\"All right.\"\n\nSherry put something to a hypodermic and added it to the IV. \"It should only take a few minutes for this to start working. Give me a shout out if you need anything. I'll let you speak to the others.\"",
        "She stepped out of the room.\n\n\"Hey, Jo, how are you doing?\" Ben asked.\n\n\"You know what happened, right?\"\n\n\"We know,\" Marian said.\n\n\"Then you can guess how I feel.\"\n\n\"I know it was bad,\" Ben said, \"worse than I can possibly imagine, baby, but you know you've got us on your side. No matter what, we've got your back. Anything you need, let us know.\"\n\n\"I need the last day to have never happened.\"\n\nBen and Marian's face sank and they looked at each other, Marian looking close to crying again.\n\nI said, \"Of course you do. No one should have to go through what you did, Johanna. We're doing our best to find the man who was responsible and bring him to justice.\"\n\n\"Who's we?\"\n\n\"The owner of this ship, Joshua Greenbriar, his wife, Representative Miranda Ward, ranking Republican on the House Select Committee on Human Trafficking and everyone else on board. During this cruise, we've run across three other people besides Hibbah who were kidnapped by Mahmoud, plus two others taken from Oman and Pakistan, and one from Bolivia. We've managed to free them and we're trying to narrow down Mahmoud's location, so he can be shut down permanently. They really do understand exactly what you went through, though for them, the ordeal lasted for twelve months or more, up to four years. Mahmoud branded his slaves, so four of them carry permanent markings of what happened to them. Three were pregnant...\"\n\n\"Oh, God. I was taken a month ago. I've been off my birth control since they took me. I could be pregnant,\" Johanna cried.\n\n\"You were given a morning after pill, so hopefully, that's not something you need worry about, Johanna,\" I said. \"The staff we have is top notch. Our Physician's Assistant is a former Navy Corpsman, Sherry was a Navy Nurse. We're sailing north accompanied by a US Navy Guided Missile Destroyer, and we can fly you off should you need more medical care than we can provide. We're staying at sea for now, but we'll make sure you're flown home from Casablanca. In a few days, you should be able to see the rest of your family. I know it doesn't seem like it now, but everything will be okay, trust me.\"\n\nMarian had pulled herself together again. \"It will be, Jo, we promise.\"\n\n\"I'm really tired,\" Johanna said. \"Is it okay if I sleep for awhile?\"\n\n\"Of course. I'll let Sherry know so she can look in on you from time to time. When you're feeling up to it, we can give you a tour of the ship, show you the room you share with your parents.\"\n\nHibbah and I left, leaving her parents behind and told Sherry that Johanna was feeling sleepy and said she was going to rest. Sherry said she'd keep an eye on her.\n\nWe returned to Master's cabin, where he was having a conversation with Miranda. She was in her office about to depart for the day. All of the gear he'd worn was gone, put away.\n\nWhile Master conversed, I whispered to Hibbah that he was talking to his wife, the US Representative who helped arrange for the Hofflers to come get their daughter. \"She's my sister slave.\"\n\n\"Like Francesca and Belle?\"\n\n\"Exactly.\"\n\nWhen Master finished, I talked to her briefly before saying goodbye. Master told me to turn all our gear back to Edgar, who'd stow it properly.\n\n\"Where can I find him?\"\n\n\"I think he's in the gym with Sahar. She wanted to learn how to use the rifles and not just the nine. He's starting her off with the weapon you use.\"\n\nI kissed him briefly, made awkward by the armor I was still wearing. I made my way to the gym and found Edgar explaining the rifle to Sahar before she began to shoot. Sahar set the rifle down properly when we came in. I told Edgar we were turning in our gear.\n\n\"Are there rounds in the chambers?\"\n\n\"Yes.\"\n\n\"Remove the magazines, clear the chamber, make it safe, then you can set it all down and I'll take care of it.\"\n\nBoth Hibbah and I did as he requested, Edgar watching to make sure we did it right.\n\nWhen it was done, I asked Sahar what she'd said to Abdul.\n\n\"I tell them I memorize their faces so next time I see, I kill them, cut off their manhood so no virgins in paradise.\"\n\n\"Do you believe they would go to paradise?\"\n\n\"No, even if paradise real, they not go; but might be what they believe. Hibbah, you have sex with Beth yet?\"\n\nShe blushed. She responded in Arabic.\n\n\"Use English now. Learn English.\"\n\n\"No, Sahar. Beth ask me wait two days.\"\n\n\"You like. No sin, pleasure.\"\n\nShe blushed again. Edgar was laughing which made her blush deeper.\n\n\"Don't worry, Hibbah. Everyone enjoys Beth. You're in good company.\"\n\n\"While I'm down here, I'm going to exercise, Hibbah,\" I said. \"It's been a couple days since I could work out.\"\n\n\"Okay. I do ABC's.\" She sat down and worked on her iPad.\n\nI ran for a half hour and then worked on the heavy bag. We went back to Hibbah's room to shower before heading to the mess. At lunch, Ben and Marian were in the dining room, but Johanna wasn't and Sherry was also missing.\n\n\"How's Johanna doing?\"\n\n\"She's still sleeping,\" Marian said. \"She wakes up, then goes back to sleep.\"\n\nThat explained why Sherry was absent. Couldn't say I was surprised. Who knew how long she'd been awake before her ordeal had started. They'd raped her all night and she'd probably had trouble sleeping the night before, excited to know she was being released. She likely still ached.\n\nMaster whispered to me he was coming to visit before supper.\n\n\"Yes, sir. I'll await you with open arms and open legs,\" I teased.\n\nThe afternoon I spent getting to know more about Hibbah and we worked together on her English. She was picking it up rather quickly, but on the other hand, already spoke two other languages, so learning a new one wasn't totally new. I was trying to describe something through her translation app.\n\n\"The English language was stolen from almost everywhere. Italian, Spanish, Portuguese and French are all considered Romance languages, based primarily on Latin, the language of the ancient Romans. English is a mixture of primarily Germanic languages with bits of a lot of other languages thrown in. When the Romans invaded England, it supplanted Celtic. Then it was conquered by Angles and Saxons, which came from North Germany. Suffered invasions of Norsemen from Denmark and Norway and a large percentage of the population was ruled under what was called Dane Law. Alfred the Great finally got rid of them. But the Normans conquered England again in 1066. They were Norsemen who'd been given part of France in Normandy. They spoke a combination of Norse and French, but it was mostly at the court level, as most of the commoners still spoke Anglo-Saxon English. So English has words from a number of different languages, and in the United States, our English has been influenced by Native Americans, Spanish and French, so a word like mesa which describes a flat topped mountain, comes from the Spanish word for table. Wadi, which is sometimes used in arid regions of America, is a word stolen from Arabic.\n\n\"The primary difference you'll notice between English and the Romance languages, particularly Portuguese and Spanish, is where the descriptions of words go. In Romance languages, they tend to follow the word described, and in English and other Germanic type languages, they tend to come before.\"\n\n\"What do you mean?\"\n\n\"What is pretty woman in Brazil?\"\n\n\"Mulher bonita.\"\n\n\"Bonita is pretty and woman is mulher, right?\n\n\"Yes.\"\n\n\"So a pretty girl in Portuguese would be girl pretty in English, but the description of the girl comes before girl in English, not after it. You will never hear girl pretty in English. Or man handsome, or home big or light bright. Those are things, and descriptions of the thing comes before the thing in English. Descriptions of actions, such as run or walk can go before or after. I can walk slowly or slowly walk.\n\n\"In Spanish pretty woman would be mujer bonita, and you see the similarity of Spanish to Portuguese. Pretty is the same in both languages and mujer and mulher are almost the same. In Italian and French, it's not quite the same, but the French were also influenced by a Germanic tribe, the Franks. In Italian, pretty woman is donna carina, where carina is the modifier pretty, and in French, jolie femme where jolie is pretty. Spain and Portugal didn't suffer as much from invasions after the Romans until the Moors conquered Southern Spain, so their languages suffered fewer influences from others.\n\n\"You can sometimes tell where an English word originated by its similarities to the same name in other languages. So avenue in English is like avenida in Spanish and Portuguese and avenue in Italian and French, so avenue is probably Latin in origin. Street is rue in French, rua in Portuguese, via in Italian and calle in Spanish. In Dutch and German, street is street, so the word is probably Germanic in origin.\n\n\"The word man in English is man in Danish, Swedish and Norwegian, mann with two n's in German, but homme in French, uomo in Italian, homem in Portuguese and hombre in Spanish. Very similar word in all the Romance languages, and mostly identical in the Norse and Germanic languages, so man came from those languages, not Latin.\n\n\"I said English stole words from everyone else. They also constantly add words all the time. English speakers make up new words, words that didn't exist a hundred years ago are common now because words needed to be invented for things like computers which didn't exist until 70 years ago, like byte, spelled b-y-t-e, not b-i-t-e like a bite of food. When we make up a new word, because English is such a dominant language in things like business, it becomes a new word in every language. Megabyte is understood almost everywhere where computers are common.\"\n\n\"Since the words sound alike, how do I know if someone is talking about a bite of food or byte on a computer?\"\n\n\"The context of the other words around it. If someone said 'I just got a computer hard drive that holds four terabytes of data', you know they're not talking about chewing food. If they said something like \"that meat was so tough it took a million bites to chew', you know they're not speaking about a computer byte.\"\n\n\"What about words like there, their and they're. How confusing to have one sound for three different words.\"\n\n\"It is confusing, and I admit it's a lot easier when you've grown up with the language. English is difficult because of words like those three. Again, context helps, there, t-h-e-r-e is a place or location, somewhat distant from here. The box is there, in the corner. Hibbah is there, on the bed. Beth is over there; a location or place. Their, t-h-e-i-r, denotes possession by more than one person. Johanna is their daughter. The house is theirs. T-h-e-y'r-e is a contraction of the words they and are. English speakers are also lazy, so instead of saying they are or can not, or you are, we shorten it, contract it. They are in the woods becomes they're in the woods. I can not stand eating peas becomes I can't stand eating peas. You are a lovely, young lady becomes you're a lovely, young lady. You don't, do not, have to use the contraction, but as you become used to speaking it, you will likely do the same.\"\n\nThere was a knock on the door. Glancing at my watch, I saw it was past four.\n\n\"Master is here for some sex. Do you want to stay or go?\"\n\n\"I will stay if okay.\"\n\n\"I do not, don't, care.\" She smiled.\n\nI opened the door and Master came in. He closed the door and swept me in his arms, nearly crushing me in his grip.\n\n\"Beth, I don't know what I would have done if you were the one I had to watch getting raped last night.\"\n\nHe kissed me before I could answer, choking off any response. I melted in his arms. He unbuckled my pants, muffling my moans in his mouth. He got them below my knees and I stood on the legs to pull out of them, leaping into his arms, encircling his waist with my legs. He carried me to the vacant bunk and laid me down, ripping my panties off, thrusting a couple fingers inside my steamy core. I moaned louder. Scrabbling at his belt buckle, I managed to loosen his belt, unbutton the snap and yank down his pants. Already tumescent, I reached inside his jockeys, seeking the steely shaft he had for me. Before I could get them off, I was already cumming, growling deep in my throat at his need and my own.\n\nMy contractions easing, I tried to get his trousers off, but they were hung up on his shoes. Fuck. I dropped to my knees and started sucking his cock, tugging on his shoes, trying to get them off. Before I could get both of them off, he was climaxing in my mouth. I stopped worrying about his shoes, and sucked, swallowing his offering. I continued sucking through the frantic pulsing, working to keep him hard enough to fuck me now we'd both gotten an orgasm out of the way.\n\nFortunately for me, he was as ready as I was. Master barely shrunk at all afterward and as soon as I knew he wasn't losing his erection, I got his damn shoes and socks off, his pants thrown into a corner, his shirt off. He was trying to unbutton my uniform shirt, but became frustrated and ripped it off as well.\n\nHe grabbed my bra with the intent of ripping it off as well. \"Don't, you haven't allowed me to keep that many bras. I'll get it.\"\n\nIt was a front clasp and it only took a second to unhook it and throw it off. He bent and suckled my right nipple, then the left, tipping me backward on the bed, my legs spread wide to accept him. He wasted no time in making good his intent, filling me.\n\nAs soon as he was inside me, soaking in my fluids, he slowed down, the long, deep thrusts I craved.\n\nWrapping my legs around him, I pulled against him, trying to force him deeper. Another orgasm built inside me, this one more powerful.\n\n\"Master,\" I panted, \"May I have your permission to cum?\"\n\n\"You ask this time, but not the first?\"\n\n\"I had no time to ask, sir, It was upon me too suddenly.\"\n\n\"Go ahead, cum if you need to, but not again until I'm ready.\"\n\n\"Yes, sir.\"\n\nI still tried to hold out as long as I could, to give me more time for the next, as Master would surely last at least ten minutes this time, especially since he'd slowed down. Hibbah had given up all pretense of ignoring us. Both her hands were squeezing her own breasts, in part, to avoid them going lower to masturbate. I managed to hold out for another three minutes or so until I surrendered, gasping in pleasure, calling his title.\n\nHe slowed down even more, but rode me harder. The sounds and scents of our rutting filled the cabin. I'd be lucky if I lasted five minutes before I climaxed again. I relaxed my legs, quit trying to drive him deeper inside me, trying to ignore the sweet buildup to the next, drifting towards sub space to give me time.\n\nMaster recognized my plan, laughed, and said, \"Getting close again, Beth?\"\n\n\"Yes, sir.\"\n\n\"You like being fucked, even if I do it in front of Hibbah, don't you?\"\n\n\"I enjoy fucking you, any time, or any place.\"\n\n\"Trying to enter sub space, my love?\"\n\n\"Yes, sir, and I could if you quit talking to me.\"\n\n\"Which is why I won't. What do you like about fucking me?\"\n\n\"Everything, Master.\"\n\n\"Be specific.\"\n\n\"I like your hard thick cock splitting me asunder, sir.\"\n\n\"And?\"\n\n\"How when you kiss me, you steal my breath away, sir.\"\n\n\"Good one.\" He stole another breath to show he could.\n\n\"I love how my nipples ache with desire when you suckle them, sir.\"\n\n\"Mmmm, I see.\" He suckled said nips and they swelled and ached.\n\n\"I love how deep you go inside me, sir.\"\n\n\"Like this?\" He slammed against me, getting another millimeter or so deeper, smashing my clit between our pubic mounds. I gasped, close to another cusp.\n\n\"Yes, sir.\"\n\n\"What else?\"\n\n\"I love how fiercely you hold me, sir, as if you never want to let me go.\" I gasped again. \"I love the way to trail your lips across my skin, leaving paths of hot fire.\" I clenched, so close. \"I love the feel of your heavy sack smacking against me.\" So very close. I panted. Was he close himself? \"The way your cock pulses when you fill me with your seed. I love the way your breath catches when you cum, holding it.\" Was he holding it now? \"I love knowing how much you love me, that it isn't just fucking. I love the way my cunt squelches with you in me. I love how you make me feel, how hard I cum.\"\n\nI orgasmed, a tidal wave of pleasure, clasping him so tightly. He gave another couple thrusts and froze, signifying his own release, mere seconds after I did. The first couple spurts while frozen, then moving again, pumping me full.\n\n\"I love how even though I earned punishment for not holding out longer, it was all worth it, Master.\"\n\nHe laughed, stole more of my breath, his lips hard against mine, his tongue insistent. I gave myself fully. He wasn't the only one glad it had been Johanna on shore last night. He turned onto his back, pulling me over him, still joined at the groin, limp with lassitude. We were both breathing heavily. I glanced at Hibbah, who sometime during our fucking, had succumbed to her own desire and was stroking her own sex. No point in embarrassing her with her lack of control. I hadn't had any either. I kissed him again, relaxing my weight on his broad chest.\n\n\"It really does seem as if you enjoy everything about our fucking.\"\n\n\"Yes, sir. Every bit. Even the clean up afterward.\"\n\nHis cock shrinking, falling out of me, I moved down to clean it.\n\n\"Sixty-nine with me.\"\n\n\"You're going to clean your lowly slave, Master?\"\n\n\"And enjoy doing it,\" he said, even as I started to lower my dripping pussy over his face. We spent a lovely five minutes engaged in maid duties. Master's cock doing a slow rise, beginning to fill my mouth.\n\n\"Do you have time to fuck your slave's ass, sir?\"\n\n\"Alas, not now. I'm drafting a report on what happened, and perhaps why. At the very least, unharmed has to mean untouched for the next one.\"\n\nI moved up again, settling against him, warm and firm.\n\n\"It's not your fault, Master. No one expects you to put your crew in danger. It might have happened anyway; we have no way of knowing.\"\n\n\"Logically, I know it's true, but I can't emotionally let go. She was gang raped all night long as we did nothing.\"\n\n\"Despite the make up of your crew, you're not military, you're not police. You were tasked with facilitating her ransom, not saving her from the depredations of evil men. If you'd tried to save her, she might have been killed, plus however many of ours we would have lost. Don't hold the world on your shoulders, Master. You've managed to save seven women from a horrible fate. We know there are other slaves out there. You can't save them all. This is a problem nations need to address as well as the souls of people who do these things.\"\n\n\"You make me feel a little better,\" he said, another kiss, another stolen breath.\n\nHibbah gave a strangled cry of pleasure. Master started to look at her and I grabbed his jaw and kept his eyes on me. \"Don't look, sir,\" I whispered. \"You'll only embarrass her.\"\n\nHe smiled, his eyes crinkling up at the corners. I kissed him again. \"Go finish your report, but don't be too hard on yourself.\"\n\nWe waited until Hibbah had a chance to collect herself. He got up and I helped him dress. \"Has Johanna gotten up yet?\" I asked, smoothing his wrinkled shirt over his pecs.\n\n\"Not yet.\"\n\nI nodded. \"I suspect she needs to move around some, despite any lingering soreness.\"\n\n\"Manuel says the same thing, but she says she can't yet; it's too painful.\"\n\n\"I'll talk to her later. Is she eating?\"\n\n\"They say she hasn't eaten much yet. A couple bites is all.\"\n\n\"Hibbah, how would you spell bites this time?\" I asked her\n\n\"B-i-t-e-s.\"\n\n\"Because it was in reference to food. Not so hard to figure out, is it?\"\n\n\"Not this time.\"\n\nMaster said, \"I'll see you both at supper.\"\n\n\"Yes, sir. When will you be giving me my punishment?\"\n\n\"We'll see. Soon.\"\n\nHe left. Hibbah said, \"I will be asking for sex from you at supper.\"",
        "I smiled. \"Very well. I won't make you ask in front of the others. We'll have sex tonight and I'll make you feel as good as I can. If you want to change your mind, you can. This is your decision.\"\n\n******\n\nI went and showered. Might as well be clean before having sex with Hibbah. I found another pair of panties and got dressed. We worked for a while longer on her English and went to supper.\n\nBen and Marian were there, but not Johanna. Sherry was there without Manuel. Someone needed to keep an eye on Johanna, I suppose.\n\n\"Sahar almost made it through Hogan's Alley with the rifle on her first go around,\" Edgar reported. \"She started working with Roberta on hand-to-hand combat this afternoon.\"\n\n\"Congratulations, Sahar. Very good for someone who's never handled a weapon before?\" Ethan said. \"I'm impressed.\"\n\n\"You be impressed when I go through like you, not before.\"\n\n\"Ooh, a challenge. Good.\"\n\n\"You thinking of making a bet, Ethan?\" I asked innocently.\n\n\"No, no more bets. I think I've learned my lesson, finally.\"\n\nThe crew all laughed, the others not getting the joke.\n\n\"How is Johanna doing, Marian?\" I asked.\n\n\"Not too good,\" she replied. \"She's barely eaten and all she wants to do is sleep. She hasn't even gotten up to see her room yet.\"\n\n\"What she went through was pretty traumatic. I'm not too surprised she's having difficulty coping,\" I said. \"I'll speak to her after supper.\"\n\n\"I will go too,\" Sahar said. \"See how pretty girl is doing.\"\n\nI nodded. \"I will come too,\" Hibbah said. I squeezed her hand.\n\nBefore I left the dinner table, I whispered to Master that Hibbah said she was ready for sex with me.\n\n\"Do you need permission to cum?\"\n\n\"Not tonight. I'll only go halfway with her tonight, but perhaps tomorrow?\"\n\n\"I'll think about it.\"\n\n******\n\nThe three of us went to sick bay to see Johanna after dinner, accompanied by her parents and Sherry. There was a plate of picked at food beside her. She was lying on her side staring at nothing. She looked up when we came in, then resumed her distant stare.\n\n\"Hello, Johanna,\" I said. \"How are you feeling?\"\n\n\"How do you think I feel?\"\n\n\"I think you feel horrible, but you still need to eat and get up and move around. Everyone is worried about you.\"\n\nJohanna turned to her back and braced herself on her elbows. \"You know what happened to me, right? I was raped for over twelve hours by a bunch of sadistic bastards. Over twelve fucking hours, one cock after the other, in my cunt, my ass, my mouth, over and over again.\"\n\nSahar slapped her across the face, not hard, but enough to jolt her. \"Grow up, pretty girl. You fucked a day! Try four years.\"\n\nIt was so sudden, nobody had time to react, but Sherry and Manuel moved towards Sahar, as did her parents. \"Get back,\" Sahar warned, pulling her knife out. I grabbed for Ben and Marian, pushing back against them.\n\n\"Let's put pretty girl out of her fucking misery.\"\n\n\"No!\" Marian shouted, and Ben pushed against me again. Johanna shrunk back.\n\n\"Bad men hurt you, pretty girl. Fuck you all night. Take a lot from you. You know what they left you?\"\n\nJohanna was stunned. She stammered, \"Wh-what?\"\n\n\"They left you your life. They left you parents who love you, a home to go to, but what they left you, you want to give to them. You want to give them the rest of your life. Don't give to them what they didn't take. They don't deserve it. Keep it for yourself. Use it well, don't let them win. Grow up, pretty girl.\"\n\nShe put her knife away and stalked off, Johanna staring after her.\n\n\"Who was that?\" Johanna said, rubbing her face, Sahar's handprint on it.\n\n\"That was Sahar,\" I replied, \"a slave for four years, freed a couple weeks ago. She did give you a very good piece of advice, though I was shocked at how she did it. Don't give the men who raped you the rest of your life. You have so much more you need to do with it. I'm sorry. We're all sorry. And if you want to feel sorry for yourself, that's to be expected, but get up, eat, be with your parents. Don't let yourself die inside.\"\n\nI left with Hibbah, Sherry and Manuel immediately checking on their patient. Johanna was still staring at the door where Sahar had disappeared.\n\n\"Would you like to sit in the spa, Hibbah?\" I said.\n\n\"I not have bathing clothes, Beth.\"\n\n\"I know. But what Western women wear for bathing would be considered indecent by Muslim women anyway, so let's go naked. I'll have Master declare the spa off limits for anyone but women so you don't need to worry about men seeing you, and we'll be under the water most of the time anyway.\"\n\n\"Does sound nice. Long time since bath.\"\n\n\"I think so, too.\"\n\nI stopped by Master's cabin and asked if he'd make an announcement making the dining room spa off limits to men for the evening. The men could use the upper spa if they wanted.\n\n\"Why?\"\n\n\"Because anything we had to wear would be scandalous for Muslim women anyway, so we're going to wear nothing, sir. Did you hear what Sahar did in sick bay?\"\n\n\"Manuel just called.\"\n\n\"While not necessarily agreeing with her methods, sir, it was something Johanna needed to hear.\"\n\n\"Apparently so. Manuel says she's eating.\"\n\n\"Good news, Master.\"\n\n\"Very good news indeed.\" He made the ship announcement making the sun deck spa off limits for males and told them to use deck two spa if they needed to.\n\nHe looked at Hibbah, standing shyly beside me.\n\n\"You have my permission.\"\n\n\"Yes, Master. Thank you.\"\n\nI went with Hibbah to our room to get big bath robes and we went to the spa, got towels and shed our clothes, sliding into the water.\n\n\"Have I told you that you have a beautiful body, Hibbah?\" I asked as we settled into the water.\n\n\"Do I?\"\n\n\"Very much so. I shall enjoy having sex with you tonight.\"\n\nHibbah looked down, but with a smile on her face. A short time later, Hannah and Angelique joined us, stripping off and sinking into the water with us. A few minutes later, Kelly came over, removed her clothes and got in the water, greeting us. Then it was Maahnoor and Ateefah, with Farah. They shyly removed their clothing and got in, sitting beside Hibbah, giggling.\n\nJohanna came over to the spa with her mother.\n\n\"Hey, you're up,\" I said. \"You should get in with us. The hot water and bubbles will help your bruises immensely.\"\n\n\"I don't have a bathing suit.\"\n\nI stood up, showing I was naked. \"Neither do we, it's why this is off limits to the guys tonight. Come in.\"\n\n\"Could someone show me where Sahar's room is first.\"\n\n\"What you want, pretty girl?\" Sahar said. I turned and she was behind me, stripping off.\n\n\"I wanted to thank you,\" Johanna said.\n\n\"You thank me by getting better,\" Sahar said, smiling. \"Pretty girl should smile, look much better when she smile.\"\n\nJohanna smiled. \"See? Just like I say. Much more pretty.\" Sahar slipped into the water on my left, sinking down to her neck. \"You come in, water nice and hot, feel good.\"\n\nJohanna looked at Marian, then removed her hospital gown, saying, \"It doesn't cover my ass anyway.\"\n\nMarian quickly followed her.\n\n\"Welcome back to the land of the living,\" I said. \"It's good to have you join us.\"\n\n\"It's good to be back.\"\n\n******\n\nHibbah joined me in my bed again that night, not to sleep, though we eventually did. I gave her much pleasure, using my mouth, five lovely orgasms which had her stifling her cries to keep from being heard. She offered to do the same for me.\n\n\"Tonight was for you,\" I said. \"Half the sin. If you want all of the sin, we can do more tomorrow.\"\n\nWe cuddled and one of my hands cupped her mound while the other stroked her cheek.\n\n\"Beth?\"\n\n\"What Hibbah?\"\n\n\"Watching you and Master have sex, makes me believe I could be with a man again. Not soon, but someday.\"\n\n\"I would like that for you. With the right man.\"\n\nI kissed her and she kissed me back, hot wet kisses. Two fingers slid inside her dampness in response. She moaned breathily, arching her sex against my hand. I lowered my head to find a hard, puckered nipple, sucking it while my fingers found her g-spot. She gasped, thrusting against me. I made her cum again, then sucked my fingers clean.\n\n\"Goodnight, Hibbah,\" I whispered shortly after her orgasmic contractions ended.\n\nShe was already asleep. I smiled and followed her to dreamland.\n\n******\n\n \n"
    ],
    "authorname": "Thors_Fist",
    "tags": [
        "oral sex",
        "lesbian sex",
        "romance",
        "interracial sex",
        "africa",
        "slavers",
        "non-consensual sex",
        "ransom"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/my-voyage-of-submission-ch-10"
}