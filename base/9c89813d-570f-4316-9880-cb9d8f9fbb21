{
    "title": "A Fragile Cup of Witch's Brew",
    "pages": [
        "This is a copyrighted original work of fiction. All rights reserved.\n\nAll characters featured herein are at least eighteen years of age, even if not expressly stated. Any resemblance between actual persons, living or dead is entirely coincidental.\n\nMany thanks to Jim K for the fine editing work.\n\nSong lyrics contained herein remain the exclusive property of the original artist.\n\nThis work may not be copied or distributed without the exclusive written permission of this author.\n\n*\n\nAll I knew was her maiden name, Sybil Varro, that she lived in the woods somewhere in northern Ontario, that she was about fifty seven years old and that she was a witch.\n\nI had to find her for our client. Her niece and only known blood relative urgently needed a kidney transplant. The odds were, we were led to believe, that Aunt Sybil would have the same rare blood type as her niece, type AB negative and share the same 'markers' which I understood nothing about.\n\nOur client Dee Tyana, the niece, hadn't seen her aunt since her parents' funeral sixteen years prior. She was only eleven when both of her parents were tragically killed in a car accident. She landed up being raised by her uncle's family, on her father's side. Sybil was her mother's only sibling.\n\nI searched every available database I could for the woman. I went through every phone book in North America. I'd scoured voter lists, marriage records, court documents, taxation records, death records, vehicle registrations, prisons and psychiatric institutions, military records and not just in Ontario, but in all of Canada. Nothing. I scoured Missing Persons lists, outstanding warrants worldwide. Nada. I spent days on Google, Facebook, Twitter even Ancestry.com, you name it - all with no result. I was able to ascertain that she was born and grew up in Montreal and then...nothing. It's was as if she disappeared off the face of the earth. Out of desperation, I contacted every post office in Ontario starting in Sudbury and systematically worked my way northwards asking if they recognized the name Sybil Varro.\n\nThe post office in Shining Tree in northern Ontario responded positively. They indicated that they knew of her, but did not produce any further contact information.\n\nI drove the seven and a half hour trip from Toronto to Shining Tree in early July. I had three goals, to find the missing aunt, to ascertain her blood type and, in the case of a match, to ask her if she would be willing to donate a kidney to her niece.\n\nI didn't really believe the witch part. To me it seemed the fantasized recollection of a traumatized eleven year old girl. Living in the woods in northern Ontario, if true, was definitely a little strange.\n\nThe odds were, I rationalized, that she was probably a school teacher or a nurse or a cleaning lady or something equally mundane, living in that remote community and that she most likely had a family. At fifty seven, she may have even been a grandmother.\n\nNot knowing what I was in for, I brought a complete set of camping equipment, freeze dried food and supplies for a week and a blood sample kit in a deep freeze pack. I had received instruction on how to take a sample and I knew where to go to have it analyzed.\n\nShining Tree consists of a Quonset hut and a few scattered buildings. It's a fishing and hunting wilderness set within a vast area that is dotted with various mines and an active forestry industry. The Quonset hut is a combination general store, gas station, post office, liquor store, beer store, ATM location and hunting and fishing license issuing office, plus they sell bait and ammunition.\n\nIt really is in the middle of nowhere, surrounded by wild boreal forest. All the area waterways eventually drain northward into Hudson Bay.\n\nI was greeted by Ben, the middle aged, slightly portly, owner manager.\n\n\"As far as I know she lives alone somewhere up the West Montreal River. Then she goes south for the winter just like half the people up here. Well, anybody with any sense anyway.\"\n\n\"How do I get there?\" I wondered if my three year old Ford Fiesta could take the rough back roads.\n\n\"Just leave a note here for her, she'll get it.\"\n\n\"No, no. I have to speak with her.\"\n\nBen paused to have a good look at me, \"You know, some people 'round here think she's a bit crazy.\" He watched me gauging my reaction.\n\nI spoke carefully not wanting to be judgmental of Sybil nor of any of the locals. \"It doesn't matter. I still need to speak with her. Can I phone her?\"\n\n\"I wouldn't think so. I highly doubt she'd have a phone. I certainly don't have a number.\"\n\n\"How do I get in touch with her?\"\n\n\"Well, okay. Listen buddy,\" he said, \"obviously whatever business you have with her is really important or you wouldn't be driving up from Toronto to track down a recluse hermit. So as far as I can see you have two choices. One, wait for her to come here, or two, try to go and find her and please understand, even if you find her cabin, she may not be there. And I'm not even sure where her cabin is.\"\n\n\"How often does she come here?\"\n\n\"Oh I don't know, we probably see her five or six times a year, so except for coming and going south, she's probably in here every month or so, maybe six weeks.\"\n\n\"Oh boy, what about option B? Me going to her?\"\n\nBen held his palms out at me. \"You don't really want to do that. What do you need her for?\"\n\nA bit nosey on his part. \"Ben I appreciate that this woman likes her space, and I'm not a cop or tax collector or anything like that. She's not in trouble or anything, I just need to find her and talk to her.\"\n\n\"What do you want from her?\" He was pushing.\n\nI sighed. \"I work for a law firm, it's a personal, family issue that I'm not at liberty to discuss with anyone but her. Okay?\"\n\nHe seemed to be a little relived that I wasn't the law on her tail. \"Listen, she's a full day's travel away by canoe. Maybe two.\"\n\n\"I can't drive to her cabin?\"\n\nBen was a little taken back by my question, \"No. There aren't any roads,\" he said regarding me as if I had no brains at all.\n\n\"Fine I'll rent a float plane.\"\n\nHe led me over to a large wall mounted topographical map. \"This is highway 560,\" he slid his fingers across the map, \"we're here, this is the West Montreal River,\" he traced his hand along the map in a big undulating sine wave. It didn't even look like a river, most of it was made up of small lakes, swamps and ponds, \"the river system crosses the highway in three spots,\" he pointed, \"here, here and here, plus you can access it from here at Wasapika Lake,\" he pointed, then he brushed his open palm over the lower part of the sign wave, \"and she's somewhere in here. I think.\"\n\nHe was pointing to the long stretch of river between Wasapika Lake and Granite Lake.\n\n\"Oh boy.\"\n\n\"You see a float plane is not going to get you anywhere close to where she is. You might as well walk from here.\" He turned to look at me. \"Trust me, you don't want to walk.\"\n\n\"Okay, how do I get there?\"\n\nHe shook his head in disbelief, \"Is it really that important that it can't wait for a couple of weeks?\"\n\n\"I'm afraid so.\"\n\n\"But she can be anywhere out there. Or, she may show up here tomorrow.\"\n\n\"Look I understand that you're trying to protect her...\"\n\n\"Oh no, she doesn't need us protecting her. If anything, it's the other way around.\"\n\n\"What? Wadda ya mean? Is she dangerous or something?\"\n\nHe paused for a moment before answering, \"Listen buddy, here's the reality. If she doesn't want to see you, you're not going to find her. It's just that simple.\"\n\n\"Is she Native?\" Dee didn't look like one or mention anything.\n\n\"I don't think so,\" answered Ben, \"she may be part Native, I don't know. She's got bright red hair.\"\n\nSo did Dee. \"But you or someone around here knows where her cabin is right?\"\n\n\"I don't but that's not the issue.\"\n\n\"What's the issue then?\"\n\n\"Sybil is a very private person. She's different.\" He used air quotes on the word different. \"You'll travel all day to get there...at least. If you do manage to find her cabin, you can sit in it and wait for her. But if she doesn't want to see you, you can wait till the snow flies, but you won't see her. And by then she'll be gone.\"\n\n\"Oh boy.\"\n\n\"Or,\" he added, \"you can go looking for her, but you may never come back.\"\n\nWhat? I turned to Ben, \"That sounds a bit ominous.\"\n\nHe stared me straight in the eyes. \"It's dangerous wild country out there.\" Then he added, \"And you're proposing to go in there alone?\"\n\nI sighed again.\"What should I do?\"\n\n\"Leave a note.\"\n\n\"I can't. This is a serious, serious situation.\"\n\nHe fiddled his fingers for a while. I could see he was unsure of what to do next. Finally he piped up, \"Do you have a canoe?\"\n\n\"No, can I rent one of those four-wheel all terrain things?\"\n\n\"You can, but I suggest a canoe. It will be faster and much easier. Do you have any camping gear?\"\n\n\"Yes I have, plus supplies for a week.\"\n\n\"We can get you set up with a canoe no problem. You can either go up the river from Wasapika Lake,\" he pointed to the map, \"or down the river, with the current, from Cryderman Lake,\" he pointed again. \"Six of one, half dozen of the other, I'd say. If she's in the area that I think she is.\"\n\n\"Which way does she go?\"\n\n\"Don't know. She just shows up here. Both probably.\"\n\n\"Which way would you go?\"\n\n\"I wouldn't. I thought I made that clear.\"\n\n\"Come on.\" I stood with my palms open at my sides.\n\n\"If it was just me and the elements on say a fishing trip, not on a mission to find Sybil,\" he took a deep breath, \"I'd go with the current from Cryderman, for sure.\"\n\n\"Okay.\"\n\n\"Here's my suggestion. Find a cabin around here, there's a number of lodges, relax, have a good meal and a good night's sleep, followed by a good breakfast in the morning. I'll set you up with a canoe and a waterproof map. Be here at nine in the morning.\"\n\n\"Thanks.\"\n\n\"And if you're going to find Sybil, do you mind taking a few things to her? They're waiting for her here.\" He pointed to a framed window leaning against the wall and three or four packages wrapped in brown paper.\n\n\"A window?\"\n\n\"Yup, and the parcels and I have some letters for her too. I'll put them in a plastic bag.\"\n\n\"Sure, I guess.\"\n\nI bought a six pack of Coors on my way out.\n\n*\n\nBen had a ten foot, red, fiberglass canoe along with paddle, lifejacket, window in frame all wrapped in protective plastic and bubble wrap and Sybil's brown paper packages all stuffed into the back of a dusty white Ford F-150 pick-up truck waiting for me at the general store the next morning. I stuffed my backpack in the back. He told me where to park my Fiesta. A young lad named Tom delivered me five minutes down the road to Cryderman Lake. Tom handed me Sybil's letters which I stowed in my backpack.\n\nPointing to a topographical map enclosed, together with three spent wine corks, within a clear plastic zip-loc baggie, he said, \"We think she's going to be in and around here. Chances are her cabin will be close to the water. When you come back, you're going to come out either here, here or back here at Cryderman. Leave the canoe by the side of the river or lake and hitch a ride with whoever you find back to Shinning Tree.\"\n\n\"Okay.\"\n\n\"Good luck, and listen. We're not going to get worried about you for about a week. So if you're in trouble, don't expect any help for a week. If you're not back, we'll just phone search and rescue.\"\n\n\"Okay, thanks.\" That sounded gloomy. \"Have you not taken this trip yourself?\" He was after all, a local.\n\n\"Not during the summer no. I've been in the area around there by snow machine, but not during summer. No.\"\n\n\"Why not?\"\n\n\"Just never got around to it I guess, plus, the third or fourth lake in is very shallow. Besides, why would I want to go find Sybil?\"\n\nI looked at Tom and then the map, Cryderman Lake followed by Clark then Casswell Lakes, a bunch of river then Granite Lake and then the general area of the river where Sybil should be.\n\n\"Can I give you some advice?\" asked Tom.\n\n\"Sure,\" I looked up from the map.\n\n\"Wear the life jacket all the time.\"\n\nIt was small and thin, the type that water skiers wore. \"Good idea.\"\n\n\"Don't try to shoot any rapids, especially if you don't know what's around the corner.\"\n\n\"Mnn..okay.\"\n\n\"If you do capsize or lose the canoe, the first thing you want to save, beside's your life, is this map. The corks will ensure that it floats.\"\n\n\"Okay, makes sense.\"\n\n\"Make sure you are safely tucked away well before nightfall. Don't try to move through the woods at night if you don't know the way and you can't see.\"\n\nEven though he was a young man, it was all sound advice, \"Okay.\"\n\n\"If you do lose the canoe and have to walk out, lichen tends to grow on the north side of a tree trunk. Just keep heading north until you get to the highway.\"\n\n\"Okay.\"\n\n\"Bears and wolves are not the most dangerous things in these woods.\"\n\n\"Huh?\"\n\n\"It's bees,\" then he added, \"and Sybil.\"\n\nI didn't know what to say.\n\n\"Good luck and try not to get eaten alive.\"\n\n\"Thanks.\"\n\nLoaded with camping gear, the window and five brown paper wrapped parcels stowed in the canoe, I set myself down into the bow seat with the canoe turned around into one man configuration and pushed myself off the dock from the hunting/fishing lodge at Cryderman Lake.\n\nThe water was cool. It was a lovely day. The sun was out, there were just a few broken clouds. The air temperature was already getting quite warm.\n\nI felt great, a man on a mission. I had a noble task, to save the life of a young lady. I pulled the canoe through the water. The muscles in my arms, back, shoulders, legs...all of me, was thrilled with the physical exertion. Does life get any better than this? What an adventure I was on. And to top it all off...I was being paid to do it.\n\nGulls were watching me as I made my way down the lake. A Canada goose honked with every wing flap as he breezed past me overhead and then landed in the water with an enormous, inelegant splash. I had to laugh out loud, such a klutz bird. A loon spied at me from a safe distance.\n\nI was loving it.\n\nI noticed that two of the packages were addressed to Sybil Varro, General Delivery, Shining Tree, Ontario, Canada and the postal code, P0M 2X0. One had US stamps, another one was from Slovenia. Another one just had Sybil written on it. From my vantage point in the canoe, I couldn't make out the other two. I couldn't see any return addresses.\n\nHuge grey, green and pink granite rocks edged the cool lake, each rock ground down and made smooth by successive ice ages. Stands of spindly black spruce, graceful paper birch and aspen grew in dense clumps reaching out across the water to catch all available sunlight. The occasional majestic white pine would rise above the others. A few hemlocks would crowd together in a little corner. A few lonely, twisted and tortured jack pines would eke out a living on the exposed rock rising above the spiky juniper bushes. From the water I could see just a few yards into the dense bush. It was a jumble of criss-crossed lichen and moss covered branches. Everything inside the bush was damp, fresh and organic.\n\nIt was rough, wild country. It was no wonder Ben suggested that I go by canoe.\n\nA small aluminium boat, bristling with fishing rods passed by me heading back towards the lodge. Two little kids, stuffed within life jackets with blonde hair flying in the air, eagerly waved at me while smiling from ear to ear. Mom and dad each lifted a hand to greet me. I waved back, unable to stifle my grin.\n\nAbout an hour or so later I was at the other end of the Cryderman Lake. A small stream spilled from one lake into the next. A path, about two hundred yards long, wound alongside of the stream. Everything was unloaded onto the shore. I carried the canoe, upside down on my shoulders to the other lake, fighting to maintain my balance all the way. Occasionally I would bump into an overhead tree branch, jarring my whole body and making me almost lose my balance.\n\nIt took the better part of an hour to get myself loaded back up and on my way again. The portage taxed me and was looking forward to simply paddling along the in the water. I had gained a whole new appreciation for the Native Americans and the early voyageurs in their choice of canoe travel through these woods. Paddling was easy in comparison to carrying stuff through a forest of branches over fallen logs and hurdles of slippery rocks. Canoe, definitely canoe and the lighter the better.\n\nClark Lake took only about fifteen minutes to cross, not counting the ten minutes it took to partially unload, lift and haul and reload the canoe over a beaver dam. The portage into the next lake wasn't as long as the previous, but the pathway wasn't as clearly defined as the last and there was a steep slippery rock to climb. It took another hour and a half or so to complete the portage. The only thing that freaked me out a little was the fresh looking bear tracks everywhere.\n\nCaswell Lake was lovely except for the shoal that I had to walk the canoe through. I took my running shoes and socks off and rolled up my blue jeans. The shoal was smooth rock but it was covered in some sort of green slime that felt really weird as it tended to get stuck between my toes. I drifted in the water afterwards and ate a pair of granola bars while putting my shoes and socks back on after rinsing my feet.\n\nAfter making a short portage over another beaver dam, where I got a complete soaker in my left shoe, I found my way into what appeared to be for the first time a river. It was flowing gently, I just needed to steer the canoe along with the current. Ben was right; I wouldn't want to be fighting the current.\n\nAfter twenty minutes or so I came across what I can only describe as a large swamp or bog like pond or lake. It indeed was shallow, just like Tom had said. It was a sea of grassy reeds in a couple of inches of water. It wasn't described on the map as a lake at all. I did see a symbol on the map for grass though. I gained a new appreciation for that printed little symbol -- here be dragons! Suddenly, I saw grass symbols all over my map. No wonder Ben said, 'trust me you don't want to walk.' No wonder Tom stressed the importance of saving the map. I tried to figure out which way I would walk if I had to get back to the highway from where I was at the grassy lake. It certainly wasn't straightforward and linear.\n\nA massive black raven circled around me twice and then set off towards the other end of the grassy lake.\n\nNot more than fifty feet after setting out, I got stuck in the shallow water even though I was angling my way through what I perceived was the deepest route through the reeds. I tried grabbing handfuls of reeds to pull the boat through. It worked for about ten feet.\n\nAnd then I was truly stuck.\n\nWith my paddle I poked down through the matted vegetation as deep as I could. It seemed fairly solid a few feet down.\n\nI didn't have a choice. I had to do something. Visions of slowly sinking down and getting stuck in the quicksand-like muddy murk gripped me with terror. I could scream for help at the top of my lungs, but I was certain there was no chance that anyone would hear. I was pretty confident the life jacket would stop me from drowning, but if I couldn't pull my legs up? Could I survive for a week?\n\nMy running shoes, socks and pants came off leaving me with only my tee shirt, life jacket and underwear. I put my running shoes back on. One after all, was already wet. The last thing I wanted to do was step down and impale myself on the top of a pointy stick.\n\nI checked with my paddle again, it still felt fairly solid. I turned the paddle over and pushed the handle end in. It too seemed to find something solid-ish a few feet down.",
        "I was stuck. I had to do something.\n\nMy heart was racing, I was sweating like a pig in the hot sun.\n\nIn truth, I was scared shitless.\n\nWith great trepidation I hopped out of the canoe firmly holding the stern of the canoe and gently sunk down into the murky weeds. Bubbles popped up around me. Methane gas.\n\nI seemed to bottom out about mid-thigh. I didn't keep sinking rapidly but I was in serious danger of losing my running shoes.\n\nAfter just two or three muddy few steps, pushing the laden canoe forward and tugging my legs out from the muddy decomposing vegetation, I jumped out of the water and straddled onto the boat's gunwale at the back where I had been holding on for dear life. I had to tightly retie each shoe.\n\nBack in the water, I pushed the canoe through the reeds, slurping through the ooze below. I quickly came to the conclusion that there was a dynamic involved to the murk. If I just stood there I would probably continue to sink down, but at a certain critical point I had just enough footing to push the canoe forward and still pull my leg free.\n\nThe terror I felt of getting stuck in the murk slowly dissipated but was soon replaced by another fear. I couldn't shake the image of Humphrey Bogart covered in leeches after hauling his little boat through a swamp in the movie the African Queen. At least he had the lovely Katharine Hepburn with him. I was off to find a fifty seven year old, crazy, red haired, witch.\n\nI was seriously wondering if I should have heeded Ben's advice and just left a note for the woman. But then I'd have no control over whether she would contact me or not. I had to press forward. At that point I had no choice. I couldn't imagine fighting that grassy lake again, especially if I had to fight against a current too. I came to fully appreciate and understand the one way aspect to the canoe trip.\n\nEventually I prevailed, without it seemed, any leeches stuck to me sucking my blood. The trip across the reedy bog was a series of a few short paddle strokes through slightly deeper water, then grabbing handfuls of grass and reeds and pulling the canoe forward and then jumping back into the water and gooey muck again when it just got too shallow or the reeds too thick. I had to do that about seven or eight more times.\n\nThe grassy lake eventually ended, not surprisingly, at a massive beaver dam which in turn emptied into a short gentle stream and then into Granite Lake, by far the biggest body of water so far. I wondered if a float plane could make it in and out. Apparently not.\n\nI changed into a dry tee-shirt and underwear and put the life jacket back on. Unfortunately I had only brought one pair of running shoes.\n\nThe raven seemed to be waiting for me on an overhead branch as I finally slipped free of the stream and floated into deeper water.\n\nI was struck by the irrational nature of a fear that I had carried all of my life. The deeper the water the greater the danger...hell no! I had just survived my most harrowing, terror gripped water borne event in an inch of water! In the deep lake I suddenly felt relieved and safe. There I could swim to safety. In the grassy lake it was as if I was on the verge of being sucked down into Hell.\n\nThe big bird took off with a loud croak and flew down the lake and settled onto a branch sticking out over the water on the left hand side.\n\nIt was an easy canoe ride, but I was getting seriously tired after the grassy lake ordeal. I washed the mud off of my shoes and set them into the sun on my pack in front of me.\n\nI knew it had to be late afternoon. Ben and Tom were both absolutely correct with their advice. I wasn't going to challenge young Tom's suggestion of being well tucked in prior to darkness setting in.\n\nI kept paddling forward. I figured I had another two hours...three hours max before the sun started going down. I needed to find someplace to pitch my tent for the night and give myself enough time to find wood and build a fire. An island would be ideal, I rationalized. It should minimize my chances of having a bear or wolf or whatever chancing upon me, or so I thought.\n\nEventually I almost came up to where the raven was perched. Just as I got closer it took off again and flew into the big bay on the left. I checked my map. It was exactly where I needed to go. Was it leading me on?\n\nThe bay narrowed into a channel with high rocks on either side, I could feel a gentle current. There were lily pads all around me. According to the map and to what I could see around me the channel became the West Montreal River.\n\nAgain the raven took off and flew deeper into the channel or river. I followed it and came across another beaver dam. But this time there was a bit of fast water past the dam which I was not going to try to run.\n\nNor was there really a path through the woods, at least not on the left side where I got out.\n\nThe bird was waiting for me at the other end of the portage. It took off as soon as he saw me.\n\nIt took nearly an hour and a half to complete the rugged portage.\n\nThe mosquitoes had found me during the middle of it. I sprayed myself with OFF every time I made it to where my backpack was stowed.\n\nI was beat.\n\nPortaging is not fun. Portaging, alone without a path through wild boreal forest is even less fun. With mosquitoes feasting on you and your feet turning into prunes sloshing away in soaking wet running shoes, it's bordering on an ordeal. Each portage was four trips, the canoe, my backpack, paddle and lifejacket, the five parcels and then finally the stupid window. Every time I put it back into the canoe I realized it was a miracle that it was still intact.\n\nI was getting really tired and hungry. My muscles were sore from carrying the canoe and the window. I had resolved to find a place to camp for the night right away. I figured it had to have been pushing five -- six o'clock. I couldn't tell the time because my cell phone died. There was no signal anyway.\n\nThe river twisted its way through large dark grey granite rocks. The shadows from the trees growing atop of the rocks darkened the swifter moving water. I managed to guide the canoe through without bumping into anything. There was nowhere to camp. At one point a huge log spanned across the river at exactly the point where the river narrowed forcing the water to move faster. It was too low to get under it. The current quickly pinned the canoe sideways against the log and then nearly rolled it into the incoming water. I had to unpack everything so that I could drag the empty canoe over top of the log. That treacherous twelve inch portage took at least twenty minutes.\n\nI was getting stressed.\n\nThere was no doubt in my mind, there's a very fine line between adventure and ordeal. I was most definitely on the cusp of crossing that line.\n\nI continued on down the shady river avoiding further rocks, logs and other obstacles. I was tired, sore and hungry. The mosquitoes were moving in on me even as I paddled along. I needed somewhere to pitch a tent and build a little fire. All I needed was a little patch of ground or flat rock that was dry, clear of bush and relatively flat. By that point I didn't even care about bears.\n\nSunlight suddenly! How glorious. I had survived. I was in a sunlit pond bordered by dark granite boulders, the water was almost still. A small stream silently dribbled a steady waterfall through twisted stumps and rocks on the left side. My impression was that it was a deep pond. Surely there had to be some place here to set up camp. I looked around. About halfway down on the right side a large blackish grey rock, basked in sunlight, rose gently from the water. I was certain I could set up my tent and camp there. I was astounded when I realized that higher up the rock there was a dark structure, a cabin perhaps, although partially obstructed by the bush and trees. And then, about halfway between what I perceived may be a cabin and the water, I saw a bit of orange colour in the sunlight. Was that a seated figure?\n\nIt had to be her and her cabin. I was certainly in the area they said.\n\nWith a renewed vigor I paddled towards her. She had bright orangy red hair and was dressed in black. She was watching me.\n\nI kept paddling towards her. Her hair was like a wild curly mane to down past her shoulders. Her face was bright. She was smiling. She was beautiful, but clearly not the person I was looking for.\n\n\"Welcome stranger.\"\n\n\"Hi.\" I paddled towards her and glided to a stop with the bow of the canoe just resting against the big dark rock, just to the right of a clump of hemlock trees.\n\nShe was seated about fifteen feet away and slightly above me, watching me with anticipation.\n\n\"I'm Sax Reimer and I'm with the law firm of Beeston Little in Toronto. I'm here to speak with Sybil Varro.\"\n\n\"I'm Sybil Varro, what can I do for you? Did you say Sax?\"\n\n\"Yes Sax Reimer, but there has to be some sort of a mistake. The Sybil Varro that I'm looking for is like fifty seven years old.\"\n\n\"Just turned fifty eight actually, I see you have my window. How can I help you?\"\n\nThat's right, her birthday was June something. \"You can tell me where I can find her.\"\n\n\"You're looking at her.\"\n\n\"But, you're not fifty eight. I'm forty two and you're way younger than me.\"\n\n\"Flattery will get you nowhere out here Mr. Reimer.\"\n\n\"Is Sybil your mum?\"\n\n\"My mother died a long time ago and her name wasn't Sybil.\"\n\nI sat in the canoe and stared at her clear skin. There was no way it was her.\n\n\"If you are looking for Sybil Varro, aged fifty eight, you've found her.\"\n\n\"But you look so young.\"\n\n\"Thank you. I live a healthy lifestyle. Now are you going to sit in the canoe or are you going to climb out?\"\n\n\"Ben had me deliver these packages to you along with the window. Oh and I have some letters for you too.\" I still didn't believe this was the right woman.\n\n\"He's such a sweet gentleman,\" she said, \"thank you.\"\n\n\"He speaks very highly of you,\" I answered, lying.\n\nShe got up off of her chair and stepped down to the water's edge. She was wearing sort of a one piece, long, black cloak or robe, almost like a nun's outfit without the white and with the hood draped across her back. Instead of shoes she wore high black moccasins that laced up to above her ankles. She sure as hell dressed like a witch.\n\nShe held the canoe as I stepped out.\n\n\"Thanks,\" I said as I pulled the canoe up the rock to secure it. I pulled my life jacket off and stuffed it into the canoe. I turned to face her.\n\nShe really was a beautiful woman and a full head shorter than me. She had high cheekbones with a light freckle across them and her slender long nose, thick full lips that twitched with every emotion and thought, and dark brown eyes. When she smiled or spoke, bright white teeth glistened. She wore no make-up, nor did she need to. She was unbelievably gorgeous. There was no way she was fifty eight. Especially for someone living in the bush constantly exposed to the elements.\n\n\"Please have a seat,\" she gestured to where she had been sitting. There was a second chair a few feet away, at a ninety degree angle to the first. Unlike the first chair, the second didn't have arm rests. Both were makeshift, yet sturdy looking wood constructed chairs. In front of both chairs there was a rustic low wooden table. On the other side of the low table there was a fire pit ringed with stones. Three rusted steel pipes rose and met above the pit in a tripod formation with a rusty ring and hook. The fire pit wasn't burning, although I could smell a fire burning somewhere.\n\nI glanced around me. I saw the path up to the log cabin, part path and part bare rock. I saw the granite stone foundation of the cabin, the chinking between the logs, the front door had a wooden handle, no knob. The cabin's roof was rough cedar shingles and extended to protect the cabin's front porch. To my left at the water's edge on the other side of the hemlock trees where I landed my red canoe I could make out a white canoe tipped upside down out of the water. There was a neat pile of split wood under its own cedar lean-to roof next to the cabin. Next to the split wood was a small wooden shack with metal stove pipe sticking out above it. It had a simple wooden door and the same cedar shingle roof.\n\n\"I've been expecting you for some time; you didn't travel very quickly,\" she said with a smile.\n\nOdd thing to say. \"How long have you been expecting me?\"\n\n\"I first became aware of your presence coming towards me, oh, at least four hours ago. As soon as your canoe dipped into the grassy lake.\"\n\n\"What? They told me you didn't have a phone.\"\n\n\"That's correct. I'm afraid I have no telephone nor world wide web service. There is no electricity here.\"\n\nI must have seemed completely dumbfounded.\n\nShe pointed up and to her left, \"Let me formally introduce you to Berlioz, my companion.\"\n\nI followed her hand. There was that raven again, above us. It flapped its wings twice while peering down on me. With a hand gesture to the big bird I said, \"Pleased to make your acquaintance Berlioz.\" It settled and just stared down on me.\n\n\"It would be rude of me not to offer my guest a refreshment, please have a seat.\" She motioned to the one crude wooden armchair that she had been sitting on.\n\n\"But that's your chair.\"\n\n\"And you're my guest. What I wish to offer you contains alcohol, will that be okay?\"\n\n\"Yes, thank you.\"\n\n\"Good, I'll join you. I want you to be comfortable and relaxed as you tell me in detail what it is that is of such paramount importance that you would travel all the way from Toronto -- ha! that's two days - to tell me. I won't be a moment.\"\n\nEven through the black robe I could see that she had a cute ass wiggle as she walked up the path to her cabin. No way fifty eight.\n\nI sat in her chair. She was back in a flash with two fine china teacups with a brownish liquid inside. The handle on her teacup was broken off. Mine was intact. Clearly I was the guest of honour.\n\n\"I'm sorry the cups are a bit fragile.\"\n\n\"Thank you,\" I sniffed at the liquid, it was flowery fragrant and strong. \"What is this?\"\n\n\"I brew and distill it myself. It's the Ontario version of what the Italians refer to as millefiori. A thousand flowers. It's all natural.\"\n\n\"Cheers,\" I took a sip ,\"Mmnn, this is good.\" It didn't taste as flowery as it smelled. It wasn't too sweet, but it certainly did have a good alcohol kick.\n\n\"Now let me say this,\" she said, \"I know who you are and now you've told me your name.\" Her lips smirked at me from behind her teacup, \"I know that you've come for my blood and to ask me something which I will have to decide on.\" She smiled demurely as she pulled her cup from her lips, \"I know that this has to do with my niece Dee and I know that your intentions are not malevolent. I just need the particulars.\"\n\nI sat with my mouth open. How the hell did she know that?\n\nShe smiled modestly and sipped her drink. \"Now please tell me Mr. Sax Reimer, why have you come?\"\n\nI took another sip and carefully held the teacup in my hand, afraid that I might drop it or crush it in my fingers. This woman was very quickly unnerving me, \"Your niece Dee,\" I stammered, \"who is now twenty seven years old, desperately needs a kidney transplant...\"\n\n\"Of course, now it all makes sense!\" She smacked her forehead with her free hand. \"How could I have been so stupid?!\"\n\nBerlioz was flapping his wings above me.\n\nClearly I was missing something. Nevertheless, I continued.\n\n\"Sybil. If you have the same blood type as Dee, AB negative, then you may be able to save her life.\"\n\nShe looked forward, not at me. \"Yes I understand that now.\"\n\nBerlioz croaked above us and flapped his wings. He was upset and loud.\n\nShe looked up to the bird, \"Calm down Berlioz, I know exactly what that means.\" She then turned to me and said, \"He can be such an old crow sometimes.\"\n\n\"Mr. Reimer...\"\n\n\"Please call me Sax.\"\n\n\"Sax, I understand what you are asking. I am to the best of my knowledge type AB negative blood type...\"\n\nBefore she could finish her sentence, Berlioz was croaking out such a racket that it completely interrupted our conversation.\n\n\"Berlioz I know, now please calm yourself down,\" she said in a raised commanding voice while craning her neck to look right at him.\n\nHe didn't. The bird took off in flight. He was croaking, cawing, trilling, honking. I was amazed at the range of vocalization the bird had as he circled around us.\n\n\"He's upset,\" she said watching him.\n\n\"What's he doing?\" I asked as I watched the bird. Even his wing flapping was erratic.\n\n\"He's telling everyone.\"\n\n\"What? Who?\"\n\n\"He can be such a blabber-beak sometimes.\" Turning back to me she said, \"You see Sax I was wrong. I thought that you were here to collect my blood or a part of me. What you actually seek is my life.\" Then she added, \"Berlioz understands that.\"\n\n\"What? I'm not trying to harm you!\"\n\n\"Of course you're not...\"\n\n\"I'm trying to save the life of a young lady.\"\n\n\"Of course you are. I understand that.\"\n\n\"If you're not willing to donate a kidney to her, that's fine. It's your decision. I understand that.\"\n\n\"Mr. Reimer, what you don't understand is that I know, as does Berlioz, that my body's physical demise will be through kidney failure. Not may be, will be.\"\n\n\"What?\"\n\n\"I understand that kidney donation is a routine procedure. I understand that the human body normally is able to function with just one kidney. I understand also that donating a kidney and saving another person's life is a supreme gift and is well worth the risk to the donor. In my particular case, and this is where you perhaps don't understand, it will not be a risk that I would be taking. It would be a certainty. It will kill me.\"\n\n\"I'm sorry, I don't mean to question your decision, but how can you be certain?\"\n\n\"My decision? I've not made a decision yet!\" She was adamant. I could see it in her face.\n\n\"Oh?\"\n\n\"And I am certain, I have and I can see my own death.\"\n\n\"Really?\"\n\n\"Yes really. Kidney failure. Always has been, always will be. I just don't know when or where.\"\n\nThe woman was clearly nuts. And so was the big black bird that was still flying around us croaking away. Or she really was a witch. I had just spent weeks searching for her, then finally I travelled two days to get to this remote piece of bush and I was sitting with a crazy woman, who was maybe impersonating someone else, and who just told me she is absolutely certain she knows how she will die. Plus, she apparently thinks she can converse with a bird. Clearly there are people in our society that rightfully belong in the woods, far, far away from civilization. For their sake and ours.\n\nThe big bird flew off somewhere allowing the quiet to settle back in.\n\nShe was staring off into space, lost in her own world. Maybe it was true. Maybe she did see her own death. I simply shut up and stopped talking for a while.\n\nAfter a few moments I broke the awkward silence, \"That's a bit scary to know isn't it,\" I asked with a little trepidation, \"seeing your own death?\"\n\nMy question seemed to snap her back to the present, \"It can be and it can be a bit comforting too.\"\n\n\"How so?\"\n\n\"If you are certain that your death will be in a car accident, you will be loath to get into an automobile.\"\n\n\"Yeah, I guess that's true.\"\n\n\"On the other hand, a man destined to hang is not afraid of water.\"\n\n\"True also. So you are certain that you will die of kidney failure?\"\n\n\"As surely as the sun sets in the evening.\"\n\n\"You can see the future?\"\n\n\"To a degree.\"\n\n\"Can you predict a winning lottery ticket or the outcome of a horse race?\"\n\n\"No, that I definitely can't do.\"\n\n\"Can you predict my future, my death?\"\n\nShe looked at me carefully before she spoke, \"Are you sure that you would want me to?\"",
        "\"No I'm not.\"\n\nShe took a sip of her brew and set the teacup back onto the low table.\n\nThe bird silently glided back to the pond and landed on the same branch above us. Clearly, it was his perch.\n\n\"Nevertheless Sax, before I can make the decision, I will need to consult with the community,\" she looked up at the bird, raised her voice and said, \"who now thanks to Berlioz, all know.\" She turned to look back at me and calmly added, \"It's a momentous decision, you understand that, don't you?\"\n\n\"Hang on a minute,\" I said taking a deep breath. I had to get us back to Realville. \"Let's take this one step at a time. Before you make any decision, we have to ascertain that you are the correct blood type and that you share the same markers, whatever they are, that indicate that the transplant would not be rejected. I have a kit with me and I've been trained in taking a blood sample. I've got to take that sample to either Timmins or Sudbury.\"\n\n\"But that'll take days. How long does Dee have?\"\n\n\"I don't know. Weeks? Days? I don't know, but she appears to be in pretty serious shape. She was in the hospital yet again when I left. She's been undergoing dialysis for years.\"\n\n\"How are you involved?\"\n\n\"I work for the research department of Beeston Little, a Toronto law firm. In years gone by, my position would have been rightly called - private investigator. I work for them. They're hired by your niece and her husband Eliphas, Eli for short.\"\n\n\"She's married? I didn't know that.\"\n\nRather than making a snide comment, I continued, \"I was charged with the task of finding you. Hopefully you would agree to letting me have a blood sample. And if everything lines up fine, to ask you to consider donating a kidney to your niece.\"\n\n\"How did you find me?\"\n\n\"The post office in Shining Tree recognized your name. I drove up right away.\"\n\nSybil was staring off into space again.\n\n\"But if you're certain a kidney donation is going to kill you, I guess there's no point in even taking a blood sample.\"\n\n\"Don't get ahead of yourself Mr. Reimer.\"\n\n\"Are you serious?\" Something didn't jive. If this really was Sybil sitting next to me and the story of seeing her own death was just her spinning bullshit...\n\n\"Dead serious,\" she cut off my train of thought.\n\n\"If you are so sure that donating a kidney is going to kill you, why are you still considering doing so? Would you knowingly give up your life for someone else's?\"\n\n\"Yes. Maybe. I don't know. But, I do know that I need to think about it, talk about it.\"\n\n\"You said the community. Back in Shining Tree?\"\n\n\"No, the community here.\"\n\n\"Other people live out here?\n\n\"People? No. Not for miles. The closest people to us are in Shining Tree. Actually no, either in Houston or Cryderman Lakes. I'm not sure which is closer.\"\n\n\"So what community are you talking about? You and the crow?\" Here in Weirdsville I almost added.\n\n\"If you are referring to Berlioz, he's a raven.\"\n\nI was sitting with a raving lunatic, drinking God knows what, eight or nine hours away from help and that would be paddling against the current.\n\n\"Sax, I understand that to your eyes I appear to be a woman living alone in the forest, with I may add,\" she gestured upwards to the black bird, \"an odd companion. But, let me assure you we are far from alone.\" She held out both arms and raised her voice a notch, \"This is in fact, a vibrant community that has graciously accepted me as one of their own.\"\n\nNut bar.\n\n\"Okay, please tell me then Sybil, may I call you Sybil?\"\n\n\"Yes.\"\n\n\"When do you expect to meet with your community?\"\n\n\"They're pressing right now, but I'll meet with them tonight.\"\n\nShe looked over at me and I was sure she saw in my face, that I thought she was crazy.\n\n\"Your niece said that you're a witch.\"\n\nShe looked at me with a renewed calm appearance on her face. \"Yes, there are some people who perceive me to be one.\" She picked up her teacup and took a sip.\n\n\"Are you?\"\n\n\"Tell me Sax, when you look at me, what do you see?\"\n\n\"I see a beautiful woman, who is not fifty eight years old.\"\n\n\"Really.\" She put her teacup down on the low table and stood up facing me. She pulled her black robe off her shoulders. When her arms dropped, the robe dropped too, piling at her ankles.\n\nMy sphincter clenched and I almost dropped the teacup.\n\nShe was naked. She was slender, yet shapely, with creamy white skin. Her pubic bush was thick, the identical orangy red that her hair was. Her breasts were full, not huge, but very shapely. Her areola were quite small and light, barely darker than her creamy skin, her thick nipples were darker, red wine coloured, they stood up and out. There was a slight rise from her pelvis. I could see wisps of orange hair in her armpits and on her legs below her knees.\n\n\"Now tell me Sax, what do you see when you look at me?\"\n\n\"I see a beautiful naked woman, who is not fifty eight years old.\"\n\n\"I know which part of my body Dee wants. Is there a part that you want?\"\n\n\"Yes, all of it.\" I gulped. Definitely crazy, but sexy as hell.\n\nShe reached out and cupped my face in her hands, \"Well you can't have all of it,\" she pressed her face towards mine, \"but maybe you can have a taste.\"\n\nShe kissed me on the lips. Her lips were warm and soft. Mine were tingling. I felt like I was kissing an angel. My heart was suddenly filled with joy, a completely unexpected bliss washed over every fiber within me.\n\n\"Tell me,\" she said as she pulled away staring into my soul with her big dark brown eyes, \"how does it feel to kiss a witch?\"\n\n\"Unbelievable,\" I barely managed to stammer out.\n\nShe stood back up and looked down at me, \"Well believe this Sax Reimer, you will have my decision before the sun rises tomorrow morning.\"\n\nI gulped again. \"Let's just do the blood sample.\" I croaked while trying to recover my senses.\n\n\"If time is of the essence, if I decide to do it, I'll travel to the hospital for the operation. They can take a sample of my blood then.\"\n\nI couldn't believe it. \"Thank you Sybil,\" I said and then added, \"and I can't believe that you are still considering it and not dismissing me outright.\" Her tits were beautiful.\n\n\"Isn't life strange?\"\n\n\"Hmm.\" The nape of her neck, so feminine.\n\n\"Nevertheless, here we are.\"\n\n\"Indeed.\" There was a gap at the top of her thighs. The orangy curls couldn't hide it.\n\n\"And I'm deeply honored that you have travelled two days to find me and that you will be my, or I should say our, honored guest for the night.\"\n\nMy cock was definitely swelling.\n\nShe slipped her black robe back on and then sat back in her chair. \"There is no use fretting about all of that right now.\" Her beautiful, luscious lips curled into a sexy smirk, \"So you enjoyed the kiss?\"\n\n\"I must say Sybil, I don't think I have ever had such a lovely kiss.\"\n\nShe picked up her teacup. It nearly covered her smile as she took a small sip. Her smiling eyes gave her away.\n\n\"That's very sweet of you to say that. Thank you, kind Sir.\"\n\n\"Sybil, I must say that I am very grateful for your hospitality. Where should I pitch my tent?\"\n\n\"Pitch your tent? I have a comfortable bed inside.\"\n\n\"I've already intruded enough into your life...\"\n\n\"Nonsense,\" she cut me off with a wave of her hand, \"I must say, I don't have very many human guests, especially not good looking young men like you. And you are good looking, how tall are you?\"\n\n\"Six two.\"\n\n\"And I would say that you are about a hundred and eighty pounds.\"\n\n\"On a good day.\"\n\n\"Forty two, is that what you said?\"\n\n\"Yes.\"\n\n\"I love your wavy sandy coloured hair.\"\n\n\"I guess you missed the thinning on top.\"\n\n\"I didn't. You're charged with testosterone. I find it sexy. You have beautiful blue eyes and a lovely smile. You're a good looking man Sax Reimer.\"\n\n\"Compliments will get you anything you want out here Sybil.\" I couldn't help but chuckle.\n\n\"Are you married or under an obligation to anyone to be faithful?\" She asked.\n\n\"No.\"\n\n\"Excellent, but it wouldn't matter anyway.\"\n\n\"Why do you say that?\"\n\n\"Either way I'm going to fuck your brains out tonight. I'm just saying that because I am genuinely happy that you won't have a guilt thing hanging over you, clouding your judgment.\"\n\n\"Wow.\"\n\n\"Well if you liked the kiss, then I can assure you that you're in for a real treat.\"\n\n\"You make it sound as if I don't have a choice in the matter.\"\n\nMy statement made her head jerk back as she glared at me, \"You don't want to fuck me?\"\n\n\"Ahhh,\" clearly I did. Certainly my cock was voting that way.\n\n\"It doesn't really matter,\" she said waving her hand in dismissal and then added smiling, \"besides, it would be rude of you not to accept my hospitality.\"\n\n\"Wait a minute, I've seen this movie before, or maybe it was a Twilight Zone episode or Lost In Space or something. We make mad passionate love and then you revert back to the old hag that you really are.\"\n\n\"Haa haa haa!\"\n\n\"What I'm seeing now, the beautiful woman with the body of a thirty year old, is really a shriveled up old hag, missing teeth and has a big wart on the end of her twisted old nose. Where's your hat and broom?\"\n\n\"Haa ha ha...inside! Want a ride? Haa haa haa!\"\n\nI held the teacup out and looked inside. \"Say, what's in this witch's brew?\"\n\n\"Haa haa...it's a love potion of course.\"\n\n\"See I've seen this movie before.\"\n\n\"Yes and now you're mine!\" she growled, \"ahh ha haa!\"\n\nI was laughing too. \"Ever since I dipped the canoe into the grassy lake, there was a sweet Sirens' Song, inaudible but still highly effective, pulling me in. Pulling, pulling. Drawing me in like a moth before a flame.\"\n\n\"Ahh ha ha...I've no secrets to conceal. Ahh ha haa!\"\n\n\"That's right Sybil, maybe you can see the future, but I can see the present...crystal clear. You really are a witch.\"\n\n\"Oh my, you are funny.\"\n\nWe both chuckled and smiled at each other while taking sips of the witch's brew. There was no way she was fifty eight. Twenty eight I could believe, maybe even thirty eight I could concede, but not fifty eight. No way. But what a beautiful, sexy woman she was. There wasn't a wrinkle on her. The chiseling of the face which comes with age, in her, it was completely absent.\n\nShe smirked at me watching her.\n\n\"Look, there's Gladys and her two cubs,\" she pointed across the pond.\n\nI turned my head and saw a large black bear and two cubs at the water's edge, not more than a hundred and fifty feet away. One of the cubs was standing on its hind legs.\n\nIn a loud voice she said, \"The cubs look great Gladys, in spite of who their father is,\" and then added, \"I know who you mated with last year.\"\n\nShe turned back to me and whispered, \"His name is Philippe. He's a surly old bugger, even by male, black bear standards. No one likes him. I don't see what she sees in him.\"\n\n\"Sybil you've just convinced me that you really are fifty eight years old. Only an old woman would be engaged in that type of bush gossip.\"\n\n\"Ahh ha ha!\"\n\n\"Croak!\" Berlioz was flapping his wings, \"croak!\"\n\n\"Oh look,\" I said, looking up, \"he agrees with me.\" Now I was conversing with the stupid bird.\n\n\"Yes, he knows I'm an old hag.\"\n\nI smiled at her. \"Yes but a lovely one.\"\n\n\"As long as I keep up appearances right?\"\n\n\"That's right. No disillusions okay?\"\n\nWe smiled at each other for a few moments.\n\n\"You must be hungry,\" she said, \"I've made more stew in anticipation of your arrival.\" She stood up.\n\n\"I brought food.\"\n\n\"You did?\" She said as she stepped down to my red canoe.\n\n\"Yeah that freeze dried camping stuff,\" I answered as I watched her pick up one of her parcels.\n\n\"Eww, that's disgusting. Come I'll show you what healthy living and healthy eating is all about.\" She stood and held out her one hand to me, while holding the parcel and her teacup in the other. \"Come.\"\n\nI stood up holding my teacup.\n\n\"Give me your hand.\"\n\nI did. Her hand was soft and warm to the touch. Pure joy radiated through her hand into me.\n\n\"Come inside.\"\n\nLooking up at the cabin I said, \"Nice, did you build it?\"\n\n\"Yes I did, please come inside.\" She let go of my hand and stepped up onto the wooden porch and opened the door. I felt a loss from not holding her hand.\n\nI followed her inside.\n\nIt was a one room log cabin, quite large, maybe twelve by fourteen feet. Definitely a witch's hut. There was a stone fireplace dominating the back wall, with a black cauldron hanging on one side and what appeared to be an oven cleverly made up of natural stone on the left side. The front of the oven was one thick piece of partially charred wood with a handle. The fire was lit, but low with lots of ashes. Wooden shelves on either side of the stone fireplace completed the back wall. The floor was wood boards. There was a rug on the floor, it looked like black bear. On the left side of the room there was a single bed with mainly black fur on it. The window opening above the bed was boarded up with crude boards. Green moss was stuffed between the planks. Clearly that was where the new window was going. On the right side of the room a wooden table with rustic boards was pushed up against the wall. The window above it was intact, made up of single panes each about eight by ten inches high. Each corner of the cabin had either wooden shelving units with piles of musty old books, wooden bowls and tin boxes, or cupboard units. I saw a big mortar and pestle, a black kettle and an axe. A single wooden chair with armrests faced the fire in the center of the cabin. A black fur blanket or rug was draped over the back of it. There were a number of candlesticks placed in strategic locations around the cabin. Strands of dry mushrooms hung from the mantel at both ends of the fireplace. One strand I recognized. The mushrooms were white with bright red caps and white dots on the cap.\n\n\"The food smells good what is it?\"\n\n\"Witch's stew of course,\" she answered with a smile. She had what appeared to be a piece of dough that she was flattening between her hands.\n\n\"Naturally.\"\n\nShe dusted a short wooden paddle with flour from a square tin and then placed the palm shaped pancake onto it. The bread was then shoveled into the stone oven. \"The bread will only take a few minutes.\"\n\n\"Sounds great,\" I said.\n\n\"When you live in the forest, you learn to live off the forest. There are many healthy food sources, which are by their very nature...seasonal. Right now there is plenty to eat. This is a stew with cattail and bullhead water lily root, rock tripe...it's a common lichen, let's see what else?\" She was staring off into space trying to remember, \"There's a bit of wood sorrel, just to give it a little tanginess, a few gooseberries to sweeten, some wild rice of course...\"\n\n\"Of course,\" I repeated.\n\n\"Several types of mushrooms...\"\n\n\"Toadstools no doubt,\" I added looking at the string of drying red and white mushrooms.\n\n\"And frog meat... oh and left eye of newt of course,\" she added smiling.\n\n\"Obviously, it wouldn't be a witch's stew without it would it?\"\n\n\"Of course not. Chicken paprikash is just chicken stew without the paprika isn't it?\" She tossed a few sticks into the fireplace. \"Please have a seat.\" She gestured to the lone armchair facing the fire.\n\n\"Thank you.\" I sat down. \"You're very well versed for someone who lives alone in the bush, cut-off from the rest of the world.\" The chair was comfy.\n\n\"For half the year.\"\n\n\"Right. Where do you go for the winter?\"\n\n\"South of course.\"\n\n\"Where to?\"\n\n\"Wherever I want, why?\"\n\nLooking around the cabin I said, \"Very strange existence you lead, you live up here all alone, sorry...\" I caught myself, \"within your community, and then you fly south for the winter, just like the birds.\"\n\n\"Some birds, yes exactly. Not Berlioz though, he stays here all year round.\"\n\n\"Let me guess,\" I said as I watched her stir the stew with a big wooden spoon, \"you fly on a broom.\" I looked around the cabin. I didn't see a broom.\n\nShe chucked, \"Yes that's it exactly.\"\n\n\"But you don't have one,\" I looked behind the wooden door and then to all the other little nooks and crannies.\n\n\"Yes I do, there it is.\" She was pointing to next to the door.\n\n\"Oh.\"\n\nI swear there wasn't a broom there a moment ago. Now there was. A long brown stick with dry reeds or straw tied tightly back on itself. Like a witch's broom. How could I have missed it? It was definitely freaky.\n\n\"I didn't grow up in the woods. I had a normal childhood growing up with my sister in Montreal. I went to school, played with my friends, watched TV like everyone else.\"\n\nI already knew about Montreal but I still couldn't get my head around the broom. Maybe it was her boozy brew messing with my head. I had to change the subject. \"How do you make a living? If you don't mind me asking.\"\n\nShe smiled at me, her eyes winking in delight, every movement of her lips and sinuous neck muscles responded in unison.\n\n\"I see things.\"\n\n\"You see things.\"\n\n\"Yes.\" She paused, \"Would you like a drop more millifiori? Sorry, witch's brew?\"\n\n\"Sure, but I just want you to assure you, I'm already in love with you.\" I passed her my cup.\n\n\"Ha!\" She took the cup from me, grinning.\n\nIt was a pretty easy thing to say to such a gorgeous creature. \"And I'm looking forward to your...hospitality.\" I was hoping it was true.\n\n\"Good, but not until after my meeting tonight okay?\" She stepped over to the cupboard next to the table and picked up a black bottle. It looked like an old litre and a half Black Tower Riesling wine bottle.\n\n\"I'm just the guest, I don't set the rules here,\" I said as she uncorked the bottle and poured me some brew.\n\nHanding me the teacup, smiling, she said, \"And I'm delighted that you fully appreciate that.\"\n\nI suddenly remembered young Tom's suggestion that she was dangerous.\n\n\"So, you see things and people pay you.\" I said trying to pull the conversation back to reality. \"I don't exactly see a huge line up of people waiting for you to gaze into a crystal ball or something for them.\"\n\n\"Haa haa ha!\" She was genuinely shaking as she replaced the cork and put the bottle onto the shelf.\n\n\"Oh, I get it,\" I said, \"you travel with a circus during the winter, Sybil the Fortuneteller...\"\n\n\"Haa haa haa!\" She was in hysterics. She even had me laughing with her.\n\nIt took her a moment but eventually she calmed down enough to say, \"Oh Sax, it's so nice to have a guest now and again. I so do miss human company sometimes.\"\n\nAfter a few moments I asked her again, \"Seriously Sybil, how do you survive out here by yourself for half a year?\"\n\n\"Surviving out here is easy, for half the year. For the other half it's cold and a brutal existence. The snow is typically ten or twelve feet high. There is very little to eat. I don't know how Berlioz manages. But for the other half year, there is plenty of food and plenty of work.\"\n\n\"Work? Seeing work?\"\n\n\"I do that all year round. It's my occupation.\"\n\n\"I thought you were a witch.\"\n\n\"That's hardly an occupation.\"\n\n\"And you make enough money in half the year to live here the other half, not seeing anyone?\" It didn't make sense.\n\nMy statement startled her, \"Oh I don't earn money. What would I do with money?\"\n\n\"What?\"\n\n\"I don't use money. If I did that then someone would come looking for taxes.\"\n\n\"Well that couldn't be as bad as say...someone coming out here trying to get a pound of flesh from you, could it?\"\n\n\"Ahh ha haa!\"\n\nI was glad she thought that was funny. But what she was saying still didn't make sense. \"Seriously Sybil, if you don't earn money, how did you pay for the window that I brought you, or that black cauldron?\" I said pointing, \"Everybody needs money.\"\n\n\"Well Sax,\" she said wiping a tear from her eye, \"I'm not everybody. I have no use for money.\"\n\n\"Still doesn't explain the window.\"\n\n\"Payment for services.\" She opened up the package she had brought up from my canoe. It was the one from Slovenia. \"I need these all the time.\" It was a box about a foot and a half long by eight inches by eight or nine inches high. It was full of white paraffin candles. No wonder it was so heavy.",
        "\"I still don't get it.\"\n\n\"Sax, I can see things other people can't. It's a gift that I have. Rather than waste that gift, suppress it and live a normal life like others do, I use my gift to humanity's advantage. It's my calling. It's what I was born to do. I don't expect you to fully understand. But please understand this. There is the physical world and there is the spirit world. We all live in both but can only perceive one. I can perceive, or at least get a glimpse of the other. I am able to communicate between the two.\"\n\n\"What? Are you like a medium then, talking to the dead? Or a clairvoyant or something?\"\n\n\"Sax, there is way more to it than that.\"\n\n\"Seeing the future?\"\n\n\"Yes, that too.\"\n\n\"Two worlds, our world and a woo-woo voodoo world?\" I asked incredulously.\n\nShe put her hands on her hips. \"Sax, what are the very first words of your Bible?\"\n\nOh-oh nut bar.\n\nShe answered her own question, \"In the beginning, God created heaven and earth. You see Sax there is nothing strange in what I'm saying. A material world and a spirit world. Normal people can perceive three dimensions of space, plus let's call it, an arrow of time, right?\"\n\n\"Yes.\"\n\n\"I can see that too, but I can also see, or more correctly perceive, an added dimension of spacetime, to borrow the physicist's term. A world inhabited by others and by elements of our own living selves.\n\n\"And you can see your own death, you can see into the future?\"\n\n\"Yes. Definitely. But please understand, time in the other world isn't like the arrow of time that we perceive in this world. On the other side, time almost has no meaning.\"\n\n\"What?\"\n\n\"Don't you see Sax, time is simply the moving image of eternity. The distinction between past, present and future is simply our internalized, persistent illusion. Space and matter are merely the skeletal shadows of our true spiritual reality. As Einstein proved, matter is energy.\" She paused for a moment before she added, \"I know it's hard to wrap the mind around what I'm saying and it's also exceedingly difficult to articulate these concepts in words.\"\n\nI didn't know what to say.\n\nShe continued, \"It's all so contrary to our common experience. Nevertheless, it's all true. It's reality.\"\n\n\"But you can see your own death?\"\n\n\"That is correct, and I can see yours too Sax Reimer, I just can't tell when or where for that matter. Objects, things that aren't living don't matter on the other side. Gold doesn't matter. The outcome of a lottery is of no consequence.\"\n\n\"It is to the winner.\"\n\n\"Not if she's dying of cancer.\"\n\n\"True.\" She definitely had a point.\n\nShe checked on the bread. \"In the case of your death Sax, I can say that there is a good indication that you will be old when it happens.\"\n\n\"I'm not certain that I dare to ask...why would you say that?\"\n\n\"Do you really want to know?\"\n\n\"No I don't.\"\n\nShe chuckled under her breath, \"Almost ready.\"\n\nI needed to change the subject again. \"Okay so you grew up in Montreal watching TV like every other kid. Then what happened? How did you land up living here, living alone?\"\n\n\"I made a friend, an old soul.\"\n\n\"The dots don't connect. Where did you meet this friend?\"\n\n\"In Haiti actually.\"\n\n\"Dots still don't connect.\"\n\n\"My friend lives here most of the year, I was invited to come and visit and I landed up coming back every year.\"\n\n\"Where is your old soul friend now?\"\n\nShe paused for a moment before answering, \"Outside on the porch, waiting for me to finish dinner. Graciously giving you and me, some space.\"\n\n\"Oh.\"\n\n\"My friend knows that I have an important decision to make.\"\n\nI carefully considered my next words. \"If I opened the door and looked out, would I see your friend on the porch?\"\n\n\"I don't think so.\"\n\n\"Would you?\"\n\n\"Yes, in a certain way. I'm aware of my friend's presence now. The door doesn't matter.\"\n\n\"A spirit?\" I asked.\n\n\"A ginn.\"\n\n\"A ghost?\"\n\n\"More of a spiritual creature rather than the spiritual remnants of a person.\"\n\n\"Male or female?\"\n\n\"Neither,\" then she quickly added, \"both.\"\n\n\"Does your friend have a name?\"\n\n\"Yes...\"\n\n\"Let me guess,\" I cut her off, \"Beelzebub?\"\n\n\"No,\" she quickly came back with a dark look in her eyes, \"He wouldn't be quite so gracious.\" The dark look lingered. Clearly she didn't think my joke was funny.\n\n\"Hess.\"\n\n\"Hess?\"\n\n\"Yes. Hess.\"\n\nSybil was definitely one strange woman. I didn't know if I should believe the whole witch, seeing the future nonsense or whether she was an escapee from some lunatic asylum. Maybe she killed the real Sybil Varro and was living in hiding, and assumed her identity, for some sinister reason. But her niece Dee had the same hair colour. Clairol hair dye could solve that.\n\nThe blood type! That'll prove it one way or the other.\n\nOr maybe she really did see ghosts or ginns -- whatever they were.\n\n\"Did you ever see the old movie with Jimmy Stewart, he had an imaginary friend named Harvey? It was a giant invisible rabbit,\" I asked.\n\n\"Yes, I recall the movie. Everyone thought Jimmy Stewart was crazy, but the rabbit turned out to be real in the end.\" She smiled at me, \"My friend is not imaginary, is very real and can be very scary.\"\n\nScary? I took a sip of my witch's brew.\n\n\"So tell me Sybil, are there good spirits and bad spirits?\"\n\n\"Certainly.\"\n\n\"Kinda like angels and devils?\"\n\n\"Mmmm, I would say that's a bit simplistic, but yes, in the sense that there are some spirits, demons, that manifest only evil, whereas most are benevolent and some are benign. Just like people.\"\n\nBizarre. I took another sip.\n\n\"The word genie comes from the word ginn,\" she said breaking my reverie.\n\n\"Oh, so does Hess grant wishes?\" I asked kind of tongue in cheek.\n\nShe looked at me seriously, \"As a matter of fact he does. Shall we show you?\" Her expressive lips tried but failed to stifle a smile.\n\n\"Okay.\" Maybe it was the alcohol in the brew making me light headed.\n\n\"Hess, I wish that Sax would take it upon himself to bring in the other chair from outside. Oh and the other packages and my letters too. He can leave the new window on the porch for now.\"\n\nI immediately stood up and placed my teacup on the table. \"Yes ma'am.\"\n\n\"Yes Hess.\"\n\n\"Yes Hess.\"\n\nWith some trepidation I stepped outside onto the porch. There were no scary monsters waiting for me. None that I could see.\n\nThe sun was starting to set down. It was definitively a little cooler outside and a foggy haze was starting to set in above the water. Berlioz was still sitting in his high perch. The chair was way heavier than I anticipated. I brought in my backpack and set it on the floor together with the four remaining parcels and my life jacket. The window was carefully leaned up against the cabin as directed.\n\n\"Sybil, would it be okay if I place my running shoes next to the fire to dry out,\" I asked as I handed her the small packet of letters.\n\n\"Yes, of course.\" I set the shoes on their sides on the warm hearth, insoles towards the fire. She tucked her letters away without even looking at them.\n\n\"You have to understand something Sax. I don't need hundreds or thousands of dollars in payment for what I do. If all I need is another box of candles, or a ride or...whew...a window! I'm happy with that. I get what I need, that's all.\"\n\n\"You really are the most extraordinary person I've ever met.\"\n\n\"Wait until after my decision,\" she smiled, \"your choice of adjectives describing me may change.\"\n\nShe had me pull the small wooden table out from the wall and set both chairs in place so that we would sit across from each other. There were already two silver spoons, two silver knives and a jar of some sort of jam or marmalade sitting on the table. She brought two brownish napkins out from a drawer. She placed an unlit white candle in a brown wooden candlestick on the table between us, but slightly off to one side.\n\nI watched her as she pulled out a large wooden ladling spoon. Clearly for my amusement she flipped her hood over her head, crouched over the cauldron, held the spoon with both hands, stirred and with a croaky voice said, \"Double, double toil and trouble. Fire burn and cauldron bubble!\" She then proceeded to cackle away while mock grimacing at me.\n\nI couldn't help but laugh, \"Just don't tell me that I'll be King of Scotland!\"\n\n\"Ahh ha haa. Fair is foul and foul is fair, hover through the fog and filthy air.\"\n\nI chuckled, \"So you know your Shakespeare...\"\n\n\"Knew my Shakespeare.\" She flipped her hood off revealing her orangy red mane.\n\n\"Knew as in past tense?\"\n\n\"I'm afraid so, I can't read it anymore.\"\n\nThat seemed odd, \"Why's that?\"\n\nSybil stepped over to one of her piles of old books, picked one up and handed it to me. It was the size of a thick Bible. The title was 'The Complete Works of William Shakespeare.' \"Open it,\" she said.\n\nI randomly opened it to...I had to squint...King Richard III.\n\n\"The print is too small for me to read anymore.\"\n\n\"Get some reading glasses.\"\n\n\"I know, but it's something I'd have to try on first.\"\n\n\"Ha! It's funny actually Sybil. The seer needs glasses!\"\n\n\"Haa ha haa!\" She really was beautiful.\n\nI put the book back on to the shelf and watched her ladle four big scoops of stew from the cauldron into each of the two crude wooden bowls. From the stone oven she pulled her bread out with the flat wooden paddle and set it onto a wooden board set between our two bowls. Steam rose from the bread and the bowls of stew.\n\nShe hung the black kettle over the fire.\n\nWe sat across from each other, the bowls were in front of us. I was starving. My mouth was watering. She reached both of her hands out towards mine.\n\n\"Hold my hands for a moment before we start.\" I reached for her hands, they were warm and soft. My skin tingled again from her touch.\n\nShe stared into my eyes with her dark eyes, \"Thank you for this food,\" she started, \"thank you for offering yourselves to us, we are honoured to share our lives with yours. Thank you for bringing Sax Reimer safely to this table tonight, to partake in this feast in your honour.\"\n\n\"Amen.\" I said and then wondered if it was the right thing to say as she dropped her hands from mine. A smile washed across her lovely lips. I immediately missed her touch.\n\n\"Please enjoy,\" she said picking up her spoon.\n\n\"Hmmm is this ever good...\" I said. It was delicious. \"Seriously what's in it?\"\n\n\"As I said to you Sax...frog.\"\n\n\"Excellent frog, Sybil.\"\n\nI couldn't help but devour the food. It was so good. It was exactly what I needed. I watched her as she grinned watching me pack back the stew. It was warm, meaty, with all kinds of vegetables and full of flavour. I felt that I was eating something that was not only tasty but profoundly nutritious too. It was like every cell in my body was screaming in delight. It was physical satisfaction condensed in a spoon. A work of culinary art, borne in the bush.\n\n\"Frog?\"\n\n\"Yes Sax. Bullfrog.\"\n\nI had another two mouthfuls before I asked, \"Tell me, do you eat bear or moose or elk?\"\n\n\"Oh no.\"\n\nI took another two spoonfuls before I asked with a little trepidation, \"Because they have names? They're your pets? Part of your community? What was mama bear's name?\"\n\n\"Gladys.\"\n\n\"That's right Gladys Knight and her two pips.\"\n\n\"Ha ha ha! See you're fitting right in aren't you?\"\n\n\"I get it, Gladys will be just a little tad pissed off if we eat one of her pips.\"\n\nShe stopped eating and looked at me for a moment. \"No Sax. I don't think you get it at all.\"\n\n\"I'm sorry, what do you mean?\" I was trying to be funny.\n\nShe resumed eating. \"We said a sort of grace before eating.\"\n\n\"Yes.\"\n\n\"Who were we thanking?\" She queried me.\n\n\"God?\"\n\n\"Always, but not directly in this case.\"\n\n\"Who then?\" I asked hoping it wouldn't be Hess or Harvey the rabbit for that matter.\n\n\"The frogs.\"\n\n\"The frogs?\" We were praying to frogs? \"Which frogs?\" I asked. That was definitely cuckoo.\n\n\"The ones that gave up their lives to prolong and nourish yours and mine.\" She was serious, staring straight into my eyes. She wasn't smiling. \"The ones in this stew.\"\n\nI stopped eating for a moment.\n\nShe continued, \"Oh the frogs tried to jump away when I caught them,\" she said as she motioned her hand in a frog catching action, \"it's their natural instinct to do so. But believe me Sax, they gladly gave up their lives to continue living on through us. Don't you see?\"\n\n\"I guess,\" I said, I picked up the bread, \"may I?\"\n\n\"Certainly.\"\n\nI broke off a piece.\n\n\"Don't you see Sax, my situation is no different than the frogs. Although my instinct is to jump away in self-preservation, the questions that I need to answer are, should I give up my life to preserve Dee's? Will I continue to live, in a fashion, through her? And most importantly, will humanity be served better by her continued existence on this planet or mine?\"\n\n\"I don't know what to say.\"\n\n\"Neither do I, that's the point,\" she broke herself off a piece of bread \"Well here's the thing Sax. As a seer I should be able to readily answer those questions. But the problem that I have is that my human judgment is clouding my ability to answer. My human instinct just wants me to jump away. I can't see through to the true answers to those questions. Those questions are precisely of the same type and of the same gravity that I'm constantly being approached to answer.\"\n\n\"They are?\"\n\n\"Absolutely. Routinely.\"\n\n\"Really?\"\n\n\"Only this time, because it involves me, I can't answer. I need to consult my community.\"\n\n\"So the seer needs a seer?\"\n\n\"So it seems.\"\n\nIt seemed to me that the candle spontaneously lit itself. I didn't see her pull out a lighter, nor did I hear the quiet roar of a match being lit.\n\nVery odd.\n\nI finished off what was in my bowl by dragging the warm bread through the bowl to pick up the last of the stew. \"Sybil, that was beyond excellent. In a way I'm shocked that something that you've basically scrounged up in the bush here could be so tasty and so satisfying.\"\n\n\"Healthy eating is the basis of healthy living.\"\n\n\"Wow.\" I took a deep breath, \"Sybil, I'm almost afraid to ask, what kind of bread was that?\"\n\n\"It's a variety of local grains and ground meal, mainly reindeer moss, jack-in-the pulpit corns, inner bark of tamarack, it changes from week to week.\"\n\n\"It was very good,\" I said as I cleaned my mouth with the napkin, \"thank you so much.\"\n\n\"And good for you too,\" she added as she picked up the bread, \"please have another piece of bread, you've got to try the jelly I made.\"\n\n\"Sure, but just a small piece.\"\n\n\"We've got to finish it all right now. We can't have waste. The jelly is serviceberry, I made it this year.\" She piled a big thick glob onto my bread and spread it slowly with a knife while staring in my eyes. Somehow she made it an erotic event. The bread and jam was excellent, full of flavour and not too sweet.\n\nI clutched my belly when I finished eating. \"Sybil, words can't express how good that meal was. Thank you so much.\"\n\n\"Words won't have to,\" she answered smirking while reaching across the table for my spent bowl and spoon.\n\nShe stood up gathering her bowl too.\n\n\"Sybil, I'm afraid I need to go to the bathroom,\" I stood up from my chair and stepped over to my backpack, \"where do I go?\" I found my flashlight.\n\n\"A flashlight, how quaint,\" she said as she poured water from a red plastic bucket into a low metal basin sitting on one of the cupboards. \"If you can wait a moment you won't need one.\"\n\n\"Huh?\"\n\nShe put the bowls and cutlery into the metal basin to wash-up. \"There is an outhouse behind the cabin and a well worn path as you step out from the door to the right.\" With a rag in hand she picked up the black kettle from the fire. \"Go right past the woodpile and still shed.\" She poured hot water into the basin.\n\nI must have had an odd expression on my face.\n\nShe held up her hand, the other held a big bar of grayish soap, \"Just give us a moment.\"\n\n\"Us?\" I asked as I slipped my still damp running shoes back on.\n\n\"Yes, Sax, we're a community, not a bunch of magicians. Can you hold it in for another moment or so? You should have said something before to give us a heads-up.\"\n\n\"Very strange Sybil.\"\n\n\"There will be a pile of leaves stacked within easy reach of your right hand.\"\n\nI looked at her funny.\n\n\"Okay off you go. You can leave your flashlight here, you won't need it.\"\n\nI put my flashlight back into my backpack.\n\nWith a little trepidation I stepped out through the front door. It was pitch dark outside and a bit cooler, however it was still a warm July night. I didn't see anyone named Hess, nor anyone else on the porch. It was too dark to figure out if Berlioz was still up the tree. Bullfrogs were groaning away in the distance. I nearly collided with the window as I stepped off the porch and turned the corner around the side of the cabin.\n\nI could not believe my eyes. The path was illuminated by fireflies! They were streaming in from the woods and congregating along the pathway, lighting my way.\n\nSybil really was a witch. At that very moment, I was thoroughly convinced that she was. What I was witnessing, as I walked along the path, was not natural. It was nature, but it was definitely not behaving naturally.\n\nThe outhouse had a carved vent opening in the rough boards of the door, a crescent moon and two stars.\n\nWith the door left open, the fireflies gave off enough light to allow me to go about my business. The leaves were soft, yet strong. Sybil had stocked her outhouse with nature's perfect solution. How thoughtful.\n\nI stepped down the path to wash my hands in the pond next to my canoe on the way back. The fireflies moved in a clump before and around me, almost anticipating my movements, almost leading me on. In spite of the fog, I could see the ground and out across the water for a good ten feet all around me. It was absolutely incredible.\n\nAs I washed my hands, I swear for just a moment, there was a face looking back up at me from under the still water. Very strange. Very strange also that I didn't come across a single mosquito. Bullfrogs, but no mosquitoes, how odd. I wondered if I'd just eaten the frog's siblings and uncles.\n\nThe fireflies dissipated as I stepped up onto the porch.\n\n\"Well that was quite illuminating Sybil. You'll have to teach me how to do it.\" I said as I stepped inside.\n\nShe smiled, \"And you can learn Sax. Anyone can do it. But I have to admit,\" she said with a giggle, \"it is a bit tricky. Nevertheless, fireflies are quick to learn, they're amazingly,\" she turned to look at me with a smile, \"bright.\"\n\n\"Ohhh, groan,\" I said, \"trust me Sybil, keep your day job. Stand-up comedy won't be putting food on your table. Not out here.\" I cupped my face with my open hands, palms out, \"I see your future. I see you...seeing.\"\n\n\"For how long? Sax, that's the question.\"\n\n\"I'm sorry Sybil, I didn't mean to bring that up.\"\n\n\"It's quite alright. Listen, while you were gone I realized that I'd not fully answered a question you had.\"\n\n\"Oh?\" I sat back down on the central chair and pulled off my damp runners.\n\n\"About eating bear, moose or elk meat.\" Sybil was drying a wooden bowl.\n\n\"Mnnuh?\"\n\n\"I've nothing against it. As you know as I explained, their death would indeed be a celebration of life.\"\n\n\"Oh?\" I placed the shoes back by the fire, this time just a little closer, with the insoles facing the low flames and the laces well loosened and the tongue splayed opened.\n\n\"I'm sure they would gladly give themselves up, after a natural struggle of course, just like the frogs or the fish that I catch, but it's too much meat. It would be a complete waste of food, of life. It wouldn't be right. You do understand that?\"\n\n\"I think I do.\" I sat back down in the armchair facing the fire.\n\n\"If there were thirty mouths to feed every night, it would be a reasonable solution, but there isn't. There's only me. And tonight, with only the two of us dining, frogs were fine.\"",
        "\"The frogs were excellent. Who knew?\"\n\n\"Sax. I did.\"\n\n\"Sorry.\"\n\nI looked at the rug under my feet.\n\n\"Isn't this a bearskin?\"\n\n\"Yes.\"\n\n\"Did you kill it and eat it?\"\n\n\"Sadly, yes.\"\n\n\"So you do eat bear meat.\"\n\n\"That was a very special situation.\"\n\n\"Did you have a party or something, with thirty mouths to feed?\" I joked.\n\n\"Huh? No.\"\n\nVery odd.\n\nI looked around the cabin again, but I didn't see a gun. \"How did you kill it?\"\n\nWithout hesitation she said, \"I chopped his head off with that axe,\" she pointed to it hanging by the door.\n\n\"What?\"\n\n\"That's right...\"\n\n\"Did it attack you?\" I cut her off.\n\n\"No, not at all.\"\n\nI just gazed at her in disbelief.\n\nAn uncomfortable moment elapsed, at least for me.\n\n\"Many years ago, I was fishing in Granite Lake and I heard him crying in the woods.\" Sybil's face was all serious. \"He had been shot and was unable to run any further. Whoever shot him, didn't track him.\" She pursed her lips together. \"I had no choice. He was crying for mercy.\"\n\n\"Oh my God!\"\n\n\"You asked.\"\n\n\"Wow.\"\n\n\"That's right Sax, life and death, is serious business. Life is fragile.\"\n\nI didn't know what to say. I did realize though, how insulated my life was from the reality of life and death, especially for the food we eat. I hunt for chicken wings on a menu or in the supermarket cooler. Sybil catches frogs. Maybe her idea of thanking the animal wasn't so crazy after all. I never considered that a bear could cry. If one of Gladys' pips was killed, of course she would be tremendously stressed. I realized how callous my joke must have sounded to Sybil. I wondered if I had the balls to chop a bear's head off, even if it was mortally wounded. And yet, through it all, this woman, who has a better and more mature understanding of life and death, is actually seriously considering trading her life for her niece's? Da'fuck?\n\n\"If I decide not to donate, how long do you plan on staying?\" she asked breaking my reverie.\n\nI gulped trying to bring myself back to reality. \"They said they wouldn't look for me for a week if I didn't make it back into Shining Tree. They said they would just call search and rescue.\"\n\n\"If I decide to donate, we can go tomorrow or the next day. If I decide not to, you are free to stay awhile.\" She paused for a moment and added, \"To be honest Sax, I don't know which way I will decide.\"\n\n\"Where do you meet with your community?\"\n\n\"I'll go across the pond to the black rock over the rise. They want to give you a little space.\"\n\n\"How considerate of them,\" I said, not really believing that I was having that conversation.\n\nShe flashed me a bit of a look, \"It's in deference to me.\"\n\n\"Naturally, I'm just an intruder.\"\n\nShe paused for a second and then said, \"Sax, actually you are an intruder. Not just physically into these vibrant woods, but also into my life, in a very profound way. The community fully understands that. They are not shunning you in any way. They see you for what you are, a messenger or rather an enabler into an important chapter in my life. Have you been bothered by mosquitoes?\"\n\nOdd question, \"No, not since getting here. Why do you ask?\"\n\n\"Fireflies I can control. Mosquitoes I can't. Suggest...is perhaps a better term than control. Mosquitoes are too difficult for me. If you've not been stung it's because of their intervention. You should be thankful.\"\n\n\"I am. Thank you Hess!\"\n\n\"And the rest.\"\n\n\"And the rest!\"\n\nI suddenly remembered the face in the water. \"Sybil, when I was washing my hands, while being escorted by fireflies, I thought I saw a face in the water.\"\n\n\"Ha ha ha, you probably did. Where did you wash your hands?\"\n\n\"In the pond, right next to the red canoe.\"\n\n\"Yup, that would do it.\"\n\n\"What?\"\n\n\"Just splash your hands in the water, right there, especially with the fireflies above the water and he will be there in a flash. His name is Meyer. Did he frighten you?\"\n\n\"Not really, I wasn't sure that I saw anything. Who's Meyer?\"\n\n\"Woo-wooo...the spirit that lives in the pond...woo-woo.\"\n\n\"What?\"\n\n\"Ahh ha haa! Woo-wooo! Ha ha ha!\"\n\n\"Sybil?\"\n\nIt took her a moment but she confessed. \"Meyer is a forty or forty two inch long Northern Pike, he's a dear old boy. A bit doddery though.\"\n\n\"What? Doddery? How can a fish be doddery?\"\n\n\"If it wasn't for me feeding him, I don't know that he'd still be around.\"\n\n\"You feed a big, old pike named Meyer?\"\n\n\"Yes, virtually every day. He gets all of my scraps. And I feed it to him right where you washed your hands. He normally lives ten or twelve feet away.\"\n\n\"What? He could have bitten me?\"\n\n\"No. Meyer would never do that.\"\n\n\"What kind of scraps does he eat?\"\n\n\"Anything with animal protein. So, the bits of frog that we didn't eat, the skin and bones and frog guts, it all went to Meyer. He has a very important function here. But he is very old.\"\n\n\"Meyer is part of your community?\"\n\n\"Definitely.\"\n\n\"And you are meeting with a fish tonight?\"\n\n\"No, just spirits.\"\n\nShe paused for a moment watching me. I couldn't figure out what was kookier, meeting with a fish or meeting with spirits.\n\n\"When are you going?\"\n\n\"Right now\", she answered while feeding the fire with a few thin split birch pieces.\n\n\"What should I do while you're gone?\"\n\n\"Read,\" she pointed to the bookcase, \"meditate, sing, think, pray...just don't jerk-off. That you have to save for when I get back.\"\n\nThat made me sit up straight. \"How long will you be?\"\n\n\"That I can't answer. Anywhere from minutes to...hours. I hadn't thought. Sorry.\" She brushed my thinning hair. \"My gut feeling is that they will dismiss me shortly. I'm the blind one here.\"\n\n\"The seer.\"\n\n\"Yes, this seer is temporarily blinded by what is going on around her.\" She took a deep breath knelt on one knee undid her black moccasin, then the next. She stood up and dropped her robe revealing her stunning naked, white body again to me and stepped towards the door and opened it.\n\n\"Berlioz! Keep an eye on Mr. Reimer.\"\n\nIn bare feet I stepped onto the porch behind her. The black bird flapped down onto the ground before me as she stepped naked into the fog covered path and rock towards the pond. Her naked body seemed translucent in the poor light cast by the crescent moon and candle and firelight from inside the cabin. I watched her cute ass and the dimples on her back above her bum cheeks as she gingerly made her way down towards the water in bare feet. She disappeared into the foggy darkness.\n\nI couldn't make the bird out in the darkness. Only the reflection from the candlelight and firelight through the door made his black eye glisten, giving away his location.\n\nIf she dove in, I didn't hear a splash. If she took a canoe, I didn't hear a sound. For just a moment the fog cleared enough for me to see in the poor light, or imagine, her horizontal ghostly white figure either swimming across the pond or floating above it. Then she completely disappeared again in the darkness and fog.\n\nMy brain said...she had to be swimming or silently paddling the canoe. My gut said, don't be so sure.\n\nBerlioz' eye glistened at me.\n\nI went back inside and closed the door.\n\nI put another piece of wood on the fire and sat down on the wooden armchair. I let the fur blanket flop down over my shoulders.\n\nMy eyelids felt heavy. It had been an exhausting day. And it was topped off with a most comforting meal.\n\nMy bare feet were warm before the fire.\n\n*\n\nMy whole body tingled with joy. Warm soft lips were kissing mine. I had a raging hard on. Sybil's white skin and dark eyes were in front of mine. Her breath was warm, sweet. Orangy red hair wisped out from under her black hood. Small freckles splashed across the bridge of her delicate nose and high cheeks. We kissed again. Warm. Soft.\n\n*\n\nI woke up with a start, momentarily unsure of my surroundings. I was sitting up. There was a fire slowly burning before me. The cauldron brought me back to my senses.\n\nI could hear music.\n\nI stood up, brushed the hard on down in my pants, wrapped myself in the fur blanket and opened the door.\n\nOutside the music was louder and clearer. It was an earthy flute-like music. Unaccompanied. It was soothing yet sorrowful, somehow organic, absolutely stunning. It had to be Sybil. I couldn't make out where the music was coming from. It seemed to completely surround me. It was Sybil, expressed as sound, as music. It was beautiful.\n\nI went back inside and found my flashlight and my running shoes. The shoes were scalding hot and most definitely dry. I turned the flashlight on as I passed back through the doorway. Berlioz' figure was illuminated on the path right in front of the front porch. He opened his broad wings as if to say 'I'm here and you're not going anywhere.'\n\n\"Berlioz, I'm just going to the chair,\" I whispered, \"I want to listen.\"\n\nHe folded his wings back and then stepped aside to let me pass. What a considerate fellow was my initial reaction followed by my astonishment because, I actually expected him to do that.\n\nI shut the flashlight off as soon as I sat down on Sybil's wooden chair by the low wooden table. Berlioz had followed me. He stood next to the chair. I could barely make out his silhouette in the darkness even though he stood only a foot away. I wrapped the fur around me tightly, pulled my feet out of the shoes just enough to let some cool air creep under my soles and listened to the song.\n\n\"It's beautiful isn't it?\" I whispered.\n\nHe shuffled, I thought, in affirmation.\n\nI sat, he stood and we listened to the flute playing. Every note was charged with emotion, her soul was pouring out over the foggy waters of that remote boreal pond. Even the bullfrogs were quiet, listening to her song.\n\nHer location wasn't known to me. She must have had her black robe and hood on. She may have been just a few feet away, or perhaps on the other side of the pond. I couldn't tell. She was everywhere and nowhere at the same time. The pond acted as a bit of an acoustic amphitheater I realized as I sat listening. The rocks that surrounded it, indeed formed it, bounced the sound around in a rapid echo sensation creating a natural reverb effect. I couldn't believe my ears. It was magical.\n\nAnd it was so beautiful.\n\nMy eyes glistened up in emotion.\n\nSybil and this pond were inseparable. At least for half the year. She was a human being totally in her element. I felt so honoured to be able to hear her playing that flute. To witness her, being herself, being human. She truly was...one with nature.\n\nWith my right hand I reached out and gently stroked Berlioz' head. He stood there like an obedient pet. Maybe he knew how I felt.\n\nOnly a beautiful soul could produce beautiful music like that. And Sybil was indeed beautiful.\n\nSuddenly I was filled with an intense despair. It hit me suddenly, like the proverbial ton of bricks.\n\nI didn't want her to donate the kidney. I stroked his head faster.\n\nThe music tempo picked up.\n\nI stroked faster.\n\nIf there was just a slight iota of truth that Sybil's life would be in danger, I didn't want her to do it.\n\nMy temper flared as emotions tore through me. I was jealous.\n\nI stroked Berlioz.\n\nI was somehow claiming ownership!\n\nBerlioz stepped away from me stranding my outstretched arm in the darkness. He knew.\n\nThe flute trilled a loud, high note and then stopped abruptly.\n\nAll was silent.\n\nQuiet.\n\nI could hear my own breathing, my own heartbeat, the blood rushing though my ears.\n\nI took a deep breath and let it out.\n\nStill.\n\nMy chest pounded in the darkness.\n\n\"I've made my decision,\" said Sybil as she suddenly appeared before me out from the fog. One hand held a short carved, ornate wooden instrument as she pulled the hood from her head revealing the large mane of hair, orangy even in the dim light.\n\nFear gripped my heart. I didn't want to hear it.\n\nWith my heart still pounding away, I managed a deep breath, let it out and said, \"Tell me what it is later Sybil. Right now I want to hold you, kiss you and make love to you.\"\n\nSybil held out her free hand towards me, \"Come.\"\n\nMy hand tingled from her warm touch.\n\nBerlioz stood aside as Sybil and I made our way back up to the cabin. The bullfrogs started back up again as we closed the wooden door behind us and secured the simple wooden latch.\n\nShe fell into my arms and we kissed. Her lips were warm and soft. As before emotion flushed through my body in an unanticipated wave. It had to be magic or her brew or something. I was completely filled with joy holding her, hugging her and kissing her.\n\n\"I'm wet,\" she whispered in my ear. My cock swelled in my pants.\n\nHer hair wasn't wet, nor her body.\n\nShe released herself from my embrace and stepped towards the fire. \"Let's get undressed and get straight into bed.\" I undid my clothes, shedding them on the floor. Sybil stepped over to the fire and gently inserted a number of small, split birch logs. She then turned to me and in one motion, her robe slipped off of her arms which were stretched out behind her. Naked, she bent at her waist and untied each of her black moccasins and then pulled one off and then the other.\n\nShe stood up facing me and pulled her gorgeous orangy red hair out from the back of her neck.\n\nCreamy white tits shined in the firelight.\n\nI stood naked before her.\n\nShe smiled looking directly at my cock which was rising on its own at a very rapid pace.\n\nSybil reached out with her right hand and wrapped her warm fingers around my shaft. Her magical touch tingled my cock. \"Very nice Sax, you've a beautiful cock.\" She gently stroked it with her fingers. \"My wish came true.\"\n\nI stepped up to her and wrapped her in my arms. My cock pressed against the slight rise above her pubic hair.\n\nWe kissed.\n\nEvery fiber, every cell, every molecule in my body resonated in joyful bliss.\n\nShe broke the kiss. I looked down at her luscious lips, her big brown eyes shone straight into me. Every little freckle across her high cheeks and top of her nose smiled in unison at me. I was holding an angel.\n\nShe held my hand, smiled and stepped towards her bed. \"Sit here on the mink,\" she whispered holding out her other hand towards the bed.\n\n\"Sybil, am I going to get you pregnant?\" I asked as I sat down. My cock stood straight up.\n\n\"That's very flattering Sax, but there is no chance of that anymore. I really am fifty eight.\"\n\n\"I just know that you're beautiful.\"\n\nShe pushed her left nipple into my mouth. I sucked it in with delight and twirled my tongue around the warm nub as my left hand curled around her body and cupped her tight warm bum. The fingers of my right hand slid up the inside of her right thigh until it found home, Sybil's warm pussy lips. Around and around my tongue went on her nipple as my fingers played with her warm and moist folds. Suddenly her nipple was withdrawn. I watched a small bridge of saliva droop and then snap as her nipple was withdrawn. Her right nipple approached my lips. I sucked it in and twirled my tongue around it. My fingers found her sopping interior.\n\nShe pulled her nipple out and whispered, \"Lay down.\"\n\nI swung my legs up onto the bed and sunk into the thick mink fur. Sybil's hand gently caressed my cock. I watched as her expressive lips opened up and lowered down onto my cock tingling me with delight.\n\nIn an almost slow motion Sybil placed her right knee onto the bed and swung her left overtop of me.\n\nHer big orange bush opened up in front of my face. I inhaled her aroma as her beautiful pussy touched down onto my lips.\n\nPure woman. Pure ecstasy. My tongue and lips tingled, my cock and whole body too. Fireworks were going off in my brain as I lapped at her lips and her luscious interior. With both hands I caressed her smooth round bum.\n\nI found her precious clit and gave it a gentle suckle.\n\nHer mouth bobbed up and down on my cock, drawing it deep into her throat.\n\nHer taste and her fragrance overwhelmed me. I was enveloped in a cocoon of pure sensual and sexual joy. My whole body trembled.\n\nSybil's tongue swirled around my cockhead, first one way then the opposite. Again she plunged my entire shaft deep into her throat and slowly withdrew it ending with an immense suction. It was too much.\n\nI exploded suddenly. Her suction on my cock never let up as my hips jerked uncontrollably and my sphincter flexed spasmodically. Suddenly I became aware that Sybil's hips were rocking and her anus contracting as I continued to lick and suck at her clit. I could feel her bum cheeks flexing in my fingers.\n\nWhen our last contractions passed Sybil lifted herself off of my face and swung around on top of me straddling my prone body. We were both sweaty. Long orangy red hair hung down as she grasped my still hard cock and pushed it into her sopping wet pussy. She sat herself up and simultaneously pushed my cock deep inside of her while drawing her hair back with both hands.\n\nI could see the bliss in her face. Her eyes were closed.\n\nMy hands rose to caress her fat nipples and the swell of her breasts as she commenced to rock her hips grinding me inside her.\n\nShe smiled sweetly as she rocked her hips.\n\nI was humbled by the realization that I could give pleasure to that remarkable, gorgeous woman.\n\nMy hard on was not going away.\n\nI started flexing my hips to match Sybil's.\n\nShe let out a breathy sigh.\n\nOur tempo picked up.\n\nShe was very slippery. And strong. Sybil had the full length of my cock pushed way up inside her. Then she tightened her pussy muscles as she lifted herself off an inch or two. My matching action would pull all but the cockhead clear out of her, followed immediately by my cock slamming back inside her. It was as if she were pulling the cum out of me with her pussy muscles.\n\nWhat joy.\n\nI grabbed her ass cheeks with both hands and started lifting and pounding her down onto my cock.\n\n\"That's it Sax. Fuck me! Fuck me hard!\"\n\nTwo fingers on her right hand slid down her belly and found her clit. Her left hand grasped at one nipple and breast, twisting and squeezing and the next and back and forth.\n\nShe started cumming, \"Auggghaaaa!\"\n\nI kept hammering her down onto my cock. I could feel her contractions on my shaft. They just didn't stop. Her eyes opened up but I only saw whites.\n\nSybil fell forward landing on my chest. I took the opportunity to shift our positions on the mink bed. I flipped her onto her back. Unfortunately my cock slipped out of her during the process. She looked straight into my eyes with seemingly questioning eyes. My actions answered. I pulled both her knees up and apart pinning her calves back to her inner thighs. Her pussy garishly gapping open, glistened in the firelight.\n\nMy cock slid right back into her and my shoulders pinned her legs open and back.\n\nI had a solid footing, a great grasp of her and plenty of stamina left.\n\nI pounded her cunt like an obsessed madman. She kept rubbing her clit and tugging at her fat nipples. Her quivering started up immediately.\n\nSybil's face was all red, surrounded in a sea of orangy red hair. She was only capable of making gurgling noises. Her eyes were rolling every which way. The sweat covering her face, chest and neck glistened, only interrupted by the odd clump of hair matted to her and the odd lines of drool and tears streaking across her face.\n\nI kept my pace concentrating on steady breathing, and muscle coordination. I was starting to feel the fatigue. My heart was pounding.\n\nI changed it up by adding a slow withdrawal, internal rotation to the right, quick stab, internal rotation to the left. I angled up and down and then banged her with five deep jabs. It worked right away. Her contractions on my cock started back up and didn't stop.\n\nThe look on her face was unbelievable...she was just...somewhere else.\n\nAnd she was clearly enjoying a good fucking.",
        "Again I was overwhelmed with emotion and joy realizing that I was able to give her that gift. A good hard fuck.\n\nI couldn't believe how wet her pussy was. I needed and couldn't resist grabbing a quick lick. I pulled out and off of her while still holding her legs apart. I slapped my tongue right into the heart of her pulsing and gaping pussy and came away from the diversion with the most glorious taste of her earthy, feminine pussy juice.\n\nBack in I went into her slippery vagina. Her contractions started up right away again.\n\nThe little diversion, I suddenly realized, did a number on me. Not only did I have a mouthful taste of her delectable ambrosia tripping my senses, but the slipperiness and her constant pussy strangulation of my cock put me in an inevitable collision course with the edge.\n\nShe kept at it. Her whole body was glistening, spasmodically jerking, red, hot, wet and surrounded by her gorgeous hair.\n\nI lost track of time. It just didn't matter. I was so completely focused on pleasuring Sybil.\n\nI gouged her with a deep rotation to the right.\n\nHer orangy, sweaty armpit hairs...\n\nAnd then to the left.\n\nThe nape of her neck, pulsing in mutual contractions with her pussy muscles, clinging onto a few wisps of hair...\n\nDeep push all the way in and hold to feel her contractions.\n\nHer beautiful skin and face...\n\nAnother deep stroke.\n\nThose little laughing freckles...\n\nAnother deep stroke.\n\nHer pulsating vagina...\n\nI came in a torrent. My hips were thrashing, my spine jerking uncontrollably. I managed to hang on. Everything went grey for just a moment and I was suddenly overcome with the heat, the lack of oxygen, my jerking body and the slipperiness of Sybil's cunt. Fingernails dug into my back holding me in place.\n\nOur slippery, sweaty, drool covered mouths found each other and slathered each other's faces between gasps for air.\n\nWhen we had enough face sliding we simply clutched each other. Our hot sweaty chests heaved against each other as we gasped for air into each other's ears. I was entangled in red hair, \"Oh my god,\" was all we repeatedly muttered between gasps.\n\nI managed to pull my weight off enough for Sybil's legs to stretch out below me. I moment later, I slipped off of her and nestled half on my side in the crook between the wall and the mink fur covered bed.\n\nFrom behind her I watched Sybil as she dug cum from her pussy and then smeared it all over her belly, her tits, her thick pubic hair and her cunt. Then she proceeded to lick her fingers clean.\n\nWhat a fuck machine she was.\n\nI had just cum twice without losing my bone.\n\nIt wasn't as if she had multiple orgasms...It was just one non-stop big one.\n\nI was completely amazed. And grateful that I could do my part. Maybe I came too early the second time? Maybe she was actually a little disappointed with me?\n\nOur sweaty skin slid over each other as we continued to gasp for air.\n\n\"Thank,\" breath, \"you,\" exhale, \"Sybil.\" I took another deep breath and added, \"You're unbelievable.\"\n\n\"Thank you Sax. I needed that.\" She also took a deep breath and then in an upbeat voice said, \"That was fun!\"\n\nI smiled. That was a positive.\n\n\"Did I pass out?\" She asked.\n\n\"No. Did I cum too early?\"\n\n\"Oh heaven's no.\"\n\nI couldn't help but chuckle.\"I have to say Sybil, in all honesty, that is the most unbelievable, brain splitting, fantastic sexual experience I've ever had.\"\n\n\"I told you that you were in for a treat.\"\n\nShe kissed me on my mouth. I could still taste sex.\n\n\"Yes and you're quite the hostess.\"\n\nShe kissed me again, smiled and then asked, \"Okay, so what adjectives do you have now to describe me?\"\n\n\"Ooohh, let's see, unbelievably sexy, hot, smooth, beautiful, tasty,\" I kissed her lips, \"wise, gracious, intelligent, fantastic, witty, smart, funny and fun to be with, eminently fuckable, did I mention sexy? Beautiful, old hag of a witch!\"\n\n\"Ah haa haaa!\" She smacked my belly.\n\nI repositioned myself on the bed. We both lay on the warm black fur facing the fire. My soft cock was nestled in the cheeks of her tight ass. Most of her orangy mane was tucked underneath her as I tenderly touched the gentle rise of her boobs.\n\n\"Thank you Sax,\" she whispered.\n\n\"Thank you,\" I whispered back into her ear.\n\nWe lay silently for a few minutes. I was in heaven snuggled up to her precious, warm body.\n\nShe rotated in the bed to face me. Her right hand stroked my left shoulder and she looked me straight in the eye.\n\n\"Sax, I'm going to do it. I'm going to donate a kidney.\"\n\nI gulped and then sighed. \"I was afraid you were going to say that.\"\n\nHer face quirked, \"Why?\"\n\n\"Because I don't want to lose you.\"\n\n\"Oh Sax,\" she smiled, pushed her face forward and kissed me on the lips, \"don't you worry about me. I'll be around this pond for quite a few more seasons yet.\" She pinched my cheek gently. \"Come on, don't look so gloomy.\"\n\nI tried to smile.\n\n\"You should be happy for Dee.\"\n\nI really did try to smile.\n\n\"I am. But I can't help but worry about you.\"\n\n\"Sax.\"\n\n\"When I first came here, just a few hours ago. My first impression was that you were nuts. Actually that's not true. My first impression was that you're not Sybil Varro. Then I came to conclusion that you're nuts. Now Sybil, I have to say that I believe everything that you're telling me...\"\n\n\"Why thank you Sax,\" she cut me off.\n\n\"And if you're telling me that you are going to die of kidney fail...\"\n\n\"Sax,\" she cut me off again, \"I've made my decision. It was mine to make.\"\n\n\"I know. I'm sorry Sybil.\" She brushed my cheek.\n\n\"We can go to Shining Tree tomorrow then. Let's just do it while there's still time for Dee.\"\n\n\"Well, how long does it take to get back to Shining Tree from here?\"\n\n\"To get back to the highway, just a little over two hours. I think. I don't use a watch Sax. But if nobody picks us up from there, or we decide to walk...\"\n\n\"You go that way,\" I asked pointing, \"through Wasa-what's-its lake?\"\n\n\"Wasapika. You seem shocked.\"\n\n\"So I came the wrong way? They steered me wrong in Shining Tree?\"\n\n\"You didn't come the wrong way.\"\n\n\"How do you get here then?\"\n\n\"The same as you. From Cryderman.\"\n\n\"But it's only two hours going the other way?\"\n\n\"With the current,\" she stressed, \"It's a tough trip going against the current up the next section of this river. I've done it many times. It's no joke. I tend to go the other way when I'm going about my business of finding food.\"\n\n\"Okay I believe you.\"\n\nShe nibbled at my neck. It felt so good.\n\n\"So if we leave first thing in the morning...\"\n\n\"After breakfast.\"\n\n\"Okay after breakfast, do you have any more stew left?\"\n\n\"Yes. And after sex.\"\n\n\"Well, hang on. What I'd like to do is make it all the way back to Toronto tomorrow. Can we do that?\"\n\n\"Not if we spend the whole morning fucking.\"\n\n\"You mean making love?\" I said trying to be the gentleman, \"can we make it in one day?\"\n\n\"You mean drive.\"\n\n\"Yes, as opposed to flying by broom.\"\n\n\"Ahh ha haaa!\"\n\n\"We can have sex once we get to my condo and then go to the hospital the next day. And then I'll drive you back here after your surgery.\"\n\n\"I can take the bus.\"\n\n\"Not without money you can't Sybil.\"\n\n\"True. We'll work that out later.\" She paused for a moment before she added, \"Okay, let's leave early in the morning then. We'll take both canoes.\"\n\n\"Can we just tie one up behind the other?\"\n\n\"Yeah, that would be fine.\"\n\n\"Excellent because that way I can watch your cute bum in the seat in front of me the whole way.\"\n\n\"Ahh ha haa!\" She took a deep breath and said, \"Maybe I made the wrong decision. Maybe I should just keep you here as my captured sex pet.\"\n\n\"I'd be good with that, except they'll come looking for me in a few days.\"\n\n\"I'll hide you until they're gone.\"\n\n\"I'll hide myself.\"\n\n\"Ahh ha haa!\"\n\n\"Tell them that you turned me into a raven. Berlioz will play along.\"\n\n\"Ahh ha haa!\"\n\n\"Trust me, they'll believe it.\"\n\n\"They would too! Ahh ha haa!\"\n\n\"Just stir your cauldron like you did earlier.\"\n\n\"Double, double toil and trouble. Fire burn and cauldron bubble!\"\n\n\"And then get Hess to send every mosquito in the woods after them. Just suck them dry and then chop them up and feed them to Meyer. Get rid of the evidence.\"\n\n\"Ahh ha haa!\"\n\nWe were both laughing away until I suddenly realized she could probably do that. I sucked on her nipple as she regained her composure. I recalled young Tom asking, 'why would I want to go looking for Sybil?'\n\n\"Sybil, can I ask you something?\"\n\n\"Anything, go ahead.\"\n\n\"Ben, at the general store in Shining Tree was very hesitant to tell me where you lived. In fact he claimed that he didn't really know.\"\n\n\"He's never been here, at least not while I was here.\"\n\n\"Anyway, he didn't really want to tell me. And so, I almost accused him of trying to protect you.\"\n\n\"I told you he's a sweet man.\"\n\n\"Well, yeah, okay, but...he said something to the effect, 'she doesn't need us protecting her. If anything, it's the other way around.'\"\n\n\"Oh?\"\n\n\"What did he mean by that?\"\n\n\"I'm not sure really.\"\n\n\"Do you protect them?\"\n\n\"Hmm...I would say yes...in the sense that our little community here protects the well being of this corner of the boreal forest, which includes them. But I wouldn't expect him to be aware of that. I think...perhaps...he may have meant that you need protection.\"\n\n\"From who? From you?\"\n\n\"Certainly.\"\n\n\"Why would you say that?\"\n\nShe paused for a moment before answering. \"Sax, are you sure you want to know?\"\n\n\"Yes.\"\n\nShe paused again. \"If you came here with the intent to harm me...you would have been dispatched immediately.\"\n\n\"Hooo! Hell, as it turns out, lucky for me 'cause all I wanted was your life.\"\n\n\"Ahh ha haa! Yeah, but you weren't to know. Your intent wasn't malevolent. I knew that before you set foot anywhere near here.\"\n\n\"So if you wanted to have a gazillion mosquitoes suck the blood out of someone, you could arrange that?\"\n\n\"Perhaps, I doubt that the community would go along with that idea. But theoretically, yes.\"\n\n\"If it were just up to you, how would you have dispatched of me?\"\n\nShe grabbed my cock and balls, \"Death by fucking! Ahh haa haa!\"\n\n\"Aaaggghhhh! You are trying to kill me!\"\n\n\"And you are killing me! Ahh haa ha!\"\n\nWe laughed and then smiled at each other as the dark firelight flickered.\n\n\"Sybil, I'm absolutely convinced your witch's brew really is a love potion.\"\n\n\"Why do you say that?\" I could see she was smiling.\n\n\"Because I'm crazy in love with you, that's why.\"\n\nHer smile widened into a big toothy grin, \"And I love you too Sax. After all, I drank some too.\"\n\nWe kissed. My lips tingled. My whole body did.\n\n\"Wasn't there a love potion in one of Shakespeare's plays?\" I whispered in the near dark.\n\n\"A Midsummer Night's Dream,\" she whispered back, \"now you go and have one because it will be a long day tomorrow.\" She kissed each of my eyes closed.\n\n*\n\nI awoke in the morning with a start. At first I didn't know where I was. I had a face full of mink. The cabin, the cauldron, Sybil, it all came back. I had to piss. I had slept like a frikkin' log. I remembered fucking my brains out last night.\n\nNaked except for my now dry and wearable shoes, I stepped outside, it was bright and already starting to warm up, \"Morning Berlioz, where's Sybil?\" He turned to his left. I turned to my right, Sybil stepped into view carrying an armful of split logs. \"Good morning dear,\" I said smiling.\n\n\"My look at you, good morning,\" she stepped up to me, her hair was wet. She angled her head for a kiss. I kissed her. Joy cascaded through my body, but I still had to piss. Her free hand caressed my now depleting morning wood.\n\n\"I like the look Sax, but unfortunately, so will the mosquitoes. The community has stopped doing their thing in that regard now that I made my decision.\" Her brown eyes twinkled. \"Beautiful morning isn't it?\"\n\n\"It sure is Sybil.\"\n\nAs I sat in the outhouse it dawned on me, in her thick, long black robe Sybil was almost mosquito proof. There was method to her madness.\n\nI got dressed, as Sybil made some breakfast. We had what I thought was a mild wintergreen tea. It was good.\n\n\"Creeping snowberry, leaves and fruit, the stems are a bit bitter,\" she corrected me.\n\nWe had a warm gruel of 'reed seeds' and the last of the delicious frog stew. She also made another patty of bread which was finished with the serviceberry jam. It was all very, very tasty.\n\nI helped her wash up the wooden bowls and put away the cutlery. I watched her as she walked down to the water carrying the cauldron. Next to where her white canoe sat she reached into the water and pulled out two handfuls of small stones and sand and threw them into the big black pot. She dipped the edge into the pond to collect a bit of water swirled it around about eight or nine times and then dumped out the contents right back to where she picked up the stones. She then rinsed out the cauldron twice.\n\nShe smiled as she stepped back up onto the porch carrying the big pot, \"There are tiny little minnows there already.\"\n\nSybil hung the pot back into the still burning fireplace and said, \"Okay I'm ready to go.\"\n\n\"Aren't you going to pack anything?\" I was a bit shocked.\n\n\"I did.\" She pulled a hairbrush and a toothbrush from a pocket in her cloak.\n\n\"That's it?\"\n\n\"I don't have anything else Sax.\"\n\n\"Don't you have, like...street clothes?\"\n\n\"Nope. This is it. This is me.\"\n\nI just couldn't imagine us waltzing into the hospital with her dressed like a witch. They'd probably put her straight into the psych ward.\n\n\"What about the fire?\" It was burning away.\n\n\"We're not bringing that.\"\n\n\"You're not going to put it out?\"\n\nA look of bewilderment crossed her face, \"Sax, it's quite capable of putting itself out. It doesn't need my help.\"\n\nI was still a little puzzled. \"You're not going to bring anything else?\"\n\n\"Canoe and paddle, but seriously Sax, all I really need to bring is a spare kidney.\"\n\nBefore I touched the red canoe I had to try it. I splashed my fingers in the water and then pulled them out and watched. Sure enough a massive pike languidly swam by, his dorsal fin and tail fin poked right out of the water. He disappeared into the deep. Clearly I wasn't Sybil.\n\nI found my flashlight on the outdoor low wooden table. We loaded my backpack into the red canoe.\n\n\"Don't you have a life jacket?\" I asked her as I put mine on.\n\n\"I'm not going to drown Sax. And neither are you.\"\n\n\"Oh, of course.\" And then I realized, \"But it's the law, every boater has to have a lifejacket when out on the water.\"\n\n\"I don't care. Who's going to enforce it?\"\n\n\"Okay, whatever.\" I took the life jacket off.\n\nSybil sat in front, I steered. Her white, empty, eight foot canoe was tied to the back of the red one and simply followed along. I loved watching her thin waist flare to elegant hips and tight ass which even the robe couldn't hide.\n\n\"Isn't your canoe going to bump into rocks and things as we go along?\"\n\n\"Don't worry about it. Smokie will look after it.\"\n\n\"Who the hell is Smokie?\"\n\n\"The spirit of a Cree elder. He's my canoeing guide,\" she held her hand up in the air, \"he's part of the community.\"\n\n\"Of course.\" I know I rolled my eyes behind her.\n\n\"He knows this river and this whole area better than anyone alive.\"\n\n\"Including you?\"\n\n\"Including me.\"\n\n\"How about Gladys or Berlioz or Meyer? They've been here all their lives.\"\n\n\"Yes, but they don't canoe.\"\n\nWe paddled for a while, she would occasionally say, \"That way,\" and point with either her paddle or her hand.\n\n\"Can I ask you something?\" I said.\n\n\"Sure.\"\n\n\"If you're the intermediary between this physical world and the spirit world, as you called it, why do you cut yourself off and live in isolation from other people. In other words, how can you be seeing for your clients, if that's the right word, if you don't actually come in contact with other people?\"\n\nWe paddled for a moment before she said, \"Let me answer that question with an analogy.\"\n\n\"Okay.\"\n\n\"Imagine a big ballroom.\"\n\n\"Okay.\"\n\n\"It's empty, except for you and me.\"\n\n\"Alright.\"\n\n\"Even though we were standing thirty feet apart, we could carry on a conversation, right?\"\n\n\"Okay.\"\n\n\"Now fill that room with people all talking together, laughing, clinking glasses, whistling, singing...we couldn't carry on that conversation even if we were just ten feet apart.\"\n\n\"Okay, but I'm not sure I get your point.\"\n\n\"The point is, for me to be able to see, I can't have a thousand voices drowning out the conversation. In the presence of people, that's what happens. The more people around me, the louder the noise. It doesn't have to get very loud before I just give up trying to see.\"\n\n\"Interesting.\"\n\n\"In a city environment I have to be physically touching the other person to see clear through the background noise and even then it rarely works. Their soul has to be wrenched wide open, the noise around me is so loud. They can't be thinking, they have to be feeling.\"\n\n\"Okay.\"\n\n\"The gift that I have Sax is not unique. Everyone can do it and it's just like playing piano, anyone can learn. Some will be better than others. And it takes practice to learn how to play well.\"\n\n\"So how do you get your clients then?\"\n\n\"They come to me in a fashion.\"\n\n\"They paddle out here to find you?\"\n\n\"No never.\"\n\n\"How then?\"\n\n\"Referral mainly.\"\n\n\"What?\"\n\n\"Sax, I live in a community.\"\n\n\"I don't understand.\"\n\n\"No, I wouldn't expect you to.\"\n\nWe paddled for a few minutes then she pointed to a gravelly beach, \"Land us there.\" I did.\n\nI put my life jacket back on and the backpack on top of that. Like a pro she picked up her eight foot canoe, slung it upside down over her head, tucked the paddle inside and said, \"Follow me.\"\n\nI did. I picked up the red canoe and slung it on my shoulders. Sweating and grunting and bumping in to random hidden branches, almost tripping over mossy logs and almost twisting my ankle on the rocks, but I did. I followed her as she effortlessly glided through the boreal forest. I was sure she had to slow down and wait for me.\n\nWe portaged for what seemed forever, but in reality it couldn't have been more than twenty minutes.\n\n\"Wow,\" I said as I finally put the red canoe back into the water next to her white one. \"What did we just avoid?\"\n\n\"A big shallow bend in the river with gravelly shallow rapids. There's not enough water to make it through. Not at this time of year. And the rocks are too slippery to portage along the river.\"\n\nOff we went again with her canoe trailing behind.\n\n\"How long have you been living here? In the summer,\" I added.\n\nShe took a deep breath, \"A couple of years before my sister died, so eighteen years I guess. It took me a while to let go of the trappings of normal society and to learn how to fully tune in...Ha!...I'm still learning how to tune in.\"\n\n\"Can you honestly say that you're happy here?\"\n\n\"Absolutely I can. It's my home. My life. It's a part of me. And I'm a part of it.\"\n\n\"I've a home too, but it's just a place to live.\"\n\n\"You have a house then Sax, not a home.\"\n\n\"Sixth floor condo actually, I live there, but I'm not part of it.\"\n\n\"That's too bad Sax, I hope you find your home someday. A place for you to actually live.\"\n\n\"I guess.\"\n\n\"Maybe you'll come back here one day.\"\n\n\"Maybe, who knows?\"\n\nA seer would.\n\n\"If you were living out here in isolation, how did you find out that your sister and her husband died? And then make it to the funeral in time?\"\n\nShe paddled three excruciating quiet strokes before she answered. I knew I had asked a painful question. I was cringing by the time she responded. \"I heard her scream in agony at the moment of the collision. I was picking berries at the time. I was literally knocked off my feet. I knew right away what happened. She died instantly. Her husband hung on for another day.\""
    ],
    "authorname": "eclare",
    "tags": [
        "mature",
        "multi-orgasmic",
        "romance",
        "oral sex",
        "outdoor",
        "hairy bush",
        "red hair"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/a-fragile-cup-of-witchs-brew"
}