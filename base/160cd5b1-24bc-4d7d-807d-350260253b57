{
    "title": "The Designer Pt. 02 Ch. 16",
    "pages": [
        "Author's Note:\n\nThank you for continuing to read, vote and comment. I hope to enrich the main characters by showing their history through flashbacks and narratives. \n\nThe main story thread follows along the Past story line, switching between Jeremiah's family of four beautiful women, and Jenn in the aftermath of her rescue. The Present returns to the tale, and focuses on Isaac's awakening of his powers and its effects.\n\nI hope you enjoy this chapter.\n\n*****\n\nPast: Jeremiah\n\nOnce I got Jediah into the RV, I dialed back on the terror. Alyssa was not amused, it is really hard to interrogate someone while they are terrorized. I didn't like the man, none of us did. Alyssa pushed a thought, and while I didn't like the thought, I made an adjustment. Jediah was wildly looking around, his emotions still on edge from my hasty adjustment. When his eyes finally found Alyssa, he didn't recognize her. I pushed another adjustment as he was trying to place her, making it seem she was a close friend.\n\n\"What are you doing here?\" Jediah said, slipping closer to Alyssa, \"That man is trouble, you need to be careful.\"\n\nAlyssa smiled an indulgent smile, and asked, \"I need some information from you, can you help me?\"\n\n\"Anything,\" Jediah said, then searched for a name, a wave of concentration from Alyssa gave him his answer, \"Mary... it's Mary right? It's been so long since I've seen you.\"\n\n\"Yes, I'm Mary,\" Alyssa said, \"It has been so long, hasn't it. I see you have been busy,\" Alyssa nodded towards the back room.\n\nJenn was sleeping, her arms and legs bound spread-eagled, Lexi had crawled onto the bed beside her, and was watching over her protectively. She was naked, but she was relaxed. Carmen saw that Jediah was enjoying the view a bit too much, and walked back to cover her up. I decided to follow, and listen. Jediah kept looking back at me, still wary of my presence. \n\n\"She needs to eat,\" Carmen said, after she tucked a blanket over Jenn, \"She needs good food, maybe some chocolate. She also should have these restraints taken off, if she's asleep now. She needs to not feel captive.\"\n\n\"Why do you think that?\" I asked Carmen, keeping my voice low to hear Alyssa's interrogating in the other room.\n\n\"Unbind her, Papi,\" Carmen said, \"I'll make her something to eat, then I'll come tell you about it. Just hold her and hug her, you and Lexi. You know what to do Lex?\"\n\nLexi nodded, and Carmen went back into the kitchen. Lexi and I removed all of Jenn's cuffs. Jenn curled onto her side, and I slipped beside her resting my back against the rear bulkhead. I pulled her up and let her head rest on my chest. Her hands felt my chest and shoulders, then she relaxed again. She stayed asleep, and I just held her snugly. Lexi slipped against me, and gently caressed Jenn with her hands outside of the blanket.\n\n\"So, what did you do to her?\" Alyssa was asking, \"She should work very well in my house, but I need to know what you've done.\"\n\nAlyssa was obviously playing a part to get Jediah to talk more. I'd rather have his words come gasping between screams of pain, but Alyssa was an expert at getting people to open up. Jediah was more focused on her than on Jenn and I. Carmen's cooking kept me out of Jediah's line of sight, so he relaxed even more.\n\n\"Well, when we found her, she was already very sexualized,\" Jediah said almost clinically, \"A very high sex drive, and very few inhibitions. So she'd work well in any cathouse. We've been training newer girls to be painsluts too. That was the work I did before we brought her here for the final adjustments.\"\n\n\"I see,\" Alyssa said, and her thoughts to me were filled with rage, but outwardly she was composed. \"What were the final adjustments?\"\n\n\"Samuel prettied her up, like he usually does,\" Jediah said, \"You know how well his methods work for making sexy little whores. Then he added those tattoos. Have you seen them?\"\n\n\"I have, they are well done,\" Alyssa said, \"What's so special about them?\"\n\n\"They are charmed,\" Jediah said almost nonchalantly, \"They are tied into her sex and pain systems. The tit and cunt tats activate her sex drive, and the tramp stamp activates her pain response. Right now they are raw, and tender. Any stimulation of the tats will push her into seeking more arousal. That's why we keep them here for a few days. Once they heal they aren't as sensitive.\"\n\n\"I'm not sure they are at all necessary for my house,\" Alyssa said, playing the part of a cathouse madam, \"I like all the rest you have done, can you remove the tattoos?\"\n\n\"Samuel can do that,\" Jediah said, \"I think. I'm not sure. Maybe we should go talk to him.\"\n\n\"In a little bit,\" Alyssa said, \"I have some more questions about your outfit. If I like what I hear, I'm sure I will want a larger supply.\"\n\nCarmen came back in and brought a cup of milk, some small squares of dark chocolate, some cheese and a small sandwich. Lexi softly spoke in her ear, and Jenn began to stir. Carmen combed her hair from her face, and carefully helped her wake up. I focused on Jenn, and let Alyssa's thoughts keep me updated. Her interrogations were mostly clarifying things, rather than seeking immediate answers.\n\n\"Don't let her touch the tattoos,\" Carmen said quietly to Lexi, \"I don't want to her trip back into arousal. We need to treat her drop.\"\n\n\"Her drop?\" I asked, looking at Carmen.\n\n\"Yes, Papi,\" Carmen nodded, handing Lexi a square of chocolate, \"Give her a bit of this and a little milk, little one.\"\n\n\"Okay, what does that mean?\" I asked again.\n\nSatisfied that Lexi knew what to do, Carmen turned to me, \"It's called sub-drop, it is somewhat like narcotic withdrawal. Listening to Senor Asshole brag about what he's done to her. She's got to be feeling a bit detached. He pushed her hard, and pain training can push her into sub-space. That's got to be handled with care.\"\n\n\"Okay, slow down,\" I said, \"New terms and things I know nothing about.\"\n\n\"Okay, Papi,\" You know sex and arousal basically make our minds produce chemicals, right?\"\n\nI nodded, \"Yeah, I read something about that once.\"\n\n\"Okay, well playing with pain and pleasure, that's like giving someone an overdose of those drugs,\" Carmen said, \"Pain triggers the body's natural painkillers, and pleasure pushes more of the bliss feelings. A seasoned dominant can push those natural responses of the body to push a submissive into sub-space. They might feel like they're flying, feeling detached. They aren't feeling much pain, it's a natural high.\"\n\n\"Okay,\" I said, trying to process her words into Jenn's condition, \"Then what is drop?\"\n\n\"Well first, subspace can be a bit dangerous, since they enjoy the bliss and can't feel much if any pain, they can be seriously injured. A good dominant see's the signs of subspace, and starts to prepare the submissive for coming down from their feeling of bliss. They slow down their interactions, start bringing the submissive down for a cozy landing. These assholes threw her in a cage.\"\n\n\"Doesn't sound like you approve?\" I questioned.\n\n\"Well, it's a shitty thing to do, and shows they don't care for the women they enslave. They want them hooked on that feeling. It also plays into an addictive cycle. Everyone loves the highs, but the lows can be self-destructive. When the submissive drops, they need to be looked after and shown love and care. It's important.\"\n\n\"So is that why she's ... insatiable?\" I asked. \n\n\"I don't know,\" Carmen admitted, \"but I've seen submissives that come down hard from subspace crave that feeling again. I'm trying to treat what I can. You and Alyssa can see deeper, maybe with your special angel powers.\"\n\nCarmen smirked at the last remark, causing me to chuckle. Lexi was making eye contact with Jenn. She smiled and offered Jenn some chocolate. I decided that Jenn was in good hands. Closing the door behind me to go back and deal with Jediah.\n\nPast: Kelly\n\nI was starting to feel normal again as I walked with Alyssa and Rebekah towards the large house on the edge of the grassy commons. I watched Jeremiah as he walked back and entered the bus. I didn't like wearing the necklace, it made me feel separate from him, and all the rest of my family. I also understood that I had lost control of my power earlier and it cost one man his life, and almost killed Jenn. \n\n\"Who am I really?\" I asked myself, \"an angel or a demon.\"\n\nI wished I'd have asked Alyssa more about how she understood things. I wanted to talk to my mother, and I wished my grandmother was alive. I needed to know more about who or what I was. I tagged along with Alyssa and her mother, as we entered the house.\n\n\"Is that really her mother?\" I wondered to myself.\n\n\"So, .. um, Rebekah,\" I started tired of being alone in my thoughts, \"How did you become Alyssa's mom?\"\n\nAlyssa chuckled, \"I think you should know about how the birds and the bees work, Kel. Though it seems the morning sickness has gotten better.\"\n\n\"Ha!\" I laughed at myself, and realized that I was feeling better. \"Yeah, I do feel better. I wonder why?\"\n\n\"If you mean,\" Rebekah interrupted gracefully, \"How did I lose Alyssa to foster care, I can answer that.\"\n\n\"If you don't mind,\" I answered, \"If the story isn't too painful to recount.\"\n\n\"To me sometimes, it feels like only yesterday,\" Rebekah said, we had reached the second floor, and she paused outside the door to a bedroom, \"When my husband was arrested, the state took custody of all of our children. Mine and my sister wives. Two of my sisters were too young to have babies. The other two each had a baby girl. Alyssa was the oldest, about four years old.\"\n\nI nodded, trying to put myself in her shoes. I knew that I loved my sisters as much as I loved Jeremiah. I wondered if she had the same attachment to her family.\n\n\"My husband was a halfling, I am just a human,\" she went on, content with talking in the hallway, \"He was a good husband, he took the younger wives more to protect them, than to use them. The other men, still imprisoned, or dead, they were abusive. To the state though it was all abuse, and they were all guilty. The trials were easily won, once they changed venue to a different county.\"\n\n\"It must have been horrible to lose your family,\" I said, \"I can't imagine being apart from my loves.\"\n\n\"Are all of you a family?\" Rebekah asked, \"All five? It's strange to have all of you so close in age.\"\n\n\"Well, we met a bit differently,\" Alyssa said, \"It is a long story. What do we need to do here? I'm sorry to interrupt, but I think we need to take care of some business.\"\n\nI was a bit shocked at how abrupt Alyssa was, but Rebekah nodded, \"You're right, let me call the hospice. I don't think I'm quite ready to go back into that room.\"\n\nShe called the hospice and had a conversation. Alyssa was deep in her thoughts, like she often was when the five of us weren't in the same room. Her face clouded with some confusion, and kept flicking her eyes to look at me.\n\n\"What is it?\" I asked, \"is something wrong?\"\n\n\"Nothing,\" Alyssa smiled at me, \"I'm just keeping track of things, it's hard to be in two places at once. I'm sorry, I should stay present here.\"\n\n\"They'll be along in about an hour. They've called a hearse, and they'll pick up the body when they come, and take it to the mortuary,\" Rebekah said, hanging up the extension, \"We can go talk more downstairs.\"\n\nWe followed her downstairs, and I was relieved. I really didn't want to see a dead body, not another one. She set us down on a sofa, and went to go retrieve a tray from the kitchen. Alyssa again looked distant, and fidgeted restlessly tuned into the trio in the RV. I was a little irritated, being disconnected by the pendant. I reached to pull it off.\n\n\"No, Kel,\" Alyssa said, \"Net yet, I'm sorry. I need to go down and help with something. I'll send someone to get you when I'm ready. Can you please keep my mother company?\"\n\n\"Ummm,\" I said, even more irritated, but I plastered a smile on my face, \"Okay, Aly, if you think it's best.\"\n\n\"I'll be back as soon as I can,\" Alyssa said then turned to her mother, \"I'll be back up in a few, I want to introduce you to Jeremiah. I need to take care of something in our camper.\"\n\n\"Okay,\" Rebekah said with a cloud of concern on her face, \"Is everything alright?\"\n\n\"It's fine, really,\" Alyssa said, excusing herself and leaving me alone with her mother.\n\n\"So...\" I said, not really knowing where to start.\n\n\"You have a wonderful gift,\" Rebekah said, \"Your ability saved that poor girl's life.\"\n\n\"Well,\" I said, feeling guilt rise up in my gut, \"I was the one that almost killed her too.\"\n\nShe nodded and looked towards the ceilings, \"Yes, I've heard stories. Deacon witnessed one of your kind, the story wasn't pleasant. As horrible as it was though, it served a greater good.\"\n\n\"What do you mean?\" I asked, \"I killed a man, and almost killed my friend. I don't see much good coming from anything I've done.\"\n\n\"I suppose it will take time to see the good that comes from this dark day,\" Rebekah said thoughtfully, \"In the story Deacon related, the deaths of the other halflings by the last Baraqiel crippled the corruption in our community. It didn't end it, but it was the beginning of the end.\"\n\n\"I think she was my grandmother,\" I said, \"Alyssa told me her story, how she killed three men here. It seemed to be an incredible story. Many of my grandmother's stories I thought were like fairy tales. I didn't believe they could be true.\"\n\nI thought about my grandmother. She could be so loving in many things, but if she got angry her temper was legendary. She always ended up telling us a story to prove her point. Trying to scare us into obedience. I knew she loved me, and my mother. She tolerated my father, and when she died, she was ... tired. Tired of life.\n\n\"Much of what I've seen and experienced here is hard to believe,\" Rebekah said, also growing quiet. \"I spent the last 15 years basically being a puppet to the man up there. He never touched me, physically. But his mind kept my body captive. I did his bidding, took care of his house, then took care of his physical health when he became sick.\"\n\n\"That must have been horrible,\" I said, \"Did you have any privacy, could you do anything for yourself.\"\n\n\"He let me have my own thoughts,\" she said, \"He had to, because I hated him for his control. But physically, I couldn't do anything to him. It became easier not to fight him. It is a bit of a vacuum now. Which is frustrating, I don't want to miss it, but I do.\"\n\nI nodded, \"I can understand that,\"\n\nI felt more isolated and alone with the pendant on. I needed to find control, and become stronger. I needed the link to Alyssa and Jeremiah. I needed to feel them even though they were only a short walk away. I touched the stone on my chest, then lifted it off, and tucked it into the pocket of my jeans.\n\nPast: Alyssa\n\nInterrogating this corrupt man was like plunging a toilet with a stopped up pipe. Each time I'd ask for something new, a new slice of horribleness would come out of his mouth. He had a distaste for women, of all kinds. He only had a wife to try and produce an heir, there was no love in that relationship. He recruited college freshman into a life of prostitution and drug addiction. He profited from the sale of females as sex objects. He raped women with regularity. He was a horrid man, and I couldn't wait to be free from him.\n\nUnfortunately he had no idea how to fix Jenn. The only person he thought could help was, unbeknownst to him, dead in the cinder block building. The only good news is that the tattoos presently were new and raw, once they healed they wouldn't be so acute in stimulating their craven responses. Perhaps Jeremiah could condition Jenn to be able to resist the urges the tattoos initiated. \n\n\"I think you need to sleep now,\" I said to Jediah.\n\nImmediately his head slumped to his chest and he slid to his side on the sofa. His hands were still cuffed behind his back. I looked around and Jeremiah was just coming out of the back room. He look concerned but peaceful, we needed to talk. Almost at the same time I felt Kelly's mind link into mine. I welcomed her back, and suggested that she come back to the bus.\n\n\"Can you help me haul him off the bus, please,\" I implored Jeremiah. \n\nHe nodded and we took him out the door and laid him on the gravel of the drive the cruiser was parked upon. Kelly was coming down from the house. Rebekah stayed at the door, waiting for the hospice care that would take care of Deacon's remains. I waited until Kelly got to us, then the three of us went back inside the cruiser, and sat on one of the sofas.\n\n\"How is Jenn?\" asked Kelly.\n\n\"She's okay...\" Jeremiah allowed, \"the tattoos apparently are charmed to provoke arousal or something when touched. She can cycle into a needful state rather quickly.\"\n\nJeremiah looked a bit guilty, and I knew he, Carmen and Lexi had sex with her. Perhaps he felt that he'd violated her. Kelly had no idea of the threesome's actions as she was wearing the stone, while I had felt all of their emotions and feelings. I was still feeling the after effects of the arousal. I wanted to probe Jeremiah so there would be no secrets.\n\n\"You had sex with her,\" I reminded him, \"Was it something you couldn't resist? Did it seem to have any supernatural pull to engage?\"\n\n\"You what?\" Kelly said, her eyes widening.\n\n\"Let me explain, Kel,\" Jeremiah said.\n\nAs he explained what he'd walked in on when we separated earlier, Carmen and Lexi came and joined us sitting on the opposite couch. They nodded as Jeremiah said they were just acting on the feelings of their aggression from our encounter. Jenn was an active participant, even initiating things by kissing Carmen. Carmen had reattached Jenn's restraints when they left her alone so that she would not hurt herself.\n\n\"It reminded me of when I caught you two having sex with her back in school,\" Carmen said, \"I have a visceral attraction to that girl, and her responses to my kissing her just sort of grew. By the time Jeremiah was there we were all involved.\"\n\n\"Yeah,\" Lexi said, \"It just sort of happened, I didn't feel any weird suggestions or impulses until after we stopped. Jenn just wanted to keep going, said she needed it.\"\n\n\"She's been mistreated,\" Carmen said, \"Badly. We need to be careful, and at the same time we need to support her. She's in bad shape.\"\n\n\"Yes,\" I said, \"I questioned that man, Jediah, that's tied up outside. He said the tattoos are permanent. The only person that could remove them, as far as he knows was Samuel. Samuel is apparently the dead guy in the workshop.\"\n\nKelly dropped her head at that, and I pulled her close. Jeremiah hugged her too.\n\n\"I didn't know what I was doing,\" Kelly said, \"I became this ... animal. I felt fangs and claws grow, it all felt like it was part of me. That scares me, that side of my powers is frightening. I became a demon.\"\n\n\"You did change,\" Lexi said, \"but we were all there, and we helped you. I didn't understand what had happened, but the stone helped control you. If we didn't have the stone, I'm not sure I could have stopped you.\"\n\n\"The stone!\" Carmen said and felt around her waist, \"Where did that plate go? I had it when we went into the shop, but I don't remember what happened to it.\"\n\nShe disappeared into the back room, and looked around the bed, where she and Lexi had stripped earlier. Then she came back in, and grabbed Lexi.\n\n\"Come on, Lex,\" Carmen said, \"Help me retrace my steps.\"\n\n\"We'll all help you,\" Jeremiah said, \"I think we all need to stay together now. I don't trust this place.\"\n\n\"What about Jenn?\" Kelly asked, \"She'll be alone.\"\n\n\"Dammit, that's right,\" Jeremiah said, \"Okay, Kel you and Alyssa stay with Jenn, I'll go with Carmen and Lexi.\"\n\nThey filed out of the cruiser and I sat with Kelly. She was deep in thought, her friend was rescued, and she reached into her pocket. Her thoughts rambled as she touched the stone, and pulled it from her jeans. ",
        "\"Maybe this can help Jenn?\" she asked aloud, looking up to me, \"I feel like I need to do something to help her. She seems so desperate, and so different than the fun friend I knew at school.\"\n\n\"We can try,\" I said.\n\nI took her hand, and at contact, her thoughts returned. It's odd to describe the telepathic link I shared with each of them. We didn't communicate in words, but more feelings and emotions. I could send a suggestion, and I could feel a response. The absence of that connection with any of my family felt like an odd ringing in my brain. With other people, I had to push my telepathy, actively work at understanding their connection, or pushing a suggestion. With family though it was effortless. I began to understand how Rebekah had been controlled by Deacon.\n\nKelly and I walked on either side of Jenn. She was covered by a blanket and resting, but she was still naked. Her wrists and ankles spread wide making the shape of an X on the bed. Kelly leaned over and placed the necklace on Jenn's chest, then her hand drug across her friend's enlarged breast. The star tattoos darkened as she inadvertently touched it.\n\nIt was as if a match ignited, Jenn's nipple hardened rapidly. She took in a deep breath and moaned in arousal. Kelly looked shocked as her friend's eyes open and she tried to move her arms. The arousal from the touch sparked the other tattoo on her chest, which darkened as the nipple hardened. It felt like the room was suddenly warmer. Kelly feeling the arousal, and unprotected by the stone began to glow. She looked at her friend, and lowered her mouth and kissed her deeply. \n\n\"Um, Kel,\" I started to say. \n\nBut her powers were blossoming, and the arousal poured off of her and her friend in a wave. I was still feeling the arousal of the other three's encounter with Jenn. As much as I tried to fight it, I was compelled to reach out and touch Jenn's thigh. I licked my lips at the feel of her warm flesh, and moved my hand upwards.\n\nKelly's kiss deepened, and she started pulling her blouse off her chest. Giving into to the arousal that suddenly flooded the room. Jenn's body pulsed as she struggled in her restraints. My fingers ran lightly over her bare labia then traced the edge of the flower above her mound. The tattoo darkened and Jenn's hips rolled. I watched her labia engorged at the supernatural stimulation. Leaned over and kissed that dark flower and inhaled the scent of her arousal. \n\nKelly was pushing off her jeans and panties. I tugged off my tee-shirt and stood up to push my jeans down. For a moment, I breathed the cool air just outside the aura of the pair on the bed. I had a moment to turn away, but I the arousal in my body was too much. I slid onto the bed, and unbuckled Jenn's ankles.\n\nKelly was kissing, licking and sucking on Jenn's rock hard nipples, her bare chest pushing against her friend's tan side. I lowered my mouth, my fingers spreading Jenn's labia and kissed the wet folds. I licked and sucked the succulent emissions flowing from her core. The small room began to fill with her moans.\n\n\"Oh yes,\" Jenn sighed \" God your tongue, lick deeper. Kel, I want to feel you, uncuff me.\"\n\nKelly spread her arms and faced her friend, kissing her lips as her hands worked at the cuff's buckles. When Jenn's arms came free, she embraced Kelly fully. They kissed as their breasts mashed together. Kelly lifted her legs and straddled Jenn's prone body. I lifted my head and licked at Kelly's exposed cunt. Her taste was sweeter, and the glow she was putting off only intoxicated me more.\n\nMy sexual need grew, and I shifted up, and scissored one of my legs, under Jenn's thigh. I leaned forward and ground my own aroused cunt against Jenn's mound. My fingers digging into her hip to pull her closer, and ground my hips to crush our mounds together. Kelly ground her pelvis into Jenn's firm abdomen, her cunt slipping over her belly, running the ring Jeremiah had pierced her clit hood with against Jenn's belly piercing. \n\nI cupped my hand over Kelly's sex, \"Lift your hips up, Kell,\" I moaned grinding into Jenn's active thrusts, \"I want to lick you more.\"\n\nKelly pressed up on her thighs, and lifted her hips. My hand rubbing and helping her as I lowered my mouth to her sex. She moaned into Jenn's mouth as my tongue lapped between her fragrant folds. Then our bodies shifted and moved. I ground into Jenn and she humped up to add friction to our tribbing, driving my arousal sky high. I lapped at Kelly's open folds, sucking her juices, then licking up and circling her anus.\n\nShe moaned at the new sensation, and my tongue pressed into the tight ring. I spat and licked at her nether opening. My hand moved to rub that delicate ring over her clit. With my other hand I pressed a finger into Kelly's ass. My mouth moved freely from her anus to her lower labia, coating her flesh with my saliva and her own arousal. Her body rolled trying to get more. \n\nJenn was panting, her moans keening as my hips ground harder. I pulled back and thrust, pounding my sex into hers. Our bodies folded into each other, with Jenn trapped between us. The sapphic movement of our flesh in that small bed only fueling the heated lust we felt. Kelly's aura bloomed and I felt my peak coming. I felt Jenn's thoughts invade my brain. I was overcome at how frantic her sexual need was, and sought only to fill it. \n\nI came as I felt a new connection to Jenn's mind form with our hive mind, my body shaking in response to my orgasm. My web of thoughts pushed out and Kelly started convulsing, flooding my mouth with her orgamic spending. I felt Jenn freeze up and then her spasming cunt was flooded by my hot fluids as our hips ground together to prolong the bliss we all felt. We all stiffened, then relaxed. Our bodies feeling like gelatin as we sprawled entwined together on the bad.\n\nPast: Jeremiah \n\nCarmen led the way, hurrying back to the cinder block hut. Lexi and I followed belong, knowing the jeweled plate was something we didn't want to lose. We entered the dark room, and I searched for a light along the wall. Lexi slipped past me and helped Carmen look near the center pedestal where Jenn had been chained. I found a switch, and the room brightened. I watched as Carmen and Lexi looked around the table, avoiding the bloody mass of the dead man. \n\nCarmen got on her hands and knees, and finally, in the brighter light, saw the edge of the plate just under the shoulder of the dead man. She grabbed the edge and pulled it from under his bulk. She looked at me and waved the plate. I felt a sudden surge of lust, and looked at Lexi. She must have felt it too, because her body grew suddenly fluid as she looked at Carmen kneeling on the floor with the plate.\n\nI didn't place where the wave of lust came from, then it felt normal. It felt more like it normally did, and I realized it was coming from Alyssa, and then supercharged by Kelly. I tried to shake my head to stay on task. Carmen looked confusedly at both of us. But Lexi leapt at her and the plate clattered to the ground. Lexi was kissing her deeply and pulling Carmen's top off. I opened my mouth to try to gain control walking towards the pair.\n\nThe closer I got to them, the more they deepened their kiss and more frantic their embrace. Carmen's face revealed that now she felt the telepathic waves emanating from the cruiser. She pulled off Lexi's top and lowered her mouth to the small redhead's perky breasts. I reached out to break up the pair. When I touched Lexi, I leaned forward. My hands gripped the back of her head, tugging a handful of her amber mane then kissed her deeply.\n\nShe responded by turning her torso towards me. Carmen shifted to Lexi's other breast, sucking deeply. Lexi stroked my thickening cock through my trousers and then unbuckled my belt. I parted the kiss and pushed down my trousers. Her mouth twisted and she reached her hand to my shaft, then hungrily sucked the head into her mouth. \n\nI gave into the passion and lust that had overwhelmed us. Fueled by Kelly's powers and flowing into us through Alyssa's links to our collective hive mind. We moved away from the gruesome dead body, and I tossed Lexi over the edge of the pedestal. My hands pressing her frame into the rough wood. Carmen shed the rest of her clothes and pulled up onto the pedestal opposite Lexi. Lexi tossed her head looking back at me as her thighs parted, her stance widening.\n\n\"FUCK ME, MASTER!\" she pleaded her ass grinding back at me.\n\nCarmen slapped Lexi across the face, make her head spin, as she looked at the dark eyes of her lover. I gripped her ass, holding her still, my cock poised at her entrance.\n\n\"You slut,\" Carmen said, \"use your fucking manners.\"\n\nLexi turned her head back towards me, \"Please, master, use me, fuck this one hard, please.\"\n\nI thrust at her first, \"please,\" which made the rest of her pleadings dissolve into a satisfied mumble. Carmen gripped her head, and dragged her open mouth between her spread legs.\n\n\"Better,\" Carmen spat, \"Now eat my fucking cunt, fucktoy.\"\n\nThe whole interlude had turned hard and violent. I wasn't gentle in my thrusts, pounding into Lexi's small body that was bent over the wooden pedestal. I held her torso down, as my hips drove my thick shaft into her cunt. Her body ground into the platform, my weight pressing her tits into the rough wood. She growled at the hard fucking, and possessive use of her body.\n\nCarmen had shifted, one hand gripping Lexi's red mane, holding her down as she ground her hips up into Lexi's open mouth. Carmen's back arched and she gripped a full breast with her other hand. I watched Carmen's face, her eyes lifting to mine, her passionate need painting her features.\n\n\"Save some of that cock for me, please Master,\" she panted, \"I need to feel you slam into my cunt.\"\n\nI grunted, and hammered harder. Slapping Lexi's ass she she pushed back to meet my thrusts. My hand pressing her down, holding her body trapped against the platform. Lexi was overwhelmed and tripped off into orgasm. Her small body seizing as her nerves overloaded. I pulled out and pushed Lexi to the side. \n\nLexi rolled to the side and faced Carmen and I. Magnetically we moved together. I reached and grabbed Carmen's ankles and pulled. She lifted her ass from the platform and crabbed with her arms. I shifted my hands to her thighs and yanked her to the edge, then with a rotation of my hips, felt my hooded crown engage her well lubricated lips. I thrust deeply, groaning as I watched Carmen's eyes roll back into her sockets. \n\nI leaned forward and gripped both of her breasts, pushing her down into the table. She wrapped her ankles around my thighs, and held me to her as I fucked her hard. My hands clamping into her breast flesh, I used them like handles. Tugging at them, then pushing her into the rough wood. \n\nLexi recovered and crawled back onto the platform, looking at me with lust glazed eyes as she faced me above Carmen's head. She rose up and lifted her knees, as Carmen lifted her arms. Lexi straddled Carmen's head and ground her cunt against Carmen's mouth. Carmen groaned as she tasted Lexi's spendings and bucked her hips up at my hard thrusts. \n\nI leaned forward, pulling one hand from Carmen's firm breast and reached behind Lexi's head. I gripped her mane of red and tugged her closer, then kissed her deeply. The three of us roiling in our maddened haze of lust and passion. We fucked hard our bodies gleaming with sweat in the tight space of the warming hut. Together we raced to our peaks, then exploded as we felt the seismic waves of the orgasms of the trio in the cruiser flow through our brains.\n\nCrashing through into the bliss afterwards, I rolled beside Carmen. Together we leaned into Lexi between us and panted as we recovered from our frantic fucking. Our thoughts a cloud of confusion as we waited for our bodies to relax and our senses return.\n\nPresent: Beth\n\nI couldn't take my mind off what happened after we'd left the coffee shop. I had gone to the coffee shop wanting an apology from Zac. However, I also intended to distance myself from him. We were getting close, and I had felt maybe too close. I'd turned 18 three months ago. I was graduating high in my class. I wanted to go to college. I didn't need the complications of a teenage romance.\n\nZac was incredibly handsome. His smile always lit up any room he was in. His character was even more attractive. I recognized I was jealous over Stacy's fawning over him. He and I had never had that much intimacy. I had reasoned in my mind that was another reason I should take a stand and remain friends.\n\nUntil I saw him smile. He seemed to glow as he walked into the coffee shop, and I slid his customary Mocha Java across the table to him. He was apologetic about the previous night. I barely heard much of his words. I tried to steel myself to go forward, to stay friends. I tried to talk about mundane things. But every time I looked at him I remembered Stacy kissing him. The jealousy I felt overwhelmed me.\n\n\"His lips are for me,\" I thought, \"I need to find out if that is true. If they are truly mine.\"\n\nI leaned over the table and kissed him there in the coffee shop. The effect of that kiss, in that moment was like nothing I'd ever felt. I knew about sex, though still a virgin. I knew how my body responded to arousal. I masturbated, not daily, but enough to know I enjoyed the feelings. The light touches, the teasing of fingers over my breasts and then lower. The weight in my core that grew until I had to find release. That kiss was like a thousand dark nights of me slipping a finger inside my pussy. It made me crave more. \n\nNow, I wondered, \"what was different\"?\n\nI had driven home from the coffee shop, where Zac had dropped me off after Blueberry Hill, in a blissful daze. Even now hours later, I still felt light on my feet. It was different than the friendly love I knew I had for him. Our friendship had shifted in the last few hours. \n\n\"Is it love?\" I wondered, \"Or just hormonal lust?\"\n\nRegardless, I couldn't go back to the affectionate love, now my love had a physical component. \n\n\"Why was I aching to feel his touch again?\" I wondered, \"Am I addicted to him.\" \n\nThat feeling scared me, and aroused me simultaneously. I looked at the phone, and then away. I looked at my alarm clock. Ten thirty. I could wait until morning. Tomorrow was Sunday, I'd sleep in late, then call him.\n\nI dialed his number automatically, \"Zac,\" I asked in a whisper, \"Can I come over?\"\n\n\"Beth?\" Zac answered, \"Ummm... yeah. You know how to come in the sideway?\"\n\n\"Uh huh,\" I answered, \"Behind the garage, turn left, your room is on the right.\"\n\n\"Yeah,\" Zac said, then paused, \"Ummm... how long?\"\n\n\"I need to wait until my parents are asleep,\" I schemed, \"then I'll be over... an hour? I hope less. I want to kiss you more.\"\n\nI could feel him smile, even through the phone, \"Just kiss?\"\n\n\"And other things...\" I drifted off, and imagined his fingers were mine as I lightly brushed over my nipples, as soft moan escaping my lips.\n\n\"Mmm.. I like the way you sound when you moan,\" he said, catching me, \"I'm already hard thinking about you.\"\n\nWe talked more, teased more. Quietly, into the phone. His words working like a physical touch. He directed me, told me where to touch. What he would do. My fingers obeyed his bidding, and then were plunging into my pussy. My back arched as he talked me through what he would be doing to me. I came with a shudder, a quiet gasp into the phone. \n\n\"Hurry Beth,\" he said, \"I want to do all that for real.\"\n\nI clicked my cell phone off. I flipped the camera on, and took my picture. Just my breasts with my nipples still achingly hard down to where my hand covered my mound. I sent that to him with a text.\n\n\"Thank you, lover,\" it read.\n\nI looked at my clock. Eleven fifteen. I could sneak out safely in fifteen minutes. But if I was really quiet, I could make my escape now. I grabbed my car keys, and slipped from my room. The halls were dark, as I crept along the floor. I remembered where the one squeaky floorboard was and avoided it. Taking the long way to the door in the laundry room that didn't squeal like the one in the kitchen.\n\nWhen I started my car, and the radio dials glowed the deep blue. The numbers read 11:25. The blue hue reminding me of Isaac's eyes. I drove off quietly. I wondered how it would feel to wake up with his flesh against mine. Could we sleep and make love at dawn?\n\nPast: Alyssa\n\nIn the lull of arousal, I tried to rearrange my thoughts. The bliss of the Kelly's afterglow felt like a warm blanket as I snuggled with my two lovers. I could easily sink back into the throes of passion, the taste of the climax of Jeremiah's threesome was like a bite of good dark chocolate. I shook my head slowly, rising from Jenn's breast.\n\n\"Focus,\" I sent to my family, and rose to get dressed.\n\n\"What?\" Jenn asked, looking at me.\n\nI hadn't said anything aloud, and I looked back at her with confusion, then shock, then understanding.\n\n\"We need to focus,\" I said, \"We need to get you away from here, and take care of you.\"\n\n\"Who are you?\" she asked softly.\n\n\"She's Alyssa,\" Kelly said kissing Jenn's cheek. \"She's our sister.\"\n\nKelly slipped up and started dressing too, resignedly putting on the pendant that had fallen to the side of the bed. \n\n\"I guess this doesn't work with the tattoos,\" she said, but smiled, \"I'm glad we found you Jenn.\"\n\nJenn blinked, as she felt the absence of Kelly's aura get sucked out of the room. I also felt a pang of withdrawal as her mind drew away. I didn't know the answer to how we could stay focused. I'd need Jeremiah's help.\n\n\"On our way,\" I felt him echo.\n\nJenn struggled, her thoughts now linked with mine were a jumble. Her arousal was almost a constant pang of need. It almost throbbed to feel it, and I wanted to distance myself from her. I also wanted to care for this new sister. I didn't understand exactly how she had been assimilated into our web of thoughts. I didn't understand how the five of us did at first either. I did a mental role call, and with the exception of Kelly everyone reported in.\n\nI felt Lexi and Carmen's thoughts welcome Jenn. This seemed to have a soothing effect on her thoughts, although her flesh was still aroused, her nipples looked achingly hard. I pushed a thought, then laughed at myself.\n\n\"Let's find her some clothes, Kelly,\" I said aloud, with a smile, \"When you feel you're strong enough, you need to take that pendant off, I miss you when you wear it.\"\n\n\"Okay, Aly,\" she said.\n\nJenn sat up in the bed, and for the first time almost looked normal. Jeremiah, Lexi and Carmen entered in the front and headed towards us. Kelly was searching through her drawers.\n\n\"I'm not sure I have any bras that will fit,\" she said.\n\n\"Jeremiah,\" I said aloud, while sending a thought, \"We need to adjust some things. We all need a bit more self-control. Jenn's body can also be shaped to be more.. her?\"\n\nJeremiah nodded, and then I felt him scan and adjust each of the girls starting with Kelly. I couldn't sense their moral curves, but I could feel how delicate his adjustments were. It felt like a surgeon doing a small suture. I felt myself feel more normal, less tempted by Jenn's naked presence.\n\nJenn's posture returned as he reached into her mind again. In the aftermath of Kelly's aura, her tattoos seemed to be less fresh, more healed. That was a good sign. She slipped to the edge of the bed under her own power. \n\n\"Can someone explain to me why I feel you in my brain,\" she asked, holding her head, \"I don't know what any of this means.\"\n\nJeremiah knelt and looked into her eyes, his features softened as he felt along her curve. She looked at him, as he made more adjustments to her curve. He smiled as he performed her surgery, he was relieved his changes were working.",
        "\"We are special,\" he said, \"I'm Jeremiah, and this is Alyssa. You know Kelly. We are special and can do special things.\"\n\nShe nodded, and I pushed more thoughts and feelings towards her to help her understand. Jeremiah pulled her to standing. The four of us surrounded her, I slipped back, letting Carmen and Lexi get closer.\n\n\"Can I help you return to your real shape, Jenn,\" Jeremiah asked, \"I want you to be yourself, not what they have changed you into.\"\n\nJenn looked confused, then worried. I pushed more comfort and I felt a flood of the same from the other girls. Jenn smiled shyly, finally coming to and understanding. \n\n\"Okay,\" she said, \"These boobs are horrible on my back, but please don't put back the cellulite.\"\n\nHer smile lit up the room. Jeremiah was careful and tender with his touches. She accepted the changes with a few tremors of arousal. His self-control adjustments helped us all to focus. Jenn grimaced as her breasts shrank to her normal cup size. Carmen and Lexi helped Jeremiah to mold them and improve their appearance. The tattoos there darkened and her nipples engorged.\n\n\"mmmnnfff,\" Jenn complained, at the uncomfortable arousal. \"too much, that's good, please.\"\n\nJeremiah backed off and just made minor adjustments. Her shape changing from a pure sexual object to a beautiful young woman. Her appearance less private dancer and more more ingenue. Kelly carefully pulled off her pendant, and concentrated on Jenn. She projected her glow, and her body seemed to heal. The tattoos faded from the angry black to a more subdued color. Jenn was able to relax.\n\n\"I can't make the tattoos go away,\" Jeremiah said, \"I think we can help you to control yourself. But they'll always be a bit sensitive.\"\n\n\"Well,\" Jenn said with a smile, accepting Kelly's offer of a bra, \"I kind of like them. They can be hidden under clothes. I like the way they look when I'm naked.\"\n\nSatisfied, Jeremiah nodded at me. We both walked towards the front, and the four girls stayed behind and helped Jenn get dressed. With Jeremiah's adjustment to Kelly's self control she was able to keep her influence in check. As we walked to the front, Jeremiah pulled me to a seat.\n\n\"How did we add her?\" he asked.\n\n\"I don't know,\" I said, \"It just happened. I don't fault you for earlier, I fell under the spell pretty easily. Together though, with her inside with us, we can fight the influence together.\"\n\nJeremiah nodded, in deep thought, \"I can't keep adding more women,\" he said with some resignation, \"I feel for Jenn now like I do any of you. Connected, entangled. I hardly know her though.\"\n\n\"You hardly knew Kelly, Lexi and Carmen too,\" I reminded him, \"We'll figure this out.\"\n\nWe were interrupted by the sound of cars coming up the drive. We looked out the side windows and saw a large Hearse drive up to the main house. The four girls joined us, and we all went out to help Rebekah in anyway we could.\n\nPast: Rebekah\n\nBeing alone in one's mind is fairly liberating, I must admit. It is hard to describe the number of manipulations that I had suffered being under the influence of Deacon's evil mind for so long. This day had started out so drearily normal. Giving Deacon the sustenance he needed so he could continue to dominate my mind and body. A chore I wish I could have sabotaged a million times, but he was always present and if I tried to poison him... \n\nFor a man that had declined so drastically in his physical form, his evil machinations seemed to grow more corrupt. I could never escape his presence, and if I did disobey, he treated my body like a toy. I couldn't fight it. He would make me call one of the normal men, have them come over. They would rape me. Though to be fair to them, it must have seemed consensual. I didn't know if Deacon could feel what I felt. I did hear him laughing inside my head as my suitors had their way with me. \n\nI was an unwilling participant, and Deacon knew that. His mental control over me made me act like a starving sexpot, something he learned how to emulate watching all the girls in the whorehouses when he was younger, no doubt. The worst was when he'd make me call Jediah. The man was a maniac, a sadist, and inherently evil.\n\nThe appearance of the two young people at my door had truly frightened me, and Deacon's response in trying to keep them away from his physical form by taking over my body was terrorizing. The feel of release when the young man snapped Deacon's frail neck was like a breath of fresh air.\n\nNow I was alone with this beautiful young girl. A friend of my daughters, how did that ever come to be? Carrying the young man, Jeremiah's, child. She was curious, of course. Who wouldn't be, I'd been around people with special powers all my life. So many of them used them to control other people. To manipulate and corrupt, to destroy. These three seemed to be so opposite. It made my heart swell.\n\nThen she took off that necklace, and put it in her pocket. She seemed to glow, and I felt...\n\nPleasure?\n\nArousal?\n\nNeed?\n\nFeelings so foreign and ancient that I thought I must be going crazy.\n\nShe smiled at me, seemingly unaware of the effect she had on my physical presence. In all of my time on this earth, I'd never felt so good in my own skin. I smiled back and decided to not mention the difference I felt. I was glad to have her company. She faded into a deep thought, then looked up at me.\n\n\"I need to get back to the cruiser,\" she said, \"Please excuse me, Rebekah.\"\n\n\"Of course, dear,\" I'd said and walked her back to the door.\n\nShe left and I waited on the porch. I was of two minds: I didn't want to go back inside, and I didn't want to be far away from that bewitching girl.\n\nAs she entered the bus, Miriam, one of the way's members approached me. She was the mother to two of the older daughters, teenagers almost old enough to marry. They would be busy with their chores. She slid beside me, and looked over at the bus.\n\n\"A beautiful girl,\" she remarked, then turned to me, \"Can I help you, Rebekah?\"\n\n\"I do need to clean up for the hospice folk,\" I said, and together we went upstairs.\n\nThe ruckus of the morning had turned over tables, and there were still signs of struggle. Miriam helped me to put things straight. To every appearance it looked as if Deacon had slipped to the next plane in his sleep. I felt almost guilty at the joy I felt with that. With the task done, Miriam and I went back down stairs.\n\nThe feeling of bliss that I felt when the blonde girl removed her necklace seemed to return as we sat on the sofa. The air seemed a bit warmer, and the lights brighter. I felt the same oddly different arousal I had felt earlier. That arousal only grew, to the point where I felt a need. My nipple grew erect under my blouse, and my thighs felt moist. I felt shocked at the palpable arousal I felt.\n\nI looked at Miriam, and she too had a shocked look on her face. Her large bosom had already stretched her blouse to the point the buttons strained. Now her nipples had engorged where I could see their outlines. Breathlessly I reached out and she shivered at my light touch. Then she turned to me, and pressed her torso into my palm. I gasped feeling a pulse of arousal as the room seemed to shimmer in a glowing aura.\n\nMiriam leaned closer, and then we were kissing. We'd both been indoctrinated that pleasures were meant for a marriage bed, but that thought fled at the feel of her soft lips against mine. I kissed her back and cupped her breasts. Her tongue snaked along my lips and my mouth opened. I only wanted to prolong the feeling of bliss. \n\nI needed to feel her flesh, I worked at the strained buttons of her blouse, getting four unbuttoned before ripping the remaining three from her blouse. She had mirrored my motions, without a word being said. She pushed my blouse away, then pulling me close unsnapped my bra. I tugged at hers, and suddenly we were topless. Our shirts and bras were tossed aside and I leaned into her, kissing. She reclined under me, and our breasts pressed as I kissed her deeply.\n\nThe thrill of the passion I felt rushed through my nerves. The room seemed thick with it, as I pushed my hand down her torso and under her skirts. I wormed my hand under her undergarment, and then was cupping her full mound covered with fine silky hair. She moaned into my mouth as my fingers pressed into her flesh.\n\nI groaned at the feeling of moisture as I my fingers wormed between her folds. Her own hand was cupping and lifting my breasts. I parted the kiss and her mouth enveloped a nipple. It felt so divine to have her lips and tongue caress that nub with love. My hip ground into her thigh through our skirts. Had I been in my right mind, I would've blushed at my wanton acts. As it was, I rutted into my friends body. She rolled her hips and I felt my finger delve into her womb. I wanted more, and I lifted from her with my eyes lidded from the lust coursing through my veins.\n\nShe looked up at me, troubled, like I would leave her in such a state. She smiled though when I pushed down my skirts and stood before her naked as the day I was born. My body was firm, I was a hard worker. My breasts, though not large, were still well shaped, for a woman nearly sixty. Miriam giggled lightly as she also scrambled to peel away her skirt and toss her undergarment away.\n\nMiriam was pleasantly round, her figure very womanly, curvy to my more stick like form. She reclined back against the sofa, and I knelt at her feet. I lifted her large breasts, her nipples pink with wide areolas. I filled my mouth with one peach shaped orb and she groaned and combed her fingers through my hair. I loved the taste of her flesh and her response only egged me on.\n\nI kissed my way down her warm abdomen, my hands sliding along her thighs and opening her legs as I kissed the top of her downy mound. Her hair was fine, and her labia were deliciously pink. Something that I would never have found arousing only a few minutes before had me now panting with desire. I kissed her full lips and licked her damp flesh. She slid forward, along the edge of the sofa granting me full access to her sex.\n\nI loved the strange taste on my tongue and licked along the edges. I sucked in her lips and slid my tongue up between them as I sucked. Then I found the top and she gripped my head in her hand and rolled her hips. I lapped at the firm bud hidden there in the soft down curls. One of my hands found it's way to my own sex, and I explored with my fingertips. I found the right spots and I moaned into Miriam's open and randy sex. My other hand slid up and petted at her lips worming into her folds.\n\n\"Oh yes, please.. push a finger in there...\" Miriam coaxed as I lapped at her clit.\n\nI pushed deeper and found her opening, it was slick with her arousal. I pressed deeper and felt her tight flesh surround my finger. I huffed in a deep exhale as my own finger penetrated my own entrance. I'd never felt such divine pleasure, I was drunk on her scent and taste. She groaned and encouraged me on with her hand. Her other hand was clutching at her breast, tugging at her nipple. \n\nI felt a peak coming and I drove us both towards it. My mouth and fingers driving her to the edge. Her scent and taste driving my own fingers to edge me closer. Then she shrieked and I joined her. My mouth suddenly lapping at her spendings, and my finger deep in my own clutching vagina. We relaxed after the crest, and I rose up to kiss her. My face glazed with her spendings.\n\nShe smiled and kissed me, then kissed and licked at her own juices, cleaning me like she were a kitten. I leaned into her warm body. My body felt alive. My mind felt free! I was abuzz with new sensations. It was a new day.\n\nThe glow and warmth faded, but our bliss in our new embrace faded slower. I knew there was something more to do, and with much resignation rose and started dressing. As clarity returned to my mind, I remembered.\n\n\"The hospice will be here shortly,\" I said, \"can you stay to help?\"\n\n\"Of course, Rebekah,\" Miriam said with a smile, finding where she'd tossed her clothes, \"I am at your beck and call. Anything you need.\"\n\nI looked at her with a broad smile, \"I think I may need more of that, later tonight.\"\n\nMiriam blushed and nodded, \"I was hoping you'd say that.\"\n\nPresent: Kelly\n\nIt was after midnight when I felt it. \n\nThe five of us had already had our nightly lovemaking. It was one of the softer romantic explorations that left us all feeling blissful, content and satisfied. It was always a wonderful way to fall asleep. I was happy to help provide that feeling in the ones that I loved.\n\nThis was different. It felt raw, and unformed. It was primal, and at first it scared me.\n\nI retraced the day. Isaac had left after breakfast, and had spent the day with Beth. The rest of us had our own time, for a weekend that meant different things.\n\nLexi had taken Jeremiah out to rock climb. Which usually meant she climbed, and Jeremiah helped with the ropes and kept his eye on safety. He was an easy person to be with, and he was trustworthy on belay.\n\nCarmen had her weekly shopping. Although we had staff to do most of the things, her gift was caring for us domestically. She was fiercely protective of that, though she had softened and delegated some of the shopping to Leah, Naomi's nanny. \n\nAlyssa and I took Naomi to the zoo. The five year old loved the animals, and though the drive to Portland was long, Naomi asked question most of the way there but slept most of the way back. We got back as the sun was going down, for the summer time it was almost 10 o'clock. Leah took Naomi for her nightly bath, and settled her off to sleep.\n\nNothing out of the norm, but I felt an echo of my power and it was expanding. I wasn't doing anything, I'd long ago learned fine control of my effect. I did remember how, when I was younger, I didn't have control. I was usually lost in my own world exploring the wonders of how my effect treated the ones I was with. I didn't realize how far my power could expand. It hit me about then.\n\n\"Oh Zac...\" I thought quietly, \"I hope you are careful.\"\n\nHis power though was strong, and it even affected me. My nipples went rigid and I felt the molten heat in my core. I rolled over to kiss Jeremiah softly, slipping over his body and straddling him. Though asleep the powerful aura from across the house had him fully erect. I groaned selfishly as I grabbed his root and rolled my hips sinking onto him. \n\n\"Um,\" Jeremiah whispered, \"Can't get enough of me?\"\n\nHis smile always warmed my soul as I rolled my hips, gently riding his cock.\n\n\"Your son,\" I said, \"I think he has a visitor.\"\n\nJeremiah arched under me, his hips lifting to drive deeper inside me. I groaned as he hit that spot deep inside. I responded by gripping his shaft with my inner muscles and rolling my hips. \n\n\"That's not you?\" he said, awake enough now to feel the effect of the different aura seeping into our room.\n\nI looked around and saw our three loves shift but stay sleeping. They were having marvelous dreams, probably. Then I pushed my own powers out, to envelop Jeremiah and I. His cock throbbed and I almost moaned loudly, I had to bite my lip to keep from making too much noise.\n\n\"No, that was you,\" he said, his stroke becoming longer, holding my hips as we parted then ground back together.\n\n\"Beth?\" he asked, and I nodded, then looked at him.\n\n\"Just fuck me, J.\" I said, and pushed any thought of what our son was doing from my mind.\n\nJeremiah took the hint and we rode to ecstasy in our own private bubble, and then relaxed in the web of bliss that came after. He fell asleep still deep in me, and I soon followed. \n\nAuthor's Note:\n\nThank you for reading, commenting and voting. I hope you enjoyed this chapter of the story. \n\nEditing props go out to mgenette again, who helps me use the right words correctly. His help and encouragement have been invaluable. Any remaining errors are totally my fault.\n\nLife had caught up to me, and my writing time has become a bit limited. I have the outline of the final chapter and hope to have it out sometime next week. After that, I'll entertain the possibility of a Part 3 - things that happen in threes seem more whole. I'd love to hear your thoughts, are you interested in more of the storY?\n\nI hope you enjoyed this chapter, thanks for reading!"
    ],
    "authorname": "HankDolworth",
    "tags": [
        "lesbian",
        "fff",
        "mature",
        "mff",
        "rough sex",
        "mind control",
        "supernatural",
        "succubus"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-designer-pt-02-ch-16"
}