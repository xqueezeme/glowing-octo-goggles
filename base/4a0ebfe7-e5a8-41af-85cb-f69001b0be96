{
    "title": "Snap Shot",
    "pages": [
        "CHAPTER ONE\n\nIt was the walk up the stairs I seem to remember most. Simply thinking about it always sets my heart to thumping. I find myself, mostly late at night, but too, at the oddest and occasionally in the most public of situations, succumbing to the daydream and reliving vividly everything about each step, from the creak of that one loose board to how her hair looked in the afternoon light and the way her dress moved as I followed, watching her from behind. It was one of the most singular events in my life, so alive, so indelible, imbued upon me with a level of immediacy and intensity, I'm sure, something akin to the scale of awareness and anticipation a condemned man must experience, when he takes that last, long walk.\n\nHer name was Cynthia, but I almost always called her Cynth. We were neighbors. Neither one of our homes was very much by today's standards. We lived in one of those lower middle class neighborhoods, which seem to sprout amongst the cracks and fringes of every big city. Except for the occasional pink, plastic flamingo displayed in the small plots of lawn out front, or perhaps a slightly different color of paint on the shutters or door, it was virtually impossible to tell one house from any other, row after row after row.\n\nThat day, I'd found her out on her porch. Summers here were always so hot, and come about late July a heavy boredom always set in. Our neighborhood was always quiet, even more so now as lots of families were away on vacation, at the beach, the mountains, anywhere they could find a cool breeze or breath of fresh air. For those who remained, the hours stretched out interminably to where it seemed one could easily count from one to ten between each tick of the second hand. Ironically, during these dog days even the neighborhood animals seemed to have fallen prey to the monotonous languor, and it became rare to hear a dog bark, or for that matter, to see a car drive by and momentarily disturb the heavy hush hanging over the streets. The very stillness of the air and the emptiness of the haze lingering in the sky were all just elements of the doldrums of summer.\n\nI'd come outside and noticed her right off. She was wearing one of those summery, cotton dresses. I can still recall, for a fact, it had a pattern of little, blue flowers sprinkled across a light, yellow fabric. Cynthia Marshall, two and a half years older than me, and an effortless beauty with soft brown hair and lips so rich, so sweetly pink, when she smiled those bright, green eyes of hers just seemed to melt my heart and snatch my poor breath away.\n\nWe'd known each other forever; you can't live fifteen feet from someone else's driveway all of your life and not get to know them. When I was little, Cynth used to trick\u2013or\u2013treat with my older brother and me, the two of them holding my hands between them as we ran from door to door. Our families would sometimes share Easter egg hunts between our houses and bar\u2013b\u2013ques on the Fourth of July. She'd always been sweet to me, but in a big sisterly way. Yet, she'd been the one, through the luck of a spin, to endow me with my first real kiss, when we both found ourselves playing a game of spin the bottle during a neighborhood birthday party. Even before that unforgettable afternoon, when that empty Nehi bottle spun our way, she had been the featured highlight in every fantasy of mine ever since I could remember.\n\nBut most things change as we grow older; and she'd become one of the girls who ran with the big kids long before I ever did. I came to know about her, more than I knew her. I remember lying in bed, in the room I shared with my brother, Mark, and listening awestruck to stories about Cynthia ringing people's doorbells and running away, or teaming up with other kids to cause feuds between the cranky old ladies at the end of the block by switching around or stealing their prized ceramic garden gnomes and molded cement figurines. She was rare for such a beauty, because she was fun, maybe even what some people might call a little rambunctious. I never remember having seen her out on the street when she wasn't either running or skipping, her long pony tail flying as she passed. And as she began to mature, she was one of those girls who just suddenly blossomed. By the time she was in her middle teens, there wasn't a boy I knew who didn't hope she'd turn a smile his way. Yet, along with her budding physical charms, she was one of those girls possessed of a rare nature, which complements a sincere sweetness and an ease of confidence about herself. And later, when she was a senior in high school, and I was just a gangly freshman, there wasn't a person I knew who didn't think she was someone entirely special. Unfortunately, for all the rest of us waiting breathlessly in the wings, her boyfriend, a guy who owned a car and was a sophomore in college, was the one who was lucky enough to be the apple of her eye.\n\nBut that afternoon, that became our own. It will always stand out so freshly in my mind. The frescoes on the ceiling of the Sistine chapel won't endure as long or shine as clearly in time as does the clarity of this memory. I remember being bored, so bored I wandered outside, as that in itself was something to do. Seeing her out on her porch, I let the screen door slam a little too loudly and was rewarded when she sat up and looked my way. Sitting down on my porch railing I waved, and she waved back. Crossing my feet at the ankles, I hitched my thumbs in the pockets of my shorts, nowhere to go and nothing to do.\n\n\"Hey!\" She called out, making another quick wave, beckoning over her shoulder with her hand. \"Jimmy! Jimbo! Come on over!\"\n\nNo sooner had I stepped up on her porch than she halted her swinging on the porch glider and scooted over, patting a spot for me to take a seat. \"How've you been doing there, Jimbo?\" Her voice was as warm and friendly as if we'd spoken only yesterday. \"Haven't seen much of you this summer.\"\n\n\"I haven't seen you either,\" I came back. There simply was no feeling uneasy around her. With some friends you haven't seen much of, it sometimes takes a bit to get the awkwardness out of the way and get back on track. But there was something just so easy about everything with Cynth, so amiable, so sincere, totally at ease and completely disarming. \"Where's your boyfriend, Cynth? I haven't seen him around much either.\"\n\nShe kicked out, setting the swing going in an easy arc. \"He went with his folks to the mountains. They're going to be gone 'til Labor Day.\" Even her acting out an exaggerated childish pout couldn't fall flat. \"He left me here to wilt while he goes plays chess with his dad and fishes for bass with his brothers. More likely though, he's just lying around like a big lout drinking beer all night and sleeping most the day.\"\n\n\"Sounds like the life,\" I replied.\n\n\"Yeah.\" That little half smile of hers was distant and wistful, and her eyes looked so far away. \"I miss him.\"\n\nWe sat like that for quite awhile, maybe an hour, maybe more. Who knows? Time didn't mean a thing on such a sleepy summer's day. I hadn't really even said ten words to her in months, only \"Hi\" now and then in passing. But like old times, we fell back into ourselves, and before long we were remembering the old stories and recalling kids we used to know and things we used to do, just kicking back and chatting, again the best of friends. After a bit she went inside and got us some lemonade. We talked and sipped at our straws, laughing, as she could always make anyone laugh. And when my lemonade was gone I sat back, sucking on the ice cubes and just listening to her ramble about nothing of any importance, which was exactly what I was in the mood to hear. \n\n\"How's that brother of yours doing?\" She asked out of the blue. \"Does Mark still have that same cutie girlfriend?\" She spiraled a hand above her head. \"The one with all that hair?\"\n\nI wasn't really focusing on anything, just looking off across the street, but seeing her little pantomime got me to laugh again. \"Yeah, I think so,\" I grinned. \"Last I heard of, anyway. You know, he's going to be graduating from college next semester.\" She gave a quick whistle, her lips forming a note of genuine surprise. For some reason my eyes were spellbound by the shape of those lips.\n\n\"Where'd time get off to?\" She asked after she'd let the whistle trail off. \"Seems like forever since I last saw him, Christmas I think it was.\" She hitched her feet up under her dress, cross\u2013legged, planting her hands down in the center of the spread of her dress and letting me swing the swing. \"I'm glad next fall I'll be transferring to a college that's reasonably close. I'll be able to get home weekends and holidays. I get real lonely so quickly being away from everybody. I guess I'm just a hometown girl at heart. Mark though, who knows where that guy will end up.\"\n\n\"He's just a ramblin' kind of guy,\" I came back, feeling good about getting a laugh out of her.\n\n\"I forget,\" she asked. \"What's he studying?\"\n\n\"Photography,\" I answered, \"just like my dad did. When he graduates the plan is he's supposed to work at my dad's portrait studio for a while. But he really wants to get in with an agency, in New York or LA and do some advertising photography and maybe even some freelance or artistic stuff. He's been shooting weddings to make a little extra cash.\" I raised my eyebrows and leaned in close to confide to her in a whisper. \"He even did a boudoir shoot a couple of months ago.\"\n\n\"Boudoir?\" Right off, her eyes lit up, and she leaned into me nudging me with her shoulder. \"Isn't that,\" she started slowly, \"isn't that where women pay to have pictures taken of themselves in sexy lingerie or bathing suits ... like for their husbands or boyfriends?\"\n\nShe was so close, almost nose\u2013to\u2013nose; and the way she looked at me. It was as if the air around us had gone suddenly still and the heat had grown up around us. She was staring right into me, and I could see she was thinking of something. In a bit of panic I couldn't believe I had let that slip. I wondered what I could possibly have been thinking to have been so stupid as to have blurted that out. Mark, I'm sure didn't want it getting around. Even though it was 1965, and Playboy had been around for quite a while, some of our local Neanderthals could still get pretty up in arms about that kind of thing. Mark had told me about it when he was home over Memorial Day. I hadn't seen the pictures, but I knew he'd had to borrow my dad's private darkroom to develop the negatives and make the prints, as he probably would have gotten arrested had he tried taking the shots to a regular lab.\n\nSuddenly Cynthia leaned back and planted her feet, stopping the swing. She slapped her hands down on her legs and stared back at me with that Cynth wildness in her grin. \"You still shoot photos, too, don't you?\"\n\n\"Yeah,\" I nodded. \"I just got a new 35mm Ricoh for my eighteenth birthday last month. It's got a 28mm wide angle lens, f1.4, and my dad even got me a 100mm to go with the stock 50mm.\" I was always proud of any opportunity to talk about my cameras. I scooted around a bit to better face her. \"It's got a flash, too! My dad's been helping me get the knack of it; flash is tough though. But you need it if you want to get an indoor shot just right. Of course, my dad he knows it all. He's got a full set of background lights with filters and gels, and he uses a system of umbrella strobes he's got synched to his large format Hassleblad.\"\n\nShe locked a hand down on my knee. \"You've got film and stuff, too, right?\"\n\n\"Sure, color and black and white.\" Her hand on my knee made me suddenly conscious of how close we truly were. Maybe it was the air had changed, but we seemed very alone together out on that porch. And up close, like this, I became aware I could smell her too. There wasn't any particular scent or flowery fragrance to her, just fresh, a breath of Cynth, clean and sweet.\n\nShe took her hand back and swiveled a bit more to face me straight on. She started to say something, but didn't. Maybe it was the heat, but her cheeks looked hot and flushed.\n\nWhen she didn't say anything I asked, \"What?\"\n\nShe pursed her lips and shook her head.\n\n\"Come on, Cynth,\" I pressed. \"It's me, Jimbo. What were you going to say?\" I recall thinking she'd probably come up with one of her infamous gags or jokes to play on someone.\n\n\"I don't know.\" She pulled her feet out from under her skirt and let her legs swing down, twining her ankles and locking her knees. \"I just kind of had a goofy idea.\" She shrugged and cocked her head, looking awkward for the first time I could ever remember. \"You know me.\"\n\n\"Yeah, I know you,\" I came back. I must have been crazy because another wild admission came flying out of my mouth. \"You're the one who gave me my first kiss.\"\n\nHer mouth fell open, for but a moment, then the most wonderful smile came across her, and she laughed. \"You remember that?\"\n\nI fell back in the glider trying to show her I was devastated. \"Remember! Remember?\" I stammered. \"Are you kidding? Does a Texan remember the Alamo?\"\n\nThose emerald eyes of hers were positively afire. \"I had no idea, Jimbo. I'm flattered.\" She pressed a hand lightly to her breast, as though stunned. \"Was that really your first kiss?\"\n\nI nodded. It was my turn to lock my knees and twine my ankles.\n\n\"Well, well, Jimbo. I'm sure it wasn't your last.\"\n\nNow I really was embarrassed. It seemed there was nothing I wanted to look at right now more than my sneakers.\n\n\"Don't worry about it,\" she said, obviously sensing my discomfort. \"You've gotten to be quite a handsome guy. Wait 'til you're a senior this coming semester, then everything will change.\" She again put her hand on my knee. \"You're gonna be a real lady killer, mark my words. You've got everything it takes. You're good looking.\" She noticed my chagrin and gave me a playful little shove. \"You are! Don't sell yourself short, Jimbo. But most of all you're a good guy, and let me tell you,\" she locked her eyes on me, \"that's something. That, coupled with that bod of yours, what else could a girl want?\"\n\nI looked up at her. I couldn't tell which made her seem to shine more, that she so honestly appeared to care or the candidness of the sincerity which rang in her voice.\n\n\"Hey!\" She suddenly clapped her hands. \"I'm going to ask you to do me a favor, a big, big favor.\"\n\nRight then I would have run across a busy freeway blindfolded had she had asked me to. \"Anything,\" I came back. \"You name it.\"\n\n\"I'd like to send my boyfriend, Peter, a picture of me, not any old snapshot, but something nice, professional looking. You know, remind him what he's missing when he's gutting some fish instead of giving me a kiss. Do you think you could help me out?\"\n\nI sat up. \"Now?\"\n\n\"Sure. I mean, if you're not doing anything. I want to send something to shake that boy up.\"\n\nI remember hardly even hearing the last of what she said. I was already thinking about where, indoors or outdoors, flash or no flash, wide angle lens or long focal length, sharp depth of field or soft focus.\n\n\"Hey, hey!\" She jiggled my knee. \"What do you say?\"\n\nI jumped up and flew off the porch. I was already across her driveway when I yelled back \"Don't go anywhere, I'm getting my camera!\" In a heartbeat I was back, camera bag slung over one arm and tripod in hand.\n\nStanding with one foot on the stoop, I panted breathlessly. \"Where do you want to do it?\" Right off I knew how stupid that sounded.\n\nIt's a shame I didn't have the camera already set up because the charmed way in which she smiled back at me from where she sat on the glider was priceless. Her elbows on her knees she spread her hands. \"Hey, you're the photographer; you tell me.\" She got to her feet, striking a pose without even thinking about it by just stretching out an arm to lean against the roof support. \"I'm all yours, Jimbo.\"\n\n\"I'm all yours!\" The words rang in my head. Ten thousand ideas sprung into my bedeviled mind all at once. But thankfully, I had a clarity of moment. \"Hold it right there!\" I blurted out, fumbling and dropping the tripod as I unslung my bag. \"Just hold it. Don't move. Don't move!\"\n\nMy fingers were trembling so wildly the lens cap flipped away like a wild shot in a game of tiddlywinks. Where it went I didn't even give a damn. I kept looking back up at her as I frantically tried to get the camera set on the tripod. When the camera was mounted, I fumbled around for my light meter, convinced that if a fugitive wanted to never be found all he had to do was find a way to hide out in a damn camera bag, and he'd be able to completely disappear. I finally found the thing and ran back up the steps waving it about as if I could possibly remember what I was doing. The whole time Cynth kept that pose, just relaxing into it, and her amused expression at my fluster and confusion was just about as perfect as it could be.\n\n\"Okay!\" I yelled. \"All set.\" I jumped back down and carefully set the shutter speed and f\u2013stop. Walking around behind the camera I looked in the viewfinder, amazed at the picture I saw, then came back to myself and adjusted the angle to get her framed just right. I wasn't about to cut off this girl's head. Gripping the shutter's cable release, with my thumb poised, I thought about telling her to say: \"Cheese.\" But on quick second thought decided I didn't want to do anything to upset the perfection of an almost classic Mona Lisa quality smile. \"Be still,\" I called out, then counted: \"One, two, three!\" I pressed. Nothing!\n\n\"Did you get it?\" She asked. \"I didn't hear a click.\"\n\nI looked down, bewildered. Everything was right: shutter speed, 30; f\u2013stop set at 5.6; film speed indicator on 100. Then it hit me when I saw the frame count; I'd forgotten to advance the damn film. \"Hang on! Hang on!\" I cried out. Advancing the lever with my thumb, I then had to reset the framing in the viewfinder, and felt a wave of relief when I pressed the button and heard the shutter's click.\n\nCynthia had heard it too, as she pulled away from the post, standing and stretching with her arms up and her hands out. She winked at me. \"I guess like a kiss, the first one's always the toughest.\"\n\n\"Do you want to take some more?\" I fired back.\n\nShe dropped her arms. \"Got more film?\"\n\n\"Half a roll.\"\n\nShe stepped down and came walking over. There was something so feminine about how she looked in that dress, how she appeared to cross her knees with an easy, lilting step when she walked. The way her hair, it looked auburn in the sun, seemed to frame the lines of her neck and shoulders, and how the two buttons left undone at the top of the dress just allowed a hint at the fullness of her breasts concealed below. For the first time, too, I noticed I was now taller than she was, quite a revelation.\n\nShe reached out and tousled my hair. \"You just tell me what you want me to do.\"\n\nIn the next hour I began to learn the unique thrill any photographer must enjoy when presented with a beautiful and willing model. Little by little, I started to loosen up and apply what I knew. I did one shot using my long focal length, 100mm lens. Moving back at a distance I had Cynthia stand next of one of the Mulberry trees, which ran down the city sidewalk in front of every house. Compressing the depth of field so that an entire block's worth of trees appeared only inches apart, I had her peek around the side of the closest trunk, kicking up one foot and stretching out her skirt while her hair fell away to the side. I took another shot with her sitting on the hood of a car and another up in a tree. It was so much fun, even a bit of a thrill to have her so willingly comply and follow my every command.\n\nBut then, I had a revelation. I told her to lie down in Mrs. Wilbun's flowerbed and face the camera. Doing just as I asked, she spread her elbows on the grass, propping up her chin in her palms. I came in for a close up, lowering the tripod and changing to my wide\u2013angle 28mm. Lying as she was, the tops of her breasts were framed demurely below her hands, adding a spice of sensuality to an otherwise picture postcard pose. Kneeling in front of her, maybe I lingered too long taking in the view, because she momentarily broke the pose to look down, having followed my eyes. My ears caught fire when she saw what I was seeing. But to my surprise she didn't get angry at all. Instead, she sat up and gave me that wild, door\u2013ringers smile I'd heard about, cocked her head in a \"what the hell\" salute, and reached down and popped one more button loose. Then she lay back down, moving so her breasts were pressed out by her weight against the ground and said, \"How 'bout this? Is this a little more of what you were looking for?\"",
        "I nodded and swallowed dryly. Feeling emboldened, I came over and knelt down with my light meter, my trembling hand bare inches from her breasts. But she held still, only following me with her eyes, and smiling, always smiling. Coming back to the camera, I mounted my polarizing filter on the lens and stepped the aperture all the way down, intending to squeeze out every bit of ambient light the sun had to offer. As a last thought I even set my flash to use as a fill. I wanted to capture her up close, but full frame, surrounded in an explosion of color and vivid detail. I then knelt down and took my place at the viewfinder, again taking my time. She was so beautiful like that, yet something more. She knew I was looking at her, and I knew it! I could sense it as much as see it in her, and the most exciting aspect of it was I could tell she liked it. She liked posing like this, knowing I could see. It was my last shot on that roll, and even as the shutter clicked, I knew it would be one of my best.\n\nCHAPTER TWO\n\n\"Out of film,\" I called out, rising up from behind the camera. I ambled over to help her up, and gave her my hand, forgetting not to blatantly look when the top of her dress swung out.\n\nShe caught me, red\u2013handed, but only smiled that smile. She rebuttoned that one button and then began brushing the grass and twigs from the front of her dress. \"Do you think you got any good ones?\" She asked.\n\nI was so flustered, not just from her catching me peeping, but from the excitement of the last hour. \"Are you kidding?\" I blurted out. \"You just wait. You just wait until I develop these and make us some prints. You'll see.\" I repeated myself. \"You'll really see. That last one's going to really be something.\"\n\nShe plucked a bit of grass that was clinging to the curve of the front of her left breast. That wild spark hadn't even begun to subside one bit. \"Do you think I'll be able to send that one to Peter?\"\n\n\"Why not?\" I replied without thinking. \"It's going to be great!\"\n\n\"I don't know.\" She playfully pushed my shoulder. \"I couldn't see what you saw in your lens, but from what I remember, he might be real curious to know who took it.\"\n\nI hadn't thought about that. But right now, nothing could have dampened my enthusiasm.\n\nShe seemed a bit breathless herself. \"You really got all worked up, Jimbo. I don't think I've ever seen you like this. You were like a...\" she paused as she sought for a word \"...like an artist behind that camera. So forceful. You'd say: 'Cynth, move your head,' or 'put your arms back.'\" She had deepened her voice in an attempt to sound like me. Then she laughed again. \"Now that was what I call fun!\"\n\n\"It just came to me,\" I replied in rapid fire. \"At first I was a bit nervous. I mean, you're so beautiful, and you just ... I don't know, you just come alive. Does that sound silly?\"\n\nIt was her turn to surprise me by showing a bit of a flush, and now it was she who suddenly seemed interested in the tips of her toes. There was a long silence, and then she said quietly, \"It's a shame we have to stop just when we were going so well.\"\n\n\"I think all I have left is one roll of black and white.\" I fished around in my bag. \"Yeah, just one roll of black and white.\" I turned it over and read the box. \"And it's a faster speed than the color I was using. It's really best for indoors.\"\n\nThat wild look came back, and with it the flush in her cheeks and neck bloomed. She locked her eyes on mine and said hesitantly, \"What if we did one of those boudoir shots?\"\n\nMy mouth instantly went stone dry, and I know for a fact my heart skipped two beats.\n\nSurely, she'd noticed my distress, because she instantly added, \"Not one of those, you know.\" She was twining her fingers, knotting them into a cats cradle at her tummy as she wound her arms and spread her elbows apart. \"I mean, I'd wear my nightie.\"\n\nStupidly, I stood there gaping, brain freeze on a sweltering July afternoon.\n\nShe unraveled her hands, slapping them to the sides of her thighs. \"What am I thinking?\" She said apologetically. \"I must be crazy.\" She held her hand over her eyes. \"Must be the sun.\"\n\nAn alarm went off in my head, and my instinct for self\u2013preservation screamed, \"Do something, you big dummy!\"\n\n\"No, no!\" I yelled, way too loudly. \"No, you're not crazy!\" Something, probably that voice from within, thankfully took over. \"I could really do something nice, you know, soft and beautiful. Black and white is so arty. It would be really tasteful, especially with black and white.\" For a moment I was sure she had changed her mind; I'd never seen Cynth look so sheepish. I pulled my light meter from my pocket and took a half step closer holding it near her face. \"What color is your nightie?\"\n\n\"Blue,\" she said. \"I thought maybe I'd wear my blue one. I have a yellow one, but it's longer. The blue's kind of...\" she let her hands fall down to indicate a hem halfway up her thighs, \"...a shortie.\"\n\n\"Blue's great!\" I choked back a hard swallow as my imagination jumped too far ahead. \"Blue will be just fine.\"\n\n\"But you said your film is black and white? Color doesn't matter?\"\n\nI nodded then shook my head. \"It does somewhat. The light's what's most important. The thing is where should we shoot the picture?\"\n\nAll traces of her earlier reluctance had vanished. That mischievous smile was back full force, and there was no escaping the contagiousness of her excitement. \"My room'll be the best. I've got a skylight, and my window faces west. With the afternoon sun, I get a lot of light. We could even use the curtains to help with the lighting, you know, if you'd think that'd help?\"\n\nAgain I swallowed, just the thought of being in Cynth's bedroom with her dressed only in her nightie made my palms go cold. Somehow I managed a smile and a nod.\n\n\"Come on.\" She grabbed and tugged at my wrist. \"Get your stuff. My mom's not going to be home 'til at least six and my dad never gets home from work before seven. We've got a couple of hours at least.\"\n\nI remember zipping up my camera bag and picking up my tripod, her last words, \"A couple of hours,\" going round and round in my head. It was almost too much for my poor brain to handle. Not only was I going up to Cynthia Mitchell's very own bedroom, but she was going to be wearing her nightie, a shortie, and letting me take pictures of her!\n\nThe next thing I knew we were in her house. Like coming in and out of a trance, I could see the family room, though I don't even remember going in the door. They had one of those big, wooden ships over the mantle. Her dad's leather recliner was empty, facing the TV, with a newspaper spread out on the floor. Then, we were on the stairs, and I stepped on that loose board. It squeaked, and she looked back. \"My dad should really fix that step.\"\n\nThere we were. It was then that it really hit me. The warmth of the afternoon sun was streaming in from the family room windows. At that moment my thoughts stopped, and right then and there I snapped my own timeless snapshot, a permanent image silvered on my mind's eye 'til at least the day I die.\n\nWhen we arrived up at her room I was a mess, almost catatonic, but she didn't seem to notice. She went right to her dresser and fished something blue out of an upper drawer. I, of course, stood right where I was. She stopped, holding the nightie balled up in both hands.\n\n\"Are you all right?\" She asked and reached out to touch my cheek. \"You look like you've got a fever.\"\n\nI mumbled something; whatever it was it must have been okay, as she patted me on the shoulder sympathetically and stepped past me. I remember smelling her again, that same fresh, clean, Eau de Cynthia, though now, somewhat more real, more hot and earthy than when we'd been sitting out on the swing eons ago.\n\n\"Why don't you get your camera set up?\" She called back, hanging for a moment in the doorway. \"I'm going to take a quick, cold shower. I won't be but a sec.\"\n\nShe left me alone. I stood there, listening to the clock until I heard through the walls the sound of a shower begin to run. Coming back to life, my strangled mind began to make sense of where I was. Two walls were done in wallpaper, a print with some bluebirds and robins. The others were a pastel green. Surprisingly, her furniture was antique, not some white girly stuff. She had a mahogany dresser with a few old letters pressed under a glass top, a vanity, and a queen sized bed with a light green bedspread made neatly between the matching headboard and footboard.\n\nLittle by little I found myself coming back to life. I went into her closet and changed film in the camera, the smell of Cynthia seeming to come alive around me as I fumbled in the dark with the film. I made double sure, then triple sure, the color roll was sealed and put away before daring to come back out.\n\nShe was right; the light was good in her room, the skylight adding just the extra amount of brightness to where the flash probably wouldn't be necessary unless I really stepped down the aperture. Too, it wasn't hot, like outside in the sun. The window was open, the lacy, white curtains moving now and then under the glance of a subtle if not sporadic breeze. And she had a ceiling fan overhead. The slow swing of the blades was providing a gentle wash of moving air. I had the time to look around a bit. There were those letters, I guess special to her; she had them pressed under the glass on the dresser. And there were lots of photographs, pictures of family, snapshots and school pictures of Cynthia at all ages, and surprisingly, one including me. I picked it up. We were kids in swimsuits, playing with a garden hose in my back yard, maybe a summer day just like today, but long ago. I couldn't have been more than five or six. Cynthia was wearing only a little two\u2013piece and, of course, that smile. I put it back and wandered over to look at one wall. It was plastered over entirely with awards, and framing her new high school diploma she had honor roll ribbons and certificates for best in just about anything imaginable.\n\nI heard the running of the shower stop, accompanied by the squeak from the turn of a handle as the water was shut off, and suddenly realized I hadn't really begun to get ready. The first shot, what was I going to do? I still had my bag slung from my arm. I put it down on the dresser and prepared the camera and tripod, spreading the legs and locking the knobs. Pulling my light meter from my bag, I began to walk around gauging the light from every available angle. Somehow going through the motions helped calm me and return me to some semblance of normalcy. Then the door opened, and all that vanished.\n\nIncredible! There she was, standing framed in the doorway, a towel wrapped around her head. For a moment she looked so shy, but then that smile came back to her face. I noticed her eyes; they were dark, the first time I could ever be sure that Cynthia Mitchell was nervous.\n\n\"I feel better,\" she said, stepping in.\n\nOur eyes touched for a moment, and instantly we both looked away.\n\nShe walked over to the vanity and unwrapped the towel, tossing it on the bed. I watched spellbound as she took a brush, and with her back to me, she faced the mirror and began brushing her hair.\n\n\"So?\" She said. \"Did you think of any good shots?\"\n\n\"Uh, yeah,\" I croaked. \"I think so.\" With each forward stroke of the brush, the hem of the little, blue nightie rose up, revealing her legs and a lacy pair of panties. The top's fabric was sheer, but not completely see\u2013through. The darker color of her panties was easily visible, but from behind there wasn't any trace of a bra. Suddenly I forgot why I was even here.\n\nShe was looking back at me through the mirror. \"Hey,\" she called back. \"Are you okay?\"\n\n\"Oh, yeah,\" I started. \"Just stay like that.\" I stepped behind the camera. \"I'll get one from behind, using the reflection of you in the mirror. You know, kind of artsy.\"\n\nShe stopped her brushing and looked back at me. \"Do you want me holding the brush?\"\n\nEven through my own nervousness I really sensed the trace of anxiety in her voice. Just realizing she was nervous, too, did a lot to help me settle back down. \"Yeah, with the brush,\" I called back.\n\nMoving the tripod, I reset the f\u2013stop and shutter speed according to the reading I remembered from my light meter. \"Okay, hold it like that. But don't look at me. Look in the mirror. Look off to the side like you're thinking about something, something pretty.\"\n\n\"I'm so nervous,\" she said. \"I can't seem to think of a thing.\"\n\n\"That's fine. Don't worry about it. Just give me a little smile. Yeah, like that.\" It was incredible how Cynth just naturally seemed to respond, enhancing whatever feeble idea I imagined. \"Raise your arm a little,\" I said, never looking up from the viewfinder. \"There! Stop!\" I called out when I could see the top of the elastic of her panties framing a slice of her skin revealed below the draping hem of her nightie's top, and with the click of the shutter, with that first shot, so much of my own fear and anxiety melted away.\n\nShe turned around to face me and leaned back, gripping the edges of the vanity with her hands. Her hair seemed to just flow down over her shoulders with a slight natural wave, thick and full. Her cheeks were flushed; this was all natural, not an effect of any rouge. In fact, I doubt she had any make up on at all. It was something about her, or her bedroom, or maybe it was the quality of the light, but her skin appeared softer, whiter, yet those eyes of hers were every bit as bright and richly green as they had been out in the sun.\n\n\"Hang on,\" I said coming forward and holding my light meter out as though it were a compass guiding my way. \"I'll get a shot right there, just like that.\" I stepped right up, happy to be able to keep focused on the meter's needle and relieved not to have to let her look into my eyes.\n\n\"I had no idea you were such a pro,\" she said, her nerves now definitely showing through with the occasional dry crack and tremor in her voice. \"You know,\" she spoke in almost a whisper, \"I wouldn't think of doing anything like this with anybody other than you, Jimmy.\"\n\nI was trying to concentrate on reading the needle, but being so close to her it seemed even my hair had begun to sweat. I stepped back in two longs steps and readjusted both the shutter speed and the aperture, then put a Wratten filter over the lens. I wanted to drop out the wallpaper in the background and feature just her, standing just like that in crisp focus. Looking into the viewfinder, I noticed something I somehow hadn't seen before. I looked up, taking a moment to let the vision sink in.\n\nShe fidgeted slightly. \"Something wrong?\"\n\n\"No.\" I shook my head. \"Just give me a minute, I need to think.\" She was so absolutely stunning. What had me flustered was I could see the outlines of her nipples showing through the sheer material of her nightie. The wispy blue tint of the fabric changed the flesh color slightly, but I could see they matched the gentle, pink hue of her lips. And with her posed as she was, the scalloped hem of her top was only covering half way down her panties. The way the lines of the lacy edges came together and disappeared down into the fold where her thighs came together was enough to make me terribly aware of just how hard I'd become. In contrast, it seemed my knees had turned to rubber. And not even aware if I had the shot framed completely right, I pressed the release.\n\nInstantly, she came away from the vanity, and stepped right up to me, putting her hand on the camera. \"Jimbo, I mean Jimmy, I know I don't need to ask, but this is just between you and me right? You wouldn't ever show these photos to anyone else, right? We're just having fun, right?\" She nodded. \"Right?\"\n\nAgain I swallowed. Up close it was almost impossible to not look at those nipples. The hints of her breasts were so alluring. I couldn't truly make them out, but that in itself made the whole experience even that much more tantalizing. \"Yes,\" I stammered. \"I mean, no. I mean I wouldn't show them to anyone. I'll give you the negatives and the prints. You know I wouldn't ever do anything to be mean or hurtful to you, Cynth. Not you. This is something just between us. Okay?\"\n\nMaybe it was that a cloud had passed outside, but it seemed the whole room lightened. Any last vestige of her anxiety seemed to pass, and that wild smile returned.\n\nWith her mischievous grin back, she let go of the camera and reached out and ran her finger down my cheek. \"You can keep a set of prints for yourself. The artist deserves to see his own work.\" She suddenly jumped, bouncing back and causing the lamps on the nightstands to shake when she landed. She spread her feet and raised her arms, drawing up the lower line of her top almost to her naval. \"What's next? You just tell me what you want me to do.\" She dropped her hands and bending over clasped them in a knot at her stomach. Looking up at me she said, \"This is so much fun!\n\nPoised like that her breasts hung away, the circle of the top of the neckline only just hiding them from full view. I know my mouth was open, because I became conscious of how stupid I looked when I caught a glimpse of myself in the mirror.\n\n\"I can see you're having fun, too,\" she said, coming back up and waggling her finger. She then put her hands at the back of her head in her hair so her elbows faced forward. She twisted back and forth. Her voice had a playful little sing\u2013song snap to it. \"I don't know if you know, but I can tell.\"\n\nThe hem of the top had again come up, this time rising to above her naval. Her matching blue panties were dark, but still somewhat sheer. I could easily see the darker outline of the delight which was hiding within. Instantly, I became aware it was she who was watching me, able to recognize everywhere my eyes were focused. Feeling my own flush wash over me, I quickly looked back to my camera.\n\nShe dropped her arms, her hands slapping the sides of her thighs. \"How 'bout a couple of shots on the bed,\" she offered. \"We can't have any self\u2013respecting boudoir shots without at least a few on the bed.\"\n\n\"Sure,\" I replied, the words \"On the bed\" echoing through my mind. \"You go lie down, Cynth. Let me move the camera around.\"\n\nWe had to scoot past one another so she could get by, and when she actually brushed against me I know I almost dropped the tripod. It seemed she filled the room. The scent of her, the color of that blue, the pink of her lips, the heat of her breath, the flush in her cheeks, the way her hair moved, everything, she seized my every sense and so much more. I was more wound up than anything I had ever known. Yet I managed to keep a grasp of reality telling myself this was a once in a lifetime opportunity, and I had to concentrate and stay focused if I could ever hope to record any of this on film. But concentrating was hard; I was hard. I resolved, despite the distractions of how she was teasing me, I was going to maintain some level of sanity and do my best to try.\n\nI turned back from resetting the camera to find her settled down in the center of the bed, sitting with her knees drawn up. The look of naughty playfulness she cast back at me was almost spellbinding. My response was such she even broke character and laughed at my distress. Fortunately, or unfortunately, she was positioned slightly sideways to me, the hem of her top cascading down in an arc around her thighs. Had I been able to see her panties framed from just a slightly different position, I might have had a melt down right then and there. As it was, the curves of the side of her right breast were in full view through the gaping armhole, and I knew she knew it.\n\nAngling the camera, I was a bit unsure if the light was too bright. It was behind her as I was now facing the widow. I stepped right over, whipping out the light meter, and held it next to her shoulder. Standing as I was at this angle I could see almost her entire breast. Trying to concentrate on reading the needle I heard another little laugh.",
        "I stepped back. \"What?\"\n\nShe shook her head, \"Nothing.\"\n\n\"No, come on,\" I said, hiding myself back behind the camera.\n\n\"Well,\" again she sounded a bit sheepish. \"It's just ... it's just I noticed how excited you were, just then. And I wanted to tell you, I'm flattered.\"\n\nI knew it. I had been intensely aware of my erection ever since she first appeared in the doorway, but something in my fluster hadn't allowed me to realize she, too, could see the bulge in my shorts.\n\nAgain, she was so sympathetic to my obvious reaction. \"Don't worry about it, Jimmy. I think I'd be disappointed if you weren't excited.\" She paused, her fingers strumming while she held them clasped to her shins. \"To be honest, I find all this tremendously stirring, too. It's just I'm a girl, and you can't see it as easily with me. But I do want to do this.\" Now there came a forceful huskiness to her voice. \"And I want to do it right. Don't you hold back either. If you want me to do something, just ask. I'll do whatever you want. That'll be our little game.\"\n\n\"Okay, Cynth,\" I managed to come back. \"Just give me a minute, let me think.\"\n\nAt this stage, I was getting to the point where it was becoming difficult to remember the formulas for setting the camera. Sitting on the bed like that she was so absolutely stunningly feminine, everything about her cried out to me. I didn't want to just see her. I didn't want to just capture her on film. Truthfully, I wanted to touch her. I wanted to tell her to take that top off and those panties, too, to let me see her completely naked. My heart was thumping, my palms were sweaty and cold, and the bulge in my shorts was absolutely like a rock. It seemed the room was becoming a blur. Yet somehow I managed to hold back and keep control. I reset the f\u2013stop and tried to focus on the image in the viewfinder, but the light from outside was shining in her hair, making her seem to glow. My hand trembling, I snapped the shutter and then heard myself ask her to lie down and turn to face me. She did just as I asked, stretching out languorously and raising one knee. Everything about how she moved, the way the nightie clung or didn't cling to her, she was most definitely showing herself to me, teasing me. Going for broke, my mouth stone dry, I stepped over and looked down at her.\n\nShe smiled up at me and said, \"I told you, just tell me what you want.\"\n\n\"Here, let me do it,\" I said. \"Stay still, just like that.\" I saw my hands reach down, and I took the soft lace of the neckline in my fingers pulling it so it slipped over her shoulders. \"Move up on your side,\" I instructed. \"But keep you legs the way they are. Yeah, there, just like that.\" Then I tugged the top down just a bit more until her cleavage was exposed where her breasts pressed together. I stopped, for some reason panicking when the edge of her left nipple came into view.\n\n\"That's okay,\" she said looking down and then back up at me. \"I told you go ahead, do what you want.\"\n\nI tugged it down a bit more, my fingers actually brushing her body. I didn't want the entire nipple to show, just the top. Somehow I knew it'd be better like that. But I did reach down and smooth the fabric of her panties around her hips causing the creases between her legs to stand out that much more. Then I fled back to the camera, checked the viewfinder and somehow got the shot.\n\nWe took two more, in slightly different positions on the bed, each time my hands and my eyes growing bolder as she so willingly let me pose her and adjust her nightie just how I wanted to get the fullest effect. Then in an inspiration, I had her sit on the window sill, and turn, so the light shining around her breasts illuminated the nightie and all but caused it to disappear. Then next, I had her stand up, spreading her arms and legs so the light shone through all around her. For this shot I decided to use the flash, to fill in the full frontal detail, which would have been obscured in the shadow of the contrast of light and dark. In the image I saw flash in the viewfinder, Cynth might just as well have been completely naked before me. I vividly remember the shadow image of the outline of the tuft tucked between her legs.\n\nIt seemed the whole time my excitement kept building and building into something on the verge of going out of control. The way we talked, the way she acquiesced to my every suggestion, yet made suggestions of her own, it started to become like a dance between us, with her trying to see how she could move, how she could pose, how she could tease me, gauging her success by watching my reactions. Too, I'd been so hard for so long, it seemed it was becoming difficult for me to breathe.\n\nI checked the exposure count. \"I've just got two shots left.\"\n\nCynthia stepped away from the window and came right up to me, way too close. Lightly she put a finger on my shoulder. Her eyes had changed. When we first started shooting, outside, earlier, they were a light, almost pastel green, but now they had gone to a lustrous, fiery emerald hue, like that of a dragon or a mermaid pulled fresh from the sea.\n\n\"Tell me if I'm wrong.\" Her finger had slipped down and was tracing a circle on my chest. \"But I imagine with that last shot and the light behind my nightie,\" she took her other hand and tugged up at the fabric between her breasts. \"You could probably see right through this material, couldn't you? It was just like I was naked?\"\n\nI didn't need to reply. She could so easily read my face.\n\n\"You're going to develop these yourself, aren't you? You're not going to take the negatives to any lab?\"\n\nI vehemently shook my head.\n\nCynthia traced that finger around and around on my chest. \"Then what if we take those last two au natural?\" She locked those jade eyes on mine. \"You know, go for broke. All the way. I'm game if you are?\"\n\nI don't know how I managed to speak, but something came out. \"Yeah,\" I stammered, my own voice sounding so dull and dry in my ears. \"Sure, if you want to.\"\n\nShe pulled that finger away and stepped back. Continuing to look me in the eye, I could sense some queer type of satisfaction she had in looking into me. \"You have to ask me,\" she said breathlessly.\n\nI swallowed, and the feeling left my fingers, becoming a cold tingle down in my toes.\n\n\"Take your nightie off for me, Cynth,\" I said. Even now, I can think of those words, and how it felt to come out and say them. \"I want you to let me see you ... let me see you naked.\" And then, how she responded by giving me that smile; nothing could ever be any more exciting than that. \"Do it for me, Cynth,\" I said. \"Take it off. Let me see your body.\"\n\nWithout saying another word, she crossed her hands at the hem and slowly, luxuriously pulled up the top. I saw the top of her panties, her naval, the bottoms of her breasts, her nipples, her throat, then she had it off, dangling it momentarily over her head, before just letting it fall to the floor. Cynth dropped her hands to her sides and pressed her breasts together between her arms, hooking her thumbs in her panties and twisting back and forth playfully from side to side. \"Do you like my breasts, Jimmy?\" She teased. \"Do you like being here in my room and having me show them to you?\"\n\nThis was so much more than I had ever, ever fantasized. In my wildest and hottest dreams I had seen us kissing, maybe even making out. In a few of my wet dreams, which had occasionally come upon me and always left me drenched, I had never even made it this far. The culmination of my excitement always came before I could even dream it. And that had been enough, more than enough. And now there she was, Cynth, wearing but a pair of panties and smiling at me, at me! Then, even before I could take it all in, she simply bent down and pulled her panties down, stepping out of them and just leaving them crumpled on the floor.\n\nCHAPTER THREE\n\nI'll always remember it seemed there really was a haze in the room, time stood still, and there was no sound at all other than my heart in my ears. In my private reality, the one I'll always cherish, there was no more world, only this ravishingly beautiful girl standing stark naked before me.\n\n\"Ahem,\" she cleared her throat. \"Mr. Photographer? Is this what you had in mind?\"\n\nI'm sure I heard her words as I remember them. But I was fixated on her breasts. They were everything I could have imagined, each standing away as soft as they were firm. She wasn't as large as in my fantasies, but in reality there wasn't any need for her to be. She was perfect. Her nipples were pink, an exact match to her lips, and not flat on her skin as I had imagined, but full and rounded with the dark pink flesh of the areola itself bulging out slightly. It was as though the very tips of her nipples were drawing the rest of her flesh out, pertly standing up in the center, tight and stiff, each with the trace of a tiny indentation right in the middle. I finally let my eyes fall, down, down past her navel, down to where the wisps of hair became thick and the creases of her legs came together. Standing there, the light from the window framing her body, she had her legs pressed together, crossed a bit at the knees. Between her thighs it formed a tight Y, filled with the same auburn hue as the curls at her shoulders. I don't know how long I looked or how long she let me look, but when I came back to myself and we again touched eyes, I could see my own wonder appreciated and reflected back to me.\n\n\"You certainly have sized up your model,\" she said. \"I don't know if it's more titillating for you to look at me, or more exciting for me to let you look.\"\n\nI remembered all this later, every detail, but for right now I wasn't even sure if she was speaking English.\n\nShe stepped right up to me and shook my shoulder. \"Jimmy. What do you want me to do? You have to tell me.\"\n\nFor some reason, I was then and there completely washed over with a sense of what we were doing. In a flash I embraced the heart stopping reality that I was here, in Cynthia's room, alone with her, and she was naked, completely naked, and willing, very willing to do whatever I asked. I think what I experienced is exactly what is called an epiphany, a rush of reality. Thankfully, though, I snapped out of it, and just as quickly the shot appeared in my mind. \"Go sit on the edge of your dresser, by the mirror. And turn a bit so I get a reflection in the glass.\"\n\nTo this day, I don't know where that idea came from. But she did exactly as I asked her. She glided right past me, easily as alluring seen naked from behind as from the front, those legs, her hourglass hips, the way her cheeks came together below the curves of her bottom, merging into the dark center right up between the creases of her legs.\n\nShe turned and slipped her bottom up on the edge, her legs coming apart for just a moment as she scooted up. \"Like this?\" She called back to me.\n\n\"No, here.\" I stepped forward. \"Put your arms down, behind your back.\" I actually touched her, and she let me help her into position. I could really smell her now. Our closeness was incredible. The experience had been one thing when she was wearing her nightie, but now that she was naked, my exhilaration was on an entirely different level. I reached up and moved her hair, so it fell across her shoulders and then took her chin in my palm moving her head over just so. Then falling back, I stood by the camera and took her in. Even right this very second, I can see every detail, every grain of that image. The way her legs came together, how the dark triangle of her pubic hair filled the soft creases to the sides of her legs. Her naval, for some reason was so alluring, too. She was all so completely naked, so open and exposed to me. And her breasts, they were exactly as though she was holding them out for me, presenting them to me. The rounded globes forming her areolas, I seemed to fixate on the fullness. Then it was the tips of her nipples which captivated and held me. How each stood out, her pleasure so readily apparent at this angle, and all enhanced by the soft color of the late afternoon light. And the expression Cynth gave me was truly indescribable, a subtleness of her features with her eyes revealing every bit of her erotic thrill and yet innocence, too, and anticipation. We were being so much more than naughty; I had thought about what would happen if the door was to open right now and her mother was to walk in and catch us. We weren't just fooling around. This was sex, even if we weren't actually touching. Cynth's delight in her indulgence of being naked for the camera and for me was showing through, as openly exposed as her body. It was all there. I could see it. She knew full well what it did to me to look at her, and she delighted in my thrill. I think the crowning touch was when I had her perform a last gentle twist with her body. She now really appeared to be presenting herself to me completely, offering herself for my appreciation two fold with her body reflected in the dresser's mirror. The glass caught the angle of her entire left breast embodying her true size and form in how the flesh curved and stood away from her body. \n\nI know how my hand trembled when I performed the final adjustments to the camera. I remember her saying in that shaky voice, \"My, my, aren't we nervous, Mr. Photographer? I think you like my being naked for you, don't you? I know you can see that I'm all girl. Maybe you need to take a bit more time? You sure you're going to get the shot? You seem to be shaking.\"\n\nShaking? I was sweating; my hand was trembling. \"Just be still,\" I replied. Gripping the shutter release in my right, I held up my left hand and said, \"Don't look at the camera. Look at my hand.\" Then I took one last moment to absorb the image in the viewfinder, looked up and held my breath before pressing the button.\n\nCynth held herself like that for me, lingering a moment more, and then it was gone. She unwrapped her legs and slid down. She came right over to me, standing right with me, so close. Again, the awareness of her nudity was so overwhelming. I just could not believe it, even looking at her. It was so much to comprehend, but here she was, alone with me and entirely willing to do whatever I asked. But I wondered, would she truly do anything, anything I asked?\n\n\"Last shot,\" she said. \"Let's make it a good one.\"\n\nAgain, an image rushed into my mind. \"Get on the bed,\" I instructed. \"Lie down for me.\"\n\nWithout even a trace of hesitation she stepped over and got on the covers, but didn't lie down, instead standing up on her knees. \"Do you want me on my tummy or on my back?\" She asked. \"How about like this?\" She turned around and bent down onto all fours, so she fully presented her bottom to me and her breasts, seen underneath, dangled away from her body.\n\nI've thought about it since, many times, and suspected she really knew just how completely she was exposing herself to me. The lips of her vagina were tucked so wondrously between her legs. With the slight spread in her knees, she was completely open to my view. It was incredible, Cynth looking around back over her shoulder at me, her hair hanging down, and the way her breasts changed shape and both her nipples seemed to point down toward the covers. But as alluring and erotic as she was, I had something else in mind. I twirled my finger around. \"No, lie down on your back.\"\n\n\"You sure?\" She asked. She wiggled her bottom. \"This feels good.\"\n\nI stepped up. She was looking back at me, but I only had eyes for those lips. I had the strongest impulse to run my hand up between her legs, all the way up to her naval, and then draw my hand back dragging my fingers through those folds. Somehow though, the urge translated itself into a slap, and I spanked her soundly on the right cheek, leaving my hand where it was and momentarily relishing the feel of her flesh, before drawing it back threateningly. \"Do you need a spanking?\" I wanted to sound authoritative, but my voice was quivering. \"Or are you going to be a good girl and do what I ask?\"\n\nThere actually was a red mark on her skin, an outline of my hand. She had let out with a surprised little yelp with the sound of the slap, but it had sounded anything but angry. \"Ooh, I liked that,\" she said. \"Do the other side.\"\n\nI complied, giving the other cheek a swift spank. There was no mistaking her thrill; she even shivered. But I knew what I wanted. \"Lie down!\" I ordered. \"On your back. I want you to look up at me.\"\n\nShe lay down for me, smoothing herself against the covers and raising her hips up a couple of times before putting her legs together and placing her hands down flat on her tummy. \"Like this?\" She asked.\n\nIn my eye I could appreciate how the weight of her breasts had changed, now lying fully against her chest, so different than how they had hung down a moment ago. And too, the darkly rust colored hair between her legs, in this light and at this angle, seemed to be a bit lighter and more sparse, revealing the dark line of the hidden crease running down the center.\n\nI was already adjusting the camera. \"Put your head back, Cynth.\"\n\nShe shifted slightly and again asked, \"Like this?\"\n\n\"Yes,\" I came back. \"And move your left arm so it crosses your tummy, and put the other behind your head.\"\n\nAs though she was able to see into the vision in my mind she complied, doing just as I needed her to. Then, I couldn't believe it when I said what came next, but it just came out. \"Open your legs for me?\"\n\nI looked to her; there was something which passed between our eyes. For a moment I thought she wasn't going to do it. But along with that quick trace of unease at my request, I'd seen a flash; that wildness was still there. It was my turn to witness a revelation through her eyes, the flash of her enjoyment, the thrill she found in doing what I wanted, in presenting her body to me exactly as I wanted to see her. Still, I couldn't believe it when she suddenly raised her knees and spread her legs wide.\n\nShe had to clear her throat and still her voice would barely come. \"How's this?\" Her fingers had unconsciously clenched up into fists. Her breath was ragged, almost panting.\n\n\"No, no,\" I had to back pedal. \"Not so much.\" I remembered I was startled right down to my core. She was wet, incredibly wet, her little lips slick and glistening. But it was more than her vagina, so open, so completely exposed to me. It was something about how she did it, how she looked back at me; it took me years of thinking about it to fully appreciate and understand what she did. \"Put one knee up, Cynth\" I instructed. \"Keep the other leg flat, but twist a bit. Now just a bit wider. Yes, there, hold it! That's perfect. Don't move!\"\n\nShe looked so alluring, so ready. I knew this was but a preview of the treat her husband would enjoy on their wedding night. She was completely offering herself. The light angling in caught the darker hint of the crease in the center, and the folds of the edge of her vagina were framed against the light skin of her thighs, not too blatantly exposed to my eyes, yet not too little. A hint, a tease, and a promise, too. There is nudity, and there is nakedness. I seemed to be learning that it was necessary to capture them both. There was a refinement of vision necessary to attain and portray the excitement and subtleties of the essence of her body. Cynthia lay on her own bed, naked before me, a girl giving her body to me, as exposed to me and my lens as any woman, ever. Yet what dawned on me and drove me almost wild was how I felt. I could smell, could even taste her enjoyment of it, and she seemed to feed off and derive her own intense pleasure from the excitement in my eyes.\n\nThe words came to my mind, and I almost didn't say it. But it came out anyway. \"You know, Cynth, you have such a truly luscious body. I've never really seen a girl's vagina before, at least not like this. A moment ago, before, when I spanked you, when you had your bottom out to me, I was so tempted to touch you. I wanted to put my fingers on you. I wanted to draw them between your legs. I wanted to feel your wetness, feel it on my fingers.\"",
        "\"Why, Jimbo,\" she came back. \"I don't know what to say. You really like my pussy?\"\n\nI had always known Cynth as a bit wild, and here she was naked on her bed. But hearing her actually speak the words, \"My Pussy,\" for some reason damn near sent me over the edge. I had never even heard a girl say that word before, much less smile at me as she did.\n\nCynth cleared her throat and scooted a bit. \"I think you better get your shot while you can. You look like you're going to pass out there, Jimbo.\"\n\nIt took a few moments to get the camera positioned. I wanted to get it just right, with an angle off to the side and looking down. I took my time, I did. And it was almost with a sigh of regret that I snapped the shutter. The last picture was taken, the roll spent. Instantly, I flipped the rewind switch and turned the crank to roll up the film, wanting to make sure it would be safe. Then, with that important detail accomplished, I looked up to find that she was still positioned exactly as she was posed when I had snapped the picture.\n\n\"That was the last shot,\" I said. \"I got it.\" I'll get these over to the darkroom, and when my dad goes to lunch, I'll develop the negatives.\" I sensed something about her in the way she looked back at me. Don't worry, Cynth, you'll get the negatives.\" I had to stand back and take her in. \"God, you are beautiful.\"\n\nShe sat up a bit, her chin almost on her chest. \"I'm not worried about the negatives. I know you wouldn't do anything to hurt me. But I want you to come here.\"\n\n\"What?\" I said as a reflex, though I'd heard her all too well. I believe I remember touching my finger to my chest. \"Me?\"\n\n\"Yes, you,\" she came back. \"It's your turn to do what I say. You take those shorts off. You're not going to leave me like this. God, you've lit a fire in me, and you're not going to get out of here until I've had my look, too.\"\n\nCHAPTER FOUR\n\nI stepped up, still with the camera in one hand. She sat up and snatched my shorts and underwear down in one pull. I was so stiff; it just seemed to stand away. But I stood there, letting her look, once again feeling I was in some kind of hazy dream. And then I saw her raise her hand and felt her touch me.\n\n\"Get on the bed and kiss me,\" she said. \"I've done just what you wanted all afternoon, and now you're going to do what I say.\" She didn't even wait for me to comply, but grabbed my hand and pulled me down.\n\nI remember her pulling my shirt off, but I don't remember taking off my shoes. I do remember being on top of her, naked, her skin wet with sweat against mine. I remember her lips, her breasts, those nipples, how I craved them and exactly how each one felt in my mouth. And those lips of hers, down low, I touched them. She let me slide my fingers in, all the while kissing me and stroking me. And I remember my excitement taking over, so quickly, and my coming, losing control, even as I was trying to enter her. But it didn't seem to matter. Moments later, still panting and my face on fire, she kissed me and then held me to her. I was shaking, absolutely shaking, when Cynth moved and rolled me over, leaning over me on one elbow and looking down at me. That smile, she wasn't the least bit upset, in fact she looked pleased even sweetly flattered.\n\n\"Slower,\" she said. \"Go slower, Jimbo. Let the excitement build.\"\n\nI'd just come a few moments ago. I'm sure it was still between her legs. I know I was wet, and yet, not really even softening; and here she was, so beautiful, that green fire in her eyes and telling me to, \"Go slower.\" Slower! As if such a thing was even possible? God, she was so beautiful. The telltale stirrings of another erection were already beginning to rise.\n\nShe kissed me, long and slow, her lips moving across mine to the point I couldn't think of anything else. Then she leaned back and looked into my eyes. \"Now you do the same for me. Kiss me. Kiss me like I just kissed you.\"\n\nThe way she leaned over me, the stiff tips of her nipples were teasing me, grazing lightly across my chest whenever she moved. I flashed my eyes down. I just had to see, and in seeing her breasts, with those incredible, pink nipples tickling my skin, I felt the flush come over me as wildly as it had before.\n\nShe laughed, just a little softly disarming sound of amusement with my all to apparent pleasure. \"I can see we're going to have to take this in steps. Just lay back and do what I tell you.\"\n\nShe moved her elbow out and lay down with her head in the crook of my arm, snuggling in until the full front of her body was pressed against me. I could feel her pussy on my hip, and yes, the wetness, my wetness was there.\n\n\"Now kiss me,\" she said. \"It's your turn to do just as I say.\"\n\nI kissed her, just leaning my head forward until our lips touched. She wouldn't let me press hard, somehow managing to help me control my passion through the subtleties of her touch. Little\u2013by\u2013little, we moved into a rhythm, the build up of it, the tension, the slow way she opened her lips and moved her tongue; she was inviting me and yet holding me at bay with the alluring promise of passion to come. Through her taste on my tongue, the smell of her breath, and the pounding pulse of the heat coursing through our young bodies, we kept ourselves pressed together, and I became as hard as I had ever known. Deep down every fiber of me was charged, stiff and standing erect. And she knew, that girl knew. Her eyes were closed, as were mine, and her hand came over to touch me, lightly, gently; but still I shivered with her initial contact with my erection as if a bolt had passed through my body.\n\n\"Good,\" she whispered, momentarily drawing away her lips. \"Be still. It's my turn. Lay back. Let me touch you.\"\n\nShe was so gentle, yet so insistent, just grazing and glancing along the tip of my swollen penis with the tips of her fingers, then brushing her way down and up again, moving along the sides and the curve of my arching shaft using her palm and even the softness of the back of her hand. All the while she kept me sane through the touch of our lips, knowing when and how to draw my consciousness back and forth between the touch of her fingers on my erection, and the play of her lips with mine. It was maddening, yet so absolutely fulfilling. Caught up in it, like a dream that just goes on and on, I brought my own hand over and cupped her left breast, tracing my thumb across her nipple, thrilled to find she was every bit as stiff as I.\n\nCynth pulled back from our kiss, letting her tongue linger for a moment, then opening her eyes. \"That's right, Jim,\" she breathed. \"Touch me. Touch me as I touch you.\"\n\nShe pursed her fingers together, just tracing them ever so lightly around the very edge of my swollen crown. And I did the same, taking her nipple gently but firmly between the press of my fingertips and caressing it just around the edges at the tip. In response she arched her back, pushing her mound even more tightly against me, and at that letting slip with a soft, little moan. Driven by that sound, I was so completely focused on her, her body, the nipple in my fingers, the crush of her pussy so tight against my leg. It was the unconscious heat in that moan which caused an instinctual shift in the object of my desire. I wanted her, but mostly I wanted Cynth to enjoy me. And now I did kiss her. I kissed her exactly as she had kissed me, dragging my lips over hers, teasing her with my tongue and letting her taste my breath as she breathed me in.\n\nEven today in my memory's imagination I can see us, feel us, smell us. Every sense was so alive. We were on her bed, on Cynth's bed, lying, pressed together, amid the folds and creases of those rumpled and sweat\u2013soaked sheets. The ceiling fan overhead was circling lazily above, as at times, with us unaware, the curtain's lacy edges fluttered with the breath of a breeze. Our sweat so sticky sweet, yet slick between the press of our bodies, the heat all around, pouring out with each gasp for breath and with each kiss renewed. I released the touch of her nipple and let my hand trace down, down along her stomach, down past her naval to where her skin shivered to my touch and where her softest curls were snuggled against my hip.\n\nCynth moved back, peeling herself away. She was wet, so wet, wet with so much more than sweat. A new aroma came into my awareness, the rich and salty musk of my come, which had stayed pressed between her legs all the while we fondled and kissed. Instinctually, following the heat, I let my fingers slide down and in between her legs.\n\nThis was all so different than any of the wild encounters I had previously known in the back seats of cars or in a borrowed bedroom during a party. The fumbling, the fright, it had been replaced with what she was teaching me about the appreciation of slow and careful attention to every detail. Cynth had opened her legs to me. How she had posed up on the dresser and shifted her hips towards me so I could see what she held between her legs had been a promise, and this was the essence of that promise fulfilled. Cynth was letting me touch her as I had never touched any girl before.\n\nTaking my time, enjoying it, enjoying her enjoying me, I'd drew my fingers lightly around the edges to either side of her vagina, along where her opened lips grazed her thighs, sliding between the sweated creases where her curls touched her legs. Then slowly, haltingly, as much for my pleasure as hers, I'd run my fingertips, like the glance of a feather, up the very center where her folds were soaking wet. Up and then down, I, as much as she reveling in the shivers caused by so gently sliding just the very tips of my fingers over the stiffness below the silky hood enfolding her clitoris.\n\nAll the while she kept her own fingers to my erection, hypnotically stroking me, then momentarily gripping, and sometimes letting her hand fall completely down to cup and caress my balls. The passion, it became something which had grown between us, a physical expression of what Cynth had been thinking as she'd openly exposed her body to both me and my camera, and of how I had hungered to have her while feasting upon her body with my eyes.\n\nI finally slipped my finger within her vagina and began to probe her as deeply as I could. Curling my finger up to rub and press against the most intimate recesses of her pubic bone seemed to drive her wild. I could feel Cynth's pleasure of it with each new clench of her muscles and ensuing gush of wetness. She was so wet up inside, so hot, and tight, tight around my finger. Testing her, I began sliding in and out, stroking her back and forth, imagining it wasn't my finger but my erection, the one she held in her hand. And I knew it when we'd both gone to far and again we were nearing a frenzy. We couldn't seem to touch, to kiss, to probe, to squeeze, to stroke one another deeply enough.\n\nDrenched in sweat, I remember being sodden from head to toe, and I do remember her taste, her smell. The aroma of Cynthia that afternoon will always be with me. It was passion and love, fire and water, caressing and groping for anything more; we just seemed to tumble and tumble until the covers were completely torn from the bed. Cynthia cried out, coming first, shaking and shivering with me following and losing my control, too. It was all so intense, just bursting out of me in deep, long and deliciously drenching gouts which shook me down to my very core.\n\nHer face, I can see her clearly every time I wake from the memory, whether it's day or night. Cynth's eyes were wild, her cheeks and throat flushed a crimson red. With her free hand she held my finger within her, not daring to risk my letting her go. Her legs spread, insistently she clasped the flat of my hand, pressing it to her pussy, grinding her clitoris against my palm. And with her other hand she gripped me, cupping the head of my erection and gathering in every warm jet and pulse. Inside her I could feel her own innermost throbs, the muscles of Cynth's vagina contracting and gripping with every pulse of her orgasm. And too, I know she could feel me, through every long, deep and delicious rise and fall. I know I fed off of her, coming and coming, caught up in an explosive chain reaction of release unlike anything I had ever known.\n\nIt took us both a while to even begin to get our breathing back. Remembering it, even now, always gives me a flush and causes an uncontrollable smile to edge my lips. Over the years, while riding in a plane, just daydreaming or feigning attention during some boring meeting, I wonder how many people have witnessed that glazed look in my eyes, that tracing of a grin, never having a clue as to what scene is actually playing in my mind? Again and again, until it's become a cherished secret, I've fallen upon the memory of what we did with each other, touching each other as we did. And all the while the memory is made even that much more sweeter in knowing it was something we had caused within in each other, and that surely Cynthia has to remember it as vividly and as often as I.\n\nShaken, drenched, her bed in ruins, all we found was a brief respite. Such is youth. Even after an orgasm such as what we had just experienced, all I could find in my mind was the desire to be inside her. I'm sure she felt the same as I. No sooner had we begun to kiss, lightly at first, but with a quickly mounting passion, than we again found our hands upon each other's body. It's a dream, a haze of vignettes forming my complete recollection, but I had become hard again, not as quickly as before, but with a decidedly equal strength and vigor. I was on top of her. Cynth had opened her legs, drawing in her feet and raising up her knees in anticipation.\n\nBefore, after I had first come, she had told me to go slowly. But we were beyond any of that now. It was so natural, yet so wildly astounding to feel myself slide within. The knowledge of it, the awareness, the irrevocable change to my life in that one simple move was a moment of moments. I was over her, my back arched, my elbows locked. We both had our eyes wide open. Looking into to her I pressed myself down, not pumping wildly, but holding myself within. And she smiled. She smiled that Cynth smile, and reached her arms up around my shoulders, clasping her fingers behind my neck, and with her pussy she gave me the most delicious and wonderful squeeze.\n\n\"Yes,\" she breathed. \"Yes, Jim.\"\n\nThat was everything to me, that simple and beautiful expression of acquiescence, \"Yes, Jim.\" If I hadn't loved her before I certainly did right then. There was Cynth, the girl next door; she was looking up at me, smiling, her eyes full of that fire. I could see her face, her throat, her body, her breasts, the nipples I had been fondling just moments ago. How a day like this could come about I would never know, but nothing would ever, ever be the same.\n\nNo more words were necessary. I let go with my elbows, settling down atop her, with Cynth kissing me even before I could kiss her. It must have been the spending of the previous passion, but I found the clarity to make love to her for what seemed the longest time. We stayed together, her thighs around my hips, her breasts against my chest, the both of us moving in concerted unison so that we could best experience the intimacy shared in every penetrating stroke of my erection. Finally though, I pressed in and held myself, just feeling her and knowing she too, was feeling me. I was so deep and she was so warm and wet. Then I withdrew, only to enjoy the sensation when I reentered her, and began boldly stroking, working up our passion until her legs and feet were stretched up and out.\n\nShe was there, her voice wild and frantic. \"I'm coming. Jim!\" Her body tensed, her fingers so tight against my shoulders.\n\nHearing my own name, her eyes, her body, I cascaded down into a fit of pleasure, which just flooded out of me and into her. I'm sure I cried out, too. It had to be. But everything after that was and will always remain a wildly dizzying haze. I'm sure if I had been older my heart would never have survived. I just came and came, shuddering in wave after wave. Then, little by little, I seemed to come out of it. I was lying atop her, and Cynth's arms were still wrapped around my back. When I moved, she nuzzled her face into my neck obviously not wanting to let me go. Finally though, she released her hold on me and let me slide off to her side.\n\nAfter that, as young and as impassioned as we were, we found a quiet time of soft and innocent sensuality as Cynthia lay naked in my arms, her body against mine, and her lips pressed against my neck.\n\nIt was she who heard the car door slam. I know it was her because she sat bolt upright. \"Jimmy!\" She stared right at me. \"You've got to go!\"\n\nLike a fire drill I was up, not even sure when I had my shorts on if they were inside out. I gathered up my shirt and stuffed it in the camera bag. In a panic I heard her mom's voice downstairs.\n\n\"Cynthia, I'm home, honey!\"\n\nCynth was getting dressed, too, pulling on a dress she'd grabbed from a dresser drawer. \"You can go out the window,\" she said. \"Take your camera bag. I'll get the tripod to you tomorrow.\"\n\nI think I jumped over the bed, because with the thump of my feet, her mother's voice called out: \"Everything all right up there?\"\n\n\"Yeah, Mom!\" Cynthia called out. \"I was just taking a nap. I dropped something. Be down in a sec!\"\n\nI stepped out onto the roof wearing only my pair of shorts, my shoes in one hand, my camera bag in the other.\n\n\"There's a lattice work around the back,\" she said pointing. \"Just be careful going over and climb down.\" She held a finger to her lips. \"Don't make too much noise.\"\n\nIt struck me. I suddenly wondered how many times she had sent her boyfriend packing like this. But I didn't have time to dwell on it. I made it, and two days later while my dad was out to lunch, I lived that thrill all over again as I saw those images appear in the darkroom tray, one by one. Hanging the prints up to dry, and walking along and reliving it all step by step had my heart to pounding almost as it had up in her room.\n\nThere she was in that yellow dress with the blue flowers up on her porch. I could look at each print in order and see the progression, which had led us up to her bed. She was laying near the flowerbed, smiling up at me, having unbuttoned that extra button, and the tops of her breasts were open to the camera's view. And in her room, wearing that blue nightie, brushing her hair before the mirror. I was right, the photograph of Cynth framed in the window, the light had washed in behind her body exposing the tuft between her legs and causing her little nightie to all but disappear. But it was the one of Cynth naked and sitting on her dresser, which captivated me. I'd been so nervous at the time it had been impossible to truly appreciate the view. She was looking off, her hair on her shoulders and her arms behind her back. She had her knees held together, framing the pubic hair exposed between her legs, at the point where her thighs came together. And there was something so intrinsically feminine about Cynth's breasts with those firm nipples, even if the image I was looking at was in black and white. Her left breast was seen from the front, and yet also, reflected back in the mirror. Again letting my eyes follow the plump curves along the base and side brought to mind the feel of her breast when we had been on her bed and I had, at last, I held her cupped in my hand.\n\nThe shot of Cynth on the bed, lying there naked was a key to releasing the memory of how we had made love. I could see so many images, which weren't captured in the photograph, but were captured in my mind. How she had opened her legs so wide for me when I had asked her to, how she had pulled my shorts down and first touched me, how she had kissed me and how I had kissed her, and how it had felt to be buried so deeply inside her, all of these memories were there, but only for me to see.",
        "While looking I became so excited, my face and ears were flushed red and my erection stood in my pants. I'd only just got them down and put away when my dad came back, and still he noticed, even asking if I felt well and commenting about the color in my face.\n\nThe next day, out on her porch, Cynth and I went through them together. I was so apprehensive about it, but as always there wasn't any being anxious around Cynthia for long, and her interest was every bit as keen as mine. And when we got to the one of her on the dresser and then the bed, there was a heat and a silence between us. And then, without a word, she led me back upstairs, and Cynthia, that beautiful girl, she made love to me again, and as before we took our time with no panic, no frenzy, taking it soft and slow. We went on for hours and hours, becoming spent and then coming back to life, playing with each other, enjoying each other and me learning, learning everything a man needs to know. I think those few weeks before she went off to school were easy for us as it wasn't about love; we were already good friends. Our sex, our lovemaking was about passion, about enjoyment and pleasure in each other with no overtones or demands about commitment. We were free to be free with each other.\n\nDuring one lull, when we were just talking, she revealed to me that it was her mother who had been the one to take her to the doctor and have her get on the pill. It was a revelation, which changed my perspective of her mother. And over the next few years, when Cynth was away at school and even after she came home engaged to her new boyfriend, I'm sure Mrs. Mitchell wondered why I would never accept any payment for cutting her grass or washing her car.\n\nHere it is some forty years later. As a professional photographer I've traveled the world and photographed thousands and thousands of incredibly beautiful women. Somehow, that ended up being my forte. Little do they know that all the critical acclaim, all the awards on the wall in my studio, and all the times some of those women have held me in their arms, that it all harks back to that one afternoon in 1965.\n\nI do know Cynthia sent the shots we took on her front porch to her boyfriend; what she did with our private snapshots I don't know. I do know Cynthia married well. I even took a special joy in photographing the wedding. It was that trademark smile of hers; I'd seen it before. But we did lose touch. As our memories were always between us, I think it was better that way. I believe she has three kids and lives somewhere in California, though I couldn't be sure.\n\nIt was a tragedy a few years ago when there was a fire in my studio and so many of my precious personal prints were lost; the worst of the tragedy being the loss of the copies of my set of prints from that afternoon. Luckily, there was one, my favorite, the one special shot that stood out above all the others. It was of her, Cynth, presenting her naked body to me while posing on the dresser. As much as seeing her so openly exposing herself to me, I've always cherished believing that I know what was going on behind those green eyes.\n\nI had kept the photograph at my home, always near me, and it was saved. From time to time I've toyed with the idea of trying to contact Cynth, to see if she still has her prints and maybe even the negatives, but decided to just leave well enough alone, for now, anyway. Besides I have the one, the best, that single snap of the shutter, which caught the essence of that afternoon, the essence of Cynth. I've had it here before me as an inspiration while I wrote this little memoir. Of course, Cynthia Mitchell isn't really her name. I hope though, if by chance she ever reads this she'll recognize herself in these snapshots held in my memories from that unforgettable afternoon. I think she'll be flattered. In fact I know she'll be flattered, and I'm sure she'll smile.\n\nThis is my snap shot of Cynthia. Want to see it!?! I do have it. But you have to ask."
    ],
    "authorname": "M. Millswan",
    "tags": [],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/snap-shot"
}