{
    "title": "Tales in Slavery Ch. 02",
    "pages": [
        "Author's note: I would like to thank my editor, Talynnda, for all of her patience, and her great advice. \n\n~~~~~~~~~\n\nThe other slave and I were washed hastily, then loaded into a charcoal minivan and bound to the plush seats. I was relieved to have something beside cement under my bottom. As we moved out onto the night-time streets, the slave beside me giggled, her emerald eyes flashing with joy that I could not fathom. \n\n\"Things will be so much better for us, from now on.\" She told me, flashing an off-white smile. \"You'll see.\"\n\nI shook my head slowly. \"You can't judge what your master will be like at a sale.\" I told her quietly. \"If I were you, I would simply feel privileged that he gave you any form of pleasure. It may be the last you ever get.\" \n\nShe gave an irritated grunt and turned to look out the heavily tinted window. \"For both our sakes, I hope you're wrong.\" She muttered as she watched the bleak scenery pass.\n\nI looked toward the front of the minivan. I could see the back of our new master's head, as he drove us toward what I prayed to be my final home. I was well aware he heard everything the other slave and I had said, but he ignored us. He reached with his long, pianist-like fingers and turned on the radio, filling the van with classical music. \"Mozart is good for the soul,\" he called quietly over his shoulder, his eyes never leaving the lightly trafficked street. \"We have some distance to travel. You two would do well to get some rest.\"\n\nI sighed, trying to get comfortable with my arms and legs bound tightly to the framework of the bench seat. I knew from masters past that being advised to sleep usually meant that the coming trials would be similar to running a marathon. Most masters preferred their slaves in a state of exhaustion. \n\nBefore closing my eyes I looked once more at the other slave girl, her forehead rested against the window her button nose pressed hard against the glass, almost defiant to the suggestive order from our new master. I thought that I knew why she had been abandoned at the death sale. I quickly judged that it would not be long before she was painfully retired, or found herself at another auction. With a shake of my head I shut my eyes, and forced myself into a dreamless sleep. \n\nI was jolted awake as the van's side door slid open, I felt rested and guessed that I had been asleep for at least three hours. I turned my head, not wanting to directly watch my master. To my left the other slave still slept, her blonde waves pillowing her from the chilled glass. I watched from the corner of my eyes as my master stepped into the van, and knelt to unbind my ankles. \"She's a heavy sleeper,\" he whispered, nodding slightly to the girl. \n\n\"Yes, lord.\" I muttered, keeping my head low and my eyes averted. \n\nI could see that as his hands worked to free my legs he was evaluating my features. In my mind's eye I could picture what he was seeing; a ratted mess of scissor hacked black hair, nearly translucent heavily scarred and filth-stained skin, malnourished petite frame, and dark brown slightly slanted eyes. My right leg was released, his hands moved to my left, moving softly over my calf. \n\n\"Perhaps, while she rests, we'll get you cleaned up, and play some. I rarely make a purchase without testing. But that creature fouled you before I could get a taste.\" He untethered my ankle and was once more running his hands over my thin legs. \n\nA frozen chill ignited every nerve as I hung my head in guilt, taking the other vampire's actions as my own. \"Forgive me, lord.\" I whimpered, chastised. \n\nHis hand moved quickly at my face. I tensed, bracing for the slap I knew could easily break my neck. His palm touched my check, not with a jarring blow but to gently force my gaze to his. He cupped my chin in his hand as I looked into his eyes. \n\nHis irises were incredibly dark grey pools of warmth, and I wanted nothing more than to drown in them. He clicked his tongue against his teeth scolding me; the words that followed were edged with anger. \"You will not let that creature's actions mar your own. I can only imagine what has caused you to become this broken thing, but I intend to make you whole again.\" \n\nWithout moving my face, I dropped my eyes, my thoughts turning bitter. Yes, whole, before you tear me apart for your pleasure. \"Yes, my lord, I long to be whole for you,\" I whispered slavishly as he released my chin. \n\nHe shook his head disappointed, as his hands moved quickly to unshackle my wrists. I lowered my eyes debating if it was my words that has dissatisfied him, or if he had somehow heard my thoughts. \n\nHe urged me to stand, and then led me out of the van and quickly through the two-car garage, I made note of an expensive looking European car on the other side of the van. We stepped through the doorway and into a lavishly furnished house. I couldn't keep from taking a long awe-stuck look. The kitchen was exquisite, and to my surprise was full of fine culinary tools. The hardwood flooring was the deepest merlot cherry-wood. The two-tone walls varied between barren tundra and pale cress green. The windows were flung open to the cool night breeze. \n\nWe moved through the kitchen and the matching dinning area, a traditional walnut table for six dominating the comfortable room, and into the living room. Reproductions of Monet's landscapes hung on fog colored walls. Three deeply cushioned toffee colored couches were centered around a low walnut coffee table. And seated calmly on one of those couches sat a man dressed only in a pair of cerulean swimming shorts. \n\nHe stood, as my master released his gently grasp on my arm, and approached. \"Julien, sir,\" He spoke softly, lowing his head in greeting. \"I'm glad you are home, I was worried I would get lonely if you were gone too long.\" \n\nAnother slave? I wondered silently. No he can't be. No master would leave a slave untethered in a house alone.\n\nMy master turned and shot me a sorrowful look, his slate eyes telling me to silence those thoughts. He then turned to smile and nod a greeting at the man. \"And I do hope that you have not been swimming and have stained my leather couch.\" He laughed dismissively, and watched as the other man looked me over with approving eyes.\n\nI met the other man's eyes daringly. If this was another slave, I doubted I would be punished for looking at him so openly. He's eyes matched his shorts perfectly, I noticed as his gaze made a slow journey down my malnourished frame. I looked hard at his bare shoulders and neck, almost shocked to see the tiny white scars of old feedings. He shook his head sadly, his eyes slowly leaving my tiny breasts and erect nipples. \"She looks half-starved,\" he muttered, his deep voice sorrowful, looking back at the Master. \n\n\"Yes, but I trust with your cooking you can have her back to an appropriate weight in a few weeks.\" Master smiled, as the other man seemed to radiate under the compliment. \"You should make something wonderful for her, while I get her cleaned up.\" \n\n\"It will be wonderful to cook for more than one,\" the other man said, as he sped to the kitchen. \n\n\"Oh, Cid, I nearly forgot,\" master laughed. \"While you are making your feast, check on the other one still sleeping in the van. She is bound, so just a glance in from time-to-time should do, until I have a chance to get her moved inside.\"\n\nCid's icy blue eyes lit-up with joy. \"You brought home two!\" He bounced up and down a few times in excitement, then he rushed at my Master and gave him a great hug. \n\nMaster returned the hug, running his long fingers through Cid's short sorrel hair, then pushed him away gently. \"Go. Cook. We have a lot of time.\" Cid turned and almost skipped into the kitchen, and soon I could hear the clatter of pots and pans. Turning his attention back to me, still beaming, my Master put a guiding hand at my elbow. \"Let's get you to cleaned up.\"\n\nI nodded, fighting the cramps as fear began pitting in my bowels. In the five years of slavery, I had never been treated so kindly by a new master. We moved through the hallway, the long walls littered with more fine reproductions of artists that I could not identify. The many closed doors drew my attention, and I found myself listening for sounds of life behind them. I took a deep breath trying to catch the odor of decay. There was nothing, silence and fresh melon and peach scents of candles or potpourri. \n\nHe stopped us outside of one of the seven closed doors. He nudged me gently, and I reached forward turning the handle. As the door swung open it revealed a large bathroom. A deep jacuzzi bath and a separate glass-walled double headed shower dominated the rear of the room. I made a quick note of the toilet, but paid little attention to the stand alone sink, or the mirror above it. As a slave, I had no need for vanity. Opposite the sink was a built-in towel closet. \n\n\"I will leave you to bathe,\" Master said, as I stepped into the room. He flipped on the over-head light. He looked me over again, obviously scrutinizing my ragged and unkept condition, then removed the thick collar from around my neck. \"I would like you to shave. It appears that your previous owner had no care for proper grooming.\" He opened the towel-closet and removed a disposable razor. He sat it on the edge of the bath, before turning and walking further up the hallway and into a room.\n\nI filled the large tub, and cleaned myself mechanically. I washed my foul mid-back length onyx hair, rinsing out the grime under the running faucet. I used my fingers, dipping them into my defiled and still sore hole, to scoop the remains of creature's seed into the tub. Then unrestricted, I scrubbed myself until my skin felt bruised, but almost clean. Finally, I took up the razor, and removed every unwanted hair from below my neck. \n\nI drained the tub, watching the polluted water disappear. Then I filled the tub again, with nearly scalding hot water. I thoroughly washed myself again and leaned back to enjoy the extreme warmth as it softened my skin. I wanted to be perfect for my master. I closed my eyes, trying to imagine what he could possibly have in mind for me. His talk of making me 'whole' again had me baffled. What did it matter if I was shattered inside or had no hope, as long as my heart still pumped to sate his hungers I was serving my purpose. I was a slave, a mere blood doll, and my mental state had no part of that. My sole reason for living was to die in his clutches, nothing more. \n\nI slowly opened my eyes, and jumped when I saw my master seated silently on the floor beside the tub, his face only a few inches from mine. He wore a disappointed frown again, and again I questioned silently if he had been witness to my thoughts, or worse, that even clean I was undesirable to him. \n\nHe laughed then, confirming that he could indeed hear my thoughts. \"I found you desirable even when you had several months worth of grime on you, and seeing you clean could take my breath away. Your thoughts trouble me, but I understand you being unsettled.\" He sighed, standing slowly. \"I would like you to get settled into our routine here before we tear down your long guarded walls.\" He turned and pulled a plush dark green towel from the closet and held it open for me.\n\nI pulled the drain on the tub and stood, then quickly stepped into the open towel. Master wrapped it around me, and began to towel me off. Still patting me dry, he urged me out of the bathroom. We walked briskly down the hall, and through the door at the end of the long hall.\n\nOnce we were inside, my Master let the towel drop to the floor, and began running his long fingers delicately over my heated skin. \"You will not yield to me.\" He ordered me softly, as he began touching my face. \"I wish to look you over, but I do not wish you bare your vein, or to spread your legs.\" His fingers moved slowly across my cheeks and then down my neck. He gently probed my throat and shoulders, his touch lingering on the scars that totally disfigured my sun-starved skin. \"You've been a slave to my kind for a long time.\" He said, as his fingers moved over my arms, and he took up my wrist, again to see the scars that covered my arms. \n\nI gasped as he moved to fondle my breasts. As he cupped my tiny boobs, I hung my head knowing that I was incapable, even well-fed of filling those large hands. He pinched my nipples, skillfully taunting them erect, then leaning close to inspect the old wounds there as well. \"You've had it rough, haven't you. None of your past owners ever cared about the hurt they inflicted.\" He spoke quietly. I was unsure if he was actually speaking to me, or just musing aloud, so I held my tongue.\n\nHe dropped to his knees, looking over my concave stomach, and at the freshly shaved junction between my legs. His hands brushed over my sharply defined hips, looking up at me and shaking his head 'no', as I shifted my weight to open my legs further for him. He reached up and gently touched my mound, his thumb moving past my clit, and between my neither lips, feeling the damage there as well. He glanced around at my rump, but didn't linger, I knew it wasn't impressive. He began to work his thumb back and forth teasing my clit, as he looked over my legs. \n\nHe dropped his hand, standing to look back at my face. \"If you would, lay down in the middle of the bed,\" he suggested. He nodded to the only furnishing in the room, a California king with nothing but black flannel sheets covering it. \n\nI hurried to comply with his suggestive order. I lay down on my back, my feet together, and my arms at my sides waiting for his next move. I shut my eyes, not wanting to see what he did next, as past experience told me this was there things got painful. \n\nI heard the tell-tale sound of a zipper as he stripped, and my skin tingled as it puckered with goose bumps as I waited both with trepidation and excitement. I felt the bed shift as he joined me, his hands again dancing over my sensitive flesh. \"I want you to relax,\" he advised. \"I have no intention of hurting you, or actually feeding. I want to show you human pleasure, before considering my own.\" I opened my eyes, distrustful of his words. \"I want you to bend to me when you are ready,\" his stone eyes searched mine, to be sure I understood. \n\nI looked away from him and nodded my head. I felt so unsuitable to this vampire. He wanted me to be something that had long been stripped away, and that I believed I could never be again. Closing my eyes, I bit at the tender flesh of my lip to keep from begging him to rip into me, and to take me as I believed I should be possessed. To rape me and then leave me to wallow in desolation.\n\nHe touched my forehead with his lips, a long sigh escaping him. I looked up at him and saw sadness in his steel eyes. He slid down so he was resting on his left elbow, his eyes level with my throat. \"That isn't what I want to do, but maybe that is the only way we can piece you back together. I thought that if I showed you bliss, you would see. You have been separated from real pleasure for so long that it seems unobtainable.\" He fell into silence, his eyes roaming across the small plain of my body. \n\nWith a sigh, my master leaned forward, his mouth quickly enveloping my right nipple. I let my eyes fall closed again, ready for any onslaught from his teeth. His tongue began working tiny miracles over the damaged and desensitized flesh. I felt warmth spreading across my chest, and down between my legs. He would occasionally nip as his tongue continued gently innervating my pert nub. \n\nHe shifted his weight, and released my tingling nipple, covering the now responsive flesh with his cold hand. He nuzzled my neck, sending chills down my spine. My toes curled as he breathed across my shoulder, sending currents of warmth across my throat. \n\nI shuddered, my hands curling repeatedly into fists. I was torn between falling into the rapturous caresses and anticipating the torment I was sure he would inflict at any moment. My right nipple ached deliciously under his long-fingered attention. My left nipple stood cold and erect as if it were jealous of the other. And the fire that had ignited between my slightly spread legs was something I had never thought I would experience again. \n\nHe moved away from my throat to cover my left nipple in his wet mouth. I breathed hard as he pushed the nipple across his fang with his tongue, then began suckling earnestly. His hand still covered my right breast, squeezing the tiny orb, then grasping only the nipple to twist it between his fingers. Unable to refrain, I moaned aloud, arching my back to push more of my tit into his mouth. I was rewarded with more feather-soft biting, and more of the heavenly mouth and hand massages. \n\nI was beginning to understand how the other slave felt when our master had taken her at the sale. I let my legs move further apart as I felt wetness seeping between them. My master had taken notice of my softening as well. Circling my areola with his tongue a final time, he moved back to my neck. Still moaning and without thought, I turned my head, baring my vein to him. His tongue felt fiery against the delicate flesh. He licked a slow trail from just behind my ear, to just above the vein that I had been taught to offer. \n\nI felt his lips curl against my throat. \"See, this isn't so bad, is it?\" He whispered, as he bit down directly over the vein, but did not puncture the skin. I tensed feeling his fangs indent my flesh, ready for the pain of his attack. But he quickly returned to kissing, and just as quickly I relaxed, forgetting that he had threatened to tear my throat open. \n\nHis hand snaked down to play gently between my spread legs. I responded to his light touch by spreading my legs even further, and thrusting against his probing fingers. He brushed against my hole, and I pushed against him, urging him to enter me. My master pulled his hand away, and moved up over my clit. Centering his thumb over the button, he rubbed it in deliberately slow circles. Coaxing louder moans from me, he slipped his middle finger down between my swollen labia. \n\nAt his first touch I could feel waves of heat began pulsing deep inside. With in a few moments, I shuttered as the first orgasm I could remember rippled through my pussy, and quickly encompassed my entire being. He fucked me slowly, driving two fingers into the center of my inferno, drawing the climax out, and wringing a series of pleasure driven whimpers and cries from me.\n\nAs the orgasm subsided, he pulled his hand away, sitting up to look down at my flushed face. \"I'll stop if you want me to.\" He whispered. I shook my head 'no', my lips forming the words but lacking the breath to speak them.\n\nWith a hungry smile, he quickly gave my pussy several light quick slaps, the heel of his palm connecting soundly with my clit, warming me for another release. He moved down between my legs, burying his mouth in my honey-coated slit. As his tongue lapped at my wetness, I convulsed in another wave of pleasure. He jabbed under my hood, spearing at the top of my engorged clit. I lifted my knees and opened wider to better receive his attentions. I was quickly losing myself to the ecstasy of his kisses. \n\nMy hands had knotted themselves in the bed sheets, as I arched and thrust against my master's touches. As his tongue and lips assaulted my clit, he pushed three long fingers into me, his thumb just brushing the tight bud of my ass. I whimpered, grinding my hips against his face and fingers. My abdomen was knotting as a world shattering climax began to form. \"Please...\" I begged, struggling to say more, willing him with the erratic jerking of my hips to continue. \"...Harder.\" \n\nHe raised his head, meeting my eyes and smiling, my moisture clinging to his lips and cheeks. Fingers buried deep in my hole, he rotated his hand. I gasped, as his knuckles ground over the spasming muscles. His thumb coming back to my clit, determined to wring out a screamer. ",
        "I tore my eyes from his, tossing my head wildly, as his thumb moved in ever quickening circles over my nub. I felt the first mind-blowing wave start deep inside, followed immediately by a second an a third. I clenched my jaw, the scream muffled behind my lips. \n\nAs the fourth intense wave crashed over my body, my master dove between my legs, plunging his razor-sharp fangs into my puffed and throbbing lips, finally taking his pleasure from me. I drew a shallow breath and screamed, the ravenous pleasure driving me to the brink. My world fluttered at the edges of my vision, as I lay impaled on his fingers dancing slowly in my pussy, his mouth seducing the blood from my veins. The orgasm began to die down, and I relaxed. His gentle feeding felt extraordinary, I had never imagined being fed from could be so astonishing. \n\nI had begun to drift to sleep, moaning softly, when he finally pulled away, licking the tiny wounds almost totally from my skin. \"Maybe you aren't as broken as I had feared.\" He said wiping a tiny trace of blood from his lips. I smiled lazily up at him, as he stood. \"If you aren't too worn out, I'm sure that Cid would enjoy your company in the dining room. I can only guess when you last ate a decent meal.\" \n\nI nodded, and as if on cue my stomach growled loudly. I sat up slowly, and with my master's help staggered out to dining room. A cup of steaming herbal tea waited on the table, as I sat in one of the carved walnut chairs. I took a sip of the tea, as my master walked into the kitchen, I guessed to retrieve the other girl still bound in the van. Within a minute, Cid walked out from the kitchen carrying a heaping plate of lemon chicken, garlic potatoes, and butter drenched green beans. \n\nAs Cid sat the plate down in front of me, the hungry look in his sky blue eyes, and the bulge in his swimming shorts told me that he wasn't interested in eating chicken. "
    ],
    "authorname": "inka",
    "tags": [],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/tales-in-slavery-ch-02"
}