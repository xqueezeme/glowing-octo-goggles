{
    "title": "A Night of Sweet Treats",
    "pages": [
        "On a beautiful late October afternoon, Sam and I decided to eat lunch outside the call center where we worked. Sitting on a wooden bench near the building entrance, we dug into the sandwiches we'd brought from home. \n\n\"It's such a gorgeous day,\" I sighed. The sky held no trace of clouds, and a maple to my right was spectacular in its display of scarlet foliage. Breathing deep, I delighted in the cool, crisp air.\n\n\"Soon it's going to be freezing,\" Sam said. We'd been working together for almost a year, long enough for me to know he preferred summer to colder weather. \"Then there will be no lunches for you and me outside, Iris. We'll be stuck inside the cafeteria for months.\"\n\nI knew he was right, but I wouldn't let thoughts of winter, with its frigid days and waning light, dampen my mood. Sam and I chatted about work and how hectic things had been as of late, and after I finished my sandwich, I reached for the small bag of candy corn I'd packed for dessert. Though I knew Sam didn't share my love of sweets, I offered some to him anyway.\n\nHe shook his head. \"No, thank you.\"\n\n\"Oh, come on!\" I insisted. \"It's almost Halloween! It's practically tradition to eat candy corn this time of year.\"\n\nHe looked at me with an amused smile, and I couldn't help feeling a nervous flutter deep in the pit of my stomach. Sam was twenty-three, a year older than I, and he had gorgeous brown eyes, so expressive they could make a girl's heart melt. His dark hair seemed in constant need of a trim; sometimes I had to resist the urge to run my fingers through it and brush it back from his face.\n\n\"My family never celebrated Halloween,\" Sam revealed. I remembered him mentioning that his parents were extremely religious. Sam didn't strike me as particularly devout, and I got a sense that his lack of faith had caused a rift between him and the rest of his family. \"It's just like any other day to me,\" he went on.\n\nI loved Halloween, though being a shy introvert, I never did much to enjoy the festivities. Parties and crowds made me break out in a sweat, so I usually spent Halloween at my mom's house, where we would hand out candy and watch scary movies while eating enough junk food to give us a sugar high. This year, however, she had to travel for work, and I'd resigned myself to spending Halloween alone in my apartment. \n\nTurning toward Sam now, I playfully held out my tongue so he could see the piece of candy corn resting on it. \"You should get dressed up and binge on candy at least once in your life,\" I told him.\n\n\"Well, what about you?\" he asked. \"What are your plans for Halloween?\"\n\nI shrugged. \"My social life is pretty much nonexistent, so I don't have any. Unless...\" My heart suddenly felt like it was pounding in my throat, and my mouth grew dry from nervousness. I averted my stare, then sneaked a glance at him. \"Unless you want to come over to my apartment,\" I finally managed to say.\n\nMy ability to flirt was abysmal; I couldn't have been beguiling if my life depended on it. To make matters worse, I knew my face was growing hot as I waited for Sam's answer. \n\nWhen he didn't speak right away, I awkwardly rushed on. \"We could dress up if you want--there's still time to get costumes--and I could make a pizza for dinner. We could watch campy old horror movies and drink apple cider...\"\n\nEven as I spoke, I couldn't bring myself to look at Sam. I was afraid he would find me pathetic.\n\n\"You know what, Iris? That sounds like a lot of fun,\" he said, and I knew I wasn't imagining it when he moved a few inches closer to me.\n\nI tried and failed to suppress a delighted grin at his response. \"Awesome! Why don't you come over at around six?\" I suggested. Sam knew I lived in the lower-level apartment of a house not far from the call center. \"I'll give you the address, and when you get there, just come around back.\"\n\nSam's smile widened, as if my enthusiasm was contagious. \"So you're going to introduce me to all the delights of Halloween?\" he asked.\n\nSomething in the tone of his voice made a delicious shiver travel down my spine. \"I certainly hope to,\" I replied. \n\nHe raised an eyebrow, and I had to duck my head so I could hide behind my shoulder-length brown hair. All the while, I told myself to calm down and stop acting like an idiot. It was just a little get-together at my place. Sam probably didn't even consider it a date. We were simply two friends hanging out for Halloween because we had no other plans.\n\nSo why did I feel so nervous? Why were my palms sweaty and my hands shaky? Why was it that when I imagined Sam leaning in to kiss me, the thought sent a surge of heat straight between my thighs?\n\n\"And you're going to wear a costume?\" Sam asked.\n\nI looked up and gave him what I hoped was a casual smile. \"Sure! I mean, you don't have to, but I haven't dressed up for Halloween in forever, so I figure this is my chance to go all out.\"\n\nSam reached over to pluck a piece of candy corn from the bag in my lap. \"Then I'll dress up, too. I can't promise anything spectacular, but I'll do my best,\" he said.\n\n\"I can't wait to see what you come up with.\" Already I was trying to decide on a costume for myself. Should I be a witch? A princess? A ghost? None of those seemed original enough. \n\nWhen my eyes met Sam's once more, I immediately realized just what I wanted to be. Sitting so close to him, I knew I was the very definition of average: average height, average weight. My hazel eyes were somewhat large yet could still pass for average. \n\nBut during the one night of the year when Sam and I would be alone, and I could transform into whatever or whomever I wanted, I resolved to be anything but average. I would be bold and confident, no longer shy and insecure. \n\nAnd maybe, just maybe, I would be brave enough to make it clear to Sam just how I felt about him. With any luck, he might decide he felt the same way about me.\n\n* * *\n\nHalloween was still several days away, but I went shopping for a costume as soon as I left work later that afternoon. Some quick online browsing led me to a store downtown, and I could barely contain my excitement as I stepped inside the place. \n\n\"Can I help you find something?\" a woman behind the counter asked me.\n\n\"The Bride of Frankenstein,\" I quickly replied, then added, \"the costume, I mean.\" All the while I prayed the store had it in my size.\n\nThe fates must have been smiling down upon me, because the saleslady easily located a costume that looked like it would be a perfect fit. \"You're welcome to try it on,\" she told me.\n\nI gazed at the black wig, which of course featured white streaks on either side, and I imagined how I would look wearing it after I applied some dark red lipstick, along with black eyeliner and smoky eye shadow. \n\nThe sleeves of the virginal white dress resembled bandages, and the garment's hem was almost floor-length. As I stroked the satiny fabric, I grinned with delight.\n\n\"I don't need to try it on,\" I said to the saleslady. \"This is what I want.\"\n\nThe costume was a little pricey for my budget, but I handed over my credit card without hesitation. As I stared down at the dress on the counter, the symbolism of the outfit wasn't lost on me. While I would soon be twenty-three, I'd never had a real boyfriend, and I was still a virgin. \n\nAfter I paid for the costume and left the shop, I decided to swing by the grocery store. Outside the entrance, I studied the pumpkins for sale and finally selected a nice round one, large enough for carving. Once inside, I pushed a cart down the aisles, grabbing a frozen pizza, a variety pack of Halloween candy, and a half gallon of apple cider. Lingering in the cosmetics section, I chose the perfect shade of lipstick. \n\nAs I surveyed the items in my cart, I realized I was smiling. Simply planning for my evening with Sam made that excited flutter return to my stomach. \n\nI tried not to let myself get too carried away imagining what Sam and I might do together on Halloween, but still I wandered the aisles, searching for an item I didn't dare ask for help in finding.\n\nFinally I located the condoms, and I stared in bewilderment at all the different kinds. Glancing around, I was relieved no other customers were nearby. Then I set about reading the descriptions on the boxes before choosing a brand that boasted durability. If I did have sex, durability was definitely what I wanted in a condom. \n\nI paid for the groceries and then started for home. By the time I pulled into the driveway, it was almost dark, and Nora, the woman who owned the house and lived on the upper level, had left the porch light on. I smiled at the kind gesture, though the entrance to my apartment was at the back of the house, so the light from the porch provided almost no illumination once I reached my door. \n\nNora was middle-aged and recently divorced, so when she wasn't working, she was usually out with friends or on a date. Of the two of us, I was the homebody, and I thought she liked having a quiet tenant around to keep an eye on things while she was gone. \n\nOnce I'd carried all my purchases into my apartment, I put away the groceries and then rushed to try on my costume. \n\nStanding before the mirror in my bedroom, I donned the Bride's dress. A delighted grin danced on my lips when I found that it indeed fit me perfectly. After putting on the wig to complete my outfit, I turned from side to side, trying to imagine what Sam would think of me. My costume wasn't sexy; if anything, the dress was modest. But I was definitely transformed into someone new while wearing it. I could only hope the getup persuaded Sam to see me in a different way, too.\n\n* * *\n\nFor the rest of the week, Sam and I ate lunch together, but neither of us mentioned him coming over for Halloween. The holiday fell on a weekend, and by Friday, I was worried Sam had forgotten all about our plans, but as we headed back inside after our lunch break, he looked over at me and smiled. \"So I'll be at your place at six on Halloween night.\"\n\nI nodded, trying not to look too eager as I smiled back. \"You have the address, right?\" I'd given it to him earlier in the week, but I wanted to make sure.\n\n\"Of course,\" he said. \"Would you like me to bring anything?\"\n\n\"Just your handsome self,\" I replied without thinking, and as soon as the words were out of my mouth, I wanted to die of mortification. His handsome self? Who actually blurted out something like that? Awkward and socially inept Iris, that was who.\n\nThe surprise was evident on Sam's face, but his smile widened. \"I will be sure to do that, Iris. And by the way,\" he went on, leaning close to me and lowering his voice, \"you're really cute when you blush.\"\n\n* * *\n\nI spent the day of Halloween cleaning my apartment, determined to conceal the fact that I was a bit of a slob. By the time I had the place spotless, it was well into the afternoon, and once I ate a late lunch, I hurried to take a shower.\n\nAs the water cascaded over me, I stared down at my body. I'd just shaved my legs and armpits, but I wasn't sure what to do about my pubic hair. I normally kept the dark triangle between my thighs closely trimmed, but now I wondered if I should shave it. If Sam and I got to the point where he actually saw my pubic hair, would he wish I was bare?\n\nFinally I decided to leave the hair covering my mound while I shaved my outer lips. When I set the razor aside, I slid my fingertips over the newly smooth skin and realized I liked the way it felt. My flesh felt more exposed, not only to the cool air and the water but also to my touch. \n\nI couldn't resist giving my clit a teasing rub. My body immediately responded, and a soft moan escaped my lips. \n\nI seemed perpetually horny; it was as if my body was desperately trying to steer me toward finally having sex. To relieve my frustration, I masturbated frequently, and it never took me long to come.\n\nLeaning against the shower wall, I spread my legs wider and began massaging my clit with a quick, circular motion. With my other hand, I sought out my entrance and worked two fingers deep inside. There was a twinge of discomfort, a hint of pain, while I attempted to stretch my opening. I knew losing my virginity would hurt, maybe a lot at first, but that wasn't enough to dampen my desire. Even now as I thrust my fingers in and out at a fervent pace, my body readily accepted the intrusion, and I could feel how wet I was. \n\nGlancing downward, I saw that my pale pink nipples were hard from my arousal. All I had to do was imagine Sam's mouth around one of them, and I was right on the edge of climax. My thighs shook as I rubbed my clit faster. I fantasized about the way Sam would look, the way he would feel, while he took me. \n\n\"Fuck me, Sam!\" I cried shamelessly.\n\nAs the words echoed off the shower walls, I surrendered to a fierce orgasm. Releasing a helpless wail, I felt my muscles clench around my fingers deep within me. Again and again my body spasmed, and I reveled in each blissful contraction.\n\nAfter my climax subsided, I continued trembling. Gently withdrawing my fingers from between my thighs, I closed my eyes and waited for my breathing to slow. \n\nMy movements were languid as I finished showering, and when I finally stepped out onto the bathmat and began drying off, I found I was relaxed, almost drowsy. Maybe it was a good thing I masturbated before Sam arrived, I thought. It would keep me from throwing myself at him as soon as he stepped inside my apartment.\n\nThe idea of doing that made my sensitive clit throb, and I realized it would take far more than one orgasm to subdue my yearning for Sam.\n\nI went about blow drying my hair, then carefully pinned it back so it would be hidden under the wig. In my bedroom, I chose to wear a lacy white bra and matching panties beneath my dress. As I carefully applied make-up, I aimed for a dramatic effect that wasn't too over the top. My deep red lipstick was striking, and I managed to create the exact look I wanted with the eyeliner and shadow. \n\nFinally I put on the wig and stepped into black heels before giving my reflection a critical look. Then I grinned in satisfaction. \"Perfect,\" I declared. \n\nA few minutes before six, I put the pizza in the oven. I was grateful for something to do, as my anxiety had returned with a ferocity that made my hands shake. It wasn't yet dark, but the day was fading fast outside the kitchen window. Thinking about what the evening might hold for me and Sam was enough to quicken my pulse.\n\nSam arrived right on time, and when I heard his knock, I rushed to answer the door. As soon as we saw each other, our mouths dropped open. I'd never seen Sam in anything other than business casual, but he now stood before me wearing a black cape over a white dress shirt, black vest, and black pants. His hair was slicked back, and he'd even given himself a prominent widow's peak. \n\nHis stare swept over me, and when he grinned, I noticed his fangs. \"You are one spectacular bride!\" he exclaimed.\n\nI couldn't help but giggle at his compliment. \"And you're one sexy vampire. I love your costume!\" I made a show of beckoning him into the apartment. \"I know you can't enter unless I explicitly invite you inside, so please do come in.\"\n\nSam laughed and stepped into the living room. As soon as I closed the door behind us, he drew me into a quick hug. \"Thanks for inviting me over tonight.\"\n\nAfter I recovered from my initial shock at being in Sam's arms, I hurriedly hugged him back. \"Thanks for coming. Are you hungry? The pizza's almost ready.\"\n\n\"Sounds great.\" He looked around my apartment as we headed toward the kitchen. \"This is an awesome apartment.\"\n\n\"It's kind of small, but I like it,\" I said. \"Nora--the woman who owns the house and lives upstairs--told me she would be at a party tonight, so no one else is here.\" I tried to keep my voice casual as I revealed this information to Sam. \n\n\"Then we can go absolutely wild,\" he responded with a grin. \n\nI knew he was only teasing, but the thought of going wild with him made my cheeks redden. All I had to do was remember my earlier fantasy in the shower, and I immediately grew wet.\n\n\"We can do whatever we want,\" I informed him, flashing my own wicked grin.\n\nSam raised his eyebrows, and I could have sworn I saw his face flush a little as well. I busied myself with taking the pizza out of the oven, hoping I hadn't come on too strong.\n\n\"You need any help?\" Sam asked.\n\n\"Nope. Just make yourself comfortable, and I'll have this ready in a sec.\"\n\nSam sat down at the table while I divided the pizza into slices. I couldn't help but be hyperaware of his presence, since I was used to spending all my time in the apartment alone. \n\nOnce I'd put our plates on the table, along with a glass of cider for each of us, I sat across from Sam, trying to suppress a nervous giggle.\n\n\"I'll have to take my fangs out,\" he said. \n\n\"Yeah, I guess Dracula never tried to eat pizza. But there's a first time for everything.\" I lifted my glass of cider. \"Here's to your first time celebrating Halloween, Sam.\"\n\nHe grinned and gently tapped his glass against mine. \n\nAs we ate dinner, the conversation flowed easily between us. It was as if we were sitting together at lunch, chatting away, and I felt the tension in my shoulders gradually disappear. The evening was going great, I assured myself. Sam looked like he was having fun.\n\nAfter we finished eating, Sam insisted on helping me wash the dishes. We stood side by side at the sink, with me washing and him drying. \"Have you ever carved a pumpkin?\" I asked.\n\n\"Nope,\" he replied. \"My parents were okay with pumpkins, but jack-o'-lanterns? That's another story.\"\n\nI nodded toward the pumpkin I'd placed in the corner of the kitchen. \"Well, tonight you're in luck, because I picked out the perfect pumpkin for you to carve.\"\n\nSam threw his head back and laughed. \"Only if you help!\"\n\n\"Deal.\"\n\nAs we took turns scooping out the slimy pumpkin innards, I gave Sam a sidelong glance. \"You don't feel like you're doing something sinful right now, do you?\" I asked. \"I don't want you to be uncomfortable.\"\n\n\"No, not at all,\" he answered. \"I have no issue with religion, but my family is just... overzealous. My parents pretty much stopped talking to me when I told them I no longer wanted to attend church with them every Sunday.\"\n\n\"I'm sorry,\" I said quietly.\n\nSam shrugged, but I knew his family's estrangement bothered him. \"I figure they'll come around eventually.\" Sitting at the table beside me, he carefully carved the pumpkin. \"Do you get along with your mom okay? From the way you talk about her, it sounds like you two have a good relationship,\" he said.\n\nDuring one of our recent lunch conversations, I'd mentioned to Sam that my parents were divorced and I rarely saw my father. \"Mom's great,\" I told him now, \"but we're so different. She's confident and outgoing, and I'm... not.\"\n\nSam looked at me and smiled. \"You are when you get to know someone,\" he said. \"I like that.\"\n\nI beamed at his words, then leaned back in my chair, regarding the pumpkin's new grinning face. \"You did a great job! Looks like you're a pro at carving pumpkins.\" Jumping up from the table, I got a tea light candle to illuminate the jack-o'-lantern. Once it was lit, I turned off the kitchen light so we could admire Sam's work.\n\nAs we stood side by side, he slipped his arm around me. I nestled against him, basking in his warmth while inhaling his familiar yet enticing scent. I was exquisitely aware of my body touching his, and I wanted more than anything to kiss him, but I told myself it was too soon.\n\n\"Wanna watch TV?\" I asked. \"There are probably lots of scary movies to choose from tonight.\"\n\nSam gave me one of his sweet grins. \"Sure.\"\n\nAs we headed into the living room, I grabbed the large bag of candy I'd bought. \"You thought of everything!\" he said, taking off his cape before he sat down beside me on the couch.",
        "\"I know you're not crazy about sweets, but I figured you could find something you like in that bag.\" Now that we were next to each other in the almost darkness, I swallowed hard, trying to fight an attack of nerves.\n\nFlipping through the channels, I came across a black-and-white vampire film. \"This should be right up your alley,\" I told Sam playfully.\n\n\"Absolutely,\" he said as I settled back on the couch. \"Maybe I can learn something, because my vampire game needs work.\"\n\n\"Oh, I don't know about that.\" I turned to face him. \"You're quite alluring.\"\n\nSam turned toward me as well, a pleased smile dancing on his lips. \"Really?\" he asked in a low voice. \"How so?\"\n\nGazing into his eyes, I told myself to go for it. As nervous as I was, I knew I wasn't imagining his interest in me. Before I spoke, I took a deep breath to gather up all my courage. \"Well, you have an incredibly sexy voice, for starters,\" I said. \n\nNow Sam was grinning. \"Is that right?\"\n\nI slowly nodded, my stare moving to his lips. \"I'd be lying if I said I never imagined you leaning close to me and whispering all kinds of dirty things in my ear.\"\n\nSam's eyes widened at my confession, and I heard his sharp intake of breath. I quickly looked away from him, afraid I'd gone too far. Still I couldn't deny that my entire body seemed to pulse with need. Simply saying those words to him had made me wet once again. \n\nOn the television screen, a handsome vampire sank his fangs into a beautiful young woman's neck. I dared to flash a grin at Sam. \"Be sure to take notes,\" I told him.\n\n\"Oh, I am,\" he responded. \"In fact, I'd better get my fangs so I can practice.\"\n\nNow it was my turn to be surprised as I watched him get up from the couch and retrieve the plastic fangs from the kitchen. He popped them back in place, then sat down next to me again. \n\n\"So,\" he said, giving me a wide smile as he wiggled his eyebrows, \"this is the part where I mesmerize you so you're utterly unable to resist me.\"\n\nOh, I was already there, but I couldn't tell him that! Instead, I laughed and moved closer to him. \"Go for it!\" I cried. \n\nSam leaned toward me, bringing his lips close to my ear. \"I think you're so sexy, Iris,\" he whispered. \"All night, I've wanted to kiss you. When I think about slipping a hand beneath your dress, it makes me so hard...\"\n\nI closed my eyes and released a moan, powerless to hide my arousal. Sam pressed his mouth to my neck, laughing low and soft as he teasingly grazed my skin with his fangs. \n\n\"That did the trick,\" I said, my voice high and breathy. \"Now I'm all yours, Sam.\"\n\nHe removed the fangs once again, then turned my face toward his. I stared up at him, my heart pounding like a thundering drum in my chest. \n\nSam pressed his lips to mine, and I melted into our first kiss. His mouth was so warm and soft, so inviting. I slipped my arms around his neck, eager for more of him. When our tongues met, a current of lust traveled through me, and my hips actually began rocking, making my need clear. \n\nI finally withdrew from him, breathing hard. Sam's stare was hot, and before I'd recovered from the kiss, he gave me another one, his mouth more demanding. I surrendered completely, feeling lightheaded as a fierce aching began between my thighs. \n\nSam tentatively cupped my breast. My pleasured cry was muffled by his lips, and before I could stop myself, I slid my hand down his chest, then lower. He gave an encouraging moan, which only grew louder when my fingers reached his erection.\n\nThis time, Sam was the one to break our kiss so he could catch his breath. He looked down, watching me stroke him through his pants. Feeling his hardness beneath my palm made me shiver; it was all I could do not to remove my wet panties, then lift up my dress and spread my legs for him. \n\nInstead, I took off my wig, then removed the pins from my hair so it fell free. With Sam's stare riveted to me, and his chest rising and falling with heavy breaths, I worked up the nerve to say, \"I need to tell you something.\"\n\n\"Okay,\" he said quickly. \n\nI figured there was no sense being coy about it. \"I'm a virgin,\" I blurted out. \"In case you haven't already guessed. But I'm ready for that to change. Tonight.\" I fought the urge to avert my gaze as I grew suddenly self-conscious. \"I've never had a real boyfriend, so I have no idea what I'm doing. If that scares you off, I understand.\"\n\nSam smiled and ran a hand through his hair, mussing up his vampire coif. Then he brought his face close to mine, as if confiding a secret. \"That won't scare me off, Iris, since I'm a virgin, too.\"\n\nMy mouth dropped open, for his revelation came as a total shock. \"Really?\"\n\nHe nodded. \"Most girls I dated in the past were religious, like my family, and they wanted to wait until marriage. Now it seems like everyone our age has already had sex, and I guess I have kind of a hang-up about it. If I do work up the nerve to ask someone out, and we hit it off, I find I'm dreading that inevitable conversation. My insecurity tends to ruin things before the relationship turns sexual.\"\n\n\"But you haven't been insecure with me,\" I pointed out.\n\nHe tilted his head, regarding me with a soft smile. \"No, I haven't. I certainly didn't come here expecting to have sex tonight, but when we started kissing and touching, it just felt so... right. I knew I'd be comfortable with admitting my lack of experience to you. I didn't feel like you would judge me.\"\n\n\"Of course I wouldn't,\" I said. \"But I will admit that, unlike you, I was hoping to have sex tonight, so...\" I jumped up from the couch and took off toward my bedroom, leaving a puzzled Sam staring after me. I quickly returned, carrying the box of condoms.\n\nSam's eyes grew wide as he grinned. \"You really did think of everything, didn't you?\"\n\n\"Yep.\" I placed the box on the table beside the couch, then stood before Sam and slowly took off my dress. I was trembling with excitement, and as his hungry stare moved over me, I felt my nipples harden beneath my bra.\n\n\"You're beautiful, Iris,\" he whispered. \n\nI grinned and went to Sam, leaning forward so I could give him a deep kiss. Then I climbed onto the couch, kneeling beside him. Without speaking, I began trying to unfasten his pants, but my hands were shaking so much, I struggled with the simple task.\n\nI was grateful when Sam took over. Once he had his pants and underwear down around his thighs, I stared at his erection, which pulsed in time with his heartbeat. \n\nLooking up at Sam again, I saw that his gaze was pleading, full of the same need overtaking me, and I wanted more than anything to make him feel good. Extending my hand, I wrapped my fingers around his cock, and it twitched in my grasp. As I began gently stroking, Sam let his head fall back, a low groan emerging from deep in his throat. \n\nI delighted in the silkiness of his flesh. Sliding the pad of my thumb over his cock head, I felt a drop of moisture. My mouth watered when I thought about tasting it.\n\nEagerly I leaned forward, brushing my lips against his tip. Now Sam was trembling, too, and his obvious excitement made me brave enough to swirl my tongue all around the lovely mushroom head. The slight saltiness of his skin combined with a trace of sweetness from his pre-cum. \n\n\"Iris,\" he moaned while brushing my hair back from my face. Grasping his erection, I planted kisses along the entire length of him. I inhaled his scent, which only heightened my arousal. I was soaking wet between my thighs.\n\nFinally I wrapped my lips around Sam's throbbing cock. The sound of his heavy breathing competed with the volume of the television, and the flickering light from the screen fell on my face as I did my best to pleasure him. \n\nI wasn't able to take much at first. As soon as his cock reached the back of my tongue, I had to suppress my gag reflex. He was careful not to thrust his hips, instead letting me set the pace. While saliva trickled from my mouth to coat his cock, I stroked him, then lowered my lips until I reached my hand.\n\n\"Ah, fuck!\" he cried. \"Iris, that feels so good!\"\n\nI'd never heard Sam swear before, and I took it as a compliment. He seemed lost to his lust, and to the feel of my licking and sucking and stroking. I tried again to take him deeper, exhaling as another inch of his cock disappeared between my lips. \n\nIt was then that I felt Sam caress my back, his fingertips running along my spine. While I fondled his balls and used my tongue to give plenty of attention to the underside of his cock, he reached between my thighs. \n\nI moaned when he began rubbing me through my panties. At first, his touch was a little too low, but I wasn't about to lift my head from his cock and give him directions. Then his fingers homed in on my clit, and I moaned even louder, letting him know he'd reached just the right spot.\n\n\"I love how wet you are,\" he told me in a guttural voice. I was glad he found it exciting, because my body seemed intent on producing a copious amount of lubrication for my first time.\n\nAs Sam continued massaging my clit, I shivered from the sheer pleasure of it, and I realized I wanted him to come in my mouth. I wanted to feel him orgasm while my lips were wrapped around his cock. \n\n\"Iris, I'm close,\" he suddenly warned me. I heard his gasp when I continued sucking, hollowing my cheeks in the process. \"Iris, oh God!\"\n\nI moaned, letting him know I didn't want him to hold back. He let out a loud cry, and his whole body tensed as the first rope of semen landed on my tongue. Quickly I swallowed, tasting the hot saltiness of it. More soon followed, and despite my best efforts, it was impossible for me to get it all down. Some escaped my lips, but I didn't raise my head until Sam was completely spent.\n\nFinally I sat up and wiped my mouth with the back of my hand. He stared at me, seemingly transfixed. \"Was that okay?\" I asked.\n\n\"That was fucking fantastic!\" he panted, still catching his breath. \"My God, if you're a virgin, how did you learn to do that?\"\n\n\"By reading how-to articles and watching porn,\" I confessed with a grin.\n\nSam laughed, then pulled me close so he could give me a gentle kiss. \"Thank you for that,\" he whispered against my lips. \n\n\"I enjoyed doing it,\" I whispered back. \"It made me excited, knowing I was exciting you so much.\"\n\nHis eyes were full of affection as he regarded me. \"No pressure, but if you still want tonight to be our first time, it won't take me long to get hard again,\" he revealed. \n\n\"Now that's good to know,\" I said, then tilted my head back while Sam's lips traveled over my neck. \"What should we do in the meantime?\"\n\n\"I think we should see if I can make you come while my face is buried between your thighs,\" he replied, his breath warm against my skin. \n\nI released a whimper, unable to hide my eagerness as I nodded. \n\nSam stood and began to undress. Sitting on the couch before him, I was far too impatient to go slow. Instead, I hurriedly reached behind me to unhook my bra before casting it aside. The cool air greeted my erect nipples, making them even harder, and Sam fixed his stare on my breasts. I couldn't resist cupping them in my hands and pushing them together for his benefit. \n\n\"Iris, you're killing me,\" he groaned. I watched as he pulled down his boxer briefs and stepped out of them. Now that he was completely nude, I allowed myself several long moments to take in the gorgeous sight. Like me, Sam would be considered average by many people, yet I found him so sexy, I'd already creamed my panties. \n\nThat thought reminded me I still had on my wet underwear. Snapping out of my lust-filled daze, I yanked off my panties, then spread my legs wide. \n\nSam wasn't joking when he told me it wouldn't take him long to get hard again. He was already semi-erect, and as I planted my feet on the edge of the couch, keeping my knees bent, his gaze settled between my thighs. \n\nFor a long moment, Sam studied me, as if he wanted to commit the sight of my naked body to memory. Then he began stroking his cock, his chest rapidly rising and falling with each shallow breath.\n\nWhen Sam moved toward the table to my right, I thought he was reaching for the box of condoms, but he only turned on the lamp. I tried not to flinch in the sudden light, for it had been far easier to be uninhibited in the shadows. \n\n\"I want to get a good look at you,\" he said in a husky voice, then knelt before the couch and leaned forward so he was at eye level with my most intimate place. I fought the urge to close my legs and hide myself. \n\n\"I can't wait to taste you,\" Sam whispered, drawing a fingertip between my wet, swollen inner folds. His mere touch brought a cry from my lips. As he lowered his mouth to my thigh and licked my skin, I knew he could was gathering traces of my juices on his tongue. His kisses were gentle while he traveled upward. By the time his mouth was just above my clit, I was writhing on the couch, desperate for him. \n\nSam's eyes met mine. \"Let me know what feels good, and what you want me to keep doing,\" he murmured, and I readily nodded.\n\nI honestly wasn't sure what to expect. Of course I'd imagined how this would feel, but imagining was worlds apart from actually experiencing. I was convinced I'd enjoy it, yet I wondered if it would be all that much different from the sensation I derived from touching myself. \n\nBut oh God, it was different! As Sam sucked at my smooth outer lips, drawing them into his mouth, I couldn't hold back my mewls of pleasure. He gently spread me open with his fingers, and I stared down at him, my eyes widening when his tongue slid from my entrance to my clit. \n\n\"Yes!\" I cried. My hips began their rhythmic rocking, as if I were already fucking. I heightened my bliss by fondling my nipples, rolling those peaks between my fingers. \n\nSam gazed up at me, and the blatant lust in his eyes made a shudder course through my body. The sound and feel of his eager lapping at my folds, and the warmth of his mouth mingling with my heat, was almost enough to make me orgasm right then and there.\n\nBut he was far from finished with me. His lips gently circled my clit, almost teasingly, before he began lashing the swollen nub of flesh with his tongue. My plaintive cries filled the room. \"Sam, oh God, keep doing that, please!\" I begged.\n\nHe happily complied, working his tongue against my clit at a relentless pace. I buried my fingers in his hair, resisting the urge to press his mouth even harder against me. Yet he seemed to sense what I needed, for he grabbed my hips, holding me firmly to him.\n\nMy face was hot, and my breasts heaved as I breathed hard and fast. \"I'm gonna come!\" I wailed. \"I'm so close!\"\n\nSam moaned at my words, showing my clit no mercy. The stimulation was almost more than I could bear, but my thighs began shaking, signaling that my body was about to surrender to a powerful orgasm. \n\nThe first spasm caused me to arch my back and raise my hips. \"Sam... oh, fuck!\" I managed to shriek before falling silent and allowing the blissful contractions to seize me. I felt awash in ecstasy, never wanting it to end.\n\nThen it suddenly became too much. Still shaking, I squirmed in Sam's grasp. \"I can't, oh it's too sensitive!\" I managed to moan. \n\nHe lifted his head, smiling as he gazed at my swollen clit. His expression made it clear that he was quite pleased with my helpless state.\n\nWhen he sat next to me on the couch, I noticed he was fully erect once more. I was breathing hard, yet I readily accepted his kiss. \"Do you want to wait a little while?\" he asked, smoothing my hair back from my flushed face.\n\nI quickly shook my head. While my clit was temporarily overstimulated, the rest of my body was another matter. Deep in my core, I throbbed with the need to take Sam deep inside me.\n\nThis time he did reach for the condoms. I watched eagerly as he took one from the box. Though he was a virgin, he knew how to put it on correctly, and he winked at me while rolling the condom down the length of his erection. I grinned, making no attempt to hide my excitement.\n\nWhen Sam was ready, I started to lie back on the couch, but he grabbed my hand, and I looked at him expectantly. \"Why don't you straddle me?\" he suggested. \"Then you can control the pace while taking me inside. The last thing I want to do is hurt you.\" He was breathing faster, anticipation and lust clear on his face, yet he was putting my needs first.\n\nStroking his cheek, I nodded before moving to plant a knee on either side of him. As I hovered above his cock, I took a deep, steadying breath. \"I'm a little nervous,\" I revealed with a shy smile.\n\n\"I understand,\" he said, his voice low and soothing. \"Just take it slow, okay? No rush.\"\n\n\"Okay.\" I placed my hands on the back of the couch, bracing myself while balancing on my knees. Sam took hold of his sheathed cock, and I waited for him to guide the tip directly to my opening so I could sink down upon it. Instead, he gently slid it between my inner lips, coating it with my juices. I was so wet, we didn't need lube. When Sam's cock grazed my clit, I released a needy whimper and knew no amount of discomfort would stop me from taking every inch of him inside. \n\nWhen he positioned his cock right at my entrance, I began lowering my body. \"Ooh!\" I released a soft cry as the head stretched me. Trying to hide my wince, I swallowed hard, then took another deep breath and kept going. My body was ready, more than ready, but I still had to move slowly. \n\nSam gazed up at me, his expression rapt. I heard his groan of pleasure when I managed to accept the tip of his cock. There was a little pain, yes, but more of a sensation of pressure, of tremendous stretching. I knew Sam's cock was beautifully, perfectly average, but at that moment, it felt massive as it penetrated me.\n\nThen Sam was all the way inside, and I couldn't hold back a relieved smile while I settled down upon him. He smiled, too, then leaned forward to kiss me. I moaned into his mouth; I wondered if he could feel me trembling. \n\nAt first I was afraid to move, afraid it would hurt. Sam appeared to read my mind, for he repeated, \"No rush.\" Then he reached between my thighs and gently rubbed my swollen clit. By that point, it wasn't as tender, and I took pleasure in the stimulation. \n\n\"Oh, that feels so good,\" I groaned. \"You feel so good.\"\n\nAnd he did. Though I hadn't yet begun to move, I derived a deep satisfaction from being so completely filled. \n\nAs Sam's breath came faster and his mouth found mine once more, I realized he was shaking, too. Was it hard for him to remain still while he patiently waited for me to get used to his cock inside me? \n\nFinally I worked up the nerve to begin moving, my hips taking on a slow, rhythmic pace. I kept him almost all the way inside, not brave enough to try sliding up and down his length, but as Sam's features contorted with ecstasy, I knew he loved the way I gently rode him.\n\nWith his fingers massaging my clit, he lowered his mouth to my left breast and took my nipple between his lips. \"Oh God, yes!\" I cried. It was as if my body had become a singular pulsing current of bliss, and my hips began moving faster.\n\nSam let out a loud groan, which was muffled by my breast. A thin layer of sweat covered my skin, and I grew even more excited by the feel of his mouth sucking my nipple. \n\nWhen Sam lifted his head, he gave me a pleading stare. \"Iris, oh... oh fuck, I'm not going to last!\" His words were edged with something like panic. \n\nSeeing as how it was his first time, too, I certainly didn't expect him to hold out long. \"That's okay,\" I assured him with an affectionate smile. \"Don't hold back, Sam.\"\n\nWhile rolling my hips, I basked in the raw pleasure of the act. I could feel my own orgasm building, and soon Sam and I were both quaking, on the verge of release. His groans and my cries were loud enough to make me glad Nora was out for the evening. ",
        "I felt Sam tense just before he came. His eyes locked with mine, and I gasped when he bucked his hips, driving his cock deeper inside me. He gave a helpless shout as he climaxed, his jaw slackening. Yet even in the grip of his orgasm, he continued rubbing my clit, determined to make me come.\n\n\"Yes!\" I wailed, surrendering to him then: to his fingers, his cock, and his stare full of bliss. A low scream escaped my lips as I reached my orgasm, my body wracked by delicious spasms. My muscles clenched around Sam's cock again and again, and he released a low groan. His breaths were shallow, and his face was flushed. \n\nFinally my contractions subsided, and as much as I wanted to nestle up against Sam and bask in our post-orgasmic satisfaction, I knew I couldn't. After giving him a quick kiss, I sat up, and he held the condom in place so it wouldn't slip while I eased myself off of him.\n\nSam looked down at his slowly softening cock, and then he looked at me and grinned. \"My God, that was incredible!\" he said. \n\n\"It sure was,\" I replied, my grin mirroring his. Then I wondered if I was bleeding; I was only a little sore after our first time, but I figured I'd better check just in case. \n\n\"Be right back,\" I told him, then hurried to the bathroom to relieve myself. Wiping between my thighs, I discovered I hadn't bled at all. \n\nNext it was Sam's turn to clean up, and while he was in the bathroom, I put on my bra and panties. Grabbing a blanket from the back of the couch, I sat down and wrapped it around me, and I realized I couldn't stop smiling. Whatever the future might hold for me and Sam, I knew I would never regret him being my first.\n\nHe returned to the living room, giving me a sweet grin. I watched as he pulled on his underwear and pants but didn't bother with his shirt. Then he settled on the couch next to me, and I draped the blanket around him as well. \n\nSam wove his fingers through my hair, giving me a deep kiss with plenty of tongue. Though I'd just come twice, my body immediately responded to him. He held me close, and I sighed with contentment, resting my head on his shoulder. I noticed another film had begun on the television, this one featuring what appeared to be a werewolf rampaging through the night.\n\n\"Thank you, Iris,\" Sam whispered, interlacing his fingers with mine. \"For everything.\"\n\n\"Thank you for making my first time so wonderful,\" I whispered back.\n\nSam turned to look at me, his gaze tender. \"Sex with you was absolutely amazing,\" he said, \"but I'd like this to be more than just sex. I enjoyed every minute of tonight with you.\" \n\nI beamed at his words, then planted another kiss on his mouth. \"I want that, too,\" I told him.\n\n\"Oh, and just so you know?\" he said with a grin, and I looked at him expectantly. \"Halloween is now officially my favorite holiday.\""
    ],
    "authorname": "MoonlitOpal",
    "tags": [
        "blow job",
        "halloween",
        "virgin",
        "oral",
        "costume",
        "first time",
        "masturbation"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/a-night-of-sweet-treats"
}