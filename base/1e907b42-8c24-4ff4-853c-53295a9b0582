{
    "title": "Danielle Davis",
    "pages": [
        "Danielle Davis was on her knees with her awesome little ass pointed right at me. Her knees were spread wide for balance in the old papas san chair. Her silk panties were stretched between those knees, a very obvious wet spot in the center of the crotch. Her right shoulder was down against the back as she turned her head and looked at me. She had this faint shy sexy smile on her lips.\n\nAs for me, I was frozen with a very definite deer in the headlights look on my face. It was slowly changing to awe as my eyes locked in on her well-displayed sex and the tight pucker of her asshole. The skin around her anus was a shade or two darker than the surrounding skin and at the center was a very distinctive ring at the opening.\n\nI was finding it hard to breath and I kept licking my lips. My manhood was stiff, hard, and hot along the inside of the left leg of my levies. My first urge, as my shock lessened, was to fall to my knees and bury my face between those firm cheeks and my tongue as deep in her ass as humanly possible. \n\nThe fact that she was just eighteen, probably a virgin, and my best customers daughter, all warred with this urge. The last part of that was the main problem, that and the fact that we were in his house and he was home. I was supposed to be fixing the family computers and Danielle's was the last.\n\nShe wasn't supposed to be home yet. She was supposed to be at work for another hour. I hadn't expected her so I hadn't knocked on her door. I was dead meat if her dad came down the hall and why the hell was she in this position in the first place, my mind yelled in shear panic.\n\nShe didn't move, I didn't move, and this could have gone on forever as far as I was concerned, but something had to give before her old man showed up. I took a deep breath to ask the question my mind was yelling but all I could do was lick my lips again.\n\n\"You do that one more time and I'm going to come all over myself,\" Danielle whispered softly.\n\n\"I think I already have,\" was my witty reply.\n\nShe giggled as her hand moved to her sex and rubbed lightly over her smoothly shaven outer lips. She bit her lower lip as a finger slipped between the folds of her sex and she moaned softly as the finger rubbed up and down. Her eyes closed for a second.\n\nOpening her eyes, she whispered, \"If daddy wasn't home I'd let you use that tongue on me until I screamed.\"\n\n\"I have a feeling that wouldn't be long,\" I whispered in reply.\n\n\"You certainly have that right, it's one of my favorite fantasies.\" \n\n\"How do you feel about dieing?\" I asked.\n\nShe sighed and got out of the chair, the panties falling to the floor around her ankles. Standing there facing me she was breathtaking to say the least. Tall, slender, with small well-rounded tits and narrow hips, she was the perfect picture of a very healthy young woman. \n\nWhen she stuck the finger that had rubbed her sex in her mouth, my breath caught in my throat. Removing the finger she smiled and said, \"I taste oh so good.\"\n\nI licked my lips again and nodded. \"I'll just bet you do.\"\n\nHer hand dropped to her sex and moved there for a second. When she moved her hand she shivered and took two steps toward me. She held a finger up in front of my face. \"Want a taste?\"\n\nWhen I opened my mouth to speak, she shoved the finger in and giggled. She moaned softly after that as my tongue and lips worked the finger over. She was absolutely right; she tasted fresh, sweet, and wonderful.\n\n\"Dad leaves for work at six and calls to check on me at eight, I plan on getting off big time by eight thirty at the latest, sooner if things work out. Are you going to be here to help?\" She asked as she popped her finger out of my mouth.\n\nMy mind swirled and whirled as it spit out a ton of smutty thoughts at that idea. All I could do was nod. When I did, she grinned and brushed past me and quickly crossed the hall to the bathroom. My heart was pounding as I turned to watch her until the door closed.\n\nIt took a dozen deep breaths before I could function enough to sit down at her computer and turn it on. My mind was still in flights of fancy as it booted up and my dick was in a painful position with me sitting down. I stood up to rearrange things and had just sat back down when Dave, Danielle's dad walked into the room.\n\n\"How's it coming, Bill?\" He asked.\n\nMy brain spit out several snide remarks about everyone coming nicely but I ended up saying, \"I'm just getting started. Danielle was in her room and getting ready for a bath so I had to wait a few minutes.\"\n\n\"Work must have been slow if she's home this early.\"\n\n\"I guess so, she didn't say.\"\n\nI heard him knock on the bathroom door and when Danielle acknowledged it he said, \"Don't be using all the hot water, I need a shower before work.\"\n\nHer reply was muffled to me but he must have understood because he said, \"I don't know you'll have to ask him yourself, but I don't have a problem with it.\"\n\nDanielle made another muffled reply and Dave turned back to me. \"Kids, they are so impatient. She's lost some folder or the other and wants to know if you can find it for her.\"\n\n\"I'm in the middle of clean up right now and have some other stuff to do but no problem, I'll look for it when I finish what I'm doing now. Did she say what the name of it was?\"\n\n\"Something to do with a self portrait or something like that. An art project most likely, she's borrowed my digital camera a few times lately. She wants to go to art school. That's her latest thing anyway. I hope she finds what she likes pretty soon. She needs to get some kind of training so she'll have a future.\"\n\n\"Even with training it's hard,\" I told him. \"I have three years of computer courses and a ton of experience and I'm still struggling to make ends meet. I've got the job at the electronics store and I do this type stuff on my own on my days off and weekends. I need to finish college but I haven't the money or the time.\"\n\n\"Have you ever checked on a job with our company. The computers are always crashing and locking up. They have a service contract with some asshole but he's way to busy and hard to contact. Then when he does show up, he just gets things back up and running, not fixed.\"\n\nI turned and looked at him. I had never even thought about the company he worked for, I wasn't even sure what they did. \"No sir, I didn't even know the plant had computers.\"\n\n\"We have tons of the damned things, from the robot controls on the production line, to the offices, and especially in research and development where I work. I could hardly get anything done without the computers. Come by on your next day off and I'll introduce you around.\"\n\n\"I'd appreciate that but most companies want a sheepskin for stuff like computers.\"\n\n\"If you can take care of the company computers like you can mine then I think we can use you, sheepskin or not. Anyway, the company has an excellent training program. Danielle is in the art department and they are talking about putting her through school and I have a couple of kids from the college working for me.\"\n\n\"I'm off next Tuesday so I think I might take you up on the offer,\" I told him with a grin. A job at the plant would pay a hell of a lot more than the minimum wage I was making now.\n\nDanielle came out of the steamy bathroom wrapped in a large towel and said, \"If you two are through gabbing, I need my bedroom for a few minutes.\" \n\nLooking at me she went on, \"You can come back when I'm dressed to finish up and help me find my pictures. They vanished and I can't find them anywhere. That's why I'm home early, I need them for a new layout the art department is working on.\"\n\n\"No problem,\" I told her as her dad and I left the room.\n\n*****\n\nI followed Dave to the kitchen and sat at the counter sipping the beer he had offered me. He sat down with one of his own and looked over at me as he sipped on it. Finally he said, \"My daughter is quite taken with you.\"\n\nMy mind gave a little leap as flashes of her superb ass crossed my mind. \"Uh, yes sir, I think you may be right but I really hadn't noticed until today.\"\n\nDave cocked his head questioningly but I held my peace. After a moment or two, he smiled and shook his head. \"She talks about you all the time and I figured you two might have something going on. I'm not prying, she's of age, but I am her father after all.\"\n\n\"We see each other around and talk but we aren't dating or anything. She's a nice girl and all but she's a little young.\" I wasn't sure what to say which was probably very obvious.\n\nWith a grin Dave nodded his head. \"That's kind of what I figured, that it was one sided and you didn't have a clue.\" He paused a beat and asked, \"Did something happen to change that today?\"\n\n\"Uh, not really, it's just the way she showed an interest in me today, it was different, more forward, like she was trying to catch my eye.\" This was as close to the truth as I wanted to get with him.\n\n\"Ah, she must have decided the subtle approach wasn't working and stepped it up to the next level. That's a common tactic among women, believe me, I'm talking from years of experience. If her mom hadn't died, we would have been married twenty-five years next month.\"\n\n\"I'm sorry to hear that sir.\" \n\n\"It's old news, Danielle and I have been on our own for the last five years, and we're both still alive. It's hard being both parents and hard not to have a mom, so we are pretty close. She's independent and high-spirited like her mom, which has helped a lot. I just don't want to see her hurt.\"\n\n\"Not in this life time,\" I said honestly. \"I've liked her since the very first time I saw her.\"\n\n\"I'm glad to hear that. Just chalk this talk up to a father's concern.\" He sighed and looked toward the hall and his daughter's bedroom. \"Go finish her computer and find her files, I'm going to go see how much hot water she left.\"\n\n\"Yes sir.\" I said as I head for the hall.\n\nMy mind was racing a little from our little talk but I understood a few things that had always puzzled me. Danielle was outgoing but shy, which never made much sense. Without a mom she probably didn't have anyone to ask about things. Her dad was there but some things you just didn't talk to the opposite parent about.\n\nAnd she was always hanging around and I found her looking at me more than was just accidental. I thought it was my fantasies hoping to come true that made it seem that way. But now.... I let the thought drop as I stopped at Danielle's open door.\n\nShe was lying on her bed and dressed like any teen-age girl would dress at home. Sloppy sweats, no shoes, and her hair pulled back in a ponytail. She had her makeup on and her lipstick, which made me smile. She wasn't missing any tricks with me around. \n\nThe front of the sweatshirt was cut at the neck and hung open, giving me a good view of her bare breasts underneath. I was very obvious as I looked, so she knew that I saw. She grinned as I did and then giggled. I walked over to her desk and sat down. \n\nShe turned on the bed so she was facing me and shifted her shoulders so the shirt opened even wider than before. It hung off one shoulder and exposed her right breast entirely but it was hidden from view from the door. Her nipple was hard and pointy and I licked my lips while thinking about sucking on it. My dick was growing harder and more uncomfortable by the minute.\n\nHer eyes dropped to the bulge in the leg of my levies and she smiled as she asked, \"Are you through updating and straightening up my computer, because if you are I want to show you some pictures that will make that thing explode.\"\n\n\"And what if your dad walks in while I'm looking at them? What will he say before he kills us both?\"\n\n\"I think you can find something else to do on my computer until he's ready to leave for work, if you're that scared of him.\" \n\n\"What makes you think I'm scared of him? It's you that has me the most worried,\" I said as I ran a search for pictures on her computer. \n\n\"And why is that?\"\n\n\"I never took you for the teasing kind,\" I replied as a list of folders came up. One was hidden in a directory that wasn't supposed to have graphic files in it.\n\n\"Who said I was teasing, I'm dead serious.\" \n\n\"Nice choice of words,\" I replied hoping the sarcasm came through as I opened the directory and switched to thumbnail view. My breath caught just a little as I looked down the rows of little pictures. Even this small they were something else, at full size they would give me heart failure.\n\n\"You found the hidden folder I take it.\" Danielle said and then grinned as I only nodded. \"Good, then wait until later when I can get into some of those positions for you. I think you'll find a place for that tongue of yours among other things. If you notice in a few of them, my little vibrator is clearly visible.\"\n\nI nodded again and shifted in my seat. My rock hard dick was painful now and was in bad need of repositioning. Slowly I stood up and shifted it out of my pants leg. It now made a long high ridge across the front of my pants pointed at my left hip. I sat back down and looked at the girl on the bed.\n\nNow it was time for Danielle's face to get that deer in the headlight look, her mouth open, and her eyes wide. \"Is there a problem?\" I asked softly. \n\nShe shook her head and then nodded, her eyes never leaving my lap. \"Is that a yes or a no?\" \n\nShe looked up at me and swallowed hard. \"It's a lot bigger than my little vibrator.\"\n\n\"One should always be careful what they wish for, their eyes might be bigger than their body can handle,\" I told her with a big grin.\n\n\"No shit!\" was her whispered reply.\n\n\"Are you two still at it?\" Danielle's dad said from the door.\n\nWe both jumped and Danielle dropped her hands in front of her chest. \"Bill has found part of my pictures but needs more time to find the rest,\" She said smiling at me. \"It might take him a while to recover them for me.\"\n\n\"Okay, them you two have fun. I need to stop and get gas on the way to work so I'm leaving a little early. I left your money on the counter in the kitchen Bill and thanks. My main computer is humming like a dream. I left a little extra for you helping my daughter with her stuff.\"\n\n\"There's no need for that,\" I protested.\n\n\"Hey, never turn down extra money,\" He said with a laugh. \"I'll see you kids later.\" \n\n\"Night dad.\" Danielle called as her dad left down the hall.\n\n\"Later.\" was his reply.\n\nA minute or so later, his car backed out of the drive.\n\n*****\n\nNeither of us moved, and then Danielle sat up and moved over to sit on the side of the bed. She whipped the sweatshirt off over her head and tossed it on the floor. Her hands ran over her breasts and she shivered as they rubbed across her nipples.\n\n\"God, your eyes on my breasts were driving me up the wall and when you stood up and moved that thing of yours, I nearly creamed my pants.\"\n\n\"When your dad snuck up on us, nearly shit mine,\" I told her shaking my head. \"You like to live dangerously don't you?\"\n\n\"I don't know, this is my first time so I'm just going on instinct.\"\n\n\"Well you sure have my attention but when your dad is around you need to cut it down several notches. He doesn't have a sense of humor where you are concerned and my ass would be hamburger. You're instigating but I'd pay the price big time.\"\n\nDanielle sighed and dropped her eyes. \"Sorry, I was trying to get your attention and since I hadn't been able to in the past....\" She let the sentence trail off and then went on, \"Doing it here gave me more leeway in what I could do even with dad home. The shock value and not being able to run on your part entered my mind also.\"\n\n\"Shock is right, I'm still trying to find my teeth from that little stunt in the chair and running away never crossed my mind. Now running toward you is another story all together.\"\n\n\"Oh yeah, and what were you going to do then?\" Danielle asked, looking up at me through her lashes.\n\n\"You'll blush if I tell you.\"\n\n\"Try me.\" She whispered with a catch in her voice.\n\n\"I was going to fall to my knees, bury my face between your awesome ass cheeks, and see just how far up your ass I could shove my tongue.\" \n\nBlush wasn't the word for it. The red flush started in her beautiful breasts and washed upward to disappear at her hairline. Not to mention her eyes going wide and her mouth dropping open. A few seconds later, she moaned softly and fell over backwards on the bed.\n\nWhen I laughed, she giggled and whispered, \"That is so unfair. I would have died if you had. I would have come my brains out, screaming my head off first thought.\"\n\n\"Yeah and dad would have been in here so fast.\"\n\n\"Well, he ain't here now.\" She whispered as she sat up grinning at me.\n\nI took a deep breath and let it out slowly. \"Look, I like you and I think the world of you but--.\"\n\n\"Oh no you don't. I used to see you up in the corner of the stands when we were in school. You with your dark look and drooling face as you watched me at cheerleader practice, you hardly ever missed a day. I even considered become a Goth so you would talk to me.\"\n\n\"You a Goth, no way, you just don't fit the part.\"\n\n\"Don't I know it. I bought the clothes, the dark lipstick, the black nail polish; I just couldn't get the dark attitude. I was to outgoing and had to much energy to pull off the depressed look.\"\n\n\"I still wouldn't have had the nerve to talk to you. You were far to pretty for a geek like me,\" I admitted.\n\n\"Geek or not, I loved your brooding good looks. I also loved the way you looked at me, it made me squirm inside.\" She paused to laugh. \"If you hadn't been up there I could have made head cheerleader a year earlier. You had me so messed up I couldn't concentrate on the moves.\"\n\n\"You looked great to me.\"\n\n\"Yeah, well it would have been nice if you had told me that back then. I've spent years dreaming and fantasizing about you.\"\n\nI chuckled and nodded. \"Me to, you wouldn't believe how many of my fantasizes you've starred in.\"\n\n\"Oh yes I would, about the same number that you starred in for me. I lost my cherry to a hairbrush because of you.\"\n\nI looked at her sharply. \"Huh?\"\n\nShe laughed, jumped off the bed, and ran to her dresser. She picked up a brush with a long thick handle and held it up. \"Yeap, this damn thing got my cherry and it's all your fault. I was having one hell of a fantasy about you, rubbing the handle up and down my slit, and the next thing I know it's inside me. I came my brains out.\"\n\nShe walked over to stand next to me. All I could do was stare at her with my mouth open. Her hand on my chin, made me close my mouth. \"I'm not sorry, not sorry at all but it's embarrassing when the other girls talk about the boys who got their cherry and I can't say a word.\"\n\nI grinned and nodded. \"Yeah, that would be a little awkward to say the least.\"\n\n\"They would ask me and I would shrug and go do something just to get away. They probably thought I was still a virgin or that I'd lost it to someone I didn't want anyone to know I had been with.\"\n\n\"Well, technically, in a sense, you are still a virgin unless....\" I let the sentence fade as I realized what I was asking.\n\n\"There's been no one other than this brush and my toy.\" She said sharply.\n\n\"Sorry, I wasn't trying to pry or insinuate that there had been,\" I said trying to calm her with an apology.\n\nShe took a deep breath, sat down straddling my right leg, and put her arms around my neck. The heat on the top of my thigh was excruciating. It felt like I was being branded for life. Her knee between my legs was just brushing the bulge in the front of my pants and made me shift my hips.\n\n\"I'm not easy, even if I am throwing myself at you.\" She whispered as she leaned in to kiss me for the first time. \n\nIt was a soft sweet kiss, as we both felt a little shy and awkward to start with. Slowly as we both found our way around our noses and get things comfortable the kiss heated up. Our tongues found each other and the duel was on. My hands found her back and I caressed and stroked the warm smooth skin.",
        "The heat on my thigh went up and I groaned. I couldn't help but wonder why she wasn't going up in flames. Anything that hot had to be on fire. She was whimpering and moaning into my mouth and breathing noisily through her nose.\n\nShe broke the kiss as her hips gave little jerks against my leg, her knee brushing my manhood. I was close to being totally out of control. I grabbed her ass, stood up to take two steps, and laid her down on the bed with me on top. She moaned loudly and kissed me harder.\n\nI rolled to the side to take my weight off her and my hand found her breast. She shivered and then shook as my fingers glided lightly over her skin, tracing the surface of the warm sensitive globe. When I flicked the nipple with a fingertip she gasped loudly and broke the kiss.\n\n\"Oh please don't. Not yet. I'm very close to coming and I'm not ready yet.\" She said in a rushed whisper.\n\nI moved my hand to her side and rolled over even more to my side, propping my head up with my hand. I smiled down at her and then let my eyes drop even father to look at her breasts. \"Beautiful, just beautiful.\" I whispered.\n\nShe shivered and then sighed. \"I've dreamed of you saying just that.\"\n\n\"They are even more beautiful than in my dreams.\"\n\nHer hand pulled me down to start a new even sweeter kiss. I left her breast alone and concentrated on kissing her. I used my tongue to trace her lips and my teeth to nibble on them between deep searing French kisses. We were both lost in another world.\n\nHer hand fumbling with the buttons of my shirt drew me back to the present and I helped her get my shirt off. Her hand gliding over my skin made it tingle and burn with a fire I had never felt. Danielle wasn't the only virgin on this bed. \n\nI had had some heavy petting sessions and a few oral encounters but none had effected me like this. Her fingers brushing my nipples caused me to shiver much as she had. My body wanted to rush but luckily my mind held fast because it knew better. It wanted to savor the moments and make sure we both enjoyed everything there was to enjoy.\n\nI broke our kiss and slowly sat up. My head was swimming a little as I smiled down at Danielle. I took a deep shuddery breath and blew it out slowly. She smiled up at me and nodded. Without a word, I knew she knew how I felt. In that moment, my feelings for her changed from lust to love.\n\n\"Let's look at your pictures. We need to take things slow and easy.\" I told her as I got off the bed.\n\nShe watched me move shakily over to the chair and sit down. Still smiling she lifted her hips, slipped the sweat pants down over her hips, and then took them off. I watched as she did and licked my lips as her sweet pussy came into view and I got flashes of it as she raised and moved her legs.\n\nNaked, she got off the bed and came over to sit straddling my right leg with her back to me. The heat of her sex on my leg was burning hot. I reached around her waist with my right hand and clicked the mouse on the first thumbnail. It was she on the Papa-san chair just like she had been when I first came into her room.\n\nI felt her shiver on my leg and I moved my hand to her waist and rested it on her flat tummy. \"I love this picture. It's so hot and horny. I had never thought of myself that way until I took these pictures.\" She whispered.\n\n\"You've always been that way to me. That cheerleader outfit used to blow my mind and the one time I saw you in a bikini, I nearly lost it right then and there.\"\n\nShe turned and smiled at me. \"I remember that day. You wore baggy shorts and a big oversized tee shirt. My mind was working overtime trying to figure out what you really looked like under all those clothes.\"\n\n\"My normal tall, lanky, skinny self. I hate my body and always have.\"\n\nShe turned more and ran her hand over my chest. \"There's nothing wrong with what I see and feel. You're built more like a swimmer than a football player but there's nothing wrong with that. In fact I like what I see very much.\"\n\nAs we kissed, her hand dropped to my lap and ran lightly over the bulge in my pants. I moaned softly into her mouth when she gave it a little squeeze. My hand on her hip moved up and down from her waist to her thigh. When it moved down to caress her ass cheeks, she moaned and shivered, squeezing me again.\n\nShe broke the kiss and stood up. \"Take your pants off,\" She said breathily. \"I want to see all of you.\"\n\nI stood up and rolled the chair back out of the way. I took my time taking off my pants. I didn't have underwear on and when the zipper went down my dick jumped up straight and strong against my lower belly. Danielle's eyes got wide and now she was the one licking her lips as I dropped the pants next to hers.\n\n\"It's.... It's bigger than I thought, a lot bigger in fact,\" She whispered with awe and a little fear in her voice.\n\n\"It's not that big, just a little bigger than normal, from what I've been able to figure out,\" I replied blushing.\n\n\"From what I imagined and from what other girls have said, it's big, believe me.\" \n\nShe picked up the hairbrush off the desk, held it close beside my dick, and giggled. \"Yeah it's a hell of a lot bigger than what I imagined.\" My dick was nearly as big as the whole brush and wider than the handle.\n\nShe tossed the brush on her bed and her hand was shaking as she reached for me. That first touch was a shock. And when she moved her fingers up and down along my shaft, I groaned softly. She was only the third girl to ever touch me. \n\nThe first had been a Goth chick I had known forever. We were at a party and we both had been pretty stoned. She had tried to suck on it but couldn't get much of it in her mouth. A little later I was on my back on the bed with her on my face, couching me along when someone had literally swallowed me whole.\n\nI never was sure who it was but she got my oral cherry rather quickly, to quickly as far as I was concerned. The girl on my face had made quite a mess as my tongue and lips had gone wild on her. That was about the extent of my sexual accomplishments.\n\nA hot wet tongue licking the head of my dick snapped me back to the present with a jerk and a start. Danielle was on her knees with both hands on my shaft and the head pulled down right in front of her face. She looked up at my face and smiled as she licked the head again. I groaned loudly as my hips flexed on their own.\n\n\"I've always dreamed of doing this to you,\" She whispered and then shivered as she gave me another lick.\n\n\"Oh my God!\" I said loudly as she sucked the head into her mouth and rolled her tongue around it. My knees were shaking and felt weak.\n\nShe slipped me out of her mouth and grinned up at me. \"Maybe you should like sit down. I've never done this before, well not on a real one anyway. I practiced on my toy and a banana just to see if I could do it.\"\n\nI reached back and pulled the chair close enough to sit down. Danielle moved closer between my knees and sucked the head back in her mouth. My hips rolled up on they're own and I groaned long, deep, and loud as her tongue fluttered around wildly. I was quickly approaching the point of no return and used my hands to lift her head. \n\nI was biting my lower lip as she sat back on her heels and looked up at me with a questioning look on her face. I took several deep breaths and said, \"I'm.... I was.... Uh....\" I stammered for a moment. Another deep breath and I tried again. \"I was close to coming and I'm not ready either.\" I finally got out. \n\nShe grinned and asked, \"I was doing it right then?\" I nodded and blew out a long breath. She laughed and kissed the head of my dick before she stood up. \n\nShe moved over to sit on the side of the bed. \"I.... Uh.... I have the feeling you are as much a virgin as I am.\" She whispered.\n\n\"Pretty close,\" I told her, and then I explained about the blowjob and oral sex that one time, without give too much detail.\n\nShe nodded and then moved over to the papa-san chair. She got back in the chair on her knees and assumed the position she had been in the first time I entered the room. She took a deep breath and said, \"Come show me what you learned.\"\n\n\"If I do, you're going to come your brains out,\" I cautioned her.\n\nShe nodded quickly and said, \"I know but I want to and then I'm going to do the same thing to you.\"\n\nI wanted to run over there and to dive right in. I had enjoyed my first taste of a pussy and could hardly wait to get my second. But I held back and took my time. First off, I wanted to calm down and secondly I wanted to tease her a little. My mind was working on a plan of what to do as I walked over and knelt behind her.\n\nI ran my hands up her thighs and caressed her ass lightly. She had sucked in a sharp breath as my hands touched her and she shivered as my hands found her ass. I massaged the firm tight cheeks, pushing them father apart, and then back together. The ring of her asshole fascinated me more so than her pussy.\n\nWhen I had ate that other girl, my tongue had brushed her anus several times and each time it did, she would gasp loudly and grind her sex against my face that much harder. I hadn't tried to stick my tongue in it but the idea captivated me. I found it sexy and titillating for some strange reason.\n\n\"Have you ever touched your asshole or put your finger in it?\" I asked Danielle softly.\n\nShe took a little faltering breath and asked back, \"Why do you ask that?\"\n\n\"I don't know, I just have this urge to lick it and stick my tongue in it. I've never done it before but for some reason it intrigues me.\"\n\n\"Then do it,\" She said as a shiver ran throughout her body. \"I played with my toy there once and it blew my mind. It felt so different from my pussy, a different kind of pleasure.\"\n\nI kissed and licked the firm warm cheeks in front of me, alternating from one to the other. Danielle sighed deeply and moved her ass from side to side as I did. My hands roamed over the outside edge of her ass and up and down her hips as I worked my courage up and decided how to proceed.\n\nI took a long slow lick from her wet opening to her tailbone. She jerked and gasped loudly at the first touch of my tongue and then again as it bumped over her anus. I licked her again and again with the same result. Her sex was opening more and more as I did and she got even wetter.\n\nI stabbed my tongue into her hot sweet tight opening and she gave a loud squeal and pushed back hard, driving my tongue even deeper. I could hear her trying to get her breath as I ran my tongue in and out in sharp quick stabbing motions. Then I had to swallow as she literally gushed into my mouth with a long loud yell. \n\nHer hips were now jerking and bucking back against my face hard enough to hurt my nose. My tongue was back to exploring the depths of her sex, all thought of her ass forgotten in the heat of the moment. Her ass took up a hunching motion to match the motion of my tongue in and out of her. Her yell was now an undulating noise that matched our movements perfectly.\n\nIt wasn't long before she yelled again and I had to swallow again. The first girl hadn't done this but at the moment I could have cared less. What Danielle was doing and feeling was all that mattered to me. Two orgasms in a span of a few minutes was beyond my scope but made me feel great in a way I had never felt before.\n\nAs her hips slowed and then stopped moving, I lifted my head and flicked the tip of my tongue over the tight ring of her asshole. Danielle gasped loudly and shivered. I did it again and she made a soft whimpering sound as her back dropped and her ass rolled up even more. \n\nFeeling braver, I stiffened my tongue and poke it against the tight firm ring. It entered slowly, a little at a time and Danielle whimpered and moaned as it did. I started to tongue fuck it like I had her pussy but only part of my tongue would go in.\n\nDanielle was making strange whimpering sighing noises as I did as if she was enjoying it immensely. I could feel the muscles relaxing and my tongue going deeper and deeper. Bt the time I was fucking her completely with all of my tongue she was wiggling her ass from side to side and whining deep in her chest.\n\nSuddenly she yelled, \"I'm going to come again!\" and boy did she.\n\nShe thrashed her head around and back and forth, as she pushed back against my face driving my tongue to it's deepest yet. I could feel a warm wetness on my chin as it pressed against her opening. She was yelling and jerking even harder than before.\n\n*****\n\nThe buzz of a phone brought me up from a drowsy state as Danielle moved away from me and answered it. \"Hello daddy.\"\n\nThere was a pause and then she said, \"Yes, I fell asleep. Bill found all my files and put them on disk for me so I'm all set for work in the morning.\"\n\nA minute or so later. \"Yes dad, I'll remember to take out the trash in the morning and I love you to.\"\n\nShe hung up the phone and then sighed as she moved back to snuggle up spoon fashion to me. I wrapped my arms back around her and kissed her neck. She shivered and chuckled. \"Fell asleep my ass, somebody knocked my socks off and put me out like a light.\"\n\n\"Hmmmm, I wonder who that could have been?\" I asked teasing her.\n\n\"Probably the same guy that's got this hot sausage stuck between the cheeks of my ass,\" She replied as she wiggled her hips back tighter to me. \"How or rather when did we move to the bed? I missed something somewhere.\"\n\n\"I carried you over here when you went limp and tried to ooze out of that chair. And just for the record, you weren't wearing any socks.\"\n\nDanielle laughed and turned over to kiss me. She ended up nearly on top of me, her hot wet sex pressed tightly against my thigh and my hard dick was under her hip. My hands roamed her back and butt, as the kiss got hotter and hotter. She finally broke the kiss, blew out a long breath, and then grinned.\n\n\"What are you grinning at?\"\n\n\"It's my turn.\"\n\n\"Your turn for what?\" I asked, wanting to make her say it.\n\n\"My turn to blow your socks off.\" She paused to laugh and then added, \"Well, suck you socks off is more like it but it sure sounds strange.\"\n\nShe gave me a quick peck on the lips and then wiggled down my body to end up with my dick standing up in her hands. She licked the shaft and head slowly like an ice cream cone and then sucked the head into her mouth. Her tongue swirled and danced over the sensitive skin as a deep moan came from me.\n\nShe lifted her head and then tried to swallow me. She only made it half way but that was enough to damned near make me come. She lifted her head as she sucked. As the head came out of her mouth I moaned even louder. My hand stopped her as her head moved down.\n\n\"Wait, I got to tell you something. If you do that much more you're going to have a mess or a mouth full of something you've never had before.\"\n\nDanielle grinned at me and nodded. \"I know that silly, I was paying attention when my girlfriends used to talk about blowjobs. I'm just not sure if I'll have the nerve to swallow or not.\"\n\nMy mouth dropped open and before I could ay anything else, she was trying to swallow me again. With about two thirds of me in her mouth I felt the head of my dick touch the back of her throat and nearly lost it right then and there. She lifted her head slowly and then started to bob it keeping suction on me. \n\nI lost it as her tongue snaked and swirled around the underside of my shaft. I came with a yell, head rush, and a very large gush. She never missed a beat or lost a drop. I was in another universe by then and still going strong. I had been distracted that first time but now I was totally into it and the person doing it.\n\n*****\n\nMy brain slowly un-fogged and started to work a little. I was breathing hard enough to have run three miles and shivers ran up and down my back from the shear pleasure that I felt from the head of my dick. Finally I looked down at Danielle and I had to smile. She had her head resting on my thigh and she still had my dick in her mouth sucking on it gently.\n\nShe sighed around the meat in her mouth and her eyes fluttered open. When she saw me looking at her she smiled and took my dick out of her mouth. \"I came when you did,\" She said softly. \"And I swallowed. I never even thought about it.\"\n\nI nodded with a silly grin on my face and held my arms out to her. She crawled up my body and lay down on top of me. I wrapped my arms around her and we both sighed deeply as we cuddled and snuggled together.\n\n*****\n\nI woke up some time later with Danielle straddling my hips and slowly rubbing her hot slippery wet sex up and down along my shaft. She would make a small whimpering sound and her hips would shake and shiver from time to time. I just lay there and watched. She was rubbing herself from my balls to the very end of the head.\n\nShe would pause as the heat of her sex threatened to envelope the head of my dick and then she would slide slowly back the other way. I soon figured out that the noise and shiver was caused by her clit rubbing on the flange of the head and along the shaft. \n\nHer clit was very close to her opening I realized as I studied her small almost round sex. The short thin inner lips would bunch up in one direction and then in the other as she moved. Her hands were on my chest for support and balance as she was on her feet with her knees wide. She rocked forward and back with ease.\n\n\"Are you having fun?\" I asked with a smile.\n\nHer head came up. She had been watching the point of contact between us. She grinned at my smile and nodded. \"Oh yes!\" She whispered breathlessly. \"I've nearly came three times in the last few minutes. If I were to rub my clit a little harder I'd probably die in the resultant orgasm.\"\n\n\"Then go ahead and let it happen and then do it again and again as many times as you want,\" I whispered.\n\n\"Does it feel good to you?\"\n\n\"Oh yes, it feels wonderful and watching you do it is something else all together. You look so sexy and so beautiful sitting up there. The look on your face earlier before I said anything was breathtaking.\"\n\nShe moaned loudly as I said that last and her hips moved a little faster and right over the flanged head of my dick. I groaned softly right along with her. Her hot wetness felt so very good and when she came suddenly the hot flood over the head of my dick was excruciatingly pleasurable. I almost came myself. \n\nHer hips worked feverishly as her orgasm rolled on and then she sat down hard as her legs gave out. Her hot wet opening was pressed tightly to the head of my dick. I could feel it stretching, inviting me in. I had the urge to press forward but didn't. It wasn't time yet I sensed and we had no protection in place.\n\nDanielle slowly leaned forward and settled on my chest. The head of my dick was pressed even tighter to her and it slowly slipped inside. I heard both of us groan loudly. I wanted to grab her hips and to pull her up off me but my hands and arms didn't want to work right. My mind said one thing but my body another.\n\nI felt my hips rise and more of my dick entered her hot slippery vagina. I had never felt anything to match the shear pleasure that was shooting through my body as she slowly settled around me. She was shaking and moaning as loudly as I was as she started to sit back up. That just drove me deeper yet. \n\nShe yelled and was coming again, her inner muscles gripping and grabbing around me as she did. There was a hot wet feeling around the head of my dick and if I hadn't have come just an hour or so earlier, I would have been exploding myself. As it was, I had to fight from doing it. \n\nHer withering, shaking, and jerking was settling her farther down with every passing second. I held my breath, closed my eyes, and let the world dissolve in the wondrous feels her body was generating. I was three quarters of the way in when she yelled again and rocked her hips fast and furiously.\n\nShe slid down my dick faster and was soon sitting on my hips. I opened my eyes and looked up at her. Her eyes were open very wide, as well as her mouth, and she was staring off into space with a funny look on her face. She suddenly glanced down at my face and then down to where we were joined.",
        "Her eyes darted back to my face and she moaned softly. \"How did that happen?\"\n\n\"Very carefully and very slowly.\" I whispered more to myself than an answer to her.\n\nShe nodded slowly and then shivered. \"We shouldn't be doing this without protection.\" \n\n\"I tried to tell myself that but I wasn't listening to well, I was being distracted big time.\"\n\n\"Danielle nodded again and whispered, \"Tell me about it. I was coming my brains out and then I was coming my brains out again.\"\n\n\"Add about two more times to that and you have where we are now.\" \n\nShe looked down at me and shook her head. I nodded. She took a deep shivering breath and then groaned softly as her hips moved. \"I can't believe we did this. I can't believe that it fit.\" She shivered again. \"That hair brush has nothing on the feeling of you in me. I feel so full and it feels so good.\"\n\n\"I.... I.... I.... Oh God, don't move.\" I said quickly.\n\nShe shivered and then shook as another orgasm rolled over her. I was fighting to keep my cool and to keep from coming. I was so very close. Her hips rose up just barely and then dropped. That was like a bomb going off in my head. I reached up, pulled her down to me, and kissed her wildly.\n\nThe next thing I knew she was on her back and I was still between her legs. She was withering through yet another orgasm as I lifted my hips and dropped them. She went wild as her orgasm took off like a rocket. I started fucking her with long, full, firm strokes. \n\nMy hips making a soft slapping sound as they met her rising ones as she fucked me back. All thoughts of coming were gone from my mind as I savored the feel of my dick moving inside her tight wetness. She on the other hand was yelling and clawing at my back as her hips worked right along with mine. She was having one orgasm after the other.\n\nSuddenly I felt my own climax rising. I made three more strokes and then pulled out of her. She yelled and fought to get me back inside. I lowered my hips and placed my weight on her. With a loud groan, I felt the hot wetness of my orgasm shoot out between our two bodies.\n\nDanielle yelled louder than ever and wrapped her arms and legs around me tightly. Her hips were bucking and bumping under mine for several more minutes until she finally settled down with a deep long drawn out sigh.\n\n*****\n\nIt was an hour later when we finally found the energy to get off the bed and go to the bathroom for a shower. Nothing had been said this whole time. We had just clung to each other and rolled over on our sides to cuddle. Our breathing had calmed slowly and from time to time, one or the other of us would sigh contently.\n\nShe had shifted her hips just before they got up and giggled. \"My belly button feels like a swamp.\"\n\n\"Mine to,\" I had replied and that got us up and moving.\n\nI got the water adjusted while she got two towels and then joined me. We both rinsed off and then I pulled her to me for a kiss. The kiss was soft and sweet and in some ways shy on both sides. It was as if we were starting over on a new level. \n\nWhen the kiss ended, I whispered, \"I love you.\"\n\nShe dropped her eyes and softly replied, \"I love you.\"\n\nI lifted her head with my hand and said, \"I mean that, I'm not just saying it because of what we just did. I've loved you for a long time but never had the nerve--.\"\n\nHer fingers on my lips hushed me and then she was kissing me passionately. When she broke the kiss she whispered, \"I know, I feel the same way but we need to take it slow. I have school to consider, you need to finish your degree, and then we'll talk of the future. We'll be together and there will be many more nights like tonight, I promise you that.\"\n\n\"Who says tonight is over yet,\" I said pulling her back into a smoking kiss and caressed her silky wet back and ass. She mumbled into my mouth and then kissed me just as passionately.\n\nMy dick raising its head between us broke the kiss as she stepped back and looked down at it. \"Do you have any rubbers with you?\" She asked with an evil grin. When I nodded, she yelled, \"Yes!\" and came back into my arms."
    ],
    "authorname": "TxRad",
    "tags": [
        "18-year-old",
        "female virgin",
        "computer geek",
        "ex cheerleader",
        "flashing",
        "her first time",
        "younger woman",
        "older man"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/danielle-davis"
}