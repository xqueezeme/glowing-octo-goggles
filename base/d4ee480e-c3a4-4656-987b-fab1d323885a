{
    "title": "Friday Night Alchemy",
    "pages": [
        "(Author's note - This is a 90% non-erotic story. The only erotic scene has been submitted separately as the short story \"alone at last\".)\n\nIt was April. It was raining. It was hardly a surprise. \n\nThe weekend had started well: boy had met girl and the Friday night alchemy that turns alcohol into meaningless sex had just begun when the spell, or rather a Budweiser bottle, was broken by a not-quite-ex-boyfriend who mistook me for the villain in the tragedy that passed for his love life. I was in no fit state to explain that I only had a walk on part in the last act so resorted to a more direct, if somewhat clich\u00e9d, response. In short, I head-butted him.\n\nFriday night went down hill rapidly from there. I won the fight with the ex but lost the subsequent melee with the bouncers, then spent four uncomfortable hours sobering up in the clinically unsympathetic atmosphere of the casualty unit in Endell Street, waiting for someone to stitch up my eyebrow. \n\nIt was little wonder it was raining. Any half-decent scriptwriter would have included that detail in such a scene. It was another clich\u00e9. I had been beaten up, dumped, ignored for half the night by the cast of Casualty & generally abused by the whole fucking planet, so why shouldn't the weather stick the metaphorical boot in too?\n\nI walked the five miles home. Two reasons: I had no chance of getting a taxi to pick me up in the mess I was in, but also, I had a perverse desire to prolong my self-pity. So I walked home &, about 4 a.m., crashed out, intent on sleeping through the rest of the weekend. That way it couldn't get any worse, right? Wrong. It can always get worse.\n\nI was rudely awakened early on Saturday when Steve came round to use my washing machine. He has my spare keys so he let himself in, but if you knew Steve you'd know that if you want to sleep while he's in the building, you've got no hope unless he's comatose first.\n\n\"Morning Mate! Coffee?\" he shouted as he walked past the bedroom door, casually slapping it first, to be assured of my full attention.\n\nAny response I might ordinarily have made would have been truncated to one syllable as Steve found the power button on the hi-fi. No one should have to listen to U2 first thing in the morning. It says so in the Geneva Convention - doesn't it? Well, if it doesn't, I can make a bloody good case for getting it added. Not that it'd make a blind bit of difference - Steve hasn't heard of the Geneva Convention, let alone read it.\n\nI was lying on my bed of pain, mentally calling down maledictions upon him, his parents & his parents' parents when Ste walked into the bedroom with a mug of coffee.\n\n\"Where's this bird then? ...Fuckin' hell! Is there still an eyeball in that socket?\"\n\n\"You should have seen the other guy.\"\n\n\"I did. He didn't do that to you did he? I'm impressed.\"\n\n\"Thanks! And no, he didn't do this. I was worked over by a couple of steroid abusing penguins... And what d'you mean you've seen him? You were working last night.\"\n\n\"Yeah, well the kid you laid out is Charlie's brother.\"\n\n\"Charlie as in Charlie's Cars? Your boss?\" This was not good.\n\n\"Nope. Charlie who's just done three for glassing a bloke who seven balled him at pool. Charlie who came down the dispatch office at two in the morning with what was left of his kid brother. That Charlie.\"\n\n\"Shit! Tell me you're winding me up, please.\" This was worse.\n\n\"Relax. He's on parole. He's not goin' to want to go back in for doing you over. Besides, he figures Martin - that's his kid brother's name by the way, in case you're interested - he figures Martin's big enough to fight his own battles and that this is strictly between you two.\"\n\n\"Great! So all I've got to worry about now is Psycho junior coming after me with a grudge & a role model that glasses people who beat him at pool. It's obviously escaped your notice but he caught me playing tongue hockey with his girlfriend. That's a little more serious than a game of pool, don't you think?\"\n\n\"Hey! Don't kill the messenger! I'm just telling you what Charlie said.\"\n\n\"You're right. I'm sorry.\"\n\n\"No problem. Coffee's cold though. Hand it here and I'll zap it. I could do with a top-up myself.\"\n\n\"'s alright, but turn that bloody music off on your way past.\"\n\n\"Suit yourself. Tell you what, get dressed while I have another coffee, then we'll have breakfast at Sal's caf\u00e9. My treat.\"\n\n\"Sold.\"\n\nI really wasn't feeling up to it, but Steve was offering to pay, an event as unlikely as a confirmed Elvis sighting. Steve's wallet saw daylight less often than Count Dracula. I would have crawled from my death-bed to take up an offer like that, so I got up, painfully. \n\nIn the Lounge, the answerphone was blinking. I hit the playback button.\n\n\".....Hi... It's Shana....from the bar last night?.....I was just calling to make sure you were OK.....We, well we kind of got separated and ..... anyway.....call me, OK? My number's 245 5188.....got to go now....Bye.\"\n\n\"Oh yeah! I forgot to tell you. That girl you were fighting over...\"\n\n\"I wasn't fighting over her! I was just defending myself.\" \n\n\"Whatever. She came looking for you, so I gave her your number.\"\n\n\"You did what?\"\n\n\"Now don't go off the deep end again. She was really upset, mainly because she didn't know what had happened to you. Anyway, she's cute, and how many girls have shown that much interest in you recently? The sympathy factor should be good for a shag at least.\"\n\n\"Don't you think the fact that Charlie's brother thinks he has a claim on her might put the dampers on things just a little bit?\"\n\n\"Not really. He's only home for Easter. Next week he's back at college in York. She dumped him before Xmas but it hasn't sunk in yet. Trust me, he'll be laid up for most of the week, you saw to that, then he'll be gone. Forget about it.\"\n\n\"How come you know so much about all this? Who died and left you a crystal ball? And how come she knew to ask you about me?\" I was very confused.\n\n\"Gianni was working the bar last night. Yes? She noticed you seemed to know each other so she asked him where you'd have gone \u2013 Ah, light dawns! Gianni didn't know the bouncers had hospitalised you so he told her what he did know. Namely that your best friend, Steve \u2013 that's me \u2013 works for Charlie's Cars. With me so far? Good, now pay attention, this is the complicated bit. When she came to the dispatch office looking for someone called Steve, I was there! She told me the whole story. So you see Grasshopper, its not what the Sage knows but who knows that he knows that counts.\"\n\n\"Steve, you're priceless. I had been contemplating killing you, but for that, I'll let you live a while longer.\"\n\n\"Gee, thanks! Can we get breakfast now? I'm starving.\"\n\nA couple of thousand calories of bacon, eggs and assorted fried things made the world seem a fit place to live in again. Steve helped too. It's hard to stay down around someone as exuberantly cheerful as him. I tried to stay miserable but, by the time I got down to chasing the last two baked beans around my plate, Steve's non-stop banter had worn down my defences and, painful though it was, I smirked at his latest tasteless joke.\n\n\"That's more like it. Boy! You're a tough audience this morning.\"\n\n\"Yeah, well I've got a fair bit on my mind.\"\n\n\"When you goin' to call her then?\" Steve threw a hand grenade into the conversation.\n\n\"What? Oh, you mean Shana. I'm not. I've had enough grief over her already.\"\n\n\"Don't be daft. You've got to call her, if only to tell her you're OK. She really was worried about you. For fuck's sake! She was nearly in tears when she came down the cab office.\"\n\n\"You call her then.\"\n\n\"No way!\"\n\n\"Why not? You got me into this by giving her my number, so you can sort it out.\"\n\n\"Look, if Martin hadn't interrupted the two of you, this girl Shana would have been back at your place, keeping your dick warm for you, before midnight, right? So when was the last time you got laid? Rosy? That ended over a year ago.\"\n\n\"There was Hage, last summer.\"\n\n\"That Danish bit? Doesn't count. All you got from her was a quick blow job in Richmond Park. No, its well over a year. Now this girl comes along who's obviously gagging for it & you're not interested? Call her. 'Cos if you don't I will & I'll send her round to your place to find you.\"\n\n\"Bastard.\"\n\n\"Yeah. So?\"\n\n\"OK, I'll call her. Satisfied?\"\n\n\"Depends. Has she got a sister?\"\n\n\"Fuck off!\",\n\n\"I only asked.\"\n\n\"Well don't. Trish would cut off your balls just for thinking about it. Go and pay Sal. Oh and Steve? Break it to him gently. Sal's getting on a bit, the sight of your wallet after all these years may just be too much for him.\"\n\n\"Feeling better are we? Sarky bugger.\"\n\nSteve's a diamond. Rough around the edges maybe, but a diamond all the same. He's fun when drunk, useful when sober and good company all the time. What more could you ask of a mate? Oh, and my mother thinks he's disgusting so he must be a good bloke. We walked back to the flat together, stopping briefly at the bookie's because a regular fare had given one of the drivers a tip on a horse at Epsom and Steve reckoned it was worth a tenner each way. When we got back, Steve's washing was still rinsing and there was another message on the answerphone.\n\n\"Put the kettle on, Steve.\"\n\n\"Spoilsport.\" But he went into the kitchen all the same. I pressed playback.\n\n\".....Hi! Its Shana again.....Just checking to see if you got my message......I'd better give you my number again. Its 245 5188.....or, if I'm not in, I'll be in O'Neills tonight. ....about 9ish...See you later....\"\n\n\"You gonna call her then?\" There's no privacy around Steve. \n\n\"Later.\"\n\n\"Why not now? 'Carpe Dame' and all that.\"\n\n\"Its 'Carpe Diem'. It means 'Seize the day'. And like I said, later, when you're not around to earwig.\"\n\n\"I don't earwig. I just listen a lot. And its 'Carpe Dame' - 'Grab the girl'.\" Just occasionally Steve's humour surprises me. \n\n\"Is that kettle boiled, or were you too busy \u2018listening a lot'?\"\n\n\"You're out of milk.\"\n\n\"I don't take milk. There's some UHT cream in the cupboard above the sink. Top shelf. In the white plastic basket.\"\n\nI was talking to an empty doorway but I could hear Steve rummaging through the cupboard.\n\n\"Found it. Thanks.\"\n\nSteve brought through the coffees and flopped down on the settee. He looked tired. Of course, he'd been working all night and babysitting me all morning. It was only caffeine that was keeping him awake. Like I said, he's a diamond.\n\n\"You're out of Nescafe too. This was the last of it.\"\n\n\"I'll get some later. I need a few things from Tesco's anyway.\"\n\n\"Later. As in after you've talked to Shana, right?\"\n\n\"Later. As in after I've talked to Shana, yes. You know Steve, if you nagged any more, you'd have to start wearing a dress.\"\n\n\"Only in the privacy of my own home, Mate. It gets Trisha hot.\"\n\n\"Actually, that's rather more information than I needed just now, but thank you for sharing. Freak.\"\n\nHe was joking, of course. At least, I hoped he was joking. Steve could be pretty weird at times. \n\nHe finished his coffee and went to check on his laundry. The washing machine had gone silent a few minutes back so it had either finished its cycle or, the more likely scenario, had flooded the kitchen again.\n\n\"Got a mop?\", a disembodied voice called from the kitchen.\n\n\"In the cupboard by the front door. Hang on a sec and I'll fetch it.\" When I got to the kitchen, Steve was standing there with his basket of washing, grinning.\n\n\"Just kidding! Got you out of that armchair though.\"\n\n\"Bastard!\"\n\n\"While you're on your feet, you might as well make that call. I'll see you later.\" He headed for the door. \"Oh, and there's a post-it on the fridge about the coffee. In case you forget. See ya!\" and he was gone.\n\n\"Bye then.\", I said to the closed door and put the mop away. It was obvious Steve had decided I should see Shana again. If I bottled out, I'd never hear the last of it so I found a pen and something to write on then replayed Shana's message and noted down her phone number. Well, no time like the present. I rang her.\n\n\"Hi! You've reached the home of Jodie and Shana. We're both out at the moment but leave a message and we'll call you back as soon as poss. Ciao!......Beep\"\n\nAn answerphone. That came as something of a relief.\n\n\"Hi Shana, its Alun. Listen, thanks for calling....\"\n\n\"Hiya! Sorry about the answerphone. Martin's been ringing here all morning and Jodie - she's my flatmate - Jodie's been vetting my calls but she's gone out shopping so I turned on the machine. Anyway, you don't want to hear about all that. How are you? I was worried when you just disappeared like that. I hope you don't mind: I got your phone number off your friend, Steve. You know? From the taxi place? He's very nice, isn't he? Anyway, I heard you were hurt and, well, how are you?\" She paused for breath. I took the opportunity to get a word in edgewise.\n\n\"I'm OK. I'm going to have a lovely scar where my right eyebrow used to be but apart from that, its just bruises. They X-rayed my ribs but nothing's broken.\"\n\n\"X-rayed? You went to the hospital then?\"\n\n\"Had to. A bouncer unzipped my eyebrow with a sovereign ring so I had to go and get stitched up.\"\n\n\"Oh! I'm so sorry. How many stitches?\"\n\n\"Three. And don't apologise. You weren't the one who hit me.\"\n\n\"But I should have warned you about my ex. I feel guilty now. Does it hurt a lot?\"\n\n\"I could handle \u2013 I did handle your ex. It's the bouncers who autographed my ribs with their knuckles. I'll live though. A couple of nights in and I'll be as good as new, the darned eyebrow not withstanding.\"\n\n\"Oh? So you're not going out tonight?\" She was fishing, wasn't she?\n\n\"No, I'm afraid not. I'd only spend the whole night retelling this story to all and sundry, and besides, I'm feeling rather tender today. I'm going to stay in tonight, cook myself some macaroni cheese and relax.\"\n\n\"I've got a better idea. I'll come over and cook you dinner if you like? To make up for last night. How does Tagliatelli Quattro Formaggi sound? It's a family speciality.\"\n\n\"Make it penne and you're on. Tagliatelli always ends up all over my shirt.\"\n\n\"Penne then. What time?\"\n\n\"Seven o'clock? Its Flat 3a, Gainsborough Court, Rotherhithe New Road.\"\n\n\"Hang on. I'll get a pen......OK...Flat 3a?\"\n\n\"Gainsborough Court\"\n\n\"Right\"\n\n\"Rotherhithe New Road\"\n\n\"Got it. Well, I'll see you at seven then. Bye bye.\"\n\n\"Bye Shana. And thanks.\"\n\nThere was a click as she hung up then the phone line purred in my ear. If I were a cat I'd be purring too. Steve was right about one thing, Shana was definitely interested. I'd better go shopping. If she was coming round to cook dinner, the least I could do is get us something to drink, and coffee. I wandered into the kitchen to see what else needed re-stocking. Steve's post-it was still on the fridge door:\n\n\"Out of coffee\n\nOut of milk \n\nAlmost out of Persil\"\n\nI'm not sexist. I agree with gender equality, have a lot of female colleagues and get on well with all of them. Unlike the Steves of this world, I don't even mind having a female boss. That said, I do believe there are some fundamental differences in the way our brains work which mean the two genders will never really understand each other.\n\nFor example, women like to shop. Men like acquiring new things and we will throw ourselves wholeheartedly into the acquisition of cars, hi-fi systems or any other big-boy's toys, but shopping per se does not excite us. We will shop for day-to-day necessities, but we generally won't enjoy it. Women, on the other hand seem to enjoy the experience of shopping as much as, if not more than, actually acquiring new possessions. \n\nPerhaps its some sort of genetic predisposition towards mundane tasks because Nature was equipping them for the several millennia of indentured servitude that has been the history of womankind until recently, and its just going to take a few generations for their brains to adapt. Or maybe its cultural indoctrination during the formative years: The inevitable impact of an older generation's influence over the younger generation, flying in the face of the new role women have in our society. Whatever. I know this \u2013 I hate shopping and I'll never ever, not in a hundred years, understand how anyone can possibly enjoy time spent in Tesco's.\n\nSo what am I doing with a Tesco's bag in one hand and a Thresher's bag in the other?\n\nWell you already know about the caffeine shortage. Steve loses all his superpowers without at least one cup of double strength Nescafe an hour. Then there's the washing powder. When a pretty girl commandeers your kitchen to cook you dinner, you put clean sheets on the bed, just in case. Such is the optimistic nature of Homo Erectus (Homo Sapiens males under the influence of libido, beer or both). And the telltale clinking? Well you can't have Italian food without vino, can you? Oh! I got some scented candles too, and Haagen Dazs for desert. There are few things in this world as romantic as sharing a tub of Haagen Dazs. \n\nIt hurt to move, so instead of doing the sensible thing involving a long hot bath and stretching out on the settee, I spent a very painful afternoon getting the flat spick and span. Go figure. Its all part of the ritual. Women know that men left to there own devices have, at best, a minimalist approach to housework. They also know that the merest hint of a shag will cause a frenzy of dusting, polishing and hoovering. Trish, Steve's girlfriend, once confided to me that the cleanness of the flat the first time you see it is directly proportional to a bloke's level of desperation. With this in mind, my flat ended up not quite clean enough to manufacture silicon chips in, and just untidy enough to look lived in. I wasn't desperate, but Steve's comments this morning had got me thinking. It had been a long time.\n\nAfter I'd sorted the flat out, I figured I had an hour spare. I spent it all soaking in a hot bath. Radox never felt so good. Five minutes to towel off, thirty seconds to throw on a tee-shirt and a clean pair of jeans, and I was ready. Ordinarily I would make more of an effort, but I was never going to look smart with all those bruises and a three inch square surgical dressing plastered over one eye. In a week or so, when the stitches were out and I could get away with an eye patch, maybe. But not tonight. Between you and I, gentle reader, I was secretly looking forward to wearing an eye patch. I've always thought they were rather dashing in much the same way as duelling scars. \n\nMy reverie was interrupted by the door bell and the butterflies in my stomach took flight like a tree full of starlings after a gunshot. Hey! Why was I nervous? What was the worst case scenario? We didn't get along and didn't see each other again. A few hours earlier, I was planning on that. I relaxed and went to answer the door.\n\nI took a quick peek through the peep hole. Wow! Shana had definitely made more of an effort than I had. I opened the door.\n\n\"Hiya! Oh my god, your poor eye! Is it very sore?\"\n\n\"Hello. No, it looks worse than it is. Here, let me give you a hand with that.\" She was holding a very full carrier bag. I reached for it, momentarily forgetting the bruises on my ribs. They forcefully reminded me of their presence, making me wince. She noticed.\n\n\"Its all right, its not heavy. Just lead the way to the kitchen.\"\n\nI stepped back, holding the door open.\n\n\"First on your left. You can't miss it.\"\n\nI followed her as far as the kitchen door and we chatted while she unpacked her groceries.\n\n\"So what have you been up to today? Relaxing, I hope.\"\n\n\"Not really. I had breakfast with Steve. He told me you went to the cab office looking for me.\"\n\n\"Steve's a sweetie.\"\n\n\"Isn't he? Incidentally I was touched that you were so concerned about me. Thank you.\"",
        "\"You're welcome.\"\n\n\"Anyway, after breakfast I rang you but you know about that. Then I went shopping, bought some wine \u2013 its in the fridge \u2013 \" On cue, she opened the fridge and found the wine.\n\n\"Corkscrew?\"\n\n\"Second drawer down. Glasses in the cupboard above.\"\n\n\"Go on. You went shopping and \u2013\"\n\n\"Came back here and cleaned up a bit then spent an hour in a hot bath which pretty much covers my day up until ten minutes ago.\"\n\n\"Well you're very naughty for not taking it easy. Wine.\" She handed me a glass, picked up her own and touched it to mine .\n\n\"Cheers.\" Shana sipped the wine. \"Hmm, good choice. Now, how about a guided tour?\"\n\n\"OK. This is the kitchen, dating from the early Hygena period, the ceramic tiles were added later, replacing the original magnolia emulsion after the great chip pan disaster of '95. If you would just like to follow me, through to the bathroom, the Grecian d\u00e9cor was added later but the white wear is all authentic 1980's Twyford. And moving on, here we have the master bedroom. The mirrored wardrobes date right back to the time the house was built and are among the finest examples you'll find anywhere. The guest room is just across the corridor but has no features of special interest.\"\n\nShana opened, and peeped through, the door of the spare room, closing it again quickly. \"I see what you mean.\"\n\nWell where do you think all the junk goes when blokes clean up their hovels?\n\n\"And finally we come to the dining room, ball room, library and reception room or, as we like to call it, the lounge. The lounge has a neo-Scandinavian theme circa 1996. In other words, it was furnished by Ikea. This room also plays host to the current owner's collection of family portraits in the rogues' gallery. Working our way along them, first a pastel sketch simply titled Mother, notice that the subject is portrayed in her graduation robes. This portrait was done when the artist was still at school, commemorating his Mum's first degree. You'll notice she was a mature student. She was a mature mother too \u2013 forty three when I was born, just short of sixty at the time of the portrait. Next, a self portrait by the artist, executed in charcoal. Title \u2018portrait of the artist with a young dog'. The puppy in the foreground is Steve's Staffordshire, Bruno, then only six months old. Next, a study of my father and paternal grandfather fishing. My father is the nearer of the two, with a handkerchief over his face, taking a nap. Finally, we come to the recent acquisitions. Three nudes, collectively entitled Community college oil painting course, class of '97. In closing let me thank you for visiting flat 3a. We hope you have enjoyed your tour. Our facilities are all at your disposal and if we can do anything to make your visit more enjoyable, please do not hesitate to mention it to your tour guide.\"\n\nShana was smiling broadly, trying not to laugh.\n\n\"I didn't know you were an artist.\"\n\n\"I'm not. I just dabble. Anyway how would it have sounded? We've just met and two drinks into the evening I casually mention my hobby is painting young ladies with no clothes on? No. That's right up there with, \u2018Would you like to come up and see my etchings?'.\"\n\n\"I see your point. It would have come across as a bit corny. Still, having seen them, I think you're very talented. Now though, you'll have to show me where you keep your pots and pans. I've got cooking to do.\"\n\nWe went back to the kitchen and I showed Shana where to find everything. She refilled our wine glasses, handed me mine and sent me packing.\n\n\"Now go and sit down. I don't like people watching me when I'm cooking. You could put a record on though, I like music while I work. Go on! Out!\" I went.\n\nThe choice of background music is a highly skilled job. People in Hollywood get paid stupidly large sums to choose the background music for each scene in films. Take \u2018Apocalypse Now' as a case in point. The soundtrack ranges from The Doors to Wagner and works brilliantly in every case. Would the helicopter assault scene have been anywhere near as good without Ride of the Valkyrie? No. It would have been just another gratuitously violent clip from a war film. So you see, choosing music is not something to be undertaken lightly, which was why I was agonising over my record collection. Nothing too upbeat or poppy. Upbeat music needs to be played loud and that would eliminate any opportunity to continue the conversation. Nothing too romantic. I was saving that for later, maybe. I settled on the Three Tenors. Shana was cooking Italian food, she was half Italian herself, so it seemed appropriate.\n\n\"Three Tenors OK?\", I called to the kitchen.\n\n\"Great! Not too loud though. Keep it quiet enough that we can still talk.\" She was obviously on the same wavelength as me. I hit play. The intro boomed out at Steve's bleeding eardrum level for about 2 seconds, until I got to the volume control. \n\n\"Loud enough?\" \n\n\"Fine.\", said Shana coming through to the lounge carrying plates and cutlery to lay the table. \"Its a good job I brought another bottle of wine with me. We've just about seen off the first one.\" She put the things down and started to lay the table.\n\n\"Here, let me do that. You've got cooking to do and I'm famished.\"\n\n\"OK. Dinner will be about twenty minutes. I'm just waiting for the oven to warm up for the garlic bread.\" She returned to the kitchen leaving me to lay the table. I'd planned for this. I got the Irish linen out of the sideboard, and the decent crockery. A couple of years ago I treated myself to two place settings worth of really nice Wedgwood china just for this sort of occasion. I've got matching silver cutlery too. When I'd finished, the table was fit for royalty. Irish linen, silver napkin rings, candle holders, and cutlery, Wedgwood plates and a Swarovski crystal bud vase with a single white rose in it. I told you I'd planned for this.\n\nI took a large plate and a serving dish through to the kitchen for Shana. She was grating parmesan.\n\n\"Ah, I was just looking for a large plate. Thanks. Be a dear and take these through to the table please.\"\n\nI made a hasty withdrawal with a ramekin dish full of parmesan and the second bottle of wine. Memo to self. I must get some Waterford crystal wine glasses. Glassware misappropriated from various pubs looked out of place amid the finery of the dining table. The parmesan was transferred into some more Wedgwood and I was ready. No I wasn't! I needed something to light the candles. A frantic search of the sideboard drawers turned up half a book of matches from some bar I could never remember being in. Panic over.\n\nThe toilet flushed. Shana called through a five minute warning. I lit the candles and toned down the main lights to a suitable ambient level. It was now just shy of 8 o'clock and there was still a touch of daylight left so I drew the curtains to shut out the greying evening. Nothing at all to do with making the atmosphere more cosy or intimate, honest. I could just imagine Steve's response to that \u2013 probably limited to a single word.\n\nShana brought through the garlic bread and stopped dead in her tracks, appraising the scene and giving me a look that said she knew what I was up to. For a moment I thought maybe I'd overdone it, then she let me off the hook.\n\n\"The candles smell nice. Shall we eat?\"\n\nI took the garlic bread off her and she nipped back to the kitchen for the pasta. I held her chair, sat down opposite and poured us each another glass of wine while Shana was 'being Mother'. She handed me a plateful of pasta in exchange for the empty plate in front of me then provided herself with a rather smaller portion.\n\n\"Help yourself to parmesan.\" Shana suggested as I tore a chunk off the end of the garlic ciabatta. I took her advice. I would have done so anyway; I love fresh parmesan. I lifted the first forkful to my mouth while Shana waited for me to hand down judgement on her culinary expertise. A convulsion: I reached for my napkin and my wine simultaneously, fanning my mouth the way I used to when playing cowboys and Indians as a kid. You know what I mean? That whooping noise we used to use as an Indian war cry?\n\n\"Its Hot!\" I exclaimed, rather louder than I'd wanted to. Shana looked concerned. \n\n\"Good though.\" I took a second mouthful, blowing on it first this time.\n\n\"No, not good, excellent. It certainly beats my macaroni cheese into a cocked hat. My compliments to the chef \u2013 and my thanks to her Gran for the recipe.\" I was impressed. Shana was smug.\n\n\"You like it then?\" Like actors, cooks like good reviews.\n\n\"I love it Does your Gran want a toyboy by any chance?\"\n\nShana laughed. \"No! But she'll be very flattered by your offer when I tell her. But why d'you want to be her toyboy? I'm the one who cooked it for you.\"\n\n\"I can't be your toyboy. Firstly, I'm older than you are, secondly, an elderly lady wouldn't be as demanding as a sweet young thing. I couldn't cope with demanding in my frail condition. Thirdly \u2013 I can't think of a thirdly, but I'm digging myself into a deeper and deeper hole here aren't I?\" She was trying to look cross while, at the same time trying not to laugh.\n\n\"Yes. I'm twenty two years old, you are how old?\"\n\n\"Twenty three.\"\n\n\"you're only a year older than me. And I'm not demanding \u2013 as long as I get my own way all the time.\"\n\n\"Pax!\" I called a truce. \"Lets eat, before it gets cold.\"\n\nThe serious business of eating was only occasionally interrupted as I thought of new compliments or superlatives to describe the ambrosia that had been prepared for me. Like I said, cooks like good reviews. By the time I'd finished eating, she was positively glowing with all the praise and adulation I had heaped upon her. \n\n\"Well that was delicious. Thanks, but I couldn't eat another mouthful.\" Shana was trying to give me the rest of the pasta from the serving bowl. \"I am replete, sated. There's Haagen Dazs in the freezer for desert, but I think that'll have to wait an hour or two. I will have more wine though, If there's any left.\"\n\n\"Only the bottle I found in the fridge, and I used about a quarter of that in the sauce.\" Shana started to look apologetic again. Why do people do that? Apologise for things when they've done nothing wrong?\n\n\"No problem. I'll rub the lamp.\"\n\n\"You'll what?\" Gods, but she looked cute when she was puzzled.\n\n\"Watch and learn.\" I reached for the phone and pressed [Recall][2], then returned it to the cradle so I could use it hands free. It rang\n\n\"Charlie's Cars.\"\n\n\"Hi Steve.\"\n\n\"Hello Mate! What's occurring? You still in one piece, more or less?\"\n\n\"More or less. Listen, I need a favour. You got any cars coming up this way in the next half hour?\"\n\n\"One in about ten minutes. Booking for nine o'clock. Nothing else available. Why? Where did you want to go?\"\n\n\"No where. Can you get the driver to roll by Thresher's and pick up a couple of bottles of white wine, then drop them in on his way past?\"\n\n\"You havin' a party? Why wasn't I invited?\"\n\n\"No. No party. Shana just came over to cook me dinner and we've run out of vino.\"\n\n\"Shana's there now?\"\n\n\"Hi Steve!\" She giggled. She wasn't really the giggly type but I think she was imagining the damage I was doing to her good name in this town.\n\n\"Hello again Shana. Is Alun trying to get you drunk or something?\"\n\n\"I think so. Are you going to contribute to my ruin?\"\n\n\"Too bloody right I am! Two bottles of white wine was it mate? That all? Sweet or dry?\"\n\n\"Dry. And thanks Steve.\"\n\n\"No worries mate. Ten minutes. Have fun.\" \n\n\"Bye Steve!\"\n\n\"Bye Shana.\" The phone was purring again. I reached over and hung up.\n\n\"See, Shana, I rub the lamp and the genie of the cab office grants my every wish.\" \n\n\"I don't think it'll take two more bottles to get me drunk. I'm pretty tipsy already.\"\n\n\"They're to get me drunk. You've got the dishes to do.\"\n\nShe giggled again. The wine was definitely working. \n\n\"Can't the genie do the dishes too?\"\n\n\"Steve? Do dishes? Not in this life. Tell you what. Ring him and suggest it. I know what he'll say.\"\n\n\"What?\"\n\n\"That's women's work. Steve's got strong feelings about things like that. Even Trish, that's Steve's girlfriend, can't get him to do the dishes and she sleeps with him. You and I would have no chance.\"\n\n\"I'd better get on with them then.\" She started clearing the table. I let her get as far as piling them in the sink to soak then placed a moratorium on domesticity. \"Leave them Shana. I'll do them in the morning. Lets just relax and digest that marvellous meal.\"\n\nBack in the lounge, she wandered over to peruse my video collection. \n\n\"You've got a lot of tapes. Any particular order?\" \n\n\"Top shelf is sci-fi. Second shelf is comedies. Third shelf is horror and gratuitous violence. Bottom shelf is classics and musicals.\"\n\n\"You like Humphrey Bogart films don't you? The Maltese Falcon...Africa Queen...Casablanca. Casablanca! You know, I've never seen that. Everyone says its brilliant but I've never got round to watching it.\"\n\n\"You've never seen Casablanca? The most romantic film ever? The cinematic equivalent of Romeo and Juliet? Girl, you haven't lived!\"\n\n\"We could watch it now. If you don't mind seeing it again?\"\n\n\"Sold.\"\n\n\"You put the tape in then. I need the loo.\" She handed me the cassette as she passed, heading for the bathroom.\n\nIncapacitated though I was, I could not help but view Shana's suggestion with that optimism which is the natural state of the rutting male. The date movie is often a crucial factor in the success or otherwise of the mating ritual. It is important to strike the correct balance of emotional content. A date movie may have scary or startling moments although these work to best effect in the first half of the film where they make the perfect ice-breakers, giving the male the opportunity to assert dominance by holding the female's hand to reassure her or, in extreme cases, provide an arm to cling to. Secondly, the perfect date movie should offer a steady accumulation of sexual tension between the characters. This will stimulate the appropriate neuro-receptors to make the female more sexually receptive (it is unnecessary to stimulate the male in this fashion. He is always receptive to sexual signals). Paradoxically, gratuitous nudity does not stimulate receptivity as effectively as one might think. Males respond strongly to nude images but females are most likely to experience a negative response. By comparison, unresolved sexual tension on screen produces a more balanced response with both the male and the female empathising with their corresponding role models. Finally, the date movie should alternate tragedy and humour. This has a see-saw effect on the couple's emotional equilibrium, acting as a catalyst upon their desires while simultaneously suppressing cerebral thoughts. Casablanca achieves an almost perfect balance of these factors. Opening with moody tension against a backdrop of world conflict, sparking into momentary flurries of violence before the plot is clarified as the main characters struggle to suppress their feelings for one another, culminating in a tragi-comic final scene. In short, it's quite possibly the best date movie in the world, ever, and Shana had picked it out to watch. Hence, I was optimistic about my chances.\n\n\"Earth to Alun!\" My reverie was interrupted by Shana's return. \n\n\"What? Sorry, I was miles away.\"\n\n\"Interesting choice of reading material you've got in the bathroom.\"\n\nThat put me off balance. What had I left lying around?\n\n\"If you mean dirty books, they're Steve's. He stays in the spare room sometimes when he and Trish have been squabbling.\"\n\n\"I meant this.\" She held up a slim hard-back. \"Sonnets from the Portuguese? Not what I would have expected to find in a bachelor's bathroom.\"\n\n\"No? Well I generally don't advertise my choice of books. doesn't go with the macho image. People get the wrong idea. That belongs in the spare room.\" I took the book off her and went to return it to its shelf. Shana followed me, her curiosity piqued.\n\n\"Have you read all these?\" Shana was referring to my first edition collection. A few dozen volumes of poetry and classic novels and rather more by contemporary authors, mainly signed copies.\n\n\"Pretty much. They're bugger all use as ornaments so what else would I do with them?\"\n\n\"The only poems I've ever read were the ones I had to do for my GCSE in English. I've never really got into it; all thee this and thou that.\"\n\n\"Its not all like that. The more contemporary stuff is much more accessible.\"\n\n\"What's you favourite poem then?\"\n\n\"I could shortlist a hundred or so but don't expect me to narrow it down further than that. It all depends on what mood I'm in. I'll give you an example; something topical.\" I rummaged on the shelves until I put my hand on the book I was looking for.\n\n\"This is a contemporary one, meaning the author's still alive.\" I cleared my throat and recited,\n\nI bowed my head and pressed\n\nMy lips against her breast,\n\nThen, cupping one within each palm,\n\nI traced the lace of her bra with my thumb,\n\nReading her emotions in Braille\n\nThrough the thin fabric veil\n\nAs her nipples, hardening with passion,\n\nBlushed to be touched in such a fashion.\n\n\"That's topical is it?\" There was mischief in her voice.\n\n\"I had hoped it would be, in the not too distant future.\" I confessed and threw myself on the mercy of the court. It paid off.\n\n\"Well we'll have to wait and see, won't we?\" There was a wicked glint in her eye. She moved closer, raised her arms to my neck and kissed me. We'd been here before, twenty four hours earlier, but we'd been interrupted by her ex. This time, that wasn't going to happen, so I relaxed and let her drive. \n\nShe broke for air, moving back a little and smiling. \"What about this film then?\"\n\nSo that's how she wanted to play. Tease.\n\n\"D'you want a refill first? Damn! No, we're out of wine, aren't we?\" The last was a rhetorical question but the doorbell answered it all the same.\n\n\"Not any more. I'll get it.\" Shana was quite into this fetching and carrying role, so who was I to argue? I contented myself with heading back to the lounge and eavesdropping from a distance on the conversation at the front door.\n\n\"Evening Miss. Two bottles of wine. Compliments of Steve. He says to tell Alun to get well soon, there's a darts match on Thursday against the Rat and Parrot and he's a man short.\"\n\n\"Thanks. Give Steve this for me.\"\n\n\"'Night Miss.\"\n\n\"Goodnight.\"\n\nI heard the door close and Shana pottering about in the kitchen. She came through to the lounge with an open wine bottle. \n\n\"Already cold. Isn't Steve thoughtful? Oh, and he sent a message.\"\n\n\"I heard. Darts on Thursday. What did you give the driver?\"\n\n\"Just a kiss to pass on to Steve for being a sweetie. Do you think he will? Pass it on, I mean?\"\n\n\"Not if he values his teeth, Steve's more cave man than new man. Come and sit down. You've done enough running around for one evening. Besides, the film's about to start.\"\n\n\"It's a tape.\"\n\n\"But I've got the remote, and I say it's about to start.\"\n\n\"Bossy boots.\" Defiant though she sounded, she came over and sat down next to me, slipping off her shoes and swinging her feet up onto the settee.\n\n\"Are you sitting comfortably? Then I'll begin.\"\n\nWhile the opening credits were rolling, I went for the classic 'arm along the back of the settee' gambit. It paid off. Shana took the hint & snuggled up close in response to my hand resting on her shoulder. We'd both forgotten about my bruised ribs right up to the point her elbow dug into them. I manfully resisted the urge to scream, flinch or do anything else to spoil the mood of the moment. She still noticed.\n\n\"Sorry. I forgot.\" She started to straighten up. I kept my hand on her shoulder to discourage this. \n\n\"'S ok. Just as long as you don't wriggle.\" I lied. There are times when discomfort just doesn't matter. This was one of them.",
        "We watched the tape, we worked our way through our fourth bottle of wine, my hand slipped down a bit and took a few liberties and, just as Ingrid Bergman was offering to stay with Humphrey Bogart if he'd give Paul Henreid the letters of transit so he could escape from Conrad Veidt, Shana fell asleep.\n\nI watched the rest of the film alone, Shana warm but basically lifeless against my shoulder. When the tape finished I had to disentangle myself from her before the TV started screaming at us. I was careful and she didn't wake, ending up lying almost foetal on the settee with her head pillowed on the arm rest. After turning everything off and battening down the hatches for the night I dug out a spare duvet and covered my sleeping house guest.\n\n\"Goodnight sweet princess, and flights of angels sing thee to thy rest.\" Ok, so I misquoted. Give a guy a break. \n\nAs she didn't stir when I kissed her, I guess I'm not Prince Charming. I went to bed.\n\nWhat a long, strange day it had been.\n\nSUNDAY 07:00 HOURS\n\nWoken at this ungodly hour by my sadistically persistent body clock, I added a heart attack to my catalogue of ailments. The reason? Shana was cuddled up beside me. I'd left her on the settee, hadn't I? Yes. I definitely remembered that much. Don't panic, prioritise. Alka Seltzer first, answers second. \n\nI got up doubly carefully (I was sore. She was asleep.) and stumbled as far as the bathroom cupboard. Plink, plink, fizz, swallow and try to keep it down. The morning after ritual was duly completed. Now then, coffee and cogitation.\n\nOver a cup of strong, black coffee I thought things through. I didn't carry her into my bedroom and I'm bloody positive I didn't undress her. The thought had crossed my mind briefly, very briefly, but I hadn't acted upon it. Yet the fact remained, Shana was in my bed wearing my tee-shirt. It was possible she'd got up in the night to answer the call and just gone into my room by mistake on her way back from the bathroom, but what about the tee-shirt? Nobody accidentally gets out of a dress, a bra and a pair of tights. Ergo, she got herself there deliberately. So was it just that the settee was uncomfortable or was it unfinished business? The latter, I hoped. There's that masculine optimism again.\n\nI'd finished my coffee while working all this out and it wasn't that warm in the kitchen in just a pair of boxers so I went into the bedroom to get some clothes. While I was rummaging for a matching pair in my sock drawer, Shana woke.\n\n.\"Morning. What time is it?\"\n\n\"Half seven. Sleep well?\"\n\n\"Mmm, 's too early. Come back to bed.\"\n\nI lay down next to her, on top of the duvet, figuring discretion to be the better part of valour.\n\n\"No. In the bed. I want a cuddle.\"\n\nSo much for discretion. I got into bed and did my best to keep my mind on cold showers as Shana flowed up against me like a cat. Virtual cold showers were no defence against real skin so I tried changing the subject.\n\n\"Don't take this the wrong way Shana, but what are you doing here?\"\n\n\"I came over to cook you dinner. Remember? Oh you mean what am I doing here? Aren't I welcome? Shall I go back to the sofa?\"\n\n\"You can stay a little longer, since you're such a good cook.\" That was a mistake: she elbowed my ribs. \"Bloody cheek!\"\n\nI didn't answer. I was too busy doubled up in pain.\n\n\"Oh God! I'm sorry. I forgot you were hurt. Sorry!\" Turning over so she was facing me, she pulled the duvet back enough to be able to see my hand clutching the middle of about a square foot of bruises. She looked so concerned I thought she was going to cry but the flashing lights behind my eyes had faded and I could breathe again so I let her know I was ok.\n\n\"At least now you're facing the right way to kiss me.\" Not exactly subtle but it did the trick. Shana gingerly leaned closer and kissed me. I took control, this time it was my turn to drive. The kiss became significantly less gentle and a whole lot more interesting.\n\nMore twinges as we separated confirmed that while the spirit was willing, the body was weak. I was most definitely hors d'combat and, sacrilege though it is to utter such things, I really didn't want to take this further. Steve would probably disown me if, or rather when he found out I'd passed up the opportunity for a shag (if you'll forgive the vernacular) but I'm sure Shana wasn't feeling a hundred percent either. She looked very tired still, and more than a little hung over. No, I was resolved. As and when Shana and I did get around to sex, I wanted the occasion to be remembered for my performance rather than lack of it: I wanted the recollection of it to be raising blushes and blood pressure for decades to come. One injured participant and one hung-over had no chance of making that sort of impression, let alone making the earth move, the angels weep and the stars tremble in their courses. \n\nShana seemed to have a similar grasp of the situation. At least, she lay her head on my shoulder, closed her eyes and mumbled something about wanting to go back to sleep. A wish apparently granted before she'd finished the sentence. It seemed like a good idea, so I closed my eyes too and shortly joined her in the Land of Nod.\n\nI woke again at half past nine. Shana was still there: I hadn't been dreaming. I could feel her breath on my shoulder and, as my eyes adjusted to the light level in the room, I watched the rhythmic rise and fall of the duvet and the faint throbbing of a pulse on her neck. Watching her like that, I was struck by just how attractive she was. I know men tend to exaggerate the aesthetic appeal of their conquests but Shana wasn't a conquest yet. She was never likely to make the cover of Cosmo, but I'd like to bet she'd turn heads in any of my favourite haunts. I was happily contemplating my good fortune when she woke up.\n\n\"Is it time to get up yet?\" She didn't sound too enthusiastic about the idea.\n\n\"Only if you've got somewhere you've got to be. Its nearly ten.\"\n\n\"Its too late to go to Mass then. I'll have to go this evening instead.\"\n\n\"Mass?\" It hadn't occurred to me that she was religious.\n\n\"Yes. I go every week, St. Mary Magdalene's in New Cross. So?\" She seemed a little defensive. Time to tread softly.\n\n\"Nothing. It just took me by surprise that you're Catholic. You never mentioned it.\" I wasn't placating enough.\n\n\"Just like you never mentioned your books.\"\n\n\"Touch\u00e9!\"\n\n\"People hear a girl's Catholic and they think of convent educated, shy girls with spectacles. I didn't go to a convent, I'm not shy and I don't wear glasses. If you really want to know, my brother's the parish priest. My whole family goes to Mass. Aunts, Uncles, everyone. Afterwards Mum, or one of my aunts, cooks dinner for us all. It's kind of a family tradition. The church is a social club as much as anything else.\"\n\n\"I'm sorry. I didn't mean to pry. People in glass houses and all that. Pax?\"\n\n\"Only if we can kiss and make up.\" She pouted slightly. We only got about halfway through what had promised to be a magnificent thirty second snog when I burst out laughing, I just couldn't help it.\n\n\"What?\" Shana's expression was one of bemused puzzlement. As an expression, it was very becoming. Cute. \n\n\"It just dawned on me. You go to confession, yes?\"\n\n\"Yes\" Shana was still puzzled. I elaborated.\n\n\"I've just never been part of somebody's confession before. I'll have to see if I can't lead you astray some more, so you'll have something really sleazy to confess.\"\n\n\"Is that what you were doing when I woke up? Planning my ruin?\" She was taunting me.\n\n\"Not your ruin, just your conquest. You know, typical male fantasies: flaunting you in front of my friends to make them jealous, tearing your little black lace panties off with my teeth. Nothing very ruinous.\"\n\n\"And how did you know I was wearing black knickers? Have you been peeking while I was asleep?\" I knew she wasn't cross but her tone of voice was such, if she'd been standing up, she'd have had her fists on her hips.\n\n\"No, I haven't been peeking.\" Did I sound too defensive? \"I picked your clothes up off the floor earlier. Nobody wears a black lace bra like that without matching panties. Elementary, as Holmes would say to Watson.\"\n\n\"I see. Are you sure you didn't peek? Just to check your deductions, Sherlock?\" She was persistent.\n\n\"I'm sure. I didn't peek. I promise.\"\n\n\"I did. When I got into bed.\" She looked triumphant.\n\n\"I'm shocked. I feel violated now.\" I tried to look offended. It didn't work.\n\n\"A girl likes to know what she's letting herself in for.\" \n\nThat was it, I couldn't keep a straight face any longer. Laughing hurt and I ended up gasping for breath.\n\n\"So? Did I measure up to your expectations?\"\n\nShe didn't answer; she just kissed me again. This time I didn't laugh.\n\n\"I'll take that as a yes, shall I?\" I was smug.\n\n\"Yes. Yes, my vain man, you measure up. OK?\"\n\n\"Good. I'd hate to disappoint you before I've had my wicked way with you. Breakfast?\"\n\n\"What's on the menu?\"\n\n\"Croissants, coffee, orange juice, or we can go down to Sal's caf\u00e9 for bacon and eggs.\"\n\n\"Croissants sound good. Got any marmalade?\" \n\n\"I think so. Croissants'll be about twenty minutes. There's plenty of hot water if you want a shower while they're cooking.\" As I got out of bed I couldn't help but notice that the tee-shirt she was wearing had ridden up a bit. I had been right: black lace. \n\nFrom the kitchen, I could hear Shana moving around until the white noise of the shower drowned out other background sounds. While she was in there, I found a blue silk kimono I'd bought for Rosy, my ex, and that she'd left behind when we split up. I left it out for Shana, noting in passing that she'd made the bed. Very domesticated.\n\nBack in the kitchen I got on with making coffee, real coffee this time, not instant battery acid. The shower went silent, \n\n\"Allen?\" Her voice was muffled somewhat by the intervening door.\n\n\"Yeah?\"\n\n\"Have you got a big towel anywhere?\"\n\n\"Just a second. They're in the linen cupboard.\"\n\nI fetched two towels, an enormous bath towel you could wrap a sumo wrestler in and a small hand towel. The bathroom door opened a few inches in response to my knock and a wet arm reached out, groping for the proffered towel. I handed her the smaller of the two.\n\n\"Very funny. This isn't even big enough to dry my hair with.\" She reached out again. This time her hand found the proper towel.\n\n\"That's more like it. Thanks.\" The door closed again.\n\n\"No problem. Breakfast in five.\"\n\n\"Ok\" Her voice was even more muffled. I surmised she was drying her hair.\n\nA blur of white and pink passed the kitchen door as Shana disappeared into the bedroom. As I took the croissants out of the oven, she appeared in the kitchen doorway in the kimono. I paused to admire the vision in blue before me. She struck a classic pose, one arm stretched languidly up the door frame, weight on one leg, the other leg angled slightly. I just stared in silence.\n\n\"Well? I'm waiting for a compliment.\"\n\n\"It suits you. Orange juice?\" Never flatter a woman whose fishing for compliments.\n\n\"You silver tongued devil. Yes please. Just half a glass.\"\n\nI half filled the second glass and gave her a quick tour of the worktop. \"Croissants - careful, they're hot - coffee, UHT cream, skimmed milk in the fridge, butter, marmalade, half a jar of Nutella, Dutch toast, sorry I've got no cereals. Help yourself.\"\n\nPerched on barstools, at the stretch of worktop that passed for my breakfast bar, we munched our way through half a dozen croissants, spreading crumbs liberally everywhere and gossiping between mouthfuls. It was the first real conversation we'd had sober.\n\n\n\"Whose kimono is this anyway?\" her tone was casual but any fool would recognise it was a loaded question. She waited for the answer. I opted for plan B: Tell the truth.\n\n\"I bought it for Rosy, for her birthday. She deliberately left it behind when she moved out. It covered rather more of her though, she was about six inches shorter than you\" I was referring to the amount of leg Shana was not hiding, and not just to change the subject: Shana had lovely legs and I suspected she was vain about them. I was right.\n\n\"It is a bit short isn't it? Its very lovely though. You have good taste.\"\n\n\"I know. Why d'you think I chatted you up?\" Too clich\u00e9d?\n\n\"Why, thank you kindly, Sir. Such flattery could fair turn a simple country girl's head.\"\n\n\"Shana, can I ask you a question?\"\n\n\"Shoot.\"\n\n\"I know you probably told me this on Friday, but I can't remember the answer. What do you do for a living?\"\n\n\"I work at La Perla in Bond Street.\"\n\n\"La Perla?\" I drew a blank on that one.\n\n\"Its an lingerie shop. Pretty exclusive stuff.\"\n\n\"In Bond Street, I wouldn't have expected Ann Summers. So are you one of those girls they get to model g-strings so rich executives can see what they'll look like on there wives and mistresses?\" Please God, let her be a model.\n\n\"No way! Actually, I'm an assistant manager, nothing glamorous. You've got a one track mind this morning. I think you must be feeling better.\" She was right, I was.\n\n\"What about you? What do you do? I did ask on Friday but I just got some bull shit about you being the managing director of a consultancy firm. What do you really do?\"\n\n\"It wasn't bull shit. I really am the M.D. I also own the company. OK The truth. I'm a freelance computer consultant. I own a limited company that I'm the only employee of. I'm the managing director because I'm the only director and the only share holder. Steve's my company secretary which means he gets paid about \u00a350 a year for a couple of signatures, and attending board meetings at the Apples and Pears. Simple really.\"\n\n\"So what do people consult you about?\"\n\n\"Well if a company needs a few extra people for a short term project, they hire people like me to make up the numbers. Its sort of like getting a temp in when a secretary's on holiday, \u2018cept I usually get offered work three to six months at a time.\"\n\n\"So you don't have a full time job then?\"\n\n\"In the last three years I've had four different contracts, two of six months and two of twelve months. I take about two weeks a year off as holiday. I'd say it's a full time job.\" I was more abrupt with her than I'd intended. I regretted it immediately.\n\n\"Hey, calm down. I only asked a question. I wasn't putting you down or anything.\" She sounded quite hurt. Damage control was called for.\n\n\"I'm sorry, I'm not normally so sensitive about it but I've had so much stick off my mother about not having any job security, nor promotion prospects. Well, I guess you just pushed the wrong buttons. Forgive me?\"\n\n\"Silly boy! Of course I'll forgive you. But have we just had our first row?\"\n\n\"Not really a row, just me being touchy.\"\n\n\"Lets see. We've met, I've cooked you dinner, you've got me drunk, we've slept together and now we've had our first row, well sort of. Isn't this the point where we're supposed to kiss and make up again?\"\n\n\"So if we just had a row, I get kissed, but if it was just me being touchy, I don't? In that case it was definitely a row. Now come here.\"\n\nI've had quite a few different tasting kisses over the years but this was a first. Marmalade and Nutella flavoured. If the opportunity presents itself, I can recommend it. Delicious.\n\n\"I really should be going, Allen. My family will be expecting me for lunch.\"\n\n\"Alun.\"\n\n\"Pardon?\"\n\n\"Its Alun, not Allen. Its spelt A L U N but the U's pronounced as an \u2018I'. Its Welsh.\"\n\n\"Alun?\" She tried it out.\n\n\"Spot on. Now what were you saying about going?\"\n\n\"I've got to. I'll be expected. I've just got time to do the dishes then go home and change.\"\n\n\"Don't bother with the dishes, I'll do them. You go and get dressed and I'll call you a cab.\" I reluctantly let go of her.\n\n\"I don't need a taxi. I've got a travel card. The fifty three bus will take me all the way home. But thanks for the offer.\" She gave me a quick peck and went to get her clothes on. I busied myself with the washing up.\n\nI'd finished washing up and was just starting in on the drying when she came back into the kitchen, dressed and ready to go. An idea struck me.\n\n\"Ready then? Give me one minute to throw some clothes on and I'll walk you to the bus stop.\" I figured if I couldn't call her a cab, it was the least I could do.\n\n\"Ok then, but you really don't have to. I know the way and you still need to rest and let those bruises heal.\"\n\n\"But I'd like to. The fresh air will do me good and I can pop over to Steve's after I've seen you off. He'll be wondering how I'm doing.\"\n\n\"Wondering how you're doing, or wondering how you did last night? Oh all right then, come on. You can walk me to my bus then go and tell your friend all about last night.\"\n\n\"What makes you think I'd be that indiscreet?\" I tried to look innocent and wounded but Shana had seen enough of the world to know what blokes are like.\n\n\"Of course you'll tell him, he's your best friend. Its OK. I don't mind. He'll probably assume I stayed the night anyway.\"\n\n\"he won't assume it, he'll know it. After delivering the wine he'll know you weren't driving so if you'd left last night, I'd have called him for a car for you. He didn't get a call so you must have stayed over.\"\n\n\"So my reputation's already ruined? C'est la vie.\"\n\nI threw on my jeans, my trainers, the tee-shirt Shana had recently vacated and my duvet jacket and we were set to go.\n\nOn the way to the bus stop, Shana reached for my hand, holding it gently as we strolled along the Old Kent Road. We had to wait a few minutes for her bus but there was no one else at the stop so we occupied ourselves by cuddling on those bloody stupid flip up benches that pass for seats, no mean feat.\n\n\"Can we have dinner together one night this week? My treat.\" I was wondering when (not whether) I'd see her again.\n\n\"I can't. Its going to be a very hectic week and I've got a couple of evening functions to attend for work.\"\n\n\"Oh.\" I must have looked as crest-fallen as I felt.\n\n\"Alun, its not a brush off, I really am going to be hugely busy. I'll see you next week-end though. Friday night. We'll have dinner, a few drinks, go dancing. Who knows you may even get lucky, if you're a very good boy.\"\n\nJust then her bus arrived. We had one final kiss and she got on the bus.\n\n\"I'll ring you this evening. To make sure you're all right. Give my love to Steve.\"\n\nAnd she was gone.\n\nWhen the diesel fumes had cleared, I could still smell her fragrance. It was the tee-shirt Well there are worse things to smell on the streets of South East London. I walked to Steve's via McDonalds for another cup of coffee. I needed the caffeine.\n\nAs I walked, I thought over recent events, especially those involving Shana. She had presence, even when she wasn't around. Thoughts of her expanded to fill any idle moments when I wasn't concentrating on something specific. From experience I knew this daydreaming would wear off in due course. Still, for now I fully intended to revel in it.\n\nThere was no doubt we were compatible. The amount of time we'd spent manufacturing opportunities to kiss and cuddle, or just to be close enough to touch each other, proved that and although we hadn't slept together in the biblical sense, it seemed likely we would just as soon as I was fit enough. She was a tease, certainly, but she had a way about her that said she kept her promises. Well that was something to look forward to at least.\n\nShana's job did present a bit of a problem. Lingerie was a traditional gift between lovers, generally on occasions when we want to give something that'll last. Lingerie neatly fills the gap between flowers and jewellery. Cuddly toys are sometimes appropriate as a substitute but Shana didn't strike me as a cuddly toy sort of girl. So what was my problem with buying her lingerie? Coals to Newcastle. It would be like sending flowers to a florist. No, I had to come up with something original.",
        "I got to Steve's house and rang the bell. There was no answer so I let myself in with Steve's spare key.\n\n\"Anyone home?\", I called out, just in case. Once, I'd accidentally walked in on Trish giving Steve a blow job, much to her embarrassment, so these days I made sure they heard me coming (rather than vice versa).\n\nThe coast was clear. I was writing a note on the pad by the phone when it rang. I answered it.\n\n\"Steve's Brothel. What's your pleasure?\"\n\n\"Hello Mate. You at my place then?\" Steve had a knack for asking stupid questions.\n\n\"No. I just re-recorded your answerphone message, then I left.\" Sarcasm is the lowest form of wit but at least Steve can understand it. \"Where are you?\"\n\n\"Your place. Me and Trish popped in to see how you are, but you're not in.\" His grasp of the bleedin' obvious was uncanny. \"Tell you what Mate, put the kettle on and we'll be home in five minutes. Ok?\"\n\n\"Five minutes. Bye then.\" I hung up on him.\n\nIt was more like ten minutes when I heard a key in the front door.\n\n\"Alun?\" It was Trish.\n\n\"In the kitchen.\"\n\nShe came through and I thought she was going to faint.\n\n\"Jesus Christ! I thought Ste was exaggerating. You look awful.\"\n\n\"Its not as bad as it looks. And how are you?\"\n\n\"Uh, fine thanks. Is it true you were fighting over a girl?\" Trish, like Steve, didn't believe in conversational foreplay. It probably explained why they were so well suited to each other, and why they spent half the time splitting up and the other half making up. Well, they'd been together two years, which is longer than I've ever managed to maintain a relationship, so who was I to criticise them?\n\n\"I wasn't fighting over a girl. Her ex tried to glass me with a beer bottle so I decked him. The bouncers did all the damage.\" I was getting fed up with saying that.\n\n\"Whatever.\" Trish closed the subject. \"We were on our way to Cottons for a workout. Come with us. A soak in a Jacuzzi will do you the world of good.\"\n\n\"I'd have to stop off and get my trunks.\" It actually sounded like a good idea. Steve chose that moment to arrive in the kitchen.\n\n\"You can borrow my spare pair. Well, you look brighter than you did yesterday. Did you make the coffee?\"\n\n\"Kettle's boiled, coffee's in the mug, pour the water in yourself.\"\n\n\"Ok. Refill, Mate? Trish?\"\n\nI shook my head. I can't drink coffee the way Steve does. \n\nTrish didn't want any either.\n\n\"No thanks. I'll go and get those trunks out for Alun. Drink it quick, Ste. I might just make it to the two o'clock Step class.\" And she was gone.\n\n\"Well?\" Steve was fishing. I'll translate: in this context 'Well?' meant 'Did you shag her? Was she as sporty as she looked? Will you be doing her again any time soon?' and several other questions even less politically correct. What he was definitely not asking was 'Is she a good cook? How was the wine? Do you feel better today?' I answered him.\n\n\"I'm feeling much better today. Thanks for asking. Oh, and thanks for the wine, it went down a treat with Shana's homemade pasta. She's an excellent cook.\"\n\nSteve knew this game. He'd played it often enough with me. He'd ask again later, eventually I'd tell all.\n\n\"Well I'm glad you liked the wine. You owe me a tenner for it.\" That was the penalty for being evasive but it was worth every penny. I coughed up.\n\n\"You two ready then?\" Trish's disembodied voice reached us from the hallway.\n\n\"Coming!\" Steve shouted. \"All set?\" The question was addressed to me but he didn't bother waiting for an answer. I followed him out to the car. \n\nEn route to Cotton's, Trish quizzed me about Shana.\n\n\"So who's this girl then? Ste said she cooked for you last night.\" Trish wouldn't put up with evasions the way Steve would. I might as well just tell it straight.\n\n\"Trish, you're a nosy bitch, you know that, but I love you anyway. Ok then, from the top.\n\nHer name's Shana. She's half Italian, born and raised in New Cross. She's tall, elegant...\"\n\n\"Drop dead gorgeous.\" Steve offered his opinion.\n\n\"Steve, shut up...elegant, quite bright and not shy. We met in The Moon in Leicester Square last Friday. When I got beat up and she couldn't find me, she asked Gianni - the barman - who pointed her in Steve's direction. Shit-for-brains here gave her my number and she called to make sure I was OK. I called her back, told her yes, I was alive and no, I wasn't going out last night. She felt guilty 'cos her ex-boyfriend started the fight and she offered to cook dinner to make it up to me. That's it. Oh, and she sells posh knickers for a living.\" I hoped that would be enough to satisfy their curiosity. No such luck. \n\n\"Knickers? Like those adverts in Fiesta? Soiled panties plus photo, ten quid.\" He was just being rude for the sake of it.\n\n\"No, you pervert, posh knickers. The sort Trish would get for Valentine's Day if you had any class. Silk and lace.\"\n\n\"Is she a good cook then?\" Trish deliberately ignored Steve's remarks and just steered the conversation back to more polite territory.\n\n\"Excellent!\" I breathed a sigh of relief that the inquisition had moved on to mundane matters. My relief was premature; Trish was just softening me up.\n\n\"So what time did she go home?\" The tone was innocent but I knew her better than that. Trouble was she knew me too.\n\n\"Just gone twelve.\" Would it work?\n\n\"Midnight?\" Trish knew. I don't know how, but she knew. I cracked.\n\n\"Midday. I walked her to the bus stop before I came over.\"\n\n\"You bad dog!\" Steve's exclamation was one of respect, not criticism. Trish slapped him for it.\n\n\"You didn't sleep with her? In your condition?\" Trish sounded both concerned and incredulous.\n\n\"Yes and no. We....\"\n\n\"Shagged all night and never actually got round to sleeping? Ouch! I'm trying to drive here.\" Trish had hit him again.\n\n\"No! We slept together but we didn't sleep together, if you catch my drift.\"\n\n\"No.\" Steve was being deliberately obtuse.\n\n\"Yes. Was it your idea or hers?\" Trish was like a dog with a bone. She wouldn't be happy until she'd got all the marrow out.\n\n\"Its a long story....\"\n\n\"Tell me later, we're here. I'll have to run to catch my Step class. See you two in an hour.\" She bailed out and ran across the car park. \n\nSteve finished parking and we made a more leisurely entrance.\n\n\"Later.\" Steve was already changed so he headed straight for the gym. I went to the locker room and put my trunks on.\n\nOn my way to the sauna, I stopped outside the dance studio to letch at all the pretty girls in Lycra through the glass wall. Trish waved and pulled a face when she saw my multicoloured ribs. \n\nShe was right about the Jacuzzi. The hot water was wonderful and the jets massaged away my aches and pains.\n\nI had been soaking in the tub and daydreaming about Shana for over an hour when Steve splashed down beside me with Trish close behind him.\n\n\"Right then\", she said, \"what about this long story?\" I told you she was persistent.\n\n\"Rub my shoulders and I'll tell you.\"\n\nTrish climbed out onto the ledge surrounding the tub and, kneeling behind me, started to knead my neck and shoulder muscles. It felt wonderful. Trish has strong hands. I started talking, quietly, since we weren't the only ones in the health suite.\n\n\"Hear then, O mighty king! After we'd finished off her pasta....\" I proceeded in great detail through all the events of last night and this morning, omitting only the more intimate details. \"...and, once she'd caught her bus, I came over to your place.\"\n\nAbout halfway through my anecdote, Trish had moved over to Steve who was now enjoying her tender ministrations. \n\n\"Should have shagged h...\" Steve was suddenly gone. Trish had put all her weight on his shoulders and completely submerged him.\n\n\"Ignore him.\" She let him surface. \"I think she sounds very nice. And she obviously likes you so don't blow it. Treat her right.\" She sounded stern but quickly mellowed. \"When do we get to meet her? Me at least, Ste already has.\"\n\n\"Well we're going out next Friday but I'm sure she wouldn't mind if we all met up for a drink. Of course, if Steve's working, you can come on your own. Probably better anyway, without this caveman.\" I winked at Trish with my one visible eye. She winked back. Steve looked hurt.\n\n\"Et tu Brute! Just remember who made this possible. Trish, yesterday morning I had to bully this ungrateful git into answering the girl's phone calls. He was all set to brush her off 'cos he reckoned she was too much hassle. You owe me Mate, just remember that.\" Steve sounded aggrieved. I laughed.\n\n\"Ok. You can come too, and I hadn't forgotten yesterday morning. Thank you for your insight and guidance. Next time I need my arse kicked, you'll be my first choice.\" That made him smile.\n\nTrish changed the subject. \"I'm going to get some steam. Any takers?\" Steve went with her to the steam room leaving me alone with my thoughts again. Now where should I take Shana next Friday?\n\nI gave up on that one. There were too many unknown factors such as Shana's tastes & preferences, so I deferred the decision pending speaking to her nearer the time. Besides, she might have plans of her own. I certainly had no problem if she wanted to be dominant, either side of the duvet. Don't get me wrong, I'm not at all submissive. I'm your basic dominant alpha male but a woman with strong ideas about what she wants from a relationship is, in my experience, easier to satisfy than a passive woman. Its a hell of a lot easier to know what a woman wants if she actually tells you. \n\nSteve came out of the steam room alone, Trish being one of those people who can stay in all day. I usually kept her company - I can take it even longer than she can - but I didn't think it wise with a dressing still over my eye. While Trish was out of earshot, Steve tried to quiz me for more details about last night. He was convinced, quite rightly as it happens, that I had been less than candid with him and he wanted the post-watershed version.\n\n\"That was bull shit, right?\"\n\n\"What was?\" I tried to look innocent.\n\n\"All that stuff about 'We slept together but we didn't sleep together'. Trish may buy it but I've known you how long?\"\n\n\"Too long.\" About six years actually.\n\n\"Right. I've known you too long to believe you woke up, found a naked girl...\"\n\n\"She wasn't naked. She had my tee-shirt on.\"\n\n\"Found a basically naked girl in your bed and didn't rise to the occasion, even with those bruises. You could always have got her on top. Sorry Mate but I reckon you're a lying bastard.\" Steve was so sure of his version of events I wasn't even going to bother arguing.\n\n\"The truth remains true even when all believe it to be false.\" I sought refuge in Confucius. At least, I think it was Confucius.\n\nTrish came back and saved me from having to defend my actions further.\n\n\"Trish, tell him. He's picking on me.\" I appealed for help in my best \u2018little boy' voice.\n\n\"Ste, play nicely with the other children or I'll smack your bum. Now, if you boys have had enough, shall we go home and get some lunch? I'm starving. Alun?.... Alun?\"\n\n\"What? Sorry, I was miles away. Lunch. Yes, good idea.\"\n\nSo we went back to Steve's flat and he and I split a four pack of lager while Trish prepared lunch. It wasn't your traditional Sunday lunchtime board of fare: quiche, cold cuts and salad with garlic baguettes on the side. When we'd finished drinking Steve's beer, Trish offered to drive me home. Once we were in the car, she reopened the subject of Shana.\n\n\"Is this Shana really drop dead gorgeous then?\" \n\n\"Steve seems to think so and you know what good taste he's got. He even asked if she had a sister.\" I dropped him in it. Think of it as pay back for his comments in the Jacuzzi. \n\n\"Did he now? Well, well. Thank you for telling me.\" \n\nSteve was going to be in a world of pain when Trish got back. I smiled to myself. He deserved it. \n\n\"Here we are.\" Trish pulled up outside my flat.\n\n\"Thanks for the lift. See you soon. OK?\" I got out of the car.\n\n\"Friday, if not before. And get some rest. You look worn out.\"\n\n\"Yes Nurse.\"\n\nShe was right though. I was shagged \u2013 in the strictly metaphorical sense.\n\n\"I'll give you \u2018nurse'. If you want to play that game, call your new girlfriend.\" She blew me a kiss and drove off. Trish always, but always, got the last word. She was famous for it.\n\nThe Answerphone was showing two messages when I got in. I hoped one, or both, might have been from Shana. They weren't. One was my Mother, calling for a chat. I'd ring her back tomorrow. The second was from Rob, a mutual friend of Steve and I. He'd heard about Friday night and had called to see how I was doing. He was on Steve's darts team so I'd see him Thursday. He and the rest of the lads could have the full story then.\n\nIt was only early evening, hours too early for bed, so I moved the phone within reach of the settee, turned on the television and stretched out. I must have fallen asleep because the clock said it was gone ten when the phone woke me. I groped for the receiver.\n\n\"Yep?\" I must have sounded as drowsy as I felt.\n\n\"Did I wake you up? I did promise I'd ring you later. Well, it's later!\" Guess who?\n\n\"Hiya. Yeah, I was asleep on the settee.\"\n\n\"Sorry.\"\n\n\"No worries. I'd just dozed off. It's bedtime anyway. How's your day been?\" I was starting to feel more alert.\n\n\"Just the same old same old. I went to six o'clock mass but I didn't go to confession so I'm afraid you haven't shocked any priests yet.\" She was a tease. I liked that about her - a lot.\n\n\"I spent all afternoon in a Jacuzzi with Steve and his girlfriend. I feel a lot better for it.\" \n\n\"Did you tell Steve everything?\"\n\n\"As little as possible. Its much more fun having him try to wheedle it out of me.\"\n\n\"You're wicked to him.\"\n\n\"Ain't I just? He and Trish want to meet you so I said maybe we'd do drinks on Friday. We are still on for Friday, aren't we? You haven't come to your senses or anything?\"\n\n\"Yes, we are still on for Friday and I'd love to see Steve again and meet Trish. I owe him a big kiss for being such a sweetie, don't I?\"\n\n\"Just don't deliver it with Trish around. She'll go ballistic. Possessive does not begin to describe our Trish.\" I had a feeling this warning was falling on deaf ears. \n\n\"We'll see. Oh, by the way, There's a little present for you under your pillow. I must go now. Its late and I have an early start in the morning. Nighty night.\" There was a sound that could only be a blown kiss.\n\n\"Good night Shana, and thanks for the present, whatever it is. I'll speak to you soon.\" I put the phone down. \n\nA present? What now? Well, no use speculating, I went to look under the pillow. What I found there, I'd seen in my bed before. Shana's little black panties. Very pretty they were too. I phoned her back. This deserved comment.\n\n\"Hello?\" It was her flatmate, Jodie.\n\n\"Hi! Can I speak to Shana please?\"\n\n\"Who shall I say is calling?\" Jodie was still vetting Shana's calls.\n\n\"Its Alun.\" I heard a muffled whisper in the background then Shana was on the line.\n\n\"Hello again. Didn't we just say goodnight?\" She didn't sound surprised that I'd called though.\n\n\"Thank you for my present, they're lovely. Are they the ones you were wearing last night?\"\n\n\"You know full well they are. You peeked as you got up to make breakfast. Or is you memory really that poor? Concussion maybe?\"\n\n\"My memory's fine but does this mean I walked you down the Old Kent Road in broad daylight with no knickers on? I wish I'd known at the time.\"\n\n\"Why Sir! What sort of a girl do you think I am to be out in public with no underwear? What if I were run over? Why, I'd die of shame. Besides, I always have a spare pair of knickers and tights in my handbag. It's a girl thing.\"\n\n\"Don't get me wrong, I'm not complaining, but why?\" I really was wondering what the game was.\n\n\"Lets just call it a lonely impulse of delight.\"\n\n\"W. B. Yeats.\"\n\n\"Pardon? Yes. We did it for GCSE English. I liked that one. I just thought you'd like them as a memento of our first night together so I washed them and put them on the radiator to dry while I was in the shower. If you don't want them, you can return them on Friday.\" She had to know that wasn't going to happen.\n\n\"I think I'll keep them for now. It could be my only opportunity to part you from your knickers.\" If she wanted to lower the tone, I could lower it further.\n\n\"Could be. Sweet dreams, Lover.\"\n\n\"Thanks again, for everything. Sweet dreams.\"\n\nNow it really was bedtime. I put my present back under the pillow before turning out the lights and went to sleep wondering what next weekend would bring. Whatever happened, it was bound to be fun.\n\nMonday\n\nAgainst all odds, not to mention common sense, I made it into work the next morning. I didn't really feel up to it but if I stayed home I'd be climbing the walls by lunchtime. \n\nThe regular Monday morning team meeting overran because I was prevailed upon to tell my story once again. At least it provided an opportunity to get it out of the way in one fell swoop. Apart from the morning meeting, I did precious little to earn my daily bread, just answering a few e-mails and doing a bit of housekeeping on my laptop. \n\nI rang my mother during lunch. Its always best to ring her at work, it keeps the conversation shorter and means I only get to hear the important stuff. After twenty minutes spent telling me all about the local am-dram group's latest offering and the scandal of Mrs. Hudson at number 41, who has apparently taken in a male lodger - and her a respectable widow, well I ask you - Mater remembered to ask after me. I neglected to mention Friday's little contretemps lest it cause her to fret. She's been convinced for many years that her little boy will come to a bad end in the big city. People down here have no morals, as she's repeatedly told me. After Shana's present, I'm tempted to concede the point. Fancy a good Catholic girl doing that sort of thing! On the Sabbath too. I love this city, but it could give Sodom & Gomorrah a run for their money. Truth be told, that's why I love it. \n\nI wasn't going to be able to hide the scar on my eyebrow so I told Mater I'd picked up six stitches playing rugby in an inter-company challenge match. I got a lecture about being more careful and how she'll never understand my fascination with dangerous sports but at least she won't worry about it. Boys will be boys so I'm told.\n\nI didn't mention Shana. There's no point until I'm sure we'll be seeing more of each other. It doesn't do to let the old dear know her little boy is a promiscuous philanderer (Chance would be a fine thing.). It would upset her.\n\nAfter lunch I had a meeting with the boss. He just wanted a pep talk as he was away at a conference for the rest of the week. I gave him advanced warning that I was taking Friday afternoon off to go and have my stitches out. He was OK about it, even though it'd leave the department without a manager for half a day. He said he'd warn the other department heads that support would be minimal and any major glitches would have to wait until after the weekend. That pretty much wrapped it up for Monday.\n\nI left a message on Shana's answering machine that evening, suggesting that since she didn't have a free evening we could maybe have lunch together one day this week. I left her my office number too, in case she wanted to take up my offer at short notice. Then I drew a hot bath, read for an hour or so, until my toes wrinkled, and had an early night. \n\nTuesday\n\nI woke early and lay in bed waiting for the alarm clock to go off. Less than forty eight hours earlier I'd been watching Shana sleeping beside me. It was a pleasant recollection. After over a year of celibacy, I'd almost forgotten what its like to share my bed. Shana had reminded me why I don't like sleeping alone and now I was wondering how soon I'd have the pleasure of her company, or rather the pleasure of her, again. The alarm clock forced me out of bed and a cold (ok, lukewarm) shower dealt with the now familiar anatomical response to thinking about Shana. ",
        "After showering, I changed the dressing on my war wound. The old one took some getting off, bonded as it was to my eyebrow with blood from the cut. It was bleeding again by the time I'd finished so I cleaned around the stitches with a tissue and some Dettol, careful not to get any in my eye. The Dettol stung like blazes on the cut. In my eye? Well, I didn't want to know how much that would hurt. \n\nThe swelling had gone down a lot and, while I had a lovely shiner, the damage didn't look as bad as expected. An eye patch would certainly hide the worst of it once the stitches were out. I made a mental note to track down a suitably stylish patch. Vanity. Sheer, unadulterated, pretentious vanity.\n\nAt work, I made a point of going to see the Chief Exec's PA, Margot, or Maggot when she was out of earshot. Her daughter was a medical student and so might be able to locate an eye patch.\n\n\"Morning Margot.\"\n\n\"Good Lord! What have you been up to? Brawling again?\" She was joking. It was pure coincidence that she just happened to be right.\n\n\"Mea Culpa! But you should have seen the other guy. Can I ask a favour?\"\n\n\"You can ask, but I'm not promising anything. What do you want?\" Margot always sounded shirty but she wasn't half the ogress she'd like people to believe she was.\n\n\"Actually, its your daughter I wanted. Is she still a student at Guy's?\" It was badly worded. I knew it as soon as I'd said it.\n\n\"Catherine's already got a boyfriend. Anyway I don't think you're her type. No earring for a start.\"\n\n\"I don't want to bed her. I just want to know where I can get an eye patch and I thought she might be able to point me in the right direction.\"\n\n\"I'll ring and ask her. What extension are you on?\"\n\nI told you Maggot was helpful really.\n\n\"I'm using David's office while he's away, so I can get some paperwork done without being interrupted every five minutes. Five oh one, I think. Thanks Margot. You're a star.\"\n\n\"You tell anyone and I'll deny it.\" She got defensive.\n\n\"Your secret's safe with me.\" I went back to my office pro tem.\n\nThe phone rang.\n\n\"Yes Margot?\" No, I'm not telepathic. David's phone is a posh one that tells him who's calling.\n\n\"Catherine says there are several surgical supply shops between Harley Street and Wimpole Street. Everything from operating tables to wooden legs. You can try there.\"\n\n\"I will. Thanks. And thank Catherine for me.\"\n\n\"Must go. There's a call on the other line.\" She was gone.\n\nWell that was a result. Wimpole Street was only a stone's throw from Bond Street, where Shana worked. I could go eye patch shopping and check out Shana's shop at the same time. \n\nHalfway through elevenses, the phone rang again. I hurriedly swallowed the mouthful of Danish pastry I had been chewing, nearly choking in the process, and answered it. It was external and I didn't recognise the number.\n\n\" IT Department. Alun speaking. How can I help you?\" \n\n\"Hello Lover.\" It was Shana.\n\n\"Hi! To what do I owe this pleasure?\" Daft question. I didn't care why. It was enough she'd called.\n\n\"Your offer of lunch. Can you make it today? About oneish? Only I won't have time the rest of the week and I really want to see you.\" That sounded ominous.\n\n\"See me about what?\" My sense of foreboding must have shown in my voice.\n\n\"Not about anything. I just want to see you. \" She was amused. I was relieved.\n\n\"One o'clock? Fine. Shall I come to the shop or d'you want to meet somewhere else?\"\n\n\"You can come here. The girls would like to meet you.\"\n\nThere was giggling in the background. We were not alone.\n\n\"Are they pretty?\" Lets see if she's the jealous type.\n\n\"Beautiful, and they've all heard how bravely you defended my honour.\"\n\nWhat had she been telling them?\n\n\"Beautiful you say? In that case I think I can be prevailed upon to make a personal appearance.\" I tried to sound magnanimous.\n\n\"The girls will be pleased. We'll see you at one then. You know how to get here, yes?\"\n\n\"La Perla in Bond Street, right? I'm sure a cabby will be able to find it.\"\n\n\"Ok then. Bye, Lover.\"\n\nLover? She'd called me that twice. Cui bono? Was it for my benefit or her work mates? Mine, I hoped. It had a nice ring to it, just as long as she didn't say it in front of Steve. He'd seize upon it as proof of his suspicions straight away and I'd never convince him Shana and I didn't have sex last weekend. Perhaps I should enlist Shana's help. Get her to tell Steve we didn't? Bad idea. She'd probably tell him we did, just for sheer devilment. I suspected Shana's reputation was less important to her than her amusement. She wasn't shallow, she just had her own rules. It was an endearing trait - unpredictable but interesting.\n\nBut what about this hero stuff? What was I going to have to live up to, and why? I'd just been drunk and stupid, hadn't I? Too many unanswered questions. If she wanted to see me as her knight in shining armour, I wouldn't argue. How did Alexander Pushkin put it? 'Better the illusions that exalt us than ten thousand truths'. Suffice to say, if it contributed to my love life, I didn't mind if she thought I'd been protecting her. Deep down, I'm just a cad.\n\nI called Charlie's Cars and booked a minicab for half twelve. Thirty minutes should be plenty of time to get there, even in London traffic. It did mean I was going to be taking a two hour lunch break but I was in charge. RHIP.\n\nThe rest of the morning passed uneventfully. The car I'd booked was ten minutes late which caused me a little anxiety, but the traffic was light and I got to Bond Street with five minutes to spare. Just enough time to get some flowers from the barrow by the tube station. Ordinarily, I wouldn't have bothered but Shana was putting me on show and, if I was about to be embarrassed, I had no intention of being the only one. Twenty red roses should do the trick. \n\nHow come they don't sell roses by the dozen anymore? Its probably the whim of one of those daft sods in Brussels. Thou shalt not sell bent bananas, thou shalt not sell smoky bacon crisps and now thou shalt not sell roses by the dozen. By the time I'd finished my mental tirade against the bloody Sprouts, I was at Shana's shop. A few deep breaths to calm myself then I was in like Flynn.\n\nThere were a lot of customers inside, mostly business women if the number of suits was anything to go by. Everyone looked busy, including my lunch date, so I tried to look like just another customer. Like most men confronted with rack after rack of women's underwear, I wasn't entirely comfortable. It stems from not knowing where to look. Faced with one bra, usually full, we have no problem. Faced with hundreds, all empty, we get all embarrassed. Go figure.\n\nWhile I was concentrating on not making eye contact with any of the clientele, a very pleasant voice behind me said, \"Was Sir looking for anything in particular?\"\n\nI turned to face the voice and was immediately recognised. The bandaged eye being somewhat distinctive.\n\n\"You must be Allen. Yes?\"\n\n\"Alun\", I corrected. \"spelt A L U N. And you are Katherine.\" I read her name badge.\n\n\"Only to my mother, everyone else calls me Kat.\"\n\nShe was a perky little thing but if this wasn't the first Spring she'd seen without a school uniform on I'd be very surprised.\n\n\"Well Kitten, its a pleasure to make your acquaintance. Is Shana ready to go to lunch d'you think?\"\n\nKat beamed at her new nickname.\n\n\"I'll thank you Sir, not to try to seduce my staff.\" Shana's voice startled me. \"I'll be another few minutes. You can wait in the office or Kat can show you around. Sorry, must dash.\" As abruptly as she'd arrived, she was gone, hurrying back to her customer, who was emerging from a changing room looking less than happy. I turned back to Kat.\n\n\"Well Kitten, it seems you're to be my tour guide. Where shall we begin?\"\n\nKat lead me around the shop floor introducing me to three more of Shana's colleagues - Mary, Debbie and Elizabeth - between customers. I was just about to ask my guide to show me to the office, having met everyone, when Shana came back.\n\n\"Has Kat been taking good care of you?\" she asked, after kissing me. Nothing passionate mind you, only a peck on the cheek. As kisses go it was quite disappointing really, given our previous form, but this was her place of work so I let it pass. \n\n\"She's been wonderful. These are for you.\" I presented Shana with the roses. Kat smirked and winked at me then made herself scarce.\n\n\"Thank you, they're beautiful, but you really shouldn't have. I'll pop them in the office and grab my coat, then we can go get lunch. This way.\"\n\nI followed Shana into her office noting in passing that she was wearing stockings rather than tights. How did I know? Elementary, my dear Watson. Her skirt was too close fitting to hide the clips on her sussies. It was a datum I filed away for future use. \n\nI was still watching her bottom when she turned round and caught me. As my eyes - my eye - sprang back up to safer territory, Shana closed the gap between us. During the next thirty seconds I had the opportunity to make tactile confirmation of my earlier observation. Suspenders, definitely. We were up to par again in the kissing stakes too. \n\n\"I needed that. Thank you.\" Shana beat me to it. That was supposed to be the bloke's line. I rolled with the punch.\n\n\"Me too. Have we time for another before lunch?\"\n\nYou know I'm sure she must be able to breathe through her ears. I can't though, so I had to come up for air.\n\nIt took Shana no longer to apply fresh lipstick than it took me to remove mine and under a minute later we were walking arm in arm up Bond Street.\n\n\"Where shall we go for lunch then? Any preferences?\" This was her manor so I gave her the choice of watering holes.\n\n\"Unless you're particularly hungry, I usually just grab a sandwich.\"\n\n\"Is there a good pub near by?\" l was thinking of beer and bar snacks.\n\n\"Not a pub. I'll be reeking of cigarette smoke all afternoon. Come on, I know just the place.\"\n\nShana steered me into Aroma in West One, the shopping centre above Bond Street Station. These sort of coffee shops have sprung up all over London in the last few years and seemed to be this week's trendiest lunch venues. Consequently, there weren't any free tables and we ended up perched on bar stools at the counter. Deja vu. Shana felt it too.\n\n\"We always seem to end up on stools. First The Moon Under Water, then your kitchen, now here. D'you think we'll ever get to sit down properly?\"\n\n\"We sat down for dinner last Saturday.\" I felt an irrational need to defend our track record. \"And there's this coming Friday to look forward to. I'm sure we can find somewhere with tables. Burger King, maybe.\" I tried to steer the conversation towards plans for Friday.\n\n\"Last Saturday doesn't count. I was doing the cooking. I want to be waited on for a change. Where were you really planning on taking me on Friday?\" She declined to notice my first, admittedly absurd, suggestion.\n\n\"Dunno. If I told you I'd met this really nice girl I was crazy about, and I wanted to take her somewhere special on our first date, where would you suggest?\" Come on girl; give me a hint.\n\n\"How special? Just impress her? Y'know, 'Thank you for a lovely evening. We must do it again sometime.'. Or are we talking seduction? Candlelight, soft music, fine wine and breakfast to follow?\"\n\nI laid my cards on the table. \"I was thinking more in terms of neon lights, loud music, strong drink and brunch to follow. I wouldn't expect her to be up in time for breakfast.\"\n\n\"Brunch? Sounds promising.\" She had a naughty gleam in her eye. \"I'd take her somewhere like TGI's then, or maybe the Rock Garden. Don't get her too drunk though. She'll fall asleep on you.\"\n\n\"She did last weekend. She snores too. Ouch!\" Shana kicked me. \"I wasn't planning on getting her that drunk this time. Just tipsy enough to take advantage of.\"\n\n\"What sort of bounder gets an innocent girl drunk just to have his wicked way with her?\" Shana's expression was a study in mock shock.\n\n\"The same sort of bounder who'd warn her in advance so she can have her chastity belt ready.\"\n\n\"So you're a hero one week and a rogue the next? Or are you just showing your true colours at last? The latter, I suspect. Poor girl, to fall into the clutches of such a villain. I suppose she'll come to a sticky end, tied to some railway tracks, like Penelope Pitstop?\" She gave me a golden opportunity for double entendre which I ignored, not wishing to lower the tone too much further.\n\n\"Not railway tracks.\" I let Shana figure out where that was going. She blushed slightly. \n\n\"Cad! If I thought for one moment she'd listen, I'd warn this poor, sweet child to have nothing to do with you.\" Shana drew a line under this frivolous exchange. \"Are you going to be fit and well again by the weekend?\" she asked, without any hint of a vested interest.\n\n\"I'll be fine. My ribs aren't tender anymore and the stitches are due out on Friday afternoon. I'm going to Wimpole Street after I've walked you back, shopping for a suitably debonair eye patch, since I'll need one for a week or two.\"\n\n\"And very dashing you'll look too. But speaking of walking me back, if you've finished, I should be making a move.\"\n\nI weighed up the relative merits of half a brie and cranberry sandwich versus getting Shana back to work with enough lunch hour left for another snog. Predictably the sandwich lost. We left and, at a leisurely pace, wandered back to La Perla, pausing only briefly in a suitably secluded doorway.\n\nBack in the warmth of the shop, I was introduced to the two girls who had been at lunch when I'd arrived. Kat did the honours again while Shana went into the office to hang up her coat. After the briefest exchange of pleasantries I could get away with, I made my excuses.\n\n\"If you ladies will excuse me, I must ask Shana something before I go.\" So saying, I headed to the office, knocking and entering without waiting for a reply. Alerted by my perfunctory knock, Shana turned to face me.\n\n\"Alun, Kat put my flowers in water. Aren't they lov....\" Cut off in mid-sentence, she melted against me, wholeheartedly participating in her own ravishment. As I opened my eye again, retaining my hold on Shana, I caught Kat smirking through the open door.\n\n\n\"We're not alone.\", I whispered. Shana turned her head slightly to catch Kat's reflection in the mirror, then met my lips again with renewed vigour. I suspected she was marking her territory, and I very definitely approved of her method. \n\nThis time, when I surfaced, our audience had gone. She'd obviously got the message loud and clear.\n\n\"I really should be going now.\" I didn't sound very convincing.\n\n\"Now you've compromised my authority you mean?\" She was teasing again but I wasn't going to give in that easily.\n\n\"What? Just because I kissed you without waiting for an invitation?\"\n\n\"No. Because you didn't close the door first. Kat'll be taunting me about that for the rest of the week.\"\n\nI was prepared to concede she was right about that but so what?\n\n\"Who was giggling in the background when you called me this morning? Was it Kat perhaps?\" I tried to sound stern, authoritative.\n\n\"Yes.\" Shana's tone was cautious. Maybe she could see where this was leading.\n\n\"So its alright for her to hear you calling me Lover, which technically isn't true yet, but it isn't alright for her to know we kissed in your office, which she would have assumed was happening anyway, if I had closed the door? Or did I miss something?\"\n\n\"Typical of a computer nerd. Always so damned logical. Meany!\" She gave me an affectionate squeeze, which hurt my bruised ribs but not enough to make me wince this time.\n\n\"Meany?\" I was puzzled again. Shana seemed to have that effect a lot.\n\n\"Yes meany, being unfairly logical.\"\n\n\"Unfairly logical. I see. So you'd have respected me more if I'd let you get away with blaming me?\" This was too absurd.\n\n\"No. But your still a meany. Just you watch yourself Lover, I'll get my own back. You see if I don't.\" She sounded about ten. I was surprised she didn't say \u2018So There!' at the end.\n\nI relaxed my grip on her waist and kissed the end of her nose.\n\n\"I've really got to go now, Shana. Call me before Friday and we'll make some firm plans, ok?\"\n\n\"Ok Lover. I'll call you tomorrow night. Kiss.\" She raised her face to me. \n\nAfter kissing her goodbye I headed for the office door. \n\n\"Tomorrow night?\" I turned back at the door, just to confirm when she'd call. She laughed.\n\n\"Tomorrow night. Now go! Go on, shoo! I've got work to do.\" As I turned away she spoke again. \"And Alun\" She had my undivided attention. \"Thanks for lunch. It was good seeing you.\"\n\n\"You're welcome.\" And I was out of there. I waved goodbye to the girls in passing and set a course back to the tube station.\n\nOn Oxford Street I flagged down a black cab and went straight back to work. Lunch had taken longer than I'd predicted. The eye patch would just have to wait until Friday afternoon.\n\nShana and I were at that wonderful stage in a relationship when everything's gathering momentum and when we were together we just couldn't get enough of each other. It was reassuring that she seemed to feel this as ardently as I did. Rest assured, as we got to know each other, we would either find other reasons to be close or we'd drift apart. For now though, we were running on mutual attraction and we were loving every minute of it.\n\nShe certainly was a piece of work. The more I saw of her, the more I came to appreciate my good fortune in finding her. We hadn't made love yet but already I felt as comfortable around her, and as close to her, as I'd ever done with my previous lovers. \n\nHang on a minute, 'made love'? What happened to 'had sex' or even 'slept together'? It came as a shock to realise I had been thinking about making love to her. Nor could I pinpoint when I'd stopped thinking of it simply as sex. I'd have to be careful. It was too soon to be feeling like that. It could easily scare her off. No. Better keep a tight rein on those emotions, at least until we knew each other better. Besides, Shana was on the rebound from one obsessed boyfriend. The last thing she needed right now was another. \n\nBack at work, I concentrated on getting all my paperwork up to date. The world hadn't ended while I was at lunch. Things were ticking over nicely and most of the department had failed to notice my absence. Post-its on my PC mentioned a couple of calls I'd missed. Margot had rung to request a reprint of last month's MIS reports for the new Head of Accounts and my boss had rung up to see how we were coping without him. Both had been summarily dealt with by our ever diligent support team, alias Pete the BOFH (Bastard Operator From Hell - according to his favourite tee shirt). Margot would eventually complain that her printer was tied up all afternoon. Pete had queued her reprint directly to her desk thus saving himself a hike upstairs to deliver it, but that couldn't be helped now. Dave, our glorious leader had been given a glowing report on a smoothly running department, all of which goes to prove what I've always said, \"He manages best who manages least.\".\n\nI thanked Pete for his efforts and smoothed things over with Margot before she had a chance to bitch about it. Oh, and I set up a couple of meetings for the morning with the intention of touting for more work. It doesn't do to have programmers under-worked. They end up playing Solitaire all day. I made a note to crack the whip a bit more tomorrow.\n\nWednesday\n\nLast night passed uneventfully, as did my day at work. The only noteworthy detail being a call at the office from Steve, to confirm darts tomorrow night. I'd forgotten about that; thoughts of Shana had taken precedence. I said I'd be there.\n\nI went to Cotton's after work, for a gentle swim and another simmer in the Jacuzzi to loosen up. I saw Trish doing another aerobics class. We exchanged waves but she didn't come into the health suite afterwards so I was spared another inquisition. Its not that I'm secretive, nor is there anything between Shana and I that I wouldn't tell Trish. Its just that I prefer to choose what I tell people and when. Seeing Trish did remind me of one thing though. I'd have to discuss with Shana how we might arrange Friday night so that we'd get to meet up with Steve and Trish for a drink at least.",
        "There were two messages on the phone when I got home.\n\n\"Hi Alun, It's Trish. Seeing you at the sports centre reminded me. Are we going to meet this girlfriend of yours on Friday or what? Call me. Ciao!\"\n\nBloody hell! Give me a chance. I'm working on it.\n\n\"Hello Lover. Something's come up. Can you call me back. I'll be at work until eightish. Speak to you soon.\"\n\nI rang Shana's shop straight away. \n\n\"La Perla. Elizabeth speaking. How may I help you?\"\n\n\"Good evening Elizabeth, Its Alun, Shana's boyfriend. We met yesterday, remember?\"\n\n\"Of course I remember you. Do you want to speak to Shana? Only she's just serving a customer. Can you hold?\" \n\n\"Yes and yes. Thanks.\" I found myself listening to canned music for several minutes.\n\n\"Hi Lover.\" Vivaldi gave way to Shana. \"How are you?\"\n\n\"All the better for hearing you but what's so urgent it wouldn't wait 'til after work?\"\n\n\"I have some good news and some bad news.\" She already sounded apologetic.\n\n\"And I have to choose which to hear first?\" I deferred the inevitable.\n\n\"Its traditional.\"\n\n\"Ok then, give me the bad news.\" I steeled myself for the worst.\n\n\"I can't go out to dinner on Friday. Cleo, my boss, has got appendicitis so I've got to play hostess at our new line launch party.\" The worst happened.\n\n\"And the good news?\" What dock leaf did she have to take the sting out of this nettle?\n\n\"The good news is I've got an invite for you. If you don't mind, I'd like you to be my escort for the evening.\" She made it sound like I would be doing her a favour. How could I explain to her that any reason to spend time with her was a good reason? I took a crack at it.\n\n\"Mind? My dear, sweet Shana, I thought you were going to stand me up and instead I'm invited to a party. What's there to mind?\" I was relieved. This wasn't so bad after all.\n\n\"You'll come then?\"\n\n\"Of course I will. Where is it?\"\n\n\"The Hilton International, in Park Lane. Incidentally, its black tie, do you have a dinner jacket?\"\n\nThe Hilton? This was going to be a bit of a do, wasn't it?\n\n\"No, but I'll pop down to the West End and rent one tomorrow. I've still got to get an eye patch anyway.\" It would be another long lunch but so what?\n\n\"Would you like me to come with you? I can sneak out for a couple of hours tomorrow.\"\n\nWould I ever!\n\n\"Certainly, if you have time. I'd like that.\" I tried unsuccessfully to hide my enthusiasm.\n\n\"I felt sure you would. Until tomorrow then.\"\n\n\"Yes, I should let you get back to work.\"\n\n\"I'll call you in the morning. Goodnight Lover.\"\n\n\"Goodnight.\" It was my turn to blow a kiss down the phone line. I didn't expect a response from her, the shop sounded busy.\n\nNext, I returned Trish's call.\n\n\"Yeah?\"\n\n\"Steve. Alun. I need Trish. Is she there?\"\n\n\"You can't have her, she's my woman. On second thoughts, I'll swap you for Shana. Ow! What was that for? I was only kidding.\" This had become a three way exchange.\n\n\"Well you don't deserve either of us.\" I could hear Trish in the background. \"Give me the phone. Hi Honey. What's occurring?\" Trish turned her attention to me.\n\n\"Bad news I'm afraid. You won't be meeting Shana on Friday.\"\n\n\"You haven't had a tiff already have you?\" Trish was a natural pessimist when it came to my relationships.\n\n\"No, nothing like that. Quite the contrary. We're getting on like the proverbial house on fire. The thing is she's got to go to a business do and she's invited me along. Sorry to let you down but her boss is ill and Shana's got to cover for her. I only heard about it ten minutes ago myself and now I've got to go and hire a tux tomorrow.\"\n\n\"Don't apologise. You go and have a good time. I'm sure we'll see you both at some point this weekend. A tux you say? Is it a posh do then?\" \n\nShe was right of course. It was no big deal. Having settled that, she got down to the serious business of being nosy.\n\n\"Not really. Just a launch party at The Hilton for La Perla's new line.\" I tried to sound blas\u00e9. \n\n\"The Hilton? She's known you less than a week and she's taking you to The Hilton? She's brave. You better give me her number so I can warn her about your manners.\" Trish was indignant but only because she wasn't going.\n\n\"You'll do no such thing. And if you don't behave nicely, I won't introduce you to Shana, ever. I mean it.\" I blackmailed Trish into conceding the point. It was gratifying to win one occasionally.\n\n\"Well you two have a good time. You can tell me all about it when I see you. Anything else to report?\" She was gracious in defeat.\n\n\"Not really. Well nothing I can't tell Steve tomorrow night.\"\n\n\"Tomorrow? Oh yes, Ste did mention it. You're playing darts aren't you? Well if that's all, I've got a sulking boyfriend to deal with so I'll let you get off. Night.\"\n\n\"Night Trish.\"\n\nNot wanting to let Steve down on two counts, I found my darts and went down the pub for an hour's practice. I hadn't played for months and it showed. It wasn't as if I was concentrating on the game anyway, I was far too pre-occupied with my love life and the good things a certain young lady was doing for it.\n\nIt was weird but I never doubted for a moment that Shana and I would sleep together this weekend. Such surety is rare in my life and in this instance had removed any and all anxiety, leaving only excitement and anticipation. And just now, I was as excited as when, as a callow youth, I had fumbled open my first bra clasp. I trusted that this weekend I would acquit myself rather less ineptly than on that dimly remembered occasion. \n\nMy darts game, however, was a study in inept fumbling. I gave up and went home hoping the rest of Steve's team would be playing well enough to carry me. \n\nWhile getting ready for bed, I took another look at my present. The label said they were from Knickerbox. When I thought about it, it made sense: Shana probably couldn't afford the stuff she sold, even allowing for a staff discount. A fiendish plan started to form in the more Machiavellian recesses of my mind. It would require that I enlist Kat's help but she struck me as the mischievous sort.\n\nWith thoughts of Shana filling my head, I went to sleep and dreamt pleasant dreams about her.\n\nThursday\n\nI was up early, bright eyed and bushy tailed. The aches and pains of the last week had all but gone and the bruising around my eye was fading nicely. Once the stitches came out tomorrow, I'd certainly be presentable enough for high society. The scar was going to be very prominent though. It would be livid for months and, even if things didn't work out between us, would be a constant reminder of Shana every time I looked in a mirror. Not that I was particularly good looking before, you understand, but I'd got quite used to having an unremarkable, average sort of face. I'd just have to wait and see what impact my new distinguishing feature would have on my pulling power. Not cheating on Shana, of course, just a few test runs to assess its impact on my scoring chances. Just idle curiosity, honest.\n\nBy eight o'clock I was in the office being conspicuously busy so I could justify another long lunch. The morning passed without incident with only a brief call to Shana to alleviate the tedium. She wasn't there but she'd left a message: One o'clock, outside Covent Garden tube station. I was there on time. Shana was waiting.\n\nShe was looking at something in the window of Cecil Gee and had her back turned to me so I snuck up intending to surprise her. Juvenile I admit, but fun none the less. It didn't work though. Shana caught my reflection in the window and spun round just as I was about to grab her. Not wishing to waste the opportunity, I caught hold of her anyway. The obligatory exchange of body fluids ensued, during which we were jostled more than once by people trying to simultaneously pass by us and ignore us. Only the new age type touting the Big Issue openly stared. When he caught my eye he gave me that barely perceptible nod that signifies both respect and approval between blokes.\n\n\"You taste good. What have you been eating\" I was referring to the vaguely fruity aftertaste.\n\n\"Its kiwi fruit lip balm. I was early so I popped into Body Shop. You like it?\"\n\n\"Dunno. I think a second opinion may be needed.\" I wasn't being very subtle but she decided to play hard to get. She glanced around.\n\n\"No. I don't see anyone who might offer a second opinion. Sorry Lover.\"\n\n\"Please Miss. I'd like to volunteer.\" I tried my best plaintive little boy voice.\n\n\"Since there are no other candidates, I suppose you'll have to do.\" Shana contrived to sound disappointed, but the enthusiasm she exhibited during the ensuing taste test lent the lie to that. \"Well?\"\n\n\"Delicious.\" I wasn't actually referring to the lip balm.\n\n\"Well if we've settled that, would you like to let go of me so we can get you this dinner suit?\"\n\nReluctantly I released her and, hand in hand, we made our way to Moss Bros. \n\n\"So tell me more about this do. What exactly is it all about?\" I thought I'd better know what I was letting myself in for.\n\n\"Like I told you, its a party to launch our new product line. Most of the people will be fashion industry notables and hangers-on, with a few celebs to add glamour and lots of press. The highlight - certainly for you - will be the catwalk show. Not that having a dozen pretty girls parading before you in bits of lace would make up for me not being able to give you my undivided attention, but its not a bad consolation prize.\"\n\nModels? Catwalks? This could be fun.\n\n\"And what makes you think I'd want to ogle all those half naked models when I have you?\"\n\n\"You're male. There's only two kinds: men who ogle women and men who ogle men. You aren't gay so you must be lecherous. QED.\" Now who was being unfairly logical?\n\n\"I'm glad you think that. I'd hate to disappoint you. Alright I'll ogle the models but only because its expected of me.\"\n\n\"A fair compromise if ever I heard one.\" She didn't believe me for a minute but she didn't care either so that was all right.\n\n\"Anyway, what's all this about not having your undivided attention?\"\n\n\"Sorry Lover, but I'll be working most of the time. I'm afraid you'll have to share me with several hundred other people. I'm the hostess, remember?\"\n\n\"Well if it can't be helped, I suppose some of your attention is better than none,\" And there was always the catwalk show to offer diversion. Though I would never voice such an opinion.\n\n\"Here we are. Moss Bros. Lets get you all tuxed up.\"\n\nAs I'm sure I've said before, I hate shopping, in consequence of which I delegated the entire decision making process to Shana. The upshot of this was that a half hour later we were on our way back to the tube and I had a dinner suit for tomorrow. I told you women were better than men at this sort of thing. I rest my case.\n\n\"Thanks for that Shana. I'd have been all afternoon in there. What's next on your agenda?\"\n\n\"You're welcome. You'll look very smart tomorrow night. But now I'm afraid I'm gonna have to love you and leave you. I've got a million things to do this afternoon.\"\n\n\"I've still got to go and buy an eye patch so I may as well travel back with you.\"\n\n\"Oh! Thank God you reminded me! Kat made an eye patch for you. I've got it here somewhere.\" She was rummaging through her handbag. \"Here we are!\" Shana handed me a small bundle of tissue paper. I duly unfolded it to reveal a black velvet eye patch.\n\n\"Its perfect. You say Kat made this herself? She's very sweet to go to so much trouble. I'll have to call in and thank her.\" I was impressed. Kat was quite a seamstress.\n\n\"You can thank her tomorrow, she'll be at the launch. Didn't I say?\" Shana was full of good news.\n\n\"No, you didn't. Well tell her I'm very touched and I'll see her tomorrow night. I'd better be getting back to work myself then, now I no longer have an excuse to go with you.\" Kat's thoughtfulness had just ruined my plans for the next half hour. I'll forgive her though: she's saved me having to go shopping.\n\n\"I'll tell her. You know, I think she's got a bit of a crush on you.\"\n\n\"Really?\" I was flattered and made no attempt to hide my smugness.\n\n\"Now don't you go getting ideas, Mister. You can look but don't touch.\"\n\n\"Jealous of Kitten? Shana, you surprise me.\" I shouldn't have taunted her.\n\n\"Kitten?\" There was a shrill edge to her voice. I knew that tone, It was a danger signal.\n\n\"Shana, listen to me. You're the best thing that's happened to me in years. You're incredibly attractive, on every level, and I'm already a little bit in love with you. I have absolutely no intention of jeopardising what we have, and what more we will have in the future, for anything Kitten - Kat - has to offer. Whatever she's selling, I ain't buying. Have I made myself clear?\" I wasn't cross, just stern. Shana looked taken aback.\n\n\"Only a little bit in love with me?\" She picked up on the one thing I hadn't really wanted to say.\n\n\"Well we only met less than a week ago so I only know a little bit about you.\" \n\nShana threw her arms around me and gave me a hug. We didn't need to say anything more, We just stood and held each other for a few moments. It healed any rift there may have been between us.\n\n\"I really must go now.\" Shana sounded even less enthusiastic about the idea than I was. We'd got as far as the ticket barriers at the tube just in time. It was beginning to rain.\n\n\"I'm not letting you get away without a goodbye kiss.\" If people jostled us this time, I didn't notice. This kiss set the standard and on the newly revised scale of one to ten, our previous best was no more than an eight. I disengaged one hand long enough to slap her bottom, not hard but hard enough that she wouldn't mistake it for a pat.\n\n\"That's for holding out on me.\" \n\n\"But you weren't 'a little bit in love' with me before. It makes a difference.\" It was her turn to look smug.\n\n\"I suppose it does. Go on! Back to work before my resolve crumbles and I carry you off to some seedy hotel and ravish you.\" I let go of her and urged her toward the ticket barrier.\n\n\"I'll call you later.\" Shana volunteered as she went through.\n\nA thought struck me as she turned towards the lift.\n\n\"Shana?\" She turned back. \"I just thought. Are any of these models famous? I'm playing darts tonight and I want to wind Steve up.\" I thought it best to explain why I wanted to know. Shana smiled indulgently.\n\n\"Tell him you're going to meet Kate Winslet. That should get his attention.\" She was enough of a tease herself to understand (and fully approve of) my motives.\n\n\"But she's not a model, she's an actress.\" I was confused again.\n\n\"She's also on the guest list. Bye Lover.\" With that she turned and walked into the waiting lift.\n\nI got a taxi back to work. I was in a daze all the way across London but once safely ensconced in my office I thought things through.\n\nFirst off, I thanked my lucky stars Shana hadn't been spooked by my admission that I was falling in love. It would have been so easy to scare her off then and there but her reaction had been positive, very positive. I dared to hope she had been thinking and feeling the same as I: don't commit too soon. \n\nThen there was the party. Not only did it sound amusing per se, but I was going to be dining out for months on it. Kate Winslet! Steve would kill for a gig like that. Yes, I was definitely going to enjoy gloating to him. \n\nI was on a roll. Definitely on a roll. What was it Heinlein said? 'To enjoy the full flavour of life, take big bites.'\n\nA minor catastrophe commanded my attention for the remainder of the day. So long in fact, I only just made it to Steve's darts match.\n\n\"Hiya Mate! What's occurring?\" Steve was his usual, cheerful self.\n\n\"Buy me a beer and I'll tell you.\" Things had been going so well this week I thought I'd try my luck. Every winning streak comes to an end: mine was about to.\n\n\"Sorry Mate, but its your round. Last man here and all that.\" He had a point. The last man rule, instituted by Steve to promote better timekeeping, was sacrosanct. I did my duty. Or rather, Steve was granted custody of my wallet and got them in while I played darts and tried not to lose by too much. I was thoroughly trounced, a score that was likely to cost me another round at the end of the night under Steve's Rule Two: The lowest scoring team member gets them in. Supposedly, this rule encouraged practice but I suspect that, as Steve was by far the best player, it was just a ruse he'd dreamed up to get free beer. \n\nNow that I'd duly lost my singles game, I had some spare time before the doubles matches. It was time to wind up Steve.\n\n\"Mate, that was crap. Playing like that, even Trish could beat you.\" It was a low blow but Steve was right, and Trish's lack of ability at darts was the stuff of legends. \n\n\"Yeah? Well my mind's on other things I'm afraid. Like tomorrow night.\" I left it hanging. Steve took the bait.\n\n\"So what's this about a party at the Hilton? Trish said you had some do to go to with Shana.\"\n\n\"Its basically a fashion show but just for lingerie. Knickers and bras to you. Shana invited me because she thought I might enjoy...\"\n\n\"Perving!\"\n\n\"... meeting Kate Winslet, actually.\" I sat back and watched the effect this info had on Steve. He started with goldfish impressions: his mouth opened and closed repeatedly but nothing came out. Then came incredulity,\n\n\"Kate Winslet from Titanic? No way!\"\n\n\"Way!\" I fed him a little more line. \"She's on the guest list and Shana's offered to introduce me to her.\"\n\nSteve passed from incredulity to acceptance.\n\n\"You jammy bastard.\" Then he passed immediately into the final stage: evangelism. \"Lads! Cop for this. Tell 'em Mate.\"\n\nNow I had a suitably attentive audience, it was time for the full story. \n\n\"I'm going to a fashion show with Kate Winslet tomorrow night. My girlfriend's organising it.\"\n\nThe lads looked only moderately impressed.\n\n\"Tell them the best bit.\" Steve prompted.\n\n\"Its a lingerie show. G-strings and such like.\" I coloured the facts a bit, in the best tradition of the gutter press. My audience was now very impressed, judging by the ribald comments and suggestions. Steve meanwhile had gone all quiet and contemplative, When the Sun reader set had lost interest and gone back to playing darts, I found out what was on his mind.\n\n\"You don't suppose she'll need a car, do you?\" Steve was clutching at straws. I laughed.\n\n\"I suspect she has a chauffeur already. Besides which, you're not working tomorrow.\"\n\n\"I am now. 'Cos you ain't coming out to play, Muggins here has volunteered to work overtime. I could use the money anyway.\n\nTrish is disappointed. Not because I'm working, she's used to that by now, but she is dying to meet your new bird. You know what she's like. Any chance we'll see Shana on Saturday, so I can get a bit of peace and quiet?\" He was almost begging.\n\n\"I'll see what I can do about Saturday but tell Trish not to be so pushy. There's loads of time. I think Shana is going to be around for a long, long while.\"\n\n\"Really? This is serious then?\"\n\n\"Unless she turns out to be rubbish in bed, yes. We're definitely pretty compatible in every other way.\"\n\n\"Still haven't shagged her then? What's the matter? She sewn up your flies or something?\"\n\nAt least this time Steve believed me when I said we weren't sleeping together. I was thankful for small mercies.\n\n\"Nothing's the matter. Its just a timing problem. My injuries last weekend and her work this coming one.\"\n\n\"Speaking of your injuries, I saw Charlie this afternoon. He's well pissed off with his kid brother making a prat of himself over some tart - his words, not mine. Martin's gone back to York early though. Charlie said he sent him packing back to his poncy student friends Wednesday morning so I reckon you're in the clear. I told you it'd all work out. You've gotta learn to trust your Uncle Steve.\"\n\n\"Charlie's cool about it all then? No hard feelings? No recriminations for head-butting his brother?\""
    ],
    "authorname": "adam applebiter",
    "tags": [
        "love",
        "aggression",
        "hesitancy",
        "optimism",
        "bad timing"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/friday-night-alchemy"
}