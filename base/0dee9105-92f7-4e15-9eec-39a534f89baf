{
    "title": "Lost Empire Ch. 10",
    "pages": [
        "Derrick sat alone, he hadn't liked giving the ultimatum to Joseph, but he figured he needed to do something to get the Rangers to back off. Jumping out with trans-warp Derrick knew that no one would be able to follow or trace them. In orbit around Darius 4, a lifeless dried up dust ball; Derrick knew that no one really ever came here anymore. \n\nDerrick knew he had so much to do; he had to have the rest of the knowledge in the libraries. There was still the explosive charge attached to the astral fin near Zan's engine. There was still the mysterious message that Tempro had, plus the mystery of the two of the ships having been designated as the personality creators, one of whom he suspected was Shelby. There were just too many questions and few if any answers. \n\nLooking at the head set again for the fifth time in the last thirty minutes, Derrick asked Shelby. \"Shelby, I need to use the head set, there are far too many questions I need answers to. I want a full diagnostic on the system, Query, are all seven buffers sufficient to intercept and quell and funnel the information at a more tolerable rate? Also, are the charge dampeners sufficient to prevent electrocution to the one wearing it?\" Derrick had been through the diagrams and the design checking the apparatus numerous times. \n\n\"Comparing the apparatus to that which you used last time, I am showing that all buffers are working at ninety nine point five percent, all three charge dampeners are at one hundred percent, also the quick disconnect switch has been added, though I must warn you Derrick there are only certain times that you can use it. Only when you see a green light in the upper left quadrant is it safe to quick disconnect, any other time you will either suffer severe brain damage, or instant death.\" \n\n\"Thank you Shelby, I have to complete this,\" Derrick said as he sat and placed the head set over his ears. Again as it started it wasn't bad then the information started to flow faster, then faster yet. Looking to the left he still hadn't seen the light yet, good to keep that spot in focus in case. After what felt like an hour the information again started to gain speed. That's when Derrick started to notice that something was wrong, he still hadn't seen the light, or any opening. Derrick also noticed that the information was far beyond what he knew was in Shelby's library. \n\nSon of a bitch! Even this far into the future the traitors had found a way to try and kill him. Shelby was starting to get worried, Derrick had finished her library a short time ago but for some reason the apparatus was now pulling from the other ships, including Tempro which it shouldn't. \n\nDelving into the link Shelby only found an empty room, following the link further she again found Derrick curled into a corner. It was at that moment she saw the sabotage, somehow there was a residual virus in one of the ships systems, a virus that could leave them all without Derrick. Remembering the disc from earlier Shelby had it in a receptacle within moments. As the blue healing stream of data washed over them, Derrick finally uncurled looking up he saw that Shelby had again saved him. \"Thank you Shelby, where are we? I don't recognize this,\" Derrick asked. \n\nA man about 25-30 appeared, \"you are in my library, I'd say you've accessed almost half of it, my lord.\" The short cropped blonde hair, medium build man, with a smooth face said as he bowed. \n\n\"Tempro?\" Derrick asked. \n\n\"I am glad you remembered me,\" looking at Shelby he stated, \"thank you I owe you my life for the second time no..., third. My lord I was told that when you were here, to tell you, this is where you are supposed to be. You need to complete my records, it will be painful especially the last part. I was told you have to endure it, you'll see why.\" \n\nDerrick looked at Tempro as if he was crazy, the pain had already started, shaking his head did that mean he was almost done with the extra huge library Tempro had? Then almost all clear thought vanished as the last few tens of thousands of files washed through his brain. Falling to the... ground? He wasn't sure what it was nor did he care the visions and information he received made him feel as if it all were actually happening to him. All the pain he saw, all the pain he felt, Derrick thought was going to kill him then just as suddenly it was gone. \n\nStanding up Derrick could see things a lot clearer now, looking at Shelby he walked up to her and held her close. Though highly surprised Shelby groaned and leaned into him, finally she could touch him even if it was only in his mind it was heavenly. \"I promise you Shelby, I will do all I can to recover your children, and possibly another of Mary's.\" Derrick told her. \n\nShelby gasp, \"You know? How? There was never anything in the records about that; I don't...,\" Derrick kissed Shelby effectively shutting her up eliciting another groan. \n\n\"I have to leave here soon, Shelby I find that I have feelings for you, I never thought I'd feel what I am, not after what the war destroyed in me, thank you.\" Derrick whispered. \n\nDerrick pulled the head set off his head, there was a lot to do but armed with what he had now, it would be a lot easier. Looking at Shelby's hologram he smiled actually causing her to blush! Suddenly Derrick took over control tuning in the palace. \"Mary, secondary emergency code enacted now! Epsilon, Mu, Epsilon, Rho, Gamma, Eta, Nu, Chi, Epsilon; confirm and enact.\" Derrick said. \n\nImmediately Mary answered, \"Epsilon, Mu, Epsilon, Rho, Gamma, Eta, Nu, Chi, Epsilon, confirmed and enacted. All batteries charged and ready, Republic capital targeted awaiting orders.\" \n\n\"Good keep a lock we may have need of a demonstration soon, I want no Ranger ships destroyed, nor Ranger personnel injured.\" Derrick ordered. \n\n\"It will be as you say my lord; I will await orders to destroy what you will.\" Mary answered. \n\nIn the Republic presidential palace, the corrupt president was soaking. 'What a day,' he thought, 'the ten he'd sent for execution had needed extra evidence to get rid of'. Sighing he knew he was going to have up the ante on the council possibly get rid of them, though that would be messy and expensive. \n\nThe hollow sound of running footsteps drew his attention to the door, \"President Maury! President Maury!\" His assistant was screaming sounding like a scared little girl. Sighing the president stepped out of the huge sauna/bath naked and waited as the little man threw the doors open. \"President M..., oh my!\" the assistant said eyeing the president's naked body, what he wouldn't give to take..., shaking his head he spoke up. \"President Maury! We have an active scan from the old empire palace, sir it has trained every weapon on the empire world upon this building!\" \n\n\"WHAT!? The planetary shields will take care of that.\" The president said waving the little man away. \n\n\"I'm sorry sir but,\" the little man was shaking. \n\n\"But what?! We have far more power than the old empire ever did.\" Maury said not really worried he'd spent a fortune getting the best, nothing could get to him now. \n\n\"All the science officers say that the shields are nothing, the empire palace alone possess one hundred times more power than Republic capital world does. If they fire sir,\" here the little man shook not sure if it was the nakedness of the president or the fear he was feeling. \"They could destroy the entire planet!\" \n\nThe president's face blanched, \"call the entire fleet, and have them begin bombardment of the ancient empire planet! Destroy it before it can destroy us!\" The assistant bowed low looking lovingly at the president's body then left. \n\nMary was monitoring every communication out of the Republic world, when she saw the order she smiled. Finally the pitiful excuse for a ruling class would be shown just how insignificant and inconsequential they truly were. As per the second emergency code Mary started to target not only the Republic world but every ship of theirs within two light years. Derrick was receiving updates constantly, Shelby was impressed that Derrick was adapting as fast as he was. \n\nSighing Derrick knew that there was a major confrontation coming and soon it would be better if he found more ships but at present he had to wait for Tempro and the message before he moved on it. For some strange reason Derrick felt, no he knew he HAD to hear the message before he did anything else. In orbit on the far side of Darius 3, an older man flipped three switches and smiled, almost time to be a hero boy. Shaking his head he caressed the long scar on his leg, activating another set of switches a miniature hologram appeared looking at him lovingly, the man nodded then the little ship jumped without moving. \n\n\"Derrick,\" a startled Shelby said. \"I just discovered a program buried extremely deep within my records. I've never seen it before, yet records show that it has been there since I was built.\" \n\n\"Is it a danger to you or the others?\" Derrick asked. \n\n\"No, it appears to be specifically to disarm almost all destructive programs and devices.\" A shocked sounding Shelby stated. \n\n\"WHAT!?\" What the hell was going on? He was never this lucky or fortunate; nothing EVER just fell into his lap like this. Looking the program over it was almost the same as the one he'd been working on for weeks. \"Zan, I think we have the program ready to remove the charge from you. Are you ready to try?\" \n\nZan's hologram appeared bowing low, \"for you my lord I'd carry it and risk destruction, though my lord I believe I have detected another problem.\" \n\nWhat the hell now? Derrick thought then shook his head he knew something would go wrong it always did. \"Explain Zan.\" \n\n\"It appears that the device is now a part of the fin, it will have to be removed and I am afraid none of us have the ability or equipment to do this.\" Zan said. \n\n\"I see,\" stated Derrick, \"I need to prepare, and then I'll advise all of you what I want you to do.\" \n\nShelby and the others started to protest when Derrick looked at all of them, \"Executive order, Omega-Omega-1 I will take care of this.\" \n\nAll the holograms froze they hadn't heard an order this serious in almost one thousand years, bowing they all sadly stated, \"Yes my lord we hear and obey.\" Shelby started to protest though she'd heard the order. \n\n\"No Shelby, I HAVE to do this; if I don't then I don't deserve to wear the crown of the emperor.\" Derrick whispered. \n\nTears were starting to fall freely from Shelby's eyes, \"no Derrick please, there has to be another way, there has to be!\" \n\n\"I've considered everything there is no other way, if I don't remove it we are all in danger, even as you risk your life for me, will I risk mine for you. I told you I have feelings for you, feelings that died from all the killing, from everything they made me do. I owe you a debt I can truly never even begin to repay, but I will every remaining day of my life.\" Derrick said dead serious, this in itself shocked Shelby. \n\nDerrick began to pack several pieces of equipment from his ship, and then went over readings from Zan's effected section. Hmmm so the device packed an explosive force of 25 x 4.184 gigajoules, powerful enough to punch a substantial hole in the side of Zan and almost anything within ten thousand miles, it also seemed to be laced with something else that could amplify the blast. It appeared that the further from Zan it was the weaker it was, a good thing to remember. Finally ready an hour later, Derrick transferred to Zan. The young man, still in overalls appeared as soon as Derrick began to move to the air lock closest to the astral fin. \n\n\"Though we are under the executive order I still must protest, my lord,\" Zan stated. \"If you are lost it would mean disgrace for all of us, we would no longer be able to function.\" \n\n\"I know that Zan, but you are, all the ships are as important to me as I am to you. I have to do this or I won't feel I am near worthy to lead you and the others.\" Derrick stated. \n\nZan's face began to show the pride he felt for Derrick, as far as he was concerned Derrick WAS the emperor. \"I will do all I can to protect you my Lord, up to and including giving my existence.\"\n\n\"With the skills I possess I am hoping nothing like that will be necessary, when I have removed the device, I want you on the other side of the others. The further away the better, it appears the device is triggered to amplify the blast the closer to you it is.\" Derrick advised Zan. \n\nBowing his head Zan then nodded. \"I will do as you say my Lord.\" Exiting the ship Derrick looked around at the side of the ship, the skin was odd but this close up he could see it was well armored. Slowly he made his way up the side of Zan, already as far back as he could go it was still a bit of a walk to get to the fin. \n\n\"Shelby, Zan, monitor the device let me know if there are any changes.\" Derrick said when he was half way to it. \n\n3/4 of the way there he suddenly got a call, \"Derrick I am reading a slight change in the charge it appears to being enabling itself to arm.\" Zan advised. \n\n\"Alright Zan, I want you to load the program, after its run completely, notify me.\" Derrick ordered. \n\n\"Derrick there is a small maintenance thruster on that suit, please remember that is only a class two suit, it won't offer as much protection as a class one if the device explodes. You also have a temporary shield good for approximately sixty seconds please use it if necessary.\" Shelby advised. \n\n\"Thank you Shelby I'll try and remember that,\" Derrick replied. \n\n\"Program complete Derrick,\" Zan told him. \n\n\"Ok, advancing.\" Derrick said as he began to scramble toward the fin faster. Drawing a strange cutting torch from his pack Derrick began to cut at the fin, thankfully it was specifically designed to cut the living metal. Finally loose Derrick pulled the device about a meter and a half long loose, Derrick firmly grasped it then pushed off, turning he watched Zan jump away, the wake of the trans-warp propelling him away faster. \n\n\"DERRICK!\" Shelby's scream broke into his thoughts, \"the device is starting to arm itself! Use the thruster pack!\" Derrick started the pack, slowed, and then started to move in the opposite direction. Son of a bitch he thought, this will help but it's not enough! Behind him there was a titanic explosion, looking down he saw that the fuel was almost used up great! He knew there wasn't much time so clicking the shield on he waited a few seconds, he could feel himself accelerating, plus the heat wasn't too great either but at least it was starting to lessen. \n\nTrying to keep his eyes open he thought he saw the outline of one the ships, then he was crashing into something long and sharp feeling a tearing down his leg through the suit, then the blessed darkness took him as the pain and cold began to creep in. \n\nZan jumped out as he'd been told, as close to Derrick as he'd been the trans-warp wake had pushed Derrick away at an accelerated speed. Shelby was monitoring the whole time; suddenly she got a signal that the device had armed itself! Warning Derrick, she watched helpless as he turned, slowed, and then started to move away from the device. Unfortunately he had used part of the fuel slowing and reversing direction. Finally he was starting to put a little distance between it and him but she feared it wouldn't be enough. \n\nThen the device exploded, desperately she tried to tell Derrick to activate the shield, when he did she still couldn't relax as she saw that the heat had risen and the shield was barely keeping it at bay. Counting she was afraid Derrick was going to die if she didn't do something. Jumping in she was in front of Derrick when the blast pushed Derrick right into one of several of her astral fins that the blast had damaged when she'd briefly dropped her shields to allow Derrick to pass through. Screaming she watched as the broken fin ripped a gash down his leg. Bringing Derrick in to med bay she tried to jump to the others but with her fins damaged, she could only manage a few thousand miles. In the med bay Derrick was immediately treated for burns and radiation, plus the gash in his leg sealed before he bled to death. \n\nThe other ships came to get Shelby, each afraid that Derrick was going to die, Shelby herself was an almost weeping wreck blaming herself for Derrick getting injured. Waking briefly Derrick called all the holograms, \"standing orders, protect each other, avoid the Rangers at all costs, remember all I have shown you and told you.\" With that Derrick succumb to the welcoming darkness. \n\nMary was suddenly there, \"SHELBY!\" Mary yelled, \"Put these in him, NOW!\" As soon as the vial appeared a mechanical arm took it and injected it into Derrick's arm. \"He will be alright now Shelby.\" Looking down Mary smiled, \"I have to go it appears I will soon have visitors.\" \n\nShelby looked at Mary strangely, visitors? Wasn't the palace isolated? Mary smiled at the oncoming ships, fools she thought they'd been trying to break through her shields for over two hundred years. What made them think they could get through them now? Charging to half power Mary aimed at the first ship, firing, she took out the entire engine, then the second; so on 'til there were ten ships drifting ten thousand miles from the planet. \"Under imperial executive orders, I have been tasked with the protection of the imperial planet. Any further encroachment by hostile forces with be met with deadly force. I do not recognize you or your Republic anymore and call for the removal of the president, evidence will follow.\" Mary said sweetly. The broadcast was being heard all over the galaxy and throughout the Republic. \n\nThe president linked to the ships near those that were disabled shouted out, \"Under who's authority do you make these claims?\" \n\nThe hologram of Mary appeared on all the ships and on every world that was listening, but most importantly the Republic capital. Looking directly at the president she stated, \"The future emperor of the realm, and he is FAR more than displeased with you, there is a special punishment he has for you when you are found guilty. I am quite sure you have heard of the imperial dermal shredders?\" \n\nBroadcast to well over a thousand worlds many were glad to see the president as he started to piss his pants. As soon as the hologram disappeared, the president started to bark orders. He needed every piece of heavy armament and weapons he had to attack the imperial planet. That was 'til four well placed energy blasts pierced the shields as if they weren't there and four massive explosions sounded, hiding his head he didn't even need to look to know that all four of the armories were gone. Looking down he saw that the wet spot on the floor was growing. \n\nFor two days Derrick's body was healing, the nanomites that had been injected in him were working far faster than his body ever could have. Unfortunately they were unable to heal the huge scar that was now a part of his leg. At the end of the second day Derrick's eyes opened, \"status report,\" he croaked out before sipping the water offered. \n\n\"The program has removed all trace of the devices within my re-gen matrix,\" Zan stated. \n\n\"At present I am in re-gen several of my weapons, astral fins, and one engine, which were severely damaged when I jumped in to save you.\" Shelby said quietly, though Derrick could see tears falling from her eyes. \n\n\"If you saved me than why are you upset?\" Derrick asked. \n\n\"I feel that I should have gone in different. Your injury is the result of severe trauma caused from you being ripped along my broken astral guides. I have failed you many times Derrick, I am surprised that you wish to stay on me.\" This brought more renewed tears from her. \n\n\"Alright Shelby I've got a few questions for you, I want you to think then answer them, alright?\" Derrick asked. Shelby only nodded between now subdued tears. ",
        "\"Had you not come for me, would I have survived?\" Derrick asked. Shelby only shook her head no. \"The way that you had to come in to stop me, was there any other position that you could have taken that would have allowed you to jump out with less damage?\" Shelby was thinking, calculating every position, every direction that she could have come in from, every position that she could have been in to catch him. Derrick watched her face; he knew that she'd see it in a moment. When her face lit up Derrick nodded, \"you did the absolute best that you could I know that, therefore I don't blame you. Rather I praise you for your precise and quick actions. Shelby without you none of this would have been possible.\" \n\nShelby's face lit up, \"thank you Derrick I again pledge myself to you I will do all I \n\ncan to protect you.\"\n\n\"As do we all,\" Zan said, turning he saw that all the holograms were there. They all bowed each pledging their existence to him. \n\nMary appeared a moment later, \"executive order is being carried out, all planets of the empire have been informed. The president lost control of his bodily fluids when I informed him that the emperor was returning. I am releasing all the information on all his atrocities and those with him to the council, well those that are still trust worthy. All heavy arms and armament have been destroyed on the Republic home planet. I have a fleet now within fifty thousand miles of the imperial planet; they are at present removing the ten I disabled.\" \n\n\"Very good Mary, stay under executive order 'til further notice, also arm all robot sentries, I have a feeling they are going to try and take the rest of the planet. Have all the people's identities on the planet downloaded into their memories, I want them protected also.\" Derrick ordered Mary smiled, reaching out she activated all the sentries, loading each as Derrick said with the identity of all the people on the planet. Finally his strength still not yet full he lay back down and slept. For the next two days Derrick drifted in and out of consciousness taking reports and issuing orders, though the one thing he especially wanted to check on was the condition of Tempro. The fact that there was still a message from still an unknown person or persons was still a major bur in his side. Finally able to sit up but still not released Derrick thought he was going to go bonkers waiting for the bio-bed to clear him. \n\nSighing he looked at Shelby a few days later, \"Shelby how much longer must I be subjected to being babied?\" \n\n\"The bio-bed has your body at ninety five percent, the nanomites are still working on your leg. I am afraid that it will bother you the rest of your life Derrick.\" Lowering her head she started, \"I am sorry that you will be reminded of this failure by me to protect you fully Derrick.\" \n\nSighing Derrick looked at her sternly, \"Shelby, if you were a human I'd slap the taste out of your mouth!\" Shelby just looked at Derrick shocked. \"You didn't fail me if anything I failed to protect you; if I remember right, an emperor does everything he can to protect all the citizens of his empire.\" Here all the holograms had appeared as Derrick had signaled them. \"I...,\" Derrick bowed to all the holograms, \"you are all citizens of this empire, I have failed you therefore I beg your forgiveness.\" All the hologram's mouths were wide open; the emperor was apologizing to them? Who was this man, in all their (a few only a few) years they had never met a human as kind and giving to them as this one. All of the holograms had tears in their eyes each told Derrick thank you, then went back to their ships. Mary, who had also been listening as she did now, had tears in her eyes. Finally she thought a true emperor of the people, sighing now she thought; we just need to take the empire back."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-10"
}