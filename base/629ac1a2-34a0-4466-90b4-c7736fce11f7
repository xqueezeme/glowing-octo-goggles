{
    "title": "Ali's Art Ch. 13",
    "pages": [
        "SUNDAY JUNE 24th\n\nThe short flight between BWI and Newark brought me in late afternoon and I rode the monorail and train into the city. I was feeling nervous, but looking forward to seeing Ali again. It had been five long days since she returned to New York without me. Five days when I missed her more than I believed possible. Five days when I had thought hard about what I had done to upset her and what I could have done differently and why I hadn't been more aware of her feelings. \n\nI was desperate to patch things up between us, if that was still possible. I was willing to go along with any rules she wanted to impose. But I couldn't imagine living without her. Couldn't imagine not living with her. My head span with the possibilities and dangers.\n\nAs soon as I opened the apartment door I knew Ali was gone. Not just her absence from the space, the absence of her presence.\n\nI dropped my bag and went to her room. As soon as I opened the door her scent hit me, the raw essence of Ali, all the parts that made it up, the perfume she wore lightly dabbed along her neck, the soap and shampoo she used, the smell of her clothes and, most of all, that thing that made me hard every time I caught a hint of it, the animal smell of Ali, underlying everything, her womanhood, her being.\n\nI lifted the pillow from her bed and breathed deeply but she was not there.\n\nI opened her closet and the scent was strong, but there were gaps on the hangers offering proof of her absence.\n\nI walked out, turned around, lost. Some drawings were propped up in the work space and I went to them. She had started but not finished a dozen sketches, these not modelled from life. Their lines had been laid down fast and roughly, even then they captured a vibrancy I was still unable to match.\n\nAli was shown in the drawings... so was I... and my heart made odd patterings in my chest as I studied them. These were the real thing. Raw. Alive. Oozing sex onto the paper and from it directly to my solar plexus. I was immediately hard. \n\nEvery sketch showed what I had wanted to be doing since the moment I moved in with Ali. No - since the moment I grew old enough to know that women were different to men and what they could do with each other. I had always wanted her, always been afraid of scaring her off.\n\nThe images shouted for attention, demanding I look at them, my cock hard inside Ali's mouth, in her hands, between her breasts. Ali on her back as I mounted her. Ali on her knees... as I entered her from behind... as my cock parted the tight ring of her ass... her face a few quick strokes that caught the ecstacy she was feeling as I entered her.\n\nI slumped back on the old sofa we had carried from her old apartment, the two of us laughing as we struggled up the stairs with it, and stared at nothing. I had no idea where Ali might have gone - she could be anywhere at all. I remembered our conversations as the summer approached, talk of going away together, to Europe maybe. Ali wanted to see, to stand in front of, some of the great paintings of the world. We had spent hours in the museums in New York, but there were things we both wanted to see that meant skipping east across the Atlantic. Was that where she had gone?\n\nI stood up, meaning to get myself a beer even though I didn't need or want one, when I saw Ali's Apple, the lid raised.\n\nI changed direction and sat at her workspace, turned the laptop on. \n\nA password screen presented itself. Shit.\n\nI sat, looking at the blinking cursor, trying to think.\n\nI got up and walked around, stood looking out the window as the light faded and street lights came on all down the hillside.\n\nI returned to the computer and typed in: aligrah.\n\nToo simple. I knew it would be.\n\nI walked around some more. Then I remembered Ali telling me how she had always had a crush on my Mom.\n\nI went back and tried again: HeatherGraham, then heathergraham. No luck.\n\nI stared at the wall, stared at the flashing cursor, wondered if there was a lockout built in that would turn everything off if I got too many wrong guesses.\n\nI tried #eathergra#am, replacing the H with the # key. Nothing.\n\nFuck it. I got up and fetched that beer, now both wanting and needing it. It wasn't really progress, or if it was it was the wrong sort.\n\nI tried again, this time my heart fluttering as I typed: TomGraham... but the computer gave a sad beep and the cursor continued flashing.\n\nOK, again: tomgraham. No.\n\nThen: t0m_gra#am. My finger was shaking as I hit Enter.\n\nThe beep was different this time and the screen refreshed to show Ali's desktop.\n\nShit, I thought. I was Ali's password.\n\nI put my beer down and opened Safari. Google came up, and I saw Ali's gmail account was still logged in. I opened her mail, and there it all was.\n\nAt the top was a notification from her bank that a withdrawal greater than $500 had been made from her account. Duh.\n\nFour down was an email from Delta confirming a flight to Rome. The date was three days earlier. She had been in the air above the Atlantic, carried to Italy, while I had been house sitting and wondering if I was going to call Crystal and ask her over again. That brief, wild bout of sex no longer seemed a fair exchange to me, and I realized there was only one woman I wanted, only one woman I had ever wanted. And she was in Italy, four thousand miles away.\n\nI returned to google and idly looked up international times, saw it was now after midnight in Rome. Would Ali be asleep, or still out around town? Would she be alone? Would there be a beautiful dark haired Italian woman sharing her bed?\n\nI clicked on Ali's bookmarks, scanned down through them, found her banking details and clicked it.\n\nThe log in screen appeared.\n\nI tried the same password and was allowed entry. I would have to tell her about that. But then, if I did, she would know I had been searching through her private files.\n\nI clicked on recent transactions. There was the payment for her flight, and it looked like she had flown Business class. Then, a transaction for a hotel, a restaurant, some minor charges, one withdrawal of \u20ac600 from a cash point in Rome.\n\nI made a note of the name of the hotel, logged out of her account and went across to my own laptop.\n\nThere were no direct flights to Rome until eight the following evening, but I found I could catch a flight out of JFK at 4 a.m. which would take me to London, then a connection to Rome with only an hour layover. I booked both flights, one way, closed my laptop and went to pack.\n\nWhen I was ready I sat down and called Ali's cellphone. It rang seven times then went to voicemail.\n\n\"Al, it's me. We need to talk. You know we do. Call me.\"\n\nI hung up, got another beer and drank it, then called Ali's phone again. This time it went straight to voicemail - her phone was turned off.\n\nI tried again, same result.\n\nI knew I should try and sleep and went through to the bedroom, but I had just stripped off my shirt when there was a knock at the door.\n\nI went out, peered through the spyhole to see Sandy standing outside. I opened the door and she grinned, came in and kissed me on the mouth.\n\n\"Good vacation, Tom? Is Al around, I really need to talk to both of you.\"\n\n\"She's not here,\" I said.\n\nSandy walked past me, sliding her arm around my waist as she went, letting is slip off me as she moved on. Under other circumstances I would be wondering how long before I had my cock inside her, but tonight that didn't seem important.\n\n\"Will she be back soon? Something's come up, and you both need to talk it through.\"\n\nI turned and followed her. She walked to the fridge and got herself a beer, popped the cap and took a mouthfull, her long neck working as she swallowed.\n\n\"She's... uh, she's gone... I don't know when she'll be back.\"\n\n\"Gone?\"\n\nI nodded.\n\nSandy studied me. \"You two had a fight, Tom?\"\n\n\"I don't know,\" I said, and heard my voice break a little. Sandy heard it too and came across to me, drew me into a hug.\n\n\"Tom... that's not possible... you two are so meant for each other, you know that.\"\n\nI tried to laugh. \"Yeah. Me and a raging dyke.\"\n\nSandy hugged me tighter. \"No - yeah, OK, I know she likes girls, but I've seen the way she looks at you, the way she acts around you. The way you act around her, too. You two are gonna be a couple one day. You already are, you just don't know it yet.\" \n\n\"She's gone, Sand,\" I said, and my tears came now, great sobs shaking my chest and I put my face down into her hair and let it all go.\n\nShe held me, stroking my shoulders, murmuring nothing as I let the emotion out. I hadn't been aware of how tight I had been holding everything inside, how much I had been holding back.\n\nFinally I stopped and stood back, looking down at Sandy's beautiful face.\n\nI wiped my arms across my eyes, sniffed.\n\n\"Sorry, Sand, this isn't what you need.\"\n\nHer face looked so sad it almost started me off again.\n\n\"You love her so much,\" she said, and I could only nod, not trusting myself to speak. Then she smiled. \"But it's OK, Tom, because she loves you like that too. Don't you see it? Doesn't Ali see it?\"\n\nI shook me head. \"I don't know.\"\n\nSandy led me across to the sofa and sat beside me. \"Tell me what happened...\"\n\nSo I did. I told her about the wedding, about our night in the boutique hotel (most of it), about our time in my old house, about Candy, about some of what went on with the three of us. Sandy sat holding my hand, listening patiently, and when I had finished she sighed deeply.\n\n\"You two were going to do it eventually,\" she said. \"This has just brought it on faster. I guess she was ready a little before you. Or she was ready and you were distracted with this Candy. Men,\" Sandy said. \"Sometimes you're so fucking dense!\"\n\n\"I've been ready for years, Sandy. Ready for her since... I don't know, it seems like since for ever.\"\n\n\"And she has been too, I think. Why the fuck didn't you just jump on each other straight away I don't know.\"\n\n\"I've fucked it up, Sand. God, I've fucked it up so much.\"\n\nShe shook her head. \"No. She'll come back. She can't stay away.\"\n\n\"I know where she is,\" I said.\n\n\"You do?\"\n\n\"She's in Rome. I found her flight confirmation, I even know where she's staying. I'm booked on a flight in...\" I glanced at the clock, \"In five hours. I'm going to find her.\"\n\n\"Good.\" Sandy squeezed my hand. \"Are you OK, Tom? Do you want me to stay?\"\n\nI laughed softly. \"Not a good idea, Sand. Not right now. Thanks though.\"\n\nShe shrugged as though it meant nothing.\n\n\"You wanted something,\" I said. \"What did you come here for?\"\n\n\"I don't know what to do now,\" she said. \"I've got this stuff...\" She reached into her bag and pulled out a large envelope, held it as though she didn't know whether to give it to me or not.\n\n\"What stuff?\" I asked.\n\n\"I'm not sure you're in the mood for this, Tom. It's business stuff. Important business stuff. And it needs the two of you.\"\n\nI laid back against the cushions. \"Tell me anyway, Sand. I need to think about something else.\"\n\nShe looked at me, her bright blue eyes probing, then handed me the envelope.\n\n\"You've had an offer for the website business, Tom. A good offer. A very good offer.\"\n\n\"Offer?\" The words went past me, devoid of meaning.\n\n\"Someone wants to buy it. In fact, there are three separate offers. I've been dealing with them with Tu all week, playing one off against the other.\"\n\nI pulled some papers out of the envelope, stared at them blankly.\n\n\"I thought you said this might happen in a couple of years. Why so soon?\"\n\n\"We've been growing real fast, Tom. You know that. Fast growth gets noticed out there.\"\n\nShe started to pull papers out of the pack but I shook my head. I couldn't cope with this now.\n\nGive me the bullet points, Sand.\"\n\n\"OK. There's only one that matters. Fifteen million dollars.\"\n\nI stared at her. \"What?\"\n\n\"Fifteen million dollars. That's the offer you have in your hands. For the website. It's a good offer, Tom, and you and Al will still be involved if you want. They want you to continue producing work, but they have big plans...\" She stared at me. \"Could you let it go?\"\n\nI stared back. \"Sell it?\"\n\nShe nodded.\n\n\"For fifteen mill?\"\n\nShe nodded again.\n\n\"What's your share, Sand?\" I asked.\n\n\"Seven-fifty thou,\" she said. \"For each of us. Jack and I come out with one and a half million. You and Ali would walk away with six mill each.\"\n\n\"Fuck... I guess you two could stop saving for that house.\"\n\n\"It's a good offer, Tom. A very good offer.\"\n\n\"What should I do, Sandy?\"\n\nShe looked at me. \"I can't tell you what to do, Tom. You really do need to talk about this with Ali. I can't decide for you.\"\n\n\"Would you take it?\"\n\n\"If it was me, in your situation, yes.\"\n\n\"And if we said no, you and Jack and Tim and Tu get nothing.\"\n\n\"We'd still get paid. But no, we get nothing.\"\n\n\"I don't want that, Sand.\" I looked at the paper in my hand. \"What do I have to do with these?\"\n\nShe took them from me gently. \"These are mostly terms, details of the deal. All you really need to do is sign on the last page of each prospectus.\" She flipped one copy open and found the last page, turned it for me to see. \"The rest of us have signed, but it needs both you and Ali to agree as well.\" \n\nI saw their signatures were already inked in, dark blue ink from a fountain pen. There was space for my signature, and Ali's.\n\n\"You need to sign both copies and get them back here... within ten days.\"\n\n\"Ten days,\" I said.\n\n\"From last Friday,\" she said.\n\n\"So I've got until...\" I couldn't work it out, my head felt like it was full of fudge.\n\n\"Until Tuesday July 3rd. You have to have these signed and back here before the holiday.\"\n\n\"Of fuck...\" I looked around, searching for something, anything that would help me make a decision. There was only Sandy. \"What do I do?\"\n\n\"Find Ali,\" she said.\n\nI nodded. It made sense.\n\n\"And if she's still pissed at me?\"\n\n\"Just tell her about the offer. This is business, Tom, not love. Tell her about it and decide what you both want.\"\n\n\"God, I need to sleep,\" I said. \"I'm catching a plane in a few hours, and I can't think.\"\n\n\"Sleep then,\" she said. \"I'll stay until you have to go.\"\n\n\"It's OK,\" I said. \"You don't have to do that.\"\n\nShe laughed. \"Jack knows I'm coming here. He's not expecting me back till the morning. I expected you and Al to be home. I expected to get myself deliciously fucked again.\"\n\n\"I'm sorry,\" I said. \"I don't think I can...\"\n\nSandy laughed again. \"I don't expect you to. But I'd like to stay, so you're not on your own. Is that OK, Tom?\"\n\nI looked at her. \"Thanks, Sandy.\"\n\nWe lay beside each other in my bed, both naked, holding each other, and I was surprised to find that my cock behaved itself. Sandy's soft skin slid against mine as she moved beside me. We kissed a little, then she cradled me in her arms as I tried to sleep.\n\nAt two a.m. I was still awake. Sandy was breathing deeply, and I slid quietly from the bed and tiptoed through to the living room.\n\nMy bag was already packed. I opened the top and slipped in the papers and Ali's laptop.\n\nI dressed and left without going back into the bedroom.\n\nMONDAY JUNE 25th\n\nA yellow cab took me to JFK and I picked up my ticket, checked in and cleared security quickly.\n\nAt four-ten we left the ground. At five sunrise flooded the windows and I pulled the shade down, lowered my seat and slept for a couple of hours until the stewardess woke me for breakfast.\n\nI landed in London at ten New York time, four p.m. London time, and by five I was in the air again heading for Rome.\n\nAgain the time changed, and by the time a cab drove me through narrow streets and dropped me outside the hotel I last knew Ali was in the time was after ten p.m. I had spent almost the entire day high in the air, had slept hardly at all in the last thirty-six hours and was dead on my feet. Despite my anxiety, I knew it was not the right time to see Ali.\n\nAs I approached the reception desk a young woman looked up at me and smiled, said in perfect English, \"Can I help you, sir?\"\n\nI guess I looked American.\n\n\"I know it's late,\" I said, \"But do you have a room for tonight?\"\n\n\"A moment, please?\" She consulted a screen below the desk, tapped at keys, then looked up, smile in place. \"We have a vacancy. For one night only?\"\n\n\"It may be longer. I'm not sure yet.\"\n\n\"That's perfectly fine, sir. You can let me know in the morning if you wish to extend your stay. If I could have you credit card and passport, please?\"\n\nI handed them over, not caring how much the room cost.\n\nI saw her look at the passport, look up at me. My stomach fluttered. She recognized the name, I knew she did. I should ask have asked her then, but I didn't. Instead I waited, exhausted, as she swiped my card, recorded my details, and handed me a key card.\n\n\"Enjoy your stay, Mr. Graham. I'm afraid the restaurant is closed at this time, but you can call for room service until midnight.\"\n\nI thanked her and took the elevator to my room.\n\nI was hungry, but didn't call down. Instead I stripped and showered and lay on top of the bed. After a moment I got up and opened the windows to let the sound of the night drift in, lay back down and drifted off to the sound of footsteps on the cobbled square below, and soft voices speaking Italian.\n\nTUESDAY JUNE 26th\n\nI woke late, bars of sunlight split by the closed shutters forming horizontal lines across the floor and the foot of the bed. My feet felt warm where the sun fell across them and I rolled out of bed, showered and dressed in the only clothes I had with me, the ones I had taken off the night before. First thing I needed to do was buy more, a bag, and then track Ali down.\n\nIt was gone 11 by the time I made it down to the reception desk. The same pretty girl as the night before was still on duty and smiled at me as I approached, her white teeth perfect against olive skin.\n\n\"I believe a relation of mine is staying here,\" I said. \"Alison Graham. Would it be possible to put me through to her room?\"\n\nFingers tapped on keys, her eyes downcast at a hidden screen. Her brows pulled together in a frown, her mouth turning down.\n\n\"Miss Graham. Si. She arrived five days ago, but I am afraid she checked out early this morning.\"\n\n\"This morning?\" I said.\n\nThe receptionist nodded, her expression seeming to say if she could do anything to change the situation she would.\n\n\"Did she leave any forwarding address?\"\n\n\"Let me check...\" her fingers flew again. \"I am sorry, no, nothing.\"\n\nShe was good. I believed her completely.\n\nI thanked her and instead of leaving to shop as I had planned I returned to my room and booted up the laptop. I had written all of Ali's details down.\n\nI had to phone downstairs for the wi-fi login, then opened Ali's bank account.\n\nThere was a transaction from the previous day showing she had eaten in a restaurant in Rome. Nothing yet for today. My body trembled with frustration, and no matter how much I told myself I had to wait I wanted to rush off, to do something, even if it was pointless.\n\nI logged off and made myself leave the hotel. I spent until 1 a.m. shopping. I bought new shirts, pants, underwear, bathroom kit and a wheeled suitcase to pack it all in. I would have shopped for longer, distracting myself from my worries, but at one o'clock the shops began to close. The cafes and restaurants filled up, but all the shops turned over signs that said \"torna alle 4 p.m.\" so I stopped at a cafe on a small square and ordered beer and pasta that I failed to taste.\n\nLater I took my new purchases back to the hotel, smiled at the receptionist and once in my room turned the laptop back on.\n\nSignals bounced from Rome to a server somewhere in the States, found information and bounced the answer back to me.\n\nThere were three new transactions on Ali's account. The first showed her checking out of the hotel. The second was for a hire car, the third for gas, only an hour ago at a service station south of Rome.",
        "I pulled up google maps and typed in the gas station town. It was in Capua, a small town just off the A1 highway linking Rome to Napoli. Was that her destination, or would she be traveling on, further down Italy, maybe to Sicily?\n\nAli's bank details were still open in another tab and I hit F5 to refresh them. Maybe it was meant to be, it sure felt that way, as a new transaction came up showing a charge to a new hotel. I opened another tab and typed in Hotel Miramare Napoli and a website came up. I skipped the intro and watched as a scrolling view displayed a plush reception area before being replaced by the dining room, terraces and bedrooms.\n\nThere was a link for online reservations and I clicked it and booked a room.\n\nThe receptionist was really good at her job and looked genuinely sad that I was leaving so soon.\n\nI felt myself following in Ali's footsteps as I booked a car and then drove through Rome to pick up the highway south.\n\nThis time I would not make the same mistake.\n\nIt took me three hours to reach the hotel on the sea front, another fifteen to find somewhere to park and check in.\n\nThis time it was a man, dark suited and dark haired, whose English was as perfect as mine, maybe better.\n\n\"I'm hoping you can help me,\" I said. \"I believe my cousin is staying with you. Alison Graham? Would it be possible to put me through to her room?\"\n\nHe glanced down at his own computer screen, made a good show of masking his surprise.\n\n\"We have a reservation for a Signora Graham, but it appears she has not checked in yet. Would you like me to call you when she arrives?\"\n\nI felt my shoulders relax. \"Great. Just call my room.\"\n\nHe nodded. \"Certainly, Signore. Would you like a porter to help with your bags?\"\n\n\"I got it,\" I said, and lugged my new suitcase upstairs.\n\nI had paid extra for a sea view and stood on the small balcony watching boats in the bay. The temperature was in the nineties, humid, only a soft breeze taking a faint edge off the heat.\n\nI stripped to my shorts and lay on the bed, dozing, waiting for a call.\n\nWhen I woke the light had gone from the room. I walked back onto the balcony, the cool evening air feeling good against my body. Lights glittered all along the seafront and I could hear cutlery and glasses chinking coming up from a wide terrace below me. I realized I was standing in just my shorts and stepped back into the room.\n\nI dialled reception and asked if Signora Graham had arrived yet and was told she had not.\n\nI opened the laptop and logged into Ali's bank account.\n\nTwo new entries showed that she had booked a ferry crossing from Napoli to Ischia, the second a payment of \u20ac4,200 translated into dollars with a terse description saying \"Ischia Villas\".\n\nShe had changed her mind. It was impossible for her to know I was chasing her down, but it almost seemed as though she was trying to throw me of her trail.\n\nI swore and ran a shower, stood under the warm spray, letting the water beat against my shoulders. I leaned against the tiled wall, head down, thinking about Ali. Wondering what she was doing at that moment.\n\nI pictured her eating in a small cafe. Pictured her swimming in night cloaked sea, sparkling phosphorescent plankton dripping of her body. Pictured her like me, standing in the shower, water cascading over her perfect body, caressing the folds and dips and secret places.\n\nI felt myself growing hard, kept leaning against the wall, felt myself grow harder, the more I tried to ignore it the more images of Ali came to me, Ali naked, Ali semi-clothed, Ali fully clothed in the silk dress she wore at the wedding, the material clinging against her.\n\nMy cock ached, standing almost vertical, water beating against me.\n\nOn the morning Ali left the previous week I had made love with Crystal once more, then made some excuse and did not see her again. I had not had sex or made myself cum in over a week. I couldn't remember the last time that had happened. Not since moving to New York. Even when Ali was not teasing me, when Sandy was not sharing herself with me, when sweet Tu had not been around to make love with, I had jacked off at least once a day, constantly aroused at being around Ali and her friends. The thought of Ali and another beautiful woman just feet away from me was too much and I lay at night hearing the occasional gasp and cry from the other room, my cock in my hand, holding myself back until I could stand it no longer, then letting loose a torrent of semen.\n\nI thought of Ali constantly displaying herself, deliberately showing me a breast, the side of her hip, leaning forward so her robe rose up to reveal her perfectly shaped ass, her tight, shaved pussy nestling between her thighs.\n\nI shut the water off and stepped out of the shower, toweled myself dry, avoiding my aching erection. I lay on the bed, slightly damp, and tried to think of something else, tried to keep my hands at my sides. But all I could think of was Ali. In the hotel room after the wedding, both of us naked, sweating, Ali humping against me, pretending to fuck my ass and I had wanted her to. If she had possessed a cock at that moment I would have given myself to her completely.\n\nI remembered Ali in the bath, draped against me, her budded asshole pressing against the head of my cock and the feeling I needed to push, knowing that she wanted me to, and I wondered why the fuck we hadn't screwed each other years ago, why we hadn't been screwing all year, because we both wanted it, both ached for each other.\n\nA sudden image filled my mind, of when I had first arrived in New York, of Ali and Maggie naked, making love to each other on the big old sofa. Maggie's large breasts swaying. Ali lying between her legs. Maggie holding my cock the second time I returned and letting me cum over her.\n\nI got up and turned the shower back on, swung the control hard over to cold and stepped back under, gasping at the shock, stayed there until my cock wilted and shrank. I stayed under the water a long time, shivering when I came out. \n\nI lay on the bed and finally slept, but my dreams were troubled and I kept waking, hearing people below, hearing boats on the water, the far distant sound of wires snapping in rigging.\n\nWEDNESDAY JUNE 27th\n\nThe next day I took the ferry and signed into a tiny hotel in Lacco Ameno. Ischia was a small island, but Ali could be anywhere, and even a small island was enormous when I was looking for one person.\n\nAs another day slipped into evening I sat at a restaurant picking at food I didn't want to eat, drinking more wine than was good for me.\n\nI stared at people in the square without really seeing. And then I did see. I saw Ali.\n\nShe walked across my line of sight and it could be no-one else, although at first I was confused because she had cut her hair, cut it really short. It had to be her. She was on this island. It looked like her, apart from the hair.\n\nI stayed where I was, didn't call out, just watched as she strode across the square and took a seat in a restaurant on the other side.\n\nI felt confident she wouldn't see me. I was tucked into a small table in a back corner, the sun would be directly into her eyes, and she was not expecting to see me.\n\nShe spoke with a waitress, drank some cold white wine and I continued to watch as she waited for her food came.\n\nShe was maybe a hundred yards from me, small with distance, but it was as if my vision was magnified. I couldn't stop watching her. My own food went ignored. My own drink untouched.\n\nI studied her, trying to interpret her body language. She seemed relaxed, but not quite herself, not the Ali I knew, but I couldn't put my finger on the difference.\n\nShe wore a light skirt and scooped top. Her skin was pink from the sun, just starting to turn brown.\n\nA man approached her from one of the other tables, and I watched as she expertly brushed him off.\n\nThe waitress returned and took her plate, stood chatting for a while, but Ali wasn't interested in her either.\n\nI slipped my phone from my shirt pocket and pressed the speed dial for Al. She was too distant for me to hear, but I saw her posture change and she reached in her bag and pulled her phone out. She stared at it, obviously recognizing my number. Distance cloaked her face and I couldn't read any expression.\n\nHer voicemal cut in, as I knew it would, and I tried to think of something I wanted to say. Thought about what Sandy had said.\n\n\"Al... I know you don't want to talk to me, and I don't really know why, but I want to tell you that I love you. Not like my ditzy lesbian cousin, either. I love you with my soul and my body. Call me. Please.\"\n\nUnaware of my message, she ordered another glass of wine and sipped it slowly as the sun dropped lower. Shadows crept across the square, slowly drawing a line over the cobbles. When the line reach Ali's terrace she finished her wine and got up, left money on the table and walked back through the square.\n\nI dropped euro notes on my table and followed her. She went down a side alley and came out into another square with parking, where she went directly to a small Fiat. It was lucky I had left my own hire car in the same square. Parking opportunities were limited.\n\nI turned away as she drove past, then sprinted to the car and drove after her.\n\nIt was easy to follow. Her car was bright yellow and freshly washed. All the local's cars held a covering of summer dust.\n\nShe drove up through the town, weaving slowly along unfamiliar streets, then headed north west. We passed through two small villages, then started to drop down, back towards the sea.\n\nOff to my right lay the Mediterranean, ahead dry hills, houses and villas tucked in all the flat spots.\n\nAli's indicator flashed and she slowed, turned down a narrow track toward the sea.\n\nI pulled up before the turning, got out and stood beside a boulder, watching flashes of the yellow car as it took the track, its progress easy to see by the plume of dust it threw up.\n\nShe disappeared and failed to re-appear. I waited. Then I started down the track on foot.\n\nI passed a couple of small villas, then turned where Ali had disappeared. The track rose up. At the crest the sea appeared, close, and off to the left a small villa perched almost on the water. There was no beach, no other houses, just dark blue water lapping gently as dusk merged into full night.\n\nThe windows cast light out onto the rocks and the sea.\n\nI felt safe, protected by the dark, and walked silently down until I was almost at the water and could look back into the villa.\n\nI saw Ali move past and my heart fluttered in my chest. For a moment it was as though she was projected on a giant screen, striding through the frame, slim and lithe, only her newly shorn hair throwing the image askew in my mind.\n\nShe disappeared, then returned to stand looking out through sliding glass doors. It felt as though she stared directly at me, her face shaded, light framing her figure, but it was almost full dark now and I knew she would see only the faint illumination out over the sea.\n\nShe stood for a long time, resting her forehead on the glass, her expression hidden. Finally she turned away and was lost from sight.\n\nI remained where I was, waiting, but she did not reappear.\n\nI looked around, searching in the dark for somewhere to sit, moved, feeling around, and found a curved rock set into a small cliff face. I settled into it, finding the warm rock comfortable, cradling my back and shoulders. I laid my head back and looked up at the sky, deep violet, scattered with bright stars. Staring upwards the top of the cliff cut my view to the east, but a glow showed where the moon had risen.\n\nI watched the lighted windows, continued watching until the light died. Somewhere inside the small, neat villa Ali would be getting into bed. I had no idea what I was going to do, how I was going to approach her. Sighing deeply I closed my eyes, just for a moment.\n\nTHURDAY JUNE 28th\n\nWhen I opened my eyes after what I believed had been only a couple of minutes it was full light. Obviously the effects of my frantic search for Ali had caught up with me.\n\nI lay in the shade of the cliff. Sunlight poured onto the small villa. I lifted my wrist and checked my watch. God! It was almost 9 a.m. But I was comfortable, the mild Mediterranean air caressing me, so I stayed where I was, letting the day grow older, and after a while the patio doors opened and Ali stepped out. She wore a robe and sandals - not the silk one she wore at home, some faded blue towelling robe that probably came with the villa.\n\nShe stretched, lifting her arms high, then strode across the rocks to the water.\n\nI was off to one side, still shaded beneath the cliff, and she would not expect to see anyone.\n\nWhen she reached the water she untied the robe and let it drop. Underneath she was naked. Stepping out of her sandals, she trod carefully to where the sea lapped against the rocks, looked down and dived in. The water must have been deep, because she stayed down a long time before surfacing fifteen yards from shore.\n\nShe flipped onto her back and stroked lazily away, turned over again and swam more purposefully.\n\nThe clear water sparkled against her body, trailing down over her back and buttocks. I stared, feeling my cock responding in my pants and feeling bad for it, but unable to stop myself reacting.\n\nAli swam out until she was a tiny speck, then turned and parallelled the coastline, disappearing from view behind a headland.\n\nI waited. Fifteen minutes passed and then she came into back view, close to shore now. She swam hard straight for the rocks and pulled herself out in one smooth movement, stood and pushed her hands back through her newly shorn hair, water running down from her body, tracing across her wonderful breasts, running over her belly and shaved pussy, caressing her long slim legs.\n\nShe lowered her arms and shook her hands, picked up the robe and walked back to the villa, holding the robe over her arm, a vision of loveliness. The pressure in my pants grew and I almost groaned, held myself back in case she heard. The only sound in this small isolated valley was the soft lapping of the sea.\n\nAli disappeared inside. I waited, trying to see what she was doing, but there was no movement, and I guessed she was showering.\n\nTaking my opportunity I stood and went as quickly as I could back up the track to my car.\n\nI knew where she was staying now. I could return at any time I wanted. And now, I needed to think.\n\nI drove back to Ischia and let myself into my unused hotel room, stripped off and let a hot shower wash the grime from my body. My cock was still half engorged, and I looked down at it in the tall mirror as I stepped out from the shower. It would be so easy to touch myself, get hard again, and make myself cum, but suddenly that felt like betrayal.\n\nI let the water dry naturally on my skin as I shaved. I glanced down, debating, then lathered up the short regrowth of pubic hair and shaved myself there as well. Ali liked me smooth, I knew that. Anything I could do to win her back. Anything at all.\n\nStill naked I went back and lay on the bed, meaning to rest a moment, but once again sleep ambushed me.\n\nI woke to the sound of a key in the door and opened my eyes to find that as I had slept my cock had stiffened again and now stood up hard against my belly, and that a maid was backing into the room with a trolley containing cleaning material and fresh towels.\n\nI started to sit up, to grab the bedcovers just as she turned and saw me.\n\nHer eyes widened and her mouth formed a perfect O.\n\nShe was young, not twenty, dressed in a neat blue work uniform that zipped up the front and showed a lot of leg.\n\nI saw her eyes take in my nakedness, saw them glance down and a flush appear on her face.\n\n\"Dispiace Signore\" she said, her hand rising to her breasts.\n\nI held a hand up, finally pulling the covers over my erection.\n\n\"It's OK,\" I said, holding my own hand up. \"I guess I just dropped off. I'm sorry.\"\n\n\"American,\" she said. \"I will come back later, yes?\"\n\n\"Thanks.\"\n\nBut she made no immediate move, just stood beside her trolley, still looking at me. I realized that I had managed to cover my cock, but the rest of me was still on display.\n\n\"Are you in Ischia for long, signore?\"\n\nWhat the hell? This was not the right time - but even as I thought it I felt a sense of disappointment - every man's fantasy was playing out in my hotel room, a beautiful Italian maid just a zip's tug away from being revealed, a naked foreign man with a raging hard on - and I was going to turn her away.\n\n\"I'm not sure yet. I don't think so.\"\n\n\"That is a shame. Perhaps I will see you again before you leave?\" She started to turn away and I sighed with relief.\n\n\"Perhaps,\" I said.\n\nShe guided her trolley out, but hesitated as she reached the door and looked back, a mischievous look on her pretty face.\n\n\"You are sure I cannot do anything for you before I go, signore?\"\n\n\"Thanks, but no thanks.\"\n\nShe lifted an eyebrow, perhaps surprised, and left me alone.\n\nI stood, went across and flicked the lock on the door, then laughed at the ridiculous sight I made, my raging cock jutting out and swaying.\n\nI lay back on the bed with my arms at my sides and let sleep take me again into dreams of Ali and a brown skinned hotel maid and Sandy and Jack and Tu and my Mom and when I woke my cock was still rigid and it felt as though I was on the point of cumming hard.\n\nI shook my head, got up and took another shower, turning the controls down until the water was cold and eventually my cock eased and settled back between my legs. I stayed under the shower for another five minutes, then dressed.\n\nI seemed to have slept most of the day away, the shadows now gathering in the square under my window.\n\nI grabbed my wallet, the hire car keys and the envelope Sandy had given me, unlocked the door and went outside.\n\nTonight I crossed the square to the restaurant Ali had been in the night before. I knew how she was: once she found somewhere she liked she would return again and again. I thought back to where she had sat, and took a table as far away as I could. I ordered a Peroni and a dish of olives and looked through the menu, suddenly hungry.\n\nMy pasta was just being delivered when my cellphone rang. I answered, expecting Sandy asking if I had found Ali yet.\n\n\"Hi,\" I said.\n\nThere was silence. No, not silence, the sound of a car engine, a squeaking as parts moved on an uneven surface.\n\n\"Hello...?\" I said. \"Al?\"\n\nMore active silence.\n\n\"I miss you, Al,\" I said. \"I miss you more than you can believe.\"\n\nThe silence stretched on, for a long time. I thought I could hear her breathing above the background noise of the engine, and then her voice said, \"Oh, I can believe,\" and she broke the connection.\n\nI stared at my phone, willing it to ring again, trying to put meaning to her words. Had she been angry? Sad? Upset? Apologetic? I had no idea. Just hearing her voice had surged emotion through me, removing any ability to analyse her actual words.\n\nI looked at my food on the table, no longer hungry, but knowing I had to eat so I lifted a fork and twirled pasta and put it in my mouth and as soon as I tasted the creamy sauce my hunger rose up, a huge monster, and I ate quickly.\n\nI ordered another beer and gelato and then Ali walked in off the square and took the same table as last night, across the terrace from me, looking away, not seeing me sitting in clear view. She was closer than last night, and looked more beautiful than I had ever seen her. Her skin, sun touched, glowed. I was beginning to get used to her hair, and saw the sun highlight it, throwing fiery tints into the curls that still formed. The cut would have been severe on anyone else, showing her ears and the nape of her neck, soft curls framing her forehead, slightly longer on top, but on Ali is merely revealed more of her amazing face, more of her smooth neck and throat.",
        "She wore a pale silk top with narrow straps that showed her perfect cleavage, the dark blue straps of her bra running up over her shoulders beside the thinner straps of the top. Her skirt was very short, thin and floating over black leggings painted onto her long legs. She wore sandals on her feet and sunglasses pushed up on top of her head and I knew I was hopelessly in love and if I failed to win her back I had no idea what I was going to do with the rest of my life.\n\nI caught the eye of my waitress and called her over.\n\n\"Signore?\"\n\n\"Could you do something for me? Send a bottle of your best white wine to the lady on that table? The one over there?\"\n\nThe waitress looked at me and smiled, \"Of course, signore. And is there any message?\"\n\n\"Uh, yes,\" I had no idea what I wanted to say. \"Yes... could you say 'Sorry'?\"\n\n\"Sorry?\" She looked puzzled now.\n\n\"Yes. Just sorry.\"\n\n\"And shall I let her know who sends the wine?\"\n\nI nodded. \"Yes.\"\n\nShe grinned. \"La dolce vita,\" she murmured and moved away.\n\nI waited, watching Ali study her menu. Then the waitress appeared with a bottle of wine in a cooler and took it across to her.\n\nShe lowered her head and spoke.\n\nAli looked puzzled.\n\nThe waitress turned and said something else, pointed across the terrace to me.\n\nI saw Ali's eyes lift, find me and fail to recognize me at first. She looked again and her mouth opened. Opened wide. Her hand flew to her mouth.\n\nI stared back, willing her to forgive me, to accept me back into her life.\n\nHer face showed no emotion other than surprise, and as I continued watching her that too faded.\n\nAli spoke to the waitress and they both glanced back in my direction.\n\nThe waitress nodded and moved away, came to me and said, \"The signora asks if you would like to join her?\" She was desperately trying not to grin.\n\n\"It would be my pleasure,\" I said. I gathered my things, the envelope I had carried from New York, and stood. \"Would you please put everything on my bill?\"\n\n\"Of course, signore.\"\n\nI felt self conscious walking across to Ali's table, but when I reached her she made it easy and stood.\n\nShe put her arms out and I stepped inside them and kissed her, feeling an electric surge fill my body from the touch.\n\nI stared at her, and her at me, directly into each other's eyes.\n\n\"I've been a fool,\" I said.\n\nShe shook her head. \"No. I have.\"\n\nI smiled. \"We have?\"\n\nShe looked at me, nodded. \"OK. We have. What the fuck are you doing here, Tom?\"\n\nShe sat at the table and I sat across from her, reached and pulled her hand into mine and she let me and left it there, warm and small.\n\n\"I've come for you, Al,\" I said.\n\n\"You have?\"\n\n\"Of course.\"\n\n\"Why?\" She looked into my eyes, searching for some answer not connected to what I might say.\n\n\"I need to say something to you. Something important. Something I should have said a long time ago.\"\n\nShe nodded.\n\nMy heart was beating fast. I knew exactly what I wanted to say, but was afraid that she would reject my words. I hoped, I prayed, that would happen, but we don't always know what is going on inside other people's heads. We might think we know, but we don't. We can't.\n\n\"Al, I want to get this all out at once, so don't interrupt. I've known you since I was three years old. I only ever thought of you as my sister - a real sister, not just a pretend one. But then things got fucked up. You moved away, and when I saw you you'd grown into a beautiful teenager and I fell in love with you in a different way-\"\n\nAli tried to say something but I held my hand up.\n\n\"Let me finish. I've got to get this all out at once, otherwise I'm not going to be able to say it. But loving you was OK, because even though we only saw each other once a year it was fine, because you were my secret soul mate. I never told you this. How the hell could I tell you? I was twelve. What the fuck did I know when I was twelve?\"\n\n\"Tom...\" Ali said.\n\n\"Shh... And it got worse. Every time I saw you it got worse. And then when I came to New York, I fell in love with you even more. And you teased me, and excited me, and frustrated me... oh fuck, yeah, you frustrated me... And then we started kind of fooling around... And that was good too...\" I laughed. \"That was very good... I wanted more, but I couldn't tell you, because you're not into men, and I just wanted to be around you, to be with you as much as I could, and it was enough. It has been enough \n\n\"But last week, when you left, I knew I couldn't lose you. So, here it is, Al. Whatever you want to do is OK with me, just so long as I can be around you. You can fuck who you like. You can tease me. You can swan around buck naked and frustrate the fuck out of me. It's all fine. Everything. But just let me be a part of your life and I'll cope with it in whatever way I can, because I need to be around you, need to be with you. I love you Al. And not in the, oh yeah, I love you, way. I love you!\" I stared into her eyes, deep into her eyes. \"I love you and want to be with you for ever.\"\n\nShe stared back at me.\n\n\"OK,\" I said, letting go of her hands. \"Fucked it up now, but OK. Had to say that.\"\n\nI pulled the dripping bottle of wine from its bucket and poured two glasses, took a big swallow from mine. The wine tasted amazing.\n\nAli looked at me, and I could see her eyes glittering.\n\n\"You can tell me to fuck off in a minute, but before you do that there's something you need to do and then I'll go. If I can't be with you, Al, I'll go and you'll never see me. I can't be a small part of you. I have to be a big part of you.\"\n\nI put the envelope down on the table and slipped the papers out of it. I knew I was deliberately changing the subject, trying to distract Ali from telling me of course she loved me, just not in the same way.\n\n\"Sandy gave me these. She says we've got to both sign them.\"\n\nAli looked down, confused at my sudden change of subject. \"What are they?\"\n\n\"We've had an offer for the business. Fifteen million dollars.\"\n\nAli's eyes widened.\n\n\"Are you willing to sell?\" I asked.\n\nI could see her trying to think, trying to make sense of everything that was going on.\n\n\"I need to...\"\n\n\"Take you time, Al. Sandy needs them back by next Tuesday. But I can always fly back Monday. Even Tuesday I guess. Think about it. Here, take them, read them. Call me when you've decided.\"\n\nI sat back and drained my wine. Then I moved my chair back, ready to leave. This hadn't gone the way I might have hoped. My fault. I'd laid my cards out, opened my heart and then willfully swerved the topic around to the business. I should have stopped and listened to Ali... but I had been scared of what she might say.\n\nAs I started to stand Ali reached across and covered my hand.\n\n\"Sit down, Tom. Stay.\" She shook her head. \"Give me a minute, OK?\"\n\n\"Long as you want, Al.\"\n\nShe looked around, saw the waitress who had been diplomatically avoiding our table. Ali gestured her over and ordered a seafood salad, looked at me. \"You want something, Tom?\"\n\n\"I've eaten,\" I said.\n\nShe nodded.\n\n\"Where are you staying?\"\n\n\"Over there,\" I turned, pointing at the small hotel.\n\n\"How did you find me?\"\n\nHer voice was still neutral, as though she was holding herself in check.\n\n\"I have a confession to make. I hacked into your laptop and looked at your bank account. It's amazing what you can find out by looking at bank transactions.\"\n\n\"You hacked my computer?\" she said.\n\nI nodded.\n\n\"So you... guessed my password?\"\n\nI nodded again.\n\nA brief flush flared pink under the tan in her face.\n\n\"You're a bastard,\" she said, but still without emotion.\n\n\"I know. But I had to find you.\"\n\n\"How is Sandy?\" She asked, and my head spun. We needed to talk about more than this.\n\n\"She's fine. You know Sandy.\"\n\n\"Still as sexy as ever?\"\n\n\"And some,\" I said.\n\n\"And Candy...?\"\n\nI shrugged. \"OK, I guess. I didn't see her again after you left.\"\n\n\"No? Why not?\"\n\nI shrugged again. \"Didn't feel right. And besides, she got what she wanted. Candy's very beautiful, but shallow. You know that.\"\n\nAli nodded.\n\n\"Did you leave because of Candy?\" I asked.\n\nShe shook her head. \"No... Yes and no... I don't know...\" She stared down at the table, then lifted her glass and took a long swallow. \"I don't know,\" she said again.\n\nI reached over and took her hands again and she didn't pull away.\n\n\"How's your Mom? Did she enjoy the honeymoon?\"\n\n\"I think so. She seemed real happy when she got back. And Jerry was grinning a lot too.\"\n\n\"I should think so. Your Mom is one hell of a catch.\"\n\n\"I know.\"\n\nShe stared at me, messages flowing backwards and forwards, unspoken, not understood.\n\nThe waitress brought her salad and Ali pulled her hands out of mine and started to eat. I sat back in my chair and watched, enchanted by every move she made, every nuance of her voice.\n\n\"I helped her... uh... prepare herself for the wedding night,\" Ali said.\n\n\"I know,\" I said.\n\n\"You do?\"\n\n\"Sure.\" I didn't explain how I knew. Let her try and work that one out.\n\nAli glanced at the papers on the table. \"When do I need to do something with these?\"\n\n\"Soon,\" I said. \"Tomorrow's Thursday. They have to be back next Wednesday at the latest. Sandy didn't say when, but I guess in the morning. I can fly them back Monday. Don't want to risk getting held up on the 4th. So you've got the weekend, if you want.\"\n\nAli ate more of her salad. It looked good.\n\n\"I'm staying in a nice villa along the coast,\" she said. \"It's small, but nice.\"\n\n\"Mm-hm,\" I said.\n\n\"I was wondering... I know you've got your hotel room... but you're welcome to come back with me if you want.\"\n\n\"Mm-hm?\"\n\nShe nodded. \"If you want. No pressure, Tom.\"\n\n\"I'd like that.\"\n\nShe looked at me. \"Me too,\" she said.\n\nI emptied the bottle into our glasses. The cold wine beaded the sides and moisture ran down the thin stems. The wine was probably the best I had ever tasted. I don't know if Ali noticed or not.\n\nShe ate more salad then pushed her plate away.\n\n\"I've got some things I need to say to you as well, Tom. But not here. Back at my place. Are you ready to go?\"\n\nI nodded. \"I'll just pay the tab.\"\n\n\"No - I'll do that.\"\n\nI looked at her. \"Al, that lovely waitress will consider me a bastard of the worst kind if I don't pay now.\"\n\nAl laughed. For the first time since I sat down she showed emotion, and my stomach fluttered.\n\n\"OK then, treat me.\"\n\nI turned around, caught the waitress's eye. I didn't look at the bill, just gave her my card and when she returned added a \u20ac100 note to the plate. She looked at it, at me, and said, \"Grazie, signore.\"\n\n\"My pleasure.\"\n\nI stood and pulled Ali's chair back and we walked out into the square.\n\nAli brushed against me as we made our way downhill toward the car park, and I reached and took her hand and she let me.\n\nShe opened the car with the remote and we slid inside.\n\nFor a moment she sat with her hands on the wheel, staring ahead, then turned to me and put her hand behind my head and pulled my lips down to hers and kissed me deeply.\n\nWhen she drew apart she stared into my eyes, then nodded. \"OK. My place.\" Her voice sounded a little hoarse.\n\nShe drove slowly, carefully, along the narrow island roads, bounced down the rough track and pulled up outside the villa.\n\n\"This is nice,\" I said.\n\n\"Not cheap,\" she replied.\n\n\"You're rich,\" I said.\n\n\"Not yet.\"\n\nI shrugged. \"Your choice, Al. Our choice. If we want it.\"\n\nShe unlocked the door and walked ahead of me. I stepped inside. The room was sparsely furnished, the floors tiled, the walls white and clean.\n\nA large sofa covered with a cream throw sat in the center of the main room, facing out to the sea. The view looked north west, and the sun was starting to get low on the horizon, throwing fire up onto distant clouds.\n\n\"More wine?\" Ali asked.\n\n\"I'm fine.\"\n\n\"I think I need something. Join me?\"\n\n\"Sure,\" I said.\n\nAli walked across to a large kitchen area, took another bottle of white from the fridge and opened it, poured large glasses for us. She handed me one and dropped onto the sofa, leaning back against one arm, her legs stretched out. I looked around, then patted her legs and she lifted them, setting them back on my lap as I sat down\n\nAli lifted her glass and I touched it with mine. The wine was lighter than my expensive bottle, but good.\n\n\"My turn, Tom,\" she said.\n\nI waited, stroking the tops of her feet where they rested on my legs. Ali had opened the patio doors and the scent and sound of the sea drifted into the room on a warm breeze.\n\n\"I need to ask you the same favor, Tom. No interruptions. I know exactly what I want to say to you... just not sure how to say it. I want this to come out right, and I don't want you to freak.\"\n\nI watched her face in outline, her beautiful, unbelievable face. Watched the way her perfect breasts moved inside her top. Watched the way her long supple legs were displayed.\n\nI smiled, recalling all the times I had fantasized about those breasts, studied them over the years as they budded, grew, became wondrous. I smiled at the memory of seeing them for the first time back in Ali's small apartment when Maggie loosened Ali's bra and they shook free. I smiled at the memory of the times I had seen them since, and the times I had now held them. I wanted to hold them again, wanted to touch all Ali's secret places. \n\nShe glanced across at me and I pulled myself back to the present and nodded. \"OK.\"\n\n\"What you said, before... kind of scared me. Because...\"\n\nShe stopped, took a deep breath and glanced at me again.\n\n\"Did you really mean what you said, Tom? Everything you said?\"\n\nI nodded again.\n\n\"You've felt like that since... God, since when?\"\n\n\"Long time, Al. Long, long time.\"\n\n\"Fuck... OK. I don't know what's gonna happen now. I know what I want to happen. What I hope will happen. But I don't know. This is just so different.\"\n\nShe stopped again and I watched her.\n\n\"Go on,\" I said. \"You can't leave me hanging like this, Al.\"\n\nShe nodded.\n\n\"I like girls, Tom. You know that. I really like girls....\"\n\nOut over the sea the sun touched the horizon and threw an orange pathway towards us.\n\n\"But... I've always liked you, too. When you told me how you felt about me, I felt sick. Because I've felt like that about you as well, Tom. I've tried not to let you know, because... Fuck, I don't know, because I didn't want to scare you away. Just a little bit of you felt so good, so I took what I could and tried not to scare you off by being intense and needy. But I always have been needy about you... just didn't know how to express it.\"\n\n\"Al...\"\n\nThis time it was her turn to hold up her hand. \"Wait. Let me finish. All the girls were...\" she laughed. \"Yeah, all the girls were fun. I really get off fucking other women. Really get off.\" She glanced at me, trying to judge my reaction. \"But when I think about you... like that... you know, like fucking you, Tom?\"\n\nShe looked again and I nodded.\n\n\"I get so fucking wet. Thinking about fucking you I get so wet it feels like I'm melting. I'm confused, because I really don't like guys. I know I've joked with you, like you're not like a guy. You're Tom... my Tom... my Tom,\" she repeated it twice, staring down at the tiled floor.\n\n\"I've always know it,\" she said. \"And I've tried to fight it because you're my cousin and wanting you is kind of incest. If we did what I want us to do we'd be breaking the law somewhere... but I don't care. That didn't seem to matter. I used to bring myself off, when I was thirteen, fourteen, thinking about you I finger fucked myself and it felt better than anything else ever.\"\n\nI leaned over her legs and placed by empty glass on the floor, lifted her feet and began to work my fingers into her sole, knowing she always liked that. Occasionally I let my hands stray up to her calves, but no higher.\n\n\"And as I grew older I thought I might grow out of it,\" Ali said. \"You know, schoolgirl crush. But I didn't. And then you called me up and said could you stay with me and I nearly fainted. After you hung up, that night, I thought about you coming to stay and I pulled my panties down and stuck my fingers inside myself and nearly passed out I came so strong.\"\n\nShe looked across at me now, looked into my eyes, searching for something.\n\n\"Am I scaring you, Tom?\"\n\nI shook my head.\n\n\"Good. Because I haven't finished yet.\"\n\n\"Go on,\" I said.\n\n\"When you moved in, it was tough. I wanted to rip your clothes off and fuck you. All the time. And I was scared because you're my cousin and what I wanted was against the law. But it didn't stop me wanting you. Wanting you so bad. All that teasing, all that messing about, I was trying to see how far I could go.\" She smiled, looked at me. \"We nearly went too far more than once, didn't we, Tom?\"\n\nI laughed. \"More than once.\"\n\n\"You could have fucked me any time you wanted. You could have fucked me years ago, before we were old enough to fuck. You could have fucked me the day you moved in with me. I wanted you to. All the time.\"\n\nNow I did reach across and lifted her hand from her lap and held it. She allowed me to draw it across to rest on her thigh, turned her palm up into mine. I felt her leg trembling under my hand.\n\n\"And now... last week... I need to tell you about last week.\"\n\nShe took a long, deep breath and let all the air out of her lungs in a long whoosh.\n\n\"I thought it was going to be OK. Then your Mom booked us into that hotel. Your Mom...\" she glanced at me. \"I don't know... I want to tell you but I don't know if I can...\"\n\n\"Tell me what, Al? You can tell me anything. Anything.\"\n\n\"I'm not sure I can tell you this, Tom.\"\n\n\"Anything,\" I said. I felt nervous, half guessing maybe what she was going to say, and said. \"I want to tell you something too, Al.\"\n\n\"Are we fucked, Tom?\" she asked.\n\n\"No,\" I said.\n\n\"Tell me, Tom.\"\n\n\"You're my cousin, Al. And you said you didn't want to draw me into incest, and I can understand that. But it's too late, Al. Too late. Last Christmas I... I fucked my Mom.\"\n\nThe trembling in her leg grew stronger and her grip on my hand almost painful.\n\n\"The night before the wedding, Tom... I fucked your Mom as well...\"\n\nShe stared down at the floor, refusing to look at me.\n\n\"Good,\" I said. \"You told me you had a crush on her, so good.\"\n\nNow she risked a glance.\n\n\"Good?\"\n\n\"Sure. Like you say, she's really sexy...\"\n\nAli smiled, then laughed softly. \"Wow... whew... fucked up, yeah?\"\n\nI shook my head. \"Only if you're... worried about it. Felt good to me when I did it. You?\"\n\nShe nodded. \"Yeah, felt really good.\"\n\n\"So the fact we're... cousins is hardly relevant, is it?\"\n\n\"OK,\" she said, suddenly decisive. \"That's settled then. Now let me go on... That night in the hotel, in the bath... I really wanted you to fuck me that night... I wanted you to fuck me in my ass... You know I want that, Tom, don't you?\"\n\nShe looked at me again, searching for my approval. My permission?\n\n\"It's not... not like I'm into other guys, just you. And it's not like being a lesbian I'm into anal sex... though I do like having my ass licked... I love having a tongue up my ass, Tom...\" She shivered. \"But you... I want your cock all the way up my ass, Tom. Of fuck, that night, I wanted it so bad I didn't know what to do. And you... you're always so sensible, so good, so controlled. Why the fuck couldn't you just give in and fuck me?\"\n\n\"Because I wanted it too much.\" I said. \"Because it would mean too much to me to do it casually. Other people, yeah. But you mean too much.\"\n\n\"And then... going back to your house, it was like we were moving in together,\" Ali said, \"And I spent hours lying in your Mom's bed starting at the ceiling willing myself to stay there and not come through and rape you... I wanted to... I wanted to all the time... But I stopped myself. And then Crystal, watching you fuck Crystal, and then...\" she stopped and began to sob.",
        "I lifted my hand and pulled her towards me and she fell against me, across my lap, and I turned and pulled her again until she lay on top of me, our legs tangled, her chest heaving against mine, her tears dripping onto my face and I stroked her back and let her cry until her tears died.\n\n\"And then... Crystal knew what we both wanted... when she pulled me on top of her and you fucked her... you were looking at me when you fucked her, Tom... you were looking at me, not her... and it felt like you were fucking me... but you weren't, and I wanted you to so much but it was Crystal and it was just all too much for me and I lay awake all night and in the morning I needed to get away because otherwise I would have made you fuck me and... and I thought... I thought that was going to ruin everything... and I couldn't stand it... couldn't stand not being with you, Tom.\"\n\nShe had poured her words against my neck, her lips touching my skin, and when she finished she lifted her head and looked at me.\n\n\"You thought that?\" I said. \"That if we fucked it would spoil what we had?\"\n\nShe nodded.\n\n\"And I thought that too,\" I said.\n\nShe nodded again.\n\n\"Are we fucked up, or what?\" I said.\n\nShe sniffed and kissed me lightly on the lips. Lying on top of me she lay her head down into the curve of my neck and I felt her body loosen.\n\n\"I'm so tired, Tom,\" she said. \"I don't think I've slept more than a couple of hours a night since I walked away from you. Kept thinking too much. Afraid I'd lost you for good.\"\n\n\"You'll never lose me, Al,\" I said.\n\n\"Mmm,\" she muttered, and I felt her loosen even more, draping around me almost as if her body was melting. \"If I fall asleep just go ahead and fuck me, Tom,\" she whispered.\n\nI put my arms around her shoulders and kissed the top of her head and held her and within moments her breathing had deepened and I knew she had drifted off. I lay there for a while, watching over her shoulder as the sun painted the sky wild colors and then faded, faded and died. Stars came out but the air drifting through the open window was still warm.\n\nFinally I twisted out from under Ali, lifted her and carried her through to the bedroom. First attempt I opened a closet door. Found the bedroom on the second try. It was as amazing as the rest of the villa, set alongside the main living area with more patio doors overlooking the sea.\n\nI lay Ali gently on the bed and stood looking at her, wondering whether to remove her clothing or not. It seemed odd - I was used to seeing Ali naked, had seen her that way a hundred times, but standing in the middle of the night beside her sleeping form it felt different, an invasion of her privacy. I leaned over and unclipped her short skirt and eased it off. I started to pull her leggings down until I discovered she was wearing nothing underneath. I tugged them back up and Ali muttered something in her sleep and rolled onto her side.\n\nI sat back on my heels looking at her, saw sweat beading on her face and neck and knew she was going to simmer all night if I left her as she was.\n\nI pushed her gently and she grumbled and reluctantly rolled over onto her back. I returned to the leggings and tugged them down, aware of her pussy revealing itself to me, aware of the delicious scent that rose from her. I folded the leggings and laid them on the dresser. I pulled Ali up so she was sitting and she mumbled and tried to slump sideways. I sat behind her, holding her up with my knees as I tugged her top over her head, struggling with her arms. I unclipped her bra and pulled it free over her shoulders. Finally I laid her back down and she opened her mouth to breath heavily. I had no idea why she hadn't woken, unless it was the sudden release of tension had knocked her out.\n\nAs I watched she rolled onto her side again and pulled her knees up. The dips and folds of her body enchanted me and it was only with difficulty I turned away.\n\nI tidied our glasses, pulled the tall windows half closed and sat on the sofa. I sat there a long time, maybe an hour, hardly thinking at all, then rose and went back into the bedroom. I stripped off and lay on the bed next to Ali, apart from her but close. I could feel the warmth of her body radiate across onto my arm as I stared at the ceiling.\n\nI closed my eyes and waited for sleep to come, listening to the sound of the sea, listening to the sound of her breathing next to me.\n\nFRIDAY JUNE 29th\n\nWhen I woke my body was slick with sweat. Daylight filled the white room, a shaft of sunlight splashing hot onto my right foot, making me pull it back. My leg brushed against Ali as I moved and I rolled my head to one side.\n\nShe lay on her front, face turned away from me, one arm under her pillow, the other stretched along her side, her palm facing upward, her fingers flat against the sheet. I studied her sleeping form, watching the way her back and sides moved as she breathed, watching as sweat gathered on her skin and evaporated off. The pinch of her waist and flare of her hips fascinated me and I recalled the day we had explored each other's bodies in such detail. I knew every inch of her skin, every intimate crevice and fold. Along the center of her back a distinct valley ran beside her spine, only fading as it reached her waist and then the perfect curve of her buttocks rose, smooth, arcing over and merging into the sweep of her thighs.\n\nShe mumbled in her sleep and moved. I reached across and placed my hand in the small of her back, left it there, feeling the life in her body.\n\nAt my touch she made another sound, rolled her head down into the pillow, then rolled it again. Her eyes were open as she turned to me, and she smiled.\n\n\"Morning, Tom,\" she said, her words thick with sleep.\n\n\"Morning, Al,\" I said, and kissed her shoulder.\n\n\"I guess I was tired,\" she said. \"What time is it?\"\n\nI shook my head. \"No idea.\" Looking around there was no clock in the bedroom.\n\n\"Kitchen,\" she said, \"On the stove. Only clock in the house. And bring me some juice when you come back.\"\n\nI laughed, kissed her shoulder again and rolled off the bed. I poured two big glasses of juice, cold from the fridge, glanced at the clock on the stove.\n\nAs I walked back into the bedroom I was aware my cock had lengthened and I felt it swing as I moved towards the bed, saw Ali look down and it responded, filling even more.\n\n\"It's just after eleven,\" I said.\n\nI pulled the pillows up and sat against them, placed the bottom of the glass on Ali's back and she squealed and jerked aside.\n\n\"Fuck Tom, that's cold!\"\n\nI grinned and as she turned and sat up. I held the glass until she was ready. She took it, drained half in a single swallow and put the glass on her nightstand.\n\n\"God, now I need to pee. Don't go anywhere.\" She got up and ran through to the bathroom and I enjoyed watching the way her body moved. I heard her pee loudly, heard her wipe herself then she came back. She stopped at the foot of the bed and stretched. I didn't know if it was deliberate or if she needed to do it but she looked gorgeous, skin pulling taut, her breasts flattening and lifting. I noticed her nipples had hardened.\n\n\"Better?\" I asked.\n\n\"Much,\" she said. She sat on the edge of the bed and finished her juice, ran her hand down over her side and across her belly.\n\nI reached across and stroked her back and she smiled, rolled her head back as though she was a cat.\n\n\"I need a shower, Tom,\" she said and got up.\n\nI dropped back onto the bed, listening as water started to run from the bathroom, heard the sound change as Ali stepped under the spray. She had left the bathroom door open and I looked at it, my cock stiffening as I thought of her under the water. I felt the change running through us, through me. I had behaved myself long enough. I got up and went through to the bathroom.\n\nThe shower was big, the whole room tiled in marble. A glass half door was beaded with water and I stepped around it and put my arms around Ali's soaking body and held her to me.\n\n\"I wondered what was taking you so long,\" she said. She wriggled her wet ass back against me, reached around with her hand and searched for and found my cock. Her hand was slippery with soap and she started to rub me slowly.\n\nI lifted my hands to her breasts, those wonderful breasts I had always dreamed of, and now here they were, filling my hands, water streaming over them, her nipples hard under my fingers.\n\nAli leaned back against me and I dropped one hand to her belly, moved it down and she gasped as my fingers found her pussy.\n\n\"You teasing me, Tom?\" she said.\n\n\"Not teasing any longer, Al.\"\n\n\"Mm.\" She squirmed against me, turning round and pulled my face down to kiss her, then broke the kiss and knelt and took my cock directly into her mouth.\n\nThere was no playing now, no pretending. She drew me into her as far as she could, gagged a little and pulled back.\n\n\"Fuck. I'm going to have to practice that a bit more,\" she said.\n\n\"Practice all you want,\" I said. I put my hands under her arms and pulled her back up. She tried to slip out and go down on me again but I held onto her, slippery and wet and pushed her back against the tiled wall. Water cascaded down over us both.\n\n\"You want to wash me, Tom?\" she said, a smile on her lips.\n\n\"Are you dirty?\"\n\n\"You know I'm dirty,\" she giggled.\n\nI took the soap from its dish and ran it along her back, building up a slick foam of bubbles.\n\nI washed her shoulder and neck, lifted each arm and washed their length to her fingers.\n\nAli leaned back, allowing me access to her breasts and belly and I soaped them and ran their slick smoothness under my hands.\n\nI touched her pussy and she shivered.\n\n\"We've been here before,\" she said. \"But it feels different now.\"\n\n\"It is different,\" I said.\n\nShe smiled and turned to present her back to me. She leaned forward and put her hands on the tiles, stepped back. Water hit her arched back, funnelled and ran off between the cheeks of her ass.\n\nI soaped her back, slowly moving down. I soaped her ass, working between her cheeks.\n\n\"Yeah,\" she said. \"I need cleaning a lot there.\"\n\n\"Looks fine to me,\" I said.\n\nShe shook her head, took another half step back. \"Dirty,\" she said. \"Needs cleaning.\"\n\nAli reached around with one hand and pulled me towards her. Her hand found my cock, rubbed it against her butt, pulled it between her cheeks.\n\nI moved closer, pushed her hand away and gripped my cock in my own fist. I bent my knees, moved closer again and the head of my cock came up and rested against the closed crevice of her pussy.\n\nAli pushed back onto me, opening herself. \"Don't tease me, Tom,\" she said.\n\nI smiled. It seemed that everything had been working up to this moment. All the teasing, all the playing, all the moments when we almost went to far. We had been waiting for now.\n\nI kissed her wet back and pressed forward. My cock opened her and instead of pulling away like I always had before I pressed again and entered her fully.\n\n\"Oh my God...\" she whispered, stepping back against me.\n\n\"Changed your mind about men?\" I asked.\n\nAli shook her head, water flying from her short curls. \"No. Men are bastards. You're not a man, Tom.\"\n\n\"So what have I got filling your pussy if I'm not a man?\"\n\n\"Don't know,\" she said, \"But you're Tom. You can do anything you want to me, Tom. You know you can. Except... you can't cum inside me. Not there, anyway. I don't want to get pregnant... not yet.\" She moved against me, starting to breathe more heavily and I stroked into her.\n\nI was struggling not to cum, desperately wanting to. The \"not yet\" Ali had added almost tipped me over with the implications.\n\nI reached around her front and worked her clitoris with my fingers and she gasped.\n\n\"Do you know how long I've been waiting for this moment?\" Ali said.\n\n\"As long as me?\"\n\nShe shook her head. \"Longer. I'm older than you, so longer. I've wanted this for as long as I can remember.\" Her voice was shaking as her breathing grew ragged.\n\nI slid a slippery breast under my hand and pulled at her nipple.\n\n\"You're gonna make me cum, Tom,\" she said, moving faster against me. \"Don't cum yet... oh fuck!\" She shook, jerking forwards, making my cock slip out of her. She pushed back and I slid back inside and she cried out, trembling as a climax rolled through her. I gripped her hips and pulled her back onto my cock, leaning back and drawing her hands off the wall. Her legs were trembling, hardly able to hold her up and I held her against me as she shivered.\n\nShe lifted her arm up and wrapped it around the back of my neck, tried to turn her head to kiss me but reached only as far as my ear.\n\n\"Fuck Tom... that was incredible... did you cum?\"\n\nI shook my head and she felt the movement against hers.\n\n\"How come? How could you didn't cum then?\"\n\n\"You asked me not to.\"\n\nAli laughed, pulling away from me, laughing hard. \"Oh fuck, that's my Tom...\"\n\nShe leaned back against me, still giggling and I wrapped my arms around her. My rigid cock pressed against her back and she slid her hands down between us and held me.\n\n\"What are we gonna do about this, then?\" she asked.\n\n\"Will you finish me off, Al?\" I said.\n\nI felt her laugh against me. \"Still so fucking polite... I'm going to have to knock some of that out of you... I won't break, Tom.\"\n\nI held her breasts, enjoying the way her slick hands were moving on my cock. She leaned away from me, let one hand go and put it back on the wall. She was leaning forwards now, pushing her ass back into the air. She gripped my cock and rubbing it against her back, rubbed it against the cheeks of her ass, slipped it down along the valley between them.\n\nShe had stopped laughing. I put my hands on her hips and pulled her back a little. Ali rubbed my cock and slid it along her crack, over the ring of her asshole, down and then back. She held me against it. The head of my cock resting naturally in the dimple of her ass.\n\n\"Do you remember that B&B?\" Ali said.\n\n\"After the wedding. How could I ever forget that?\"\n\n\"I asked you for something then and you were sensible.\"\n\n\"I was.\"\n\nAli was still rubbing my cock, still pressing back against me. The soap and water had made her slick and as she pressed I felt her ass opening against my cock.\n\n\"You're not gonna be sensible again, are you?\"\n\n\"What do you think?\" I said. I pressed forward and her ass opened more. The head of my cock had now opened her, cradled against the tight ring of muscle.\n\nHer head hung down between her shoulders and she shook it. \"Don't be,\" she said. \"Do it, Tom. I want you to do it.\"\n\nI pressed and my cock entered her ass. I heard her gasp, but not in pain, and I pushed and slipped deeper. I was now inside Ali's ass and it felt wonderful. The ring of muscles gripped my cock and the head was deep inside, the passage tight and welcoming.\n\nI pressed harder, pushing inside and she opened her legs wider and put her other hand on the wall. I pulled her hips back hard against me, bending my knees and slid all the way inside her asshole.\n\nAli's breathing was harsh again and she gasped, \"Tom, you're gonna make me cum again...\" Her voice sounded surprised.\n\n\"I'm going to fill you,\" I said into her ear. \"I'm going to fuck your ass and fill it with my cum.\"\n\n\"Yes,\" she gasped.\n\n\"My cock is in your ass,\" I said. \"It's all the way in your ass.\"\n\n\"Yes,\" she gasped again, her trembling growing. \"Fuck my ass, Tom...\"\n\nI began to pump into her, not gently, working myself hard into her ass and I knew I wasn't going to last. My balls ached, my cock burned and I felt my release peaking.\n\n\"I'm cumming, Al,\" I grunted.\n\n\"Fuck yes!\" she yelled and I exploded inside her, pouring a single hot stream of cum deep inside her bowel. \n\nAli felt my release and it tipped her over and she shook again. Her legs went limp and I pulled her back against me, trying to hold her up but my own knees were going and suddenly we slipped and Ali landed on top of me, still impaled and I pumped into her again, cumming again, jetting inside her. I lay back, water half drowning me, holding Ali against me as I emptied myself completely into her.\n\nWe lay pummeled by water long after I stopped coming. My cock shrank and finally slipped out from Ali's ass.\n\nShe turned, slippery against me, and lay on top of me and kissed me.\n\n\"Thanks, Tom,\" she said. It looked like she had tears in her eyes, but it was hard to tell with all the water about.\n\n\"For what?\"\n\n\"For fucking me like that.\" She nipped my lips with her teeth. \"I've wanted you to do that for ages.\"\n\n\"Fuck your ass?\"\n\nShe nodded. \"It turns me on so fucking much. Hey, weird lesbian, yeah?\"\n\n\"Beautiful lesbian,\" I said, kissing her.\n\n\"Your lesbian,\" she said.\n\n\"Do we need to talk about that?\" I said. I pushed her off and stood and turned the water off. I offered my hand and when she took it I pulled her up against me and kissed her again.\n\n\"Come to bed with me?\" she said.\n\nWe went through and lay on the bed, soaking the sheets with our bodies.\n\n\"Nothing to talk about,\" Ali said. \"I'm yours, Tom. I always have been yours.\" She kissed me, then licked the side of my face.\n\n\"And all the girls?\"\n\n\"The girls were fun. But I love you.\" She held my face in her hands, staring into my eyes, her expression serious.\n\n\"You mean that?\" I asked.\n\nShe nodded, licked my eyebrow.\n\n\"And I love you, Al,\" I said. \"If you still want girls, that's cool with me.\"\n\n\"Reasonable fucking Tom,\" she said, but she was grinning.\n\nI shrugged. She wasn't going to change me now.\n\n\"OK,\" she said. \"But how about if I share? How about if we both fuck 'em?\"\n\nHer grin turned wicked, and she knew what my answer was by the way my cock stiffened and rose against her thigh.\n\n\"You ready to go again?\" she asked.\n\nI nodded. \"Always, with you.\"\n\n\"Good.\" She slipped down against me and drew my cock into her mouth, no hesitation, no pretence, this was real.\n\nI grabbed her and spun her round so I could get at her pussy and we lay side by side on the damp bed making each other cum until the day faded and the night returned.\n\nSometime in the dark Ali moved against me and said, in a sleepy voice, \"Take me home tomorrow, Tom?\"\n\n\"Sure,\" I said.\n\n\"Let's sign those papers and get rich. Then we can spend the rest of our lives fucking.\"\n\n\"Good plan,\" I said.\n\n~~~\n\nThis is the final chapter of Ali's Art. I would like to thank all those who have given so much positive feedback.\n\nThere are no more episodes planned for Tom and Ali, but that doesn't mean they will never return... they have a long life ahead of them, and who knows what might happen? "
    ],
    "authorname": "harding",
    "tags": [
        "incest",
        "anal"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/alis-art-ch-13"
}