{
    "title": "Organism X Ch. 04",
    "pages": [
        "1.\n\nJessie felt the polished steel of the door handle at the entrance to the public safety trailer warm in her hand. The sky was slate gray and a gentle mist fell at a steady pace. Things were not well in the world of Jessie Vitelli. \n\nThe idea of ratting on her best friend, of ruining their friendship, it did not sit well with Jessie. The girl Jessie saw last night was not Leah. Those primal eyes and that inhuman strength when Leah grasped Jessie's arms. A shudder ran through Jessie just thinking about it. \n\nStill, what was there to do? Go back to the dorm room and go through the motions all over again? Or would Leah apologize. Maybe cry a lot and beg for forgiveness. Explain it all away. \n\nNo matter how hard Jessie tried, she could not make herself believe that fantasy. The way Leah gazed at her the night before, it was not human. \n\nThen there was another thought. A whisper in Jessie's mind.\n\nPublic safety isn't going to help you. No one is.\n\nOver the last day, a chasm of despair had opened within Jessie. Storm clouds hovered on the horizon, bringing only misery.\n\nJessie snapped out of it and stared at her hand gripping the door handle. \n\nDo it or don't, but stop moping for God's sake!\n\nJessie let go of the handle and walked away from the trailer. There was an hour before her next class and we was going to use it well.\n\nShe marched down the path towards Odenton Hall, the coed dorm she lived in with Leah, keeping a fast pace lest she lose her nerve. Jessie and Leah lived on the bottom floor, left side hall from the entrance. \n\nThe hallway was empty when Jessie reached it. To her surprise, the isolation was not as foreboding as she expected. The fluorescent lights blasted down from the ceiling, filling the space with a sterile, comforting aura.\n\nShe reached her dorm, room 104, and without skipping a beat, opened the door wide. Jessie immediately regretted this as her bravery faltered and the dark roomed opened like an unholy mouth before her.\n\nEmpty. No Leah. No one.\n\nJessie flipped on the light and cautiously stepped into the room. She wished he had not as her eyes adjusted and she saw vast quantities of the slime from the day before. \n\nThere was more now. Smeared against the walls, splashed on Leah's desk, and a ton on the floor. Mingled with the floor slime was something deep crimson that made Jessie gag. \n\nThe smell hit her then. That cloyingly sweet odor that made Jessie want to vomit her brains out. Desperate to ease the smell, Jessie covered her mouth with her shirt and dove deeper into the room. \n\nShe began to gather her backpack and books, all luckily spared contamination and then she noticed it. \n\nOn the floor, half-caked in slime, was a bra. Jessie didn't suppose it was that strange, but it caught her eye all the same. She knelt down and lifted the bra by the part that was not drenched and that's when she saw the tag.\n\nInscribed in pink sharpie was the name \"Megan Jensen\".\n\nThe chasm within Jessie bottomed our another hundred feet. \n\n2\n\nMr. O'Connor's class in the Mirabelle English and Language hall overlooked the red brick path that lead down to the river. Yellowing leaves framed the massive windows which today showed the gloom of early Autumn rain.\n\nEliza Penbrooke loved the rain. Her favorite times of year were the points right after summer and winter when the sky opened up and drenched the world. Today was not a downpour, but it was a good enough start. \n\nLindsay Maycomb, another freshman and Eliza's closest friend in the class, sat down next to Eliza and stretched out her arms. She ran a hand through her blonde, pixie-cut hair and adjusted her hipster glasses before regarding Eliza.\n\n\"You do the reading?\" She asked.\n\n\"Most of it. Skimmed it really,\" Eliza said.\n\nHer eleven o'clock class lasted for an hour and ten minutes and she was going to feel every single one. Beowulf was not her forte.\n\nMicah Sebring sat down behind Eliza and began to unpack his book bag. \n\n\"Oh, I see you just assumed you were a part of our discussion group after one time?\" Lindsay said to him, fighting back a giggle.\n\n\"It's a free country and an open seating plan. Is O'Reilly coming in?\"\n\n\"Out sick. It's a bummer.\"\n\n\"I guess we have an open chair already then,\" Micah said.\n\n\"Try to let others talk this time,\" Eliza said. \"After all, you were such the motormouth last time.\"\n\n\"Hey, I hadn't read the chapter, you guys had. Besides, you handled it swimmingly.\" \n\n\"Thanks,\" Lindsay said. \"Such a meaningful response.\"\n\nThe clock hit eleven on the dot and Mr. O'Connor moved to start class, reaching the small wooden podium as the door creaked open. In the doorway, Eliza saw Leah Bardot, only the usually quiet, modest sophomore looked almost unrecognizable.\n\nShe sauntered in, making sure that everyone in the classroom got a good look at her curves, all of which were on display. Leah wore a skin tight tank top with a plunging neckline that left nothing to the imagination as well as black yoga pants. \n\nThe way Leah scanned the room made Eliza uncomfortable, as if the girl were a predator on the lookout for prey. Then Leah's eyes landed on the open seat behind Lindsay and Eliza felt her heart sink. \n\nGreat. \n\nLeah flashed a devious smile and plopped down right behind Lindsay.\n\nMr. O'Connor seemed determined to ignore Leah's entrance and introduced the prompt for the class on the whiteboard. Monday's class, he explained, would be entirely discussion-based with Wednesday featuring an in-class lecture guided by the results of the discussion. With that, he dismissed them to form groups.\n\n\"Mind if I join,\" Leah asked the second Mr. O'Connor dismissed them.\n\n\"The more the merrier!\" Lindsay said, seemingly unphased by Leah's presence.\n\nEliza felt herself growing anxious, but she couldn't nail down why. \n\n\"Alright guys,\" Lindsay began. \"I think I should be discussion leader. My dope Star Wars shirt obviously makes me the coolest member of the group.\"\n\nLindsay motioned to her R2-D2 shirt, one of her favorites.\n\n\"Wow, I never would have known you were a Star Wars fan,\" Eliza sneered, trying desperately to regain a sense of normality with Leah hovering within the group. \n\n\"I'm more of an ironic fan,\" Lindsay said. \"I totally don't own every extended universe novel.\"\n\n\"I've got to say, this is a lot more entertaining than talking about Beowulf,\" Leah said softly.\n\n\"I know, right!\" Lindsay responded. \"We should just watch the original trilogy and have that be the class. Boom! I get an A. You all get an A. We all leave and get lunch.\" She banged on her desk for emphasis, prompting everyone to stare at her for a moment.\n\n\"I've never seen them,\" Leah said. \"I would be game.\"\n\n\"You've never seen Star Wars?!\" Micah interjected.\n\n\"Never.\"\n\n\"Well this is a travesty,\" Lindsay said in mock rage.\n\n\"I haven't either,\" Eliza added.\n\n\"Psh, that doesn't surprise me,\" Lindsay said.\n\n\"Well at least that makes two of us,\" Leah said, suddenly focusing her entire attention to Eliza.\n\nEliza suddenly felt very flushed and woozy. Leah's eyes dug into her skull and Eliza swore they glimmered a bright green for just a second. \n\nWhat the hell is wrong with me? Eliza thought desperately.\n\nThen, as soon as the strange trance began, it lifted. Leah refocused on Lindsay and Micah and Eliza was left feeling a little hot under the collar, but otherwise fine. \n\nThey started into the discussion, Lindsay taking the natural, yet awkward lead. Eliza expected Leah to continue her coy little act that for some reason seemed so strange and frustrating, but the girl instead fell into a sullen quiet.\n\nAs minute after minute passed, Eliza noticed Leah squirming in her seat and looking increasingly uncomfortable until finally the girl stood up.\n\n\"I'll be back,\" she said, before walking out of the room.\n\n***\n\nShe reached the toilet just in time. Her parasitic child could wait no longer.\n\nLeah plopped onto the seat and began to rock back and forth, riding the waves of pleasure and pain as the strange organism began to emerge from her womb.\n\nInch after hot, slimy inch began to emerge from between Leah's pussy. She gazed at the strange creature as it came into view, still fascinated by massive changes her body had undergone. \n\nWhat is this thing? Leah wondered. What am I? \n\nWhatever Leah had become, she wasn't the only one anymore. Leah thought of Megan Jensen's supple body squeezing into clothes that had once been loose. What a site.\n\nThe creature dropped from Leah's pussy and splashed into the water, swimming about in agile circles like some kind of eel. This one looked very similar to the one Leah had put inside Megan. A thick, phallic head and dark, ribbed shaft of a body.\n\nLeah watched the creature and suddenly felt a deep connection to it. It was of her. A child of sorts.\n\nFeeling a sudden impulse, Leah willed the creature to stop its frantic swim. It responded immediately. \n\nThat's useful, she thought.\n\n***\n\n\"She's been gone a while,\" Eliza said to no one in particular.\n\n\"Probably an upset stomach,\" Micah said. \"She seemed pretty out of it.\"\n\n\"Hopefully she'll come back soon. I drank way too much coffee this morning and beyond feeling like a hummingbird on cocaine, I've got to pee like a fire hose.\"\n\n\"Do fire hoses pee?\" Micah said.\n\n\"I was taking creative liberties, gosh Micah.\"\n\n\"Why don't you just go. Maybe knock on the door. She doesn't get to hog the bathroom all day,\" Eliza said.\n\n\"Maybe,\" Lindsay responded. \"I really have to go. Wetting my pants is definitely not one of my discussion leader duties.\"\n\n\"You never know,\" Eliza said.\n\nLindsay stood and started towards the exit. A minute later, Leah walked back into the room, seeming revitalized.\n\n\"Sorry about that,\" she said. \"Where were we?\"\n\n\"Oh, something something Beowulf. Something, something Grindle,\" Micah said.\n\n\"Hmm. So specific.\"\n\n\"Totally,\" Eliza said. \"So what did you think of the chapter, Leah?\"\n\n\"I'll be honest, I didn't read it.\"\n\nTypical, Eliza thought. \n\n\"What I'm hearing is that we talk about NOT Beowulf for the rest of class then?\"\n\n\"That's the spirit,\" Leah said. \n\n\"Sure,\" Eliza followed, desperately wanting Lindsay back. \n\nHowever, the minutes ticked on and Lindsay did not return. Eliza began to feel a creeping worry.\n\nMaybe she's feeling sick too? But she just had to pee.\n\n\"Are you okay, Eliza?\" Leah asked.\n\n\"What? Oh, fine. I'm just wondering what happened to Lindsay. She's been gone a while.\"\n\nLeah gave her a little, knowing smile that chilled Eliza to the bone.\n\n\"I'm sure she's doing very good.\"\n\nAfter class, Eliza stepped out into the hallway and moved against the flow of students heading to lunch towards the small women's bathroom at the end of the hall. \n\nEliza swung open the bathroom door, not sure what to expect on the other side. It was empty. \n\nThe single stall in the small bathroom was cracked half open, revealing nothing but a dirty toilet seat that glistened in the dim light with something.\n\nA viscous green substance splattered the porcelain rim of the toilet and the brown tile below. \n\n\"What the fuck?\" Eliza whispered to herself.\n\nShe began to notice more of the stuff in the bathroom. The goo trail continued out of the stall diminishing until it was only a few droplets at the doorway. \n\nThere was no trace of Lindsay. \n\n3\n\nDamnit, she thought. Too late.\n\nJessie paced down the hall, hoping her head would clear a little bit. Without thinking, she pass through to the other side of the dorm, the bottom right hall. \n\nShe rounded the corner and promptly stepped in a puddle of vomit.\n\nIn front of Jessie was a pale, disheveled young man speakers out on the tile, vomit dripping from his mouth. \n\n\"Jesus,\" Jessie yelled. \n\nWhat the hell are you supposed to do in a situation like this? Jessie dashed on the hallway and rapped on the door of the hall RA. No answer. She was having the best luck this morning.\n\nSuddenly, Jessie heard a loud shuffling from behind her. She reeled around to see the boy coming at her with a frenzied look in his eye.\n\n\"Whoa, watch it,\" Jessie yelled, stepping back cautiously. \n\nThe boy threw up a hand and began to talk in a slurred, half-drunk way. \n\n\"W-wuhWait,\" he said. \"Yah-you. You're her roommate.\"\n\nJessie felt a bolt of electricity run up her spine. She stepped forward, suddenly energized.\n\n\"Leah Bardot?\"\n\n\"Don't. Don't know her name,\" he said through heavy breaths. \"Just know you're her roommate.\"\n\n\"What about her?\" Jessie said, her voice rising to a tremor.\n\n\"She-we-she did something to me. We. We uh,\" the guy trailed off, struggling to find the right word. \n\n\"What?\" Jessie said, practically screaming.\n\n\"Intimate,\" the guy whispered. \"She did something to me.\"\n\nJessie ignored the gross comment and and pushed on. \n\n\"What did she do to you? What did she do?\"\n\nThe boy murmured something unintelligible before collapsing onto the ground. Jessie, seeing the writing on the wall, jumped back as a new torrent of vomit spewed onto the ground in front of her. \n\nAt that moment, Jessie heard quick footsteps pattering towards them. Jessie looked up to see Felicia Owens, her own RA, approaching. \n\nFelicia was a gorgeous but nervous girl who always hunched as if the weight of the world was desperately trying to turn her into a hunchback. Her delicate golden curls were all pulled back into a bun save for one lock that bounced between Felicia's eyes with each rapid step. \n\n\"Oh God,\" Felicia said, covering her mouth with her hand. \n\nShe dashed over and knelt beside the boy, asking Jessie a rapid fire series of questions as she did so.\n\n\"What's wrong with him? Has he been like this long? How do you guys know each other,\" she rambled.\n\nJessie explained what happened and Felicia just nodded before turning her attention to the boy, who was in no position to answer questions. \n\nEventually, they managed to get the boy up on his feet and walked him back to his room. Felicia used her master key to open the room and help the boy in. \n\nOnce the boy was placed in his bed, an accomplishment that came with considerable effort, Felicia stepped out of the room to call public safety. \n\nJessie watched over the boy, feeling more dejected with each passing moment. All he did now was stare at the ceiling and mutter the same phrase over and over again. \n\n\"She did something to me.\" \n\nPublic safety arrived and Jessie told them her story, sans what the boy said about Leah. Afterall, Jessie had made her decision. The public safety officers got the boy on his feet and walked him off to the health center, leaving Jessie and Felicia alone in the deserted hallway. \n\n\"Thank you for the help,\" Felicia said. \"I don't know what I would have done without a helping hand.\" \n\n\"Thank me? You're kidding.\" \n\n\"Trust me, just having the company helped. I hate this part of the job.\" \n\n\"Are there any parts you don't hate,\" Jessie said. She regretted it immediately, but could not take it back. \n\nFelicia did not seem bothered. \n\n\"I like helping people. Helping them get situated, solving problems. Just being a friend and a support. The paperwork, the write-ups, the-\" Felicia gestured at the puddle of greenish black vomit on the floor. \n\nJessie noticed the color and snapped to attention, remember the goo within her room. \n\n\"Hey, do you think you could help me?\"\n\nFelicia brightened, her sad puppy dog eyes growing wide and happy. \n\n\"Sure, what do you need?\"\n\nJessie filled Felicia in on some of the details, leaving out Leah's attack from the night prior. Felicia nodded along, the momentary sparkle fading rapidly. \n\n\"This is really not good,\" Felicia said. \n\n\"It's something,\" Jessie shrugged. \"Look, I just feel weird about going to that room alone right now. Mind coming with me while I pick up some stuff?\"\n\nFelicia agreed and they walked across the dorm to Jessie's room. \n\n\"You weren't kidding about the slime. Gosh, it's everywhere,\" Felicia said, stepping into the room. \n\nJessie tiptoed in after her and started to collect her backpack and a handful of school supplies and other materials. She was not anticipating coming back any time soon. \n\n\"Doesn't it stink too?\" Jessie said. \n\n\"What?\" Felicia asked, looking genuinely puzzled. \n\n\"The slime. It reeks. Gives me a headache and an upset stomach.\" \n\nFelicia sniffed the air and shook her head. \n\n\"It actually doesn't smell that bad. Kind of sweet.\" \n\n\"To each her own, I guess,\" Jessie said, making for the door.\n\nShe looked back and saw Felicia prodding around the room, seeming to take inventory. The girl's tennis shoes were already plastered in the gunk. \n\n\"I'm going to need to call maintenance about this. Just be warned, Leah will probably get a write-up. You're fine. It doesn't sound like you had anything to do with it.\" \n\n\"Nope,\" Jessie said. She had a feeling that a write-up was the farthest thing from Leah's mind right now, if she still had a mind. \n\n\"Alright. If you see Leah, tell her to come find me.\"\n\n\"Sure thing,\" Jessie lied. \"Can you let me know if you find her first?\"\n\n\"Yeah, sure thing.\"\n\n\"Thanks,\" Jessie said. \"Oh, one more thing.\"\n\n\"What's up?\"\n\n\"I found something of Megan's in the room. In the-goo or whatever. I think she might be involved in this too now.\"\n\nFelicia turned her full attention to Jessie. Her eyes were big, like those of a puppy. \n\nThe girl really did not wear stress well.\n\n\"What was it? A notebook or something?\"\n\n\"It was more intimate.\"\n\n\"Got it,\" Felicia nodded. Well I'll keep an eye out for her too. You do the same. I'll be honest, this is freaking me out.\"\n\n\"Yeah. Me too.\"\n\nFelicia departed down the hallway at a nervous hustle leaving Jessie to her thoughts. \n\nShe felt worse now than before. The pit in her stomach was a hundred feet deeper and growing by the second. Jessie knew she needed to do something before that hole swallowed her completely. \n\n4\n\nThis was all she ever wanted and more. The boy of her desires completely enraptured to her will, to perfect body and sultry demeanor. To Megan, it felt as if she were riding a little slice of heaven. \n\nWith each thrust of Brad's hips, Megan bounced, and with each bounce, Megan's breasts jiggled wonderfully, sending spikes of pleasure running up get spine. The young college girl was in complete sexual overload, riding the boy of her dreams like there was no tomorrow.\n\nYesterday, Megan had been a nervous virgin desperately trying to doll herself up for whichever boy gave her a little attention. Oh how things had changed. \n\nMegan watched herself in the full-length mirror on the back of the dorm-room door and drank in what she saw. \n\nShe was so hot! Not just cute like someone's little sister. Not just pretty. Full blown, fucking hot.\n\nMegan's curly brown hair was longer and wilder, cascading down a pale, toned back. Where her hair ended, her full, plump ass began. She ran her tongue along her full, red lips, enjoying the pillowy softness.\n\nThen there were her tits. My what a pair she had now.\n\nMegan remembered the years of stuffing her bra just to try and keep up with the other girls. Up until yesterday, Megan's breasts had been the same since ninth grade. \n\nNot anymore!\n\nMegan cupped her new assets lovingly, relishing the intense jolts of pleasure the contact brought forth. Her breasts had grown so big so quickly. She had to be a d-cup at least, maybe even bigger!\n\nBrad picked up his pace, quickly approaching orgasm. His seventh orgasm. \n\nMegan felt a part of herself, deep within, encircling Brad's member, pumping it full of stuff to make him last longer and get harder. \n\nThis thing within Megan was the reason for her lovely rack, amongst other things. Megan remembered the feeling of it thrusting into her virgin pussy. There was the sensation of being stretched, agonizing at the time, as something wet and warm slithered inside the girl.",
        "Leah had made Megan this way. Sweet, sexy Leah with her big tits and her kind face. Megan desperately wanted to find her new sister and continue what they started the night before once Brad was finished.\n\nAs if he had heard Megan, Brad shot another warm, slimy load into Megan's pussy, screaming in a mixture of agony and desperate, frenzied pleasure as he did so. \n\nAfter the fourth orgasm, Brad had lost his ability to speak coherently. His mind was number and emptier with each blast of cum. \n\nMegan loved that part the most. The way Brad seemed to jet something of his own mind or soul into her. Each gush brought memories and emotions into Megan and she felt herself consuming them all like bits of meat. Each new psychic part of the boy made Megan feel stronger.\n\nThe seventh orgasm seemed to be the breaking point for the boy. His eyes went blank and he collapsed onto the pillow, seemingly lifeless. \n\nMegan felt a sudden shifting within her. She felt one her new parts jab into Brad's cock and pump something inside before retracting back into Megan's womb. \n\nIn the silence, Megan admired herself in the mirror. She rubbed her large breasts, still trying to get a handle on their new size and sensitivity. \n\nIt was at that moment that the door opened and a blonde, exceptionally tall young man walked through the door.\n\nThe pair gaped at each other, the tension within the room growing with each passing second.\n\n5\n\nLindsay stumbled through the hallways, replaying the events of the last half and hour over and over again. She needed somewhere private, somewhere she could-could wrap her head around this.\n\nSomewhere to finish the transition, the alien voice within told her. \n\nThe costume closet would do just fine. No play practice during the day, no classes moving through. Just a place to-to wrap her head around all this. \n\nIt happened so fast. \n\nAfter a short moment's wait, the door to the bathroom had swung open, revealing a seemingly refreshed Leah. \n\n\"You lay an egg in there?\" Lindsay jabbed playfully.\n\nLeah smiled, seeming to take appraisal of Lindsay in a way that made the girl shudder a little.\n\n\"Something like that,\" Leah said.\n\nLindsay entered the tiny, one-stall bathroom, doing her best to ignore the weird encounter.\n\nShe pulled down her pants and panties and sat absentmindedly on the toilet, pulling out her phone as she did so. Soon, Lindsay was scrolling through twitter as she felt a wave of relief wash over her. She was oblivious to what lay beneath her in the toilet.\n\nIt emerged from the drain of the toilet as it caught the girl's scent. Gracefully, it swam its way up to the surface, raising its head into the cool air. \n\nLindsay's pussy lips loomed above it, warm and inviting. The creature readied itself, taking aim.\n\nLindsay began to write a text to her sick roommate when it happened.\n\nSomething big and sickeningly warm slammed against her vagina and in a single fluid motion, pushed its way into Lindsay's body.\n\nLindsay tried to scream, but for the first few seconds she could only silently choke on air. In that span, the creature managed to squirm several inches of its body into the freshman's vulnerable slit. \n\nWhen Lindsay did find her voice, she managed only a sobbing moan. \n\nIt's inside of me! Oh God, it's in me!\n\nLindsay had experimented plenty with her one dildo and she had even had sex once. Nothing prepared her for this. \n\nThe thing was so big that it seemed to stretch Lindsay's inner walls to the breaking point. It was so alien too, a living creature making its way deeper and deeper into the girl. Mingling it's monstrous flesh with Lindsay's own.\n\nIn a desperate attempt to stop the invasion, Lindsay grasped at the invading worm, but her fingers slid off the wet surface, making any form of grip impossible. All Lindsay could do was sit back and whimper, fumbling uselessly as this monster foisted itself upon her.\n\nSoon, there was nothing left to grasp.\n\nNow Lindsay had found the costume closet. The door was locked, but that was fine. She had access. \n\nLindsay flitted through her keys absentmindedly, struggling to stay focused. It was so hard to pay attention with this-whatever it was-inside of her body. Her pussy burned and tingled tonan almost maddening degree and her whole body ached. \n\nLindsay managed to find the right key, failing to notice the quiet footsteps coming up behind her. She jammed the jagged piece of metal into the hole and sloppily opened the door. The costume closet waited for her dark and deserted. \n\nI need this, she thought. Oh god I just need some time to figure this out. Figure out what the fuck is happening to me.\n\nLindsay flipped on the closet light and stumbled into the room. Her balance was bad and getting worse ever since the incident as she now referred to it. Even weirder, her chest and butt ached and itched painfully, her chest especially feeling tight and swollen. \n\nTurning to close the door, Lindsay jumped. Standing in the doorway was Leah Bardot from class. \n\nWithin Lindsay, something clicked. She flashed back to the coy little smile Leah had given her before going to the bathroom. She stumbled back from Leah as if stricken. \n\nLeah took the opportunity to slip inside the room, closing and locking the door behind her. \n\n\"So we have some privacy,\" Leah smirked.\n\n\"What did you do to me?\" Lindsay asked, fear and panic rising back to the surface of her awareness. \n\n\"I didn't do anything. My worm did all the work,\" Leah said.\n\nShe sauntered over to Lindsay, pinning the girl against the back wall between two racks of costumes.\n\n\"Please, just get it out,\" Lindsay blubbered. \"I feel it inside of me.\"\n\nLeah brought her hand to her chin and stared up at the ceiling as if to consider this.\n\n\"Hmm, how's about no?\"\n\n\"Please.\"\n\n\"Even if I wanted to, I don't, I couldn't. It's already bonding with you. You could say you two are becoming one, sister.\"\n\n\"Oh god,\" Lindsay moaned fresh horror washing over her even as a fresh fire of arousal blossomed in her sex.\n\n\"You're going to make such a good sister, Lindsay. I can feel your thoughts and feelings now. And that body? I cannot wait to see what that worm inside of you does to all of this,\" Leah motioned to Lindsay's chest.\n\n\"Oh god, it's inside me. Oh god, please god.\"\n\nLindsay began to sob, her body a cacophony of bizarre sensations too alien to process.\n\n\"I think you need a pick me up,\" Leah said. \n\nShe cupped Lindsay's face with both her hands and closed her eyes, focusing her mind. \n\nUnconsciously, Lindsay began to pant heavily, her body's pleasure centers rocketing into overdrive. Leah's commands ricocheted through her brain. \n\nGive in to it Lindsay. \n\nDoesn't it feel good Lindsay?\n\nCum for me Lindsay. Cum for me and kiss me.\n\nLindsay's body tensed up as her pussy erupted, sending a gush of green slime shooting from her pussy. The girl babbled incoherently.\n\n\"You and I are going to have a lot of fun, Lindsay,\" Leah said before pulling the girl into a deep kiss.\n\n6\n\nEmily has just settled into her chair to start on her next computer science project when she heard the soft knock at the door. \n\nIt was Felicia, Emily's RA, though half the time she forgot with how nervous the girl seemed at every moment. She looked especially so today.\n\n\"Hey, is Megan there?\"\n\nEmily shook her head.\n\n\"I haven't seen her all day. She went out last night to hang out with someone and never came back.\"\n\n\"Oh?\" This seemed to bother Felicia. \n\n\"Yeah, is everything okay?\"\n\n\"Probably,\" Felicia said, rubbing her fingers through her curly blonde hair. \"I just might need to have an RA meeting with her. Leah Bardot too, if you've seen her.\"\n\n\"This sounds like a big deal,\" Emily said.\n\n\"Maybe,\" Felicia said distantly. \n\nThis was not reassuring. \n\n\"Have you seen any green goo or anything?\" Felicia asked suddenly.\n\n\"What?\"\n\nFelicia mumbles something to herself. She seemed to be weighing something in her head.\n\n\"I probably shouldn't do this, but I've been trying to piece this together all afternoon and I think I need another opinion.\"\n\n\"Alright,\" Emily said nervously. \"What's up?\"\n\n\"Here, follow me,\" Felicia said. \n\nThey walked down the hall to Leah Bardot and Jessie Vitelli's room, which Felicia opened with her master key. When the lights flashed on, Emily could not believe her eyes.\n\nIt looked like that scene from Ghostbusters with the slimer ghost in the small dorm room. Green slime covered the floor and the covers of the bed against the right-hand wall. The scent that issued from the open door was sweet and strange. \n\n\"What is that shit?\" Emily asked.\n\n\"I've got no clue. Jessie didn't either. She apparently came back to it this morning. Apparently Leah's been acting strange and this seems related to her though.\"\n\n\"So what does this have to do with Megan?\"\n\n\"Jessie found something of Megan's in that,\" Felicia motioned towards the mess at the center of the room. \n\n\"She wouldn't say. Something intimate? I don't know what she meant, but she was convinced it belonged to Megan.\"\n\n\"Well she never did come home last night,\" Emily said, gazing at the mess.\n\n\"Of course I would get the weird shit,\" Felicia said. \"As if being an RA isn't stressful enough.\"\n\n\"I'm sorry. It sounds stressful.\"\n\nFelicia managed a meek smile.\n\n\"Everything's stressful.\"\n\n\"Well I see what you meant about goo now. Is there any other weirdness going on?\"\n\n\"Yes, actually. A boy in the opposite hall became violently ill. That's actually what started all of this. He was hurling in the hallway when Jessie found him.\"\n\nThis did not strike Emily as all that weird. It was college after all and Bailey was far from a dry campus. Besides, the boys in this dorm were such shit.\n\n\"Anyways, I called public safety. They took him to the health center and they sent him to the ER! Apparently, he has some sort of pernicious anemia or something. That's the last I heard.\"\n\n\"This is bizarre\", Emily said. \n\n\"I know right? I'm going to call a meeting with Leah, Jessie and Megan to get to the bottom of this slime and the other weirdness. You might as well come since I gave you the low-down. You don't have to or anything, but she is your roommate.\"\n\n\"What time?\"\n\n\"I'm thinking six thirty tonight. I texted Jessie and she said Leah and her don't have night classes tonight. Do you know if Megan does?\"\n\n\"Nah, no night classes for either of us.\"\n\n\"Cool. I'm hoping to do it when the dorm is pretty dead. People still at dinner or going to classes. Less chance to draw attention to anything if it gets heated.\"\n\n\"Do you think it'll get to that point?\" Emily asked. \n\nFelicia took another long look at the goop piled on the floor. \n\n\"I really don't know what to think. Anyways, if you see Megan, give her the heads up. I'll text her, but anything helps.\"\n\n\"Sure thing,\" Emily said.\n\nThe whole thing was strange bordering on spooky. Emily, an avid listener of true crime podcasts while working on her computer science homework, enjoyed the thought of a mystery. It really was a strange array of circumstances. \n\n7\n\n\"Oh Micah honey.\"\n\nThe sing-song voice was dripping with sensuality, yet somehow it seemed so familiar.\n\nMicah was sitting in one of the common areas of the Queen Anne Lit and Theater academic building, sprawled on a couch with his laptop when he heard it. \n\n\"You should say hi to your friend Micah,\" came another voice, soft and self assured. Both of them came from behind him. \n\nMicah turned around to see Leah Bardot from his Literature and History class standing above him, her eyes swimming with vibrance. \n\n\"Oh shit, hey there Leah. What's up?\"\n\n\"Aren't you going to say hi to me, Micah baby?\"\n\nIt was that first voice again. So familiar.\n\nMicah looked and saw a familiar face pop out from behind Leah. It was Lindsay Bowers.\n\nOnly, she was so different. \n\n\"You look shocked Micah! Don't you recognize me?\"\n\nAt this, Lindsay draped herself over the couch, displaying her ripe bosom which stretched her R2-D2 shirt taught. This close, she smelled incredible. So sweet. \n\n\"We were hoping you would hang out with us Micah, maybe behind the stage?\" Leah cooed.\n\nSomething about her voice was so soothing. It almost made him want to fall asleep. \n\n\"Sure,\" Micah said, his will-power melting into the aether. \"I would love too.\"\n\nHis gaze was fixed on Lindsay. She looked incredible. Not just pretty, but sexy. She hadn't looked like this earlier that morning. What the hell happened?\n\nMicah wanted to find out more, wanted desperately to be with this pair of gorgeous women.\n\nAbsentmindedly, he stood up and began to follow the girls to the backstage area, leaving all his belongings. \n\nAs they reached the big double doors, Leah's phone dinged. She glanced at message and frowned. \n\n\"I've got some other business to attend to. Lindsay, dear, enjoy.\"\n\nThen she departed, leaving her new sister and her prey to their fun.\n\n8\n\nMegan stumbled through the hallway, clutching her stomach. Pain blurred her vision.\n\nBehind her lay a small, unassuming dorm room filled with two dead boys. Well, almost dead. Not quite.\n\nMegan had consumed so much. With Brad, it had been passion. With his roommate, pure hunger. \n\nThe sensation of draining someone's thoughts and emotions, pulling their essence into you. It was addictive to the point of madness for Megan.\n\nHad it been this way for Leah? Megan did not think so. \n\nAnother wave of gut wrenching pain nearly forced the girl to her knees. There was something inside her that desperately needed to be let out and it was enormous. \n\nMegan reached her hallway and to her relief found Leah standing in front of her doorway. Message received, apparently. \n\n\"Oh Meg, what have you done?\" Leah said. She looked annoyed.\n\n\"Just let me into your goddamn room. Please.\"\n\nWithout another word, Leah opened the door to let Megan in. Then she closed and locked it, sealing them in. \n\nAs soon as Megan was over the threshold, she collapsed into a pile on the ground and began to moan loudly. Soon after, a squelching sound began to come from her pussy. \n\n\"Oh God, it hurts.\"\n\n\"Jesus,\" Leah murmured.\n\nMegan screamed as a thick, glans shaped head emerged from her pussy, followed by a thick, bumpy shaft that exited her with painful slowness.\n\nLeah watched silently, fascinated by the site. \n\nWhat finally emerged in full from Megan's pussy was considerably different than the worms Leah had seen thus far. \n\nFor one thing, this creature was nearly twice as big as the others. From its penile head squirmed small red cilia or tendrils. It's body glowed a somber emerald color. \n\nLeah scooped up the creature in her hands. It nuzzled against her flesh, sensing her being. \n\n\"My God, Look at this thing!\" She said. \"Whatever lucky girl gets this rammed into her snatch isn't going to be your average sister.\"\n\n\"Why is mine different?\" Megan asked. \n\n\"Maybe it has something to do with the fact that you drained two boys dry. So much energy must have made for a bigger one of these-whatever they are.\"\n\nMegan stepped over and began to pet her bizarre creature. The idea of it taking some beautiful girl on campus thrilled Megan. \n\n\"We'll figure out the boys later. I turned another girl this morning too.\"\n\n\"You've been busy,\" Megan said. \n\n\"I just can't help myself.\"\n\n\"Did you get the text about tonight?\" Megan asked. \n\n\"Of course. I think it's a wonderful opportunity, if we play our cards right.\"\n\n\"What are our cards?\"\n\n\"Well this big boy for one,\" Leah said. \"I've already confirmed that we'll be at the meeting at six thirty. We're supposed to meet at Felicia's dorm, but I have a plan.\"\n\n\"Oh?\"\n\n\"Of course,\" Leah said with a malignant little smile. \n\n9\n\nWhen Micah woke up, he saw nothing but darkness. He felt the cold tile against his naked back. Nothing made sense. \n\nTrying to sit up only brought pain and dizziness. Micah's whole body ached like it had been hit by a freight train. \n\nMicah tried to recall the events that lead him here. The only thing he found were flashes. Skin on skin and enveloping warmth. Frantic, needful touches. \n\nHe pulled himself to a kneeling position and immediately paid the price. Micah vomited, splattering the floor and the front of his shirt. \n\n\"Goddamnit,\" he muttered. \n\nIt took a long time to stand, but eventually Micah managed it. He slipped and stumbled around the pitch black room, colliding with what felt like racks of clothes or something similar, eventually finding a door handle. \n\nMicah fumbled the door open and found himself bathed in artificial light. He was in an empty hallway in Queen Anne, standing outside of what he now realized was the costume closet. \n\n\"Shit,\" he cursed under his breath. All his stuff was still sitting out in the study area. \n\nMicah stumbled down the hall, the pain in his head getting worse and worse. Every single muscle burned, especially his legs. Nothing seemed to connect in his mind either. Thoughts came and went as if some machine were misfiring inside his brain. \n\nHe reached the study area and saw through blurry vision a group of people sprawled on the couches and chairs, however, he could not make out any faces. He made it as far as the couch closest to him before collapsing, his world turning black. \n\n10 \n\nAt exactly six twenty, Jessie knocked on Felicia's door at the end of the hall. Felicia opened up, looking slightly surprised. \n\n\"You're here early.\" \n\n\"I figured I might as well come over now. No use waiting another ten minutes.\"\n\n\"That's fine,\" Felicia said, motioning for Jessie to enter. \n\nFelicia's RA room was a full-sized dormitory the same as any other student dorm, but with only one resident. It was a nice change from the usual cramped conditions. A small electric fountain bubbled on Felicia's desk and a rather large potted fern filled the back-right corner, both of which contributed to a calm, natural atmosphere. \n\n\"You've got a nice set-up in here,\" Jessie said. \n\n\"Thanks. I feel like I barely get to enjoy it though.\" \n\nJessie leaned up against the wall opposite Felicia's bed and crossed her arms over her chest. Her heart pounded in anticipation. \n\n\"I invited Emily to join us too. Since Megan may be involved, I figured it might cover the bases,\" said Felicia. \n\n\"That's fine. How exactly are we going to do this? What exactly are we going to do? Say 'hey, you spilled a bunch of slime all over our room. You've been acting really creepy.' Then what?\" \n\nFelicia shrugged, pulling out a large white binder from one of her desk drawers. \n\n\"We'll follow the conflict resolution protocol. I figured we'll sprinkle in the goo and other assorted shit as we go.\" \n\nJessie snorted. \n\n\"That's pretty good.\" \n\n\"Thanks.\" \n\nA knock at the door made Jessie's heart jump nearly out of her chest. Why was she so damn afraid? And of Leah of all people. Her best friend. \n\nFelicia opened the door, revealing Emily Bloom, Megan's roommate. The bespectacled redhead nodded at both of them and moved to stand next to Jessie. \n\n\"So I'm still confused,\" Emily said. \"Does anyone know what's actually going on?\"\n\n\"I've got nothing new since we last talked,\" Felicia said. \n\n\"Same,\" Jessie added. \"What do you know, Emily?\"\n\n\"I know about the slime. I know Leah's been acting weird. Also that Megan might be involved? What exactly did you find again? Felicia said it was something intimate, but that's kind of vague.\" \n\nJessie reddened. \n\n\"Well-\" she paused, considering whether to say or not. \"I found one of Megan's bras. It had her name on the tag and it was sitting in that slime. I have no idea how it got there. I didn't want to say earlier because it seemed too personal, but if we're doing this-\" \n\n\"Do you think Leah may have been borrowing Megan's bra? That's a thing right?\" Felicia asked. ",
        "Both Emily and Jessie chuckled. \n\n\"There's not a snowball's chance in hell of Leah fitting into one of Megan's bras.\" \n\n\"Yeah, I can confirm,\" Emily added. \n\n\"Maybe they started dating?\" Felicia posited. \n\n\"Maybe, but we sure didn't see any signs of it,\" Jessie said. \"And it still doesn't explain the goo or Leah being weird.\" \n\n\"Yeah. All Megan wants to talk about is this guy Brad on the Ultimate team. Maybe it's a cover, but I doubt it.\" \n\n\"Strange,\" Felicia said, checking her phone. \"Well, it's six thirty now. They should be here any minute.\" \n\nThey sat and waited quietly after that, the clock ticking by each languid second. A sense of dread was enveloping Jessie with each passing moment. \n\nWhen the clock reached sixty forty-two, Jessie felt her phone ding. Glancing at the screen, she received her first shock of the night. It was Leah. \n\nThe text simply read: \n\nMeet me at the room. \n\n\"Leah's in my room apparently?\" Jessie said out loud. \n\n\"Can you go grab her real quick then? This is getting ridiculous,\" said Felicia.\n\n\"Sure thing.\" \n\nJessie stepped into the hall, seeing no one in either direction. She reached her door and took a deep breath. \n\nThis too shall pass, she thought, though it may pass like a kidney stone. \n\nWhen she opened the door, she found an empty room. \n\n11\n\nA minute after Jessie left, there was a knock at the door to Felicia's dorm room. \n\n\"That's gotta be them,\" she said. \"Finally.\" \n\nFelicia opened the door and, to her surprise, saw Megan Jensen and a blonde girl she did not recognize. Neither of them were wearing very many clothes. \n\n\"Uh hi,\" Felicia began. \"Thank you for coming Megan. And who is your friend? I don't think she needs to be here.\" \n\nInstead of responding, both girls pushed past Felicia into the room. Megan had a black, drawstring bag slung over her shoulder and Felicia swore she could see the fabric moving. \n\n\"Hey,\" Felicia tried again. \"I didn't catch your name. We'll be a half an hour at most. Can you step out?\"\n\nThe girl had short, messy blonde hair and piercing eyes behind hipsterish spectacles. She turned around and flashed a little smirk at Felicia before moving deeper into the room towards Emily. \n\n\"Megan,\" said Emily. \"What-you look different.\" \n\nMegan was dressed in a tight crop top that showed off a pair of remarkably large breasts. A push-up bra could do a lot of things, but it could not do that much work, could it? \n\nThe blonde girl was equally stacked, exuding a raw sexuality that unsettled both girls. Emily hated the hungry look in the eyes of the blonde especially. \n\n\"Excuse me,\" Felicia said with growing desperation. \"Megan, can you get your friend to leave please?\" \n\nMegan responded by clocking Felicia hard in the jaw, sending the RA to the hard floor below. For a sickening moment, the room was quiet. Then all hell broke loose. \n\n12\n\nJessie stepped into the room cautiously, remembering all too well the episode from the night before. She reached her bed and heard the click of the door closing behind her. \n\nThere, blocking her exit, was Leah. She was dolled up in an especially revealing outfit and there was something fundamentally different about the way she carried herself now, but it was still Leah. \n\n\"What's up, Leah?\"\n\n\"Hi Jessie, I've missed you.\" \n\n\"Oh yeah?\" \n\nLeah took two steps towards Jessie before stopping in place and closing her eyes. She let out a soft purring noise. \n\n\"What are you doing?\" \n\n\"Just enjoying the moment,\" Leah said. \"Anyways, we have unfinished business, don't we?\" \n\n\"I think we have different ideas of what that business is.\" \n\nLeah stepped even closer, leaving only a few feet between the two of them. Jessie could smell that sweet, nasty odor wafting off of her roommate, making her stomach turn. \n\n\"Why don't you give it a chance, hmm?\" \n\n\"Under different circumstances, sure. Absolutely babe, but last night was not cool.\" \n\n\"I guess I was a little forward. It's just that I have this thing. This new part of my life and I want to share it. You're my best friend, so you were the obvious choice.\" \n\n\"I'm lost. What are you talking about?\"\n\n\"It's better if I show you,\" said Leah. With that, Leah shot forward, pulling Jessie into a warm, wet kiss before she had a chance to react. \n\n13\n\nThrough the mirk, Felicia could hear scuffling sounds and someone screaming. Her vision was spotty and her consciousness seemed to waver in and out. \n\n\"Rise and shine, Blondie,\" a voice leered very close to Felicia's ear. \n\nShe felt hands grab her right arm and roll her over onto her back. A blurry outline of a person crouched over her. Somewhere, distantly, Felicia heard the creak of bed springs and soft, feminine moans. \n\nThen Felicia's vision crystalized, revealing the smiling, placid face of Megan Jensen. \n\n\"I'm guessing you can hear them going at it?\" \n\nFelicia turned in the direction of the noises and what she saw filled her with fresh terror. \n\nThe blonde girl pinned Emily to Felicia's bed and forcibly kissed her. Somehow, she had lost what little clothes she had been wearing. Megan's black skirt was hiked up around her belly and her panties were torn and left in a heap on the tile floor. With rhythmic thrusts, the blonde was rubbing her crotch against Emily's. \n\nThe redhead seemed to be fighting the assault, but only barely, the blond having overpowered her completely. \n\n\"It's quite the site. That girl is a freak and I love it. Oh, she's picking up her pace. You're really going to want to watch this.\" \n\nFelicia stared in abject horror as the blonde brought her rutting pace to a frenzy. Then, it seemed as if the girl's entire body had tensed up. She arched her back as if she were possessed and let out a howl. That's when the true nightmare began. \n\nFrom the blonde's naked crotch, something emerged. It appeared to be a thick, green appendage with a swollen head. In another moment, the blonde rocketed her hips forward, sending the tip of the creature plunging into Emily's slime covered pussy. \n\nEmily Bloom screamed in a mixture of pain and despair as the alien creature penetrated her body. From Felicia's position, she could see the body of the thing working itself at a relentless pace, moving deeper into the helpless redhead.\n\nIt took about thirty seconds for the entire girth of the beast to disappear within Emily's helpless vagina. Felicia watched in gaping horror as the last of thing squeezed itself between the redheaded college girl's soft pussy lips. \n\n\"And now she's one of us,\" Megan beamed. \"Oh Emily. It feels so good. I can't wait to see what you become.\" \n\nThen the brunette turned her attention to Felicia. She slipped her fingers into her now exposed cunt and fished out a wad of thick green slime. \n\n\"I know you're going to start freaking out real soon, so why don't I help.\" \n\nFelicia gaped at the girl like a dying fish. Big mistake. \n\nMegan shoved her goo-covered fingers deep down Felicia's mouth, making sure to deposit as much of the fluid as possible. Felicia immediately gagged, but a good amount of the stuff slid down her throat. \n\nThen panic overwhelmed all conscious thought. Desperate to get away, Felicia shot forward, hoping desperately to get past Megan. She did not even get close. \n\nMegan socked Felicia in the stomach, sending her crashing hard against the tile floor once again. The blow from her head slamming against the hard surface put stars in Felicia's vision. \n\n\"Bad girl,\" Megan said, pulling out the drawstring bag. \n\nStill, the sound of the creaking bed springs filled the room, now matched with the soft moans of both the blonde and Emily, who seemed to have given in completely to her fate. \n\n\"Don't worry,\" Megan said. \"You won't end up like her.\" \n\nShe stroked Felicia's blonde curls before fiddling with the opening of the bag. \n\n\"I've got something much worse planned for you!\" \n\nWhen Felicia saw what was waiting for her, all she could do was scream. \n\n14\n\nSaliva gushed into Jessie's mouth from Leah, all of it tasting just as the slime smelled. Jessie could hear whispers in her mind begging her to give in completely.\n\nFeeling Leah's warm body pressed up against her, large breasts heaving against Jessie's own chest, Jessie almost found herself convinced. Would it be so bad? \n\nLeah pushed Jessie back toward's Jessie's bed. \n\n\"You're going to make such an incredible sister,\" Leah said. \n\n\"What?\" Jessie \n\n\"You'll find out.\" \n\nThis is wrong, a voice within Jessie called out. You need to get away. \n\n\"No,\" Jessie pushed back against her roommate. \"I can't. This isn't happening.\" \n\n\"Aw, don't say that sweetie.\" \n\nLeah rubbed her body against Jessie's own, running her hand up to cup Jessie's breasts. From somewhere below them, Jessie could hear a wet squelching sound. \n\nThis broke Jessie out of her reverie. Something very wrong was happening. She pushed back against Leah, sending the girl stumbling away a few steps. \n\nThat is when Jessie saw it. At first she thought it might be a sex toy or something. It was vaguely shaped like penis and it protruded from the top of Leah's shorts. \n\n\"What the fuck?\" Jessie cried. \n\nLeah's eyes blazed a baleful emerald color as she prepared to pounce, all mock-friendliness gone from her expression.\n\nJessie did not think, only reacted. She brought her shoulder to bear and charged Leah as hard as she could. She hit the girl square in the chest and sent her crashing hard into the wall. Leah's head slammed against the concrete bricks and she slumped down. \n\nWithout skipping a beat, Jessie dashed out of the room and down the hall towards Felicia's room. The door was closed and locked, so Jessie pounded on the surface as hard as she could. \n\n\"Let me in, please!\" \n\nThere was no reply. Jessie sat in the silence and that's when she heard the noises. \n\nSomeone on the other side of the door was screaming. \n\n\"Let me in! Let me in!\" Jessie screamed, pounding the door. \n\nAll of a sudden, the door swung open and Jessie came face to face with a half-naked, mostly crazed Felicia. The RA got halfway through the door when a pair of strong hands yanked her back, sending her flying onto the floor inside the room. \n\nMegan regarded a shocked Jessie with piercing eyes. \n\n\"You aren't turned?\" She asked. \n\nJessie drank in the scene in shocked paralysis. On Felicia's bed, Emily and a girl Jessie did not recognize were making out wildly. Both girls were naked. \n\nAnother frantic scream broke both Megan and Jessie out of their momentary standoff. \n\nOn the floor, Felicia writhed as some kind of massive snake or worm encircled her bare leg. Jessie saw the resemblance of this creature with the thing coming out of Leah, but this thing dwarfed the other creature. It was massive. \n\nIts tip resembled the head of man's penis, only larger. Much larger. From it's tip writhed little red tendrils. Its body was covered in bumps, ridges, and soft green fins. \n\n\"Help. Oh God Help me!\" Felicia screamed. \n\nThe next events happened so quickly, it was hard to comprehend them. The monstrous creature rapidly moved itself up Felicia's leg and positioned its head above the girl's exposed pussy. Next, it shot forward, crushing against Felicia's soft pussy lips. At first, it did not manage to enter her. Too big. \n\nHowever, the creature kept thrusting itself against the girl's wet opening until finally, Felicia's snatch gave out, granting the monster entry into her body. \n\nFelicia howled as it inched itself into her body. Her hips bucked involuntarily as the massive girth stretched her to her max. The look on the poor RA's face was pure horror turning into madness. \n\n\"No. No. Not like this. Please,\" the girl blubbered. \n\nThe sight was terrible yet hypnotic and Jessie could not look away. All of this took place in the span of about ten seconds, but it felt so much longer. \n\nMegan broke first. She turned her full, malevolent attention on Jessie and began to step closer and closer. \n\nWhat do I do? Jessie thought. Did she help her poor RA and live to regret it or cut and run? Time was slipping away from her. \n\nA forlorn moan from Felicia answered Jessie's question. The creature was already very deep within the girl. Over half of its massive body had slinked into Felicia's vagina in less than thirty seconds. There was no saving the girl with Megan there, ready to pounce on Jessie like a lion. \n\nJessie turned and sprinted down the hall, half expecting Megan to come after her at full speed. She reached the corner and looked back. No one was coming. She didn't wait to see if anyone would. Jessie dashed into the night, her brain reeling from what she had seen. \n\n15 \n\n\"Oh shit,\" Haley said. \n\nShe was watching Kung Fu Panda with Bethany and Eliza when it hit her. All of a sudden, the world felt cold and full of despair, as if Haley would never feel happy again. \n\n\"What's the matter?\" Bethany asked. \n\n\"I keep getting these-like headaches?\" Haley said. \"Ever since Saturday night. They come for a couple minutes and then go.\" \n\n\"That's weird,\" Eliza said. \"Have you gone to the health center?\" \n\n\"No, it hasn't been that bad. They seem to be getting worse.\" \n\n\"Maybe you should go tomorrow,\" Bethany said. \n\n\"Yeah, maybe I will.\" \n\nThe time was six fifty in the evening."
    ],
    "authorname": "DevilBookCorruptions",
    "tags": [
        "breast expansion",
        "corruption",
        "non-consensual",
        "parasite",
        "tentacles",
        "transformation",
        "non-human",
        "nonhuman"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/organism-x-ch-04"
}