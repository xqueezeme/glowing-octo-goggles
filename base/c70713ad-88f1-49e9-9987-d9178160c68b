{
    "title": "Lily in Bloom",
    "pages": [
        "Author's note: thanks to Stickygirl and M_R_ for helpful edits and comments.\n\n***\n\n\"So, are there Okazaki fragments in the other strand of DNA?\"\n\nRyan groaned in frustration--quietly, to himself, of course. This was the third time they had gone over this together in their biology study group. Things were clearly not sinking in for Marcy.\n\nLuckily for him, Lily fielded the question this time.\n\n\"The leading strand of DNA doesn't need to have Okazaki fragments, because it's replicated continuously--all one big piece,\" she explained, gesturing to the figure in the open textbook.\n\n\"Ohhhhh,\" Marcy replied.\n\nRyan let out a mental sigh of relief.\n\n\"But why doesn't the other strand just do that too?\"\n\nAnd just like that, the relief was gone. She clearly didn't get it. As Lily backtracked in the textbook to explain this, Ryan stretched and took stock of the situation.\n\nMarcy had invited him to this night-before-the-exam study group. She was one of his lab partners in the laboratory portion of the introductory biology class and was absolutely smoking hot--a brunette with freckles, a great rack, fit body, and a penchant for wearing low-cut strappy tops and skintight, low-rise jeans.\n\nIt was too bad she was dumber than a bag of bricks.\n\nShe hadn't invited any of their other lab partners though, so she was either into him (which he had initially thought possible but his hopes now waned) or she just thought he was most likely to help her, which, to her credit, he was.\n\nHe didn't know how she had roped in the rest of the people at the table, although they were all fellow students in the intro bio class.\n\nMyeong was an international student from... Korea? She didn't say much, but seemed to have pages of meticulously organized notes in her binder.\n\nLindsay was cut from the same cloth as Marcy, in both hotness and academic aptitude. If the greek letters on their backpacks were any indication, they were in the same sorority.\n\nKeith, the only other man in the group, had shown up late, spent most of the time on his phone, and had left early.\n\nAnd that left Lily. Tall, thin, flat-chested but nicely leggy--she had long, straight light brown hair and bright blue almond eyes. She certainly wasn't unattractive, but next to someone like Marcy, she had been easy to overlook, at least amongst the dozens of other women in the big classroom. Her style of dress, which was oddly conservative, for a college student, did make her stand out somewhat--her mid-calf dresses looked like vintage pieces from the 50s and were usually paired with long-sleeved shirts and black stockings.\n\nBut now, three hours into the study session, she had really caught Ryan's eye. She really knew her stuff. And when the group stumbled on something that nobody understood, she had a knack for figuring it out faster than anyone.\n\n\"Well, I think I've got it as well as I'll ever have it,\" Marcy said with a sigh as Lily finished her explanation. \"Besides, it's getting late.\"\n\nRyan checked the time on his phone. 10 p.m. Not heinously late, but definitely late for a Sunday, when they all had an 8 a.m. exam the following morning. Besides, he felt like, at that point, he had gotten as much as he could out of the group.\n\nThe rest of the table nodded and grumbled in agreement and began to pack up their books and notes and rise from their chairs. Ryan stole a sidelong glance across the table as Marcy bent down to pick up a pencil that had fallen off the table, giving him a perfect view of the cleavage between her round, suntanned breasts. He also noticed Lily as she stood and stretched, closing her eyes as she reached her arms upward and rose to her tiptoes.\n\n***\n\nAfter getting back to the dorms, Ryan took a long, hot shower. Late weekend nights weren't a popular time to shower and he was alone in the large bathroom that served his entire floor. As the water ran down his back and shoulders, he stroked himself, thinking of Marcy's cleavage. He thought back to the other outfits she had worn, earlier in the week. A long sorority t-shirt paired with extremely short pants, showing off as much of her smooth, tan legs as possible while also giving the illusion that she might not be wearing pants at all, underneath the shirt. Low-rise jeans that, when she had bent over to stow her notebook in her backpack, had revealed a black thong, its fabric running down through her round, sun-kissed ass cheeks.\n\nThese were all, at this point, fairly well-worn mental images for Ryan.\n\nHis mind then drifted elsewhere... to Lily.\n\nThe skin of her face was pale and smooth, so it was only natural to imagine that the rest of her body would be the same. Long, alabaster legs. Toenail polish? If he recalled correctly, her fingernails were painted a light shade of blue, so he pictured the same on her toes. He worked his way up to her crotch. He had always pictured Marcy as being completely clean-shaven down there, but thought differently of Lily. Her bush would be well-trimmed, but still present. A tangle of short curly brown hair above bright pink pussy lips.\n\nThis new line of fantasy was working very well. He barely made it past her taut stomach to her small perky breasts before blowing his load. He caught his breath as his ejaculate mixed with water and ran down the shower drain. Then, with the clarity that only comes post-climax, he had an idea.\n\n***\n\nThe problem was that he and Lily sat far apart from one another in the large lecture room. It was several weeks into the Fall semester and everybody had already established their \"unassigned assigned seats\". So getting an opportunity to talk to her wasn't going to happen naturally.\n\nHence, the plan. For it to work, he would first have to finish his exam before Lily. It felt like a potentially impossible task given how she had demonstrated her complete understanding of the material the night before. But, lucky for Ryan, she turned out to be one of those people who double and triple checks everything after finishing. So, without having to even rush all that much, he managed to bubble in his answer to the final question before she had finished.\n\nWith that, he turned in his exam to the professor and took up a position outside the door to the classroom, pretending to scrutinize his notebook for the answer to a question that had been on the test. When Lily finished and left the room, he would have the perfect opportunity to approach her, asking her about the question, making small-talk about the study group and finally asking her if she wanted to see a movie with him.\n\nIn his mind, the whole thing had taken on the complexity of an Ocean's Eleven-style heist. He had to remind himself that asking a girl out on a date wasn't a complicated thing. It was just that back in high school he had had no confidence. He hadn't dated at all. Now, in college, he had resolved to try to reinvent himself, to be a more adventurous, outgoing person. Try new things, etc., etc. Granted, at the moment, this only extended to asking the least physically-intimidating woman he had met on campus to see a free movie, hosted by the Union Board, but it was a start.\n\nRyan was so deep within his own thoughts that he almost missed his opportunity.\n\n\"Hey, did you get the answer to... I think it was number 37?\" he asked, sidling up to Lily as she walked out of the classroom. She was wearing something typical, for her--a collared short-sleeved green dress with vertical pinstripes, black stockings and matching green ballet flats.\n\nShe seemed startled by his approach. Great start to things...\n\n\"It was the one about DNA excision repair?\" he clarified nervously.\n\n\"Uh, the one about filling in the gap of exposed single-stranded DNA?\" she asked, getting over her initial surprise.\n\n\"Yeah.\"\n\n\"I'm pretty sure it was 'DNA polymerase one',\" she answered curtly. \"DNA polymerase three does most of the work in replication, but polymerase one handles smaller jobs, like the gaps from excision.\"\n\n\"Whew,\" Ryan sighed in relief. Fake relief, of course--he had known the answer. \"That's what I put down. But I definitely wavered between one and three.\"\n\n\"Yeah, overall, I didn't think it was too tough,\" she said plainly.\n\n\"Well, I certainly got all the Okazaki fragments stuff right--after walking Marcy through it so many times last night...\" Ryan added, with mock exasperation.\n\nLily smiled briefly.\n\nThat smile! Her resting expression was pretty flat and maybe even a little upset-looking. So, when she actually smiled, it was an astounding transformation. Ryan's heart began to beat faster.\n\n\"I guess it was pretty helpful to act, basically, as a free tutor,\" she said, with a light amount of sarcasm.\n\nAt this point, more students were exiting the classroom and the two of them had to move to the side to get out of their way. With more people around, Ryan was starting to get nervous. It was now or never.\n\n\"So, uh, I was wondering if... uh, have you seen the posters around for the movie on Saturday?\" he asked nervously. He glanced around, feeling like a crazy person. Advertisements for the event were plastered on the walls of every common room, hallway, and stairwell in his dorm but, just his luck, there were none in sight now.\n\n\"No,\" Lily replied simply, with a slight curiosity in her voice.\n\n\"It's a Union Board thing. They're showing The Mummy--the one from the 90s. Outside, projected on the side of Harper Hall.\"\n\n\"Oh, cool, I love that movie,\" Lily replied, her face brightening.\n\n\"Yeah, it'll start at 7, right around sundown,\" Ryan explained, his palms starting to sweat.\n\n\"Okay, nice,\" Lily said, adjusting her backpack and readying herself to walk away. \"Thanks for letting me know--I hadn't heard about it. I'll see you there, yeah?\"\n\n\"Yeah,\" Ryan managed to croak out.\n\nWith a small wave, she turned and walked away.\n\nHis mission technically accomplished, Ryan couldn't help but feel somewhat defeated. He re-played the conversation in his mind. The arrangement hadn't felt like making a date at all. He had just \"let her know\" about the movie. He slumped down on a bench in the common area outside of the lecture hall.\n\nSo much for reinventing himself as a confident, outgoing college guy. It was going to be a long wait until Saturday...\n\n***\n\nLuckily for him, he didn't have to wait that long.\n\nAfter lecture on Wednesday, he was packing up his things when he looked up and saw Lily standing a few seats over. It was a little colder that day and she wore a black long sleeved shirt under her dark blue dress--black stockings and flats too, of course.\n\n\"Hey, Ryan,\" she began. Now *she* seemed uncharacteristically nervous.\n\n\"Yeah, what's up?\" he replied, trying to keep things cool.\n\n\"Do you have a class after this one?\" she asked, fidgeting.\n\n\"No. I've got, like, a two hour gap between this and my next class.\"\n\n\"Okay. Cool. I've got a break now too. Do you want to walk with me over to The Java Cup?\"\n\nGod, she was wound up tight, Ryan thought to himself. And she was normally so calm and nonplussed. Was this how *he* had come across the other day?\n\n\"Oh, sure, of course,\" he replied, eager, but also a little suspicious. What was going on?\n\nHe finished gathering his things and made his way alongside Lily out of the lecture hall. They managed to separate themselves from the mass of students flooding from the room's sole exit and began walking in the direction of the campus coffee shop.\n\n\"So, what's your major?\" she asked him, once they were outside of the building and in a quieter environment.\n\nThis couldn't be what it was all about, Ryan thought to himself. This must be just small talk before they could get to what she really wanted to talk about. But what could it be?\n\n\"Biology,\" he replied as they walked together. \"Pre-med. Although, I'm willing to admit that that may change--it's only my first semester. What about you?\"\n\n\"It's my first semester too,\" she said. \"But, to answer your question: Psychology and Sociology--double major. They overlap quite a bit and they work well for what I want to do.\"\n\nRyan was intrigued. Psychology was kind of a lightweight major, like Sociology, but double-majoring was always an impressive feat.\n\n\"And what is that?\" he asked.\n\n\"I want to be a therapist. Social worker. Some combination of the two. Help people work out their issues, you know?\"\n\n\"Yeah, yeah,\" Ryan agreed, although he had never seen a therapist or a social worker before and only had the faintest of ideas about what it was they actually did.\n\nThey exchanged more small talk as they made the short walk to the coffee shop, listing off the other classes they were currently taking, their plans for the big lab report in the lab portion of the biology class, and other things of little consequence. Lily's nervousness seemed to have dissipated. And, Ryan admitted to himself, so had his own. This was easy--just walking and talking.\n\nAlthough, in the back of his head, he still wondered what it was she *actually* wanted to talk about. At the moment, he was torn between \"she has a boyfriend and wants to be clear that they can only be 'just friends'\" and \"she's crazy religious and wants to be upfront about all that\".\n\nThey arrived at the coffee shop and placed their respective orders. As he pondered whether or not it might be offensive to offer to pay for her drink, he missed his opportunity and they ended up paying separately.\n\nDrinks in hand, she led him to a table, somewhat off to the side of the main area.\n\n\"So, I need to clear something up,\" she began, her nervousness returning somewhat. \"Did you ask me out on, like, a date?\"\n\nRyan laughed nervously.\n\n\"Oh, damn, was I that bad at it?\" he chuckled, trying to cover up his embarrassment with humor.\n\nLily laughed with him and he realized it was the first time he had heard her laugh, a quiet reserved giggle. He also noticed how the smile on her face brought out her dimples.\n\n\"But, to actually answer your question, yes, that was my attempt at trying to ask you out, lame as it may have been...\"\n\n\"Oh, no, you're not lame,\" she corrected apologetically. \"*I'm* lame for not realizing. It's just that, in high school, I didn't... well, I wasn't... well, getting asked out is a new thing for me.\"\n\nRyan was shocked. Sure, she wasn't a conventional hot babe of a woman, but she must have caught someone's eye before, at some point.\n\n\"Hey, it's new for me too,\" he replied, trying to smooth things over. \"I didn't really date at all in high school either.\"\n\nThey sat in silence for a long moment.\n\n\"So, are you sure you're interested in me?\" she asked, her nervousness intensifying.\n\nRyan didn't understand the question.\n\n\"I mean, yeah...\"\n\nShould he not be?\n\nLily closed her eyes and took a deep breath, as if she were psyching herself up for something. She looked into his eyes as she made her declaration.\n\n\"I am transgender--a trans woman,\" she stated as plainly as she could.\n\nRyan was stunned. He knew what it meant to be trans--or, at least, he thought he did, but he would never have guessed that Lily was. He struggled to comprehend.\n\nLily filled in the gap of stunned silence.\n\n\"Back in high school... everybody in the school knew. Nobody ever showed any interest in me as far as dating went--small town, you know? I started taking hormones at the beginning of Senior year, but the effects didn't really show in a big way until this past summer.\"\n\nShe took a nervous gulp before continuing.\n\n\"I haven't had any surgeries, so everything is still... well, like what I was born with.\"\n\nShe quickly pivoted from that line of information.\n\n\"It's just that now, being here in college, I guess I haven't quite grown accustomed to the concept of people *not* knowing. That's why I didn't piece things together the other day--it was nothing to do with you.\"\n\n\"Okay...\" Ryan finally managed to reply, still reeling from the revelation. Lily kept talking.\n\n\"I'd be happy to go to the movie with you. As a date, or as classmates... whatever. I just... well, I thought that, if you wanted this to be a date-thing, that you should know who you were dealing with, with me.\"\n\n\"Thank you for telling me this, really, thank you,\" he said, trying to sound as kind as possible. He couldn't imagine what it was like to reveal something like this to someone. But beyond that response, he truly had no idea how to proceed. Lily was smart, cute, and seemed to have a solid future ahead of her. He was definitely attracted to her. But the thought of interacting with a penis was... off-putting.\n\n\"You really didn't know?\" she asked curiously.\n\n\"Not a clue,\" he replied. This elicited a small self-satisfied smile from Lily. It was this smile that did it for Ryan.\n\n\"Can I think about it?\" he asked.\n\n\"Absolutely,\" Lily replied. \"I know it's a lot to process. Get back to me on Friday, after class?\"\n\n\"Yeah, that works,\" Ryan said, nodding. Two days should be enough time to sort out his own sexual identity and preferences, right?\n\n\"And, just to be clear, I want you to know that it's okay either way,\" she explained. \"I don't think it would make you a bad person if you weren't okay with... well, with me.\"\n\nRyan nodded again.\n\n\"Oh, and one last thing,\" Lily said, rising from her seat. \"I kind of like being in a place where I can feel 'normal'--not having everybody know about my background. So, if you could keep this between you and me...\"\n\n\"Absolutely,\" Ryan replied, nodding more emphatically this time. He understood that she had entrusted him with something confidential.\n\n\"Well, see you Friday,\" she said with a wave as she picked up her coffee and walked away.\n\n***\n\nIt was a lot to process in only 48 hours.\n\nOn the one hand, the decision seemed obvious. He wasn't gay--not that he anything against that--and the idea of being sexually involved with another person's penis was, well, kind of gross to him.\n\nBut on the other hand, there was literally everything else. Her intelligence. Her long, stocking-clad legs. Her smooth, pale skin. Her bright blue eyes. Her coquettish smile...\n\nConsulting the internet was no help. Websites and forums offered plenty of advice about dating and sex with trans women, but a lot of it was contradictory or obviously biased. Dipping into the porn side of things was even more off-putting--trans women fucking other trans women, or men. 69 blowjobs. He was used to seeing cocks in porn, of course, but when he imagined himself on the receiving end of one, the situation was a lot less appealing.\n\nBy Thursday afternoon, Ryan was no closer to having made a decision than he had been on Wednesday. Then, as he was walking out of the dining hall after finishing his dinner, he saw it: a poster for the campus LGBTQ+ group. Their meeting time was, coincidentally, Thursday in the early evening. He should have just enough time to head over to Reese Hall, where they were meeting.\n\nHe remembered that Lily had asked him to keep her identity as a trans woman a secret. But as long as he didn't mention her name or give any other identifying information about her, it couldn't hurt to ask for some advice on the situation, right?\n\nRyan arrived just in time and was able to seat himself in the back of the room, a classroom in the History building. Looking around, he felt uncomfortably out-of-place. He, a painfully average-looking straight white male among a rainbow of dyed hair, piercings, effeminate looking men, masculine looking women and absolutely everything in between.\n\nRyan managed to avoid attention from his place in the back of the room as the meeting began, the president (or whatever their name was for their leadership position) called things to order. He was a chubby, clean-shaven young man with glasses and black painted fingernails and he spoke loudly, authoritatively, and with a surprisingly thick Southern accent as he went through the list of items on the agenda.",
        "The group was planning a \"Queer Homecoming\" dance, but nobody could agree on theme (or if there should even be a theme), venue or even a name for the event. Most of the people there seemed to know one another fairly well and they joked good-naturedly with one another even as they argued.\n\nThey were also planning a fundraiser, which was at an even earlier stage of planning. This too had many points of contention.\n\nRyan had been a part of the National Honor Society in high school and their meetings had mostly gone the same way--a lot talking with very little actually accomplished. So, it was interesting to note that organizational bureaucracy did not discriminate.\n\nWhen the formal portion of the meeting ended and everybody broke out into small groups to socialize was when Ryan saw his opportunity. But how to ask? And who?\n\nLuckily, he was approached by the president himself.\n\n\"I don't think I've seen you here before,\" he said, extending his hand for a handshake. \"I'm Zach.\"\n\n\"Ryan,\" he said, in introduction. \"And you're right--I haven't been here before.\"\n\n\"Well, you're welcome any time. If you have any questions about anything, you can ask me, or any of the other officers.\"\n\n\"Actually, I did have a question...\" Ryan began, trailing off. \"Actually, more like a request for advice.\"\n\n\"Oh, sure, sure,\" Zach replied. He then shouted across the room, waving some people over: \"Ash, Liam, Steph, come on over here!\"\n\n\"There's no need to get everybody--\" Ryan began, but was then cut off.\n\n\"You know how it is--ask five queer people for their opinion on something, get six different responses. Might as well get a well-rounded perspective.\"\n\nThe people Zach had called over made their way to the back of the room.\n\n\"What's up, Zach?\" asked a cute young woman with short blonde hair and lots of makeup.\n\n\"Just wanted your opinion on something,\" Zach replied.\n\n\"Opinion on what?\" a more stereotypically \"butch\" looking woman asked.\n\nZach simply waved his hand at Ryan, as if giving him the floor. The attention of all four of them was suddenly upon him, making him immediately nervous. Nevertheless, he might as well do what he had come to do.\n\n\"So, there's this girl I met in one of my classes...\" Ryan began.\n\n\"If she says she's gay, you're not gonna be able to 'convince' her otherwise,\" the butch-looking woman stated dismissively.\n\nRyan chuckled nervously and a few of the others smiled as well.\n\n\"No, it's not like that. She's straight. Or, I think she is. That wasn't the issue.\"\n\nThe small group stood staring expectantly at Ryan as he fumbled through his explanation.\n\n\"I mean, I asked her out and she said 'yes'. But then she told me--in confidence, but I think it's okay to tell you all, because I'm not saying who she is--that she's trans.\"\n\n\"So, what's the issue?\" a skinny man with faded green-dyed hair asked.\n\n\"The issue is that he's afraid of being gay because he's into a trans woman,\" the femme-looking woman answered.\n\n\"No, no, no,\" Ryan said, holding his hands up defensively. \"I'm not afraid of anything. I don't have anything against being gay. I'm just kind of... I don't know. Confused. I like her. She's really smart and cute. But... I don't know if I could be okay with having a sexual relationship with, well, a penis.\"\n\nThe butch-looking woman extended an arm toward him, hand balled in a fist. At first, Ryan thought she meant to hit him, but he quickly caught her meaning. He extended his own clenched hand and met hers in a cautious fist bump.\n\n\"Ash!\" the femme-looking woman chastised.\n\n\"What?\" she replied defensively. \"Dicks are gross. I dated some really feminine-looking boys in my past, before I came to terms with being a lesbian. I didn't like dicks. It's okay for me to feel that way, right?\"\n\nThe group took a collective sigh of contemplation.\n\n\"How do you even know she has a penis?\" Zach asked. \"You can't assume the surgery status of a given trans person.\"\n\n\"She told me,\" Ryan replied. \"Well, more or less. She said she had been on hormones, but hadn't had any surgeries.\"\n\n\"So, are you more afraid of saying 'yes' and having to deal with a woman who has a penis, or are you more afraid of saying 'no' and missing out on a relationship with a woman who you really like?\" Zach asked.\n\n\"I don't know!\" Ryan answered in exasperation. \"It's a lot to think about. I don't know how I feel. That's why I came here. I hoped you all could give me some sort of advice that would help me.\"\n\n\"We can't tell you what to do,\" the green-haired guy said. \"At the end of the day, it's gonna be all on you.\"\n\n\"Can I butt in for a second?\" a new voice to the conversation asked. The question came from a... well, a *person*, who was seated not far from the group. Obviously masculine facial features were paired with makeup and lipstick. A trans woman? Ryan tried to not speculate.\n\n\"Oh, Marissa, perfect!\" Zach said with a smile. \"You're just what we needed to complete this triumvirate of queers.\"\n\n\"Technically, a triumvirate is a group of three,\" Ash corrected him.\n\n\"So, what, the 'High Council of Queers'?\" Zach asked.\n\n\"Yeah, that works,\" Ash said with a smile.\n\n\"Regardless, please, tell us your thoughts, Marissa,\" Zach concluded.\n\nMarissa cleared her throat softly and sat, facing Ryan, speaking directly to him rather than to the group as a whole.\n\n\"The thing to remember about trans women is that they think of themselves as, well, *women*. Beyond that, every trans woman is different, so it's hard to make generalizations. But most of them probably don't want to use their penis on you in the way you might be thinking.\"\n\nRyan swallowed hard at this. She continued, as if she had read his mind on the subject.\n\n\"Porn between cis-gendered, heterosexual people is, of course, a warped version of reality. And any porn with trans women (or trans men) is just as, if not more, distorted.\"\n\nRyan nodded as she continued. He hadn't thought of things in that way, but it made sense.\n\n\"If she's been on hormones for a while--long enough to pass as female to you--her genitals are probably pretty feminized too. Thinking of 'penises' and 'vaginas' as binary classifications isn't quite right. She has a penis, yes, but you should think of it as a 'feminine penis'. It's not the same.\n\n\"And finally, you should realize that there is no harm in trying things with her and there is nothing wrong with changing your mind about it later. Lots of cis-gendered couples have issues with sexual compatibility, so it's okay if that becomes an issue, down the line.\"\n\nShe finished, leaving the group in stunned silence.\n\n\"Daaaamn, fuckin mic drop from Marissa,\" Zach exclaimed, eliciting an embarrassed smile from Marissa and chuckles from the others.\n\n\"Wow, I think that's... pretty much exactly what I needed to hear,\" Ryan said appreciatively.\n\n\"I'm glad I could help,\" Marissa replied with a self-satisfied smile. \"And, whatever happens, just be sure to be nice to her about it. It's real hard to put yourself out there, as a trans person. She put a lot of trust in you, telling you all this, so she must like you. So, try to not be an asshole.\"\n\nRyan's brain focused on: \"she must like you\". He hoped that this was true...\n\n***\n\nAfter class on Friday, Lily and Ryan met up and walked, wordlessly, toward the coffee shop. As soon as they were far enough away from the mass of people exiting the classroom, Ryan broke the silence.\n\n\"Date!\" he declared with the mock formality of a judge delivering a sentence.\n\nLily smiled at his goofy delivery and a warmth spread throughout Ryan. That smile...\n\n\"Really?\" she asked, still smiling.\n\n\"Yes,\" Ryan said, nodding. \"I mean, you have to understand that all of this is new to me--I might change my mind, in the future.\"\n\n\"Oh, of course, of course,\" Lily replied. \"I wasn't trying to lock you immediately into marriage or anything. I just wanted to be up front with things.\"\n\n\"I know. And I really appreciate it.\"\n\n\"So, tomorrow at 7?\"\n\n\"Actually, make it 6:30, so we can get a good spot.\"\n\n\"Okay, that makes sense. I, uh, I don't actually know where Reese Hall is though.\"\n\n\"It's off in that direction,\" Ryan said, pointing and feeling stupid for not knowing the cardinal directions on the campus. \"Hey, do you want to meet me in the quad and we'll walk over there together?\"\n\n\"Works for me,\" Lily replied.\n\nAt that point, they had arrived at the coffee shop, but had pretty much wrapped up the conversation.\n\n\"I, uh, was actually headed that way for my next class,\" Lily said, embarrassed, as she pointed in the opposite direction.\n\n\"Aha, okay,\" Ryan said with a laugh. \"I'll see you tomorrow then.\"\n\n\"Yeah, it's a DATE,\" she replied teasingly.\n\n***\n\nRyan wasn't sure what to wear for the date--he didn't want to wear just a t-shirt or a hoodie, like he usually wore. But he also recognized that this was just an outdoor movie--nothing formal. Eventually, he settled on wearing jeans and a blue knitted sweater.\n\nHe was relieved when Lily showed up, wearing much the same kind of thing that she typically wore: a mid-length yellow plaid dress worn over a long-sleeved black shirt and black stockings. The outfit didn't reveal a whole lot, but those stockings really accentuated her long, smooth legs.\n\n\"Oh, I'm sorry, I didn't realize I was supposed to bring anything,\" she said apologetically as she got within earshot.\n\nIt took Ryan a second to understand what she meant--she must have been referring to the blanket that he had over his shoulder.\n\n\"Oh, no, you didn't need to bring anything. I figured this is big enough for both of us. Seating's just on the lawn, and it might be a little muddy.\"\n\n\"Oh, no, you're going to put this on the ground?\" she asked, shocked, as she came closer and inspected the quilt. \"This looks handmade...\"\n\n\"Yeah, my grandma made it for me,\" Ryan replied somewhat embarrassed. \"Kind of a 'going-off-to-college' present. But it hasn't been cold enough yet to really need it in bed--so, it's clean.\"\n\n\"It's beautiful,\" Lily remarked, running the fabric through her fingers. \"Your grandmother must be very talented.\"\n\nRyan chuckled, still embarrassed.\n\n\"Yeah, she's made quite a lot of quilts in her time. Do you know much about quilting?\"\n\n\"Kind of. I've never made one myself, but I do sew a lot of other things.\"\n\n\"Oh, really?\" Ryan asked, impressed.\n\n\"I made this dress myself,\" she said, bending at the knee and then doing a quick twirl around.\n\n\"Wow,\" Ryan exclaimed, in appreciation of both her handiwork and her lithe body.\n\n\"My aunt owns a fabric and art supplies store,\" she explained. \"I'm very close to her, and my cousin. So, I grew up around sewing. I've been making clothes and stuff since I was in middle school. Most of my dresses, I made myself. Never a quilt though--that's a whole other level of skill.\"\n\n\"Really?\" Ryan asked. He had always assumed that a quilt was just a big square of fabric with a thin layer of fluff inside.\n\nThey walked toward Reese Hall together as Lily explained quilting to him. He would never have guessed that this could be even a mildly interesting topic of conversion. But the way she went on about it, Ryan was intrigued. She was clearly passionate about it. Because her demeanor was usually relatively flat, almost serious-looking, seeing her so animated about something brought a smile to his face.\n\nWhen they got to the lawn, Ryan felt guilty about spreading the quilt, for which he had a newfound appreciation, on the grass. Lily spotted an area, kind of off to the side, on a sidewalk. It wasn't the best view, but it wasn't bad. They folded the blanket a few times and spread it on the cement.\n\nThey talked a bit more about sewing and Ryan admitted, embarrassed, that his own hobbies (video games and reading sci-fi/fantasy novels) weren't nearly as impressive. Their conversation was cut short as the movie began. It was a little difficult to hear, because of their position, but they had both seen the movie before, so it wasn't a big deal. Ryan was pleased to learn that Lily wasn't a movie-talker, and they enjoyed the film in relative quiet, laughing together at both the punchlines and the awkwardly dated special effects.\n\nAs the movie went on, the sun finished setting and the autumn night began to get a bit chilly. Without saying anything, Lily scooted closer to him, her thigh pressed against his thigh, her shoulder against his. Having never been this close with a girl before, Ryan was thoroughly distracted from the movie. He agonized for minutes over whether or not to attempt wrapping his arm around her. She made the first move and grabbed his hand, clasping it within her own, positioning them both at the place where their thighs met.\n\nHer hand was cold, but soft, and her thigh was warm. Ryan's heart beat faster as she squeezed his hand softly. She eventually leaned in further, resting her head lightly against his shoulder, strands of her long hair draping across his chest.\n\nFar too quickly, the movie was over and students across the area began to pack up and disperse. Lily released his hand and gave his thigh an approving pat. They stood, stretched, and Ryan carefully shouldered the quilt.\n\n\"Can I walk you to your dorm?\" Ryan asked, hopeful of being able to spend a little more time with her that evening.\n\n\"I actually live off-campus,\" she replied. \"But you can walk me to my car.\"\n\n\"Oh, sure,\" Ryan said, somewhat confused, as the two began walking toward the main campus parking lot. \"I thought freshmen had to live on campus?\"\n\nHe immediately regretted his question. It had sounded somewhat accusatory, although he hadn't intended it to.\n\n\"They do,\" Lily replied, unperturbed. \"Normally. They gave me a special waiver of the requirement because of... well, I guess we all agreed that it would be easier for me to live off campus than deal with all the issues that might come up from communal living.\"\n\n\"Ah,\" Ryan sighed in understanding. The whole evening, he had thought only of her long stocking-clad legs, her warm thigh, her soft hair... He had forgotten completely about... the other things. \"Sorry, I didn't mean to bring up...\"\n\n\"It's okay,\" she said, cutting him off. \"I like having my privacy anyway.\"\n\nThey walked for a while in silence.\n\n\"It costs a bit more than a dorm room,\" she continued. \"But my parents help me out. And I work. So, I'm busy, but I feel like it's worth it.\"\n\n\"Oh, where do you work?\" Ryan asked. As they continued to walk, Lily brought herself closer to him, extending her hand, which Ryan gladly clasped.\n\n\"Remember the aunt with the crafts store?\"\n\nRyan nodded.\n\n\"Well, she's great at running the business, in a lot of ways, but she's terrible with numbers. I handle her accounting, payroll, and taxes. It's boring, but it's flexible. And I can handle it all remotely--I manage most of it on nights and weekends.\"\n\nRyan was impressed. Lily was turning out to be a woman of many talents.\n\n\"A lot more interesting than my job,\" he admitted. \"I wash dishes at the student dining center. It's nice that it's on campus, but it means I'm busy most nights, during the after-dinner hours. Especially on weekends\"\n\n\"But not tonight?\" Lily asked.\n\n\"I switched shifts with a coworker,\" he explained. \"I had a hot date planned,\" he added, with a wink.\n\nLily smiled and squeezed his hand affectionately.\n\n\"Hey, give me your phone,\" Lily requested. \"So I can put my number in it.\"\n\nRealizing that they hadn't exchanged numbers yet, Ryan unlocked his phone, opened his contact list, and handed it to Lily. Still holding his hand, she typed in the information as they walked. Shortly, she gave it back to him. She had texted herself a kissing face emoji.\n\nRyan realized that they were now at the edge of the parking lot.\n\n\"Come here if you want a real one,\" she said teasingly.\n\nNervous but trying not to show it, Ryan stepped closer to her as he pocketed his phone. Lily rested her hands gently on his chest as she tilted her head up to give him a quick peck on the lips.\n\nShe stepped back, but paused.\n\n\"One more,\" she declared.\n\nHappy to oblige, Ryan allowed her to once more step up to him. This time, he wrapped one arm around her waist as their lips met in a longer, more passionate kiss.\n\nShe once more broke away.\n\n\"Text me, okay?\" she asked with a wave, retreating into the parking lot.\n\n\"Yeah, will do,\" Ryan replied, waving back.\n\n***\n\nLater that night, before he went to bed, Ryan took a hot shower. Being a Saturday night, the large communal bathroom was empty, save for him. He proceeded to do what he always did during late night showers.\n\nIt didn't take long for him to get hard--the memory of Lily's soft lips against his own was still fresh in his mind. The way she rested her hands on his chest had felt so gentle, so comforting. His arm around her waist had made him feel so strong, so confident.\n\nHe imagined what her lower back and hips would feel like, without the interference of clothing. Soft and warm, of course. Her stomach, flat and smooth.\n\nBut then...\n\nHer penis.\n\nHe had almost forgotten about it. How could someone so irresistibly feminine, have male genitalia? He thought about what Marissa had said about a \"feminine penis\". All he could picture was a big, hard, hairy cock--inherently and irrefutably male.\n\nHis own erection began to subside. Something else Marissa had said came to mind: \"lots of cis-gendered couples have issues with sexual compatibility\". Was their relationship doomed from the start? He certainly liked a lot more about her than just her body--her intelligence, her passion for her hobbies, the way she made him feel just so damn good, just by being around.\n\nHe gave up on masturbation. But he wasn't going to give up on Lily. He wanted to see this through, as far as he could take it. Whatever that actually meant, he had no idea.\n\n***\n\nThe next day, in the late morning, Lily sent Ryan a text message.\n\n[I know there are some dumb rules about waiting to text after a date, but I don't care. I just wanted to tell you that I had a great time with you last night]\n\nRyan smiled to himself. He had been fighting the urge to send her a similar message all morning, but had been held back by the same social conventions she had just flaunted.\n\n[I did too! ngl, those dumb rules have kept me from texting you up until now]\n\nRyan smiled at her reply\n\n[Hey, this is me holding back. I wanted to text you last night]\n\nShortly thereafter, another message from her came through:\n\n[So, when can I see you again? Class on Monday doesn't count]\n\nAnswering this question proved tricky, they came to realize as they exchanged messages throughout the morning. Ryan worked dinner shifts at the cafeteria every night the coming week, except for Thursday. And, as it turned out, Lily was busy Thursday with a monthly video call with her aunt.\n\nThey settled on meeting up for post-dinner dessert downtown, after Ryan got off work on Friday. Ryan didn't have a car, and Lily offered to drive him, but downtown was only a short walk from the edge of campus and he insisted that he could easily meet her there.\n\nAfter their initial flurry of messages setting up the date, Lily was oddly quiet. She had explained this herself, somewhat apologetically, on Tuesday, telling him that she really enjoyed talking to him in person and would rather save her thoughts for their date. Ryan was more than okay with this--he had never been much of a texter.\n\nWhile not particularly elaborate, their second date was great. It was unseasonably warm and they got ice cream cones from a local parlor downtown. They spent the entire evening walking and talking as they made their way back and forth along the linear stretch of the college town's downtown area. They held hands as they walked, a pleasure that was still new to Ryan, and it still made his heart race.\n\nMaybe it was the warmth of the evening, or maybe it was because she was trying to make herself more conventionally alluring, but for this meeting she wore a sleeveless white and green checkered dress, with no shirt underneath. The neckline was still very conservative, and she still wore block stockings and flats, but it was nice to see more of her pale, smooth skin. He could only assume that she had made this dress herself and he continued to be impressed by her skill.",
        "Ryan learned more about Lily's family. She was an only child, her parents very conventional and happy together. She talked about her aunt, the one who ran the crafts store, named Margaret, and how she had really supported Lily when she had come out as trans. Her parents hadn't been against her, per se, but hadn't exactly been the most understanding about it either. Her cousin Annie, aunt Margaret's daughter, was another major figure in her life. Because she had no siblings, Annie, who was four years older than her, had acted like a big sister to her her whole life.\n\nLily let slip that it was Annie who had pointed out to her that Ryan's clumsy invitation to the on-campus movie had actually been an attempt at a date. So, it seemed like there was little that was not shared between these two. Having his actions scrutinized by a team of women made him just a little nervous.\n\nBut, she explained, it had been Annie's advice that she be as forthcoming about her gender status as possible. Ryan made a mental note to thank her, if and when they ever met.\n\nFor his part, Ryan had comparatively little to say about his own upbringing. He had supportive parents and a younger brother, although the two weren't very close. Several aunts, uncles and cousins, but none he was close to.\n\nThey both talked about classes--the biology class they were both in, but their other classes as well. Lily had been a straight-A student, back in high school. Ryan was unsurprised, but also unintimidated--so had he. So, they might be in very different majors, but it was good to know that they were both committed to prioritizing their education.\n\nIt was 1 a.m. by the time they decided to wrap things up. Ryan could have gone longer, but Lily couldn't stop yawning--she was an early riser by nature and was far less used to being up so late.\n\nThey ended up in a parking lot, by Lily's car, a white Ford Focus.\n\n\"Come on in,\" she invited him.\n\n\"Oh, I don't mind walking home,\" Ryan replied, not wanting to be a burden. He was somewhat self-conscious about not owning a car and liked to maintain his independence. \"My dorm really isn't that far from here.\"\n\n\"Okay. You can walk home if you want to. But I still want you to get into my car.\"\n\nRyan looked at her, confused. She was giving him a look like he was the biggest moron on the planet. Which, after he mentally put things together, he supposed he was.\n\n\"Oh, right, yeah, sure,\" he agreed hastily, walking around to the passenger side of the car.\n\nHe was quickly seated and as soon as he turned to face Lily he felt her lips press against his. He returned the kiss as he felt her hands press against his body--one on his shoulder and one on his knee.\n\nThey continued to kiss, fast and hard, with desperate gasps of air in between. Her hands gripped him with a force that was somehow both tender and strong.\n\nHis own hands began to explore, very gradually. A hand on her knee felt the soft fabric of her dress and, with gentle pressure, the silky smoothness of the stocking underneath. His other hand reached up to her neck, touching the skin that was every bit as warm and soft as he had imagined. He brushed her hair from her face and tucked it behind her ear--her long hair was also just as silky and smooth as he had imagined.\n\nRyan's erection strained against its confining boxers and jeans and he shifted his body to try to work it into a more comfortable position--to no avail. He wondered absently how far things would go that night, but he quickly put such thoughts aside and focused on enjoying the present.\n\nWhen she began to kiss with her mouth open, her tongue gently probing against his, he responded in kind. Their hot, slippery tongues slid across one another and Lily let out an audible moan of pleasure.\n\nUrged on by this, Ryan removed his hand from her knee and brought it around her waist. He ran his palm over the fabric of the dress down to her hips and then slowly upward...\n\nAnd, just like that, it was over.\n\nWhen Lily pulled back from their embrace, he quickly retracted his hands, as if he had just touched something painfully hot.\n\n\"I'm sorry, I didn't mean to--\" Ryan apologized, but was cut off.\n\n\"It's okay, it's okay,\" Lily assured him. \"You didn't do anything wrong. Really. It's just... this is all new to me. I need to take things slowly.\"\n\n\"Hey, this is all new to me too,\" Ryan admitted. \"So, I'm okay with taking things as slowly as you need to.\"\n\nLily patted him approvingly on the thigh.\n\n\"Thank you.\"\n\n\"No problem.\"\n\nThey sat for a moment, in silence.\n\n\"So, do you want that ride back to campus?\" Lily asked.\n\nRyan considered the raging hard-on currently in his pants and the potential awkwardness of attempting to conceal it on the long walk home.\n\n\"I need to focus on driving, but you can rest a hand on my leg,\" Lily offered.\n\n\"Sold!\" Ryan exclaimed, bringing a smile to Lily's face. She had grown so serious--it felt good to bring things back to a lighthearted mood.\n\nLily retrieved the car keys from her purse and cranked up the ignition. She adjusted the car's heater to blast at the front windshield, dissipating the fog that had accumulated from their making out. They buckled up and, just as Ryan was about to move his hand to its pre-approved position on her knee, Lily adjusted herself, hiking her dress up and exposing a patch of black stocking just above the knee.\n\nShe smiled warmly at Ryan as he rested his hand on her leg. The stocking was smooth and warm from the skin just beneath it.\n\nSo much for giving his erection time to subside...\n\nThe drive was brief and wordless. When they pulled up to his dorm, he removed his hand and unbuckled.\n\n\"One more,\" Lily requested, leaning toward him.\n\nThey shared one last kiss of the evening, long and breathless.\n\nRyan extricated himself from the car as gracefully as he could, given the circumstances. They wished one another a good night and he watched longingly from the sidewalk as she pulled away.\n\n***\n\nBeing a late Friday night, the bathroom was empty as usual, to Ryan's great relief. He had a greater need than usual to 'relieve' himself.\n\nHe began to stroke himself immediately as he got into the shower. His hand on her leg... she had felt so warm, so soft. But he wanted more. He wanted to feel every part of the pale, bare skin of her long, slim legs. Her lips, her wet tongue... He wanted more of that too. He wanted to kiss her neck, her shoulders, her chest. God, her chest. He knew her breasts had to be small, but that didn't matter--he wanted them all the same.\n\nA part of his brain reminded him about her penis.\n\nBut, this night, he didn't care. The thought was discarded as quickly as it had come up. He wanted all of her. He wanted to touch, to kiss, to hold every part of her. And he wanted her to do the same to him.\n\nHe shuddered in orgasm and leaned heavily against the wall in order to not fall down. It took a good long while to catch his breath. But when he did, he felt a newfound kind of mental clarity about the situation.\n\n***\n\nAfter that second date, they continued to text, but they spent more time talking face-to-face during the week. They both had a break after their shared biology class and they were able to take turns walking one another to their next class (before walking back to the opposite side of campus for their own next class).\n\nOn Wednesday, after the end of a rant regarding how the cafeteria egg noodles for beef stroganoff somehow managed to be both tough and undercooked AND mushy and overcooked, Lily brought up the weekend.\n\n\"Hey, how about this weekend... The Mummy... Returns!?\"\n\nRyan laughed at her goofy delivery of the question.\n\n\"I mean, it's not a great movie,\" she admitted, \"but it's still fun, right?\"\n\n\"Yeah, that sounds good,\" Ryan agreed. \"I have dinner shifts at the cafeteria Saturday and Sunday, but I should be free Friday night.\"\n\nShe then answered the question he was about to ask.\n\n\"You can come over to my place--we can stream it there.\"\n\nThe prospect of having the privacy of an entire apartment, just for them, was unbelievably exciting. He tried to temper his expectations with a reminder that she wanted--perhaps, needed--to take things slowly.\n\n\"Cool,\" he replied, trying to not sound as eager as he felt. \"I'll come over after dinner?\"\n\n\"How about you come over FOR dinner?\" she asked. \"My kitchen is tiny, but I think it would be fun to make something together.\"\n\n\"Sounds great,\" Ryan agreed, feeling slightly intimidated. His cooking skills basically began and ended with preparing boxed mac and cheese. He hoped he wouldn't embarrass himself. \"Just as long as it's not beef stroganoff...\" he joked.\n\n\"No...\" Lily said with a smile. \"I was thinking of this basil and tomato chicken dish my cousin told me about. You don't have any allergies or anything, do you?\"\n\n\"Nope. I'll eat pretty much anything--but that sounds fantastic.\"\n\n\"Great! I'll pick you up around 5:30 then?\"\n\nRyan hesitated.\n\n\"You're feeling self conscious about not having a car, aren't you?\" she asked, hitting the nail on the head.\n\n\"Yeah,\" he admitted. \"I'm trying to not think it's some macho manly bullshit issue. I guess it just bums me out to lack that kind of independence.\"\n\nLily nodded in understanding.\n\n\"But, it'll all be worth it, right?\" she asked, hesitantly.\n\nDinner, a movie, and who knew what else, and all he had to do was accept being driven around town a little?\n\nRyan laughed at himself.\n\n\"Of course,\" he exclaimed. \"5:30?\"\n\n\"5:30.\"\n\n***\n\nThe car ride to her apartment was short, but it would have been quite a trek by foot. He was grateful that he had accepted the ride.\n\nHer apartment was small and sparsely decorated, but it was clean and smelled fresh. The living room housed a television, a loveseat, and a small table and chairs. The kitchen area was open to the rest of the living room. Down a short hallway lie, presumably, a bedroom and a bathroom.\n\nWhen Lily entered, she took off her flats, and so Ryan did likewise with his sneakers. Her black-stockinged feet looked cute without shoes. They looked particularly great with the black and white gingham dress she wore, alternating black and white buttons running the length of the dress from collar to hem.\n\nThe dinner was easy enough to make, and Ryan managed to not embarrass himself too badly, although it was obvious that he wasn't very experienced in the kitchen. She delegated the easy tasks to him. He measured out chicken broth and heavy cream while she minced garlic. He sliced bread and toasted it while she sauteed chicken. He grated cheese while she whisked together the creamy sauce.\n\nThe meal was amazing--not only compared to the poorly made cafeteria food, but even compared to most of the home-cooked meals he had had growing up.\n\n\"Wow, is there anything you *can't* do?\" Ryan asked, impressed, as he used a piece of toast to soak up some of the sauce on the plate.\n\n\"I can't do semaphore,\" she answered, thoughtfully.\n\n\"What? I thought everybody learned semaphore in, like, elementary school?\" Ryan asked in mock surprise.\n\nLily smiled to herself, suppressing a laugh.\n\n\"What the hell is 'semaphore'?\" Ryan asked under his breath.\n\n\"I think it's the language ships used to use to communicate,\" Lily replied. \"Like, with flags.\"\n\nRyan laughed aloud at the absurdity of the situation.\n\n\"I do *not* know why I know that, by the way,\" she clarified as she joined him in laughter.\n\nWhen their laughter died down, Ryan offered to clean up the dishes. Lily waved away the concern, content with letting them soak in the sink overnight. After adjusting the lights in the apartment to be less bright, she then invited him to join her on the small couch in front of the TV.\n\nOnce seated, she immediately scooted closer to him, until her body was pressed against his. With no other comfortable position available, he wrapped his arm around her shoulder and she snuggled in even closer, her head resting against his chest, her hands both on his thigh.\n\nRyan was immediately aroused, a fact that he could not conceal--his only hope was that her attention on the screen would hide the fact.\n\nLily used the remote to navigate to the movie and quickly loaded it up. The film was mere minutes in when she paused it and brought her lips up to Ryan's surprised face. They kissed in a frenzy of long, passionate kisses, until she paused to catch her breath.\n\n\"Don't worry, we can still watch the movie,\" she explained nonchalantly. \"After we're done.\"\n\n'Done with what?', Ryan wondered, though felt no need to actually ask. He simply allowed himself to be swept up in another round of wetter, sloppier kisses. Both of her hands caressed his thigh--one soon felt its way up, underneath his shirt and onward to his chest. Her slender fingers ran lines along his stomach and chest, eventually gently curling a fistful of short chest hair.\n\nFrom his current position on the loveseat, Ryan could do little more than massage her shoulder with the one hand that was wrapped around her--his other hand barely managed to reach over to her knee.\n\nHer hands suddenly withdrew and Ryan was afraid that the evening's physical encounter had come to an end. He was pleasantly surprised when he saw her working at the buttons of her dress, unfastening them until she could squeeze her arms out of the sleeves, leaving her topless, save for a simple white sports bra.\n\nShe shifted her positioning on the couch, allowing Ryan to pivot as well, their bodies now facing one another directly. He gently gripped her waist with both hands, excited by the warmth and softness of her bare skin. He ran one hand around to the small of her back while the other climbed gently upward.\n\n\"Over the bra, please,\" she whispered, in between kisses.\n\nRyan gladly obeyed, gently cupping a breast with his hand. She let out a sharp gasp as he squeezed, as softly as he could. Her breasts were indeed very small, the padding of the bra being thicker than the actual breast beneath it. But she was obviously very sensitive. As he caressed the bra's fabric, he felt the small points of her erect nipples--swirling his thumb around these produced deeper, more primal moans from his partner.\n\nConsidering the size of her breasts, he realized that he actually felt himself more turned on by these moans of pleasure than he would have been from the physical sensation of feeling up double Ds that elicited less of a reaction.\n\nBecause she was too distracted to kiss back properly, Ryan instead kissed her throat, neck and shoulder. He was less vocal than her about it, but he was going crazy with pleasure, his erection straining for release.\n\nRyan had to pause as she pulled his shirt up and over his head and tossed it aside. Lily now took charge and leaned into him, kissing his neck, shoulders and chest. He felt somewhat awkward as she stroked his bare nipples--he had never been particularly sensitive there, and was definitely not as sensitive as her. She kissed her way down his happy trail, eventually sliding off the couch and taking up a position on her knees, between his legs.\n\nHe was shocked when he felt her run a hand along the length of his erection, over the fabric of his jeans.\n\n\"Is this okay?\" she asked with shy nervousness.\n\n\"Yeah,\" Ryan replied, shocked at the progression of events. In his head, the response was more like \"Fuck, yeah!\"\n\nLily continued to rub, cupping her hands to stroke the length of his cock. She looked up at him, wordlessly repeating her question. Ryan nodded emphatically and she grinned with excitement.\n\nLily deftly undid the top button of his pants and, careful to not snag anything, pulled down the zipper. Now partially freed, his erection straightened out, its head peeking out over the waistband of his boxers. She resumed the gentle stroking with her cupped palm, this time over the fabric of his underwear. When her hand made contact with the bare head of his penis, she tickled it gently with a fingertip, sending a shiver of pleasure down Ryan's spine.\n\nShe giggled at this and then tugged at the combined waistbands of his boxers and jeans. Helping her out, he lifted his butt off the couch, and she quickly pulled the clothing down to his ankles. As he seated himself, she shucked the underwear and pants fully free, tossing them to the side.\n\n\"Fuck...\" she swore, in awe of what she saw before her. Ryan knew that he was only average-sized, but he smiled to himself at this subtle stroke of his ego.\n\nMore than just his ego was stroked as Lily took a firm grip of his cock and began pumping it slowly but evenly.\n\n\"Does that feel good?\" she asked, her tone still shy and curious.\n\n\"It feels amazing,\" Ryan answered. Encouraged by his approval, her grip tightened and her pace quickened. Unsure what to do with himself, he sank deeper into the couch, tilting his head back and letting out a deep sigh of contentment.\n\nLily slowed her stroking to a stop and held the cock upright as she began to kiss it, up and down either side of the shaft. Ryan sat up when she began to do this, eager to watch. The lighting in the room was dim, but it was enough to see the unforgettable image of his lover, her eyes closed in a happy place of her own, nuzzling his cock against her smooth cheek before pressing her soft, wet lips against it in a series of tender pecks.\n\nLily soon shifted her positioning to bring her mouth straight down on the cock, kissing the smooth, sensitive skin of its head. She swirled her tongue around the glans, wetting it completely before bobbing her head downward, taking him into her mouth.\n\nRyan let out an involuntary moan of please at this and felt her lips curl in a self-satisfied smile. She gripped his shaft tightly with one hand, stroking it in time with the movements of her head, slowly working the tip of the cock in and out of her mouth.\n\n\"Does that feel good?\" she asked again.\n\n\"It feels amazing,\" Ryan exclaimed breathlessly.\n\nShe smiled and continued sucking. It was a slower pace than Ryan ever took whenever he pleasured himself, but the intensity was much, much greater.\n\nUnable to even imagine feeling better, his assumptions were shattered as she brought her other hand into play, firmly kneading his balls while she continued to stroke and suck.\n\n\"I'm gonna come soon,\" Ryan warned, mere seconds after she had begun to stimulate his balls.\n\nLily paused, with her mouth at least:\n\n\"I want it,\" she said softly. \"I want you to finish in my mouth.\"\n\nNot wanting to miss her opportunity, she immediately took him back in her mouth, sucking, stroking and massaging, all together. True to his word, Ryan could hold back no longer--he felt his muscles tense as his orgasm shook his lower body. He felt the ejaculate stream from his cock as Lily, without missing a beat, continued sucking. His whole body shivered in overstimulation and, with a gentle hand on her shoulder, he bade his lover to stop.\n\nReleasing his now softening penis, Lily delicately wiped her lips and chin with the back of her hand.\n\n\"Fuck, that was hot,\" she sighed.\n\n\"I'm glad you enjoyed it too,\" Ryan said with a chuckle. Then, a somewhat troubling thought came to his head.\n\n\"Do you want me to...\" he trailed off\n\n\"Oh, no, no,\" Lily stated emphatically. \"I'm good.\"\n\nThere was an awkward pause between them.\n\n\"What I meant by 'taking things slow', was that I need to take things slow regarding my own body,\" Lily clarified. \"I have... some issues I need to work past. But YOUR body,\" she said with a gentle squeeze of his inner thigh, \"well, your body, I'm very comfortable with.\"\n\n\"Okay,\" Ryan replied simply. It was not at all what he had expected from the evening, but he certainly wasn't about to complain.\n\n\"I would like you to make room for me on the couch though,\" she requested. Ryan scooted to the side, but Lily quickly corrected him, helping position his body in the corner of the couch, one leg extended lengthwise, the other hanging off the edge. She took up a position between his legs, her own legs curled up and her upper body resting against his chest.",
        "Ryan was still naked and Lily was still topless. Rather than dressing themselves, she pulled the throw blanket that rested along the back of the couch around their huddled-together bodies.\n\nRemote in hand, she hesitated before resuming the movie.\n\n\"That all felt okay, right?\" she asked nervously.\n\nRyan snorted in disbelief.\n\n\"Are you kidding? It was amazing.\"\n\n\"Okay, good,\" she said with relief. \"I had never done... that before. I was afraid I was going to suck at it.\"\n\n\"Well, technically, you *did* suck at it...\" Ryan joked.\n\nHe couldn't see her face, but he could feel her eyes roll in her head.\n\n\"You know what I mean.\"\n\n\"I do, I do,\" he conceded. \"And to be fair, I've never received a blowjob before, so I'm not technically the best person to ask. It sure felt pretty skillfully done.\"\n\n\"Well, I've been fantasizing about it pretty much since I hit puberty,\" she joked. \"I've just never had a special guy in my life to do it with.\"\n\nRyan hugged her at this. He liked being her 'special guy'.\n\n\"Also, my cousin is kind of a turbo slut--and I don't mean that in a pejorative sense, just that she knows what she likes and goes out and gets it. She's been telling me about her various 'sexcapades', in usually too-graphic detail, for a long time now.\"\n\n\"Ah, there is that too,\" Ryan admitted. This seemed like a very plausible explanation for her odd combination of inexperience and skill.\n\n\"So, ready for the movie now?\" she asked.\n\n\"Go for it.\"\n\n***\n\nFrom that date onward, their relationship fell into a sort of pattern. They would chat and hang out for a while after their shared biology class on Monday, Wednesday, and Friday. And then, one weekend night a week, they would have a date--always something low-key, like an on-campus theatre show or concert, or dinner and a movie.\n\nAfter a few weeks of this, they started referring to one another as boyfriend and girlfriend. It ended up being a pretty easy conversation--they were both very much on the same page, regarding their relationship.\n\nRyan was happy that she was such a low-maintenance partner. She recognized that they were both poor college students and she didn't expect grand, expensive dates. He was also happy that she wasn't particularly clingy. They texted occasionally, but they spent the majority of their nights apart. She wasn't, like the girlfriends of some of the guys he knew on his dorm floor, the type of person to want him around all the time: eating, studying, relaxing, etc. Lily enjoyed her privacy and independence, and Ryan liked that, because he did too.\n\nShe also valued her education and never let their relationship get in the way of her schoolwork. Which, again, worked out great for Ryan because he was also committed to his schooling and liked being able to focus on studying, homework, and class projects on weeknights and then spend time with her on the weekend.\n\nRegardless of the nature of their dates, they always ended up at Lily's apartment. And a blowjob was always involved. She had an admitted fixation on giving oral sex and seemed to derive great pleasure from it. As great as this was, Ryan always felt a little guilty about not being able to give a similar level of gratification in return--in whatever way that would actually be... But whenever his hands would wander too close to her waist, or start to slide underneath her bra, she would gently bring these motions to a stop.\n\nPainfully curious to know what the next step in their physical relationship would look like, but far from dissatisfied with his weekly blowjobs, Ryan bided his time.\n\nHalloween fell on a Saturday that year and Ryan was excited to spend this holiday with Lily. But, for the first time since they had started going out, she blew him off to spend time with someone else--her cousin Annie.\n\nHe couldn't be jealous. He had, after all, had a pretty solid monopoly on her weekends for the past month or so. And he knew that she was very close with this cousin and missed her pretty badly. So, despite his disappointment, he tried to not make her feel guilty.\n\nThe Student Union was hosting a Halloween party on campus. Without any other plans, Ryan showed up. But he didn't have a costume and he didn't really know anyone there. So, he had some snacks and spent most of the evening in his dorm, playing video games.\n\nLater that evening, he was rewarded with a texted series of photos of Lily and Annie, dressed up as sexy witches. It had, apparently, become a recent Halloween tradition for the two of them to sew their own costumes together, in different takes on the same basic idea. Annie's costume was pretty typical--a pointed hat and a skintight black dress with an astoundingly low neckline. She did have an impressive set of tits, and Ryan couldn't help but be turned on, at least a little.\n\nLily's version of the witch costume was, however, a total knockout. Her dress was tattered-looking and tiered at the chest, to not draw attention to her, comparatively, very small breasts. But the hemline of the dress was extremely short and her pale, bare legs went on, and on. Maybe it was because he had always seen her legs in stockings before, but the sight of all that smooth-looking skin really turned him on. The other part of the costume that stood out to Ryan was her makeup. Normally, Lily never wore makeup. Or, at least, not anything that Ryan was able to notice. But, for her costume, she wore lots of black eyeshadow and black lipstick. All this blackness highlighted her flawless pale skin in a way he couldn't have imagined possible.\n\n[I know you said it wasn't a competition, but if it was, I'd say you're the CLEAR winner] he texted her back.\n\n[You like it?] she replied.\n\n[You are so fucking sexy]\n\n[Oh, you're just saying that because you're all backed up, without your weekly blowjob] she texted back with a winking emoji.\n\n[Ask me again, right after a blowjob. I'll say the same thing. You're sexy as hell. You turn me on so much.]\n\nWorried that he had perhaps said too much, or been too graphic, Ryan waited anxiously for her reply, which took some time.\n\n[Well, on a related note, I know I had said that we should just skip this weekend. But I really want to see you. I won't be back in town until kind of late on Sunday. After dinner. But do you want to come over anyway?]\n\n[Absolutely]\n\n[Awesome. Well, I've gotta go now. Annie says hi, by the way]\n\n[Hi Annie!]\n\n[I'll text you tomorrow when I'm leaving]\n\n[Have fun, I'll hear from you then]\n\n***\n\nIt was almost 11 p.m. by the time Lily swung by Ryan's dorm to pick him up. Not really all that late, but later than usual for them, considering they both had 8 a.m. classes on Monday. Given their conversation from before, he had half-expected for her to show up still wearing her sexy witch outfit. So he was disappointed, at least a little bit, when he found her to be wearing one of her typical dresses--pink and floral print, with red buttons running down the center, and black stockings.\n\nThe circumstances of the evening had made it seem like it might be shaping up to be something special, but this outfit, and the chit-chat they exchanged during the short car ride, made it feel completely normal.\n\nWhen they arrived at Lily's apartment, Ryan helped her bring in her small luggage, while she grabbed her purse and a plastic pumpkin filled with leftover candy. He made himself comfortable on the loveseat while he waited for her to unpack and get settled. So he was a little surprised when she joined him almost immediately, straddled him, and began kissing him on the lips, cheeks and neck. She seemed more frenzied, more desirous than usual.\n\n\"I missed you,\" she whispered, in between kisses.\n\nIt had only been a week since their last hookup, but Ryan knew how she felt.\n\n\"I missed you too,\" he replied, his hands running the length of her back, up to the nape of her neck.\n\nAs usual, Ryan let Lily control the pace of things. They made out for a good deal longer than normal, before she dismounted and took up her position on her knees. As always, she stroked and sucked in a way that made Ryan's brain melt with pleasure. He announced his imminent ejaculation and she greedily slurped it down, continuing to suck until he asked her to stop.\n\nAt this point, the two would usually snuggle together on the loveseat and watch a movie. But, this night, there was something different in store.\n\n\"Tonight, I think I'm ready,\" she declared softly, looking up at him from her kneeling position between his legs. She looked so innocent, so shy.\n\n\"You *think*?\" Ryan probed. If they were going to do anything new, he wanted to make sure she was absolutely, completely comfortable with it.\n\n\"Yes,\" she replied, her shyness turning to certainty as she stood. \"Tonight, I am ready for something new.\"\n\nRyan awaited direction as he reached out and idly ran his hands along her thighs. In his seated position, she towered over him, a position of confidence that he found very attractive.\n\n\"Wait here,\" she commanded. \"I'll call you back when I'm ready.\"\n\nWith that, she leaned over to give him a quick peck on the lips before scurrying off to the bedroom. Ryan's mind raced with the possibilities of what might await him. Even just being in the bedroom itself would be something new--despite the amount of time he had spent in her apartment, this room had always had its door closed, another mystery to this woman who already had more than her fair share of mysteriousness.\n\nHe wasn't left to his thoughts for too long as Lily soon called from the bedroom for him to join her.\n\nStill naked, Ryan crept quietly across the darkened apartment, down the short hallway, past the bathroom, and into Lily's bedroom. The overhead lights were off but the room was lit dimly by a floor lamp in the corner. The room was neat and clean--minimal furniture and decorations.\n\nIn the center of the room was a queen sized bed. Lily was lying across it, completely naked, with only the corner of the white comforter covering her waist.\n\nHer bare breasts were just as small as Ryan had imagined, each a slight mound topped with a bright pink nipple, erect in anticipation. Her legs, which he had also never seen bare in-person, looked smooth and inviting. They ended in toes painted with black nail polish--likely a part of her Halloween makeover.\n\n\"Wow,\" Ryan sighed. Lily smiled, embarrassed.\n\nShe slowly brought her hands to the corner of the blanket that hid the last of her. Ryan nodded in encouragement.\n\nThe fabric pulled back, revealing her penis.\n\nAt first, Ryan wasn't even sure what he was looking at. It was stiff with excitement, but so, so small. The skin around it was completely bare. It looked nothing like his own penis. The phrase that Marissa had used, so many weeks ago, came to his mind: a 'feminine penis'. There was really no other way to describe it.\n\n\"I know, it's kind of gross, and weird,\" Lily said, avoiding eye contact with Ryan.\n\n\"Not the words that come to my mind, to be honest,\" Ryan replied.\n\nLily looked up, meeting his eyes.\n\n\"Cute,\" he said. \"Feminine. Special--like everything else about you.\"\n\nAt this, she actually choked back a sob. Ryan was immediately on his knees at the side of the bed.\n\n\"I'm sorry,\" she said, still choked up. \"I'm not upset. I'm just... I was so scared. But now, I'm so relieved.\"\n\nRyan kissed her forehead.\n\n\"You're safe with me,\" he told her.\n\n\"Thank you,\" she said, wiping a tear from her eye.\n\nHe kissed her again, this time on the lips. She kissed back, passionately, her strong feelings of fear shifting to strong feelings of lust.\n\nRyan joined her on the bed, but stayed in a position perpendicular to her--he felt a fresh erection arising as their tongues danced across one another and their arms explored bare bodies, but he understood that, this time, it wasn't about him.\n\nHe slid a hand across her flat stomach, up toward one of her exposed breasts. Still kissing him, he felt her nod in assent and he continued, his fingertips lightly tracing the ring of her areola.\n\nShe gasped for breath as he did this, moaning in pleasure from just the gentlest of touches. If that was how she responded to a finger, he was curious to see how she would feel about what he wanted to do next...\n\nLily was breathing heavily and unable to kiss back, so Ryan moved his lips along, kissing around her jawline up to her ear, down her neck, across her throat and on to the center of her chest. From there, he began making very delicate kisses in a line toward the breast he hadn't touched yet.\n\nShe didn't stop him, so he continued on, gently kissing a circle around the soft tissue of the breast. Then, as gingerly as possible, he extended his tongue and traced circles, tightening until he reached her areola.\n\nAll of this drove her absolutely crazy--her entire body squirmed with bliss as she moaned in pleasure.\n\nRyan pressed on, swirling his tongue across her pert nipple, flicking it ever so lightly. He watched with a sidelong glance as her hips rocked in pleasure. To his surprise, she gently pushed him away.\n\n\"Too much?\" he asked, concerned.\n\n\"No,\" she said, catching her breath, \"well, almost. I just have one more thing I want to do, before I finish.\"\n\nShe reached under a pillow and brought out a wand-style vibrator, its long handle terminating in a round white bulb.\n\n\"I don't really like touching myself directly... down there,\" she explained. \"Even when it's just me. So, I use this. I'd rather you do something I'm used to than... well, than something else.\"\n\n\"Okay,\" Ryan agreed. It made sense to him. His only concern was that he had never actually used a vibrator before, although he had seen them used before, in porn.\n\nWith a press of a button, she brought the tool to life, buzzing softly.\n\n\"Just be gentle, okay?\" Lily requested, handing it to him.\n\nRyan nodded in understanding and carefully brought the head of the vibrator to her small, stiff penis.\n\n\"Oh, no, no, no,\" Lily responded, laughing to herself. Scared for having done something wrong, her amusement at the situation made him feel much less guilty.\n\n\"Like this,\" she explained patiently, guiding his hand and the vibrator lower, to the area between her scrotum and anus. Ryan applied the tool gently and she let out a deep sigh of contented pleasure.\n\nWhat he was doing made sense to Ryan, in a way. He was familiar with this part of his own body--a sort of internal part of his shaft. It felt good when he rubbed himself there, although he hadn't ever considered bringing himself to orgasm in that way. But if this was what she wanted, he was happy to oblige.\n\nHer hips rocked in a steady rhythm as he tried to match her timing, stroking her with the vibrator as it hummed away. He resumed his stimulation of her nipples with his tongue, but she quickly shooed him away.\n\n\"Too much,\" she explained breathlessly. \"Here, just hold my hand--I'm almost there.\"\n\nRyan obeyed and allowed her to tightly clench the hand of his that wasn't working the vibrator. He turned his head and watched her lower body with a mixture of anticipation and curiosity. Her movements were becoming more erratic, more mindlessly needy. He tried to keep up an even tempo with the wand.\n\n\"Oh, fuck, Ryan, I'm coming!\" Lily shouted.\n\nHe had expected her penis to erupt in a stream of cum, as his own did when he orgasmed. Instead, only a slight dribble of ejaculate oozed out. The orgasm was, seemingly, an experience that hit her entire body, rather than just her genitals. Her hips rocked, her legs shook, her back arched. The experience lasted several times longer than his own orgasms and he only pulled back the vibrator when her hand pushed his away.\n\nFuck, that was good,\" Lily signed. Normally, she didn't swear often, so these expletives really emphasized how strongly she felt.\n\nRyan waited patiently for her to catch her breath, his hand still being clenched strongly by hers while his other held the still-buzzing toy. He smiled with a strange feeling of satisfaction as he watched her small penis soften.\n\nLily eventually came to her senses and grabbed the vibrator from him, deactivating it and tossing it to the side. They lay together in comfortable silence with one another for some time.\n\n\"Hey, do you want to sleep over tonight?\" Lily asked hesitantly. \"I know you have class early tomorrow, so it's okay if you don't want to--I can totally drive you back to your dorm tonight.\"\n\n\"That sounds fantastic,\" Ryan replied. \"The staying-over option, I mean. Not the driving-back-home one.\"\n\nLily smiled at him, a soft, serene look that made her look even more beautiful than usual.\n\n\"But, uh, could you go back to the living room for a bit?\" she asked shyly. \"I need to clean up.\"\n\n\"Of course,\" Ryan replied, kissing her on the forehead before shuffling off of the bed. He tried to hide his erection as he turned to walk away--the whole experience had turned him on immensely, but she was clearly spent for the evening and he didn't want her to feel like she needed to do any more than she had already done.\n\nBack at the loveseat, he donned his boxers as he heard the sounds of running water from the bathroom. This was turning out to be a night of several 'firsts'. He sat on the couch and waited patiently for his turn in the bathroom.\n\n\"So, I actually have a spare, unopened toothbrush, if you want it,\" Lily called from the hallway.\n\n\"Holy shit,\" Ryan exclaimed under his breath as he looked up from his phone. Lily stood in the hallway dressed in a black bra and black boyshort-style panties. Her hair, which normally hung down just past her shoulders with a part just to the left side, was tied up in a messy bun. She was also wearing glasses, with a thin wire frame and large, round lenses.\n\nShe laughed nervously at his stare.\n\n\"Sorry, it's just that, well... you look fantastic,\" he fumbled out.\n\n\"Oh, this is nothing special,\" she replied, shifting her body shyly at his gaze.\n\n\"And the glasses--I didn't know you wore glasses.\"\n\n\"I wear contacts,\" she explained. \"These are just for nighttime.\"\n\n\"Well, I like them. With the hair, they give you a sort of 'sexy librarian' vibe.\"\n\n\"Thanks,\" she said timidly. \"The girly-looking ones bug me because they're too slim--I hate having things be blurry in so much of my field of vision.\"\n\n\"Well, those seem 'girly' enough to me,\" Ryan declared, rising from the couch and walking over to her.\n\nShe scoffed at this.\n\n\"No way,\" she said with a smirk.\n\n\"Or, maybe they just like girly because they're on you,\" he explained, now standing face to face with her in the hallway. He wrapped his arms around her and kissed her, once.\n\n\"I know it's probably pretty shallow of me to feel this way, but I really like it when you say stuff like that,\" she said earnestly, hugging him back, her head against his chest.\n\n\"Hm?\" Ryan asked quizzically.\n\n\"I mean, when you talk about me being girly. For a really long time, I didn't feel that way about myself. And so, hearing it from you... I just really like it.\"\n\n\"I'll keep that in mind,\" Ryan replied softly, kissing her forehead. He took the toothbrush she held in her hand and made his way to the bathroom.\n\nWhen he was finished, he walked back to the bedroom. The bed had been remade and Lily was already under the blankets. He quickly joined her and she immediately positioned herself as the small spoon.\n\nWrapping his arms around her, he nuzzled the nape of her neck and lightly kissed her shoulder. The smell of her hair was an intoxicating, uniquely feminine scent--fresh, with subtle floral notes. She adjusted her body slightly, getting more comfortable, and he did the same, inadvertently prodding her buttocks with his erection.\n\n\"Patience,\" she joked, reaching a hand back and lightly petting his thigh.\n\n\"Sorry, I wasn't trying to--\"\n\n\"Oh, I know,\" she said, cutting him off. \"But I do know that you're all riled up again. Maybe I'll give you some head in the morning.\"",
        "\"Yes, please!\" Ryan replied enthusiastically.\n\n\"Just snuggle me up real good,\" she requested, holding his arms to her chest.\n\nHolding up his end of the bargain, Ryan hugged her and kissed her again on the neck. His erection soon subsided and the two of them drifted off to sleep together, happy and secure in their shared embrace.\n\n***\n\nThe next morning, Lily was true to her word and Ryan awoke to the confusing but pleasurable sensation of having his morning wood sucked off.\n\n\"You're a heavy sleeper,\" Lily commented, giving her mouth a break as she continued to stroke him with her hand. \"You slept right through my alarm.\"\n\nIn the excitement of the previous night, Ryan hadn't even remembered to set an alarm.\n\n\"Don't worry, we'll get to campus on time,\" she assured him. At the moment, Ryan wanted nothing more than to spend the rest of the morning in bed with his girlfriend. He had to remind himself that her commitment to her classes was actually something that he liked about her--under most circumstances.\n\n\"We have just enough time to finish up here,\" she continued, emphasizing her point by tightening her grip and throwing in some wrist-twisting action, \"and for you to get yourself dressed.\"\n\nRyan blinked and realized that Lily was actually fully dressed and ready to go. He knew he was a fairly heavy sleeper, but this was crazy.\n\nHe didn't have time to feel worried about running them both late--when she brought her mouth back to his cock, the gentle sucking pressure combined with the feeling of her soft lips sliding along his glans and shaft brought him quickly to orgasm.\n\nAfter he was finished, she gave his softening penis one last squeeze, pushing out the last droplet of cum. She kissed the head and slurped this up.\n\n\"I set your clothes and stuff on the dresser,\" she said, pointing to his pants, shirt, phone, wallet and keys, laid out neatly on the nearby piece of furniture. \"I'll be waiting out on the couch.\"\n\nStill dazed and tired, Ryan dressed, used the bathroom, and rode to campus with Lily, arriving with plenty of time to get to their 8 a.m. classes.\n\n***\n\nAfter that, their weekends always had at least one night of sleeping together. Although, to Ryan's surprise, they rarely included her having an orgasm. The hormones she took, she explained to him, affected her sex drive. Her arousals were much more transient and she didn't feel the need for orgams of her own all that often. The blowjobs, evidently, gave her an entirely different type of satisfaction and she never let a night they spent together go by without one of those.\n\nAt this point, Ryan began to feel uncomfortable in his lack of knowledge regarding the sex life of trans women. Thus far, he had been okay with just going wherever the relationship took him. But now, he felt like he wanted to be prepared for what was likely to come next for the two of them: sex. That is to say, 'penetrative intercourse'.\n\nWhile his initial internet research related to trans relationships had been frustrating and confusing (due to conflicting advice and opinions), the articles and forum posts he found regarding the physical acts of sex turned out to be far less baised and much more straightforward. There were still the ardent disclaimers that not all trans women are the same (in the same way that not all cis women are the same...) and that preferences could obviously vary.\n\nHe learned a lot of things that he had already found out on his own. Hormone-induced breast development in trans women tended to result in breasts and nipples that were super-sensitive--some women were supposedly able to achieve orgasm through nipple stimulation alone. It was also, apparently, not uncommon for trans women to not like direct stimulation of the penis, preferring motions like those he had done to Lily--motions that more closely imitated the stimulation of a vagina.\n\nAnd there were new things for him to learn as well. Some trans women, who had not had surgery, preferred to think of their anus as their vagina, and their penis as a clitoris. Ryan kept this thought in the back of his mind.\n\nHe also read up on anal sex. Of course, he had seen plenty of anal sex before, in porn, but the anatomy of a trans woman brought with it certain unique considerations. Namely, the goal of stimulating the prostate. He was doubly curious about this, because he himself had a prostate too. The descriptions of a prostate orgasm as an experience unique and distinct from that of an orgasm from penis stimulation were... compelling. He read up on anal hygiene, use of lubrication, ideal sex positions, and more.\n\nAll this knowledge filled him with confidence, but also an eagerness that he tried to suppress--he had known from the start that Lily needed to take things slowly, and he truly wanted to respect that.\n\nOutside of their sex life, the rest of their relationship was going well too. They still did a lot of cooking together and watched a lot of movies. But Ryan would sometimes bring his Xbox over to her place for the weekend and play video games with her (although, for many of the games, she was content with watching him play, rather than joining him). And Lily shared her interests with him too, showing him the patterns for dresses that she planned to make when she had the time (over the long winter holiday break). For Ryan, it was a crash course in fashion terminology and he learned quite a lot.\n\nTheir routine was disrupted by Thanksgiving break. They both would have enjoyed spending the holiday together, but they each had families in different hometowns. Lily was eager to hang out with her cousin Annie, her aunt, and the rest of her family. And Ryan's mom was eager to see him again for the first time since he left for college over two months ago.\n\nOn Thanksgiving day, Lily sent pictures of the meal as it was being cooked: the pies that she had been in charge of baking (beautiful and tempting, of course), the turkey that her dad always deep fried, her mom's scratch-made stuffing, and all the rest. He even had a brief video chat with her and Annie, the one person she had most wanted to introduce to her boyfriend. Annie seemed nice enough, from what he could tell from a two minute long video at least. He was sure he would meet her in person, one of these days.\n\nHis own holiday was less... photogenic. He and his family got along well enough, but they weren't as happy together as hers. His younger brother was in a phase of his teenage years where he was acting like a real shitheel, which was kind of a bummer. The aunts and uncles of one side of his family always argued politics with the aunts and uncles of the other side.\n\nHis mom was the one most interested in his social life in college and he did end up showing her a picture of Lily, with her pies. He told her about her major and their class together, but he didn't mention that she was trans. There was really no need to, in his mind.\n\nHe did have an unintentionally surreal conversation with his father though. After learning that he had a girlfriend, he gave his son the talk about birth control and the importance of waiting for marriage--or at least being safe about avoiding pregnancy. Ryan kept his amusement to himself, mentally filing this away as one of the perks of dating a trans woman.\n\nHe got a ride back to campus on Saturday, although Lily wouldn't return until Sunday late afternoon. When she got back, it was like a repeat of the Halloween weekend--she picked him up from his dorm on her way back to her apartment and the two almost immediately got physical together.\n\nAfter a particularly spirited blowjob, the two snuggled up together on the loveseat.\n\n\"So, what are you thinking for dinner tonight?\" Ryan asked nonchalantly. \"Some of the leftovers you brought home? Or maybe we could get a pizza?\"\n\n\"I'm actually not done with you yet...\" she said, kissing his chest lightly.\n\n\"Oh, really?\" he asked teasingly. \"I hope you remembered to keep your vibe charged!\"\n\n\"Actually, I wanted to do something new tonight,\" she said, shifting her position to look him in the eyes. \"Tonight, I want you inside of me.\"\n\nRyan's face perked up in excitement. But his penis, still soft from its recent ejaculation, wasn't quite yet up to the task. Fortunately, she seemed to have been able to read his mind.\n\n\"I'm going to need a little time to... to get myself ready,\" Lily explained. \"And, when we get into it, it might take a while. This is new for me. So, I wanted you to get one out of your system, so you could take your time with the next one.\"\n\nRyan nodded in understanding.\n\n\"You can be ready to go again soon, right?\" she asked.\n\n\"Sure,\" Ryan replied, jokingly nonchalant, \"just let me pull up that Halloween photo on my phone here...\"\n\nLily teasingly shoved him and called him a pervert, although the embarrassed smile on her face showed that the compliment excited her. She rose from the couch and, from the hallway, told him that she would call for him when she was ready.\n\nRyan tried to not look down the hallway, which lay behind the couch, as she went about her business, spending some time in the bathroom, some time in the bedroom. He could guess at what she was up to, but he allowed her her privacy.\n\nHe didn't even need his phone to get hard again. Just the memory of her long, pale legs and her jet black lips was enough to get him most of the way there. The fantasy of what it would feel like to be inside her and, perhaps more importantly, how she would react to it, got him rock hard again.\n\n\"I'm ready,\" he eventually heard her call from the bedroom.\n\nRyan strode confidently across the apartment and into the bedroom. Lily was indeed ready for him. The comforter was stripped off of the bed, which was lined with towels. On her back, her butt was positioned at the edge of the bed, her legs dangling off somewhat awkwardly. Even in the dim light, he could see the shimmer from the lubrication that coated her crotch.\n\n\"The lube is on the dresser,\" she said, pointing. \"So you can get yourself ready too.\"\n\n\"Soon enough,\" he promised, walking past the dresser and instead approaching the bed to kneel over her. They kissed, softly at first, with gradually building intensity. Ryan's hands ran the length of her thighs, her stomach and finally her petite breasts. He massaged carefully, not even stimulating the nipples as she moaned in his mouth. A sidelong glance downward showed that her hips had begun to rock, her cute little penis stiff with anticipation.\n\n\"Please, I want it now,\" she whispered.\n\n\"Much better,\" Ryan declared, breaking away from her and stepping to the dresser. He smiled to himself as he recognized the brand of lube from his internet research. He applied a liberal amount to his cock and, taking the tube with him in case he needed more, took up a position between her legs.\n\n\"Slowly at first, okay?\" Lily said, concerned but also anticipatory.\n\n\"Of course,\" Ryan assured her.\n\nHe stepped forward and adjusted his legs to achieve the right height. Looking down, his penis lay directly beside hers. The contrast in size was oddly satisfying and a jolt of pleasure ran through him as he felt her penis twitch against his.\n\nReaching down with the hand already messy with lube, he carefully guided himself to her anus. Moving slowly, he was surprised by how easily the head of his cock slid inside of her. From there, he pulled back before thrusting back in, slightly deeper this time. He repeated this, an inch at a time, until the entire length of his shaft was buried inside her. It was warm, tight, and wet inside of her. But the biggest difference that Ryan noted, compared to being in her mouth, was that he was now in charge of the movements, having complete control over the speed and depth of penetration. It felt good to be in charge, although it was a little scary.\n\nLily had been mostly quiet while he had done this. Which was better than her being in any kind of pain. But what he really wanted was for her to enjoy herself.\n\nHe took a bit of a chance in what he said next.\n\n\"Your pussy feels so good, baby,\" he moaned as he thrust slowly.\n\nNervous that she might laugh at the comment, correct him, or even be offended, he was relieved when she responded positively.\n\n\"Oh, it feels so good to have you inside of me,\" she replied lustily.\n\nHer legs, which had been hanging off the edge of the bed at first, rose up and wrapped around his waist. His arms gripped her thighs tightly. This limited his range of motion, but intensified his feeling of connection with her. He was glad that she had planned this the way she had, giving him an orgasm beforehand--because if he hadn't just come, he wouldn't have lasted long at all in this position.\n\nLily seemed to be getting into things more too. Her breathing had sped up as he gradually intensified the intensity of his thrusts. She moaned occasionally, although she didn't seem as excited as she had been when he had pleasured her with her toy.\n\nEventually, she unlocked her legs from his waist and instead raised them up, her ankles at his shoulders.\n\n\"Your legs are so sexy,\" Ryan told her as he kissed what he could reach, from her shins to her ankles to her instep.\n\nLily murmured in approval.\n\nLooking down, he noticed that her penis had softened. This might have worried him before, but having done his research, he understood that an erection was not required for a prostate orgasm.\n\nBefore long, she moved once again, this time bringing her knees up to her chest. Ryan took this change in positioning to apply more lube to the two of them before resuming his trusting.\n\nHe continued for a short time before she adjusted herself again, this time letting her legs flop dejectedly over the edge of the bed again.\n\n\"I'm sorry, I just can't seem to get my legs comfortable,\" she apologized, a guilty look in her eyes. \"We might have to switch to... to what we did before.\"\n\n\"Does it hurt?\" Ryan asked, concerned.\n\n\"No. It feels fine. But I just don't know if I can come like this.\"\n\nShe sounded defeated and upset.\n\n\"Hey, don't worry about it,\" Ryan said, trying to sound supportive and reassuring. \"We're figuring this out together. We'll do whatever it takes to make it work.\"\n\n\"Thank you,\" she said, sounding slightly less dejected.\n\n\"But before that, can we try it one more way?\" Ryan asked, hopefully.\n\n\"Sure.\"\n\nHis hands on her buttocks, he scooted her away from the edge of the bed, closer to the center. He then lowered himself to her, his body atop hers, and kissed her.\n\n\"Missionary?\" she asked, amused.\n\n\"No.\"\n\nFrom there, he grabbed her shoulders and rolled the two of them over. Lily let out a small yelp of surprise, but he managed to do this without slipping out from inside of her.\n\n\"Oh, cowgirl?\" she asked, now straddling him.\n\n\"Not quite...\"\n\nFrom there, he sat up and scooted their coupled bodies back, until his shoulders were against the headboard.\n\n\"I don't even know what to call this one,\" she said.\n\n\"Just try moving,\" he suggested.\n\nFrom her position, straddling him with her knees and shins flat on the bed, she was able to move easily enough, in short, deep thrusts. Holding on to his shoulders with both of her arms helped her balance better and the thrusts grew longer.\n\n\"Okay, this is actually pretty good,\" Lily admitted between gasps for air. Looking down, Ryan admired the close up view of her penis, which was still soft, but had leaked a small stream of pre-ejaculate.\n\n\"Oh, this isn't it,\" Ryan said mischievously. He bent his legs until his knees were pressed against her back. \"Lean back a bit--rest against my thighs and knees.\"\n\nShe cautiously did as she had been told, nervously trying to not lose her balance. But she soon got comfortable and began to ride him again.\n\n\"Oh, holy FUCK!\" she exclaimed as his cock thrust in and out of her.\n\nRyan smiled to himself smugly, glad that he had done his research about prostate-stimulating sex positions.\n\nHe tried to help her out, but in their current position, his ability to move his hips was very limited. He thought about using his hands to stimulate the area under her scrotum or even, with her permission, her 'clit'. But he wanted this orgasm to be pure 'p', so he held back. Instead, he grabbed on to her creamy thighs and admired the view.\n\n\"Oh fuck, oh fuck, oh fuck,\" Lily continued to swear, clearly approaching a climax to her pleasure. The look on her face was priceless--equal parts ecstasy and confusion.\n\nHer string of expletives devolved into unintelligible moans as her body shook violently in orgasm and a small load of clear ejaculate leaked from her penis. Ryan continued thrusting, as best as he could manage from his position, until she finally begged him to stop.\n\n\"Oh, what the fuck did you do to me?\" Lily sighed with pleasure as she collapsed forward onto his chest. His arms quickly came up to embrace her and hold her in place.\n\nRyan laughed, satisfied at the conclusion of his idea.\n\n\"Oh, fuck, don't laugh!\" she insisted breathlessly. \"It's too much...\"\n\nRyan suppressed his laughter and smiled widely instead.\n\nThey lay together for some time, Lily regaining her composure as Ryan gently ran his hands along the length of her soft, smooth back.\n\n\"Okay, I think I can handle a bit more now,\" she said, somewhat hesitantly. \"If you want to come again tonight. But you better be close.\"\n\n\"Oh, I think I can manage,\" Ryan answered. \"With the right position...\"\n\n\"As long as I don't have to move much,\" Lily replied, still sounding exhausted.\n\n\"Just hold on,\" Ryan instructed her. She grabbed his shoulders and, once again, he rolled the two over, into missionary position.\n\n\"I like kissing you,\" he said in explanation as the two locked lips.\n\nAs they kissed, he began thrusting his hips, in slow, deeply penetrating motions. Her cum slicked across the hair on his stomach and he felt her penis rub against his belly. He never would have guessed it, but something about this was incredibly erotic.\n\nHe was closer to orgasm than he thought he had been.\n\nWhen she pressed her thighs against hips and wrapped her arms around his back and shoulders, he really started to lose it. He had to stop kissing her to focus on his breathing.\n\n\"Will you come for me, baby?\" she asked invitingly.\n\nWanting nothing more than to shout \"Yes!\", Ryan held out for just a little bit longer.\n\n\"Where?\" he asked.\n\nIt took her a short moment to think.\n\n\"Come inside my pussy,\" Lily whispered in encouragement. \"I want to feel you fill me up.\"\n\nThat was the final straw. Ryan let out a grunt as he made a forceful thrust, sighing as he felt his cum flow out of his body and into that of his lover's. Aftershocks of pleasure came as he made several more thrusts, fully emptying himself. He kissed her on the lips and then sat up on his elbows, catching his breath.\n\nShe continued to hold him tightly, with her arms and legs, her eyes closed and a warm smile of contentment on her face. When the strain on his arms was too great, he moved to pull away from her. But she wouldn't let him.\n\nSo, instead, he rolled them both to their sides. There they lay, blissful and satisfied, until Lily had had her appropriate amount of cuddles.\n\nFrom there, they took turns cleaning themselves up in the bathroom. The towels were removed from the bed, having proven very effective in catching almost all of the lube and other fluids that had been involved. They then snuggled up again, Ryan on his back, Lily on her side with her head resting in the crook of his arm, enjoying just a bit more time together before they had to start thinking about dinner.\n\n\"You know, I can't help but notice that these breakthroughs we have in our relationship--our physical relationship at least--always seem to coincide with you spending a lot of time with your cousin.\"\n\nLily chuckled softly at this.\n\n\"Yeah, I told you before she's kind of a slut--she wants me to be as loose as she is,\" she joked. Then, more seriously, she added, \"But, for real, she's a very good listener. She knows me better than anybody and she always gives good advice. She just helps me put it all in perspective, you know?\"",
        "\"Well, I've really got to get her a card or something,\" Ryan mused. \"Something like 'Thank You For Helping My Girlfriend Accept Her Body And, In Doing So, Allowing Her To Feel Comfortable With Physical Intimacy With Her Boyfriend'. You think they have that at a Hallmark store?\"\n\n\"It's a bit wordy,\" Lily replied thoughtfully. \"Maybe it's next to the 'I Love My Boyfriend For Being So Patient And Understanding As I Navigate The Issues I Have With My Gender Identity and Body' cards.\"\n\nRyan's ears perked up.\n\n\"Oh, is that in the 'love' section?\" he asked.\n\nLily tilted her head to look him in the eyes.\n\n\"I love you,\" she declared, a hint of trepidation in her voice. Any fears she might have had about her feelings being unrequited were quickly dismissed.\n\n\"I love you too,\" Ryan told her, shifting slightly to give her a single kiss on the lips. He held her tightly as she nuzzled against his chest.\n\nHe had had quite a few fears and worries of his own, when their relationship had first started. But now, he realized, these too had all disappeared."
    ],
    "authorname": "VermillionVenusian",
    "tags": [
        "anal",
        "transgender",
        "transexual",
        "blowjob",
        "oral",
        "oral sex",
        "romance",
        "romantic",
        "first time"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/lily-in-bloom"
}