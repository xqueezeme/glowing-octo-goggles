{
    "title": "My Little Ventrue Pt. 08 Ch. 08",
    "pages": [
        "~~Jack~~\n\nHis trip to speak with Azamel had been successful, more or less. Azamel looked worse than ever, but he found her speaking with S\u00e1ndor, and it seemed like they were coming to some sort of agreement. Not that Jack got to stick around long enough to find out more. Azamel promptly booted him out, saying her arrangements with S\u00e1ndor were none of his business.\n\nIt was his business, kinda. It was his job to keep the different species getting along. But he left anyway, a bit thankful for her asshole attitude. He had his own problems to deal with, and they were stacking up.\n\nFirst, get the curse under control, or gone. Second, find out what the fuck the tears were about. Third, find a way to help Mary. Fourth, rebuild his life in the Invictus.\n\n\"You really remember nothing?\" he said.\n\nElaine, sitting at a heavy, dark table, tapped on her laptop a few times before looking at him. \"I remember some things, young Ventrue. But you must understand. Torpor wears at our memories, and when Elders feel their blood lust grow too strong, we sleep for decades to calm the hunger. Decades of strange, vivid dreams.\"\n\nHe sat down across from her, maybe four feet between them, and nodded. \"I get that. But, this curse thing, it must have been a pretty big deal, right? It must have left an impression no amount of torpor could wipe.\"\n\nHis great grandsire leaned back in her fancy office chair, and looked to the sheriff. Ever since Damien had returned Jack to the tower with a stake in his heart, everyone was put on red alert or something. Jack was never alone. No matter who he was with, someone had their eye on him, and that was usually Daniel. It sucked. It really sucked. Antoinette assured him that if she was with him and Elaine, in any capacity, Daniel would not need to be there; the two of them could handle the curse together.\n\nTwo elders keeping tabs on him at all times? Bleh.\n\n\"Digging up those memories is difficult, Jack. I have been hesitating to do so.\"\n\n\"I noticed.\"\n\nShe raised a brow at that. \"You did?\"\n\nHe shrugged and offered a small smile. \"I'm your great grandchilde, what do you think?\"\n\nSometimes, just sometimes, he could be a real cocky brat. He knew it, and now, so did Elaine. It made her laugh, and it proved a point: just because he had a habit of wearing his emotions and thoughts on his face, didn't mean he was an idiot.\n\n\"If Julias sired you, then I must consider that you are smarter and more resilient than you appear.\"\n\nHe grinned, victorious, and leaned back in his chair as well. Ventrue to Ventrue. Of course there'd be a little bit of combative tension between them, like between political figures, or anyone who liked to talk a big game.\n\n\"Yes, I have been avoiding this,\" she continued, \"because it is a terribly painful past, Jack.\"\n\n\"More painful than having him speak inside you, tempting you? More painful than... yeah, shit Antoinette's probably told you about already.\"\n\nShe winced and looked down at her laptop, but didn't type anything. \"Even now, it listens?\"\n\n\"Yeap.\"\n\n\"But it says nothing?\"\n\n\"Yeap. I think he'd prefer--\"\n\n\"You call it he. Why?\"\n\nHis turn to wince. \"Because it is, he. I didn't think so at first, but after the last conversation I had with him, it became pretty clear. This isn't like I've been possessed by some alien, or spirit. This is like... something that's grown out of me. The curse created him in me, or from me, or something.\"\n\n\"Doctor Jekyll, Mister Hyde?\"\n\nHe shrugged. \"I guess.\"\n\nShe nodded, opened her mouth, but closed it after meeting his gaze. No need to say it. If that was the situation, then the curse had created this second personality out of the darkest, most fucked up desires he had. Not exactly a nice thing to learn, that he could have those kinda thoughts inside him. But, then again, becoming a vampire probably had something to do with those thoughts, too.\n\n\"I will tell you what I can remember,\" she said, and glanced over her shoulder at Daniel. She didn't want him to hear this, but considering the situation, it was unavoidable. \"I remember hunger, and rage. I remember running through forests, with wolves at my side.\"\n\n\"Hunting you?\"\n\n\"Serving me.\"\n\nAh. That made sense, and it was a pretty powerful image. Gangrels and Ventrue had an easy time controlling animals, and while Elaine was no Gangrel, that didn't mean she couldn't run through the woods with a pack of four-legged death machines at her beck and call.\n\n\"How long ago?\"\n\n\"Hundreds of years, well before I sired Viktor. Before I met Antoinette.\"\n\nBefore she met Antoinette. Well, she had met Antoinette a super long time ago, so of course her memories of pre-Antoinette would be hazy. Maybe she remembered some stuff about Antoinette when she was younger. Not exactly the right topic for the moment, but his curiosity jumped up and waved its arms at him.\n\n\"Do you remember much about meeting her?\"\n\nElaine knew what he was getting at before he finished the sentence, and she chuckled as she leaned forward a little. \"Hazy memories, without context, without words. But I remember some scents, some tastes, some emotions, and some images. Would you like to know what they were?\"\n\n\"Yes, please.\" And he damn well knew the look on his face said 'tell me something sexy'.\n\n\"I remember the smell of skin, of kine, of wine. I remember the smell of stone; her castle, no doubt. I remember the sight of kine piled atop each other, bathing each other in bliss and sin. I remember the taste of one of her ghouls, a well fed and healthy male; rare for the time. I remember seeing your lover naked for the first time, and the shock of witnessing someone as tall and as well endowed as her. I remember thinking her unusual eyes and white hair were surely a sign she was one of Dracula's brides.\"\n\n\"Ever find any proof of that?\"\n\n\"No. And she denies it, though I know her memories of such a time are dust.\" She waited until he nodded, and continued. \"I remember bits and pieces of the first time she and I touched each other. Even then, our relationship was purely one of friendship. She indulged in sexuality in such extreme... abandon, that I was intrigued. I can remember my curiosity being piqued.\"\n\nAnd Jack's, definitely. \"I don't understand how two friends can just... well, I suppose I can.\" Vampires being vampires. And, people being people. Not everyone attached romance with sex.\n\nShe grinned at him, and looked up as she dug through more memories. \"I taught her much about being a commanding presence that will not yield to others. She taught me much about embracing pleasure.\"\n\n\"Sounds like a good trade.\"\n\nElaine leaned in, and grinned at him even more, a bit of that Ventrue edge in her eyes mixed with something playful, and very sexual. \"Indeed. I remember the feel of thralls, bodies intermingled with our own. I remember the pleasure of having two men inside me, while your lover sat on the face of the man I sat upon. I drank the blood of our meals off her breasts. I held her in my arms, and massaged her body as a dozen kine took turns filling her sex with seed, one after another.\"\n\n\"A dozen men? Sharing?\"\n\n\"Indeed.\" She giggled, a higher pitched sound than Antoinette would make, but still a mature sort of laugh that sent a happy jolt up Jack's body. \"A shame such memories are a blur. They mingle, and context is lost. But I remember once literally lying upon the bodies of her thralls and ghouls, as they carpeted the floor. Fingers, dozens, hundreds of wet, warm, hungry fingers entered me until I was taut. The shafts of men stood upright, being kissed by the lips of others, or by me, and their cum gushed up and onto my body, only to be kissed away by her entourage. Soon I sank into the skin and flesh of her thralls. They climbed over me, penetrated me, and I can remember the feel of the girths of half a dozen men trying to penetrate me as they covered me. They succeeded.\"\n\nHe gulped. \"Uh...\"\n\nHer grin widened. \"Yes, at the same time. A night of such reckless abandon led to being stretched wide, to the point of absurdity. I climaxed again and again, soaking the flesh of Ann's dozens of thralls, and as I did, she climbed onto me, and kissed my breasts and stomach. Soon, what her kine did to me, was done to her, and I kissed her breasts and stomach as the shafts of men and fingers of women filled her to bursting.\"\n\nHe put up his hands and sat back. \"Jesus. Ok, uh, I think I'm saturated on the kinky stories.\"\n\n\"Oh? So soon?\" She licked her lips as she watched him. \"I have more.\"\n\n\"Yeah. Starting to feel a little inadequate, hearing stories like that.\"\n\nMore laughter. She shook her head and waved a hand aside, dismissing his words. \"If physical stimulus was the only concern, young Ventrue, women everywhere would simply acquire several oversized vibrators, sit in a tub of lubricant, and spend every night filled to the brim with buzzing plastic.\"\n\n\"Some do.\"\n\n\"Yes, but do you deny that most women would rather the touch of another soul to give such pleasure?\"\n\nAfter a few seconds to consider it, he sighed and nodded. \"Yeah. Antoinette's told me about her past, the crazy orgies, and how she's grown up, moved on, and is happier with the sexual dynamic we have. But to a young guy like me, I guess it's hard to believe sometimes.\"\n\n\"Believe it. In a few hundred more years, orgies may tire you as well. But the touch of a lover? Someone you genuinely care for? Ambrosia, and an aphrodisiac for all eternity.\"\n\nHe grinned at that, and then frowned. \"Kinda makes me feel guilty for, you know, all the orgies she's been burying me in.\"\n\n\"Do not feel guilty. Antoinette knows you are young, and it brings her endless joy to, as you said, bury you in novel pleasures.\" Again, she grinned a devil's grin. \"And you are a man. I would be remiss if I did not admit men have a... larger appetite for such lopsided indulgences.\"\n\n\"Tell that to Natasha.\"\n\nElaine laughed again, heartier than before, a laugh from the belly. \"That small woman is such a delight, terribly cute, and cunning and intelligent. And to know the timid little creature has a grand hunger for large, animalistic men, multiple, is both hilariously clich\u00e9, and yet wondrously perfect. Have you seen the pornographic videos she has filmed?\"\n\n\"Um, no?\" Oh god what the fuck.\n\n\"Ah, perhaps I should not have said anything. But the little Mekhet has apparently been indulging in something of an erotic project? With her two deliciously... massive boyfriends.\" She leaned forward, really close, and spoke in a whisper. \"Such a tiny thing. Have you ever seen a woman's body struggle to hold the girths of men so much larger than her? You can actually see the shape of--\"\n\n\"I'm not deaf,\" the sheriff said.\n\nJack almost jumped out of his seat. Of course his great grandsire didn't react at all, except to look to the corner where Daniel stood, and offer the man an inviting smile. Right, she was interested in him. A bunch of what she'd just said was probably embellished to make Daniel squirm; Mekhet generally did, when bombarded with TMI.\n\n\"Your childe,\" Elaine said, voice louder and emphasized, \"is growing up, Daniel. A part of that is learning how to enjoy our second lives.\" As she looked at him, her smile faded, and an annoyed scowl replaced it. \"A lesson you should learn.\"\n\nThe man shrugged and looked to the side. He probably didn't want to have the conversation, especially considering he was in some sort of relationship with Athalia.\n\n\"This talk reminds me,\" she said, looking back to Jack, \"about something Ann told me. Apparently Clara is interested in you?\"\n\nHe winced. \"I guess. I mean, I've made it pretty clear I'm with Antoinette, but she's still... yeah, interested.\"\n\n\"And she has no desire to join you and Ann?\" More grins. \"I am sure you could satisfy five women.\"\n\nHe didn't even smile or chuckle at that. Not that it wasn't kinda funny, just beyond absurd. \"I'm one guy. And Clara isn't really into the whole... sharing thing.\"\n\n\"Oh? I have heard she has spent the night with four rather scrumptious ghouls, at the same time, more than twice.\"\n\nHe winced again, and then, because his imagination was a dumbass, he couldn't help but picture what Elaine had described earlier, too many dicks trying to fit into too few holes, except with Clara and Jessy's ghouls. And Clara was beautiful, gorgeous, and fit as fuck. God damn it.\n\n\"She was drunk. And I'm guessing Jessy teased her about shit before that, and, yeah. If I was her, drunk and feeling... neglected, and four gorgeous women showed up at my door, I'd probably let them in, too.\"\n\n\"And the times after that?\"\n\n\"Yeah, probably then, too.\"\n\nElaine pat the table a couple times, as if patting his head. \"Your honesty is a delight.\"\n\n\"Bites me in the ass a lot.\"\n\n\"No doubt. But, let us move on. I can regale you with more tales of your lover's overabundant sexual history later.\"\n\nHe leaned back in his chair, nodded, and took a deep, useless breath. \"Alright. I've been hoping we could start working on this earlier, but you've been kinda--\"\n\n\"As I said, the memories are painful. But also, digging up what I could of my records has been difficult. I have contacted my thralls, and they have searched tirelessly through my old records. Ancient tombs and old journals of parchment must be handled with care.\"\n\n\"I'm surprised you didn't, I don't know, keep meticulous detail of all that stuff.\"\n\nShe raised a brow at him, and shook her head. \"You do not understand. Hundreds of years ago, superstition ran wild. Humans, usually women, were frequently burned alive for suspicion of witchcraft. In an age where intelligence was either sought after, or actively destroyed, any vampire had to be wary of keeping records.\"\n\nThat made sense. In the modern age, or hell, any time in the past two hundred years, record keeping was just a normal part of life. Before that, not so much. The further back you went, the stranger and rougher people were with information, and a woman keeping records about 'curse' and 'blood' and whatnot, was probably doing so at risk of her own life. No matter how strong a vampire was, they couldn't stop a thousand humans armed with torches and flaming arrows.\n\n\"Yeah, you're right. My bad. I just keep thinking you should have all this organized in digital journals.\"\n\n\"I dare not record everything digitally. Some of my deepest, darkest thoughts lay within those books, written in English half a millennium old.\"\n\n\"Even now?\"\n\n\"Even now. My thralls will be taking digital pictures, and sending them to us across a secure network. But then we are to... what is the word, 'scrub' the drives that see these images, as my thralls will with theirs.\"\n\n\"Sheesh. Are all dragons that paranoid about their secrets?\"\n\n\"Yes. The Invictus and Cathians are too stupid to manage such knowledge, and would destroy themselves with it. The Sanctified are not to be trusted, for they are sinister, and seek to rule all.\"\n\nWell, that was blunt. It made him smile. She really was a Ventrue, and his great grandsire.\n\n\"And the Circle?\"\n\n\"The Circle are... difficult to predict or understand. I would rather they did not have such knowledge, but they are the least troublesome of the four. They would at least understand the value in such ancient words, and many witches would either seal them away, or not use them for ill.\"\n\n\"Many witches, but not all.\"\n\nAfter a heavy sigh, she closed the lid on the laptop, and looked at him with heavier eyes. \"Yes. As you can imagine, I do not want Jacob to have such knowledge. He is... far more deadly than your average warlock, and I do not trust his motives.\"\n\n\"Neither do I, but the Prince seems to trust him.\"\n\n\"That she does, to an extent. I have warned her against the man, but your lover is as old as I, and is a fount of wisdom and intelligence. If she trusts him, she has reason to.\"\n\nConsidering Jacob seemed to have some sort of interest in his mom, he was happy to know Antoinette trusted him, sorta. Knowing Elaine didn't, on the other hand, sent concern up through him like he jammed a fork in an outlet. If Jacob hurt his mother, the fucker was going to learn what the curse was really like.\n\n\"What can you tell me,\" Elaine continued, \"about when you freed the curse? Leave no detail unspoken.\"\n\nTime to dig up his painful memories then. Ugh. But it was only fair. \"I remember... flashes of history, things the curse had seen. I told you this before.\"\n\n\"Tell me more.\"\n\nHe frowned. Of course she realized that he could dig up the memories if he really tried, and she had no qualms about asking him to suffer for it.\n\n\"When Julias died, the world went white. It was the first time I actually got to see... the Beast, I guess.\"\n\n\"Few Kindred have ever managed such a feat. The Circle speak of it, but no other.\"\n\n\"Ch'yeah, well, people are better off. It's a big, ugly thing, all smoke and fangs and teeth, and beaks, and fur and shit. And mine was wrapped in chains. It took me on a trip down memory lane, showed me you, and Susanna, and Viktor and Julias, each time they did something... vampire-y.\"\n\n\"You saw me, with Susanna?\"\n\n\"And some other woman.\" He winced as he tried to dig up the memories. It was hard. Old, hazy things, buried under alien instincts, weren't like trying to remember yesterday. He had to find them, and re-watch them in his own mind, over and over, and do his fucking hardest to not let his own imagination pollute them. Each time, it felt like he was rubbing himself against the Beast inside, tearing away the skin of humanity, like a big chunk of pork rubbing against a huge cheese grater.\n\n\"There was someone else there,\" he said, \"a Sanctified I guess. I had no idea who he was, and the curse was showing me the memories in reverse. But after some more jumps, he showed me that same man, casting some sort of... spell, I guess, on Susanna. Full on ritual stuff.\"\n\n\"The Lancea et Sanctum is known to use Theban Sorcery, from time to time,\" she said, scowling as she did. \"Tell me, what can you remember of the ritual?\"\n\n\"Susanna was on her knees in a drawn circle, and the priest dude had some things on the floor around her. Uh... crucifix with Jesus on it... a spear... necklace with a cross... and some things I didn't recognize. I think I saw a stone? Something black. And I think I saw a skull, maybe, of an animal.\"\n\nElaine opened her laptop and typed away. \"And the man?\"\n\n\"A blur. Plus, hood. And... and he was carrying a book. I thought it was a bible at first, then maybe that Testament of Longinus I know Damien reads.\"\n\n\"Unlikely. Neither contain words of power.\"\n\n\"You've read the Testament of Longinus?\"\n\nShe grinned at him. \"I've read the bible in various points throughout history, various versions. I have done the same with the Testament of Longinus, the Quran, the Torah, and others.\"\n\n\"Damn.\"\n\n\"Dragons hunger for knowledge, as you can imagine.\"\n\nHe nodded, and laughed. \"What about my mom?\"\n\n\"What about her?\"\n\n\"She's a Daeva now, right? I can't, for the life of me, imagine her being anything like Antoinette, all sexual and teasing. And now she's a dragon, and I can't imagine her getting hardcore into cataloging data or researching things either.\"\n\n\"She is Daeva, but to call her a dragon is perhaps a bit premature. While she is a fledgling, she is Ann's responsibility, and will be exposed to the most basic tenants of our covenant. But in Dolareido, she is not bound to her sire's covenant, and may join another once she is no longer considered a fledgling.\"\n\n\"Guess I never really considered joining another covenant. I get the Invictus. I understand them. It clicks.\" Money. Territory. Power. Much as he didn't approve of Michael's methods, he couldn't image dealing with another covenant's approach.\n\nShe nodded. \"I--oh, one of my thralls has found something of interest.\" She clicked on her laptop a few times, eyes focused. \"Jack, have you ever meditated before?\"",
        "\"Meditation? Uh, no. Quieting the mind? Doubt I could ever do that.\"\n\n\"Then, little Ventrue, you are in for a painful learning process.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThey ran into the obvious roadblock the moment he tried meditating: Jack never stopped thinking. Always thinking, always analyzing, like a typical Mekhet. If a Mekhet had sired him, it would have fit, though Jack didn't really have a desire to learn every secret or anything. He just had one of those minds that liked to analyze, to practice hypothetical conversations, or to just voice his own hypotheses to see if they made sense. Most things made sense in the mind, but once you put them to words, it was a lot easier to spot flaws.\n\nOr, he played music in his head. Usually it was metal music, but even when he was just getting up to cross a room, a random diddy might play. No matter what he did, his mind loathed inner silence, and refused to ever let it happen.\n\nThe key aspect of meditation, was silencing the mind. Apparently most learned by focusing on their breathing, using the focus as sort of a shield against intruding thoughts. And if you did have an intruding thought, you had to learn to let it go. Don't latch onto it, don't process it, just, release it.\n\nYeap, he sucked at meditation. It wasn't his focusing that was a problem. He'd always had better focus than most. The problem was he was good at focusing on something like a manic psycho, obsessing over it, and pouring energy into it. Focusing on his breathing felt like focusing on watching paint dry, and his mind screamed to be let loose.\n\nHe sat on his butt, on a pillow, in one of the cells in Elysium. The door was locked, with Daniel and Elaine outside. Despite their utter silence, he could sense Elaine's presence, and Daniel's. They were distractions. On top of that, breathing was pointless, and doing it was a very manual process for a vampire.\n\nThey spent a few days trying different approaches. Jack put his life on hold, his duties, his Invictus job as a Right Hand, to try new things with Elaine. Michael understood. It needed to be done, and if they didn't get this working, Jack would forever be a liability.\n\nBut Elaine had an idea, a scary idea, but an idea. And it fucking worked.\n\nJack stared into the flame of the candle, and focused on its shape. The curl of the flame; he dismissed the thought that tried to analyze why it was shaped that way. The difference in colors; he dismissed the thought that analyzed why there were a few different colors. The way it danced in the stale air; he dismissed analyzing the still air, and how a candle flame could dance in it. He kept his eyes on the burning aura, and let his mind grow quiet.\n\nThere was nothing else, just the flame. Only the fire existed. Vampire bane.\n\nJack.\n\nAnd there he was. The curse, a voice in his mind, but nothing more. A thought, to be dismissed.\n\nJack. You can't ignore me.\n\nJack sighed slowly, and stared at the fire. A drum solo ran through his head, something from Lamb of God. He dismissed it.\n\nJack, I'm not just a thought in your head you can suppress. I'm a person, stronger than you, and I will not be silenced.\n\nThe flame danced, and Jack watched the orange and amber, until they drowned his thoughts in their eternal canvas. Fire. Simple, alive, and it reduced anything Kindred to ash and dust in seconds.\n\nYou can't silence me. I can silence you, because I know control, but you... Jack... Jack! If you silence me, the fuck are you going to do when shit hits the fan, and you need me?\n\nHe cast his thoughts into the flame, and let it devour them. All that was left was silence.\n\nShit's going to get rough eventually, and you're going to come crawling back to me. You can't control the power of the curse. I can. You're nothing without me. When someone's on death's door, and the only person who can do shit about it is you, you'll come running back to me. You're nothing without me! Nothing!\n\nWords on the air, that drifted into the flame. Meaningless.\n\nHe smiled as he closed his eyes, and let his mind relax. The silence continued, like a small stream, and he could tell it separated himself from the curse. With time and effort, Jack could make that small stream into a raging river, and the curse would never be able to cross it.\n\nHe got up, and knocked on the door. Elaine stepped in.\n\n\"How did it go, great grandchilde?\"\n\n\"I think we're making progress. He tried to talk to me, but I managed to ignore him. Like, completely.\" Just like the curse had ignored Jack in the Great Below, straight up ignored Jack to the point Jack might as well have not existed until the curse expended their vitae. How the tables had turned.\n\nShe sighed relief and touched his shoulder. \"That is a step, then. It had helped me, but my circumstance was different than yours.\"\n\n\"It's a great first step. But, next time, let's get rid of it completely.\"\n\n\"That... will be difficult. My thralls have found little in my archives, but there are some mentions of the Lancea et Sanctum.\"\n\n\"Sounds like a place to start. I'll see about talking to Damien and Maria.\" He'd been avoiding Damien, but he had good reason. \"And I need to talk with the hunters. Harcourt, ideally.\"\n\n\"How about your mother?\" a third voice said.\n\nElaine and Jack looked down the hallway, and Jack winced as he realized it was his mother talking. Shit, another person he'd been avoiding, and probably shouldn't have been.\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\nThe two of them entered her bedroom, and he spent a little time looking around at the walls where she'd hung up curtains, and the hilariously grand and massive vanity table. The mirror, wide and tall, showed off the various things she had scattered on the desk, and he stood in front of it as he looked down at them.\n\nA picture of his dad, James, with his mother when they were young, back in the nineties. A picture of Mary and Jack when they were kids. A picture of Jack, not long before he died. A picture of his mom with Mary, something they took after Jack died, when she was finally moving on with her life.\n\n\"You've been avoiding me.\"\n\nHe winced. \"Yeah.\" Christ, the guilt hit him double hard, and he picked up Mary's picture. His mom had finally managed to put her life together, then lost her daughter and her life in a single night, and now the only thing she had left, him, was avoiding her. Fuck. Fuuuuck. \"I'm... sorry, about that.\" She really shouldn't have gotten these pictures, but she did. Antoinette probably didn't approve.\n\n\"I thought you were just being a boy, a man, doing what all young men do, and growing up.\"\n\n\"I mean, yeah, but no. We're vampires now. That old family approach to things doesn't really apply anymore.\" He set Mary's picture down, and joined his mom on the edge of the bed. She was in a suit, just like him, though Antoinette liked her suits with a little more artistic flair than Invictus.\n\n\"Then why're you avoiding me?\"\n\n\"Because it wouldn't be fair.\"\n\nShe blinked at him. \"What? Fair to you? I don't--\"\n\n\"Fair to you.\"\n\n\"I'm... not sure what you mean.\"\n\nSighing, he gestured to himself as he turned on the bed, one leg pulled up onto the blankets so he could face her. \"Mom, you're a fledgling. Your job right now is to learn how to manage being a vampire. The only things on your mind should be\"--he counted off on his fingers--\"learning how to hunt, how to avoid the sun, how to keep your head low, and how to maintain the Masquerade.\"\n\n\"Well they're not. I'm concerned about my son.\" She turned to face him as well, and she glared at him. It was her Mom glare. A powerful glare, but Jack had gotten used to facing it down, after his dad died.\n\n\"You know about the curse.\"\n\n\"That doesn't mean you're not my son anymore.\"\n\n\"Mom, come on, I need you to stop jumping on that reflex, and listen to me.\"\n\n\"I don't--\"\n\nHe swiped his arm across the air, hard enough to make the bed shake slightly. \"Listen. To. Me!\"\n\nShe recoiled a little, eyes wide, and he ground his teeth as he looked down. Hard to tell if that burst of anger was the curse, or just him, frustrated that his mom fell into old habits so easily.\n\n\"Jack...\"\n\n\"That old family life is gone. You're my mom, but you're a vampire first. Hell, you're the Prince's childe before you're my mom. No one, and I mean no one, not one single vampire in this whole city, is going to think of you as my mom first. You're Antoinette's childe first, and they'll interact with you based on that. And me, I'm Jack, the guy who survived Lucas, the guy who survived the azlu, twice, the guy who beat the hunters. The cursed guy, who's dangerous.\"\n\nShe looked down, obviously wanting to say something, but knowing full well he'd interrupt her if she did. It wasn't the listening he wanted her to do, but it was better than a meaningless argument.\n\n\"This week, I went to another realm, Mom. Like, literally, another realm of existence, full of ghosts.\"\n\n\"Ghosts? Like...\"\n\n\"Yeah, like Mary. My friends nearly died there. I took on a fucking azlu there\"--his swearing earned a wince from her--\"and beat it on my own. My other friends showed up to rescue us, and the curse nearly attacked one of them, just because I was annoyed they spoiled my fight.\" He got up and started pacing, eyes looking around randomly as he tried to summarize his crazy life in a way she could understand. \"And that's just the curse, the latest and biggest problem, being a thorn in my ass. Before that, I was getting pulled into important roles in the Invictus, from organizing insider trading, to literally showing up in dark alleys and exchanging briefcases full of money. In the chaos of a bunch of elders dying and Natasha leaving, I became a Right Hand. The werewolves and monsters showed up, and I found myself playing liaison between them and vampires; Avery and Azamel have some rough histories in Dolareido, and the Prince and the Invictus thought it'd be a good idea to use me as a communication buffer.\"\n\nHis mom stared at him, eyes wide. Some of this she knew, some she didn't, but this was the first time he'd dumped it on her like this. He had to. If he gave her the information slowly, to try and parse like Damien or Natasha or Antoinette might, she'd rationalize each individual point away. Better to bury her in the truth until it broke her stubbornness.\n\n\"But,\" he continued, \"despite all that, I spent the first chunk of my vampire life not dealing with that. At first, I was just a dumb vampire, learning the ropes. Julias... Julias, he held my hand, and taught me the basics. Taught me how to hunt, how to feed, how to avoid the sun, how to use my Disciplines in a bunch of different circumstances. And when he wasn't doing that, Antoinette was helping me. And the two of them gave me time to get over my personal shit.\"\n\n\"Personal... shit.\" She struggled with swearing, and he almost laughed. \"How did that go?\"\n\n\"It was hell, Mom. I killed someone my very first night, Mrs. Pavala. Drank her dead in a frenzy, and when I came back to my senses, I ripped her fucking head off to disfigure the corpse, so no one would point out the fang marks.\" His mom knew about Pavala. She didn't know about him decapitating her corpse. \"I spied on you and Mary a bunch of times. I visited my own grave. Just... just getting used to being a new person was brutal. A lot of vampires kill themselves in the first few months after their embrace.\"\n\n\"Antoinette told me that. I...\" She shivered and rubbed her arms. \"When I first woke up, and she told me Mary was dead, I... I thought things like that. But but, that's when she showed me you!\"\n\nHe sighed, sat down beside her again, and grabbed her hand. In the past, that'd be something she did to him. Seemed only fitting he do it for her.\n\n\"I'm here, alive, much as a vampire can be, and I don't plan to go anywhere. But my life is one giant pile of crazy, with a lot of high stakes gambles. You know how many years I should have been a vampire before dealing with the shit I deal with now?\"\n\n\"No.\"\n\n\"Fifty, for the political shit, for being a Right hand, for dealing with Azamel and Avery. A hundred or more for the fucking monster fights and realm hopping. The shit I'm dealing with is not normal, but I've managed. It's not a normal situation though, and you shouldn't get involved in it.\" He pointed a finger at her, and jammed it into her shoulder hard enough to make her wince and smack his finger away. \"You, for the next few years at least, should be focused on nothing more than just learning to be a vampire, and enjoying the good parts of being a vampire. Find the things that are good about it, and embrace them. Being a vampire can really suck, but it can be really awesome too.\"\n\nShe smiled at that, and met his eyes again. \"Awesome?\"\n\n\"Yes, awesome.\" Ok, time for the sex talk. Why he was giving the sex talk to his mom, he didn't know, but it was important she realized how different things were now. Thank god he wasn't alive anymore, or he'd be vomiting everywhere from sheer awkwardness. \"Go get laid, Mom.\"\n\n\"What!?\"\n\n\"Go get laid. Find a mark, drink them and fuck them.\" More cursing too, because he needed their mother son relationship to evolve, or Samantha was going to get herself killed trying to protect him from something. \"Hell, with Antoinette teaching you, I'm sure you'll be a master of Majesty in no time, so, have yourself an orgy.\"\n\n\"Jack!\"\n\n\"I'm serious! Go, have an orgy. Enthrall a few kine and go nuts. Maybe go find Isabella and enjoy some time with her ghouls... and her and Hella, if you're into that.\" He didn't think his mom was bi, but the fuck did he know? \"Go spend some of Antoinette's money on some male prostitutes from the entertainment district. Hell, go to Devil's Corner and rent out a whole troupe of hookers, if you want. Or just ask Jessy if you can borrow her ghouls. I know she'll lend them to you. If you want, go talk to the witches, and see if they'll hook you up. I know they're basically in an orgy twenty-four seven.\"\n\nThe mention of witches made her squirm. She'd have looked away too, but her eyes were already locked on her legs, the whole conversation obviously overwhelming her awkwardness limit.\n\n\"Jack...\" She squirmed a little more, wriggling in embarrassment until she found the words. \"Jack, I'm sleeping with Jacob.\"\n\n\"Say what?\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Beatrice~~\n\nThree weeks after her first meeting with Elen.\n\nIt was getting easier. She didn't think about him as much anymore, and didn't feel guilty when fucking Jen anymore, either. The guilt hadn't ever really been a problem; Julias would have wanted her to find some solace in Jen's arms. It was more the ache and misery that'd been a problem, and as the months went by, it faded.\n\nShe'd been worried that maybe her sessions with Black Blood and the immortal Elen would have her swimming in memories about Superman, but they didn't. It was a project for her to pour her passion and energy into, and that made it easier. Maybe she'd get to have Julias back, maybe she wouldn't, but holy fuck she was going to try. And that made it easier, took the edge off not having him in her life.\n\n\"Samantha's moans were really cute last night,\" Jen said. \"Sounded like they were being gentle.\"\n\nTriss nodded, and twisted her body to get a better angle. She and Jen sat in their shared alcove, naked, and were in middle of having their legs wrapped around each other, to celebrate dusk. And they had the fur curtain pulled open, cause, why the fuck not. She didn't care anymore if people watched. The only people in the cave were members of the Circle, and honestly, it was kinda fun, letting them see sometimes.\n\nIn a little bit, Jen and Triss would go outside, and take a trip to speak with Black Blood again. But, a little sex first, to start off the night proper.\n\n\"That a good thing?\" Triss asked.\n\n\"I think so. With a woman like Samantha, she'll have her strongest climaxes from rough sex. But a night of soft, tender sex? Emotions were involved.\"\n\nThat made sense. Samantha reeked of the sort of woman who read trashy romance stories with the same shirtless guy on the cover, a guy who would treat her softly outside of bed, but treat her like a dirty dirty girl once in bed. It was a cute thought, for sure.\n\nTriss frowned at where her legs were locked with Jen, and where their slits were squashed together. Scissoring sucked.\n\n\"This is like slamming two clams together, Jennifer.\"\n\n\"Because your technique is atrocious. Come on, get in closer and grind, not thrust.\"\n\nTriss rolled her eyes. This whole thing was Jen's idea, and the girl was a master of sex, but this attempt at expanding Triss's boundaries was a failure. After a few more minutes of grinding and not finding a position Triss enjoyed, she collapsed back on her fur, and stared up at the ceiling. Her head drifted to the side, and she looked out at the empty cave.\n\nOthello lay in his alcove, fur also pulled wide open. He was getting his good morning, er, evening blowjob from Madison, like usual, and like usual, he did it halfway in the opening of his alcove so everyone could watch. After having seen it hundreds of times, Triss should have grown bored of it, but she didn't. They were both gorgeous, and it was arousing as fuck to watch them together.\n\nSo, with some porn to watch, Triss gave her hips a few extra swaying grinds. It barely registered on the pleasure scale.\n\n\"I give up.\"\n\n\"You, are hopeless.\" Jen reached down and slapped the one butt-cheek Triss had not pinned under a leg to the floor.\n\nThey both raised their heads and looked out to the cave as the shuffling of feet announced someone walking. Shy, soft steps. Samantha's steps.\n\nAnd Samatha came out, into the cave, alone. She wasn't dressed, instead wearing one of Jacob's furs wrapped around her, and she walked on tip toes as she came out into the cave, eyes cast in the direction of Othello's hole in the wall.\n\nWell well well, the Daeva's sex drive had been awoken. It certainly wasn't like she wasn't getting her fill from Jacob, based on the moans, but if she was sneaking out here for a peek at what Othello was up to, maybe Jacob had left? The fucker's Cloak was strong enough he could do that without any of them noticing.\n\nSamantha froze when she spotted Jen and Triss. But before she could turn and flee, Jen waved, and waved her over. Chuckling, she prodded Triss, who rolled her eyes, and also motioned Samantha over. Yeah, sure, invite her over for a chat while Triss and Jen failed at tribbing. Perfect time for a conversation.\n\nSamantha blinked, several times, before she came over to them. She averted her eyes quite a bit, staring at the floor as she got closer, and hell, Triss couldn't help but chuckle at that. The woman was so much like Jack when he was younger.\n\n\"Samantha,\" Jen said, voice soft, calm, and smooth like silk. \"How are you? Where's Jacob?\"\n\n\"Jacob, uh, he had to do something... witchy, I guess. And, um, I realized this morning -- evening -- that my clothes were all torn up, so I thought I'd ask Othello. Cause...\" She looked over her shoulder, and her gaze lingered on the man, still mid blowjob. Yeah, Samantha definitely wore her kinks on her sleeves. \"Cause he's always here, and I figured Madison might have something?\"\n\nSo Jacob was gone then. He had some pretty important shit in his alcove. Leaving Samantha in there was a potential disaster scenario. Then again, Samantha was too nice to steal anything, and it wasn't like she could read any of the ancient texts. Hell, Black Blood was trying to teach Triss how to, and progress was slow as fuck.\n\n\"Well, they're a bit occupied, as you can see,\" Jen said, \"but we have clothes.\" Still with her legs wrapped around Triss's, Jen smiled at Samantha, got comfortable on the furs on her side, and locked her legs tight so Triss was trapped on her back. Ok, apparently Jennifer, Queen of the cave, had decreed she and Triss were to remain leg locked until this awkward conversation was over. \"But first, you have to give us some good gossip.\"",
        "\"Gossip?\" Samantha forced herself to look at Jen, her squirming lessening with each passing second.\n\n\"Gossip! It's been decades since Jacob's had anyone in his bed. You have to tell us at least a little.\"\n\n\"Bed. You... you hear it, don't you?\"\n\nTriss chuckled hard; sounded like a pig snort. \"Uh, yeah. You sound like Madison does when she's in the middle of a Kiss climax. Maybe a little higher pitched.\"\n\n\"Oh god!\" She threw her hands up to cover her face. Which meant she dropped the fur covering her, and she squealed as she scooped it back up. But Jen and Triss both got to see the woman naked. Damn. Lean, fit, handful breasts, and hints of softness to her that you could only get after having a couple kids. It only added to her hotness. Really, total milf.\n\n\"Jacob is a lucky man,\" Jen said, because the slut knew exactly what to say.\n\nIt worked like a charm, and had Samantha smiling sheepishly as she held the fur snug around her.\n\n\"I'm being silly, aren't I? Covering myself up, when everyone's just... you know.\"\n\n\"It's not silly,\" Triss said. \"You're new to this. But it won't take long before you're walking around naked and fucking your meals.\" She tried to unlock legs with Jen, but Jen fought back, reached down, and grabbed one of Triss's ankles to keep her from getting away. At this point, the tiny amount of pleasure the position had before was completely long, and now Jennifer was just wrestling.\n\nWrestling was fun, but Triss was a Nosferatu. She could throw Jen over a building if she tried. Jen knew it too. She also knew Triss would never do that to her. Crafty bitch.\n\n\"If you're still dating Jacob by then,\" Jen added, \"you could use your Daeva powers to treat him? Nosferatu have no way to entice kine into servitude with the Vinculum, but you do. Imagine the possibilities.\"\n\nSamantha forced her eyes up from the cave floor, and looked at the two naked women, eyes lingering on their bare pussies, and then up Jen's body to her face. There was a hint of intrigue in those eyes.\n\n\"Possibilities?\"\n\n\"Yeah,\" Triss said. \"You've seen Othello with a few kine. Not that hard to seduce people with Daeva's Majesty. Treat your man to an orgy.\"\n\n\"An orgy?\" She laughed and squirmed inside her fur blanket. \"I... I suppose I could, couldn't I?\"\n\nJen nodded, sat up, and Triss thought she'd relent with the silly position. But she didn't, just started grinding her hips into her from a sitting position, one arm behind her on the fur-covered floor for balance, the other clutching Triss's hips. Ok, that did feel a bit better, soft and swollen pussies squishing against each other.\n\nOf course at this point, the damn slut was doing it to see how Samantha would react, not to get off.\n\n\"Imagine it,\" Jen said, voice turning husky. \"Half a dozen women, naked bodies entwined like Beatrice and I, each just waiting for a turn in your man's arms, all at your guidance.\" Jen let go of her hip for a second, clutched one of her own breasts, and gently fondled the large tit until it conformed into her palm and fingers. \"Or perhaps you'd prefer to be the center of attention? You could sit on Jacob's body, lean back, close your eyes, and relax as six women's hands caress, massage, and guide every inch of you.\" She grinned as a thought came to her. \"Or perhaps, you'd prefer it be six men?\"\n\nThat got a tiny squeak out of her, and she shook her head like a child denying they'd stolen a cookie. Totally caught. The woman definitely wanted to be the center of attention, while a mountain of men did things to her. Well, Triss didn't know what sort of kinks Jacob had, but considering all the noise Samantha had been making the past few weeks, he'd been doing something right to satisfy the mom.\n\n\"It's funny,\" Triss said, \"you're not all that similar to Natasha.\"\n\n\"Natasha Vola? Why do you... oh...\"\n\nJen and Triss laughed. Everyone knew what sort of kinks the little Mekhet had unlocked since meeting Matthew and Arturo. Word got around. That little woman was totally into being squashed between two giant hunks of man meat, and apparently, the idea appealed to Samantha. Or maybe it was the idea of being tied up and forced that appealed to her so much?\n\nWith Jen distracted by her own stories, Triss lifted her foot, planted it on Jen's chest, and gently kicked her away.\n\n\"Get up and help the woman find some clothes, ya damn tramp.\"\n\nJen pouted for a moment, sighed, turned off the Blush of Life, and stood. \"Fine, fine.\" She got up, stepped out, and motioned for Samantha to follow. Unlike Samantha, she made no attempts to hide her nudity. Bitch loved to show off like a Daeva, but unlike a Daeva, had no sense of subtly.\n\nAnd Triss loved her for that. Love was a strange way of framing it, considering they were close friends with benefits, a lot of benefits, but not actually romantically interested in each other. Such a strange relationship, but one she was damn glad she had.\n\nShe sat up and dug around in the furs for her tank top and boyshorts, slipped on the black clothes, and got up as she watched Jen take Samantha to her old alcove, which sat higher up on the wall and required some jumping to get to. Jen used to keep her two ghouls up there with her, but now those two were usually out of the cave, doing recon shit. And sometimes they came back, either to report in, or to get in on fucking Madison or some kine Othello brought back with them.\n\nTriss rolled her eyes. Of course going Jen's path took them near Othello's alcove for a minute, and Samantha's gaze lingered on Othello, and how the man was lying on his back, and gently forcing Madison to deepthroat his dick.\n\n\"We're not all a bunch of perverts,\" Triss said, loud enough everyone in the cave could hear her. \"Aaron's not around, but he's super vanilla. Only fucks in private, and has a girlfriend.\"\n\n\"I d-don't think I've ever talked to him,\" Samantha said, stuttering as she forced herself to look away from Othello.\n\nRolling her eyes, Triss crawled out of the alcove, now officially the only person in the cave wearing any clothes, and walked over to Othello as Jen and Samantha disappeared into Jen's alcove.\n\n\"Dude, ever consider you're going to make Jacob jealous?\" She pressed her back to the alcove entrance opposite of Othello, and watched. At this point, she kinda liked watching. It helped rekindle her sex drive, and Othello didn't think of it as anything other than a crowd admiring his amazing sex skills.\n\nTrue, honestly. Madison was never unsatisfied, and was usually fucked into a coma, Kiss or not. Triss had no idea how she kept her ass clean all night every night, considering it was all Othello ever wanted to fuck, but she did, and Othello repaid her with a dozen orgasms whenever they got to fucking. There wouldn't be any fucking this early in the evening, minutes after dusk, but Othello did love to kick his night off with a blowjob.\n\n\"Jealous?\"\n\n\"You're kinda drawing Samantha's eye.\"\n\nHe shrugged, and slipped his fingers into Madison's curly hair. Mmmm, fingers in hair. \"If Jacob wants me and Madison to join them, all he has to do is ask.\"\n\n\"Ha, you think he'd agree to that?\"\n\nThe man shook his head with a small shrug. \"Probably not. But she's not looking because she wants a piece, Triss.\"\n\n\"Oh?\"\n\nHe nodded, suddenly looking quite sagely, despite being mid blowjob. \"She's just looking because it's appealing. Gets her insides revved. Same as you.\"\n\nTriss almost denied it, but relaxed back against the stone wall again, and sighed. It was totally true.\n\n\"You're providing free porn to everyone who enters the cave?\"\n\nThat earned a chuckle from him. \"Yeap.\"\n\nShe rolled her eyes, extra hard, but after a moment she settled and watched the man. Something about the way he had his fingers in Madison's hair, stroking and massaging her head, while at the same time being firm with his hand, was really hot. The girl had to take him to the base if he wanted, and couldn't lift her head until he let her. Yeap, that kinda gentle domination was super hot. Not really Triss's thing, but that didn't change that it was sizzling. She'd definitely watch a shitty movie with sex scenes like this in it.\n\n\"Dildos,\" he said.\n\n\"Uh, what?\"\n\n\"Dildos. If you're going to scissor, use some double-sided dildos. Or better yet, double-sided vibrators.\"\n\nShe laughed. Good god, this man.\n\n\"You ever think about something other than sex, Othello?\"\n\nHe shrugged. \"I think about you.\"\n\n\"That's sex.\"\n\n\"No, not sex. I think about... how nice it's been, having you around.\" The usual, dopey smile he had faded, and he straightened his head up as he smiled at her. \"Jacob's never been the same since Minerva died. He was always kinda crazy, and, you know...\" Right, Othello was alive when Minerva was. Aaron and Jen were not.\n\n\"Witchy?\"\n\n\"Heh, yeah, witchy.\" The man sighed, and closed his eyes for a moment as he pushed Madison's head down. Having a meaningful conversation wouldn't detract him from building up a good orgasm, evidently, but they'd only been at it five minutes and Othello took a lot longer than that to cum. \"Jen, Aaron, me, none of us really get it, the way Jacob does. We don't really understand him. But now...\"\n\nBut now, she did, in multiple ways. It hurt hearing that, but it felt good too. Just because Julias was dead didn't mean her life came to an end, it kept going, and she kept growing.\n\nBut, god, if she could get him back.\n\n\"Is me being a buffer to Jacob's crazyness the only reason it's nice having me around?\"\n\n\"Ha, no. You're the most interesting addition in a long time. You make Jen happy. Even Aaron likes to talk to you, and that's saying something.\"\n\nShe grinned, and sat down. Since her early evening sex with Jen was a bust, at least she could watch Othello enjoy himself. The thought made her chuckle quietly. In the past, the last thing she'd want to see is this dumbass enjoying a blowjob. Now? It honestly made her happy, to see the man happy. She owed him a lot, since he came on that crazy mission to stop the hunters. Plus, free porn.\n\n\"And?\"\n\n\"And you're gorgeous; sharkmouth aside.\"\n\nShe kicked him in the foot, causing him to lift his hand from Madison's head. The ghoul sat up, and looked at Triss with a warm, happy, almost smile.\n\n\"I don't mind the extra teeth,\" Madison said. \"And I saw what you did to Jen yesterday. That was... wow.\"\n\nTriss grinned at the ghoul, a little more playfully than she meant to. Since she'd started fucking Jen a few weeks ago, it'd been a nightly thing, and it didn't take long before they stopped giving a shit if someone could see them. Not like it was a big deal for her fellow witches and warlocks to see her naked, considering she'd showered with Jen and them months ago. Plus, it was kinda nice, knowing she was hot enough to earn a small audience. Having spent decades as a Nosferatu, convinced she was hideous, and then joining a bunch of witches who thought shark teeth were cool? Yeah, she was happy.\n\nTriss opened her mouth and let her very, very long tongue hang for a moment, before she pulled it back up quick, earning a surprised, excited squeal from Madison.\n\n\"Guess I'm the one who's jealous. Get back down there.\" Othello guided the woman back onto his big dick, and while she struggled a bit, Triss could see she relished every moment Othello forced her. Part of that was probably because she was a ghoul, bound by the Vinculum, and utterly, totally infatuated with her master. A much bigger part was probably because she just had that kink, like a lot of women did.\n\n\"I guess I fit in with you witches better than I ever thought I would,\" Triss said. \"Jacob guessed it right.\"\n\nOthello nodded. \"He's pretty damn smart. He doesn't invite people into the Circle randomly.\"\n\n\"Indeed,\" Jennifer said. She walked over to them, still naked, but without Samantha. Without a care in the world, she slipped past Othello, and sat down where Madison lay, shoulder to shoulder with the Daeva. She slid her legs under the ghoul, and rested her hands on the small of Madison's back while her legs became a lap for Madison to lie on.\n\nTriss rolled her eyes again, but laughed. It was strangely cute how Jen got her legs under Madison, and Madison just continued working away at her boss's dick. Everyone in the damn Circle was so hilariously comfortable with each other. Hell, Aaron may have been vanilla, but he'd come into that shower with Othello when Jen and Triss were showering, completely unfazed. He may not have been interested in an orgy, but she doubted they'd even make him blink.\n\n\"And it's more than that,\" Othello said, eyes on her, even as he gently worked Madison's head up and down. \"We've all... suffered, I guess you could say. Jacob you know. Aaron's had major issues with his family, leading to some murder.\" Murder? Holy shit. \"I've lost people, but it's in the past. Now we're a family, witches and warlocks, no walls, no barriers. We can trust each other with everything, right?\"\n\nWith everything. She smiled, a smile she knew must have looked kinda sad, but she nodded as she looked down. Part of her knew she was turning to her witches as a distraction to keep her from thinking of Julias. But, Othello made a good point, and she looked back up as she let the thought worm its way into her brain. She was a sad woman, sinking into a pit of occult rituals and orgies because of the pain she'd suffered, and that descriptor fit the other witches and warlocks too.\n\nThey were one big, twisted, strange family. And that did feel nice.\n\n\"Find something for Samantha?\" she said.\n\nJennifer nodded, and gave Madison a gentle slap on the ass. It rippled.\n\n\"We're of similar height and build. I lent her one of my suits.\"\n\nOthello shook his head. \"Gonna be loose in the chest.\"\n\nJen smirked at the man, and gave him a gentle backhand in the chest. Yeah, Othello had a broad torso, defined pectorals and whatnot. He needed a bigger chest in his clothes too, just like Jen.\n\nThey chuckled. Such a weird atmosphere, the three vampires and a ghoul sitting around, chatting, while Madison ignored them, busy with her task. This was probably how witches and warlocks did their meetings back in the day, back when people thought witches and shit were real. A group of vampires comfortable with each other, comfortable enough to chat while their ghouls got them off. In the future, if Triss got a ghoul, would that ghoul have their mouth on her pussy, fingers in her, while Triss described her night, or maybe their goals for the week, to her fellow Circle members?\n\nDid Jacob come from that sort of environment? Likely. Fucker had probably spent every full moon in an orgy, with a blood sacrifice in the center of it all. She could definitely see him getting sucked off while reading from some strange book, in some ancient language only Black Blood knew.\n\nAnd honestly, now that Julias was gone, she could kinda see herself doing that, too.\n\nWas that the game? If she could bring Julias back, she could save herself from becoming Jacob? But in the process of pursuing that unobtainable goal, she might become something worse? Ugh, it was fucking poetic. She hated poetic shit.\n\nQuiet clops announced Samantha's approach. She'd gotten her shoes from Jacob's alcove, but was now dressed in one of Jennifer's suits. She did look good in it, and she smiled sheepishly as she approached.\n\n\"Thanks, I--oh!\" She almost squeaked again when she got closer, enough so she could face the front of Othello and see that he was still being sucked off. And, with Jen now sitting beside him under Madison's body, Samantha blinked at her several times, before blinking at Beatrice, the only other person in the cave with any clothes on.\n\n\"Don't mind us,\" Jennifer said, \"we're simply socializing. Sit with us, get comfortable. But, I believe you already have been getting comfortable with the Circle, now that I think about it.\" Hilariously obvious conversation segue.\n\n\"I, uh... b-better...\" Like a fly to honey, she stared at Othello, doing a horrible job of hiding it. She was so much like Jack in a way, obviously too easy to read for her own good, and obviously a total hornball. Being easy to read wouldn't serve her very well, especially not amongst a bunch of witches and warlocks, but the hornball thing could be an asset.\n\nTriss rolled her eyes and laughed. \"She might be fucking our boss, but she's still the Prince's childe. Maybe we shouldn't try and get her into all... this.\" She gestured to Madison, who'd been doing a damn good job of gobbling up Othello's cock right to the base.\n\nOthello shrugged, and lifted Madison's head. The ghoul eased up off him, but didn't stop, setting calming kisses on his length below his swollen glans. Giving the man time to settle down from impending orgasm, so they could work out a bigger one, probably. And, of course, he wanted to show off his big dick for the new girl.\n\n\"I've met the Prince on a few occasions,\" Othello said, fingers stroking down from Madison's hair onto her back. \"I guarantee you she'd be quite happy to learn her childe's getting comfortable with sex.\"\n\n\"It's true,\" Samantha whispered. \"She... she's pretty sexually open.\" She made a tiny gesture to Othello. \"Are all Daeva like this?\"\n\nJennifer laughed, and gave Madison's ass another slap. Wiggle wiggle. \"Daeva are the worst for it, but all Kindred eventually grow comfortable with our bodies. Then, the bodies of our ghouls, then other servants, and then, prey.\"\n\n\"I suppose that kinda makes you uncomfortable,\" Triss said. \"Not because of yourself, but because of Jack.\"\n\n\"Jack?\"\n\n\"Yeah. We're his friends, and this whole vampire thing was his life, before you showed up. Er, shit, that wasn't supposed to sound mean. Jack's super happy you're back in his life. But you're probably a little self-conscious about that, right? Like, everything you do, you can't help but think 'oh god what would Jack think if he saw me now'.\"\n\nShe smiled, nodding. \"I guess I do. Though, he's tried to tell me I shouldn't think that way.\"\n\n\"Well, he's right, you shouldn't,\" Triss said, shrugging. \"Jack has been getting drowned in sex for, what, over two years? That kid has been fucking the most powerful vampire in the city, and probably one of the most powerful vampires in the damn country, almost every night. And you know what your sire is like. She's buried him in boobs and pussy, hers and her ghouls', and now Elaine's undoubtedly. And she's probably done it in very public locations.\" Before Samantha could die from information overload, Triss continued. \"He's seen my tits, and Jen's; everyone's seen hers, but you know what I mean. He might have seen Clara's too, considering she has a torch for him. He's... well, you see where I'm going with this. This is one of the few great things about being a blood sucker, and Jack certainly won't judge you for sitting down and enjoying watching a beautiful -- if dumb -- man get a great blowjob.\"\n\nJen and Othello smiled at Triss, that sort of 'she's one of us' kinda smiles, before they looked up at Samantha.\n\nShe closed her eyes, took a deep useless breath, nodded, and sat down beside Beatrice. It was a clean cave floor, no problem for the suit.\n\n\"Ok, you're right. Jacob's said as much, and so has my sire.\"\n\nWith a warm chuckle, Othello nodded toward Samantha. \"You are a Daeva, like me. I'm sure the Prince has told you about the quirks you'll run into, like becoming rather attached to your ghouls.\"\n\n\"Y-Yes.\"\n\n\"And she's told you how much you'll love showing off?\"\n\n\"... yes.\"\n\nLaughing louder, the man gestured to Samantha, and wiggled his brows subtly for a tiny, powerful moment.\n\nShe blinked at him, at Jen, then at Beatrice. Shrugging, Triss reached down, and slipped her tank top up and off, making Samantha squeak and look down. The nipple piercings gave Samantha pause, but it was the snake tattoo running from Triss's nipple, and down her body to disappear under her boy shorts, that made Samantha's jaw drop. That got them all chuckling.",
        "Never in a million years did Triss see herself just goofing around with the Circle like this, stripping like they were drunk morons playing strip poker. But something about what Jen and Othello said struck a chord, and for some fucking reason, she found herself smiling.\n\n\"I uh... umm...\"\n\nEveryone watched Samantha with curious eyes. A bit of peer pressure could be just the right tool to help her come out of her shell.\n\n\"You're very beautiful,\" Jennifer said, \"and, honestly, from the noises we've heard, we all know you're a sexually aware woman. You don't need to be shy with us.\"\n\nAfter another long, heavy sigh, Samantha looked down, and undid a few buttons of her shirt. The jacket was already open, and now that the shirt was a bit open too, Triss could see the woman had no bra. The clothes she'd worn last night on her date hadn't really allowed for one, and Jen's wouldn't fit.\n\nOthello smiled at her, smiled at the cleavage she now showed, and guided Madison's head back onto his dick. He helped his ghoul with the motion, faster than before, up and down, and the talented ghoul worked her head with the rhythm.\n\nApparently that sparked something in Samantha. Well, she was Daeva, and now another Daeva was looking at her, specifically and only her, while getting sucked off. Like fire on kindling. The only thing that stopped Samantha from blushing hard red, and from her nipples pushing out through the white suit shirt, was she wasn't Blushing Life.\n\nAfter an audible gulp, Samantha undid another button, and then another, shivering blatantly with each one. Now her breasts were visible, pleasant handfuls with small, pink nipples. She set her arms down, and looked at Othello, and then at what Madison was doing.\n\nWatching a shy milf slowly expose her tits so everyone else could admire? Fucking. Hot.\n\nJennifer almost said something, but decided to not. Instead, she leaned back against the wall beside Othello, shoulder touching his, and she too watched Samantha and her exposed breasts, as Othello worked Madison's head faster. A growing twinkle shone in Samantha's eye, and she looked down for a moment before looking to Triss. Triss was happier watching the blowjob, but she smiled at Samantha too before looking back to the big idiot and his ghoul doing work.\n\nJust a bunch of vampires, doing vampire things. That's what Jacob would have said.\n\nOthello started to cum, and Samantha raised a hand to her mouth, covering it. Despite the obvious pleasure on the man's face, he kept his eyes open, and on Samantha, her face and her breasts. Once the shock of seeing the man cum from only six feet away passed, Samantha lowered her hand, and tried to sneakily shift her shirt open further, where it disappeared under her pants. She succeeded in opening the shirt more, but not in being sneaky about it. She even grazed her nipple, and traced the underside of one of her tits, completely hypnotized and not even aware she was doing it. Everyone pretended to not notice though, and instead enjoyed the sounds and sights of a beautiful dumbass cumming into his happy ghoul's throat.\n\nDaeva loved sex, generally more than the other blood clans, but damn. Samantha radiated an 'I want to fuck' aura that Triss hadn't expected. She'd seen it on Jack, but only when he was in the company of the Prince. Like mother, like son? Heh.\n\n\"And don't worry about Othello, or us,\" Triss said. \"Unless Jacob initiates it, no one's going to touch you. We're all a bunch of exhibitionists, voyeurs, and perverts, but we're not assholes.\"\n\nSamantha managed a tiny, thankful nod, but her eyes were locked on Othello's cock, and where she and Triss could see the man's flesh literally pumping, until it overflowed Madison's mouth. Well, they had been at it a while. Giant orgasm was inevitable. White leaked out of Madison's lips, and down the man's cock, heavy trickles that were damn near supernatural. Kinda like the fucker was a living example of those burger advertisements, the ones super dolled up and fake, except, not fake.\n\n\"You all really... really feel ok with this sort of stuff, don't you?\" Samantha said. She buttoned up a button, but when Jen waved a small hand, she stopped at one, leaving three undone, and much of her breasts exposed. Nipples covered, but only barely. A damn sexy way to wear a white-button shirt.\n\n\"We do,\" Jen said. She leaned forward a bit, squashing her bare tits on Madison's back, and looked down at what Madison was doing. Satisfied, she leaned back again and gave the ghoul an encouraging couple pats on the ass. \"Things do change sometimes, but, yes, we're often here enjoying such freedom. And when we're not, we're... well, your boyfriend can tell you.\"\n\nSamantha smiled. \"Witchy stuff?\"\n\n\"Witchy stuff,\" Jen, Othello, and Triss all said together. More laughter followed.\n\nMadison, after making sure Othello's dick was clean, sat up and slipped between Jen and her master. He hooked an arm over her shoulders, hugging her to him, and she beamed with pride. Job well done. She'd probably noticed what her fellatio had done to Samantha, and had delighted in making a show of it. Well, Othello did take her as his ghoul for a reason.\n\n\"Is it always, uh, you?\" Samantha said, gesturing to Othello. \"Um... having sex, in the open.\"\n\n\"Jennifer used to fuck her ghouls,\" Triss said. \"She has a couple boys at her beck and call, and they were DP'ing her regularly. I've talked to her same as you've talked to Othello, mid sex.\"\n\nSamantha blinked at them, especially when she noticed Jennifer's eyes go down, saddened. \"But... not anymore?\"\n\nTriss shook her head. \"Not anymore. She got in with me and Julias, and for a good while there it was the three of us. And... now it's the two of us.\" Ugh, she really didn't mean to drag the mood down, but once the words were out of her mouth, everyone looked down with the fucking worst case of spontaneous depression. \"Guys, guys, don't be like that, ok?\"\n\nJennifer lifted her head and grinned at her, a knowing grin. She was there for every meeting Beatrice had with Black Blood and Jacob about their secret plan. She was there every time Triss took another step toward that goal. Hopefully she didn't think Triss was feeling better because she thought maybe Triss was thinking it might be possible to resurrect Julias. She was, but she was also feeling better because of Jennifer herself, and even the handsome moron sitting beside her.\n\nOthello stopped Blushing Life, and the sexual tension in the air melted away. Mostly. Just cause his dick got soft didn't mean there weren't a bunch of people sitting around naked.\n\n\"You said your clothes were torn?\" Jennifer asked. \"How did that happen?\"\n\n\"I... uh...\" Samantha squirmed, and considering her shirt was almost wide open, it made the motion so much more attractive. \"We were playing hide and seek. He found me.\"\n\nTriss laughed. \"You definitely sounded quieter last night. I thought maybe you guys were doing something super vanilla, but now I'm guessing you were gagged?\"\n\nSamantha squeaked and covered her cheeks with her palms. \"Oh god.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Natasha~~\n\nNatasha groaned as her phone began to ring, and she reached out for it. She'd have ignored it, but it was Jessy's ring, and it was important the two of them exchange a couple quick words every couple days, at the minimum. Even though she was a dragon now, she still kept up her safety check-in system with her friend.\n\n\"M-Matt, stop for a second! I need to check in with Jessy.\"\n\nMatt sighed, nodded, and let go of her legs. They'd been pinned to her shoulders, and now they flopped on the mattress, spread around the huge man. But, as she reached for her phone again, Matt sat on his knees, and continued fucking her in a very slow, deep rhythm. And of course since he sat back on his knees, ass on his heels, he pulled her up toward his pelvis so her legs hooked around his hips, her ass a few inches in the air. She mewled, and her hand pushed the phone aside an inch by accident. Thunk thunk. It bounced on the floor.\n\nShe rolled her eyes, pushed herself up onto her elbows, and glared up at the big man. \"I meant stop fucking me! N-Not, stop holding me down.\"\n\n\"Oh. Well, I'm gonna have to decline.\"\n\nShe growled, reached up, and punched the giant in his chest. All she got for her efforts was a grin from the man as he used his big hands to ease her off most of his length, and then pull her toward him until she'd swallowed him to the base again. She looked at her spread lips, and how they soaked the man with each slow stroke, all while Jessy's ring tone continued in the background.\n\nIt stopped ringing, and she frowned up at her big dumb boyfriend again. But before she could find a good argument, her laptop, sitting on the nightstand nearby, began to ring as well. It was the vid program she and Jessy, and all the Invictus used to talk with each other when they wanted video.\n\nArturo, naked and already satisfied, walked in from outside her bedroom, pointed the laptop at her, and pressed the anwer button.\n\n\"Art!\"\n\nThe program blinked on, and Natasha froze.\n\n\"Hey Tash, I--oh fuck yes!\" Jessy leaned in toward the camera until her face devoured the whole screen, and her eyes filled with wonder and hunger as she stared.\n\n\"Art y-y-you asshole!\" She grabbed the nearby blanket, pulled it over herself, grabbed one of her pillows, and threw it at Art. The evil man cackled as he ran out of the bedroom, dodging the pillow like it was a bomb.\n\n\"Something going on?\" Eric's voice said over the laptop's speakers.\n\n\"Natasha's getting it on!\"\n\n\"Oh god. Jessy, come on, let her--\"\n\nJessy's head shifted left and right as Eric fought to get access to the laptop, but she fought him off. \"Thanks Art!\" she yelled.\n\nArt stuck his head back into the room, but before he could say anything, Natasha threw another pillow at him. It hit him in the head, and the man yelped and retreated.\n\nNatasha glared up at Matt, but he only smiled down at her. Her torso and pelvis were covered in the blanket now, but her legs stuck out with how her pelvis and ass were snug to the man's body. It was obvious to anyone watching, with where Matt's hands disappeared under the blanket, that he had his grip around her hips, and was penetrating her.\n\n\"Check in completed. G-Go away now!\" She'd end the conversation herself if she could reach.\n\n\"Can't! Got some questions.\"\n\n\"W-What do you want?\" Natasha said, voice wavering.\n\n\"Couple things. First, how's the hunt for evidence going?\"\n\n\"Nothing new.\" Natasha relented to the situation. The faster she could get this conversation over with, the better.\n\nSeveral more trips into the Hisil had found nothing to exonerate her old boss. She, Matthew, and Arturo had explored much of the Shadow realm, and found several more circumstances of red wraiths drifting around, doing suspicious things. They'd found a tear, but hadn't been able to get near it, with red wraiths surrounding it. And the wraiths had mentioned Maria a couple more times.\n\n\"Bummer. I hope that bitch isn't sticking her fingers where she shouldn't be,\" Jessy said. \"Second thing, tomorrow night, Fiona wants to get a bunch of us together at Bloodlust. Party kinda deal.\"\n\n\"Oh. Um... I guess we could g-g-oh!\"\n\nMatthew, apparently feeling even more playful than usual, started to fuck her again. Big, long, heavy strokes, each removing almost his entire length, before he swiftly pulled her back to him until he sank himself to the hilt. They'd been having sex for a while, and she'd had a drink of Arturo to finish him off only ten minutes ago. Her body was delighted to keep going, and with how horny she was, Matt sinking his length in until she felt her insides stretch inward to accommodate him, was heaven.\n\nShe managed a peek over at the laptop again. Jessy had moved aside a bit to make room for Eric, but the man was obviously trying to not watch. They were in Eric's kitchen, and Eric was preparing a meal; probably raw meat, considering he was Uratha. They were also naked, which made the whole situation even more embarrassing.\n\n\"I'm thinking Fiona's trying to get Damien and Jack to talk to each other. Jack's been avoiding him since that whole thing, and Fiona's definitely that bubbly 'everyone should always get along!' kinda girl.\"\n\n\"She's... nice...\" Natasha, unable to keep from moaning a little between words, glared up at Matthew, but the big man only grinned at her. This was payback, for that time Natasha got to watch Jessy and Eric have sex on vid call. Definitely regretted telling the boys about that.\n\n\"She is nice, and totally stacked. Some of the best tits you've ever seen. I'm gonna try and get her to strip at the party.\"\n\n\"D-Don't do that. That's mean.\"\n\n\"Bah, that's not mean! Besides, I'm just helping Damien come out of his shell.\" Jessy leaned in closer to the camera again, and grinned like the devil. \"Like a certain someone else I know.\"\n\nShe glared at Jessy and scrunched up her nose, but the expression broke the moment Matthew picked up his pace. And the bastard must have been listening to Jessy, because he took her words as queue to fuck her hard, and fast.\n\nNatasha squeaked as Matthew knelt up straight, taking her ass up into her air with him, and he began to pound into her. Her body, arched so her shoulders were on the bed with neck and head flat on the mattress, slid back and forth faster and faster, until the blanket slid right off her. She tried to grab it, but each time Matthew pulled her toward him, he also thrust forward, and the impact had her whole body shaking; the bed shook, too. And each time he sank his cock into her, she let out small whimpers as the man stretched her until she thought she'd split apart.\n\n\"Oh my god, I can actually see how deep he's getting in you! Christ you are tiny. Eric, look at this!\"\n\nBetween the hard thrusts from her boyfriend, Natasha managed a small peek at the camera again. Jessy was still leaning forward over her kitchen table, but now she had her elbow on it, her face in her palm, and she looked like she was drooling. Couldn't drool without Blushing Life, but from the glazed, hypnotized look in her eyes, she would have been. And, god damn it, Natasha knew she liked it when Jessy looked at her that way. She was starting to like it when anyone looked at her that way.\n\nDolareido, and Jessy, were corrupting her, bit by bit.\n\n\"You definitely need to wear something sexy,\" Jessy said. \"I will be.\"\n\n\"You... just want... an orgy.\" It was hard to get out the words, but she managed, despite the moans fighting for her air. \"B-But, I won't--\" She mewled and squirmed, and came. But Matthew was quickly approaching his own, and didn't slow down. She squeaked with each thrust, and reached up to try and fight against the hand's holding her hips. Apparently fighting to escape over-stimulation turned Jessy on, because she groaned openly when Natasha grabbed Matt's wrists, only to utterly fail at removing them.\n\nThe werewolf let out a growl, a hungry, possessive sound, reached down, and picked her up. He buried her in a big hug, sank her down hard on his cock, and thrust into her a few more times, each earning more whimpers from her as the tingles of pleasure refused to cease. And with how her laptop was pointed, now Jessy could see her back, and maybe Matthew's testicles, undoubtedly dripping with her juices. She'd already soaked Matt before, but now, with Jessy and Eric watching her, she couldn't help but drench the man, and she hid her face in his chest as she locked her legs around his waist.\n\nJessy groaned, and moaned, until Natasha peeked over her shoulder to see what the damn woman was doing. Nothing, absolutely nothing. She just stared at Natasha, eyes locked onto her, her ass in particular; probably staring at the big mess Tash and Matt were making. Natasha's orgasms had only grown messier and messier, the more comfortable she'd grown with Matt and Art, and their increasingly rougher sex. And of course, the boys were werewolves, and made a big mess every time they came.\n\n\"Tash, I have the sexiest little dress you have to wear. Guaranteed Art and Matt will be all over you the moment you're in it.\"\n\nShe rolled her eyes, and sank her forehead onto Matt's chest as she hugged the man tight. She was still cumming, aftershocks rippling through her legs where they were snug around the giant's hips, and Jessy knew it too. But to Jessy, mid orgasm was a perfect time to propose dress options.\n\nWhy Jessy was her best friend, Tash didn't know. But she was. And she couldn't have asked for a better one."
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "paranormal romance",
        "slow",
        "violent",
        "vampires",
        "werewolves",
        "monsters",
        "suspense",
        "mystery"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-08-ch-08"
}