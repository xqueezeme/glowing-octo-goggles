{
    "title": "Fluffer in Training Ch. 05",
    "pages": [
        "Rachel returned to the studio to find Paul talking to Lori, the blonde girl nodding as he spoke. He turned and acknowledged Rachel as she approached, and then spoke to both of them. \"Thanks girls. Good work. You can take off now, we're done for the day. Lori, great to work with you again. Rachel, nice to have your on board.\" He gave her a little wink that she knew Lori couldn't see. She wondered what that was all about. \"I'm sure we'll be seeing more of you soon.\"\n\n\"Thank you, Paul,\" Lori replied.\n\n\"Thank you, sir,\" Rachel said, unsure of how to address the director.\n\n\"It's just Paul,\" he said, patting her on the arm and walking away.\n\n\"How did things go with Tanya?\" Lori asked. \"I hear she can be a real bitch at times. Did you get her cleaned up okay?\"\n\n\"Uh, yes. I think so,\" Rachel replied, happy that she'd thoroughly washed her face. \"It took a little longer than I expected, but she seemed happy afterwards.\" She thought about how she'd left the young starlet, slumped in the chair with her legs spread obscenely, a dreamy look on her face. \"And she was very nice too. I like her.\"\n\n\"That's good. You did great for your first day, Rachel,\" Lori said, pulling off her hairband and shaking out her curly locks. \"The guys liked you. That's just about the most important thing.\"\n\n\"Thanks,\" Rachel replied. Following Lori's example, she undid her ponytail, her jet black hair falling onto her shoulders. \"Thanks for showing me what to do. I really appreciate it. I'm glad you think I did okay. I'm still unsure of myself and I really need this job.\"\n\n\"Just keep doing what you're doing and you'll be fine,\" Lori gave her a little hug, which made Rachel feel more at ease. \"Now, it's Friday, girl. We've got the whole weekend ahead of us. Let's haul our asses out of here. My man should be outside waiting for me.\"\n\nRachel pulled on her jacket and the two girls picked up their purses, walking out side by side. In the bright late afternoon sun, Rachel had to squint to see her watch. It was a little past five.\n\n\"There's Bruce,\" Lori said, pointing to a young man with sunglasses and a beard behind the wheel of a pickup truck parked on the opposite side of the parking lot. \"Which way are you headed?\"\n\n\"Oh, I'm heading back downtown.\"\n\n\"Sorry, we're going the other way and we're already late for a barbecue we're supposed to be at.\"\n\n\"Oh that's fine. The bus stops right by my place anyways.\"\n\n\"You're sure you'll be all right?\"\n\n\"Yes, I'll be fine. You go ahead. Have a nice weekend.\"\n\n\"You too.\" Lori walked towards the pickup truck before turning and smiling. \"Don't do anything I wouldn't do.\"\n\nRachel waved and walked across the street to the bus stop as Lori and her boyfriend drove away. As she waited, she saw the two young men who'd been in her scene climb into another car and drive away. She looked down the street, hoping the bus would come soon. She turned back and looked across the street, just in time to see a black Mercedes convertible come out from the side of the studio building and turn onto the street, heading in her direction. She saw the driver's head jerk as he spotted her at the bus stop, the car quickly shifting into the lane next to her as he pulled to the curb.\n\n\"Hey, new girl.\" Looking into the sporty car, Rachel watched as Justin Deeper took off his aviator-style sunglasses and set them on the console between the two front seats. He looked up at Rachel, giving her a hundred-watt smile. She barely recognized him with regular clothes on. He was wearing jeans and an open-collared white shirt, which looked great against his tanned skin, his stubbly growth of beard and longish hair making him look rakishly handsome.\n\n\"Mr. Deeper?\" Rachel said, unsure of what to say.\n\n\"You're waiting for the bus?\"\n\n\"Yes. I'm just heading back home.\"\n\n\"Where's home?\" Rachel told him where she lived. He reached over and popped open the passenger door of the sports car. \"Hop in. I'm going right past there.\"\n\n\"Um, are you sure?\"\n\n\"C'mon, c'mon,\" he said with a smile, waving his hand for her to get in.\n\nRachel climbed into the car, fastening her seat belt as he pulled back into traffic. \"Thanks. I really appreciate it. The bus would have been fine though. I'm used to it, Mr. Deeper.\"\n\n\"Mr. who?\"\n\n\"Uh, Mr. Deeper? Or should I call you Justin? I'm not sure what's appropriate.\"\n\nHe laughed, giving her a big grin as he flicked his eyes from the road over to her. \"Justin Deeper is just my stage name. My real name is Alan Ferguson. That's not too exciting in this industry, so my agent came up with the Justin Deeper thing a couple of years back.\"\n\n\"Oh, I'm sorry, Mr. Ferguson. I had no idea.\"\n\n\"Alan, just Alan will be fine. What's your name? I don't think we had time to be properly introduced.\"\n\n\"It's Rachel.\"\n\n\"Rachel. Nice name,\" he said, giving her that megawatt smile as he maneuvered the flashy sports car through traffic. \"Do you like to eat, Rachel?\"\n\n\"Pardon me?\" the young girl replied, confused by his question, wondering if he was making some kind of joke or comment about her plumpness.\n\n\"Sorry, my fault. I should have asked if you were hungry. Are you?\"\n\n\"Well, a little, I guess,\" she said, still unsure of where he was going with this.\n\n\"Because I've got nothing planned for this evening and I was thinking of grabbing a bite to eat. I know a nice seafood place that has the best crab cakes in the world. Would you like to join me?\"\n\nHe looked at her, a warm comforting smile on his handsome face. Rachel was thrilled that he'd asked her, but knew she only had a few dollars in her purse. She figured any restaurant someone with a car like this would go to would be out of her price range for sure. \"That's so nice of you to ask, but I don't think I should.\"\n\n\"Are you sure? You don't like seafood? We could grab some Italian if you like. Anything you want.\"\n\n\"No, no. It's not that. I love seafood. It's just...well, to be totally honest, things are a little tight with me right now until I get my first pay check.\"\n\n\"Oh, that's my fault again. Man, how much more can I screw up in one day?\" She found his smile infectious and felt her mouth turn up at the corners. \"This would totally be on me. I heard that you took this job to help pay for your expenses at film school here, and I know how difficult it can be for a young person to make ends meet in this town. L.A. is great, but she's a cruel mistress. So, what do you say, feel like joining me, or are you going to make this pathetic old man eat all alone?\" He gave Rachel a sad face that made her laugh.\n\n\"Okay, since you put it that way. I really appreciate it. I'll pay you back when I get my pay check.\"\n\n\"Don't worry about that at all. You won't owe me anything. I'll like having the company. It's me that should be thanking you.\"\n\n\"I would have thought on a Friday night someone like you would have had a date, or something.\"\n\nHe took a corner sharply, the black Mercedes accelerating as he headed towards the ocean. \"Naw, nothing today. I like to relax on Friday nights. Have a nice meal, kick back, maybe watch a movie. That's just the way I like it.\" He paused as his eyes flicked over to her, he gaze roaming up and down her buxom form appraisingly. \"But what about you? An attractive girl like you certainly must have a date for a Friday night. You don't have a boyfriend waiting for you?\"\n\n\"No,\" Rachel replied, shaking her head. \"I haven't met anyone since I've been out here, and there isn't even a boyfriend back home. No, I was just headed home to some soup and a grilled cheese sandwich.\"\n\n\"Then a nice meal sounds like just the thing for you.\"\n\n\"And you sure you just don't want to be alone? I'd understand if that's what you'd prefer.\"\n\n\"No, like I said, the company will be nice.\" He turned to face her as he spoke, and she noticed his eyes flick down to her chest, the shoulder strap of her seat belt cutting right down between her substantial breasts, emphasizing their size. She felt a squeamish tingle deep inside her as his eyes seemed to reluctantly turn back to the road.\n\n\"I really like your car. How long have you had it?\" They engaged in small talk the rest of the way to the restaurant. They pulled into the parking lot and Alan tossed the keys to the valet as he quickly strode around the car and opened the door for Rachel.\n\n\"Thank you so much,\" she said, taking his hand as he helped her out. She'd never been treated like that before and felt herself smiling, feeling like a princess.\n\n\"Mr. Ferguson, we have your usual table available,\" the maitre d' said as he led them to a table for two that overlooked the ocean. He held the chair out for Rachel as she took her seat, feeling overwhelmed by the attention, and her surroundings. The restaurant was very impressive, with a modern vibe that she knew must have cost a fortune to decorate.\n\n\"Drinks to start?\" Rachel looked up as a waiter addressed them.\n\n\"Yes,\" Alan replied. \"A couple of glasses of the house white should be fine.\"\n\n\"Ahem.\" The waiter coughed in his throat, his eyes flicking over to Rachel for a split second.\n\n\"Oh yes,\" the actor said. \"How old are you, Rachel?\"\n\n\"I'm 18.\"\n\n\"Oh, of course. Would a Coke be okay?\"\n\n\"Yes, thank you.\"\n\nWith a nod the waiter stepped away. \"I never thought,\" Alan said, shaking his head as he gave Rachel an apologetic smile.\n\n\"That's fine, Mr. Fer\u2014I mean, Alan. I'm not much of a drinker anyways. A Coke is fine.\"\n\n\"All right then, let's take a look at the menus. We definitely have to start with the crab cakes. Trust me, you won't regret it.\"\n\nRachel couldn't believe how happy she was, sitting here in restaurant she never would have been able to step into on her own. And in the company of this handsome young man, whose warm smile made her want to melt, she found herself overwhelmed with excitement. They talked about the menu and she decided to try the swordfish steak, something she'd only read about before.\n\nHe ordered for both of them and their conversation over dinner flowed easily. He asked her a lot of questions about her upbringing and family in Nebraska, and how she was enjoying film school. After feeling that she was doing all the talking and feeling guilty for not asking him about himself, she asked if he was from California.\n\n\"No. Buffalo, New York. I came out here a number of years ago wanting to be an actor. Pretty standard story, actually. Had a lot of auditions and made a couple of commercials. I was running short on cash and wanted to stay. An actor friend of mine told me a small studio was casting for some parts in an 'adult' movie, and said both of us should give it a try. He said the money was pretty good, and I realized if I really wanted to stay, I needed to do something to bring in some cash. The director on that first movie liked the look of me, saying I had 'certain attributes' that could make me a star.\" He paused as Rachel's eyes opened wide and she nodded in agreement.\n\n\"I, uh, I noticed on the set,\" she said, nodding towards his midsection.\n\n\"Well, yes. And so, shortly after that, my current agent approached me, changed my professional name to Justin Deeper, and here we are.\"\n\n\"Lori tells me you're very successful.\"\n\nHe shrugged his shoulders. \"I guess you'd say I'm doing all right. I've got a nice condo I like, and you've seen the car. It could be a lot worse.\"\n\n\"I have to admit, I don't know a lot about this business, but like you, I needed to make some money too. I replied to the ad Mr. Smithers put in that paper, and I had no idea at first what a production assistant's duties were. It wasn't until I came to the interview that I found out.\" Rachel looked up as the waiter approached, their now empty dinner plates still in front of them.\n\n\"Would you two care for dessert?\" the waiter asked as he cleared away their plates. \"The caramel cheesecake is our specialty.\"\n\nAlan smiled as he saw Rachel's eyes light up. \"How about that, Rachel? Shall we have two of those?\" She nodded sheepishly. He gave her a wink and turned to the waiter, holding up two fingers. \"Great, two slices of cheesecake.\"\n\n\"So, picking up where you left off,\" Alan said once the waiter was out of earshot. \"Were you okay with the job duties once you found out what was required of a production assistant?\"\n\nOnce again, Rachel was pleased that he hadn't called her a fluffer. \"I was surprised at first, of course, but I felt foolish for not knowing what to expect. When Mr. Smithers showed me how much I'd be making, I knew I wanted to try. I thought I could do okay, and I just wanted the chance. Like you said happened with you, I really needed to find something to allow me to afford to stay here. Which reminds me, you said that you'd heard I took this job for that reason. Who did you hear that from, Mr. Smithers?\"\n\nAlan shook his head. \"No, Carole mentioned it to me,\" he said, referring to the attractive older woman who seemed to be the office manager. \"And once I heard that, I knew I'd do what I could to help you. Like you said, I'd been in that situation myself.\" He didn't mention that before he left the studio he'd stopped in to see his pal, Dr. Fitzpatrick. Nearly every week, they finished their Fridays by having a drink in the doctor's examination room and chewing the fat. Alan had a soft spot for the old guy, liking him from the first time they'd met.\n\nOnly this Friday was different. He'd tapped on the door and walked into the doctor's office, finding the room in total darkness. He could hear soft snoring coming from across the room and turned on the light, spotting the doctor asleep on the couch. He walked across the room and touched Fitz's shoulder, shaking him gently. The guy seemed like he was in a coma, and it took a couple of good shakes for him to finally start coming around. He slowly sat up as Alan went to the cupboard above the sink and poured the old man a stiff drink from the bottle they kept stashed there.\n\n\"Fitz, are you all right?\" he asked, genuinely worried that the old guy might have had a stroke or something.\n\n\"Oh my God, you won't believe it,\" the doctor replied, taking the drink and downing it in one gulp. For the next twenty minutes, he filled Alan in on his escapade with Rachel, the young man smiling as he listened to the doctor's lurid tale.\n\n\"Sounds like you had a good day?\" he said once the doctor finished his narrative.\n\n\"Oh fuck, yes. I can't remember ever having a day like that in my entire life.\"\n\n\"I'm happy for you. It sounds like she's willing to have you examine her again.\"\n\n\"I can only hope so. As long as my old ticker keeps working, she can keep on sucking.\"\n\nWith those words echoing in his ears, it wasn't hard for Alan to convince himself to pull over and offer the young girl a ride when he spotted her at the bus stop.\n\n\"That's nice of you to say, Mr. Ferg\u2014Alan. I really appreciate you willing to help. I want to keep this job so badly.\"\n\nTheir slices of cheesecake arrived, the scent of warm caramel wafting into their senses. They eagerly dug in.\n\n\"Oh my goodness, this is amazing,\" Rachel said, the first forkful tasting heavenly as it slid down her throat. Alan smiled as he watched her eat, feeling happy for the young girl, knowing how tough it had been for him when he first came to Hollywood. The cheesecake was delicious, but very sweet, and he stopped after a few bites, feeling totally satisfied. When Rachel had thoroughly cleaned her plate, she looked up, noticing he hadn't finished his. \"You didn't like it?\"\n\n\"No, it was fabulous, but I've had enough.\" He noticed the way she was looking at his unfinished portion. \"Would you like it? I don't' mind.\"\n\n\"Are you sure?\"\n\n\"Be my guest,\" he said, smiling as he pushed the plate over to her.\n\n\"I have a bit of a sweet tooth, and this just tastes so good. I'm sorry.\" Rachel reached forward with her fork, carving off another bite.\n\n\"That's fine, Rachel. It's nice to see a young girl with a nice appetite. Too many in this town starve themselves. Eat as much as you like. We can order you another piece to go, if you like.\"\n\n\"I'm always worried about my figure, but when it comes to desserts like this, I just can't resist.\"\n\n\"I think you have a terrific figure.\"\n\n\"You do?\" she replied, totally in shock that this handsome man would find her attractive.\n\n\"Absolutely. Like I said, too many women in this industry think they need to be skinny to succeed. Me personally, I like women with some meat on their bones.\" He paused as he blatantly ogled her full curvy body, his eyes lingering an extra second or two on her voluminous tits. \"Yes, you look just fine to me.\"\n\n\"Thank you. That's so nice of you to say.\" Rachel was beaming with happiness inside, but could feel herself blushing at the same time.\n\nAlan smiled to himself as he looked at the young girl. \"So, how did you think your first day went?\"\n\n\"I think I did okay, but I'm not really sure. Everything is so new to me, and different from any kind of job I've had before. Lori was kind of showing me the ropes, which I really appreciate. And the guys seemed nice. I think I did okay when I was getting them ready for their scenes. I'm sure I can do better. I just need the opportunity to practice more. I really need to keep this job.\"\n\nAlan slowly nodded in agreement before looking up at her, his eyes bright. \"Hey, I've got an idea. You said you don't have a date or anything tonight?\"\n\n\"No, nothing.\"\n\n\"Well, if you really want to have the opportunity to practice, I'm not doing anything tonight either. If you like, you could come over to my place and practice there.\"\n\nRachel looked up, her heart pounding in her chest as she took in what the handsome actor was saying. \"You mean...me...practice on you?\"\n\n\"It would all be purely professional, of course.\" He waved his hand in the air, as if this kind of thing happened every day in the porn business. \"If you don't want to, I totally understand. Knowing how much you'd like to make sure you do well on your job, I just thought I'd offer. That's fine.\"\n\n\"No, no,\" Rachel replied emphatically. \"It's just that your offer caught me off guard. I wasn't expecting anything like that. How, how would it work?\"\n\nAlan leaned forward, speaking quietly. \"Well, we're both adults here, working in this industry. And just so there are no misunderstandings, you're right, we should lay out the ground rules right here and now.\" He paused and waited until she nodded in agreement before continuing. \"To be blatant, we'd go back to my place\u2014which isn't far from here\u2014and you could practice sucking my cock. When you've had enough, I can drive you home. Simple as that.\" He sat back, letting her digest his words.\n\n\"You'd really be willing to do that for me?\" Rachel asked, in awe that this big star would put himself out for someone like her.\n\n\"Like I said, I know how difficult it is for someone in your shoes, just starting out and all.\" He paused and looked at her solemnly. \"I know this is supposed to be my night off, but if you think it'll help, I'm more than willing to give you a lesson in being the best production assistant you can be. It's your call. If you want, I can just take you home right now.\"\n\n\"You're sure you don't want your night off, like you said?\"\n\n\"I'll have other nights to relax. What's another night one way or the other? I have some experience, and if you really want to keep your new job, I think you know that it wouldn't hurt to get some tips from someone who knows how things work in this industry.\" He laughed. \"I guess saying you'd get some tips was a bad choice of words.\"\n\n\"That's fine, Mr. Fer...uh, Alan,\" Rachel replied excitedly. \"If you really wouldn't mind, I'd appreciate you helping me. A lesson would be nice.\"\n\nAlan nodded, a wry smile on his face. \"All right then. Shall we be on our way?\"\n\n\"Okay, just let me finish this,\" Rachel said guiltily, scooping up the last bite of cheesecake on her fork.",
        "\"Waiter,\" Alan said, turning and holding up his hand. \"The check please, and one more slice of cheesecake to go.\" He turned back, seeing Rachel smile back at him as he winked at her.\n\n*\n\nFifteen minutes later they arrived at Alan's eighth-floor apartment condo. Rachel followed him inside, the container with her cheesecake clutched in her hand. Daylight was starting to fade as he led her into the living room, a wall of windows before her. She noticed it led to a big balcony that ran the length of the room, with a spectacular view of the ocean beyond.\n\n\"Do you like it?\" he asked as she followed him outside, the view through the glass and steel guardrail taking her breath away. His view faced the ocean, with no other buildings in sight. She could only stare, the distant sound of the ocean lapping against the shore seeming to take away all the cares of the day.\n\n\"It's beautiful,\" she replied, her eyes taking in everything she could. He had a nice setup, with a couple of loungers and a small table with two other chairs near one end. At the other end, she noticed a hot tub with a small table beside it. \"It's so different than my tiny apartment. You must love it.\"\n\n\"Yes, I do. I spend a lot of time out here. It's nice to just relax and listen to the ocean, or soak in the hot tub. We could do that later, if you like.\"\n\n\"That would be nice. I've never been in a hot tub before.\"\n\n\"You're kidding?\"\n\n\"No. You don't find a lot of them in Nebraska.\"\n\n\"Well, it will be a treat for you then.\"\n\n\"I don't have a swimsuit with me,\" she said, looking down at what she was wearing.\n\n\"Aah, don't worry about that,\" Alan said as he looked her plump curvy body up and down. \"We'll figure something out. Come on, let's go back inside.\"\n\n\"Okay.\"\n\n\"Let me take that from you,\" he said, reaching forward and taking the container with the cheesecake from her. \"I'll just put that in the fridge for now. You should probably take off your jacket and boots and get comfortable.\"\n\n\"All right.\" The main part of the apartment was an open concept design, and as he stepped into the modern-looking kitchen, Rachel took off her blazer and kicked off her short boots, slipping the jacket over the back of one of his dining room chairs and setting her shoes near the front door.\n\n\"Are you ready for the rest of the fifty-cent tour?\" he asked as he came out of the kitchen.\n\n\"I'd love it.\"\n\n\"Well, this is the kitchen,\" he said, pointing to the big galley kitchen, everything done up in a modern high-tech style, just like the other parts of the apartment she'd seen so far. \"And this is the second bedroom, which I use as kind of an office.\" He led her to a door just off the kitchen. She spotted a double bed in the room, along with a desk with a computer on it and some sporting equipment stacked in the corners. He pointed to a door next to the spare room. \"And there's a full bathroom right here, should you need it.\" She nodded and then followed him as he turned away.\n\n\"You've seen most of what they call the great room,\" he said as they returned to the other side of the apartment, her eyes now taking in the high ceilings and rich light-gray wall tones that fit in with the modern look perfectly. A huge TV was mounted on one wall, with a black leather couch and big recliner facing it. She followed him into the master bedroom, which was huge. Again, everything was done up in a modern high-tech motif, with lots of glass and chrome. The king-size bed was enormous, but tastefully decorated with throw pillows in different tones of grays that accented the pearl-gray comforter. Floor to ceiling windows faced onto the bed, the blinds now open, the view to the ocean just as spectacular as the one from the living room.\n\n\"And this is the ensuite bathroom.\" He let her poke her head in as he stood to one side. Just like the rest of the room, the bathroom was massive, with chrome and silver fixtures, a big glass-enclosed shower with multiple shower heads looking deliciously inviting. So different than her simple tub with the plastic shower curtain that she had in her little apartment.\n\n\"So, that's about it,\" he said as they returned to the high-ceilinged living room.\n\n\"It's incredible,\" Rachel gushed, her eyes going from one thing to the next. \"You must love it.\"\n\n\"Yes. I guess I've been lucky. This industry can be good to you, but it can tough too. Hopefully with some help, you'll be fine.\"\n\n\"I can only dream about living in a place like this,\" Rachel said, gesturing to the various objects around the room before nodding to the view outside. She ended up with her eyes on him as he looked out the window at the view she'd indicated. He was so handsome, and so sensually attractive that she felt herself getting all tingly inside. \"Do you think...do you think we could start my lesson now?\"\n\nAlan turned to see her staring at him, her face flushed, her big tits heaving beneath her tight turtleneck. It made him smile inside, seeing how eager this plump young girl was. \"I think that's a great idea. Why waste any more time.\"\n\n\"Umm, how do you want to do this?\"\n\n\"Well, for now, we'll try to keep things similar to the way they'd work on the set.\" Standing in the middle of the living room, he reached over and tossed one of the pillows from the couch onto the floor in front of him. \"So, why don't you take your place on your knees there while I get undressed?\"\n\n\"Yes, sir,\" Rachel answered immediately, stepping over and kneeling on the pillow as he unbuttoned his shirt.\n\nHe nodded solemnly and had to suppress another smile when she'd used the word 'sir'. He liked the way this was going. \"Don't forget your hairband,\" he reminded her as he tossed his shirt aside and started undoing his jeans.\n\n\"Oh yes. Thank you, sir. I almost forgot.\" Alan was thrilled with how obedient the plump young girl was. He watched as she whipped her inky black hair up into a tight ponytail, securing it tightly so her round pretty face and full mouth were his to use. In a way, he felt bad for taking advantage of the sweet young thing's na\u00efve nature, but he could tell by the hungry look in her eyes that she wanted his cock just as badly as he wanted to give it to her\u2014maybe more. He knew he'd never do anything to hurt her, that wasn't his style. If she continued to go along with his ruse, that was fine with him. It looked like they would both get the pleasure they wanted. If she wanted out, he'd be able to sense that, even if she didn't say anything. If that happened, he'd end this charade right away. Taking advantage of someone against their will was not in his wheelhouse. He'd seen enough of that in the porn industry and it sickened him. No, if he got the feeling Rachel was uncomfortable with what was going to happen, he'd let her know it was time to call it a night, and take her home, making sure she felt safe at all times. But if she wanted something different...well...\n\n\"All right then,\" he said as he pulled his jeans off and tossed them next to his shirt, standing before her in his white fitted boxers, his enormous package thrusting towards her face. He watched her dark eyes focus on his midsection, smiling to himself as he watched her tongue come out and circle her lips instinctively. \"How about we start with you taking my underwear off? And then you can practice sucking me once you have my cock out.\" He saw her eyes light up as he stepped closer, his jam-packed bulge mere inches from her face. \"Would you like that?\"\n\nRachel started nodding anxiously as she stared intently at his tented-out underwear. \"Y...yes,\" she stammered, her hands starting to slide up the front of his powerful thighs. Rachel felt her pussy leaking like crazy as she looked up at the handsome porn star standing over her. His muscular tanned body made him look like a god, and she felt her heart start to pound as she just looked at him, taking in every glorious inch of his perfect masculine body\u2014and she hadn't even gotten to his cock yet. It looked like he was hiding an enormous salami in his shorts, the tube of flesh casting bold shadows across the front of his underwear, the defined mushroom head heading off towards one hip. She felt her mouth salivating, and knew she wanted that gorgeous cylinder of flesh in her mouth more than she'd wanted anything in the world. She also knew she'd do a much better job of servicing it that the Tanya woman had done of the set earlier. No, Rachel knew she wouldn't just service his prick\u2014no, it was a huge majestic cock that needed to be worshipped\u2014and she knew she could give it the respect it deserved.\n\nShe reached up to the waistband of his fitted boxers and tugged downwards, the elasticized material coming away from his defined abdomen. She started to lower them, noticing how cleanly shaven his groin was. She found herself licking her lips unconsciously as the thick root of his manhood came into view, the girth as big around as her wrist. She tugged harder, the waistband catching on his massive cockhead, before she pulled it right over the big knob, his underwear dropping to the floor as his prick sprang forward.\n\n\"Oh my God,\" she muttered under her breath as it flexed up right in front of her face. Once it was freed from the confines of his underwear, it seemed to unfurl like a giant anaconda, rising up and surveying the world in which it was king from the wet red eye at the tip. She felt herself breathing raggedly as she looked at it. She'd been amazed at how big it had looked on the set today, but up close like this, it took her breath away, and it was only about half hard!\n\nAlan saw the mesmerized look in her eyes, the girl almost salivating with desire as she looked at his heavy prick. Yes, this is what he had in mind after talking to Fitz, a sweet adorable girl who looked like she wanted an all-day sucker. And he had just the mushroom-capped lollipop she wanted. He flexed his midsection, seeing her gasp under her breath as his semi-hard dick bobbed enticingly mere inches from her mouth. \"There you go then, we've got all night. You can practice sucking on it as long as you want.\"\n\nRachel could feel her heart racing, his words like sweet music to her ears. She already fallen in love with his cock, and knew in her heart she wanted nothing more than to worship it all night long. She reached up and circled her fingers around the base of his pulsing dong, her palm sliding over his shaven groin. She could feel the heat flowing through the big slab of meat into her hand, and it seemed to flow right through her whole body to her steaming box. She closed her fingers, noticing that the tips of her fingers came nowhere close to touching the heel of her palm. \"Oh my God, it's so big,\" she muttered unconsciously, her hand closing down as she took a tentative pump forwards.\n\nAlan smiled to himself, having heard her speak quietly to herself. He could see the look of sluttish desire in her dark eyes, her tongue running out to wet her lips once more as she raised up slightly, pursing her full red lips into a gorgeously enticing cock-sucking 'O'.\n\nRachel felt mesmerized by the huge stallion-like cock right in front of her, the long thick shaft continuing to lift and extend towards her waiting mouth. She couldn't wait any longer, and opened her mouth eagerly, lifting up on her knees as she brought her open mouth towards the broad crimson cockhead. The heat was pulsing from the puffy knob, and she touched her lips to it, closing her eyes in bliss as she kissed it, wanting it, loving it, needing it.\n\n\"Mmm,\" she purred deep in her throat as she pushed a wad of saliva to the front of her mouth, rolling her tongue over the spongy glans as she bathed it with her hot spit. She pushed her mouth further forwards, feeling her lips stretch to accommodate the bloated monster. She felt the corners of mouth on the verge of tearing, and then her full red lips slipped right over the coronal ridge, locking the lemon-sized knob within her mouth.\n\n\"Ohhnn,\" she gave off an animal-like groan of pleasure as her lips closed down, her tongue rolling luxuriously over the massive cockhead, her eyes closed in surrender as she started to worship the most perfect cock imaginable. With her tongue swirling slowly around the enflamed knob, she pushed herself forward, her pursed lips sliding wickedly down his stiffening shaft. Her circling hand pumped upwards, as if forcing more blood into the strengthening barrel. She could feel it responding quickly, the steely rod getting harder as she started to bob her head up and down, her tongue rubbing and pressing against the growing prick.\n\nAlan looked at the plump young girl, overwhelmed by her level of enthusiasm. He'd had a ton of blow jobs in his life, from his high school English teacher to many women in the porn industry, but he'd never had one from someone who was as enthusiastic and eager as this young girl. He knew that attitude was the key to a good blowjob. That was usually the problem with women in the industry. Onscreen, they'd just go through the motions, wanting to finish and get they pay check. In his experience, the fluffers were the talented ones. To some, it was just a job, something they did to make the rent. But occasionally, you'd find one that loved her duties, loved to suck cock like nothing else mattered in this world. And the way this plump young girl was sucking his cock right now, she seemed to put even those select few to shame. She'd only had her mouth on his dick for just over a minute now, and he was already rock hard.\n\n\"Mmm,\" Rachel mewed and purred as she continued to suck. She drew in her cheeks as she bobbed back and forth, creating a hot buttery sheath that enveloped his thrusting erection. She was lost, lost in the sultry rapture that only came from servicing a perfect cock\u2014a long, hard cylinder of flesh that throbbed with power. She could feel herself continuing to leak into her panties, and wondered at this point if the dampness was showing right through her jeans. She felt her own pleasure level rising as she sucked, eagerly surrendering herself to the job of worshipping this man's cock.\n\nAlan couldn't believe how amazing the blow job this girl was giving him was. The inside of her mouth felt like it was on fire. From the intense heat inside her mouth, he was sure she must be running a high fever. But whatever it was, it wasn't slowing her down. She bobbed her head enthusiastically, whimpering and mewing with desire as she sucked. He liked the way she used lots of saliva, her hot spit flowing down his upright shaft and leaking from the corners of her stretched lips. Her slow, yet insistent, technique was amazing, better than any porn star he'd had suck his cock. Some girls went at it like it was a race, wanting to get it over. But this girl, this girl knew exactly how to pace herself, giving him as much pleasure as possible, without getting it over too quick. Just the same, he felt himself start to climb the walls with the need to fill that gorgeous mouth of hers, and that wasn't supposed to happen this quickly. He was known in the industry for his control, almost being able to come when he chose to. But this girl had his balls drawing up close to his body already, and she only seemed to be getting started.\n\n\"Okay, that's a good start,\" he said, stepping back and pulling his thrusting erection out of her mouth with a loud \"POP!\" He stepped back and sat on the easy chair facing the wall-mounted TV, his throbbing dick standing totally upright. He looked over at the kneeling girl who was watching him, not understanding what was going on. Her wide full mouth was open and wet as she breathed raggedly, her big tits heaving beneath her tight sweater. \"This lesson is supposed to be to help you make cocks hard, so let's take a short break here and let things relax and go down a bit. I think I'll just watch a game for a few minutes and then you can start sucking on it again.\"\n\n\"Oh, all right,\" Rachel said, sitting on the edge of the couch a short distance away from him, unsure of what was expected of her. She flicked her eyes over, watching his cock slowly start to deflate, the mushroom-shaped knob bobbing teasingly as it dropped lower and lower.\n\nAlan found a college basketball game, knowing he needed something to distract him, wanting to feel this girl amazing mouth on him again, but knowing he had to do something to keep up his little ploy. He felt his cock shrinking as he tried to concentrate on the game, and even with the control he usually had over his cock, that was incredibly difficult, knowing how much he wanted her to keep sucking him. And those tits, those huge round tits of hers\u2014it was hard to keep from staring at them as she sat a short distance away, the massive orbs stretching her tight sweater almost to the bursting point. As he felt his softening prick come to rest on the chair beneath him, he couldn't resist any longer. \"Okay, I'm ready for you to start sucking it again.\" He let his legs roll open, nodding to the spot on the floor in front of him.\n\n\"Yes, sir,\" Rachel replied eagerly, dropping to her knees and crawling between his spread legs. She lifted his dormant cock, stunned by the weight of the limber tube of man-meat. Even flaccid, it was bigger than most men were hard. She pursed her lips and kissed the tip tenderly, acknowledging how much she loved it, and then pursed her lips invitingly forward, slipping them down over the broad head as she took it back into her mouth.\n\nAlan tried to concentrate on the game, but it was useless\u2014her mouth was too fucking good. She'd barely had her mouth back on his dick, and already it was coming up, rapidly filling and pushing her head further back from his body. In no time at all, he was flying at full mast, her mouth bobbing luxuriously up and down over his upright member. Fuck, was she good, unbelievably good. And she continued to purr as she slowly twisted her head as she sucked, enthusiastically servicing his thrusting pecker.\n\n\"Okay,\" he said, taking her head and lifting it off his surging prick. \"You can stay there, but let's just take another short break and let it go down.\" Rachel simply nodded and sat back as he concentrated on the game, willing his dick down. They did this two more times, and then Alan realized it was hopeless, he wanted to come in the girl's talented mouth more than he could have ever imagined. \"I know the intent was to have you work to get my cock erect, but I think I know what the problem is.\"\n\n\"There's a problem?\" Rachel asked, running her tongue up the full length of his enormous boner.\n\n\"Yeah. You're doing very well, but I don't think it's challenging enough for you based on what's happened today.\"\n\n\"What's happened today?\"\n\n\"Yes. Usually on the set on any given day, I'm expected to come three or four times. Today, I just came in that one scene this afternoon.\"\n\n\"Oh, I see.\"\n\n\"Yes. I'm sure that's the problem. Now, I am a man after all, and I think at this point, in order to get to the point where you'd have to work to get me erect, well, basically...I need to come. If I get rid of a load, it would be more challenging for you after that.\"\n\nRachel looked at his raging prick as she continued to kneel between his spread legs. \"Okay. I get it. What would you like me to do?\"\n\n\"Well, to keep this on a professional level, I could always go into the bathroom and jerk off a load. I could do that, or you could help me take care of it right here. It's up to you. I don't really care either way.\" Alan had seen the desire in her eyes while she'd been sucking him, and he wasn't surprised to see her shaking her head before he'd even finished talking.\n\n\"No, you don't need to go into the bathroom. I...I'd be more than willing to help you. After all, you're helping me by letting me do this, right?\"\n\nAlan smiled. \"I guess you're right about that. But maybe we could help each other more at the same time.\"",
        "\"What do you mean?\"\n\n\"Are you enjoying yourself, Rachel? Are you feeling sexually excited by sucking my cock?\"\n\nRachel felt herself blush, but nodded just the same. \"Yes sir.\"\n\n\"Well, I have a suggestion that I think would help both of us. I noticed how nice your breasts look in that sweater you're wearing. Why don't you take off your sweater and jeans? That way, I'm sure that looking at your breasts would help me get off faster. Also, we're both adults here, so I'm just going to come right out and say it. If you feel like it, you could finger yourself while you're sucking my cock. Don't you think it would be nice if we both got off at the same time?\"\n\nRachel felt that tingling feeling start deep in her pussy as a shiver of excitement ran down her spine. \"Yes, that would be nice.\" As Alan nodded, she stood up and peeled off her sweater. She felt his eyes looking at her appraisingly as she undid her jeans, shifting her wide full hips from side to side as she shimmied out of them.\n\nJesus, those are great-looking tits, Alan said to himself as he looked at the big set of jugs, gloriously displayed in a lacy white bra that she was almost spilling out of. Her high-cut French panties made her wide hips and plump body look enticingly sexy. Yes, this was woman that was built for action. But it was that amazing mouth of hers that he wanted more than anything. Maybe he'd make use of the rest of that lush curvy body of hers some other time. She dropped back to her knees, giving him a spectacular view right down into cleavage as she leaned forward, eager to get her mouth back on his throbbing prick. \"But just so you know, when I come, I tend to shoot a lot. I hope that's not going to be a problem.\"\n\nRachel demurely shook her head from side to side. Remembering what he'd said about them both being adults, she felt it safe to speak honestly. \"No, that's fine. I...I love the taste of cum actually.\"\n\nAlan wasn't surprised by her answer, the way she was rapturously working on his cock had already told him all he needed to know. \"All right then, let's get rid of this first load, and then we'll see how you do sucking it after that.\"\n\nRachel eagerly set to work, her hand pumping back and forth on the lower part of his pecker as her head bobbed rhythmically up and down on the top part. She could only take about half of his enormous dick into her mouth, but she wanted more. She wanted to feel every last inch of it in her mouth. She sucked slavishly, her saliva flowing freely all over his thrusting erection, silvery rivulets of spit oozing from the corners of her mouth. She reached forward and cradled his spunk-laden nuts in her hand, the immense size of the egg-like balls matching his imposing prick. She rolled the sensitive nuts gently in one hand, the other hand jacking him off, her circling fingers pumping back and forth towards her sucking mouth. Her cheeks were caving in and out like a bellows as she tried to give him as much pleasure as possible, eagerly waiting for him to fill her mouth with cum. She loved the taste of semen, the masculine flavor and creamy texture flowing onto her tongue was able to fire her libido like nothing else. She was excited beyond belief, her pussy throbbing and tingling like crazy. She knew from past experience with Mr. Dexter that she'd start to climax as soon Alan would start shooting his thick rich cum into her mouth.\n\nAlan couldn't take it any more\u2014the girl's mouth was just too fucking good. As she rolled his nuts in her hand, he felt them draw up close to his body, and then those delightful contractions started in his midsection. \"OH FUCK, HERE IT COMES!\" he warned as he felt the spunk race up the shaft of his cock.\n\nRachel caressed his sperm-filled nuts gently as his prick seemed to flex and pulsate, just before a thick rope of cum jettisoned from the tip deep into her mouth. It rifled powerfully from the yawning red eye, almost knocking her head off his rearing dick. It was quickly followed by a second, and then a third rope of spunk, her mouth quickly filling with his potent seed. She felt her cheeks starting to bulge out with the stuff as he flooded her mouth, torrents of jizz spewing onto her tongue. She swallowed, the porn star's thick creamy cum sliding luxuriously down her throat. That was all it took to trigger her own orgasm.\n\n\"Ehmmmmm,\" she let out a squeal as she started to cum, her body trembling and shaking as her climax burst like a bomb through her plump young body. Every nerve ending was tingling deliciously, but she kept sucking, her head bobbing up and down as he totally unloaded, wad after wad spewing from his huge bucking cock into her vacuuming mouth. She gently squeezed his swollen nuts, wanting more of his heavenly spunk. He rewarded her, shot after shot of thick milky semen rocketing from his virile member into her hot sucking mouth. Rachel was still shaking from the intensity of her climax, her chubby body continuing to tremble as the delightful sensations slowly waned, but he kept coming, splashing her tonsils again and again with manly nectar. Finally, his pulsating prick stopped flexing and spewing into her mouth, the last gobs of spunk oozing slowly out onto her tongue from the drooling red eye. Rachel was in heaven. The amount of cum she'd just swallowed was incredible, the sperm-laden jizz finding a nice warm home in the pit of her stomach. And still, she wanted more.\n\nAlan sat there with his chest heaving, having experienced the best blowjob of his life\u2014which was saying a lot for a guy who was the current king of the porn industry. He looked down at the chubby girl between his legs, her eyes hooded with lust as she nursed gently at his drained prick, glistening trickles of white cum leaking from each corner of her mouth. He'd felt her go off when he started flooding her mouth, surprised that that was all it took to make her climax. But he loved it. He loved that she seemed to love sucking him off just as much as he loved having her do it. And as before, it was her eager and enthusiastic manner of cocksucking that made it all the more enjoyable. She'd obviously loved having his big cock stretching her lips almost to the tearing point, loved having him fill her mouth with a massive load of thick, rich cum\u2014and they were only getting started. He knew he had more for her, be he needed to keep this 'lesson' idea going, just to make sure. He watched as she lifted her mouth off his spent prick, licking up every trace of cum running down his tumescent shaft, using her fingers to push the baby batter clinging to her chin back into her avidly-sucking mouth.\n\n\"Well, that's better. With that load off, it should be a little more challenging now. So, like you'd do at the studio, starting sucking it again. Let's see how good you are at making it hard.\"\n\n\"Yes, sir,\" Rachel replied eagerly, slipping her lips back over the rubbery head of his dwindling prick. She started to suck, using her lips and tongue enthusiastically as she worked on him.\n\nFuck me, Alan said to himself, feeling himself getting hard almost immediately, her hot wet mouth working its magic on him. Within just a minute or two, he was rock-hard again, his erection thrusting powerfully upwards.\n\n\"Did I do okay?\" Rachel asked, slipping her lips off his upright dong and taking a long leisurely swipe up the shaft with the flat of her tongue.\n\n\"Uh, yeah, you're doing great,\" Alan replied, amazed that he was so hard again already. \"But the way things are going, I guess I might need to get rid of another load in order to make it more difficult for you.\"\n\n\"I don't mind,\" Rachel replied, planting lustful kisses along the shaft of his stallion-like prick. She slipped her lips back over his rearing member, locking her lips down past the crimson crown as she started to bob rhythmically up and down. She'd suck for a while, and then take his cock out and hold it lovingly in her hand. She'd then rub it all over her face, her eyes closed in rapture as she moved the drooling tip over her soft young skin, worshipping his cock with every fiber of her being. When she'd had enough, she'd slip her pouty lips back over the rearing knob, sliding it deep into her mouth.\n\nIt wasn't long until she took a second load out of him, and then a third, eagerly swallowing each load as it came. She was amazed at how much he could come each time. It felt like her belly must be swelling from the amount of spunk she'd swallowed.\n\n\"Well, Rachel,\" Alan said as he reached out and lifted her mouth off his prick. \"I have to admit you're pretty good. How about we take a break and then you can work on it again in a few minutes? Would you like to try out the hot tub?\"\n\n\"Okay, but like I said, I don't have a bathing suit, and I don't really think it would be professional of us if I went in naked.\"\n\n\"Of course, I understand. Look, if I give you something to wear, do you think you'd like to give it a try?\"\n\n\"Sure, that sounds like fun.\"\n\n\"All right, I think I know just the thing,\" Alan said, getting out of his chair and walking into the master bedroom, his heavy limp cock swaying majestically between his legs. He was back less than a minute later, some kind of white fabric clutched in his hand. \"I think this t-shirt will work. You can go in the bathroom and change, if you like.\"\n\n\"Thank you. Do you think I could have that piece of cheesecake now?\" Rachel replied, her eyes dancing with doe-like innocence as she smiled at him guiltily.\n\n\"Sure,\" Alan said with a smile as he nodded towards the hot tub. \"I'll have it out there for you when you're ready.\"\n\n\"Thanks.\" Rachel took the offered garment and disappeared into the bathroom.\n\nAlan stepped out onto the balcony and turned on the hot tub, setting the plate with her cheesecake and a fork on the side. It was a gorgeous night, the lights of the city twinkling off the water below. The warm ocean air felt soft on his skin. He turned on a couple of lanterns he had on the balcony, bathing the space in a warm amber glow. He grabbed a couple of towels, and a beer for himself and glass of milk for her. He turned on the jets and slid into the hot tub, lying back against the side and closing his eyes, languishing in the feel of the pulsing jets caressing his body.\n\n\"Do you think this will be okay?\"\n\nAlan opened his eyes and looked up at the young girl standing next to the hot tub. Oh fuck, he thought to himself, those tits are fucking fantastic! He'd given her a white singlet he knew he had in his drawer, a 'wife-beater' he kept around for just this purpose. It was far too small for him, and it was far too small for a girl of Rachel's size, but it looked amazing on her. The stretchy white fabric clung to her shapely figure like a second skin. Her big round breasts stretched and filled the front of the shirt spectacularly. The deeply-scooped neck showed off a mile of deep dark cleavage, the upper swells of her tits pushed up even higher by the tight-fitting singlet. He couldn't believe how perfectly round her guns were, the voluminous jugs shaped like massive spheres. But they were wondrously natural, and all hers. He was used to seeing fake tits every day, but nothing could surpass a gorgeous set of naturals like this girl had.\n\n\"I think it'll do just fine,\" Alan said, finally able to let his gaze wonder down from her breathtaking tits. The clingy fabric flowed in at her waist, emphasizing the protruding shelf of her jugs. The material flowed out over her wide hips and down over her plump thighs, the bottom of the singlet ending just an inch or two below her pussy. She'd taken her panties off too, which he was happy to see. She stepped over the side and into the hot tub, and he noticed the size of her big round rump, again, all natural, a big ass just made to bounce on a mattress all night long. But right now, he still had to keep things professional. She'd come for lessons on being a better 'fluffer', the time for lessons on being a better 'fucker' would come later.\n\n\"Oh my gosh, that feels so nice,\" Rachel said, sliding down in the water as she sat across from him, the warm pulsing water flowing soothingly over her buxom form.\n\nAlan smiled to himself, liking the way the singlet became almost totally transparent once it got wet, but still managed to keep her big heavy tits enticingly confined beneath the stretchy material. She was a big girl, big all over, and he liked every curvy inch that he saw. He'd be only too happy if she stayed that way. \"Would you like that cheesecake now?\" he asked, reaching over to the small table beside him and handing her the plate.\n\n\"Thank you,\" she said guiltily as she took it. \"I'm sorry, but I have such a sweet tooth. I just can't resist.\" She carved off a big chunk and slid the fork into her mouth.\n\n\"That's fine, you can have as much as you want,\" Alan replied, letting his gaze feast on her curvy form, his eyes drawn magnetically to both her huge tits and her gorgeous mouth, a mouth he'd already come in three times, a mouth he wanted more of. \"When you're done, just sit back and relax, let the water wash away all your cares.\" He took a slug of beer as Rachel wolfed down her cheesecake, washing it down with a big gulp of milk. Through slitted eyes he saw her lie back, closing her eyes as the pulsing water bubbled around her.\n\n\"This feels so nice.\"\n\nHe took another drink of his beer, his eyes never straying far from the front of her singlet, her huge boobs moving teasingly in and out of his view as the lantern light reflected off the moving water. She sat up a bit, the upper swells of her sexy mounds coming into view, wet and glistening. She looked restless, nibbling at her bottom lip as she looked over at him. He lay still, appearing almost asleep, watching her through hooded eyes. They hadn't been relaxing for very long before she spoke.\n\n\"Sir, uh...Alan?\" she said questioningly.\n\n\"Yes?\" He sat up a bit, downing the last of his beer.\n\n\"Do you...do you think I could try again?\"\n\n\"Already?\"\n\n\"Well, you said we should make it more of a challenge for me, and I was just thinking, the longer we wait, you might be more likely to get aroused quicker. So, I was thinking we could try again now.\"\n\nAlan nodded, seeing the hungry look in the girl's eyes. \"Well, you might be right about that.\" He pushed himself up and sat on the edge of the hot tub, placing his feet on the seat and spreading his legs. He nodded between his legs, his limber dick hanging soft and heavy. \"It's all yours.\"\n\nRachel shivered with desire, feeling herself get all tingly again as she crawled over in the tub, mesmerized by his huge cock. She lifted it in her hand, impressed by the weight of the slab of flesh, slipping her lips back over the spongy head. \"Mmm,\" she purred like a kitten as she started to suck, doing what she loved more than anything in the world. Her tongue rolled over his sensitive glans, bathing it with her hot saliva, her head turning from side to side as she closed her lips around the shaft. She mewed and moaned softly as she started to slide her lips further down, already feeling the sleeping snake start to waken and come alive in her mouth.\n\nOh fuck, she's so good, Alan thought to himself as she slowly moved her head back and forth, purring and whimpering with desire, making sweet oral love to his cock. It was coming up in a hurry, her talented mouth making the blood rush right where it was needed most. He slid his hands into her silky black hair and moved her mouth just where he wanted it, flexing his hips as sucked him, her cheeks enveloping him in a velvety sheath. He felt her move forwards, moving just past halfway down his surging erection, the massive knob of his cock bumping into the soft tissues at the opening to her throat.\n\n\"Ehnnn,\" she whimpered, a whimper of frustration.\n\n\"Are you all right?\" Alan asked, worried that he'd hurt her.\n\nShe slipped her lips off his rigid dick, continuing to fist it as she looked up at him. \"I'm sorry I made that little noise. It's just...it's just that I want more. I want to take more of it.\"\n\nAlan nodded, seeing the sluttish desire in her eyes. He'd had a number of women try to deep-throat him, but none had been successful. The best he'd had was a porn star from Sweden, and she'd had to stop with two inches of his thick veiny shaft still showing. If this chubby young girl wanted to try, he was all for it. \"Is that really what you want, you want to take more of it into your mouth?\"\n\n\"Yes,\" she nodded eagerly, a pleading look on her face.\n\n\"You want to try taking it right down your throat?\" She nodded once more, and he could see the excitement in her eyes. \"All right, we can try something that might work, but if you feel at all uncomfortable, I want you to let me know right away and we'll stop. The last thing I want to do is hurt you.\"\n\n\"Thank you, sir. Thank you,\" Rachel responded instantly. \"What should I do?\"\n\n\"This may feel a little strange at first, but I think it might work. I'm going to hold your head and guide it, and you just do as I say. All right?\"\n\n\"Yes, sir.\"\n\nAlan took hold of her head. \"Now lean down a bit...that's it...that's it. Now keep your shoulders where they are and tip your head up. I want your mouth and your throat in a nice straight line.\" She did as he asked, dropping the top part of her body and lifting her head up. He moved her head slightly, positioning her full red lips right in front of his enflamed cockhead. \"There, that's good. Now oval those sweet lips for me so I have a nice target. That's good...that's perfect.\" With his hands gripping her head, he slid the head of his cock into her mouth, waiting as she closed her lips down just past the rope-like coronal ridge.\n\n\"That's the way,\" he said, adjusting his hips to get just the right angle. \"I'm going to start feeding you more.\" He was anxious to see how this eager young girl would do. She'd only been able to get about halfway down his cock so far\u2014which was still far better than most\u2014and he was secretly hoping she'd be able to take another inch or two anyways. He already knew she was the best pure cocksucker he'd ever had, and he was more than happy with her efforts so far, but if she wanted to try for more, who was he to complain. He pulled her face forward slowly, insistently feeding more of his pole-like cock into her hot sucking mouth. He noticed she kept her tongue active, rolling and circling it all over his invading member. He carefully pushed his thrusting erection further into her mouth, feeling it bump up against the soft tissues at the opening to her throat. He held his throbbing prick there, rolling his hips, feeling the intense heat of those tender membranes against his engorged cockhead.\n\n\"All right. That's good. Now take a deep breath and try your best to relax your throat. I'll go nice and slow. If it hurts, tap me and I'll stop right away. Okay?\" Rachel flicked her eyes up to his, nodding as best as she could in agreement. \"Okay then. One...two...three...\" On three, Alan gripped her head firmly and flexed his hips, pressing the huge head of his cock against the opening to her windpipe. For a second it resisted, and then he felt it yield. The head slipped into the opening to her throat, and he looked down in awe as he pulled her head slowly forward, his long hard cock disappearing from view an inch at a time.\n\nFuck me! Alan thought as he watched his thrusting erection go deeper and deeper into the young girl's face. Her throat was embracing his invading prick in a hot molten sheath. He'd thought her mouth was hot\u2014her throat was even hotter\u2014like a fucking furnace...a hot wet furnace.\n\n\"Mmm...\" He heard her give off a little purr\u2014a purr of pleasure. He looked down to see her eyes closed in bliss as he continued to slide his dick further in. His eyes opened wide as her mouth went further down his cock, her pursed lips now passing the furthest point the Swedish girl had reached. And still she wasn't resisting. He slowly pulled her head as he watched her lips get closer...and closer...until her soft red lips were pressing up against his shaven groin.",
        "\"Oh fuck, that's incredible,\" he said under his breath as held still, savoring the pleasurable sensation of her hot wet throat gripping his buried cock. He felt her swallow, the delightful rippling sensations running right down his throbbing prick. He slowly pulled back, loving the feel of those tender membranes against his flesh. As soon as he cleared her airway, he noticed her take a deep breath, her hands going to his hips and preventing him from retreating further. As soon as she'd taken the next breath, she pulled him closer, wanting him to take her throat again.\n\n\"Oh fuck, yes,\" he muttered as he held her head and slid his dick back balls deep again. He rolled his hips, and she moaned deep in throat, a lusty growl that he felt run right up through his buried cock. They got into a smooth rhythm, with both of them moaning at the intense pleasure they were enjoying as he buried his cock to the hilt with every stroke. Alan slid both hands down from the back of her head to her neck, feeling her throat expand every time he thrust his cock forward. It felt so wickedly obscene that it fired his ardor even more. He was already on the verge of coming, and feeling her throat expand and contract as he fucked it was incredible. For all the things he'd done as a porn star, he still couldn't believe that this eager young girl was able to take all of his immense cock down her throat, and from the lustful sounds she was making, she was loving it at the same time.\n\n\"Oh fuck, I'm gonna come,\" he said as he felt his balls draw up close to his body. He knew how much she loved the taste, so at the last second, he pulled back, the engorged crown clearing her throat just as he started to shoot. He filled her mouth with his spunk, gob after massive gob spewing forth onto her eagerly-waiting tongue. He continued to hold her head as he came, feeling the muscles in her throat contract as she swallowed, taking his sperm-laden seed deep into her stomach. He tipped his head up and closed his eyes as he came, his cock bucking as he coated her tonsils with semen, torrents of the stuff spewing into her mouth. Her throat had been incredible, so hot and so fucking tight that he thought he'd never stop coming. He heard her squeal as she continued to suck and swallow, her hips twisting in the water as she got off, her plump body shaking and quivering as her climax shot through her. She kept sucking, eagerly swallowing as he continued to fill her, dumping a massive load into her hot wet mouth. Finally, the delicious contractions in his midsection dwindled, and he held her head in his hands, his muscular chest heaving as he fought to regain his breath. He felt her swallow again, taking the last of his milky cum into her belly.\n\n\"Oh my God, Rachel, that was amazing,\" Alan said as she leaned back and slipped her lips off his spent cock, her tongue licking the final drops from the yawning tip.\n\n\"Did I do okay?\" she asked, her face flushed, her eyes alive with excitement.\n\n\"You were incredible. I don't think you have anything to worry about on your new job.\" Alan slid back into the water, closing his eyes in contented bliss. After a minute or two of complete silence, he opened his eyes and looked at her, seeing a sad look on her face. She looked dejected, but he knew she'd climaxed just as powerfully as he had. \"What's wrong, Rachel?\"\n\n\"If you said I have nothing to worry about on my job, does...does that mean our lesson is over?\"\n\nHe smiled to himself, now knowing why she'd looked so sad. \"Well, listen. Maybe I spoke too soon. You're doing very well, but we might need a couple more lessons just to be sure.\" She was all smiles again, the crisis over already. He knew what he wanted from her now, but he wanted to toy with her for just a second or two longer. \"Maybe for now though, I should take you home until next time.\"\n\n\"Oh, well...I...I understand,\" she replied, the look of gloom and doom back in a second.\n\nHe smiled inside. Her response was just as he'd hoped. \"But it is kind of late. I'll leave the choice up to you. I can take you home, or you can stay over and I'll let you practice all night long?\"\n\n\"Really? You'd really let me do that?\" She was absolutely beaming now.\n\n\"If that's what you'd like. I've got to get some sleep, but I know my cock. It'll pretty much stay hard as long as you keep sucking on it, and if that's what you want to do, that's okay with me.\"\n\n\"I...I'd like that,\" Rachel responded immediately, grinning from ear to ear.\n\n\"If you keep sucking it, I'll probably need to come a few more times during the night, but I'll wake up and feed you when I get to that point. Okay?\"\n\n\"Yes, that's fine, I understand.\"\n\n\"All right then, let's see if we can find you something to wear to bed,\" Alan said as he stepped out of the hot tub, grabbing one towel for himself and tossing the other one to Rachel.\n\nAs she started drying herself, she wondered what the rest of this night was going to be like. Her mouth and throat were buzzing, and she patted her stomach, knowing this handsome young man had already filled it with his hot thick cum. But she knew she wanted more\u2014a lot more."
    ],
    "authorname": "rmdexter",
    "tags": [
        "porn star",
        "cum swallowing",
        "big breasts",
        "big cock",
        "big loads"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/fluffer-in-training-ch-05"
}