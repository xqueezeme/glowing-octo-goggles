{
    "title": "Down at the Twist and Shout Ch. 02",
    "pages": [
        " My thanks, as always, to GrandTeton for his tireless efforts to teach me how to write, punctuate, make sense, and stop drooling, and for taming my wilder flights of fancy, and to my dear wife and her friends and family for their help and assistance; without them I wouldn't have gotten anywhere with this story.\n\nAs before, please remember, this is only a story, so please suspend disbelief and take a wander through my world, who knows, you might even enjoy it...\n\nAll characters depicted herein are consenting adults, indulging in consensual acts and activities appropriate to and within the rules of this site.\n\nBB1958\n\n*****\n\nJustine was finding it increasingly difficult to divest herself of her soon-to-be ex-husband Carlo and the travesty of a marriage she'd endured all those years. \n\nSix months had passed since she'd walked out on Carlo, and found a new life with her Johnny-Bear, her older brother, and now her lover; as far as she was concerned, she and Johnny were together, and Carlo was out of the picture for good.\n\nShe'd told him enough times that they were done, that she wanted a clean break, but Carlo just didn't seem to be getting the message. For reasons of his own, and despite her repeated statements to him that she wanted a divorce, now, he persisted in showing up unannounced at the loft, claiming he wanted to reconcile with her. \n\nJustine remained adamant; the marriage was over, and he was wasting his time; she was staying with her brother, with the cover story for Carlo's benefit that she was looking for a place of her own and her brother was letting her crash at his place until then, but she was crystal-clear on one point; she wanted out, she didn't want alimony, she didn't want any kind of settlement at all; she just wanted Carlo to sign the papers and leave her alone, just accept they were done, get on with his life, and let her get on with hers. \n\nCarlo, however, seemed to be going out of his way to drag the whole thing out, instead of just accepting it was over and moving on, and for the life of her she couldn't understand why. \n\nInstead, he'd show up and try to wheedle his way into the loft, haranguing her at the door and deliberately making a commotion just to annoy Johnny; he knew he worked nights, just as he was aware Justine too worked all night, and he enjoyed the mean, spiteful little thrill he got out of knowing he was depriving the pair of them of their rest by deliberately being as loud and obnoxious as he could. \n\nCarlo never tried to force his way into the loft. Much as he wanted to snoop around inside, or at least try and get a clue as to where Justine was hiding her money, he wasn't foolish enough to force the issue. The thought of any kind of physical confrontation with Johnny made his stomach lurch and shudder, so he played his mean little game, always waiting until he was sure those two incestuous sickos were nicely tucked-up in bed and fast asleep after their night's work and their sick little morning fuck before once again disturbing their rest.\n\nIt had gotten to the point where Justine found it easier to just pass on getting any kind of rest the morning after a night's work; Carlo and his mid-morning visit would just break-up her sleep anyway, and Johnny's offer to take him somewhere and properly educate him in the art of getting lost was no solution; she wanted her divorce cut and dried and out of the way, and having Carlo in the Emergency Room and Johnny in the county lock-up would just make things more difficult. \n\nSo she let him play his game, convinced he'd eventually get tired of it, sign the papers, and leave her alone once and for all.\n\nBut Carlo had no intention of leaving her alone, not until he knew exactly where the money was, and so he kept it up, with no pattern Justine could predict; some weeks he'd be there every morning on some pretext or another, then the following week he'd show up Monday, then Thursday, then nothing until the following Tuesday, but he knew she'd be sitting up, waiting for his knock, whether or not he showed-up, and it pleased his petty mind that she was forced to do that; it was just the beginning of what he had in mind to punish her for keeping his money from him, which was how he thought of her earnings; his wife, ergo his money, period.\n\nFinally his persistence paid off; one morning several weeks after his low-key harassment first began, Justine answered the door to Carlo's knock after a particularly long and tiring night; her tiredness was exacerbated by the cumulative effect of too little sleep caused by Carlo's little game, so when he handed her some papers to sign, something to do with cancelling her co-sign on the lease, but so petty he could easily have mailed it to her, her guard slipped, and while she was distracted by scanning carefully through the documents to see what was so damned important about them, he edged into the loft, where he finally spotted what he'd been looking for all along.\n\nThrough the open door of the loft bedroom partition he glimpsed the safe he'd hoped would be somewhere in that enormous space. Now he knew for certain where the money was, time to start things moving. \n\nThe plan Gina had worked out was foolproof, all they had to do was watch the two of them until Justine was alone, then they could pounce, take the money, and be long gone before that lumbering hillbilly fucktard brother of hers ever knew what had happened.\n\n*\n\nWhen Carlo had gone Justine pondered for a while on this latest visit. Usually Carlo went out of his way to make a commotion, doing all he could to disturb Johnny's rest.\n\nAt Justine's insistence, John normally waited in earshot but out of sight for Carlo to leave after he'd had his fill of annoying her, confident he wouldn't try anything physical with her, because he knew what Johnny was capable of doing to him if he tried any rough stuff. This time, though, was different; he'd seemed almost jubilant, like something had hit his happy switch; maybe her signing the papers was the reason; perhaps he'd finally seen that it was time for him to move on too...\n\nThinking thoughts like this, she put the coffee on, losing herself in the simple domesticity of it. The pot had just brewed when two arms snaked around her waist and a pair of lips pressed against her neck, making her jump; damn, Johnny B could move silently sometimes; he'd almost scared her out of a year's growth!\n\n\"Dammit Johnny, don't do that, you scared the shit out of me!\" she scolded; tried to scold, that is, because she was spun around, and kissed by what felt like a friendly cyclone, a storm of kisses cutting off her words in mid-scold. Justine gave in to the inevitable and kissed him back just as eagerly, feeling him harden against her even as his hands crept around her waist to clasp and squeeze her tight little buttocks.\n\nEventually they had to surface for air, and Justine pulled away slightly so she could thump him on the chest playfully.\n\n\"What have I told you about sneakin' up on me?\" she growled, and dodged him when he tried to kiss her again.\n\n\"No, no you don't, not 'til I've had my say, Johnny-Bear! You really startled me...\" she grumbled, then gaped as he handed her a candy bar.\n\n\"Here, have a Snickers; you're not you when you're hungry!\" he straight-faced, and Justine collapsed in peals of laughter.\n\n\"Everyone says you're mad as a sack-full of cats; they're so right!\" she giggled, then swiped his tousled hair flat as she blew him a kiss. \"But you're kind of cute too, in a special, ugly kind of way, so I forgive you, Country Boy, just don't do it again! Wanna coffee? I just finished making some when you snuck up on me and nearly made me have an accident...\"\n\nJohn smiled down at his little sister, at her black hair held back from her face with a printed silk headband, her sweetly pretty face, and her naturally coral-pink lips, and once more marveled that she was in his arms and his bed. At the thought, his arms swept around her, while his hands once more cupped her firm little bottom and pulled her tightly against the urgent need she could feel as she rubbed against him.\n\n\"Didn't mean to startle you, baby girl,\" he rumbled, squeezing and jiggling her tight buns as she ground herself against him.\n\n\"You wanna be startin' something, Country Boy?\" she murmured. \"I thought you were tired, way you just keeled over and started snoring when you came in this morning...\" \n\nJohnny grinned down at her, seeing the devil of mischief dancing in her eyes.\n\n\"I was tired, then,\" he grinned as he gave her bottom another jiggle and squeeze. \"But I ain't now...\"\n\nJustine smiled back and locked her hands around his neck, dragging him down for another lingering kiss. Johnny continued to knead and gently squeeze her buttocks, before breaking the kiss to whisper: \"Whose cute little ass is this, baby-girl?\" \n\n\"It's mine, Country Boy,\" she whispered back, kissing him on the tip of his nose. \"But I like you, so I'll let you borrow it just this once...\"\n\nJohnny grinned as he swept her up in his arms, all thoughts of coffee forgotten in the surge of another, more primal need. Justine draped her arms around his neck and rested her head against his chest, smiling happily at the feel of his arms around her.\n\n\"I'm only small, don't you break me, now, Country Boy...\" she murmured, and groaned softly when he squeezed her bottom.\n\n\"I'd never do nuthin' that all-out foolish, baby girl!\" he drawled at her, making her smile the way she always did when he let the bayou back into his voice. \n\nJohnny laid her down gently on the rumpled bed and slid up next to her, his lips tracing the arc of her neck and shoulder even as his hand slipped down inside her work sweats to cup her warm, soft buttock and squeeze gently.\n\n\"Said it afore, li'l gal, an' I gotta say it again: you-all got a real nice ass!\" he breathed in her ear, before shoving his tongue in, making her shriek with laughter, and then they were rolling around on the bed, all thoughts of Carlo forgotten as they tickled and groped and squeezed each other. \n\nSomehow, in all their horseplay and laughing, Justine ended up on top of John, her small hands pinning his upper arms to the bed and her thighs wrapped around his.\n\n\"Say 'Uncle' or I'll spit up your nose!\"she threatened, and worked her lips and tongue like she was getting one ready when he sneered at her.\n\n\"That's gross, where you learn stuff like that?\" he grinned, so Justine leaned even harder on his biceps. \n\n\"I learned it from you, and I mean it, Swamp Thing; say it or it's gonna get real gross around here, and it'll all be your fault! Here it comes, loogie-time...!\" she threatened. \n\nJohnny smiled slyly.\n\n\"Uncle, baby-girl, damned if'n you-all ain't jest gone an' won again! Looks like I gotta pay you now; what you want, li'l girl?\"\n\nJustine grinned happily as she sat up on his midriff, gyrating her hips slowly, meaningfully, grinding against him, and feeling the response from his body.\n\n\"Ohhh, that...\" murmured Johnny, \"You one dirty-minded li'l girl, cherie! You lucky I like that kinda stuff too...\"\n\nEven as he spoke, his hands were sliding up the front of her sweatshirt, his thumbs brushing her nipples and drawing a soft murmuring groan from her as the sensitive little nubs perked-up at his touch.\n\n\"More, baby, please...\" sighed Justine, and Johnny obliged, once more rubbing the pads of his thumbs over her nipples, and enjoying the long, shuddering breath she drew as he slowly worked her up.\n\nJustine writhed gently as his big, gentle hands once more worked their magic, until finally she could take no more, tugging her top over her head and tossing it on the floor.\n\n\"Baby...\" she murmured, and, taking his cue from her, Johnny sat upright, holding her as she arched her back to thrust out her stiff nipples invitingly.\n\nNow Johnny was in his element: Justine's nipples fascinated him, so pink and stiff, appealing and inviting, and he took his time just gazing at them, once more mesmerised by their perfection, until a soft but meaningful throat-clearing from her broke him out of his entranced reverie.\n\n\"Just starin' at them does nothing for me, Johnny B...\" she hinted, then gasped softly as he dragged his tongue lightly but firmly over one of the stiff, fleshy little pillars. \n\nMore sighs and gasps ensued as he kept it up, driving her further and higher. When he finally clamped his lips over one deliciously stiff and chewable little teat and sucked, her eyes snapped open as the colour rose in her face, and her hands cupped his face, holding him against her as his tongue lashed and teased her nipple.\n\n\"Oh God yes, more, keep going!\" she gasped, wriggling sensuously on his lap, tormenting his burgeoning erection as she ground against him.\n\n\"Johnny, now, oh God, yes, now...\" she murmured, raising up as Johnny hooked his fingers in the waistband of her sweats and pulled them down around her thighs so she could kick them off. With them went her panties, and now she was naked, her damp and dewy labia burning his pulsing erection with their moist heat. \n\n\"Fair's fair, Johnny...\" she murmured, and Johnny grinned as he arched his back, allowing her to yank his shorts off.\n\n\"Oh yes...\" breathed Justine as his stiff cock swung upright, and when she took him in her small hand and squeezed as she fisted him, Johnny groaned out loud.\n\n\"You like that, Country Boy?\" she teased, \"How 'bout this, then?\" as she slid her lips over the purpled dome of his thick penis, fisting him even as she sucked him.\n\nJohnny shuddered in ecstasy, suppressing only by an effort of will the urge to ram himself into the hot succulence enveloping him, fighting to remain passive as she sucked and teased him with her talented mouth and nimble tongue.\n\nJohnny knew he couldn't take much of what she was doing to him, and suddenly pulled himself from her, instead rolling her onto her back even as she squeaked in surprise, a smile suddenly breaking out as she realised what he was about to do. \n\n\"My turn, li'l girl...\" he grinned, clamping his lips around her erect nipple, and drawing a shuddering sigh from her.\n\n\"So good...so good...\" she whispered, combing her fingers through his hair as he began kissing between her breasts, and on down her midriff. He smiled at her soft giggle when he poked his tongue into her navel, before continuing to lick and gently kiss her until he reached his target, the damp and fragrant folds of her juicy little pussy. He paused, grinning, to look into her eyes, at her raised eyebrow, then slowly licked her with the flat of his tongue, lapping her from the tight little knot of her anus to the solid little nub of her clitoris in its fleshy hood.\n\n\"Oooohhh...\" murmured Justine, then again as he did it again, pressing his tongue firmly against her as he dragged it the length of her vulva, jangling her nerve-endings with the pressure of his tongue on her most sensitive parts. Justine shuddered with every soft stroke of his tongue, holding his face against her as the beginnings of orgasm uncoiled and trailed through her, lighting-up her nerve endings with delight at what he was doing to her.\n\nJust when she thought she couldn't take any more, his tongue flicked and lashed across her clitoris, and she screamed as a gigantic wave of pleasure blasted through her, shutting off all sensation except the feel of her Johnny-Bear taking her higher and higher.\n\nJohnny changed his approach, and as her muscles tensed with the first hot glow of orgasm, he pushed his tongue into her as hard as he could, and simultaneously slid one finger into her tight anus.\n\nJustine whined through clenched teeth as a fresh thunderclap burst inside her at the doubled attack, her moans muffled for him by her thighs clamped around his head, and when he wriggled and hooked his finger inside her, that thunderclap burst inside her again, her fragrant juices slicking his lips and chin as she came like she never had before, filling his world with her own special, delicate fragrance.\n\nJustine slumped back, her heart thudding fit to burst, aftershocks running through and through, until finally she became aware of Johnny kneeling between her splayed-open legs, his hands resting on his thighs as he smiled down at her. His thick, tense erection bobbed slightly with every beat of his heart, primed and ready for her.\n\n\"Somethin' I can help you with, Country-Boy?\" she husked as Johnny reared over her, her restless hands finding and fondling him, wondering, as she always did, at the steely hardness overlaid with warm, velvety smooth skin. \n\n\"Oh, I heard about this stuff! I think I know where this goes baby; you ready to find out?\" she teased, then as always, the breath rushed from her as he slid into her, feeling, like it had every time they did this, like it was the first time as she stretched to accommodate his girth.\n\nAs Johnny slipped in and out of her, settling into his rhythm, Justine gasped and moaned as she moved against him; the feel of him inside her, the scent of his nearness, the warmth of his skin against hers, the smooth, masculine, muscular feel of him, all these took her higher and higher, reaching once more for that plateau. Stronger and faster became their frenzied coupling as they gorged themselves on each other, while Justine bathed in his adoring gaze, in his beautiful grey eyes boring into hers as he fucked her the way she wanted him to.\n\nJohnny couldn't hold out for long, not when it was his Justy he was making love to; she excited and aroused him in ways no other woman ever had, and as his excitement built, so he could feel her chiming along with him, in perfect sync with him, until, when it seemed he was overloading himself, Justine groaned as once again orgasm swept over and through her. As she tightened around him, Johnny lost it, his body tensing as the white fire swept through him, with his whole being centred on his release as he pumped what felt like gallons of spunk deep inside his woman. \n\nThick spurts of hot spunk pulsed from him, filling her with his seed as her own orgasm raged and fluttered through her, each thrust of his cock inside her awakening another wave of pleasure, until they were finally both sated and spent. Johnny slumped down over her, his cock rigid still, unwilling to leave the warmth of her body, while Justine clung to him, her racing heart in perfect counterpoint to his own.\n\nJohnny finally recovered enough to realise where he was, and rolled to one side so as not to crush Justine, then onto his back, taking her with him, still joined as they were. They lay in warm, comfortable silence for a while, no words necessary between them, as Johnny slipped from her, while Justine sighed softly, more asleep than awake. If he had his way, she'd sleep there the rest of the day; she weighed virtually nothing, and he enjoyed immensely the feel of his woman lying on him, with his arms around her, holding her close and keeping her safe, and feeling her heart flutter against him.\n\nJustine stirred and sleepily kissed him on the chest, before patting his chest lightly.\n\n\"Let me go, Johnny-Bear, got to go the bathroom, what'd you do inside me, you dirty, dirty man?\" she teased, wriggling sensuously atop him even as his big hand clamped hold of her bottom.\n\n\"Why I let you go, boo'sha', I likes this jest fine?\" he drawled, jiggling her bottom and making her giggle.\n\n\"Lemme go clean up, five minutes, then you got me all day, Country Boy...\" she promised, kissed him once more, and slid off the bed, to pad across the loft to the bathroom. Johnny watched her tight little ass-cheeks twinkle as she walked away from him, grinning when she looked back over her shoulder at him and flirted her bottom at him.\n\n\"What are you lookin' at, Mister Big-Eyes?\" she smiled, slapping her bottom and laughing as she skipped into the bathroom. When she'd finished her quick shower she headed back to bed, to find Johnny fast asleep, the long night and the morning's exertions finally catching up with him. Justine smiled as she slipped into bed next to him; Johnny immediately rolled over and put his arm around her, spooning her in his sleep with a murmured \"...Justy...\" as his arm drew her closer.",
        "Justine pulled the covers up over the pair of them, and, with his sleep-warmth baking into her, fell asleep in her Johnny-Bear's arms.\n\n*\n\nLife gradually settled down into a normal pattern for Johnny and Justine over the next few weeks; Carlo's nuisance visits had stopped, and Justine was finally able to unwind and enjoy the life she was sharing with Johnny. The fact they both kept the same unsociable schedule meant they were never out of sync, even if they lived their lives shifted 12 hours away from most of their neighbors; it no longer seemed weird to be having dinner at ten in the morning, or that they hardly ever saw their neighbors at all except sometimes when they were coming in just as the neighbors were leaving to start their work-day. That they'd be making dinner while their neighbors were having breakfast and going to their nine-to-five lives never really seemed odd to the two of them; they had each other, and that was all they wanted.\n\nAs time wore on and Carlo and his pettiness gradually slipped from their minds, Johnny and Justy began to relax; as far as they were concerned, Carlo was over, and they could move on. At least, Justine believed it was so; Johnny wasn't so certain; in his estimation, Carlo wasn't the kind of man to accept things were so just because someone had told him so, but, as time wore on and nothing came along to cause even a small ripple in their happiness, he too began to let his guard down. \n\nThat was exactly what Carlo was waiting for; he'd kept a close watch on them, becoming very familiar with their routines, what time either came in from work, who was in the loft at any given time, and, most importantly, the times when Justine was alone, and for how long; he'd bided his time, and now it was time to take what was his.\n\nFinally, early one Monday morning, his chance came. After a night of relatively uneventful chaperoning of his latest celebrity client, Johnny had swung by Justine's location to surprise her with an early pickup, to find her looking tired and drawn; obviously she'd not had as easy a night as him. As he hugged her, he saw how tired she was; she needed sleep, she was so exhausted he'd had to carry her back up to the loft, not that she was any great burden, and left her dozing on the couch while he ran back down to the lobby and across the street to Tonino's to pick up a couple of hot pastrami on rye and one of Tonino's special mocha vanilla latt\u00e9s, Justine's favorite morning treat, and a java for him.\n\nJohnny was just about to order at the counter when his cell bleated. He looked at the caller ID and saw it was Jerome calling. When he answered, Jerome asked him if he could swing by, he needed to give him some additional details on that night's assignment, he was sorry for the short notice, but he had to leave that afternoon for Philadelphia, so Johnny needed to come by now. \n\nJohnny climbed into his unremarkable, apparently beat-up old Blazer and headed uptown to the offices of Baxter-Harkoff, sure in the knowledge that Justine wouldn't even notice he was gone; she'd fallen asleep almost the second he'd laid her down on the couch.\n\n*\n\nWhen Johnny's Blazer had disappeared into the morning traffic, Carlo stepped out of the shadows from where he'd been watching him leave; the traffic had teeth that Monday morning, so Carlo could be reasonably sure the big hick would be gone most of the morning. A second figure stepped out of the shadows, grinning in anticipation at Carlo; if he'd been a little less dazzled with his own brilliance he'd have seen and understood the way his accomplice, Gina, smiled; as meaningless and deadly as a shark, no trace of humor touching her cold, calculating eyes. \n\nBut Carlo wasn't perceptive enough to see Gina for what she was; in his mind, he and Gina were together, the perfect fit, she adored him, of that he was sure, and now they were going to take what was his, and start a new life together far from all this, from that worthless wife of his, and, more importantly, from the people he owed so much money to. In his eyes, Gina was everything Justine wasn't; she was the woman he deserved, and this was the way to keep her. \n\nWith thoughts like these ringing in his head, he smiled triumphantly at Gina, and nodded to her; now was the time he took his payback. Watching the traffic carefully, just in case Johnny's old Blazer suddenly reappeared for some reason, he and Gina slipped into the deserted lobby of the loft complex, confident that they were in the clear, and would be long-gone before anyone even knew they'd been here.\n\nBut other eyes were watching, too; already the jungle drums were spreading the word; Fat Carlo was up to something, and it smelled like money...\n\n*\n\nJustine woke slowly, disoriented for a moment, before realizing she was still on the couch. Why had Johnny left her there...? More to the point, where was he? The loft fairly throbbed with emptiness. Justine glanced at her watch; she'd been asleep only a few minutes, what had woken her? As if in answer, there came a knock at the door. \n\nIn her half-dazed, still partially asleep state, Justine swung her legs wearily off the couch and padded across the floor in her sock feet, caution deserting her in her tiredness, and opened the loft door. She caught a glimpse of a redheaded woman with a sharp, malicious face grinning at her before a bony fist smacked into her eye; Justine saw stars, and as she staggered backwards, her head ringing from the blow, another punch caught her square on the point of her jaw, she tasted brass as more stars burst in her head in a sudden blaze of pain, and blackness swamped her.\n\nCarlo saw the fine gold chain around Justine's neck, probably a gift from that swamp-hopper brother of hers, and so he yanked it off her, snapping it, but not before he'd seen the key fly off it. Gina also saw it, and pounced on Justine's inert body, tearing her shirt open to find the key again. It was the key to the safe, of that Carlo was sure, else why keep it so close? Gina handed it to him, and grinned, a wolfish glimmer of greed in her eyes.\n\n\"Let's go get our money and get out of here, baby,\" she wheedled seductively, and Carlo grinned back at her, mentally rubbing his hands in glee at the thought of all that money within his reach at last, not hearing the thinly-veiled contempt in her voice in his elation at finally getting his payoff.\n\n*\n\nThree hours later, his business with Jerome taken care of, Johnny ambled along the hall with two coffees and two of Tonino's superb hot pastrami on rye sandwiches, his mind occupied with thoughts of waking Justine with her favorite snack before having a long, lazy day in bed with her, when he saw the door to the loft ajar. Immediately his cop-senses stood up and shrieked; Justine was alone, and as far as he knew, still asleep; she never left the door ajar and unattended, Carlo had a habit of showing-up out of the blue, so she always kept the security-chain on and the door double-locked if she was alone. \n\nJohnny silently placed the drinks carrier and brown bag on the floor and cat-footed along the corridor, carefully avoiding the one squeaky plank in the polished hardwood floor, and cautiously peered around the doorjamb; his heart leaped into his mouth at the sight of Justine crumpled a few feet inside the loft.\n\nJohnny listened carefully to ensure whoever had done this wasn't still inside the loft, then ghosted through the door and carefully scooped the unconscious girl off the floor. He laid her down on the couch and checked her breathing, before feeling at her neck for her pulse, while his heart raged at the swollen black eye and vivid purple bruise on the side of her jaw; whoever had done this was long-gone, if the advanced state of her bruising was anything to go by, but when he hit her he knew exactly what he was doing to put her out-cold for as long as possible. While he was making her comfortable he glanced into the sleeping area and saw the safe door open, the bundles of hundreds gone, almost $200,000 in all, and papers scattered and trampled on the floor.\n\nJohnny knew instantly who'd done this, who'd want to do something like this; it didn't take a genius to connect the dots here and spell out 'Carlo', and for this day's work, Johnny promised himself, he was going to bait Carlo on a hook and drag him behind a pirogue along every bayou he knew and let him take his chances with the gators; maybe he'd cut him a little first, just to give the gators a blood-trail to follow... \n\nJohnny went to the freezer and collected a handful of ice-cubes in a clean towel, which he placed gently on Justine's eye. The cold shocked her awake and her hands came up in an instinctive warding-off gesture.\n\n\"Hey, hey, it me, Minou, shh, y'all take it easy, I got to get this here swellin' down...\" he murmured, and Justine grinned, despite her pain, at his overdone bayou accent.\n\n\"Who done this baby-girl, who hurt you?\" His big, gentle hand held the improvised ice pack on her face, alternately dabbing at her eye and the nasty purple bruise on the left side of her chin.\n\n\"Was it that...was it Carlo?\" he probed gently , and gazed at her in surprise when she shook her head.\n\n\"It was a woman, I didn't really see her face properly; someone was at the door, I opened it, and she smacked me in the eye, and hit me again, and that's all I know. Redheaded, she was a redhead, thin, but that's all I remember.\"\n\n\"Was Carlo with her?\" probed Johnny, and Justine shook her head. \n\n\"There was someone behind her I think, but I dunno; it all happened so fast, I can't really...\" \n\nJohnny nodded, carefully schooling his features; he was in no doubt who was behind this, and why. As he dabbed the makeshift ice-pack on Justine's bruised face, he made a vow to return the favour, with interest, just as soon as he caught up with that pudgy little prick. So intent was he on easing his sister's pain that he forgot the loft door was still open, and was caught completely off guard when a strange voice spoke.\n\n\"Well now, ain't this a lovely sight, eh boys? So nice of you, you must be a real gentleman, looking after that little girl so nicely and all... don't make any sudden moves, big guy, I don't want to hurt anyone, 'specially not that pretty little thing there...\"\n\nJohnny turned slowly, to see four large, thick-necked thugs, the kind found in any of the more questionable saloons on the Lower East-Side, flanking a slim, elegant figure with a dark blue Burberry trench coat draped over his shoulders like a cape. He was wearing sharp, sharkskin suit, a candy-stripe pastel pink and blue shirt with a contrasting white collar as rigid and perfect as porcelain, set-off with a pale blue, impeccably knotted watered-silk necktie. The newcomer was medium height, with short, dark hair gelled into spikes, and a soul-patch under his lip. He looked like a movie hood, and Johnny wondered abstractly for one second if he'd been watching too many wise-guy movies, because he was certainly trying to look like one.\n\n\"Who the fuck are you, and what the fuck are you doin' in my home?\" drawled Johnny, watching the five intruders carefully.\n\nThe suit snapped his fingers and one of his gorillas took the trench coat from his shoulders while he took a Partaga from his inside pocket and waited while another hulking thug clipped and lit it for him. He blew a thin plume of smoke out, tainting the air with the smell of Cuban tobacco, smiling with enjoyment before locking gazes with Johnny.\n\n\"A...mutual acquaintance of ours owes my family a large sum of money; we heard he had access to funds to repay us. He is overdue repaying us, the loan and the vig, and, I'm sorry to say, it is a sizable sum. We also heard his wife had enough money to repay what he borrowed and did not repay on time, and so I have come here, on behalf of my family, to collect our money. But what do I find? Our bird has flown, he has taken our money, and so you, Senhora, you must find a way to repay us; your husband's debt is your debt, and my brothers have grown tired of waiting. Now where is our money?\"\n\nThe air of dapper elegance was gone; now he was menacing, and Justine quailed at the expression on his face. Johnny stepped in front of her.\n\n\"Look you, whatever Carlo owed you's between him and you; t'ain't nuthin' to do with us, so whyn't you-all haul ass outta here afore I get mad?\"\n\nThe hood's eyes narrowed with anger.\n\n\"If I leave, she comes with me; one way or another, that fat fuck's going to repay what he owes; he took our money, so his wife's going to work it off for us.\"\n\nHe flicked a lickerish glance over Justine as she cowered on the couch, and leered at Johnny, a triumphant smirk on his face as he licked his lips.\n\n\"She's a pretty one; she's gonna be really popular, I think I might even try her out myself first, just to see- \"\n\nBefore he'd even finished speaking, Johnny went off like a hand-grenade, enraged beyond reason at what that little dog's dick planned for his Justine. Moving with the blurred speed of a striking rattlesnake, his hand speared into the man's throat, stiff fingers crushing his larynx. The dapper hood dropped to his knees, strangling, his eyes wide with the knowledge of his own death, while his cohorts stood frozen, unnerved by Johnny's reaction and blinding speed. \n\nThey didn't stay frozen for long; the first one to reach into his jacket staggered back, his nose broken by the downward hammer-blow of Johnny's fist. Johnny followed up with the heel of his hand in a vicious uppercut, with all his strength, straight to the bridge of the man's nose, driving the splintered bone into his brain. He dropped without a sound, dead before he hit the floor. \n\nTwo of the lumbering gorillas tried to rush him; one got a back-elbow under his chin that slammed his teeth together and scrambled his brains, and as he staggered back, Johnny spun around, grabbed the other man by the back of his head, and slammed their heads together. Blood spouted with the force of the impact, and both thugs sagged to the floor, their lights switched off and their skulls most likely fractured with the crushing force of the impact.\n\nThe fourth thug, slower on the uptake than his three friends, finally lumbered into action, but it was already too late; he tried to grab Johnny around the neck in a clumsy wrestling hold, but Johnny had been rough-house wrestling down home all his life, and refining his skills in the course of his work, and he easily ducked out of the hold, spun the goon around and yanked him closer even as he head-butted him between the eyes; as the man staggered, dazed, Johnny kicked him in the crotch as hard as he could; the thug screamed and clutched himself as he sank to his knees. A crashing kick to his jaw, like a soccer player taking a penalty, sent him to join his sleeping buddies.\n\nJustine stared in shock at the carnage; she'd always known Johnny could look after himself, but five men? No wonder no-one would cross him...\n\nJohnny stood, breathing heavily, letting the rage and killing fury drain away; he looked up to see Justine's wide, frightened eyes and cursed himself; he'd never wanted her to see that, what the hell must she think of him? He started to speak, but Justine bounced off the couch, skirting the bodies on the floor to hug him tightly around the waist.\n\n\"Justy, I...\" he began, but she grabbed his lips and held them together, her favorite trick when she wanted him to shut up.\n\n\"It's OK, Johnny B, you were protecting me, it's OK, really; they came here to take everything from us, they were going to take me, and they would have hurt you. I know why, it's all because of what Carlo did; I know he must have been behind what happened to me, I can see all the money in the safe's gone, he took it, and now those people say I have to pay them back what he owes them. What are we going to do, Johnny? Please tell me we're going to be OK; I don't want them to come back, but they will, won't they? What are we going to do?\" \n\nJohnny gently disengaged her arms from around her waist.\n\n\"Baby-girl, the money in the safe don't matter; it gone now, an' we never gonna get it back, but it don' matter, you got lots more comin'. Right now, just siddown, lean back, don' jar your head none, I need to make a couple calls, we get this cleaned-up, then we go see some people, OK? Now husha, I gotta talk to a man 'bout some carpets...\"\n\nJohnny made a call that made no sense to Justine, only hearing his side of the conversation; something about two carpets and three rugs, full cleaning service, standard rate, ten each for two carpets and five each for three rugs, with an extra ten for cleanup. Justine listened in bewilderment; there were dead and seriously injured men scattered around the loft, and Johnny was more concerned about making deals with some carpet cleaning company?\n\nHe finished his calls and smiled at her.\n\n\"Get your stuff packed, baby, stuff y'all really need; we got to get out o' here real soon; some people comin' by gonna take care this mess, then we gotta disappear for a while; them boys' friends are gonna be lookin' for evens, so shake your tail, Minou. Move it, I ain't jokin'!\"\n\nJustine was packing a pair of large flight-bags when there came a knock on the door. Johnny answered cautiously, and a bunch of men with hard, forgettable faces, dressed in 'ACME Carpet & Rug Cleaning Services' coveralls carried in a pile of rolled-up carpets and rugs. Justine watched in horror as they began tightly wrapping the two bodies in Saran Wrap and rolling them up inside the carpets, while the three unconscious men were gagged, zip-cuffed and duct-taped, and wrapped in the rugs; then, all the rolled-up carpets and rugs were strapped tight with steel banding. Now she suddenly understood Johnny's cryptic conversation as the 'workmen' carried their burdens into the service elevator. \n\nJustine looked out to the street, where a large 'ACME Carpet & Rug' panel van was waiting, and she watched the men casually dump the rolled up carpets, whistling as they did, kicking and rolling them into the very front of the van, while a couple of the men rolled-up and Saran-wrapped the bloodstained rug then swabbed and mopped down the loft floor and outside corridor, before putting down an old, but clean rug where the old one had been. Justine smelled bleach and looked inquiringly at Johnny.\n\n\"Just in case, baby; any forensic people got reason to come up here, the bleach gonna confuse things if they use Luminol or UV lights to look for blood,\" he grinned wryly; \"Sometimes, bein' Lawman come in useful...\"\n\nJustine chewed her lip, something she did when she was worried or confused as they rode the elevator down to the lobby.\n\n\"Johnny, who are those men, where are they taking those...rugs and stuff, and how do you know them? Tell me the truth, Johnny B, I'm not a little kid; how the hell do you know people like that?\"\n\nJohnny grinned as he tossed their cases into the back of his innocent-looking Blazer.\n\n\"Baby, I work in a...special kinda world, and you get to know people, sometimes they ask you for favors, an' sometimes you ask for one in return; 'quid pro quo' they call it; I needed a 'cleaner', someone who owes me knows a man who knows a man, they sent them, they'll pay them, I'll pay it back through someone else, that's all I need to know; favor repaid, an' no paper trail; that's how my world works. No-one talks, an' no-one knows nuthin'; it's safer that way. Now, you ready to go? I ain't runnin' back up to the loft an' leaving you out here alone, so you forgot it, it's gone, you got that?\" \n\nJustine nodded. \n\n\"Let's just get the hell out of here before more of those pigs come back; the way that little dick was looking at me...\"\n\n*\n\nTwo hours later, in a small, anonymous office building behind a ramshackle gas station in Rochdale, Jerome Barker steepled his fingers on the table as he looked searchingly at Johnny.",
        "\"This is bad, Johnny; I'm not going to lie. I know you had your reasons, and in your place I would have done the same thing, but the fact is you've now got major-league trouble on your tail; word gets around on the street real quick in these parts, and most people are saying the same thing; the two men you...disposed of? One was just a moose, just muscle, but the other one was Luc\u00e9 Ribeiro; he and his two brothers Joao and Felipe are what was left after the Gulf cartel decided the Mob was in their way around here; back then they were just runners, originally from one of the favela gangs in Rio, low-level nobodies; after the dust cleared, they made a deal, now they dance to the cartel's tune; they're an important pipeline along the East Coast, and their people run Hell's Kitchen and points West; they've got muscle, and serious connections; the word is half the precincts are either in their pay or riddled with snitches, so the law hasn't been able to touch them in years.\"\n\nBarker sighed and ran his fingers through his hair.\n\n\"These people are savages, John, and they rule through fear; Felipe likes to cut fingers, ears, or noses off as a reminder to repay debts, and he doesn't care who he mutilates. Luiz is a rapist; he thinks he's a ladies' man, and it doesn't matter whose wife or daughter she is; if he wants her, he'll take her, and once he's done with her, they'll find her in a river somewhere a long way from here with her hands and feet gone and her face chewed off; he keeps a clutch of pit-bulls and he likes to give them fresh meat...\"\n\nHe sighed, and straightened up.\n\n\"John, right now they don't know who you are, or even that it was you, but they're going to start putting the pieces together very quickly; if you stay here, this is their back-yard, they'll find you, and you can't keep all of them off you. Get out of New York, go somewhere they'll never find you, and our people here will try and see what we can do; I have a couple of geniuses of my own to call on, you know who they are, and you know they'll be more than willing to run interference for you, but go, and do it now; those animals have eyes and ears everywhere, and you owe them blood; I guarantee you they'll come looking for payback.\"\n\nJohn looked at Justine, and saw the determination in her eyes. He grinned at her, at her answering nod, and looked back at Jerome.\n\n\"Mr Jerome, I know where we can go be safe from them and their friends; you say this their back-yard, so fine, I'm gonna take 'em on a little look-see through my back-yard; let's see how a little Louisiana Hayride sets with any o' them fellers who want to come a-lookin' fo' us; who know, maybe they dance the Zydeco 'fore we finished with them! Yessir, time me an' my folks finished takin' them down to the Twist an' Shout, they gonna be real unhappy they come a-visitin'!\"\n\nEven Jerome grinned at the overdone, good ole boy accent, but then he grew serious again, holding up his hand to still Johnny for a moment.\n\n\"Johnny, I know you think it's probably none of my business, but I wanted you to know one thing; I know about you and Justine, I have done for years, how you felt anyway; now, it's pretty much out in the open, and I'm glad you two have managed to make it work, but I also think it's important that both of you know that none of us care; certain people, you know who they are, have been in your position, they guessed and put it all together years ago, so when you meet up with them again, you'll know that they know, and that they feel just like I do; Justine's a sweet girl, and she deserves someone like you in her life. That's all I have to say on the matter, and we'll go on from there.\"\n\nJohn stared at him in open-mouthed wonder, while Justine looked at him as though she was expecting him to start shouting at her for doing what she was doing, but Barker smiled back at her.\n\n\"Don't worry, Justine, no-one's judging; you and John are happy, that's all I care about.\"\n\nHe switched his gaze back to Johnny.\n\n\"One more thing, John, that other matter we discussed? Meet me in Lafayette in six days, at the townhouse on Englewood; those other, umm, people we discussed, they'll need to meet with you and Justine before this all gets out of hand. Sunday, One PM, OK?\" \n\nJohnny looked blank for a second, then memory cut back in, and he nodded. \n\n\"Yessir, Mister Jerome, Lafayette, Sunday at one, we'll see you there; it's about time this all happened, anyway.\"\n\n*\n\nBack in the car, Justine seemed quiet, her brow creased in thought as she sat silently. Johnny drove in silence for as long as he could, but the prolonged silence from her was beginning to concern him. Finally, he could take it no longer, so he pulled into the parking-lot of a convenience store and killed the engine.\n\n\"OK, Minou, you want to tell me what's eatin' you?\" he asked, watching her expression; it was one he knew well, the one that said 'I'm not mad yet, but I'm getting there', so he waited a little apprehensively.\n\n\"Johnny-Bear, what was Mister Jerome talking about? Who are those 'people' he mentioned, and why the hell are we going to Lafayette? I may not be too smart at geography, but I do know that's a hell of a long detour if we're going to Houma; what's going on, and don't you lie to me, I can read you like a book!\"\n\nJohnny met her gaze resignedly; he'd always known this conversation would happen one day, in fact it was long overdue, but that didn't make it any easier to tell.\n\n\"Minou, it's about what you got comin' to you. What do you remember about your daddy's business?\"\n\nJustine looked blank at the sudden side-shift; her daddy's business? It was gone, Mom had told her he owed so much to the tax-people they took just about everything, all she had left was the apartment, a small annuity, and not much else.\n\n\"What about daddy's business, Johnny? Mom told me the IRS took everything...\"\n\nJohnny shook his head slowly.\n\n\"No, Minou; mama tole you that so's you wouldn't act like no entitled rich kid and get gold-diggers an' fortune hunters chasin' after you; your daddy's partner, you remember, Carlo's daddy? Mister Bruno? He, an' mama, and Mister Jerome, an' me too, we made sure everything your daddy earned, everything he owned, everything he invested in, it all went someplace safe; Mister Bruno even bought-out your daddy's share in his companies, at a price mama thought was fair, so's he didn't have nuthin' that rightfully was yours; he was your daddy's boyhood friend, and he wanted to make sure what was yours came to you; he knew one day Carlo gonna take over everythin', an' he din't want Carlo gettin' his hands on what wasn't his to have.\"\n\nJohn watched the look of almost anger transmute to wonder, but that edge of real anger was still there, so he decided to tell her everything.\n\n\"Justy, mama an' me an' the others, we put everythin' into a bunch of trusts for you, with me, mama, Mister Bruno, Mister Jerome, and a couple other real good people to be your trustees an' make sure that money stayed safe for when you claim it all; we goin' to Lafayette to meet those people, you need to meet them an' tell them what you want to do next; they been keepin' things quiet so Carlo an' any shysters he team up with don't get wind o' just what you got, an' how much it worth...\"\n\nJustine chewed her lip, never breaking eye contact with Johnny, disbelief plain on her face; it sounded like some kind of fantastical, movie-plot, wish-fulfilment fairy story, but Johnny had never lied to her in his life, and he wasn't doing it now, she was sure of that.\n\n\"So tell me, Johnny-Bear, if I had all this money, and I still don't believe a word of it, but we'll let that slide for now, why'd you start me working and earning money? Why didn't you just tell me I was OK? Do you know how hard I worked? How tired I was most nights? How much I worried? You knew all along, and you didn't tell me; why?\"\n\nJohnny grimaced, but his gaze never wavered.\n\n\"Think, Minou; what happened to everything you had, all mama's insurance, your apartment, her jewelry? That's right; they all gone, Carlo took it all, an' he lost it all, an' if he knew you got all your daddy's money, he gonna try and take that too. Mama made the trust airtight; only you can benefit from it, but if your husband find out about it, there are prolly ways he can legally take a big chunk of it; I'm sure your daddy, and I know Mister Bruno, wouldn't have wanted that; that money, all them investments, they were meant for you, not for Carlo an' his lawyers to help theyselves to.\"\n\nHe stopped to unravel his thoughts, before taking up the story again.\n\n\"Baby-girl, while you been growing-up, your trustees been investing and earning for you, and they kept everythin' safe for you against the day Carlo and you broke-up; we all saw it comin', warn't nuthin' we could do to stop it, it was like just a matter of time, but now you legally separated we all think it's time you were told, and given control; it's your money, after all.\"\n\nHe smiled ruefully.\n\n\"An' I didn't 'start you working', Minou; I wanted you to know that you were good at something, that you could make it on your own, that Carlo wasn't where your life was 'sposed to be goin'. I'm sorry I din't tell you 'bout your daddy's money sooner, but I really din't want that fat piece of crap findin' out and taking it all away somehow, I dunno how, maybe some fly-by-night legal shenanigans, or maybe not legal at all, the way he stole the money you earned.\"\n\nHe grinned at her, hoping she'd grin back, and disperse the storm he could see gathering. \n\n\"As it is, Minou, you got some smart, powerful people lookin' out for you, an' we goin' down to Lafayette so you can see what all they been doin' for you.\"\n\nJustine stared silently at him for long, dragging seconds, then, her small fist smacked into the fleshy part of his arm. Johnny jumped in surprise, then leaned back as a flurry of punches landed on his arm, his chest, and even a couple in his solar plexus; Justine stopped smacking him when she realized she was having no real effect, but now the initial surge of anger was gone, replaced by a sort of aggravated annoyance.\n\n\"You should have told me anyway, Johnny; this has been going-on since daddy died, and you're telling me now? I thought you trusted me...\" she trailed off, and Johnny was alarmed to see a tear quivering in each eye. He reached over and pulled her close, Justine at first stiff and unyielding, but eventually she relaxed.\n\n\"You done now, kitten? OK, lemme say just one thing, then you can whale away on me long as you like: truce?\"\n\nJustine nodded warily, although she wasn't going to hit him again; that was kind of pointless.\n\n\"OK Minou, first things first; I do trust you, I always have; you my boo'sha', but you a nice person, and you can't think like Carlo; I know you'll feel sorry for him one day an' let slip what you got, an' he ain't gonna hesitate to strip you bare and lose it all again; 'long as he din't know, you safe; Carlo don't care for no-one save hisself, and if you in the way, then you in the way, and he fix that. I kept shut because I rather have you mad at me than try an' find your body. Look what he did to get what you had in the loft; you think he gonna stop there if he find out what you really got? There, now I said my piece, so you go ahead an' take a shot if you-all think that's what you wanna do.\"\n\nJustine frowned at him as she chewed over his words, but when she grinned at him he relaxed.\n\n\"So, just how much money are we talking about here, Johnny?\"\n\nJohn stared sightlessly over her shoulder as he mentally tallied what he knew about, and what he remembered from back when Justine was still just a young teenager.\n\n\"I don' rightly know the full in and out, but I remember there was somethin' like fifteen million dollars cash, an' a bunch of investments, stocks and bonds, that kinda stuff; it's prolly grown some since then, people we got investing' and watchin' it for you know how to do the best they can to make sure you ain't shorted ...\"\n\nJustine slumped back in her seat. She had how much? That was preposterous, that couldn't be right; why, they lived in just an ordinary apartment in an ordinary apartment building, with ordinary neighbors, people who kept cats, and grew petunias in window-boxes; people with the kind of money Johnny said she had stashed away lived in swanky Central Park West apartment complexes, not Mineola. She caught Johnny's expression and straightened-up.\n\n\"Johnny, there must be some kind of mistake; Mom told me everything was gone, that all daddy's business stuff was taken away by the IRS, that there was nothing left...\"\n\nJohnny nodded.\n\n\"I know, Minou, she had to do that to protect you; fewer people knew about what was waitin' for you, safer you'll be. Mama was keepin' you safe, baby-girl, an' me an' all the others we did everythin' we could to make sure it stayed that way. When we get to Lafayette, you gonna find out the rest, ain't no more I know.\"\n\n*\n\nJohnny had stripped off the vinyl wrap designed to make his classic Blazer look nondescript, old and beat-up, and it now gleamed in its original dark glossy blue paintwork, so anyone looking out for the two of them in the dull, muddy, rust-speckled white over sky blue Blazer Johnny had driven away in wouldn't connect the young couple in the pristine car it now was. Johnny had looked far and wide to find someone who could make an authentic 'Road-Rat' look wrap, and they had done a good job. \n\nNow, with the wrap off, Justine in a long red wig, with concealer hiding the worst of her bruised face and black eye, and Johnny's dusty-blond crop now a dark, spiky mop, there was nothing to connect them to the pair the Ribeiro brothers were undoubtedly looking for. \n\nThe 1,400 mile drive to Lafayette took almost four days; Johnny kept to I- 81 and I-59 Southbound, with periodic long, circuitous detours to circle around and pick up the interstates much further along, just in case anyone was following them. It was the longest drive Justine had ever been on. The long days on the road and short, restless nights in grimy back-road motels were getting on her nerves, so it was with a long sigh of relief that she finally started seeing the signs for Lafayette. \n\nJohnny, however, showed no sign of stopping, and Justine, by now sick of the road, the car, and the constant traffic, finally asked him where in the Sam Hill they were going, the damned turnoff was right there, and she wanted a shower, a proper shower, in a real bathroom, one where the floor didn't come alive every time she switched on the damned light!\n\nJohnny grinned at her.\n\n\"Baby-girl, we can't stay in no slick city hotel or motel; if Mister Jerome was right, those people got someone in the police precincts watchin' out for signs of us; they see us use credit cards anywhere, or even ATM's, they'll know where we are, and they gonna be on us like flies on shit. They prolly know by now I come-up from New Orleans, so they gonna figure we headin' back there jest as fast as we can, which is why we come this way.\"\n\nHe patted her knee reassuringly even as he threaded through the building traffic. \n\n\"Minou, I know someplace real safe, don't you worry, ain't no-one comin' out there less'n they itchin' to get their heads blown clean off. You just set a while longer, we be there soon, an' you can have as many showers you think you need; don't see why though; you look an' smell jest fine from where I'm sittin'!\"\n\nJustine couldn't help but grin back at his lecherous grin, and reached over to punch him in the upper arm.\n\n\"Ow, what that for?\" he exclaimed.\n\n\"That's for dragging me off on this wild goose chase,\" she pouted, then smiled and reached over again to squeeze his crotch, making him buck, and the Blazer swerve, before he recovered. \"And that's for later, Country-Boy, long as I get my shower first!\"\n\nJohnny circled around Lafayette proper so they were approaching from the West, through farmland and smallholdings until he swung off the main Ridge Road and followed a dusty blacktop to the end and onto an unmarked winding country road, to finally swing into the dooryard of a small, frame house. The house looked neat, clean, and deserted, but Justine could feel eyes on her, and when she made as if to step out of the vehicle, Johnny stopped her.\n\n\"Nuh-uh, you-all just set a moment, real quiet-like. I'll just get out- \"\n\n\"Heh! Qu'est que tu veux?\" (Hey! What do you want!!?) shouted a voice from nowhere Justine could tell, and Johnny froze, his hands above his head as he slid out of the car.\n\n\"Tante Amice? C'est moi, Jean-Basti\u00e8nne, ou est tu?\" (Aunt Amice? It's me, Jean-Basti\u00e8nne, where are you?) called Johnny grinning even as he turned around slowly to face the house. A muffled curse came to Justine's ears and the screen door banged open to reveal a small, wiry old woman training a twelve-bore on them.\n\n\"Jean-Basti\u00e8nne? What the hell you done to your hair, boy?\" grinned the old lady, \"I like to have shot your fool head off you didn't call out, and who that in the car? She with you? You married yet? Both of you better come on up, don't stand aroun' like idjits!\"\n\nJohnny grinned as he handed Justine down from the car and herded her inside the small house. Once inside, Johnny made the introductions.\n\n\"Justine Pellini, meet ma tante Amice, she my maw-maw half-sister. Tante Amice, meet my girl, Justine; we headin' home, but we got to be in Lafayette in two days, 's why I'm here. We on'y need to stay couple days, we take care of our business in Lafayette, then we headin' down the bayou; we got trouble on our tail, an' I was figgerin' to let them boys chasin' us get a taste o' real Southern hospitality, you get my drift?\"\n\nAmice grinned as she reached up to tweak Johnny's ear.\n\n\"I do indeed, yes I do! Kind of makes me wish I was forty years younger so's I could help make them fellers real welcome! You a bad boy, an' you a lawman, Jean-Basti\u00e8nne, but you still my petit boug, and your maw-maw skin me she find out I don't help you along your way. What you want fust?\"\n\nJohnny grinned impishly, looking once again like the boy she used to punish with clockwork regularity, but could never stay mad at.\n\n\"Justine a city-girl, she think she need a shower, and I could sure use some of yo' hush-puppies an' maque-choux right now, an' if you got any rice an' gravy...?\" \n\n*\n\nJustine luxuriated in the hot shower; Amice's single bathroom was small, but very clean, and she had no hesitation in stepping into the shower cubicle and washing off three days of road-dust and the memory of those grime-pit motels they'd been sleeping in on their way here. She was in a world of her own, reveling in the steamy heat of the small cubicle, but still felt no surprise when a pair of large, warm hands slid around her waist and cupped her breasts.\n\n\"John, no! Your aunt's in the next room!\" she half hissed, half giggled, then groaned softly as his stiff cock parted her buttocks as it slid into the cleft between them.\n\n\"Stop it, Johnny-Bear...\" she moaned, even as she pushed back against him, wriggling and rubbing her soft, springy buttocks against his hardness.\n\n\"Why should I, when I already got these...\" Johnny murmured in her ear, rubbing his palms over her taut nipples, the sensation sending a bolt of pleasure through her. Justine gasped again when Johnny's thick erection slid between her thighs and rubbed along her swelling labia, and she instinctively thrust her rump out as she spread her legs. Johnny grazed and nibbled his sister's neck as he slowly slid into her, grinning into her neck as she softly chanted \"omigod, omigod, yess, yess, omigod...\"\n\nJohnny was just getting into his stroke when Justine abruptly pulled away from him, shocking him into stillness.\n\n\"Hey, what I do?\" he asked, then grinned as she turned and smiled up at him.",
        "\"Like this, Johnny-Bear, I wanna do it like this...\" she whispered, before kissing him as she wrapped her arms around his neck.\n\nJohnny took the hint, and lifted her by her thighs, slowly sliding once more back into her. Justine gasped at the renewed invasion, and clamped her lips over his even as she wrapped her legs around his waist, holding herself onto him as he leaned her against the wall. \n\nTime and the real world seemed to disappear as John and his beautiful sister fucked so energetically, humping against the wall of the shower while the hot water cascaded over them both. Justine was the first to break; orgasm boiled and flared inside her, tensing her arms and legs into an unbreakable lock around her Johnny, her small teeth biting into his shoulder almost deep enough to draw blood in the extremity of her pleasure as she whined and shuddered in one gigantic wave of pleasure after another. \n\nAs Justine came, her pussy tightened around Johnny's swollen cock, stilling him inside her even as he gave a deep, sighing groan, unable to hold it back as her pussy milked him of his spunk, long, thrilling spurts of spunk boiling out of him and powering deep into her. \n\nHow long Johnny held her immobile against the wall neither of them knew; both of them were too wrapped in each other as they thrilled in the aftermath of their stupendous climaxes to even sense the passage of time, until Justine eventually broke their long, soulful kiss to squeeze Johnny's sensitive cock with her pussy, jarring him back to reality.\n\n\"Oh my God, what was that?\" she breathed. \"Because I want more, soon! Johnny-Bear, I always loved you, now I know why! That was just the most unbelievable...the rest of my life, Johnny-Bear, that's how much I want us to be like that, the rest of my life, you hear me?!\"\n\nJohnny squeezed her soft buttock even as he kissed her tenderly on her cheek, her eyelids, the tip of her nose, and finally her lips.\n\n\"That's all I ever want it to be too, Minou; I cain't promise it always will be, but I swear on mama's heart I'll always try to make everything as perfect for you as it is right now, Baby-Girl; I love you, Minou-minou, an' I always will.\"\n\nJustine's eyes glowed at the love and commitment she heard in his voice, saw in his eyes, felt in his arms around her, even as tears gathered in the corners of her eyes. To hide her momentary confusion, she slapped his bare backside and smiled up at him.\n\n\"And now look at the mess you made of me! I need to shower all over again, Johnny B, so either make yourself useful and do my back, or make yourself scarce; land sakes, what must your aunt be thinking right now?\"\n\nJohnny pulled her closer for one last kiss;\n\n\"Tante Amice gone for a little walk; she know you an' me got things to say an' do, she givin' us a little privacy, but she back soon, so I guess I better go. Hurry out, Minou, I get antsy I don't have you a-hangin' on my arm an' bein' all pushy, an' nosy an' inquisitive like...\" \n\nJustine hit him in the face with a soapy washcloth for that, and Johnny had to contend with her peals of laughter as he washed the suds out of his eyes.\n\n*\n\nDinner with Amice was a slightly unsettling experience for Justine; when Amice saw her for the first time without the red wig, she did a classic double-take, before taking her by her chin and gently turning her face to one side to study her profile, clucking at her bruises, and raising an enquiring eyebrow at Johnny.\n\n\"You look kinda familiar, child; I know your folks?\" she asked. \n\nJustine looked at Johnny for a cue, but he just nodded resignedly, so Justine had no choice but to tell her.\n\n\"You must mean my...my mother; she lived down in, in...Houma before I was born; she...\"\n\nBut Amice touched her finger to her lip, silencing her with a smile.\n\n\"I reckon I do know your mama after all; I remember she was a pretty gal, you favor her more'n a touch. You an' Jean-Basti\u00e8nne happy?\" \n\nJustine nodded, flushing, her hand creeping across the table to join with Johnny's. Amice smiled at that, reaching out to flick Justine's hair back from her face.\n\n\"I can see why he with you. Long as he happy, an' you happy with him, nothin' else matter; too many people worry 'bout too many little things an' forget the things 'sposed to matter the most; long as you an' Jean-Basti\u00e8nne happy, and you sure you OK with what you doing, t'ain't my place to go castin' no aspersions on what you doin'. My petit-boug, my Jean-Basti\u00e8nne a naughty li'l fiend when he small, he try my patience 'most daily, but he still a sweet boy, an' he happy, so I'm happy, and ain't no-one gonna say nothin' different in my hearin'; jest you make sure his maw-maw know the why's an' wherefore's first.\"\n\nAmice patted Johnny's hand where it lay over Justine's.\n\n\"Some folks down home may not take too kindly to what you doin', always 'sposin' you get careless an' they find out, so yawl gonna need her on your side if things get rough with the family. At least you got one thing in your favour; most everyone in the family got a sof' spot somewhere for Jean-Basti\u00e8nne, an' all the gals gonna be real protective 'bout him; he either their big brother or they're his big sisters, so I don't see no real problems that way.\" \n\nJohnny sat up talking with his Great-Aunt after Justine, pleading tiredness, had retired for the night, mostly catching-up with the family, hearing the latest gossip, and the usual tale of births, marriages, and deaths (\"hatches, matches, an' despatches\" in Amice's words), until conversation wound down and there was only one thing left to discuss.\n\n\"So why you runnin', Jean-Basti\u00e8nne? \" asked Amice, \"it ain't your way; I remember what you like as a boy, what kind o' young man you was, an' what you like as sheriff's deputy, an' I never know you run from nuthin'; how big this trouble you-all got follerin' you, an' I shore hope t'warn't you put them bruises on that li'l girl's face, 'cause if it was...?\"\n\nJohnny related the whole story, Carlo, what he'd done and who he owed money to, how they'd come looking for their money and found Johnny, the threats, and what he'd done to neutralize their threats, and how deadly the fallout from that encounter could be. \n\nAmice was grinning broadly by the time he'd finished.\n\n\"They sound like they not in a forgiving mood; mebbe you an' tante Maigrette's boys lead 'em on a little fool's errand through the Atchafalaya; we got more kin than freckles on a ugly kid through there, lotta swamps, sloughs, an' wild country to git through, they could just be gone and no-one ever hear from them ever again...?\" she said, sounding hopeful, but Johnny shook his head regretfully.\n\n\"Won't work, tante Amice; they disappear, more gon' come lookin' for evens; no, we gotta throw a scare in them that keep them far away for good, we got to make them so mad they big bosses come down here to do what their hired hands couldn't, an' that when we really show them what bayou folk are like when they pissed-off enough to push back.\"\n\n\"Sounds like you been giving this some thought, petit-boug, you-all mebbe want to share a little?\" mused Amice. Johnny grinned up at the rafters as he gathered his thoughts. \n\n\"Two days time we got to be in Lafayette; Justine's inherited a powerful amount o' cash from her daddy, and she got trustees she didn't know about, so she got to meet them an' tell them what she wants doin' with all that money, while I got to get them to find me a way to cut her loose from that no-account husband of hers so's he don't grab any o' what she got; then we got to run down the bayou 'fore them fellers trailin' us know where we gone for certain. I figure to take them down to Ghost Lake, long way from the families, but somewhere the boys know real well; once we got them there, I reckon we'll show them what it mean to come bargin' in where they ain't invited...\"\n\nAmice smiled grimly.\n\n\"You go rest now, boy; I think I'll have a talk with tout tes oncles, 'specially Lubin an' Audhemar, mebbe see what your cousins Louis-Marc and Jean-No\u00e8l doin', too. Looks like you plannin' big fais-do-do; I jes' wonder if them city-boys gonna 'preciate all the effort you-all puttin' in!\"\n\nJustine was fast asleep when Johnny came into the small bedroom, but she woke as soon as he tried slipping into bed next to her. Her warm little bottom slid into him as he spooned her, and she took his arm and silently draped it around herself.\n\n\"You're aunt's real nice, Johnny; she knew right away, but she didn't say anything...\"\n\nJohnny breathed in the scent of her hair as he held her just a little closer, smiling at his memories of his aunt.\n\n\"Tante Amice my maw-maw's baby sister, but she just like Maw-maw; sweet as pie, gentle as they come, an' hands like two by fours when she need to hand out a lickin'! She whupped me good all the time when I was little boy, mostly for gettin' Od\u00e9lie an' M\u00e9lette, her gran'daughters, mussed up in the swamp catfishin' or stickin' bullfrogs, or buyin' them hot cinnamon candy an' getting' it everywhere, seemed like, an' bringin' 'em home all stained an' sticky; they 'bout same age as me, so we allus out an' about together, but she look after me real good, too; she little but she brave, she face down rival 'shiners all the time when she an' noncle Zack working the still an' they wanna come in an' bust it up. She got four sons an three daughters up an' down the Atchafalaya, and she real good with that ole twelve-gauge. Her real name 'Armentine', but don't you go callin' her that, she still holdin' it agin her daddy for doin' that to her...\"\n\nJustine grinned to herself as she listened to Johnny's accent thicken and become tinged with the musical French-Creole accent the closer he got to home; now he wasn't doing it to entertain her; now he was back in his country, and his old life was coming back to him, and she liked that. \n\nJohnny in New York had always seemed like a restless bear prowling its cage in a zoo; he was too big for the small world he'd accepted for her sake; out here, where he could see, hear, and smell his old life catching up with him, he was once again becoming who he really was, and she was excited to see that. Johnny-B, her Johnny, was only part of the whole man; now, perhaps, she'd get to see him become Jean-Basti\u00e8nne Deaucette once again, and the thought of that filled her with clean excitement and a thrill of anticipation. The cut-down version of himself he'd become in order to care for her was wonderful enough, so she could scarcely imagine what the whole package was like.\n\nThinking thoughts like this, with the sound of crickets chirruping in the still heat of the night, she fell asleep, feeling safe and comforted at the thought of Johnny and his mysterious kin stepping-up to save her.\n\n*"
    ],
    "authorname": "beachbum1958",
    "tags": [
        "brother",
        "sister",
        "incest",
        "drugs cartel",
        "carlo & gina",
        "trustees",
        "angie & tommy",
        "cassie matthews",
        "moonbeam"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/down-at-the-twist-and-shout-ch-02"
}