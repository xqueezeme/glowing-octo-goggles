{
    "title": "TRANCE, Inc. 21",
    "pages": [
        "Chapter One\n\nThere were four of us in the elevator.\n\nAcross from me, leaning back on the low railing, was Victoria. Despite the long, fraught night, she still looked ravishing in that skintight purple dress. The deep V-line offered up the enticing curve of her tits, and her olive skin seemed to glow in the dim light. Her dark eyes were settled with interest on the older man standing across from her.\n\nHe was smiling pleasantly, and wagged a finger at her as he spoke. \"I thought I recognized you,\" the man said. \"All it took was seeing you all together just now to really put the puzzle pieces together. How do you know my girls?\" He glanced from Victoria to Amber to me and back.\n\nI still can't believe it, I thought, staring back blankly.\n\nCharles Evans was the easygoing businessman who Victoria, Amber and I had met at the rooftop bar of the Bowman Hotel, all those weeks ago. The man who had shared half a dozen stories of world travel with his wife, and who had gone our entire conversation without once mentioning his daughters. Victoria had had time to give me a single, significant look \u2014 silently apologizing for not being able to warn me \u2014 before a cowed Matthew summoned the elevator and our little group shuffled in.\n\n\"Well,\" Evans said, tugging at the lapels of his heavy woolen jacket and quirking his mouth in a wry smile. \"What a pleasant surprise. I'm afraid I really must apologize for my behavior downstairs. Usually I'm not such a ferocious attack dog. It's been a stressful night. Waking up after a few hours of sleep to a mysterious phone call. Being invited to surprise Carmen and Day on their birthday. Dealing with last-minute flight details and then not being able to even nap on the jet down the coast.\" He paused, then leaned in towards Amber and gave her a stage whisper. \"Mostly,\" he said. \"It's nerves.\"\n\nMy girlfriend, who had been holding back in the corner with folded arms, arched her eyebrows. \"Is that so?\" she asked. Her voice was cautious, and I could tell she was having the same problem I was. It was difficult to reconcile this man with the image I'd built up in my head of a strict, distant and uncaring parent.\n\nEvans nodded earnestly, then smoothed back his hair and straightened his jacket again. \"It's been almost a year since I've had the chance to see my girls. And they rarely seem interested in talking, or even texting. I miss them a lot, and I want to make a good impression. Do you think they'll be happy to see me? You did say this was a surprise, after all...\"\n\nThe goal was to put Seth off-balance by bringing the twins' parents into play, I thought anxiously as we slowly came to a stop. But what if all I did was surprise myself?\n\nDing.\n\nThe golden glow of sunrise crept through the huge windows and across the main floor of Seth's penthouse. The party was clearly over, but the warm light illuminated the leftovers. By day, the space looked less alluring, mysterious and inviting, and more like a fancy penthouse that someone had converted into a nightclub. The expensive, artful decor clashed with remnants of the teenage rave, contributing to a discordant feeling. The big, open room was empty, too, which gave the stacks of red plastic cups, rows of bottles and smattering of streamers an odd sense of loneliness.\n\n\"Well...\" Evans said, nodding to himself as he led the way out of the elevator. \"Certainly doesn't look quite the same as the last time I visited. Of course, it was his parents who were throwing the party that night, wasn't it? And the Torrances are usually quite restrained.\" Taking off his overcoat and draping it over a nearby bar stool, the man seemed unfazed by the evidence that his daughters had been taking part in underage drinking and festivities. Charles Evans seemed ready to continue monologuing, but it was at that moment that a biting voice cut through the air and echoed quietly in the still air.\n\n\"What the hell are you doing he\u2014 Wait, Chuck is that you?\"\n\nMy gaze swung up instinctively and darted across the room. Anger flared in my chest in response to the hated voice.\n\nSeth stood at the top of the staircase, leaning over the thin railing and peering down into the foyer. He was shirtless, and had changed into a pair of red joggers. Even in the relative dimness, I could see he sported the ripped physique that his chiseled jawline and cheeks advertised. In the hall behind him, for just a moment, I thought I could hear the soft sound of retreating footsteps.\n\n\"Seth, my boy!\" The twins' father seemed unsurprised to meet the tousle-haired teenager half-undressed. Then, I realized that as far as \"Chuck\" was concerned, Daisy was dating this douchebag. She had never made their breakup officially known to her family. \"Throw on a shirt and get down here! Where are the girls? Chance and Victoria said that you were in on my surprise visit, but it looks like they were just pulling my leg.\"\n\nI couldn't help but feel a surge of triumph as Seth visibly grimaced, glanced back down the hallway, and then seemed to weigh his options.\n\n\"Surprise!\" the older man added brightly, almost as an afterthought, and I didn't bother to stifle my laughter.\n\nI could see Seth's eyes narrow as he shot me a barbed glance and came to a decision. \"Just give me a minute, sir, and I'll go... wake them up.\" The teen gave a laugh that sounded a little forced, and then disappeared back down the hallway.\n\nAs soon as he was gone, Victoria shot me a look and took several quick steps to my side.\n\n\"I'm sorry I didn't get a chance to warn you,\" she muttered, glancing back over her shoulder at the twins' father. \"I didn't realize who he was until we were halfway here. Then, I didn't want to freak him out, so I just kept up the story that we're friends with his daughters.\"\n\nI nodded several times, still processing. So much had happened in the past few hours that I was having trouble keeping it all straight. \"Right,\" I agreed. The lie came rushing back. \"We're friends of the twins, and they've been feeling guilty about missing family Thanksgiving this year. So we stole Daisy's phone and invited him down for a special family birthday surprise.\"\n\nI could still hear the sleepy excitement that had been in Mr. Evans's voice when he answered the call from Daisy's cell. He'd been confused when he realized I wasn't his daughter, but when I laid out the lie he responded with enthusiasm. Apparently Mrs. Evans was away for a week-long \"shamanism retreat,\" but Mr. Evans was delighted to be included. In the moment I'd had other things to worry about, but now it struck me as one more note off key. This was a man so desperate to see his daughters that he would fly down, no questions asked, after a midnight phone call from a stranger.\n\nSomething doesn't add up here, I mused.\n\nAmber's heels clicked up beside Victoria and the buxom blonde rested a hand on the brunette's shoulder. \"No hello, Vi?\" she asked, but her smile said she was just ribbing her companion.\n\nVictoria flashed a smile, and reached up to squeeze Amber's fingers. \"I'm so happy you're back with us, babe,\" she said. \"But right now we need to focus on Carmen. Daisy's home free if we can just get her sister out from Seth's influence.\"\n\nI'd laid out the situation for Amber on the drive over from the Academy, and my girlfriend murmured her understanding. Her sky blue eyes were determined. Before she could answer, though, a thoughtful voice interrupted.\n\n\"They'll be okay with the surprise, won't they?\" Charles Evans's voice was less certain than before, and as we turned to face him he gave us a shrug and a sheepish chuckle. \"Sorry if I seem tense,\" he said. \"But I'm sure the girls have told you how they feel about our relationship. I'm excited that you invited me, of course, just nervous that they'll be less happy than one might hope.\" The man's chuckle turned into a pained smile. \"And, after all, a father's only wish is to make his daughters happy.\"\n\n\"Don't worry, Mr. Evans,\" I said. I tried to give him an encouraging look. \"When Daisy finds out why we called you, she'll be so happy you showed up.\"\n\nDaisy's father squared his shoulders and gave a firm nod. Then, he reached out his hand to shake mine. \"You'll have to forgive me,\" he said, furrowing his brow. \"I know Victoria, of course, and if I remember right your girlfriend's name is Amber. But...\" He shook his head. \"Your name, again...?\"\n\n\"Chance!\"\n\nIt was Daisy's voice that interrupted this time, and all heads swiveled in her direction. The crimson-haired 19-year-old was standing at the top of the stairs, with Seth drawn up behind her, and there seemed to be genuine pleasure in her voice. \"How sweet of you to invite our father!\"\n\nI tried not to let surprise show on my face as the teenager flashed us a bright grin and then scampered down the stairs, barely holding onto the railing. Turning the corner at the bottom, Daisy practically ran across the expanse of hardwood floor and came to a breathless stop in front of her father.\n\n\"Hello, Daddy,\" she said in a quiet, syrupy sweet voice.\n\n\"Hello, sweetheart. Happy birthday.\" The man seemed uncertain what to do, but the girl preempted him by dashing forward the last few feet and wrapping him in a hug. Mr. Evans grunted softly, then hesitantly hugged her in return.\n\nI was as surprised as he was until Daisy caught my eye.\n\nWhat's happening? she mouthed, holding onto the hug for several extra seconds.\n\nI widened my eyes, then glanced back up the stairs. Seth stood on the landing, watching intently with Carmen by his side. \"Daisy,\" I chided, holding up my arms and interrupting the picture-perfect father-daughter moment. \"Don't overwhelm the guy. Get over here and share the birthday cheer.\"\n\nThe girl's father gracefully surrendered her, and when she wrapped her arms around my chest Daisy squeezed extra tight. I had to muffle a groan as pain tweaked through my side. But, if I was worried about how the young woman had held up under a night with Seth, her voice dispelled my fears.\n\nIt was quiet but calm. \"Is Seth still on the stairs?\" she muttered.\n\nI gave another glance. \"Yep.\"\n\nSeth and Carmen were descending, and the young man was still shooting suspicious looks in our direction.\n\n\"You said you wouldn't come back until you could save Carmen. Do you have a plan?\" Daisy pulled away and let her hair fall across her face. It obscured her expression from the others, and the look she gave me was concerned.\n\nI nodded, and spoke quickly. \"Use your dad to distract Seth. Get Carmen by herself. I know what I need to say to talk her out of it.\"\n\n\"Are you sure?\" The girl seemed to be taking father's unexpected arrival in stride, not even stumbling. Victoria stepped forward to embrace the teen, but Daisy kept her forest green eyes on me.\n\nI gave her a brief smile, pushing down my uncertainty. \"It's worked twice so far,\" I told her. And it's all we've got.\n\nThe redhead nodded as her arms encircled Amber's neck, and she finally looked away. The girl raised her voice, then, speaking for our audience.\n\n\"What a great surprise!\" she said, stepping back from the blonde and gesturing at all of us. She turned to her sister and her fake boyfriend, who had just made their way to the group. \"Carmen, Seth... Isn't this great?\"\n\nSeeing all three of them side by side, it was evident that both of the girls wore Seth-sized tee shirts. Beneath, they had nothing on but sleeping shorts that left bare plenty of pale thigh. Seth, himself, had thrown on a thick blue bathrobe over his bright red joggers.\n\nThe snake was the first one to answer. \"Yeah,\" he agreed. \"Totally. Isn't it always lovely to have surprise visits from relatives?\" There was no particular tone to the words that made them biting, but they had an undertone of insolence.\n\nAs well as I could, I ignored Seth and watched Carmen closely, trying to catch her eye. She seemed fine, and I had to remind myself that she wasn't acting of her own volition when she blatantly ignored the rest of us and approached her father.\n\n\"Hi, Dad,\" she said quietly. \"It's nice to see you.\"\n\n\"Hey, baby girl,\" her father answered, putting a hand on her shoulder. He hesitated, then took it away as she stepped back.\n\nDamn. Now, Daisy's greeting seemed almost effusive.\n\nThere was an awkward silence that Seth filled with that irritating voice of his. \"So, Chuck,\" he said, raising his eyebrows and folding his arms. \"How do you know this gang?\" He reached out and slipped an arm around Daisy's waist, pulling her closer. The girl murmured softly and rested her head on his shoulder, rubbing a hand across his chest. His eyes flicked over to meet mine, and a bit of a sneer curled the corner of his mouth.\n\nDespite my hatred for the teenager, I had to keep my expression composed. It's all an act, I reminded myself. Just an act.\n\n\"Well, it's a funny story actually,\" the older man answered, oblivious to the power games at play. \"Say, do you have any coffee in this place? I didn't get much sleep. Let's have a sit down with everyone and catch up.\"\n\nI saw the instant of struggle in Seth's face. Then, his bright smile flashed innocently. \"Sure thing, Chuck. Carmen, why don't you go start coffee for us? Day and I will help your dad find a seat in all this mess.\" He laughed, giving Mr. Evans a conspiratorial look. \"Should I worry about you judging me, sir? I hope not. I know the place is a mess, but I was throwing the party for our girls, after all.\"\n\nWhile the twins father chuckled good-naturedly, Carmen turned and headed toward the bar. Beyond it, I saw a doorway that I hadn't noticed last night. I assumed it led deeper into the apartment, probably to the kitchen.\n\nIf Mr. Evans was surprised at the sight of Seth giving his daughters orders then he showed no sign of it. In fact, the man had been glancing from Carmen to Day and back with an expression of uncertainty. I had to be grateful he was so worried about making a good impression with his daughters. If he were less desperate to see them, he might be more suspicious, and we didn't need him asking uncomfortable questions.\n\nIt was a dance, now. A secret chess match between me and Seth, with both parties keeping Charles Evans in the dark. I seemed to have figured correctly when I guessed that the twins' parents would be some of the few people Seth would feel trapped into the responsibility of entertaining. Anyone else he might throw out, and us along with them, but even this slick, playboy douchebag couldn't escape his girlfriend's parental unit.\n\nSeth seemed about to speak when Daisy raised her head from his shoulder.\n\n\"Seth, baby?\" she said, eyes wide and innocent. \"Why don't we take my dad out onto the balcony? You're right, it's a mess in here, and the view outside will be much nicer. The sun's coming up, and it's probably not too chilly.\"\n\n\"Great idea,\" Seth agreed. He leaned down and kissed her deeply. When he broke it off, I managed to keep my clenched fist down at my side. \"A great idea,\" he repeated. The handsome teen flashed us all a guilty smile that I thought seemed more than a little smug when he met my stony glare. Then, he gestured across the living room and toward the balcony. \"Out we go.\"\n\nSeth and Daisy led the way, with the girl's father starting up the story of how he'd met the rest of us. Amber, Victoria and I were following close behind, but I hung back.\n\nShe gave you an opening, I thought, staring at Daisy's back. Carmen is alone. Seth is occupied. This is when you slip away. So, shooting the group a final, parting glance, I turned and hurried in the opposite direction.\n\nI'm coming, Carmen! I silently called ahead of myself. Everything is going to be alright!\n\nIn my heart, though, I steeled myself for the encounter to come.\n\nChapter Two\n\nMy suspicions had been accurate. The door behind the bar opened into a large dining room with a kitchen beyond. Through the open doorway, I could see the red-haired figure of my 19-year-old lover, moving with quiet assurance. It was obvious that Carmen been here before, and I felt an unexpected twinge of uncertainty. Seth had known the twins for years. TRANCE had spent dozens of hours conditioning their minds to be his, forever. Did I even stand a chance?\n\nBut my feet hurried me ahead, around the dining table and to the doorway, where I hesitated.\n\nWhile I looked on, the girl opened a cupboard, removed a package of coffee grounds, and then stood on her tiptoes to reach for something on a higher shelf. Her shirt rode up, so I could see the smooth, enticing skin of her midriff. The teen gave a muffled sigh, then fell back on her heels. She glanced around the open cupboard door.\n\nCarmen's green eyes were sparkling when they met mine, but there was no hint of the sexual allure that usually sparked between us. \"Are you just going to stand there watching?\" she asked, a teasing grin on her red lips. \"Or can you get over here and reach the French press for me?\"\n\nI took a breath.\n\nIt's all an act, I thought. And this time the words brought me no comfort. Carmen was acting like we were friends because that was what Seth had told her to do. Her smile was a mask. It made me wonder, with a flash of cold discomfort, how much he'd been able to screw with their heads in a single night. There's really no time to lose. \n\nI took several steps closer, then hesitated. Easy does it, Chance.\n\n\"Carmen,\" I said, holding up my hands. \"I don't know what's going through your mind right now, but I need you to listen to me...\" While I spoke, my brain scrambled. I knew that what I said next had to resonate with her on a profound level. I had to call up her true feelings, remind her of her real identity so that she could break through the false persona that Seth had imposed on her mind.\n\nTo help Victoria, I'd reminded the woman of her deep-seated sense of responsibility and caring. With Amber, it had been her loving nature and open heart that had let the truth in. But what would I say to Carmen...?\n\nThe girl was watching me though, with a strange look, and I knew I didn't have any more time.\n\nI just had to go for it.\n\n\"Do you remember me?\" I asked, no longer trying to hold back the worry from my voice. I took a slow step forward. \"Really remember me, and who we are to each other? I need you to remember, Carmen. I need you to remember that Seth isn't your sister's boyfriend. We came here for the party last night to break up with him, and he used trigger phrases implanted by TRANCE to bring you over to his side.\"\n\nCarmen's eyes were narrowed, darting between me and the door. She had taken a step back, edging around the counter in the center of the kitchen. \"What are you talking about?\"\n\n\"Please,\" I said. \"You are a determined, passionate and independent young woman. You're not some maid for Seth to order around. You don't even like the guy. You went upstairs last night with every intention of tearing him a new one because he tried to mess with your sister.\"\n\nI was watching Carmen's face, and I could already tell there was something wrong. Something was missing, from my words or my delivery or her reception of them. All I knew was that I wasn't getting through to her.\n\nCrap. I had to trigger a powerful memory. Something meaningful that would bring up the emotions and the will strong enough to break Seth's spell.\n\n\"Remember when you tried to trick me into thinking you were Daisy?\" I asked. I was channeling the last vestiges of confidence into my voice, forcing myself to sound calm as I felt my opportunity slipping away from me. \"You couldn't fool me then, and you can't fool me now. This isn't you, Carmen. Please. This isn't you.\"\n\n\"Chance.\" The girl's voice had a bit of an edge, and her vibrant green eyes had hardened. \"I don't know what you think you're talking about, but I need you to explain yourself. What do you mean 'Seth isn't Day's boyfriend' and 'you don't like the guy'? They're in love. All three of us are in love. We've pretty much been living here for weeks. Seth is my boyfriend as much as he is Daisy's. We just haven't told my parents about it because they'd freak out. Your girlfriend is one of my closest friends, but my relationship is really none of your business. And what the hell are 'trigger phrases'?\"",
        "She had maneuvered around to the far side of the marble-topped kitchen island, abandoning the coffee. I could see the tenseness in her body, and it hurt to know that I was the one making her feel uncertain and afraid.\n\nIt's for her own good, I forced myself to remember. She has to know the truth. It's the only way to help her break free. \n\nThen, before I could open my mouth again, I suddenly realized the missing piece. Too late, I remembered that Victoria and Amber had both already been entranced when I'd called up their deepest reserves of willpower. They had already been deep within their minds, close to their subconscious, and just needed a little nudge in the right direction to unlock their wells of resistance. In the moment I'd not given that much weight, because Lassiter hadn't been hypnotized when he resisted Shrike at the board meeting, but the corporate executive must have been a special case. He hadn't been psychologically conditioned the same way my girls had been, so all he had to resist was a surface-level command, not a deep-rooted subconsciously-trained desire to obey.\n\nDespite Seth's influence, Carmen was certainly not entranced. In fact, she was very much awake, and her growing hostility was proof that this wasn't working.\n\n\"Well?\" the teen demanded. Her hands were poised on the counter, like she was ready to dodge if I came around either side. \"What do you have to say for yourself? And why did you invite my dad here, anyway? On my birthday? You really think Day and I wanted to see him? As if!\"\n\nI looked away and drew a breath. When I looked back into her face, I knew my eyes were determined. I'm sorry, I thought.\n\n\"I don't know when lies he's been telling you,\" I said, \"or what ideas he's planted in your mind, but Seth and your sister aren't meant to be together. And you certainly never wanted to be roped into some bizarre love triangle with that prick. Your dad is here to help us. He's here to distract Seth, so that I could get you alone. And, since you asked, this... this is a trigger phrase.\" I stared into her eyes, imagining that my own will was diving into her eyes and holding her in place. \"Are you my horny little nympho slut?\"\n\nCarmen furrowed her brow. Her lashes fluttered and she pulled in a soft gasp.\n\nI held my breath.\n\nThen, her eyes flashed with confusion and irritation. \"What are you talking about?\"\n\nI actually stepped back in dismay, my mind racing as, for the first time since I'd known her, Carmen was completely unaffected by the TRANCE trigger. \"Wait...\" I held up a hand, trying to stop the girl, who had straightened abruptly and was flushing with anger.\n\n\"What did you just call me?\" Carmen's voice was rising, and my nervousness with it. If anyone was still inside, they would hear her and come running.\n\nHow...? I started to wonder, but the answer was right in front of me. In my bumbling rush, I had forgotten that Seth could easily have done what I always should have. Daisy's ex had used his master trigger phrase to remove from Carmen's mind any commands that weren't his.\n\n\"Carmen,\" I was holding up my hands, but I knew there was nothing I could do to stop her if she wanted to get away from me. \"Please listen, Seth is controlling your mind. You think you know what's going on, but\u2014\"\n\n\"Be quiet!\" The voice that cracked through the air wasn't loud, but there was a firmness and urgency to it that wouldn't be denied.\n\nTwo sets of eyes swiveled to take in the person who stood in the doorway.\n\n\"Daisy!\" I blurted. \"Where's Seth?\" I glanced past her nervously then rattled on, shaking my head. \"Never mind. Listen, I couldn't do it, Day. I tried on Carmen what I did with the others \u2014 calling on their core identity to help them break free with their deepest reserves of will \u2014 but I can't... She doesn't remember anything that's happened between us. And Seth removed her other triggers, so there's no way for me to get her to stop and listen.\"\n\nI expected Daisy's face to fall, but she seemed to brush aside my flurry of words like a pesky mosquito. \"Chance,\" she ordered, looking straight past me. \"I need you to stop Seth if he tries to interrupt. Other than that, please get out of the way. You and Victoria have said enough to tell me what needs to be done.\"\n\n\"What are you going to do?\" I asked as the tousle-haired redhead sashayed into the room and toward her twin. I turned, unable to stop my eyes from devouring her slender, confident figure.\n\nShe rounded the kitchen counter, paused, then said without looking back. \"I'm going to remind my sister who we are.\"\n\n\"Daisy?\" Carmen asked, her eyes wide. She looked frightened, but also suspicious, like she couldn't tell if she wanted to scamper away from us or march up to her twin and demand an explanation. \"What's going on? What is Chance talking about? What are you talking about? I don't need to be reminded of anything.\"\n\nThe girl had taken several steps back, and flinched when she bumped into the refrigerator. She started to sidle sideways, but that was when her sister took several swift strides and put out a hand, her arm blocking Carmen's way. Daisy's palm smacked against the fridge, loud enough to startle Carmen back. She froze as Daisy leaned forward with one hand on the appliance, trapping her back against it.\n\n\"Carmen...\" Daisy murmured, her tone quiet and singsong when it drifted to me across the room. She bent in, so close that the two girls could have kissed, and heat coiled in my belly.\n\n\"What's going on, Day?\" Carmen sounded hesitant, but no longer angry.\n\n\"Hush, babe...\" her twin murmured. \"Just listen to me for a moment. I need you to do that for me. To trust me. Okay?\"\n\n\"Of course I trust you,\" Carmen protested weakly. \"But...\"\n\n\"Hush...\" Daisy whispered. She laid one of her fingers across Carmen's lips, and the other girl fell silent, staring into her sister's eyes.\n\nI swallowed down my arousal, then remembered that I was supposed to be standing guard. Hastily, I glanced back through the open doorway into the dining room and across the big, empty hall beyond. Far away, I could see Seth outside on the balcony. He had his back to us and seemed to be explaining something to the rest of the group. There were wide, confident gestures involved. While I watched, though, the teenager glanced around as if he was searching for something.\n\nBehind me, I could hear Daisy's voice twining through the air, weaving a honey-sweet tapestry.\n\n\"Just focus on my words and let everything else fall away...\"\n\nSeth tensed, then spun around to stare through the glass.\n\n\"Don't judge. Don't react. Just let me speak, and you can feel inside of you if what I say is the truth...\" \n\nWe locked eyes, and I prayed that Seth wouldn't think anything was amiss. I knew he couldn't see past me, so he had no idea that Daisy had joined us. It was simply a matter of whether he trusted me around Carmen without him present.\n\nApparently not.\n\nThe blue-robed teenager had whirled angrily to the rest of the group. He gestured sharply, and then strode away from them and out of my view. He was heading towards the balcony doorway.\n\nI spun back around. Did Daisy have enough time for whatever stunt she was trying to pull? Did she even have the slimmest chance of saving her sister?\n\nCarmen, no longer keyed up and ready to bolt, had relaxed back against the fridge and her expression was almost serene. She stared into her sister's face with unwavering focus, and I suddenly wondered if Daisy had mesmerized her sister with just the intensity of her deep, emerald gaze.\n\n\"I love you, Carmen,\" Daisy said, brushing a fingertip across her sister's cheek and tucking a loose hair back behind her ear. \"You're not just my sister. You're the closest person to me in my life. Until we met Chance and Victoria and Amber, you were basically my whole family. Truth?\"\n\nCarmen's mouth worked, and then she said quietly, \"Truth...\"\n\nGod damn it why is this so hot...? I was forced, once again, to shove away the rising arousal that jostled for my attention.\n\nDaisy's head bobbed in a tiny nod. \"I will always be there for you. No matter if we disagree. No matter if we get catty. No matter if we fight about drugs or about boys. I will always have your back. Truth?\"\n\n\"Truth...\" Carmen copied Daisy's small nod.\n\n\"I love you.\" The words were simple, but they felt both powerful and intimate.\n\nCarmen didn't have to wait to be prompted. \"Truth...\"\n\n\"You love me.\"\n\n\"Yes.\"\n\n\"You trust me.\"\n\n\"Yes...\"\n\n\"Can I trust you?\" Daisy's hands were on her sister's face, holding her in place and staring deep into her eyes. Her slender fingers stroked her sister's temples.\n\n\"Yes.\" Carmen's breath came in quick, shallow gasps.\n\nA primal part of me desperately wanted them to kiss.\n\n\"Because you love me, and you're part of me, and you will always tell me the truth.\"\n\n\"Always...\"\n\nDaisy paused for a split second, as though to force her sister to truly consider what she was about to say. \"Carmen, do I love Seth?\"\n\nSilence.\n\nFar away, I could hear the sliding glass door onto the balcony squeal in its tracks like it had been shoved open. Seth was coming.\n\nCarmen's body stirred, and she blinked several times.\n\n\"Do I love Seth?\" Daisy repeated, her own gaze unwavering.\n\nCarmen shuddered more visibly and then stilled. \"No...\" she whispered. Her brow creased slightly.\n\n\"Do you love Seth?\"\n\nA slight shake of Carmen's head. \"No...\"\n\n\"Are you ready to finally be free of him?\"\n\nCarmen hesitated, and my breath caught. Daisy had built everything up to this point, and it all hinged on what her sister was about to say. But before the girl could answer, another sound cut through the kitchen.\n\n\"What the hell are you doing?\" Seth strode in through the open doorway, shouldering his way past me.\n\nI stumbled, actually caught off guard. I'd been so focused on the scene before me it was like I was entranced as well.\n\nThe angry teenager came up short. \"Carmen, why haven't you finished the coffee already? And Daisy? You said you were going to get dressed and instead I find you in here looking about to rip your sister's clothes off.\"\n\nDaisy turned, startled, and I saw Carmen's eyes fasten on Seth. They widened.\n\nDid Daisy do it? I thought desperately. Was Carmen's truth strong enough to break Seth's will?\n\n\"Well?!\" Seth demanded. \"Explain yourselves!\"\n\nHis words slashed through the kitchen but Carmen's answer, though quiet, filled the space far more completely. \"No.\"\n\nSeth's face went pale, and I couldn't tell if it was with surprise or rage. \"No?!\"\n\n\"No, no and no again, you prick!\" Carmen's voice was clear and hard. She took a step forward and raised her chin. Her eyes bored into the face of the man who had tried to steal her free will.\n\nSeth scowled, waving his hand angrily. \"Shut up,\" he snarled. \"You're making a scene. Do as I say.\" I could tell from the way he emphasized the last words that they were a trigger phrase, but Carmen simply ignored him.\n\nWith several quick strides she pushed off the refrigerator and crossed the kitchen.\n\nHer palm hit Seth's cheek with a ringing smack and the young man stumbled, his head jerking sideways.\n\nMy eyes widened and I gasped in surprise, but my heart soared upward in a victorious swoop as Daisy's ex swore and pulled himself back upright, fingers rising to a flaming red cheek.\n\n\"You fucking cunt!\" Seth's voice was pure venom and his hand lashed out like a twisted claw to drive her away.\n\nBut Carmen was already out of reach. Already, she was turning and dashing across the kitchen. In an instant, her arms were around Daisy's neck and she was hugging her sister tight while her words tripped and stumbled out in a quiet, breathless stream.\n\n\"Ohmygod Day I'm so sorry I couldn't stop him! I just wanted to give him a piece of my mind but he was waiting for me. Just had this evil smile and he started talking to me and he said something and I couldn't resist...\" She ran out of air and simply clung to her sister.\n\nDaisy held her close and ran her hand up and down her twin's back.\n\n\"What did you just say?\" Charles Evans's voice was brittle and sharp as broken glass.\n\nSeth and I turned back to the doorway. Carmen and Daisy's father filled it, and he was glaring at the young man with a dangerous tightness in his face. Victoria and Amber stood behind him, peering over his shoulders. They had arrived just in time to see Carmen slap Seth across the face and then dash back to her twin's embrace.\n\nTime seemed to come back into motion with the discordant sound of Seth's angry, spluttery voice. \"Chuck!\" Seth protested, arms waving. \"You can't seriously be blaming me for this? Aren't you going to do something about your daughter's behavior?\"\n\nI saw Charles Evans actually blink in surprise at Seth's temerity. Then, his eyes hardened. \"I will not.\" he said. \"I'm not sure what you've done, young man, but if it's bad enough to upset my daughter then I promise you you deserved that and more.\" He took a step forward, and for a moment he appeared to loom over the angry teen. \"And if you want to avoid the worst thrashing of your young, foolish, party-hardy life, you'll stay away from my girls from now on. You won't even think about them or their behavior, not ever again.\" His fist was clenched by his side. \"No one uses that word on my little angel.\"\n\nSeth was shaken. I saw it in his eyes as he looked away from the older man's stern glare and into my face. The kid had been beaten, and he didn't know how to handle it. Then, the shock started to turn into something else. Something dark and roiling and ugly that made him grimace with the meanness of it.\n\nShit, I thought.\n\nSeth wasn't about to go down quietly. If his fantasy got torn to shreds, everyone else would suffer the consequences. Mutually assured destruction. The teenager pushed himself up on the counter, grinning blackly at Daisy's father.\n\n\"Your little angel,\" the teenager declared, \"is a pornstar.\"\n\nDouble shit.\n\nI saw Carmen glance back, his voice cutting off her flow of words. Daisy's face, too, registered shock and dismay.\n\nSeth had turned halfway around to watch his words hit the twins, and he smiled wickedly. I could practically see the glee in his eyes, the feeling of power as he tore apart the facade that had kept a fragile family together. It made me sick and angry, but with the kitchen island between us I couldn't just take two steps and clock him across the jaw.\n\n\"Both of them are, actually.\"\n\nSeth's head whipped back around. \"What?\" His voice was like a gasp of pain.\n\nCharles Evans impaled him with a lethal stare. \"Both of my daughter's work in the adult film industry,\" he said, his tone cold and clinically precise. \"They perform for Teragon Regional and National Corporation for Entertainment, Incorporated. A terrible name, but I've heard it's a thriving business. I've been told that Carmen and Daisy work hard and have bright futures if they choose to apply themselves in that direction. While I can't say it's the career I would have picked for either of them, if it makes them happy I stand behind my girls one hundred percent.\"\n\nSeth looked like he couldn't decide whether to be stunned into silence or grotesquely fascinated. \"Chuck,\" he said finally, and there was a slimy smirk growing on his face. \"Are you saying you've watched your own daugh\u2014 aghk!\"\n\nCarmen and Daisy's father didn't have a kitchen island in the way.\n\nNot long after, when six of us crowded into the elevator, Mr. Evans stood back in the corner, shaking his hand slightly and muttering to himself.\n\n\"No one even calls me Chuck, you little shit.\"\n\nChapter Three\n\n\"Dad?\" Daisy's voice was quiet.\n\n\"Yeah, sweetheart?\"\n\nWe were standing on the sidewalk. Seth's building was behind us. By now, the sun had risen completely and was shining down the empty street.\n\n\"Could you go back to the apartment without us?\" Daisy looked apologetic, but her lips were pressed together in a firm line. Her arm was around her sister, and Carmen's head was resting on her shoulder.\n\nMr. Evans gave his daughter a long, quiet look. Then he sighed. He looked disappointed, but resigned. \"I'm sorry for coming all the way down here without checking in. I just wanted to make sure you were okay. I'll go back as soon as my pilot has had a chance to rest.\" He hesitated, then added. \"Just... promise me you'll stay away from that scumbag from now on?\"\n\nDaisy's eyebrows shot up and she seemed about to say something, but then she changed her mind. Instead, she just nodded once. \"We promise,\" she agreed.\n\nHer father nodded along.\n\nThere was a moment of uncomfortable silence.\n\n\"Alright then.\" Charles Evans rubbed his hands together and took a step away. \"It's been a pleasure seeing my girls. It's been too long. Your mother will be jealous of my special visit, but I'll tell her you two are doing well and she'll be tickled.\"\n\nI got the feeling that the man was being genuine. He would leave the City after flying down in the middle of the night, just to make the twins feel better. In fact, the more time we spent with their father the more glad I was that I'd had my suspicions about their parents. It seemed like he wasn't even going to force his daughters to talk to him about the stunning revelation of a few minutes ago \u2014 he knew that his daughters were pornstars, and he didn't seem to care. He wasn't going to bring it up if they didn't.\n\nMr. Evans was turning away when a quiet voice interrupted.\n\n\"Dad?\"\n\nHe froze, halfway turned around, as Carmen lifted her head. Then, she crossed the distance between them in two quick steps and hugged him, burying her face in his chest.\n\n\"Thanks, Dad,\" she murmured, voice muffled by his body and the thick jacket.\n\nThe look on Charles Evans's face was a heartwarming blend of uncertainty, trepidation, and joy. Then, his arms wrapped softly around her body. He looked like he was being supremely gentle, as if he was worried she would melt or crumble if he held her too close. \"Happy Birthday, baby girl,\" he said, kissing the top of her head.\n\nA couple minutes later, the man was staring off down the street as the rest of us moved in the direction of the car. He seemed to be thinking, and I hesitated before hurrying back toward him. I glanced back and saw my companions waiting for me, but I gestured for them to go on.\n\n\"What is it, Chance?\" the man asked. He was standing with his hands in the pockets of his coat, staring down the street into the golden glow of the sun.\n\nI hesitated, then blurted. \"Why do they hate you?\" Oops. I hadn't meant to say that out loud, but the question slipped out when I opened my mouth.\n\nI rushed to fix my gaff. \"I mean, not hate, maybe. But... You know. Why do they feel so... alienated from their family? You don't seem so bad. In fact, standing up for your daughters back there? You probably deserve a medal.\"\n\nThe older man paused for a moment before answering. He seemed to be examining my face. He glanced away. \"My wife and I had four boys before the twins came, so we thought we knew what we were doing. We knew the activities and the sports and the schools. We knew how to groom little boys into responsible and successful young men. Then, when we got two little girls we were thrown for a loop. They weren't always interested in the same things, weren't always suited to the same parenting method.\"\n\nCharles Evans sighed. \"We were already getting a little older, I was coming up on retirement, and we'd always wanted to travel. Our two girls were always so poised and thoughtful, perfect little angels, which meant it was easy to justify. They didn't need us. Not much, anyway. If we provided them with a stable home, a good education, and the resources to succeed, then success was inevitable...\" His tight smile was pained. \"By the time we realized our mistake, it was too late. They were too independent to fully respect us as parents, too used to doing things their own way to accept our guidance without question. And they were just hitting the teenage years when stubbornness and rebellion really blossom. I can't tell you how much I regret not being there for them, but now... I would do anything for them. I just hope they know that, that I can show them I want to build a better relationship.\"",
        "I hesitated, then glanced away toward the group. They were following Victoria toward her car, huddled close together. A blonde, two redheads and a brunette. Four stunning beauties, finally safe and sound. \"I'm no expert in parenting,\" I said, turning back, \"but I know your daughters. I know they appreciate what you did today more than you understand, and probably more than they'll tell you.\"\n\nCharles Evans seemed to examine me again, then nodded slowly. \"Thank you, young man,\" he said. \"I'm glad that my girls have someone like you to watch their back.\"\n\n\"Always,\" I said, without thinking, then bit my tongue. I'm not sure that line fit with my 'concerned friend' persona.\n\nBut if the twins' father noticed, he didn't say anything. \"And I'm glad you had me fly down to help out, this morning.\"\n\nHelp out? I had invited the man down as a \"birthday surprise,\" but it seemed as though he'd seen through that disguise as well. What with that, his treatment of Seth and his revelation that he'd known all along about the twins' occupation, Charles Evans had proven to be quite a different man than I expected.\n\nA genuine good Samaritan, I mused.\n\nI glanced back again. The others had all climbed into my car, with Victoria at the wheel, and suddenly I realized we would be leaving Mr. Evans standing here on the street without a way to get to Starside, where he would apparently be staying.\n\nI shot a look at the man. \"Sorry about not giving you a ride... Can you, uh, get an Uber or something?\"\n\nHe snorted, and even gave me an amused smirk. \"I managed to get down here in a couple of hours with about thirty seconds of planning. I think I can make it a couple blocks.\"\n\n\"Fair point,\" I muttered.\n\n\"We'll speak soon,\" he promised, clapping me on the shoulder and then turning up his collar. \"Right now, it's a beautiful morning for a walk.\"\n\nI nodded, wordless, and watched him go.\n\nHe had quite the spring in his step.\n\n* * *\n\nI wasn't sure what to expect when we got back to my apartment.\n\nHad Shrike's hitmen already visited? Would we arrive to find that the door had been smashed in, like it had been at Lassiter's? Would our possessions be scattered and shredded on the floor, like in the movies?\n\nBut my fears were for nothing. Not a speck of dust seemed out of place.\n\nSo, we trooped inside and gathered in the living room. Carmen and Daisy sat together on the couch, Daisy's fingers running through her sister's hair with a fluid, soothing rhythm. Victoria took one of the reading chairs and I took the other. Amber glanced around, then stood behind me with her hands resting on my shoulders.\n\nThere was more space on the couch, but I didn't mind the way her fingers were gently massaging, working at the soreness and kinks in my muscles. When I eased down into the cushions I felt my entire body relax, and a sense of relief radiated out from my side. At some point I'd forgotten about the pain and about my wound, but the entire right side of my torso had actually been tensed up in preparation against it.\n\nNo one spoke for some time.\n\nOur body language radiated a sense of exhausted relief, like a team of athletes who had just emerged from a grueling contest. Our faces were drawn, though, and our collective mood seemed dampened by the events of the night.\n\n\"So, how did you do it?\" It was my voice, and my gaze was directed at Daisy.\n\nThe 19-year-old girl paused, then shifted and tucked a veil of crimson hair back from her face. She didn't need to ask what I meant. Daisy had broken free of the TRANCE conditioning all on her own, before I'd even figured out it was possible. What's more, she had been the one to save her sister when all hope seemed lost.\n\n\"Soon after we met,\" the teenager answered, \"and you told us about what TRANCE had done to us, I realized that there was a lot of potential danger if just anyone could come up and hypnotize us.\" Her cheeks flushed a little and a smile tugged at her lips. \"I'm fine with you doing it to me. It's actually really hot... And I was okay with it happening at the studio, because that was just business as usual. It made the time pass quicker, and made me enjoy the work more. But if things got out of hand, or the wrong person got their hands on the trigger phrase...\"\n\nCarmen shuddered. \"Not good,\" she muttered dully. The girl had been unusually quiet all through the car ride back, and I didn't blame her. Carmen knew first hand what that was like.\n\nNow, Daisy stroked her shoulder and nodded agreement, continuing her explanation. \"I didn't bring up my concerns, though, because I didn't want to seem like a worrywart, and I wasn't even sure if it was possible to do anything about it. Only it was.\"\n\n\"But how?\" I insisted.\n\nVictoria gave me a fond glance, and Daisy rolled her eyes.\n\n\"Patience, baby,\" she said lightly. \"I'm getting there.\" The girl waited for me to settle back before nodding slowly to herself and going on. \"Meditation,\" she said. \"Dozens of hours of meditation, over the course of weeks. Every morning when I did my sit, I would work on traveling deep down inside of my self and testing my boundaries. I would visualize myself disobeying behaviors that I knew I'd been programmed to take, and slowly built up the mental fortitude to do it. Eventually, once I'd broken through in my mind, I knew that I was safe. If I had to, I could break free and resist my triggers.\"\n\nI furrowed my brow. \"But how did you know? It was all just in your head.\"\n\nThe girl smiled, like she was explaining something simple. \"Action is just an offshoot of thought,\" she told me. \"Once you've decided on the truth, your actions will follow inevitably.\"\n\nWe all sat with that nugget of wisdom for several, quiet moments.\n\n\"Why didn't you say anything once you had your breakthrough?\" Victoria asked, leaning forward wearily and running a hand through her long, dark hair. The beautiful brunette looked exhausted, and it made me remember that most of us were pushing twenty-four hours without sleep. \"Not that I'm trying to blame you for anything,\" she hastily added. \"Just, curious...\"\n\nDaisy shrugged. \"There always seemed to be something else going on. Some drama, small or big, which took precedence. Or a celebration, of whatever size, when I didn't want to ruin the mood by talking about how we might need to protect ourselves against having our free will stolen away.\" She snorted. \"If I've learned anything these past few weeks, though, it's that there's never a perfect time for anything.\"\n\nTruer words have never been spoken... I thought, reflecting back on my own experience. How many times had I been burned because I was waiting for things to turn out, or get better on their own. That's over now, I thought, and knew it was true. Gone was the Chance of the past. After last night, I was someone else. A man of action.\n\n\"What will you do about your father?\"\n\nIt was Victoria again, and I wondered why she'd taken up the interrogator's banner. After a moment, though, I thought I understood. She was asking the hard questions, the ones that should be dealt with right away, and she was taking it on herself to spearhead the discussion.\n\nBecause of course she was.\n\nDaisy chewed her bottom lip nervously. \"I think we should talk to him,\" she said, but she sounded uncertain.\n\nCarmen, though, pushed herself upright and blew out a deep breath. \"We're going to talk to him,\" she declared, nodding firmly. \"Soon.\" She glanced around, taking her sister's hand and squeezing firmly. \"It's obvious that things are over with Seth and Daisy, and if I've learned anything it's that our dad is smarter than we gave him credit for. I don't quite know where we stand, but I think it's time we gave him and mom another chance.\"\n\nDaisy was watching her sister in surprise, but I felt a glow inside. It was a warm flame of pride and love. The sentiment seemed to be shared by the others, because Victoria was nodding with approval and when I glanced back I could see the shining encouragement in Amber's face.\n\nIt seemed like we would be ending on a positive note, because Carmen yawned abruptly and her slow, sleepy stretch broke any lingering tension. Her yawn infected the others, and I knew it was time to crash. If there was anything else that needed to be dealt with, we could handle it after everyone had taken a couple hours to recharge.\n\n\"Who's on the couch?\" Victoria muttered, ever the responsible one. \"If we want to get any real rest, we'll need to split the available sleeping space.\"\n\nI offered immediately. \"You four can take the bed. I'm going to stay up for a bit, anyway. There's some stuff I need to think about.\" As much as I wanted to lay down and pass out \u2014 on a bed, a couch, or the floor \u2014 I knew that there were too many thoughts racing through my mind. At the moment, even this much exhaustion couldn't knock me out.\n\nThe brunette looked like she wanted to protest, but Carmen forestalled her by getting to her feet. The teen made her way past the coffee table, eyelids already drooping at the thought of sleep. She leaned in and kissed me, deeply, and I felt the warmth flare hotter in my core.\n\n\"Love you, baby,\" she murmured, pulling away and brushing her hair back. Then, she turned and walked past the couch, touching Daisy's shoulder on the way. She disappeared into the darkened hallway.\n\nHer twin came to her feet as well. She glanced after Carmen, back at us, and then followed. In the other room, I heard the sound of a body flopping down onto the mattress.\n\nVictoria smiled wearily. \"To be honest,\" she said quietly, \"I think I'm about to pass out as well.\"\n\nThe brunette and I rose at the same time, and I felt Amber's hands slide off my shoulders. Like Carmen, Victoria stepped around the coffee table and approached me. Her curves felt soft and wonderful against my body, and my palms instinctively stroked down her sides. The fabric of her dress was smooth and alluring under my fingertips.\n\nLater, I promised myself, I'm going to do something about how hot this woman is.\n\nThen, Victoria pulled me even closer. Her breath was hot on my skin. \"I love you...\" she murmured into my ear. I remembered the promise she made last night, outside of Terra's place, and the warm, satisfied feeling in my chest expanded. She stepped back, brown eyes shining with a smile, and attention shifted to Amber. \"Come to bed when you're ready, gorgeous,\" she said. \"I'll make sure the kids don't hog all the space.\"\n\nAmber's soft laugh was a pleasure to hear. \"Alright,\" she answered. \"I'll be along in a minute.\"\n\nIt was quiet when Victoria left. I turned to face my girlfriend, and even though we were standing so close together I could reach out and touch her I felt like there was a vast chasm between us.\n\n\"Are you alright?\" It felt like the first time in a while that we had been alone together. Really alone, with no one else around and no one in my girlfriend's head but her. The second question bubbled up before she had a chance to answer the first. \"Can you forgive me?\"\n\nAmber's pretty face creased in consternation. \"What do you mean?\"\n\nMy words came out slowly, fumbling. I had to force myself to say them, because I was so embarrassed and, I now realized, ashamed. \"If I had trusted you, none of this would have happened. If I'd just come to you and spoken up when I first learned things were going wrong, we might have been able to prevent all of this. Daisy would have known to share her breakthrough. Shrike and Clayton wouldn't have been able to split us apart, or turn us against each other. Seth wouldn't have gotten two seconds of pleasure from the twins, let alone a whole night...\"\n\n\"Stop.\"\n\nAmber's finger was on my lips, hushing me. I shivered at her touch, and vividly remembered Daisy's finger on Carmen's mouth just this same way. I stared into her bright blue eyes, waiting as she gathered herself.\n\n\"All this talk of what 'might' have happened, or what 'could' have happened,\" my girlfriend said. \"It's just beating yourself up over things that are already done. The only thing you can do is go forward and do better. That's what we have to do, if we really care about each other. Okay?\"\n\nHer question floated in the air between us, but all I heard was 'if we really care about each other'.\n\nShe won't even use the word now... I thought, and I knew it was time for that to change.\n\n\"I love you,\" I murmured, feeling her fingertip brush against my lips. I couldn't believe it was the first time I'd told her out loud.\n\nAmber's expression froze, and I wondered abruptly, sickeningly, if I'd somehow ruined everything. Do I even deserve to say that, after what I put her through?\n\n\"I've been waiting for you to finally man up and tell me.\"\n\nI blinked at her in surprise, but her giggle ruined the teasing rebuke.\n\nHer brilliant smile broke through. \"I love you, too, silly.\"\n\nRelief and a rush of affection hit me at the same moment, overwhelming me. The words tumbled out now, a rushing torrent. \"I loved you first. I loved you before all the drama with the twins. And I wanted to tell you but I couldn't say it. Then, after it came out that I'd said it to Carmen, I knew I'd hurt you. I didn't know if I could make it right, or if I could still tell you without bringing the wound to the surface. I didn't know how it could possibly work out, and I didn't know how to say it to someone who I thought was sneaking around behind my back.\" My shoulders sagged. \"I'm so sorry I didn't trust you.\"\n\nMy girlfriend brushed the backs of her fingers gently down my cheek. \"You'll do better,\" she said, with a little grin. \"I believe in you. Living with four smart, social women, you'll figure out how to address your emotions.\"\n\nI wanted to smile back, but now that my guilt and worry had been raised it wouldn't be put to rest until the final question forced itself between my lips. I swallowed. I reached up and took Amber's hand gently, holding it in both of mine and staring at it while I asked, \"I just don't see... how can you love me.\" My thumbs made little circles against her skin, and I still didn't look up into her face. \"I'm not some Prince Charming. I... I did to you what Seth did to the twins. What Clayton was going to do with you, and Shrike. We only met because I wanted to test the TRANCE trigger. You wouldn't have even spoken to me if I hadn't, and we certainly wouldn't be here where we are today...\"\n\nI flicked my eyes up, and was surprised by what I saw.\n\nAmber's eyes were calm, unconcerned, and she was watching me with an indulgent smile.\n\n\"What?\" I asked, almost indignant. I'm baring my soul here...\n\nBut my girlfriend just huffed a soft laugh and leaned in closer. She gently kissed the tip of my nose, and I felt her eyelashes flutter against my skin. When she pulled back, I was having a hard time staying disgruntled. She gave me a candid look. \"People meet in all sorts of ways, babe. At a party, in a class, on the subway... We happened to meet through work. And because you thought I was so hot you had to have me.\" Her blue eyes sparkled, and her full lips made a sultry smirk.\n\nI wanted to argue, but her mouth was so distracting.\n\n\"Usually, people don't know right away when they meet that special someone. How could they? And, too often, people judge others by their covers. You judged me by my cover. I judged you by yours. If things had stayed the way they were, we would never have gotten together. And yeah... maybe you were a little extra persuasive when you asked me to go out with you. But you care about me now. You fell in love with me and I fell in love with you. Regardless of anything else, those feelings are real.\"\n\nI swallowed around the lump in my throat.\n\n\"If I hadn't met you, I would have been sold to that businessman as mindless, bimbofied arm candy. The twins would be stuck with that trust fund prick. Victoria would go back to work and spend meetings on her hands and knees under the conference table. Circumstances change, and you've changed all of our circumstances for the better. People change, and you're changing for the better, too. Maybe you're not perfect, but you're good. And you're better than you were. I love that, and I love the you you're becoming.\"\n\nI'm not usually one for outward displays, but I felt a prickle as tears of exhaustion and tension and profound relief welled up in my eyes. \"Thank you.\"\n\n\"Get some rest, baby,\" Amber said, softly stroking my cheek. \"I'm going to do the same. Don't worry about any of that anymore.\" She kissed my forehead, then walked to the door. Leaning back, she tossed me a pretty smile and a kiss. \"Thanks for taking the couch. My hero.\"\n\nShe left me with a little smile on my face.\n\nNonetheless, I was still awake ten minutes later. I sat on the couch with my elbows on my knees, chin on my fists, staring at the wall. I couldn't seem to quiet my thoughts. Whenever I closed my eyes, something else would rise to the surface.\n\nI wondered if Clayton and his men had yet arrived to take Mia away. I decided I didn't want to know.\n\nYou did it for your harem, I thought, clenching my jaw. You did it for the women you love. You would do anything for them. You would kill... My mind might have drifted down that deep, dark rabbit hole but I was interrupted by a sound behind me.\n\n\"Chance?\"\n\nI turned in surprise.\n\nDaisy had slipped out of the bedroom and across the hallway. She was leaning against the door frame, barefoot and wearing only a pair of comfortable cotton underwear and a lacy, mismatched bra that I thought might be Carmen's. She seemed hesitant to enter.\n\nI shifted to one side of the couch and patted the cushions next to me. \"Can't sleep?\" I asked, as she came around the sofa on quiet feet.\n\nThe girl shook her head, then let herself fall back onto the pillows and copied my posture. She stared at the wall for several seconds, then whispered. \"I almost envy her...\"\n\nI hesitated, then asked, \"Carmen?\"\n\nDaisy nodded, slowly. \"I know it's wrong...\" she murmured. \"But I almost wish that Seth had hypnotized us both. She was trapped, but at least the programming made her enjoy it. She didn't even realize anything was wrong. Me though... I had to pretend, for the whole night... I had to act like...\"\n\nThe teen trailed off, but didn't pull away when I put one arm around her slim shoulders.\n\nI didn't speak for several minutes, just shared the silence.\n\n\"There's never a perfect time for anything,\" I finally said slowly, echoing her words from earlier. My heart pounded against my ribs. \"So I'm saying this now, and I'll say it again later. And any time when you might need to hear it. Thank you for saving your sister when I couldn't. Thank you for going through what you did, because if you hadn't been ready then I would never have gotten Carmen out of there. Thank you for being brave enough, strong enough and caring enough to walk through fire for us.\" I paused. Somehow, it never got easier to say for the first time. \"I love you. For all those reasons and more I love you, Day.\"\n\nThe girl was silent for a moment, and I felt a jolt of worry pass through me. Then, the 19-year-old's shoulders shuddered, and I realized that she was crying, gently and silently.\n\nWhen the teenager finally did fall asleep, it was with my arms wrapped around her on the couch, her back against my chest and our bodies slid together like puzzle pieces. Her last words before she drifted off had been carried on a sigh of exhaustion as she kissed my forearm and settled back against me.\n\n\"Good night. I love you...\"\n\nThose words were the silent lullaby that played in my mind until I fell asleep.\n\nChapter Four\n\nTwo months later...\n",
        "Finally, I felt like I could relax.\n\nAs I danced back to dodge a spinning kick arcing towards my head, I felt my breath catch and then fall into a familiar rhythm. Maybe I was crazy, but my daily training sessions with Terra had come to feel like one of the few times when I could let myself go. My eyes were locked on the woman's face, seeking the slightest hint of an opening, or an indication of what she had planned.\n\nI threw an exploratory jab and she batted it away without even a blink.\n\nThings at home had been a whirlwind recently, full of nonstop changes that made it almost impossible for me to slow down. When I was here, I couldn't think about anything else. If I did, I was practically begging for the consequences.\n\nTerra's heel slammed into my chest, knocking me stumbling back and blasting the air from my lungs. I fell down heavily on my ass and sprawled onto my back, winded. Even though I wore a chest protector, I could already tell that her kick would leave a bruise. But instead of giving into the pain, I grunted and rolled to the side, getting space.\n\nTwo months ago, a blow to the torso would have sent me reeling, would have made me clutch at my side as a wave of pain and nausea swept through me from the wound in my belly. Today, though, I was stronger, tougher. I pushed away the discomfort, and felt a now-familiar heat pulse in my core.\n\nYes... It said, in a voice that no longer seemed feeble or newborn. Use the pain. Fight on! \n\nI shoved myself up on one hand and bounced sideways, circling my sparring partner.\n\nMy teacher couldn't hide her surprise.\n\nOnce, I had thought of that inner voice as Devil Chance: the dark side of my mind that told me harsh truths without regard for my feelings, the part of me that wanted to give in to my basest desires. But, ever since that night, I got the sense that that part of me had been changing. It was like some other aspect of my personality had been awakened, one that slowly subsumed DC and replaced him as I myself changed and grew. This new version drew power from the same source, but now my pains and fears and desires were just fuel on the growing fire.\n\nI shook my head, resisting the urge to wipe at the sweat that streamed down my face. My focus on Terra was absolute, and it was like her blow had awakened my newfound power. As if there was a new energy inside me, rising like a phoenix at the opportunity to unleash the full force of my effort.\n\nThis energy was all the more surprising because of my recent wound, which had somehow proven little more than an inconvenience. I hadn't even needed to visit the hospital. Terra had insisted on overseeing my entire recovery herself, reapplying bandages and her poultice of mulchy plant matter week after week until, when she removed the bandages for the final time, all I had left was a scar on my lower abdomen and one slightly higher on my back. The scars were still new, pink and bumpy and strange to feel on my body. But I'd done some research online and I thought that the scars would be less obtrusive over time.\n\nI'd gotten distracted again, and when Terra's kick lashed out she caught the back of my knee. My leg folded and I fell heavily onto my back. Unlike before, however, my teacher followed up on her advantage. Lithe and quick as a leopard she pounced, pinning me to the floor and getting me in a complex hold before I could recover my wits.\n\nWhen I tapped out, the woman slowly extricated herself, kneeling next to me on the floor and watching as I pushed myself halfway up. Stray hairs had escaped from Terra's ponytail, and she had started to breathe more heavily, like I'd actually managed to wind her.\n\nHer dark eyes watched me closely, and when our gazes met I could feel myself falling into them. They were dark, with crackles of heat in their depths. Those embers lit sparks in my core, and I felt my heartbeat quicken. My fingers clenched into the floor, and I almost couldn't tell if I wanted to fight her again or throw her down and fuck her like an animal. Luckily, I caught myself and tore my eyes away, shoving back the unexpected surge of feeling.\n\n\"Was that the last bout?\" I asked, trying to control my breathing. \"I should probably be going soon. Valentine's Day things with the girls. We have a lot of stuff planned.\"\n\nTerra was silent a moment, but when I glanced over she had looked away. \"Yes,\" she agreed. \"Well done. Your technique is improving, but you are still too easily distracted. And you should have been able to avoid my sweep. We will drill the necessary movements in your next lesson.\"\n\nI bowed from my knees, bringing my hands to my sides. \"Thank you, ma'am.\"\n\nTerra nodded, but still seemed distracted.\n\nI had made it all the way back to the car before I realized I'd forgotten something. Reaching over into the passenger seat, I snagged the small package and hurried back into the studio.\n\nThe woman glanced over and raised an eyebrow.\n\nShe'd been leaning against a wall and staring thoughtfully into space, but I didn't apologize for the interruption. Instead, suddenly much more nervous, I bowed again and held out the flat box in both hands. \"These are for you.\"\n\nWhen Terra made no move to take the gift, I straightened up and hastily explained. \"They're chocolates,\" I said. \"Not because it's Valentine's Day today, or anything... but I was in the store and I saw them and I wanted to get you something as an extra thank you for all you've done. I wouldn't get to go back and be with my girls today if it wasn't for you. You saved my life. By extension, you saved all of their lives, too. I just wanted to share the smallest token of appreciation for everything you've done.\"\n\nAbruptly, what I had thought was a nice idea seemed silly and meaningless. She saves your life and you offer her some chocolate-covered caramels? But my teacher's expression lightened, and I found myself breathing an inaudible sigh of relief. I didn't realize how worried I'd been that Terra would take my gift the wrong way.\n\nIt's not a romantic gesture, I insisted, despite the surge of heat I felt when I handed over the box and our fingertips brushed together.\n\n\"Thank you,\" Terra told me. \"For the gift, and because it makes me feel better about mine.\" The woman pressed her lips together in a look of concern as she walked around the front desk and opened one of the drawers. \"I know this is not traditionally a holiday for friends. And I hope you do not mind, but it might be seen as a re-gift. I found it in the glove compartment of my new car.\" She held up a small, white envelope. \"But I have not had a friend in some time. I am grateful to be yours.\"\n\nShe seemed anxious for me to open it right away, and when I did a small, heavy rectangle slid out into my hand. It was a credit card, navy in color with neat, block letters spelling out a name in silver along the bottom.\n\nLandon Shrike.\n\n\"It seemed only right and just that this man pay for what he did to you and your harem,\" Terra said, smiling. \"On your teacher's orders, take that and use it with abandon.\"\n\nThe woman seemed surprised when I hugged her, but then her arms wrapped hesitantly around my back.\n\nWe stood there for half a dozen heartbeats, and I felt a tension in Terra's body that was not resistance, but felt rather like she was holding herself back.\n\n* * *\n\nI smiled as I pulled to a stop in front of Starside. The engine rumbled contentedly, and I squeezed the steering wheel in response.\n\nMy smile broadened when I shot a glance through the windshield and saw that James was the current attendant. Leaving the keys in the ignition, I unfolded myself from the front seat and gave my new ride an affectionate pat on the roof. It was a sleek blue muscle car, a Christmas gift from the twins to replace my old SUV.\n\nAs James approached, the best expression he could manage was a sour smile. \"Did you have a nice outing, sir?\" he asked, coming around the hood.\n\n\"I sure did, James.\" I grinned, immensely satisfied and not trying to hide it. There's no better revenge than massive success. \"Just wait a minute before you take this baby down to the garage. I have something in the back seat.\"\n\nOpening up the rear door, I gathered up the armload of bouquets that I'd picked up on the way. I straightened. \"For the girls,\" I said unnecessarily, and James's sickly smile faltered and died. He just watched me sullenly as I flashed an easy grin, rounded the back and headed through the front doors.\n\nI didn't look back, and I couldn't find it in myself to register guilt for taunting him like I did. This man had treated me like a bum because he didn't like my car or the way I'd looked. Now, he wanted to be me.\n\nHow the turns table.\n\nI smirked as I stepped out of the elevator and sauntered to the end of the hall, pausing and taking a deep breath before I opened the door. \"Honeys!\" I called in a joking tone, backing into the apartment. \"I'm home!\n\nBut there was no response.\n\nI turned and my glance took in an empty living room. All that I saw, as I walked across to the kitchen counter and set down my four bouquets, was a folded piece of stationary that had been set in the middle of the granite counter top. I picked it up and read the front.\n\nMaster, it said, in Victoria's most flowing handwriting.\n\nA flush of blood tingled through my body at the word, and I suddenly knew that I was in for a wonderful, blissful surprise. I flipped open the card and read on.\n\nYour girls got into Bradford. It gave us an idea.\n\nRing the bell for your Valentine's surprise.\n\nXOXO\n\nA great big smile spread across my face. They got in! I thought, and I pumped my fist several times in silent exultation.\n\nThough the twins' parents had expressed their support of the teenagers' careers, they had been unable to hide their relief when the girls told them that they were leaving porn. When the teenagers had said that they wanted to go to university and have a normal college experience, the older couple had been ready to shell out a donation to some of the top institutions in the country just to get their foot in the door. But the twins had said they wanted to stay in the City, and Bradford University was the best liberal arts option available.\n\nThey're in! I was grinning like an idiot.\n\nIt wasn't like Bradford University was some school for the gifted. I'd been accepted there, after all. But even though the twins were both bright, with fine grades and test scores, we'd still had some concern about their history in adult film. Would the admissions people be as understanding as Mr. and Mrs. Evans?\n\nApparently they were! But even as excitement soared in my chest, I couldn't help but return my eyes to the rest of the message. Ring the bell... I thought. Oh!\n\nI crossed into the living room, reaching under the coffee table to retrieve the singing bowl that Daisy often used during her meditations. Carrying it back to the kitchen, I placed it on the counter top and struck it lightly with the small mallet.\n\nBonggg.\n\nThe sound echoed softly through the room. It felt like the very air was vibrating with the soft, clear note.\n\nNothing.\n\nMy gleeful expression faltered. Did I do it loud enough? I wondered. Do I need to\u2014 \n\n\"Oh wow...\" The words fell from my lips as my mouth dropped open. My eyes widened, drinking in the sight of the stunning, curvaceous brunette who strode from the hallway and across the floor toward me.\n\nVictoria wore a simple outfit, just a white blouse and a short, black skirt. But half of the buttons were undone, revealing tantalizing swells of cleavage, and her long legs seemed endless beneath the hemline. Her hair was up and back in a kind of casual office style, with artful wisps falling down to frame her face. She stopped in front of me.\n\n\"Welcome back, sir,\" she purred, batting her lashes behind a pair of glasses she definitely didn't need. \"I hope you enjoyed your workout. The school has been well in your absence. We've only had a few incidents crop up for you to deal with.\"\n\nAlright, I thought, picking up on her clue. A roleplay scenario. School-themed. I'm the principal. She's my secretary. And the others... \n\nI could only imagine.\n\n\"If you'd like to begin,\" Victoria said, sidling closer. Her lips were ever so slightly parted, but the way she spoke made me want to spread them wide and fill her mouth with the throbbing, rock-hard pole that now tented my workout shorts.\n\nI nodded. Is that even a question?\n\nMy sexy secretary's lips caressed my jawline.\n\nAnd so the fun began.\n\nChapter Five\n\nMy shirt and shorts, damp with sweat, had been tossed down as padding for Victoria's knees on the hardwood floor. The stunning brunette was at my feet, her hand stroking lazily up and down my pulsating shaft.\n\n\"Business as usual, Master...\" the woman reported, her lips caressing the head of my length. Her tongue flicked across my skin between the words, little flashes of sensation that made me weak at the knees.\n\nI groaned and tried to resist the urge to grab her head and sink my manhood deep down her hot, wet throat. She was teasing me, and we both knew it.\n\n\"Just a couple of students who need your attention,\" she murmured, one hand slowly circling around my cock and beginning to stroke. \"Some of our biggest donors need you to talk to their daughter. Apparently she spends more time gaming than studying.\" She made an O with her mouth and slowly slid the head of my shaft between her lips.\n\n\"Fuck...\" I moaned, unable to stop myself. My fingers tangled in her dark, lush hair.\n\nHer mouth came free with a soft pop, and she stared up into my face. Her dark eyes glowed with heat. \"There's one naughty little girl who was caught cheating, and she will have to be disciplined.\" Her hand stroked, and I felt my balls tighten until they ached. \"Finally, there's a cheerleader who wants to thank you for her scholarship.\"\n\nThe rules of the roleplay, I thought, filing Victoria's words away into whatever small part of my mind wasn't absorbed by the expert mouth that teased my raging hard-on.\n\nI grunted. \"Got it.\" Then, as Victoria's lips parted to respond, I slid my length neatly between them. The woman's eyes widened, and then she moaned, the sound vibrating up my shaft and into my core. Her dark eyes sparked with excitement.\n\nPleasure thrummed through my body as I stared down into her face. \"You know you want me, baby,\" I murmured.\n\nAfter months of reinforcement, I didn't even have to emphasize the trigger. Victoria's eyes glazed over, and her mouth began to bob up and down my shaft with a slow, adoring rhythm. Her face had gone blank, and her mind followed suit. I'd replaced the TRANCE triggers with some of my own, and I didn't hesitate to bring them out to play.\n\n\"Oh fuck Vi...\" I groaned.\n\n\"Mmm...\" Her head swirled around and around as she bathed my manhood with her tongue.\n\nThis particular phrase only put her into a light trance and heightened her sense of touch \u2014 it didn't get her nearly hypnotized enough to set any deep programming. Nonetheless, I found that, almost out of habit, I began to speak.\n\n\"You love to suck my cock.\"\n\n\"Mmm...\" She moaned in agreement, and electric bliss washed over me.\n\n\"You'll suck my cock anytime I want.\"\n\n\"Mmhmm...\"\n\n\"Sucking my cock makes you so horny...\"\n\n\"Mmhmm...\"\n\n\"It makes you so wet.\"\n\nVictoria's mouth slipped free of my length and her hand replaced it, running up and down my slick shaft. Her voice was burning with desire. \"Sucking your cock makes me so wet, Master...\" \n\nI groaned, my eyes threatening to roll back with pleasure. Fuck, this is so hot. \"It's like I'm stroking in and out of your tight, hot pussy...\"\n\n\"My tight, hot pussy...\" Her breath on my skin was a brush of heat before her mouth closed around the head of my cock once more. I felt the woman shudder and, beyond the alluring swell of her cleavage, I could see that she had taken her free hand and frantically slipped it up between her spread thighs.\n\nI struggled to contain myself as I continued. \"It's like my fingers are circling and circling your clit...\"\n\n\"Mmm...\" Victoria's arousal was rapidly reaching desperate proportions, and I could feel her nose against my skin with every long, smooth movement of her head.\n\n\"It's like I'm taking you, body and mind...\"\n\n\"Mmm...\" Her voice was a gasp as she came up for air. She moaned desperately. \"Body and mind, Master...\"\n\n\"Sucking my cock makes you mine...\"\n\n\"Mmhmm...\" She dove back, desperate to feel my pulsating length between her sculpted lips.\n\n\"Sucking my cock makes you cum.\"\n\nVictoria's mouth sealed around my length as she came, channeling every one of her moans up into my body and striking a chord across all of my pleasure strings at once. I felt myself fall back against the counter as I struggled for control, my palm pressing flat against the cool stone. As the woman slowly pulled back and my manhood slipped free, I took a step back and tried to center myself.\n\nThis was only the beginning. I couldn't tap out just yet. \"And... awake.\" I snapped my fingers, the word and the sound together lifting the trance from Victoria's mind.\n\nThe woman's lashes fluttered, and then she gasped softly as she stared up at me, her toned thighs tightening around the hand that was still buried between them. A smirk curled across her mouth as her body shuddered, and I felt my muscles flex with lust.\n\nShe came again, I thought. Just from knowing that I'd toyed with her mind like I did. My rock-hard erection swayed as I bent forward and offered her a hand. \"Miss Carmichael,\" I said. \"As always, your services have been beyond satisfactory.\"\n\n\"Principal Laurenzi,\" she said, taking my hand and rising gracefully to her feet. Her blouse had fallen almost completely open, and several manicured nails slipped under the fabric to twist and tweak one nipple. \"As always, it has been a pleasure to serve.\"\n\nI stared at the woman for a long minute, knowing that I could spend hours with this woman alone without exhausting the number of things I wanted to do to her. But I mastered myself, wetting my lips and letting out a tight breath. \"The others...?\" I asked weakly.\n\nVictoria sauntered a step closer, dark eyes burning. Her fingertips ran down my chest, and then circled around my throbbing shaft. Her hand slowly stroked, stroked, stroked...\n\n\"Awaiting your pleasure, sir...\" she murmured.\n\n\"Ah... Thank you,\" I said hastily, taking a slow step back and out of her grasp. My balls ached to explode, but nothing would be worse than running out of steam before I'd satisfied all my girls.\n\nThe dark-haired woman pouted at me, but her eyes told me she knew what I was doing. \"Just down the hall,\" she replied. \"As I said... They're waiting for you.\"\n\n* * *\n\nThe first door opened onto the left, into the home theater that had been converted into Carmen's gaming room. I hesitated outside it and glanced over my shoulder, back towards the kitchen. For a moment I watched as Victoria, a bright smile on her lovely face, rounded the counter and started sorting through the bouquets that I'd purchased.\n\nThe woman paused, glancing up and meeting my gaze. She rolled her eyes and made a go on! gesture with both hands, shooing me away.\n\nAlright, I thought. I squared my shoulders. Round 2... \n\nI pushed open the door.\n\nThe room beyond was dark, like a cinema, with the only light coming from the images that flashed across the screen. The theater was soundproofed, but now that I was inside I could hear the background noises of one of my favorite games \u2014 Starpath II: War Beyond the Gateway. As far as I was concerned, the cooperative, space operatic adventure game was one of the best releases in recent years.",
        "Carmen knelt on the couch in front of the giant projector screen, fingers flicking and manipulating the controller in her hands as she blasted her way through an ancient alien citadel. Her feet were up on an ottoman in front of her, and I could tell from her focused expression and terse commands that her cadre was speedrunning their way through the area, and instead of interrupting I stood back for a moment to admire the view.\n\nThe 19-year-old's crimson hair was back in a simple ponytail, nestled under her gamer headset. But aside from the headset, and a pair of knee-high socks that accentuated the smooth curve of her slender legs, the girl was entirely naked. The bright colors on-screen splashed across her body, illuminating her in a flickering, alluring dance of light and shadow. Arcing across the top of her ribs I could read the words Property of Chance.\n\nCarmen didn't react to my presence when I sat down slowly beside her, my pulsating shaft standing straight up between my thighs. \"I'm really proud of you,\" I said. I reached out, placing my hand lightly on her thigh and brushing my fingers across her skin.\n\nThe girl glanced down at my hand then over into my face, biting her lip. Her eyes shone with delight, and she reached up to push the headphones away from one ear. \"Thanks, lover,\" she said quietly.\n\nThen, abruptly, her expression changed. Her eyebrows came together in a scowl and her lips pursed in a look of almost adolescent displeasure. I watched as she reached up to the headset and turned a dial, Muting herself. \"But Principal Laurenzi...\" she complained. \"I don't care if Daddy pays $100,000 a year for me to attend your stupid school. If I don't want to go to class, then what are you going to do to make me?\"\n\nI blinked in surprise, then remembered. Oh! The roleplay! \n\n\"Why don't you just get out of here? I'm so done with you.\" Carmen huffed and pushed my hand off her thigh, reaching back up to un-Mute herself and speaking into her headset. \"Yeah, I'm back...\" she said into the mic, her in-game avatar performing a flawless execution move on a xeno warrior. \"Nothing, just another idiot who thinks he can tell me how to live my life. What a joke.\"\n\nShe ignored me completely, and I hesitated for an instant. Is she just pretending to be playing a co-op mission? I wondered. What was I supposed to do if there were actually other players connected to her game?\n\nBut I didn't hesitate for long. The fire of arousal flared higher in my body. With a grunt, I wrapped my arms around Carmen's waist and lifted her several inches into the air. Before she could react, I threw her down onto the ottoman, kneeling behind her with my hands roughly gripping her hips. The girl landed on her forearms, bouncing softly and letting out a quiet squeal of surprise.\n\n\"Ah, no! Don't worry...\" she muttered hastily to her cadre, staring up at the giant screen. Her soldier ran into a wall, but Carmen turned the fumble into a jump that allowed her to scale up onto the next floor of the futuristic building. Around her, half a dozen other players clumped in a tightly-organized unit. \"It's okay guys, one of the bastards just surprised me.\" Her back arched in a long, sensual curve, offering her round ass up for my pleasure, but she didn't even turn to look at me.\n\nIt was a dare. She didn't think I would do anything on live audio.\n\nMy body pulsed with pleasure at the challenge, lust roaring through me. One hand slipped down to cover a pert hemisphere, fingers sinking into the taut flesh. The other hand supported my weight as I bent over her body, covering it with mine.\n\n\"So...\" I asked. My voice was rough in her ear, harsh with desire and the adrenaline of the game that we were playing. \"You don't want to listen to your Daddy?\" I emphasized the last word ever so slightly, and Carmen twitched beneath me. I could practically feel her pussy get instantly soaked.\n\n\"Oh fuck...\" she murmured. Her voice was barely a breath, too quiet even for her mic to pick up, but I could hear the arousal in her voice. And the uncertainty. \"Principal Laurenzi, what are you doing?\"\n\n\"You like to play games?\" I asked, my voice hoarse. I made no effort to quiet myself, and I knew that Carmen's gear was top-of-the-line. Her headset was picking me up loud and clear. \"You think you can just disrespect me and get away with it? While you're here at my school, your father trusts me to represent him. I step into that role. And you will respect that. Do you understand what I'm telling you?\"\n\nMy cock throbbed, hard as steel. I had nestled between her spread legs, brushing the head of my length up against her dripping entrance. I could feel the arousal radiating from her core like a furnace, and knew that my every word was cranking up the heat.\n\nOn screen, Carmen's avatar performed a running jump into a departing chopper, and she had several seconds of respite as her driver raced them to another part of the map. Given a second's rest, the girl reached up for the Volume dial on her headset, and I knew what she was thinking.\n\nMy hand shot out and grasped her slender wrist. \"Don't Mute this,\" I growled, heat pouring through me to accompany my primal lust. \"Let them hear.\"\n\nThe girl's eyes went wide. Then, she gasped softly as I slid inside of her.\n\nI grunted, her volcanic tunnel taking me to the hilt. I paused for a moment, my breath hot on her skin before my lips pressed against her throat and I kissed her, hard. With no regard for her game or our anonymous audience, I began to fuck my beautiful, crimson-haired lover for all I was worth.\n\n\"Ohmygawd...\" The teenager could no longer muffle her moans, my every stroke eliciting a gasp of pleasure as I bottomed out in her core.\n\nI sucked at her pale skin, my lips pressed to her neck. My length pounded inside her drenched slit and my fingers brushed up her ribs, sliding across her tattoo. There it was, etched in ink. It might look only skin deep, as if it might be washed away by a vigorous scrub of soap, but the words and the sentiment were there to stay.\n\nYes... It was the new and improved manifestation of DC, and he and I were in agreement. I wanted to mark this girl once again, a symbol that would show exactly who I was, and who she was to me.\n\nCarmen's hips moved back, pushing against me, begging me to fill her to the brim. She cried out softly as my pace increased, and then I pulled my mouth from her skin and we both gasped with release. Her thumbs still moved on the controller, but even a quick glance at the screen told me that she was distracted. Carmen was a talented gamer, but the way she took half a dozen rounds to bring down an enemy grunt \u2014 instead of dropping it with a quick headshot \u2014 told me that she was barely hanging onto the edge of control.\n\nI pushed myself back, one hand on her hip to steady myself and the other brushing sensually down her spine. On the side of her throat, I could see the mark of my kiss. A small, dark hickey was beginning to form. For a moment, I was fascinated by the sight of her pulse as it pounded away just beneath the skin. Then, I ripped my eyes away.\n\n\"So, young lady,\" I grunted in time with my rhythm. In and out. In and out. \"Do you understand that things need to change?\"\n\n\"Yes, sir...\" I could tell she was close by the way her focus on the game slipped even further.\n\n\"Wrong already.\" My hands pulled her back onto my thrusting length, my cock splitting her slender body in half and making her cry out with pleasure. \"While you attend my school, who do I represent?\"\n\n\"Mmm...\" Lust vibrated through Carmen's frame, and her voice was a sensual groan. \"Yes, Daddy...\"\n\nI watched as one of Carmen's allies accidentally blasted his own speeder with a rocket launcher. Yeah... I thought. They can hear alright.\n\n\"Good girl...\" I murmured. Somehow, having an audience made this even hotter. My manhood, buried deep in Carmen's body, throbbed with ever greater lust. \"So, now that you understand that you have to change...\" I hesitated, racking my brain. Shit. \"What's your problem again?\"\n\nThe girl bounced on my cock, her voice trembling with every movement. Her brain seemed to be having trouble keeping track of the words. \"Don't... attend.. my classes.\"\n\n\"Right,\" I remembered, picking up speed and gathering my thoughts. \"You understand how games work, so I'm going to make this a game for you. And just like any game, there will be penalties for failure, and rewards for good behavior...\"\n\n\"Yes, Daddy...\" Carmen's fingers were still wrapped around the remote control, but I'm not sure she even remembered it was in her hands. A gathering horde of xeno warriors had surrounded her cadre, which seemed oddly unresponsive to the in-game threat.\n\nI grinned fiercely. Maybe something else is on their minds. \"Your problem,\" I grunted, driving into the teen's dripping slit, \"is that you have too much time on your hands. So, starting tomorrow, I expect to see you in my office twice a day. If you arrive late, you will be disciplined. If your teachers report that you have been missing class, you will be disciplined.\"\n\n\"Yes, Daddy!\"\n\n\"On the other hand, if you've been a good girl then I'll be inclined to give you a little reward.\"\n\n\"Oh yes please, Daddy...\" The girl was getting closer, her soft cries becoming more and more desperate.\n\n\"A little discipline and structure should help set you straight. Isn't that right?\"\n\n\"Ohmyfuckinggawd...\"\n\nThe controller fell from Carmen's spasming fingers and down onto the carpet. Her body clenched tight around me and then released, and the 19-year-old stunner came with my length buried to the hilt in her womb.\n\nI tried to hold back. I tried to resist the climbing wave that crested in my body and my mind. But I couldn't.\n\nIt crashed over me like a tsunami, blasting through me with so much force that it was like my body wanted to explode from the energy rushing through it. I felt the teen's smooth skin bucking against me as she writhed, and I realized that she wasn't fighting her pleasure. She was giving into it. So, I did the same. My cock twitched as my balls unleashed their load, and my toes curled as electric ecstasy played my nerves like a silent symphony.\n\nFor half a dozen seconds, the room was silent but for our heavy panting and the background ambiance provided by Starpath. In the glow of the screen, I could admire my handiwork.\n\nThe girl lay sprawled on her stomach, her face resting on one cheek and wearing a dazed expression. Her emerald eyes were glazed with the afterglow, and I don't think she still registered the fact that she was meant to be playing.\n\nNot that it mattered anyway. On screen, a blinking message explained it all.\n\n\"Despite a valiant fight, you and your allies have been defeated. Game Over.\"\n\nMy length was slowly drooping between my legs. Precum still beaded at the tip, and my shaft was slick with Carmen's arousal. I felt the post-orgasmic drowsiness try to kick in, but I still had two more women to take care of. So, I just brushed a finger down her leg, feeling her smooth skin of her thigh and the softness of the long sock that encased her calf. \"Consider today's discipline duly administered,\" I said, before straightening and stepping back.\n\nI came to my feet.\n\nSpeaking of discipline, hadn't Victoria mentioned a cheater I needed to take care of?\n\n* * *\n\nI was pretty sure I knew where I'd find Daisy.\n\nCarmen had been in her special place, and while Daisy ostensibly had two of those in this apartment \u2014 her library and her red room \u2014 ever since December her BDSM chamber had been off-limits except for group fun, when the big, crimson bed was the only one large enough for all five of us to play.\n\nSeth's appropriation of Daisy's room had shaken the young woman, that much was certain.\n\nHmm... I mused, feeling the beginnings of an idea as I strode to the library door and turned the handle. It might be time for that to change.\n\n\"Hello, Principal Laurenzi.\" Daisy sat in her favorite reading chair, knees tucked up beneath her, but all of the books were on their shelves.\n\nI paused in the doorway, considering her.\n\nMy teenage lover was wearing a simple plaid skirt and a grey, scoop neck sweater that clung to her torso and her arms to the wrist. She looked like she could have been transplanted directly from a preppy boarding school into this cozy reading nook. Her expression was demure, her eyes downcast.\n\n\"Miss Evans,\" I said after a moment. I made sure my voice was stern. \"You know what you've done.\"\n\n\"Yes, sir.\" The girl didn't look up. \"I let another student take my essay and turn it in as her own.\"\n\nI nodded slowly. \"Then you know I have no choice but to punish you.\"\n\n\"Yes, sir.\" Her eyes remained fixed on the floor in front of her.\n\nI hesitated. After a few seconds, I said quietly, \"Daisy...\"\n\nShe could tell from my tone that I was speaking out of character, and when the young woman tipped back her head her eyes were uncertain. \"Yes, Chance?\" she asked.\n\nI took a deep breath. \"I know that what I want right now is to take you into that red room down the hall and BDSM the hell out of you.\" The girl looked surprised, but I went on before she could interrupt. \"I also know that what your ex did to you was fucked up, and it twisted your associations with the place. Now it's somewhere with awful memories that overshadow the good ones... But it doesn't have to be. If you'd like, we can go make new memories there. Right now. And forget all the old, messed-up crap.\"\n\nThe girl paused. I could see the uncertainty in her eyes.\n\nBut I couldn't say anything. It had to be her decision. So, without words, I tried to tell her how much I loved her. How much she meant to me.\n\nDaisy set her jaw, then, and she nodded. \"You're right,\" she said. \"Seth is gone. He's out of my life. Out of all our lives. He took my room and turned it into a place I had to endure, instead of someplace I got to enjoy.\" She stood slowly, walked across the small space, and took my hand.\n\nI looked down into her emerald gaze. \"You ready?\" I asked, feeling the beginnings of a teasing, confident smile tugging at my lips.\n\nShe squeezed my hand. \"Let's go make some better memories.\"\n\nSo we did.\n\nChapter Six\n\nIt's tough to imagine, but we were all satiated by the time our Valentine's Day sex-athon wound to a close. Though I'd visited Amber in the twins' bedroom for some one-on-one time with a very willing cheerleader \u2014 wearing a Bradford University uniform, no less \u2014 we'd all wound up in the King-sized, four-poster bed that occupied Daisy's red room.\n\n\"Wow...\" I groaned, trying to push myself up from the pillows and then groaning as I sank back down. I was too drained. I promised myself I would try to get up again in a minute or two. \"What time is it?\"\n\nIt felt like we'd been at it for hours.\n\nVictoria, at the far end of the bed, scrabbled at the bedside table and flipped over Daisy's cell phone. \"It's almost 5:00,\" she reported. \"Which means we should have time to wash up and make ourselves pretty before our dinner tonight. When's the reservation, babe?\" She threw me an inquisitive glance over the lounging figures of the other women.\n\nI froze, and responded with a look that could only be described as panicked. \"Wait... I was supposed to do that?\"\n\nThe brunette's eyes widened. She managed to hide most of the reproach in her voice as the others stirred and raised their heads with concern. \"You didn't? But I asked... I mean, it is Valentine's Day. I thought you'd be able to step up and put forth a bit more effort...\" Victoria's nails clicked on Daisy's phone screen as she frantically typed in the teenager's passcode and started to search for restaurants. \"Crap. I just don't know if there will be openings anywhere so late. Really, Chance, I don't like to say it but it kind of upsets me when you're so irresponsi...\"\n\nThe woman trailed off when she realized I'd gone silent. Looking over, she saw the smirk that I was no longer trying to hide. \"You jerk!\" She scowled and threw a crimson-sheathed pillow across the bed in my direction. \"You scared me for a minute!\"\n\nI let the pillow bounce off my chest as I grinned, and after a huffy moment the gorgeous brunette melted. It helped that we had an audience of three who were giggling in support of my joke.\n\n\"Don't worry, Vi,\" I said, fixing her with an earnest look. \"You can trust in me. I've taken care of everything.\"\n\n* * *\n\nWhen we arrived at Delicieux, I recognized the blonde server who greeted us. She had curlier hair now, but it looked good framing her pretty, Nordic features.\n\n\"Laurenzi, party of five. And hello again,\" I added, not trying to hide my smile of recognition.\n\nThe girl paused, glancing behind me to my four stunning dates. She did a double take, and seemed to put two and two together. \"Wait,\" she said. \"You've been here before...\" She trailed off as the memory returned, and she started to blush. The last time this woman had seen me, Carmen and I were sneaking out of the women's bathroom after a fast, hard fuck.\n\n\"That's right,\" I agreed, and my smile became even more confident. \"We had such good memories of the place that we couldn't stay away.\"\n\nThe waitress flicked a glance at my girls again, muttered something about showing us to a table, and hurriedly picked up a stack of menus. She must have been worried about us scaring off the other guests, because she placed us in a far back corner of the restaurant. It was dimmer back here, bedroom lighting, and I found my eyes drifting down the girl's white blouse to admire the way her uniform black slacks conformed to her ass.\n\nWhen we were seated, with menus in front of us, the girl stood back and clasped her hands. Before she could say her piece, however, I interrupted.\n\n\"What's your name?\" I asked, glancing up from the page with a winning smile.\n\nShe blinked her pretty blue eyes in surprise. \"Elsa,\" she murmured after a second.\n\nElsa, I thought. Pretty. \"Thank you,\" I said. \"I'm Chance. I just wanted to say it's a pleasure to see you again, Elsa. And happy Valentine's Day.\"\n\nFlustered, the young woman took a second to remember where she'd been and then told us that our waiter would be with us shortly. \"Happy Valentine's,\" she offered, blushing again, and then ducked away before we could react.\n\nAs she hurried toward the front of the restaurant, Carmen and Daisy shared a significant look.\n\n\"What?\" I asked, glancing between the two.\n\nCarmen pushed back from the table and stood. \"Nothing,\" she said breezily. She was shrugging out of her loose, cream-colored cardigan, revealing the shiny silk top beneath. \"Isn't it a little warm in here? I'm just going to go hang up my sweater on the stand by the front door.\"\n\nI followed the teenager with my eyes as she calmly made her way past the other tables. Now that I wasn't distracted by Elsa, I realized that the restaurant was actually quite full. Most of the tables were couples, given the occasion, and more than a handful of men sneaked looks as the sultry ex-pornstar sauntered past. Not far away from us, Carmen also garnered the attention of an attractive Latin woman who was sitting by herself.\n\nThe crimson-haired minx draped her garment over a peg, then sidled over to the front podium where Elsa stood on her own. Carmen placed a hand on the other woman's arm with easy familiarity, and leaned in like she was asking a question.\n\n\"Chance?\" Amber's voice brought me back to our table.\n\n\"What is it?\" I enjoyed the way the soft light accentuated my girlfriend's natural beauty.",
        "\"I remember you mentioned there was something you had to do while we were downtown. Do you want to slip away for that right now? The place seems pretty busy, so you can probably be back in time to order.\"\n\nThat's right! I nodded, remembering. There was something I'd promised myself I would do.\n\nI smiled at my girlfriend as I pushed back from the table. \"If I'm not,\" I said, coming to my feet and meeting her eyes. \"Get me something adventurous. I trust you.\"\n\n* * *\n\nMooney's bar was bustling tonight.\n\nIt was Happy Hour on Valentine's Day, and all the single men and women in the City were flocking to bars to find their one true love. As I stepped up and through the open front door, scanning the bustling venue, I tried not to feel sorry for them.\n\nI found four.\n\nI wasn't quite sure what I was looking for, hadn't known much beyond knowing that I had to come here. I certainly hadn't been looking to run into the man who had shamed me, all those months ago. But then, through the crowd and the patrons standing one or two deep at the bar, I could see them \u2014 a familiar table of jean jackets, buzz cuts and work boots. My old friend was with them, and he looked just as big, burly and bearded as before.\n\nI hesitated, unsure what I should do.\n\nYou could take him. It was the new DC, and I could feel him rising inside of me, seeking hungrily for any feelings of anger or aggression to latch onto and inflate.\n\nAnd, when I considered the matter, I knew the words were true. When I first encountered that man, I'd been nothing more than an out-of-shape corporate drone without a hint of backbone. Now I was trim, almost lean, and I'd had months of martial arts training from a woman who could probably give special forces boot camp a run for its money when it came to training warriors.\n\nDo it, the voice urged. Make him bleed... And my own primal savagery shocked me back into focus.\n\nI pulled in a long, slow breath. Then, as I moved calmly toward the bar, I disarmed the beast that writhed inside of me. Where would you be, I asked myself, if he hadn't confronted you that night with your own weakness?\n\nSeveral minutes later, when a harried bartender stopped in front of me and asked for my order, I pushed Landon Shrike's credit card across the bar.\n\n\"See that table over there?\" I asked, gesturing with one thumb. \"He doesn't know it, but one of those guys did me a favor that changed my life. For the rest of the night, their drinks are on me.\"\n\n* * *\n\nWhen I returned to Delicieux, Elsa had been replaced by a short Asian woman with jade-colored nails and long, pendulous golden earrings. She gave me an appreciative up and down, and our eyes met just as I finished giving her a similar scan.\n\nShe smiled flirtatiously at me, but then turned it into a little pout. \"Sorry,\" she started. \"But I'm afraid we don't have any available\u2014\"\n\n\"Oh,\" I interrupted. \"Don't worry. I've already been seated. I just stepped out for a moment. I'm with the four ladies in the back.\" It was gratifying to see the woman's almond-shaped eyes widen when she followed my gesture and caught sight of my table.\n\n\"Ah... ahem, well then. Please go right ahead...\"\n\nWith a little smirk turning up the corner of my mouth, I nodded and walked past with a murmured, \"Thank you.\"\n\nWhile I was gone, candles had been placed in the center of the table. The glow illuminated four welcoming smiles from the members of my harem. But, as I started to pull back my seat, Victoria's hand stretched out and landed on my wrist to stop me.\n\nI glanced over at her, then around the table. I raised my eyebrows. \"What?\" I asked, feeling like I'd missed something.\n\nDaisy was the one who answered. Her green eyes reflected the bright, flickering flames of the candles. \"I think you should take a visit to the bathroom,\" she suggested, leaning back with a satisfied smile on her red lips.\n\nI furrowed my brow. What?\n\n\"The ladies bathroom,\" Carmen added, her own emerald orbs flashing with heat.\n\nWait... I glanced around again, uncertain.\n\n\"Hurry,\" Amber encouraged, her blue gaze glittering in the firelight. She gestured with her chin. \"The lonely mamacita at that table over there is halfway through her bottle of wine. And you probably don't want her going in first.\"\n\nVictoria had released my wrist, and so, with dawning comprehension, I took a step away from the table. There was wonderment in my face. But how? Who? \n\nPressing her lips together and managing to keep control of her growing smile, Victoria made a shooing gesture at me. \"Go on,\" she urged. \"What are you waiting for?\"\n\nTheir encouragement spurred me on, and I wound my way between tables towards the homme and femme sign with growing excitement. It can't be... I thought. There's no way. I hesitated for only an instant in front of the door with the female pictograph.\n\nI pushed it open and stepped inside.\n\nElsa was waiting for me.\n\nShe stood against the back wall with her hands clasped in front of her, naked but for a matching set of lacy blue underwear. Her clothes were folded neatly and set on the counter. I hadn't checked before, but I'd assumed from her height that she was wearing heels. She wasn't, but even without them she was almost as tall as I was. Her body was all athletic lines and sleek curves.\n\nTo my even greater amazement, her blue eyes were clear and bright. There was only a hint of hesitation in them as they widened in alarm at my sudden entrance. Then, they sparked with recognition. There was no indication at all that my girls had used a copy of the TRANCE video on her like they had with... like they had the last time they'd given me this kind of present.\n\nWas it possible? I thought, and then the heat that flushed my body drowned out my doubts. This woman wasn't here because she'd been hypnotized. She was here because she thought I was sexy and powerful. She knew that I had arrived with my four lovers, and before I left she wanted a sample of the goods that they were enjoying.\n\nFire coiled in the pit of my stomach as I leaned calmly back against the door, a slow, tantalizing smile spreading across my mouth. Who knows, I thought. Maybe she'd been waiting for this chance ever since she'd caught me and Carmen on our last visit. Maybe she'd masturbated night after night, fantasizing about being taken in public, at work, her underwear around her ankles while my cock penetrated her to the core.\n\nMy manhood throbbed, hard and ready and waiting, behind my zipper. The lock clicked under my hand and the woman's eyes sparked bright. I certainly wasn't going to disappoint her.\n\nThen, gathering herself, Elsa sashayed across the tiled floor toward me.\n\n\"I've heard you like to be called Sir...\" she said, her voice going sultry and her lips shaping the word with sensual promise. \"What can I do to please you?\"\n\n* * *\n\nEpilogue\n\nLater that evening...\n\nDowntown...\n\n \n\nThe night was bright, full of light and life.\n\nMusic vibrated through the walls from the club next door, but in here the din was blessedly reduced. This bar had been around for years \u2014 maybe decades, it was easy to forget \u2014 but had stayed in style. Part of it was the vibrant night life on all sides, but part of it was the sea of relative calm within. Cover 13 cultivated a relaxed, intimate mood that was the perfect counterpoint to the energetic hustle and bustle that made this neighborhood of downtown perfect for drinking and dancing and staying out too late.\n\nI slid onto a stool at the corner of the bar, casting my gaze about. There were deep shadows in the corners, but no one occupied them except for a couple at the far end of the room. They believed they were out of sight in the darkness, but I could see the woman slip her hand across the man's lap and squeeze, teasingly.\n\n\"Ohfuck...\" the man gasped, ever so softly.\n\n\"Let's head upstairs,\" she murmured, her voice barely a whisper.\n\nI looked away.\n\nIt had been some time since I last visited, and Cover 13 had a new bartender. He had warm, cinnamon skin and dreadlocks pulled back behind his head in a neat, hipster style.\n\n\"Miss?\" he asked.\n\nI ordered, and he gave me a significant look. I smiled, and he hurriedly averted his eyes.\n\n\"Right away,\" the man muttered. He returned not long after with the requested potion.\n\nI sipped it, then set it down and drummed my long fingernails clink-clink-clink against the glass.\n\nBitter, I thought, wondering how long they had cured the poppies. But I couldn't complain. It was bitter, but exactly what I needed.\n\nI felt warmth tingle through me as my body reacted to the poison. I wanted that warmth. I wanted the slow, easy feeling that would spread through my limbs and my mind until my body had cleansed itself. I could remember the words of my master, advice given years ago.\n\nAbove all, you must be a consummate actress. Focused. In control at all times. \n\nTonight, however, I did not wish to be in control. I wanted to act automatically, to get out of my own way.\n\nWhen I went out, I tried to vary my watering holes. If anyone happened to be watching my movements, they would find me quite unpredictable. This was as it should be. The human brain is wired to pick up on patterns, and most of the time I didn't wish to be picked up.\n\nTonight was a different story. I wore a black dress, short enough to show off my legs and tight enough to tantalize. My drink was hardly halfway gone when I was approached. I smelled him as he sidled up, even before he leaned up against the bar next to me. His cologne was expensive, and intriguingly subtle.\n\n\"What're you thinking about?\" he asked, cocking his head and smiling easily.\n\n\"Very little,\" I answered, honestly. I could feel the drink hitting me, pleasantly removing self-imposed barriers. \"Of late, my thoughts have been my enemies.\"\n\nThe man chuckled, enough to let me know he was interested in me but not enough to come across as a bootlicker. \"We all have demons,\" he mused. \"Sometimes, talking about them can help.\"\n\nSuave, I thought. But not pushy. I could tell without glancing over that he was my type. In addition, he seemed confident and direct, with a healthy physique and the ease that settles into someone's posture when they're used to success.\n\nThe man smiled. \"If you want, you can talk to me,\" he offered, and I knew the dice were cast. \"A beautiful woman shouldn't have to spend her Valentine's alone with no one to lend an ear.\"\n\nI turned toward him, flashing a dazzling smile and meeting his frank gaze. It wouldn't have mattered, now, if he'd been interested or not. Nor if he'd had a girlfriend, a fianc\u00e9, or a wife of a dozen years. Once we locked eyes, it was over.\n\n\"Nice car,\" he commented, not long after.\n\n\"It's new,\" I answered.\n\nWe drove in silence for a time. I was careful, recognizing my own state of inebriation. Beneath the dullness, I could feel a cold ache, the emptiness in my belly, and knew that it wouldn't be long now. I forced my mind away from the thoughts that tried to invade it.\n\nNo, I thought. It cannot be him. You would not do this to a friend.\n\n\"Nice church,\" the man said, when we turned onto my street.\n\nI realized I didn't know his name, and he hadn't offered it. I think he believed we were on the same page. Just two ordinary people, going back to her place after a night out at a bar. He tried to kiss me on the porch but I pulled back, giving him just enough contact to encourage.\n\n\"Wait a minute,\" I giggled. \"Until we're inside.\"\n\nOnce indoors I offered to make us a nightcap, and disappeared into the kitchen. I had some alcohol in my cupboards, for guests, but I simply stood in the dark and leaned heavily on the table. My head swam and my fingers tightened against the wood.\n\nWhat is wrong with you? I asked myself silently. It was one drink. It wasn't as special as all that. Get him out of your head. But I knew it was a futile effort. It had been two months, and the feelings wouldn't go away.\n\n\"What's this?\" I heard my companion mutter to himself, through the wall. His footsteps crossed the moonlit front room, a little unsteady. By now, for all intents and purposes, he was drunker than I was.\n\nBest to get it over with.\n\nI ghosted across the hallway on gentle feet.\n\nThe light was poor, but I could see that the man's attention was fixed on the short sword that hung, unsheathed, above the mantle of the cheap, dead fireplace. I had placed it there for convenience, rather than ornament, but the man was peering at it as if it were a museum exhibit.\n\n\"It is a yatagan,\" I said quietly, entering the room behind him. \"A blade from my homeland.\"\n\nThe man didn't turn. Instead, he bent closer. \"Very cool,\" he pronounced carefully, like someone who was guarding against slurring their words.\n\nI felt a double prick of discomfort in the front of my mouth.\n\nThe man grunted, putting a hand on the mantle to steady himself as he pushed upright. \"Well, baby,\" he started to say, then trailed off as I slipped into position behind him. My hands slid up his front, under his arms, pulling him closer.\n\n\"Oh,\" he murmured. His hand fell back on my hip, fingers stroking the fabric of my dress. \"That's nice...\"\n\nI gently nuzzled his neck, the scent of his cologne strong in my nostrils. My body was so ready that I could almost taste the chemicals that were beginning to seep into my saliva. I took a steadying breath.\n\nThe man jerked in my arms.\n\n\"What the hell?\" he demanded thickly. His hand scrabbled at my face, fingertips tangling in my loose hair. \"You bit m\u2014 Ahhh...\"\n\nThe anesthetic kicked in almost immediately and my prey relaxed, hand slipping from the side of my face back down by his side. I could feel the pulse of fluids rushing through my hollow, needle-like fangs and into his carotid. The rest of the chemicals soon followed, and the man moaned with pleasure as his brain was bathed in a potent cocktail that would cloud his mind and warp his perceptions. He would not remember this. If I drank until I was sated, he probably wouldn't even remember meeting me tonight at the bar. Amnesia was a vital side effect of the bite.\n\nThen, less than a second later, the last of the fluids drained into his body. My fangs were clear, and I drank from the man instinctively, decades of practice and habit overcoming my momentary hesitation.\n\nThe taste hit my senses like a physical blow, and as predictable as clockwork the memories spilled across my mind like paint across a fresh white canvas. Just like they had every time I fed, ever since that fateful night in December.\n\nChance was on the ground before me. Blood stained his shirt. The Lunari bitch had her gun trained on the pair of them: my friend and his fallen enemy. Two loose ends.\n\nI tried to block it out, but the image played across my mind with perfect clarity.\n\nI had to act swiftly, had to keep my friend safe from that ruthless pack of hunters. So, I claimed him as my own, protected under the Accord. I claimed him even though I knew it was a lie, because he had told me himself that the tea had done nothing. \n\nI gulped now, barely thinking.\n\n\"Make him forget,\" she had ordered, and I knew I had no choice. The Gwennen was at risk, and I knew the lengths she would go to protect it. There was no time for another plan, and so I obeyed. I sipped from his carotid, the process clouding his memories as predictably as black bars redacting a classified document. \n\nForgive me... I thought. I had no other choice.\n\nThe man twitched and murmured in my arms, bringing me back to the moment.\n\nI forced myself to pull away. I'd almost gone too far, but he tasted good. Like a fine wine, well-aged. I could tell that my prey ate well, that he exercised regularly and had a healthy sex life. I could taste the expensive whiskey he'd polished off at the bar.\n\nBut Chance was better. The comparison was an instinctive reaction, and despite my resistance to the idea it was a judgment I could not deny.\n\nMy tongue flicked across the double puncture wound, and in a moment the skin had sealed back over. I eased the man down into a chair and stepped back, my hands clenched at my sides. I stood in the dark and struggled against the feeling that raged in my chest, a primal longing that seemed to come from the Beast itself. It was a feeling I hadn't had in more years than I could count, and for months I had tried to reject it from my thoughts.\n\nTonight, I could no longer continue the fight.\n\nI saw him in my mind's eye. Cheerful and dedicated, devoted to the people he loved and to a vision of a better future. He would be safer if I left. He would be safer if he never saw me again. He could pursue that future, with those people.\n\nForgive me... I thought again.\n\nBecause as I stood there in that shadowed room I knew I couldn't bring myself to leave, couldn't bring myself to force him away. Tonight, I finally faced my feelings like a warrior. I wanted to drink from my friend, to drink until I was satisfied, and then some. I wanted to taste his lifeblood and know him more deeply than a lover.\n\nWas I lonely? Perhaps.\n\nWas he the first human in years with whom I'd built a genuine connection? It certainly felt that way.\n\nBut there had been something else in him that drew me like a drug. He had tasted like forbidden pleasures and helpless indulgence. Like stars in my veins and the moon on my tongue. He had tasted like destiny.\n\nAnd, one and all, destiny drew us together with the irresistible strength of turning time.\n\n* * *\n\nANNOUNCEMENTS:\n\nWell, here it is! The end of the line...\n\nWe've come to the end of the first arc of TRANCE, Inc. and with Chapter 21 I put a pin in it for now. I plan on taking a break to work on other projects. Hopefully the ending satisfied you in some ways, intrigued you in others and overall hit the right chords with you (like it did for me). I'm grateful to you for all the time you've invested in this story, and I'm excited to take the next step with the City and its characters in my coming writing.\n\nIf you still have questions you can send me a message through Literotica or reach out to me elsewhere online. When I come back to the story there are still plenty of threads to be dealt with and plenty of questions left unanswered.\n\nThis is my most ambitious project yet, and I'd love to get this story into the Hall of Fame, so if you enjoyed TRANCE, Inc. then consider giving this story 5 stars.\n\nIt means a lot to me, and I'm grateful for your support.\n\nYou can find me elsewhere online if you want to get early access to future stories (multiple weeks ahead of Literotica). If you're still social distancing, I hope that reading my work gives you a little entertainment during long, boring stretches of time.\n\nLots of love, and I'll see you soon for my next publication!\n\nJC\n\n \n"
    ],
    "authorname": "JCBeleren",
    "tags": [
        "blowjob",
        "busty",
        "female dominant",
        "female submissive",
        "hypnosis",
        "male dominant",
        "mind control",
        "oral sex",
        "redhead",
        "romance"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/trance-inc-21"
}