{
    "title": "Conversion Ch. 03",
    "pages": [
        "A/N: Thank you to everyone who has reviewed, your encouragement has kept this story going. I know my writing pace can be very slow sometimes, so thanks for bearing with me. I also appreciate the constructive criticism I've gotten; it helps me become a better writer. For those looking for more vampire scenes, there will most likely be another intimate scene with Daria in the next chapter. I hope you enjoy the chapter!\n\n______________\n\n True to the strange Lord's word, Milyn spent the night in a well-appointed room possessed of far more comforts than she ever could have dreamed of back at the Convent. The bed was a wonder of soft cushions and silken sheets that was as far above the old cot she was accustomed to as the angels were from mortal man. A few bookcases casually boasted half as many volumes as had been in the Convent's library. The smell of the place was a delight to the senses: the aged paper of the books mixing with a hint of smoke from the fire and a slight floral fragrance from the sheets.\n\nMilyn felt guilty for enjoying her quarters. Presumably the angel was housed as well, but what of her sisters? Poor Daria was dead, Mother Selcrie twisted into some beast, and who knows what desecrations the others were being subjected to. She thought fearfully of the tall man's closing comment. Had he truly been making some sort of sick jest, or was he serious? Had she perhaps angered him enough with her comment that he had decided to hurt one of her Sisters who would otherwise have gone unscathed?\n\nNo, she told herself firmly at last. She was only playing right into his hands if she began doubting herself. This is what demons did, didn't they? Offered things that seemed nice, while their dupe never suspected at first the terrible price that it was bought at. And truly, although many might not really understand it, the most awful price was distance from the One God. He was the Creator of All, the source of all goodness, the promise of eternal life after death. What transient happiness could ever match the bountiful rewards he showered his true believers with, in addition to that most precious gift of all, his love?\n\nStill, it was a very nice bed.\n\nThe next morning, Milyn woke up as the sun began to stream through the windows. She was struck once again by the incongruity of her situation. Here she was in the hands of what should be utter and depraved evil, and this peace and comfort were so far removed from what she felt she should be experiencing that it unsettled her greatly. If she had been being tortured, at least she'd know her role: suffer bravely and die secure in her faith. It was rather difficult to know what to do here. Should she have scorned the bed and slept on the floor? That seemed rather petty.\n\nShe nearly got stuck again considering the garments ready for her in the room's wardrobe. Once again, they were cut rather more indecently than she was used to, although she supposed almost any sort of regular clothing was. She longed for the security and anonymity of the shapeless, rough robes of the Order. It seemed a double waste, putting on any of this pretty clothing when there were much more attractive women about. How could any observer not make the comparison and judge her the lesser?\n\nGranted, that was foolish vanity speaking, but still.\n\nShe eventually went with a dark blue dress she somewhat liked for the rippling manner the skirt moved with her, although the bodice was cut rather tighter than she felt comfortable with. As she was looking at herself in the mirror, a soft knock sounded on the door. Another young woman entered; a short, lithe girl with chestnut hair pulled back from her face and bold, slanted eyes.\n\n\"Milyn? I am Chen Li. Mrithasee told me you were awake, so I thought I would invite you to breakfast with the rest of us?\"\n\n\"Mrithasee?\"\n\nChen Li smiled. \"One of my spirit friends. He's always poking around! Curious little fellow. This way!\"\n\nA demon-worshipping whore then! Milyn elevated her nose slightly as she followed the other woman. She wasn't quite sure what a whore was, mind you, but she knew it was something very, very bad. The scripture had one or two passing references to them conjoined with the blackest sins and punishments, and Mother Hathrick had once called one of the novices a lazy whore when she had been shirking her chores.\n\nThe whore led her into a room with a tall, vaulted ceiling, lit by massive windows reaching nearly from the floor to the roof. The walls were carved in a strange, baroque style, and leering gargoyles and grotesque, weeping masks gazed down on them as they entered. Several people \u2013 to use the term loosely, in some cases \u2013 were gathered around a long table inside, eating a hearty repast of fresh fruit, bacon, buttered bread, and fried eggs; indulging in light conversation as they did. As she was led to a seat, Milyn studied the other guests as discreetly as she knew how. Aside from the angel, seated sullenly to one side, these were the enemy, and she wanted to know what to expect from them.\n\nLord Susurrus held court at the head of the table. That was the only phrase she could think of to really describe the effortless control he commanded over the gathering. Everyone seemed to regard him with a mixture of respect and deference. He was dressed in a rich silver and black doublet today, with black lace at the throat and wrists. He gave her a nod and a small smile as he saw her, and she quickly averted her eyes.\n\nTo his right sat the bull-necked leader of the rogues, his fresh-shaven pate gleaming in the morning light. On his left was some sort of phantom, the ghostly figure of a woman dressed in finery that would have terrified her if not for the sense of inescapable unreality that had gripped her the last few days. Absently, she wondered if her circumstances had driven her mad. That would explain some of her reactions. But if she were mad, wouldn't she worry less about her situation? She was still afraid, still wracked with despair, just... numb. She'd been in the grip of these emotions for a few days now, and while potent, the emotions were more familiar than they had been.\n\nDistracted by her thoughts, Milyn meekly seated herself in the seat Chen Li indicated. Looking over at the person next to her, she started violently. Daria smiled back at her, positively glowing in a short, tight black dress that showed entirely too much bosom and thigh. The Sister looked a perfect vision of health. Milyn clutched the table in front of her in an involuntary attempt to reassure herself, and her eyelids fluttered as she quickly reassessed her position on her own sanity.\n\n\"You...\" she managed to choke out at last, as Daria looked at her with some concern. \"You...\"\n\n\"Close your mouth, cow, before you catch flies,\" sneered a cold voice from the other end of the table.\n\nAn imposing female lounged there regally, her face a mask of disdain. She was dressed almost as a man, in breeches and a blouse with a vest tightly strained over it; although the curves of her form left no doubt as to her gender. Her long hair was so black it seemed to glimmer with hints of purple, and was bound with multiple silver chains strung with bells in a long braid that hung over one shoulder down to her waist.\n\n\"Ceiris,\" Lord Susurrous said mildly. \"You are a guest in my house. Please watch your language when addressing the other guests.\"\n\nThe woman shot him a withering glare. \"I see we are defining the word 'guest' very loosely, wight. Unlike you, I see no need to play with my food, or other's, before consumption.\"\n\nSusurrous spread his large hands. \"The purpose a being is dedicated to, without their volition, does not comprise the entirety of what they are.\"\n\nCeiris pursed her lips in a moue of distaste as she rose, picking up her plate. \"We remain at odds, wight. I do not agree with your methods, as you well know. You deem yourself merciful, but in my judgement you tamper with what you have no right. My path is by far the kinder.\"\n\n\"Less complicated, perhaps, but not kinder.\"\n\nShe flipped her braid back over her shoulder. \"I am here as a favor to Simon, no more, no less. I will do as he asked, out of respect to him. Do not make the mistake of thinking I am part of your little group of... sycophants.\" With a final scalding glance at Milyn, she turned and left swiftly, her boots clicking firmly on the floor.\n\nThere was a long silence as she left, and after a swift glance around, Milyn sprang to her feet and followed Ceiris, almost tripping as she stood in her haste. While there were few raised eyebrows and odd looks her way, no-one tried to stop her. Hurrying down the hall, she threw up her hand in an involuntary gesture of supplication as she called out. \"Wait!\"\n\nCeiris paused with the door to what appeared to be a well-stocked kitchen half-open. She arched one slender brow amusedly. \"Something you want?\"\n\n\"You said... you did not agree with his... methods,\" Milyn panted, her breath short with nerves and her sudden exertion. \"Can you help me? Help us? There are other Sisters here as well, and that man plans to do horrible things to us all!\"\n\nCeiris burst out into laughter, disbelief in her eyes. \"Oh, this is precious!\" Stepping in close, she batted aside Milyn's defensively raised hands and gripped her firmly by the throat, pushing her back against the wall. \"You misunderstand, cow. The wight and I agree that war must be waged on the Great Oppressor, the only disagreement is the manner in which it be waged. When I see one of you little Sister-sluts, I kill you. I burn your buildings, I destroy your communities, and I slaughter every living soul that gives praise to the One God. I do not take prisoners.\"\n\nStepping back again, she patted her on the cheek softly. \"Take care, little Sister-slut. The moment, the moment his protection lifts... I'll step in and send your soul screaming to your God.\"\n\nMilyn stared after her for a minute after she left, shaken by the hatred in the other woman's eyes. Then she returned to the dining hall, tugging nervously at her fingers as she anticipated Lord Susurrous' angry reaction at her abrupt departure.\n\nHe surprised her again by taking it completely in stride. She sank back down in her seat, looking askance at Sister Daria, who had no food in front of her. Her comrade returned her glance with a wide, enthused smile that seemed completely out of character for her. She had always been quiet, withdrawn. Now she seemed so full of life she was almost bursting at the seams.\n\nMilyn busied herself filling a plate with bread, fruit, and some bacon that smelled so good her mouth began to water. \"Are you... well, Sister?\" she asked Daria in a low voice. \"I thought I saw you... hurt yourself yesterday.\"\n\n\"Killed myself, actually,\" she replied cheerfully. \"But Lord Susurrous saved me. I know you probably won't listen to me, Milyn, you always have been a stubborn one. But for your own sake, you should forswear the One God as soon as possible. If you die still dedicated to him...\" she shook her dark head back and forth once, violently, sending her sleek hair bouncing around her shoulders. \"He will devour you. He wants nothing more than to take everything you are, or will ever be, a\u2013 and consume it, destroy it, until there is nothing left in all the world but... Him.\"\n\nMilyn chewed and swallowed before answering, and took the short pause to consider her words carefully. \"You- I think you are mistaken, Sister. What you speak of is the Divine Oneness. We all came from Him, are a part of Him, and in the end we will Return to His grace, to live on in His glory forever.\"\n\n\"Which one of us died and has first-hand knowledge?\" Daria huffed in irritation. \"Trust me, there was no confusion. I truly hope you will realize the truth before you die.\" She started sniffing the air in Milyn's direction. \"My, you smell wonderful this morning!\"\n\n\"Easy there,\" a man on the other side of Milyn interjected. She looked over at him with some relief at the interruption of her strange and heretical conversation. He seemed short and slight, with a laughing face and sly eyes topped by a carefully styled mass of dark curls. \"You'll scare the poor thing!\"\n\nDipping his head in greeting, he murmured, \"Kaine, at your service, milady. A shiftless rogue and vagabond by trade, a musician by inclination, and enemy of the state by a cruel twist of fate.\"\n\nMilyn blinked at him, slightly dazed. \"Enemy of the state?\" she managed after a moment.\n\n\"Well... I was quite popular with the wives of the court, but not so much the husbands. One of them finally got upset enough to turn me in as a demon worshiper, and I escaped the stake by a hairsbreadth.\"\n\n\"Whatever your sins, you do not deserve such lies told about you!\" Milyn exclaimed in outrage. \"I am truly sorry.\"\n\n\"Oh, no no. I really am a demon worshiper, it's just no one had ever turned me in before because I was too useful.\" He favored her with a disarming grin.\n\nShe had no idea how to respond to that, and returned to her meal in silence. Shrugging, Kaine turned to Selsehtiriel, in concern. \"You should eat something,\" he remarked, nodding to her empty plate. \"Allowing yourself to waste away would be an absolute crime.\" His eyes roved approvingly over her figure. \"I have to say, I love the outfit.\"\n\n\"When I regain my freedom,\" the angel replied between clenched teeth, \"I will gouge your eyes from your sockets, and crucify you upside down over hot coals. That is, unless my brethren get you first; they would not be so lenient.\"\n\nThe man blinked a few times, looking taken aback, and took a bite of toast, which he chewed thoughtfully before replying. \"You know, I hate to criticize, but I don't think you've quite got the hang of breakfast conversation, love. Death threats before the noon meal are in poor taste.\"\n\nShe sniffed scornfully in response.\n\nA few minutes later, Lord Susurrous rose from his seat, tossing his napkin down on the seat he had just vacated. \"My guests, it is time for us to rejoin to the courtyard. There is an important lesson you must be taught today. As fair warning, Milyn, one of your comrades will be assisting me in this example. Please keep in mind that she is not being injured; indeed, I will be saving her life.\"\n\nDaria perked up. \"Oooh, really? Can I do it? Please please please!\" She bounced a little in her seat.\n\nHe smiled gently at her. \"Not like that, child. This calls for something different.\" At her pout, he brushed a hand against her cheek. \"I do have a present for you. Remember the commander of that failed rescue attempt that resulted in your current state? He is restrained below. Go to him, he is my gift to you. Do what you will with him.\"\n\nDaria bounded to her feet and threw her arms around his neck, kissing his cheek. Then in a flash she was off, moving too fast to be human. Milyn felt her stomach drop. What had her friend become?\n\nThe courtyard was a stone-flagged, roofless area in the center of the manor, a fountain in the center sending jets of sparkling water to arc out and down into its basin from the mouths of a multitude of leering gargoyles. Balconies were built into the floors of the two floors above ground level, allowing for viewing of whatever went on within it. Milyn and the angel were placed on the second floor, looking down at a polished wood table set before the fountain, upon which a young nun lay on her back, gazing passively up at the sky. The balconies all around were crowded with a mixture of Lord Susurrous' followers, and captive nuns in various garb, the latter gazing down at their motionless sister with worried and frightened expressions.\n\nThe Lord entered the courtyard and turned to face the onlookers. \"We are gathered here today for another lesson for you all, especially those of you who have just recently joined us. The fate of your former superior, Mother Selcrie, showed you all that opened defiance and remonstrance would swiftly have its consequences. As worshipers of the One God, there is of course another way you could attempt to escape your imprisonment here. Passive resistance is much lauded in your holy texts. You might say to yourself that while I can control your body, I can never touch your soul; as little Jyson here has. She refuses to eat, to sleep, or to act anything like a functioning human being. She has determined to die through self-denial and the mortification of the flesh, knowing that when she passes, she will be rejoined with the One God.\"\n\nHe looked back down at the slender woman lying motionless on the table. \"She is wrong,\" he announced in a voice of absolute finality. \"It is certainly not my first option, but I can indeed make your souls so unpalatable that the One God would never allow you to join with him. Attend and listen.\"\n\nMilyn swallowed hard, supporting herself on the balcony railing.\n\nSusurrous gestured two of his men towards Jyson. \"Strip her,\" he commanded harshly. With quick, strong motions, the two cut and ripped her shoddy tunic and trousers away, leaving her utterly naked. She had always been thin, but Milyn could see that she was emaciated now, her ribs defined starkly against her skin. Her shoulder-length, chestnut hair lay limply around her head, and her eyes were dull and vacant.\n\n\"I forgive you,\" she said finally, not turning her head. Her chapped lips cracked and bled and she spoke. \"I will die as I lived, in peace. I leave it to the One God to judge you for your actions, for we are all his children, no one greater than the next.\"\n\nSusurrous ran a hand up her flank, his long fingers lingering a moment to caress the underside of her breast lightly. \"Oh, I am no child of His, little one. And soon, neither will you be.\"\n\nHe began to chant in a strange language, guttural and harsh, and his fingers traced arcane signs and symbols on her bare flesh. His touch trailed a faintly glowing blue light behind it, and soon her shoulders and upper chest were covered with mysterious characters. As he began on her breasts, Milyn noticed that despite her continued immobility, he was having a marked effect on Jyson. Her nipples now rose to hard points, as if begging for attention, and down between her legs, wetness glimmered amidst her tangle of private hair.\n\nShe was silently impressed. If the spell the dark angel was casting on her was anything like the one he had inflicted on Mother Selcrie, Jyson had to be going crazy with desire right now. But the young nun simply lay there, limbs and face slack, as their captor continued his ministrations.\n\nAfter another half an hour, Jyson's body was entirely covered with symbols except for her face. Susurrous had directed his men to turn her over when he had finished on her front, and had just finished tracing the last rune on the soles of her feet. The defiant nun was breathing heavily now, her gaunt chest pushing against the polished wood, but was otherwise as inert as when the ritual had begun. Seemingly unperturbed, the Lord reached into a basket under the table, and withdrew a snake about the length of his arm, its dark scales shimmering in the light. After whispering something to the beast that caused it's eyes to glow with demonic light, he set it down on the table between Jyson's legs.\n\nThe young woman's gasped and jerked a little when its tail brushed against her inner thigh. With a soft hiss, the snake scented the air with its forked tongue, raising its head to cast about. Then inexorably, it sank down and slithered forward, directly towards the young nun's glistening, unprotected sex. Its tongue darted out again, tickling her thatch of fur and teasing her outer lips, and a strained whimper sounded from her throat.\n\nThe snake continued to tantalize her, and Jyson's whimpers began to turn into moans. Her body began to move, frustration and shame in her face a her hips began a slow, rolling movement against her tormentor's tongue, sweat breaking out on her forehead and ass. A strangled shout escaped her lips as the snake began to butt its head against her dripping hole, sliding its scaly snout inside her. She panted openly as her tight, virgin opening reacted to the slow intrusion, and began to rut backwards even harder against the ensorceled beast.",
        "Milyn felt an embarrassing wetness begin to form between her own legs, a slow burn of desire that settled low in her belly and roiled there. It wasn't that she found the scenario arousing, but Jyson's obvious ecstasy was enthralling. She couldn't help but imagine what it must feel like to be penetrated in that most private of places. The idea both frightened and excited her, and she swallowed nervously, her mouth suddenly feeling very dry. Next to her, Selsehtiriel shifted uncomfortably, her full lips twisted into a frown and her expressive eyes set in fear and confusion.\n\nThe snake was halfway inside of her now, moving inexorably inwards with slow undulations that sent Jyson mad with pleasure. Guttural little grunts dropped from her lips as her legs jerked and shook aimlessly. Her prior stoic reserve was wholly shattered, and she seemed utterly lost in the inescapable sensations assaulting her body. The little nun's eyes rolled up as her back arched, the table under her sex slick with her juices.\n\nWith a final lunge, the snake utterly vanished into the girl, and her legs immediately snapped together as she convulsed. \"Oh... OH... OHHHH!\"\n\nAs she screamed, her face flushed with passion, a change came over her. Milyn gasped in shock as Jyson's legs began to fuse together, her skin rippling as it formed into one contiguous piece. Shimmering green scales, slightly iridescent in the light, emerged on the conjoined flesh, spreading in a flow of emerald to cover the soft new limb. The tiny nun's screamed was altering along with her body, becoming high and sibilant, ending at last in a throaty hiss. As she threw back her head in bliss, Milyn could see a pair of needle-sharp fangs now extending down from her upper jaw, and past them a forked tongue flickered in and out.\n\nA minute later, the shocking transformation was complete. Jyson was no longer human, but not wholly a snake. She was something else, something that tickled faint recollection in the back of her mind...\n\n\"Lamia!\" Selsehtiriel uttered as if the word had been forced from between her teeth. \"For a thousand years those monsters have been extinct!\"\n\nJyson's torso was now wedded to the lower body of a snake. Her long, powerfully muscled tail was tipped in what looked like retractable barbs. The scales covering her new appendage were a bright green at the back, fading to a soft greenish-white on the front. Most of her upper body was unchanged, save for her new teeth and tongue. A smattering of light scales were sprinkled across her arms and back, and when her eyes opened, they revealed green orbs with vertically slitted pupils.\n\nShe blinked several times, her tail quaking with the aftershocks of the intense experience. Then her eyes focused on Susurrous, who still stood patiently before the table. Jyson gasped, twisting around and attempting to push herself upright with weak arms.\n\n\"My Lord! I can see... I can see!\"\n\nThe Lord hurriedly put a gentle hand on her chest above her breasts, keeping her lying on the table. \"Hush, little one. You are weak. Lie easy. Would you now eat something, please? For me?\" To Milyn's surprise, his voice seemed honestly concerned.\n\nJyson smiled tremulously, her face awash with powerful emotion as she gazed at him with shining eyes. \"Anything for you, my Lord, I swear.\" Her expression became rather sheepish. \"I am... quite hungry.\"\n\nAs Susurrous directed a few of his men in aiding the new lamia to the kitchens, Milyn nearly jumped out of her skin when a hand closed around her elbow. It was the angel, glaring ferociously at her. \"You must guard yourself, Sister! We cannot let him put us under his thrall. Every one of the faithful who succumb to him grants him greater strength. If he tempts you, you must repudiate him. Hold true to your faith in the One God, and he will save you.\"\n\nShe wasn't too sure about that; had Jyson's faith saved her? But afraid of the angel's fierce countenance, she nodded in agreement. It was strange: even scared, imprisoned, and angry, Selsehtiriel was breathtaking. She somehow seemed more defined than anything around her, like she was the only real thing here... aside from Lord Susurrous, who had the same aura, but even stronger. It was difficult to come to terms with. More and more over the past few days, Milyn had found herself thinking that the next morning, she might wake up and not exist; that she was only a wisp of a dream batted between great minds, to be dropped as soon as they tired of her.\n\nThe angel pulled her closer, biting her full bottom lip and glancing around to make sure their captors were too distracted with what was transpiring below to overhear her. \"Listen, Sister, there is something special about you. I can feel it, as the Fallen One down there can. It may just be our key to escaping from this place. Hold the faith for but a little while longer.\"\n\nMilyn met her blue eyes incredulously. \"How \u2013 what \u2013 me?\" she sputtered out in a low voice, so taken aback that she could not even coherently voice her objections.\n\nA few of the men began to turn away from the scene below as Jyson was taken inside, focusing once more on their imprisoned guests. \"Tonight!\" Selsehtiriel rushed out in a low voice. \"I'll explain!\"\n\nAs they were escorted back within, Milyn felt her head begin to throb. Now she didn't just have to worry about either becoming a corrupted monster or dying heroically for her faith; in addition, she was apparently now responsible for the escape of an exalted being of light and majesty who possessed powers completely beyond her understanding! What special powers did she and Susurrous mistakenly think she possessed?\n\nAnd more importantly, what would they both do to her when they figured out she was utterly plain and unexceptional?"
    ],
    "authorname": "TimeWise",
    "tags": [
        "demon",
        "nun",
        "fantasy",
        "fallen angel",
        "corruption",
        "transformation",
        "monster",
        "male dominant",
        "virgin",
        "angel"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/conversion-ch-03"
}