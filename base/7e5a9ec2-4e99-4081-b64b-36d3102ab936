{
    "title": "God of Mischief and Lies",
    "pages": [
        "~* Okay, so I've never done this sort of thing before, and to be honest, I'm a tiny bit terrified. So, be gentle with me. It's my first time.*~ \n\nIt was dark, in this tiny little ocean town. The smell and taste of salt was exhilarating to Loki, as he looked around. No one had seen him come, stepping down and out of the Bifrost. He picked a direction and walked, passing houses and cross streets and yards and cars, simply walking. It was fall here, the air crisp and clean, shivering with change and a playful wickedness. It was a beautiful night, the harvest moon shining an eerie orange in the sky, and everything was mysterious and lonely and filled with a sort of longing that made him ache. \n\nHe stopped when he came to a path, cutting to his left through the forest that separated some of the houses, now fewer and far between. It was inviting, so he took it. Leaves brushed gently at him, and fresh mushrooms sprung out of the ground, some of them wider than his outstretched hand, and tall enough to reach the tops of his boots. A curl of anticipation tightened in his stomach, though for what he didn't know, but he always trusted his instincts. The path made another sharp turn to his left, and angled upwards toward a small blue and white cottage. He headed towards it, stealthily walking the perimeter. He saw a window, the sill covered in candles, cramped together on every available inch of surface. Other than that, the house was unremarkable. But the candles made him curious. \n\nHe entered the darkened house quietly, the lock giving way with no resistance. He was the God of Mischief, and the door didn't even have a deadbolt. Any teenager with a credit card and a few seconds would have made short work of it.\n\nA tiny black and white kitten startled him momentarily, winding around his feet, purring loudly. He caressed its head for a second before gently scooting it aside with the toe of his boot. His night vision was quite good, and he made his way past the cooking area before reaching a hallway. Gently, he tried the door on his right. A sleeping woman was draped around a man, both of them naked, the glow of a computer monitor throwing the room into relief. Nothing particularly interesting here. The kitten was back, attempting to climb his booted leg. He grabbed the thing, tiny enough to fit in one hand, and placed it on his shoulder, where it stayed, content to view the world from this new vantage point. Cats always liked him, for some reason. \n\nHe turned another door knob. A soft glow lit this room, the source, a string of orange lights framing a luxurious bed. Swirls of black and grey covered the plush blanket, which had been carelessly kicked aside. Several soft looking pillows littered the ground, and more were piled haphazardly around the sleeping figure on the bed. The grey sheet she was swaddled in showed a shapely figure, one pale leg curled out. Her bare back glowed softly, illuminated by the lights, and one arm, hanging off the bed, showed a tattoo; a black and blue feather, bursting into birds mid-flight. A head of bloody red hair curled gently down her shoulders. \n\nThe kitten on his shoulders mewled softly and made as if to jump onto the bed. Loki caught it before it could land and wake the girl. She shifted some, sighing and turning her face towards him, revealing long lashes resting against her cheeks, and full lips, pouting slightly in sleep. \n\nHe turned for a second, to put the kitten down outside the door, closing it quietly, before turning and receiving a shock. The girl was propped up, pointing a rather shiny gun at his chest, eyes wide. She held it like she knew how to use it. He silently cursed himself. He'd allowed himself to be distracted. Careless, very careless. A quick survey of the room revealed that there were two separate knife hilts protruding from beneath the mattress and box spring, close to where her arm had been hanging. Two magazines that would undoubtedly find a home inside her gun were sitting on the bedside stand next to her. He also noticed the she hadn't put one inside said weapon. The gun was empty. He decided to start with that.\n\nHe put his hands in the air, a sign of submission and unarmed harmlessness. Neither of which were the least bit true. He took a step towards her.\n\n\"Don't.\" Was all she said. She shook her head, but her arm remained steady, not a single twitch. Either she wasn't aware of her lack of ammunition, or she thought he wouldn't notice her bluff. Most mortals probably wouldn't, not with such a pretty naked woman pointing such a large, shiny gun at them. \n\n\"You have no bullets.\" He said to her, taking another step. \n\n\"There's one in the chamber.\" She said, matter of factly. This made him hesitate. She was either an accomplished liar, or it was true. But why would she bother to have one in the chamber without the rest of the magazine as insurance? He chose to call her on it.\n\n\"I doubt it.\" He said to her. The fact that she didn't try to load the weapon almost made him hesitate again, but the shallow movement at her breast, the rapid pulsing at her neck gave her away. She may know how to point and shoot her gun, but she had never done either of these things at a person. \n\n\"Are you willing to bet your life on it?\" She replied smartly. He grinned and took another step, and another, until his chest was pressed against the barrel of the gun and he was merely an arms length away from her. He was pressing his luck, to be sure, but what was life without a little risk? Besides, he had surprised her, he could see. She was unsure of what to do now, and out of luck. Her wide eyes shone almost unnaturally green in the light. He gently rested his hand on the barrel of the gun, wrapping long fingers around it.\n\n\"Let me take that, before someone gets hurt.\" He said, softly. She opened her mouth to protest, but he moved quickly, snatching the gun from her hands before she could recover from her initial shock. But she surprised him, reaching for the bigger of the two knives. He caught her wrist before she could, and the other, when she lashed out towards him. He noticed, with strange approval, that she had closed her fist to land a blow against his jaw, rather than with an open hand. She knew how to fight. But he was bigger and stronger and much more immortal than she was. His hands encircled her wrists, which were small and delicate, despite her plucky attempt to fight back. He pulled her to her feet and closely against him. He could feel her body heat radiating through his thin shirt. Something about her... Her wide eyes, staring into his; her breath, coming in shallow pants through those lips; her heart beat, like a hummingbird's; and the fragile bones of her wrists, caught in his hands... he would only have to squeeze slightly... And still she fought against him, twisting her arms, trying to break free, testing the strength of her new bonds. He was going to do something foolish. Yes, he was. He could almost taste the regret, the idiocy, on the back of his tongue, but it was his nature to create chaos, even for himself.\n\nHe easily wrapped one of his hands around both of her wrists, placing the other at the back of her neck. He willed her to sleep, and was rewarded with the tell-tale fluttering of her eyelashes. \n\nBut she didn't sleep. She seemed to shake it off. He frowned, and grasped the back of her neck more firmly, staring deeply into her eyes. She stared back, now with a sort of insolence, and began wrenching her wrists from him with a renewed vigour. He tightened his grip cruelly, which brought a hiss from between her clenched teeth. The momentary pain seemed to lower her defenses, and this time, her eyes closed, body relaxed, and he caught her with an arm around her shoulders and one catching her at the bend of her legs, cradling her to him. She was so small. \n\nHe took his regrettable decision with him, out the door, and into the street from where he had come, looking up at the stars, so foreign from this earth. He willed himself skyward, pulling the Bifrost to him and simply stepping up and out from the Midgard and into Asgard. He looked down at the mortal woman cradled in his arms with a mixture of apprehension and triumph. He hadn't known what he was looking for this night, when he traveled into the Midgard, but he had found it, whatever it was. Part of him hoped it wouldn't be trouble. Part of him hoped it would.\n\nAevelyn awoke with a start and instinctively reached out for the cold comfort of her gun. Her hand groped bed sheets instead. Groggily, something registered as \"off\" in her head. Bed sheets....\n\nShe was sleeping on the wrong side of the bed. Or, rather, in the middle of the bed, which was still wrong. She only ever slept on the right side, arm draped over the edge for easy access to her gun and her knives, which, thankfully, she had never had to use. But she had been raised by a Marine, and knew how to protect herself. Theoretically, anyway. Her dream came rushing back to her. Another one of those \"helpless\" dreams, where everything she did to fight back didn't work. She hated those dreams. They frightened her more than her usual nightmares. \n\nYawning, she rolled to the correct side of the bed and reached for her phone to check the time, but this time, groped only air. Her bedside table was gone. Her eyes snapped open. Not just her table. Her room had disappeared. She stared at an unfamiliar ceiling, wrapped in unfamiliar sheets in an unfamiliar room. \n\n\"Are you hungry?\" A voice echoed softly to her. She sat up quickly, keeping the sheets clutched over her breasts. The man from her dream stood before her, holding a large bunch of red grapes out to her. The torches (Torches? Where the hell was she?) in their sconces reflected their firelight upon the fruit, making them gleam like precious gems. He continued to hold the grapes out to her, though he was several yards away, and began walking slowly to her. The gesture was oddly inviting. She stayed where she was, though, watching him warily. His wild, chestnut brown hair gleamed softly in the firelight. A green tunic brought out the green in his hazel eyes, and his leather breeches looked like painted-on oil spills. What appeared to be doeskin boots completed the ensemble. She had never seen anyone dress this way before. But she had never actually seen torches before either. \"They're fresh.\" He said, his voice silky. To demonstrate their apparent freshness, though she hadn't argued it, he plucked one off the vine and placed it between his lips, sucking it slowly into his mouth. She was momentarily mesmerized by the way his cheeks hollowed. Then he bit down on it, the fruit crunching loudly. \"Not poisoned.\" He said, smiling gently. He continued his slow walk to her, stopping only a few feet from her, hand still extended. \n\nShe was tired and bewildered and vaguely frightened (only vaguely?), and though the fruit looked tantalizing, she would have to step out of the comfort zone of the bed to accept his offer, and that was so not happening. So, she just kept staring at him, which was easy, since he wasn't exactly hard on the eyes. \n\n\"I'm going to have to come to you, then?\" He asked, smoothly. \"That isn't a regular occurrence.\" He walked closer to her. Her heart began to slam itself against her ribs, jumping into her throat painfully. He came to sit at the bedside, and tempted as she was to scoot away from him, pride kept her rooted in place. She watched him pluck another grape from the vine, his long fingers rolling it lazily between thumb and forefinger before placing it between his teeth and biting it neatly in half, exposing the deep purple flesh inside and peering at it intently. Then he looked up at her, catching her eyes with his and popping the other half into his mouth, keeping painfully intense eye-contact the entire time. He grinned at her and she felt an unexplainable heat flush her cheeks. Another grape, but this time, he held it out to her. She hesitated.\n\n\"I know you're not mute. You spoke enough to threaten my life last night. And you attempted to strike me, so I know you're not timid.\" He looked at her, expecting a response, but she didn't know what to say, so she kept silent. People tended to fill silences, and you learned more by listening. \"I promise. They're delicious.\" She reached out and gingerly took it from him. He smiled his encouragement, and she bit down on it. It crunched gratifyingly between her teeth and exploded with a juicy sweetness. \n\n\"Oh.. wow.\" Another grin, one of genuine happiness that set her heart pounding again.\n\n\"I did tell you.\" He said, pulling another from it's stem. This time, when he offered it to her, he put it a few inches from her lips. She was going to refuse, but the look in his eyes, a tentative softness that was oddly compelling, made her think twice. They stared without blinking for a long moment, before she opened her mouth slightly. He slid it slowly between her lips, and when she closed her mouth to bite down on the fruit, he pinched her lower lip gently. Another flush warmed her skin, and her lip tingled fiercely, even after he had retracted his hand. He did not offer another grape. Instead, they simply stared at each other. He seemed just as bewildered as she did. \n\n\"Did you not plan this step?\" She asked, when her curiosity got the best of her. A look of startlement sparked his eyes, then he threw his head back with gleeful laughter. \n\n\"Clever girl. You read well. I admit, I had no intentions of taking in any... guests when I entered into Midgard last night. You took me by surprise. I took me by surprise.\"\n\n\"I don't understand. What were you doing in my house?\" He shrugged, a graceful movement that meant absolutely nothing, but was beautiful all the same.\n\n\"Exploring.\" He answered cryptically. She raised an eyebrow. He knew he made no sense, so she didn't bother asking for a clarification. He could see the question on her face and answer if he so chose. She wouldn't ask, because that's what he wanted. And indeed, he stared at her for a second before that grin uncurled. \"You won't play? You are clever. You, of the porcelain skin and bloody hair. I think you will do quite nicely.\"\n\n\"Do for what?\" She asked. This conversation was quickly turning onto a road that should have a \"No Trespassing\" sign on it.\n\n\"Whatever I like.\" He said, softly. A shiver crawled it's frigid way up her spine, and her tongue seemed to cement itself to the roof of her mouth. There was a long silence, then-\n\n\"What is it you do?\" She was taken aback.\n\n\"I beg your pardon?\"\n\n\"In your mortal world, what is your occupation?\" She hesitated at \"'mortal world'\", but answered anyways, unsure of the odd compulsion that pushed her to be honest with him.\n\n\"I don't really have an occupation. I'm a bartender. And a waitress. And a cook.\"\n\n\"All at once?\" He asked. She didn't miss the soft tone of patronization in his voice.\n\n\"No. I have several different jobs.\" He inclined his head in acknowledgement.\n\n\"And your hobbies?\" She shrugged. \n\n\"I have a band.\" She said. \"We play around town sometimes.\"\n\n\"And what do you play?\"\n\n\"I sing.\" He grinned.\n\n\"You enjoy the limelight.\"\n\n\"Where am I?\" She asked, abruptly. It was time to stop beating around the bush. And, honestly, she was surprised it had taken her this long to get serious. She had, after all, been kidnapped by some odd sort of escaped Renaissance Fair Psych patient. \n\n\"You are in Asgard.\" She gave him a shrug and shook her head. \n\n\"The realm of the Gods.\" He reiterated. She sucked in a deep breath and held it for several seconds before letting it out slowly.\n\n\"So... did you miss a dose or something?\" She asked. \"Or was it more like One Flew Over the Cuckoo's Nest?\" \n\n\"I have no idea to what you are referring,\" He answered. \"But I have the odd feeling you might be mocking me.\" She drew back as he rose from the bedside and towered over her, a chill filling the air, his eyes sparking bright and angry. \"That is not advised. I don't take it lightly, being ridiculed.\" His voice, instead of growing loud with anger, grew quieter, a deep, growl. \n\n\"Don't get angry with me.\" She snapped, poorly hiding the derision in her voice. \"You take me out of my home, and bring me to... to wherever this is, and then tell me I'm in the \"'realm of the Gods'\"? You can't see how I might not take you seriously?\" She watched him hesitate for a second, and she nearly squirmed under his intense gaze, his brow furrowed with thought.\n\n\"You are an insolent little thing.\" He said to her, ponderously, though she didn't think he meant it badly. \n\n\"I'm only being honest.\" She told him. He smiled slightly.\n\n\"That's ironic, for I am Loki, God of Lies.\"\n\n\"I don't believe in God.\" She said. She meant to goad him, but all she received was a grin, eyes wild with joy and, deeper, something much more sinister. She was startled when he moved quickly towards her. She tried to move back from him, but he was too fast. She stared up at him as he held one of her wrists above her head, pinned to the headboard, and the other pinned next to her on the mattress. Fierce victory flamed bright green in his eyes. She could feel her heart painfully in her chest, her breathing short and shallow as he put his face very near hers. She could smell him, a sweetness mixed with the leather on his clothing. \n\n\"I will give you a God to believe in, and a King to kneel to.\" He purred at her. \"You will pray to me, give penance to me, pay tithe to me, and no other. I will fill you with dark flame, and you will come to crave it.\" As he said this he moved closer to her, until his last words were brushed against her lips. She shuddered, heat stabbing at her core. She tried to summon up the fear that would be appropriate in this particular situation, but what frightened her the most was her utter lack of fear. She could feel her own frantic breathing against his lips as he kept her there, and she suppressed the urge to flick her tongue against his bottom lip. But when he leaned back, he continued to hold her eyes with his, the grin on his face, the satisfaction in his eyes told her that he knew, knew her odd compulsion to taste him.\n\n\"You don't fear me.\" He said to her, releasing her now bruised wrists. \"I like that. Bold and prideful. I do so enjoy a challenge.\" She watched his eyes travel downwards, a smile that was sin incarnate uncurling on his mouth. She hastened to cover herself up again, as she had released the sheets covering her breasts when he had grabbed her. \"Oh, don't cover up for my sake, little bird.\" He said, wickedly.\n\n\"It wasn't.\" She shot back, illiciting only a laugh from him. \"Look... I have to go to work in the morning. And I have a gig in a week. I'd like to think that if you were going to kill me, you'd have done so by now, so, could you maybe let me go, and take another hostage? Maybe a prettier, less employed one?\"\n\n\"And why should I indulge you? I brought you here for myself. I had no thought for your convenience then, nor do I now. I have you here, so taking you back seems rather counterproductive, does it not?\"\n\n\"People will look for me. My roommates, my band members, my coworkers. They'll freak out and find me.\"\n\n\"Let them look. I've already told you, we're in Asgard now. No Midgardian will find you again, unless I wish it so.\"\n\n\"Well, can you wish it at least for the gig? It's important.\"\n\n\"What is a 'gig'?\"\n\n\"It's... a performance. My band, we're playing and it's really important.\"\n\n\"You plead not for your life, but for your music.\" She saw the bemusement on his face.\n\n\"Well... yeah.\" She said rather lamely. Her heart sank when he began to shake his head slowly.\n\n\"I know not why, or how, but for some reason... you pique my curiosity. Like a cat watches a mouse. I want to watch you run away before I chase and devour you. Alright, little one. You have a week. After your performance, you are mine. Say your goodbyes, or don't. It matters not. One week from this night. And please, before you inevitably try, don't bother running. I am a God. I will find you, and punish you if you attempt to evade me.\"",
        "Before she could open her mouth to reply, he wrapped his hand firmly around the back of her neck and stared deeply into her eyes. She felt a great weight on her chest, and her body seemed to float on the mattress beneath her. Her eyelids began to get heavier and she relaxed into the darkness crawling like mist into her mind. The last thing she heard was his whisper before all went black. \"One week.\"\n\nA week later, and Loki knew he had made the correct decision, choosing the girl. He couldn't keep her out of his mind, like a cur worrying at a bone. Constantly distracted by her, he delighted himself with new thoughts, ideas, fantasies. Her reaction to him took him completely by surprise. She showed no fear of him, and didn't give in to the escape that desire offered her, either. She had been completely honest with him, and yet, not nearly as forthcoming with him as he would have liked, mysterious enough to keep him wanting more, to keep him curious. And tonight, he would hear his little bird sing. \n\nHe wended his way to the front row, the stage dark. He could see the silhouettes of the musicians as they settled into place. Then... her voice. Like crushed velvet; soft and dark as chocolate melting, he felt he could almost roll it on his tongue, brush it with delight against his bare flesh. And not just her voice; her lyrics wound around his soul, filling him with fierce joy; jaded, honest, cutting deeper than shards of glass, and yet, filled with naivety and childish wonder. The music came to a victorious crescendo, and the spotlight was thrown on her. \n\nShe was glorious. Her hair was a bloody halo, her eyes huge and gleaming green in the bright light, her lips the same bloody color as her hair. She wore a black top that was as tight as a second skin and he found it irresistibly erotic, watching her ribs expand as she breathed in time with the music, the small gap of flesh between her shirt and her simple, green shorts, invited him to lick a line across it. Underneath, a pair of striped leggings pulled the gaze down her legs to a pair of green Chuck Taylors. He had to remind himself that it would not be appropriate to take her then and there, as she danced and strutted around the stage. She was a force of nature, a feral dream, a fitting target for the God of Mischief and Chaos. She brought her own chaos, as the small crowd exploded in a frenzy of joy upon her illumination. She launched into another song, the beat deep and strong. She was in her element on stage, being adored. This girl, this woman... She was going to be perfect.\n\nHe left a little before the last set, though he was loathe to miss a minute of his star shining so brightly. He lounged in the chair in the dressing room he knew had been hers for the night, playing idly with a single rose, still a tight bud, it's stem long and bright green. He heard the music cut, the crowd roar, and her thanks, muffled by the walls. Then, she burst into the room, laughing with unadulterated joy, a blurring glow of red and green happiness. He stood quietly, waiting for her to notice his presence. When she did, she balked slightly, but the happiness wasn't completely snatched from her face.\n\n\"You perform beautifully.\" He said to her, offering the rose. She looked up at him with those potent, verdurous eyes, and accepted it, her fingers brushing his for a fraction of a second before she brought it to her nose and inhaled it's scent. She was so small. He seemed to tower over her, and it made him feel possessive, and oddly protective of her. \n\n\"Thank you.\" She said, her voice softly hoarse from use. He watched her gently peel one of the outer petals out and stroke it softly with the tip of her finger. He noticed her nails were painted a shiny black. She seemed intent to study the rose, rather than meet his gaze. And now that she was clothed and on somewhat more equal footing, she seemed restless and uncomfortable in his presence. \n\n\"You thought I wouldn't come for you?\" He asked, mildly amused. \"Or, you hoped?\" She gave a twitch that wasn't quite a flinch, and became even more studiously interested, only now with peeling a chip on her nail polish. \"Look at me, little one. I'm not upset with you.\" She raised her head and met his eyes. An odd vulnerability resided there. \n\n\"I wasn't sure.\" She blinked, and broke eye contact so quickly he almost felt a physical loss. Then she shrugged and turned from him, pulling a leather jacket from the coat hook on the door and slipping into it. She zipped it partially and turned to him, letting out a shaky breath. \"So... D'you wanna go get a drink?\" Admittedly, he hadn't expected this, and was rather taken aback. \n\n\"Is there nothing you'd rather do? This is your last night, you know.\"\n\n\"I think getting drunk is appropriate then, don't you?\" She arched a shapely eyebrow at him and opened the door walking through, then stopping and looking at him, waiting for him to follow. He did, walking slowly behind her, his strides long enough to match almost two of hers. He did not often follow, and he felt an odd, surreal sort of displacement as he followed her into the night. \n\nThe bar was dark, and music played loud enough that conversation had to be carried quite loudly. She sat up at the bar and ordered with a mere gesture. The bartender lined up five shot glasses and poured an amber liquor into them. Loki stood stiffly behind her as she paid, and took one glass daintily between her thumb and middle finger and downed it with an experienced toss of her head. Without looking around, she held one out for him. He hesitated, but took it nonetheless. She gestured to the stool beside her. He sat and watched her throw back another shot. He grinned suddenly and followed suit.\n\n\"Gods, that's awful.\" He said, and laughed. The whiskey was harsh and it bit even as it warmed on the way down. She took the third shot, and ordered four more.\n\n\"I know. It's the cheap stuff. But it does what it's supposed to.\" \n\n\"And that is?\" \n\n\"Not sure yet. But I trust it to do it's job anyway.\" She toasted him, and took another. The bartender looked oddly at her, then him, and told her to slow down. She ignored him. \"C'mon, you've got four to catch up.\" He put his hands up in surrender. \n\n\"I think not.\" She looked at him dryly. \n\n\"What, you Asgardians can't hold your liquor? I thought you were a god? Specifically, one I could believe in? I can't believe in a god that can't shoot whiskey.\" It seemed she became more verbose with each shot.\n\n\"You're baiting me.\" He said.\n\n\"Indeed, I am.\" She said wryly, before taking yet another shot. \"There, now you only have three. I took one for the team. Go me.\" She stared at him and raised an eyebrow in challenge. No one had ever treated him with such irreverence before. He was amused by her, puzzled, itchingly curious. She was an enigma, and he found her irresistibly delicious. He took one shot, then another, and the last, meeting her challenge with his gaze. She smiled at him; a puckish one-sided curl of her lips. Her eyes seemed to glow even in the dim light of the bar. \"You know... if I had to be kidnapped by anyone, it should be you.\"\n\n\"And why is that?\"\n\n\"Because you're delusional. And gorgeous. Kinda perfect. And you smile like the cat that ate the canary.\"\n\n\"Silly girl.\" He said, lowering his voice and leaning into her. \"Don't you know, you're the canary?\" She met his gaze for a bit, then said, quite honestly:\n\n\"I'm too drunk for philosophical conversation. I'm surprised I can even say 'philosophical'.\"\n\n\"Celebrate the little victories.\" He said, rather snidely. \"Perhaps we should stop, while you can still articulately speak five syllable words?\" \n\n\"Mmmm. You're making fun of me.\" She said. \n\n\"Only a little.\" He said, grinning. He drew back slightly as she raised her hand softly to his cheek, then, inexplicably, moved it to cover the lower half of his face, keeping only his eyes exposed. \"What are you doing?\" He asked, perplexed.\n\n\"Even when you smile, your eyes stay injured.\" He flinched back from her. This was not a conversation he had expected, nor was it one he was going to wade into. Not now. Not ever. He took her arm and pulled her from the stool, keeping her steady on her feet. \n\n\"Where...?\"\n\n\"We've dallied long enough. Come, Midgardian. We depart.\" He pulled her out the door as she mumbled something sarcastic. A fine sliver of anger had pierced him. Slaves weren't meant to be observant. But a small voice whispered to him that this girl of ivory was nothing close to a slave. That she would never allow herself to be, and that even if she did, if he could break her, she wouldn't be nearly as much fun. And oddly, she did seem willing enough to come with him. He wondered if it was because she was just as curious about him as he was about her. He pulled her roughly to him, having no scruples about whether anyone was watching, and concentrated on the Bifrost, pulling them into Asgard. \n\nThey later arrived as his bed chambers, and he let her go and stepped away from her to gauge her reaction. She moved to the bed, the only familiar thing in the room to her, and sat on it, slouching in a languid manner that made her seem graceful and fluid. She looked directly at him with an intensity that belied the large amount of alcohol she had so recently imbibed.\n\n\"What am I doing here?\" She asked. He repeated the same answer he had given her a week before.\n\n\"Whatever I please.\" She rolled her eyes, clearly unimpressed.\n\n\"Could you maybe be a little more ambiguous?\"\n\n\"Ask an ambiguous question and receive an answer of the same ilk.\"\n\n\"I don't know how else to ask the question.\"\n\n\"And I know not another way to answer it.\"\n\n\"What exactly will be my purpose in this place? What use will my existence serve? Obviously, you went through so much trouble bringing me here, I hope it's something more than just witty conversation, which I'm sure you could find here.\" He stalked towards her.\n\n\"Your purpose will be just as I've said. You will be whatever I tell you to be. If that means you are a conversational partner, then so you shall be. If I tell you to pose for a painting, you will not move, not one single iota, until I tell you otherwise. If I hand you a pitcher and tell you to pour wine, you will do so. Do you understand me?\" He was bearing down upon her now, so close, a hard breath would have knocked her onto the bed. \"If I tell you to get on your knees and pleasure me, you will do it. If I tell you to read aloud to me, or sing, or clean, or just remain silent. You. Will. Do. So. Is that clear? Your existence will be to make me happy, to do as I tell you to the best of your abilities. Anything otherwise, and you will see yourself punished.\" He drilled into her eyes with his, expecting acknowledgement of some sort, but she simply met his gaze with an unflinching impudence, green eyes blazing with anger. It filled his belly with anticipation, the tension he used to get before a hunting expedition. She brought out such predatorial instincts in him. He backed away from her, but rounded the other side of the bed and sat down on it. He beckoned to her.\n\n\"Come here.\"\n\nShe came to him and stood an arm's length away, staring down at him defiantly. She would do as he said for now, but she made it clear she would remain recalcitrant throughout. He relished the surprise on her face when he leaned forward and unzipped her jacket and slid it from her shoulders, using the leverage to pull her forward to him. Her top was a simple black v-neck t-shirt. He put his hands on her thighs and pulled her to him, so that she was straddling him on the bed, her face level with his. \n\n\"Kiss me.\" He demanded. \n\n\"Why?\" She asked.\n\n\"Because I told you to. You're intoxicated, why don't you just allow the alcohol to keep you without reluctance, or sudden twinges of morality?\" She laughed bitterly.\n\n\"Let the whiskey keep me morally bankrupt, is that it?\"\n\n\"You'll be among kindred spirits.\"\n\nShe studied him for a while, then her face lost the hardness of obstinacy. A subtle softness crept into her eyes and she lowered her lips to his. He sighed as she tentatively brushed her mouth against his, like moths caressing each other. He pulled her closer to him, slipping his fingers under the top and holding her by the waist. She gasped and fell into him, lips pressing deeper against his. She kissed like she knew what she was doing, molding her lips to his. She had her hands gently cradling his face, but when he crushed her close to him and slid his tongue against hers, she moaned quietly and tangled her fingers in his hair, balling them into fists and using them to control the angle of the kiss. She certainly could hold her own. He tried to force himself to temper his passion, quieting the urge to rip her shirt to pieces and hold her skin against his; until she bit him. She didn't nip, she bit his bottom lip, quickly and sharply enough to pull a gasp from him, while a shudder of electric pleasure/pain shot up his spine. Then, as if to rub a healing balm on a wound, she pulled his lip into her mouth and sucked gently on it, sliding her tongue sensuously the length of it, flicking momentarily at the spot where she had bit him. He groaned and abandoned all gentility. If she wasn't going to play fair, then neither would he.\n\nHe gripped either side of the v neck and pulled, ripping the shirt very neatly in half. Before she could say anything about it, he pressed his mouth against hers again. She tasted like cheap whiskey, but it was far from unpleasant, quite the opposite, in fact, and he explored the warmth of her mouth with pleasure. Regretfully, he pulled from her, but only to pull the remains of the shirt from her, and to lean her back a bit so he could admire her. She was curvy, with a small waist and wide hips. Her stomach rounded ever so slightly, and he longed to run his tongue into the tempting dip of her bellybutton. He licked the line of her cleavage; the bra she was wearing pushed her breasts together, high and tight. He nipped along the cup line, illiciting new noises from her. He rolled his eyes up her body, taking her in at this moment, truly unguarded for the first time. Her eyes were closed, head thrown back. Her red hair cascaded in loose waves down her back and shoulders, flickering with the firelight. Heat exploded through him, and he picked her up, her legs locking instinctively around his waist. He had one arm under her, supporting her, and another at the small of her back. She was startled into clutching herself tightly to him as she was suddenly airborne. \n\nHe walked with them to one of the walls, pushing her back into it with a little more force than necessary. She let out a small noise, it was not an unhappy one, he noticed with pleasure. She liked it rough. He lifted her by the thighs until her legs were wrapped around his ribs instead of his hips. He took another moment to stare at her, her pale skin glowing creamy white in the firelight, and he could see her pulse vibrating in her stomach, like a tiny bird's. He pressed hot, rough, nipping kisses against the skin on her belly. Her skin was indescribably soft, and he licked a line along the ridge of her ribcage, pulling a moan from her. She had kept one fist tangled in his hair, and the other one now gripped his shoulder, nails digging into his shirt and skin. He turned his head and kissed her forearm, tracing the shape of her tattoo with his tongue. Then, when he reached the inside of her wrist, he bit, sinking his teeth just above that small, fragile line of pulse, with a growl. She let out a sound that was part moan, part scream and he felt her body shudder, hips bucking against his chest. She liked it very rough. \n\n\"Fuck!\" She shouted. He growled again, in agreement, pulling her away from the wall and tossing her onto the bed. She pulled herself into a sitting position, panting, and watched him. He stalked towards her, pulling a dagger from where it had been hidden in a sheath at the small of his back. He advanced on her with it, and she crawled toward him, much to his surprise. She wasn't frightened of him in the least. He wondered if it was genuine trust, indifference towards her own life, or the influence of the alcohol. Her body was immensely pleasing as she moved on her hands and knees across the bed, undulating with each movement, as if she had muscles in places she shouldn't. Her breasts were aching to be let free of their captivity, which was what the dagger was for. When she reached him, she crawled with her hands up his body, staring boldly into his eyes as she began to slip the first button of his shirt. He had put on a simple black tuxedo shirt, and leather breeches, fit for a casual night in Midgard. He stilled her hands. She peered curiously at him through her lashes.\n\n\"I wish to see you in all of your glorious beauty.\" He put one hand gently around her throat, her heartbeat fluttering, and her breath coming in shallow pants. He could feel her frailty, hold her life in one hand, where a mere curl of her fingers would extinguish it. He moved her backward a bit, bending her so that her covered breasts were pushed upward to him, like an offering. He slipped the tip of the dagger into the middle of the seams where the underwires met, and pulled gently upward, slitting the fabric with hardly any pressure at all. A powerful need raged through him. They were beautiful. Large and pale, with dusky pink areolas surrounding puckered nipples that just begged for his attention. He dropped the dagger beside them on the bed and kissed her fiercely, his hands sliding from her waist to her back, over her ribs, and he was once again reminded of how small she was. With his hands spread wide, he could caress the sides of her breasts with his thumbs, and his pinkies reached well past the beginning of the outward curve of her hips from her small waist. He could feel her breathing beneath his palms, and he found this wild spark of life to be painfully erotic. He explored her with his hands, as if he would feed from her with his palms, and he was hungry; oh, so ravenously hungry. \n\nShe needed him, god, she needed him. She wasn't sure when it had started. She'd kissed him, sure, but it had been a compulsion brought about by the look in his eyes, hungry and sad and waiting for her to tell him no. The first initial brush of lips had been mellow, though it had brought an odd fluttering in her stomach, but when he had slipped his fingers beneath her shirt, when his skin touched hers, a small spark set something alight in her. The insistent press of his lips provided fuel and she was set aflame. He kissed her like a starving man. It took her breath away, and she lost herself in the sensation of his mouth on her skin. She should have been upset when he cut through her bra (her favorite bra, no less), but she only found it made her ache crawl deeper, lower. He took his time with her, exploring her thoroughly, totally ignoring the part of her she felt needed him the most at this moment. He had cut her bra off, but failed to touch her breasts yet. Her pride teetered on the brink, she almost, almost asked him to give her aching nipples attention, but no. He'd take far too much joy in that. He had already gotten her mostly naked, much less writhing beneath his insistent mouth; he wouldn't get more from her.\n\nShe shuddered when he finally palmed her breasts, the calluses on his hands rubbed against those sensitive peaks of flesh and she arched her back, pressing herself ardently into him. He seemed to purr above her, enjoying her reaction to his touch.\n\n\"Oh, little hummingbird, you vibrate beneath me. I will have you singing in no time.\" His voice slid like velvet against her and she bit her lip and met his eyes, torn between defiance, and a desire so fervid she was almost maddened with it. \"All you have to do is ask.\" She wouldn't. Not yet. ",
        "She closed her eyes and out curved her back again, this time stretching luxuriously, soaking in the warmth from the fireplace; the silken sheets beneath her bare skin; his hands, roughly callused, yet tender. She saw that he understood her action and took it for what it was, a gesture of defiance, even as it was also a silent plea for continuance. Like a cat pretending indifference, it enjoyed being stroked, but was far too prideful to beg you to continue. He grinned to her and squeezed her breasts, then opened his hands until only his palms touched her, and he circled them around her nipples, brushing every callous against them, pulling shiver after delicious shiver from her. She could hear herself whimpering quietly as she squirmed with pleasure. She had her eyes squeezed shut, otherwise, she would have seen him lower his face to her skin. She gasped when a nipple was enveloped by the fiery clutch of his mouth. She moaned loudly as he flicked at it with his tongue and then... He nipped quickly at her. She gave a sharp explosion of noise that was somewhere between a sob and moan. She threw her head back and shuddered violently before breaking down and whispering one breathless word.\n\n\"Harder.\"\n\n\"Mmmm, I might hurt you.\"\n\nShe had to swallow the word down. She wanted him so badly it hurt. She needed him. Looking into his eyes at that moment, watching them gleam fiercely in the firelight, filled with desire, and a predatory something that should have frightened her, but instead filled her with an odd urge to sink her teeth into the skin on his shoulder. \n\n\"Harder.\" She demanded again. He kept his eyes locked with hers as he lowered his mouth to her other nipple, sweeping his tongue over it, then locking his lips around it and pulling it roughly into his mouth, grazing his teeth against it before sinking his teeth into her. She screamed this time, screamed her pleasure for him to hear, and raked her fingernails down his arms. She grit her teeth in frustration; he still had his shirt on. She wanted his skin against hers. He had raised his head from her, to watch her reaction, so she took the opportunity to sit up and take the dagger from the bed beside them. He seemed startled, but didn't flinch away, even when she pushed him back and got on her knees in front of him and slipped the blade between the buttons and sliced each one off. She looked at him, almost expecting to see anger in his eyes, for ruining his shirt (though an argument could be made for her own shirt, and bra), but instead, his eyes held a heat that jumped from him and raced through her, tightening her body and skipping her breath. She pushed the shirt from his shoulders, and actually had to avert her eyes. Her already heated loins practically convulsed with desire upon seeing him shirtless. He was as pale as she was, like he had been kissed with ice, and his body was firm and defined, with ridges of muscle, both soft and masculine. \n\n\"Look at me.\" Came a soft demand. Her breath caught in her throat as she looked back to him. \"You find me unfavorable?\" He asked. \n\n\"What?\" She asked, puzzled. \n\n\"The scars.\" He said. She hadn't seen any. She peered closely at him and saw what he had mentioned. A mass of scars on his right side seemed to run in dripping rivulets down his ribs, stopping just above the slight protrusion of his hip. They seemed to originate from his shoulder, some flowing down to his bicep, but only lightly. \"I had hoped you wouldn't find them distasteful, but it stands to reason that you would.\" \n\n\"What happened?\" She inquired. \n\n\"Some of the Gods took rather unkindly to a few... pranks I pulled, and decided to show me my place.\"\n\n\"They beat you?\" She asked.\n\nHe smiled bitterly. \"Nothing so uninspiring, no.\" He said, and to her, he suddenly seemed tired. He sighed and ran his fingers through his hair, an unconscious gesture filled with a barely contained, epicurean grace. \"They chained me inside a cave with a serpent. I think they had originally meant it to kill me, or consume me, but the thing seemed content with simply dripping it's venom upon me. It had an... infelicitous effect upon my flesh. I managed to break free, but not before I found myself ruined.\"\n\n\"Ruined?\" She asked, incredulously. \"You're beautiful. If anything, the scars make you more so.\" \n\n\"Beautiful?\" He asked with a mixture of disbelief and scorn. \"I am a God!\" He shouted at her, lashing out startlingly. \"A God surrounded by Gods. Any woman who would have me has been repulsed. They could easily have someone less broken, certainly someone in higher favor with the other Gods. I am discommodious, to say the least, and certainly detestable.\" She shook her head slowly at him. \n\n\"No.\" She said. \"Anyone who wouldn't find you beautiful is blind.\"\n\n\"It is you who are blind.\" He spat at her. Loathing filled his features, and he turned from her. She reached out for him, but he had taken a few steps away from her. She stepped from the bed and followed behind him.\n\n\"Stop.\" She said, softly. \"Please.\" To her surprise, he did, but he didn't turn to face her. She gently slid her fingertips across his back. When he didn't pull away, she kissed just beneath his shoulder-blade, then slipped her arms around him. He remained frozen beneath her touch. She circled around him and looked up at him. He had his eyes shut, features schooled into a blank mask. She ran her hands down the smooth, muscled flesh of his chest, grazing him with her nails, leaving faint raised lines behind. He shivered slightly. She continued to touch him, drawing his hard pink nipple into her mouth, after the same fashion he had to her earlier. She flicked her tongue rapidly against it, then nipped down on it. He twitched and gasped for her. She saw that he had tilted his head back, mouth slightly open. \"What makes you think you're undesirable?\" She asked, stroking his face softly.\n\n\"I haven't felt the warmth of a woman's touch since the serpent.\" \n\n\"You are so beautiful, it makes my chest ache.\"\n\nHe simply looked at her, staring deeply into her eyes, as if to detect any hint of a lie there. He wouldn't find any. She took his face in her hands, stood on tiptoe and kissed him chastely on the lips, once, twice, three times. He placed his hands possessively on her hips, and the gesture felt natural, like they belonged there, and no where else. He slid his tongue lightly along her top lip, pulling a shudder from her. She pulled gently from him, and kissed the underside of his chin, then the hollow of his throat, the moved to his right shoulder and kissed the scars on his shoulder, moving slowly down to his bicep, where she bit lightly into the thick tissue, and he gave a rumble, somewhere between a purr and a growl. She slid her fingernails teasingly down his chest and stomach, and he laughed softly and twitched slightly when it tickled. Her hands reached the leather seam of his breeches, and she began to pull the leather laces loose. She looked up at him while she worked, and he met her gaze with one of such profound tenderness that her knees got slightly weak. No one had ever looked at her like that before. \n\nShe pulled the last of the laces free and slid her hands underneath the breeches, smoothing them down the slight curve of his hips. He helped her slide them down his legs and he stepped out of them and pushed them aside, barefoot. She didn't remember him taking his boots off. But, there was a more important distraction than that at hand. She had knelt to pull his breeches off, and was now face to face with the ripe fruit of her effort. He was long, and curved slightly downward, with enough girth to be genuinely intimidating. She had been blessed with several well endowed partners in her life, but Loki made her wonder how exactly he thought it was gonna work. But she refused to hesitate, for he might take it as reluctance on her part. She rolled her eyes up at him. He was looking down, watching her, his hair sliding forward to make a thick curtain around his face, but she could see his eyes, glazed with lust, and that was all the encouragement she needed. She wrapped her hand as well as she could around his base and squeezed lightly. She was rewarded with a shiver and a moan from him, and he seemed to clutch blindly for her. \n\nBut that wasn't what she wanted, oh, no. She had been considering teasing him a little longer, but she wasn't doing this for him, not necessarily. She wanted him, wanted to taste him, more than she had ever wanted anyone before in her life. She looked up at him again, to make sure he was watching, and licked the sensitive underside of his head, long and slow. She felt his body shudder, and she wrapped her lips tightly around him in response, laving him with her tongue. She heard his sharp inhalation and slid her tongue lower, alternating between long slow licks, soft, light fluttering, and swirling her tongue in circles around his head and on his shaft. As soon as she began to sink her mouth deeper on him, he pulled away.\n\n\"Love, I confess, if you continue, I'll no longer be able to support myself.\"\n\n\"Then sit down. I'm not done.\" She told him, completely unaware that no one had ever spoken to him like this in his life, much less a mortal. He did as she bade him without argument. She crawled towards him, watching his eyes slide along her body, flitting from one part of her to another, and, for once, she wasn't insecure in the least. He treated her like she was beautiful, and she felt that way. \n\nShe reached him and was pulled into a kiss so deep she felt it to her toes. He moaned into her mouth as she slid her hand along the hard length of him, now slick from her ministrations. She worked her hand over him, twisting and teasing. She was going to bend down to begin again, but he told her to stand. She did so, rather shakily, and he began to unbutton her shorts, doing so easily, despite his haste. He yanked them down around her thighs, and her leggings followed suit. He stopped briefly to examine her thong. It was delicate looking, pristine white lace with a tiny pink bow at the top. \n\n\"Don't rip those,\" She said. \"They're my favorite.\"\n\n\"Mmmm, I think they may be my favorite as well.\" He murmured. She was surprised when he pushed her gently backwards and got on his knees in front of her, sliding her shorts and leggings down to her ankles before placing a warm kiss just above the lace of her thong. She gasped, and he continued, kissing her thighs, her stomach, and, tantalizingly, dipping his tongue underneath the lace. She was trembling by now, holding onto his shoulders for support as he gently took the lace in his teeth and slid it downwards. She could hardly stand now, as heat throbbed inside her. He straightened up and groaned when he saw her uncovered, then grabbed her firmly by the waist, spun her around, and pushed her on the bed. She let out a surprised yelp, and felt him ripping her leggings and shoes off before wedging himself between her legs. His skin was warm and smooth against her thighs. He kissed her pubic mound, and she squirmed, but then... then he descended upon her, without any warning. He ravaged her with his mouth, nipping and teasing; licking her, long and slow, until he got to that most sensitive of places. She gave a gasp that could have been a scream, and he sucked gently on her, flicking his tongue rapidly and filling her with electricity. While he did this, he slowly worked the tip of his finger inside her. She arched her back and grasped at the sheets while he slid his finger deeper, until he was to his last knuckle. \n\n\"My, but you are a tiny little thing.\" He said, raising his head from her. \"However am I going to fit?\" As if to prove it, he curved his finger a little, rubbing against her sweet spot. She moaned, and clenched her fists tighter. \n\n\"It's... been a... while.\" She managed to gasp, as he kept pressing his finger inside her. She was close, so close, pleasure slowly building to a crescendo inside her.\n\n\"I would continue to taste you, because you taste like heaven. But... I have far deeper needs to quench.\" He told her, sliding his finger slowly out of her, and she felt her whole body tighten with an attempt to keep him inside her. He groaned and closed his eyes, before slipping his finger in his mouth and hollowing his cheeks around it, enjoying her taste in earnest. Then he stood and leaned over her, kissing her roughly, pushing his tongue into her mouth and kneading her breast until she moaned into his kiss and writhed beneath him. She could taste herself faintly on him, and she sucked gently on his tongue. Then, and only then, did she break down, because she knew he was on edge, too.\n\n\"Please.\" She whispered to him. \"Please, god, just fuck me.\" It was her turn to relish the surprise on his face this time, until it was replaced by one of determination. He grabbed her thighs and pulled her to him, and she felt him, hard and hot, as he pressed against her wetness. She angled her hips to encourage him and he pressed himself slowly into her. She arched her back and grasped at his arms. He was huge, and he was going so slowly, so agonizingly slowly. Pain and pleasure lanced up her body. He had a hand gently around her throat and his head thrown back, the other hand squeezing her thigh. It was an obvious effort for him, not to just shove inside her, and she did try to relax. He was only about halfway in when she saw him looking at her, teeth bared in a snarl of pleasure. She protested when he pulled out of her. But he crawled on the bed and propped himself up against the pillows and headboard, beckoning to her.\n\n\"This will make it easier, I think, little bird.\" He said to her. \"Though, I've never had anyone quite as small as you. I've deflowered women less unyielding.\" She crawled to him, and into his arms. He held her by the hips and helped her center herself on his rigidity, and she began to sink down on him, oh, so slowly. She felt his hands convulse on her hips and he hissed quietly. By the time she was impaled completely upon him, they were both panting, and she had her face buried at the bend of his neck, hands tangled once again in his tousled hair. They were both still for a while, allowing her to adjust to his size, and she could feel him respond to the way her body tightened around him. \n\nShe'd waited long enough. Regardless of the regret she would surely feel in the morning, she rose up, until only the tip of him was enveloped, then sank down again, slowly. They both moaned, nearly in unison, and she began to work herself over him, twisting her hips in a circular motion as she moved, bringing an array of noises from him that made her breathing catch in her throat. That glorious wave of pleasure was looming largely over her again. She could feel her body flush feverishly as they began to pick up the pace; and his nails, even trimmed short as they were, began to break the skin on her hips, encouraging her to go faster. \n\nHe was panting her name, and murmuring sweet, nonsensical things to her in time to their rhythm, his hands sliding up her back to press her closer, and her nipples against his chest, rubbing against him with every rise and fall of their bodies, was like sweet torture. \n\nHe stopped their movement, pushing her off of him as she cried out in loss, only to be shoved down onto the bed. He slid his hips between her thighs and pierced her again, shoving cruelly into her until he reached the end of her, before pulling out and doing it again, and again. They were riding that thin, shining line between pleasure and pain, and she was crying out with every thrust as he pushed them closer to the edge. \n\n\"Fuck! Yes! Loki! God! Unfff!\" \n\n\"Say it.\" He growled to her; the thick, wet sound of flesh meeting flesh giving it an even more carnal resonance . \"Beg me. Make me your God, your King. Beg me and I'm yours.\" It felt far too good for her pride to object, and she was more sober now than she had ever been in her life. And god, was she close. \n\n\"Please.\" It started as a whisper, but she repeated it with each thrust, over and over, and it went from a whisper, to a whimper, to a demand in time with their coupling. She was so close. So close. Then, he did it; the thing that didn't just tip her off the edge but threw her, after a running sprint, off the precipice of pleasure and pain, which ran together like paint, blurring and mixing until it was black, burning with dark flame. He leaned in, one fist balled into her hair, the other clamped firmly at her waist, and sank his teeth into the flesh of her shoulder. Each thrust pressed and pulled the skin there, and she screamed, felt that tidal wave inundate her with a crash and release of pleasure. She locked her legs around his hips and raked her nails down his back as she gave a shudder, her body tightening convulsively around him as he shoved his own orgasm as deep into her as he could. Through his hands clutching fiercely at her, his teeth in her flesh and her nails in his; through the marriage of skin and seed and blood, they marked each other. Loki, God of Mischief and Lies, who thought himself above such silly things as mortals, poured himself into her, just as she had demanded; he who never took demands from anyone. They burned and branded each other, rising anew from the ashes, christening this new life with searing passion and the taste of unquenchable need. They burned with the unbridled heat of new love, both timid and strong, gentle and adamant, and they would forever be marked with it. In skin, seed, and blood.\n\nThey lay, panting and unable to move, against each other. He had his face buried against her neck as she shivered beneath him, still sensitive, and he inhaled her soft, sugary scent, and he knew he would never hold another's scent so dear. When he could muster the strength, he slid from her and rolled onto his back, groaning with effort, and pulled her to him so that her cheek lay against his chest, and together they slept; loved, satisfied, and truly home for the first time that they could remember in a long time, if, perhaps, ever. \n\nA God for a Goddess. \n\nA Queen for a King. "
    ],
    "authorname": "firefaery",
    "tags": [],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/god-of-mischief-and-lies"
}