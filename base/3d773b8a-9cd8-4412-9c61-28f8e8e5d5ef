{
    "title": "If Things Were Different",
    "pages": [
        "*Author's Note: Marine Corps reserve units have a small cadre of active-duty, permanent personnel assigned to provide support to the reserve unit. They are known as the Inspector-Instructor or I&I staff, and are separate from the reservists who come in for two days each month as well as two weeks in the summer. They work very closely with the reservists and often attend the training they help set up for the reserve unit. \n\nThe senior I&I staff member is referred to as 'the I&I' and is almost always a commissioned officer. He/she and the I&I staff do numerous things for the reserve unit so it can come in and train without spending valuable time doing coordination with other units or reserving a firing range, etc.\n\nThe reserve unit has its own commander, and he or she is in charge of all reserve personnel but not the I&I staff.\n\nWhen I served on active duty, I saw many male first sergeants and a couple of females. Both of them were very unattractive women. Since leaving active duty, I 'met' one on Facebook of all places who is hot as hell, and she is the inspiration for this story.\n\nLastly, Marine first sergeants are never called 'top'. That is an Army term and never, ever used in the Marine Corps for first sergeants. It is, however, used for Marine master sergeants and master gunnery sergeants, although the latter are increasingly called 'master guns' rather than 'top'. Unlike the Army, first sergeant and sergeant major aren't temporary billets. They are both permanent ranks and Marines do not go back and forth the way soldiers do.\n\nOkay, enough background as this is a romance tale, not one about the Marine Corps or reserve units or even first sergeants. It's...story time!\n\n*****\n\n\"Good morning, First Sergeant. You're in early.\"\n\n\"Good morning, sir. I am. I couldn't sleep so I decided to go PT then come to work.\"\n\n\"Let me guess. Ten-mile run?\" the handsome, young, male captain said with a smile.\n\n\"No, sir. Just five today,\" the older, very attractive, female first sergeant replied.\n\nHe wanted to ask if this was another disagreement at home, but it wasn't his place and the first sergeant would tell him if she wanted or needed his advice.\n\nFirst Sergeant Amie Carlson was 38 years old and had a little over 19-years of active duty under her belt to include a three-year tour as a drill instructor at Parris Island, South Carolina, back when Captain Dustin Whitaker was a 15-year boy with his first real crush on an older woman, his high school math teacher.\n\nFirst Sergeant Carlson had been with I&I staff supporting a reserve unit in Tacoma, Washington, for about a year and a half, and had another seven months to do before she was eligible to retire. She still hadn't decided whether or not she would, and a lot her decision was dependent on her long-time, live-in boyfriend, 40-year old Gill Haines.\n\nGill had agreed to move with her a second time after having spent four years at Marine Corps Air Station Cherry Point and another three at Marine Corps Base Camp Pendleton, California. He was a high school teacher who had little trouble finding work so that wasn't a big deal for him. His issue was with the military in general and those who knew the couple found it difficult to square the fact that she was a hard-charging Marine while he was a laid-back, long-haired 'hippy' type, more interested in solar power than weapons systems.\n\nCaptain Whitaker had arrived just three months ago, and 1stSgt Carlson had been a godsend in terms of helping him learn the ropes. He'd been an infantry platoon commander (not 'platoon leader' as in the Army) and company commander with a combat tour in Afghanistan, and was a very sharp, up-and-coming young officer. Everyone had to go through an initial learning curve during any new assignment, and this tour as an I&I was no exception. Having 1stSgt Carlson there made climbing it a whole lot easier. The fact that she was one of the best-looking women Marines he'd even seen (of any rank), made it even more so.\n\nAmie Carlson was extremely health conscious and an accomplished runner with a runner's build with one exception. She had a very nice 'upper body' that was difficult to ignore even in uniform. Captain Whitaker was too professional to stare, but he was human and male, and it was impossible not to notice. \n\nThe same held true for her still very young-looking and incredibly-attractive face. He'd seen a handful of attractive female officers and even dated one for a few months a couple of years back. But really good-looking, senior female enlisted Marines were a rare find. In fact, they were almost unheard of. And yet here she was sharing an adjoining office with the Inspector-Instructor, separated by just a door which connected the two spacious rooms with their own individual shower and restroom.\n\nCaptain Whitaker was her boss but not her commander. He was the I&I and her reporting senior or in Army-speak, her rater. He wrote her fitness reports and she owed him her loyalty, but he wasn't in command of anything. So far, she was happy to give her loyalty even though she'd been around long enough to know it didn't matter whether or not she liked or even respected a particular officer. That she did was just an added bonus. That he was strikingly handsome was another.\n\nShe'd seen dozens of very good-looking Marine Corps officers throughout her career. Many of them were pilots, but during her first tour as a first sergeant with a Stinger missile battery at MCAS Cherry Point, she'd run into quite a few other nice-looking male officers. Being a consummate professional, she drew the line at dating them, even though several of them hadn't drawn similar lines themselves. Besides, she was with Gill so she had no interest in dating anyone else, military or civilian.\n\nIn each case over the years where an officer had asked her out, she'd politely and professionally let them know that was out of the question, and in all but one case, they'd backed off. In the one where a particular major wouldn't take 'no' for answer, she'd had to do something for the first and only time in her 19-career, and reported him for sexual harassment after his third, very-open and aggressive request for a date. What really pushed over the edge was that this major was married and had just become a father and yet he was hitting on her in no uncertain terms.\n\nAmie had always told other female Marines that doing so was a last resort unless there was also unwanted physical contact or an implied threat to their career. When any Marine of any rank asked a female Marine out, there was no real harm in that and she assured them it would happen\u2014often. That was true because in a world where nearly everyone is male, even the most unattractive females get a lot of attention, both wanted and unwanted.\n\nA polite 'no thank you' was more than adequate in most cases. A second such solicitation merited a little more 'oomph' but nothing formal. A third time was when things got serious, but even then, every case was different and whenever possible, one should avoid taking action formally.\n\n\"You don't ruin someone's career because they find you attractive. We're Marines, but we're also women, and you can be both,\" she'd said many times over the years.\n\nNow, at the age of 38, and having a full-time partner at home, she had little concern with being hit on at work, and especially so by someone like Captain Whitaker who could easily date pretty much any woman he wanted, and she was certain he'd never want to date someone her age even if she wasn't technically his subordinate. In a word it was a moot point.\n\nThe I&I flashed a perfectly straight, white smiled at her then said, \"Oh, okay. Slacking off, are we?\" in response to her 'just five miles' comment.\n\n\"I'm not getting any younger, sir,\" she replied with an equally perfect smile of her own.\n\n\"Oh, before I forget, do we have both training areas locked on for the reservists next month?\" he asked ignoring her comment about age.\n\n\"Yes, sir. Both of them are ready to go. We just need the reserve unit to designate a range safety officer and we're all set,\" she informed him.\n\n\"Great. I'll give Lieutenant Colonel Woods a call and see if he can give us a name,\" the captain said before going into his semi-private office. \n\nHe left the door open as he nearly always did. It was a sign of trust and respect for the first sergeant who felt like the two of them made a pretty good team. She'd worked for four different company commanders as a first sergeant, and Captain Whitaker seemed to be someone she could really work well with.\n\nWhat she didn't want to get into with her relatively new boss was how she was 'late' and why that was such a big deal to her. The last thing she needed was for him to think she couldn't handle her personal affairs. She and the I&I were the ones getting paid to take care of the problems other Marines had, not hers. \n\nBeing late was a very big deal because Gill had no desire to have children nor did he want to get married. Ever.\n\n\"Marriage is an outdated, patriarchal construct, and as an ardent feminist, I want no part of it,\" he'd told her more than once. \n\nEven now, all these years later, she often wondered why she stayed with him. And then she remembered how good looking he'd been, how 'dangerous' he'd seemed, and how incredible he'd been in bed. He was still reasonably attractive and still pretty darned good in bed, but he was becoming harder and harder to live with as the years went by.\n\nHis being a civilian had made things a lot simpler, too, and she'd been in no hurry to settle down so after meeting him at a bar one evening in New Bern, North Carolina, she'd found herself in bed with him that night and living with him a couple of months later and now, these many years later, they were still living together.\n\nAmie had been on the pill for as long as she could remember, and they'd only had one 'scare' and that had been nearly four years ago. No, the pill wasn't 100% effective, but it was pretty close. And although she was an incredibly private person and would never tell anyone with whom she wasn't very close, she loved making love, and Gill was still a very good partner who satisfied her physical needs. \n\nThe problems really began when she made a conscious decision to come off the pill for the first time a few months ago after discovering a small lump in her breast during a routine self-examination. She'd had it checked out immediately, and to her great relief, it was nothing but a benign cyst. Even so, her doctor strongly suggested she consider other means of birth control as he explained the increased risks of breast cancer over time in women who used the pill. To say Gill was unhappy about her decision was a huge understatement.\n\n\"I don't want to have to wear fucking condoms!\" he told her seconds after she explained why she wanted to stop taking it. \"And I'm damn sure not getting myself snipped!\"\n\nAmie gently reminded him that he didn't want children, and that a vasectomy was the surest way to prevent that from happening. But contrary to his stated beliefs about being a strong supporter of feminists ideals, he wasn't about to risk reducing his pleasure during intercourse by even the slightest amount in order to prevent an unwanted pregnancy, and he'd read somewhere that having a vasectomy did that in some percentage of cases. \n\nTired of repeatedly dealing with the subject, Amie only told him that getting pregnant was now a very real risk unless someone took responsibility. She didn't bother pointing out she'd done that since she was 18-years old, and that it only made sense he take a little responsibility from here on out. Fairness was also an issue, but Amie had long understood that life often isn't fair, so she chose not to even bring it up.\n\nFor her part, Amie was an independent woman, but had never considered herself a 'feminist' beyond demanding equal pay and respect. She loved being a woman, and although she never flaunted her looks, she was well aware that she was almost always the best-looking woman in any room, and even in the United States Marine Corps, that came with a few unspoken perks. \n\nShe'd gotten to where she was on her superb performance, but she had no desire to give up being a woman in order to be a successful staff NCO, a term unique to the Marine Corps. Other services drew the line at E-7 to be considered a 'senior NCO' but in the Marine Corps, a staff sergeant/E-6, had the same privileges as an E-7 in the other services such as not being able to be reduced in rank except by a general officer in command. \n\nTwo days later, Amie had a visit from the Red Baron and breathed a sigh of relief as the current crisis flowed away naturally. She hadn't mentioned it to Gill nor would she. However, the problem was still very much there, and unless her boyfriend was willing to endure a couple of days of discomfort, condoms were their only real choice. \n\nSure, she could probably get an IUD, but why the hell should that be up to her again, when getting Gill to wear a raincoat was such an ordeal? In fact, it was taking all the fun out of having sex\u2014something they were having less and less as the birth control issue took center stage night after night.\n\nAs bad as that was, Amie knew if something didn't change, it would start reflecting in her performance at work, and for a very professional First Sergeant of Marines, that was unconscionable.\n\nAround 11:45, Captain Whitaker popped his head into her office and said, \"Hey, First Sergeant. I got a name from Colonel Woods to be the RSO. It's Lieutenant Callaghan.\"\n\n\"Oh, okay. Thank you, sir. I'll make sure range control gets the name. Are you going out to PT?\"\n\n\"As a matter of fact I am,\" he told her. \n\nHe smiled then said, \"But only five miles.\"\n\nFirst Sergeant Carlson laughed then said, \"Oorah, sir!\" which was Marine-speak for anything but 'no', and the Army's equivalent of 'Hooah'.\n\nAmie took an hour for lunch, and when she came back, she forgot the captain was going running and had no idea he was back in his office. She saw the door was cracked a couple of inches as she grabbed some paperwork that needed to be signed. She picked the folders up and walked straight in so she could drop them in his in-box when she stopped dead in her tracks.\n\nHe was standing there buck naked with his back to her in front of his wall locker. She was two steps inside the office before she noticed and tried to quietly back out when he noticed her over his shoulder.\n\n\"Sir, I am so sorry!\" she said as she continued backing out.\n\nHe quickly reached for the towel around his feet and said, \"Shit! I thought for sure the door was shut tight. My apologies, First Sergeant!\"\n\n\"No worries, sir,\" she said as she shut the door. \"I should have been more careful.\"\n\nShe stood there for a second inside her office, her back to the door, not sure what to do. For someone who'd seen it all and who never got rattled, Amie Carlson was rattled.\n\nShe was well aware the young captain had a very athletic body. She just had no idea it was that athletic. His back was wide and tapered into a narrow waist which was a pretty incredible view in and of itself. But those two butt cheeks were so tight and perfect and....\n\nShe also couldn't help but notice the long, thick scar on his back where shrapnel from an exploding RPG round had somehow found its way through the back of his kevlar vest during an ambush on his first and only tour in Afghanistan. She'd noticed the Purple Heart the day he checked in, but hadn't asked about it. It came up only once and he downplayed it as 'being in the wrong place at the wrong time'. But the Bronze Star with 'V' device next to the Purple Heart said otherwise.\n\n\"Get a hold of yourself, First Sergeant,\" she said quietly while realizing her heart was racing and her palms were sweaty. \"What are we here? Sixteen?\"\n\nShe shook her head then shook it off as she waited for the door to open again.\n\n\"I'm very sorry, First Sergeant,\" he told her sincerely. \"I was so sure the door was shut tight.\"\n\nAgain she said very professionally, \"No worries, Cap'n. Shit happens, right?\"\n\n\"Yes, it does, but maybe we should check into getting a deadbolt. I take this sort of thing very seriously.\"\n\nAmie knew immediately he'd had sexual harassment drilled into his head since day one, and even though there was no harassment, she understood his concerns.\n\n\"Sir? Please don't give it a second thought. And for the record, I don't run around reporting my seniors for just any reason.\"\n\nThe I&I was grateful to hear her say those words out loud, and with that the incident was over. The image of his naked body, however, was permanently seared into her memory.\n\nThings always got very busy the week before the reserve unit came in, and both the first sergeant and the I&I were 'up to their asses in alligators' getting everything locked down tight before they rolled in Saturday morning.\n\nThe unit CO, LtCol Brian Woods, showed up Friday evening to check on preparations after working a long day as a very successful attorney in the local area.\n\n\"Everything looks great. As usual,\" he told the captain.\n\n\"Thank you, sir, but the credit goes to the first sergeant.\"\n\nThe older man smiled and said, \"We both know that, Dustin. But as the I&I everything that happens\u2014or doesn't happen\u2014around here, is your responsibility. Well, until I come in and take over, that is.\"\n\nHe looked at Aimee then said, \"Thanks, First Sergeant. We also both know who the continuity is around here and who's making the I&I look good.\"\n\nShe smiled politely, happy to let her boss take the credit. Like all good staff NCOs, Amie Carlson understood the different roles officers and enlisted Marines played, and she loved her role and was very, very good at it.\n\n\"I appreciate that, sir, but the captain's picked everything up very quickly. If I do decide to retire next year, I won't have to worry about this place, that's for sure,\" she said still smiling and giving her immediate boss a nod as she publicly complimented him.\n\nNo one had ever called her a kiss-ass because she wasn't. She just called 'em like she saw 'em, and Captain Whitaker was one of the good ones. Were he not, she'd have chosen her words more carefully in a way that showed respect without offering any unmerited praise. But in his case her kind words were very much in order.\n\n\"Okay. I'll be in tomorrow around zero six,\" the unit CO informed them. \n\nMarines never, ever said 'oh-six hundred' let alone 'oh-six hundred hours'. That was Army talk and Marines never used Army talk.\n\nBoth of them understood that meant they'd be in by zero five in anticipation of his arrival should he or the unit need anything, and they'd be lucky to leave before midnight on Sunday. That was just part of the job, and neither of them gave it a second thought.\n\nAs always, the morning of the first day of a two-day reservist weekend was insanely busy. The only thing that prevented it from being outright insane was all the prior planning done by the I&I and the staff. \n\nReservists were civilians who came in for two days a month and 'played' Marine or soldier, sailor, or airman\u2014unless they were activated and/or sent to a combat zone. Then there was no playing involved.\n\nMany of these young reservists were college students or former active-duty Marines who missed the camaraderie. In all reserve units, people from all walks of life enjoyed serving in the reserves, and this unit was no different. There were lawyers, accountants, FedEx and UPS drivers, a mail carrier, a grocery store manager, a couple of police officers, a dock worker, a car salesman, a stay-at-home dad, and even two or three folks who were currently unemployed.\n\nThe reserve unit sergeant major stood in front of the reserve battalion and called it to attention then executed an about face and waited as LtCol Woods began walking toward him right at 0800.",
        "\"Sir, the battalion is formed,\" the sergeant major said while saluting the CO.\n\n\"Very well,\" he said quietly as he returned the salute then commanding, \"Post!\"\n\nOn his command the company first sergeants went to positions behind their units as the company commanders took their places in front of them while the sergeant major took his new position off to the side.\n\n\"At ease!\" the CO said before addressing the unit explaining what they'd be doing that weekend as well as the next several months. \n\nWhen he was finished he turned the battalion back over to the sergeant major who instructed the first sergeants to get their Marines loaded onto the trucks waiting to take them to a firing range where they'd be shooting machine guns as well as other small arms for the next two days.\n\n\"You ready to roll, First Sergeant?\" Captain Whitaker asked as Marines grabbed their gear and mounted up.\n\n\"Yes, sir,\" she said immediately. \n\nThe I&I had his own government-issued vehicle but preferred to ride with the reservists because officers were supposed to share hardships not avoid them. Riding in a truck wasn't exactly a hardship, but driving a sedan while Marines rode in the back of trucks was unacceptable to him even though no one would have cared.\n\nBoth of the active-duty Marines talked non-stop with reservists all the way to the range. It was a pleasant change of pace from being in the office five or more days a week doing paperwork or coordinating future training events.\n\nCaptain Whitaker smiled but didn't say anything when he heard a corporal quietly say to a sergeant, \"Damn, man. The first sergeant is hot!\"\n\nIt was a private, personal comment and not sexual harassment. It was also true. He took a quick look over at her, and even in her desert camouflage utilities or DCUs, she was still very attractive. The quick look must not have been so quick as she looked back and caught him staring. She smiled and when she did, Whitaker quickly turned away feeling foolish, embarrassed, and unprofessional. Then again, he was a man and she was a very attractive woman so he wasn't going to beat himself up for it. He'd just make sure it didn't happen again.\n\nThe two of them spent the day going from one gun location to another observing only, unless they saw a potential safety issue. Even then, unless it was life threatening, they would grab the senior Marine and quietly point it out so he could correct his people. It was all just a part of basic leadership, and both of them had that down pat.\n\nAs nightfall came, Captain Whitaker asked if the first sergeant was ready to set up their two-person shelter halves which resembled pup tents in the Boy Scouts except that they were less comfortable and not as roomy. \n\n\"Let's get it done, sir,\" she said with her typical can-do spirit.\n\nThey quickly snapped up the canvas sheets, staked them into the ground, and made them rainproof just in case. Few things were worse than waking up in the dark as rainwater filled the tiny little 'tent'.\n\nBeing male/female, they couldn't share a shelter half so they set up two of them side by side and perfectly aligned with those in the reserve unit but separated by about 20 feet as they weren't part of the unit.\n\nA little after 0100 or 1am, everything was set for the next day which would start with reveille at 0500, chow at 0530, and first rounds downrange by zero seven thirty.\n\n\"Good night, Cap'n,\" the first sergeant said after they were satisfied everything was locked on for the next day. (The Army says 'laid on'\u2014another term Marines never use.)\n\n\"Good night, First Sergeant,\" he replied.\n\nIt was a little after 2am when Whitaker noticed a dim, red light in the shelter half next to his as he lay there wide awake. That meant the first sergeant had her flashlight out and was probably reading a book.\n\n\"You still awake?\" he said quietly.\n\n\"I am. I can't sleep,\" she said just as quietly.\n\n\"You wanna talk?\" Captain Whitaker offered.\n\n\"That's okay, sir. It's just personal stuff, and I don't air my dirty laundry. Or I should say, I won't air my dirty laundry beyond what I shared with you the first week after you checked in.\" (The Army says 'in-processed' a term Marines never...okay, by now you get it, right? :-) )\n\nWhitaker sat up, pulled on his sweatshirt then his boots then got out of his shelter half.\n\nHe tapped on the canvas of hers and said, \"Come on. Out with it.\"\n\nHe heard her rustling then saw her head pop out.\n\n\"No, sir. Seriously. It's all just personal stuff.\"\n\n\"Hey, you're the first sergeant, First Sergeant. You have no one to complain to but me. And I don't consider just shootin' the shit at um...0215...complaining. So what's going on on the home front?\"\n\nAimee sat up, turned around then folded her legs 'Indian style' and started talking.\n\n\"Damn. That's tough, First Sergeant,\" he replied after she gave him the gist of it, sticking only to the main theme of not wanting children and the breast cancer scare. Whitaker was smart enough to piece the rest of it together.\n\n\"So do you want kids?\" he asked.\n\n\"Me? Oh, gee, I don't know. I mean, I'm 38 years old, and there's no way I'd have kids unless I had a husband. And a husband who really wanted them, at that.\"\n\n\"So...is that a 'yes'?\" he asked with a smile.\n\n\"Yeah. I guess so,\" she finally admitted being slightly less formal for the first time. \"I just don't see a guy like that in my life in the foreseeable future, though, so I suppose it's a moot point.\"\n\n\"You never know. Sometimes things have a strange way of working out.\"\n\n\"True statement,\" she said in typical Marine-speak. \"I guess the hell of it is I know this relationship isn't working anymore. But where relationships are concerned, it's pretty easy to find yourself on cruise control, and before you know it, a whole lot of years have flown by. And then you find yourself sitting there scratching your head wondering what the hell went wrong.\"\n\n\"I don't offer unsolicited advice to people so I really have nothing to say about that other than I'm sure you'll make the decision that's right for you.\"\n\nShe looked over at him in the near blackness and was touched by his kindness and respect for her privacy. And no, she most definitely did not need anyone's advice.\n\n\"How about you, sir? Anyone special in your life?\" she asked wanting to move away from her own personal woes.\n\n\"No. Not since college. I got pretty serious my junior year with someone, but I also realized it just wasn't working out.\"\n\n\"Too young to tie the knot?\" she offered.\n\nHe chuckled quietly then said, \"Well, I was. She was almost 40.\"\n\n\"No shit? So you were what? Maybe twenty? And she was...forty? You're a regular MILF Hunter, Captain,\" she said with a quiet laugh. \n\nShe sat there for a moment before saying, \"Jesus. I think I just called myself a MILF. Wow. Talking about feeling old.\"\n\nHe chuckled at her comments then said, \"You know, it wasn't like that. We met at a bar and we really hit off. The age thing was never an issue. Things got pretty serious pretty fast, and I thought...who knows?\"\n\n\"Why'd it end? If you don't mind telling me,\" she added.\n\n\"Yeah. Um...that's the embarrassing part,\" he began.\n\nHe took a deep breath then said, \"Well, you see...it turns out she was um...married.\"\n\n\"Ah, the plot thickens,\" Aimee said without judgment.\n\n\"I had no clue. Literally and figuratively,\" he told her in reference not only to her well-kept secret but his youthful ignorance.\n\nShe laughed again as he explained.\n\n\"She and her husband had an open relationship, and she never wore a ring. We'd never been to her house before, and I never thought to ask why. She just always wanted to hang out at my place. So the first time we went to her house it was pretty late at night, and I wasn't walking around checking out photos or looking into closets for a man's clothes, you know? And then we're um...you know...and this guy walks into the bedroom.\"\n\n\"Holy shit! That must have increased the pucker factor,\" she said enjoying their conversation.\n\n\"I thought he was drunk and somehow walked into the wrong house or maybe he was breaking in until he casually said, 'Hey, honey' to her.\"\n\n\"You're shittin' me!\" Aimee said with genuine surprise.\n\n\"Oh, no. Gospel truth. Needless to say...things...stopped working immediately, and as I got up to get dressed and leave, she started telling me how it was no big deal, she really liked me, her husband didn't care, blah, blah, blah. But I did care so I walked out and never looked back.\"\n\n\"Damn. Not to minimize what happened, but that may be the best story I've ever heard,\" she quipped.\n\n\"It's funny, but that experience with her taught me a couple of things. The most obvious was to tactfully ask, 'Are you married?' before getting involved.\"\n\nAimee laughed again then asked, \"And the second?\"\n\n\"Oh, right. That would be that I most definitely prefer older women to girls my age. Not all older women, of course. But given a choice between two intelligent, attractive women where one is say...40...and the other is maybe 25 or so, I'd gladly take the one who's 40 every time.\"\n\n\"Damn, sir. You're full of surprises,\" she said with a smile but feeling very...unsettled. \n\nIt was a new kind of feeling she'd never experienced before around him. She assumed it was just human nature to feel flattered by a comment that made her feel like she wasn't 'over the hill' or 'washed up' but then again, maybe it was something more than that. It was after now after 3am and she was too tired to give it any more thought and let it pass.\n\n\"Yeah, I'm a regular laugh a minute,\" he said in a self-deprecating kind of way, and that was something else First Sergeant Aimee Carlson found very...appealing. She liked strong, self-confident men, but she didn't like cocky, blowhard, assholes. \n\nAgain too tired to think it through, she had a passing thought that this young officer was the kind of guy she wished she'd been able to find ten years ago, although not an officer, of course. Just someone like him. And now, at 38, she felt trapped in a relationship that no longer made sense, and this particular man was not only way too young, he was also her boss.\n\nThey said 'goodnight' again but neither of them slept more than hour before getting up at 5am and heading toward one of the dozen or so Port-a-Johns located about 100 yards downwind from them.\n\nThey ate chow together but neither of them spoke unless it was official business. Day One had gone off flawlessly and everything was set for Day Two. All they had to do was well, keep things on cruise control until around 1400 or 2pm when Lieutenant Callaghan would call 'cease fire' and the reservists would begin breaking down their weapons and start cleaning them before loading back up on the trucks and heading back to the headquarters building.\n\nOnce all of the weapons were securely back in the armory, LtCol Woods left around 2000 or 8pm, and that gave the I&I and his first sergeant some much-needed quiet time to write reports and take care of a ton of other paperwork.\n\nIt was around 11 o'clock when they heard someone pounding on the front door of the building. It was locked and anyone who needed to be there would be able to get in.\n\n\"What the hell?\" Captain Whitaker said as he stood up.\n\n\"I'll check it out, sir,\" she said knowing that was her job even though he was the male.\n\nWhen she got to the door and saw who it was, she was not happy.\n\n\"Gill, what the hell are you doing here?\" she asked. He knew better and she knew he knew it.\n\nAnd then she smelled the alcohol.\n\n\"Are you drunk?\" she asked with disgust.\n\n\"Maybe I am,\" he said loudly as they stood in the foyer.\n\n\"And you drove here like that?\" Aimee asked now getting angry.\n\n\"So what if I did?\" he asked with an attitude. \"It's not like you can make me do push-ups...First Sergeant.\"\n\nThe sarcasm was as heavy as the smell of the booze.\n\n\"I'm almost done. Go wait in the car and I'll drive us both home, okay?\" she said trying to calm him down.\n\n\"Like hell I will!\" he blared. \"What the fuck are you still doing here anyway? And where's that prick...El Capitan?\"\n\nWhitaker heard the voices clearly all the way in his office so he strolled out front to see what was going on in a non-threatening way so as not make Aimee feel like she needed his help\u2014even though she might.\n\n\"Oh, there he is! The little soldier boy himself!\" Gill said as he rendered his version of a salute. \"You in there fucking my girlfriend, soldier boy? What? She didn't tell you we ain't fuckin' no more 'cause I gotta wear a...condom?\"\n\nAimee was deeply embarrassed. Gill had only been this drunk a few times in all the years she'd known him, and he'd never done anything like this before.\n\n\"Do you wanna come in and have a cup of coffee?\" Captain Whitaker offered politely.\n\n\"Coffee? I don't want your fucking coffee, soldier boy. I want my girlfriend to come home and fuck me!\" he slurred.\n\n\"Gill? You're embarrassing me and yourself. Please go wait outside until I'm done....\"\n\n\"Done what? Done fucking this clown over here?\" Gill said pointing to Whitaker.\n\n\"Sir? I'm gonna have to ask you to please go outside. We won't be much lon....\"\n\nGill walked toward the much-larger man and stopped right in front of him. He jabbed him in the chest then said, \"I don't take orders from anyone, soldier boy. Especially not from you!\"\n\nCaptain Whitaker took a step back not because he was afraid of a drunk, but to give Gill some space to think things over.\n\n\"First Sergeant? If you need to leave....\" Whitaker said.\n\nShe glared at Gill as she said very firmly, \"No, sir. I'm not going anywhere with him.\"\n\nHe staggered toward her then said, \"Oh, really? If I tell you you're coming home with me, then you're coming home with me! We haven't done it in like two weeks and that's gonna change right fucking now!\"\n\n\"Like hell it is,\" Aimee told him. \"Go sober up and we'll talk about it. Tomorrow.\"\n\nShe went to walk away when her boyfriend grabbed her wrist. She turned around, broke the wrist lock, and put her finger in his face just like a Marine Drill Instructor would:\n\n\"You get your sorry, drunk ass out of my building right now or I swear to God I'll lay you out right here, Gill.\"\n\nCaptain Whitaker had been ready to step in, but the first sergeant, who was maybe 5'6\" and possibly 110 pounds didn't need any help.\n\n\"And don't even think about driving. You hear me?\" she said in her DI voice.\n\n\"Well, yes ma'am!\" he said trying to salute again. \"Fuck you and your soldier boy very much, ma'am!\"\n\nAnd with that he staggered out.\n\n\"Do you want to go with him and make sure he doesn't drive?\" the I&I asked.\n\n\"He knows better, sir,\" she said as they watched him fling open the large, glass double doors as he continued ranting and raving.\n\nAs they went back inside she said, \"My apologies. I did not want you to see that.\"\n\n\"You're not responsible for him, First Sergeant. And nicely done, by the way.\"\n\nHis supportive comment made her laugh, breaking the tension.\n\n\"Hell, I'm afraid of you now!\" he told her as they sat down to finish up.\n\nWhen they were finally done, Captain Whitaker asked if she wanted him to walk her out.\n\nShe sat there knowing she shouldn't say it, but between the fatigue and the anger and the disgust she said, \"Okay. Just not for the reason you're thinking.\"\n\nHe stood there, looked at her, then realized what she was saying as she immediately apologized. She didn't need his help, but she did want him to be with her.\n\n\"I'm sorry, sir. I have no idea why I said that. Can we back up a few seconds and forget that happened? Please?\"\n\nHe waited for a second then said, \"If things were different...I'd love to walk you out or even ask you....\"\n\nHe stopped talking before saying something he'd regret.\n\nAimee sensed what he meant and cut in by saying politely, \"Maybe one day they will be, sir. Different, that is. As someone once told me, life has a funny way of working out sometimes.\"\n\n\"Ah, yes. That guy. I believe he said 'thing's have a way of working out', but I do recall that,\" he told her finally smiling.\n\nShe smiled back then said, \"Well. Goodnight, sir.\"\n\n\"Goodnight, First Sergeant,\" he told her as she picked up her things and headed out.\n\n\"Oh! There's no need to come in until noon on Tuesday,\" he called out.\n\nThe first sergeant stopped, looked over her shoulder, smiled brightly then said, \"Aye, aye, sir!\" \n\nThe way she smiled at him this time was different. Even the way she looked at him was different.\n\n\"If...things were different,\" he said quietly to himself as he watched her leave. \"But they're not so...get a grip, Captain.\"\n\nHe stood there for a while trying to remember how long it'd it been since he'd gotten laid. Had it been a month? No, more like six weeks. Six weeks. That was what was insane.\n\nAimee didn't say a word on the ride home, and Gill was still too drunk to talk intelligently, so he sat there staring straight ahead.\n\n\"We'll talk in the morning,\" Aimee told him as she led him to the coach at their home. \"This is your rack tonight. Don't even think about coming into the bedroom or I swear to God....\"\n\n\"I'm sorry, baby. This no sex thing is just...bullshit!\" he said out of the blue.\n\n\"I'm not exactly thrilled with it, either, but we're not discussing this until you're sober.\"\n\nShe shut the door, and for the first time in many years, she sat down and cried. It was over almost as quickly as it started, but she'd had it with Gill. She was sick and tired of being the only adult in the relationship and sex or no sex, she wasn't gonna live like this anymore.\n\nWhether she retired or re-enlisted, Gill wasn't going to be a part of her life. \n\nIf she stayed in Aimee was 'in zone' for promotion to sergeant major, something she'd aspired to be her entire career. It meant at least two more years on active duty after getting promoted so she was looking at as many as three-to-four more years. For someone who'd started thinking seriously about having a family for the first time, that was a very long time. But to be a sergeant major....\n\nThen again, this weekend had caused her to start thinking thoughts she hadn't allowed herself to think for a very long time. Life...or things...really did have a way of changing, but making those changes was up to her and no one else.\n\nWith that, she peeled off her uniform, took a quick shower, and slipped into bed and within two minutes she was out like a light.\n\nAimee had no idea what time it was when she woke up, but it was well after sunrise. She looked at her phone and saw it was a little after 9am and she was suddenly very hungry. And then she remembered last night.\n\n\"Shit,\" she said quietly as she pulled on her robe and left the bedroom.\n\n\"Hey, honey!\" Gill called out cheerfully as the smell of bacon wafted her way.\n\n\"What's this?\" she asked knowing he only cooked when he was in the doghouse.\n\n\"How'd you sleep?\" he asked just as cheerfully.\n\nShe poured herself a cup of coffee then said firmly, \"It's not gonna work this time, Gill.\"\n\n\"What's not gonna work? Can't a guy make breakfast for the love of his life?\"\n\nShe took a sip then sat down.\n\n\"We need to talk,\" she told him, uttering those three words no one wants to hear.\n\n\"Yeah. Okay. Sure,\" he said knowing he'd screwed up royally the night before. \n\nThe bacon was cold by the time Aimee got it all out and began summarizing her thoughts.\n\n\"So the bottom line is, you don't want kids. Ever. I do. Not right now. Not this year. But I definitely want kids. You don't want to get married. Ever. I do. You think the military is a joke. For me, it's a way of life.\"\n\nHe started to interrupt but she wouldn't let him.\n\n\"No. Let me finish,\" she told him.\n\n\"I've never tried to change you in all the years I've known you, and I'm not about to start now. But we are two very different people, Gill, and this just isn't working anymore.\"",
        "\"So how do we move forward? How do I make up for last night? Just tell me, baby. I'll do anything,\" he said as he reached for her hand.\n\nShe let him take it but she didn't offer it or squeeze his back.\n\n\"Before this weekend I'd have answered, 'Give me a ring and a date and a promise of children.' But now? There's nothing you can say, Gill. It's over. We want different things and there's no way to reconcile those very important differences.\"\n\nShe'd only seen her boyfriend cry once, and that was when his mother passed away unexpectedly two years ago. But tears were streaming down his face as he spoke.\n\n\"Aimee. I love you. I'll do anything. I'll marry you. I'll have a damn kid with you. Just don't leave me, okay?\" he begged.\n\n\"I believe you do still love me,\" she told him calmly. \n\n\"But you don't really want to get married, and you damn sure don't want a child. Just the way you said it spoke volumes. You said, 'I'll have a damn kid with you'. Sorry, but I want a husband who wants to have a child because he really, truly wants one. You don't and that's okay. You just have to understand it's not okay for me anymore.\"\n\nShe finally squeezed his hand then said, \"This is long overdue, and we both know it. It's been a good run, Gill, but you and I...there is no you and I anymore. It's you and it's me. We live together but we're not a team anymore if we ever even were. I want more. You don't. And that's the bottom line.\"\n\n\"So...so we're just gonna throw all these years away?\" he said now getting angry.\n\n\"No. We're not 'throwing' anything away. We stayed together was long as it made sense. What we're going to do is look back with fondness on our time together while admitting we can't go forward together. We didn't throw anything away, Gill. We gave each other the most valuable thing we have to give\u2014our time. We both stayed because it made sense. Now it doesn't. Moving on is the only thing that does makes sense now.\"\n\n\"I can't believe you're giving up on us,\" he said shaking his head in disgust as he pulled his hand away.\n\n\"Tell me right here, right now, that you really, really want a child. Go ahead, Gill. I'll wait. Just look me in the eye and tell me you do.\"\n\nGill Haynes knew his bluff had just been called. Yes, he'd be willing to give her a baby as long as she raised it, but the last thing he wanted was a screaming kid in the house taking up his time with diaper changes and feeding and...all that damn...crying!\n\n\"I'll...I'll go pack my things,\" he said with quiet resignation.\n\nAimee suddenly wanted to grab him and beg him not to leave, but she knew this had to happen, and were she to give in they'd be in bed together moments later and she might never find the courage to tell him again.\n\n\"You're welcome to stay until you figure out where you want to go,\" she told him. \"Just not in the bedroom.\"\n\n\"I already know,\" he told her without looking at her.\n\nIntuitively, she knew. She wasn't sure he was sleeping with her, but she knew there was another woman waiting in the wings. Gill always hedged his bets, so why would this be any different?\n\n\"Oh. Okay. Well, then I suppose this is it,\" she said now wanting to be angry but unable to feel anything but relief that it was finally over. \"Do you love her?\"\n\n\"Love her? No. No, she's just a port in the storm until I figure what to do with my life. I suppose I'll end up back in North Carolina one day. I haven't seen my dad or my brother much so that seems to make sense long term. But for now, yeah, I'll hang out with her.\"\n\nBy noon, his car was loaded up, and Aimee walked outside with him and hugged him one last time.\n\n\"Take care of yourself,\" was all she could think to say.\n\n\"You know I still love you, right?\" he told her, a tear welling up in his eye again.\n\n\"I do,\" she said quietly without emotion as she watched him get in and drive away.\n\nAimee knew she'd done the right thing, but she couldn't ever remember feeling so sad or all alone. The old saying came to mind about 'ripping off the bandaid' and it fit perfectly. It was more like a bikini wax with hot strips being torn off than a bandaid, but it certainly applied.\n\nAs she sat alone in their modest house...no, in her modest house...in the city of Spanaway located just to the south of Tacoma, she realized she didn't have a single female friend in the area, and the only men she knew besides Gill were Marines at work.\n\nBy noon, she was sick of the pity party and threw on her PT gear and headed out for a very long run. Twelve miles later, she felt a whole lot better and hoped the endorphin rush would last all day. It didn't, but it did get her through the worst part of it, and tomorrow she'd be back at work. Work\u2014her safe place surrounded by the things she most loved and understood.\n\nNot once had she thought about the late-night conversation with Captain Whitaker or the way it had made her feel. For now, at least, she was in too much pain to do any real thinking. Even though she'd been the one ripping off the bandaid, it hurt almost as bad as being the one getting dumped. Then again, she'd never actually been dumped, so she was only speculating. Either way, this sucked. \n\nThe last thing she thought of before falling asleep around midnight was another old saw: time heals all wounds having no idea how long this feeling would last. \n\n\"Here's to time,\" she said to herself as she rolled over and felt even more alone when she realized she was laying there all by herself, and that Gill was never coming back.\n\nAimee put on her game face Tuesday when she went in to work a couple of hours early. She wasn't surprised to see Captain Whitaker's car when she pulled in. She sat there for a moment and tried to remember what they'd talked about so late at night then dismissed it as she headed inside.\n\nToday she was wearing 'Charlies' the name for the Service C uniform which consisted of a short-sleeved shirt and green trousers. 'Pants' was as much of a 'no-no' for Marines as was 'hat'. Marines wore trousers and covers, and First Sergeant Carlson looked very good in hers as the shirtwaist showed off a very tight, narrow waist and the trousers just enough of a butt to look pretty damn good.\n\n\"Mornin', sir!\" she said cheerfully as she set her purse down.\n\n\"Hey, First Sar'nt!\" he called back. \"How was the time off?\"\n\nThere were several moments of silence before she said, \"Just great,\" without conviction.\n\nCaptain Whitaker got up and went to the adjoining door and asked, \"More problems?\"\n\nShe looked over at him and said, \"Not anymore, sir.\"\n\n\"Okay. Fair enough,\" he said not wanting to pry.\n\nLittle was said all day or the following morning until the I&I popped into her office around 1100 and said, \"You feel like goin' for a run?\"\n\n\"Um...sure, sir. You ready to go right now?\"\n\n\"Gimme about fifteen minutes and I will be. Does that work for you?\"\n\n\"I'll be ready,\" she told him.\n\nAs he walked away, his words that dark, quiet morning suddenly came flooding back. Two things stood out from everything else he'd said. The first was 'she was 40 years old' and the second was 'if things were different'.\n\nShe felt a little foolish for even thinking about it and yet...what if things were different? In one sense they already were. Gill was gone. And she was eligible to retire in just a few more months. So maybe things could be...different.\n\nBut even if they were, that would still require someone else to want things to be different in his life, and perhaps she'd misread the whole thing so she tied up her shoes and got ready to go run.\n\nAfter stretching, Captain Whitaker asked, \"So, how far are we going today, First Sergeant?\"\n\n\"I'll follow you, sir,\" she said pleasantly.\n\n\"Ten?\" he suggested.\n\n\"Ten it is,\" she happily agreed.\n\nFor the first couple of miles they talked about the reservists and what kind of training they'd received over the weekend as well as little things they could improve on in the future. \n\nThey didn't say much the next couple of miles then at the halfway point, Captain Whitaker said, \"There was something you wanted to tell me but didn't earlier this morning. It's just you and me out here, so if you feel like talking you've got a captive audience.\"\n\nHe smiled at her and that made her feel like taking a chance so she opened up.\n\n\"Gill moved out,\" she said directly.\n\n\"No shit? I didn't think the 'incident' at work was that bad. Was it?\"\n\n\"It was bad, but it wasn't what caused the breakup. It was more the proverbial straw, you know?\" she said as they clipped along at a pretty good pace. \"It's been a long time coming, and I guess that finally made me realize things were never going to change.\"\n\n\"You mean with having kids?\" he offered recalling a previous discussion.\n\n\"That and never wanting to get married. I even gave him the opportunity to tell me that's what he wanted, but I knew he didn't so....\"\n\n\"I'm still sorry to hear that,\" he told her.\n\nA few moments later he said, \"You know the old saying, right?\"\n\n\"Which one?\" she asked not sure where he was going.\n\n\"Leopards don't change their spots.\"\n\n\"Oh, right. Exactly. Gill is the kind of guy who doesn't believe in marriage let alone one who wants children. And no, he never will.\"\n\nThey ran along in silence for a minute or so before Captain Whitaker asked something similar to what he'd asked early that Sunday morning, \"Is fair to assume you do want kids?\"\n\n\"You know, until just recently, I really never gave it much thought. I was happy going along on cruise control like I said, knowing kids and marriage were out of the question.\"\n\n\"What changed your mind or got you thinking about it so much?\" he asked.\n\n\"Please don't take this the wrong way, okay, sir?\" she said prefacing her remarks.\n\n\"No, go right ahead.\"\n\n\"Do you recall telling me, 'If things were different'?\"\n\n\"Oh. That. Yeah, I remember. Now it's my turn to say, 'I hope you didn't take that the wrong way'.\"\n\nHad her endorphins not just kicked in, Aimee probably would have stopped talking after hearing what he just said, the implication being he hadn't really meant anything by it. But she was feeling great and kept going.\n\n\"I wasn't offended, if that's what you meant, sir. I just took it to mean that maybe, you know, if...well...if things were different...maybe I might be able to, you know, find someone who does want a family.\"\n\nShe was feeling good but not good enough to tell him straight up she'd been kind of thinking and maybe even hoping he might possibly be that someone.\n\n\"That makes sense,\" Captain Whitaker told her. \"As long as you were living with Gill, there was no chance of that ever happening. Breakups are almost always painful, but when you get to the point that you have irreconcilable differences, something's gotta give, right?\"\n\n\"Exactly. It's not like I'm 50 or anything, but if I want to start a family, it's high time to get serious about looking.\"\n\n\"I know your boyfriend just left, but do you have any prospects?\" he asked.\n\n\"Honestly? There is someone I've been thinking about quite a bit recently , but I'm not sure he's even aware I've been doing the thinking,\" she said with a kind of nervous laugh.\n\n\"Again, please don't take this the wrong way, First Sergeant, but unless the guy's blind or maybe gay, there's no way he's not gonna notice you. But with you having been in a relationship, he may not have felt free to let you know he's been doing the same kind of thinking.\"\n\n\"True statement,\" she said, using one of her favorite pet phrases again.\n\n\"Have you thought about dropping a hint or two his way?\"\n\n\"I have,\" she told him. \"It's just kind of complicated.\"\n\n\"Guys can be pretty dense, sometimes. Maybe you need to be a little more direct, you know?\"\n\n\"He's not dense by any means. He's actually very smart,\" she said feeling almost hopeful.\n\n\"Yeah, but that may not spill over into the relationship department. Some guys are brilliant when it comes to math or science or maybe work, but they're not quite with it socially speaking. This guy might be book smart and relationship brain dead.\"\n\nAimee couldn't help but laugh at the irony. If only he knew who it was she had in mind.\n\nNeither of them spoke again until they were about two miles from the finish when Aimee said, \"I think I've decided to retire.\"\n\nCaptain Whitaker turned toward her and said, \"Seriously? That's huge, First Sergeant! You're a shoe-in for sergeant major, right?\"\n\n\"I think I have a really strong record, and I'm pretty sure I'd be selected. But if I stay in that means waiting until I get promoted, and then I'll have to pay the Marine Corps back with two years in grade so we're talking maybe four more years. Three minimum.\"\n\n\"I get it. If you want to settle down and start family, that would be a helluva challenge as a sergeant major deployed to who-knows-where.\"\n\n\"My thoughts exactly. I hit twenty six months, and I can go on terminal leave in three, so I think I'm gonna put in my paperwork sometime this month.\" (Terminal leave was something anyone leaving active duty could take wherein they used all the leave they'd saved up in order to go home that much earlier. They were still on active duty and subject to recall, but short of a shooting war, that rarely ever happened.)\n\n\"Any idea where you'll retire to yet?\" he asked her.\n\n\"I guess that depends on whether this guy really is 'relationship brain dead' or not,\" she said with a laugh.\n\nWhitaker laughed loudly then said, \"You ready to pour it on?\" as they passed the half-mile-to-go point.\n\n\"Get some!\" she hollered back as they took off as fast as they could go.\n\nCaptain Whitaker was more suited for the gym than for running, but he was still pretty darn good at it and pushed her all the way to the finish. She beat him by about ten yards, but she was gasping for air as they walked it off.\n\n\"Nice run!\" he said offering her a high five.\n\n\"You too, sir!\" she said as she slapped his hand.\n\n\"You must have been hell on wheels back in the day, First Sergeant,\" the captain said as he tried to catch his breath.\n\nShe laughed then said, \"Did you just call me 'old', Cap'n?\"\n\n\"You just kicked my ass, First Sergeant. I don't think I better be calling you anything but maybe 'the winner',\" he wheezed at her as he was still unable to talk normally.\n\nAs they walked back to the building Whitaker said, \"Damn, First Sergeant. I can't imagine things around here without you.\"\n\nNow feeling extraordinarily good after the run and having announced her sudden decision to retire out loud she said, \"I could probably be talked into hanging around.\"\n\nWhitaker gave her a strange look then said, \"So...you're not gonna retire if I ask you to stick around?\"\n\n\"Oh, no, sir. I think that's pretty much a done deal. I was just thinking I might be willing to hang around here if, you know....\"\n\nNot picking up on where she was going, Whitaker asked, \"So you like the area enough to retire here?\"\n\nShe smiled then said, \"It's not the area so much, sir.\"\n\nFor the briefest of moments, Whitaker wondered if she could possibly be referring to him before dismissing the thought as ludicrous. And yet he'd found himself thinking about her many times since they had their late-night/early-morning chat out in the field. Were she to leave active duty and stay in the area....\n\nHe decided to gently probe and said with a smile, \"Oh, right. Your mystery guy. The brain-dead one.\"\n\nShe laughed again then told him, \"Pretty much. If he puts two and two together, and more importantly, if he has the same kind of interest in me, then sure, I'd stick around the Pacific Northwest. I'm not a fan of the rain and the gray skies, but it beats six month of snow or 100-degree heat.\"\n\nHaving got very little from his initial probe, he plumbed a little deeper and asked a follow-on question.\n\n\"So he's a local guy then, right? Mr. Brain Dead?\"\n\nAimee was now torn between risking being more direct and shot down or remaining subtle and biding her time.\n\n\"He's not from here originally,\" she told him. \"But he does live here now.\"\n\n\"Oh, okay,\" Captain Whitaker said as though that cleared things up when all it did was make him want to know more as everything she'd said so far could apply to him. \n\n\"Anyway, good run, sir,\" she said as she went into her office where she, like the I&I, had her own private shower and wall locker.\n\n\"You too, First Sergeant,\" he told her as he went into his office.\n\nNeither knew the other was standing under the water wondering why they didn't say something rather than beat around the bush. Then again, both of them knew why. Professional Marines just never crossed that line. Some less-professional Marines did but they weren't 'some' and it was so deeply engrained in them not to, that just the thought of 'going there' set off all kinds of warning bells.\n\nBy the time they finished showering and got back into uniform, both of them mentally decided to leave things alone, at least for the time being.\n\nTwo days later, Aimee did put in for retirement. No actual paperwork was involved. It was a simple entry made electronically on what was called 'the unit diary' wherein an admin clerk entered her name and 'request retirement' along with her requested date of 1 January 2018. She would have 20 years and 9 days of active-duty service, and she'd receive 50% of her base pay as pay-grade E-8 with 20 years of service for life. It wouldn't be a fortune, but it would more than enough to pay for a mortgage, a car payment, and then some. Plus, she'd have healthcare for life, and that was no small deal these days.\n\nThe following reserve weekend, the subject of her impending retirement came up, and LtCol Woods asked Captain Whitaker if he'd thought about a retirement ceremony. They were sitting in his Whitaker's office and the door was open just slightly. \n\nFirst Sergeant Carlson was helping the reserve sergeant major take care of a couple of reservists who were having pay problems, so she was down in 'admin' and out of the office.\n\n\"I have, sir. She'll be going on terminal leave in November and that's less than three months down the road, so I've definitely been giving it some thought.\"\n\n\"Why don't you have it at my place?\" he suggested.\n\n\"That'd be outstanding, sir,\" Whitaker told him.\n\n\"I'll thrown some cash to make it a proper farewell, too.\"\n\n\"Oorah, sir!\" the captain said which sounded more appropriate than 'thank you'. \n\nAnytime any officer of staff NCO left a unit, there was a farewell of some kind. Most were handled at regular 'hail and farewell' parties where new Marines were welcomed and those leaving recognized. But for a departing commander or a retiring first sergeant/sergeant major, an individual party was the norm.\n\nHe peeked through the opening in the door to make sure she was still out before speaking.\n\n\"I hear she finally got rid of that douchebag civilian she'd been living with,\" the colonel said out of nowhere.\n\nRolling with it, Captain Whitaker said, \"It's true, sir. I guess they didn't see eye to eye about starting a family so...he's gone.\"\n\n\"Good riddance if you ask me. Between us, I've thought about asking her out several times, but until now, the Flower Child was always in the way. Besides, as long as she's on active duty, there's just no way I would even though I'm a reserve puke.\"\n\nNeither of them heard Aimee quietly walk in and sit down at her desk as Woods kept talking.\n\n\"You're too young to see it in someone her age, Dustin, but I gotta tell you, she's a very attractive woman, and from what I've seen, she seems like a really pleasant person. You know, unlike my ex-wife who's neither.\"\n\nAimee stopped moving and even breathing as she sat there listening to every word.\n\nCaptain Whitaker smiled and laughed politely.\n\n\"I can't disagree, sir. First Sergeant Carlson is quite possibly the best-looking female Marine I've ever met. In fact, she's one of the most attractive women I've ever known\u2014period.\"",
        "\"You got that right, Dustin. Once she's a little closer to retirement, I may try testing the waters and see if she might be interested in dating a rather...successful attorney.\"\n\nHe looked at the younger man then said in a way that told Whitaker the colonel knew 'the kid' didn't have a prayer, \"Don't go getting any ideas, though, okay? You're a great kid, but let's be honest, you are just a kid.\"\n\nUndaunted, Captain Whitaker said, \"You know, sir? It's funny, but I have actually thought about that myself. And now that she's retiring....\"\n\nAimee's heart was in her throat as she continued listening, unable to even move.\n\n\"Yeah, right! Like she'd be interested in someone half her age!\" he said with a booming laugh. \"Look, there are all kinds of gorgeous girls around here, Dustin. Hell, the University of Washington is only a few miles away and it's crawling with beautiful young co-eds. If I was your age, I know where I'd be hanging out in my spare time.\"\n\nWhitaker wasn't going mention co-eds held no interest to him, or point out the age difference was thirteen years rather than the 16 or 17 Woods was implying. Then again, it was one of those 'distinctions' without a difference where the older man was concerned, and he was pretty sure he'd get it thrown right back in his face. \n\nInstead he just said, \"I'd never tell her how I feel as long as she's on active duty, either, but you know, once she does retire, things will be different and....\"\n\nColonel Woods laughed loudly again, stood up, then said, \"Keep dreaming, young man. Always dream big.\" He leaned toward the young officer then said, \"Even if it's nothing more than a pipe dream.\"\n\nCaptain Whitaker stood up to walk the colonel out and as he did, Aimee quietly got up and quickly slipped out of her office before they opened the door. \n\nShe made it several steps down the hall, then turned around and walked back just as they were saying goodbye.\n\n\"Colonel Woods! Good to see you, sir!\" she said professionally.\n\n\"Hello, First Sergeant. You, too.\"\n\nHe also smiled then said, \"Are your ears burning?\"\n\n\"Sir?\" she asked pretending to be clueless but worried he might somehow know.\n\n\"We were just talking about you,\" he told her. \"All very positive and professional, I assure you.\"\n\nShe reached up and touched her ears, both of which were exposed as her hair was worn up and said, \"No. They're not even warm, sir.\"\n\nBoth men laughed politely then Colonel Woods thanked her again for all the support over the weekend.\n\n\"Oorah, sir!\" she said enthusiastically.\n\n\"You know, we're all gonna miss your smiling face around here, First Sergeant. Any chance you might be retiring locally?\" he asked, laying down his initial marker.\n\nShe glanced at Captain Whitaker then said, \"Up until just a few minutes ago, I was thinking I might be leaving the local area.\"\n\n\"Oh? What's suddenly causing you to think about staying?\" the Marine officer/attorney asked.\n\n\"Until then I was under the impression there was no reason for me to stay. I guess I'm just feeling a little hopeful that things might be...different.\"\n\nShe glanced at Captain Whitaker again as she replied to the reserve CO, and he couldn't help but wonder if she somehow knew what he'd said. He'd watched her walking toward them in the hallway, and he hadn't seen her in her office when they were talking. But he also knew she could have overheard them, and suddenly he felt like a little boy who'd been caught stealing cookies. A very hopeful little boy at that, though.\n\n\"Well, once you retire, things will be different,\" Colonel Woods told her with a smile. \"That'll change a whole lot of things, right?\"\n\nAgain, she looked at Captain Whitaker as she answered. \n\n\"Yes, sir. It really will. Or I'm hoping it will, anyway.\"\n\nOnce the unit commander was gone, Captain Whitaker told the first sergeant, \"Can you step into my office? There's something we need to discuss.\"\n\nHer heart went from calm to racing as she grabbed a yellow legal pad and said, \"Yes, sir.\"\n\nOnce he was seated she sat down and waited hoping and praying he might finally say something.\n\n\"It's September and we have the Marine Corps Ball coming up in November. You'll be gone, but we still need to get things ready.\"\n\nCrestfallen, she forced a smile and said, \"Roger that, sir. We've got a lot of the preliminary stuff out of the way already, but we still have a ton of details to take of care of.\"\n\n\"Exactly. Are you and the reserve unit's sergeant major working together on this?\"\n\n\"Oh. Well, when he has time, sir. As you know, he's a police officer and he puts in a lot of hours.\"\n\n\"Right. Okay, I guess that pretty much leaves you, me, and our band of merry men and women on the staff, huh?\"\n\n\"No worries, sir. We'll get it all taken care of along with the next two drill weekends,\" she assured him. \"And with any luck, my replacement will be here in time to have a decent turnover.\"\n\n\"I have no doubts, First Sergeant,\" he told her with a smile.\n\n\"Will that be all, sir?\" she asked wanting to go back to her desk and then just keep going.\n\n\"Um...no. I guess there's one other thing I wanted to mention,\" he said.\n\nAimee had never seen him look nervous or unsettled, but that's exactly how he looked as he said, \"I'm not sure how to put this, but....\"\n\nHe looked away for a moment then said, \"I...I just wanted to tell you, I'm...I'm not...brain dead.\"\n\n\"Sir?\" she asked momentarily feeling almost dizzy as her thoughts swirled around wildly.\n\n\"In terms of relationships, that is. I may be a little...dense at times, but I'm not...brain dead.\"\n\nThe way he looked at her told her he knew. He wasn't going to come out and tell her he knew, but he was letting her know he understood he was the guy she'd been talking about who might be able to keep her in the local area. She in turn, wasn't about to tell him she'd heard every word he'd said about her.\n\nHer heart had stopped racing the moment he'd mentioned the birthday ball, but it was now revved up again and pounding hard as his words sunk in.\n\n\"I'm...I'm very happy to know that, sir,\" she said very quietly.\n\nThey sat there in an awkward silence that seemed to last a very long time before Captain Whitaker finally said, \"I uh...I think that'll be all for now, First Sergeant.\"\n\n\"Oh. Right.\"\n\nShe stood up and said, \"I'll uh...I'll get to work on the ball right away. As soon as we come back on Tuesday.\"\n\n\"Good. That sounds...really good,\" he told her, his speech halting as he talked.\n\n\"Okay, so I'll just go back to my desk then I guess,\" she said pointing toward it.\n\n\"Yeah. Of course. That makes sense,\" he said knowing neither of them was making any sense. \n\nAs she started to walk out, he said, \"First Sergeant?\"\n\n\"Sir?\" she said immediately as she spun around.\n\n\"Do you um...I mean...you PT on your days off, right?\"\n\n\"Oh, yes, sir. All the time,\" she said, her heart now beating like a drum.\n\n\"Me, too,\" he replied before the start of another long, awkward pause.\n\n\"Did the captain want to...ask me something, sir?\" she said with hope it might be about something more than just what she did on her days off.\n\n\"I was just wondering if, you know, since you like to run and I like to run, well...would you maybe like to say...go for a run? Together?\"\n\nAlmost bursting with happiness and feeling like a teenager, she said, \"Yes. Definitely. I'd like that. Very much.\"\n\nAlso relieved, Captain Whitaker said, \"Great. Me, too. Would it be okay if I maybe gave you a call so we could decide when and where to meet?\"\n\nHe was a grown man who'd dated older women, but his palms were still sweating and so were other places that were soaking his tee-shirt.\n\n\"Oh. Yes, sir. Anytime. You can call me anytime at all,\" she said repeating herself and feeling silly but happy beyond words.\n\n\"Great,\" he said again feeling equally foolish. \"I'll uh...I'll do that then.\"\n\n\"Okay...sir. I'll...I'll look forward to it,\" she told using a voice he'd never heard from her before. It wasn't businesslike at all. It was soft and feminine and even sweet.\n\nAs she sat at her desk, Aimee found herself unable to even think let alone focus. She had a stack of paperwork to finish, but just sat there and stared at it as she thought about what had just happened. \n\nThe 'strangeness' of the conversation not only didn't matter, she understood why it had been so...strange. In fact, it seemed to her that it almost had to be like that as this amazingly-handsome commissioned officer who was also her reporting senior, tried to reach out to her and let her know how he felt about her without being able to openly tell her.\n\nAn hour passed and she'd barely made a dent in the stack before realizing she couldn't go home until it was done. She took a deep breath then reached deep down into her very deep well of professionalism and forced herself to accomplish the mission and just before midnight she was finally done.\n\nShe tapped on their adjoining door and waited.\n\n\"Oh, hey, First Sergeant,\" he said as though he'd been daydreaming.\n\n\"I...I just finished my last report, sir. I wanted to see if you had anything else for me before I head home.\"\n\n\"Oh. No. Nothing else. Thanks for everything this weekend, by the way,\" he told her.\n\nShe noticed the stack of paperwork in front of him and unlike her, his hadn't even been touched.\n\n\"Can I maybe give you a hand with some of that?\" she asked tactfully nodding to the pile of folders in front of him.\n\nHe looked at her then the stack then back at her.\n\n\"Oh, no. That's fine. I...I've just been a little distracted, I guess,\" he told her barely glancing her way.\n\nShe took off her 'first sergeant face' again and said just as sweetly as before, \"I hear there's a lot of that going around lately...sir.\"\n\n\"Yeah. I've heard that, too,\" he told her as he sat there now staring at her. Even after two very long days in the field without showers or any real amenities, she still looked beautiful to him.\n\n\"Well, have a good night, sir,\" she said knowing he was staring but not aware of it.\n\n\"Yeah, you too, First Sergeant,\" he told her before she walked out.\n\nAimee was wide awake by 0600 and checked her phone immediately as if she might have missed his call in the nearly six hours since she'd seen him last. She realized it was ridiculous but carried her phone with her as she used the bathroom then into the kitchen to make a pot of coffee. In fact, she barely let it out of her hands the entire morning.\n\nShe'd looked at it a hundred times and when it finally rang about 11am, it scared the hell out of her. When she saw who was calling, she smiled as her heart began racing again.\n\n\"Good morning, sir!\" she said happily.\n\n\"Good morning! You ready for a run?\" he asked now sounding much more confident. \n\n\"I am,\" she told him just as confidently.\n\n\"Can we maybe meet halfway between our houses? You're in Spanaway and I'm in Lakewood. There's a bicycle trail on McChord (Air Force Base) that's really great.\"\n\n\"I love that trail!\" she said immediately.\n\n\"Oh, is it one you run all the time? I mean, we can go somewhere else if....\"\n\n\"No. That's perfect. I'd love to do that,\" she said excitedly.\n\n\"Okay. Is twenty minutes enough time?\"\n\n\"Yes, sir. That's plenty. I'll see you there!\" \n\n\"Oh, and can you try not to hurt me this time?\" he said playfully.\n\n\"I can make no such promise, sir.\"\n\nThere it was again. That soft, sweet, feminine voice.\n\n\"Fair enough. See you soon?\"\n\n\"Yes. See you soon,\" she said as they hung up.\n\nAs she drove to McChord, she wasn't about to mess this up by coming on too strong. She was going to continue being the loyal first sergeant while hoping her...her...what was he to her anyway? 'Love interest' sounded so hokey, but he certainly wasn't her boyfriend. Whatever he was in that sense, he was someone she now found irresistibly attractive and desirable, and if he'd once fallen for a woman who was 40 then...who knew?\n\nHer heart raced when she saw he was already there stretching out when she drove up. He was bent over and she could not only see that wonderful butt of his, but she also took note of his muscled legs, something she hadn't noticed before. \n\nShe laughed when she thought about walking up to him and saying, \"Do you work out?\"\n\nIt was as old and as bad as a guy saying, \"Do you come here often?\" \n\nBesides, she knew he did work out and the results were staring her right in the face.\n\n\"Hey, there, sir!\" she said with a huge smile as she walked up.\n\nHe turned around and smiled back and said, \"Good morning!\" as she stood directly in front of him.\n\n\"I'm really glad you asked me to go for a run with you,\" she said, her resolve not to say anything at all waning fast.\n\n\"Me, too. We should have done this before.\"\n\n\"Well, things were...different before,\" she said sweetly in that voice he was growing to love.\n\nWhen she saw the way he reacted, Aimee felt sick to her stomach as though she'd just said something awful.\n\n\"Sir, I was just trying to be funny. You know, the 'if things were different' line. If I said something....\"\n\nWithout warning he leaned over and kissed her. Aimee was so shocked that he'd done what she'd hoped he'd do, that she nearly pulled away.\n\n\"Oh, my God. First Sergeant, I am SO sorry,\" he said as he watched his career evaporate right before his eyes.\n\n\"No. Don't be. I...I wanted you to kiss me. I was just so surprised when you did I think it scared me,\" she told him with real earnestness.\n\n\"So...you're not upset?\" he asked still not sure of himself or of how she was really feeling.\n\n\"I'm upset that I reacted like that,\" she said tenderly with a sweet smile as she moved closer again. \"If you kiss me again, I promise I won't pull away this time.\"\n\nHe smiled then said, \"Maybe you should call me Dustin. You know, if I'm going to be kissing you.\"\n\nShe smiled in a way he'd never seen before telling him she was very happy.\n\n\"Okay...Dustin. If you'll call me Aimee.\"\n\n\"Aimee. You are so beautiful,\" he said before he kissed her.\n\nThis time she not only didn't pull away, she put her arms around his neck and kissed back. The kiss was long and deep and very passionate.\n\n\"I've wanted to do that for quite a while,\" he told her when it ended.\n\n\"I'm glad you did,\" she said still smiling happily. \"You have no idea how glad.\"\n\n\"So you see, I'm really not brain dead,\" he told her trying not to laugh.\n\n\"No. You most definitely aren't.\"\n\n\"Even so, I still want to ask. Am I that guy?\"\n\n\"Hmmm. Maybe you are brain dead,\" she said sweetly before kissing him for several seconds. \"I put in for retirement hoping and praying that would make things different enough for you to feel comfortable enough to let me know how you feel.\"\n\n\"You knew?\" he asked thinking he'd played it oh-so cool.\n\n\"Ha! I'm not brain dead,\" she teased.\n\nHe quickly picked her up and spun her around causing her to shriek with laughter.\n\n\"I thought I was playing my hand rather well,\" he told her when he set her down.\n\n\"I hope you don't play poker,\" she teased.\n\n\"Hey!\" he said teasing back. \"Was it really that obvious?\"\n\n\"All that matter is it worked out, right?\" she told him.\n\n\"Yeah. I guess so,\" he agreed.\n\n\"I have a confession to make,\" she told him, her arms still around his neck.\n\n\"Oh? Do tell,\" he said as he touched her pretty face.\n\n\"I kind of overheard you talking to Colonel Woods in your office on Sunday,\" she said playfully wincing.\n\n\"Ah, hah! Eavesdropping, were we?\" he said trying to be very stern.\n\n\"Kind of?\" she said, her eyebrows raised high. \"I didn't mean to listen in. I just sat down and you were both talking and....\"\n\n\"I see,\" he said matter of factly. \"So you must also know someone else finds you very attractive.\"\n\n\"Oh, would that possibly be a...very successful attorney?\" she asked with a tilt of her head.\n\n\"Yes. One and the same. Should I be concerned?\" he asked.\n\n\"Nope. Not one bit,\" she told him. \"I don't have a wicked crush on Colonel Woods.\"\n\n\"But you do on me?\" he asked as though he didn't know.\n\n\"Yep. I got it bad for you, Marine. Very bad,\" she said as she pulled him close again and kissed him.\n\nAs he pulled her even closer she 'felt' him and pushed back.\n\n\"Mmmm. You know, we don't have to go for a run,\" she whispered.\n\n\"No. We don't, do we?\" he said.\n\n\"I mean. There are a lot of ways to PT, right?\"\n\n\"Yes. A lot.\"\n\n\"So...what would you like to do with me, Dustin?\" she asked as she playfully bit his ear.\n\n\"Well, being a gentleman, I probably shouldn't say it out loud,\" he replied playing along.\n\n\"Oh, okay. Well, you could just...show me...if that would make it easier.\"\n\n\"It would,\" he told her. \"Could I maybe show you at my place?\"\n\nShe pulled him close again then said, \"Do you have any idea how happy I am right now?\"\n\nAs their bodies met again, she felt him again. Harder and thicker.\n\nAs she pushed back against him again, he said, \"I believe I do.\"\n\nAimee got serious for a moment then said, \"I don't want to do anything too soon that might ruin any chance of a long-term relationship. I mean, I want you so bad I can't stand it, but I could wait if....\"\n\n\"Uh-uh. I want you, too, Aimee. For the short-term, the middle-term, and for the long-term,\" he told her as he stroked her cheek.\n\n\"Then...yes, I'd very much like you to show me what you'd like to do with me\u2014at your place.\"\n\nShe smiled then added, \"Or...to me?\"\n\nHe walked her to her car then said, \"Follow me?\"\n\n\"Anywhere,\" she told him. \n\nHe went to turn away, and as he did, she grabbed him and pulled him back for another kiss.\n\n\"I don't know how long it takes to get to your place, and I wanted to make sure I could make it.\"\n\n\"I'll drive fast, okay?\"\n\n\"K,\" she said sweetly.\n\n\"But I promise I'll slow way down once we get home.\"\n\n\"Mmmm. I may not be able to wait that long,\" she told him.\n\nHe kissed her one more time then said, \"Get control of yourself, First Sergeant!\"\n\n\"Aye, aye...sir,\" she said as he walked away. \n\n\"Oh, nice butt!\" she called out.\n\nHe laughed as she said, \"I've wanted to say that for quite a while, too!\"\n\nGill had been a very good lover, but Dustin Whitaker had just rocked Aimee's world.\n\nShe'd cum three times before he finally entered her and she'd exploded in a fourth, mind-blowing orgasm several minutes after he did.\n\n\"Oh, my God! You're like some kind of secret weapon!\" she said as she lay in his arms.\n\n\"I was worried,\" he told her. \"I'm very much out of practice.\"\n\n\"Seriously?\" she said as she raised up to look at him. \"I can't wait to find out what you're like when you're back in fighting form!\"\n\nHe laughed then said, \"I've been told I'm a handful.\"\n\nShe reached down and took him in her hand and said, \"You can say that again!\"\n\nBoth of them laughed as he rolled her over and made love to her a second time.\n\n\"I feel like I'm living in a dream I never want to wake up from,\" Aimee said when they were finished.\n\n\"Same here,\" he said sincerely.\n\nShe raised up again then said, \"Tell me the truth, okay?\"\n\n\"Always.\"\n\n\"Am I...I mean...do I...look...old to you?\" she asked, her eyes filled with concern.\n\nHe gave her a serious look back then said, \"Hmmm. I was kinda busy. Maybe I should take a closer look.\"\n\nHe raised up the sheet that was covering them and started looking her up and down as though he was trying to see if she looked old. \n\nAs he did she said, \"Dustin! Stop! Don't be mean. I need to know, okay?\"\n\nHe pulled her on top of himself then said, \"Aimee, you are quite possibly the most beautiful woman I've ever seen.\"\n\n\"Really? Do you really mean that?\" she asked, her eyes still hungry for the truth.\n\n\"Of course I do, honey,\" he told her using an endearment for the first time.\n\nWithin a second of hearing that word, her eyes filled with tears as she said, \"I...I don't want to scare you, sweetheart, but...I think I may already be in love with you.\"",
        "Dustin went to speak, but Aimee put a finger over his lips. \n\n\"You don't have to say anything back, just please don't tell me you think I'm crazy, okay? Please?\"\n\n\"Why would I say that?\" he asked in a gentle tone.\n\n\"Because we really barely know each other\u2014even though I feel like I've known you forever,\" she said as she put her hand on his strong, masculine face.\n\n\"I know. I feel the same way about you. That's the crazy part. Not that we feel that way about each other.\"\n\n\"Wait. Did you just tell me....\"\n\n\"That I love you? I was implying it, but I hadn't actually said it,\" he told her trying to be serious.\n\n\"Is...is that because you don't?\" she asked, her eyes wide with apprehension.\n\n\"No, it's because I just haven't said it out loud yet,\" he told her with a smile.\n\n\"Dustin, don't tease, okay? Tell me how you feel. And be honest,\" she said imploringly.\n\n\"Wow, someone is very needy,\" he teased.\n\n\"Dustin! Don't do that. I'm serious. Please just tell me, okay?\"\n\n\"I've thought about you almost non-stop since we talked at the range at oh-dark-thirty that one time. Okay, I've noticed you since the first time I saw you. But I haven't been able to get you off my mind since we talked. You're hot, Aimee. You're smokin' hot!\"\n\nShe smiled then kept listening.\n\n\"Since I had the first hint you might be interested in me, you've pretty much been on my mind, day-on/stay-on, and it's been hell trying to be professional around you when I'll I wanted to do was kiss you.\"\n\nShe kissed him then continued waiting.\n\n\"The way you looked at me, you know, after you were spying on me....\"\n\n\"I was not spying!\" she protested. \"You should have shut your door...Captain!\"\n\n\"Details, details,\" he said with a smile. \"But since the first time you looked at me that way, I knew.\"\n\n\"And what did you know?\" she asked aching to hear those three little words.\n\n\"That I loved you,\" he told her quietly but sincerely.\n\n\"Really?\" she asked, her heart ready to explode from happiness.\n\n\"Yes, really. I love you, Aimee.\"\n\n\"I love you, too, Dustin. I really, really do,\" she said as she felt him growing between her legs. \"Mmmm. And I love every...inch of you.\"\n\nHe slid into her effortlessly as they made love much slower and even more passionately.\n\nAn hour later Aimee asked, \"Are you hungry?\"\n\n\"Starving. How about you?\"\n\n\"Same here. Can I make us something?\"\n\n\"You can cook, too?\" he asked sitting up straight.\n\n\"Don't look so surprised. I'm a woman of many talents!\"\n\n\"I'll say!\" he told her as he reached for her again.\n\n\"Uh-uh. Not until after we eat. We need our strength, you know.\"\n\n\"True statement,\" he said using one of her favorite lines.\n\nShe got up, went to his closet, found one of his civilian dress shirts, and slipped it on.\n\n\"I'll call you when it's ready,\" she said with a smile as she headed toward the kitchen.\n\nHe pulled on a pair of PT shorts then followed her out a few minutes later.\n\n\"Hey! I thought you said you could cook,\" he said, putting his arms around her as she boiled noodles for macaroni and cheese.\n\nShe pulled away then pulled open the refrigerator and then the cupboards.\n\n\"Someone needs to go grocery shopping,\" she informed him after showing him a six-pack of beer in the fridge and a box of granola cereal in the cupboard.\n\n\"Okay. So I put beer on my cereal. What's wrong with that?\" he asked as he pulled her close again.\n\n\"Nothing. I just prefer milk on mine,\" she said with a smile.\n\n\"Oh, are you saying you plan on waking up here in the morning?\" he asked very seriously.\n\n\"I didn't actually say that,\" she said as he'd done earlier. \"But I may have been inferring it.\"\n\nHe gave her a look then said, \"You mean...implying?\"\n\n\"Oh, there we go! Start in with your 'I'm a college graduate thing.' Okay, so that's how it's gonna be, huh?\" she said with a happy smile.\n\n\"I would love for you to move in with me,\" he told her. \"Whenever you're ready, of course.\"\n\n\"Well, let's see. I retire in January....\"\n\n\"No, sorry. That's way too long,\" Dustin said.\n\n\"I go on terminal in another 62 days\u2014if I was counting,\" she added.\n\n\"I think I could wait 62 days. Maybe even 63 if I had to.\"\n\nAimee smiled then said, \"I still can't believe this is happening.\"\n\n\"But you're glad it is, right?\" he teased.\n\n\"More than glad, I am SO happy,\" she told him. \n\n\"Me, too, honey. Me, too.\"\n\n\"I could turn off the stove and we could expend some more energy,\" she said playfully.\n\n\"If we do, I'll even take you out to dinner after,\" he told her as though he was being very magnanimous. \"You know, so you can keep your strength up.\"\n\n\"Wow, you're gonna have to stop spoiling me like that,\" she told him. \"I might get used to all this high-brow living.\"\n\nDustin's house looked like a stereotypical bachelor pad. It had no food, very little furniture, and hadn't been decorated with anything but a single plaque from the infantry until he'd been in he'd hung on the wall in a place that made no sense. Oh, but it did have a huge, 70-inch flatscreen TV with a Bose speaker system. Typical bachelor pad.\n\n\"Yeah, it's a regular palace,\" he told her.\n\n\"No worries. I'll take care of that,\" she said sweetly.\n\n\"Oh, boy. Why do I already feel like an old married man?\" he said pretending to complain.\n\nShe reached for him again then said, \"Um...you don't feel anything like an old man to me,\" before he scooped her up again and whisked back off to the bedroom as she laughed happily.\n\nThe following morning, Aimee woke up from a short-but-sound sleep and opened one eye. It took her brain a second to make sense of what she was looking at, but as soon as she did, she smiled. It was Dustin's back. \n\nHe was still sound asleep so she lay there just looking at him. She was still overwhelmed with emotion as she thought about the last 24 hours and how...different things now were. He stirred, and when he did, the sheet loosely draped over his shoulder fell off exposing the long, jagged scar.\n\nEver so gently so reached out and touched it and slowly traced it's length from top to bottom. It was thicker at the top and disappeared about seven inches further down.\n\nWhen he spoke, it startled herd.\n\n\"It doesn't hurt,\" he said quietly.\n\n\"I'm glad,\" she said as she softly kissed him where she'd been tracing with her finger.\n\n\"Do you want to talk about it?\" she asked suddenly feeling guilty for having never served in combat even after close to 20 years on active duty. Then again, most people who served after Vietnam but before the Iraq War hadn't, either. Some had been in Desert Storm, but it was hard to consider maybe 96 of combat\u2014war. Then again, if you were being shot at even for a minute, that was more than she'd ever done.\n\n\"Some Marine I am,\" she said as she put her arm around him and snuggled close.\n\n\"You've done everything the Corps has asked you to do, Aimee. And you've done a damn good job at it.\"\n\n\"I've tried,\" she told him. \"But isn't the saying 'we win battles' true?\"\n\nDustin turned over and said, \"I believe the former Commandant's saying was, 'We make Marines and win battles. You've made Marines. I haven't. We've both followed orders and done our best, so I'd say we're about even.\"\n\nShe smiled then said to him, \"Do you know how good you make me feel?\"\n\n\"If last night was any indication, I'd say pretty darn good,\" he told her with a smile.\n\n\"Okay, there is that, and yes, it was very good. But you make me feel so many other things, too.\"\n\n\"Such as?\" he asked as they looked into each other's eyes.\n\n\"Important. Needed. Loved.\"\n\nShe stopped for a second then added, \"Beautiful.\"\n\nShe laughed then told him, \"I'd say 'young' but I do have my integrity.\"\n\n\"But you are young, Aimee. And you are so pretty and in such great shape. I can't wait until you and I can be seen together in public.\"\n\n\"Me, too,\" she told him. \"Speaking of that...how are we going to you know, proceed, from now until I go on terminal leave?\"\n\n\"Wow. That's gonna be tough. It's not like we're in the Fleet Marine Force where there are other units one of us could be transferred to.\"\n\n\"Nope. We're the only game in town. And besides, I want to be near you even if I can't be...this near you,\" she said as she kissed him. \n\nHer physical needs had been met, but Amie was still starving for love and intimacy and closeness, all the things she'd been missing for many years with Gill and getting in spades from Dustin.\n\nShe was dying to ask if he really meant it when he told her he loved her, but she knew he had integrity, too. Had he not meant it, he'd never have said it.\n\nSo when he did say it moments later, her eyes welled up with tears again from pure happiness.\n\n\"I will never get tired of hearing you say that, sweetheart,\" she told him, loving being able to call him that.\n\n\"And I'll never get tired of saying it,\" he assured her. \"Because I really do love you, Aimee Carlson.\"\n\n\"And I love you, Dustin Whitaker,\" she told him as her tears dried and her heart swelled.\n\nAs to how to 'proceed', they talked about it for a while and decided to make a game of it and have as much fun as they could. It wasn't easy, but they did hold out. In fact, they were so good at it that no one had a clue until the night of Aimee's farewell, when something that happened that forced their hand.\n\nDustin...no, Captain Whitaker...had just said the obligatory praiseworthy things about First Sergeant Carlson who was retiring that anyone would say about someone in her position. He recounted the highlights of her stellar career and talked about the impact she had on the I&I's mission. He then presented her with a plaque as they shook hands, then gave her the floor.\n\nShe, in turn, expressed gratitude for all the many Marines she'd worked with over the years who'd made her success possible from her own drill instructors to the current I&I. Only the way she smiled at him could have served as a subtle hint there was more between them than a professional relationship.\n\nWhen she sat down, Colonel Woods, who'd had a few drinks, stood up and said a few more kind things about her, and that's when it happened.\n\n\"So, First Sergeant, now that you're almost officially a civilian and, as I understand it, staying in the area, I'd like to say that I intend to get to know you a whole lot better.\"\n\nThere were some uneasy looks as Aimee smiled politely but didn't reply.\n\n\"Oh, come on, First Sergeant! You're single, I'm single. You're hot. I'm...well, I won't say it about myself, but I've seen you look a time or two,\" he said with a smug edge to his voice.\n\nThere were some more uneasy looks as Lieutenant Colonel Woods definitely wasn't bad looking, but he was nowhere near being in her league. He did, however, have a gorgeous home and a ton of money, things Aimee Carlson didn't care about at all.\n\n\"So don't be surprised if I come calling one of these days once it's just Aimee and Brian. You wouldn't mind that, would you?\" he asked, the alcohol doing most of the talking for him.\n\nDustin could see Aimee was very uncomfortable, and knowing she would be checking out for the next three days, and then leaving for good, he decided it was time. \n\nDustin stood up and said, \"She would mind, sir.\"\n\n\"What? What are you talking about, Captain? She's unattached and as close to being a civilian as they come. Why would she mind the attention of a very successful attorney like me?\"\n\n\"She's not unattached, Colonel,\" he said before looking around. \"She's with me.\"\n\nEvery eye in the place had been looking at the young officer, and now many of them were open very wide.\n\n\"First Sergeant Carlson...Aimee...and I...\"\n\nHe looked down at her then reached for her hand. She took it and stood next to him as he said very clearly, \"We are very much in love. We've been extremely careful about our relationship until right now, but I can't sit here any longer and pretend it doesn't exist because it does.\"\n\nHe turned to Aimee and said, \"I hope this okay, but I want everyone to know how I feel about you.\"\n\nShe smiled then looked around and told everyone, to include Colonel Woods, \"It's true. We did fall in love and agreed not to say anything until I left. But I agree with Captain Whitaker...Dustin...that it's time everyone knew now that...things are different.\"\n\nColonel Woods found himself at a loss for words and there was an uneasy silence until a chief warrant officer on the I&I staff called out, \"Congratulations!\"\n\nHe raised his drink and said, \"To the happy couple!\"\n\n\"Here, here!\" several others called out as they raised their glasses, too.\n\nColonel Woods reluctantly joined in but was very quiet the rest of the evening as the effects of the alcohol wore off. \n\nBy the time they got ready to leave, Colonel Woods had sobered up completely and said, \"I feel like I should apologize for what I said earlier. That was way out of line.\"\n\n\"No need, sir,\" Aimee told him. \"I'm flattered. I really am. But I am very much in love with Dustin.\"\n\n\"Dustin? Congratulations,\" he told him extending a hand.\n\n\"Thank you, sir,\" he replied as they shook. \"And thank you for hosting Aimee's farewell.\"\n\n\"My pleasure,\" he told them sincerely, now recovered from his earlier faux pas. \"And best of luck to you both.\"\n\nAs they stepped outside, Colonel Woods said, \"Oh. Dustin?\"\n\nHe turned around and said, \"Sir?\"\n\n\"I uh, I guess I was wrong. You know, about someone as beautiful as...Aimee...falling for someone your age. Looks like the best...man...won.\"\n\n\"I gotta tell you I feel pretty lucky, sir,\" he said as he looked at his beautiful girlfriend.\n\n\"You should because you are,\" he said to both of them. \"Again. All the best.\"\n\nAs they drove home, Aimee took Dustin's hand and said, \"I can't tell you how good you made me feel again tonight, sweetheart. I wanted everyone in the world to know about us, and when you said that, I was so happy.\"\n\nHe squeezed her hand and said, \"I have to admit I was little bit jealous when Colonel Woods was dropping those heavy-handed hints.\"\n\n\"You played it perfectly,\" she told him. \"And you made me love you even more.\"\n\nAs they drove along, Dustin turned toward the Air Force Base.\n\n\"Why are we going on base?\" she asked.\n\n\"I wanted to go someplace real quick,\" he said.\n\n\"Um...okay,\" she said when his answer made no sense.\n\nThey drove to the place where they'd met to go on the run that never happened and Dustin stopped the car then went around and opened her door.\n\n\"What is going on?\" she asked as he took her hand.\n\n\"Humor me, okay?\" he said as he lead her to the place where he kissed her for the first time.\n\n\"Remember this place?\" he asked as he positioned them the way they'd stood that day.\n\n\"Seriously? I'll never forget this place,\" she told him. \"Why would you even ask?\"\n\n\"Because it's a special place to both of us,\" he said.\n\n\"Uh-huh. And???\"\n\n\"And....\"\n\nHe reached into his pocket and produced a small box Aimee could just make out in the dim light of a nearby lamp.\n\n\"Oh...my...God!\" she said quietly as he got down on one knee.\n\n\"I couldn't define love before I met you and maybe I still can't. But I know love when I see it, and I love you so much, Aimee,\" he began. \"My life began when I kissed you here that day, sweetheart. Since then I've only grown to love you even more. I want to spend the rest of my life with you. And I very much want to start a family with you.\"\n\nAimee was crying tears of joy as he removed the ring from the box and said, \"Aimee Carlson, I love you with all my heart. Will you marry me?\"\n\nShe nodded as she held out her hand and tried to say, \"Yes,\" but she couldn't speak for several seconds.\n\nNo words were necessary as Dustin stood up and kissed her softly again in that place where he'd first kissed her.\n\n\"I can't wait to marry you,\" she finally said. \"And start a family.\"\n\nHe raised an eyebrow and said, \"Wanna get started tonight?\"\n\nShe gave him a playful push then pulled him back and kissed him.\n\n\"Ha! Like you need to ask!\"\n\nTheir families flew in for their January 1st wedding and Aimee's official retirement day. But she did not wear her uniform. She wore a beautiful white wedding dress for her Marine husband who wore his dress blues as several friends of both of them formed a sword arch for them on the way out.\n\nAimee had put her house up for sale and moved in with Dustin the day after he proposed. They also stopped using birth control and by the time they were married, Aimee was three weeks pregnant with their first child and happy beyond words.\n\nBy the time Dustin got orders back to the Fleet Marine Force two years later, Mrs. Aimee Whitaker was pregnant with their second child and happier than she'd ever been in her life. \n\nLooking back, she had no regrets for all the years spent with Gill. She had no way of knowing for sure, but it seemed possible that had she not met him, she might have never met Dustin. Even if she had, it was even more likely things would have been very different, and she would have never known the kind of love and happiness she'd found with her children and the love of her life.\n\nAimee was grateful beyond words that things had worked out once things were different."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "older woman",
        "milf",
        "younger man",
        "marines",
        "marine corp",
        "female officer",
        "female marine"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/if-things-were-different-1"
}