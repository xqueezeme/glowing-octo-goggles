{
    "title": "Cold Steele---and Ice",
    "pages": [
        "Another adventure with Matt Steele There are no descriptive sex scenes in this story.\n\nConstructive comments, critiques, and emails are welcome and very much appreciated.\n\n********************\n\n\"I thought you grew up in the country,\" Abigail Stewart said laughing at her companion.\n\nShe pulled her horse to a stop next to a small spring seeping from under a crumbling granite wall. The small dell was surrounded by large trees, oak and hickory, and the ground was covered with vegetation; moss grew on the rocks, ferns dotted the area, and deep green grass grew all over the floor of the opening in the hills.\n\n\"Doesn't mean I want to play Roy Rogers,\" Matt Steele answered. \"Abby, let's get down and stop for a few minutes,\" I requested in my best pleading voice and then added, \"hopefully for the rest of the day.\" I sawed on the reins of the big over grown dog I was riding, bringing the horse to an abrupt halt; I almost fell off trying to get down.\n\nMy antics brought another peal of laughter from Abby. She quickly dismounted and grabbed my horse by the halter before it could bolt.\n\n\"Thanks,\" I said. \"Course, if you let it run away maybe it will just run back to the stable or something. Then I wouldn't have to ride the damn thing.\"\n\n\"How would you get back?\" Abby asked; again almost doubling over with laughter.\n\n\"You could ride back, get a four wheel drive truck, and come pick me up.\"\n\n\"I can't believe you don't like horses,\" Abby said in disbelief. \"You like hunting and fishing and camping well enough.\"\n\n\"Never spent much time with the horsey set,\" I replied. \"I was always too busy running a boat up and down Current River or hunting back in the hills. Besides, horses are dangerous.\"\n\nAbby laughed again and stroked the neck of her horse and fed it a sugar cube. \"Dangerous? How so?\"\n\n\"Yeah, dangerous. Like this beast here,\" I motioned toward my mount. \"He weighs what, about 1100 pounds?\" She nodded. \"And he's got a brain the size of a small apple. Something all wrong there about the ratio of size to brain power.\"\n\n\"What if you wanted to get way back in the woods to hunt or to a remote part of the river to fish? Wouldn't a horse be just the thing?\"\n\n\"If I can't get there by boat, ATV, or hiking, I don't need to go.\" It seemed I was Abby's entertainment for the day because she started laughing again. I grabbed her, pulled her close, and stopped her laughter by kissing her.\n\nAbby and I met three months previously at a cocktail party given by her godfather, Jason Worth, who was my client at the time. I was working and she thought I was funny. When I finished the job, I called her and we went to dinner at my favorite St. Louis restaurant; Rigazzi's on the Hill.\n\nOn that first date, I, er we, were confronted and accosted by the guy I'd sent to jail for trying to blackmail Mr. Worth; Ralph James, the blackmailer, was out on bail waiting for his court date. After the confrontation, I sent him back to jail; again. Abby wasn't put off by the fight and with a big grin said, \"You sure know how to show a girl a good time.\" Our relationship flourished from that point.\n\nAfter that night, Abby was off the dating market as far as I was concerned; she apparently agreed with me. We saw each other three of four times a week and even had a sleep over at her place or mine a couple of times. This was our first full weekend together.\n\nAccording to Abby, we were at the, meet the parents' stage. We'd left St. Louis and joined her folks at their vacation home in south central Missouri; it wasn't my idea of the best use of her limited time off, but hey, I wanted Abby to be happy.\n\nI could understand why her folks kept a home in this area. Jack's Fork River ran past the south part of town and on down the valley between the hills where the small town of Eminence stood . It is a clear, spring fed stream much like the Current River that I grew up playing in and on; in fact Jack's Fork is a tributary of Current River. The hills surrounding the town and its valley were too tall to be called hills and not tall enough to be real mountains. They were tree covered mostly in oak, hickory, and white or red pine, and full of wildlife.\n\nThis area had been a hotbed of moonshiners since just after colonial times; but the stills really blossomed during prohibition and for years afterwards. The people were a walking, talking example of the old \"Don't Tread On Me\" mentality of revolutionary times. Most of the farmland in the area was along the river basin or in the small valleys. The farms were mostly family owned and worked; no big impersonal agricultural companies here.\n\nBefore our trip south, Abby had asked me when she was going to meet my folks. I answered that I didn't think that was going to happen.\n\n\"Why not? Aren't I good enough?\" Abby asked. She was kidding but seemed to be a little hurt and upset.\n\n\"Don't get your panties in a bunch,\" I said. \"It isn't you. My parents and I haven't talked in better than three years. Ergo, I won't take you to meet them. Just let it go, okay?\"\n\n\"Why haven't you talked in three years?\" Abby wasn't going to accept my answer at face value; or let it go until she knew the whole story.\n\nAbby was and is, in my mind, a beautiful, interesting, desirable woman; we go good together. She's 5 feet 8, with an athletic body that pushes toward voluptuous; strawberry blonde hair, green eyes, and a few freckles scattered across her nose and cheeks complete the package. .\n\nAbby is a lot like me. I don't mean we look alike; I'm 6 feet 3 with a fairly hard muscled body and weigh about 200 pounds. I have black hair and gray eyes. What I meant when I said we were a lot alike was that we both enjoy the outdoors; like hunting, fishing, and camping. But the real similarity is that she can be as sarcastic and as big a smart ass as me.\n\nAbby can be so sweet to someone that butter wouldn't melt in her mouth and then turn around and cut them down if they deserve it. I do the same thing although I don't bother with the sweetness part. As I said we go good together.\n\n\"Why haven't you talked to your parents in three years?\" Abby's repeated question broke into my thoughts.\n\nShe's like a dog with a bone, I thought. She'll gnaw and worry at something until she gets the answer or the result she wants. I had to laugh to myself; just like me.\n\n\"Well, you know I'm divorced?\"\n\n\"You told me that the first time we met.\"\n\n\"My parents didn't take the divorce well. Blamed me for everything; so we don't talk anymore.\"\n\n\"You never explained what happened with your divorce.\" Abby looked directly at me instead of the scenery. \"Do you want to talk about it?\"\n\n\"Not really. I mean I'm not hurting or sad or even angry anymore and I don't still carry a torch for my ex.\" I grinned at Abby. \"I got closure a long time ago.\" Abby nodded and turned back to the scenery. \"But, I guess since we're involved, you've got a right to hear the story.\"\n\n\"It happened before we met so it's really none of my business,\" Abby replied. But I knew better; most people want to know as much about their partner as possible; except for me.\n\nI'm just conceited, or shallow, or self centered enough to believe that someone's past isn't important. This works for my few friends and even fewer people I really care about. The people I work for or try to find or catch the bad guys doing something wrong are a different matter but that's business not personal. As for friendships or relationships, I feel that their past, before they met me, isn't important; because it didn't include knowing me. Our interaction is what is important. Not really the complete story, but that is close to the way I feel.\n\n\"You know I was a detective with the St. Louis Police right?\" She nodded and I continued. \"It was like a clich\u00e9 from stories that you read. I came home unexpectedly, found my wife, Johanna, and my boss doing the nasty in my bed. I proceeded to beat the hell out of him.\"\n\nI smiled a little, remembering, with a great deal of satisfaction, the beating I put on Captain Joe Harper. \"Wouldn't have been so rough with him if he hadn't of gone for his pistol. Anyway, Johanna jumped in to protect her boy toy or to stop me before I could kill him; never did know the real reason. Anyway she caught a punch, but believe me I didn't mean to hit her.\"\n\n\"I know you can be a tough guy, but I don't believe you'd intentionally hit a woman,\" Abby remarked.\n\n\"Oh I would if circumstances called for it. Like she was trying to attack me or someone I care about, but not in anger. Anyway, I lost my job with the department and lost my wife and lost what I thought was a good life. Johanna tried to talk to me during the divorce proceedings, then she talked to my folks and they tried to talk to me.\"\n\nI gave a short laugh. \"Everyone thought I should talk to her about our problems, you know try and get past the 'incident' as they called it. I told Johanna and my parents that I was past the 'incident' and I was past my marriage too.\"\n\n\"Didn't your parents understand?\"\n\n\"Mom's was raised Catholic and according to her divorce is not an option. So I was wrong in her eyes.\"\n\n\"What about your father?\"\n\n\"Dad had always liked Johanna and I guess he thought if he came down on me hard I'd get back together with her, in spite of what she'd done.\" I wasn't smiling or laughing when I added, \"Dad was wrong; big time wrong. So we haven't talked in three years. Any time they call, I hang up. They couldn't stand with me then and I don't need them now.\"\n\nAbby had a sad look and started to speak. \"Don't,\" I said. \"For once don't push it Abby. I'm good.\"\n\nShe nodded, smiled and said, \"So you don't like horses?\" Abby giggled at the look on my face. \"Come on, as slow as you ride, it will take us all afternoon to get back to the barn.\"\n\nGetting on my horse, I said, \"Not my fault I'm slow. I think my horse is broke. He won't go faster than a bone shaking trot.\" I put my heels to the beast and said, \"C'mon Dog Food, let's get back so we can get away from each other.\"\n\nI saw the look on Abby's face. \"Yeah, I called him Dog Food; cause that's what he'll be in a few years.\" She laughed again as she rode down the trail with me trying to keep up with her. You'd think I was a stand up comic as much as I made her laugh.\n\nThat evening at supper, Abby's dad, Darren, again gave me the look. You know, the one that says I don't like you sleeping with my daughter. He'd given me that look from the minute that Abby put both our suitcases in a guest room. Her mother, Mary, just laughed and told him to join the 21<sup>st</sup> century. In spite of her own beliefs or upbringing she accepted what she knew she couldn't change or control. Smart woman, I thought.\n\nAfter supper, while Mary and Abby cleaned up the kitchen, Darren motioned me out to the front porch. He offered me a seat in one of the Adirondack type chairs.\n\n\"I know it is sort of old fashioned and old school, but what are your intentions toward my daughter,\" Darren asked as he lit a cigar. He offered me one but I shook my head.\n\n\"Well Mr. Stewart, I 'intend',\" stressing that word, \"to love her and take care of her and spend as much time with her as she'll let me,\" I replied. My first thought was to tell him it was none of his business; my second thought was to tell him to go to hell; however neither of those would have gone over very well. The next thought was a surprise; I guess I do love her.\n\n\"Do you plan to get married?\"\n\n\"I don't know; we haven't discussed marriage. But, if and when we do, it will be our decision and no one else's.\" I looked him in the eye with a sort of challenge. I was trying to get a handle on the little bit of anger that came from someone was questioning me about my private life. Then I thought; it's only natural that he is worried about his daughter. The fact that she'd been married and divorced didn't change the fact that Abby was still his little girl. He was taken aback by my answer and the look in my eyes; but I have to give him credit, he didn't back down.\n\n\"I'm sorry if I've insulted you, but my concern is for Abigail; not your feelings,\" Darren replied with conviction. \"I'll not stand by and let her be hurt again.\" He paused and then asked, \"You know she was married before, don't you?\"\n\n\"Yes sir. I don't know the circumstance of the divorce other than Abby took back her maiden name. I figure it's none of my business. If Abby wants to tell me she will; if she doesn't, I really don't care. I will say the guy that let her get away or forced her away is too stupid to even breathe.\"\n\nThat brought a smile to his face. Right then, Abby and Mary joined us on the porch. Abby looked back and forth at her father and me, but saw him smiling and was reassured that we weren't about to come to blows. The discussion turned to the vacation home, the area and their family.\n\nI learned that Rebecca Stewart Conroy, Abby's younger sister, lived in St. Louis and was caught in a bad marriage. Her husband, Brad, drank a lot and when he drank he often got physical with Rebecca. She'd even had to go to the emergency room once or twice. Each time Brad sobered up, he'd cry and apologize to Rebecca and promise not to do it again. He'd keep his word until the next time he tied one on.\n\nJames, Mary, and Abby tried to talk Rebecca into leaving Brad; but each time she believed that he would change and forgave him. When the Stewarts talked about Rebecca, the mood got somber. The whole situation bothered the family very much.\n\n\"I've confronted Brad a couple of times,\" James said. \"It works for a few weeks or months and then he's right back in the same place.\" Turning to me, he said, \"I'm sorry for airing our dirty laundry in front of you Matt.\"\n\nI shook my head, indicating it didn't bother me. The Stewarts were nice people and I didn't like the sadness I heard when they talked about Rebecca.\n\n\"Maybe if an outsider had a talk with Brad, he'd change his ways,\" I offered. \"I maybe could get one of my cop friends to have an unofficial word with him, if you think it would help.\"\n\n\"The police have visited their home several times,\" James replied. \"Brad apologizes and Rebecca won't press charges so there's nothing the police can do. The latest occurrence had happened yesterday. He backhanded Rebecca and cut her cheek bad enough that she had to get stitches.\"\n\n\"If you change your mind give me a call,\" I said and handed James one of my business cards. The card read,\n\nMatthew Steele\n\nInvestigations\n\nSecurity Specialist\n\n\"There are a couple of guys on the force I know who have had success in domestic cases.\"\n\nAfter seeing the look on Mr. Stewart's face when we arrived, I then moved my luggage into another guest bedroom. Abby and I had respected her father's wishes and slept alone while we stayed with them. That evening, about midnight, my bedroom door opened. Abby quickly crossed to the bed, dropping her robe just before she climbed under the covers with me.\n\n\"I thought you deserved a reward for offering to help my sister,\" she said.\n\nThere wasn't much discussion for the rest of the night. Oh, and I enjoyed the reward very much.\n\nThe next morning was Sunday so Abby and I headed back to St. Louis after breakfast. She had to get back to work and I had to see if anyone wanted or needed my services as a private investigator. I really didn't need the work, thanks to a settlement from the police department for wrongful termination, but I did like to keep active if possible.\n\nI dropped Abby off at her place. On the way to my apartment, I thought about the situation that Rebecca was in. James and Mary Stewart were nice people and of course I cared very much for Abby; they were very worried and sad about their younger daughter. Maybe I can do something about that problem, I thought. When I got home I did a little investigating and found out where this Brad asshole worked and what bar he hung out. I planned to pay him a visit; the police couldn't do anything officially but I wasn't the cops. The solution didn't have to come from an official act; it just had to work.\n\nIt didn't take many days to find out Brad's routine. He worked as a mid level manager at a manufacturing plant in North St. Louis. At least two nights a week he would stop at a local tavern after work; he usually left for home after an hour or two; his Friday night's were a little different. Two weeks in a row he stayed until closing; staggering his way to his car and then weaving his way on home. He was too drunk to be walking, much less driving but he never got stopped.\n\nBrad stopped on a Tuesday night and I followed him into the bar. He met with a small group of guys at the bar and had a couple of shots and a beer. When he left the tavern, I followed him to his car. He stopped to light a cigarette and I walked up behind him.\n\n\"Brad,\" I called out. He turned; I bitch slapped him and then backhanded him. He fell to the ground, looking up in pain and surprise. \"\"Hurts, don't it,\" I said in a playful voice. \"Now you know how Rebecca feels.\" That line wasn't playful.\n\n\"Who are you?\" He asked as he stood.\n\nAs he got to his feet, I backhanded him again and again he fell.\n\n\"Doesn't make any difference. Let's just say I'm an interested bystander.\" I knelt next to him and slapped him again.\n\n\"God, stop,\" Brad pleaded, putting up his hands to protect himself.\n\n\"I want you to remember our little talk Brad.\" I grabbed his hair and turned his eyes toward me. \"If you ever hit Rebecca again, I'll come back to see you. The next time you'll never get up. Do you understand?\"\n\n\"What? You'd kill me?\" He asked in disbelief.\n\n\"If it were up to me, I would have put a bullet in your head tonight,\" I answered. \"I have a lot respect for the Stewart's and I won't hesitate to put you down if there's a next time.\" Standing up I said, \"Calling the police about our little talk won't do any good. You don't know who I am and even if you could find me, I have an airtight alibi for this evening.\"\n\nBrad slumped back down, shaking his head and spraying blood from his nose all around. He looked up at me and I could see the fear in his eyes. He was going to have a couple of shiners.\n\n\"Remember Brad, if you ever hit Rebecca again, your body will end up in the Mississippi, floating down stream. Who knows, maybe you'll make it all the way to New Orleans.\" I turned and walked around the building. That ought to hold him, I thought. I don't normally like to bully people but in this situation I actually felt pretty good.\n\n********************\n\n\"Rebecca called me today,\" Abby told me. We were at Rigazzi's again; seems like we ended up there about half the time when we went to a movie or something. It had been three weeks since my meeting with Brad.\n\n\"How's she doing? I'll have to meet her one of these days,\" I replied.\n\n\"She's doing well. She said Brad has stopped drinking and even gone to a couple of AA meetings.\"\n\n\"Well that's good, isn't it? Maybe he saw what an ass he was being after he hurt Rebecca the last time.\"\n\n\"Rebecca said that Brad came home a few weeks ago with his face all beat up. He told her he got into a fight at the bar and it made him stop and think. He hasn't had a drink since that night.\"\n\nI nodded and tried to keep a self satisfied grin off my face. Job well done sir, I thought. Abby looked at me with a suspicious smile.\n\n\"You wouldn't know anything about that, would you?\"\n\n\"About what?\" I asked innocently while trying to hide a smile.\n\n\"That Brad had a fight at the bar and decided to quit drinking.\"\n\n\"Who me?\" I asked and waved at our waiter for another beer. \"Why should I know anything about Brad?\"\n\n\"You seemed very interested when we talked about Rebecca and Brad while we were with Mom and Dad.\" I shook my head and Abby continued. \"Things are so much better she's invited us for dinner Saturday night. That is, if you don't have plans.\" She watched my reaction to the invitation.",
        "The last thing I wanted to do was confront Brad again, but I could see Abby really wanted to see her sister.\n\n\"Sure, if that's what you want to do. Should we bring wine or something? No, I guess if Brad isn't drinking now, wine would be a bad idea.\"\n\nInstead of wine, Abby and I carried a fudge chocolate layer cake when we rang the doorbell at Brad and Rebecca's. She invited us in and after the sisters hugged, I was introduced.\n\n\"Brad's on the deck, fussing with the grill,\" Rebecca said. \"I'll go get him.\"\n\n\"I'll go out and see if I can lend a hand,\" I offered. Abby looked at me in a funny way and I added, \"It's important to get the fire started right and you can't just leave it.\" I don't think Abby bought my excuse. Rebecca pointed to the door leading to the deck so I stepped outside.\n\nBrad glanced up as I came out of the house; his face paled and he looked around like a trapped animal. \"What are you doing here? I haven't bothered Rebecca since I saw you.\"\n\n\"I've heard, but I'm not here to talk to you again; at least not in that way. I'm Matt Steele and Abby's date.\" He calmed down and I said, \"Our little talk can stay just between us as long as you do your part; Rebecca and Abby don't need to know about it.\"\n\nHe nodded and gave a sigh of relief as Abby and Rebecca joined us. The rest of the evening was about what you'd expect from a dinner with family. The girls talked a lot about their childhood, while Brad and I nodded or made comments at appropriate times. Brad kept nervously looking over at me; not sure if I was going to keep our meeting to myself. After about three hours, Abby and I said good night.\n\n\"Okay what's the story?\" Abby asked as I drove her home.\n\n\"Story?\" I asked in what I hoped was a puzzled voice. \"What story are you talking about?\"\n\n\"The story between you and Brad.\" She held up her hand as I started to deny anything. \"And don't tell me there's nothing going on. I saw the looks he kept giving you all night long.\" Abby waited for several seconds and ordered, \"Time to fess up Mr. Steele. He looked like he was going to jump out of his skin every time you talked.\"\n\nI pulled my Corvette to a stop in front of Abby's place and turned in the seat to face her and sighed. \"After hearing your family talk about Rebecca's problem, I decided to have a talk with Brad.\" I explained how I'd found and followed Brad. \"I did have to persuade him a little, but I guess it worked.\"\n\nAbby looked at me for a long time. \"Would you really have killed him if he beat up Rebecca again?\"\n\nI couldn't tell from her voice if the idea repulsed or comforted her. Returning her look I hesitated for a few seconds. I decided that the truth was the best way to go; no matter what the consequences.\n\n\"I would have and still would put him down like a rabid dog,\" I answered in a very serious tone. I waited nervously for Abby's reaction.\n\n\"Normally I wouldn't think of hurting someone like that,\" Abby said. When she said that, I thought I'd blown it with her. \"But it's true I suppose,\" she continued. \"Your perceptions change when it's someone you love that's involved.\" Abby grinned at me. \"You are going to get so lucky tonight,\" she said as she pulled me into her apartment.\n\n********************\n\nAbby and I are doing real good, I thought, sitting in my office working. Well, I was looking out the window, with my feet up on my desk, as across the street the secretaries and female clerks, dressed to the nines, left their respective offices; running errands or going for a late lunch. There's just something about attractive women in short skirts and wearing high heels that gladden my heart. It was a floor show to almost rival one in Vegas. Certainly glad I'm part of a species that has two sexes, I said to myself. Sort of makes things all worthwhile.\n\nFour to five nights a week, Abby and I were at her apartment or at my place, my thoughts continued. Might as well move in together, maybe get married. Whoa, where did that come from? I'd sworn after Johanna screwed me over, I'd never get seriously involved again. I had to chuckle; Guess I never counted on meeting Abby. We'd been in this intense and growing relationship for almost a year now. Time to step up big guy, I said to myself.\n\n\"Mr. Steele?' A voice asked from my open doorway.\n\nI dropped my feet to the floor and turned my swivel chair to face the doorway into my office. \"Yeah, I'm Matt Steele. Can I help you?\"\n\n\"I'm not sure, but a friend of a friend referred me to you.\"\n\n\"Who?\"\n\n\"Antonio Rigazzi, he owns Rigazzi's on the hill.\" I nodded that I knew about Rigazzi's. \"We went to St. Mary's High School together. When I told him my problem he suggested I talk to a friend of his; Rollie Chambers.\"\n\n\"Rollie's a good detective and a better man.\"\n\n\"Yeah, but he said he was involved in something and didn't have the time to take my case. He suggested I talk to you.\"\n\nI hesitated for a few seconds. \"Okay, first things first. Who are you?\"\n\n\"Oh sorry, I'm Hunter Blaine.\"\n\n\"Okay Mr. Blaine. What's the problem?\"\n\n\"Someone broke into my home and robbed my safe. I want you to find who did it and get my property back.\"\n\n\"Sounds like a job for the police.\"\n\n\"I can't go to the police department. I need someone who will be discreet and keep this to themselves. I need someone that I can trust and someone that can do the job. Antonio also suggested you after Mr. Chambers couldn't take my case. Another friend of Antonio's, a man named Tully, said you were the best; next to Mr. Chambers that is.\"\n\n\"Why the secrecy? What was taken? If it was drugs or something illegal, count me out. I won't get involved in that kind of garbage.\"\n\n\"No nothing like that.\" \"Blaine sighed and looked around my office. \"The thief took almost a million dollars worth of my wife's jewelry.\"\n\nI nodded and motioned for Blaine to continue.\n\n\"The problem is that the jewels he took are fakes.\" I raise my eyebrows. \"I used the jewelry as collateral for a business loan. If the fact that the jewels aren't real gets out, I'll be ruined. My business will go bankrupt and I'll lose everything.\"\n\n\"What happened to the real pieces?\"\n\n\"I sold them in small bits and pieces over the last year. Not even my wife knows I replaced the real jewels with copies.\"\n\n\"So you swindled the loan people and you lied to your wife?\" I looked hard at Blaine. \"Why should I help an admitted thief and a liar?\"\n\n\"My business is growing; it's over the hump and showing a very good profit. I'll be able to pay back the loan in less than six months; that's a year ahead of time. After it's over, I'll explain to my wife and hope she doesn't leave me. That's if the fake jewelry doesn't become public knowledge.\" Blaine looked down and shook his head. \"If the business goes belly up, not only will I lose everything but about 200 people will be put out of work.\"\n\nI stared at him for almost a minute; which I'm sure seemed much longer to Blaine. \"Okay Mr. Blain, I'll try and find your fakes for you; before they become public knowledge.\"\n\n\"Oh thank you Mr. Steele. I'm...\"\n\n\"Before you go too far with your thanks you better hear my fee.\"\n\nI had come to the conclusion, after working at a cut rate for the rich Mr. Worth, that if anyone with real money wanted my skills they would pay and pay heavily. Blaine was worth a lot of money; at least for now.\n\n\"It'll cost you $500 a day, plus expenses,\" I said. \"Or I'll cut you a deal and take $5000 for the whole thing, fees and expenses.\"\n\n\"What if you solve it before using up the $5000? Or what happens if you can't find the jewelry?\"\n\n\"I should find them within 10 days, if they can be found. If I can't find your fakes, I still get paid. If I find it before using up the five grand, I keep what's left over. You're paying for my time and experience. Usually the results are good, but not always.\"\n\nWhat if it takes you longer than 10 days? Will I have additional fees to pay?\"\n\n\"Not if you pay the 5 large up front. The lump sum payment takes care of all my fees and expenses for as long as the case runs. Oh, and by the way, I won't stop looking until you tell me to.\" I stared at Blaine, chuckled and shook my head.\n\n\"What's so funny?\" He asked in a puzzled angry voice.\n\n\"You're talking about losing a business that's worth what, several million? And you're worried about five grand. You're a piece of work Mr. Blaine.\"\n\nNow it was Blaine's turn to shake his head with a rueful little grin. \"Sorta dumb huh? I work out deals for manufacturing supplies and such; guess it just carries over.\" He reached into his jacket, pulled out a checkbook, wrote a check and handed it to me. It was for $5000. \"Please save my ass Mr. Steele.\"\n\nI put the check in my desk drawer. \"I'll need a list of the ice, and pictures if you have them.\"\n\nBlaine took a large manila envelope out of his briefcase and slid it across the desk to me. \"This is a description and picture of each piece.\" He laid a business card in front of me. \"That has my office and my personal cell number. Give me a call if you need anything more?\"\n\nWatching Blaine leave my office I thought, he's done something illegal, but at least some good might come out of it; if I can find the ice. I grabbed the phone and started making calls; time to check in with my Confidential Informants.\n\nEven though it was only 3 PM, after a few calls to put the word out on the street, I headed to one of my watering holes. I hoped to run into a couple of my CIs or at least leave a message that I wanted to talk to them. These two, Smiling Eddie, and Bagman Charley, I had to contact in person; neither carried a cell phone. Or if they did they'd neglected to give me their numbers.\n\nThe bar, called the Neighborhood Tavern, was in a part of St. Louis that the city fathers wouldn't put on a tour for visiting dignitaries. It was in an area that although historic, having been part of the riverfront business district since the early 1800's, was so bad that the few decent people in the area should move out or just shoot themselves.\n\nThe current residents were a mixture of winos, petty thieves, and people waiting for the government to magically make their lives better; they were the \"dregs of society\" and did nothing to better their own lives. There wouldn't be any revitalization of the buildings with new businesses or semi wealthy people moving in as had happened in other historic areas of the city. It would have been cheaper and more logical to just bulldoze the three block area and start over.\n\nThe lone exception was Bill Marshall, the owner of the Neighborhood Tavern. Bill was in his early 70s, and a retired Navy Master Chief. He'd grown up near the St. Louis waterfront, returned after 30 years in the Navy, and bought the tavern. Bill watched as the neighborhood declined but refuse to desert the sinking ship of the area.\n\nThe Neighborhood Tavern was the one safe place in a ten block radius. Bill Marshall allowed nothing unseemly, as he called it, to happen in his bar. He ruled it with an iron hand, a Lou Brock baseball bat, and a Dan Wesson .357 revolver. When I asked Bill why he hadn't or didn't sell out and move, he said this was his home and he wouldn't let anyone run him off. I pointed out that he could open another tavern or bar in a better part of the city but he answered, \"It wouldn't be the same. Got too many years invested to sail away.\"\n\nBill and I had been friends for several years; from before the neighborhood had gone completely to hell. I'd worked a case in the neighborhood and had spent a lot of hours in his bar. One evening I came in and two very large young punks were giving Bill a hard time. They were demanding money; Bill's bat was lying on the floor where they'd thrown it after tearing it from his hands.\n\nI picked up the Lou Brock Special and gave one of the punks a medium hard tap on the back of his head. When he turned, I hit him in the stomach with the barrel of the bat; he went down and stayed down. The other man rushed at me and met the business end of the Lou Brock; he fell to the floor too.\n\n\"It's a good thing for them you came in when you did Matt,\" Bill said and raised the .357. He'd been holding it down beside his leg. \"Course if it was up to me, you could have been five minutes later.\" He spit on the two men and called the police.\n\nI hadn't been in the Neighborhood Tavern for a while and Bill looked up from behind the bar when I walked in. He sat down the glass he'd been polishing, reached into a special cabinet under the bar, and took out a bottle of Gentleman Jack. Before I got to the bar, he had the whiskey on ice poured for me.\n\n\"Little early, don't you think?\" I said as I picked up the drink.\n\n\"Like the song says, its five o'clock somewhere,\" Bill answered with a grin and then poured a drink for himself. He held up his glass in a toast and said, \"The secret of an enjoyable life is beautiful women, fast cars, and good whiskey.\" He drank the double whiskey and put his glass on the bar. \"Maybe it's fast women, beautiful cars, and good whiskey. Never could get the order right.\" He joined me as I laughed and downed my drink.\n\n\"What brings you in, aside from seeing my smiling face?\" Bill asked, raising an eyebrow.\n\n\"Got a case and need information\" I answered. \"Thought I might run into or at least leave a message for Smiling Eddie and Bagman Charley.\"\n\nBill lifted the bottle over my glass with a questioning look. I shook my head and he filled his glass again. \"Tell me what you've got,\" he said. \"I'll make sure your boys get the word.\"\n\nI explained about the robbery of Blaine's place and that I wanted the word from the street about who took the jewels and where they might be. \"Give me a call when the boys check in; or have them call me. I know you won't take anything, but tell them it's worth a few bucks. Thanks Bill.\" I nodded and went back to my truck.\n\nPeople had several times asked or made comments about by dilapidated old beater of a truck. Why don't you drive a nicer vehicle they asked? I always answered that it got the job done and was paid for. My truck had a damn near full race 350 CI engine and race car type suspension. The body had a lot of bondo holding it together and three different colors of paint. If need be it could catch or outrun almost anything I might come in contact with. I always answered that the truck wouldn't be bothered in some of the less gentle and nice neighborhoods I sometimes worked in; like the area around the Neighborhood Tavern.\n\nThat evening, as Abby and I were coming back from dinner, I got a call from Bill. \"The boys are working on your problem. Should have word in a day or two.\" I thanked him and went back to enjoying Abby. We were sitting in my restored 63 Corvette Split Window Coupe in front of Abby's place. She had a big presentation the next morning so it was going to be an early night for us.\n\n\"I'll make it up to you,\" Abby said with a grin. I nodded and she leaned over the center console to kiss me. \"I've got a favor to ask,\" she said. \"Although I probably should wait until I can get you to do my bidding with my womanly wiles.\"\n\n\"Whatever you need Abby.\"\n\n\"I have a friend at work that's having a problem with her son. She's a single mother and the boy is being bullied at school. The school administrators and such say they can't do anything unless they catch the bigger boy actually doing something. Stella is beside herself; she doesn't know what to do. Her son doesn't want her to come to school and confront the boy; he said it would only make it worse. I thought you might talk to him; maybe teach him some self defense moves.\"\n\nI looked at Abby for several seconds, shook my head and smiled. \"You know, you're the only one I know that could get me to do something like this.\" I shook my head again. \"Set up a meeting with the boy and his mother and I'll do what I can.\"\n\nFriday evening I picked Abby up, again driving my Corvette. I drove the car that evening for three reasons: One, I like to drive it; Two, Abby deserved to ride in a fine chariot instead of my beater of a truck; and Three, the car would probably impress the boy. I wanted him to know that I was a serious guy and not just some grown up his mother had brought over to give him a lot of bullshit adult advice.\n\nStella, and her son James, lived on the near south side in the Soulard Market neighborhood. It was one of the areas that people were bringing back to life. A lot of young couples just starting out, several retired or near retired people, and a lot of growing families had made the neighborhood one of the best in the city.\n\nWhen I met Stella and James, she immediately began to tell me about the bully. How the school wouldn't do anything and how worried she was. James came home two or three times a week with bruises and scrapes; once in a while a black eye or a split lip. The whole time she was talking, she stood behind where the boy was sitting and stroked his hair. James wasn't the happiest of campers and kept trying to shrug her hand off his head. About the only thing James had said during all this was, \"Aw Mom.\"\n\nI listened to Stella for several minutes, it seemed like an hour, and held up my hand. \"Do you prefer to be called James or Jimmy?\" I asked the boy.\n\n\"Jimmy sounds like a little kids name. I like to go by James.\"\n\n\"Okay. C'mon James, let's take a ride in the Corvette.\" I motioned him to follow me and we climbed into the sports car. The tires spun as I pulled away from the curb. We drove over to Lafayette Park and took a walk in the park. As we walked I looked at the boy.\n\nHe was a typical 14 year old. Tall for his age, he was going to be a big man when he reached his full growth. Right now he was all gangly arms and legs; a little clumsy trying to get a hold on his recent growth spurt to 5' 9. Slender build but the big hands and feet showed he would top 6 feet and two hundred pounds as he aged. All and all a nice looking young man, I thought.\n\nWe found a bench overlooking the pond and watched the people in paddle boats for a short time. \"Tell me about it James,\" I said.\n\n\"The kid's name is Sam. He's 17 and a lot bigger than me. Two or three times a week, he takes my lunch money away from me. He slaps me around until I give him the money. Sometimes he doesn't ever take the money, he just slaps me around. The teachers say they can't do anything unless they see him doing it but he's always careful and makes sure no teachers are around.\" The boy sighed and looked at the people on the pond.\n\n\"I wish I didn't have to go to that school anymore. Wish I knew some karate or something. I wish I wasn't such a coward.\" James hung his head and I could see tears in his eyes.\n\n\"Look you're not a coward; going back to school every day, in spite of what Sam does, shows that. So, if you're not afraid, the thing to do is hurt Sam as much as you can each time he tries to slap you around. If he jumps you, do everything you can to hurt him as much as he hurts you.\" I put my hand on his shoulder and continued. \"I can show you a few moves to help protect yourself. But the most dangerous part of a man is right there.\" I put my finger on his forehead. \"If a guy's head is right he can be very dangerous.\"\n\n\"I don't understand,\" the boy said. He looked puzzled.\n\n\"You think you can't beat this Sam because he's a lot bigger than you. I can teach you some moves that will make it harder for him to slap you around but until you get bigger they're just defensive moves.\"\n\n\"So what, I just let him keep beating me up?\"\n\n\"No. We'll mix in a few offensive moves that will probably make Sam decide it isn't worth bothering you.\"\n\nJames again looked puzzled. \"What do you mean?\"\n\n\"If Sam hits you, hit him back as hard as you can. Keep throwing punches until you can't anymore.\" I could see the skeptical look on the boy's face. \"Or better yet, get in the first punch.\" James looked at me like I was nuts. \"Look you're going to get beat on no matter what right? Make the guy pay. Let him go home with a black eye or a split lip. I guarantee you that after a couple of times of Sam taking some hits, he'll back off.\"",
        "For over 30 minutes I showed and we practiced what I had preached. As we worked through the moves I could see a different look in his eyes. A confidence now found. Afterwards I motioned for James to follow me back to the Corvette.\n\n\"If nothing else, at least you'll know you stood up for yourself and you'll feel better. \"Not to be a typical adult but believe me how you feel about yourself is important; especially as you get older.\"\n\nJames looked at me for a long time and then smiled. \"I like it,\" he said. \"You're right, Sam's gonna steal my money and beat on me anyway. I might as well make him pay for it.\"\n\nWe got into the Corvette and I took James home. \"Moms are great but sometimes they just don't understand some things. If you need to talk to someone, call me,\" I said and handed him one of my cards.\n\n\"Stella asked James if he was alright when we entered the house. He just smiled, nodded, and went to his room. \"What did you and James talk about?\" She asked. \"Is he going to be alright?\"\n\n\"James and I had a nice discussion, Stella. I'm not his father, just a new friend, and I think our talk should stay between him and me.\"\n\nAbby, Stella, and I sat around and talked for about an hour. The couple of times Stella sort of asked about my talk with James, I smiled and shook my head.\n\n\"Were you able to help James?\" Abby asked when we were back in front of her apartment.\n\n\"I showed him a couple of moves to protect himself, but most importantly we talked,\" I answered.\n\n\"What did you tell him?\"\n\nI leaned over kissed her. \"That's between us men,\" I said. \"Talk to you tomorrow.\"\n\nThree days later, in the early evening, I got a call from James. \"You were right Mr. Steele. I did what you said and Sam is leaving me alone now.\"\n\n\"What happened?\"\n\n\"Sam was sitting with his friends in front of the door to the school. He walked over and knocked my books to the ground. Then he told me to give him my lunch money. I picked up my books and remembered what you said. When he reached to knock them out of my hands again, I kicked him in the crotch. He bent over and I knocked him to the ground. Then I jumped on his back and started to punch him. A teacher came out of the building and stopped me. \"\n\nJames paused and continued. \"That's not all Mr. Steele. Sam and I both got detention for fighting, but that's okay. A lot of the other kids that Sam picked on told the teachers about Sam bullying me and them. When I walked into the detention room, Sam was already sitting there. He looked up and stared at me when I sat down across the room. He pointed his finger at me, shook his head, and grinned. Today he was sitting in front of the school as usual; but this time he just nodded at me as I went by.\"\n\nI waited for James to catch his breath; he'd been talking so fast it was almost hard to understand him. \"That's good to hear James. I'm glad it's working out for you.\"\n\n\"That's not all Mr. Steele. The principal sent a letter to Mom, telling her if I got into any more fights I'd be suspended. Boy did that make her mad. The next day she went to see Mr. Wright and got all over him. Mom told him about Sam bullying me and that the school didn't do anything. She also told him that if he, Mr. Wright I mean, didn't put a stop to it, she'd kick his butt.\" James laughed and added, \"One of my friends, Jenny who works in the office, told me about. After Mom left, Jenny said that Mr. Wright told his secretary that he wouldn't be able to sit down for a while after that ass chewing.\"\n\nJames laughed again for several seconds. \"But maybe the best thing about it, is that I feel better. I'm not afraid anymore and I won't put up with Sam or anybody else picking on me. Thank you Mr. Steele.\"\n\n\"No problem buddy. If you want to talk or anything give me a call.\" After I hung up, I stared at a painting on my wall, lost in thought.\n\nAbby came into my living room, wearing my robe and drying her hair with a towel, after her shower. \"Who was that?\"\n\n\"Just a friend that followed my advice,\" I answered with a grin.\n\n\"A friend named James?\" She smiled at my surprise. \"I talked to Stella earlier today and she told me all about James's little adventure. She also told me she went down to the school and read them the riot act.\" Abby walked over and flopped down on my lap. \"You're not the cynical, hardhearted person you show to the world.\" She leaned in and kissed me.\n\n\"I'm cynical about those that deserve it, I'm hardhearted when I have to be,\" I answered with a serious face. \"But James doesn't fall into either category. Without a father to teach him, he just needed a man's point of view.\" I shrugged my shoulders and smiled, \"Guess what I told him worked. He's a happy little guy.\"\n\n\"Stella told me about the bullying and that you told James to fight back.\" Abby leaned back and added, \"He could have been hurt; that Sam is much bigger than him.\"\n\n\"Abby...he was being hurt anyway and not just physically. He didn't feel good about himself and that could be worse than a black eye or something else. I hate to get all philosophical about it but there's a line from Julius Caesar that's about right.\" I looked at the surprise on Abby's face. \"What? I've read some Shakespeare you know. I'm not just a pretty face.\"\n\n\"I'm sorry, I just can't picture you sitting in a smoking jacket, drinking wine, and reading Shakespeare.\" Abby said as she laughed and giggled.\n\n\"I don't drink wine much and I don't own a smoking jacket,\" I protested. \"More like a glass of Gentleman Jack and wearing a sweatshirt and jeans.\"\n\n\"I know, I know, but it's still a funny picture. What did Shakespeare have to say about James's problem?\"\n\n\"Julius Caesar is talking to his wife, Calpurnia, after she had a nightmare about Caesar being killed while at the Senate. She begs him not to go; to send word he's sick or something. He answers, 'Cowards die many times before their deaths; The valiant never taste of death but once.' Toned down, that's what I told James.\"\n\n\"And what does Shakespeare have to say about love?\" Abby asked as she snaked her arms around my neck.\n\nI thought for a few seconds and said, \"I'm not sure about Shakespeare, but this is what I have to say about it.\" Pulling Abby closer I wrapped my arms around her and kissed her.\n\n********************\n\nWe were in my truck, on our way to dinner the next evening. I don't know why we were in the old beater; maybe I had a feeling or a premonition or something. My cell phone made its stupid noise to let me know I had a call; I didn't recognize the incoming number.\n\n\"Matt Steele,\" I answered.\n\n\"Hey, it's Bill down at the Neighborhood. Eddie said he's got some info for you but he won't give it to anyone but you. Wants to meet you here tonight at 7.\"\n\n\"Hell, that hardly gives me time to get there; I'm way out on the west end. Tell him I'll meet him tomorrow, would ya?\"\n\n\"Won't work. Smiling Eddie says he's leaving town tonight. Says things are getting too hot for him and he's buggin out. Says Bagman Charley has already bugged out. If you want to talk to him it has to be tonight.\"\n\nI pulled the truck into a parking lot next to a closed business; never did like talking on the phone and driving at the same time. Hesitating for several seconds I said, \"Tell Eddie I'll be there as quick as I can. Gotta make a stop first.\"\n\nTurning to Abby, I explained the situation. \"I'll drop you by my place on the way. You can order some Chinese or a pizza for us and I'll be back in an hour or so.\" I put my hand up to the side of her face. \"Sorry, I've got to go see this guy.\"\n\n\"Why can't I go with you?\" Abby asked.\n\n\"The Neighborhood Tavern is not the kind of place I'd take a lady; especially my lady,\" I replied. \"Hell, it's not the kind of place I'd take a SWAT team. I don't even want to go there unless I have to.\"\n\n\"Matthew Steele! I'll have you know I'm capable of taking care of myself.\" Abby slid across the bench seat of the truck and leaned against me. That's one thing I like about my truck better than my Corvette; Abby can sit next to me and not stuck in a bucket seat. \"Besides, you'll protect me. Won't you?\" She batted her eyelashes and pouted at me; then she broke up laughing. \"Really Matt, I'll be okay.\"\n\nI knew when I was beaten; nodding I started the truck, made a U turn, and headed for The Neighborhood. The big V8 roared as I raced to get to the tavern before Eddie decided to leave. I did a power slide up to the curb. Almost misjudged that one I thought, as the truck slid into the curb and rocked back and forth.\n\nAbby followed me out of the driver's side. Her eyes were sparkling and she looked excited. I didn't know if it was my driving or the thrill of being on a case with me. Pulling open my sports jacket, I made sure my Glock 21C was showing. Abby's eyes got even bigger.\n\n\"This isn't the nicest place in the city. Some of the guys in there would make a run at you; even with me standing next to you. But damn few of them will ignore my Glock,\" I explained. She nodded and we entered The Neighborhood Tavern.\n\nAbby wrinkled her nose as we entered the big barroom. The musty smell was made up of stale beer, unwashed bodies, and cigarette smoke; this smell caused Abby's reaction. There were several tables scattered around the room with mismatched chairs and scared tops; most with cigarette burns on them. The carved wood bar, a remembrance of better, more successful days, ran 40 feet across the back wall. At the far end, the bar turned 90 degrees and abutted against that wall. Sitting in the last seat, with his back against the wall, was Smiling Eddie.\n\nI nodded at him and taking Abby's arm walked to join him. Seated at the bar, were two very large, ugly men. They both needed shaves, as well as baths; I could smell the dried, stale sweat. Because they were wearing wife beater shirts, I could see what looked like prison tattoos up and down their arms. As we walked behind them, one of the men turned. He looked at Abby; the lust and his intent were plain to read on his face and in his eyes.\n\n\"Well, well; look what we been brought,\" he said. His stained, dirty mustache did nothing to hide the green teeth or the bad breath. He slid off his barstool and took a step toward Abby and me. I stepped in front of Abby and waited. Old green teeth gave me an evil grin and pulled a large switchblade knife; flicking it open.\n\nI reached to the small of my back and did a speed draw with the big Glock. \"Don't even think about it,\" I ordered and pressed the barrel of the gun to his forehead. \"Now I admit this young lady is very attractive. But you have to ask yourself a question; is she worth dying for?\"\n\nThe missing link dropped the knife, slumped back onto the barstool and shook his head. I kicked the knife across the room, holstered my piece and turned to the other guy. \"How about you buddy?\"\n\nPicking up his beer, he gulped it down. \"I got a wife and I reckon it's time I go home to her,\" he said. Standing he nodded at his friend, then at me and walked out of the tavern.\n\n\"If it's okay, I think I'll leave too,\" the other one said. He didn't even bother to finish his beer; he just walked very fast, almost running, to escape the crazy dude with the big gun. He kept looking back over his shoulder to make sure I wasn't following him.\n\nI turned to Abby. \"See not the nicest place in town.\"\n\n\"I think you made ole Iron Mike there wet hisself,\" Bill said with a big grin. \"Glad you didn't shoot him though; blood's a lot harder to clean up than urine.\"\n\n\"Abby, this is Bill Marshall, the owner of this fine establishment. Bill this is Abby Stewart. She's my, er...er...\" I stuttered not knowing how to explain our relationship. \"Oh hell, she's mine,\" I finished.\n\n\"A pleasure to meet you Miss Stewart,\" Bill replied. \"Why don't you let me get you a drink while Mattie talks to Smiling Eddie?\"\n\n\"Mattie?\" Abby said and giggled. \"Really? Mattie,\" she repeated and looked at me.\n\nI shook my head and went to take the stool next to Smiling Eddie; he had a worried look on his face and wasn't smiling. \"Talk to me Eddie. What did you find out?\"\n\n\"I got a name for you. Dude I know told me this guy was braggin about heisting a lot of ice so I checked into it. It'll cost you Matt,\" Eddie said. \"I gotta get out of town.\"\n\n\"Eddie, I've always taken care of you,\" I said. He'd always done a good job for me so I handed him a fifty. \"Why do you have to leave town?\"\n\n\"This guy heard me and Charley was askin around and he's not the kind of guy I want to be on his bad side; he's a real hard case. So I'm getting while I can. Hell, Charley's already split.\" Eddie looked around me at the front door as if he expected someone to come after him.\n\n\"Okay, what's his name and where can I find him?\"\n\n\"Sidney Jenkins. Everybody calls him Sasquatch, but not to his face.\" Eddie looked at the front door again.\n\nHe's really spooked, I thought. Eddie had always been a little squirrely, but I've never seen him this scared. Sasquatch, I thought. You've got to be kidding. I shook my head; no accounting for taste. \"Sasquatch, Eddie?\"\n\n\"Yeah. Sid's a really big scary guy. He used to play pro football about ten years ago; then he tore up his knee and had to quit. People tell me he's been in a bad mood ever since.\" He gulped down his drink and I motioned to Bill for a refill.\n\n\"Where can I find him?\"\n\n\"Don't know where he hangs; heard he started lookin for me and Charley before I could get that close. Word is Sid didn't like us askin questions about a certain robbery.\"\n\nHe took a big pull on his new drink. \"This guy is nothin to mess around with Matt. Word is he's damned near killed a couple of guys with his bare hands.\" Eddie stood to leave.\n\n\"Where're you going Eddie?\"\n\n\"Don't know yet.\" He held up the fifty. \"Guess I'll see how far this will take me on a bus.\"\n\n\"Won't get you too far and you won't have anything to live on when you get there,\" I told him. \"Here,\" I said and handed him four more fifties; course, it was Blaine's money. \"Let me know if you come back.\"\n\n\"Thanks Matt. Try talkin to Calvin, the fence over on Chouteau and Sixth; he works for Rollie Chambers sometimes and he's into ice and shit.\" Eddie headed for the back door. \"See ya Matt,\" he said just before he left the tavern. I found out later that Eddie was found beaten half to death outside of the bus station.\n\nI walked back to where Abby was sitting, talking to Bill. \"We can still make dinner, if you want to,\" I suggested\n\n\"I'd ask you to stay,\" Bill said. \"But the second half of my entertainment didn't show up tonight.\" He smiled at me. \"It's been a pleasure to meet you Miss Stewart. Come back and see me sometime, maybe when you can get a police escort.\"\n\nBack in my truck Abby laughed. \"Lets see... there's Iron Mike, Smiling Eddie, Bagman Charlie, Sasquatch? Who's next, Darth Vader? What's ice anyway?\"\n\n\"You run into some colorful characters in my line of work,\" I said smiling back at her. \"Ice is a street name for jewelry; you know, diamond rings, necklaces, rubies. That kind of thing\"\n\nAbby got a serious look on her face. \"Those people are so sad. Poor Eddie and that Iron Mike and Ralph James. How do you stand being around them?\"\n\n\"That's just part of the city Abby; it's part of my job. But it isn't me.\" I took her hand and pulled her across the seat closer to me.\n\n\"So I'm your er...er...yours, am I?\" She grinned, reminding me of my confusion when I introduced her to Bill.\n\nI shook my head. \"Yeah,\" I replied. \"That's if you want to be.\"\n\n\"I'm here aren't I?\" Abby kissed me on the cheek and laid her head on my shoulder. The drive back to my place was a little slower than our race to meet Eddie.\n\n\"I can't take you to dinner tonight,\" I told Abby the next morning as she was getting ready to go to work. She kept some of her things at my place so she wouldn't have to run home mornings after she stayed over. \"I've got a meeting to attend. You could come back here and maybe we could have a late supper,\" I suggested.\n\n\"Got a date with a hottie, do you?\" Abby was smiling, knowing that she was the only hottie I was involved with.\n\n\"Yep,\" I answered. Her smile slowly slid off her face. \"First I'm going to see that fence that Eddie told me about. Then I've got a date with Sasquatch; if I can find him.\"\n\nHer smile reappeared. I kissed her, waved goodbye, and left the apartment. As I got to my truck, I dialed a number on my cell.\n\n\"This is Chambers,\" I heard when the call was answered.\n\n\"Hey Rollie, its Matt Steele.\"\n\n\"Hi Matt. Is this a social call or do you need something?\"\n\n\"A little of both I guess. I want to talk to your CI, Calvin, about some hot jewels, but wanted to check with you before I talk to him. I don't want to mess up anything for you.\"\n\n\"Calvin and I go way back,\" Rollie said. \"I'll give him a call and tell him you're coming. If it's about jewelry, he'll know about it.\"\n\n\"Thanks Rollie, I'll try and return the favor someday.\"\n\n\"Oh, almost forgot,\" Rollie continued before I could hang up. \"Tully said to have Abby give him a call about their next class; he might have to reschedule.\"\n\n\"Class? Tully? What class?\" I asked. That Abby and Tully were even talking much less doing something together was news to me.\n\n\"You didn't know? I guess not by your reaction.\" Rollie didn't say any more.\n\n\"C'mon Rollie, give,\" I prompted. \"You can't just leave me hanging.\"\n\n\"Okay, but don't let on to Abby I was the one to ruin what was going to be her surprise. Abby has been taking the basic hand gun course out at Tully's place; Missouri Tactical Academy. After she finishes training she's going to get her CCW.\"\n\n\"Why does she need a concealed carry permit?\" I asked before I thought. \"Guess you're the wrong one to ask aren't you? Thanks Rollie, I'll let you know if Calvin is any help. See ya.\"\n\nI started my truck and drove toward my office. Now why would Abby want a CCW, I asked. It was a rhetorical question because there wasn't anyone there to answer it. I sure the hell didn't know.\n\nAround 1 PM I called Abby. I usually called her if we hadn't been together the previous night. This time was different. \"Hey Abby. I've got a message for you.\" I paused for a couple of seconds. \"Tully said to give him a call about your next class.\"\n\nThere was silence on the line. Finally I said, \"Abby?\"\n\n\"It was supposed to be a surprise,\" she said.\n\n\"Why do you want a CCW?\"\n\n\"Well, Jessica and Julie are involved with their detectives and they have them so since I'm involved with a detective I thought I should have one too.\" Abby hesitated waiting for my reaction but I kept quiet. \"Maybe you'll need a gun toting moll to back you up sometime,\" she said trying to make a joke.\n\n\"I don't think so young lady,\" I replied. \"Anyway I'll see you about 9. Okay?\"\n\n\"The pizza will be waiting and the beer will be cold Mattie,\" she answered and hung up before I could remark about the \"Mattie.\"\n\n\"Calvin?\" I said as I entered the rundown storefront in an area that could have been called skid row if it were nicer. The man behind the counter at the back of the store nodded. \"I'm Matt Steele.\"\n\n\"Rollie told me you'd be comin by. Told me to help you any way I could.\" Calvin gave me a small calculating grin. \"So how can I help you?\"\n\nI explained about the robbery and what was stolen. I didn't tell him the jewels were just paste and Cubic Zirconium; that they weren't worth much more than costume jewelry.\n\n\"A fella named Sidney Jenkins called. Said he had a million dollars worth of jewelry and wanted 400 hundred thousand for them. Said he'd bring them by my place in a couple of weeks and for me to have the money ready.\" Calvin shook his head. \"Can you imagine that? I'm suppose to just hand over 400 large on his say so. I was born at night but it wasn't last night.\"\n\n\"Sounds like my guy. Know where I can find him?\"\n\n\"Strange you should come by today. I'm supposed to meet him at Dooley's at 8 PM day after tomorrow; you know the place over on Laclede.\" I nodded that I knew the bar. \"Said he'd have a couple of pieces with him for me to look at.\"",
        "\"Think he might be there tonight?\" I ask hopefully.\n\n\"I checked up on this guy; Dooley's is his regular place from what I hear. Got a booth in the back that he does business out of; that booth pretty much belongs to him. Friends tell me people call him Sasquatch cause he's so big.\" Calvin hesitated and asked, \"You not gonna blow my deal are you?\"\n\n\"Calvin, there is no deal. Take my word for it. I can't tell you more or explain why, but you don't want any part of this.\"\n\n\"Rollie says you're a stand up guy Matt. If he trusts you I guess I can too.\" He nodded and added, \"I'll just stay close to home and if Mr. Sasquatch wants to see me, he can come here.\"\n\n\"That might not be a good idea Calvin. From what I hear, Jenkins is a real ball buster.\"\n\nCalvin reached under the counter, pulled out a sawed off double barrel ten gauge and laid it in front of him. \"Don't care how bad or how big he is,\" he hefted the shotgun. \"Mabel here can bring him down to size.\"\n\nI smiled at the small man and the big gun. \"Reckon you could bring down an elephant with Mable there. Should work for a Sasquatch.\" I waved and turned to leave. \"Thanks for the help Calvin. I'll see you don't get hurt by it.\"\n\nGuess I'll go back to my office, I thought. Think I'll go visit Mr. Jenkins this evening. Checking my watch I saw I had about 4 hours to kill; no need to get to Dooley's before 8. Characters like Jenkins don't start their night until ten or so.\n\nIt was 8:35 when I entered Dooley's Pub. The place wasn't quite as bad as The Neighborhood Tavern but damned close. I found a spot at the bar where I could put the wall at my back and ordered a beer. The bartender stared at me as he put the bottle down.\n\n\"Ain't seen you in here before,\" he said. \"That'll be two bucks.\"\n\n\"First time in here. Nice place,\" I replied and handed him a twenty. He snorted and placed my change on the bar.\n\n\"Jenkins around tonight?\" I asked and slid the change back to him.\n\n\"You mean Sasquatch?\" He made the change disappear. \"Naw, usually doesn't come in until around ten. You a friend of his?\"\n\n\"Nope. Got a little business to transact with him.\"\n\n\"Mister, you be real careful dealing with that man. He's as mean as a pit bull with a stomach ache.\"\n\nI talked to my new friend, the bartender, for almost two hours and two more beers. Each time I gave him a five and waved away the change.\n\n\"There he is,\" my new friend said and nodded toward the door.\n\nI looked toward the front of the room and saw one of the biggest men I'd ever seen in person. Damn he has to be 6' 6 and he must weigh close to 300 pounds, I thought. None of looks like slack belly either. He looks hard and fit.\n\nJenkins stood in the door, turning his head to look around. I saw a receding hair line but with long blond hair worn down his back almost to his shoulders. It was tied back with what looked like a bolo tie with a silver Concho. His face had a scar running from just below his right eye down to his jaw. Jenkins swept off the leather trench coat he was wearing and handed it to his minion. When he did, I could see his big chest, shoulders and arms. All and all I couldn't think of anyone I wanted to confront less. I don't know if even Calvin's Mabel is big enough to handle him, I joked to myself.\n\nHe made his way to a large booth in the back corner. It was U shaped but the back seating area had been cut out and a larger overstuffed chair had been put in place of the rear bench seat. When Jenkins sat down the big chair looked like his throne. He motioned to the bartender and was brought a bottle of premium whiskey and a glass.\n\nI waited until he'd had his first drink and walked over to his booth. \"Mr. Jenkins I'd like to talk to you for a few minutes.\"\n\n\"Who are ya?\" The sneer on his face told me this wasn't going to be easy.\n\n\"Names Matt Steele; I'm a private detective. I understand you...Well, let's say, came into possession of some jewelry that belongs to Hunter Blaine who lives over in Creve Coeur.\"\n\n\"So what if I have?\"\n\n\"Mr. Blaine asked me to look into a theft at his home. If the jewelry that you have belongs to him, I'd ask you to give it to me. I'll take it back to Mr. Blaine; Oh and I also want to know who hired you to make the heist.\n\n\"What makes you think anyone hired me?\"\n\n\"No way for the word to get out on the street about the contents of Blaine's safe; information had to come from an inside source. Ergo, that inside source hired you to make the heist.\"\n\n\"Ergo? My, aren't we educated?\" Jenkins gave me what passed as a smile; more like an evil grin, I thought. \"What if I don't want 'to give it to you' or this Blaine guy?\"\n\nI'd notice that Jenkins didn't say a lot; I'm very observant that way. Jenkins didn't posture or put on an act or give off a sense of bravado. Guess when you're that big, you don't have to act brave or tough, I thought. Maybe it's because you are brave and tough and big.\n\n\"It's my job to return them to Blain. If you won't return them, I'll have to persuade you.\"\n\nJenkins slowly stood. He grabbed the large metal and wood table and set it to the side so we faced each other with nothing between us. Damn table must weigh a couple of hundred pounds I thought.\n\n\"Think you can 'persuade' me?\"\n\n\"Mr. Jenkins, I've never met anyone I'd rather not have to go up against than you; but I'll take you down if I have to.\"\n\nSasquatch moved extremely fast, not only for a big man but for anyone. He threw his glass at me and rushed toward me. I tried to kick him in the groin but my foot slipped on the spilled drink and I hit his stomach; it was like kicking a brick wall. Jenkins grunted but didn't stop his headlong rush. He grabbed me around the waist, picked me up, and threw me at the wall. I'd hit him with three of four good punches as he hefted me, but he acted like they were bee stings. Flying through the air, I thought, Hell this is gonna hurt. It did.\n\nBefore I could get my feet under me, he started for me again. As I stood up, Jenkins used his right hand to backhand me. I fell against the wall, rebounded and hit him across the bridge of the nose with the side of my hand. Never use your fist on a guy's head, I reminded myself.\n\nDuring my career as a St. Louis Policeman, I'd taken all the self defense courses the Department offered; I'd even taken some outside training. My instructors all said the same thing; hitting a man in the head with your fist was just a collision between bones and most of the time would result in an injured or damaged hand. It was better, they taught, to use the side of your hand, sort of like a Judo chop, and save your fist for midsections and once in a while kidneys.\n\nI heard a crack when I hit his nose and blood sprayed down his face. Other than those two things, it didn't seem to bother him. He just grunted again and continued trying to teach me a lesson; the lesson was not to screw with him. Jenkins never slowed down and hit me with another backhand; this time with his left hand. I had the strangest thought as he threw me across the room against the bar; he must have learned about not using your fist on a guy's head too. Then he picked me up, slapped me down on the bar top on my back, and slid me down the bar; glasses and bottles and anything on the bar fell to the floor. At the end he picked me up and threw me through the front screen door. It wasn't out the door, it was through the door; me and the screen hit the sidewalk about the same time. He stood in the doorway, looking at me lying on the sidewalk.\n\n\"Don't come back,\" Jenkins warned. \"Next time I won't take so easy on you. The only reason I did was you was respectful when you started talking to me.\"\n\nEasy? That was easy? I said to myself. Sure glad I was respectful; I'd hate to see his reaction if someone insulted him. I slowly and gingerly picked myself up and walked, no more like staggered, to my truck. The drive back to my place was very slow: I almost expected to be stopped by the police for obstructing traffic. I pulled myself to my door and tried to put the key into the lock. My right eye was swollen almost completely shut and my left had double vision; made things hard to see and do.\n\nAbby must have heard me fumbling at the door and opened it. She stood there with a look of horror on her face, then quickly put my arm around her shoulders and helped me to the sofa. \"What happened?\" She asked as she gently lowered me to a seat.\n\n\"I ran into something that disagreed with me,\" I mumbled an answer. My top lip was swelling and made it hard to talk. I leaned against the back of the sofa and closed my one good eye. Abby left but returned quickly and put a bag of frozen peas on my right eye. She began to wash the blood, both mine and Jenkins, off my face. Abby was trying to be gentle and I tried to be brave but I winced almost every time she touched my face. After several minutes of doctoring and a rather large glass of Gentleman Jack, I told Abby about my entertaining evening.\n\nShe stood and started toward the telephone. \"What are you doing?\" I asked.\n\n\"Calling the police.\"\n\n\"Why?\"\n\n\"I'll have that beast arrested. For assault or attempted murder or something.\"\n\n\"Abby, let it go. Best case, Jenkins does a little time and I still don't have the jewels.\"\n\n\"But...but...\"\n\n\"Abby, let it go. I can't call the cops every time I get into a little scuffle; not if I want to continue to be a private detective. I'd lose what respect I've built up in the community and then no one would hire me.\"\n\n\"Men,\" Abby said in exasperation. She sat down next to me, moved the peas to the left eye and put her arms around me.\n\nThat's where I woke up the next morning. During the night, Abby and I had managed to fully stretch out on my huge sofa. I alternated between thinking about my next move and looking at my beautiful Abby; the swelling around my eyes had gone down and I could see again.\n\nAfter a long hot shower and a huge breakfast I spent the rest of the morning and most of the afternoon recuperating; that means I took naps in between snacks. Amazing how getting your ass handed to you on a platter affects your appetite. Abby had called her office and let them know she wasn't coming in that day. Instead she hovered around and over me all day. I'd wake up from another nap and she would be sitting close watching me.\n\n\"Abby chill,\" I finally told her. \"I'm okay; you don't have to worry about me. I've had worse and lived. Okay?\"\n\n\"When?\"\n\n\"When what?\"\n\n\"When have you had worse?\"\n\nI had to smile at her. \"Don't remember,\" I answered and laughed. At first she sat and stared at me with a stone face; then she laughed too.\n\n\"So what are you going to do?\"\n\n\"I'm going back to see Jenkins again tonight.\"\n\n\"Oh Matt,\" Abby protested, then stopped and looked down for a few seconds. \"This time he might kill you,\" she softly whispered.\n\n\"He might but I don't think so. I think he kinda likes me.\" I had to laugh at the look on Abby's face. \"Seriously, this time I won't give him the chance to hurt me.\"\n\n\"Are you just going to yell at him from across the room?\" Abby asked sarcastically. I shrugged and she added, \"I could go with you and cover your back.\"\n\n\"If you went with me, I'd have two things to worry about; you and Mr. Sasquatch.\"\n\n\"At least call Tully, or Rollie, or your detective friend Frank Wends,\" she suggested.\n\nI took her hands and paused. \"I can't ask for their help, not yet anyway. No, I'll go back and face Jenkins alone. If this doesn't work out then I might have to ask them for help.\"\n\n\"But why?\"\n\n\"Several reasons. You want me to list them?\" Abby nodded and I said, \"First it's my job. I took a man's money and gave him my word I would help him. That's important to me. Second, remember the talk I had with James?\" She nodded again. \"Same goes for me. If I don't go back, I'll always wish I had; I'd always think of myself as a coward. I can't live hiding from bad people; even someone as bad as Jenkins. And third, I want, guess you call it a full measure of payback. That's it,\" I finished.\n\n\"Men,\" she repeated. \"You're all little boys at heart. Got to be the toughest on the block. Got to be a macho man.\" She had tears in her eyes. \"If you get yourself killed this time, don't come running to me for sympathy.\" Abby realized what she'd said and laughed in spite of herself.\n\n\"Matt, please be careful. And when you're done come back home, I'll be here waiting for you.\"\n\nYou know, it's difficult to make love when you're all beat to hell; but I powered through the pain and did my best.\n\nThat evening Abby watched as I was getting dressed to go see the Sasquatch again.\n\nMost of the swelling of my face and gone down, thanks to the bags of frozen peas and other vegetables. But both eyes were a nasty shade of black and blue. The rest of the colors on my lips, cheeks and forehead were a study in violent art.\n\n\"You look like a raccoon,\" Abby said with a grin.\n\n\"Yeah, but I'm better than I look. Maybe I'll scare Jenkins to death.\"\n\n*********************\n\n\"I thought you had more sense than to come back here,\" Jenkins said as I presented myself in front of his booth. The table had been put back in place and a glass and whiskey bottle was sitting on it. I shrugged my shoulders and stared at him without saying anything. \"We have to go through this again?\" He asked.\n\n\"Guess so,\" I answered. I motioned to my friend, the bartender, for a glass. When he brought it to me, I reached across the table, picked up the bottle, and poured myself a drink. \"Course you could tell me what I want to know plus give me the jewels and avoid any unpleasantness.\"\n\nSasquatch stood and shook his head. \"I didn't think so,\" I said. Turning, I placed the bottle and glass on the end of the bar. \"Might as well get to it then.\"\n\nIt's one thing to know and remember how fast this guy was; it was another thing to have him come at you with that speed. He was almost around the table and on me before I could set myself. Jenkins threw a punch with his big right hand, but this time I was ready. Stepping to the side, I let the punch slide over my shoulder. I took another step to the side and kicked the outside of Jenkins knee. His leg buckled and he went to his hands and knees.\n\nBefore he could lever himself back to his feet, I clutched both of my hands together and brought them down hard on his neck. This time he laid out flat on his stomach. One of his companions sitting at the table stood and started toward me. I pulled my Glock and stuck it in his face.\n\n\"You really don't want to get involved in this, now do you?\" The man held up his hands and sat back down.\n\nI leaned over to Jenkins and said, \"Now please tell me who hired you. And then you can give me the jewels.\"\n\n\"Teddy, come help me to a chair,\" Jenkins yelled at his companion. Teddy looked at me before he moved; he didn't want to face my Glock again. I nodded and he came over and struggled but got Jenkins into a chair.\n\n\"Fella name Taylor Barkley hired me,\" Jenkins told me. \"Said he wanted to hurt this Blaine guy and I could keep the jewels as my pay. I figured what the hell?\" Three or four hundred thousand dollars was pretty good wages so I took the deal.\" He cocked his head, smiled, and said, \"You can understand why I hesitate to return the jewels.\"\n\nI had holstered my gun and as Jenkins said his piece he pulled a Derringer out of his vest. Damn, there ain't no quit in this guy.\n\n\"Jenkins, those jewels are paste and zircons; they're fakes.\" I saw the disbelief on his face. \"If they're close by, bring them out and I'll prove it to you.\"\n\nHe sat there with a skeptical look on his face, pointing the Derringer at me, for what seemed like an hour; it was probably no more than 10 seconds. \"Teddy, get the stuff and bring it to me,\" he ordered.\n\nTeddy left out the back door at a run. I motioned to the bartender and he brought over the Gentleman Jack and two glasses. He poured a drink for each of us and beat feet back behind the bar. Teddy came back carrying a small duffel bag. He started to hand it to Jenkins, but Jenkins motioned to give it to me.\n\nI took the duffel and set it at my feet. Opening the zipper I took out what looked like about a four carat diamond ring. Tossing back the rest of my drink, I looked at Jenkins.\n\n\"We all know diamonds are the hardest thing in the world, right?\" The big man looked interested and nodded. \"If this is a diamond, it should be able to cut this glass, right?\" Jenkins nodded again; I saw Teddy and the bartender nodding too.\n\nI took the ring, held up the glass, and ran the edge of the supposed diamond across the side of the glass as hard as I could. When I finished, I handed the glass to Jenkins and then I handed him the ring. The glass was unmarked but there was a large worn down spot on the ring.\n\n\"Don't take a jeweler to know this ring is a fake,\" Jenkins said after looking closely at it. He threw the ring across the room and the glass followed. \"Son of a bitch played me.\"\n\n\"Yes he did. I guess that concludes our business this evening Mr. Jenkins.\" I hefted the duffel and added \"Think I'll take this trash and return it to its owner.\"\n\n\"I'll have to come see you,\" Jenkins said. \"I won the first round, you won the second. We need to play out the rubber match.\"\n\n\"Sasquatch, if I see you again, I'll put a bullet in your brain.\" I turned and left the bar. Abby was waiting at home.\n\n********************\n\n\"By God you did it,\" Hunter Blaine exclaimed. We were in my office. \"And in only three days.\" He laughed and said, \"I guess you got the best of the deal.\"\n\n\"You know a guy named Taylor Barkley?\"\n\n\"Yeah, he's my biggest rival at the company. He's always trying to gain enough votes to take over the Board of Directors and force me out.\" Blaine looked troubled.\n\n\"Barkley set it up to rob your home. Guess he figured to embarrass you and take over.\" I thought of another thing I needed to tell Blaine. \"By the way, you, me, and the guy who helped me recover the ice are the only ones that know the jewels are copies.\"\n\n\"That son of a bitch,\" Blaine said. \"I'll deal with him at the next board meeting.\" He stood to leave. \"I guess we're all square.\"\n\n\"Not quite,\" I answered. \"I want you to take $5000 to a man named Jenkins; he's the one Barkley hired. You can find him at a place called Dooley's around 10PM some night; it's on the seedy end of Laclede.\"\n\n\"Why?\"\n\n\"Without him, I'd still be looking for your jewels. You owe him.\"\n\nBlaine nodded. \"It's a hell of a lot less than I would have lost. I'll do it.\"\n\n\"One thing, when you take the money to him, take cash. I also suggest you hire a two or three off duty cops, in uniform, to go with you. Dooley's isn't the Ritz; it's not a very upscale place.\n\n********************\n\n\"I'm glad that's over,\" Abby said.\n\nWe were snuggled up on my sofa, pretending to watch TV.\n\n\"Not just yet,\" I replied. Then seeing the look on her face, I added, \"I've got one more guy to talk to. No, it's not like I talked to Jenkins. This will be very civil.\"\n\nI leaned away from Abby so I could see her face. \"You know, we should look for a bigger place.\"\n\n\"We?\"\n\n\"Yeah, we. I mean my place is okay but not for two people all the time. In case you missed it, I'm asking you to move in with me. I'm tired of bouncing from one place to another and not having you here every time I come home or wake up.\" I paused for a few seconds. \"What do you think?\"\n\nAbby answered my question in a most enjoyable, strenuous way; my injuries from the beating didn't slow me down a bit. It wasn't until the next morning and twelve or so Aspirin that we talked about what part of the city we wanted to live in.\n\n********************\n\nThe first Monday of the month I was waiting outside of the building where Hunter Blaine's offices occupied the top floor. Taylor Barkley came out and started toward the nearby parking structure; I walked over to intercept him.",
        "\"Mr Barkley, I understand you got your butt kicked in the board meeting this morning,\" I said.\n\n\"Who are you? What business is it of yours?\"\n\n\"I'm Matt Steele; I was the one that found Mr. Blaine's jewels. I also found the man you hired to steal them.\"\n\n\"I don't know what you're talking about.\"\n\n\"Look Barkley, we both know you hired Sidney Jenkins to steal the jewels; so cut the bullshit. I can't prove it in court but I'll keep an eye on you. You're bound to screw up sometime and when you do I'll be there.\" I walked past Barkley for a few steps and then stopped and turned.\n\n\"Oh, by the way, Sidney Jenkins is known as \"The Sasquatch\". He told me you are now his favorite new hobby. He said to tell you that you'll be hearing from him pretty soon. Have a nice day now.\" I turned and walked away.\n\nLet Barkley worry about \"The Sasquatch\", I thought with a smile. I'm going to meet Abby; we've got a couple of apartments and a house to look at.\n\nThe End---For Now."
    ],
    "authorname": "woodmanone",
    "tags": [
        "detective",
        "action adventure",
        "drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/cold-steele-and-ice"
}