{
    "title": "The Meaning of Christmas",
    "pages": [
        "Gloria sat watching the package laden people of Christmas from her office window. She never understood the idea of Christmas, spend until you cannot spend anymore and pretend to be a great person for one day when you're an asshat for the other three hundred and sixty-four. Grabbing her coat she prepared to leave for the day.\n\n\"Hey Gloria. What are you doing for Christmas?\"\n\n\"Oh hey Jim. Same as usual, sit at home, watch TV and have a normal dinner.\"\n\n\"Well you know, you are always welcome at our house.\"\n\n\"Thank you Jim. I appreciate it more then you know but you know me and Christmas.\"\n\nKissing her on the forehead Jim said, \"Yes I do. I wish you would change your mind just this once though. Martha loves you like her own and we hate seeing you spend the holidays alone.\"\n\n\"Thanks. Please send Martha my love and tell her that I hope she enjoys the cookies and goodies I baked for both of you.\"\n\nJim and Martha owned her place of employment. She had worked there for almost five years and it was just the three of them. Over time they had become close and treated her like a daughter. Their daughter had passed a few years back from cancer and she supposed she filled the void that they felt. They, in turn, filled her void for parents as well. Her parents were, well, not exactly parental material and she had not spoken to them in almost fifteen years. \n\nWalking out the door she braced herself against the onslaught of cold air, she turned to Jim and said, \"Have a good Christmas Jim, I'll see you on Monday. Enjoy your time off you and Martha deserve it.\" \n\n\"You to Gloria. If you change your mind tomorrow, dinner will be around one o'clock. Come early if you like. If we don't see you, have a good holiday and enjoy your time off as well.\"\n\nGloria turned towards the parking ramp and walked to her car. She needed to stop at the grocery store and was dreading it. She knew she should have stopped earlier in the week but work had been busy and all she had wanted to do was get home. Now, of course, she would pay for that decision. Christmas Eve night and shopping just didn't mix. Tons of people doing last minute shopping, a ten minute trip turned into almost a hour full of rude, bitchy people.\n\nPulling into the parking lot she cursed out loud. Finding a spot was going to take some time. Driving up and down each isle at least three times she finally spotted a car starting to back out. Pulling into the parking spot she turned the car off and mentally ticked off what she needed to get. Christmas dinner always consisted of Cornish Game Hen, stuffing, some sort of veggie and her favorite bottle of wine. Luckily for her she could do one stop shopping and get the hell home.\n\nPushing the cart she grabbed what she needed and headed toward the checkout. Surveying all the lines she cursed again. Each line was huge and it looked like they turned off the self service lines. She had no choice but to stand in line and wait. Looking for the shortest line possible she picked the twenty items or less and waited. Looking around she saw all sorts of people and purchases. Some with carts piled high of food and presents and others with just a few items of this or that. The lady in front truly had less than twenty items. Scanning her cart she saw milk, bread, cereal, toilet paper, a couple boxes of instant potatoes, stuffing and a small Turkey. Smiling at the kid in the cart she noticed she was holding onto a new baby doll for dear life. Chuckling to herself she thought about herself at that age. The one toy she had was a small cloth baby doll and she remembered every where she went she took that doll with. One day however she forgot it at home and when she came home the dolls head was torn off and one of its legs was burned half way up. \n\nThe lady in front was now at the register. Grabbing the little plastic divider she put her stuff on the belt and waited. She watched as the women looked nervously from her wallet to the register each time a item was rung up.\n\n\"That will be thirty dollars and ten cents ma'am.\" \n\nWatching the lady count out the money in her wallet she groaned. Another person with not enough money on them. Now she will have to stand in line and wait for them to figure out if they want to use their check card or pay half and half or whatever. Either way it was turning into a long wait.\n\n\"Umm, how much?\" The lady asked even though the total was right there in front of her.\n\nSomewhat impatiently the clerk said again, \"Thirty dollars and ten cents.\"\n\n\"Uh, ok, well, I don't have enough. I am going to have to put something back.\"\n\n\"You don't have a check card or a credit card ma'am?\" The clerk asked somewhat rudely.\n\n\"No sir I don't. I am unemployed and a single parent. What I have here is all I have until the end of the month. I am sorry.\" The lady replied, her voice cracking.\n\n\"Well ok, how much do you have?\" \n\n\"I have twenty-two dollars and thirty cents.\"\n\nSoftening the clerk looked over the meager selection of items. \"Ok, lets see what we can do. The turkey is eight dollars, the doll is six dollars, the bread, milk and cereal are about six dollars, the mashed potatoes are two dollars, toilet paper is four dollars and then add tax. We could take away the turkey and cereal or bread, or take away the doll and cereal or bread.\"\n\n\"Jesus Christ could you hurry the fuck up, some of us have places to go\". \n\nTurning around, Gloria saw the lady behind her. Her cart was full, way more then twenty items. What right did she have to say anything about anything when she is standing in a line that clearly shows twenty items or less. Looking back at the lady at the register, Gloria felt sorry for her. She imagined it was not easy trying to decide what to get. After all she really only had items for a holiday dinner and the doll for her little girl.\n\n\"Um, uh, I don't know. The food has to last for another two weeks or so, the toilet paper, well, that is pretty much a necessity. I guess the doll and the bread.\"\n\nNearly close to tears she turned to her daughter and took the doll. \"Sorry baby, maybe next pay day we can get it for you.\"\n\n\"Mommy no, I want dolly. Please mommy.\"\n\n\"Oh for fuck sake, just take the doll and remove the items so we can get a move on. I have a fucking party I need to get do.\"\n\n\"I am sorry ma'am. We are doing it now. Please don't swear in front of my little girl.\" \n\nThe lady at the register was now truly in tears. Trying to compose herself she handed the doll to the cashier and told him to remove the doll and bread.\n\n\"About damn time and don't tell me not to swear. I'll fucking swear if I want to.\"\n\nThe little girl was now crying hysterically and grabbing for the doll. The mother was in tears and trying to explain as best as she could to a four year old why they had to put it back and the poor clerk was getting flustered by all the commotion. \n\n\"Come on. How long does it take to remove the items and get the line moving?\"\n\nExasperated, Gloria turned to the lady behind her. \"Why don't you shut the hell up? You are in a line for twenty items or less with a cart over flowing, whining about some damn stupid party you have to get to, all while this poor women has to figure out what to put back.\"\n\nGloria stood there for a moment stunned. Typically she did not get into the middle of things. Her childhood was one where, no matter the injustice, you kept your mouth shut or someone would surely shut it for you. \n\n\"Why you bitch.\" She heard the lady behind her say.\n\n\"Ladies, ladies, please.\" \n\nMoving to the register, Gloria smiled at the lady and the little girl. \"Sir, please keep the doll and the bread on the total and ring up my items on the belt as well. I will pay for everything. Please give the little one back her doll.\"\n\nSmiling the clerk handed the doll back to the little girl and started bagging the items that he had already rung up. The little girl looked at her mom and smiled as her mom nodded that it was ok.\n\n\"Ma'am, please, you don't have to pay for my items. I can make all this stretch. I've gotten pretty creative on my menus.\"\n\n\"No worries, please just let me get this and we can all head home.\"\n\n\"Can I at least have your address, I cannot send a lot but I would like to send a couple bucks or so a month until I pay you back.\"\n\n\"No worries. Really. Please, just consider it a gift from a stranger.\"\n\n\"Ma'am, your items are bagged. Do you want to put them in your cart before I start with hers?\"\n\nMoving the bags from the carousel the lady turned one more time. Before she had a chance to say anything Gloria waved her off. \"Really, please don't worry about it.\"\n\nShe watched as the lady headed toward the door and turned back to the cashier. \"What a crazy night huh?\"\n\n\"You're not kidding. The holidays bring out the best and the worst in people. By the way that was awfully nice of you. I was almost ready to pull out my wallet and pay for her. So many people in the same boat this year and it is sad to see the little ones caught right smack in the middle.\"\n\n\"Yep that is for sure.\"\n\n\"Ok that will be sixty dollars and five cents.\"\n\nHanding her card to the cashier she moved her bags from the carousel to her cart. Looking at the lady behind her she noticed that she was still seething. Man some people just cannot let things go. How can you stand there and be so cold hearted that you would yell and swear at someone that is clearly having a hard time. Grabbing her receipt and saying good bye to the cashier she headed towards the front door. \n\n\"What the hell are you talking about? I have been standing in this line for twenty minutes waiting while you fucked around with some woman that didn't have enough money. You should have told her to move on.\" \n\nTurning around suddenly, she saw the clerk smile at her. Somewhat bewildered she watched as the lady that was behind her stood berating and yelling at the clerk. Then she heard him say, \"Ma'am I told you once already, this line is for twenty items or less. You clearly have more then twenty items, you will have to go stand in one of the other lines.\"\n\nLaughing, she turned and walked out into the cold.\n\nStarting her car, she laughed to herself again. Finally some justice was done and she felt pretty good. It felt nice to help pay for the ladies items and it felt even nicer to tell the other lady off. All her life she had stayed in the background, not getting involved and not stepping up. Maybe if she had stepped up when she was younger she would be a different person now. Backing out of her spot she headed for the entrance to the parking lot. Just as she was about to turn towards home she noticed the lady and little girl huddled together walking down the sidewalk. She knew from being in the store the lady didn't have any hat or gloves and the coat she wore had been pretty thin. The little girl had faired better in the outwear department but still, with the wind and snow it was to cold for anyone to be walking. Making a last minute decision, she turned to the right and pulled up to the curb. \n\n\"Hey, let me give you a ride home.\" Realizing that she probably had not been heard because of the wind she honked her horn until they turned around.\n\nComing over to the car the lady bent down. \"Can I help you?\" Then realizing who it was, \"Oh, it's you. Thank you again for paying. Did you want to give me your address?\"\n\n\"No, no. I wanted to offer you a lift. It is to cold and windy for you two to walk home.\"\n\n\"Oh, no, that is fine; we don't want to be a bother. We only live about eight blocks away.\" The lady said, starting to back away from the car.\n\nHopping out and running around to the sidewalk, Gloria grabbed some bags and headed to her car. \"Come on, it is to cold and you are not dressed really for this type of weather.\"\n\nConsenting, the lady tentatively climbed into the front seat and put the little girl on her lap. \"Thank you very much. Really though, we would have been fine walking.\"\n\nPutting the car in drive, Gloria waved off the thank you and got directions to their apartment. It was far more then eight blocks but she didn't feel that should point that out. Pulling up to the building she was told to, she noticed the little girl was asleep.\n\n\"Well it seems you need some help. Let me carry the bags and you can carry her.\"\n\nLooking down at the little girl the lady realized she was asleep. Should she wake her so this person didn't have to come to her apartment? It wasn't exactly the nicest place, certainly not for company. Before she could make her decision, Gloria had gotten out of the car, grabbed the bags and opened up the passenger door. Climbing out the lady carried the little girl up the steps and into the building.\n\n\"Apartment four just down that hall.\" She said to Gloria.\n\nUnlocking the door she flicked the switch on the wall. Gloria could sense her embarrassment as she stepped away to let her enter. Stepping over to the counter she set the bags down.\n\n\"Thank you again. What is your name? You have done all this stuff for me and I don't even know who you are. My name is Leslie and this is Mary.\" She said looking down at the little one.\n\n\"My name is Gloria and really it was no problem. Why don't you go lay her down and I will help put the groceries away.\"\n\nStanding in the middle of the kitchen waiting for Leslie to return, she looked around. The apartment was pretty bare, a small couch, end table, T.V and stand adorned the living room. The kitchen had a small table against the wall and a fridge and stove. Nothing new or up to date. It brought memories back to her. She had grown up in something very similar. Although her place was not what you would call clean and the kitchen table was never used for eating. The T.V. had worked at one point in time, until her dad had decided it would make a nice break for her mothers fall. From then on, Gloria had to use her imagination to get through. With no toys or books and the T.V. broken beyond repair there really wasn't much for a little girl to do.\n\n\"Would you like something to drink? I have water, milk and some juice?\"\n\n\"No thanks. Let me help you with those groceries.\"\n\nLaughing, Leslie handed her the milk. \"I have only ten items.\"\n\nOpening the fridge Gloria noted that the milk was going to be the only thing in it. Turning she watched as Leslie put the other items away and noticed that they were going to be the only things filling the cupboards as well. \n\n\"Please come and sit.\" Leslie said as she moved to the living room. As she turned on the lights Gloria noticed a little Christmas tree in the corner. It looked a bit sad and she could tell that the ornaments had all been hand made. She imagined Leslie and Mary spent quite some time making them and smiled. She had never had a tree and to this day she still doesn't. To her Christmas was just another day. Another day of having nothing and getting nothing. \n\n\"Well it is not much but it is what we call home.\" Leslie said, somewhat embarrassed.\n\n\"As long as you have a roof and heat, that is about all anyone can ask for.\" \n\n\"Well thank you again for all you have done. Things have been pretty tight since I lost my job and had to move to welfare. I look for work every day but with so many people out of work it is hard to get interviews or it just doesn't pay enough to be able to keep Mary in a decent day care. I had a good job once. Did website design for a up and coming company. But my ex, well, he was into drugs and didn't work. All our money and savings went up his nose or in his arm. I finally got fired after one to many times of having to rush home because he was stoned out of his mind and Mary was left alone or because he was stoned and Mary was left sitting there with all his druggie friends.\" \n\nKnowing all to well that scenario, Gloria once again said, \"Really it is no big deal.\"\n\n\"Look, I know you keep saying that, but I am not the type of person to live on handouts. Well, ok, I guess that is not entirely right, I do live on welfare but not because of my own choosing. I kicked my ex out after I lost my job. He didn't have a job anyway and what little money I was making he was taking. I am a good person and I am trying to make my way in this world. I just hit a road block. I NEED to pay you for this. I don't have the money but tomorrow is Christmas and I would like you to come over and have Christmas dinner with us. I know the turkey is small but with potatoes and stuffing it should be plenty for all three of us.\"\n\nStunned, Gloria didn't know what to say. She knew she should accept, after all she knew all to well about pride. But she also knew if she accepted Leslie wouldn't have enough food to last till her next check. She knew what it was like to go without food and certainly was not going to be the reason Mary went without. But she also knew what Leslie was going through as well. She knew that her pride would never let her go with owing someone something.\n\n\"I appreciate the offer but really it is no necessary. I don't do Christmas. To me, Christmas is just another day, nothing special.\"\n\n\"Well for your Christmas may just be another day but for me Christmas is a new beginning. A new beginning of a up coming new year, where things get better and new friends made. Christmas is not about presents and parties, but about family, friendship, love and happiness. I may not have much but I am a happy person. I have my life, my health and my beautiful daughter. I may not be able to give her presents but I can give her love and teach her how special she is.\"\n\nGloria didn't know what to say. She felt somewhat taken aback by what Leslie had said. She never thought of Christmas as anything different then just a day, a day of gorging on food and out doing everyone else in presents. She supposed it was because she never had either when she was a kid and because she grew up being jealous of the new toys and clothes the other kids would bring to school after Christmas vacation.\n\n\"Ok. How about we do this. You make the turkey and my Cornish Game Hens that I bought. That way you will still have food left over AND you can still repay your debt. What time would you like me to come over?\"\n\nSmiling, Leslie said, \"I'll come down to your car with you and grab the hens. I know they take about a hour or so to cook. I'll put the turkey in around mid morning and it should be ready around three or so. Why don't you come over about two thirty?\"\n\nAfter leaving the hens with Leslie, Gloria turned around and headed home. She felt some what guilty about accepting dinner. Not because she didn't want to go but because she knew there was very little food in the house. She also knew she couldn't stop to buy food because that would defeat the purpose of Leslie's invite. Pondering the situation, she drove the rest of the way home in thought.\n\nKnocking on the door, wine in one hand and wrapped present in the other, Gloria thought about how she was going to tell Leslie what she had to tell her. She knew she was proud and she didn't want her to think that what she had to say was out of pity.\n\n\"Hello and Merry Christmas\" Leslie said as she answered the door.\n\n\"Hello. I brought some wine to go with dinner. I am not sure if you drink, but if not I can take it back to the car.\"\n\n\"No, that is fine. I would love a glass of good wine.\" Leslie said with a laugh as she put the bottle into the fridge.\n\nStanding in the kitchen facing Leslie, Gloria felt her knees buckle from behind. Catching her balance she turned around and looked down into the smiling face of Mary. \"mery istmas.\"\n\nLaughing she tousled Mary's hair. \"Merry Christmas to you to. Here why don't you go put these under the tree?\"\n\nGloria watch as Mary raced into the living room with the presents. Leslie looked at her kind of funny but didn't say anything and returned to carving the turkey and the hens. Walking over to the counter, Gloria asked if she could help and was banished to the living room with Mary and the T.V.",
        "\"Time to eat. Everything is spread out on the counter. Grab a plate and fill up.\"\n\nAs the three sat and ate, laughing and joking, Gloria felt what it must be like to be a family. Her family never did this and she supposed that was why she was so comfortable dining alone. It felt nice to laugh and share and to watch the interactions between Leslie and Mary. For once she truly felt like she belonged.\n\n\"Ok mommy, time to open presents.\" Mary said jumping down from the table.\n\nLaughing Leslie pushed back from the table. \"We saved our present openings for after dinner since we were having company. I think that is the hardest thing Mary has had to deal with all year\"\n\n\"Well that works since I have presents for both of you anyway. The two under the tree are for Mary and the one for you, well you will have to wait and see.\"\n\nGloria and Leslie sat on the couch as Mary grabbed the presents under the tree and brought them over to her mom. Leslie handed two to Gloria and the rest to Mary. Mary was so excited that she ripped through all four of them in a matter of minutes. She got a pair of gloves and a hat that Leslie had knitted her, the doll from the store last night and a doll and stuffed bear that Gloria had bought this morning. \n\n\"Yo turn, yo turn.\" Mary chanted at Gloria. \"Momma and me made it this morning.\"\n\nLaughing, Gloria slowly opened the presents. When she saw what they were, tears came to her eyes. One was a drawing Mary had made that morning in crayon of a Christmas tree and a turkey. There were three stick people and underneath each one was a name. The third person was her. The other was a small silver bracelet. She could tell just by looking at it that it was a family heirloom or that it was very special in some way.. \n\n\"Oh my, Mary this is such a great drawing. I love the turkey, you did a great job. Leslie, this bracelet is beautiful, but I can tell it must be a heirloom, or at in the very least very special to you and I really shouldn't.\"\n\n\"Yes that bracelet is special to me. It was given to me by a dear friend years ago. I had helped her out of a very dark and lonely place. It was the only thing she had to repay me with and it was very dear to her. It is also very dear to me and I want to give it to you for helping me out as well.\"\n\n\"Well, um, thank you, but all I did was give you a few dollars and a ride home.\" Gloria stuttered as she tried to hold back tears.\n\n\"No, you did more then that. You showed me that there are still people that are willing to go out of their way to help someone in need. I was starting to get depressed and feeling like the world had lost its generosity. Everyone is so into themselves these days and worrying about their Hummers and Mansions. You showed me that the Christmas Spirit was still alive, at least in my little part of the world.\"\n\nChoking back tears, Gloria wasn't sure what to say. She hated Christmas and all it stood for, in her opinion, commercialism, money and greed. She never realized that it wasn't about that but that it was about friends, family and helping others. Leslie was right, Christmas was a new beginning, the beginning of a good friendship and the beginning of a understanding that she was never taught. You make Christmas what you make it, it doesn't have to be about greed and money. \n\n\"Well, thank you again, it is beautiful. I will cherish forever. Now for your present. The company I work for is a small company. We provide all kinds of services from personal shopping to planning your next trip and we have several repeat customers. My employers and I are basically a jack of all trades but none of us are very technically savvy. The business has been going good and strong for several years but Jim and Martha feel that it is it time to get on with the times and bring in more business. They need someone that can build, maintain and market a website as well help researching new trends and ways to expand. So your present is a job. The office is small so most of your work can be done from home and when you do have to come into the office you can bring Mary. That way you don't have to worry about day care. The starting wage is not on par as to what the larger corporations are paying for those services but once the business grows it could be. I have already made arrangements for you are to start on Monday. That is if you accept.\"\n\nNow it was Leslie's turn to choke back tears. She couldn't believe it. This person she has only known for a day has turned her world around. \n\n\"Of course I accept. I will do my best to meet all of your expectations. I, uh, don't know what else to say. I just barely met you and you already have changed my life for the better.\"\n\n'No, actually you have changed mine. I didn't have the best life growing up. I am estranged from my parents and have no friends. Jim and Martha are the closest people I have in my life. They are like my surrogate parents and the only people I trust. I have grown up learning to be cynical and distrustful. Having you open up your house to me, a total stranger, just because I paid for your groceries and offered you a ride home has shown me that not everyone is just out for themselves and coming here, having dinner and opening presents has shown me that Christmas is not about greed and money but is really about family and friends and helping out our fellow person. Going out of my way to do all the things I did made me feel good about myself, something I haven't felt ever. It all has made me realize what I have been missing in my life, friends and love. A person cannot go through life alone, it just wasn't meant to be like that.\"\n\nWith tears in her eyes, Leslie leaned over and gave Gloria a hug. \"Merry Christmas my friend.\" "
    ],
    "authorname": "ravenmx",
    "tags": [
        "christmas",
        "friendship",
        "christmas dinner"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-meaning-of-christmas"
}