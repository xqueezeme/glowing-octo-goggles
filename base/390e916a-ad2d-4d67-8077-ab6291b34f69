{
    "title": "Speech and Debate Pt. 15B",
    "pages": [
        "Firstly, A HUGE thanks to everyone who voted for this series over the months and have put me in the running for Best Gay Male Story of 2015!! You are all amazing! If you like what you read here, please go and vote for me on the Contest forum and also read some of the other amazing works by my fellow nominated authors.\n\nI wrote and re-wrote this chapter 5 times. As I get closer to wrapping up this part of the David and Daniel saga, I am finding it harder and harder to find the words to properly send off these characters who have come to mean so much to me over the past year and half. That, coupled with the semi-autobiographical nature of the piece as a whole makes these last two chapters of this arc an emotionally taxing experience. \n\nThat said, here is the penultimate chapter of this series. There are two smaller series planned for sometime in the future. One on Ian and Justin (a spin off series if you will) and one on David and Daniel in college and post college. They will be smaller stories, shorter chapters. \n\nBut once this current series is done, I am going to focusing for a bit on my Epic Fantasy series for a bit (those are 13-17 full length novels in a High Fantasy / Historical Fiction / MM Romance Erotica vein, while I plan the other David and Daniel epics. Those are set to be a published set of books.\n\nThe final chapter of this story should arrive in 1-2 weeks barring any unforeseen circumstances. \n\nI would like to thank each and every one of you who have helped me find my voice as a new author and sent me words of encouragement and thanks over the months. You have helped me find my path in this and kindled in me a true desire and passion to make writing less of a hobby and more of a career aspiration. I will never be able to express how much that means to me. Thank you, Thank you, Thank you. \n\n- DAMackey\n\nDISCLAIMER: The following fictional story deals with sex among males. If you are offended by such material, are too young, or reside in an area where it is not allowed, depart. Though not observed in this story, care enough about yourself and humankind to practice safe sex.\n\nThe author retains all rights. No reproductions or links to other sites are allowed without the author's consent.\n\n*********************************************************************\n\nAlways There: Polaris in the Southern Skies.\n\nBy: D A Mackey\n\nDue to the sheer physical size of the \"Lake Manse,\" it took the new arrivals a good six hours to travel through the main floor and emerge onto the back deck where Justin and I waited for them with nervous stomachs. Exaggeration, of course, but it certainly felt like six hours to the two anxious nerds. It was probably more like sixty seconds. \n\nTomato Tomahto. \n\nThe first to become visible, like a zombie emerging from the fog of the graveyard in the Thriller video (if the zombie was rambling through an immaculately decorated house straight from the pages of Southern Living Magazine,) was a familiar face. Well, to me at least. He was one of the few Sophomores who played on the Varsity Baseball team. I couldn't help but release a breath I had held in since Daniel and Ian had left us standing there. This new party-goer wasn't an immediate threat. The stream of others who followed the first were \n\nanother matter. \n\nI could almost feel Justin trembling beside me. I trembled alongside him, both of us vibrating with anxiety. It amazed me how quickly I had reverted to my old \"prey\" mindset. Anyone who walked through that back door could be a predator and every single muscle in my body was tensed and ready to leap away like a gazelle on the Serengeti. No matter how much I had changed since falling in love with Daniel, those old instincts were still there, buried deep inside me, keeping me safe. \n\nI nudged Justin with my elbow and he squeaked like a puppy with a stepped-on tail. \n\n\"Don't do that!\" he hissed through his clenched teeth, doing his best to smile at the people who continued to come through the back door. Even to my side-eyed glance, his grin was more of a teeth-baring glare.\n\n\"Sorry,\" I whispered. \n\nHow strange the two of us must have seemed to our peers. Most of them were Seniors and Juniors, with only a few lower classmen mixed in. Two nerds, just standing there, stock still, side by side, smiles plastered across our faces but our eyes wild and hunted, obviously distressed. We must have looked like the most surreal sculpture garden in existence. \n\nThankfully, not a single one of the newcomers spoke to us. They just nodded as they passed. Some favored us with a smile or a mumbled \"sup?\" \n\nI was well-versed enough in the language of the popular crowd to know that this question was strictly rhetorical. They did not require or desire a response, which was all for the better because my tongue was dry and stuck firmly to the roof of my mouth.  \n\nWhere was Daniel?\n\nThere were already more than a dozen people milling about on the deck and still no sign of either Daniel or Ian. I was beginning to get nervous. Well, more nervous than I already was just given the tense situation. I had already lived in this bizzaro world of jocks and popularity for a few months. I couldn't imagine what Justin must be going through, new to this scene as he was.\n\nMy jaw was just beginning to ache a bit from holding my smile with intent ferocity and determination when Katy and Amanda sauntered through the back door. Their smiles were genuine when they saw me, or at least much more so than the others. They wore floor length sundresses in purple and orange respectively, the multicolored straps of their two-piece bathing suits visible on their bare and somehow already bronzed shoulders.\n\n\"Hey David!\" Katy said, bounding up to me in high heeled sandals. \"Great speech today.\"\n\n\"Thanks,\" I replied as nicely as I could, working my jaw back and forth to ease the tension.\n\n\"My Mom thought you were adorable,\" Amanda drawled in her thick accent that still somehow seemed to make every sentence she spoke into a question. \"She even asked if you were single and why I hadn't snapped up the smart boy.\"\n\nThat sent the girls into a fit of giggles and I joined in nervously, twittering like an idiot.\n\n\"I didn't tell her that you've already been snapped up. So to speak. Who's this?\" Amanda asked, turing her attention to the statue-like Justin.\n\nHow she couldn't recognize a person she had gone to school with for the past 4 years was anathema to me. It just reinforced for me how very regimented the social hierarchy at school was. Or rather, had been. Justin hadn't even registered on her radar as a person.\n\n\"I'm Justin,\" he piped in, a hint of annoyance in his voice. \"I've been in your class since the 7th grade.\"\n\nTo her credit, Amanda blushed and had the decency to at least look ashamed of her oversight.\n\n\"Sorry,\" she mumbled. \n\nStill a question.\n\n\"Saludatorian, right?\" Katy asked, attempting to redeem the popular girls as a whole.\n\nJustin nodded.\n\n\"Congratulations. It takes an awful lot to beat David here in the brains and smarts department, I guess.\" \n\nJustin smiled warmly at that.\n\n\"He can best me in other departments,\" I added, hoping my cryptic reference to his larger member would be enough to shake my friend from his stock still stupor. \n\nLuckily, I had help in rousing him.\n\n\"Hey there ladies,\" Ian boomed, nearly skipping onto the back deck and making a B line straight for Justin's side. \"Hope you found the place okay.\"\n\nJustin visibly relaxed when his protector was ensconced once more beside him. Even more so when Ian's muscle-corded arm snaked around his shoulder and rested flatly on his chest. \n\nAmanda and Katy's eyes went a little wide and they shared a look between the two of them that seemed to say: \"we got us another one!\" \n\nDaniel emerged soon after and came to my side, giving me a gentle kiss on the cheek and putting his arm around my waist. The heat of his bare skin against my arm made me shiver. Katy and Amanda both \"aww'd\" like the four of us were a litter of newborn puppies. \n\nDaniel rolled his eyes and pulled me a little closer.\n\nSomeone turned on some music and rescued us from the well-meaning females. With the musical lubrication, things began to evolve at a rapid pace. Here and there I noticed six packs of beer or wine coolers, some litre bottles of hard liquor, and even a bottle or two of wine one of my wealthier colleagues had snatched from Mommy and Daddy's wine cellar. \n\nYes, plenty of my former classmates had actual wine cellars. Not just places to store the Holiday decorations in cardboard boxes and well-worn childhood items like my family did, but places devoted to literally just shelves and shelves of fermented grape juice. \n\nI would never understand the wealthy.\n\n\"I'm gonna go show there where the cups are,\" Ian said. \"And take their keys. You gonna be okay?\" \n\nHe posed this last question to Justin. The tone in his voice made it crystal clear to Amanda and Katy that yes, indeed, they did have \"another one.\"\n\n\"I'll be fine,\" Justin said quietly, attempting to look at the ground, but his view was blocked by Ian's spectacular pectorals. \n\n\"Go take care of your guests. I'll be here.\"\n\nIan smiled wide and bounded off back towards the house, yelling for everyone who had alcohol to give him their keys or get the fuck out, no questions. No one put up any resistance. How did one even begin to resist Ian?\n\nMore and more people began to fill the back deck and started exploring out into the yard and pool areas. It wasn't long before articles of discarded clothing began to dot the space. A shirt here, pants there. Nearly every male in the vicinity was shirtless within five minutes. Not that I minded.\n\n\"Don't go leaving me for some hotter younger model,\" Daniel joked, crushing me to his chest when he saw me eyeing all the newly visible man-flesh.\n\n\"Not a chance,\" I ensured him, sealing the assertion with a small kiss.\n\n\"Can we change in here?\" someone shouted from down below in the yard. Daniel looked over the railing to see a shirtless Junior with his khaki pants unbuttoned pointing towards the pool house.\n\nDaniel looked around for Ian, found him no where in sight, and so took the lead.\n\n\"Go ahead!\" he called back.\n\n\"Thanks!\"\n\nThe kids pants hit the grass before he'd even opened the door.\n\nUnlike most of the other guys and girls in the school, the baseball and football teams were used to nudity. Instead of searching for a private place to change individually, they simply huddled up in a circle facing each other and stripped in unison. A circle of bare pale butts and muscled backs took shape.\n\nJustin nearly died, flushing to match his reddish hair.\n\nI, on the other hand, simply enjoyed an encore performance of the buttocks buffet I hadn't seen since the last game of the baseball season a few weeks back.\n\nThe first person to make the leap into the pool gave everyone else tacit unspoken permission to join. Splashing and laughing soon filled the darkening summer air. Daniel, Justin, and I stayed at the railing, surveying the revelry and chatting between ourselves. \n\nI was so incredibly proud of Daniel as the conversation continued. \n\nHe treated Justin as if he'd been a part of the group for years. He made my new friend feel right at home, asking him every question in the book and generally getting to know him. I could tell Justin appreciated it from the ever relaxing expressions on his face. \n\nOur conversation was occasionally interrupted by the return of Ian. He'd make a point to check on Justin at least once every five minutes. We'd be chatting about Justin's mom's job when all of a sudden:\n\n\"You okay babe?\" Ian's voice would come from behind, a large thick-fingered hand suddenly pulling Justin backwards into his chest.\n\n\"I'm fine, you lummox!\" Justin would pretend to struggle against Ian, but never really put in much effort. His struggle looked more like an attempt to snuggle into the embrace rather than truly trying to evade or escape it.\n\n\"Okay then. I'll be back in just a bit. Someone brought Everclear and I gotta pour that shit down the sink before anyone tries to drink it. That crap is essentially gasoline.\"\n\nAnd just like that, he'd flit away again to manage his soiree. If a 220 lb ball of muscle can even be said to flit. \n\n\"This is just...surreal,\" Justin said after a while of wide-eyed observation of the splashing and socializing of our now former classmates.\n\n\"How so?\" Daniel asked.\n\nJustin's face was a picture of existential struggle as he tried to find the words to tell Daniel what being at this kind of party felt like to a nerd. \n\nI stepped in to rescue him.\n\n\"Strange huh?\" I offered. \"But you get used to it.\"\n\n\"I feel like the animals in the zoo decided to throw a party and the the zoologists caught them in the act,\" Justin mumbled.\n\nIt was Daniel's turn to try and hide the shock on his face.\n\n\"Animals in the zoo, huh?\" he asked, feigning offense.\n\nJustin's eyes went wide and he immediately got defensive and flustered.\n\n\"Not like that! I didn't mean...I'm not calling them...or you...I don't want to seem like I don't appreciate...\"\n\nDaniel laughed at him.\n\n\"Easy, little dude. I get it.\"\n\n\"I've explained all of that to him many times now,\" I told Justin, who gave a weak smile in return.\n\n\"I'll be right back. I'm gonna grab a beer. Want me to get you two something?\" Daniel offered.\n\n\"Sure,\" I said for the both of us when Justin didn't respond.\n\nDaniel turned my head to kiss my lips gently, favored me with a smile and twinkle of his bright brown eyes and then headed inside to the fridge.\n\n\"He really doesn't care if people see you two together, does he?\" Justin asked quietly when Daniel was gone.\n\n\"I guess not. I haven't really thought about it much for a long while now.\"\n\nAnd I hadn't. I hadn't thought about Daniel and I keeping our relationship to ourselves in what seemed like a very long time. It had only been weeks, really, but it felt like so much longer. Daniel was just so much a part of my reality at this point, the effort it would have taken to hide that reality from the rest of the world seemed pointless. Who could keep up that facade? The effort that would require exhausted me just thinking about it.\n\nI was on my second (or maybe my third) beverage and beginning to feel the light headed dizziness and faux-euphoria of an inexperienced and admittedly underaged drinker when the sound of breaking glass echoed from inside the house. Ian was taking a momentary break from his hosting duties to chat with Justin, Daniel and me. When the sound of the shattering silicon reached his ears, his wide-eyed loving gaze at Justin changed so abruptly it was very nearly terrifying. He shared a look with Daniel who smiled so slightly I almost thought I had imagined it. \n\nIan's eyes narrowed, his brow furrowed and his teeth clenched together so tightly you could see the muscles in his jaw throbbing. A vein slowly rose in the middle of his forehead and he started to change color. Like putting one of those Easter marshmallow Peeps in the microwave, Ian began to expand before our eyes. His chest puffed out and he slowly started to draw himself up to his full and maximum height and breadth. \n\n\"What the ever-loving fuck was that?\" he growled low and viciously through his clenched teeth. His eyes turned from Justin towards the open door of his house.\n\n\"Umm,\" Justin tried to intervene, \"Maybe someone dropped a glass. I'm sure it's...\"\n\n\"Will you excuse me? I need to go take care of something real quick,\" Ian hissed, trying to disentangle Justin's lean arms from his torso. Justin did his best to cling on and hold back the growing storm that Ian had become, but it was like a scarecrow trying to stop a tornado. Ian easily but gently removed Justin and physically lifted him out of his way.\n\nJustin was wild-eyed, unable to comprehend what to do. Ian marched forcefully towards the door, his pace quickening with every step.\n\n\"What do I do?\" Justin asked in a panic as Ian departed.\n\n\"Follow him!\" I ordered.\n\n\"He'll be fine, just go make sure he doesn't go too crazy,\" Daniel offered with a smirky grin. I had the distinct impression that he had seen this kind of behavior from Ian before. \n\nJustin quickly handed me his half finished beer and rushed off after Ian. I said a quick silent prayer for him. He was heading into uncharted waters, even for me. I had no idea the proper or expected actions he could or should take in a situation like this.\n\nJustin disappeared inside and at that moment Ian's temper crested and his booming voice echoed so loudly from inside that even the people splashing down in the pool stopped their romping and took notice.\n\n\"CLEAN IT UP AND GET OUT!\"\n\nDaniel broke into a fit of giggles.\n\n\"I don't see what is so funny about this?\" I reprimanded.\n\n\"He's not even mad. Something breaks at every party, babe. He just does this so people won't fuck with him in the future. He's done it since Freshman year. Don't worry. It's all just social theater. Jock stuff.\"\n\nSome people had made the trek back up the stairs from the lawn to check out the scene taking place in the house. I heard murmurs from some of the popular kids that seemed to confirm Daniel's un-phased analysis.\n\n\"Oh, this ought to be fun,\" Katy giggled. \"I love it when he does this!\"\n\n\"Who was it?\" Amanda asked with as much real concern in her voice as if she'd been asking which of the Jonas Brothers had been spotted nearby. \"Do you remember when I accidentally dropped an ash tray Sophomore year? I thought I was gonna piss my pants when he caught me! To be honest, I kinda did. But only a little! I swear!\"\n\nThe two girls broke into a hysterical fit of laughter and pushed through the crowd blocking the door to get a better seat to the show.\n\n\"Perfect timing,\" Daniel said to himself. He placed his beer on the wooden railing of the porch. \"Come on.\"\n\nDaniel grabbed for my arm. The usual tingle at his touch was muted by the excitement of the new and only superficially (apparently,) dangerous situation arising inside.\n\n\"What? Come on what?\"\n\n\"Just follow me,\" Daniel said quickly, his voice low and breathy, his eyebrows climbing a little higher as he pulled me towards the porch stairs. I took one quick swig from my now tepid beverage and placed it hastily on a table as Daniel very nearly dragged me along behind him.\n\n\"Daniel, what the fuck are you doing?!\" I was starting to get concerned and more than a little annoyed but Daniel remained calm and steady.\n\n\"Just trust me. Come on.\"\n\n\"Come on where? Where are you taking me?\"\n\n\"Everyone is watching Ian. Just, please, follow me.\"\n\nAs I was lead past the open door, I glanced inside and caught Justin's gaze, standing beside Ian. He looked helpless but more at ease than when he'd rushed after the boy. I raised my eyes in a pleading question towards him. He smiled broadly and gave me a thumbs up. Apparently, he had caught on to Ian's little party game and was now enjoying the rest of the show. The growing crowd around them blocked my view of who had incurred Ian's faux-wrath, but my heart went out to them.\n\nDaniel and I, (well, more so Daniel as I was just being towed along in his wake) had to clear a path through party-goers who steadily climbed the stairs towards the house and current entertainment, eventually coming to the bottom step. \n\nBefore my bare feet could touch the grass, Daniel pulled me sharply to the right...away from the pool and back towards the house.\n\n\"What in the world are you doing!?\" I whined. \"There's nothing over here except...\"\n\n\"Ian showed me something once. Just trust me.\"\n\n\"Fine!\" I sighed dramatically.\n\nDaniel lead me quickly back towards the house, around the staircase to the upper deck to a small locked wooden door that seemed to lead directly under the deck itself. Daniel spared a quick glance upwards. No faces peered back down at us over the railing. No one seemed to be paying any attention whatsoever. Why would they when Ian was so masterfully performing his bull-in-a-china-shop routine?",
        "\"Ready?\" Daniel asked, his gold-brown eyes twinkling with excitement.\n\n\"Ready for what?! Daniel what in the world are you doing?!\"\n\nHe smiled a dazzling smile and unlatched the door with a key he seemed to magically produce from underneath a small rock pushed against the foundation of the house. The door opened inward on surprisingly silent hinges, Daniel looked around to see if anyone had noticed, then hastily pulled me inside the dark space and quickly closed the door behind me.\n\nThere was very little light under the deck, only what crept in from the spaces between the planks above, but my eyes quickly adjusted to the murky gloom. The floor was paved in concrete paving tiles, broken only by massive thick wooden beams that stretched from the ground to the underside of the deck like bare trees in a manmade forrest. Against the back wall, all manner of lawn and garden tools hung neatly from the stone foundation in wooden racks. Boxes of old and deflated sports balls, pool toys, and paint buckets made little piles here and there. A large riding lawn mower dominated the space and shone a dull flat green, the bright yellow leather seats covered in a thin sheet of dust. \n\nDaniel pulled me towards the riding mower, spun me around and pushed me down onto the seat with both hands. Before I could open my mouth to protest my semi-abduction, his lips crashed into mine and I felt his tongue probing my mouth. I responded without thinking, returning his kiss and pulling him closer to me. My arms grabbed at the bare skin of his back, feeling the muscles tense and relax as he pushed his entire bulk onto my body and ground himself into me. My legs opened on their own and he slipped easily between my thighs, one hand reaching down and grasping the growing mound in my pants.\n\nI pulled back from our kiss when his grip squeezed and tried to resist. \n\nFutile I know.\n\n\"What are you doing?\" I asked half-heartedly. Daniels full lips and tongue were working up and down the side of my neck, sucking gently on my sensitive skin as his hands continued to massage my cock to full attention.\n\n\"You know exactly what I'm doing,\" he said between kisses. \"You're the smartest guy in the grade.\"\n\nI bit my lower lip to hold back a moan. It came unbidden anyway when Daniel undid my pants and slipped his fingers onto my flat stomach and beneath the waistband. \n\n\"Ohhhh,\" I sighed. \"But...but...there are people right above us. What if they hear us?\"\n\nI knew what was coming. The question, much like \"sup?\" was almost entirely rhetorical at this point. Even as I protested, I lifted my hips from the yellow seat of the mower so Daniel could yank my pants to my thighs. My thick tool sprang out and slapped hard against my stomach with an audible \"thwack.\" I could already feel the liquid beginning to ooze from my slit and onto my skin, warm and sticky. \n\n\"I hope they do hear us,\" Daniel growled, his fingers finally gripping my shaft tightly, squeezing as he milked a long stream of precum from me. \"That's what makes it hot.\"\n\nBefore I could tell him how risky that was, or even fully form the thought in my brain, he shot me a wicked grin and dove onto my cock, his mouth wide. \n\nAny lingering doubts I had had evaporated like water on a hot skillet the moment I felt him push my entire cock down his warm throat, his wet tongue undulating along the base of my shaft. I felt his nose tickle my trimmed pubes and my fingers immediately grabbed his head and pushed him further into my lap. \n\nI thrust upwards, grinding my hips into his mouth, as my dick pulsed and throbbed inside him. The low moan that rumbled from his chest vibrated against my cock.\n\nAs quickly as it happened, Daniel stopped it. With a gasping breath, he stood straight up and left my slick wet cock bobbing in mid air.\n\n\"That oughtta do the trick,\" he whispered, his lips shining with spit and watching with hunger in his eyes as my cock bounced and danced in the dusty air. His fingers were at the waist band of his shorts while he spoke. With a little puff of dust they made a small pile on the concrete tiles when he pushed them all the way down.\n\nHe wore his white jock strap, like the one I had first seen him in when this all began all those months ago. His uncut cock was rock hard and straining against the woven cotton, the dark spot at the head of his cock spreading fast. \n\nHe turned slowly, presenting me with his perfectly framed ass. He arched the small of his back and pushed those perfect mounds towards me, wiggling his hips back and forth a little, daring me to make a move.\n\n\"Please, Mr. Valedictorian,\" Daniel whined with lust in his voice as he looked back over his shoulder at me, \"I'm just a dumb jock. I don't know how I'm gonna graduate without your help. Is there anything I can do to get some extra credit?\"\n\nGoddammit. \n\nFucking role-play. \n\nWell, there was no denying that Daniel knew how to push my buttons.\n\nHe ended his little scene by bending over slightly at the waist and grabbing one of the support poles in front of him, his arms high above his head, forming his back into a perfect triangle. He turned to wink at me as he presented himself. I went from prey to predator in less than a heartbeat.\n\nI closed the distance between us and ground my hard and dripping cock against his ass crack, feeling his muscled cheeks open and enfold my girth. Daniel's eyes fluttered closed and he pushed his hole back towards me.\n\n\"Fuck me, baby,\" he moaned. \"Please. Put your cock in me. Please...\" \n\nHe paired the desire with a wide-eyed look of innocence and misty lust that made it almost a crime not to do as he asked.\n\nMy cock lined up against his puckered hole like a magnet. The heat of his skin as my precum drenched his opening nearly made me cum right then. I pushed forward and felt him welcome me.\n\n\"Ohhhh fuuuuck yesssss,\" Daniel hissed as more and more of my cock pushed inside him. He pushed back against the wooden pole and tried to take more and more of my long dick with each little thrust. \n\nWith practiced ease, I melted into him. His muscles clenched and unclenched around me as I throbbed inside him. Heat like fire mixed with pressure like a vice.\n\n\"You want extra credit?\" I growled at him, my fingertips digging into his hips as my cock finished it's long entrance. \n\n\"Mmmmm...yes. Please. Give it to me.\" Daniel wiggled his ass against my hips and his hole clenched tight then opened again. \n\n\"It's going to be rough to bring that grade up. You sure you can take it?\"\n\n\"I like it rough...\" he ground into me again. I felt my cock head pressing against that magic button of nerves inside him. His breath was getting ragged, choppy.\n\n\"You got it,\" I hissed in his ear, biting the soft skin of his earlobe as I pulled my cock back and slammed it inside him again with enough force to make a smacking sound.\n\nDaniel didn't even attempt to lower his voice. I didn't attempt to make him. He had purposefully awoken the beast he knew lurked inside me and I was going to finish this no matter the outcome.\n\nDaniel's fingernails raked down the wooden beam as I slammed his round bubble from behind. My fingers ached with the pressure I put on his hips as I pulled him roughly back onto my thick cock. His hole loosened and tightened around me in wave after wave, matching his panting and groans. \n\n\"Don't stop...oh, fuck yes...fuck me harder...oh fuck yes harder...oh shit, yes.\"\n\nHe really was trying to get attention from the party goers above. He was a vocal lover usually, but he ratcheted his normal up to porn star level. \n\nI picked up my pace. My balls slapped against his ass with every thrust, his cheeks reddened from the pounding. I didn't care. I gritted my teeth and I fucked him, really and truly pounded him mercilessly. My brain was gone, my mind no longer in control. I felt strong and powerful, in control and dominant. My alpha male writhed in pleasure beneath me, succumbing to the onslaught of my cock. He submitted to my power, his body begging me to show him who was in control.\n\n\"Cum in me...cum in my hole,\" he pleaded, his voice high and wavering, his knuckles white on the support beam.\n\nI didn't respond. I just kept fucking him, faster, feeling my head hit his spot making him yelp each time. My eyes blurred.\n\nI was close. As I felt the familiar white hot fire climb in my veins and shimmer through me entire being, I slammed my rod into Daniel and pulled him back into me, holding him there, throbbing and thickening inside him.\n\nI don't know how to describe the sound that came from my body. If I had been a wolf, it would have been a howl.\n\nDaniel's body knew what was coming. He clamped down on my shaft with his hole, waiting for it.\n\nAnd I didn't disappoint.\n\nI felt my lusts and anxieties empty into him in five bursts of thick cum that sapped my strength and filled my love to the brim. I felt some of it leak hot and thick down my shaft. I dared not move as I filled him. And from the sounds he was making, it was a good thing I didn't. \n\nI just noticed in my orgasmic state the white streams and drops that landed on the cement tiles in front of him. He had cum without touching his cock. I had completely forgotten to touch his cock, but thankfully it seemed my inattention hadn't been damning. \n\nMy fingers were still white and tense on his hips as my breath and brain settled back into me when he suddenly started to laugh. \n\nAt first, it was a little giggle. Before long, it was long loud full body laughs that shook his whole being.\n\nHe pulled off of my super sensitive cock in his uncontrollable glee. I shivered at the change in temperature and pressure but he wiped tears of laughter from his eyes and tried to regain his composure.\n\n\"Well, I suppose that is one way to react to getting fucked rough and raw,\" I said sarcastically. \"I usually prefer thank you's but uncontrollable laughter is okay too.\"\n\nDaniel brought himself under control and placed his palms on my chest to kiss me gently as he did, caressing my face as he whispered apologies to me.\n\n\"I'm sorry, baby. That was perfect. I swear. I mean look at me.\"\n\nHe glistened in the gloom, a thin sheen of sweat over his entire form. His cock was still hard and pulsing. The white mess on the front of the jockstrap proved that he had indeed joined me in release.\n\n\"It's just hilarious that there are people, like, 15 feet away, and you just fucked me so hard I came in my jock. Gotta admit, that's pretty fucking funny.\"\n\nI tried not to smirk, but it was funny. \n\nBefore long, we were both laughing as we wrapped our arms around each other and pressed our foreheads together. I loved holding him like this. We connected at three places: Mind, Heart, and Body; Forehead, Chest, and Groin. It felt safe and right. I imagined holding him like that as we danced at our wedding. It was a stupid thought, I know. And presumptuous to boot. But sometimes, those thoughts can't be avoided. They just come unbidden. And for a nerd like me, it was a sublime experience to live in those futures, even for just a moment. They were something, some place and time, that I had never allowed myself to fathom before Daniel. That I could be there, be in some distant future with him, living and loving him in my mind's eye was...exhilarating. And terrifying.\n\nWe stayed like that for a while, slowly rocking back and forth together, holding each other. \n\n\"We should get back before anyone misses us,\" Daniel whispered after several years had gone by in my mind.\n\n\"Do we have to?\"\n\n\"Probably.\"\n\nI sighed and pulled away from him reluctantly. \n\n\"Well you can't go back out there like that,\" I said. \"You're literally covered in your own jizz. I think people would notice that little fact.\"\n\nDaniel shrugged as he pushed his jockstrap to the ground. He was finally naked before me again and I couldn't help but catch my breath. \n\nEvery time. Every damn time, it still stunned me.\n\nHe retrieved his shorts from where he had left them and stepped back into them.\n\n\"A little free balling never hurt nobody,\" he said with a wink.\n\n\"And what about my little present you got with you there...\" I coyly motioned to his perfect ass as I raised my own pants to my waist and stuffed my semi-soft cock back into place. \n\n\"Oh that's gonna stay right where it is. If no one heard us down here, fine. But I like knowing that I've got your cum inside me while I talk to homophobic dick heads and clueless underclassmen. It feels...naughty.\"\n\nWow.\n\nKinky boyfriend today. I had quite the summer vacation to look forward to if this is how we were starting out on Day 1. \n\n\"Let's get on with it then,\" I said and motioned for him to lead the way back out to the party.\n\nDaniel popped his head around the door to check for any interlopers. Finding none, he pulled me behind him back into the red and purple summer twilight, shut the little wooden door quickly behind us and walked onto the broad green lawn as if nothing had happened.\n\nWe made our way back up to the top deck quickly and without any notice. The anxiety ridden nerd in me was certain that everyone must have heard us down there, must surely notice that we were both flushed and unable to contain small smiles. The pitchforks and torches were going to come out at any second and someone would be sent to gather kindling for the burning of the fag boys at the stake. \n\nBut no one did more than glance at us. Some smiled and waved. The expected confrontation never came. To be honest, it was a bit of a let down.\n\n\"Where did you two go off to?\" Justin said, scampering up to us before we even reached the top step.\n\n\"Just wanted to show David something down in the yard,\" Daniel offered, his eyes darting up and down, looking at anything and everything except for Justin, like he was following the path of a non existent house-fly.\n\nThe beautiful lanky boy leaned in and whispered.\n\n\"If you're going to lie to the Saludatorian, you are going to have to do a lot better than that, Jock Boy.\"\n\nDaniel's eyes were full moons in his face. If he wasn't flushed from the fucking I'd just given him, he certainly was when Justin finished speaking. He tried to reply, but his jaw just hung useless on his chest and he stared at the smirking nerd who'd just handed him his words on a silver plate.\n\nJustin giggled.\n\n\"Well, I'm glad you two had some fun. But you missed quite the show up here. Ian went crazy! It was awesome. And then, just when you thought that poor Sophomore was going to literally shit his pants and run, he smiled and started laughing and everything was fine. Just like that.\"\n\nJustin snapped his fingers.\n\nDaniel still hadn't found his tongue.\n\n\"Sounds like we all had a little fun.\"\n\n\"Yours sounds more...shall we say, entertaining?\" Justin joked with a wink.\n\n\"You'd have to ask Daniel,\" I whispered. \"Just don't squeeze him too hard or he may leak some cream filling,\"\n\nI'd seen Daniel surprised before. But he looked mortified now. It was unbelievably cute on him.\n\nJustin and I both laughed so hard it hurt.\n\n\"What did I miss?\" Ian asked, lumbering up behind us and pulling Justin into an all encompassing embrace. He took one look at Daniel and joined in on the laughter. \n\n\"Under the deck tool shed?\" he asked knowingly.\n\nDaniel's head nearly exploded.\n\nIn the middle of our laugh fest at the expense of my boyfriend's all-in-good-fun mortification and humiliation, the unmistakable symphony of a high school girl with too much alcohol, not enough food, and wavering self esteem issues floated above the din of the party. From the intensity and loudness, it sounded like whoever was in the midst of spilling her cookies was doing so with projectile speeds.\n\nIan's laughter cut short abruptly. He walked to the edge of the deck and began hunting for the source of the stomach acid aria like a kindergartner hunting for Waldo. \n\n\"Damn it,\" he sighed when he'd located her. \n\nHer friends had her well in hand. The poor thing was like some mortally wounded animal. Her eyes were wide and hunted, rolling in her skull as she tried to look everywhere at once. She knew she was the center of attention and she wanted to be anything else in the world. Add to that the highly undignified act of vomiting itself and it made for a socially unacceptable nightmare for anyone of even moderate social standing on the high school ladder. \n\n\"This is always the most stressful part,\" Ian sighed as he made his way over to Justin. He patted him on the shoulder and then spoke to Daniel. \"Can you take care of it up here? I'm gonna make the rounds down there.\"\n\nDaniel nodded. Ian smiled in return and made his way down the steps.\n\n\"Ya'll know the rules guys and gals!\" I heard him say as he descended.\n\n\"What's happening?\"\n\n\"It's his one hard and fast rule. First person to puke means the party's over. It may seem harsh, but none of his parties have ever gotten even remotely out of hand.\"\n\nAnd with that, Ian gained just a little bit more respect in my eyes. Jocks were supposed to be out of control raging ass holes without a care for anyone but themselves. It still surprised me that I was just as wrong about them as they were about me. \n\nJustin and I watched in awe as Ian and Daniel rounded up every single party goer in an orderly fashion. There was a sense of almost choreographed practice to it. The pool was emptied, towels distributed, tasks handed out to subordinates. People were redressed in no time, making their way calmly up the stairs.\n\nIan called out names of designated drivers from a list he had taken when he confiscated keys. With the help of the baseball team he made sure each car had it's DD. For those who remained and were riderless or too drunk to have gotten in the correct car, he had somehow called 5 black town cars and was diligently giving each of them a list of addresses he'd pulled from the school directory and loading each car with three or four party goers. \n\nHe even handed each driver a large wad of cash.\n\n\"I guess we should start packing up too, huh?\" I asked Daniel.\n\n\"No need. We can stay here tonight I'm sure.\"\n\n\"Oh, I didn't know that was going to be the plan. I'll need to call my parents and...\"\n\n\"Already done babe.\"\n\nOf course it was. \n\n\"In fact, neither of you are expected home. Ian arranged it. I've never seen a parent say no to him.\"\n\nJustin looked about ready to burst into tears. He just stared at Ian as he shepherded our classmates safely off to their destinations as if he was looking at the second coming. Sometimes they would smile at each other from across the lawn. \n\nI knew that look. \n\nNo stopping it at this point. \n\nThe boy was free falling. And hard.\n\nGordon, Paul, Amanda, and Katy, all four noticeably tipsy, were the only four besides us that remained as the last town car pulled out of the drive.\n\nIan looked a little haggard when it was all said and done. He walked slowly back towards the house.\n\n\"You four,\" he said to Gordon and Paul and the girls, \"upstairs, second door on the right and first on the left. And you're washing the sheets in the morning. Condoms in my gym bag.\"\n\nThe girls giggled sheepishly. The boys simply winked and all four shuffled off to their rooms. The boys did little to conceal the obvious boners they both already sported.\n\n\"Finally,\" Ian sighed when they were gone, \"I thought that would never end. I've been waiting for someone to puke for two hours. Now, I can do this.\"\n\nHe pulled Justin to him and planted a huge kiss on him that left the smaller boys limbs flailing in the air for bit before he settled into what was happening and coalesced into Ian.\n\nI had to admit,watching the kiss go from passionate to lust filled full on make out was...enthralling. Even if it did make me feel like a bit of a pervy voyeur. \n\n\"Kinda sweet, isn't it?\" Daniel said, pulling me close to his side and gently kissing the side of my neck.",
        "It would have been a tender moment between two lovers if he hadn't also slid his hand down the back of my pants and wiggled his thick finger between my cheeks to press against my tight hole.\n\nMy voice was all shocked exasperation when I admonished him for manhandling me. But my back arched back onto his finger and let him slip a little way inside me all the same.\n\nSue me.\n\nI was watching live action porn, basically. \n\nAnd I was 18. Hormones can be blamed for everything until at least the age of 25. Them's the rules.\n\nIan and Justin finally broke their kiss.\n\n\"I've been wanting to do that since people got here.\"\n\n\"Well why didn't you?\" Justin sighed, his head resting on Ian's broad hairless chest. His question and it's implicit consequences seemed to hit him at the same time it hit Ian.\n\n\"I just didn't think...I didn't want to make you...I mean if I'd known it was...\"\n\n\"Well now you know,\" Justin whispered, rocking gently with the muscle jock.\n\nYep.\n\nFalling hard and fast.\n\nIan and Justin sighed in unison, synching up.\n\n\"Well, I don't know about ya'll but that hot tub out back is looking really good right about now,\" Ian said quietly, his big fingers laced together around Justin's slim waist. \n\nThe way he looked down into Justin's green eyes, as if the rest of the Universe was dust and all that mattered was the boy he held to his chest...that look would have made me jealous not so long ago. Now, it just made me smile and reach my hand into the empty space between Daniel and me. As if in response, I felt Daniel's hand there, too. \n\n\"I'm down for that,\" Daniel replied.\n\n\"But there's rules back there,\" Ian said with firmness in his tone. \"No suits.\"\n\nJustin didn't even try to appear shocked.\n\n\"I figured as much. Deal.\"\n\nAnd just like that, Ian was a 8 year old kid on Christmas morning.\n\nHe very quickly and without a modicum of grace or style started to pull his tight speedo suit down to his knees at the same time he tried to sprint back to the hot tub, all while dragging a laughing Justin behind him. I was admiring the heft and smoothness of his pale butt when the sound of a car coming up the gravel driveway broke the mood.\n\n\"You guys go ahead, I'll see who it is. Probably just left something,\" Daniel said loudly, waving for the two now mostly nude boys to keep going to the hot tub.\n\n\"I'll help him,\" I assured.\n\nThey didn't need to be told twice. Both quickly disappeared out the back door.\n\n\"Horny little bastards,\" Daniel joked under his breath.\n\n\"Says the boy who is still holding a load of my cum in his ass? Really wanna throw that stone there, from your glass house, buddy boy?\"\n\n\"Touche.\" Daniel giggled and kissed my cheek. \"Let's see who that is.\"\n\nWe walked to the driveway with plodding footsteps. The summer night in the South is a thing of wonder. The fairy lights of the lightning bugs as they flitted into existence on the wide front lawn, only to flame out a second later. The deep navy, almost royal purple of the wide sky above us, the smell of grass and the lake behind. I loved it. You can read about halcyon scenes in as many novels as have ever been written on paper, but no one, not the best poet alive or dead can accurately capture the feel of a summer evening. \n\n\"Shit,\" Daniel suddenly mumbled. I could feel him tense beside me, his muscles going rigid and his grip on my hand suddenly verging on painful. He stepped half a step in front of me.\n\n\"What is it, babe?\" I asked as the headlights made a turn onto the wide circle drive, blinding me. I raised my free hand to my brow to shield my eyes as the vehicle approached.\n\n\"Don't do anything, okay? I'll handle this,\" Daniel said with a serious and nearly terrifying tone to his voice. \n\n\"What are you talking about, Daniel? I don't under...\"\n\nAnd then the car pulled around the front of the house and I understood.\n\nWhat was she doing here? \n\nThe car itself, a brand new cherry red BMW convertible should have been enough of a clue as to the owner. There was even visible in the back seat of the small sporty coupe, a huge red bow. This was a graduation present. There were only a handful of my classmates who would have gotten a car for graduation.\n\nWhen it stopped and the driver got out, my fears were realized.\n\nAmy.\n\n\"Don't YOU do anything,\" I mumbled to Daniel, holding his hand as tight as I possibly could.\n\nShe was still a stunning woman despite her fall from grace. I felt slightly guilty about that. Not that I should have. But I did. Her long hair was shining in the dark air as she walked around the car. There was something different about her. She didn't walk the same. She didn't stomp in designer heels as if everything around her should get out of her way if it knew what was good for it. She approached slowly and stopped, hands folded in front of her at the bottom of the steps and just looked up placidly at us.\n\n\"Hi,\" she said quietly, her eyes falling to the ground.\n\n\"What are you doing here, Amy?\" Daniel asked, violence just barely concealed in his tone.\n\nAmy took a deep breath as if to steady herself.\n\n\"I came to...I just wanted...I need to...\" She stumbled. \"I came to say I'm sorry.\"\n\nDaniel was silent for a minute. I turned to watch the confusion and pain play across his equally beautiful face. But when he spoke again at last, his tone was softer.\n\n\"We aren't getting back together, if that's what you think.\"\n\n\"I know that. That's not what I'm here for.\" \n\nI never thought I would say it, but she looked to be on the verge of tears.\n\n\"Then why come out here at all? I don't buy that you want to apologize to me,\" Daniel said through gritted teeth.\n\n\"I don't want to apologize to you, Daniel. I want to apologize to him.\"\n\nShe looked up and moved her gaze from her former boyfriend to me. \n\nFor the past several years, a gaze from that woman would have sent me running to get out of the way. But there was none of the ice and threatened death I had grown to expect in her gaze this time.\n\n\"Me?\"\n\nAmy nodded.\n\n\"I did and said some...just awful...things to you. About you. I don't expect you to forgive me for them. I don't forgive myself for them. I just needed you to know that I am truly sorry that I hurt you. I was so caught up in my own...no. No excuses. What I did was vile and there's no excuse for it. I can just say that I apologize and hope that one day you won't hate me.\"\n\nShe stood there like a statue, gazing up at me. And I stared back. I couldn't have spoken if I'd wanted to. \n\nThis woman had made it her life's work to humiliate me and torment my every minute. She had attacked me and called me horrible names. She had slandered my love for Daniel. All of that, all of that and more should have meant what she was, did, represented, was unforgivable.\n\nBut THAT Amy would never have said what the girl who stood in front of me just said. \n\nNever. \n\nI wondered if her fall from the top had contributed to this sudden turn of events. If she was apologizing to me to somehow regain some of her former standing. But school was done. There was no more standing. Not for us. That was over and done with. She would win nothing back now. \n\nAll of that and more raced around my skull. No sooner did I take up one argument, than a counter appeared. I couldn't make sense of this at all. My brain went fuzzy with the \n\neffort.\n\nAmy waited for a moment. Then quietly and demurely said, \"Okay, that's all,\" and headed back to the driver seat.\n\nNo fighting. No argument. No poison. She was just going to...leave.\n\n\"Why? Why do you hate me so much?\"\n\nThe question came out before I finished the thought behind it.\n\nAmy stared back at me and she looked...hurt. Not by what I said, but by the implications of the saying. As if she was seeing some kind of ghost I had summoned, some specter that haunted her now.\n\n\"I don't hate you, David,\" she whispered. \"I hated losing. I hated not...I envied...I...\" She sighed.\n\n\"You tortured me.\"\n\n\"I know.\"\n\n\"You called me a faggot.\"\n\n\"I did,\" her eyes were on the ground. \"And I'm embarrassed and terribly sorry.\"\n\n\"This won't make you popular again, Amy,\" I said, feeling the anger and the hurt inside me, the anger and hurt that this woman had been a large cause of, fighting with my compassion. \"School is over now. This gains you nothing. So why even do it?\"\n\n\"Because I have to. Because I don't want to be...I don't want to never have, to never find...what you two have.\"\n\nSpeechless barely scratched the surface.\n\n\"I don't want to be that person anymore,\" she continued. \"And to do that, I have to at least try and make things a little better with you. I know I don't deserve your forgiveness, and you don't have to give it. But I still had to try.\"\n\nShe smiled meekly. MEEKLY! Amy!\n\n\"What...\" I struggled to find the question I needed to ask. \"How, all of a sudden, are you...did something happen? What changed?\"\n\nAmy smiled.\n\n\"I had a talk with someone the other day. And he, well,he opened my eyes. And called me out on my bullshit. I guess it stuck.\"\n\n\"Who?\" I asked.\n\nAmy was silent for a moment, then looked back to Daniel.\n\n\"Didn't you send him? I thought you sent him to find me? He's your brother after all. Adam, of course.\"\n\nWith that she got back in her car and slowly pulled away.\n\nDaniel and I watched the headlights pull out of the driveway. \n\n\"Adam...\" Daniel whispered.\n\n\"Wow.\"\n\n\"I don't know what to think.\"\n\n\"Me either. You okay?\"\n\n\"What? Me? Yes, of course. I'm fine. It's you I'm worried about. Your bully just left. How are you?\"\n\nI honestly didn't know. I had survived another encounter with Amy. But at the same time, that hadn't felt like Amy at all. Not the Amy I thought I knew.\n\n\"I'm okay.\"\n\nDaniel pulled me to his side and kissed my forehead. \n\n\"Let's go enjoy the rest of our evening okay? We have all summer to think about that other stuff. Not tonight. Tonight is for us. Deal?\"\n\n\"Deal,\" I said with a weak smile, snuggling into his chest. \n\nJustin and Ian were already naked and in the throws of bubble induced bliss when we reached the hot tub. Both of them had their heads back and eyes closed, arms stretched over the sides of the tub. To their credit, they weren't visibly aroused or molesting each other. That took some doing.\n\n\"Who was it?\" Ian asked languidly, not even opening his eyes or lifting his head.\n\nDaniel look to me, his eyes handing the question to me to answer.\n\n\"No one,\" I replied. \"Just someone lost and looking for a gas station.\"\n\nDaniel smiled at me a bit.\n\nThe deal was we were going to enjoy the rest of our evening. And Amy wasn't going to be a part of that.\n\n\"Cooooool,\" Ian sighed. \"You know the rules. Strip, fools!\"\n\nDaniel's gaze was suddenly and enjoyably lascivious. \n\n\"Let me,\" he whispered softly.\n\nI conceded when he softly lifted the hem of my shirt, my arms rising to allow him to remove it with ease.\n\n\"I love seeing you naked outside,\" he said, his lips traveling up the sides of my neck as his fingers deftly found the clasp of my pants and they slid to the deck. \"Reminds me of the camping trip.\"\n\nI slipped my fingers under his shorts, knowing there was nothing other than the thin fabric standing between me and my fully naked boyfriend.\n\nI felt my cock thickening and did my best to control the rising bloodflow, but to little effect.\n\n\"Let's get warm and wet baby,\" Daniel joked, grabbing my hand and leading me to the edge of the tub.\n\nThe heat of the water was welcome and painful at the same time. Daniel and I sank into the empty seats opposite our two friends with long sighs. From the noises we made, you'd have thought we were 85 year old men getting up from recliners, not 18 year olds slipping into a whirlpool.\n\nDaniel kissed me almost as soon as we had settled in. I felt his lips part and his tongue dart forward, the warm water on his hands as they came to the sides of my face.\n\n\"Well if you're going to, no reason I can't too,\" Justin quipped.\n\nI heard the splashing of the water and knew that Justin was moving to plant a kiss on Ian as well. \n\n\"Mmm...err...ahhh,\" the noises coming from the new couple were louder than anticipated. \n\nAnd they, I am embarrassed to say, stoked a fire of competition inside me.\n\nLuckily, Ian stopped that before we had an actual battle of the moans.\n\n\"Jesus!\" he said between kisses. \"I just can't get over how BIG it is! Guys, seriously though! Look at this thing!\"\n\nSummoned by his words, Daniel and I broke our kiss to watch as Ian literally dragged Justin to a standing position by his cock. Ian held Justin's thick member at the base and waved it around in the air like a pool noodle, sending water droplets flying.\n\nDaniel and I both laughed.\n\n\"Yep, that's a monster cock alright!\" Daniel joked.\n\n\"But it's so pretty too,\" Ian said, gazing at the cock in his fist. \"You're so beautiful.\"\n\nThat last, was for Justin. \n\nThe mortification from having his meat on display like an item up for auction melted into a sweet and sensual gaze. He leaned down, his dick still in Ian's vice grip, and kissed the larger boy gently on the lips.\n\nIan shrank under that kiss, melting back into the water with a sigh like someone had just let all the air out of him.\n\nJustin wasn't the only one falling, apparently. \n\nGood.\n\n\"I mean, how do you even begin to take something like this?\" Ian asked when the moment was past. \"I've tried a few times and I know I'm new to this and all, but I can't even get like a third of it into my mouth!\"\n\n\"Hush!\" Justin sniped. \"You do great!\"\n\n\"How do you do it D? You take Lil D's crazy schlong with no problem!\"\n\nDaniel snorted back a laugh.\n\n\"Seriously? You're asking me for dick sucking advice?\"\n\nI hadn't ever thought I would be privy to this conversation. Especially not between two jocks.\n\n\"Well, yeah. Who else do I know who regularly partakes of the dick? No one that I can think of, other than those two upstairs. Cause we all know they have sucked each other off more than just a few times over the years,\" Ian shot back. There was a little twinge of desperate pleading in his voice.\n\n\"Really?\"\n\n\"I wanna try,\" Ian replied, his eyes a little downcast and a little color creeping into his face. It was really very sweet.\n\n\"You don't have to do this, Ian.\" Justin said quietly.\n\n\"Hush. I know that. I want to. I mean whats the point of dating a super hung nerdy boy if you can't actually enjoy the super hung part all the way?\"\n\nJustin's eyes shot wide open.\n\nIt took Ian a moment to figure out why. \n\nWhen he did, his grip sprang back from Justin's package and he was a bumbling basket case for a full 15 seconds.\n\n\"I...umm...what I meant to say was...not, you know...It's just that when...I mean if you were...I...\"\n\n\"Just ask me,\" Justin cut him off.\n\n\"Huh?\"\n\n\"Ask me,\" Justin repeated\n\nIan cleared his throat and began quietly.\n\n\"Would you like to be my...boyfriend?\"\n\nJustin nodded.\n\nAnd then leapt into Ian's lap with a wet plop and a large splash.\n\n\"Well that was the weirdest coming out story in history!\" he giggled. But try as he might, his face was a perfect picture of sheer joy.\n\n\"Am I gay now?\" Ian asked absentmindedly.\n\nDaniel shrugged.\n\n\"Who knows? But you got yourself a new boyfriend, apparently. So you sure ain't straight.\"\n\nThat sent everyone off into a raucous chorus of laughter yet again. This evening had been a lot of laughter all around.\n\n\"But are you gonna show me how to make him squirm now that he's officially mine?\" Ian asked again after the frivolity died down. \n\nDaniel looked at me as if to ask for permission.\n\nI put up my hands.\n\n\"You're on your own on this one, babe. You're the blow job expert in this couple, after all.\"\n\nDaniel thought for a moment and then sighed heavily.\n\n\"Fine! Let's see what you can do already and go from there.\"\n\nIan's face lit up like a firework.\n\nJustin was unceremoniously flung into the open air and flipped around as if he weighed no more than one of the pool toys floating around. He yelped as Ian picked his up and settled him down onto the outer rim of the hot tub with his feet planted on the seat beneath the bubbling surface. \n\nIan flipped onto his stomach and maneuvered himself so he floated between the smaller boys open legs. His massive arms wrapped around Justin's waist, his biceps larger around than the nerds thighs. And Justin's massive cock stood straight as an arrow at Ian's face, pale and dripping with water and precum. He settled down from his being lifted like so much laundry and ran his long graceful fingers through Ian's wet and short cropped brown hair. He smiled down at his now boyfriend and nodded.\n\nIan took that as the go ahead, opened his mouth, grabbed Justin's dick by the base and shoved as much of it as he could down his willing throat.\n\nHe was correct when he said he could do about a third of the impressive member. An inch or two below Justin's cock head, Ian's lips came to rest and he gagged a little.\n\n\"Breathe through your nose and relax your throat. Go slow and remember to breathe.\"\n\nJustin obviously wasn't listening. Not that I blamed him. He was rapturously enjoying what Ian was doing to him.\n\nA little more of his dick disappeared into Ian's throat. Ian's eyes were going wide as he realized what was happening, but he was getting the hang of it, trying to rule his fear and reflex.\n\n\"Breath, breathe,\" Daniel cheered him on. \n\nIan pulled back a bit and then with gusto and determination he dove all the way down.\n\n\"Ohhhhh god!\" Justin screamed, his fingers white-nuckled on Ian's head.\n\nIan's nose rested in Justin's lap for a second, held in place by Justin's much weaker grip.\n\nIan pulled off all the way with a loud gasping breath and pumped both of his fists into the air as if he'd just won the super bowl!\n\n\"Wooo! Hot damn! Yes!\"\n\nJustin laughed and tried not to touch his throbbing and now-mouthless cock, slick with Ian's spit.\n\n\"Not too hard is it?\" Daniel asked.\n\n\"Awesome!\" Ian cooed, stroking Justin as he reveled in his accomplishment.\n\n\"You were going to make me cum if you kept going,\" Justin said raggedly, his eyes fluttering as he spoke.\n\n\"In that case, we gotta go boys!\" Ian very nearly shouted. \n\nHe stood, his own slightly curved cock bouncing and dripping water as he headed for the edge of the hot tub.\n\n\"Where you going?\" I asked.\n\n\"Bedtime! Gonna make this boy blow like St.Helens!\"\n\n\"Oh, Jesus...,\" Justin moaned, a little fear in his eyes, as if to say, what have I gotten myself into.\n\n\"You coming?\" Ian asked, his hand outstretched to the strawberry blonde boy.\n\n\"Hopefully more than once,\" Justin replied with a wink, standing up to leave the tub, his thick cock bobbing as he moved.\n\nIan grabbed his hand and started very nearly running towards the house.\n\n\"Wait wait wait!\" Justin cried in a fit of laughter. \"You'll go slow right?\"\n\nIan looked confused, but nodded.\n\n\"Of course...\"\n\n\"I mean, when you...If I wanted you to...you know?...If we were to...I haven't ever been on that side of things before...so, I mean...\"\n\nIt dawned on Ian just what Justin was proposing. In a move as quick as a hummingbird, his massive arm snaked around Justin's knees and he lifted the lanky teen from his feet into a baby-doll hold. \n\n\"Slow as you like it.\"\n\nJustin laid his head on Ian's shoulder.\n\n\"Unless I ask you to, you know...not go slow,\" he said with a blush. Ian's face was a mask of unadulterated Joy and Justin pressed his advantage. \n\nHe bit Ian's earlobe and said between his teeth in a graveley whisper, \"Harder, baby.\"\n\nIan growled and RAN towards the door, his new boyfriend laughing maniacally in his arms, head thrown back.\n\n\"GOODNIGHT BOYS! LOCK UP WHEN YOU COME INSIDE!\"\n\nAnd just like that, they were gone into the murky darkness of the lake house. \n\nDaniel and I snuggled into each other, our fingers intertwining under the water as we enjoyed the newness of our two friends finding each other, letting their joy settle over us like a mist. ",
        "Looking up into the infinite stars painted across the night sky, I rested my head on his shoulder and breathed deep.\n\n\"It would be a shame to waste such a beautiful night,\" I cooed.\n\n\"Waste it?\"\n\n\"We got the sky, we got the warm summer air, we got the hot tub all to ourselves...\"\n\nDaniel growled low in his chest.\n\n\"Deal.\"\n\nHis hands slipped between my thighs, running gently up the inside of my leg, flattening against my taint and then sliding easily towards my hole. His stubbled chin was at my neck, working every nerve there with practiced expertise. My legs opened for him and I felt his thick finger probing at my entry. I ground my hips into him and felt him slide inside me, arching his way upwards, stroking my nerve endings, pushing for my spot.\n\n\"Another...\" I moaned, my fingers in his hair, pulling him into me.\n\nI gasped as a second finger joined the first, opening me up, filling me.\n\n\"Yess...\" \n\nHis fingers were magic, in and out at just the right speed. My dick arched above the water, bouncing on my stomach and coating me with a new stream of clear liquid.\n\n\"Another.\"\n\nDaniel's hot breath on my neck mixed with the rising steam of the hot tub and the heat of his fingers inside my tight chute drove me higher. The third finger made me bite my lower lip to hold in the scream of pleasure. He twisted and arched his fingers, drumming them against my prostate in rapid succession until I thought I would cum right then and there.\n\n\"Stop!\" I called out. \"Not yet! I want you inside me.\"\n\nIt took all the strength I had to pull myself off of his fingers and pull him to face me in the middle of the tub. I wrapped my arms around his neck and kissed him hard, my tongue wrestling with his. My right leg wrapped around his waist and I lifted myself onto my toes.\n\nDaniel's strong hands cupped my ass, lifting and spreading me so my other foot left the floor and I clung to Daniel's torso, his uncut dick unseen but felt like some kind of angelic presence just below my waiting and ready hole.\n\nMy eyes went white when I slid myself down his body and felt his cock press into me, open and waiting and ready from his fingering. Quietly, I felt him begin to take up space inside me, pushing out my breath, pushing out my confusion. Inch after glorious inch of his thick tool pushed inside me, or I sank into him. I couldn't tell. It didn't matter.\n\nI moaned through my kisses, groaned as I sank onto his hips and felt him throbbing. \n\n\"You're going to cum in me at least once tonight, you understand?\" I breathed, my forehead pressed to his, his dark hair around my fingers.\n\nDaniel nodded and bit at my lower lip.\n\n\"Make me forget summer,\" I begged him. \"Make me forget College and leaving and Amy and life. Make me forget.\"\n\nDaniel deftly unwound my arms from around his neck and pulled them to my sides, straight out. He moved his palm to the middle of my chest and gently pushed my torso back towards the water.\n\nHis hands slid down my back as I reclined, unsure where the surface of the water was but knowing it was near. His fingers pressed into my hips, keeping me steady until I felt my back sink beneath the surface.\n\nI let myself fall into the heat of the water, slowly, until I floated, legs around Daniel's waist, his cock still throbbing inside me. The world went strangely silent. The sounds of gurgling water and the feel of heat were all I could recognize.\n\nIn that bubbling haze, I gazed up at Daniel: his massive chest heaved, dusted with dark hair, his nipples hard and tight mounds on his flesh. His brown eyes looked down at me with so much love visible in their depths that I wanted to cry. The clear sky and millions of stars made it seem like he, too, floated in the distance. Like we were two ancient gods, one of sky and one of sea, coming together.\n\nSlowly and gently so as to not knock me around I felt him begin to thrust into me. I watched the stars shake and tremble as each pull and push of him inside me made the world perfect.\n\nFloating in the watery silence he made love to me for what seemed like an eternity. I didn't even touch my cock, bouncing on my stomach as he pushed himself inside deeper and deeper, probing my soul. My eyes rolled back and forth, watching the heavens as he tweaked and prodded my body. It was strange to feel so whole and so disconnected at the same time. My soul wandered free around the night sky, exploring the stars, but feeling each and every twinge that Daniel masterfully conducted upon my flesh. Each note he hit inside me, sent my being farther out into the distance until there was no summer, no college, no Amy. Nothing there but me and the stars and Daniel.\n\nI didn't have a voice there. I guess I didn't need one.\n\nDaniel could tell everything, read my body like his favorite novel.\n\nI felt him swelling inside me, felt the heat rising from myself. I knew I was getting close.\n\nWith a blast, his first shot poured into me. Like a rocket in reverse I shot back down to earth in a second. I pulled myself up from the water and grabbed his neck as the second and third shot of his hot cum filled me.\n\n\"Ohhhh, god yes!\" I cried.\n\nMy cock, pressed to his chest as he pumped more and more of his seed into me, began to spew my own load. It mixed with his chest hair, beading there until his chest looked like some poor imitation of the night sky that surrounded us. White on black.\n\nI lost count of how many streams he unloaded into me or how many I painted onto his tanned olive skin. \n\nI pushed my lips to his and pressed every feeling I had into him. My thanks for doing what I needed, always knowing what I needed, for being him, for loving me, for everything. \n\nI honestly don't remember getting out of the hot tub. I don't remember most of the next several minutes. But we did get out and grabbed two large towels from the chest against the pool house. Daniel wrapped me in the long fabric and then told me to wait here and he would be right back.\n\nI stared at the sky for a bit while he was gone. Well, after I watched his perfect ass and muscled broad back go into the house. \n\nWhat's the old saying? Hate to see you leave but love to watch you go? Apt. \n\nWhen he returned he had two throw pillows I recognized from one of the couches inside and a large white sheet.\n\n\"Follow me,\" he said jerking his head towards the lake, the pile of pillows and fabric nearly obscuring his splendid nakedness.\n\n\"Where are we going? One of these days you are going to tell me to follow you somewhere super creepy for a secret fuck and it's gonna get both of us in trouble.\"\n\nDaniel laughed.\n\n\"Quit yer bitchin' and follow me.\"\n\nI watched his ass again as he walked in front of me and lead me around the pool house and down to the shore of the lake. We had to step over some pinecones and such in our bare feet, but Daniel lead us safely to a grassy spot by the shore where two large trees stood about 3 yards apart. A pristine white hammock floated serenely between them, half over the grass and half with the lake gently lapping at the shore beneath. \n\n\"Okay, so it's not creepy. This time anyway.\"\n\nDaniel tossed the pillows and the sheet onto the hammock and climbed in. He reached out his hand for me to join when he'd arranged the pillows and such.\n\nThe rope swing was a little weird to get used to on my naked flesh as I not so gracefully crawled into the contraption and stretched myself out along side him. But eventually it was done and Daniel settled the white sheet over us.\n\nI laid my head on his chest and listened to his heart beat steadily and the sounds gentle sound of the lake beneath us.\n\n\"We'll be alright you know,\" Daniel said, looking into the tree tops above us.\n\nI sighed. \n\nHow could he know that?\n\n\"But, what if when,..\" I started.\n\n\"We'll be alright.\"\n\n\"I'm just supposed to take your word for it, then, am I?\" \n\nI didn't mean for it to sound so pointed and mean-spirited. I had a tendency to get sarcastic when I was emotional.\n\n\"Yes.\" Daniel replied firmly. \"You are.\"\n\nI adjusted my head on his chest and let the silence regain its' comfort. How could he know we would be alright? I was going to a school several hours away from him in three months. Who knows what lay ahead of us? And how many people do you know who are still with the same people they were with in High School? Much less still happy with the same person.\n\nThere was just so much against us. So much...well, life, that piled up in our way. It seemed like I had climbed the mountain of HighSchool, found my guide in Daniel, and now we had reached the summit only to peer over the top and realize we were only on the first hill of the Himalayas and we'd barely made base camp. \n\nDaunting didn't begin to describe it.\n\nBut how was he so sure, so adamant, that we would be fine? Did he not see everything that awaited us in the future? Or did he simply love me enough to just not care about any of that? A growing part of me clung to that last thought like a life preserver. Maybe he did love me enough to not care about the obstacles ahead. If I could just find a way to hang onto that, to rely on his love for me and truly put my faith in that, then maybe he would be proven right and we would be okay. \n\nMaybe.\n\n\"Adam?\" I suddenly asked and felt Daniel sigh beneath me when I did.\n\n\"And Amy?\" he replied.\n\n\"What the hell was that all about?\"\n\n\"Damned if I know.\" He snuggled against me. \"But we have three months to figure it out. At least three months.\"\n\n\"Mmhmm.\"\n\nDaniel's fingers began to stroke my hair as we lay there in silence for a little while.\n\n\"You know how I know we will be alright?\" he asked suddenly after a bit.\n\nI shook my head.\n\n\"Look there.\" He pointed to the wide arch of sky visible to our right. \"You know the names of those stars better than I do, I'm sure, but right there, every night, is the North Star.\"\n\n\"Polaris,\" I said cheekily. Daniel snorted a little laugh.\n\n\"Polaris. Every night it's in the same place, brightest of all of them. Even if you have no idea where you are, you can always find that one star no matter what.\"\n\n\"Unless it's cloudy.\"\n\nDaniel elbowed me in the ribs.\n\n\"Fine. Fine. Yes, you can see it every night.\"\n\n\"That's you. To me. I can always find you. I know right where you will be every night. My own little Polaris. You found me in Boston, lead me through the last few months at school. You never wavered an inch. Always right where I expected you to be. That's how I know we will be okay. Because the North Star never changes.\"\n\nI appreciated the sentiment. I truly did. \n\n\"But we're headed into a storm of change and sometimes that blocks out even the North Star.\"\n\n\"The North Star never changes. And Storms always pass. It's still right there.\"\n\nI sighed and snuggled into him again.\n\n\"It's always right there. And storms pass,\" I murmured.\n\nMy life preserver, Daniel's unwavering love for me, got a little bit stronger and I floated a little higher in the waves. Perhaps we would be alright.\n\nStorms pass. \n\nI was his North Star. \n\nAnd he would be my Polaris."
    ],
    "authorname": "DAMackey",
    "tags": [
        "bareback",
        "cum",
        "jock",
        "twink",
        "nerd",
        "highschool",
        "top",
        "bottom",
        "muscle",
        "love"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/speech-and-debate-pt-15b"
}