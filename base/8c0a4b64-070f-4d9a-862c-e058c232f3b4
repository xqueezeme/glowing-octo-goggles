{
    "title": "Cory & Max Ch. 02",
    "pages": [
        "(These chapters will pick up right where the last left off, I recommend reading in order)\n\n*\n\nIn the week that followed, several things happened to sweeten an already sweet deal. The first involved me immediately taking Max up on her morning yoga offer, which meant I was now starting each day seeing Max's tight little body in a sports bra and spandex shorts. As much as I looked forward to that view each morning, my favorite part of our daily yoga practice was definitely the moments in which she would break her pose to come adjust my posture. I had taken to practicing shirtless, and just feeling her hands on my naked torso was enough to get my heart racing.\n\nThe second thing that happened was thanks to some poor planning when this building was converted into a living space. Max's bathroom was originally a small fourth bedroom or an office, and had been somewhat sloppily reimagined as a bathroom. It was quite spacious but poorly laid out. It was always a project that I figured I would someday turn my attention to, but now with it in constant use, the time had come. I met with a contractor, drew up some plans, and renovation would begin the very next day. The quick start was due, in part, to the length of the project: one week. Normally, having part of your living space uprooted for a week is a nuisance. For me, it was an opportunity. For that week, Max would be sharing my bathroom, and entering and exiting that space through my bedroom. I could only hope that this would lead to more sneak peeks.\n\nWhile my home life was overcome by my recent tendency to behave like an undersexed, overhorny teenager, my life in town went on as to be expected. The theater was hosting auditions for our annual holiday performance while also preparing for the town's first film festival. I was partnering with the high school's film class as well as the film program from an arts-focused college about 45 minutes away to showcase student work while also accepting submissions from filmmakers within a 50 mile radius. Around town, several of the local businesses were working together to prepare for the upcoming Fall Festival, a tradition dating back decades.\n\nThe Fall Festival is what kept me out a bit late one evening, as I sat at a table with several notable folks from town. Jimmy and his wife, Brianne, were there to my left. From the moment I first walked into the Lonely Hearts Club, I've always been amused by them. Brianne is about 5'6\" with long, blond hair and striking blue eyes with a body that seemed perfectly suited for modeling swimwear. Brianne was not a model, instead she was an incredibly brilliant lawyer. Her stunning good looks were clearly passed on to her two daughters, who were both spitting images of their mother, albeit taller. The tall genes seem to be the only thing Sadie and Prudence got from their father, who at six feet tall was just a couple of inches shorter than me. Jimmy, with has dad bod and Hulk Hogan mustache is not the guy you'd picture with Brianne upon seeing them. But spend five minutes in their company and you couldn't imagine them with anyone else.\n\nJoining us at the table were Malcolm Ford, owner of Ford's Fitness down the street from the theater and his husband Brenden, the executive chef over at Kitchenette, easily the nicest restaurant in town. Brenden traveled the world honing his culinary skills before coming back to partner with Lane Vernon on reopening the then-shuttered restaurant as a top dining destination. While studying in Colmar, Brenden met Malcolm, who was a statuesque footballer wrapping up his final European club season before returning to his native Haiti in hopes of getting the team to qualify for the World Cup for the first time since 1974. I maintain that had he not met Brenden and moved stateside, he would have given the team the best chance they've had in decades.\n\nAcross from the Fords sat Sara Jacobs who, at 70 and with 9 grandchildren, still made it into her diner every morning to whip up a special pie of the day. I wouldn't be surprised if the person who wrote Waitress found themselves at Sara's counter inspired by whatever magical pie she had crafted that day. Next to Sara were LaToya Opare, owner of the market and Claire Clement, who was new in town from Quebec, and planning to open a bakery, much to my delight.\n\nHeading the table was Casey Greenberg. Casey was just a few years older than me, in her very early 30s. She had long, chestnut brown hair that fell wildly to her shoulders where it met a midriff-baring tank top adorned with the logo for the band Garbage. The tank top allowed me to take in the sight of her belly button ring as well as the tattoos that were scattered about her arms, my favorite of which featured a very well-colored and detailed topless mermaid fiercely branding a trident or, more accurately, an octodent as her staff featured a fiery menorah at the end. You would not be surprised to find out that this woman is the owner of the Vinyl Verdict record shop, but even in our progressive little town, you may be surprised to find out that she's the mayor.\n\nOur discussion that evening mostly centered on developing a Fall Festival program that appealed to a younger demographic in an effort to retain some of our best and brightest. Over the years, we've had some amazing kids graduate from our high school or attend the nearby college, but then take their talents elsewhere. Our little coalition had made it our goal to ensure that everything that happens in this town is at least in some part dedicated to student retention.\n\nI walked home with a spring in my step. I always left these meetings feeling energized and hopeful, which is not usually the case with most meetings one might attend. I climbed the stairs to my flat, tossing ideas around in my head about how to best leverage the theater to meet our goals. I opened the door to a once familiar but now strange sight: a dark, empty house.\n\nIn the past four weeks I had quickly and happily adjusted to life with a roommate, and I looked forward to seeing Max at the end of my day. While we live our own lives and this is to be expected, this was the first time I had come home to an empty house since she ran into me on the street on that hot August day. \n\nThough a month had passed since that day, it was still quite hot, even in mid-September, and I figured I'd grab a quick, cool down shower before Max got home. I was trying to be as respectful as possible with bathroom sharing and did my best to keep the bathroom available when we were both home. Though I had come to miss soaking in my sizeable tub after a long day, I figured I could go a week without that particular form of pampering.\n\nSharing the bathroom definitely came with its perks. I had already been treated to the sight of Max, her red hair darkened by wetness and clinging to her back as she clutched a towel at her breasts. Her shoulders and the tops of her cute little boobs were dotted with the same freckles that disappeared into the scrunches of her nose when she laughed. I found myself daydreaming about how far down those freckles went as I disrobed in my room, lit only from the moon outside my window.\n\nEarlier that morning I got a particularly exciting treat as I had overslept, and Max ducked into the shower while I was still asleep. The sound of the water shutting off is what finally stirred me, and I glance through a half open eyelid to the bathroom and saw something I had been dying to see for the last four weeks. Well, longer than that if you go back to our college days. I looked through the closet to the bathroom and I saw Max wrapping her hair up in a towel, fully nude. Her back was to me, but I was still treated to an incredible sight.\n\nHer legs were thin yet toned, owed to her yoga practice and years as a swimmer. Max's back was a sight to behold, just as toned as her legs and as freckled as her face. Her legs and back met in stunning fashion, culminating in what was by far the single most perfect ass I had ever seen. Her butt was tight and toned like the rest of her, but you could still see a pleasant amount of cushion that dipped down just the right amount. It was behind wanting to grab a hold of her and squeeze her cute little peach, I wanted a bite.\n\nShe slipped on a robe, ending my show, and collected her things. I feigned sleep as she sashayed by, catching the quickest glimpse of her poky nipple standing tall against the damp, clingy fabric of her summery robe. By the time I heard her reach her room, my hand had reached my cock.\n\nMy cock now began rising to the occasion once more as I daydreamed about that morning's show. It bobbed and nodded as I strolled naked into the bathroom, smiling as I remembered that gorgeous ass that stood here just hours before.\n\n\"Oh, HELLO!\"\n\nI nearly jumped out of my skin. Max was in the tub at the back of the shower stall, luxuriating in the bath that I had forgone for the week. She had a few candles lit along the ledge and between that and the moonlight, clearly didn't see the need to turn on the light. Of course, she had opted for bubble bath, once again obstructing my view of what had quickly become my holy grail. That said, she had clearly been in the bath for quite some time as the bubbles were only just barely concealing her more intimate areas.\n\n\"Fuck! I'm sorry, I had no idea you were home,\" I sputtered out as I snatched a towel from the rack.\n\n\"No, it's cool, I'm sorry for staring,\" she apologized, moving to the edge of the tub and leaning forward in such a way that her breasts were out of the water but still hidden by the side of the tub.\n\n\"It's fine, I...\" Wait, what? Staring? Did she just say she was staring?\n\n\"You...\" she trailed off.\n\n\"Huh?\"\n\n\"You said, it's fine, I - and then you stopped talking,\" she pointed out.\n\n\"Ah, yeah, sorry,\" I blushed, \"I was daydreaming a bit and totally didn't notice you were there.\"\n\n\"In your defense, I was taking a bath in your bathtub in the dark.\"\n\n\"Touche.\"\n\n\"Listen, give me a sec and it's all yours,\" she began as she sank back into the tub and yanked out the drain stopper, \"I'm getting all pruny and should get out anyway. Just turn around for a sec while I get out.\"\n\nI turned, making it about three quarters of the way around when the splashy sounds of her standing up in the tub froze me in place. I strained my eye as far to the side as possible, desperately hoping that she'd slip into my periphery. Unfortunately, the splashing sounds had waned and I gave up on catching a flash.\n\n\"Look alive, daydreamer!\" Max yelled from much closer than expected. Before I could turn, I felt her hand at my waist, tearing off my towel. I quickly grabbed it from the floor and brought it back to cover by half-masted dick as I looked up and saw that glorious butt bouncing away from me as Max streaked out of my room and down the hall to hers, cackling all the way.\n\n---\n\nThe following night, we had Malcolm and Brenden over, along with our friends Raul and Kareena Gonzalez. Originally from El Paso, Raul teaches Spanish at the high school and coaches the football team, having played in college and one year in the CFL before taking a teaching job here. One look at his stocky frame and you could easily imagine him sweeping past the line to maul some poor, unsuspecting quarterback. Kareena moved here from India when she was in fourth grade, growing up in the city nearby before meeting Raul and moving here when they married. She is my theater manager, a role she has served very well for just over a year, and more than once in that year she has been mistaken for Bollywood star Alia Bhatt. The six of us had gathered that evening to unwind over dinner and a few drinks. \n\n\"Hey Bren, where's Lane been hiding?\" I asked. \"I feel like I haven't seen them in awhile?\"\n\n\"Yeah, they've been scouting locations for a new restaurant in the city,\" Brenden replied,\n\n\"Oh, brilliant!\" Kareena perked up, \"I'd always hoped you two would add another!\"\n\n\"I've had to double the gym time to make up for all of the test meals,\" Malcolm chuckled.\n\n\"Speaking of which, that meal was absolutely stellar,\" Max chimed in, leading us in a round of applause for our talented chef.\n\n\"Merci, merci,\" Brenden bowed.\n\n\"Oh honey, your French accent is not so good,\" Malcolm laughed.\n\n\"It's not my fault! Six months in Montreal, nine in Paris, followed by four years with a Haitian? I have most of the French accents in existence!\" Brenden lamented,\n\n\"And yet,\" Malcolm joked, \"None of them at all.\"\n\nEveryone laughed, even Brenden after a briefest flirtation with mock indignation.\n\n\"Shall we then?\" Raul asked.\n\n\"Shall we what?\" Max asked.\n\n\"We usually fill the time between dinner and dessert with some Cards Against Humanity,\" I explained.\n\n\"Yes, let's!\" Kareena replied, uncoiling her legs from beneath her and rising from the sofa to fetch the cards.\n\nWe played a few hands with some real winners like \"This is the prime of my life. I'm young hot and full of Daddy Issues\" and \"What's fun until it gets real? Incest.\" After a while, Kareena spoke up again.\n\n\"Explainer!\"\n\n\"Yes?\" I replied.\n\n\"What's this one mean?\" she held her card out for me to see.\n\n\"Dick cheese,\" I promptly answered.\n\n\"Gross. Thanks,\" Kareena added the card to her hand.\n\n\"Explainer?\" Max arched an eyebrow with a side glance in my direction.\n\n\"Cory explains the cards we don't know to us,\" Malcolm responded, continuing \"particularly for us non-Native English speakers.\"\n\n\"Why does it have to be Cory?\" Max asked.\n\n\"Because he weirdly knows what all of this shit means,\" Brenden replied.\n\n\"Oh yeah?\" Max turned back to me, I think she may have been impressed. \"And how is that?\"\n\n\"Experience,\" everyone replied in unison, I couldn't help but crack up.\n\n\"We rarely ever get details,\" Brenden started.\n\n\"But it sure seems like he's done a lot of shit,\" Raul finished.\n\n\"It's almost as though he's used this deck of cards as a checklist,\" Kareena mused.\n\n\"Cory! You big slut, good for you!\" Max punched me on the arm mocking a favorite internet video from college.\n\nThe game continued for a few more rounds before we retired to the dining room for some brownies, discussing our hopes for the new bakery that would be opening up. Shortly after dessert, Raul and Kareena headed for home followed shortly thereafter by Malcolm and Brenden. Max and I teamed up on the dishes, with me washing and Max drying and putting away.\n\n\"Well, Mr. Explainer, you have got some serious explaining to do,\" Max nudged me as she dried a plate.\n\n\"Is that so, Miss Inquisitive?\" I retorted.\n\n\"You can be coy with your pals here,\" Max began, \"But we go back and I want to know how you crammed all of this experience into the past six years.\"\n\n\"Who says it all happened in the past six years?\" This genuinely caught her off guard.\n\n\"You struck me as pretty vanilla at KSU,\" she replied, not hiding her eagerness to learn more very well at all.\n\n\"Well then, I suppose I did a good job keeping my private life private, didn't I?\" I answered with a coy smile.\n\n\"Oh, we are done with the dishes, follow me, sparky.\" Max handed me a towel and dragged me by the wrist to the couch and gently pushed me down. She grabbed the box of cards from the coffee table and sat down facing me, her legs crossed. \"I'm going to pull a card from this box and you're going to tell me your experience with said card.\"\n\n\"Fine,\" I agreed, adding \"but you can only ask about cards you also have experience with as well, and I get a story too!\"\n\nMax gave me a long look, scrutinizing my face for a moment as she made up her mind.\n\n\"Deal.\" And with that, she began rifling through the deck. After a few moments, she settled on a card.\n\n\"A vibrating cock ring?\" Max asked.\n\n\"Yep. This girl Melissa I dated before I transferred to Kennison wanted me to give it a go. It felt good, but I came way too fast. You?\"\n\n\"Oh, much worse for me,\" Max exhaled. \"I went back to this guy's room after a party freshman year and he wanted to show off how adventurous he was. He dropped trow and had it on his dick before I even removed a stitch. I decided to go with it and give him a little striptease.\" Max paused.\n\n\"And?\"\n\n\"And he came on my butt before I even got my panties all the way off,\" she laughed.\n\n\"Haha oh my god, that sucks! What did you do?\" I asked.\n\n\"I peaced out and walked home with cum on my butt,\" Max howled.\n\nI was cracking up, but was also secretly jealous of that poor dude. At least he got a close look at her butt. I also wouldn't mind seeing my cum sliding over the curve of her ass. Max pulled out another card before I could drift to far into that particular fantasy.\n\n\"Emma Watson.\"\n\n\"Fuck, I wish,\" I lamented.\n\n\"Yeah, you and me both,\" Max agreed. The thought of those two was going to fester for sure.\n\n\"Let's see, how about getting naked and watching Nickelodeon?\" she asked.\n\n\"Um, yeah, actually. Remember that girl Chrissy I dated at KSU?\" She nodded, so I continued. \"We definitely watched Nickelodeon in various states of undress.\"\n\n\"Oh yeah? Any shows in particular?\" Max asked nonchalantly.\n\n\"I definitely remember the cartoons, Rugrats comes to mind,\" I answered, then turning the tables, \"And you?\"\n\n\"I had a sleepover in high school and I distinctly remember All That being on in the background as we changed,\" she answered.\n\n\"There's got to be more to that,\" I demanded.\n\n\"Why?\"\n\n\"Why on earth would you remember that otherwise?\"\n\n\"Ok, you got me,\" Max took a deep breath. \"Jenny and Clarissa were by two best friends growing up, and we were always looking for ways to safely get into trouble. We were undressing during All That because we were playing Strip Poker, and we all ended up naked.\"\n\n\"Hot.\"\n\nMax laughed, brushing of my comment and going back to the box. She seemed to grow frustrated with each passing card.\n\n\"What's wrong?\" I asked.\n\n\"These cards are mostly just weird, I thought there was a lot more sex in this game. I want something juicy.\" She flipped through a few more cards before one met her criteria. \"Ok, Mr. Explainer, tell me about your experience with butt stuff.\"\n\n\"Ok. So when I first moved out here, I hit it off with a coworker, Alicia. We never officially dated, but would go out for drinks here and there and one thing led to another and I ended up at her place one night. We were fooling around, and I ended up going down on her and she came hard and fast, and she was a bit of a squirter. After she came, she began rubbing herself with my dick, and she told me she wanted to feel me in her butt.\"\n\n\"Damn, go ahead Cory!\" Max high fived me.\n\n\"Oh, there's more. After a little while, she couldn't take anymore and suggested an alternate means for finishing me off.\"\n\n\"Oh yeah? What was that?\" Max leaned in, eager for my response, and the neckline of her tee shirt hung open, giving me a partial view of the light blue bra that held her perky little tits in place.\n\n\"She said she wanted to 'return the favor,' so she blew me while fingering my asshole until I came in her mouth.\"\n\n\"Dddaaammmnnn...double butt stuff! Good story,\" Max complimented.\n\n\"What's your butt stuff tale, and yes that pun was very intended,\" I replied. Max giggled, but I was insistent on hearing more. Recalling that night while seeing a hint of what was hidden beneath Max's shirt had me getting a little horny.\n\n\"Well, aside from that aforementioned stud cumming on my bare ass,\" she laughed. \"I dated this dude Joe in college who was really into anal. I'm pretty sure he put it in my butt more than he ever did in my pussy.\"\n\n\"You didn't get tired of it? Alicia could never take it too long.\"\n\n\"Nah, he had a pretty small dick, so it was pretty manageable.\"\n\n\"Makes sense.\"\n\n\"I got a glimpse of what Alicia was taking yesterday, and I don't think my little butt could take too much of that either,\" Max playfully jabbed. I smiled. Either she was being generous to my six inch cock or Joe really wasn't working with a lot. Max seemed to read my mind.",
        "\"About as thick as your thumb and as long as your middle finger, if you were doing the dick math,\" she offered.\n\nWe laughed. The term \"dick math\" had helped eased the growing sexual tension that was evident in the space between us on the sofa. \n\n\"Ok, Miss Inquisitive, I'll grant you one more. I can't give away all of my secrets in one night,\" I said.\n\n\"Oh, there will be other nights,\" she proclaimed. Max blushed, realizing how that came across but choosing to select a new card rather than address it. \"Ok, last card for tonight. Getting naked in public.\"\n\n\"Hmmm...let me think,\" I stalled.\n\n\"Is it that hard to remember whether or not you got naked in public?\" Max asked.\n\n\"Nah, just trying to decide which story to share,\" I immediately retorted.\n\n\"Ooohhh, sounds like we have an exhibitionist in the house!\" Max exclaimed.\n\n\"Says the girl who just last night snatched my towel and streaked down the hallway.\"\n\n\"Fair point. Ok, how about this. Give me the first time and the most memorable time.\"\n\n\"Ok. First time was freshman year at Hartley, I was debating on whether or not to do the annual naked run when I overheard a cute girl from my dorm saying she was definitely doing it. I decided that seeing her naked would be worth it, and we ended up running a good chunk of the run together. And that, actually, was the way I met Melissa, the girl from the cock ring story. She was the girl I overheard.\"\n\n\"Haha, such a classy way to meet the ladies. So what was the most memorable time?\"\n\n\"Ok, so after we graduated high school, we had this big party over the summer at a friend's parent's beach house. People were being pretty stupid, drinking like the inexperienced teenagers they were, playing truth or dare, strip poker, and all of the typical stuff you would expect of a bunch of idiot teens.\" I continued, \"My friend Beth was obviously not having a good time, and I went to see what was up. She was pissed that all the dudes were ogling this one girl Marcy who was down to her bra. Marcy had huge boobs, and Beth had tiny tits and was feeling some type of way about it.\"\n\n\"I know the feeling,\" Max concurred, cupping her breasts and saying \"the girls can sometimes feel a bit overlooked.\"\n\n\"Well,\" I said, swallowing and trying not to trip over my words as I watched Max let go of her breasts after a final squeeze, \"I basically told her not to worry about the drooling dudes at the table and went on to say that plenty of guys like all types of boobs, and that some even prefer small boobs. I then outed myself as a proud supporting member of the Itty Bitty Titty Committee, told her I thought she was smoking hot, and we started making out.\"\n\n\"Well played, sir, and as a member of the IBTC, we thank you for your support.\"\n\n\"Always. Anyway, one thing led to another, and being very horny and slightly drunk teenagers, we started getting a little handsy. Next thing I know, I'm on my knees sucking her nipples as she's pulling my shirt off. I ended up picking her up and carrying her to the deck and laying her on one of those lounge chairs. As soon as I put her down, she was pulling my cock out and started going down on me. After a couple of minutes, we were both naked and we ended up fucking right there on the deck.\"\n\n\"Shit, son! How many people caught that show?\" Max asked, impressed.\n\n\"I'm honestly not sure, I was pretty well focused on Beth. There were definitely some people from the party watching, I even got a few ass slaps of encouragement along the way. I ended up pulling out and cumming on her sexy little tits, and then, being the gentlemanly exhibitionist I am, I ate her pussy until she came.\"\n\nI looked over at Max. Her face was flush and she was breathing a little heavy, and she was absent-mindedly tracing her fingernail along her left inner thigh.\n\n\"Your turn. I wanna hear your public nudity fun,\" I said huskily, failing to hide the obvious lust in my delivery.\n\n\"First time was another sleepover with Jenny and Clarissa,\" Max began, \"Our little attempts at getting into small amounts of trouble were growing. We were sleeping over at Jenny's, and her house backed up to our school's track. At this point, it was becoming a regular occurrence that we would end up naked at these sleepovers, and it had happened pretty immediately at this one. We were getting bored just sitting around, when I dared Clarissa to go outside in the buff. After a little bit of \"no, you do it' and the like, it somehow morphed into all of us walking a lap around the track, butt ass naked.\"\n\nMax shifted in her seat and reached up her shorts to adjust her panties. My cock twitched, straining against the compression of my boxer briefs.\n\n\"It was so fucking hot. I was in the middle, holding their hands as we walked. By the time we got back in the house and up to her room, I was so fucking turned on that Clarissa actually pointed out the wetness on my legs. I had every intention of taking a quick shower to get off, but they convinced me to stay. I ended up rubbing one out right in front of them. I came so hard, and they eventually followed suit. It was easily one of the hottest experiences I had ever had at that point.\"\n\n\"Holy fuck.\" I gaped as I tried to adjust my underwear.\n\n\"Having a tough time in there?\" Max asked, nodding her head toward my crotch.\n\n\"It was a good fucking story,\" I replied, not bothering to hide my arousal.\n\n\"I still have one more, maybe you should give him a little fresh air for this last one,\" Max challenged. I decided to call her bluff. I shrugged, stood up, and pulled my shorts and underwear off in one motion. My erect cock sprang up and then stood straight out in front of me. Max drew in a long breath as she got a close lock at my erection, which grew to its full length, no longer constrained by boxers.\n\n\"You should feel free to make yourself comfortable too, you know,\" I offered.\n\nMax stood up and pulled her tee shirt over her head. Her piercing blue eyes never parting from mine, she unbuttoned her shorts and let them fall to her feet. Her small breasts heaved in her light blue bra, which she slowly unhooked and let flutter to the floor. Her rosy pink nipples stood at full attention, capping off her pale freckled breasts. I pulled my shirt off, standing completely naked in front of her. Max hooked her thumbs into the waistband of her hot pink panties, and slid them down. The crotch of her panties held on for a split second, and then followed the rest of the garment down, taking a strand of moisture from her wet slit with it. Max took a deep breath.\n\n\"I'm going to tell you this story. I'm going to rub my pussy and get off watching you jerk off that beautiful cock of yours. But that's it, ok?\"\n\nI drank in every detail of her naked form, from her reddish hair to her delectable little tits, to her flat tummy, to the wisps of red and brown hairs around her soaking pussy. My hand automatically moved to my cock as we sat back down on the sofa, a little closer than before.\n\n\"That's more than ok,\" I replied. Max smiled, and let her hand fall to her crotch, dipping her middle finger in her wetness and dragging it up to her clit, which she began rubbing as she started her story.\n\n\"So, as you may have guessed, after that night with Jenny and Clarissa, I discovered that being naked outdoors was a serious turn on. The idea that someone might see something they're not supposed to gets me so wound up. There were a few more times before I went off to college that we'd find excuses to be naked, be it skinny dipping or sunbathing in the nude. Each time would end with us retreating somewhere to masturbate. We all liked it, but I definitely liked it the most.\"\n\nMax's breathing quickened, as did her fingers on her love button. As she sped up and slid a couple fingers into her vagina, I loosened my grip and started to slow down. I wanted this to last.\n\n\"So when I got to college, I was more than eager to not only do it again, but amp it up a notch. By that point, our most daring escapade was diddling ourselves on a secluded beach. Now I was away at school, on my own, horny as hell, and not finding satisfaction. This would be about the time of the cock ring misfortune. So needless to say, I was ready to go.\"\n\nMax let out a soft, low groan, closing her eyes as she hit a good spot. She slowed her pace, and took a deep breath, seemingly trying to pair her climax with the climax of the story. I was doing the same, giving my dick a couple of quick tugs here in there to keep it in the game but avoiding spilling my seed before I was ready.\n\n\"I ended up volunteering for a sexual health awareness event on the rook deck of the building that the health center was in, remember which one I mean?\" She asked, directly addressing me for the first time since we both began masturbating.\n\n\"Yeah,\" came my breathy reply.\n\n\"Good. Ok, so the event went beyond your basic sex ed/health stuff and ended up being this super sex-positive lecture from this woman who had a PhD in Human Sexuality. Her talk was graphic, detailed, and sexy as hell. I'd bet money on the fact that everyone there either went home and immediately fucked someone or, at the very least, got themselves off.\"\n\n\"So everyone's gone, and I'm stacking chairs with the one other volunteer who hadn't left yet. I heard him say 'Holy Shit' next to me and look over. The chair he was stacking was wet. We were outside but you could still smell the sex. Whichever chick sat in that seat had to have been soaked. I mean fuck, I was soaked. I could literally feel my pussy leaking and my juices dripping down my thighs. I looked at this dude, he was skinny, a bit taller than me, curly blond hair, cute face, and, what was at that moment the most important, hard. I could see his cock pushing against his shorts. He saw me openly staring at his cock and looked down at me, I didn't really get what little tits I have until sophomore year, but he could clearly see the sheen of pussy juice on my legs. I actually saw his cock jump in his pants.\"\n\nMy cock twitched, oozing out precum though I had completely let go of it at this point. Max had picked her pace back up and was getting close. Her tits were rapidly rising and falling with each breath, her nipples looked like they were straining to pull the rest of her closer to me, they were so fucking hard. I could hear her fingers sloshing in and out of her sopping wet slit as she strummed two fingers across her clit. She was so wet that little splashes were coming out and hitting her legs and the sofa. \n\n\"We're almost there, you might want to get back on that,\" she said, staring directly at my throbbing cock and unconsciously licking her lips. I returned my right hand to my cock, and taking a cue from Max, decided to get the left hand involved too. I sucked my middle finger into my mouth and, sitting up on my knees, worked it back toward my ass, finding that magical spot just below my asshole. Max's eyes widened with an insatiable lust as my new position moved my cock inches from her little boobs.\n\n\"I did not know this guy's name, and I didn't ask. I looked him dead in the eye and told him that I needed to be fucked and fucked hard right then and there. As soon as I finished saying that, we began tearing each other's clothes off. He spun me around and bent me over and shoved his cock into me from behind. It was the first of very few times I came without my clit being touched. I came so hard my knees buckled. Luckily he caught me, his cock slipping out and literally dripping from my cum. Ohh fuck.\"\n\nMax tensed up and shuddered a bit. She was breathing so hard that every intake of breath revealed the six pack that was normally mostly hidden by the tiniest of tummies. She gritted her teeth and continued.\n\n\"Shit. This is so good. Ok, ok, ok. He laid me down on one of the tables we hadn't yet broken down, and climbed on top with me. I spread my legs as far as I could and looked up at him and, oh fuck, Cory, oh god. Over his shoulder, I saw people in one of the taller buildings watching. I fucking made eye contact with this chick as he shoved his, ungh oh fuck. As he shoved his cock back in and I swear to fucking god I came again.\"\n\n\"Holy shit this is so fucking hot, Max, you're going to make me cum,\" I warned.\n\n\"Almost. Just...just a few more seconds. I want you to fucking cum with me,\" she growled, taking short heavy breaths. \"I came again, and I was looking in this chick's eyes as I was getting fucked on a fucking folding table on the roof of the fucking health center. So many people were watching, but I kept looking at this chick. I saw her squeeze her legs together and I knew she was getting wet watching me get fucked. Then this dude was starting to...ooohhh...he was...shit. He was about to cum and I was like 'pull out and fucking cum all over me.' I started rubbing my clit like crazy as he jerked his dick and within two...fuck...two fucking seconds we...FFFUUUUCCCKK!!!!\"\n\nMax screamed out as she came, squirting all over my torso and my cock, which I was furiously pumping. Seconds after her juices stopped spraying me, a came so fucking hard. Spurt after spurt shot out of my cock. The first splayed across her face, from her hairline to her chin. The second, third, and fourth coated her little tits, and the last two weakly landed on her thigh and the hand that covered her quivering pussy.\n\nWe both collapsed onto the sofa, our legs intertwined and shaking as little aftershocks tingled through our sweaty bodies. I laid there, catching my breath for a full minute, before I sat up and took stock of the situation.\n\nI was dripping wet, completely soaked from the geyser-like eruption of her orgasm. She was covered in my cum, and licked her lips to get a little taste as I watched. My whole body twitched at that sight, perhaps standing in for my exhausted cock. I smiled.\n\n\"That...that was fucking incredible,\" I panted.\n\n\"Mmmmm...yesss,\" she purred, scooping a glob of my cum from her nipple and licking her finger clean. \"I don't think I can get it all this way, what say you to a shower and getting to bed before the euphoria wears off?\"\n\n\"Sounds brilliant,\" I concurred. I stood, offering her my hand. She took it and I was taken aback by the fact that her fingers were pruny. She was so fucking wet that her fingers were pruny. \n\nHand-in-hand, we gingerly staggered to the bathroom and into the massive shower. I turned on all of the jets and we had what was a pretty uneventful shower considering what we had just experienced. Apart from washing each other's backs, we continued her earlier request of keeping our hands to ourselves. After the shower as we dried off, she came to me and stood on her toes to give me a quick kiss on the cheek.\n\n\"Tonight was amazing, thank you for respecting the boundaries,\" Max stated.\n\n\"Of course,\" I replied, \"Thank you for what was seriously one of the most amazing orgasms of my life.\"\n\n\"Glad to help,\" she smiled. \"I'm sure we'll have plenty to chat about in the morning, but I'm spent. Night Cory.\"\n\n\"Night Max.\"\n\nMy eyes lingered on her cute little ass as she retired to her bedroom. I crawled into bed and before I could even wonder how sleep could possibly come after such an intense, sensual experience, I was out cold."
    ],
    "authorname": "xgrindhousex",
    "tags": [
        "mutual masturbation",
        "masturbation",
        "voyeur",
        "exhibitionism",
        "public sex",
        "group masturbation",
        "games",
        "party"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/cory-and-max-ch-02"
}