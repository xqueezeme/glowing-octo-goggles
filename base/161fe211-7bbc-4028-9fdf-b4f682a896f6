{
    "title": "The Retrieval... Ch. 03",
    "pages": [
        "Author's Note: All I can say is wow - thank y'all so much for all of the wonderful feedback, comments and votes on the first two chapters of this story. I'm really happy that everyone seems to have taken a liking to Jules and Leah...they have been so much fun to write about. I also appreciate your patience -- the writing process does take me a little bit of time to get it right...so with that said, here is the final part of The Retrieval. One quick word of caution - you should probably read 01 &amp; 02 before reading Ch. 03 - things will definitely make more sense if you do. Also keep in mind that this story is a complete work of fiction and everything is from my imagination, so any mistakes or missteps are definitely on me.\n\nAnd of course this story includes sexually explicit material and is intended for adults, so if you are not at least 18 years of age or are offended by sexual material - then this ain't the place for you...for the rest of you, thank you for reading, feel free to comment and give feedback, please remember to vote - and I really hope you enjoy!\n\n****\n\nEverything around her seemed to fade away as Leah gave Jules her full attention.\n\n\"What did you just say?\"\n\n\"I said I love you,\" Jules repeated with a scared look in her eyes. \"So please, just trust me right now, okay?\"\n\n\"You do?\" Leah was dumbfounded.\n\n\"I do,\" Jules nodded and then took a deep breath and leaned her head in closer. \"Please, Leah...if you care for me even just the tiniest little bit, please...close your eyes.\"\n\n\"What?\"\n\n\"Close your eyes...Tight. Please?\"\n\n\"Why?\"\n\n****\n\nShe was somewhere. Where?\n\nIt felt far away...but she wanted to wake up...\n\nWake up...WAKE UP! But her eyes felt so very heavy.\n\nShe also wanted to move...but her limbs felt weighted down.\n\nShe was quite sure she had to be lying in thick mud...or quicksand maybe?\n\nIt felt heavy...so tired...maybe she would rest for a while.\n\nBut wait...she smelled vegetation.\n\nWas she in the jungle?\n\nNot just vegetation, but floral...yeah, definitely flowers.\n\nThere were other smells...and sounds.\n\nThere was no mistaking that pungent odor of antiseptic.\n\nShe heard sounds...and she could feel things.\n\nA continuous tone like insects.\n\nCicadas? No, cicadas don't beep...do they?\n\nNo...they don't. And that sound is beeping...definitely a soft beeping.\n\nVoices? Hmmm...not sure if those were real or in her head.\n\nShe concentrated. Sheets.\n\nKind of scratchy...but they felt cool on her skin.\n\nThere was also pressure...on her fingers.\n\nIt felt like...yeah...someone was holding her hand.\n\nShe really hoped it was Jules.\n\n****\n\n\"Jules,\" Leah whined. \"I'm not sick.\"\n\n\"I know,\" Jules agreed as she walked past on her way to bringing in two more bulging bags of groceries. She set them on the kitchen island and immediately about-faced back towards the front door.\n\n\"Then stop treating me like I'm made of glass,\" Leah grumped at the redhead's back as she disappeared out the front door.\n\nJules reappeared in the doorway with two more plastic bags in hand. She gave the two serious looking security guards stationed outside a polite smile and kicked the door shut behind her with her foot. She was about to make the final trek to unload the last of the groceries in the kitchen when she noticed Leah was sitting up on the couch with her arms crossed and a scowl on her face. Jules blew a strand of auburn hair off of her forehead and set the bags down on the coffee table. She stood there with her hands on her hips for a moment before taking a seat next to the blonde amid the mountain of pillows and bunched up blankets.\n\n\"Leah?\" Jules asked patiently. \"Do we really have to have this conversation again?\"\n\n\"I feel perfectly fine,\" Leah replied with exasperation.\n\n\"I know you do,\" Jules smiled and scooted closer. She ran her hand up and down Leah's back and her eyes shined with affection. \"But remember what the doctor said? Forty-eight hours of complete bed rest.\"\n\nLeah sighed dramatically and rolled her eyes before toppling over so that she was half-buried in the pillows and blankets. Her muffled voice replied, \"Just to make sure...I know.\"\n\n\"It's only one more day,\" Jules encouraged her. \"Twenty-four more hours and you've got your official doctor's release.\"\n\n\"It's actually eighteen hours and thirty seven minutes,\" the muffled voice corrected.\n\n\"Okay,\" Jules laughed softly. \"I stand corrected. Now what can I make you for lunch?\"\n\nLeah suddenly sprang back up from the pillows and grabbed Jules pulling her into an embrace. She brought their faces close together and began lightly planting kisses all around the redhead's mouth as she replied, \"I (kiss)...want (kiss)...you (kiss)...with (kiss)...extra (kiss)...sprinkles (kiss).\"\n\n\"That is definitely on the menu,\" Jules grinned, but then reluctantly extricated herself from Leah's arms and stood up to elude the blonde's reach. \"In eighteen hours and thirty seven minutes.\"\n\n\"Arrgghhh!\" Leah dramatically growled and flopped back over into her little pillow and blanket lair. After a pause, her muffled voice announced, \"I hate modern medicine.\"\n\nJules shook her head with a grin and grabbed the remaining bags of groceries from the coffee table. As she headed towards the kitchen the muffled voice called out after her with the correction.\n\n\"And it's now eighteen hours and thirty one minutes!\"\n\n****\n\nIt was getting late.\n\nWell...late was a matter of perspective. For most people it was early evening, but it was already thirty minutes past the Congressman's usual dinner time. The Congressman and his driver had been sitting and waiting for twice that long. The old man liked his routine and hated being kept waiting. His irritation grew as they continued to watch the man dressed in sweats slowly amble down the sidewalk like he was in no particular hurry. The politician sighed as the man kept letting the dog run its leash out to sniff this and sniff that along the way.\n\nThe man walking the small dog was an employee of the Department of Homeland Security...that was the only thing the Senator knew about him and that was intentional. On the flipside, the only thing the DHS employee knew was that the man he had agreed to meet worked for the government. Of course that was all he would ever know as well. Operational security was paramount when handling The Council's business. It made perfect sense that if a resource literally didn't know another person's identity then he couldn't be compromised or forced to reveal that identity.\n\n\"Go ahead, Carl,\" the Congressman instructed from the back seat of the black Lincoln Town Car. His driver Carl had removed the license plates from the Town Car a few minutes earlier when they first spotted the man in the blue sweats walking the dog off in the distance as he faded in and out of the streetlights.\n\nCarl flashed the headlights twice and the man stopped walking. Carl put the Lincoln in gear, pulled forward and passed the man going in the opposite direction. Carl slowed and pulled the big vehicle into a U-turn and then expertly eased the Town Car up alongside him. The man and his Pomeranian just stood and watched. The driver reached over to the front passenger door and opened it.\n\n\"Get in,\" Carl instructed.\n\nThe man hesitated. He squinted to try and see inside the vehicle. Then he stood up tall and turned his head and cautiously looked up to the end of the street. Then he did the same in the opposite direction. Carl let out a very small sigh at the pretense of tradecraft. Finally satisfied, the man reached down and grabbed the dog and climbed into the front seat.\n\nCarl put a hand on the man's arm as he started to turn. \"Face forward.\"\n\nThe man complied and sat looking out the windshield. The blacked out divider glass that separated the back seat from the front slid half-way down. The man nervously kept staring straight ahead, but couldn't help but see a shadowy silhouette in the dim reflection of the windshield.\n\n\"Talk,\" Carl prompted the man.\n\nThe dog yapped once and the man cleared his throat. \"Um, I think there was the...uh...um, I believe -\"\n\nThe burly driver slapped a thick, heavy envelope down on the man's thigh, but kept his hand on it. The dog lowered its head and began licking the driver's knuckles.\n\n\"Right,\" the man nodded and cleared his throat again. \"So...um, the uh, the thing that your representative called me about earlier? That situation has changed...it's, uh, it's gotten a little complicated.\"\n\nCarl looked up into the rearview mirror and the Congressman nodded. Carl turned his head towards the man. \"Explain.\"\n\n\"Right,\" the man nodded and the little dog started yapping again. The man reached into the pocket of his sweatpants and took out a treat and fed it to the dog. He glanced at the envelope resting on his thigh. \"The person that was inquired about has been moved...to an, um, off-site facility. I don't know where it is.\"\n\nOnce again Carl checked the rearview mirror and then asked the man, \"How many of these off-site facilities exist?\"\n\nThe man shrugged. \"Dozens.\"\n\nCarl did another check of the mirror and nodded. He buzzed the divider glass up and then reached across the man and pulled the handle so the passenger door opened. The man just sat there holding the dog and looked at the open door and then looked up at Carl.\n\n\"That's it?\"\n\n\"That's it,\" Carl said flatly and took his hand off of the envelope.\n\n\"Okay,\" the man nodded and then quicker than he had probably moved in quite a few years, grabbed the envelope and exited the vehicle. Once he was back on the sidewalk he set the dog down and turned back around to face the Town Car, but it was already pulling away from the curb.\n\n****\n\n\"Hank,\" Jules smiled as she stood up from the table. Leah had pitifully moped around at being left alone as Jules was getting ready. Jules was sympathetic, but she finally got Leah to understand that this dinner with her former boss was important to her. The curvy redhead greeted Hank Atwood with a big hug.\n\n\"I know it hasn't been that long,\" Atwood smiled back as he returned the hug, \"but it's really good to see you, Jules.\"\n\nThey stepped apart and Hank politely held Jules's chair for her as she sat down.\n\n\"It's really good to see you too,\" Jules couldn't help but continue smiling. She had really missed Hank. \"Thanks again for making time for me...I know you've been busy - but oh, wait, are you hungry? Should we get an appetizer? Or do you want to go ahead and order?\"\n\n\"Slow down,\" Hank grinned and put a hand over hers. \"I'm not in any hurry this evening and yes, I'm famished.\"\n\nJules turned in her seat and motioned for the waitress. Hank proceeded to order a steak medium-rare, a batch of their fresh cut fries and a cup of coffee. Jules nodded for a refill of her own coffee and decided to give up on the small salad she'd been picking at for the last fifteen minutes. The waitress brought Hank's coffee and took her plate away. Jules sat and studied Hank Atwood as he added cream and sugar to his mug. He looked tired.\n\nShe knew that Hank been working almost non-stop ever since the shootout and the takedown on the third floor of the DHS Headquarters building. In the direct aftermath of what happened that afternoon, Jules had been fortunate since she was still technically employed by Homeland. Hank was able to keep her semi-informed of the progress of the investigation. That didn't last long once the investigators tried to identify the perpetrators by their fingerprints.\n\nAs soon as those prints were entered into the system all kinds of internal warnings triggered alerts to both the Central Intelligence Agency and the Department of Defense. Jules had actually been in Hank's office when men in suits from both the DOD and the Agency had showed up. Shortly after that meeting, everything to do with the failed operation to prevent Leah Hartsall from testifying before Congress was immediately classified top secret and Jules had been cut out of the loop.\n\n\"Everything nice and quiet on the home front I hope?\"\n\n\"It is,\" Jules nodded with a grin. \"I'm kind of getting used to nice and quiet.\"\n\n\"How's the security company working out?\" Atwood had personally selected the private security firm to provide around the clock protection for both Jules and Leah. Homeland was also footing the bill.\n\n\"They've been really great.\" Jules nodded. She never mentioned it to Leah, but she was very thankful Hank had hired them. After everything they had been through, having armed guards around made her feel much safer.\n\n\"That's good to hear,\" Hank smiled and took a sip of coffee. \"Have you made any decisions yet?\"\n\n\"No, not yet,\" Jules shrugged. She was on a paid leave of absence from DHS. It had been less than a week, but she was still dreading the thought of making decisions about her career right now.\n\n\"Take your time,\" Hank advised and then finally asked, \"How's Leah feeling?\"\n\n\"Much better,\" Jules smiled.\n\nLeah had ended up in the hospital for three days. The ER doctors inspected the gunshot wound to her side and found only tissue damage. No internal organs or major blood vessels were hit. A few sutures and it would heal as good as new in no time. The bump on her head from where she had fallen had initially been a bigger concern, but again it turned out to be only a minor concussion. They ran several tests that showed no epidural hemorrhaging or skull fractures.\n\nThe real problem was her injuries being complicated by the fact she had been minimally exposed to the high-energy discharge of the non-lethal Retinal Disruptors. The Disruptors had been deployed on the entire third floor of Homeland's HQ building during the takedown and had virtually ended the confrontation with no further loss of life. The blinding pulses of purple light that had been emitted from the emergency lighting units had rendered everyone exposed to it completely stunned and unconscious for several hours.\n\nThe doctors had explained to Jules that Leah's body had basically gone into a self-induced comatose-like state. They refused to actually call it a \"coma\" because they didn't believe her condition fit the medical definition of a coma. They had explained that as best as they could tell her body had withdrawn from consciousness in order to heal itself. Their best guess was that her injuries combined with the brief exposure to the intense directed-energy radiation pulses had overloaded her senses. Her brain had basically determined that it needed to shut down and reboot. So it did...which is why she had gone into what the doctor's wouldn't call a coma but referred to it as \"an abnormal state of unconsciousness\" for almost 48 hours.\n\n\"I'm really glad to hear that,\" Atwood smiled. His smile grew a little embarrassed. \"And you two are...still?\"\n\n\"Yes Hank, we're still together.\" Jules nodded with a grin. \"She's doing really well, almost back to normal. The doctors have had her on strict bed rest, so she's driving me crazy.\"\n\n\"I can imagine,\" Atwood chuckled. \"Tell her to make sure she follows the doctors' orders. She needs to think big picture and long term and all that.\"\n\n\"I'll be sure to tell her you said that,\" Jules laughed too.\n\nThey stopped talking for a moment as the server brought Hank's food and Jules decided she would have a cup of soup. She figured she would need something to distract her while Hank ate. The waitress wrote it down and refilled their coffee cups. Atwood picked up the bottle of steak sauce and dashed it liberally across the slab of meat on his plate. He repeated the same process with the bottle of ketchup for his fries. Jules wrinkled her nose.\n\n\"What?\" Atwood asked with a sigh.\n\n\"I thought you had high blood pressure?\" Jules asked.\n\n\"Yeah, well...you only live once,\" Atwood grumbled as he sawed at the steak. He paused to spear both a piece of steak and a fry on his fork. With a wink to Jules he stuffed the large bite into his mouth. He relished the mouthful and then proceeded to take another steak / fry combo bite which he obviously enjoyed as much as the first one. He swallowed, took a sip of coffee and then turned his full attention back to Jules.\n\n\"So what did you want to ask me about?\"\n\n\"What do you mean?\" Jules's eyes widened. Had she been that obvious?\n\n\"It's fine, Jules,\" Atwood took another bite of food and followed it up with a slurp of coffee. \"I get it. You have skin in the game.\"\n\n\"Hank, I really did want to see you and catch up,\" Jules offered meekly. Once again, they fell silent as the waitress dropped off Jules's cup of broccoli and cheddar soup and refilled their coffee cups again.\n\n\"I know. I did too. Doesn't mean there wasn't more to it, but let's go ahead with the formalities. I'm doing fine. A bit tired, but still hanging in there,\" Atwood nodded politely after the waitress was gone. He gestured with a fry on his fork that it was now Jules's turn.\n\n\"Okay...I'm good.\" Jules played along. \"More rested than I have been in a long time...and I guess you could say I'm hanging in there, too.\"\n\n\"That's great,\" Hank smiled and ate another piece of steak. He swallowed and then said simply, \"And?\"\n\nHer smile faded just a little as she looked down into her soup to try and find the right questions to ask. She finally looked up. \"Hank...I just...what am I getting myself into?\"\n\nHank wiped his mouth on his napkin. \"You mean with Leah?\"\n\nJules nodded.\n\n\"And I'm assuming you mean more specifically her past?\"\n\nJules nodded again.\n\n\"Hmmm....that's complicated.\" Atwood nodded as he wiped his mouth again. \"I seem to remember somebody called her a trained killer not too long ago.\"\n\n\"Hank,\" Jules sighed. \"I know what I said back before I knew her. That stupid file painted a pretty stark picture, but no details. I want to know the truth about what she really did...used to do.\"\n\nHank Atwood rotated his coffee cup on the table a few times and then looked up. \"How much do you really want to know, Jules?\"\n\n\"Well, uh,\" Jules placed her arms on the table and mimicked Hank by playing with her cup. \"I mean, how am I supposed to answer that?\"\n\n\"Honestly.\"\n\n\"Okay, I guess I want to know everything...or...at least I think I do.\"\n\n\"Tell you what,\" Hank sat back in his chair and studied his former employee for a few moments. \"I'll tell you whatever you want to know as long as you answer one question first.\"\n\n\"Okay,\" Jules agreed cautiously.\n\n\"Why aren't you asking Leah?\"\n\n\"Well,\" Jules sighed. \"It's sort of like you said...complicated.\"\n\nAtwood chuckled.\n\n\"I will eventually, Hank.\" Jules continued. \"I really will...but I think it's going to take her some time to open up about...the things she used to do.\"\n\n\"That's understandable,\" Atwood allowed, knowing everything that he did about Leah's past.\n\n\"Besides,\" Jules shrugged. \"I wanted to ask you because...I know you'll be objective, Hank.\"\n\n\"That I will,\" Atwood agreed and sat forward. \"Here's what I'm going to do. I'm going to give you the broad strokes and what I think is relevant and if you want to know more after that...you can ask.\"\n\n\"That's fair,\" Jules nodded.\n\n\"Alright...you knew she used to work for the Central Intelligence Agency, right?\" Atwood began and paused to take a sip of coffee.\n\n\"Yeah, I think I did know that,\" Jules's brow furrowed. \"Didn't the file you gave me for the assignment mention something about it?\"\n\n\"It did,\" Atwood confirmed, \"but what it didn't mention was that she was part of their Special Activities Division. Do you know what that is?\"\n\nJules shook her head. \"Not really.\"\n\n\"On paper the SAD is comprised of two groups - the Special Operations Group and the Political Action Group. The SOG operatives are mostly recruited from within our military and are basically considered the most secretive special operations force the U.S. has...covert heavy hitters. The PAG handles all of the political influence, psychological operations, economic warfare and all the technology and cyber-warfare stuff.\"",
        "Jules nodded that she understood.\n\n\"What's not on paper is that within the Special Operations Group exist these top-secret, highly specialized units. The members of these units aren't even considered Agency employees they're so far off the grid - they're listed as contractors in some anonymous file in some Langley basement,\" Atwood explained. \"The units are small, mobile and very effective. They do a lot of the down and dirty work, Jules. I'm talking lethal Black Ops stuff...counter terrorism, assassinations, intelligence gathering - the kind of work nobody ever wants to talk about.\"\n\nJules swallowed. \"Was Leah in one of these units?\"\n\n\"She was,\" Atwood nodded solemnly.\n\nThe redhead started to ask another question, but Atwood held up his hand and continued.\n\n\"Yes, I managed to get my hands on a copy of Leah's Agency file,\" he nodded as if reading her mind, \"or at least parts of it.\"\n\n\"You did?\" Jules asked, impressed. \"How did you manage that?\"\n\n\"Eh, you know,\" Atwood dismissed it like it wasn't a big deal. \"I still keep in touch with an old contact or two on that side of the fence. A few of them still owe me favors.\"\n\n\"Well, thank you,\" Jules replied. She had a feeling that Hank's influence went way beyond calling in favors and keeping in touch with old friends, but she wasn't going to pursue it. She watched Hank eat another bite of steak and sip some more coffee before finally asking. \"So...the file?\"\n\n\"Yeah, the file...\" Hank nodded slowly and pursed his lips before continuing. \"I'm not going to sugar-coat it, Jules - Leah was sent on a lot of missions. I won't share any of the details unless you really want me to...but I'm warning you, it isn't for the faint of heart.\"\n\nJules didn't say anything.\n\n\"Listen to me,\" Atwood leaned forward and placed his hand on top of hers. \"I promise you that there isn't anything in her file that she has to be ashamed of.\"\n\nJules met Hank's intense gaze.\n\n\"She's a patriot,\" Atwood said firmly. \"I mean the things this country asked her to do...But there is absolutely no shame in doing what needs to be done in service to your country - because whether we like it or not, someone has to be the sharp end of the spear.\"\n\n\"So you're saying she really did those things,\" Jules said quietly. \"The Black Ops...the lethal things.\"\n\n\"She did...but that's the world we live in, Jules.\" Atwood replied bluntly. \"What she's been through was hard, probably harder than you can imagine...but it was necessary. At the end of the day, Leah and the people she worked with saved lives.\"\n\nAtwood paused as he watched Jules lower her head and stare down at the table deep in thought. Finally, he cleared his throat. \"Should I go on?\"\n\n\"No.\" Jules looked up. \"I think that's enough, Hank.\"\n\n\"I agree,\" Hank smiled and drained the last of his coffee. He glanced at his watch. \"Well, I guess I should probably get going. Miriam is expecting me home for a late dinner.\"\n\n\"Seriously?\" Jules managed to crack a smile and looked pointedly at his empty plate. They both laughed and Jules stood up when he did.\n\nHank Atwood dropped a pair of fifty dollar bills on the table and then leaned over and kissed Jules on the cheek. He turned to leave, but stopped and turned back around. \"Do you love her, Jules?\"\n\nJules smiled and nodded her head. \"I do.\"\n\nAtwood smiled. He studied Jules's face for another moment. \"You know, I meant to say this earlier, but I don't think I've ever seen you this happy.\"\n\n\"I really am,\" Jules's smile brightened. \"She makes me very happy.\"\n\n\"I'm glad,\" Atwood replied sincerely. \"Just give her some time, Jules.\"\n\n\"I will,\" Jules nodded.\n\n\"I imagine the rest of it will take care of itself,\" Atwood advised and walked out of the restaurant with a final wave.\n\n****\n\nIt was early...much too early for any sane person, but as quietly as she could Jules slipped out of bed.\n\nThe redhead silently crept across the room and disappeared into the bathroom for about ten minutes. She finally reappeared wearing a long silk robe. She eased the bathroom door shut as quietly as she possibly could and then turned around. She comically hunched over as she tried her best to literally tiptoe back across the dark bedroom when Leah whispered to her.\n\n\"You're never going to find work as a ninja.\"\n\n\"Shit,\" Jules whispered in disappointment and stood up straight as she abandoned her efforts at being stealthy. \"I didn't mean to wake you.\"\n\n\"That's okay, I'm not really tired,\" Leah turned on the small bedside lamp. She lifted the comforter up as an invitation for Jules to come back to bed.\n\nInstead, Jules walked around to the other side of the bed and perched sideways on the edge of the mattress next to the blonde. She leaned over and gave Leah a soft kiss on the tip of her nose, a move that also happened to give her lover a delightful peek down the gap in the front of her robe. Leah grinned at the tantalizing glimpse of pale cleavage. Jules leaned down again and this time softly kissed Leah on the lips.\n\n\"Come to think of it,\" Leah murmured, \"I'm not tired at all.\"\n\n\"Good,\" Jules whispered and kissed Leah again. \"Guess what time it is?\"\n\n\"Doctor's release?\" Leah answered hopefully. She pulled back slightly and looked at the alarm clock. \"Technically, that's not for another twenty-two minutes.\"\n\n\"Close enough,\" Jules replied in a husky whisper and leaned in for another kiss. The burning hunger quickly became evident for both women as their mouths melded. Leah brought her hands up to gently cup Jules's large breasts through her robe, rubbing her palms back and forth until she felt the familiar hardness of the redhead's rather dainty nipples. Jules gave a low moan deep in her throat and pushed her chest forward a little. Leah pulled on Jules's arms to urge the redhead to climb into bed on top of her, but Jules resisted.\n\nLeah pulled back with a suspicious squint. \"Why are you acting weird?\"\n\n\"Who me?\" Jules was busted and couldn't stop the guilty grin from spreading across her face.\n\n\"Yeah, you,\" Leah arched an eyebrow. \"What are you up to?\"\n\n\"Nothing.\"\n\n\"Jules.\"\n\n\"I just thought...\" Jules shrugged and stood up. She seemed to take a moment to gather herself with her back to Leah, but then took a deep breath and turned around. She smiled and then bit her lip as her hands played with the belt of her robe nervously. \"I wanted to surprise you.\"\n\n\"You did?\"\n\n\"Uh-huh,\" Jules nodded and with only a slight hesitation, boldly pulled on the loose knot of the robe's belt and with a little shrug let the silk garment fall off her shoulders. The busty redhead stood there in front of Leah wearing a sturdy looking harness around her pelvis to which was attached a large pink dildo. She put her hands out on either side of the brightly colored phallus, wiggled her fingers and smiled.\n\n\"Surprise.\"\n\nLeah immediately felt a pang of apprehension, but she purposely kept her face neutral. She had very limited experience with toys of any kind much less a strap-on, but the look on Jules's face was so sweet...Leah could tell Jules had gone to a lot of trouble trying to find a fun way to please her. They were still in the early stages of their relationship, both physically and emotionally, and they hadn't quite finished the whole feeling out process. It was going to take some time to learn each other's likes and dislikes. Leah had a hunch that this was going to be a very important moment for both of them.\n\nEven though Leah still felt a little uncertain, she couldn't deny the fact that Jules's curvy frame standing in front of her wearing the fake cock had caused an unexpected tingle in her loins. There was no denying that Jules looked hot...very fucking hot. Leah slowly looked the busty redhead up and down a few times as the anxiety started to show on Jules's face.\n\n\"Too much?\" Jules asked self-consciously. \"I can take it off.\"\n\nLeah's answer was to lounge back on her pillows as she dramatically brought her hand up to point directly at Jules with her index finger.\n\nJules raised her eyebrows in anticipation of what that meant. Wait? Go ahead? Get the fuck out of here? Leah twisted her hand slightly and then curled her pointing finger slowly. She finally grinned and repeated the motion in the universal 'come here' gesture. Jules laughed and fell on the bed into Leah's arms.\n\nJules kissed her and then pulled back for a moment to ask, \"Are you sure this is okay?\"\n\nLeah slowly brought Jules closer once again and kissed her deeply, her tongue playfully running along the inside of the redhead's mouth. They kissed for another minute and then Leah moved her mouth and continued to kiss along Jules's jaw until her lips were next to the redhead's ear. She whispered, \"Absolutely.\"\n\n\"Really?\" Jules asked hopefully.\n\n\"Yes,\" Leah whispered and lowered her voice even more to say, \"I want you to fuck me.\"\n\n\"Ooo,\" Jules grinned as she got up on to her hands and knees above Leah. \"I think I like it when you sweet talk me.\"\n\n\"I'll have to remember that,\" Leah mumbled but was distracted by the fact that Jules was moving higher up on her body. The redhead stopped so that those magnificent breasts of hers were pendulously suspended right above Leah's face.\n\n\"Uh-huh,\" Jules cooed after she had bent her arms to lower the tip of her breast into Leah's eager mouth. \"Just like that.\"\n\nThe blonde closed her eyes in sheer bliss. She absolutely adored Jules's breasts. She brought both of her hands up to gently cup as much of the redhead's glorious boobs as she could fit in her hands while she suckled. She relished their luxurious weight in her palms as her mouth and tongue started working Jules's nipple over. Leah backed off from full on sucking to start rapidly licking and flicking the nub with her tongue. She then switched to swirling her tongue around the tight little summit, widening her route until she was making circles around Jules's swollen areola. Jules was making low moaning sounds in her throat at Leah's effort on her left tit and then without warning the blonde moved her head and began administering the same treatment to Jules's right breast.\n\n\"Mmmhmmm...yes...suck my tits, Leah,\" Jules whispered as she kept her head down so she could watch her lover's efforts. Leah had learned pretty quickly that Jules was much more vocal than she herself was. Leah liked it.\n\nLeah didn't want to leave Jules's left boob out so she slid her finger and thumb up to begin lightly pinching and pulling on the still moist nipple while she continued to suck, nibble and lick the redhead's right one. The blonde thought she could quite literally be content doing this for hours on end, but Jules had other plans. She pulled up and started to move back down Leah's body, taking her bountiful treasures with her much to Leah's disappointment.\n\nJules lowered herself down on top of Leah. As soon as their breasts pressed tightly together, they shared a knowing smile at the wondrous sensation of breast to breast contact that only two women can truly appreciate. Without a word their heads moved in unison, searching out each other's mouths. Leah breathed in and caught just the slightest trace of the perfume Jules wore as their lips lightly touched. She was amazed all over again at how utterly succulent Jules's lips felt against her own. Leah closed her eyes and surrendered by opening her mouth a little wider and allowing Jules's tongue to softly caress her own.\n\nThe kiss lingered and deepened as their passion rapidly escalated. Jules finally pulled away, leaving both women breathless. Jules kissed and licked Leah's neck and continued downward, wiggling her curvy body against Leah's sleek, leanly muscular frame. Jules continued down until she was in the perfect position to give all of her attention to Leah's breasts. Leah let out a soft sigh as Jules started by moving her head and lightly brushing her cheek against the smooth flesh.\n\nThen Jules turned her head and planted a soft kiss on the side of the teardrop shaped mound. Leah trembled as Jules's mouth began to follow the gentle curve and slope of her breast. This was Jules's first real opportunity to spend some quality time exploring Leah's chest up close. The perky B cups were much firmer than the redhead's own much larger breasts. Jules flicked her tongue out at Leah's nipple which elicited a gasp from the blonde. Leah's nipples were also much thicker and longer than Jules's. She took the swollen nub between her lips and began to gently suckle.\n\nLeah brought a hand up to stroke Jules's hair. She inhaled sharply when she felt Jules's teeth graze her aching nipple. Jules sucked a little harder and wiggled her hips to adjust her position slightly. Leah could feel the dildo pressing against her thigh and the anticipation of Jules sliding it inside of her made Leah shiver. Jules kissed her way over to Leah's other nipple and began licking and sucking with just as much enthusiasm. Leah raised her arms over her head and basked in the pleasure of her lover's attention.\n\nThe buxom redhead changed tactics by raising herself up on her arms and leaning forward so that her large breasts were just barely making contact with Leah's. Jules rocked gently forward so that her own swollen nipples dragged directly across the blonde's. The sensation was almost electric. Both women let out little moans of delight as Jules rocked back and forth, repeating the nipple to nipple stimulation. As utterly incredible as that felt, Leah was also immediately aware that Jules's position change had moved the strap-on so that its length was lying directly against her swollen labia.\n\nJules brought her head forward and down for a brief kiss before sitting upright all the way back on her haunches. She shuffled her knees so that she was lined up directly between Leah's legs. She smiled down at Leah and began softly rubbing her hands up and down the tops of Leah's thighs. Leah responded by letting her legs fall wider apart. She was ready for whatever Jules wanted to do to her.\n\nJules reached behind her and grabbed the small bottle of lube she had cleverly placed on the end of the bed when she had walked around it earlier. She poured a generous amount on the large pink cock and began stroking and rubbing it all around the shaft and head of the dildo. Jules shuffled her knees forward just a little so that she could grasp the fake cock in her hand and rub it directly against Leah's now very wet pussy.\n\nLeah was counting on Jules not to just plunge ahead and stick that thing in her. Her lover didn't disappoint her as Jules began to gently rub the head of it against Leah's labia. Up and down, first one side and then the other. Jules traced the fake cock along her outer lips over and over again and then slid it up the center of Leah's slit until the tip just made contact with her clitoris. Jules kept doing this, slowly rubbing the dildo against Leah's sex for what seemed like an eternity until Leah was squirming. The blonde's apprehension was long gone, her desire building until she couldn't stand it.\n\n\"Damn, Jules,\" Leah moaned. \"You're driving me crazy.\"\n\n\"Am I?\" Jules asked innocently. She eased forward so that the head of the dildo slowly disappeared between Leah's lips.\n\n\"Fuck!\" Leah gasped.\n\n\"As you wish,\" Jules smirked and gently pushed another inch into her.\n\n\"Yesss,\" Leah breathed out as she felt her pussy stretch to accommodate the intruder. \"Mmmm...fuuuck.\"\n\n\"Tell me.\" Jules whispered as she slowly withdrew the strap-on until just the head was still inside of Leah. She pushed her hips forward again until it went in even deeper causing Leah to moan even louder. Jules paused as she repeated, \"Tell me, Leah.\"\n\n\"It feels...\" Leah breathed as Jules slowly pulled out. \"It feels really fucking good.\"\n\n\"You like that, baby?' Jules grinned and pumped her hips forward again and leaned into it a little harder until the dildo's entire length slowly sank into Leah's core. Leah let out another groan as the fake cock filled her up, stretching parts of her inner walls that had never been touched. Jules stayed like that with the dildo all the way in for a few moments to let Leah get used to the feeling. She bent her arms so she could lean down to kiss the blonde on the mouth, but with Leah's height, she couldn't quite reach her.\n\nJules settled for kissing Leah's breasts, first one and then the other. After a few kisses and licks and even a quick suck on each of Leah's nipples, Jules straightened her arms back out and slowly pulled her hips back. The dildo eased out. Leah let out another gasp as Jules pumped her hips forward and pushed it all the way in to the hilt a second time. Leah's pussy was sending out all kinds of crazy mixed signals of both pleasure and pain which were both so intense it was making her dizzy. Leah reached up and grabbed both of her breasts and pinched her nipples.\n\n\"You look so fucking sexy,\" Jules whispered as she again waited a few moments with the fake cock all the way inside of her lover. She smiled lovingly down into Leah's face which was a mask of concentration. After a few moments, Leah smiled back as she felt the uncomfortable tightness inside of her pussy start to relax. She moved her own hips just a little as a test and confirmed that the pleasure impulses were quickly taking over any pain she had felt. She watched Jules's large tits bounce and sway above her with every movement the redhead was making and it was an intoxicating sight.\n\nJust as Leah got used to feeling so full, Jules eased the huge cock back out and then slowly repeated the motion. The dildo went in much easier and Jules watched Leah's face closely. The blonde didn't tense up or grimace, she only bit her lip and closed her eyes at the intensity of the pleasure she was feeling. Jules sensed Leah was ready. She didn't hesitate this time. As soon as the dildo bottomed out, she rolled her hips and pulled it almost all of way back out only to push forward and plunge it smoothly right back in.\n\nLeah gasped and let out a long moan as Jules did it again. She stared up into Jules's eyes. Leah was starting to love the feeling of this huge fucking dildo deep inside of her...but more than that was the fact that this woman she cared so deeply about was in control of making her feel so good. She was just about to reach out her arms and pull Jules down on top of her so she could feel the redhead's body against her own when Jules backed off and pulled the strap-on cock all the way out with a small plopping sound.\n\n\"Roll over.\"\n\n\"Do what?\" Leah was taken a little off guard by the sudden change.\n\n\"Roll over,\" Jules commanded again.\n\nLeah's eyebrows narrowed as that feeling of trepidation bloomed all over again. She had just gotten used to Jules on top of her, but getting on her hands and knees? She wasn't too sure about that, but wanted to please Jules so she obeyed. She turned over and then felt Jules's hands on her hips and ass as the redhead repositioned her and then scooted her around to face a different direction away from the headboard. She put her head down on the bed with her ass sticking up in the air and anxiously waited.\n\n\"You look gorgeous like this,\" Jules encouraged as she could feel Leah's nervousness. She began to rub Leah's back and then ran her hands up and down the blonde's ass and hips, but was careful to avoid the small area on Leah's side that was covered by a gauze bandage. As Jules took hold of the dildo and put some more lube on it, she leaned over and planted a few kisses on Leah's lower back and the top of her ass. Jules liked the little noise Leah made, so she took the time to crane her neck and run her tongue up and down the blonde's slit a couple of times. Leah pushed her ass back against the unbelievable feeling of Jules's tongue on her pussy and Jules relented. She spent a couple of minutes licking and running her tongue up and down and all over Leah's pussy.",
        "Now that Leah was good and wet, Jules was ready to resume. The redhead got back up and behind the blonde. She ended up having to use her knees to push against the inside of Leah's calves to get the taller woman to spread her legs wider. She did it again until Leah had spread wide enough to lower her pussy and allow Jules access to it from this position. Jules rubbed the head of the fake cock up and down along Leah's lips until it slipped between them once again. She gently pushed forward. Leah moaned loudly into the bed as Jules slowly pushed the dildo in, stretching her in new ways and reaching all new places of uncharted territory within her depths. Jules left the dildo all the way in to let Leah grow accustomed to it all over again from this new angle. She again ran her hands all over Leah's firm ass.\n\nJules slowly pulled out and the dildo unexpectedly fell all the way out. The redhead grabbed it and struggled to find the entrance to Leah's pussy. Once she got it inside, she pushed the dildo all the way in. She was rewarded with another of Leah's moans. She smiled, but that was quickly replaced with a small frown as she pulled out and the fake cock fell out again. Jules awkwardly put it back in and managed to slowly ease it in and out a few times before it happened again. Jules added a little more lube and then adjusted her knees and realized that if she kept her knees closer to Leah and sat straight up while she pumped the cock in and out of the blonde it would stay in.\n\nBy staying upright, Jules was finally able to work on getting a rhythm going. She started and stopped her cadence of thrusting a few times as the physical motion was a little unfamiliar. Jules paused to cinch the harness a little tighter and that helped tremendously. She concentrated and after a few tries finally got the hang of exactly how to roll her hips and use her leg muscles to assist with a smooth thrusting motion. Leah kept her head down on the mattress as the intense waves of pleasure and flirtations with pain once again started radiating from within her depths as Jules slowly fucked her from behind.\n\n\"Leah,\" Jules whispered in a husky voice. The redhead's pauses in pushing the dildo all the way and then slowly pulling it almost all of the way out were becoming shorter and shorter. Leah groaned a response. Jules repeated herself. \"Leah, honey.\"\n\nLeah moved her head around on the mattress and craned her neck so that she could look back at Jules. She moaned as Jules entered her fully again. \"Uh-huh?\"\n\n\"Sit up.\"\n\n\"Uhhhh.\"\n\n\"Come on...get up so you can see,\" Jules whispered a little breathlessly. Leah moved her head but continued to stay down against the mattress with her eyes closed. \"I want you to watch me.\"\n\nLeah moaned again at the feeling of that fake cock filling her pussy, but somehow managed to comply. She struggled up into more of an all-fours position, but on her elbows rather than her hands. She still had her eyes closed and then dipped her head down as Jules thrusted a little harder into her from behind. Leah moaned even louder. Jules stopped thrusting and stayed buried deep in Leah's pussy.\n\n\"Come on, baby,\" Jules encouraged. \"Look up.\"\n\nLeah picked her head up and opened her eyes. A thrill ran through her in the form of a shudder as the reflection of herself down on her elbows and knees with Jules behind her stared back at her from the full-length mirrors on the closet doors. Her pussy somehow got even wetter if that was humanly possible. She couldn't take her eyes away from the image of Jules on her knees fucking her from behind in the mirror.\n\n\"You look so beautiful,\" Jules whispered as she resumed her thrusting. \"So fucking sexy.\"\n\n\"Oh, fuck,\" Leah watched her mouth say in the mirror and then watched her reflection moan loudly as Jules thrusted a little faster and a little harder. Watching herself and the way Jules was working so hard to make her feel good was one of the most erotic, intense things she had ever seen.\n\n\"Mmmm, yes,\" Jules gasped as she increased her efforts. Her large tits were bouncing and jumping as she started to slam her hips into Leah's ass. She had both hands firmly on Leah's lower hips and was using them for leverage. The little nub in the harness was rubbing directly onto Jules's clit and with the increased tempo it was making her feel like she could probably cum if she kept this up. She really wanted Leah to cum with her.\n\n\"Does that feel good?\"\n\n\"Yes,\" Leah gasped.\n\n\"Does it?\" Jules demanded to know. \"Does it feel good when I fuck your pussy?\"\n\n\"Yes,\" Leah managed to gasp a little louder. She had never experienced anything like this before. In the few times that she and Jules had been intimate, the redhead had never demanded a response from her. Jules asking her naughty questions and needing answers only heightened the utter eroticism of it for Leah.\n\n\"Tell me,\" Jules breathed. Sweat was running down the redhead's face, but she didn't slow down. She was getting closer to her own orgasm so she increased her pace a little. She gritted her teeth. \"Say it!\"\n\n\"Yes!\" Leah said louder and bit her lip as she felt her orgasm building.\n\nBoth women were started to pant.\n\n\"Fucking tell me,\" Jules commanded as she tried to put every ounce of strength and passion she could muster into her thrusts. She didn't think she could hold back much longer. As she rammed the dildo deeply into Leah's pussy over and over again, faster and faster, the raised little nub on the inside of the harness battered her own swollen clit. \"Tell me to fuck your pussy, Leah.\"\n\n\"I love it!\" Leah finally managed to growl. Being forced so far outside of her comfort zone pushed her over the edge as her orgasm crested. The waves of pleasure began to blossom deep inside of her like an explosion until she couldn't hold it back. \"Fuck! Yes...YES...fuck me, Jules. I'm...cumming...OH...fuck me!\"\n\nLeah arched her back and Jules kept her hips pushed forward so that the fake cock remained as far inside of the blonde as she could push it. Leah let out another gasped \"Fuck me\" and then collapsed facedown onto the bed. She said something else, but the rest of her words were incomprehensible and lost to her very loud, drawn out moan.\n\nJules had followed Leah down to the bed and did her best to keep the dildo buried inside of the blonde. Jules was cumming herself. It wasn't a big one, but still very nice. Leah's legs were shaking and Jules maintained her position of holding herself up on her arms as the blonde rode her orgasm out. When Leah's body finally relaxed and she let out a deep, quivering sigh, Jules relaxed and let herself fall exhausted onto Leah's back which caused the dildo to slip out of the blonde's pussy.\n\nJules rolled off of her and collapsed on the bed. The two women laid there panting and gasping beside each other for several minutes.\n\n\"Why...\" Leah finally croaked. Her hand crept over until it intertwined with Jules's hand.\n\n\"Why what?\" Jules managed to ask while holding Leah's hand. The redhead's large chest continued to heave up and down.\n\n\"Holy shit,\" Leah gasped and lifted her head up to look at Jules's sweaty face, \"Why didn't you break that thing out sooner?\"\n\nJules looked up at the ceiling and laughed, a full on completely exhausted but utterly satisfied belly laugh. She rolled onto her side and with a small groan Leah did the same so that they were facing each other. Leah reached up and wiped some sweat off of Jules's forehead and then her fingers delicately danced over to push a stray strand of auburn hair behind Jules's ear.\n\n\"So you liked my surprise?\" Jules asked with a proud grin.\n\n\"Yeah,\" Leah nodded and held up her thumb and finger so that they were just barely apart. \"A little bit.\"\n\n\"Only a little?\" Jules scowled and leaned her head forward to playfully bite Leah's fingers.\n\n\"Ouch!\" Leah moved her hand and brought her face closer to Jules's. \"Well, maybe more than a little.\"\n\n\"Maybe?\" Jules kissed Leah on the tip of her nose.\n\n\"Fine,\" Leah admitted with her own grin and wrapped her arms around the redhead. \"That was fucking amazing, you brat.\"\n\n\"Yeah, it was,\" Jules nodded. She stared at Leah and the look in her eyes grew a little more serious. \"You know...I think you're pretty fucking amazing, too.\"\n\n\"Aw, hell,\" Leah rolled her eyes. \"There she goes gettin' all mushy again.\"\n\n\"Shut up,\" Jules smiled.\n\n\"So...\" Leah announced after a few moments of comfortable silence. \"Question.\"\n\n\"Ruh roh,\" Jules mocked.\n\nLeah ignored her. \"Why the surprise?\"\n\n\"What?\" Jules scowled defensively. \"I thought you liked it?\"\n\n\"Hell yeah, I liked it,\" Leah agreed, but wouldn't be sidetracked. \"But why now?\"\n\n\"Jeez, suspicious much?\" Jules rolled onto her back and tried to act offended, but then couldn't maintain it. She looked at Leah out of the corner of her eye. \"What?\"\n\n\"Jules.\"\n\n\"Fine,\" Jules sighed and rolled back over. \"I guess I thought it would be good to distract you or whatever...so you wouldn't focus on the hearing and all that.\"\n\nLeah didn't say anything as she studied the redhead's face. Finally, she leaned over and gave Jules a very soft kiss. \"Thank you for being thoughtful. I appreciate it...kinky, but thoughtful none the less.\"\n\nJules smiled, but noticed Leah's eyes had moved to look over at the moonlight that was shining through the gap in the blinds. She was starting to zone out and get that distracted, faraway look in her eyes again. Jules reached up and caught Leah by the chin and made the blonde turn her head and look at her.\n\n\"Hey...I love you.\"\n\nLeah smiled and looked away as a slight blush colored her cheeks. She hesitated for just a moment before snuggling in a little closer. She looked back up at Jules with those sparkling blue eyes.\n\n\"I love you too.\"\n\n****\n\nThe Congressman finished giving his very brief update to the group and then sat down. The silence that followed spoke volumes. The scowls and looks of disappointment did not go unnoticed by Mr. Smith. He just sat there and kept a polite smile on his face like he didn't have a care in the world. The designated leader of The Council cleared his throat and stood up.\n\nHe moved his gaze around the room to his fellow members. \"In light of the Congressman's information, we need to come to a decision.\"\n\nNo one spoke. They all knew the leader had more to say, so they waited.\n\n\"The Senate Intelligence Committee has a source of information that comprises our asset,\" the leader summarized. \"The asset is extremely valuable. Potentially one of the most valuable we've ever had...but I probably don't need to remind he's also very knowledgeable in terms of our group and its members. The question is - if he is given no other choice and no other option, would he potentially disclose information about our group in exchange for leniency or the promise of freedom?\"\n\n\"Absolutely not,\" the Congressman spoke up. \"I know it in my bones.\"\n\n\"Thank you, sir,\" the leader smiled at the oldest member of their group. \"But we don't deal in faith within this group, gentlemen. We deal with facts...so what are our options?\"\n\n\"The solution seems fairly simple to me,\" another member of the group in military uniform spoke up. \"We either eliminate their source of information which in turn eliminates their leverage against our asset...or we eliminate the direct link to the group. Either way, we're protected.\"\n\nMost of the men sitting around the table nodded their heads in agreement.\n\n\"Does anyone disagree?\" the leader asked.\n\nThe looks on every face indicated they did not.\n\nThe leader looked solemnly over at Mr. Smith. He waited until Smith made eye contact and then the leader gave him a firm nod. Their decision had been made. This had been Smith's task to begin with and he failed. Now he would need to attend to it.\n\nWith nothing further on the agenda for the day, the early morning meeting of The Council adjourned. The members and their various bodyguards and drivers began exiting the conference room of the large mansion that was located in Potomac, Maryland. Some of the men would linger and small talk for a few more minutes in the foyer, but most of them began making their way to their vehicles. They had a full day of business to attend to either back at their respective corporate offices or in the Nation's capital.\n\nThe most senior member of the group deliberately hung back and timed it so that he and Mr. Smith were the only ones left in the room. Smith tried not to show how nervous he immediately felt when he looked up and realized the one on one situation he now found himself in. Mr. Smith cleared his throat.\n\n\"Was there something else, sir?\"\n\n\"Possibly,\" the Congressman had a thoughtful look on his face as he sat back down at the conference table. He didn't invite Mr. Smith to join him. \"Are you going to be able to manage this situation, John?\"\n\n\"Of course,\" Mr. Smith smiled with a lot more confidence than he actually felt.\n\n\"You don't need to flash me that obnoxiously self-confident smile,\" the older man chuckled. \"I'm more interested in the truth right now.\"\n\n\"Well, sir, the truth is I'll take care of this,\" Mr. Smith nodded.\n\n\"You haven't been able to take care of it up to this point,\" the Congressman observed bluntly. \"The girl's under protection and we have no idea where the asset is. So...what is your plan exactly?\"\n\n\"Well, I'm not really sure at this point --\"\n\n\"Do you really think we have time for you not to be sure?\"\n\n\"Congressman,\" Smith tried to placate the old man, \"I have my associates monitoring --\"\n\n\"Just make sure that whoever you assign this to doesn't do something completely stupid,\" the Congressman interrupted bitterly. \"You know, like shoot up a Federal building.\"\n\n\"I said I'll take care of it,\" Smith said with just a little more force in his voice. \"Just like I have taken care of everything else I've ever been asked to do.\"\n\nThe Congressman studied him for a moment before finally stating, \"I believe you.\"\n\n\"Thank you, sir,\" Mr. Smith smiled. \"I appreciate your confidence in me.\"\n\n\"Are you aware of who sponsored your motion to membership?\" The older man suddenly changed the subject. Before Mr. Smith could answer, he continued. \"I did...Do you know why?\"\n\nSmith was about to answer when the Congressman started speaking again, so he simply held his hand out politely in capitulation.\n\n\"Because I believe in you, son...I really do. I honestly think The Council needs your kind of mindset for the future,\" the old man nodded his head slowly. \"Old farts like me won't live forever. None of us will...so we have to think long term. This country needs The Council...and The Council needs men like you.\"\n\n\"Thank you, sir, I --\"\n\n\"But never lose your focus on that one elemental truth,\" the Congressman's tone changed. \"The Council will exist with or without us.\"\n\n\"I'm not sure I understand what that's supposed to mean, sir.\"\n\n\"Let's just say I have a vested interest in the outcome of this situation,\" the Congressman leveled those rheumy grey eyes at the younger man. \"I recruited Loki. I vouched for you. I'm just as liable for this situation as you are.\"\n\n\"I'll find a way to take care of this, sir.\" Mr. Smith replied quietly.\n\n\"I hope so...because if you don't get creative and find the best possible solution for all parties involved,\" the Congressman explained and then paused. \"Well...let's just say we both really need you to take care of this once and for all.\"\n\n\"What are you trying to say?\"\n\n\"Oh, come on, John,\" the Congressman chuckled. \"With everything you've done for the group, do I really need to spell this out for you?\"\n\n\"What?\" Smith asked and took a half-step backwards as if he'd been struck. \"You can't be serious?\"\n\n\"I'm afraid I'm being deadly serious,\" the Congressman looked at him ominously.\n\n\"After everything we've done for them?\" Smith asked incredulously. \"After...I mean...they can't do that.\"\n\n\"Do you really believe that?\" The old man asked with a curious look on his face. He stood up and walked to the door. He paused and gave Mr. Smith another long, unreadable look and then left without another word.\n\n****\n\nLeah would have looked stunning if it hadn't been for the haunted look in her eyes.\n\nThe tall blonde was wearing a simple blue dress and a white cardigan that Jules had helped her pick out. Jules had also made her sit still long enough to fuss over her hair and make-up. Even though Leah looked really great, it was hard for Jules to see the normally ultra calm, cool and collected woman she loved acting so nervous. Leah couldn't stop pacing as she waited for the escorts. It reminded Jules of a wild animal in a cage.\n\nLeah was an emotional wreck and the silent ride in the armored SUV didn't do a whole lot to improve her mood. She exited the vehicle and allowed herself to be escorted into the Hart Senate building by the protection detail. They stayed with her as she went through the process of clearing security, signing off on a stack of documents and then being officially sworn in. That was as far as the armed men were allowed to go, so Leah ended up sitting all by herself in a small room with nothing to do but stare at the wall. Leah thought how nice it would have been to have Jules holding her hand right now, but Leah had insisted to the redhead that she had to do this alone. Besides, it was a closed hearing and Jules wouldn't have been allowed inside with her anyway.\n\nFinally after another thirty minutes of waiting in that room, Leah found herself sitting behind a long oak table that faced two rows of raised seating. In those seats with all of their attention focused on her were the members of the U.S. Senate Select Committee on Intelligence. She tried to listen as the Chairman gave a general overview of the Committee's investigation of allegations involving the events of that night in the Andarab district which is located in the southern part of Baghlan Province, Afghanistan. Leah could clearly hear what the elderly man was saying, but it was hard to concentrate as her mind felt like it was jumbled into a thousand pieces as memories of that night kept swimming in and out of focus.\n\nOne of the Senate security guards took his cue and walked over and took a file folder from the Chairman and then presented it to Leah. The Chairman instructed her to look at its contents. She was then asked to verify for the record that the papers inside were in fact the proper documentation and authorization needed to allow her to speak freely about certain aspects of the classified mission and in particular the actions of her Team Leader.\n\nLeah looked the documents over and then nodded.\n\nThe Chairmen went on to ask her several more questions to which she confirmed that yes, she and two other men, all three United States citizens, were in fact working as contractors for the Central Intelligence Agency at that time. She also confirmed that the three of them were all assigned to the same independent covert unit under the supervision of Team Leader Travis Rackley. The Chairman then walked her through the timeline leading up to the launch of the mission. Leah kept her responses short and to the point as she answered the man's questions about the peripheral details of the mission.\n\nThe Chairman was being very polite and respectful towards Leah which was completely premeditated on his part. His kind tone and overall courtesy was having the exact desired effect on the witness as he had intended. Leah was subconsciously reciprocating by opening up and giving more details in her responses. He gave her an encouraging nod as she was explaining that her unit had been tasked with a classified mission that was being conducted under a cover mission that fell within the parameters of the reintegration project.\n\nFor the first time, the other members of the Committee spoke up and asked Leah several questions about reintegration and she had to go on and explain that the project was part of the draw down in U.S. troops in Afghanistan. Simply put the State Department was \"hiring\" Afghani citizens to fill the all-important roles of leadership and law enforcement throughout the region. She didn't bother to mention that she thought the plan had been utterly useless. How could it have possibly been successful when the people overseeing the project insisted on hiring thugs and terrorists? The bottom line was that the same corrupt Afghanis who had been killing American soldiers for several years were now being offered jobs and getting paid by Uncle Sam...but she wasn't about to try and explain that to a bunch of politicians.",
        "At this point the Chairman stepped in and had to remind his fellow Senators that they were getting off task. The Committee had not called on Leah to explain the State Department's project and they needed to stop asking the young lady to clarify aspects of it. He solemnly reminded everyone in the room that Leah was there to testify about the alleged events that occurred at a warehouse on the outskirts of the Andarab district in Afghanistan on the night in question. He turned his serious face directly towards Leah and made sure she understood that she was there to testify specifically about the actions of her Team Leader, Travis Rackley.\n\nLeah found it hard to swallow.\n\nShe nervously reached out for the glass of water sitting on the table in front of her and took a long drink as the Chairman watched. She didn't like the way her was looking at her...she silently wondered what had happened to the nice old man who had been asking her questions. She set the glass down and took a deep breath and then met the Chairman's gaze. He raised an eyebrow and the questions continued.\n\nBy answering the Chairman's questions and then further explaining some of her answers, Leah went on to reveal that her unit's cover mission had been to pose as trainers. They were supposed to work in conjunction with two advisors from one of the big private security companies and together they were tasked with training up half a dozen members of the newly hired local police force and turn them into a tactical response unit. Leah actually had to run through the cover mission details twice so that the members of the Committee were clear on exactly who all was involved in the mission and ultimately present at the small warehouse on the outskirts of the village.\n\nNext, the Chairman's questions and Leah's answers walked everyone through the specifics of what her unit's actual objective had been. Leah explained the specifics of their mission and then went on to answer a few more questions and confirmed a couple of the details. She took another small break by pausing for another drink of water and then surprised everyone in the room by requesting to make a statement. The Chairman thought it over and told her he would allow it.\n\nLeah took the opportunity to boldly praise Travis Rackley for the phenomenal job he had done.\n\nThe Chairman carefully studied her face for a few moments and then went ahead and asked her to expound upon her statement. Leah did so without hesitation. She explained that their unit's entire mission, even their cover duty, had ended up putting her unit in an extremely dangerous situation. That it was Team Leader Travis Rackley's leadership and decision-making skills that had taken an overwhelmingly hostile and potentially volatile situation and managed to turn it into a successful hunt and termination of one of Al Qaeda's main financiers.\n\nLeah finished speaking and sat back in her chair with a neutral expression on her face. She knew she had given them just enough that they couldn't possibly move on without asking follow-up questions. She wasn't going to lie, but she felt that if she could just get these men to understand the circumstances of that mission...well, maybe in the end it would help Rack. She really didn't know what else she could do...but she had to try.\n\nShe wasn't sure her gambit had paid off until one of the Senators on the Committee cleared his throat and then asked her to please clarify what she had meant by \"overwhelmingly hostile\" and \"potentially volatile\". She took a satisfied breath before answering. Leah went on to explain that her unit had been instructed not to engage with any of the local Taliban forces if they could possibly avoid it. The problem was that they had already confirmed that the Al Qaeda money man they were hunting was being hidden by the very same local Taliban forces they weren't supposed to engage with.\n\nShe went on to explain that to complicate things even further, it became very clear, very quickly that at least half of the men that they were supposed to be training as part of their cover were not only very sympathetic to the Taliban, but had familial ties to the very group who were hiding the terrorist bag man. She now had everyone in the room's attention. She detailed that not only did they have to contend with the Taliban sympathy factor, but it didn't take long to figure out that the men they were supposed to be training in tactics, these so-called Afghani \"police officers\", were nothing more than armed savages...so they were stuck trying to deal with a group of vicious bullies who constantly had to be reminded not to brutalize and hurt the local villagers during training exercises.\n\nThese factors had made mission success almost impossible.\n\nNo one spoke, so she continued. She explained how their trainees and the two representatives from the private security firm had established their base of operations in a small, abandoned warehouse on day one. The warehouse was nothing more than an old Quonset hut on the outskirts of the village, but was perfect for what they needed. The plan was that they would train during the day, eat on the run and then everyone would hunker down in the shelter of the warehouse for the night.\n\nShe went on to explain that even though she had carefully chosen clothes and gear to help hide her gender including long sleeves, tactical vest, sunglasses and a voodoo tactical scarf that covered her face...the fact that she was a woman had been a major issue from the jump. Team Leader Rackley had done a good job of squashing that problem early on by making sure she didn't interact with the trainees. She provided over-watch and security and kept her distance...but Rackley still saw it as something they could exploit. He used the excuse of Leah being a female to camp his team well away from the warehouse for security reasons. It made perfect sense and everyone agreed with it. It also afforded their unit the opportunity to use the cover of night to stalk their objective.\n\nLeah looked around the room and felt like she had everyone's full attention. She went on to explain that mission success came on their third night of hunting. She emphasized that it was Rack who had been instrumental in leading his team to successfully eliminate their target. The fact that they had done so without the locals or the Taliban having the first clue as to what had happened right under their noses was a huge win. Leah almost allowed herself a smile when she said that.\n\n\"I sincerely congratulate you on that successful mission, Ms. Hartsall,\" the Chairman spoke up. He gave her a kind smile and then he lowered his voice. \"But you do understand what you are here to testify about, don't you?\"\n\nLeah's stomach dropped.\n\n\"You're here before this committee to give testimony about the validity of accusations being brought forth by the Afghan government,\" the Chairman continued. He paused to look at her.\n\nShe swallowed hard and gave him a small nod.\n\n\"Accusations that United States citizen Travis Rackley in the employ of the Central Intelligence Agency executed Afghani citizens.\"\n\nLeah didn't move a muscle or blink as the events of that night started to come alive in her memory.\n\n\"Further investigation by this Committee, Ms. Hartsall, has discovered that Mr. Rackley may also be responsible for the murder of two American citizens as well,\" the Chairman advised her. He looked up from the papers in front of him. \"So if you will, please start by describing the events that happened that night in question after your team completed the mission...the events at the warehouse.\"\n\nLeah closed her eyes and took a deep breath. She slowly opened her eyes, paused to take another long drink of water and then in a flat, monotone voice complied with the Chairman's request. She testified to the rest of the events that happened that night. She described everything she had seen and everything she had witnessed in detail. She sat and answered all of their follow-up questions to the best of her ability. She clarified details for the record. She told them everything.\n\nIt seemed like it would never end.\n\nWhen the Committee was finally satisfied with her testimony and they had no further questions, Leah was literally exhausted. She didn't take a single break even though they had offered one several times. She had just wanted to get through it and be done with it once and for all. Now that it was over she felt like she had run a marathon on her hands and knees. She was physically shaking when security came and led her outside to be handed over to her armed escort. As she walked out of the building with her protection detail, she felt sick and literally had to stop and lean against a wall for a few moments.\n\nShe could hardly remember the ride back in the armored SUV to Jules's apartment. Leah unlocked the door and barely spoke two words to Jules. She simply undressed as she zombie-walked into the bathroom, took a long hot shower and then couldn't bring herself to do anything but crawl into bed. Jules hovered over her the entire time, but didn't bother Leah with any questions. Jules knew it would take her some time to recover and when she was ready to talk, she would talk.\n\nFor now Jules simply watched over her as she slept.\n\n****\n\nJules let Leah sleep for the rest of the day and on through the night...but enough was enough.\n\nIt took the redhead an inordinate amount of pleading, coaxing and cajoling to get Leah to finally agree to get up and out of the apartment for some breakfast. Jules thought it might have been the flashing of her boobs with the promise of more to come that finally did the trick. Leah shook her head as Jules sat next to her in the backseat of the armored SUV with a smug look of satisfaction on her face. Leah didn't have the heart to tell Jules that the reason she had actually caved in and agreed to breakfast was to get Jules to just be quiet. Well...that and the boobs.\n\nThey didn't have to wait long at all as the hostess approached them with menus just as they stepped through the entrance to the restaurant. They were shown to a booth and their security escort took a nearby table. Jules had gotten to the point that she was able to mostly ignore the pairs of armed men that went with them everywhere, but Leah was constantly aware of them. They both ordered coffee from the hostess and studied the menus for a few minutes until the waiter appeared a few minutes later with their java and pulled out his order pad. Jules ordered pancakes and Leah went with eggs, bacon and hash browns. They also decided to share an order of the house special wild blueberry mini-muffins.\n\nThe waiter came right back out with their basket of mini-muffins. The intimidating men sitting at the nearby table watching his every move seemed to make the young waiter a little nervous and he ended up knocking one of their water glasses over. The water ran all over the table and started to drip down onto Jules's purse, but the waiter thoughtfully snatched it up and made a big show of wiping it off with a towel he had hanging off of his apron. The young man apologized profusely and another waitress came over to help him get everything cleaned up. They finally got the table squared away and the young waiter made it a point of handing the now dry purse back to Jules before finally leaving them to eat in peace.\n\nAfter all the excitement was over, Leah sipped her coffee and waited. She knew Jules was probably going to start asking about how the testimony went and she really couldn't blame her...if their roles had been reversed, Leah would have been just as concerned. The problem was that she just really didn't feel like talking about it. Not to Jules and not to anybody else. Yesterday had been hard enough to get through without dwelling on it and rehashing all the details. So when Jules opened her mouth, Leah was not prepared for what came next.\n\n\"I think you should talk to him.\"\n\n\"Talk to him...who?\" Leah asked suspiciously, but deep inside already knew the answer.\n\nJules toyed with the spoon she had used to stir her coffee with before looking up and replying. \"Rackley.\"\n\nLeah didn't say anything for a moment as she studied Jules's face. \"Why?\"\n\n\"Oh, come on,\" Jules scoffed with a small grin. \"With everything that's happened, you can't tell me you haven't thought about it?\"\n\n\"How could you possibly know what I have or haven't thought about?\" Leah said in very low voice.\n\n\"No...uh-uh,\" Jules surprised Leah again by not backing down. \"You can just put the intimidation bullshit away because I'm not scared of you, okay? I love you, Leah...and you are not going to shut me out.\"\n\n\"Oh, really?\"\n\n\"Yeah, really...,\" Jules looked into Leah's eyes sincerely. \"Not if you want us to work.\"\n\nLeah didn't say anything.\n\n\"Do you?\" Jules asked and reached across the table and held her hand out.\n\nLeah looked down at Jules's hand and felt like she could just cry forever as she placed her hand in it. \"Yes...I do.\"\n\n\"Then let me in,\" Jules pleaded. \"I'm not going to push you. Go at your own pace or whatever...but you have to let me in.\"\n\n\"Okay,\" Leah blew out a somewhat shaky breath and then chuckled. \"You're so damn dramatic.\"\n\n\"Shit,\" Jules grinned and bit into a mini-muffin. \"You ain't seen nothin' yet.\"\n\n\"Great,\" Leah rolled her eyes. She grew quiet again. \"I guess I have thought about what I would say to him...what he would say to me.\"\n\n\"I thought so.\"\n\n\"I mean...\" Leah started to explain and then stopped with a small shake of her head. \"It doesn't matter. I'll never see him again and I'll just have to live with that.\"\n\nJules didn't say anything.\n\nLeah immediately picked up on the fact the curvy redhead was suddenly avoiding eye contact. \"What?\"\n\n\"What...what?\"\n\n\"Jules.\"\n\n\"I, uh...\" Jules hem-hawed around and then said quietly. \"I sort of made a phone call.\"\n\nLeah cocked an eyebrow and waited for the redhead to continue.\n\n\"I kind of...\" Jules started and then stopped. She smiled guiltily. \"Well, I kind of called in a favor.\"\n\nJules was granted a momentary reprieve as the waiter brought their food. The redhead enthusiastically thanked the young man and then occupied herself by meticulously putting butter and syrup on her pancakes. Leah just sat there and watched her. The waiter left and Jules kept her head down as she cut her food into little squares. Leah folded her arms.\n\n\"Jules.\"\n\n\"Fine,\" Jules sighed and put her utensils down. \"Look, I was worried about you. I thought that if you could just have a chance to sit down and talk to him...it would help. So I called Hank and he pulled some strings and tomorrow we're going to some dark site thingy and you'll be able to see him.\"\n\n\"Dark site thingy?\" Leah repeated and despite everything else couldn't help but grin. \"God, you are so cute.\"\n\nJules shrugged and smiled as she took a big bite of pancake. Jules proceeded to fill Leah in on everything she knew about the trip to see Rackley tomorrow...which wasn't a lot of information. The only thing Jules knew for sure was that it was all going to be done very covertly and with a high security presence. Leah understood and changed the subject. She was starting to feel nervous all over again about the possibility of seeing Travis Rackley face to face, but for right now she just wanted to enjoy this woman's company. The woman she loved.\n\nThey spent the rest of the morning enjoying their breakfast.\n\n****\n\nThe young waiter stopped by each of his tables and refilled coffee cups and made sure everyone had what they needed. Since his tables were good for a few minutes, he told the manager he was going to step outside and take a quick smoke break. He was lucky the manager was also a smoker and sympathized with him. He was told to go ahead, but just make it quick.\n\nThe young man dodged his way through the kitchen area and walked out the back door. He lit up and checked over his shoulder as he quickly kept walking. He hadn't lied - he was taking a smoke break. Just not quite the break his manager thought it was. He walked to the far corner of the building. Away from prying eyes, he turned around to check the back door one more time and when he turned back around the scary looking dude in the sport coat was right there.\n\n\"Shit!\" the young man exclaimed and turned his head to blow out a stream of smoke. \"Dude, you scared the crap out of me.\"\n\n\"Well?\" the scary looking man asked.\n\n\"I did it,\" he nodded. \"Slipped it into that chick's purse...the one with the big tits.\"\n\nThe young waiter was referring to the small black disc the man had given him - the same one he had put into Jules's purse when he was wiping it off. The thing was nothing really, slightly smaller than a dime and kind of resembled a really flat button. It was the kind of thing most people wouldn't give a second look to unless they knew what they were looking for.\n\n\"Nobody saw you do it?\" Sport coat asked. He had been watching the redhead's apartment from a distance for several days and had discreetly followed the targets to this restaurant. The luck had come when he happened to see this young waiter dressed for work in the restaurant's distinctive green shirt stop for a smoke break before going into to start his shift. The rest had been easy.\n\n\"Nah,\" the kid shook his head and nervously sucked on the cigarette. \"It's all good.\"\n\n\"Let me check it,\" Sport coat nodded and pulled out his phone. He tapped a few buttons and then intently studied the screen. Finally satisfied he smiled and handed the kid a neatly folded wad of money. \"Good job, kid.\"\n\n\"No problem,\" the young waiter called after him as sport coat walked away. That was the easiest hundred bucks he'd ever made.\n\n****\n\nMr. Smith answered his encrypted cell phone. \"Yes?\"\n\n\"The tracker is in place,\" the man wearing the sport coat was walking away from the restaurant as he spoke into the phone. \"No issues. Strong signal too.\"\n\n\"Perfect, thank you,\" Smith allowed himself a very small sigh of relief. Placing the tracker had been the hardest part. Now he just needed to have his people monitor it and pray that at some point, somewhere along the line within the next forty-eight hours his team was presented an opportunity to take care of the target. Forty-eight hours was all the time he had because that was the maximum battery life of the small transmitter.\n\nSmith needed a Hail Mary right now...\n\n****\n\nLeah was quiet.\n\nThere was nothing unusual about that...except the reason she was being so quiet was because she was more scared than she had been in a long time. It had nothing to do with the fact that she was riding in the back of a government SUV as it traveled deeper and deeper into the middle of nowhere. It wasn't even due to the stuffy black-out hood that she was being forced to wear over her head that made sight impossible and most of the sounds around her inaudible.\n\nShe was afraid because she had no idea what she was going to say when she faced him...or what he would say to her. The SUV bounced in and out of another rut, pushing her hard against the seatbelt. Leah was pretty sure most people would be having a panic attack if they had been in her situation. Leah had to admit this wasn't a first for her. She certainly couldn't say the same for Jules so Leah gave the redhead's hand a reassuring squeeze.\n\nThe SUV continued rolling along one of the few paved roads that ran amid the hundreds of miles of uncultivated fields and natural forests of Southeast Virginia. Leah sensed that the vehicle was finally slowing down. And in fact it was as the driver approached a private drive on a one hundred acre section of land where there seemed to be little more than dense vegetation and the occasional glimpse of wildlife.\n\nWhat neither Leah nor Jules could see about this particular piece of privately owned property because of the hoods was the well concealed razor wire running around the perimeter of this secluded tract of land. They were also completely unaware of the multiple security monitors or the armed men and women discreetly patrolling the woods. These same concealed sentries watched in silence as the SUV rolled to a stop in front of the plain, brick building that sat all by itself in the middle of the property.",
        "After a brief pause the unknown and unnamed escorts opened the rear doors and helped Leah and Jules from the vehicle. These driver escorts then passed them off to another pair of nameless, faceless escorts who firmly held one of their arms and walked them towards something that was in the opposite direction of the vehicle. She didn't have a clue where they were headed, but Leah was aware that the terrain went from gravel to grass and then finally concrete. She also knew that they must have stepped through a doorway and gone indoors from the drastic change in smells and temperature. They stopped walking and just stood in place for a few moments and then the hoods were taken off.\n\nBoth women blinked rapidly and breathed in deeply in relief from the stuffy hoods. They found themselves standing in a plain white room with no furniture and no decoration. It was literally empty with the exception of ceiling mounted cameras that were pointing at them and the pair of steel elevator doors they stood facing. The doors silently slid open and the two men who had been escorting them didn't say anything as they waited for their guests to step into the elevator car. The women did and the escorts followed them in. One of the escorts unlocked a control panel and then keyed in a code into an interior control panel. The elevator started moving and Leah immediately sensed they were going down. So...it was an underground facility.\n\nLeah figured they must have gone down at least thirty feet below the surface before the elevator stopped. The doors opened and the group exited the elevator and stepped right into a large hallway that was just as blank and empty of decoration as the room upstairs. Jules silently wondered if whoever had designed and built this place had indulged in one too many horror movies involving insane asylums because this place was just flat out creepy. Leah knew what this place was and why it looked the way it did. At an anonymous detention center, the people in control didn't want to give the people being detained any chance at objects that might possibly be used as a weapon...and almost anything could be used as a weapon.\n\nThe escorts led them down the hallway that was lined with a series of heavy, solid looking steel doors that didn't have any door handles on them. There was a small control panel set into the wall beside each door and then an opening in the middle of the door. It looked very foreign and futuristic to Jules. It looked like a lot of other Black Site prisons Leah had been to in the past.\n\nThey finally stopped at a door about halfway down the hall. One of the escorts punched in a code and then stuck a rounded key looking device into the opening and waited for a click. The heavy door released and the same escort who had opened it took a step back and held the heavy door open for them. Jules quietly advised Leah she would wait outside and reached out and gave Leah's hand an encouraging squeeze. Leah took a deep breath and stepped into the room.\n\nThe room was empty and bare just like everything else except in the middle of the room was a small, square table that looked like it was made out of steel. It was bolted to the floor. On opposite sides of the table were two chairs, also made of metal and also bolted to the floor. Leah glanced up at one of several cameras that were built into the ceiling. She seriously doubted there were any blind spots in a place like this.\n\nLeah hesitated and then sat down in one of the chairs at the table and waited. She seemed to be doing a lot of that lately. She quietly sat and just stared down at her hands. She looked up as a door on the other side of the room swung open. She hadn't noticed it when she first walked in. She held her breath as she watched two more of these escort people walk Travis Rackley into the room.\n\n********\n\nChairman: And approximately what time was this, Ms. Hartsall?\n\nLeah: Around 0200, shortly after we had confirmed the kill, sir.\n\nChairman: Can you tell us what specifically made Mr. Rackley change the extraction time, Ms. Hartsall?\n\nLeah: Rack didn't want us standing around and waiting for the body to be discovered. He said we needed to move forward with the extraction ASAP rather than wait until daylight.\n\nChairman: Did he say why?\n\nLeah: He said he didn't trust the trainees. He told us he would talk to them and come up with an excuse as to why we had to leave in the middle of the night.\n\nChairman: And you agreed with Mr. Rackley's plan?\n\nLeah: Well, it wasn't my place to agree or disagree, sir. Rack was Team Leader. But for the record, we were all in agreement...we were hoping it would buy us a couple of extra hours so we could get out of the country without further incident.\n\nChairman: So rather than wait until the following morning, Team Leader Rackley decided to approach the warehouse that night. Is that correct, Ms. Hartsall?\n\nLeah: Yes, sir, that is correct.\n\nChairman: Please describe the events that happened as your team approached the warehouse that night, Ms. Hartsall.\n\nLeah: Well...at first we held back and observed for a while, sir.\n\nChairman: Why did you do that, Ms. Hartsall?\n\nLeah: Because the trainees still had fires going and we could hear activity inside. They had also posted a sentry outside of the main door.\n\nChairman: Was that unusual, Ms. Hartsall?\n\nLeah: Very unusual, sir. The trainees never stayed up that late and they never pulled guard duty.\n\nChairman: Okay, thank you. What happened next, Ms. Hartsall?\n\nThe four of them were being ultra silent as they worked their way closer to the old, dilapidated Quonset hut. Something definitely didn't feel right. Even though they each wore their com-units with ear pieces and throat mics, Rack used hand signals to indicate he wanted Leah on over-watch with the M2010 and Barkley and Reiberson to spread out on either side of the perimeter. The three of them silently obeyed as Rackley started to circle the warehouse.\n\nLeah snaked her way to a higher patch of ground and then quickly and silently set up with the sniper rifle. She attached the integral suppressor to the barrel and inserted the five round magazine of special hand-loaded sub-sonic rounds. She dropped onto the ground, adjusted her position and reached into her kit. She attached the small device to the end of her scope that would give her night vision capabilities. She settled in behind the scope. She was only seventy yards out. She would not miss if Rack called on her to start silently handing out long distance death certificates.\n\nLeah kept her finger off of the trigger as she swung her scope around and checked that both Bark and Reibs were in position. She swung back and watched as the ghostly green image of Rack approached the side of the warehouse. She keyed her throat mic and advised that they were in position and good to go.\n\nRackley confirmed with a simple click of his mic and then worked his way to a spot that had a large gap in the boards on the side of the warehouse. The gap was about eight feet off the ground so he had to climb and pull himself up to peek inside. Leah watched through the scope as he hung there for about a minute and looked through the gap. She then watched him let go and he actually stumbled a little when he landed. She couldn't understand why -- Rack was as sure-footed as any man alive. She also didn't understand the look on his face as he turned around.\n\n********\n\nThe simple walk across the room was slow going as Rackley was bound with four-point restraints. His wrists were cuffed to the chain around his waist which was attached by another length of chain to the chain that ran between the cuffs around his ankles. He shuffled along towards the metal table with a guard on either side of him firmly holding onto each of his arms. Rackley kept his head down as he concentrated on his shuffle so he didn't trip.\n\nHe finally made it to the table and the guards let him go. Rack turned half way around so that he could back himself into the chair. He was moving rather gingerly as if he was in pain and Leah immediately wondered if he was being subjected to interrogations. He sat down heavily and finally managed to swivel around to face her despite all of the restraints.\n\n\"I have probably told you this more than once over the years, sweet cheeks,\" Rackley immediately flashed her that familiar grin. \"But I guarantee I never meant it more than I do right now...because you are one hell of a sight for these sore eyes.\"\n\n\"Shut up,\" Leah scowled, but then couldn't help but smile back at him.\n\nThey continued smiling at each other for another moment or two and then the grins faded and they just sat there in silence. While Travis Rackley was overjoyed to see one of his favorite people in the whole world, he didn't want to make small talk. He was embarrassed that Leah had to see him like this. He cleared his throat.\n\n\"I have to say I didn't expect to see you hear.\"\n\n\"Jules pulled some strings,\" Leah explained quietly.\n\n\"Oh,\" Rackley nodded. \"I see. So...are you okay?\"\n\n\"I am,\" Leah nodded. \"You?\"\n\n\"I've seen better days,\" Rackley chuckled. \"But I've seen worse too...I'm surviving.\"\n\nShe nodded again and then said, \"It's good to see you.\"\n\n\"Leah,\" Rackley sighed and leaned forward on the table. \"Why did you come here?\"\n\n\"I...\" Leah started to say and stopped. \"I'm not sure.\"\n\n\"Come on.\" Rackley said quietly. \"Talk to me.\"\n\n\"I just wanted you to know,\" Leah whispered and tears welled up in her eyes. \"I'm sorry, Rack.\"\n\n\"You don't have anything to be sorry about,\" Rackley sat up straighter.\n\n\"Yes,\" Leah wiped at her eyes. \"I do.\"\n\n\"Hold on a minute,\" Rackley jingled his chains as he tried to hold up a hand. \"Let's get a couple of things straight. First off, I'm a big boy, Leah...I made my choices and I don't have a problem paying my tab. Are we clear on that?\"\n\n\"Choices?\" Leah looked up in disbelief. \"I testified, Rack. I told them everything...about Andarab.\"\n\n\"Is that what's got you all knotted up?\" Rackley asked her. \"The whole testimony thing?\"\n\nLeah nodded and few more tears slid down her cheeks.\n\n********\n\nChairman: And what happened next?\n\nLeah: Rack called us all back in to our original meeting point, sir.\n\nChairman: And then, Ms. Hartsall?\n\nLeah: Rack wouldn't even make eye contact with us. He acted like he was in a hurry and...I guess he seemed really upset about something. He started to strip down out of all of his non-essential gear and then loaded up with weapons and ammo like he was getting ready for a combat mission, sir.\n\nChairman: Did he happen to mention to you or your team what his intentions were?\n\nLeah: No, sir, he did not.\n\nChairman: Did he say anything at all, Ms. Hartsall?\n\nLeah: Yes, sir. He instructed us to watch his six, sir.\n\nChairman: And what does that mean? Watching his six?\n\nLeah: It means we were to watch his back, sir. Provide back-up to whatever it was he was planning to do.\n\nChairman: And did you, Ms. Hartsall?\n\nLeah: Yes, sir. We did.\n\n********\n\n\"How long have you known me, Leah?\"\n\nLeah shrugged and wiped at her eyes again.\n\n\"We were in the shit for six years,\" Rackley informed her. \"In all that time...in all the hell holes we ended up in - did you ever know me to get upset or hold a grudge against anybody for doing the right thing?\"\n\nLeah solemnly shook her head.\n\n\"What was the first thing I told you when I started training you?\" Rackley asked her gently. \"Do you remember? During that first week when you screwed up the map coordinates and didn't know what to do?\"\n\nLeah shrugged and wiped at her nose.\n\n\"Come on, sweet cheeks,\" Rackley encouraged her. \"I know you remember. Tell me.\"\n\n\"Never apologize for telling the truth.\"\n\n\"Exactly,\" Rack said softly and leaned as far across the table as his restraints would let him. \"So you know in your heart I'm not mad at you...right?\"\n\nLeah shrugged and sniffled, but then asked in an almost girlish voice as she looked up at him through her eyebrows. \"You're really not mad?\"\n\n\"Of course not,\" Rackley reassured her with a smile. He paused for a moment. \"Look, I don't regret what I did in Andarab...\"\n\n\"You don't?\" Leah asked quietly.\n\n********\n\nChairman: What did Mr. Rackley do next, Ms. Hartsall?\n\nLeah: He moved into position behind their sentry, sir.\n\nChairman: Did he approach this sentry person, Ms. Hartsall? Did he attempt to question this man?\n\nLeah: Uh...no, sir. He didn't.\n\nRack always could move like a ghost.\n\nHe slowly moved in and without a sound came up ten feet behind the sentry who just stood there obliviously smoking a cigarette. The guy literally did not have a clue someone was behind him. Leah recognized the sentry as the youngest of the trainees. He wasn't the worst of what they had been dealing with for the past three days, but he wasn't exactly a peach either. They watched Rackley stand up tall and walk directly up behind the man. The three of them let out a collective surprised gasp as with two lightning quick movements Rack viciously snapped the young man's neck.\n\n\"What the fuck?\" Barkley whispered urgently.\n\n\"No idea.\" Leah whispered back. She forced herself to get over her shock and commanded the other two men, \"Let's move.\"\n\nThey silently moved into covering positions as Rack dragged the body over to lay it against the side of the wall. He rejoined them and without a word to his team started a countdown on his fingers to entry. Leah had never seen that look on Rack's face before. She wasn't really sure how to describe it, but she knew it was the scariest expression she had ever seen on a human being's face in her life. It was something ferocious and primal.\n\nRack's count reached one and they burst into the warehouse.\n\n\"Stand the fuck down!\" Rackley shouted at the top of his lungs and fired a warning burst into the air from his M4. Leah, Barkley and Reiberson quickly fanned out and covered every possible angle, ordering everyone to freeze as Rackley stalked into the middle of the room.\n\nEveryone inside of the warehoused froze and fell silent...everyone except the women and young girls. They continued crying and keening in pain and terror. Leah blinked her eyes at the horror she was seeing and at first it wouldn't register. The female villagers were lined up against one wall of the warehouse. The four adult females and five girls had their hands bound and short lengths of rope around their necks tying them helplessly to the wall like dogs. They were cowering and hiding their faces as they cried. Except for the young girl of about twelve whose hands and feet were tied spread-eagle to the four corners of a table. She was covered in blood and her clothes were in a pile next to the table. These fucking animals had been taking turns torturing and raping her.\n\nOne of the American's from the security company moved from where he had been leaning up against the wall. Leah remembered his name was Clark. He slowly approached Rackley with his hands held up. He shook his head. \"Man, I tried to tell them --\"\n\nWithout a word Rackley smoothly and quickly drew the Beretta from the tactical holster on his thigh and put a 9mm hole into Clark's forehead. Bark and Reibs shared a quick look and then pulled their M4's in tighter against their cheeks. The trainees jumped at the gunshot. They continued holding their hands up as they stared at the body of the dead American trainer.\n\n\"What the hell, man? Have you lost your --\" the other American trainer started to shout at Rackley, but another boom echoed around the warehouse and he joined his friend in hell.\n\nLeah tightened her grip on her CAR-15 as she maintained her own position. The assault rifle felt like it weighed a hundred pounds. She was breathing so hard and so fast that she suddenly thought she might hyperventilate. She continued to cover the two trainees who were in front of her, but couldn't keep her eyes from glancing back over at the little girl tied to the table who was just whimpering now.\n\n\"Which one?\" Rack stepped forward and asked. His voice was thick and hoarse with emotion. He slowly looked around the room and his eyes looked like they belonged to some rabid animal. \"Which one of you sick motherfuckers came up with this evil shit?\"\n\nOf course no one spoke up. Rackley's eyes flicked wildly around the room as his lip curled back from his teeth like a predator's. He grabbed the closest trainee by the throat and it seemed Rack had superhuman strength as he man-handled the grown adult with one hand like he was small child. The other trainees started surreptitiously trading looks with each other out of the corner of their eyes.\n\nWhat did this crazy American think he was going to do?\n\nChairman: And what did Mr. Rackley do then?\n\nLeah: He shot the trainee in the head, sir.\n\nChairman: And did he say anything when he did this, Ms. Hartsall?\n\nLeah: Yes, sir, he said 'fucking answer me', sir...and then he repeated his original question.\n\nChairman: And did you say anything at this time, Ms. Hartsall?\n\nLeah: Yes, sir. I asked Rack if I could attend to the young girl, sir.\n\nChairman: Did you?\n\nLeah: Yes, sir, I did to the best of my ability.\n\nChairman: And were you able to help her, Ms. Hartsall?\n\nLeah: No, sir. I tried...but she died in my arms, sir.\n\nChairman: Oh...well, I'm sorry to hear that. What did Mr. Rackley do next, Ms. Hartsall?\n\nLeah: He killed them, sir.\n\nChairman: Which ones? The ones responsible for raping that young girl?\n\nLeah: No, sir....All of them.\n\nChairman: Did they all confess, Ms. Hartsall?\n\nLeah: No, sir. They didn't have to. They either participated or let it happen...either way Rack figured they were all just as guilty. So he put a bullet in each of their heads...sir.\n\n********\n\n\"Not one little bit,\" Rackley reassured her again with a firm nod. \"The world is a much better place without those pieces of shit walking around in it.\"\n\nLeah nodded her head in understanding. She agreed.\n\n\"But at the end of the day,\" he continued and smiled at her. \"Deep down, I understand why you had to talk about it.\"\n\nLeah looked up at him and her lip quivered.\n\n\"I mean it,\" he nodded. \"I know you Leah...I understand why you needed to finally get that nightmare out of your head.\"\n\n\"You do?\" Leah whispered. When Rack nodded she broke down and began sobbing. She leaned her head down on the desk close enough to Rackley that he managed to get his fingertips up high enough to stroke her hair.\n\n\"I do, sweet cakes...I understand,\" Rackley said softly and leaned far enough across the table to kiss her on top of her head. \"I honestly don't think you need my absolution for anything you said or did...but I need to tell you something.\"\n\nLeah managed to get control of herself and sit back up. She wiped her face with some embarrassment and sniffled. She looked at Rackley. Those bright blue eyes of hers were as vulnerable as he'd ever seen them.\n\n\"I'm saying this because I think you need to hear it,\" Rackley whispered and actually smiled as his own tears started to leak from the corners of his eyes. \"I forgive you.\"\n\n****\n\n\"Good morning, General.\" Smith offered the polite greeting into the speaker phone on his desk. He was sitting in his home office holding his encrypted cell phone in his hand. He was staring at the longitude and latitude coordinates of the little tracking device.\n\n\"I'm about to walk out of the door with my family, Smith.\" He could hear the General sigh. \"Church service starts in twenty minutes, so I suggest you get to it rather quickly.\"",
        "\"My apologies, General,\" Smith sat up and leaned closer to the phone. \"I would never even think about disturbing you on a Sunday --\"\n\n\"What part of get to it did you not understand?\"\n\n\"Again, I apologize.\" Mr. Smith repeated and then stopped. \"I need a favor, General.\"\n\nThere was silence on the other end of the line and Smith thought he heard another sigh. \"Go ahead.\"\n\nSmith explained what the favor was and the General was more than a little unhappy that he was being asked for such a thing...but as a long-time member of The Council, he understood just how important this project was and the kind of time restraints Mr. Smith was under. He told Smith he would get back to him as soon as the service was over.\n\n\"Thank you, sir, I cannot tell you --\" Smith had sat back in his chair and was in the process of expressing his gratitude when he realized the General had already hung up.\n\n****\n\nSecretary McMillen, the man in charge of the Department of Homeland Security, sat at the head of the twenty person conference table located at one end of his spacious office in the DHS Headquarters building. He slowly looked around at the group of seven people sitting clustered at the table around him while he considered the proposal that had been put before them. He had already thanked each of them for taking time out of their Sunday afternoon for this meeting.\n\nThey had just finished reviewing the proposal. McMillen picked up his glass of water and took a long drink. After setting it back down on the coaster, he looked to his immediate right at his Chief of Staff. \"Your thoughts, Kris?\"\n\n\"I think it needs to happen.\" DHS Chief of Staff Kris Malone replied simply as he dropped his pen on the legal pad in front of him.\n\nThe Secretary's gaze moved on to Homeland's Executive Secretary. \"Dr. Connelly?\"\n\n\"I personally don't think there's any question,\" DHS Executive Secretary Dr. Katherine Connelly nodded. An attractive woman in her early fifties, Dr. Connelly took a quick look around the table and added, \"We have to do this and rather quickly.\"\n\n\"Now hold on, Kate,\" Sterling Bronson spoke up without waiting to be called on by the Secretary. His position was General Counsel for DHS. \"We don't have to do anything. Right now there isn't any evidence that a threat still exists. This is just a courtesy we are considering.\"\n\n\"I wouldn't necessarily call it a courtesy, Sterling,\" Deputy Secretary Alex Majors chimed in. As the second in command at DHS, his opinion mattered. \"Let's not forget what happened in this very building last week.\"\n\nSterling Bronson opened his mouth to voice his rebuttal but held his tongue when Secretary McMillen held his hand up. The Secretary looked down the table at their guest from the U.S. Marshals Service. Mark Troutman was the Marshals' Assistant Director of Witness Protection and had known Seth McMillen for over twenty years.\n\n\"Talk to me, Mark,\" Secretary McMillen said quietly. \"What's the Marshals Service official stance on this?\"\n\n\"Officially, we see it as a potential threat. Not a single agency or department has completed their part of the investigation, so on paper nothing has been substantiated yet,\" Troutman shrugged. \"Unofficially, I wouldn't be here if I didn't think the threat was viable. We've placed people in WITSEC for less.\"\n\nSecretary McMillen slowly nodded. They were dealing with an unknown organization - one that wasn't afraid to take big risks. Or were they? Did the threat start and end with the mercenaries that had attacked the headquarters building? Or was this something else? Something bigger?\n\nHe had to take the threat seriously. Listening to the majority consensus of his people and the U.S. Marshals had done nothing but confirm his gut instinct that Leah Hartsall should be placed into the WITSEC program. It would be effective just as soon as the Senate Select Committee on Intelligence ruled that she wouldn't need to provide any further testimony. Once they had given her the all clear, she'd be whisked off into the program as soon as the Marshals could get everything set up and in place.\n\nThe Secretary spoke quietly and firmly as he explained why he was going to move forward with his decision. With the exception of DHS's General Counsel, everyone in attendance agreed with the decision. The U. S. Marshals Service Assistant Director gave his approval of the decision and was in the process of politely excusing himself from the meeting as the rest of the Homeland group was preparing to move on to the next item on their agenda when the seventh member of the group spoke up.\n\n\"Excuse me, Mr. Secretary,\" Deputy Under-Secretary for Analysis Henry Atwood cleared his throat. \"May I make a couple of suggestions, sir?\"\n\nSecretary McMillen knew how just how integral of a role Hank Atwood had played in stopping the assault in Homeland's HQ building. He looked down the table and dipped his chin slightly for Atwood to continue.\n\n****\n\nWithin the depths of the same underground facility that Leah and Jules had visited the day before, a visitor was sitting comfortably in one of the wing back leather chairs positioned across the desk from the unofficial Warden's desk. The facility didn't exist on paper, so the title technically didn't officially exist either. Unofficial or not, there was no question in anyone's mind that came to this black-site holding facility that the full bird Colonel sitting behind the large desk was in charge.\n\n\"I have to say,\" the Colonel chose his words carefully, \"this is a highly unusual request.\"\n\n\"I understand that, Colonel,\" the handsome visitor nodded patiently and paused long enough to enjoy another sip of the Glenmorangie Single Malt his host had generously provided. \"I also want to assure you that this request is not being made lightly.\"\n\n\"I would naturally assume that to be the case,\" the Colonel allowed.\n\n\"And the Vice Chairman of the Joint Chiefs wanted me to extend his personal gratitude for your cooperation on this,\" the visitor continued and allowed himself a small smile when the Colonel visibly stiffened at the mention of the VCJCS.\n\n\"Of course,\" the Colonel nodded and cleared his throat. \"And please let the General know that if there is anything else I can do to assist with this...situation, I will do so to the best of my ability.\"\n\n\"I'll definitely pass that on,\" the visitor smiled.\n\n\"I would appreciate that.\"\n\n\"And I hate to cut this short,\" the man in the perfectly tailored Brooks Brothers suit announced as he stood up and finished his tumbler of scotch in one swallow. He set the glass down, straightened the sleeve on his charcoal gray jacket and started to walk towards the door of the Colonel's office. \"But I'm afraid I have a schedule to keep, Colonel.\"\n\n\"I understand, Mr. Smith,\" the Colonel called out and had to scramble out from behind his desk to catch up.\n\n****\n\nMr. Smith had informed the Colonel and his armed escort that he would be just fine left alone with the detainee and actually preferred it that way. As this was against facility protocol, it took a few more minutes of reassurances and finally a lightly veiled threat to get his way. After the Colonel and his men finally left, the visitor stood alone in front of the cell of one Travis Rackley or as he was known in this place, TDR06891.\n\n\"Hello, Mr. Rackley,\" the visitor greeted the man who chose to remain prone on his concrete bunk with his arms comfortably behind his head.\n\n\"Afternoon, Mr. Jones,\" Rackley replied in a friendly tone. \"Is it afternoon? And is it Mr. Jones today?\"\n\n\"It's actually almost midnight,\" the visitor corrected him. \"And it's Mr. Smith.\"\n\n\"Of course it is,\" Rackley chuckled and sat up, swinging his legs around to a sitting position. He comically looked around at his windowless cell and then shrugged at his visitor. \"It's kind of hard to keep track in here.\"\n\n\"I can imagine it is,\" the man agreed.\n\n\"I highly doubt that,\" Rackley scoffed.\n\n\"Pardon?\"\n\n\"The remote possibility that you would end up in a place like this doesn't exist in your world, Mr. Smith,\" Rackley explained. \"You couldn't imagine what this is like if you tried.\"\n\nThe visitor looked up as if he was carefully considering Rackley's observation. He finally looked back down and smiled. \"I suppose you are correct, Mr. Rackley.\"\n\n\"I know you didn't come all this way for small talk,\" Rackley said quietly as he stood up and came over to face Mr. Smith through the bars of his cell. \"Why are you here?\"\n\n\"Actually,\" Mr. Smith replied smoothly, \"we have a bit of a dilemma that we'd like your assistance with.\"\n\nRackley studied the man in the expensive suit with a flat, unreadable gaze for more than a minute. He finally nodded his head for the visitor to continue.\n\n\"This current situation is proving to be quite problematic,\" Smith began as he reached into the inside pocket of his suit jacket and pulled out his cell phone. \"Our group has been unable to reach a consensus on the proper course of action.\"\n\n\"Is that right?\" Rackley replied quietly and reached up a hand to rest it on one of the bars of his cell door.\n\n\"Yes, that is correct,\" Mr. Smith nodded and began scrolling through his phone.\n\n\"And?\" Rackley prompted.\n\n\"We basically have two choices. We can lose a very valuable asset,\" the visitor paused to glance up at Rackley with a meaningful look and then went back to his phone, \"who has served us well, but due to current circumstances is no longer of use to us.\"\n\n\"Or,\" Mr. Smith continued and then turned his phone around so Rackley could see the screen, \"we could just eliminate the source of information that poses a threat.\"\n\nRackley silently stared at the image of Leah on the phone until Mr. Smith exited the screen and put it back in his jacket.\n\n\"It's fairly simple if you think about it...if one or the other was to simply cease being a factor in this annoying investigation,\" Mr. Smith explained. \"Well, then there isn't any link to the group, is there?\"\n\nRackley remained silent.\n\n\"I mean, if that was the case,\" Smith continued, \"then we certainly wouldn't need to risk any more unnecessary exposure in pursuing the matter further.\"\n\nRackley continued to stand there stoically, the only indication of emotion being the knuckles of his hand turning white as he gripped the cell bar tightly.\n\n\"Your thoughts on the matter, Mr. Rackley?\" the visitor asked pleasantly.\n\nA muscle in Rackley's cheek twitched as every single fiber of his being willed the bars separating him from this man to disappear. Through sheer force of will he wanted them to magically vanish for just a minute...because sixty seconds would be all he needed.\n\nRackley suddenly smiled and shook his head as he began chuckling.\n\n\"Did I say something to amuse you, Mr. Rackley?\" Smith cocked his head inquisitively.\n\n\"No....but I thought you said there was a dilemma?\"\n\nMr. Smith raised an eyebrow.\n\nRackley leaned a little closer to the bars and his grin disappeared as he lowered his voice. \"Go tell your puppet masters I know what needs to be done, errand boy...and I'll do it.\"\n\nSmith didn't blink an eye or appear ruffled in any way. \"That's your final decision?\"\n\n\"It is,\" Rackley replied through clenched teeth.\n\nSmith politely nodded his acceptance of the decision.\n\n\"Just so we're clear...I do this and there won't be any need to pursue it further, correct?\"\n\n\"That is correct,\" Mr. Smith confirmed.\n\n\"Alright,\" Rackley sighed and went back to sit down on his bunk. \"I'll take care of it.\"\n\n\"You have twenty four hours.\"\n\n\"Roger that,\" Rackley said quietly with a single nod. \"Now get the fuck out of my sight.\"\n\n****\n\nThe trip had taken longer than Leah had thought it would.\n\nWhich made sense since rather than flying they had driven...which they really had no other choice but to drive since she did have all of her stuff with her. It didn't matter one way or the other to Leah. She felt like she was on her own again. She listened without comment as the Deputies from the U.S. Marshals Service gave her their final instructions. They asked her if she had any questions. She didn't. Satisfied, they handed her a list of emergency contacts. They told her they would stop back in to check on her in a couple of days, wished her good luck and left.\n\nWith the Marshals gone, Leah wandered from empty room to empty room. Now she really was on her own. Finally, she sat on the bare mattress in the bedroom. Moving into a new place was nothing new to the tall blonde. Once she had officially terminated her contract with the Agency, she'd spent the next six months moving around the country in search of that elusive place that she could call home. She thought she had found that back in North Carolina...but then a certain redheaded Federal Agent had come into her life and turned her world upside down.\n\nAs her thoughts began to dwell on Jules, Leah stood up and rubbed her palms against the thighs of her jeans. She missed Jules so much that her heart literally ached in her chest. Leah sighed and picked up her suitcase and dumped it on the bed. She began taking each piece of clothing out and separating it into a fold pile and a hang up pile. She had to do something to occupy herself or she thought she might cry.\n\nLeah froze with a shirt in her hand. She cocked her head when she heard a fumbling noise at the front door.\n\nIt was more than likely the Marshals Service. Maybe they forgot to unload some of her belongings or they decided to make one last check on her...at this point it didn't really matter. Leah's instincts had already kicked in as she quickly dug in her suitcase and came out with a 9mm in her hand. She held it down behind her thigh as she quickly and quietly moved down the hallway towards the living room. She stopped at the end of the hall and peeked around the corner towards the front door.\n\nShe could see shadows moving along the small crack at the bottom of the door.\n\nThe door latch rattled loudly and then the knob turned. As the front door began to open, Leah brought the semi-automatic handgun up and took aim. She took a deep breath and held it as her finger took the slack out of the trigger. She was mentally prepared to eliminate the threat. As soon as she caught the first glimpse of auburn hair, she breathed out and took her finger off of the trigger as she lowered her weapon. Jules was standing in the open doorway with a huge grin on her face. Leah was stunned.\n\n\"You're early,\" Leah finally remarked. She carefully set the gun down on a small table in the hallway.\n\n\"Yep,\" Jules nodded as Hank crowded in behind her. Jules dropped her bags as Leah crossed the room and swept her up in a big hug. One of Hank Atwood's recommendations to the Secretary of Homeland Security was to give Jules the option to join Leah in the WITSEC program.\n\n\"You're early,\" Leah repeated with a smile and literally picked the redhead up off of her feet and swung her around. As she finally set Jules down, Leah began showering that smiling face with kisses.\n\nHank turned away in embarrassment and cleared his throat.\n\n\"Sorry,\" Leah shrugged and let Jules go from the embrace. Jules reached out and grabbed Leah's hand as they both turned to look at Atwood.\n\n\"No worries,\" Hank smiled at them.\n\n\"Can I get y'all anything?\" Leah asked and took a step towards the kitchen. \"You want some coffee or water or something?\"\n\n\"No...no, thank you,\" Atwood tipped his chin. \"I appreciate it, but I actually need to get going. I just wanted to make sure Jules got here safe and sound.\"\n\n\"Thank you for this, Hank,\" Jules smiled at him and let go of Leah's hand. She moved towards Atwood and wrapped her arms around him. She felt tears well up in her eyes.\n\n\"You're very welcome, Jules,\" Hank Atwood said affectionately. After hugging for another moment, he put his hands on the shorter redhead's shoulders and pushed her away to arm's length so he could bend down and look into her eyes. \"You two just stick to the program. Follow the Marshals' instructions and stay out of trouble. You hear me?\"\n\nJules nodded and Leah added, \"Yes, sir.\"\n\n\"I'll be checking in on you every so often,\" Atwood announced as he turned towards the door. He gave Jules another tight smile and then motioned with his head at Leah. \"Walk me to my car?\"\n\n\"Sure,\" Leah replied warily.\n\nShe paused to look at Jules who smiled sympathetically and nodded her head encouragingly. Leah was confused by that, but went ahead and followed Hank Atwood out the door. There was a neat stack of boxes and another suitcase on the porch that Leah was sure belonged to Jules that they had to maneuver around. She trailed behind him down the porch steps, down the front walk and towards the blacked out Lincoln Navigator that sat idling in the driveway. Atwood nodded at his driver as they approached the vehicle. He stopped at the rear passenger door and turned to face Leah.\n\n\"Leah,\" Atwood said quietly as he reached into the inside pocket of his suit jacket. He pulled out an envelope and hesitated with a solemn look on his face. He kept the envelope in his hand as in a hushed tone he informed her of the death of Travis Rackley.\n\nLeah didn't move. She stood there with a blank expression on her face as Homeland Security's Deputy Under-Secretary for Analysis briefly explained the Black Site Prison's version of events. He then informed her that the Senate Select Committee on Intelligence would be closing their investigation. Her testimony would be sealed and they wouldn't be calling her again in relation to the events that happened in Andarab.\n\nIt was over.\n\nHank told her how truly sorry he was. He reached out a hand and placed it gently on her shoulder. She didn't pull away from it. She didn't do anything but stand there in stunned silence. He handed her the envelope and explained that the officials from the Black Site had found it in Rackley's cell. It was sealed and addressed to Leah. She took it without looking at it and held it down by her side as she continued to stare ahead blankly.\n\nAtwood expressed his sympathy again and then told her goodbye. She just stood there and numbly watched Hank Atwood climb into the back of the SUV. She watched it back out of the driveway and pull off to disappear down the road. Leah slowly turned towards the house. Jules was standing on the porch. She had her arms wrapped around herself as if she was cold. Leah turned slightly towards the back of their little house.\n\n\"Leah?\" Jules called out to her.\n\n\"I...\" Leah said quietly and then had to clear her throat. \"I'm going for a walk.\"\n\n\"Do you want me to come with you?\"\n\n\"No,\" Leah shook her head. \"I think...I just want to be alone for a little while.\"\n\n\"Are you sure?\" Jules asked with her heart breaking. She wanted to be able to make the hurt go away, but knew there was nothing she could do for Leah right now.\n\n\"I'm sure,\" Leah nodded as she began walking slowly towards the back yard.\n\nShe walked across the yard and then on through the little patch of woods that was directly behind the house. She followed a little trail that eventually led down to a clearing which hid a small lake. She stopped and took a deep breath and then made her way down to the end of the short pier that jutted out from the bank.\n\nLeah sat down and held the envelope from Rack in both hands. Her feet almost touched the water. She sat and just looked at the envelope for a long time. She finally opened it and with a deep breath started reading. As she read a small smile spread across her face at the memories Rackley's words conjured up. She was smiling while at the same time tears started to spill down her cheeks. Her hand went to her mouth as a small laugh escaped.\n\nShe continued reading and her smile slowly faded. Her brow furrowed. She shook her head slightly and started back at the top and reread the letter again. By the end, a look of resolve had replaced the tears. She held Rackley's letter tightly in her hand and looked out at the water.",
        "Finally, she wiped her face off and reached in her pocket and pulled out a zippo lighter. She held the lighter in one hand and reread the last few lines of the letter one more time. She sparked the lighter to life and then set the edge of the paper on fire. She held it up and watched it burn until it was mostly ash and too hot to hold any longer.\n\nShe let it go and watched the ashes flutter away and fall into the water.\n\n\"Okay, Rack,\" Leah quietly said out loud. \"I promise.\"\n\n****\n\nEpilogue:\n\n\"That is simply unacceptable,\" Mr. Smith sighed into the encrypted cell phone.\n\nHe continued to listen to his lawyers talk over each other into their speaker phone. These last three days had been a nightmare. He probably should have seen this coming. Earlier in the week he was shocked when the evening news reported that the Congressman had dropped dead of a stroke. His first selfish thought had been that the old man's death might not be a good thing for his future. Wow...had that been an understatement. The old man kicks the bucket, nobody from The Council bothers to call and let him know and before the body is even cold - every fucking aspect of his life starts turning to shit.\n\nFirst his accountant called that next morning and announced that the IRS was hitting him with a full scale audit - both professionally and personally. Okay. Not the end of the world, but the timing seemed odd. Later that same morning he gets a call from the local authorities in New York informing him that his summer home in the Hamptons had burned to the ground. Not a single item in it salvageable...which of course he assumed included the 1.25 million in unreported, untraceable cash that he had hidden in the wine cellar. Oh, what was that? You say the blaze had been so intense and burned so fast that the Fire Department was going to go ahead and launch an arson investigation? Of course they were.\n\nThat was followed up the next day with a call from the manager of his distribution operation in Maryland. It seems that OSHA had stopped by for an unannounced full-scale inspection. Not completely unheard of, but not exactly standard operating procedure either. Surprise, surprise - they just happened to find multiple safety violations. Major violations. The kind of major violations that totally shut down his operation pending further investigation. Perfect...just perfect.\n\nSmith had absolutely no proof, but every bit of his recent 'bad luck' smacked of the ever so subtle backlash from The Council. Well, he wasn't going to just roll over. He made phone calls. He sent emails. He showed up in person demanding a face to face meeting....and nothing. He finally received one return phone call. He was advised by an anonymous attorney that the associates from his social circle thought it was perfectly reasonable to expect him to weather this storm on his own before accepting any more social engagements with the group. So...all of the members of The Council were distancing themselves from him.\n\nHe didn't understand. What had he done wrong?\n\n\"No, you listen to me...\" He started to argue as his meandering walk carried him over to the large picture window of the second floor hallway. He pulled back the curtains an inch to make sure his security personnel were still in place. \"What? How is that possible?\"\n\nSmith turned from the window and continued walking down the hallway until he was in his bedroom, the one room in his spacious house that wasn't decorated in the rustic motive of the rest of the place. He stopped pacing and sat down heavily on the bench seat in front of the large make-up table that he provided for his female companions. He stared at his own disbelieving reflection in the attached mirror as he half-listened to his lawyer explain for the third time that none of the contacts that he had provided the attorney with would take or return the man's calls.\n\n\"I don't understand how this can be happening,\" Smith whispered almost to himself. He heard one of his lawyers ask him to repeat what he said and Smith suddenly didn't feel like talking anymore. He clicked the disconnect button almost at the same time as he replied, \"I'll call you back.\"\n\nHe closed his eyes and took a deep breath. Ever since he saw the Congressman's face on his flat screen, he'd had the worst feeling of dread in the pit of his stomach. He couldn't explain it, but it almost felt like a premonition that something terrible was coming his way....something worse than an audit or a fire. He literally had no idea what that something was, but it was that very reason why he had increased his security. Of course, there was no way in hell that he was going to tell his security personnel that it wasn't a viable threat that he was worried about. As long as they were vigilant, let them think whatever they wanted.\n\nHe reached over to the night stand for the bottle of Ambien and popped two in his mouth and swallowed them dry. He'd been going non-stop for over thirty hours straight and he simply could not function like this anymore. Smith was confident he could figure a way out of his current situation...he just needed to get some sleep so he could think clearly. He stood up and walked over to the wet bar and helped himself to half an inch of scotch to help wash the pills down.\n\nHe swallowed the liquor down in a single gulp and replaced the tumbler. His mind continued to race as he collapsed into a slouch on the end of the bed. He was so tired. He thought about undressing but simply did not have the energy...so tired. He jumped, unsure of where he was for a moment. He wasn't sure how much time had passed, but the sedative and the alcohol were hitting him pretty quickly. Smith suspected that he might have even dozed off for a couple of minutes while sitting up. He struggled for a minute but finally managed to kick off his shoes and crawl up onto the bed. He grabbed a pillow and put it under his head and let out a deep sigh.\n\nSomething nudged the bottom of his foot.\n\n\"Uh,\" he slurred a grumble. It happened again and he groaned his complaint. He scowled in his drug-induced state of semi-sleep. It took some effort, but he managed to move his leg a couple of inches away from the annoyance. He was too far gone for any alarm bells to sound in his brain. A sharp pain in his foot caused him to jerk his eyes open. He blinked slowly several times, but he was having a very difficult time getting his vision to focus. When he was finally able to clear his sight enough to see, his brain tried desperately to send out the panic impulses to move him into flight mode.\n\nInstead, he just stared dumbly at the apparition that was standing at the foot of his bed.\n\n\"Who?\" was all he could manage to croak as a little string of drool rolled down his chin from his open mouth. Something finally clicked and he ineffectively fumbled at his pocket in slow motion. He needed to find his phone.\n\n\"Don't,\" the thing hissed a warning and pointed a 9mm Browning Hi-Power directly at his face. The handgun looked huge to Smith's warped sense of depth, probably due to the custom suppressor attached to the barrel.\n\nSmith's hands fluttered a little more until they were finally still. His throat moved up and down a few times until he actually managed to swallow. He blinked slowly again. \"Who-r'you?\"\n\nLeah didn't say anything as she let the man drink in the nightmare that she appeared to be. She wore all black tactical clothing, black boots, black gloves and the voodoo scarf covered her face. She knew she looked fierce and had purposely gone to the extreme. This man deserved to be afraid and to make sure of that she had a little surprise for him under the scarf.\n\nSmith remained in a haze and wasn't sure exactly how or when it happened, but somehow he ended up flat on his back in the bed with this terrifying manifestation sitting on his chest. He couldn't move - his arms were pinned down by his sides. His mind struggled for a purchase on reality as he watched this thing reach up and pull the covering down off its face to reveal a nightmare pattern of black and gray skin. Leah had used camo paint to put geometric patterned war paint on her face.\n\nHe was snapped out of his daze when a gloved hand clamped roughly down over his mouth. The sudden struggle to breathe and the pain in his arms brought him far enough out of his fog to realize he was in grave danger. He started to meekly struggle to get free when he heard a metallic snick. His eyes widened at the wicked looking blade that appeared out of nowhere right in front of his face.\n\nThe terrible visage moved closer to hover directly over his face. Smith saw the knife slowly lower from his field of vision and then felt the very real edge of the razor-sharp blade press against his throat. The nightmare's almost luminescent pair of blue eyes burned bright with hatred.\n\n\"Hello, Mr. Smith,\" the thing from his nightmares whispered. The pleasantness of the soft voice was so out of place that Smith couldn't even comprehend that it was feminine.\n\nHe couldn't do anything but gape in disbelief at this terrifying thing on top of him.\n\n\"I want you to listen very carefully,\" Leah whispered and emphasized her point by pressing the blade just hard enough to break the surface of his skin and draw blood.\n\nMr. Smith's response was to lose control of his bladder.\n\nLeah wrinkled her nose. \"I take it I have your full attention.\"\n\nSmith whimpered.\n\n\"I want you to understand,\" Leah said quietly and then leaned down a little further until their noses were almost touching, \"just exactly how lucky you are.\"\n\nSmith blinked.\n\n\"You're lucky because the only thing keeping me from bleeding you out just as slowly and painfully as humanly possible,\" Leah continued whispering, \"is a promise that I made someone. Do you understand?\"\n\nSmith slowly nodded his head as much as the blade against his throat would allow. The fear induced adrenaline in his system was kicking in and counteracting the stupor of the Ambien and alcohol.\n\n\"Good,\" Leah growled. \"Because I'm not sure you can possibly comprehend just how much I really want to make you suffer right now.\"\n\nSmith breathed heavily through his nostrils and fought the urge to vomit.\n\nThe nightmare visitor sat up and took the gloved hand off of his mouth. Smith turned his head and coughed and blinked and sucked in much needed air. He brought his hand up to wipe his mouth and realized he could move his arms. The specter had disappeared from on top of him. He looked around wildly wishing with all of his might that it had all been an actual nightmare, but the thing was now standing beside his bed.\n\nHe watched in awe as the blade of the knife disappeared back into the handle with another quiet snick sound. Smith allowed himself just the slightest sigh of relief as he watched the switchblade disappear into a pocket on the visitor's thigh.\n\nLeah stood very still and studied Smith for a long moment. When she saw that there was actually a small glimmer of hope in Smith's eyes at the hint of surviving this encounter, she pointed the Hi-Power at his head.\n\n\"W-w-wait!\" Smith babbled desperately as he held both hands up towards the nightmare version of Leah and turned his head slightly away in cowardly anticipation. \"Y-you said!\"\n\n\"I said what?\"\n\n\"You promised...not to kill me.\"\n\n\"No,\" Leah said simply. \"I didn't.\"\n\n\"What?\" Smith said dumbstruck. \"I...but...you said.\"\n\n\"I said...that the only reason I wasn't going to make you suffer,\" Leah explained patiently and lowered the weapon slightly, \"was because I made someone a promise.\"\n\nSmith just nodded his head in one last grasp at hope.\n\n\"Travis Rackley was my friend.\"\n\nAt the mention of Rack's name Smith's face scrunched up in despair.\n\n\"And I made him a promise,\" Leah said between clenched teeth as she took aim, \"that I would personally put a bullet in your brain.\"\n\n\"P-please,\" Smith whined and squeezed his eyes shut.\n\n\"Good bye, Mr. Smith,\" Leah hissed."
    ],
    "authorname": "loverofFUN",
    "tags": [
        "lesbian",
        "lesbian romance",
        "thriller",
        "lesbian drama",
        "big tits",
        "strap-on",
        "adventure"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-retrieval-ch-03"
}