{
    "title": "Secret Smiles and Three Little Words Pt. 19",
    "pages": [
        "A special thank you to MsRoseEvans, silent submissive114, oneoflifesjewels, gentleoneexplorer and SSS (Nancy) for their constructive feedback and kind words. Thank you, they were much needed and appreciated! \n\n***** \n\nChapter 21* \n\nGavin led Alex out and several of the other spectators in the room nodded their approval at her. Alex let her smile out but she kept her eyes down as she felt that is what a sub should do. Gavin looked into a room as they walked down the hallway and then suddenly pulled her hand hard yanking her into the room, the force of which almost knocked her off balance. \n\nAfter spinning her into the room and releasing her hand gruffly, he locked the door behind them. Alex was startled at first, struggling to maintain her balance, then thought naughty thoughts as to his aggression but that faded when she saw his eyes. They were hard and angry. She swallowed hard and thought about what she had done to displease him. \n\nThey were now in the library, hundreds of books sat on the shelves with a large desk near a window. There was a white lounge couch, the kind you would dream of to curl up on with a good book. She would like one herself being an avid reader, but she couldn't enjoy it now as Gavin walked to it and sat down. He nodded with his head that she should join him on the couch. She went to him slowly, her mind bringing up her insolence in the play room. \n\nWhile she could tell he was pleased with her for her performance and her acceptance of the role, it didn't come without some of her attitude. Before she could sit next to him, he took her by the hand and yanked her across his lap, her top half laying on the couch the bottom off the side. Her stomach resting on his lap. \n\nShe said nothing as she knew nothing needed to be said. She knew he was angry, but she couldn't stop the tingling her body was cascading with. She shouldn't enjoy this as she could feel the anger on him but she did. She laid across his lap as still as she could. Her heart beat against her ribs as they rested on his thigh. Her backside laid just to the side of his knees. Alex felt his hand start at her knee and move up slowly. Running his hand across her nylons as he went. His off hand held her across her back, keeping her secure. \n\nAs his hand hit the bottom of her dress he pushed it as his continued upward. His fingers brushing her bare backside gently as he went. Soon her exquisite, tight flesh was in the open. Alex tried her best to control her breathing but her body hadn't relaxed from the thrill of her play with Erin. Now it was in overdrive! She blew out a quiet breath in an attempt to calm herself. It didn't work. Her body shook slightly as the excitement coursed through her veins, pumping the thrill through her. \n\nGavin gently rubbed her ass, it was bare except for the thong separating her ass cheeks. He marveled over the softness of her skin, the perfect curve of her cheeks. The firmness of them as he ran his fingertips over her succulent flesh. It was tough to stay focused. Part of him wanted to abandon the consequence and just enjoy the taste of her, starting with her magnificent ass and devouring her whole! He felt her body shake slightly. Part fear, part excitement. He knew the feeling. \n\n\"I guess I don't have to explain,\" Gavin finally said as he continued to imagine his mouth on her, tasting her. To fill his mouth with her sex, her ass, her body whole. \n\n\"No Sir,\" Alex whispered, struggling to keep her voice from shaking. This was making her fucking hot. She couldn't help it. She liked this, no she loved this! \"For what it's worth, I'm sorry.\" \n\n\"It's worth a lot,\" Gavin assured her. \"But, this is what you have earned. I will reward you later for your behavior with Erin and the sub.\" \n\n\"Thank you Sir,\" Alex whispered as she gripped the couch cushion. \n\nShe put her forehead down and prepared herself as best she could. She was pleased that there would be a reward for her performance. He was pleased. It was the mouthy attitude before the performance that got her here. Bent over his knee, in a library, her ass open to him. Only a small piece of cloth that would be useless to protect her from anything he wanted. Which was the point of a thong, wasn't it? To be covered but maddeningly available? She tried to push that thought out, she needed to prepare herself for her consequence, but this was just too damn hot not to enjoy! \n\nGavin lifted his hand and brought it down sharply. The sound of skin on skin contact filled the room as she jumped at the force. Her ass cheek stinging from the impact. \n\n\"One,\" she whispered. Gavin brought his hand down again sharply on the opposite cheek. \n\n\"Two,\" she whispered as he softly ran his hand down on each cheek. He began alternating cheeks with his strikes as she counted out each stroke. \n\n\"Fifteen,\" she called out, her voice tight with pain. \n\nShe didn't want him to stop, but her ass was on fire. She was torn between calling out one of her safe words, and stopping this consequence for now, or allowing him to finish. She hated the idea of using the safe word, she had done it once and regretted it. No, she would endure this, this is what she earned she told herself. Then a thought filled her head, it wasn't the pain that was upsetting her. Yes her ass was on fire, but that wasn't what was bugging her the most. \n\n\"Sixteen,\" \n\n\"Seventeen,\" now her voice cracked and a tear escaped. \n\nThe tear wasn't for the pain. That was manageable. It was during this spanking that she realized how much she had displeased her Dom which weighed heavily on her conscious. The knowledge of disappointment was worse than the physical pain of the consequence. That was something she found harder to accept. She had displeased him! \n\n\"Eighteen,\" \n\n\"Nineteen,\" \n\n\"Twenty,\" Alex exhaled deeply. \"Thank you Sir, for your patience.\" \n\nGavin gently ran his fingers over her reddened backside. His smile he kept from her, she had done very well with this consequence. He wished he didn't have to do it, but like any loving Dom, he must maintain a uniform acceptable behavior. Lines and rules must be maintained. He let his fingers run down in between her thighs. \n\n\"Now I know you like being spanked,\" Gavin smiled as he felt her wetness. \"But this is beyond that.\" He pointed out as he let his fingers pull aside the elastic of her underwear and dip into her sex with a soft touch. \n\n\"Yes Sir,\" Alex admitted with a soft gasp of pleasure at his touch on her. \"You were right...I'm a Switch. I liked playing with Erin. I liked the feeling of being completely in control. I also liked punishing the horse's ass as well.\" \n\n\"Was that so hard?\" Gavin asked her as he continued to stroke her sore backside with one hand, while gently stroking her sex with the other. \n\nHe was enjoying the radiating heat they both were putting off, the soft wetness begging for his invasion. The reddened ass cheeks under his fingers quivering as her muscles shook beneath her skin. He looked to her ass while his fingers played, gently massaging it and leaving her dress pushed up over her hips revealing her reddened backside open to his eyes. She could feel his stare on her and she wondered if he was imagining how good it would feel fucking it. \n\n\"No Sir,\" Alex admitted looking over her shoulder at him. \"It's just scary.\" \n\n\"Why?\" Gavin asked her turning his eyes from her ass, to her face. \n\n\"I'm afraid you will use it to push me away,\" Alex said softly. \"I don't want it if it doesn't involve you.\" \n\n\"You are so sure I am going to push you away,\" Gavin frowned as he turned his eyes back to his handiwork. \n\n\"As sure as you are about me being a Switch,\" Alex swallowed hard. \"The only difference is...I hope I'm wrong.\" \n\nHe let her slide from his lap and she assumed the submissive position between his legs. He looked to her for a few moments before he leaned forward towards her. He cupped her chin in his hand and held it firmly. \n\n\"You are wrong,\" Gavin whispered. \"I have no desire to push you away.\" \n\n\"For now,\" Alex whispered. Gavin frowned. \n\n\"As much as you think you know me,\" Gavin said softly. \"Even I don't know that. All I can tell you is, I have never felt this way about a sub. You said you were going to try and keep me interested. Well...I'm beyond interested. I'm desperately interested.\" He kissed her as she was about to talk and she lost all sense of where she was. \n\nDriving away from the house, Alex shifted in her seat as her sore ass made sitting uncomfortable. She didn't care. This night would be memorable. Not just for the sights upstairs. Not just for her Switch coming out. But for the fact Gavin admitted he was feeling as she was feeling. That was memorable. In the end it may not matter, she decided. Gavin will do what he feels he has to in the end. But for now, she had him. \n\nShe furrowed her brow as he wasn't headed home, he also wasn't headed to her place. \n\n\"Got more up your sleeve, Sir?\" Alex asked him. \n\n\"Always,\" he grinned. She turned in her seat and looked at him. He looked as Alysia described. Delicious. Fuck-able. \n\n\"May I suck your cock Sir?\" Alex asked him brashly. \n\nThe question erupted from her lips easily, like one of her orgasms under his skilled touch. She couldn't explain it, she just had an overwhelming desire to suck his cock again as she had in the mansion. Now she could exercise that desire, hopefully, if he allowed it anyway. He looked to her and saw the hunger in her eyes and knew she wasn't kidding. \n\n\"If that would please you,\" he smiled. \n\nAlex didn't waste any time in responding with words. She responded with action. Flipping off her seat belt and kneeling on the soft leather of the bucket seats, her body over the center console. She hastily pulled his zipper down and pulled his semi hard cock out. She smiled that he was semi hard just at her offer. \n\nShe lowered herself down on him and took him in her mouth. He was as she knew he would be, delicious. His essence filling her mouth with pleasure. Her body awash in goose bumps as she swallowed. His hardness pushing on her tongue as she used it to press on the head of his cock. \n\nShe gripped the bottom of his shaft and held him firmly as her head bobbed. She growled as she ate him hungrily. Her excitement overwhelming her, causing her to devour more that suck. He grunted a groan of approval. She bobbed frantically, her excitement leading her, forcing her to go fast. She wanted to go long and slow, to fully enjoy him for hours but her body was having other thoughts. Devouring him was the only thing acceptable right now. \n\nShe pulled her mouth off and stroked his cock, pulling tightly as she pulled some of his pre-cum to the head from the shaft. She licked it with the tip of her tongue causing him to quiver slightly. She smiled. She liked that. Without warning she took him all the way down, her nose nestled into his groin. \n\n\"Holy fuck!\" Gavin hissed as she tried to concentrate on his driving. That was beginning to become a chore as she was aggressive in pulling his orgasm from him. She pulled off only when she needed a breath. She sucked it in as she stared at his head in the passing streetlights. Quickly taking him back down, not all the way but enough to make his hips lift and drive himself farther in her mouth. \n\nAlex loved this. She loved sucking his cock. She loved the taste of him. She loved making him gasp. She continued to bob her head, her head in the space between the steering wheel and his flat stomach. His hand drifted to her the back of her head as he began to push her head in his excitement. She let him set the pace with his hand, her grin tipping at the edges of her lips. Yes he was the Dom, but right now, she was in control. She was bringing him pleasure. His fingers began to wrap in her hair, taking a firm grip as his hips lifted off the seat. \n\nShe let him fuck her mouth, and push her head. She just waited. She waited for his cum to fill her mouth. She waited to please him completely. He let go of her head and she started to bob furiously again to keep the pressure on him. \n\nHis hands drifted to her dress and he yanked it up baring her ass to anyone in the next lane. If there was anyone there, she didn't know as she was again nose buried into his groin. She relished the idea that there might be someone there. Some random person tiredly headed home from the night shift. Or a trucker hauling his load down the long, lonely highway. \n\nHis fingers found her wetness and he plunged in forcefully causing her to moan out in approval. The vibrations of her pleasured moan, filtered down the shaft of his cock into his balls causing a grunt. He moved his fingers in and out of her, her body still wet from all that she had been a part of. The various rooms she witnessed. The playing with Erin. The spanking in the library. The admission that this was not an ordinary Dom/sub relationship for him. \n\nHe pushed with a force causing her body to rock into her cock sucking. This made her gasp in pleasure as his cock was pushed further into her mouth. The head of his cock hitting the back of her gag reflex, not quite triggering it. \n\nHer orgasm leaked out around his finger as he worked her. Her moans of it echoed in the car as she stopped moving as her body went rigid as she rode the wave of her orgasm. When it released its ownership of her, she went back aggressively after his cock. She wanted to get him to that high now. \n\nHis fingers pulled out of her sopping pussy and pulled the string of her underwear to the side. She felt his finger on her anus and she shook with pleasure, her teeth gently digging into the hot, hard flesh of his shaft. Slowly he pushed his cum soaked finger in her ass. The burning sensation there was the first thing she felt. Then she felt his cock harden even more than it was already, forcing her to release some of her pressure on his cock. \n\nThat's how she knew he was really enjoying this, his already hard cock, got harder! This drove her wild, her speed picked up as she went after him with an utter abandon. An uncontrolled passion. An unbridled lust! \n\nHis finger continued to press in and out of her tight ass, it burned. That she couldn't stop, but it also drove her wild in pleasure knowing that he was feeling her wanted hole. Not that he didn't enjoy her pussy. But she could tell, it was her ass that he wanted. Perhaps needed, to satiate his overwhelming burning desire. \n\n\"Oh Fuck,\" Gavin growled as he buried his finger as deep as he could. \n\nShe winced as he hit his depth, but his cock erupting in her mouth gave her mind something else to concentrate on. She pulled on his cock with her hand, jerking it into her mouth as he filled it. His body tense as pulse after pulse filled her mouth. She swallowed multiple times, her mouth never leaving his cock for fear of getting cum on his pants. \n\nWhen she was sure she had it all down she slowly pulled in a suction causing him to convulse slightly at the sensitivity he felt. She drug her mouth off and swirled her tongue around his head causing him to gasp. She licked the head clean, ensuring all his precious cum was removed. Sitting upright she used the fingers on her free hand to wipe her lip to make sure none escaped. She let go of his cock, she couldn't put him up as it wasn't soft yet so she sat back on her heels and looked at him with a mischievous little girl smile. \n\n\"Thank you Sir!\" She said softly. \"I desperately needed that!\" \n\n\"You're welcome,\" Gavin chuckled in disbelief at her. \"Glad I could be of service!\" He shook her head at her and let his secret smile come out. He knew she was looking for it. \n\n\"Now, please, put your seatbelt back on,\" he whispered. \n\nShe sat back and put her seat belt back on. Safety always, she smiled slickly. Unless you are blowing your Dom in his Aston Martin sports car driving down the interstate! With his finger bringing you to an orgasm before he sticks his cum coated finger in your ass...then a little risk was acceptable! \n\nGavin pulled his car up to Centennial Park and winked at her when she looked at him. \n\n\"Thought maybe you would like to see what you will be using to inspire others!\" he told her with a smile as he got out. \n\nShe watched him adjust himself once outside the car. Arranging his cock to where it belonged. Then she thought about that, where it belonged was somewhere in her! She shook her head at her greediness. \n\nShe started to reach for the door, caught herself and then pretended to be reaching her outstretched hand in a stretch of muscles with a smile. Trying to hide the fact she was going to the door handle. \n\n\"Nice try,\" Gavin teased as he opened her door, as usual. \n\n\"You can't change a lifetime of habit in a month,\" Alex smiled as she took his offered hand to get out of the car. \n\n\"No one has ever opened your door for you before?\" Gavin asked as he took her hand and put it in the crook of his arm. \n\n\"No Sir,\" Alex smiled putting her head on his outer arm as they walked. \n\n\"Really?\" Gavin asked surprised. \n\n\"No one,\" Alex smiled. \"You are the first.\" \n\n\"No shit?\" Gavin shook his head. He couldn't wrap his mind around it. Yes he knew it was something of a novelty now. But he figured one person, trying to impress her, would have opened the door for her. A prom date or simply a first date trying to make an impression. Something. \n\n\"You, Sir, are a dying breed,\" Alex said softly. \n\n\"I guess so,\" Gavin frowned. \n\n\"I can see that does not please you,\" Alex pointed out by his tone alone. \n\n\"It doesn't,\" Gavin admitted. \"I still believe that women should be treated like ladies. Respect, before all else. Men should do those things, not because you ladies can't, but with a gentleman around, you shouldn't have to.\" \n\n\"I love that about you,\" Alex smiled as she looked up at him. \"You are definitely one of a kind. And you are all mine, I don't share!\" She giggled as she said this. She knew this wasn't her decision, it was his. She also knew his absolutes. He wouldn't share her, so the chances of him forcing her to endure watching him with another were very slim. \n\n\"And you, I am learning, are all I need,\" Gavin said softly. \"Which brings something to mind I want to discuss with you.\" \n\n\"And that is?\" \n\n\"I don't want another pet,\" Alex stopped and looked to him, forcing him to turn to her. \n\n\"What do you mean?\" \n\n\"Well,\" Gavin looked skyward, trying to figure out how to say it. \"Elizabeth brought you into this, and I am very thankful that she did, but I would prefer you didn't do the same.\" \n\n\"So I can't bring a girl home to surprise you with?\" Alex asked. \n\nInside she was dancing. He was basically declaring he would not bed another woman. This pleased her more than she thought it would. She was learning a lot in this lifestyle, one of the things was a Dom could do what he wanted, when he wanted. Most of the time that included his sub. Sometimes it didn't. She knew it also depended on the boundaries of the sub as well, if they needed to be pushed. \n\nGavin had never indicated he wanted multiple subs to her, his absolutes told her he didn't believe in them. But he did violate them for her. When she came on she and Elizabeth had to share him. \n\nShe thought of Kelly's new Dom. He had three subs. Gavin disapproved of it, so for him to make this claim verbally was not a surprise to her but it still made her tingle in happiness nonetheless. \n\n\"No,\" he said. \"If we bring someone to our bed, I want it to be a joint decision. I want us to select. I know Elizabeth brought you in to replace her, and that is why I allowed it. But...,\" \n\nShe silenced him with a kiss. Her arms wrapping around his neck. Her mouth pressed firmly on his lips, her heart beating so wildly against her rib cage she knew he had to have felt it. \n\n\"Deal,\" she whispered against his lips. ",
        "\"I take it that pleases you?\" he smiled at her. \n\n\"I don't share,\" she repeated. \"But I have a request myself.\" \n\n\"And that is?\" Gavin repeated back. \n\n\"I admit I'm a Switch,\" she told him, she had to focus, this was going to be a demand, an absolute for her so she needed to say it the right way. Firmly but respectfully. She was getting lost in his brown eyes and staying focused was difficult. \"But I want to be the one who decides when I adopt that persona. I will do what you want to please you, as always. But I would prefer my Switch be asked for.\" \n\nGavin looked at her as he weighed her request. \n\n\"I can live with that,\" Gavin finally said as he searched her eyes. \n\n\"But?\" she saw it in his eyes. \n\n\"But you have to promise me, that if the urge to be the Switch comes to you, you have to tell me. And if it becomes that your pleasure is more suited to the Dom, then I need to know that as well and this relationship needs to end.\" \n\n\"So I get to end this relationship?\" She asked firmly plotting her next move carefully like a game of chess. \n\n\"I have always let the sub end it,\" Gavin told her. \"You know that.\" \n\n\"Gavin,\" Alex began slowly. \"Why is it then...that your relationships only last a year?\" \n\n\"What do you mean?\" Gavin asked her. \n\n\"You are perfect,\" Alex told him. \"Too perfect sometimes. Not that I'm complaining. But why would a woman decide to leave you?\" \n\n\"This world we live in leads to strong desires that must be explored,\" Gavin explained with a soft shrug. \"It's a drug, as much as I hate that analogy, it is the best one. If you take a drug, any drug, after a while your body becomes adjusted to it. Then it takes more to get to the same effect. For instance, an antibiotic, if you take the same antibiotic every infection, your body will stop responding to it. That is why as a doctor I change them up. To keep that from happening. This life is the same. You will become satiated by it and then want more.\" \n\nHe took her hand and they began walking again. She loved the tenderness he was showing. The way he looked at her, the way he was holding her hand by her fingers. His closeness. His soft voice. \n\n\"Every sub I have owned has done this,\" Gavin shrugged with a deep sigh. \"I take them as far as I'm willing to go, then they want more. They move on.\" She looked up at him at the hint of regret in his voice. He smiled when she recognized it. \n\n\"You see, it's not all my fault that my relationships last a year,\" Gavin winked at her. \"They decide to end it. They want more. You will too.\" \n\n\"And if I don't?\" She asked him. \"What are you prepared to do?\" \n\n\"What am I prepared to do?\" he repeated with a laugh. \"I don't understand.\" \n\n\"Yes you do,\" Alex said firmly, not willing to accept he didn't know what she was getting at. He knew, because he could read her easily. \n\n\"Marriage?\" Gavin laughed. \n\n\"It's been known to work,\" Alex pointed out. \n\n\"Fifty percent of the time,\" Gavin pointed out right back. \n\n\"I'll take those odds,\" Alex told him. \n\n\"Fifty/fifty is worth betting your life on? Your happiness?\" Gavin gasped. \n\n\"With you...yes,\" Alex told him firmly. She turned him to show how serious she was about it. \n\n\"Well,\" Gavin sighed as he saw the softness in her blues eyes. He lifted a hand to her cheek with a loving smile. \"Let's cross that bridge if we get there. You may decide in a couple months you can't stand me.\" \n\n\"Just as long as it's an option,\" Alex smiled turning her face into his hand. \"That and as long as you lift the toilet seat!\" she said in a laugh. \n\n\"Uh, no,\" Gavin said firmly his brow firming up as well, his jaw setting hard. \"I'm the Dom, I don't lift seats, I expect you to lift the seat when you are done, and lower it when you need it.\" His voice was a near growl, his eyes flashing at her that he was angered by the statement. \n\n\"Oh,\" she frowned. \n\nThey began walking again. She was only joking when she brought it up. Trying to alleviate the seriousness of her marriage conversation. The innocent joke seemed to anger him. They walked on in silence. \n\n\"Alexandria?\" Gavin whispered. \n\n\"Yes Sir?\" \n\n\"I'm fucking with you!\" he laughed with a laugh reminiscent of the laugh he had with Pavel. \n\n\"Asshole,\" Alex laughed with him with a soft push of her hand. \n\n\"And proud of it!\" He told her with a kiss to her head. \"Little one, I'm looking forward to us. I haven't felt this excited about the start of a relationship in some time,\" he admitted squeezing her fingers. \n\n\"I'll be honest with you, I'm not really experienced in terms of relationships, but I'm loving the start of this one!\" Alex agreed. \n\nWalking up to the wall Alex began to drag her feet. Not intentionally but her legs were heavy at the sight of it. \n\n\"What's wrong?\" Gavin asked her when she stopped walking. Alex's eyes were firmly planted on a small, white sign that sat in the ground at the base. \n\nPlease do not touch me, I'm a project by Alexandria Lasko \n\nWhen she could move her feet again, she walked up to it and was breathless. Alex ran her fingers down to a corner of the wall that then turned to run along the sidewalk that ran next to it. \n\n\"Alexandria?\" Gavin said again. \n\n\"I can't paint this,\" she whispered. \n\n\"Why?\" \n\n\"I wasn't picturing something this big!\" Alex put her hand to her face as she looked down the wall from the side. It was over forty feet in length and nearly eight feet high. \n\nGavin came up and put his hands on her shoulders. He felt her shake slightly beneath his hands. \n\n\"Relax,\" he whispered to her. \"Yes it's large, but you can take it in sections.\" \n\n\"Gavin,\" Alex whispered as she put her face in her hands in disbelief. \n\n\"Relax,\" he whispered again. This time with his lips to her head. \"It will be fine.\" \n\n\"The ideas I had, will never work here!\" she gasped. \n\n\"It will be fine,\" Gavin repeated wrapping his arms around her comfortingly, giving her a gentle squeeze. \n\nWalking into the condo Alex was still silent. She hadn't said a word all the way from the park. Gavin let her be in her silence. She was despondent at the size of the wall, chewing on her nail on the way home, something he had never seen her do. \n\nFollowing him into the bedroom with her head down, she sat on the bed and buried her face in her hands. He knelt at her feet and gently pulled her shoes off before slowly rolling her stocking down her legs as well. \n\n\"What are you doing?\" she smiled at him. It wasn't her usual naughty smile. This one was forced. \n\n\"You are not sleeping with your shoes on,\" he told her with a smile relieving her of her worry that he would want more. He stood up pulling her up as well. He turned her around and unzipped her dress before kissing her shoulder sending her into a waterfall of goose bumps. \n\nThe dress fell to the floor and she stood waiting for his next move. He pulled her bra off slowly, pulling it down the length of her arms before he discarded it to the floor. Next were her panties, he slowly put his fingers in and eased them over her hips, half way down gravity took them and they wound up around her ankles with her dress. \n\n\"Dressed or undressed for bed?\" he asked her with his lips on her neck. \n\n\"Whichever you prefer,\" she sighed softly, the tenderness overwhelming her. The thoughts of the wall easing from the front of her mind to the back while his ability to make her think of only his soft hands became the main thought. \n\n\"Undressed,\" he whispered. He guided her to the bed and put her in, covering her with the blankets. He then disappeared into the bathroom to get ready for bed. She was staring at the ceiling when he came back out. He joined her in the bed and pulled her into his arms. \n\n\"It will be fine,\" he whispered in the dark. \"Something will click and you will be fine.\" \n\n\"I wish I had your faith!\" she whispered. \n\n\"You have walked into a world you had no idea of, fearlessly. Yet something that is your strength causes you to pause?\" Gavin pointed out. \n\n\"Did you know it was that big?\" She asked him. \n\n\"No,\" he said kissing her head and pulling her tighter. \"But I know you will figure it out. It's the one thing I have learned about you that I knew I had to have.\" \n\n\"And that is?\" \n\n\"Your tenacity,\" he whispered. \"That wall will bow to you like the sub did tonight. Nothing stops you...I need that in my life.\" \n\n\"Thank you,\" she whispered as a tear fell from his tenderness. \n\nShe rolled over the next morning and found his side of the bed empty. A note beside the bed told her he was on a call. \n\n\"Of course,\" she snarled getting out of bed. She showered with the thoughts of the wall. \n\nJumping into her car she drove back to the park. She saw it again in the daylight and felt it was larger than last night. She scowled at it as she dropped her art bag in the grass and sat down with a flop. She faced the wall and put her hands under her chin to prop it up. \n\nShe didn't know how long she sat there, several people looked down at her as she stared at it. Some teenagers joked about her being crazy and the wall was probably talking to her. Calling her back to her home planet. She ignored them. \n\n\"Alex!\" The voice caused her head to turn and there was Gabby coming up to her. Her sharp navy business suit fluttering in the wind off the lake. \n\n\"I can't do this!\" Alex blurted at her. \n\n\"What?\" Gabby gasped as she stopped in her tracks. \n\n\"I didn't know it was going to be this big!\" Alex told her pointing with her hand towards the wall. \n\n\"I said a mural,\" Gabby told her stunned. \n\n\"I know, a simple wall, you know, eight feet by ten feet, maybe ten by twelve!\" Alex gasped. \"This is at least forty feet!\" \n\n\"Forty eight,\" Gabby told her. \n\n\"Holy shit!\" Alex fell backward into the grass. \n\n\"I've already told the mayor,\" Gabby told her. \"We have a meeting Thursday at one, that's why I'm here, to confirm you can make it.\" \n\nAlex didn't say anything at first. She laid in the grass, with her eyes closed, shaking her head back and forth in shock. \n\n\"Alex,\" Gabby began slowly. \"I need this.\" \n\n\"I know,\" she whispered. \"How did you know I was here?\" She asked sitting up. \n\n\"Gavin,\" Gabby told her with a great deal of concern on her face. Alex shook her head. How did he know she was here? \n\n\"Alex,\" Gabby was shaking her head, trying to come up with a plan B. \n\n\"I won't let you down, just a panic attack,\" Alex told her looking back at the wall. \n\n\"You're sure?\" Gabby asked carefully. \n\n\"It will be spectacular,\" Alex assured pulling up her best smile. \"Thursday at one, we meet the mayor.\" Alex went back into her stare at the wall. Gavin believed in her. She would trust him, like she had from the moment she met him. \n\nThe sun setting let her know she had been there all day. Still nothing. She dropped her head and shook it. \n\n\"C'mon, you can do this!\" Alex told herself aloud firmly. \n\nShe lifted her head and stared at it again. The clinking of glasses pulled her attention from the wall and she looked behind her. Gavin was there on a blanket, a basket sat with him as he poured some wine. He was dressed in blue jeans and a t-shirt of all things. She had never seen him in a t-shirt! \n\nBoth were designer of course, but not Armani suits he normally wore during the day. He also had his shoes off! What the hell? This man looked totally relaxed while her world was spinning crazily. That in itself made her relax. If he wasn't worried, why was she? He knew her better than she knew herself she figured early on in their relationship. \n\n\"How long have you been sitting there?\" She asked him with a sly smile. \n\n\"This time?\" he smiled coyly. \n\n\"What?\" she asked as the color drained from her face. \n\n\"Well, I went by your apartment after you weren't in the condo, Lena hadn't seen you...I figured you were here. I came by but you were in heavy thought, so I sat back there on the bench,\" he said with a tilt of his head at the park bench a few yards off. \n\n\"After a while I figured you haven't eaten today so I went and got us dinner,\" he said holding out a wine glass to her. She shook her head. The man was just perfect! She crawled over to him and took the glass from him. He toasted her and took a sip. \n\n\"Any ideas?\" he asked carefully. \n\n\"None,\" she said quickly. \n\n\"It will come,\" he smiled as he set a plate down in front of her. \"I believe in you.\" \n\n\"Glad one of us does,\" she frowned in a pout. \n\n\"Eat,\" he smiled. \"Ideas come when you have a full tummy.\" \n\n\"How was your appointment?\" she asked pulling a piece of bread off and nibbling on the end. \n\n\"Madelyn is being quite the bitch,\" Gavin frowned. \n\n\"Why?\" Alex asked quickly. \"Is she ok?\" \n\n\"She won't take her pills,\" Gavin told her, his anger ticking in the tone. \"Her blood pressure was skyrocketing, she is going to stroke out on me!\" \n\n\"Oh no,\" Alex frowned. She could also hear the worry in his voice, along with the anger. \n\n\"She bought one of your paintings from Maole,\" Gavin grinned. \"I saw it today.\" \n\n\"She doesn't have to buy my stuff!\" Alex barked. \"I will paint her whatever she wants, but you tell her she is not to pay for my stuff!\" \n\n\"You tell her,\" Gavin chuckled in disbelief. \"That's an ass kicking I won't take.\" Alex shook her head with a laugh. \n\nGavin and Alex shared their little impromptu picnic in the park. Several women hit their men as they walked by them for not thinking of a romantic idea like that. It caused some problems for the men who shook their head with twisted lips. Alex realized just how perfect this was. How many men would do this and not have some ulterior motive? Without being hinted to for weeks, or flat out told to? \n\n\"You know you don't have to butter me up,\" Alex smiled at him from behind her glass. \"I will fuck you anywhere!\" \n\n\"What?\" Gavin asked with an innocent grin. \n\n\"This whole thing you got going,\" Alex told him putting her glass to the side. \"Have you seen how many men you have gotten hit for this little scene?\" \n\n\"I have,\" Gavin nodded with a laugh. \"Not my fault they don't know seduction.\" \n\n\"Is that what this is? A seduction?\" Alex asked as she crawled to him kissing him. \n\n\"The day I stop trying to seduce you they will be putting dirt on me,\" he whispered back. \"I don't care if we are on day three of our relationship or three thousand and three. I will still be trying to prove to you that I am worthy of you.\" \n\n\"You have got to be kidding me,\" she gasped. \n\n\"See that is why, I believe anyway, that marriages fail,\" Gavin shrugged. \"Have you ever noticed that when people first start dating, they go all out? I mean all out! Trying to impress them? Something as simple as sitting as on the same side of the table during the date, or asking them out or opening a door? After a while, for some reason, people stop doing that. The little things to catch the other's eye. They assume, now that they are together, they don't have to do those things anymore.\" \n\nAlex nodded and left her jaw open in disbelief. \n\n\"Every day I want to get up and seduce you,\" he smiled stroking her face gently. \"Not just to fuck you...but to claim you. See, there are those who believe Dominance deals with only physical power. I disagree, I believe it starts with the mind. If I can seduce your mind, the rest comes willingly.\" \n\n\"Holy fuck!\" Alex gasped with a broad smile of disbelief. \"Who says those things?\" \n\n\"I do,\" he whispered. \"And every word I speak...,\" \n\n\"Is measured and meant,\" she finished for him. Something from the very beginning. \n\nShe began kissing him deeply, his hand cupping her chin as he returned her fervor. They finished their dinner and she felt relaxed for the first time. When they were done she went back to staring at the wall. She laid her head on his lap as he stroked her hair softly. Easing her into relaxation. \n\nAfter a while she sat up and he began to pack up the picnic basket. \n\n\"What if I made this mural a public service wall?\" Alex asked him never taking her eyes off the wall but lifting her head. \n\n\"What do you mean?\" he asked. \n\n\"I mean, I will find out who is going to be here, in terms of vendors,\" Alex said getting up and going to the wall. He watched her with a smile as the idea rattled out of her. \"I could do the entire city! You know? Then show the landmarks, the businesses, the museums!\" \n\n\"It would show how to get there, and everything!\" The smile she had couldn't be contained. \"That way, every person who walks by can plan their stay here, and know how to get there! I can do Comisky Park here,\" she said putting her hand on one side of the wall. The nearly running down to the other side. \"Wrigley here.\" She walked back slowly and he could almost see the plotting going on in her head. \n\n\"I can show where the theaters are,\" she smiled as she ran her fingers down the wall. \"I can show the little things that nobody knows about! The things you won't learn in a travel brochure!\" \n\n\"Wow!\" Gavin smiled. \"That would fill the wall for sure! And it would tell what this city is about.\" \n\n\"It would be helpful as well!\" Alex smiled turning back to look at the wall. \n\n\"Told you food helps the ideas,\" Gavin chuckled as he stood up. \"C'mon, it's dark!\" Alex walked backward as she followed Gavin out of the park. Planning the mural in her head. \n\n\"Thanks Jack,\" Gavin said as she turned around and saw the police man standing there. \n\n\"Anytime Dr. Steward,\" he said as he nodded a hello at Alex. \n\n\"Who was that?\" Alex asked him. \n\n\"Officer Jack Randall,\" Gavin said with a shrug. \"I asked him to keep an eye on you.\" \n\n\"What?\" \n\n\"The park has been known to have some crime issues,\" Gavin pointed out protectively. \"I don't want you down here by yourself.\" \n\n\"Gavin, it was during the day!\" Alex protested. \n\n\"So?\" \n\n\"I was perfectly safe!\" She pointed out. \n\n\"I know,\" Gavin nodded. \"Jack is the best cop in Chicago, I wouldn't trust anyone else with you.\""
    ],
    "authorname": "CJT",
    "tags": [
        "spanking",
        "blow job",
        "oral sex",
        "swallowing"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-19"
}