{
    "title": "Slightly, Once Ch. 04",
    "pages": [
        "Isn't fantasy fun? A reminder that all are 18, and the lady is a complete creation of an active dream life.\n\n\n\nLeg warmers. Hot pink leg warmers. They adorned the two longest, most beautiful legs on the planet from ankles to mid-thighs. Up above, a matching pink cowl-neck sweater; loose-fitting, fuzzy, and soft. In between, those cutoffs. Remember those cutoffs from the first time I saw Kim in the gym? I sure did.\n\nShe had just raised Adorable, not to mention Sexy, to new heights as she opened the door wearing this outfit. I stared at her legs. There was a gap between the leg warmers and the cutoffs, exposing upper thigh, toned leg peeking through. \n\nIt was late Spring, after basketball season, but a cold front had dropped temperatures considerably. And so, leg warmers. My temperature wasn't dropping, however, as I daydreamt of having leg warmers wrapped around me.\n\nDaydreamt of Kim. Six feet of blonde All-State basketball player, her long hair hung loose on her shoulders, parted in the middle. Blue eyes shone when she saw me in the doorway. I had passed from being merely smitten to being hopelessly in love with this spectacular young lady. She loved me, too. It was easier for her to say so, but I was working on it.\n\nWe had cause to celebrate. I arrived with flowers.\n\n\"Stop staring at my legs.\" Caught.\n\n\"Are these flowers appropriate for an All-American?\" I asked humbly, holding them out to her. She took them and smiled her radiant smile for me.\n\n\"They most certainly are!\" she said.\n\nI hugged her. \"Congratulations, Kim. I couldn't be happier for you!\"\n\n\"I'm only second team,\" she said modestly.\n\n\"Maybe, but America's a big place, so even second team is mighty impressive! I'm so proud of you. You earned it. I'm honored to be in your company.\" \n\n\"Thank you, David,\" she said. \"I'll go put these in water. They're beautiful, and you're so thoughtful to get them.\"\n\n\"We need to celebrate, my love,\" I said, pointing a finger up in the air enthusiastically.\n\nKim smiled a huge smile. \"I never tire of hearing that.\"\n\n\"Hearing what?\" I teased.\n\n\"The \"L\" word, applied to me,\" she said as she spun away and skipped into the kitchen. I followed behind, where I could get a good view of the cutoffs and the leg warmers.\n\nKim's parents had gone off for the weekend. Seems Kim and her mother were in cahoots, and Dad and I were the victims. Sounded good to me. Kim had supper almost ready, but I had other ideas.\n\nOnce the flowers were in water, I moved to her slowly. She looked up at me, with almost a shy expression. I put my hands on her hips and backed her up to the wall. I moved in and kissed her neck. Her arms were behind her. None of the usual aggression. Hmm. A puzzle. But I was undeterred. I kept on kissing her neck, nuzzling her. She responded, purring, but the hands stayed behind her. I kissed her lips, and her hands went to my face, holding me gently. Our tongues met, and played, but she was coy. There wasn't the usual body-melting hug.\n\n\"Is something wrong?\" I asked.\n\nShe smiled and shook her head slightly, once. She looked at me with those big, blue eyes. \"I just love you, David.\"\n\n\"But you seem so quiet. Withdrawn.\"\n\n\"Maybe passive. For a change.\" Her voice was quiet. A hint of a smile.\n\n\"You mean it's up to me to take charge tonight?\"\n\nShe nodded, slightly, once.\n\nI pressed her back to the wall with my body. I took her arms and raised them to wrap around my neck. I looked at her. \"Tippy-toes,\" I said, remembering how she had been so happy that I was so tall, with her needing to go up on tippy- toes to kiss me. She did, and I moved in for the gentlest of kisses. Light brushing of lips. I licked mine. \"Nice,\" I said, remembering her description of our first kiss, when she had taken charge. \"But not enough. Let's put a little more into it.\" Our lips pressed more firmly. My tongue grazed her teeth, and she parted them to meet it with hers, and our kiss deepened. Nice. \n\nShe looked at me, hands behind her back again, shoulders rotating back and forth in the most charming way. She had a wan smile, and her tongue curled out the side of her lips for just a moment. \"I think,\" she said with just a trace of a sing-song lilt. \"That I am going to have fun with you tonight.\"\n\nWith that, I moved in and planted another kiss. She responded, and our tongues sparred. My hands worked from her shoulders down her sides, feeling every gentle curve of her body. I was at the bottom of her cutoffs now, and fulfilling a fantasy, worked my fingers underneath them to cup her cheeks with both hands. She pressed into me and moaned. I squeezed and caressed her buttocks, hands underneath the fringe. Wow.\n\nI pulled back. \"Do you have any idea how sexy your leg warmers are?\" I asked.\n\nShe looked at me with false innocence. \"Are they? I was just trying to be comfy. I didn't know how else I was going to stay warm on a chilly spring evening.\"\n\nMy hands were still on her buttocks. Her cheeks were exactly a handful, and oh, so tight. I ignored the last bit. \"Yes. They are incredibly sexy. How did you ever find a pair long enough?\"\n\n\"It wasn't easy, but I finally did. I thought it was a real score to find a matching sweater. Do you like it?\" She stuck out her chest.\n\nI pulled my hands up to caress her breasts through the soft, fuzzy sweater. \"Soft,\" I said, watching her breathing increase just a little. \"I like it very much. May I kiss you again?\"\n\n\"Once more, and then it's time for dinner.\" We kissed. I returned to hold her cheeks \u2013 the lower ones \u2013 again. I was rock hard. She pressed herself against my obvious discomfort. Shy tonight, but she knew her effect on me.\n\nBut it was off to dinner, which was no sacrifice. Kim's cooking skills continued to improve from a good start. Dinner was delicious, and our conversation light. We talked about all the press attention from being named All-American. She had earned a mention in Sports Illustrated, and had even had a photo shoot for it with a makeup artist, lights, everything. I could only imagine how beautiful they made her look.\n\nShe was still remarkably unaffected by all the attention. We talked about school and finishing up our senior year, about the coming summer. We avoided the Big Issue, though \u2013 college, and where we were likely to end up. I knew Kim was terrified of us going to different schools and drifting apart. But it was crunch time, and decisions had to be made. She had more scholarship offers than she could count. I had a fair number, too, for academics. In fact, I had secrets I wasn't ready to reveal just yet. \n\nWe pressed shoulders as we did the dishes in the sink, side-by-side. When we were through, she stood and looked at me.\n\n\"Well?\" I said. She continued to look at me, silently. I remembered that I was in charge.\n\nI took her by the hands and looked at her. \"Kim,\" I said. \"Thank you for a lovely dinner. I enjoyed it very much, and I appreciate all your work. To be honest, I can't get your leg warmers out of my mind, with visions of them wrapped around me. So if it's all the same to you, may I carry you up to your bed?\"\n\nShe had just the trace of a smile, but the desire in her eyes gave her away. She nodded, slightly, once. I scooped her up, arms under her shoulders and knees, and marched directly up the stairs. She giggled, and buried her nose in my neck. Her bedroom door was open, and I laid her gently on the queen-size bed. Lying beside her, I took her in my arms and kissed her. Lightly at first, but with growing passion. A hand strayed to feel a breast through the sweater. I felt a nipple rise and get hard. We kissed for a long time. My hand went underneath the sweater and resumed caressing a naked breast, no bra to interfere. Kim sighed. Her arms wrapped around my shoulders, she seemed content to kiss me all night long. \n\nRemembering my role, I took her arm from my neck, and slowly moved it down my chest, putting her hand on my aching erection. With my hand over hers, I squeezed her hand, which, in turn, squeezed me. I moved her hand to stroke me through my jeans. As if she finally got the idea, her hand took on a life of its own, and she continued to rub.\n\nIt seemed I really was in charge, though, so for the first time, I was the one to unbuckle my belt, unsnap my pants, and lower the zipper. I raised my butt and worked them down to my knees. I had to take her hand and put it on me, but once I did, thankfully, she started to stroke me. It felt so good. All the time, she was giving me this shy look. I knew she was really enjoying teasing me like this, but she played the role perfectly.\n\nI pulled her sweater up enough to expose her breasts. I took turns kissing and sucking each of them. Her nipples were rock hard, and there were traces of goose bumps in the chill night air. As I kissed, my hand wandered back to crawl underneath the fringe of the cutoffs, and I caressed her buttocks, marveling at how firm they were.\n\nHer stroking subsided. I pulled up from my attentions to her breasts, and kissed her lips. She kissed back, and when we parted, she smiled. Her hand had resumed stroking, ever so gently. I put my hand on the back of her head, and softly pushed her down a little. She kissed my neck. I pushed further, she kissed my chest. I pushed further, and she kissed my navel, putting her tongue in it, which made me laugh, both because it tickled, and because I remembered making her laugh the same way. My hand pushed her down again, gently, and my other hand held the base of my hardness, raising it towards her lips, making obvious what I wanted. Her tongue peeked out and she licked the precum off the tip, ever so gently. One final, gentle push, and she took my helmet into her mouth, lightly caressing it with her tongue.\n\nShe took over then, and gave me the lightest, airiest cock sucking that I could imagine. The touch of her lips and tongue was delicate, light. She didn't suck so much as barely inhale. The feeling was tender, exquisite. I loved it. Loved her. With the softest touch of her lips, she took my entire length, coming back up with the same, ever-so-light touch. Unbelievable.\n\nI pulled her sweater up, and she broke off her ministrations long enough to pull it over her head. While she resumed tasting me, I carefully folded the sweater and put it on the nightstand. The cutoffs and leg warmers remained. I sat up, and reached around to unbutton her denims and lower the zipper. She refused to come off my cock, so I was left to struggle with getting them down her legs. It wasn't easy, and several times I felt a smile on her lips as they wrapped around me. Finally, they were off. I was relieved to see that she wore no panties. One less struggle, but I considered the idea of her shyness that included careful pre-planning. Minx.\n\nShe was on her side, one hand grasping my cock, and her lips lowered over it. I put a hand under her hip, and lifted. She came up to her knees, and immediately swallowed my entire length. Undeterred even by such a pleasant distraction, I took her by the hips and lifted her up, moving to place her legs straddling my face. As I did so, she squealed with a mouthful of penis. My turn to laugh. But then, to business. I could feel the newly-beloved leg warmers next to my ears. I felt them by rubbing my hands up and down her thighs as my mouth closed on its target. Fair's fair, I thought, and so I proceeded to mount the most gentle, delicate attack on her pussy. Light licks, gentle kisses, I pulled on her backside, lowered her onto my face and gave as good as I was getting. Merely a light snack. Too delicate to be called a full meal. Several times Kim would come off my cock to moan. Her hips writhed and bucked on my face, excitement taking over from control.\n\nHer sucking got a little more aggressive. She would take my head in her mouth and swirl her mouth and tongue in a circular motion, which I must admit was fantastic. Her long hair tickled my legs, but I didn't care. I attacked her snatch with more authority, plunging my tongue between her lips, delicately flicking it on her clit. Suddenly, she pressed her pussy into my face and came. I felt her juices run down my cheeks. I was so happy I could give her pleasure.\n\nI lifted her off me, and sat up. Without a word, I scooped her up again, laying her flat on her back in the middle of the bed. I crawled between her legs, and kissed her face. Her legs spread to welcome me. I felt the leg warmers rub my thighs. I found her hand and placed it on my cock.\n\n\"Take the hint,\" I said, reminiscent of her suggestions to me in the past. She positioned my cock at her entrance, and slowly, ever so slowly, I moved forward and penetrated her. She closed her eyes and sighed. We lay there, me as deep as I could go, for a long time. Not moving. Just simply experiencing, enjoying the feeling of being inside her. She wrapped her legs around me and voila! Another fantasy fulfilled as I felt the leg warmers around me. Wool against my butt. Wow. \n\nRaising up, I surveyed the incredible body, the base of my cock intersecting her lips, and the long, wonderful legs. How could it get any better? By her starting to rock, and me responding with thrusts, which we did. We made love this way, gently, for a long time. I held her close, and we kissed softly. I raised up again and looked down at her.\n\n\"With all this shyness tonight, I'll bet you really want to do it hard and fast.\"\n\nShe looked up at me, with wide-eyed, completely feigned innocence, and nodded, slightly, once.\n\nI took her in my arms, kissed her, deeply, and let my body go. Our rhythm picked up, and she met me thrust for thrust. Our passion gained momentum, and soon, I was pounding into her, and she was writhing beneath me, no rhythm, no counter-thrusts, just movement, a sinuous, almost wavelike motion that was random, yet full of emotion. Her arms and hands caressed my shoulders and back. I kept my strokes long and full. I reached underneath her and cupped her ass with my hands, my full weight on top of her. Holding her that way, I felt in complete control. I fucked her hard, holding her tight. She moaned constantly, saying my name and urging me on. She thrashed her head from side to side, but my cock would permit no escape, as my hands gripped her buttocks. I felt it build within her until she wailed and came, reaching her pelvis up to take me even deeper as the waves rolled through her. Long strokes of cock, hands still gripping her butt. I lay upon her, feeling every inch of her body against mine. I felt it start to bubble up, and I fucked harder. My lips found hers and I tried to suck in and swallow her tongue. Passion built, cock plunged. She cried out again and I exploded, ramming in and holding still as what felt like gallons of sperm spurt out in contraction after contraction of my dick. \n\nI kept on cumming. I pounded away again, thrusting even as the spasms continued. I felt her pussy crushing my cock as she came almost constantly now. We kept on fucking. We couldn't stop. In a frenzy, I pulled out, flipped her over, and plunged into her from behind. Her tummy flat on the bed, she raised just her ass so I could plunge deeper, which I did, impaling her, power fucking. She had noticed that I sometimes didn't soften between sessions. This time, I just didn't stop.\n\nThe feeling inside her from behind was completely different. I raised up and pummeled her pussy, I dropped down and kissed her neck, ears and chin, all the while feeling her ass against my belly. Hair splayed out, she lay still, taking my pounding with grunts and moans. She rotated her butt up and screamed and came again. I fucked away, feeling like I could keep this up forever.\n\nThen, from somewhere, a tidal wave washed over me, and I felt huge love for this lady. It was all mushy and romantic. It filled me with a full-body buzz like I'd never felt before. I could feel my heart melt, and my bones turn to jelly. My mind filled with images of her. In her yellow Homecoming dress, the cutoffs, the plaid shirt, sweaty as we played one-on-one, concentrating on the floor during a game. In each one, she glowed, and she smiled that radiant smile, just for me. I saw my spirit reach out and envelop her with love.\n\nWell, three strokes later, what I thought would last most of the night exploded in a blinding orgasm. I came harder than I ever had before, once again filling her beautiful pussy with a huge load of cream. She came with me, shuddering uncontrollably as her climax peaked. We went on that way, seeming to sidestep time. It was the eternal mutual orgasm, I began to think. Would I survive an orgasm that would never stop?\n\nIt did finally stop, but it was close call. I lay on top of her while I slowly deflated. She was still, occasionally wriggling her rear end just to drive me crazy. It felt so good to feel my belly on her butt. I nuzzled her and kissed her cheek. Reluctantly, I moved off. She immediately snuggled in and held me close.\n\n\"Kiss me, Dave,\" she said, stroking my chin. \"I love what you do to me. I love you.\"\n\n\"Oh, Kim, I love you so much!\" I interrupted her huge smile with my lips. We kissed for a long time.\n\n\"I'm chilly!\" she said. \"Let's get under the covers.\" We did, and resumed cuddling. We dozed.\n\nI awoke about midnight, and gently removed myself to go to the bathroom. My crotch was still soaked with the product of our lovemaking. I toweled off and came back to bed. Kim was awake.\n\n\"I thought I'd lost you,\" she teased.\n\n\"Not likely,\" I said. \"Too much love for that.\"\n\n\"I get a buzz every time you say things like that,\" she said. \"Is it getting easier?\"\n\n\"Not really, but the love just keeps growing, so that helps.\"\n\n\"Oh, you sweet man!\" She was above me now, and held my chin in her hands as she lightly kissed me. \"Um, do you think...maybe...?\" She trailed off. Smiling, I took her hand and moved it down to wrap around my already-hard dick. I nodded, slightly, once. Smiling, she moved on top of me under the covers without letting go, and once there, inserted me. I slid in easily.\n\n\"This time,\" she breathed, \"Gentle.\"\n\nSo that's what we did. Slowly, gently, we rocked the night away. It was beautiful, loving, and sweet. I moved in and out of her softly. She, for the most part, just lay on top of me, her leg warmers hugging my hips. We had all night, and from the nightstand clock, an hour of slow rocking later, I was ready. Kim had already experienced several small climaxes, shuddering a little each time, holding me tight and kissing my neck. Now, it was my turn. I slowed our already slow pace.\n\nShe looked at me. \"You're close, aren't you?\" she asked with a smile. I nodded, slightly, once.\n\nShe said nothing, but nestled into my neck, and moved her hips, subtly urging me on.\n\nAnd it came. With the ejaculation came strong feelings of love. It wasn't explosive. It wasn't exciting, like before. It was a giving, loving orgasm. A completely different experience. Kim came, too, gently, lovingly. We moved together as one, my seed filling her, but without urgency, without the mind-numbing ecstasy. Instead, a deep satisfaction spread throughout my body. It was every bit as blissful.\n\nWe held each other for a long time without words. My arms around her back felt so comforting. Little nuzzles from her nose made me smile. Finally, she got off and cuddled in.\n\n\"I don't believe how beautiful that was,\" she said, hand caressing my chest.\n\n\"I don't believe how beautiful you are. I don't believe how I felt just now. I don't believe how lucky I am,\" I said softly, my hand in her hair.\n\n\"Why David, you're getting positively romantic!\" she said. \n\n\"Did you have as much fun tonight with me as you thought you would?\" I asked.\n\nShe nodded, slightly, once. \"Hold me close.\"\n\nWhat a woman. I wonder what's for breakfast?"
    ],
    "authorname": "Balrog",
    "tags": [
        "passive",
        "leg warmers"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/slightly-once-ch-04"
}