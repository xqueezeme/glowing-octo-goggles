{
    "title": "Milly Scott Pt. 03: The Artist and Her Young Lover 02",
    "pages": [
        "This is the continuation of 'The Artist and her young lover' and it will make little sense unless you have read the first part. \n\nTo Recap: Milly's wife, a police officer, was killed and her friend's daughter, Fiona, provided comfort through Milly's grief. The following year Fiona decides to study at university, near to Milly's home and spends a lot of time there before discovering their love for one another, despite their age difference. They have told Fiona's family how they feel and spent an enforced few weeks apart before having their first vacation together in Barbados. \n\nThere is no tragedy in this story, but more sex, particularly at the beginning. There is also some mild bondage, all sexual activity is consensual. All the people involved are fictitious and are over 18. \n\nThank you for your comments on my previous work, I appreciate and welcome them. \n\nBig decision \n\nI could have stayed in Barbados for longer and been very happy, but Fiona had to return to University and now we were home and together. \n\nSince getting back I'd resumed looking after and caring for Fiona and it delighted me. I'd also been highly motivated, turned out lots of sketches and taken on some private portrait commissions; some were very personal portraits that paid very well. \n\nI'd been at the gallery handing over a new batch of sketches and as I was walking back to my car I had to stop on the footpath to allow a woman with a pushchair to pass by. By chance, I looked into a jewellers shop window and I saw it; a platinum engagement ring, with a rectangular diamond and a smaller diamond on each side. That was what I wanted, I hadn't known it until that moment, but I knew it now. I went inside. The jeweller told me that it was an engagement ring and I told him that it was for my partner, he looked at me oddly. 'What no lesbians ever got engaged in this part of the world?' I asked myself. \n\nI raced back home, grabbed the ring of Fiona's that I was looking for and dashed back. \"It's very close to the right size and should be fine, but we can change it in 48 hours if needed.\" \n\nI looked at him, \"24 hours?\" He nodded. \"I'll take it. Cash, cheque, credit card, bank transfer what do you want?\" I fixed that and hurried back home again. \n\nWhen Fiona came in and saw me she was a bit shocked. I'd dressed up; make-up, hair up, a dress - a short dress with plenty of leg, heels, the works. The table was laid, including candles and I served up steaks and glasses of red wine. When we finished eating I cleared the plates and sat down again. \n\nNow, my darling Fiona is not a stupid girl, she knew something was afoot and I'm sure that expected for us to be destined for the bedroom. She was correct, but not as soon as she thought. \n\n\"I need to speak to you, but there's a rule. If you use any words at all between now and when I tell you that you can speak again, I stop and we may try this again tomorrow, we may not.\" She was about to speak and I raised my hand, \"Nod for yes and shake for no, okay?\" She nodded. \n\nI was smiling now, \"You once asked me a question and I imposed some rules. It was about waiting until you'd graduated and if we felt the same way we could think about making this relationship permanent. Do you remember? No words!\" She nodded again. \n\n\"Same rules, same conditions still apply. If you asked me that question again right now I might say yes, but you can't speak so you can't ask, understand?\" She was smiling and nodded, \"So if you could speak, would you ask it right now?\" Again she nodded. \n\n\"Damn, it's a shame that you can't speak. So I need to take matters into my own hands.\" I produced the box and slid it across the table, but with my hand over it. \"Fiona, will you agree to marry me and become my fianc\u00e9e?\" \n\nShe nodded again and I removed my hand. She looked at me and I could see the smile in her eyes and the corner of her mouth turned up, her face was pink and her foot was tapping at some speed. She never took her eyes off of mine as she opened the box, her fingers touched the ring, she glanced down, then up at me and back down again. The smile spread across her face. \n\n\"Now you can speak.\" \n\n\"Yes, yes, yes. I love you!\" She whooped, then there was another whoop, she froze and looked around. She looked puzzled and asked, \"What was that?\" I slid my napkin aside; she saw my phone and then her sister shouted. \n\n\"Yahoo! Congratulations.\" \n\nI picked up the phone and said, \"Thank you, Jane, she'll call you shortly, but I need to kiss her just now.\" \n\nWe met and kissed. Then she stepped back and sat down looking at the ring and slid it on. It didn't need to be adjusted and looked perfect on her finger. She looked up at me and asked a question with just her eyes. \n\nI tried to answer the unasked question, \"I saw the ring today and knew that I wanted to do this. I don't want to get married right now, that would be too stupid, but I intend to uphold my end of this. I want you to be my fianc\u00e9e; I want to be engaged to you and for you to wear a ring that I gave to you.\" \n\n\"Yes, I'm very happy now, I wanted to give you a ring. What was that with Jane?\" \n\n\"I know that you wanted to give me a ring and you can, there's no rush. As for Jane, well you two confide everything in each other and I thought that if she was going to be my sister as well, I could confide in her. I called her earlier, told her what I'd planned and allowed her to listen in. I, we, owe her a lot. Now kiss me again and then there's another call that we need to make.\" \n\nFiona called her sister and I went to the fridge to get the champagne and two glasses. There seemed to be a great deal of laughter and joy. Fiona handed me the phone. \n\n\"Hi Sis, congratulations, it worked well.\" \n\n\"Thanks, Jane, Sis, it did and she looks really happy and so am I. It's a bit crazy. Thanks for all of your support and everything that you've done, I love you too.\" \n\n\"And I love you, Milly. Good luck to you, you're going to need it with her. Have you called them yet?\" \n\n\"That's next.\" \n\nFiona and I sat together and we pressed the buttons. \n\nJess answered, \"Hello Milly you okay? Fiona okay?\" She sounded worried. \n\nWe both said \"Hi.\" I asked if Victoria was around. \n\n\"She's right here. Is everything okay?\" \n\n\"Put the speaker on please.\" \n\n\"Milly, I'm getting worried, what is it?\" \n\n\"A few months ago your daughter asked me to marry her, I told her not to be stupid but that if we were together when she finished Uni we could talk about it.\" \n\n\"Oh Lord, you haven't?\" \n\n\"No, but something didn't seem right to me. I've just proposed and Fiona has agreed to become my fianc\u00e9e. Right now she's sending you a photo of her wearing a ring. We're not going to actually do the deed for a while yet. We're both very happy and I guess that you're both in shock so I'll hand the phone to Fiona.\" \n\n\"Milly, Milly, before you take this off the speaker, let me speak to you.\" It was Victoria and I did as she asked. \n\n\"This should be a surprise, but somehow it isn't. Congratulations, I wish you well, but Jess may take this a little harder, actually, no, she seems to be taking it well, she's just opened champagne.\" \n\nI handed the phone over to Fiona who was speaking for a while. All the time she was grinning at me and then looking at her ring. Then she started to slide her panties down and as she did so she stared at me, daring me. I slid onto the floor and licked her. How she managed to speak, I'll never know. She ended the call and let out a stream of profanities as she came. I leaned back and grinned. \n\nSeveral times in my life I'd thought that the sex that I'd had was the best that I'd ever experienced. But the truth is it had never been as good as it was with Fiona. I thought that the love that I'd been fortunate to experience was so good, but with Fiona, it was better. I was more than twice her age, but I didn't feel it. My heart was bursting all of the time and when I see her it flutters. I hoped that this would last for a while yet. \n\nFiona grabbed my hand and hauled me to the bedroom where we made love for two hours and never spoke a word; they were superfluous to the actions, the touches and the feelings. \n\nPlaytime \n\nA couple of weeks later one Thursday evening Fiona casually asked if we could have a playtime the following evening. I understood from the look she gave me what 'playtime' meant. \"I'll be ready when you get home.\" \n\n\"No, let's have dinner first and make a date for nine.\" \n\nDamn, that would mean a fairly quick session, but better that than nothing. \n\nI cooked a nice meal and served it with a glass of wine. Then we sat and cuddled for a while. \n\n\"It's time for some fun.\" Fiona took my hand and led me through to the bedroom. \"Don't do a thing,\" she said as she slowly removed my clothes kissing me softly as she did so. \"Loo?\" she asked. I went and returned. The straps were out, my knees felt weak. \n\nShe pushed me to sit on the edge of the bed and fastened the straps around my thighs, then pulled my ankles up to join them and my wrists were added. This left my legs wide apart exposing me and I was unable to do anything. I'd experienced this before and had put those straps on myself. I felt deep down that I shouldn't enjoy this, but I was wound up tight and so excited. She blindfolded me with a scarf and pushed me so that I was lying in the middle of the bed. I felt her breath next to my face. \n\n\"Remember how you told me not to speak the night that you proposed? Well, I want you not to speak, unless I hurt you or you need to stop. Say 'Red' if you need to stop and I will, but try not to.\" I nodded and now I was nervous, but intrigued. What did she have planned? \n\nNothing, there was nothing for several minutes. Then I felt her touch my nipple and I jumped, then I jumped again as the clamp went on it. I squealed, then squealed again as she attached the other one. I hated these damn things but wished that we used them more often. What a contradiction! \n\nThe pain was incredible and I couldn't focus until she slid my friend inside me. Within seconds the vibrations had me humming. I was so turned on, I loved her doing this me and the pain from the nipple clamps became something else, I don't know what it was, but I liked it. \n\nFiona rubbed my backside and slid a finger into me and I flinched, she whispered into my ear and promised not to hurt me. I was confident of that and then I felt her pushing, it was something else, stiff and cold, it filled me as the pressure mounted until it went inside and my ass closed around it. Oh wow, that was different, strange and uncomfortable. Fiona massaged my stomach, my back and stroked me and the discomfort subsided and I felt good, alive, expectant, aroused. I needed to come. She knew it and touched my clit; I fought against the bonds as I came. I screamed and eventually relaxed. It was all still there, the pressure on the nipples, the gentle vibrations, the feeling of fullness, and her touch. I was restricted and sliding gently off to another world until she kissed my clit, I was fighting again and then nothing. I blacked out for a moment; she removed the blindfold and looked at me with love, affection and lust. \n\n\"Want to stop?\" I shook my head, \"Take the nipple clamps off?\" I looked at her with horror, taking them off would hurt worse, I shook my head. \"Turn my namesake off?\" I shook my head violently. \"Remove the butt plug?\" I blushed and shook my head again. \"Should I release you?\" I shook my head again. \n\n\"I could keep you like this for a while. Would you like that?\" I was blushing even more now. My young lover wanted to keep me tied up and tease me. That was so wrong, but I nodded and silently mouthed 'please, anything.' \n\nShe covered my eyes again and pulled off a nipple clamp. I screamed with the pain thinking 'put it back', and she moved the other one. I screamed again louder and I came. 'How is that possible?' I silently asked, but no one answered. \n\nNothing, nothing at all, she'd gone. Then blinding cold on my nipples, ice cubes! Shit, I wish that I'd never done that to her. She removed them; oh shit, I wanted them back. \n\nFiona took my vibrator lover away, 'Oh, please no, leave it there, please.' But I still didn't speak. Then I felt something else at my lips, a vibrator, a thicker one, what heaven and then she turned it on. 'Oh fuck, fuck, fuck!' Then it stopped, then it started again and I soon realised that it was set to stop and start randomly. \n\nI felt her touch my backside and the end of the thing in my ass. I felt a slight pressure and it moved by itself, it vibrated as well and, as I was to discover, it was also set to turn on and off randomly. She reattached the nipple clamps, but this time she must have adjusted the pressure, they were tight enough not to fall off, but not cause much discomfort, even so, there was no doubt about their presence. \n\nI felt Fiona stroke my arm and the desire to touch her overwhelmed me, then one of the vibrators started, then the other one, the two of them at the same time sent me over the edge, and then again. One stopped the other kept going, then nothing, then one, then the other, then both, then nothing. I was losing my mind. \n\nFiona had a feather and she used it on every part of my body. I screamed and screamed, but I was determined not to speak. She also kissed me, licked me, bit me, rubbed me, stroked me, breathed on me and used her namesake. All the time the two vibrating devices turned on and off. \n\nI drifted further off into another world and the passage of time meant nothing. I knew that Fiona was there, but that was all. I didn't really come as individual events, but I was high and experiencing continuous pleasure and torment as one. \n\nI didn't realise that things had stopped when they did. The knowledge grew on me over time as Fiona removed the nipple clamps whilst keeping the pressure with her fingers and releasing it a little at a time so that there was no jolt of pain. She removed the vibrator and the scarf. She started to remove the cuffs but I told her not too. She cuddled in behind me holding me. \n\nShe woke me gently and whispered, \"Milly, I need to remove the cuffs now.\" \n\n\"No please leave them I can keep them on for longer, it's not been long!\" \n\n\"My darling Milly, you've had them on for almost twelve hours. I'm taking them off and I need to get you to the loo.\" \n\nShe was clearly talking rubbish, twelve hours; it hadn't been that long. She released each leg, one at a time, massaging them for some time to prevent cramp and pain. It allowed me to stand, well get upright; she had to half carry me. Removing the thing from my ass was not easy and when it was gone I felt empty. She let me use the toilet, then washed me down with a warm cloth and gently towelled me dry. She helped me back to bed and tucked me in. I'd started to nod off when she returned with sweet tea and hot buttered toast. She fed me and held the mug for me to drink. When I was done she kissed me, told me that she loved me and tucked me in. \n\nShe woke me again and took me through to the bathroom and helped me into a bath of warm scented water. She gave me some wine and stayed with me, but said nothing; I was still in a daze. She dried me, fed me soup and sandwiches and took me back to bed. \n\nIt was daylight when I woke and I went to find Fiona. She was making coffee and handed me a mug. \"What time is it?\" \n\n\"It's ten o'clock Sunday,\" she smiled, \"Are you okay?\" \n\nI was puzzled. \"Yes I think so, but how can it be Sunday?\" \n\n\"You slept through Saturday.\" \n\n\"Don't be stupid of course I didn't. We fooled around on Friday and you let me up and helped me to the loo. I remember that.\" \n\n\"Sit down Milly. Did you enjoy what we did?\" \n\n\"Oh god yes it was ... something, something else. But I thought you were going to tease me for a while.\" \n\n\"I teased you until five in the morning and when I tried to release the cuffs you stopped me. I cuddled you for another four hours until I decided that I was undoing the cuffs. I was scared that I'd hurt you. I fed you and you slept, last night I fed you and put you back to bed again. I wiped you out, exhausted you, I went too far, I'm sorry.\" \n\nI stared at her, tried to absorb all that she'd said and searched my brain. Things started to come back to me. \"I know that I liked it, I drift off into ..., somewhere, space maybe? It was astonishing. You cared for me and looked after me, thank you.\" \n\nShe looked stunned, \"You're okay with it?\" \n\n\"Did I ask you to stop?\" \n\n\"No, you tried to stay in the cuffs. Do you mean to tell me that you'd want to do it again?\" \n\nI blushed; admitting that I liked it was almost embarrassing. \"Yes I would, not this week, I've lost a day. At some future point, not too far off. Some of it was painful, some of it was torture, but I loved it. I could never do it with anyone else, but with you, I put my life in your hands and know that you love me.\" \n\n\"Wow, I thought that I'd gone too far.\" \n\n\"No my darling you've no idea how it felt. Was I really in those cuffs for twelve hours?\" \n\n\"Almost.\" \n\n\"Did I ask you to stop?\" \n\n\"No you never said a word, but you screamed a lot, I like to be able to make you scream with pleasure.\" \n\n\"I could have asked you to stop, but I didn't want to. I wonder how long I could stay like that?\" \n\n\"Would you want to find out?\" \n\n\"Would you want to experiment with me? If you would, I'd like to try.\" \n\nFiona laughed, relieved and kissed me, \"I'd like to try and you're incredible. Have you checked your wrists? You've got bruises.\" \n\nI did have bruises on my wrists and ankles. \n\nFiona started to make breakfast and I went for a shower. I was looking in the mirror when I saw a bruise and then I looked closer, a bloody love-bite, a hickey, right there on the side of my left breast! \"Fiona, in here, now!\" \n\nShe rushed in thinking I was ill or something. I pointed to it, \"What the fuck is this?\" \n\nShe laughed, \"You know what it is, and I hope who did it? It was the one time that you used actual words when you said more.\" \n\n\"No way, I wouldn't.\" \n\n\"Way! You did, so I gave you another.\" I spun around, but couldn't see anything. \n\n\"Lower my love.\" Damn her grin! I looked some more until she pointed to the inside of my left thigh right at the very top. Another one, bigger. I was furious, she stroked my shoulder and when I looked at her she gave me the goofy grin that made me laugh. \n\n\"You're a pervert!\" I couldn't help but smile, \"But I do love you,\" I admired it, \"I hate love bites, sordid, tacky, nasty.\" All of that was true at least until that moment. \"I'm losing my mind, I love it and when it fades I want you to replace it.\" \n\n\"Who's the pervert?\" \n\n\"Me, I confess. Look at me, middle-aged, lover half my age and I find that I like being tied up and teased. I should be ashamed, but I'm not.\" I paused, dare I ask? \n\n\"Fiona, you can tell me to mind my own business, but you've never spoken about sex with anyone else before us.\" \n\n\"I would have if there was anything to tell. I've been felt up twice by guys, nothing else. You were my first and only. I knew that I fancied girls, but never did anything. I dreamt about it, that's all.\" \n\n\"Who did you dream ...?\" I didn't get the rest of it out. \n\nShe looked slightly awkward. \"You, only ever you.\" \n\n\"Really?\" \n\n\"Yes, quite a lot.\" \n\n\"How long have you felt like you did, do?\" \n\n\"Almost a year. Just after my eighteenth birthday. It was the week Jane and I were visiting when I went to check out Lancaster University. I looked at you one day bending over, I saw your skirt ride up high and saw all of your legs; you wore flesh-coloured tights and pale blue knickers. It was as if I'd jammed my fingers in a socket. It's been you ever since. I stole your knickers the next day, the pale blue ones; I actually still have them, hidden.\" ",
        "\"I looked all over for them. Did you wear them?\" \n\nShe just nodded looking ashamed. I pulled her close to me, \"So I suppose that you've raided my knickers since then.\" \n\n\"That was the only time, the only pair. Not much point now, I can access the contents whenever I want.\" \n\n\"You cheeky bitch! I have an idea, why not have a combined panty drawer and we can wear whatever we like? It won't work for bras. I like the idea of wearing your panties now and again, a bit like the nightshirt of yours that I stole.\" \n\n\"You mean the one that I left for you, it was my favourite.\" \n\n\"Well, now it's my favourite. I wore for a week after I found it, then I washed it and wore it most nights.\" \n\nWe showered together and I tried to return the favour that she'd treated me to during the previous thirty-six hours. I made love to her and refused to take anything from her except her hugs and kisses. I'd found so many things that I'd never dreamt of and the one thing that was beyond all reality. I was crazy, daft, about a girl less than half my age, who only had to look at me a certain way and I wanted to drag her into bed, or on the floor, or the table, or anywhere else, I didn't care and if she wanted to drag me somewhere, then that was fine by me as well. \n\nI knew that I loved her with a passion that was beyond my wildest dreams. Not just for the sex, as spectacular as that was, but I wanted to spend time with her, to help her and care for her. She did her own thing occasionally; she seemed to be content to be with me most of the time. \n\nNew toy \n\nI had an idea for something that we'd never tried. I searched online for a strap-on and placed my order. I trembled as I tore open the package, my god, the size of it! It was flesh coloured and had realistic ridges; it was stiff but still flexible enough. I had to cross my legs when I thought about it inside me even though that wasn't why I wanted it. Checking that the door was locked I raced to the bedroom and managed to work out how to fasten the straps and then I attached it. 'It,' we need to find a name for it. I looked slightly ridiculous, a pale-skinned, skinny, 5' 6\" long-haired redhead, with a decent pair of breasts and a 'thing' the size of, well, no man that I'd ever met all those years ago when they still interested me. \n\nFiona had something on the following day and needed to be away early so that was not the time, but I was wound up with expectation and she sensed it. I denied that anything was wrong, but she gave me the grin that told me she knew that I was lying to her. \n\nWhen she came home the following evening I was waiting for her and the expression when she saw me was wonderful. My hair was up; my make-up was heavier than normal and a little slutty. I wore a sheer white blouse, tied below my bust and my nipples were clearly visible. That was partly explained by the rouge that I'd rubbed into them and the lack of a bra. I wore a short leather skirt that was tight across my hips, so tight that she would be able to see the suspender straps that held up seamed stockings. I also wore a pair of black heels that made me taller than her in the flat shoes that she was wearing. \n\n\"I'm here, ready, willing and able lover. Go and change, I've left you some clothes and then you can have a nibble.\" \n\nShe tried to kiss me, but I pushed her away and whispered, \"Later, sexy.\" \n\nShe came back wearing one of her long man's style button-down shirts. Nothing else, except a nice clean smell, lip gloss and a little light perfume. We ate a snack and she hardly spoke as she eyed me up. I'd seen her look like that before and it had lead to a pleasurable evening. I think that's what she expected. \n\nShe couldn't contain herself any longer and tried to take the lead, but I batted her hands away. \"I'm in charge tonight and I intend to give you a great deal of pleasure. If you try to take the lead or control in any way I'll stop and I'll cut you off all sex for a week, do you understand?\" She nodded. \n\n\"I want to satisfy you and I want to try something new. If at any time you need me to stop or go slow you need to tell me and that's fine. Now clear those dishes away for me I need to do something.\" She looked surprised as I walked away. \n\nI went to the bedroom and lit scented candles, turned on the little fairy lights on the headboard. I pulled the blind down and started some soft music. \n\nFiona appeared at the door and I went to hug her. She jumped a little as I slid my hand between her legs, she'd not been expecting that and I'd not expected her to be quite so wet and aroused. \n\nWe lay on the bed and we kissed. I stroked her, removed her shirt and carried on, gentle touches everywhere, except between her legs. Then I licked and sucked her breasts and nipples, she was getting worked up. I kissed her passionately and then stood up. She looked shocked; I smiled at her and changed the music. I'd never really stripped before; I gave it my best effort. I slowly, and as seductively as I could, disrobed. As I did so I ran my hands over my body and realised that this was exciting me as well. I left the stockings and heels on and stood before her fondling my breasts and touching myself. Wow, I was so ready I needed to get a grip. \n\nFiona hadn't blinked and her eyes were out on stalks. This was a Milly that she'd never seen, that I'd never been before, but it was a Milly that was going to appear again at some time in the future. \n\nI got back on the bed and licked the inside of her thighs before moving up, licking her slit and her clit. I felt her getting close and stopped. \"Patience lover,\" I whispered. \n\nI left the room for a moment and then danced backwards towards the bed as she laughed at me. I managed to get on the bed beside her and she'd not seen our new 'friend.' I got onto my knees between her legs. She was watching my face, at least until she felt something touch the top of her thigh. She looked down and her eyes nearly exploded. \n\nShe gasped, \"Fuck, Milly that's ...\" \n\n\"A new toy and you can guess where it's going!\" \n\nShe shook her head, \"It's, it's too ...\" \n\n\"No it's not, but I'll be gentle.\" I tried to reassure her, but had to add, \"At least to start with.\" \n\nI used a little lube that I'd concealed under the pillow and it took me many minutes, in fact, I nearly went too far because I enjoyed applying it so much. I placed the tip between her legs and moved forward a little. She looked scared, well apprehensive, and bit her lip, \"You know that I'm a virgin, don't you? No one has ever... well. You know and nothing anywhere near that size has ever ...\" \n\n\"I know all of that and I promise that I'd never deliberately harm you. I could never do that because of how much I love you, but tonight you'll experience something new. Okay?\" \n\nShe nodded her head, still biting her lip. I pushed forward very gently and I could see her trying to relax. I leant forward and kissed her, \"Don't try to relax, just let go, we've got all the time in the world.\" \n\nI applied more pressure gently and her lips parted, I heard her suck in her breath. I stopped and watched her; I could see her relaxing so I moved further forward. I took things very slowly, little by little, stopping every time I saw her flinch or gasp. I was halfway there and gave a little thrust, her eyes popped again. I thought that I'd done too much and stopped. She looked up at me and nodded, \"More?\" I asked. She nodded. I continued slowly until it was almost there and suddenly she thrust her hips towards me and it was inside her. I held still and watched her. \n\nFiona took time to adjust and then I saw a smile breaking out. I raised an eyebrow and she nodded, so very slowly I started to move back and forth, gently, gently and I could feel her starting to come. I paused. She swore at me, \"Fuck, Milly,\" then she grinned, \"Fuck me, Milly.\" \n\nI didn't go at it hard; I slowly built up speed and the amount that I withdrew each time. This was not something that I was used to either so I took time to adjust. I felt it mounting inside her then she clenched every muscle that she had and clenched her insides to stop me from moving. I felt her slowly relaxing, coming down, then I started to move again and her eyes went wide. She moved with me and it got more energetic. She came again, but I kept going gently, she bucked against me and then it became wild. This was a 'fucking' there is no other way to describe it, I kept going, she reacted, screamed and asked for more, then it hit me, an almighty thing had built inside me, caused by the pressure on my clit. I exploded, and then stopped, I was rigid, frozen. \n\nIt took a minute or two for me to be able to move again and this time Fiona was the driving force, she became like an animal. I asked her to move and she shook her head as if to say 'please no.' I ignored her and rolled over bringing her with me so that she was now on the top. She paused, it had gone deeper and after a moment she adjusted and then rode me like a woman possessed with a carnal desire. \n\nEventually, she fell onto me gasping for breath. I held her tightly and whispered loving words into her ear as I stroked her back. I think that it took twenty minutes before she moved. She'd been squashing me and I was panting, but I hadn't wanted her to move. I felt so close to her and so loved, almost as if we were the same being. Something that I'd never felt before. \n\nShe looked at me with her lovely eyes and whispered, \"Thank you, Milly, that was scary and then it became like something I couldn't describe. I was gone; maybe it was like you feel when we're playing. Thank you. I love you so much, never leave me.\" \n\nBy the time I'd muttered, \"Never,\" she was sound asleep. \n\nAt breakfast the next morning she looked sheepish and I asked her if she wanted to talk. \"What we did last night was extraordinary and I have the feeling that it was wrong. This doesn't make much sense and I think that it might be like when you're tied up. Like we shouldn't, but that was insane and I know that I'd like you to do that again if you would.\" \n\nI touched her arm. \"Of course, I loved it and love you.\" \n\nShe looked at the table almost afraid to speak; I asked her what it was. \n\n\"In all the years that I've known you, you've always dressed smartly, very feminine, you always looked, I don't know proper, classy, sexy. When you get dressed up for an evening out you look stunning. You behave differently in the bedroom or anywhere else we happen to be having sex. But last night you looked... you oozed sex, slightly slutty and I got a thrill from looking at you that was different from normal. Jesus, you can dress like that anytime!\" \n\n\"Fancy going shopping?\" I asked. \n\n\"Is that all you can say when I compliment you?\" She looked surprised. \n\n\"That's the only slutty outfit that I have, we need that fix that, today! As long as I'm only a slut for you.\" \n\nI was feeling playful and very brave so I wore the same clothes, although I tucked the blouse in and wore a bra. Then I realised that I couldn't walk far in those heels so changed them for a slightly lower pair. I still looked good though and I put on far more make-up than I'd normally wear. Fiona's face was a picture when she saw me. \n\n\"Right you, you need to change,\" I pointed to myself, \"Get the idea?\" \n\nWhen she emerged it was a person that I barely recognised. Her hair was up like mine, make-up darker than usual, eyeliner heavier than I'd ever seen on her. Her white blouse was tucked into a very short red skirt, black tights and heels. \"Will I do?\" \n\nI grabbed her hand, \"Come on before I have to fuck you again.\" \n\nShe grinned, \"Later?\" \n\nWe drew some looks as we shopped, but we didn't really care. We spent lots of money on new outfits and even more on sexy underwear. That evening over dinner we decided that we were going to banish boring undies for things that were a lot sexier, our new dresses were racier as well; the changes were subtle but exciting. \n\nNew car \n\nOne morning Fiona came back in, her car wouldn't start. I chucked her my keys and she left. I called the local garage who came and took the car away. Later they called to say that it wasn't worth repairing. \n\nWhen Fiona came home I told her. She looked disappointed, \"Don't worry, take mine tomorrow and I'll see if I can get something, do you mind what? \n\n\"Not really as long as it goes, I'll pay you back.\" \n\n\"No, you won't. We're a couple; I'll see what I can do.\" \n\nThat weekend we drove into Windermere and stopped at one of the big car dealerships. We strolled around until I spotted the salesman that I'd spoken to a couple of days ago. We wandered over to a row of cars. \n\n\"Milly, look at the prices, we're in the wrong place.\" \n\n\"Hush, what about that one over there?\" I pointed to a silver Audi A3. \n\n\"Very nice, no 'for sale' sign on it and look, it's this year's model. I can't afford that.\" \n\nThe salesman gave me a puzzled look as he told us, \"It's a demonstrator, six months old, 5,000 miles, lots of extras.\" \n\n\"I'd love that car, but I don't have the money for that.\" Fiona was antsy. Again the salesman looked at me. \n\n\"Do you like it though?\" \n\n\"Of course I do Milly, I'd need to be insane not to like it or want it, but ...\" \n\n\"Try it for size.\" She got in and she looked good in it. \n\n\"Great but ...\" \n\nI held up my hand, \"See you at home.\" I walked away and heard the salesman laugh. \n\n\"She paid for it, your Mum paid for it. You can drive it away right now.\" \n\nI looked back and she was standing, one leg out of the car yelling, \"Milly ...\" \n\nI kept walking and yelled, \"Happy birthday.\" \n\nI heard her pull up ten minutes after me. She came bustling through the door not very happy looking. \"What is this? I thought we were a couple and that we'd make joint decisions like this.\" \n\nI looked her in the eyes. \"Yes we did, but I can buy my girlfriend a present if I want to. It's yours, enjoy it.\" \n\n\"You're crazy.\" \n\n\"But you love me?\" She nodded, \"Well, happy birthday then. \n\n\"That's not until next month.\" \n\n\"But you need a car now and it saves me trying to find something.\" \n\nLater I realised that maybe I'd done something wrong. Shit, if we were to be a couple then we need to be a couple. \n\n\"Fiona, listen to me, I apologise, I used my money, I'm fine with that and you've got a nice, reliable car that will get you where you want to go. I love you and giving you a gift is a pleasure, and it's for your birthday.\" \n\nI carried on, \"But I see that I've made a mistake. We're a couple and we need to share everything. On Monday I'll go to the bank and, if it's okay with you, make all my accounts into joint accounts unless you want to open a brand new joint account?\" \n\n\"Milly, don't be stupid. I love the car, I was surprised and you can spend your money however you want to. I'm flattered that you would buy it for me and now I feel like shit.\" \n\n\"It's okay, forgive me this time.\" \n\n\"I love it, thank you. As for bank accounts, that makes no sense it's your money.\" \n\n\"No, it's not, it's ours and you can pay your money into it if you wish and then ...\" \n\n\"You're nuts.\" \n\n\"But you love me. If this is for the longer term then we need to behave like it. Anyway, how does it feel to know that 'your mum' bought you a new car?\" I laughed. \n\n\"I wanted to punch him but realised that it wasn't worth the effort and not an unreasonable belief on his part. And I wanted to get back here and kiss you.\" \n\n\"In that case what are you waiting for?\" \n\nThat evening we had sex in the new car at a very dark spot beside a lake. Fiona's car now has a small stain on the seat cushion, all my fault too. \n\nSummer break \n\n\"Fiona, I'd like to know your plans for the summer. If you need to work or do something I don't mind, well not too much, but I'd like the two of us to go away together, a trip, and I have an idea, but I need to know your plans.\" \n\n\"I haven't given it much thought; Karen offered me some work that would be a great experience. I haven't thought about the details, I could check with her. What did you've in mind?\" \n\n\"Find out what you're doing. I have an idea I want to run past you and then we can talk.\" \n\n\"Come on; tell me or no cuddles tonight.\" \n\n\"You'd be prepared to punish us both? When was the last time we didn't sleep together?\" \n\n\"A long time ago and no I wouldn't be prepared to do that, but give me a clue.\" \n\n\"Well, we've talked about lots of things and some of those got me thinking. Take a month and go to the US; New York, Washington, New Orleans, the Grand Canyon and Vegas. I want to hear what you think.\" \n\n\"Milly that sounds amazing and I'd love to do that, but I'm not sure I have the money for that, actually I know that I don't.\" \n\n\"Now you see that's why we need to talk about it. You do have money; it's in the bank account that has both of our names on it, the one you almost never use.\" \n\n\"It's not mine, I feel like I sponge off of you.\" \n\n\"I know my love, but I want to share with you and soon you'll be earning loads of money. Money is nice, but I'd give it away to be with you. Think it over.\" I went to make tea whistling the beginning of the Star-Spangled Banner. \n\nFiona had agreed to work for Karen's company for a month during the summer. When she first told me I admit that I was disappointed. A couple of days later Jess called me, \"Would you like to come and stay here with Fiona?\" \n\n\"It might be a little awkward between us, don't you think?\" \n\n\"No Milly, you love my daughter and she loves you, plain as day. What matters to me is that she's happy and let's face it, you're a pretty good catch.\" \n\n\"Except that, I'm the same age as you.\" \n\n\"It is what it is and she could do a lot worse than you. Victoria and I are going away for three weeks so you'd have the place to yourselves, although I think that Jane will be here as well.\" \n\nI put the phone down sat on the couch and offered up a small prayer. No matter what Jess said there was always going to be a niggle, but this would resolve everything. I could run them to the airport and take care of the house and the girls, 'my girls'. \n\nWhen I outlined my travel plans to Fiona she got excited so we spent a couple of hours with wine, refined my initial thoughts and the next day I got to work. \n\nWe drove down to Jess's home with our travel stuff and enough clothes to see us through the next month. It was good, better than I'd expected, I was made welcome and helped around the house. I got to spend a few days with Jess and Victoria and felt like I was part of their family again. Bedtimes were still a little awkward, but I was able to snuggle up with my love every night and that made it all okay. \n\nWe were sitting after dinner, Victoria, Fiona and I, when Fiona asked Victoria a question. \"Mum, is there any way that I could access the money in my trust or close it down?\" \n\n\"Why would you want to do that?\" Victoria looked puzzled. \n\n\"I feel like I'm sponging off of Milly.\" \n\nI felt that I had to speak, \"No, Fiona that makes no sense. You pay for what you have to, it costs a very little extra because you live there and I don't want any of your money. One day soon you'll have a great job, earn lots of money and that will be reward enough for me. I told you once that money was not the most important thing, love is. Money is nice, but I'd give it up to be with you!\" \n\n\"I see your point of view Fiona and it's not the silliest thing that I've ever heard, but I also agree with Milly. If you two are as determined, as you seem to be, you'll pay her back over the years to come. Keep the trust and it gives you a little to play with. Whatever you don't spend, pay into your joint account.\" \n\nAfter a long discussion, Fiona agreed to continue as we were and I never made jokes about it. I was so crazy about her that money didn't matter to me except as a means to let me help her. ",
        "Summer loving \n\nI drove Jess and Victoria to the airport to bid them farewell. I confess that I felt lighter going back knowing that they'd left. I made a nice supper that evening and we had sex all over the house, crazy sex, screaming with pleasure and laughing. Jane came home the following day and that curtailed our activities a little, but not too much. \n\nJane had finished her course and had the summer off before starting work with a local law firm. With Fiona working that meant that Jane and I spent a lot of time together. We shopped, cooked, walked and most of all talked. I'd loved all of the time that I'd spent with the two of them. When they were together they were hilarious and fed off of each other. Jane very often played a straight role for Fiona, but she had a wicked sense of humour and fun when she was on her own. I loved her sister with a passion that neither of us understood, but somehow Jane was there with us, she got 'it.' \n\nOver those three weeks we became sisters, she was no longer the girl that I'd treated and loved as a niece, no longer my lover's sister, Jane became my friend and a fully-fledged sister. Now she had two people, two sisters who would be there for her anywhere, any time and I knew that she'd be there for me, she'd already shown that. \n\nJane drove us to the airport, it was too far really, but she'd insisted. I was going to miss her, but I had my love with me, so all was well. We stood in the queue to drop our bags off and Fiona joked, \"You should tell them that you're a famous artist and see if we could get an upgrade.\" \n\n\"Don't be daft, no one outside the Lake District has heard of me and even there I'm anonymous.\" \n\n\"Good morning, are you checking two bags?\" I agreed that we were. \n\n\"One of my colleagues mentioned hearing that you're an artist. Are you the Milly that draws Herdwick sheep?\" \n\n\"Well I draw lots of things, but yes I do draw Herdwick sheep.\" \n\n\"I come from Windermere and my mum has a couple of your pictures. You're going to New York, you and ...\" she looked at the other ticket, \"Fiona? Are you related?\" \n\n\"Fiona is my fianc\u00e9e.\" \n\n\"Wow, give me a minute.\" \n\nI was puzzled; she looked up and spoke quietly. \"We have a couple of seats in business class, so I've upgraded you.\" \n\nI was stunned. \"Is that okay? Thank you.\" \n\n\"Here are your boarding passes. If you head for the lounge and show these you can have a glass of bubbly before you board. Have a safe trip.\" \n\n\"Thank you so much, it's very kind of you.\" I handed her one of my cards and spoke equally quietly, \"Email me and I may be able to return the favour. Thank you.\" I later sent her a signed sketch, not exactly the same, but it made me feel better about accepting her kindness. \n\nThere were several glasses of 'bubbly' before the flight and we enjoyed a luxury start to our vacation. We held hands all through the flight, except when we were eating. \n\nWe did all of the sights in New York, kissed on the top of the Empire State Building and took in a baseball game which we loved, although it still remains a bit of a mystery to me. We took a train to Washington DC and had our pictures taken outside the White House and the Capitol Building. We shed a tear at Arlington cemetery when we saw the lines of graves for those whose lives had been given in conflict. We admired Dorothy's shoes and lots of nice art in the museums before we headed for the airport. \n\nNew Orleans was a contrast, fancy houses and poverty, plantations formerly run by slaves, a steamboat and beignets. But there was every type of music, jazz in Frenchman Street, modern, blues, rock and more jazz on Bourbon Street where we danced, clapped and sang. I was so very happy, it was the two of us and nothing could have been better. \n\nAnother flight took us to Phoenix and we drove to Sedona for a few days relaxation. The scenery was spectacular and we were enchanted by the chapel on the hill. I stood alone looking over the altar at the view beyond through the huge windows and whispered a quiet prayer of thanks for my life and the girl studying something nearby. I spent hours lying on a sun lounger beside my lover watching her and stroking her leg or arm. How did I get to be so lucky? \n\nWe drove north and watched the sunset over the south rim of the Grand Canyon, then got up early to watch the sunrise the next morning. Then we drove to Las Vegas and checked into a large, luxurious hotel on The Strip. The next week was full of shows, gawping at the casinos, having a small (and I mean small) flutter and my favourite, watching the fountains at The Bellagio. \n\nWe were out walking one day when we passed a wedding chapel. Fiona grabbed my arm and stood in front of me. \"Milly, you know that I love you and I know that we said that we'd wait, but we don't need to, we know that we're meant for each other, could we...?\" \n\nI was shocked and felt weak at the knees. My god, we could, it would make me so very happy. I needed time. \"Fiona, I don't think... Oh Fiona, as much as I'd love to, what about Jess? She would be ... I don't know what she would be, but I doubt if happy would feature anywhere in the conversation.\" \n\n\"She wouldn't be happy, but still.\" I could see her thinking, \"We could do it and not tell them.\" \n\n\"I hate lies and we've told enough of them, so I don't want another one and not one like this. I promise you that we will.\" \n\nThat night Fiona tormented me as a punishment, she didn't tie me up, just asked me to pretend that she had done. It was cruel and wonderful at the same time. \n\nFiona phoned Jane and told her about our conversation. When Fiona ended the call she turned to me, \"Jane has just lost a bet with Victoria, looks like I owe her twenty quid.\" \n\n\"They were betting on us getting married?\" \n\n\"Apparently!\" \n\nOur flight home was great. I'd managed to pay for an upgrade so we got some sleep during the flight. I closed my eyes and thought back over the last four weeks. Magical, but most of that was because we were together. As I drifted off I found that I had regrets over the wedding idea. \n\nWe spent another few days with Jess and Victoria; it gave us the chance to swap stories. They were all surprised that we hadn't got married in Vegas, although Jess was relieved and I understood how she felt. \n\nThe two of us had a couple of weeks at home before Fiona had to return to her studies. We spent our time together as much as possible, going for lots of long walks, shopping, lazing around, reading, listening to music and chatting. \n\nWe often sat down to watch TV together, but we rarely lasted long before one or other of us instigated fondling and kissing. We'd learned that sex on the couch or the floor was fine once in a while, the bedroom was far better, more comfortable and the toys were to hand if we wanted them. We wanted them a lot. Teasing was something that we both really enjoyed, whether being teased or doing the teasing, it didn't matter to either of us because it was fun and loving. I felt Fiona's love every day and I hope that she felt mine. \n\nUniversity again \n\nA couple of days before Fiona's first lecture we travelled to London for Jane's graduation, there was no way we were missing that. We arrived the day before and had a few hours to shop. \n\nJess and Victoria were waiting for us at the hall; looking pretty smart and impressive. We clapped loudly as Jane went forward to collect her certificate and had a nice lunch following the photos. There were many laughs and jokes, it was really fun. I was very proud of Jane, just as much as the others. Fiona and I gave her a set of pearls because all girls should have pearls. \n\nWe caught a train that evening and reached home late, but not too tired for a hot chocolate and a long cuddle. \n\nFiona got back to her studies. Most evenings she had something that she needed to do, but it always waited until after dinner during which we could chat and make dopey faces at each other. No matter how late she worked I kept her going with drinks and waited so that we went to bed at the same time. Sex didn't happen every night, but there was usually something, a cuddle at the very least. There were occasional evenings when we had an early night and lots of fun, maybe a little screaming as well. \n\nI kept busy during the week with cleaning, laundry and cooking so that I had everything done before Fiona got home. I was also busy with my sketches; some speculative work, a few private commissions and bigger more thoughtful things for the London market. I was getting a couple of showings a year and they brought in good money. Alex's agent would contact me from time to time looking for a cartoon sketch. I fitted it all in around taking care of Fiona. She was my priority, I was playing housewife and I was in my element. \n\nOccasionally Fiona had to study at weekends, but we tried to have at least one full day where it was just the two of us. We walked sometimes, went to the theatre or a movie, watched bands, but most of the time it was us, two loving idiots. \n\nThe Band \n\nIt had been a miserable day, low grey clouds, persistent rain and a nasty breeze. It seemed to be getting dark far too early and driving was no pleasure so I was glad that I'd made the decision to book a room at a motel near the University for the night. The weather didn't help my nerves either. At the start of her third year, Fiona had decided that she wanted to play more music and had joined a band with some other students. I thought that it was a great idea; she would be spending time with people her own age, doing something that she enjoyed and was good at. Having encouraged her meant that I was now attending the band's first public performance and that meant going to a gig where I may well be the oldest person present. I didn't want to feel uncomfortable and didn't want to raise issues for Fiona. Of course, she said that it would be fine; the truth was that I loved her; I wanted to see her play and support her. \n\nWe grabbed a quick dinner and went to our room where we dallied for a while kissing and hugging my favourite pastimes. She showed me the outfit that she was going to change into at the venue and I gasped, \"Do you have a skirt to go with that belt?\" \n\nThe outfit consisted of a red T-shirt that seemed to be at least a size too small, a skirt that didn't cover very much, nude tights and matching heels. There was a belt, more chain actually. She asked if she should go with the nude or the red panties, both of which were rather large. She explained that given the length of the skirt, big knickers would keep things decent when she was sitting at her keyboard. I laughed. \n\nI chose my tightest jeans, a purple silk blouse that was close-fitting, worn with my highest purple heels. I fastened my hair in a braid and even I thought that I looked good. Fiona thought that I looked stunning. She was biased, but I loved her compliments. \n\nWe arrived early and the other girls were setting up when Fiona introduced me to Livvy the drummer, Lizzie on bass guitar, Laura the band's leader and guitarist and finally Emily on rhythm guitar and vocals. They all greeted me politely and made me welcome. I sat near the stage area and sipped a drink watching as they prepared. \n\nWhen the band disappeared to change a good looking man appeared at the table. Tall, greying temples about my age, smart, but casual. Oh, was this a chat up I wondered? \"Excuse me, but are you, Milly, with Fiona?\" \n\nI was puzzled, \"Yes, Milly Scott.\" \n\n\"Sorry to just march up, but I'm Gerry Marsden, Fiona's senior tutor. She told me about her playing a gig this evening and I wanted to see the girls play. She mentioned that you would be here, nice to meet you.\" \n\nI invited him to sit, he seemed like a nice guy and we chatted easily as the place began to fill up, mainly with students Fiona's age. A few minutes later another man came over to us, also casually dressed wearing similar stylish clothes. Gerry stood and greeted the new arrival with a kiss on the cheek, he turned to me, \"Milly this is my partner, Tom; Tom this is Fiona's fianc\u00e9e, Milly.\" \n\nTom took my hand and smiled, \"Pleased to meet you.\" Gerry went to buy a round of drinks and Tom sat beside me. \n\n\"So, you're Fiona's fianc\u00e9e? Fiona is Gerry's star pupil, but don't tell her, she really impresses him. How did the two of you meet?\" \n\n\"I first met Fiona when she was about eight; she's my close friend's daughter, maybe we're not as close as we once were since I beguiled her daughter. Yes, there's an age difference.\" I smiled as I spoke, Jess and I were or pretty good terms again most of the time. \n\n\"Well that's none of my business, but what's the difference twelve, fifteen years?\" \n\nI laughed, \"How about 26 years? But we're okay with it.\" \n\n\"Whoa, I'd never have thought that, good for you. I'm sure that there's a longer tale to tell, but maybe not tonight.\" \n\n\"Do you get many jokes, Gerry and Tom?\" \n\nHe laughed, \"Lot's of them, most people try and ignore it, unsuccessfully, but you go right for it. I like you, Milly.\" \n\nGerry arrived back with the drinks. \"Milly, can I ask; are you an artist?\" \n\n\"Yes, I am.\" \n\n\"I like your work, we have one of your pieces,\" he turned to Tom, \"The Pier at Ambleside.\" \n\nTom raised an eyebrow, \"Beauty and talent.\" \n\nTom told me that he was a solicitor in Lancaster and that gave me a thought. \n\nThe band appeared at that point and all three of us had a sharp intake of breath. They looked stunning, five good looking girls in short skirts, tight T-shirts and long legs. I checked them all out and decided that it would be hard to rank them in attractiveness, except that my Fiona would get the top spot, but I'm biased. \n\nThe first set lasted about forty minutes, they played several blues classics, some light rock and a couple of modern hits. They were good, Emily on vocals was great and Laura supported her nicely. I was impressed and told them all so as they joined us during the break. \n\nIt was good to be around a group of younger people and I seemed to be a part of the gang, having Gerry and Tom there helped and they were great company. \n\nAt the start of their second set, Laura introduced the girls and explained that their initials had provided their band's name; ELLLF, The Elllfs or Elfs. She then went on to add, \"Normally Fiona doesn't do vocals, but she asked to perform a number for someone special, take it away Fiona.\" \n\nFiona looked over at me and smiled as she started to play and then she sang something that I'd never heard her perform before: \n\nWhoa, chills and fever \n\nWhoa, chills and fever \n\nOh, chills and fever \n\nChills and fever, don't you give to me. \n\nWhen you hold my hand, \n\nTell me that I'm your lovin' gal \n\nKiss me and squeeze me tight, \n\nTell me, babe, you want to love all night. \n\nI get, whoa, chills and fever \n\nWhoa, chills and fever \n\nOh, chills and fever, \n\nChills and fever don't you give to me. \n\nWhen it's late at night \n\nAnd, and when you hold me tight \n\nTell me that you love me so \n\nThat you'll never ever ever let me go. \n\nI get, whoa, chills and fever \n\nWhoa, chills and fever \n\nOh, chills and fever, \n\nChills and fever don't you give to me. \n\nYou call me late at night \n\nAnd I'll come running, rain or shine. \n\nTell you that I love you so \n\nAnd I'll never ever ever let you go. \n\nI get, whoa, chills and fever \n\nWhoa, chills and fever \n\nOh, chills and fever, \n\nChills and fever don't you give to me. \n\nOh, whoa, oh, yes, chills and fever, baby, \n\nUm hum... \n\n(By Freddie Houston) \n\nShe never took her eyes off of me during the whole number and it was fairly obvious who it was directed at. I was in tears by halfway through, but very proud of her and very flattered. Gerry, Tom and several others sitting nearby applauded me as well. \n\nTom leaned over and whispered in my ear, \"She's got it bad for you and I see that same look on your face. I think that you're both very lucky girls.\" I smiled at him and I was now a little embarrassed. \n\nWhen they finished playing, to rapturous applause, the band all came over for a drink and they chatted away. Fiona grabbed me around the waist from behind and whispered, \"Did you like it?\" \n\nI turned to face her with a huge grin, the resolve that I'd try to be discreet shot out of the door as I grabbed her around the neck and kissed her long and hard. We stopped when there were several calls of 'get a room.' \n\nI'd taken a couple of photos whilst they were playing and asked them to pose as a group. Tom grabbed my phone and made me pose with them as well. I forwarded the pictures to Jane and Jess. \n\nWe bailed out back to the motel and I was all over Fiona. I was bursting with pride, shoved her back on the bed, then climbed on top of her. After some very good kissing I slid down and kissed her neck, she was sweaty and tasted salty, but I didn't care, I was in lust. I slid further down and reached under her skirt and pulled the nude 'granny pants' down. Then I licked her thighs and Fiona tried to protest that she was too sweaty. \"Shut up, I don't care and in a few minutes neither will you.\" \n\nI worked my way up and kissed her lips through her tights and then licked her clit. I took the nylon between my teeth and ripped a hole, I had to use my fingers to rip it wider and then I shoved my tongue inside her and licked her bare clit until she came with a scream. \n\nWe lay together kissing softly to recover and then went for a shower. Two adults using a motel shower is very tricky, but it's possible to wash each other. Actual sex isn't really possible, although we tried! \n\nFiona left after breakfast to collect her keyboards and then go to her lectures. It was then that I noticed a reply from Jane - 'Six foxy ladies!' I laughed and then a message arrived from Jess - 'Not sure if I should be proud or shocked at those outfits. Yours was great too.' \n\nNew job \n\nAfter Fiona left I took my time gathering our things together and called Tom's number from the card he'd given me the evening before. A flustered sounding man answered the phone and eventually put me through to Tom. \n\n\"Hi Milly, it's a bit chaotic around here today. What can I do for you?\" \n\n\"I need to make a new will, nothing complex, but it needs to be done.\" \n\n\"I need to see if I can access our diary. Our office manager is away for a few weeks and our other secretary has had to go into hospital, so there's chaos here. We solicitors have not got a clue how to run the office.\" \n\n\"Maybe I can help out; I'm a bit rusty and not really dressed for the office. I used to be a PA, over ten years ago.\" \n\nI sent Fiona a message at lunchtime to tell her what I was doing. She called me, stunned. I was a little stunned myself when I realised just how rusty I was. One thing came back to me quickly, keep them supplied with fresh, decent coffee and almost everything else will be tolerated. \n\nBy the end of the day, I'd managed to work out who was who, how to access emails and the diary. In truth, I'd enjoyed it. It seemed like real, honest work, not selling drawings. I drove home in a good mood but hadn't done anything about dinner. \n\nFiona arrived five minutes after me and I was busy apologising about dinner when she put her arms around me and gave me a huge kiss. \"Milly, having dinner on the table is wonderful, but you spoil me. So what we're going to do is go and change, then have dinner at the pub.\" \n\n\"Okay, but do we need to change?\" \n\n\"Change was not what I actually meant, but it does involve activity in the bedroom without clothes, or at least most of them.\" She took my hand and led me to the bedroom. We faced each other and undressed; by the time I pulled my panties down they were soaking. ",
        "I took her in my arms and we kissed. Then I decided that this would never do, I was ready for her so I pushed her back onto the bed, threw myself on top of her and went for her with my mouth, and she turned me so that we were in a sixty-nine position. Neither of us lasted long and when we'd recovered a little we lay side by side grinning at each other. \n\nFiona stroked my cheek and whispered, \"I love when you have dinner ready for me, but that was a great alternative. Now let's go to the pub so that we can get back here. I have plans for your body you lovely woman.\" \n\nI giggled; she made me feel so good. Two hours ago I was running an office and here I was behaving like a lovesick, randy school girl. \n\nWe ate quickly to get back to bed where she used the strap on and fucked me, it was hard, forceful and she made me scream for more. After a rest to gather my strength I returned the favour. It lacked the love and tenderness that we enjoyed most of the time, this was simply sex and it was very good. \n\nThe next morning was more of a scamper to get ready, I needed a dress suitable for the office and the two of us fought for some room, well we didn't fight we just kept bumping into each other and touching. Hopeless! \n\nWe decided to share a car which meant that we had extra time together. Fiona drove and I spent most of the journey studying her profile whilst she pulled faces and stuck her tongue out repeatedly. She dropped me at the office and promised to collect me later. \n\nThat day was a little easier; the partners showed me where things were and explained exactly what else I could do to help. I felt that I was getting into the swing of things by the time Fiona collected me that evening. We chatted about our day as we drove home. I really liked this. \n\nAs soon as she got the door open Fiona grabbed me and dragged me into the lounge. \"You defrosted chilli for dinner, didn't you?\" I nodded. \"Good, it'll keep 'til later. I want you right here.\" She threw me onto the couch and pulled down my underwear. She held onto my wrists as she pushed her head up my skirt until she found the junction of my legs. Then she proceeded to kiss and lick and every inch of my flesh. By the time she inserted her tongue into me, I was climbing the walls. \n\nI pulled her to me and we kissed. I could taste myself and that aroused me again. \"Lie back on the coffee table for me.\" I kneeled between her legs, pulled off her trousers and lifted her legs over my shoulders. I kissed and licked at her and then I surprised her. Whilst I had been thrashing about on the sofa I'd found my vibrator, the one called 'Fi,' under a cushion. It slightly embarrassed me to think that we'd left it there a few days ago, but right now it was about to be put to use. I slid it inside her and she jumped. I thrust it back and forth and then pushed it hard against her clit. I knew what that would do to her and she went rigid trapping my head between her legs, screaming as she came. \n\nThat set the pattern for the rest of the week. We travelled together each day and I managed to get some control of the office. We had simple food or went to the pub each evening and spent the rest of the time playing with each other. \n\nOn Saturday morning Fiona went out on her bike and I did some housework and laundry, things that had been neglected during the week. She'd neglected some of her studies as well that week so she spent the afternoon catching up. \n\nShe came to find me just after 6 pm. I was in the kitchen and she laughed when she reached me. I was wearing stockings, heels and an apron. I managed to turn the pasta sauce off before she threw me onto the worktop. Once she was satisfied with her work there, she carried me towards the bedroom, but we stumbled near the top of the stairs and spent about half an hour pleasing each other on the landing. \n\nIt was late that night when we finally ate food. Then we went right back to bed and cuddled. I heard Fiona gently snoring and lay watching her. I felt great, very much mesmerised by this beautiful young girl who'd turned me into a sex maniac. \n\nI spent another four weeks working for Tom. By the time it ended, I was back into a routine that I'd not been familiar with for a long time, but it felt good to use those skills and I'm certain that things in their office were running much more efficiently. As much as I'd enjoyed it I missed my days where I pleased myself. Don't get this wrong, I didn't sit around idle for very long. If I was sitting it was because I was reading or sketching. Most of all I'd missed being able to set off for a walk, some days a short walk, but occasionally I was away for several hours. It kept me fit, gave me time to think and to find new subjects for my art. \n\nI had an exhibition coming up soon and needed some new, larger pieces. I hadn't done a great deal of work that involved people unless they were the actual subject, but I had an idea for a series of kids doing things, like boating, fishing and running on the shore. I enjoyed doing them and once again felt that perhaps I'd missed out on something, but then I'd spent time with Jane and Fiona. They'd been my kids. \n\nFiona's course seemed to be going well. I could see the excitement and passion as she talked about the stuff that she'd learned. The technical details floated straight over my head, but I watched her mouth as she spoke and after a while, I'd to get that urge to kiss her, so I usually did. \n\nFiona arrived home slightly earlier than usual and found me in the kitchen, she grabbed me around the waist and nuzzled into my neck, \"Hello you beautiful woman, you've no idea what dirty thoughts I've been having all the way home.\" \n\n\"I bet that I could guess most of them and maybe we can try some of them later.\" \n\nShe pushed her hand under my skirt and discovered that I was wearing French knickers so there was easy access and she made use of it. Within seconds her fingers were inside me and I was writhing in her grasp. How could she do this every time? She only had to touch me and I was so bloody horny. She bent me forward over the worktop and used more force and went faster, my knees gave as I came. She turned me, held me and then kissed me. Oh, what heaven. \n\n\"Thank you, you're a sex maniac and I hope that you don't change.\" She brought her fingers up to her mouth and sucked them and then put one of them between my lips and I sucked on it as well. How, how... I wanted to say dirty, but changed my mind, how wonderful. \n\nFiona stepped back and held up a paper bag as she softly said, \"I bought us a present.\" \n\nI smiled and reached for the bag, but she pulled it back, slapped my hand and said, \"Later, sexy.\" \n\nI was lying naked on the bed, still not something I was fully comfortable with, but when Fiona asks I found it hard to resist her. She too was naked and I drank in the sight of her, I knew that I was well and truly aroused and ready for whatever treat was in store for me. She turned the paper bag upside down and a long length of red silk ribbon fell onto my belly. I looked at it and then at her. \n\nShe smiled at me and said, \"Sshhhh,\" She took my hands and tied my wrists together behind my back with the ribbon underneath me, effectively trapping me. Actually, I could have got out of that easily, but it was more symbolic than actual restraint. She started to stroke me gently, softly and it went on for such a long time. I closed my eyes, absorbed the feelings and emptied my mind. Suddenly I felt her kissing me between my legs and I came almost at her first touch. Wonderful! \n\nWe used those ribbons a lot; they were wide enough to be comfortable, the feel of the silk fabric and the colour made them erotic. They were never used for serious restraint, but once she wrapped them around my torso binding my breasts, wow, I loved that. On one occasion I bound her torso with her arms trapped by her sides. It left her comfortable and pretty helpless to resist me, not that she ever tried very hard, she actually loved being like that until I'd teased her for so long that she screamed and threatened me. Afterwards, she would ask me to do it again before too much time had passed. \n\nAfter their first couple of gigs the band, The Elfs, got regular bookings on a Friday and Saturday. It was rare that they didn't play one night a week. I didn't attend a couple of them until I realised that I wanted to be there, I wanted to watch and listen. I also enjoyed the banter of the girls together and the crowd who attended. Eventually, I was recognised as being a regular and felt part of things. Of course, watching Fiona perform was always a pleasure, but it was a shame that her legs were almost hidden under her keyboard. Maybe I had a leg fetish? Fiona's legs? I plead guilty. \n\nJess visits \n\nVictoria had to go away for a week, some big deal for work, and Jess asked if she could come and visit. She'd called me that morning and asked if she could come up a day early, that day, of course, no problem. \n\nStupidly, I never thought to tell Fiona and she walked into the cottage as Jess and I were sipping wine in the lounge. \"Good evening you sex-crazed pervert, I bet that you've been hot waiting for me so that I can do pretty diabolic things to your very sexy... MUM?\" \n\n\"Very sexy what, Fiona?\" \n\n\"What the fuck are you doing here?\" She was ashen and then red with embarrassment. \n\n\"I decided to come a day early and clearly the 'sex-crazed pervert' here seems to have forgotten to warn you, now I'm as embarrassed as I've ever been.\" All three of us had red faces and stared at the floor. \n\n\"Sorry Mum, that was a touch awkward and not my usual greeting either.\" Fiona gave her mum a hug and then came to sit beside me and kissed my cheek. The moment passed and we walked to the pub for dinner. \n\nJess and I went for a walk the following morning and some of the time we held hands as we chatted. Eventually, she managed to find the courage to ask the question that had been trying hard to escape from her lips all morning, \"Tell me, how are you two really?\" \n\n\"I'm head over heels daft about Fiona, I love her. I love being with her and if she doesn't feel the same way about me she should be on the stage. I enjoy playing housewife to her, I want to give her the room to study and have fun as well.\" \n\n\"Was her greeting last night typical?\" \n\n\"No, not typical, once in a while. Occasionally I try to surprise her too. If you're asking about our sex lives then I'll tell you this much, your daughter has an appetite like you wouldn't believe and, somehow, I manage to match her. Terrific seems inadequate.\" \n\nShe grinned as she said softly, \"A bit like her parents then.\" \n\n\"You and Victoria?\" \n\n\"What was the phrase? Sex-crazed perverts.\" \n\n\"Wow.\" There wasn't anything else to say. \n\nI was sorting out dinner and Jess was staring out into the garden. I finished what I was doing and went to join her; I noticed her fingers travelling towards the sketch pad on the coffee table. \"Jess, don't do...\" \n\nToo late, she'd lifted the cover and seen the drawing. She pulled her hand back quickly as if she had been stung, she looked at me. \n\n\"Don't Jess.\" But it was like a magnetic attraction, she lifted the cover again. \n\nShe looked and I stared at the floor. \"Milly, bloody hell Milly, it's Fiona and I don't think that I ever wanted to see my daughter like that, but somehow that's so beautiful, lewd and ... I think that I see what you see.\" \n\nFiona had been lying back on the bed with her head hanging off of the foot of it looking at me, she was wearing stockings and had a leg up still wearing a high heel, there was bit of a sheet covering part of her torso and although it didn't show her sex it did show her breasts. Jess was right it was almost decent but somehow wonderfully erotic. \n\n\"It wasn't posed, but I snapped a photo on my phone and she knew that I was doing it. I wanted to draw it and it's nearly finished. It's mine and no one was ever meant to see it except the two of us.\" \n\nJess nodded and looked again. \"Jess, I've always felt that I betrayed you, but I fell madly in love with her. I might have survived and managed to suppress it, but she felt the same way about me and I was screwed. She has to be the most beautiful, sexiest, caring person that I've ever met and she fancies little old me.\" \n\n\"You're right, for a while I hated you and then forgave you and then ... you know. But I think that you're too hard on yourself. Milly, you've got to be one of the nicest people and you're simply gorgeous. I can't believe that you're as old as me. It's taken me two years to accept that you two make a wonderful couple.\" \n\nWe hugged right there, I loved Jess and knew that things should be okay. \n\nTwenty-one \n\nFiona's 21<sup>st</sup> birthday was fast approaching and I was stumped for what to get her. It had to be something special to mark this event, but what? \n\nI needed to visit the supermarket and set off along the lanes which were still quiet at this time of the year, another month and that would change as the tourists arrived in numbers. A car coming in the opposite direction was too far over and I narrowly missed being hit. 'Damn, roads can be dangerous places' I thought. \n\nOn the way back home something about that was nagging at me and I was unloading the bags when it hit me. A driving course! Jenny had arranged one for me and it made a huge difference to my confidence. I put all the groceries away, poured a glass of wine and opened my laptop. An hour later I'd identified something very special. A day's course that involved: skid instruction, race and rally car driving and finally a road drive with an instructor to correct bad habits and identify if aspects needed work. It seemed like a good plan, it would be fun and help Fiona to be safer on the roads. I decided to let it stew whilst I prepared dinner. \n\nI was waiting for something to come out of the oven when my phone rang. Jane, she was looking for ideas for Fiona's birthday and I was about to tell her my plan but paused before admitting that I was stumped as well. \n\nThe following day I spoke to Jess, then made a booking at Silverstone for Fiona and Jane. They would have more fun together, there would be competition between them and it would be good for them both. Just as I was about to make the payment I went back and added a couple of laps in a supercar for both of them, and me. \n\nTheir birthdays were a month apart so I had to have a cover story for not getting Jane anything other than a new bag. \n\nFiona woke on her birthday and I brought her breakfast in bed, a card and a new necklace that she'd been eyeing up. She knew that I was up to something and gave me that look of suspicion. \"I do have something else, but you have to wait until the weekend. We leave on Friday afternoon. I'll collect you as soon as you finish at the Uni and you can leave your car there. Then we're off to see Jess and Victoria. Jane will be there as well and the next morning you'll have your birthday gift.\" \n\n\"Okay, but I'm puzzled. Is it a party?\" \n\n\"I guess that they'll have something for us, but it won't be a big deal and we need to be in bed early, we have an early start on Saturday.\" \n\n\"Where are we going?\" \n\n\"No need for you to worry your gorgeous brain with that until then. Oh, one more thing, you're sharing your present with Jane.\" \n\n\"What? I'm confused.\" \n\n\"Stop worrying and go play with apps and gobbledygook language. I'll be waiting for you with wine and possibly something else wrapped in red ribbons.\" I gave her my filthy look which she knew very well and she grinned back at me. \n\nI took a bottle of chilled champagne from the fridge and placed it with two glasses. Fiona burst through the door and took one look at me before laughing. I'd wound our red ribbons around me from neck to knees. It looked a bit like a dress, but one tug at the bow would soon reveal her gift. We managed two glasses each before she could stand it no longer and pulled the ribbon. \n\nI took her hand as we smooched and headed for our bedroom. This evening I was in charge and I made her lie down. I lay beside her and reminded her that I loved her and then I started stroking her until she begged for more. I kissed and licked every inch of her before, yet again the greedy girl wanted something more. I got the strap on and she welcomed me. It was fast, hard and there was a lot of sweat and swearing before the two of us were shattered. I had just enough energy to turn towards her. Her hair was matted, her face covered in sweat, but beneath all of that was a smile of satisfaction and a gleam in her eyes. She managed to say, \"I love you, thank you,\" before she closed her eyes and starting making purring noises. \n\nI awoke because I was aware of her watching me. Two hours had passed; she smiled and softly said, \"You look tousled, sweaty and very, very beautiful. I need something else for my birthday though.\" \n\n\"I'm not sure that I have anything else to give you right now. Maybe a shower would help.\" \n\n\"That's exactly what I wanted.\" \n\n'Could I find the energy?' I asked as I struggled to untangle myself from the sheets? \n\nForty minutes later I had my answer. I'd managed to come again a couple of times in the shower and make Fiona demand that I stop, she'd had enough. Actually, an hour later in bed, she found that she may have kept something in reserve. \n\nAll the way south she tried hard to wheedle the secret of her present out of me and I laughed at her attempts to threaten, bribe or blackmail me. We ended up as we often did singing golden oldies. As I suspected a 21<sup>st</sup> birthday banner and balloons awaited us. Jess had made a lasagne and the five of us ate together chatting. I asked them to limit their wine consumption to a couple of glasses each and that intrigued them. It was Victoria who laughed loudest at their stupid guesses, but then, she was in the know. \n\nAt 10.30 pm I told them that it was time for bed. \"We need to leave here by 6.30 at the latest and the dress code is comfortable; trousers, trainers and a jacket.\" \n\nJess had taken the day off from the salon and the five of us set off the next morning after coffee. Victoria drove using her car which held the five of us nicely. By the time that we turned off of the M1 motorway, Jane had worked out that we were heading for the Silverstone racing circuit, the home of British motorsport, but they still had no idea what they would be doing. \n\nWe arrived in time to get more coffee and some bacon rolls before I was able to tell them what they were going to be doing. Jane looked stunned, \"Wow that is something very special, great for a 21<sup>st</sup> birthday, but why me as well?\" \n\nI smiled at them, \"Simple, I love you both. The two of share lots of things, so today is about you having fun, the chance to compete with each other and I think that you'll enjoy it more because you're both doing it. But it's also about learning new skills; skills that will make you better drivers and keep you safer. Go and enjoy.\" \n\nThe three of us, Jess, Victoria and I, linked arms and walked over to watch them on the skid pan, but it wasn't so much fun for us and we decided to go for more coffee. We did watch them on the race circuit and in the rally cars. The looks on their faces when they finished their stints were great; they were exhilarated and had to check to see who'd been the fastest. We had a long lunch and watched the track activities, including the young kids in the go-karts, whilst Jane and Fiona were doing their road drives. \n\nThey thought that we were done for the day until one of the instructors came over to us. \"Okay, I have an Aston Martin, a Ferrari and a Lamborghini. Who wants what?\" \n\n\"I organised a supercar drive as well.\" \n\nFiona danced and Jane smiled. They selected the Italian cars and I asked for the Aston Martin. He then looked at Jess and Victoria and asked, \"What about you ladies?\" ",
        "Jess looked at me. \"What? Why should they have all the fun? After I realised that you two were coming I booked a supercar for you as well.\" It seems that I was the only one who wanted the British car, but then I was imagining that I was Miss Moneypenny as I roared off with my instructor beside me. \n\n\"You've done this before?\" \n\n\"About six years ago and I loved it!\" No time for talking, it was pedal to the metal and five laps later I climbed out feeling exhilarated and got a round of applause. \n\n\"Where did you hide that?\" Asked Jess. \n\n\"Jenny got me a driving course and I also had some fast laps. I wish I hadn't waited so long to do it again.\" \n\nWe headed back home and chatted all the way until Jess spoke, \"Milly, I loved watching the two of them, but driving that car was incredible, even though I was like an old granny. Thank you so much.\" \n\nVictoria had been quiet and then stunned us all, \"I'm not sure, but my next car may be a Ferrari, even though it's impractical for going to the shops.\" We laughed, was she serious? \n\n\"Actually I think that was a great gift and a great idea, fun and something serious. Well done Milly.\" \n\nFiona squeezed my arm, \"Thank you, it was great fun and even better because we were all there and I got to share it with Jane.\" \n\nJane squeezed my other arm. \"Thanks, Milly. Fiona's right, it was fun and a generous gift for all of us.\" \n\nI smiled before adding, \"Just one more thing, what areas did they identify for you to improve on? I'm going to pay for a couple of advanced driving lessons for each of you, to cover those points. I love you both and I want you to be safe. It's not a gift for you, this one's for Jess, Victoria and I, because we care for you.\" \n\n\"That's a great idea Milly and a great gift for Jess and me, thank you.\" Victoria looked pleased as she concentrated on the road, imagining herself at the wheel of a Ferrari, no doubt. \n\nIt had been a long day. We ordered a Chinese takeaway and sat whilst Fiona lied about how fast she was on the race track. I pulled on the oversize T-shirt that I wore when not at home and climbed into bed. Fiona was in the bathroom when I heard a knock at the door. I called 'come in' and Jane poked her head in. I waved her in and she came and sat on the bed in her nightshirt. \n\n\"Thank you, Milly. That was a fun day. I loved it and it will help improve my driving I'm sure. It was fun to share it with Fiona and have all of us there together.\" She leaned over to hug me just as Fiona opened the bathroom door. \n\n\"Well, what do we have here? Is my sister flirting with my fianc\u00e9e or is my fianc\u00e9e having second thoughts about which sister she wants?\" \n\nJane kept hold of me. \"You're a selfish sod, at least let me get a hug.\" \n\nFiona sat beside us and we chatted for a while. Jane was laughing about things that had happened in the past and asked, \"Remember when we used to sneak into your bed, Milly? It drove Jess crazy.\" \n\n\"I remember it very well. I cherished those times and just thinking back to them gives me a good feeling. If you promise to behave you could cuddle in just now.\" \n\n\"Really?\" \n\nFiona looked over at her sister, \"Just keep your hands to yourself. I don't mind sharing my birthday, but Milly's mine.\" \n\nWe lay down and held each other. Of course, Jane couldn't resist tickling me and Fiona moved so that she was between us and said, \"I told you to behave.\" I snorted with laughter. \n\nOur home \n\nI'd been upstairs changing the bed linen when I heard the postman. By the time I had everything tidied up in the bedrooms, it was thirty minutes later that I lifted the half dozen items of mail from the doormat. A bank statement, three mail-order catalogues that I didn't want, and two letters addressed to Fiona. Unusual was my only thought, she used to get an envelope every couple of weeks from Victoria containing mail that had been delivered to her home. \n\nI was in the kitchen when Fiona arrived home from University. I heard her drop her bags as she shouted \"Hello,\" before appearing behind me and kissing the back of my neck. As ever my knees quivered, damn, every time she did that! \n\nI turned to kiss her properly and when I'd done so I stepped back. \"Dinner will be ready in half an hour and maybe I've got a special dessert for later.\" I flicked up the back of my skirt and looked back over my shoulder with a lewd smile. \n\nShe smiled at me, one of those dirty ones. \"There are a couple of envelopes for you over there.\" \n\nShe picked them up and I saw her bite her lower lip. 'Something's coming very soon' I thought. She poured two glasses of wine and sat at the table. I sat down as well thinking it better to prepare for whatever it was. \n\n\"Damn, I forgot to tell you about this, but now I'm busted. Last week I had to show some ID and I produced my driving licence, the person asked me to confirm that it showed my home address. I said no. Then I sent it away to be changed and also went online to the bank. I completely forgot about it. I'd meant to tell you.\" \n\nI raised an eyebrow as she slid the new driving licence and bank statement over to me. She looked sheepish. I looked down, sure enough, driving licence home address - Rose Cottage, bank statement - Rose Cottage. I kept my head down to try and keep a straight face, then I looked up and raised my eyebrow again. She was still biting her lip. \n\n\"Sorry, I should have told you. Are you annoyed?\" \n\n\"So, you told the bank and the DVLA that this is your home address?\" She nodded, \"And you think that I might be annoyed?\" She nodded again. \n\n\"You've made an official declaration that this house, Rose Cottage, is your home. I'm very happy, very happy indeed. After dinner, I'm going to show you just how happy I am and I guarantee that you will sleep well tonight.\" \n\n\"Really?\" \n\n\"Yes. Thank you for that, it officially makes this our home. Our home.\" I leaned over and kissed her and got up to check the food. \"Remember when I did that temping job for Tom? I'd phoned him because I needed his services.\" \n\n\"Okay.\" She looked puzzled. \n\n\"I wanted to change my will. I'd left everything to Jenny, but obviously, that had to be changed. I've no relatives; except my parents who've shunned me. I needed to make provision in case something happens.\" \n\nShe looked puzzled. Incredible, so very smart and yet at times dumb as anything. \"I changed it so that everything that I have, the house, money, investments, royalties. It all goes to you.\" \n\nFor a moment she smiled and then her face fell. \"Please don't let anything happen to you. You're the thing that I want, just you.\" \n\nI laughed, \"And a degree and a fancy job.\" \n\nShe laughed as well. \"Yes, but that would mean nothing without you, the only woman that I've dreamt of and fantasised about.\" \n\nWe held each other and kissed until the timer went off. Then we ignored it for another few minutes. \n\nLater I heard Fiona on the phone. \"Mum, I'm not coming home this summer. I'm at home now. My home is here with Milly. I'm going to work with Karen for four weeks, I'd like to come and stay with you if that's okay?\" \n\nI smiled, this is her home! I was delighted, but perhaps this wasn't how she should be doing this. I spoke to her about it later. \"Just because this is 'our home,' where you and I live, you still have a home. A home with your parents, where you grew up. That'll always be your home as well. Don't piss them off. They're good people, they love you and made you what, who, you are. They did a pretty good job.\" \n\nI made a call later that evening as well. \"Jess, it's Milly.\" We exchanged pleasantries before I got around to the real reason for my call. \n\n\"I heard Fiona's side of that conversation earlier. Whilst I'm delighted that she considers this to be her home, our home. She was a little blunt about it and I spent almost an hour explaining that your home will always be home to her no matter where she lives. She's being a stubborn little sod right now, but I'll sort that out later.\" \n\nWe spoke about what Fiona had said and how upset Jess had been. We moved onto other things before she asked, \"How are the two of you?\" \n\n\"Great, we're great. Fiona's been working hard, she's been playing with her band and I go to most of her gigs. She's out on her bike at least once a week. She drives me nuts in the kitchen, she's so messy. I've been busy with art and playing house. I love her Jess. I love her like you can't believe. She's good for me.\" \n\nWe talked about Jane, but I knew most of her news already as I'd spoken to her earlier in the week. \"Are you trying to steal both my daughters?\" Jess laughed as she asked. \n\n\"I told you a long time ago that I'd love it if they were mine, both of them. I love Jane and we talk about all sorts of things. Some things she finds easier to talk to me about. But they're your daughters and I thank you for letting me into their lives.\" \n\nI stayed at home for most of the four weeks that Fiona was away. But I drove down to spend a few days with Jess and Victoria before Fiona and I flew off to the Italian Lakes for a couple of weeks. \n\nWe collected a small hire car at the airport and drove up along the shore of one of the lakes where we'd rented a small villa. The weather was great and it enabled us to spend lots of time on or around the lake. Rowing was fun, but we fooled around so much that we never got very far. We went to a cookery lesson to learn how to make pasta. Now, Fiona can cook, but there's no way that she will ever be making pasta in any kitchen that I have a say over. We spent a day in the city and that evening had tickets for an opera performed at an open-air theatre. Fiona serenaded me all the way back to our villa. I was pleased that it wasn't too far because she can't sing opera and made up most of the words as well. But it did make me laugh and was a lovely end to a magical day. \n\nAfter some very gentle sex that night, I lay in bed, watching the moon through the bedroom window. It gave me the chance to think. Was it normal for a very smart twenty-one-year-old to enjoy doing the things that we did? Gentle things, that people did when they were older, my age. She seemed happy and I certainly was. But I'd have been happy doing anything with her. \n\nThe following day we spoke about it whilst lying in the sun with cold beers. \"I like being with you and doing things together. Most people my age don't fall in love with a woman twice their age. I guess that I'm not 'normal' then. What I do know is that I wouldn't trade being with you for anything. I love you, Milly, I love you very much.\" \n\n\"Thank you. You have to tell me if you want to do other things, won't you?\" \n\n\"Yes of course. Now, can I get my 'old woman' another beer?\" I threw a cushion at her. It missed and she just laughed at me as she walked away. 'And I love you too,' I thought as I watched her bum wiggle. \n\nReflection \n\nI woke this morning with an empty bed and realised that I didn't like it. Fiona was attending an event at the University and as it had been a late finish, wisely, decided to stay there. I looked across at the pillow on which she usually slept and felt sad. I rolled back and looked at the ceiling thinking, I have a younger lover, by 26 years, who was beautiful, smart, funny and very caring. God, how much I loved her, but it scared me a lot, occasionally that fear that I kept buried would rise up, would she, at some point meet someone her own age or simply realise that our age difference did matter. I knew that it would break my heart, but I was so grateful that I'd experienced this with her. Life was fun, I felt far younger, but there were many challenges for us. Some regarded me as a cradle snatcher and others as a basic pervert; some looked at Fiona and thought that she must be mad or a gold digger. We'd discussed this many times and so, didn't flaunt our relationship, it was, sadly, easier that way, but we would forget from time to time and that drew dirty looks and comments. \n\nThere were people who supported us, Alan the Vicar, Ben the gallery owner, most of the villagers and Fiona's family. Most of all Fiona's elder sister, Jane, she was vociferous in our defence and had been, was, a wonderful person. \n\nSex was a very special part of our lives and Fiona took the lead role most of the time, but I didn't need much encouragement. I was almost insatiable and Fiona took great delight in tormenting me for very long periods. I'd been lucky, Alex had been a wonderful lover, Jane had been a very caring woman who delighted in pleasing me, but Fiona was astonishing, she was open to trying anything and everything whilst being caring and considerate. She made me more sexually satisfied than anyone else had come close to. \n\nAs I lay there I wondered what would happen when she graduated, where would she go to work? What would happen to us? I hoped that she would go wherever she needed to go to achieve her aims and ambitions and I would go wherever it took us if she still wanted me. Please God, let her still want me! \n\nUniversity life \n\nFiona was into her fourth year, her final year at university. It was challenging, she had to work hard to complete the assignments, but she seemed to thrive on it and was excited. The exercise on her bike seemed to refresh her and playing music allowed her to relax. \n\nI was looking after her to make sure that she had no distractions, except me of course. When work was done for the day we indulged ourselves with kissing, cuddling and gentle lovemaking. Every now and again it would be far from gentle; it would be wild, abandoned and lewd. I often puzzled about what she'd done to make me such a sexual animal; I had no answer and just felt grateful for it. \n\nWhen Fiona wasn't around I was drawing, going for walks and occasionally doing some temping as a secretary. I was happy and content. \n\nHer band was back playing gigs again and some weeks they had two. I tried hard to attend them all and I got to know the partners of the other band members. It meant that I had company and didn't feel like an imposter. When they played I watched them enjoying themselves, but on occasions, I became totally mesmerised watching Fiona. \n\nOne night the singer announced that Fiona was going to sing a new number. Fiona had only sung once before and I guessed that this was going to be directed at me. She played and sang 'Something in the way she moves' a Beatles classic, written by George Harrison. She never took her eyes off of me throughout. I was touched, it was lovely. They didn't perform it every time they played, but often enough to raise a tear. \n\nTricky \n\nI poured two glasses of wine and took them through to the sunroom where Fiona was standing near to the window with the last of the sunlight backlighting her and I felt my knees tremble as I saw her. She turned and smiled at me, took the wine glass, kissed my cheek then turned and pointed to my sketch pad, \"Who's this?\" \n\nA couple of days ago I'd seen a wire-haired fox terrier tied up outside a shop in Ambleside. He was sitting watching the pedestrians pass by until he saw me, our eyes met and he grinned at me. I doubt if he actually grinned, but that's what I imagined I saw and it reminded me of Fiona's cheeky, mischievous grin. I tried sketching him; I'd struggled at first and then tried to get the face right on its own. For some reason, I tried various poses and had wasted much of the afternoon. \"That's my friend 'Tricky,' I saw him a couple of days ago and have tried hard to capture his expression which I found difficult, hence - Tricky.\" \n\n\"From what I see here, I have competition for your heart, are you two-timing me?\" \n\nI was about to protest firmly when I realised that she was poking fun at me, again. \"Well maybe I have thought about it; he's good looking, nice body, good hair, cheeky grin, won't refuse anything I feed him, won't want to borrow money, no laundry to do and he would be devoted, I'll have to see where it goes.\" \n\nShe smiled back at me, \"I eat everything that you give me, never borrow money, I'm devoted, will do my own laundry from now on and I think I'm better looking. Now, perhaps I need to take you to bed and show you some of my other qualities.\" \n\nSuddenly I knew what I wanted and the bedroom was far too far away. I reached down, pulled my dress over my head, shrugged off my bra and panties and fell back on one of the chairs with my legs wide open. I was no longer completely averse to this type of sexual behaviour, it was still a challenge and it didn't happen often, but right now I wanted her! \n\n\"Oh my, what do we have here? Slutty behaviour like that usually means that you've been thinking about this for a while.\" She grinned, X rated again. \n\nThe sex that followed was primal, urgent and so bloody good. Thirty minutes later we lay entangled in each other, sweaty and satisfied. \"I could never leave you. I've loved you for so long, but I never thought that it would be love like this. Please ...\" I couldn't finish. \n\n\"Don't leave you? Is that what you were going to say? I've thought about this so many times, what do I want? I know what I want; someone who is kind and caring, loving, sexy, funny, smart and who loves me. It would be great if she was also gorgeous. That's all you, what you are, how I think of you. My heart tells me, my head agrees. I've never looked at another woman and thought 'wow.' I've never felt weak at the knees about anyone else. You and me - in love like this. I don't want anyone else, never have.\" \n\nJane \n\nI was cooking when my phone rang and I had to turn down the heat under the pan that I had been using before answering. \"Milly, hi how are you?\" \n\n\"Hi Jane, I'm good. Fiona's not home yet.\" \n\n\"It sounds strange when she calls it that, but I understand.\" \n\n\"Well I'm sure you didn't call to talk about homes or for a catch-up, so what can I do for you?\" \n\n\"I need a break. My love life is hopeless, troubled actually and I need to getaway. I need someone to talk to and I'd prefer it to be you if you wouldn't mind.\" \n\n\"Of course, do want me to come and meet you somewhere?\" \n\n\"No Milly, can I come to you for a few days?\" \n\n\"Anytime, anytime. When were you thinking?\" \n\n\"Can I come tomorrow? I'm a mess, Milly ...\" She was clearly very upset and tears were not far away. \n\n\"You can come anytime. You could come by train and I'll collect you. But whatever you want, anything just let me know.\" \n\n\"Okay. I'll be there tomorrow and I'll text you when I decide how I'm coming. Thanks, Milly you're an angel.\" \n\nTwenty minutes later Fiona arrived home. Over dinner I told her about Jane's call and that she was coming to stay. \"What's wrong?\" \n\n\"You and I share everything right?\" She nodded her head, \"She wants to come and talk and doesn't want to talk to her mum. She wants to talk to me and it sounds serious. She's clearly upset so let's wait and see and if she wants to tell you about it she can. I don't know much and I don't want to betray her, so on this occasion ...\" \n\nFiona looked at me and at first, I thought that she was going to be upset, but she came over, got on her knees next to my chair and took my hand. \"I knew you were a good one, thank you for trying to help my sister. You know how much I love and care for her. Do what you can, please.\" \n\nI was stunned until I thought about it. For Fiona to take that attitude showed just how much she cared for her sister. \n\nLater that evening I got a text from Jane - 'Too upset to drive, coming by train. Can you get me at Lancaster? I'll let you know my ETA.' \n\nThings were bad if she was that upset, but tomorrow she could tell me all about it and we could try to fix things. I loved Jane a great deal, I always had. I'd promised to be there for her and now was the time she needed me. ",
        "Jane walked down the platform, her shoulders looked hunched and she didn't walk with the confident purposeful stride that I was familiar with. She seemed to be burdened with more than just a large bag. Despite not looking at her best she was still a beautiful young woman, with an incredible figure, highlighted by her jeans that must have been stitched in place. \n\nAs she came closer I saw her eyes, dark bags and the whites looked bloodshot. The corners of her mouth drooped even when she saw me and smiled, or at least tried to smile. \"Hi, Milly thanks for coming to meet me.\" \n\nI took her into my arms and kissed her cheek. \"Come on let's get you to Rose Cottage and see if we can cheer you up.\" \n\nJane was hunched up in her seat as I drove home. She made a polite enquiry about her sister and me. Commented on the weather and scenery, but her mind was far away from the Lake District. I tried to distract her by talking about Fiona's band, her studies, my artwork and my forthcoming London showing. \n\nJane dumped her bags and I handed her a glass of wine. She sat in our large chair and pulled her legs up underneath her. I sat at the end of the coffee table facing her. \n\n\"You don't have to talk until you're ready and you can stay here for as long as you want. You know that Fiona loves and cares for you deeply, and she's worried, but I've not told her anything that we've discussed.\" She raised her eyes and nodded at me. \n\n\"You also know that I love you and care for you very much as well. I'll do anything within my power to help you. Take your time and go at your own pace.\" \n\nJane looked at me with affection and started to cry. I went to hold her. \"Thank you. Sometimes I hate my sister.\" \n\n\"Why?\" \n\n\"She got you. I loved you as well.\" She hid her eyes. \n\n\"But you didn't feel the same way about me that Fiona did.\" \n\n\"No, I just loved you for you. I never fantasised about you the way that she did. I never had that connection that I saw between you. I was never jealous of you, how could I be? I was jealous of what the two of you had, have.\" \n\nShe was quiet and I thought it best to let her talk so I remained silent. It was stunning; she was smart, street smart, had a wicked sense of humour, had graduated at the top of her class and was gaining a reputation as a lawyer despite her lack of experience. But here she was sobbing like a little girl. \n\n\"Milly, can we just talk about anything but this today? Let's just chat and enjoy each other's company tonight, then you and I can talk tomorrow.\" \n\n\"Whatever you want.\" Giving her the space she wanted seemed to be sensible, but whatever it was had blown her confidence. \"Come on, let's walk for a while.\" We didn't go far and didn't say much, but I held her hand because she was in need of love and tenderness. \n\nFiona came home much quieter than usual. She walked over to Jane and enveloped her. \"Hi Sis, you okay?\" Then she almost laughed. \n\n\"That has to be the dumbest question I've asked for a while, well for a couple of days anyway. Of course, you're not okay. I'm sorry, but I'm glad you're here and I love you very much.\" \n\nJane was hanging onto her sister like a limpet and her reply was muffled as she snuffled into Fiona's shoulder. \"Thanks, I'm glad to be here.\" \n\nWe walked to the pub and talked about everything, but her problem. Remembering their first few visits to the Lake District made us laugh and Jane seemed to be a little lighter by the time that we got back. Jane excused herself and went to bed. \n\nAfter checking that she'd gone Fiona turned to me. \"She looks like shit. I've never seen her so down. Do you have any idea what's wrong?\" \n\n\"Only what she told me yesterday, love life!\" \n\nFiona headed off to university before Jane came downstairs. She still looked worried. I fed her French toast and coffee. \"Would you like to walk whilst we talk?\" \n\n\"No, maybe go for a walk later. I'd like to sit with you and tell you about it.\" \n\nWe sat on the couch facing each other. Jane rested the side of her head on the back of the seat and had her feet up, but she was bunched up again as if trying to make herself small. When she spoke, most of the time she looked down and when she looked at me it was as if she was trying to hide her eyes. \n\n\"Whatever it is, you can tell me and I'll help. I'm sure that you'll feel a little better when it's out there. Take your time. We have all day and Fiona won't be home until I let her know that it's safe.\" \n\n\"About five months ago I met a girl in a bar. Anna, her name is Anna. She works for the health board as an administrator. She's very beautiful; do you know the actress Harley Green?\" \n\n\"Yes, I think so.\" \n\n\"She's very like her, maybe a bit skinnier, but like her. We got talking and agreed to meet again. We went out for dinner a couple of times, the movies, went for a walk together. She made me laugh, we shared similar interests. She told me that she'd split up from her boyfriend because she was gay and couldn't pretend any longer.\" She stopped. I don't know why she had, but I let her collect herself. \n\n\"It took about two months before we slept together, well had sex, we didn't sleep much.\" I could see the embarrassment on her face. She looked at me directly in the eyes for the first time. \"It was incredible. I'd never felt anything like it. I knew right then that this must be what you and Fiona experience. Fiona's never told me details of what you do, but she's tried to describe how she feels and I never got it. I never understood until that night and I think that must be what she's tried to explain to me.\" \n\n\"It was crazy. I couldn't really go back to our house, but we managed a couple of nights when Jess and Victoria were away overnight. We went back to her house a couple of times. We rented hotel rooms a lot. It was insane and I couldn't think straight. I think that was where the problems were. She always seemed uneasy being at her house and now I think back, something should have told me that there was a problem.\" \n\n\"Then she disappeared. No answer to text messages, phone calls, emails, nothing. I had no idea what was wrong and after about ten days I went to her house and a man answered the door. When I asked for Anna I saw her, she looked at the guy and said, \"That's her, the one who's been stalking me.\" I nearly fainted. I'd no idea what just happened and I walked away, went home and tried to work out what it all meant. I was stunned and upset. I'd really liked her, felt a connection ...\" \n\nI moved over to hold her. \"I guess that's not all of it is it?\" \n\n\"No,\" she sniffled, \"It gets worse.\" That stunned me, how could it get worse? \n\n\"I had no clue what had happened, I was mystified and hurt, very hurt. I tried to work out what I could do; I needed to know what had happened. Jess and Victoria knew that something was wrong, but I couldn't tell them anything except that we'd split up and I was upset.\" That wasn't what was made it worse, but she blew my mind with her next sentence. \n\n\"Then a policewoman came to the office. Anna had made an allegation that I'd been stalking her. One of the partners was in with us and asked to speak to me privately. I told her the story and we went back in to speak to the police. I told them everything. I showed them text messages and emails that we'd exchanged, that was embarrassing. I showed them some photos that we'd taken of the two of us together and told them about the places that we'd been. I told them we'd met my parents once and that a couple of colleagues had seen us out together.\" Jane was shaking now so I held her gently. \n\n\"What did the police say?\" \n\n\"The officer felt that based on what I'd told her that the allegation was false. Anna had denied ever meeting me more than once in a bar. When they, the police, went away the partners were supportive but felt it best if I took a week off until the police had looked into it. I was distraught and thought that my career was over, but they tried to reassure me. They were right I could never have done any work this week. I don't know how to tell Jess and Victoria. I'm so embarrassed. Thanks for listening to me.\" \n\nI wasn't sure what to say or suggest so I told her that I wanted to think about it and that we'd done the hard part. She already looked a little brighter and suggested going for that walk. \n\nFiona arrived home and looked at me with an unspoken question. I shook my head and mouthed \"It'll be okay.\" We spent the evening together chatting and it was clear that Jane's mood was lifting. Fiona wanted details when we were alone in our room. \"She was treated badly and embarrassed. Maybe I'll tell you the rest one day, but for now. She's okay.\" \n\nJane and I were considering her options the next morning when her phone rang. It was her boss. I ducked out to give her some privacy and make a pot of coffee. \n\nIt was quite a long time later that she came and stood at the kitchen door with a look of relief on her face. \"That was my boss. The police were round. They're satisfied that I did nothing wrong and they're considering what action to take against Anna. Apparently, her boyfriend was working away and she wanted to experiment. Then when he came home she made up a story to cover her tracks. That didn't work out so well for her did it? Or me.\" \n\n\"How does your boss feel?\" \n\n\"Relieved, the same as me. They want me to go back as soon as I feel ready.\" \n\n\"Any idea what you want to do now?\" \n\n\"Enjoy a nice day with you, have dinner with my sister, then go home and try to find the courage to tell Mum.\" \n\nWhat do girls do to cheer themselves up in such times of crisis? Shop for clothes, and that's what we did. Jane and I had done this before, many times, and that previous practice came in handy as we spent a small fortune. As I stood at the counter of a lingerie specialist Jane picked up the garment that I'd put on the counter. \"Bloody hell, Milly is that for you or my sister?\" \n\nI smiled at her. \"It's for your sister, but I plan on being the one wearing it.\" \n\n\"I'd pay very good money to see that. You love her a lot don't you?\" \n\n\"Yes, and I'd do anything for her. Unless...\" \n\n\"Unless what?\" \n\n\"Unless you needed me, then I'd have a dilemma. I love you very much as well; I always have, not in the same way, I don't want to drag you into bed every time I see you.\" I laughed at the look on her face. \"Hopefully I'll never have to choose. I'm your friend.\" \n\n\"Would you come home with me? To tell them.\" \n\n\"Is that wise? Telling them about this, knowing that you came to me first.\" \n\n\"I'd feel better about it. I think they'd understand.\" \n\nI went with her. That was what she asked of me. I held her hand as she told them the story and why she felt it easier to talk to me about it. They asked questions. It was uncomfortable for the three of them. When it was over I left them together and went to get ready for bed. \n\nJess came to my room and took me into her arms. \"Thank you, Milly. I wish that she'd felt brave enough to tell us first, but I cannot imagine how she must have worried. I'm not angry with her, I'm not hurt. I said a small prayer of thanks for her having you as well. Thank you, Milly, I love you.\" She kissed my cheek and left me. I'd not spoken. \n\nHalf an hour later Jane sneaked into my bed and held me all night. \n\nWhen I got back home Fiona didn't ask any questions, but I could see that she wanted to know. I grabbed a bottle of wine, two glasses and took Fiona through to the couch. I held her with her head on my lap as I told her all about it, just as Jane had asked me to do. Fiona started crying halfway through and kept going until the very end. \n\nShe turned to look at me. \"Thank you, Milly, thanks for helping her. You love her too don't you?\" \n\n\"Yes, very much.\" She kissed me on the cheek. We were silent for quite some time and then went to bed. I held her just as Jane had held me the night before. I sniggered at one point as a thought flashed through my head - 'Maybe I should marry both of them.' But Fiona was just about as much as I could handle. \n\nLondon again \n\nThere was another gallery showing in London and I'd been working on some new stuff. I had a series of musicians, loosely based on Fiona's band, another series of kids playing, a portrait of Tricky my wire-haired fox terrier and a boudoir sketch based on the one that I'd done of Fiona, but with another face and this one was much raunchier. I was a bit nervous because these works were different from my norm. \n\nI'd tried to invite Jess once before and it hadn't worked out, but this time she was keen to accompany me. We met in London the day before the showing and after an early dinner, we headed to see a musical that evening. My favourite, Les Miserables, which we'd both seen before, but we loved it and I found that we were holding hands throughout most of it. \n\nTwo women together with a selection of shops can only mean one thing. We shopped and although we both had an outfit planned for that evening, somehow we each managed to find something else, gorgeous cocktail dresses and new heels. \n\nAs we alighted from our taxi at the gallery we half expected the paparazzi to be waiting for us. They must have been engaged elsewhere that evening, but the two of us hooked arms as we crossed to the door of the gallery and both felt like a million dollars. Daniel, the gallery owner greeted me like an old friend, which he was in a way. He flattered Jess every which way that he could and had her blushing. She did look great, but perhaps he overdid it a little. The two of us examined the other artist's works and giggled like silly schoolgirls making comments as we sipped our wine. \n\nIt was fun to chat with the invited guests and I was surprised to meet the couple who had purchased a piece that had been auctioned for charity many years ago. They made an offer for my portrait of Tricky the dog because they'd owned a similar dog soon after they met. Jess was astounded at the prices that the works were selling for. I laughed and whispered, \"I don't get all of that you know, just a share.\" \n\nThe boudoir portrait fetched more than any other piece that I'd ever sold. Jess grinned and quietly said, \"It's so very ... sexy. It reminds me of another of your pieces, maybe based on someone that I know?\" \n\n\"Certainly not.\" I tried to sound indignant and failed. She laughed at me. \n\nWe went back to our hotel where I ordered a bottle of bubbly. I enjoyed chatting with Jess until the early hours and suddenly she looked at me with a serious face. \"My daughters are pretty lucky, aren't they? They have two mums and you. You're like their third mother.\" \n\n\"I think I know what you're trying to say, but I don't regard Fiona as my daughter. She's my partner, my lover. Jane, well maybe you have a point. Thank you for sharing them with me. They've both made a huge difference to my life, your whole family has. I've been very lucky.\" \n\nWe parted at the station the following morning with an exchange of kisses. I spent the journey home thinking about Jess's family and my good fortune. Then I found myself eager to get home to my girlfriend, my lover, fianc\u00e9e, my darling Fiona. I'd been away for 48 hours and missed her like crazy. Tonight I'd make up for it. \n\nPlanning \n\nWe were sitting at dinner one evening when Fiona looked at me and smiled, \"Milly, I spoke with Gerry today, for my formal appraisal. I have two small things to hand in and can knock them off in a few hours, maybe this weekend. He's read my research work, made a few amendments and suggested a couple of things that need to be clarified, there's a bit of work to do, but it shouldn't take too long. He confirmed that subject to doing those things I'll graduate with honours.\" \n\nShe smiled pleased with herself, proud. My face was going to need Botox to fill the lines that were caused by my smile, it was so wide. \n\n\"Fiona, I knew it, I always knew it. Well done I'm so proud of you. Actually, it's more than that, but I don't have the words. Well done my darling. Have you phoned Jess and Victoria? They'll be thrilled.\" \n\n\"No, I haven't, not yet. You're more important than them right this minute. You've been by my side on this journey and thanks to you I've almost made it, and there's something else.\" \n\nNow the world may stop turning, fear popped up and I was almost too scared to ask, \"What's that?\" \n\n\"I got an email from Karen Fairfield today. She wants to talk to me about a job working for her. It means another year learning stuff at her company, but with the possibility that in about a year; I could become the company 'trouble-shooter,' the job I've always wanted.\" \n\n\"That's great, wonderful, I'm so proud of you.\" I was grinning, I hadn't thought about where she would need to live yet. \n\n\"Of course; it means that I'd need to go back to our home town.\" My face fell, there it was! I have no idea what else she said, but my stomach hit the floor, I knew it, I'd always dreaded this moment, please, please let her still want me! \n\n\"Milly, sorry are you okay?\" Not really, but I didn't say that out loud I just nodded and she carried on. \"You made me a promise, I still feel the same about you and all of this would mean nothing without you.\" \n\nShe started crying and the tears were flowing freely, \"For god's sake Milly I've waited and waited and I can't stand it any longer, I want to marry you, live with you and be your wife, please!\" \n\n'What did she just say, did I hear her correctly?' I reached out my hand to take hers, my eyes were watering now, \"Are you sure, really sure, this is a big step?\" \n\nShe wiped her face, \"Never been surer of anything. I wanted this degree, a lot, I want that job, but I want you just as much. We've had three years, more, and nothing's changed. Actually, it has changed, I love you more now, I did have doubts, of course, I did, we both did, but they're long gone. I've dreamed of that day.\" \n\nI looked at her. I knew what I wanted and I was certain as well, \"When?\" \n\n\"What? What did you say?\" \n\n\"I said yes. When can we do it?\" \n\n\"Oh fuck, Milly, really?\" \n\n\"Yes, marry you and fuck you. One I can do now the other will have to wait a while.\" \n\nTwo hours later, after a shower, a drink and a chat, we sat in the lounge in robes and Fiona made a call. \n\n\"Jess, it's Milly and me, we're fine and on the speaker. Is Victoria there?\" \n\n\"Yes, I'm here, what's the news?\" \n\nShe told them about her course, the graduation and then she told them about the job. They were excited and delighted for her as they should've been. \n\nIt was Victoria who asked the question, \"That means that you'll be coming back to live here then?\" \n\n\"Yes, but not with you. Milly and I will be buying our own house down there.\" \n\n\"Milly's coming as well, that's good.\" Jess seemed relieved, \"I worried, even though I shouldn't have.\" \n\nMy turn, \"Jess, I'm coming too. I want to be with her because I love her. Maybe you can help us to shop for dresses.\" \n\n\"What? What dresses? You mean, oh shit really?\" \n\n\"Yes, we're not sure when, but we've talked about it this evening. We made promises to each other and now we need to keep them.\" \n\n\"Jess is just off to get tissues and some bubbly. I'm delighted, congratulations.\" \n\nJess was back. \"Milly I'm sorry I couldn't help crying. For I while I dreaded you telling me that and then a couple of years ago when I'd seen you two together a few times I knew it would happen, I saw how you felt about each other. I love you both, congratulations.\" \n\nThe call lasted for a while, lots of stuff; if, when, where, maybe, possibly, how, things to think about. \n\n\"Does Jane know?\" Jess asked. \n\n\"No, she's busy this evening, can you ask her to call me.\" \n\n\"Fiona, I think she's just arrived, hang on for ten minutes.\" \n\n\"Ten minutes for what?\" I heard Jane's voice in the distance. ",
        "\"Fiona and Milly are on the phone, she has news about graduating,\" Fiona told her the news. \n\n\"That's great news Sis, knew you would do it. Well done.\" \n\n\"Jane, I need a favour.\" \n\n\"Okay, what?\" \n\n\"I need a bridesmaid?\" \n\n\"I need to give it some thought, what about ...\" she paused for dramatic effect, \"About time, I'll check my diary. Milly, hi sister to be.\" \n\n\"Thanks, Jane, you okay?\" \n\n\"The best news I've had in a while. It's good for Fiona as well, I thought she'd never pull, I mean you're taking one of the ugly ones off the shelf Milly.\" \n\nAnd so it went on for a while. \n\nI sat at the top of the bed with my legs tucked under me waiting until Fiona came out of the bathroom. She walked towards me naked, except for her ring, the one that I gave her that meant that she would be my wife and now it was close. It was dark apart from the little fairy lights on the headboard, but it was enough for me to see how beautiful she was. She reached out and touched my hand; I felt it, the spark, the one that told me she was the one for me. She sat on the bed and raised my hand to kiss it, \"Milly, I've already chosen my dress, my wedding dress.\" \n\nNow my hearing seemed to be faulty, \"What? How?\" \n\n\"Milly, I knew that this day was getting closer and I wanted it so much I started dreaming about it. I don't know what we'll do or where, but I started browsing the net and I found the dress that I want to wear for you. You make me so happy, the last three years have been magical and the two before that were difficult because I knew what I wanted, but thought that I couldn't have it. Now I can, now I know that it's close.\" Her tears started to fall gently and I pulled her close. \n\n\"I know what you mean. I get excited when you're due home and every time I see you after we've been apart for a few hours, I gasp a little because you're so wonderful and the way you smile makes me weak at the knees.\" \n\n\"Very pretty knees; it's such a shame that they're so weak. Very pretty ankles, lovely proud nipples, cute nose, sparkly eyes, kissable lips, delicate hands, sexy freckles and then there is this little thing here.\" She touched my clit, I jumped almost clear of the bed and thirty seconds later she made me come. Thirty seconds, that's all it took. \n\nI grabbed her and rolled her onto her back with me on top of her. \"Now listen to me you randy little girl, you disrespect your elders and for that, I need to teach you a lesson.\" I taught her several lessons, although perhaps revision would be more accurate, but by the time we finished we were a sweaty mess, tangled together, perfect, just the way that I liked it. \n\nA few weeks later we drove down to spend a few days with Jess and Victoria. There was a wedding to plan and a house to find. We shared the driving, played loud music and sang. I felt, and yet again, behaved like a teenager, actually, I'd never behaved like that as a teenager. Fiona stopped everything dead with one question. \"Will you tell your parents, Milly?\" \n\nWhat the hell? I sat silent, thinking before I spoke. \"A couple of times they've had the chance to call me a pervert and disrespect my life choices. They told me they never wanted to see me again. That's very sad for all of us and I'm ashamed of them. I'll never give them the chance to do that again. No, I won't tell them. I'm sad to say that I have no feelings for them at all. I do have feelings for a few other people who make me happy and who are pleased for me, so I think that I'll stick with them and you in particular. Let's not mention them again.\" \n\n\"Sorry, Milly. I didn't mean to upset you, I'm sorry.\" \n\n\"You've nothing to be sorry for and thank you for the thought. It would be awful, what I have and how I live is not awful.\" \n\nThat evening Jane showed us a list of properties that she'd been looking at what she thought might be suitable. We eliminated a few immediately and another that Fiona dismissed as too expensive. There was a small number left; perhaps we could have a look at them. \n\nThat night I was lying in bed and thinking about the houses. It bugged me all night. \n\nAfter breakfast the next morning Fiona was off doing something and I went to find Jane. \"Can we look at those houses again? Which was your favourite?\" \n\n\"The one that Fiona dismissed as too expensive. It's perfect, a couple of years old, all mod cons, it was based on a four-bedroom floor plan, but they changed it to three large bedrooms, all en-suite. Huge, open plan ground floor, separate dining room and a smaller cosy lounge. In a good area, nice garden with patio, garage, parking, I thought it was perfect.\" \n\n\"It's been bugging me all night, I want to see it.\" \n\n\"But Fiona said...\" \n\n\"She didn't look at anything except the price. Bless your sister, a genius in many ways, but she can be clueless about some things. Jane, I think that we could afford that, not easily, but maybe.\" \n\nThe next day we set out to look at a few things; a wedding venue, dresses and a couple of houses. Dresses quickly became a challenge because Fiona was adamant that she'd already picked hers, so we dropped that idea, but we found a hotel that had a function room for the service and seemed to offer good catering. The two houses that we saw were of no use whatsoever. Despite that, it'd been good for the four of us to spend time together. \n\nThe following day we set off again to look at two more houses. The first was so bad that we only just made it back the car before we burst out laughing. As we drew up outside the second house Fiona turned to me and snapped, \"I said that this was too expensive, why are we here?\" \n\n\"Listen, I think this might be good, Jane and I have spoken about it.\" She jumped in her eyes flashing. \n\n\"So behind my back, you speak to her, maybe you two should be living there together.\" She was annoyed. \n\nJane grabbed her shoulder, \"Don't be a little shit! Milly loves you and thinks that this is okay; you just dismissed it without thinking about it. Get your arse inside, look at it and don't give me any crap. You've no fucking idea how lucky you are. Everyone can see how you feel about each other and every single thing that Milly's done over the last few years has been to ensure that you achieve your goals to be a success, because that's important to her, to you both. Now stop with your petted lip and get your arse out of this car. Now.\" \n\nBy the time that we got back in the car even Fiona conceded that this house was perfect for us, she just kept saying that we couldn't afford it and was brooding. \n\nAfter a quiet dinner Jane dragged Fiona off to her room, I suspected for another talking to, because she was clearly unhappy and miserable. Bless Jane. I was still sitting at the table and tears were not far away when Jess and Victoria joined me again. \"I've never made her that angry, I've screwed up.\" \n\nVictoria took my hand, \"I've never seen her like that either, but from what Jane tells me she feels that she's been sponging off of you for the last few years.\" \n\nI felt like I'd been punched. \"No, no she hasn't, that's so stupid. She pays the running costs for her car, it doesn't cost any more for two of us to live together apart from the cost of food and drink, money doesn't matter. She never asks for anything.\" I thought that I'd screwed up over a house that was nice, but so what. \n\n\"Milly, come on. You buy her clothes and spend lots of money on her. I think she feels that now she should carry her own load.\" Jess tried to cheer me up, but it failed. \n\nI was now almost about to burst, \"After all these years of fretting that it would end, I can't believe this. I don't want to go back to my little cottage on my own. It was great for a while, but I want something else, I want my life, I want my life with your daughter, I really don't care about anything else.\" On reflection I was being incredibly stupid, this was a blip, but my fears had remerged no matter how irrational they were. \n\nVictoria handed me another tissue and said softly, \"Come let's see what we can do.\" She put her arm around me and suddenly I felt a little better in that instant. \n\nI set out how much I thought we could get for the cottage and how much I had in savings and investments. I told them about my income over the last few years, pension, everything. Finally, I summed it up. \"After paying for the wedding, legal fees and everything else we'd be about a hundred grand short to buy that house outright and sort out the things that it needs. We'd need a mortgage, but with a lot of my income not being guaranteed and Fiona having no history it might be difficult in this climate.\" I sighed. \n\nVictoria looked at Jess who nodded and she turned to me. \"You'll get a mortgage; I'll stand as guarantor for as much as you need. When Fiona starts to earn you'll be fine.\" \n\n\"Would you really?\" \n\n\"Of course we would. Fiona's our daughter, you're our friend, and we'll chip in with the wedding costs, we're parents of the bride after all.\" \n\nI smiled, \"Well one of the two brides!\" \n\nJane appeared wearing a dark look. \"I've given her a talking to and Milly; I have ten grand saved that you can have. It'll save me having to buy a wedding present.\" \n\nI stood and gave her a hug. \"Thanks, Jane, but we may not need it. Now I need to slay a dragon or something even fiercer.\" \n\nFiona was sobbing on her old bed. \"I'm sorry Milly I've fucked us up, I'm sorry.\" \n\n\"What are you talking about? I thought that I'd fucked up. Now listen to me; I need you to tell me what you really thought about that house, set aside the price.\" \n\n\"I loved it, it would be perfect, maybe more room than we're used to, but it would be great.\" \n\n\"Okay, I agree, so let's see it again tomorrow. Victoria and I have sat down and gone through the figures. We can make this work with a small mortgage, which we can afford. \n\nAn hour later and after much discussion Fiona went to apologise. Victoria smiled at her. \"Something that I forgot earlier, you're entitled to the balance of your trust when you reach twenty-five or get married. I think there's still about \u00a310,000 there; you didn't use much because you were living with Milly. You need to put that into the bank with her, it should help.\" \n\nThat night in bed Fiona cried her apology. \"I'm so sorry for being a bitch after all that you've done for me and all that we've gone through. Please forgive me, Milly.\" I held her; I could forgive her almost anything, except leaving me. \n\nA few weeks later our offer for the house had been accepted, a few thousand below the asking price and there had been a lot of interest in Rose Cottage. It was expected to sell for about ten per cent more than I'd expected. That was good news, I wanted that house because it could be a home for us for the rest of our lives; it had everything that we'd need. \n\nJess was in her element. She went shopping with Fiona and Jane for a dress, despite Fiona telling them that she knew what she wanted. They tried several and then she found the one that she'd set her heart on months ago. They told me nothing except that it was white. \n\nI spent an evening talking about what I wanted. \"I don't want white, that's for Fiona. I want something a little different, but not too much.\" On our second trip Jane spotted the very thing and when I tried it on the three of us agreed that this was it. \n\nNames \n\n\"Milly, can I ask you something?\" \n\n\"Of course, what is it?\" \n\n\"Is Milly short for something?\" \n\n\"Like, Mildred, Millicent? No, it's just Milly, no middle names either.\" \n\n\"I've no idea why I've never asked you that before. You've changed names a few times haven't you?\" \n\nI laughed, \"Yes, Milly Scott-Morgan, Milly Nelson and back to Milly Scott. My artwork has always been Milly or Milly Scott. Why are you asking? Want me to change it again?\" \n\nShe looked a little shy, not like her at all. \"No, no.\" She seemed to be struggling. \n\n\"Come on, deep breath and ask me or tell me.\" I took her hand. \n\n\"I, I, oh Lord, I want to change my name.\" She sighed as if she had just confessed to a crime. \n\n\"What? What to?\" \n\n\"When we do it, get married, I'd like to change my name, how would you feel?\" \n\n\"Change your name to what, I don't understand?\" Maybe I was dumb, I didn't get this at all, I'd never given it any thought and assumed that I'd end up as Milly Ward-Cook, Fiona's wife, partner, whatever. \n\n\"I'd like to take your name and become Fiona Scott. Milly and Fiona Scott, I think it sounds good.\" \n\nThat knocked me for six. \"You're joking, aren't you?\" \n\nShe looked puzzled, \"No, no I'm not, are you upset or angry?\" \n\nI sat beside her, \"Why would I be angry over that? I've never really thought about it.\" \n\n\"Okay, think it over, but you're the senior partner here and I'd like us both to have the same name, so that's how I arrived at Scott.\" \n\n\"The senior partner? You mean the old woman?\" I was teasing her. \n\n\"No Milly, that's not what I meant. I want to marry you; I've always wanted to marry you, I love you, I don't care what I'm called as long as it's you and me.\" She looked as if she was about to burst into tears, this was new, it was touching. I could no longer see her as the little girl that I first met almost fifteen years ago; she was a mature woman, a beautiful one at that. I saw her as my partner, lover, fianc\u00e9e and soon, my wife. \n\nAfter a minute or two, she muttered, \"I should've kept you under my bed all those years ago. Just think how long we'd have been together?\" She was laughing now. \n\n\"Do you realise that in a couple of months I'll be marrying one of my former bridesmaids?\" \n\n\"I'd never thought about that. I wonder how often it happens.\" \n\n\"I'd be honoured for us to be Fiona and Milly Scott. I need you to take me to bed now, I have a funny feeling in my nether regions and I happen to know that the cure is lying down and being kissed.\" \n\nThis is not the end. The story will continue in The Artist and the Trouble-shooter."
    ],
    "authorname": "sandy_paris",
    "tags": [
        "lesbian sex",
        "romance",
        "strap on",
        "teasing",
        "lesbian",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/milly-scott-pt-03-the-artist-and-her-young-lover-02"
}