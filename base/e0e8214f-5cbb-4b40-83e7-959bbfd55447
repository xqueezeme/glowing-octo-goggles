{
    "title": "Use Me",
    "pages": [
        "***All characters in this story are 18 years or older***\n\nI wasn't sure what I was doing there. I should've been in my hotel room analyzing why the deal I had put together had just fallen apart.\n\nI'm a mediator (a very good one, I might add), which means I help individuals and companies work through their differences and come to an agreement before the courts and lawyers get involved. That didn't happen this time.\n\nI had flown out to Silicon Valley to finalize an agreement between two tech companies. Everything was on track until one of the CEOs got cold feet and withdrew the company's offer. Now we were back at square one.\n\nWhat did that mean? I had no idea. That's what I should have been trying to figure out. But I needed to blow off some steam, which is what brought me to this bar a few miles from my hotel.\n\nIt wasn't anything special, but good enough for me to sip a jack-and-coke in a corner booth. I had planned for a quiet and lonely night, a few drinks, and then I'd tackle my problem tomorrow.\n\nThen she walked in.\n\nWearing a simple sleeveless black dress that stopped just above her knees and cork wedge sandals, she still managed to look exotic. I think it was her almond-shaped large brown eyes, long dark eyelashes, and high prominent cheekbones. Her small mouth looked like it was constantly puckering for a kiss. Her skin was tan and her dark brown hair was tinged with a subtle purple. Adding to her allure were the piercings in her left eyebrow and tiny nose. There was a long flowery tattoo that ran up her thigh to disappear beneath her dress, and another that ran across the length of her left arm. Her calves were shapely and her thighs thick, her ass pushed up by her wedges.\n\nShe sat by herself at the bar and pulled out her phone. I watched her scan and scroll for a few moments, then she frowned, apparently annoyed at something. \"Fuck...\" I heard her whisper under her breath. She set the phone down in front of her, looked straight ahead, and sighed heavily.\n\nI felt bad for her even though I had no idea what just happened. I had toyed around with the idea of approaching her before, but now she was likely in a bad mood and it probably wasn't the time. Then again, I reasoned, she might need the pick-me-up.\n\nI went back and forth until I decided that since I was planning on leaving soon anyway I might as well say \"hi\" on the way out. If she wasn't interested, no harm done.\n\nI stood from my seat in the booth and walked to the bar to stand next to her. I set my drink down, leaned my elbows on the bar, and turned my head to her.\n\n\"Excuse me,\" I said, getting her attention. She still looked annoyed as she glanced at me. Nothing to do but follow through, though. \"I'm too exhausted to be trying something like this and I'll probably screw it up. But you are absolutely gorgeous and I'd like to sit here and buy you a drink if you'd let me.\"\n\nShe sighed again and glanced down at her phone. \"I guess so.\" An ominous start, to be sure.\n\nI pulled out the barstool and sat. I got the bartender's attention and she ordered her drink. As we waited, I said, \"I don't want to come across as creepy or anything, but it looked like you just got some disappointing news.\"\n\nShe shrugged her shoulders. \"You could say that. I just got stood up.\"\n\nWho in their right minds would stand this beauty up? \"I'm sorry,\" I said, somewhat sincerely.\n\n\"It's ok,\" she answered. \"It was just a tinder match.\"\n\n\"Well, whoever it was is an idiot for passing up a chance to meet you.\" Not my most original line, but what the hell. I was tired.\n\n\"Thanks,\" she answered. \"I'm Zatianna.\"\n\n\"Mark,\" I answered, holding out my hand to shake hers. Just then the bartender brought her martini.\n\n\"What brings you here?\" she asked as she took a sip. \"Picking up chicks?\"\n\nI chuckled. \"No, I'm avoiding my inevitable return to the work grind. I got some bad news today too.\"\n\n\"What's that?\" she asked. \"What do you do?\"\n\nI explained what I did, as briefly as I could knowing my job wasn't all that exciting and told her about the deal that had just fallen through.\n\n\"That sucks,\" she responded when I finished. \"But at least it's not over, right? You can still work out another deal.\"\n\n\"Maybe,\" I said. \"Time will tell. What do you do?\"\n\n\"I've done some modeling and some odd jobs. Now, I'm working my way through college.\"\n\nWe chatted about those topics for a while. As we talked she started to open up, eventually sharing details about her upbringing.\n\n\"I grew up in a very conservative family,\" she explained, \"And I always felt so...confined. Like, I just wanted to explore and live and experience everything I could.\"\n\nI nodded. I could relate.\n\n\"So, when I left home,\" she continued, \"I became...a little bit of a cumslut.\"\n\nThis caught me by surprise. I knew she had relaxed quite a bit since we started talking, but I didn't expect her to be so forward. Not that I minded.\n\n\"And how is that working out for you?\" I asked.\n\n\"I love it!\" she exclaimed. \"I feel so alive and...free. I can be who I really am now.\"\n\n\"In that case, I'm really happy for you!\" I said, really meaning it.\n\n\"Thanks. I've learned something about myself. I'm half white, half Asian,\" she explained. Then she leaned in and said with a wink, \"But I'm one hundred percent kinky.\"\n\nI smiled and took a sip of what was left of my drink, processing what she was telling me.\n\n\"What about you?\" she asked.\n\n\"Me? Oh, well...I love being women as much as the next guy, but most of my encounters have been pretty...vanilla.\"\n\nShe snickered, \"Sounds like you need to branch out a bit.\"\n\nI smirked. \"I agree with you. But it takes two, ya know?\"\n\nShe paused for a moment, apparently thinking something over. Finally, her lips curved and her eyes narrowed. She leaned toward me and laid a hand on my forearm.\n\n\"I'll tell you what,\" she said just above a whisper. \"I'm pretty good at reading people, and you seem like a good guy. Why don't you put work off a little longer, come with me, and we'll see what we can do about that?\"\n\nI strained to keep my mouth from dropping open. Yeah, fuck work. No way was I turning her down.\n\nI narrowed my eyes to match her expression, leaned in, and whispered, \"Lead the way.\"\n\n***\n\nI paid for our drinks and called for an Uber. Her apartment was only about a ten-minute drive away, but our hands wouldn't wait that long. Our driver was apparently oblivious to what was going on in the back seat. Zatianna started running her hand over my groin, making my cock instantly hard against the suit pants I wore. My fingers caressed her thigh and, ever so slowly, journeyed up her leg to tease her pussy through her panties.\n\nWe enjoyed each other's touch for the entire drive, neither of us saying a word. By the time we reached Zatianna's apartment, her panties were damp at the front and my pre-cum soaked the waistband of my underwear.\n\nShe lived on the first floor. When she unlocked it and we stepped in, she wasted no time. Sauntering over to the couch in her small living room, she grabbed the hem of her dress and pulled it over her head as she walked. She flung it away and I stood there, mesmerized by the bounce and jiggle of her plump asscheeks as she walked in her wedges. She spun around, sat down on the couch, and patted the seat next to her.\n\nI shook myself out of my daze and, trying not to run, took the seat next to her. She wasn't wearing a bra, only a burgundy thong that hugged her pussy mound. Her hips creased as she sat, and my mouth watered at her feminine thickness. Her tits weren't huge, but they were perky and perfectly shaped. Her dark nipples demanded attention. A large flowery tattoo like the ones on her arm and leg stretched across her torso underneath her breasts, accenting them perfectly.\n\nWhen I sat on the couch she stood and then straddled me, placing her knees on either side of my legs. She grabbed my face with a hand, leaned in, and our lips locked in a passionate kiss. My hands went instantly to her juicy asscheeks, which jiggled as she started to grind her crotch into the bulge pushing up through my pants.\n\nShe leaned back and unbuttoned my shirt, helping me to pull it off. She ran her fingers along my arms and chest and smiled. \"I like it,\" she approved.\n\nI cupped my hand around her breasts and squeezed as my fingers pinched her nipples. \"Me too,\" I agreed.\n\nShe leaned in and whispered into my ear, \"I'm gonna suck your cock now.\"\n\nA thrill shot through me as she dismounted me and kneeled on the carpet. I unbuckled my belt and lifted my hips to pull my pants and underwear down to my ankles. My erection sprang up and stood ready for her.\n\nShe knew what she was doing. After taking my shaft in her hand and licking around the head, she wrapped her lips around my shaft and made a point of slurping loudly as her head bobbed up and down. All the while she looked up at me, eyes pleading for affirmation. I ran my fingers through her hair approvingly.\n\nAfter a few minutes of this, she suctioned one last time and, with a \"pop,\" pulled her lips from my cock. Still stroking me with one hand, she said, \"I have an idea.\"\n\n\"Anything you want,\" I promised.\n\nShe ran her tongue along the underside of my shaft, and then said, \"I want you to use me.\"\n\n\"Oh?\" I responded, wondering what that meant.\n\n\"I'll tell you what I'm going to do. I'm going to go into the bedroom and put on a blindfold. I want you to come in and do whatever you want with me.\"\n\n\"You're sure?\" I said hesitantly. I was a passionate lover but inexperienced in the kinkier side of bedroom antics.\n\n\"I am,\" she confirmed. \"I want to try something new. And you need to open up more.\" Her expression became serious as she said, \"I'm trusting you to stop if I tell you to.\"\n\n\"I promise I will.\" Then the thought hit me and I could've kicked myself. \"Um...I forgot to grab a condom.\"\n\nZatianna didn't miss a beat. Maintaining the serious look on her face, she cocked her head to the side and said, \"Well, then you'll just have to cum in one of my other holes.\"\n\nShe smiled again, licked my cock one more time, and stood up. \"Give me thirty seconds.\"\n\nI nodded and watched her ass wiggle and jiggle as she quickly walked back to her bedroom, leaving the door open a crack behind her.\n\nI took the opportunity to shed the rest of my clothes, counted to thirty, and followed her in.\n\nI entered to find her sitting on the edge of her bed blindfolded and wearing nothing else except the burgundy thong, the waistband of which disappeared into the thick cleavage her hips made as she sat. Her hands were folded in her lap and her mouth hung slightly open and she inhaled and exhaled deeply. Appreciating that this was new territory for both of us, I determined to take it slow at first. But I remained committed to the promise I made: to use her as I pleased.\n\nI walked over and stood in front of her, taking time to admire her pouty lips, her perky tits, and her juicy thighs. I reached a hand down to caress one of her tits, kneading her flesh and pinching her firm nipple. With my other, I grabbed a handful of her hair at the back of her head and, slowly but firmly, pulled back until her face tilted up toward me. \"Uhhh...\" she breathed.\n\nI leaned down and ran the tip of my tongue over her lips. Her mouth opened a little wider. Accepting the invitation, I pushed my tongue inside and sucked on her upper lip. She responded in kind, sucking my bottom lip into her mouth. We both embraced the sloppy wetness, passing saliva back and forth as our tongues danced around each other, exploring every corner.\n\nStill holding her hair, I pulled away. \"Stand up,\" I commanded. Guiding her by her hair, I pulled her up from the bed and let go. I kneeled in front of her and ran my fingers up the front of her thighs until they reached the waistband of her underwear. I leaned in to lick her pierced belly button, the cold metal contrasting with the warmth of her navel. Then, with both hands, I pulled her thong down her legs and dropped them to the floor.\n\nShe had a beautiful pussy. Her outer lips were thick and hairless. Between them the two tiny wings of her labia spread out, revealing the glistening wetness of her arousal. Her clit poked against her protective hood above, and above that was a nicely trimmed patch of black pubic hair.\n\nHolding onto her hips, I leaned in to put my nose right next to her pussy and inhaled deeply. The pungent sweetness of her natural lube made my cock twitch. Still holding her hips, I pushed her back until she fell back into a sitting position on the edge of the bed.\n\nI put my hands on her knees and pushed her legs apart. Her pussy lips stuck together for a moment, finally coming apart as her legs spread. I shuffled forward on my knees and, putting a hand on her chest, pushed her back until she fell back onto her elbows.\n\nI ran my fingers up and down her inner thighs, pleased to see that her breathing sped up just a little. Then I leaned in close to her pussy lips and lightly blew on them. She shivered.\n\nI was ready to taste her now. Slightly spreading her lips apart with my fingers, I ran my tongue from bottom to top through her labia, the tang of her wetness exciting my senses. At the top, I flicked her clit with the tip of my tongue.\n\nI repeated this a few times, then I used my thumb to pull back on the skin above her clit, letting it peek out from beneath its hood. I ran my tongue around it, then suctioned my lips around it as my tongue flicked across it. This made her legs tighten around me as she moaned, but I held them back with my elbows as I showered her button with affection.\n\nDeciding to change things up a bit, I hooked my arms underneath her knees and brought them up to rest on my shoulders. This tilted her pelvis toward the ceiling, giving me access to her hole. As I rubbed the thumb of one hand along and around her clit and massaged her breast and nipple with the other, I pushed the tip of my tongue into her. At first, she tensed, blocking my advance, but with a deep exhale she relaxed and I burrowed inside her until my mouth pressed against her mound.\n\nHer pussy tensed and relaxed around my tongue as my rubbing of her clit sped up. \"Mmmm....mmmm!\" she sounded with each exhale. Her thighs squeezed my head and, without any warning, I felt a warm blast of her wetness splash against my tongue. Her pussy convulsed and she groaned, \"Fuuuuuuuck...\"\n\nI didn't let up. Her hips bucked, but I held her in place, determined to get the most out of her orgasm. Even when her pussy juices filled my mouth and dribbled down my chin I kept going. I couldn't get enough of her taste. Her writhing and squeezing around my head was the stuff of my fantasies.\n\nAs the twitching of her pussy slowed, so did I. I pulled my tongue from her and gave her lips one last lick. Then I ordered, \"Lay face down.\" I stood up and helped guide her into position, face down lengthwise on her bed.\n\nOnce she was there, breathing heavily and enjoying the aftershocks of her orgasm, I went to her closet. I managed to find four belts, which I thought would do the trick.\n\nBringing the belts back to the bed where Zatianna lay spread eagle on her front, I wrapped a belt around each of her wrists and ankles. Then, since her bed didn't have a head or footboard, I tied the ends to the frame. I picked up the bottle of Astroglide she had sitting on her nightstand. Then I stood at the foot of the bed to admire.\n\nThe way the mattress pushed up against her thighs and hips made them look even thicker. Her tied legs were spread, giving me a perfect view of her pussy, and her slightly-dimpled bubble butt stuck out into the air inviting me to do as I wished.\n\nHer feet laying soles up, I ran my fingers along the bottoms of each. She shivered. I was sure it tickled. That was the point. I kneeled at the foot of the bed and bathed the bottoms of her curled toes with my tongue. She wiggled them, and as she did I caught them with my mouth one by one to suck on them.\n\nI stood and climbed onto the bed, laying the lube down next to her. I squeezed and kissed her thighs, nibbled and licked the insides, and worked my way up like this to the crease of her ass. I opened my mouth wide and sucked on the flesh of her underbun as I squeezed the thick meat of her hips.\n\nHaving arrived at my destination, I sat up on my knees between her legs and squeezed her thick asscheeks. She cooed as I massaged her dimpled flesh, then yelped as I smacked her ass. A little harder than I had intended, but she didn't tell me to stop.\n\nI picked up the bottle of lube and was about to dump a glob in the crack of her ass when I had an idea. Closing and dropping the bottle back on the bed, I climbed off and sprinted to the kitchen. I opened the refrigerator and scanned the shelves on the door. \"Yes!\" I whispered to myself as I grabbed the bottle of chocolate syrup I found there.\n\nI sprinted back to the bedroom and returned to my place between Zatianna's legs. She exhaled heavily and said, \"I thought you were running out on me for a second.\"\n\n\"Are you kidding?\" I responded. \"I'm just getting started.\"\n\nI opened the bottle of syrup. With one hand I pulled her cheeks apart and with the other I let a thick stream drizzle up and down the center of her crack. She inhaled sharply and flinched. \"That's cold...\" she said.\n\n\"I'll warm you up,\" I promised. Closing the syrup bottle and laying it aside, I gripped each buttcheek and leaned in. Starting at her pussy, I licked my way up the center of her crack, running my tongue along the stream of chocolate and sucking it, along with her flesh, into my mouth. It was sticky and took a long time to clean up, but that's exactly what I wanted.\n\nWhen her crack was clean, I turned my attention to her asshole, where the syrup was still buried in the tiny wrinkles. I licked and sucked every bit out of her rubbery rim, then wiggled my tongue in the center. With a contented \"oooooh,\" she relaxed her sphincter to receive my ministrations.\n\nWithin a few moments, she was raising her hips into my face, at least as much as she could still being tied up, which let me know it was time for the next step. I turned around and released her ankles from their bonds, then turned again and whispered firmly, \"On your knees.\"\n\nHer arms were still stretched out to her sides, unable to move with her wrists still belted to the bed. From between her legs, I reached an arm under her waist to help her up to a kneeling position. Her ass stuck up into the air and her face and chest smashed into the mattress. I squeezed her ass, then ran two fingers along her pussy's inner lips. Still wet. Good.\n\nI took the lube and dropped a large glob into her asscrack, still sticky and glistening with my saliva. I took two fingers and gently massaged the lube around the rim of her anus. Then with one finger I gently pressed on the center.\n\nDespite my recent tongue bath, it was still resistant. But Zatianna again exhaled and gradually relaxed, her asshole giving way to my finger. When it entered up to the first knuckle she inhaled sharply through her teeth. I let my finger stay right there so she could adjust to it, then slowly pressed again, this time up to the second knuckle.\n\nNow I slowly rocked my finger in and out. Before long I was inside her up to my third knuckle. Her hips started moving in time with my finger as she showed me she was warming up.\n\nDeciding now was the time, I removed my finger and applied a generous amount of lube to my fully erect shaft. I settled the head against her asshole and pressed, softly at first then with greater force. Her sphincter opened and wrapped around the head of my cock more easily than I was expecting. \"Fuuuuuck,\" came Zatianna's muffled voice from the mattress below.\n\nI eased my way into her, stopping a couple of times for her to adjust. When my pelvis met her ass I started thrusting, slowly and deliberately. Every time my hips met her bubble butt she yelped, \"Uh!... Uh!\"",
        "I felt her relax around my cock and the resistance decreased. Her hips started to buck in time with my thrusts and I knew she was about ready to get pounded. But, instead of doing this right away, I buried myself completely inside of her and laid my chest and stomach along her back. Sliding my hands along the mattress until I was able to wrap my hands around her tits, I put my mouth to her ear and whispered.\n\n\"You like having my cock buried in your ass?\" I asked as I pinched her nipples.\n\n\"Yes...\" she gasped.\n\n\"Do you want me to pull out?\"\n\n\"No...\"\n\n\"What do you want me to do?\"\n\n\"Fuck me...\"\n\n\"Fuck you where?\"\n\n\"In my asshole...\"\n\n\"Say it all at once.\" I twisted her nipples, harder this time.\n\n\"Ahhh! I want you to fuck my asshole!\" she screamed.\n\nI sat up straight, sunk my hands into the meaty cleavage of her thighs, and fucked her.\n\nZatianna hadn't been very vocal before this, but now she completely let go. \"Oh fuck! Oh yes! Oh fuck!\" she yelled, not caring one bit of her neighbors heard.\n\nI grunted as I pounded away at her ass, her cheeks rippling every time my hips smacked them. I looked down to the side and saw her pretty toes curl in ecstasy. Feeling myself getting close and wanting her to enjoy a second orgasm, I leaned over her again and managed to release her right wrist from the belt.\n\nHer hand went immediately to her pussy. She sunk two fingers in and fucked herself furiously. \"Yeeeesssss!\" she yelled, the wet sloppy sounds of her fingers echoing off the walls and mingling with the slapping of my thighs meeting hers.\n\nHer asshole started to twitch violently around my cock, and she gasped, \"Cumming!\" That did it for me. With one last thrust, I buried myself in her up to the hilt and sprayed her insides with my cum. Her sphincter squeezed tight around me and milked my cock of all it had.\n\nWave after wave of shared orgasm washed over us as we gasped and panted for breath. I managed to release my grip on her hips, my fingers having been stuck there like a vice. I withdrew my half-flaccid shaft from her asshole watched my cum dribble out of her asshole and down along her pussy lips. I crawled over to release the last belt on her wrist. Then we flopped next to each other on the bed, recovering and soaking in the remaining pleasure.\n\nWe lay there silent for a few minutes. She pulled the blindfold off and threw it across the room. Then she turned away from me to lay on her side and backed her ass up to me. I turned to wrap an arm around her and nestled my spent cock in the crevasse of her ass.\n\nHaving recovered enough to talk, Zatianna asked quietly, \"When does your flight leave?\"\n\n\"The day after tomorrow,\" I responded between breaths.\n\n\"Mmmm...\" she cooed. \"When you're ready, go to your hotel, grab your things, and bring them here. I have some plans for us.\"\n\nA tired smile spread over my face as my eyes closed. \"I can't wait to see what they are.\""
    ],
    "authorname": "johnnygreene11",
    "tags": [
        "anal sex",
        "bound",
        "creampie",
        "cum",
        "cunnilingus",
        "fetish",
        "anal play",
        "rimming",
        "foot fetish"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/use-me-13"
}