{
    "title": "The Cherry Poppers Ch. 23",
    "pages": [
        "Jason took Sierra to Theta Chi. He parked out back in the lot and handed her the keys. She got out of the car with him and started walking toward the back door of the house. \n\n\"Ha,\" Sierra laughed.\n\n\"What?\"\n\n\"You're really playing this cool, Jason. I'll give you that. You sure act confident for a guy about to be busted.\"\n\n\"Hold tight to your puritan values, Sierra. They're about to be shocked to the core.\" \n\n\"I almost believe you,\" Sierra said laughing again.\n\nThey entered by the back door and quickly got to Jason's room. He tried the door but it was locked. Taking the keys from Sierra momentarily, he unlocked the door, and then gave them back to her.\n\n\"Last chance to admit you're wrong,\" Jason told her with a smile.\n\n\"Was this your weak plan all along? To get me right to the door and hope I'd back down. Not on your life. Let's see your den of iniquity, Jason,\" Sierra declared defiantly.\n\nJason smiled at her and turned the knob. Soft music could be heard from inside like someone left the radio on because the room was still fairly dark at ten o'clock in the morning. As the door swung open and their eyes adjusted to the dark, the scene of total debauchery became quite evident. Jason heard Sierra gasp beside him. He had to admit he hadn't expected this total picture either.\n\nClothes and beer bottles were strewn everywhere. In the middle of the room, on the floor was the mattress Chad and he had moved from the storage room. On her back and naked from the waist up was Pam. She was still asleep and Brad's arm lay across her bare belly as he slept on his stomach beside her. He too was naked from what one could see. Jason's eye caught the way the light hit Pam's face from the hall overhead lighting. Strands of her hair were plastered to her face and her face appeared to be flaky white in spots. He realized what it probably was maybe seconds before Sierra. Her hands covered over her mouth to muffle her shocked reaction.\n\nJason stepped forward, not realizing at first that he held Sierra's hand. He led her into the room from a pace or two behind him. They stepped around the sleeping couple to check out the first bed. Chad slept there alone, but his bare butt was exposed. They walk a little further to Jason's bed. He had given instructions to Chad not to let anyone fuck in his bed. Those rules had not been obeyed he could see as they approached. \n\nSitting up in bed and smiling at them was Mark, his big brother. He was naked from the waist up as well. A big lump below the sheets gave Jason all the information he needed to know where Stephanie was. The thin sheets bounced up and down in the rhythm of a hot mouth hard at work. \n\n\"Hey, Little Brother,\" Mark whispered. \"She's really good at morning head.\"\n\n\"Oh, my god,\" Sierra gasped aloud causing Stephanie to stop and peak out. \n\nHer lips were moist and puffy. Her movements had dropped the sheets back and Mark's stiff wet cock pointed straight at the ceiling for all to see.\n\n\"Mark Klerk,\" Sierra continued as if in disbelief.\n\n\"Hi, Sierra,\" Mark said snickering.\n\n\"Oh, my god! Mark Klerk is your big brother?\" Sierra screamed.\n\n\"Yeah,\" Jason responded a bit bewildered.\n\n\"Now I believe everything, Jason,\" Sierra yelled too loud not to wake the others.\n\nSierra tore her hand from Jason's and started out of the room. Jason gave Mark a look of wonder that was met by an even bigger smile from Mark. He broke into laughter as Jason hurried after Sierra. As they passed Chad, he rolled awake out of the covers, his limp cock flopping around. Then they raced past Pam as she got to her elbows on the mattress. The fingers of one hand tried to clear the cum glued hair from her face. Brad watched sleepily as they went out the door. \n\n\"Sierra wait,\" Jason yelled.\n\n\"You're right, Jason. You're a pervert of the highest order,\" Sierra said, the ruckus beginning to draw a crowd from down the hall. \n\nJason chased Sierra out the back door and to the driver's side of his car. She was attempting to take his car back to her dorm. \n\n\"Wait, wait a second,\" Jason pleaded.\n\n\"God...and to think I thought you were possibly a nice guy just playing a joke,\" Sierra nearly spit in his face.\n\n\"I am,\" Jason protested.\n\n\"You're a pig just like your big brother,\" Sierra barked. \"Now leave me alone.\"\n\n\"Give me the keys. I'll drive you back like I promised.\"\n\n\"I'd rather walk.\"\n\n\"Sierra, look...I don't know what's gone on between Mark and you but I had nothing to do with it.\"\n\n\"Right! He probably put you up to this whole thing, that bastard\"\n\n\"I swear! I have no idea what past you two have together,\" Jason beseeched.\n\n\"None! About the same I'll be have with you.\"\n\n\"Please, Sierra, give me the keys and...\"\n\nJason's cellphone went off at that moment. He wouldn't have bothered with it but he had it on a fairly loud ring from the game so he pulled it from his pocket. It was Beth calling.\n\n\"Fuck,\" Jason blurted out, but didn't answer it.\n\n\"Nice...I should have never come here,\" Sierra hollered.\n\n\"Sierra, I'm so sorry. I never meant for it to end...\"\n\n\"You planned this whole thing. You probably just acted like you were running into me coming out the dorm. Mark probably had you waiting there...\"\n\n\"He did not. I swear it was just coincidence. I didn't plan any of this,\" Jason implored.\n\n\"Right...\"\n\n\"Let me take you home,\" Jason asked.\n\n\"Straight home or I'll scratch your eyes out. I swear, Jason.\"\n\n\"Okay, okay. Straight home. Can I have the keys now?\"\n\nSierra opened her hand. She had been gripping the keys so tight her knuckles were white and the keys had made red impressions in her palm. She slowly handed them to Jason as they both looked at her hand. \n\nJason walked her around to the other side but Sierra stopped him part way.\n\n\"Don't bother being a gentleman now,\" she said and walked the rest of the way to the passenger door.\n\nShe got in as Jason went back to the driver side. He got in and started the car. He backed out and headed for Smith Hall. Jason realized if he didn't say something quick, they would be to the dorm and she would be out the door like a shot.\n\n\"Sierra, I'm truly sorry. I don't know how this went so wrong other than the scene in the room. It was far worse than I'd thought you'd see,\" Jason admitted.\n\n\"Now I know why you were so confident. Not too many people that wouldn't be shocked by that,\" Sierra contended.\n\n\"Me included,\" Jason said.\n\n\"I'd like to believe that but you'll have to forgive me for doubting you now.\"\n\n\"What exactly happened between Mark and you, might I ask?\" Jason queried.\n\n\"Well, I suppose I should tell you my side. I'm sure he'll tell you his lies too. We dated my sophomore year. I wasn't sure about my relationship with Jimmy back home then. I was somewhat lonely too. Mark wined and dined me and was oh so charming. Up until he got too drunk at a frat party that is and came to see me in the dorm. Let's just say he wanted more than I was willing to give and it got ugly thanks to him.\"\n\n\"I didn't know that,\" Jason proclaimed.\n\n\"I'd like to accept that as true but you'll have to excuse my reluctance now.\"\n\n\"I understand. You have every right to be mad. I've acted poorly too. I never should have talked you into coming here. It was out of character for me and wrong. I knew the girls would be there, but not like that. It's just I thought I'd never see you again if I let you go and I wanted to. We were having such a good conversation\"\n\n\"Well, you proved your point.\"\n\n\"I don't feel like I succeeded very well though.\"\n\n\"Oh, I'd say you exceeded beyond expectations, Jason.\"\n\n\"Touch\u00e9, I guess I deserve that.\" \n\nJason pulled to the curb by the front door to Smith Hall. He went to get out but Sierra stopped him. \n\n\"No need, I'll walk myself. Bye, Jason. You definitely shocked me, if that was your aim.\"\n\n\"Bye, Sierra. Again, I apologize that everything turned out the way it did.\"\n\n\"Tell me, Jason. Just out of curiosity. How did you want it to go?\" Sierra questioned.\n\n\"Well, it seems kind of stupid and farfetched now but I hoped to be able to see you again.\"\n\n\"Ha,\" Sierra mused. \"And how exactly did you think showing me two women that had sex with three guys would make he want to see you again.\"\n\n\"I'm too embarrassed to even try to explain that,\" Jason conceded.\n\n\"I'm guessing you thought it would make me so hot for you I'd want to see you again.\"\n\n\"Something like that I guess,\" Jason sheepishly admitted.\n\n\"Ha...men. Always thinking with the small head,\" Sierra intoned.\n\n\"I'm embarrassed to say that's probably true this time. Especially because I think you're so great.\"\n\n\"You do, huh.\"\n\n\"Yes.\"\n\n\"Good day, Jason,\" Sierra said and opened the car door. \n\n\"Have a good rest of the day,\" Jason replied as she shut the door and walked off. \n\nDriving back to the frat, Jason keyed his cell and listened to Beth's message. He was so distracted by the first words he nearly hit a pedestrian. \n\n\"Who the fuck was the tall blonde, Jason? Oh, I have to leave Beth so I can see my big brother. You're such a fuckin' lying shit!\" Click. \n\n\"Oh, my god...fuck!\" Jason screamed at no one in the car. His day was a train wreck so far.\n\nJason got back to the house and went to the room. He hesitated a second at the door, not sure he wanted to face everyone after that. Then he became just mad at everything and threw the door open. He walked in to find the lights on now and the radio a little louder. The mattress on the floor was empty and so was Chad's bed. Mark was sitting at his desk in gym shorts drinking something brown on ice. He lifted his glass as if to toast Jason.\n\n\"Hey, Little Brother. You okay?\"\n\nStephanie smiled at him from his bed. Her magnificent breasts exposed as she too sipped a drink. They were probably talking when he walked in. \n\n\"I'm having a fuckin' whale of a day so far,\" Jason exclaimed.\n\n\"Am I to blame?\" Mark asked.\n\n\"Seems that way... at least partly...what did you do to that woman?\"\n\n\"Well, I dated her hot and heavy for about two months, two years ago. I was really into her,\" he said looking over at Stephanie and smiling. \"She was great and could give a hummer almost as good as Stef here.\"\n\n\"Glad you said almost,\" Stef pronounced gladly.\n\n\"But, she wouldn't go the magnificent mile,\" Mark continued. \"We had a huge kegger and punch party one night here and I got a little too drunk. I went looking for her as she had stayed home to study. She let me into her dorm room and we got into a fight about her not putting out all the way. She dumped me after that.\"\n\n\"Poor baby,\" Stef said faking concern. \"I'd have polished your knob and let you bury your bone in any hole you wanted.\"\n\n\"Such a good girl,\" Mark said, winking at Stef. \n\n\"Well, you're right about pissing her off. She nearly cut my nuts off for what you did. She thought the whole thing was a set up to get her here. It took some doing to convince her otherwise and I'm not sure she buys it yet,\" Jason claimed.\n\n\"Sorry. Never thought you'd go fishing for senior girls, bro.\"\n\n\"Especially when the fishing is so good right in your own bed,\" Stephanie said lifting the covers the rest of the way off to give him the complete look at her parted legs and bare snatch. \n\n\"Not now, babe. Where are the others?\" Jason asked.\n\n\"In the shower,\" Mark answered. \"Pam needed to get the cum off her face and out of her hair. Jason you should have seen it.\"\n\n\"What?\"\n\n\"We had guys lined up in the halls. Pam blew about twenty of them and most of them blasted her face. Steffie and I came up with the idea and Pammy went along with it, no problem. That one's wild, chick.\"\n\n\"She does what I tell her,\" Stef insisted with an impish smile to Jason.\n\n\"Want a drink, bro?\" Mark asked. \"Jack D.\"\n\n\"Not right yet. I need a shower first. I got other problems too with Beth. She fuckin' saw me with Sierra. I'm having one rotten day so far.\"\n\n\"I'm up for a shower too,\" Stephanie said. \"I'll make you forget your troubles, big boy.\"\n\nJason grabbed two towels from his closet while Stef put a robe on that he gave her. He grabbed his bath kit too and they left Mark to his drink. A couple frat brothers were down the hall and they waved. Jason waved back and was a little surprised when Stef did too like she knew them. 'God, it is truly becoming like a den of iniquity in my room,' he thought. \n\nWhen they got to the showers they could hear the water running in the last shower and grunts and groans coming from inside. Jason turned the water on in the first of three showers, leaving an open one between them. While he did, Stef walked down to look into the last door. Curiously, Jason joined her while their water warmed. As he peered in besides a smiling Stef, he heard Chad.\n\n\"Come on in, Stef,\" Chad said before spotting Jason.\n\n\"No, I'm going to help our wonder boy here,\" she said taking Jason's arm.\n\nJason saw Pam removed Brad's stiff cock from her mouth. She had been getting pumped from both ends when they disturbed them. \n\n\"Don't wear him out,\" Pam told Stef.\n\n\"Don't worry, honey. He's got enough dick for both of us.\" \n\nJason and Stef closed the door to the last shower and entered their own. The water was hot now and steam was rising off the floor. They stripped quickly and hung their clothes on the available hooks. Stef just had Jason's robe on anyway. Jason adjusted the water and they held each other under the spray, wetting their hair first, before the rest of them.\n\n\"You don't have to go chasing pussy you know,\" Stef said. \"Pammy and I will do whatever you want.\"\n\n\"I know, babe. You guys are great. I just have to see some other women too for now.\"\n\n\"So long as you remember us with this nice big cock,\" Stef said taking his six inch limp cock in her hand. \"Oh, I never get enough of this guy.\"\n\n\"He loves you and these gorgeous massive melons too,\" Jason said, pinching a nipple and hefting a huge mound. \n\n\"Play with them all you want,\" Stephanie said. \"Anything to make you feel better.\"\n\nJason did just that, sucking her big nipples, and kneading the firm giant orbs. Meanwhile, her hand never stopped stroking him and it didn't take long before he was rock hard.  Stef shifted as if ready to drop to her knees in the shower but Jason stopped her. \n\n\"What...what do you want, babe?\" Stephanie asked.\n\n\"Turn around, woman, and grab the wall. I want to fuck you from behind.\"\n\n\"Mmm,\" Stef moaned and complied.\n\nJason caressed her amble butt and bent down a little to examine her treasures. He ran a finger along her gash making Stephanie purr like a happy kitten. He was happy to see she was already wet and not just from the shower. He teased around her pussy for a second and then ran his finger up to her puckered back orifice. He teased around there for a second, feeling the tight little rosebud. Stef looked back over her shoulder at him.\n\n\"That's what you want?\"\n\n\"Maybe...after I give your pussy a good ride.\"\n\n\"Okay, but don't just shove that bat in me please.\"\n\n\"Deal.\"\n\nHe eased forward and aligned his cock with the entrance to her pussy. Stephanie wiggled her ass seductively at him as he pressed into her opening. Her wetness allowed him to enter, but his thickness slowed the movement forward.\n\n\"Oh, god! I love your big cock,\" Stef praised.\n\nJason pressed forward more with a strong thrust. Stef moaned her pleasure and desire, as the huge dick opened her up like no one else ever had but him. Jason gave her just as much as she could take each time until he buried completely inside her. Stef was one of the few that could take him completely without too much trouble.  \n\n\"Leave it there a second please, Jason,\" Stephanie purred. \"I want to feel you all.\"\n\nJason pushed a little harder just for her. He was at her core and hitting spots not touched before by others. His balls were swinging into the opening between her legs. She reached for them and scrapped them with her nails lightly as she sighed.\n\n\"Oh, good that feels so good,\" Stef growled.\n\nHe slowly eased back and Stephanie clamped her pussy muscles hard to try to hold the huge intruder where he was. Jason's cock nearly pulled her insides out as he slowly exited her pussy. \n\n\"So good,\" Stef moaned. \"Oh, come back to me, big boy.\"\n\nJason shot forward suddenly filling the recent void in one deep stroke. Stef had to hold herself tight against the wall to keep from falling forward. His cock wedged into her depths like a battering ram.\n\n\"Urgh...oh fuck,\" Stef groaned.\n\nJason worked into a slow pace that built quickly. He had thought his shattered nerves and pissed off state would hold off his climax for some time, allowing him to fuck her to multiple orgasms before he ended in her ass. Her tight pussy had other plans though and he could already feel the distant rumbling in his balls. The flip side of that was Stephanie already about to embark on her magical trip.\n\n\"Make me cum, Jason! Make me cum,\" Stef yelled loud enough for at least the others in the showers to hear. \"Fuck me harder!\"\n\nJason fucked Stef in long deep strokes driving her towards her finishing point. He fucked her juicy pussy until she couldn't take it anymore. She wailed loud enough for the others to hear.\n\n\"Oh, god...oh, god. Fuck me...fuck meee,\" Stef wheezed out at the end. \n\nJason buried his cock deep inside her as he felt her pussy clamp tight with her orgasm. She let her head fall back and groaned loudly as her climax wracked her body with bliss. She'd cum several times the previous night with the three guys. She'd stuck to fucking Chad, Brad, and Mark, letting Pammy be the complete whore with the rest of the guys; but this climax topped them all. Her insides felt like they were melting with the wonderful pleasure of Jason's cock buried in her vagina to the hilt. Stef moaned through a superb series of exquisite waves of pleasure before she finally relaxed. Jason held her by her big tits with his cock still deep inside her.\n\nHe gave Stef a minute to rest before he slowly pulled his cock from her deep recesses. She felt every inch leave and sighed with the loss. He barely removed his cock before he pushed a wet finger slowly into her other entrance. Still in the afterglow of her luscious orgasm, it felt good. Jason worked the finger in and around a bit to open her up before removing it for his cock. Stef scarcely felt the first intrusion of his dick into her tight rear hole. That changed when Jason manage to pop past her sphincter muscle with just the head. \n\nOh fuck,\" Stef cried as the huge cockhead invaded her ass. \"Hold still.\" \n\nJason waited for her to signal she had adjusted to the discomfort of his cock in her ass before he started moving again. He eased slowly deeper. He was just about half way when there was a knock at the door and Pam popped into the shower stall. She shut the door behind her.\n\n\"Can I join in too?\"\n\n\"Haven't you had enough,\" Stephanie protested.\n\n\"Not of Jason's big dick. Please.\"\n\n\"Where are Chad and Brad?\" Jason asked.\n\n\"They came and then wanted to go back to the room,\" Pammy said. \"Oh, my. He's in your ass, Stef, huh.\"\n\n\"Yeah...oh god.\"\n\n\"Here, let me help,\" Pammy offered.\n\nJason pulled back and Pam spit on the exposed top of his cock. When he pushed back in the saliva helped lubricate Stef's incredibly tight ass. Jason started a rhythm in Stef's ass as Pam played with her friends hanging tits and fingered her clit. \n\n\"Fuck her good, Jason.\"\n\n\"Damn, she's tight,\" Jason declared.\n\n\"Yes. Yes...fuck that ass, Jason,\" Stephanie pleaded.\n\nThe combination of Jason's dick in her butt hole and Pammy fingering her clit soon had Stef climbing the walls again. Jason fucked her ass with a quickening tempo as he tried to fight off his own climax. He tried altering the pace to give himself a break but Pam continued to work Stephanie into a fever pitch. \n\n\"Oh, you damn, whore,\" Stef called Pammy as she brought her nearer to ecstasy. \"Keep it up.\"",
        "Jason joined Pam in mercilessly pounding and rubbing Stef's two bottom holes. She soon reached her final crescendo as they drove her over the edge.\n\n\"Oh, shit,\" Stef howled as her climax hit. \n\nShe moaned and shook with the sheer ecstasy as Jason held his cock deep in her ass. Pam kept rubbing her pussy until Stephanie nearly collapsed against the shower wall. Jason slipped his cock from her anal chute while Pam held onto her friend. Jason slipped back under the water and washed his cock again. Still stiff since he hadn't cum yet, Jason got it ready to fuck Pam. \n\n\"No fair double teaming me,\" Stephanie protested once she got her breath back.\n\n\"You loved it,\" Jason replied.\n\n\"Now me,\" Pammy beseeched Jason.\n\nJason looked at those Hersey kiss nipples and realized he's missed those. Stef had the best tits but Pam's nipples were long, stiff, and brown like candies. He backed her to the wall and leaned down to suck on one. \n\n\"Mmm,\" Pam moaned. \n\nStef played with Pam's pussy as Jason paid attention to her nipples. Soon they had the tall brunette moaning with delight. It didn't take much. She was already hot as a firecracker from watching Jason fuck Stef's ass. Jason moved forward enough that Stef could guide him right to the center of Pam's sex.  He pushed forward and entered her pussy easily despite his size. Pam had cleaned herself after the guys finished with her but her pussy was still open and lubricated from all the action she'd had in the last twelve hours. Jason thrust in hard pinning her against the wall.\n\n\"Oh, god,\" Pam growled upon feeling Jason fill her to capacity.\n\n\"Like that, slut?\" Stef asked blatantly.\n\n\"Yes. Oh, geez, yes,\" Pam bellowed.\n\nJason started fucking her with hard thrusts. He remembered the last time he had fucked Pam was also in the shower. Her height made her a good fuck for him standing up. His own orgasm quickly built from all the hot sex already with Stef. He tried to finish Pam fast as he wasn't sure how long he could last. Stef's hand from behind squeezing his balls didn't help.\n\n\"Fuck, Stef. Don't do that. You're going to make me cum too soon,\" Jason protested.\n\n\"Sorry, babe. Thought I was helping.\"\n\n\"Play with Pam like she did with you,\" Jason proposed. \"I want to get her off fast.\"\n\n\"Okay,\" Stef said and pulled somewhat roughly on one of Pam's nipples, stretching it from her body. \n\nPam groaned loudly with the double attack to her body. His fucking was forcing her quickly to climax and the rough attention to her breasts only added to her delight. As much as Pam had cum, this was going to be a big one. She felt it building like a growing crack in a dam. It wouldn't be long before she totally burst.\n\n\"Yes...oh...fuck me, Jason!\" Pam roared.\n\nJason couldn't take anymore either. His cock felt like a steel rod as he buried it repeatedly to the hilt in Pam. He felt Pam explode and it pushed him over the edge too. Stef sensed they were cumming and squeezed Jason's balls one more time.\n\n\"Fuck,\" Jason howled as he unloaded one hot blast of cum after another into Pam's cunt. \n\nStef's fingers milked the cum from his balls as he shot off inside her roommate. Pam's head was on Jason's shoulder, biting his flesh, as the tremors of her orgasm washed over her. The hot cum from Jason, mixed with her own, ran back down his shaft as it persisted in pumping into her quivering pussy. \n\nThe pounding of the shower water on the floor and Jason's and Pam heavy breathing was the only two sounds remaining. The two recovering, sated sex partners, barely noticed Stef move under the water to finish cleaning off. When she felt somewhat recovered, Pam slid down the wall to align with Jason's cock. She looked up in Jason's eyes with longing.\n\n\"That's it, bitch. Clean that cock like I taught you,\" Stef said from besides Jason. \"Tell her to clean you off good, Jason.\"\n\nJason looked down at Pam. \"You heard her. Clean my dick, whore.\"\n\nPam smiled back and said, \"Yes, sir.\"\n\nJason watched Pam's tongue lick all around the head. His cock was super sensitive but her light touches still felt good. Stef walked over and lightly grabbed his arm. \n\n\"While she's serving your cock, let's talk about tonight's plan.\"\n\n\"Okay,\" Jason responded but kept his eyes on Pam.\n\n\"There's been a slight change in plans. Brooke decided they should get something for giving up their cherries. She insisted you take them to dinner like it's a real date. Is that okay?\"\n\n\"Sure, no problem, but are they going to be pleasant company?\"\n\n\"Hopefully. Marnie is a little mousey like I said, but Brooke is talkative enough for both of them. \"You'll be okay.\"\n\n\"Then what?\"\n\n\"Well, that's another change too. They didn't want to do it in the dorm, so I'm thinking you can do it here or in a hotel but that's more money.\"\n\n\"Stef, I need to fuck them and then leave. If I bring them back here it could turn into an overnight and I have other plans.\"\n\n\"You're quite the stud, aren't you? Well, I'm not sure then how this is going to work.\"\n\n\"What's wrong with the dorm?\"\n\n\"It's a long story, but remember, they aren't roommates first off, and more importantly they don't want everyone knowing.\"\n\n\"Okay,\" Jason said. \"Oh god, Pammy.\"\n\nPam had swallowed Jason's whole cock and had pulled back stretching his softening cock like a worm from its hole. She had him completely clean.\n\n\"Nice,\" Jason praised.\n\n\"Glad to help,\" Pammy said with a smile as she let it pop free. \n\nAs Pam rose to her feet, Stef asked, \"So what are you going to do?\"\n\n\"Not sure. I'll think of something.\"\n\n\"Okay, come by at seven and we'll have them ready.\"\n\n\"Good and thanks,\" Jason said to both of them.\n\nThey finished washing and dried off together. Back in robes for the girls and a towel for Jason, they made their way back to the room. Frat brothers, with other girls in the hall, noticed the threesome exit the bathroom. They got somewhat shocked looks first which quickly changed to smirks from the girls. The guys just waved.\n\nBrad was gone. He'd told Chad to say thanks and he'd see Jason later at practice about three. Mark was up but ready for a shower now too. He said his goodbyes to the girls and exited as the others dressed. Pam and Stef thanked Jason for arrange things again and left after they were ready. \n\n\"What a night,\" Chad said when they were gone.\n\n\"I heard,\" Jason replied.\n\n\"Another wild time. That Pam is one crazy submissive chick and Stef talks her into doing some far out shit. That was awesome, dude. Thanks.\"\n\n\"You're welcome. Did Brad have a good time? Sure looked like he did.\" \n\n\"I'll say. He couldn't get enough of Stef's tits. Can't say I blame him on that score. And Pam, of course, is a total slut. You should have seen all the cum on her face and in her mouth at one point, Jason.\"\n\n\"Sorry I missed that one but you guys sure shocked Sierra with your depraved acts.\"\n\n\"Yeah, sorry. Did you catch up with her when she left?\"\n\n\"Yeah, I drove her back to her dorm but I'll probably never see her again.\"\n\n\"Too bad. She was hot.\"\n\n\"I know,\" Jason fretted the loss. \"God, I got to get some studying in. What're you up to?\"\n\n\"Mark and I were going to get some lunch. We thought you'd come too.\"\n\n\"Shit. I got to study but I'm starved too. You're spending more time with my big brother than I am.\"\n\n\"He's cool with that. We talked about it with Stef. I think he's proud you're such a big man on campus and such a ladies' man. He's like a proud papa or something.\"\n\n\"Yeah. One with huge problems. Did you hear me before? Beth saw me with Sierra. How am I going to explain that one?\"\n\n\"Don't ask me. I'm not the ladies' man,\" Chad mused.\n\n\"Funny. I better call her,\" Jason said, grabbing his cell and sitting at his desk.\n\nHe hit her speed dial but his mind was wrestling with what he would say. He wanted to be honest but couldn't be completely. If he admitted he wanted to deflower Sierra he might lose Beth forever.\n\n\"Hi, Jason,\" Beth said. \"This better be good.\"\n\n\"Beth, I can explain.\"\n\n\"Please do.\"\n\n\"I knew that girl from the infirmary. I nearly knocked her over when I was leaving.\"\n\n\"Yeah.\"\n\n'So far so good,' Jason thought. \"We got to talking and she needed a ride back to fraternity row. I offered to take her. That's it. I didn't do anything with her, Beth.\"\n\n\"Sure.\"\n\n\"Really. I didn't have sex with that woman,\" Jason said, stealing a line from Bill Clinton.\n\n\"I'm sorry but see how paranoid you've made me, Jason.\"\n\n\"I'm so sorry, babe. I don't mean to make you jealous.\"\n\n\"Somehow, you're very good at it, Jason,\" \n\n\"What're you doing now?\"\n\n\"What? Ha...nothing...a little studying.\"\n\n\"How about going to lunch with Mark, Chad, and I?\" Jason asked.\n\n\"Lunch, ha?\"\n\n\"Yeah, can you be ready in twenty minutes?\"\n\n\"I guess so.\"\n\n\"Great...pick you up then,\" Jason hung up before Beth could respond.\n\n\"Whew,\" Jason said aloud.\n\n\"How did it go? Sounded okay,\" Chad asked.\n\n\"I skated through that one,\" Jason admitted.\n\n\"You're pretty smooth.\"\n\n\"Chad, I'm riding a thin edge between survival and total disaster. I can't lose this girl,\" Jason declared.\n\n\"It's simple...stop burning it at both ends with these women,\" Chad suggested.\n\n\"I just can't yet,\" Jason asserted.\n\n\"You're running a huge gamble.\"\n\n\"I know but I just can't stop now,\" Jason stated.\n\n\"Why not?\"\n\n\"I'll explain it soon,\" Jason implored.\n\n\"You'd better because I'm totally confused and I don't even give a shit who you date or fuck for that matter.\"\n\n\"I wish these women felt the same way,\" Jason proclaimed.\n\nThey waited for Mark to dress and they headed off to pick up Beth. She greeted them through the passenger side window when Jason pulled up at her dorm to find her waiting. Mark shifted to the back from the front so Beth could sit with Jason. Once everyone was set, Jason headed off for the diner on Route 1.  \n\nThey chatted about various things like Mark's work, Chad's major, and Jason and Beth's swimming until they arrived at the diner. Inside, the guys all ordered cheeseburger deluxes and Beth a chicken caesar salad. They joked and carried on and laughed about different funny things people said. Everyone, including Beth, had a great time. \n\nBack in the car, they headed back to campus. Jason parked in front of Hill and walked Beth to the door. \n\n\"I had a great time,\" Beth said. \"Those guys are good fun.\"\n\n\"Yeah...they're crazy,\" Jason agreed.\n\n\"Is this it for the weekend?\" Beth asked. \"Will I see you again?\"\n\n\"I still got a lot to do,\" Jason professed.\n\n\"Well, thanks for lunch. I'd love to see you again before Monday.\"\n\n\"I'll try, Beth. Really.\"\n\n\"Bye, Jason,\" Beth said kissing him passionately so the others could see before she went inside.\n\n\"God, she's a beauty,\" Mark said when Jason was back in the car. He was back up front.\n\n\"I know.\"\n\n\"You're a fool if you blow that, Jason,\" Chad commented from the back.\n\nJason just looked at Mark and the look in his eyes said it all. \"I agree,\" Jason lamented.\n\nBack at the dorm, Jason tried to study but he couldn't. His thoughts kept trying to solve the dilemma of what to do that evening with the two virgins, Marnie and Brooke. He had decided to take them into town for a nice expensive dinner. They were right. If they were both going to give him their cherries, a good dinner was the least he could do. He couldn't quite decide on where to go from there though. \n\nMark was watching TV and Chad was trying to study too. Jason decided to ask for other opinions.\n\n\"Hey, what do you guys think I should do with this situation? He described to them the basic plan.\n\n\"Hotel,\" Mark said. \"Definitely.\"\n\n\"Yeah, that seems best,\" Chad agreed.\n\n\"I was thinking so too but how do I get them up and back to campus after? I can't stay all evening. I got too much to do on Sunday.\"\n\n\"Simply tell them you're leaving. If they want a ride it's now,\" Mark said callously.\n\n\"Tell me which hotel and I'll come over and fuck them for you after that,\" Chad joked aloud. \"Mark can help. He's got a car.\"\n\n\"You guys are worse than me, but it might just work,\" Jason said laughing.\n\n\"Works for me,\" Mark added gleefully.\n\n\"Okay...okay,\" Jason replied dismissively.\n\nJason studied a little more, getting a little accomplished. He left just before three to meet Brad for some practice. They worked out for nearly an hour before hitting the showers.  As they dressed, Brad brought up the night before.\n\n\"Hey, thanks for yesterday. You were right, that was the wildest night of my life by far,\" Brad admitted.\n\n\"Yeah, you guys sure shocked Sierra with your debauchery.\"\n\n\"I'm really sorry about that. It's just that Pam is one wild chick. She listens to everything Stephanie says and Stef doesn't mind whoring her roommate out. She's also one hot fuck too. Those tits are fantastic.\"\n\n\"I knew you'd have fun. A life experience anyway.\"\n\n\"I'll say!\" Brad espoused. \"I'll probably not get too many more occasions like that for unabashed sex with two hot chicks at once.\"\n\n\"Glad to help out. Now, if I could just repair my broken image with Sierra.\"\n\n\"Why bother? You've got that gorgeous redhead and Stef and Pammy any time you feel even hornier. I wouldn't worry about Sierra.\"\n\n\"True, but she was hot.\"\n\n\"True enough. But you're nuts to jeopardize Beth. Doesn't she please you sexually?\"\n\n\"Oh, yeah. It's hard to explain right now,\" Jason said.\n\nThey parted company and Jason had some time to kill before picking up Brooke and Marnie, so he spent it with Mark playing ping pong at the frat. They got in two games before he had to take a quick shower and leave. \n\nThe agreement was for him to meet the women at Stef and Pam's. He got there just before seven like they planned. Pam answered the door. \n\n\"Hi, Jason,\" Pammy cooed. \"Come on in. They should be here any minute.\"\n\nUpon entering, Jason saw Stephanie look up as she studied at her desk. \"So the stud comes to score two more virgins.\"\n\nThey all laughed and Jason quipped, \"Thanks to you two, madams.\"\n\n\"We're like your pimps,\" Stef declared with a laugh.\n\n\"Good ones too.\"\n\n\"Yeah, and all we take in payment is orgies with your friends,\" Stephanie added with a smile.\n\n\"Oh, Jason. I'm sorry our behavior scared away your date earlier,\" Pammy said.\n\n\"Not your fault, Pammy. I was stupid to bring her there in the first place,\" Jason admitted.\n\n\"She was just a prude about it anyway,\" Stef commented, obviously not liking Sierra too much given her reaction to her blowing Mark when they entered.\n\n\"Possibly,\" Jason agreed. \n\nA knock at the door ended the conversation and Pam went to get it. Brooke entered first from the description Jason had from Pam and Stef of the two. One look at Marnie, following Brooke in, confirmed she was nervous and basically shy. She almost seemed to be hiding behind Brooke as they exchanged introductions with the help of Pam. Jason felt awkward with the situation and the others did too. Pam and Stef helped keep it lighter by asking Jason what he planned.\n\n\"We're going to dinner downtown at the new French restaurant that opened last month. Then from there I have hotel reservations at the Marriott.\"\n\n\"Great,\" stated Brooke, who seemed less nervous at the prospect of the hotel.\n\nJason exchanged glances at the two women. Brooke's smile was strong and confident looking, while Marnie's was strained. He tried not to check them out too much which might make them both more nervous but he couldn't help it. Brooke did indeed have ample looking breasts as Pam and Stef had said. Her tight shirt and lower neckline suggested she knew how to emphasize that fact with cleavage. Both were thin but Marnie was very thin. Jason had to admit to himself, he probably won't have given either of these two women much of a second look if he ran into them on campus. Maybe at Brooke's tits but neither was what you would call attractive. Plain would have been a good way to describe them, especially Marnie. \n\nWith the introductions over, Jason led the way out of the room to encouragement from Pam and Stef to Brooke and Marnie. He guided them to where his car was park. It was no surprise when Brooke took the passenger seat and Marnie sat in back. He tried to make small talk with them and fortunately Brooke even took the lead. It didn't take long into the drive to the restaurant to realize Brooke was a talker. She got right into explaining her decision to have sex with him. \n\nThey were seated at the restaurant before Brooke finished the history of her love life, as if it was a natural thing to discuss with a near stranger. She's had two boyfriends in high school. One never got to the point of sexual, but she had gone out with her senior prom date a few times before they actually went to the prom. She had pretty much planned on have sex with him that night at the hotel a group of them stayed at afterwards. It never worked out though, as her date drank too much in the limo, and passed out after she gave him head in the room. She was so mad, she left in the morning before he woke, and never dated him again. She didn't like him enough for a long term relationship anyway, but regretted coming to college a virgin and planned to change that quickly. \n\nJason listened intently to Brooke's story and found himself liking her open attitude and quick smile. Marnie had hardly said a word since they left the dorm. They ordered and the girls were very impressed with the food and service in the French restaurant. The meal turned out to be seven courses and Jason dropped over three hundred dollars from the expense account without even any liquor served. The meal took nearly two hours but Brooke talked so much Jason felt like he knew her for years by the time they finished. The drive to the hotel brought back a little awkwardness but only lasted five minutes as it was close to the restaurant. \n\nJason checked in and got a strange, knowing look from the young woman behind the counter. She obviously saw through the situation or thought she did. Jason wondered how often a man checked in with two women that showed little sign of being related to him. He was blonde with light eyes and they were both brunette and brown eyed. Not likely brother and sisters to be sharing a room. \n\nThey headed to the elevator with Brooke commenting on the hotel and Marnie trailing behind. Jason wondered if he would even get to know Marnie much before popping her cherry. She had said less than twenty words he reasoned since they had met. Meanwhile, Brooke seemed to be gaining confidence as they unlocked the door and entered the room. Jason wasn't sure but had opted for one king-sized bed. That probably added to the look from the desk clerk.\n\n\"Nice,\" Brook yelled and dropped her large handbag on the desk and jump on the big pillow covered bed. \n\nThe room was on the top floor of the hotel on the concierge level where the rooms were oversized and ungraded in amenities. The bathroom was huge and had both a large stall shower and a large Jacuzzi. \n\n\"Yes,\" added Marnie as she watched her friend sprawling unladylike on the bed. \n\n\"Glad you like it,\" Jason said, musing over Brooke's reaction as she kicked off her shoes. \n\n\"I'm going to use the bathroom,\" Marnie said, setting her equally large pocketbook down. \n\nJason watched her disappear into the bathroom before dropping the card key on the desk and kicking his own shoes off. \n\n\"Come here,\" Brooke said, smiling and curling her finger invitingly at him. \n\nJason smiled back and approached the bed. Brooke sat up as he neared, her panted legs crossed Indian style on the bed. \n\n\"She's probably not going to go through with it, Jason. She confessed to me big doubts earlier today. I had to convince her to even come and that she couldn't bag out on me now. I think she feels she's only here as moral support to me. I hope that doesn't make a difference to you. I promise I'll try whatever you want,\" Brooke proclaimed.",
        "\"Really,\" Jason replied with some disappointment evident.\n\n\"I'm sorry. Don't be mad, please. I know you paid a lot for dinner and everything, so it's not fair to you that it's only me. Maybe she'll change her mind.\"\n\n\"Hopefully,\" Jason agreed, not wanting to lose this opportunity for another cherry without some fight. \n\nHe wanted to end this contest quickly for the sake of his relationship with Beth. At the same time he felt a little guilt. Previous to this contest, he never would have been the type to push himself on anyone. Besides, he'd never had to and it was a little beneath his ego to push a woman he wasn't even crazy about in the first place. \n\n\"I'll try to make it up to you. I know something of sexual disappointment like I told you with my prom date. I thought about how we could start unless you have your own plans,\" Brooke proposed.\n\n\"No, we can go with your plan,\" Jason said, a little taken back she had planned it out.\n\nAt that moment Marnie emerged from the bathroom and Brooke bound off the bed. She grabbed her purse and moved toward the bathroom.\n\n\"I'll be right back,\" she indicated.\n\nJason turned back to Marnie and she looked at him sheepishly from beside the bed. He smiled at her hoping to relieve some tension but it didn't work for Marnie. \n\n\"You okay?\" Jason asked. \n\n\"Jason... I'm not really comfortable with this whole thing like Brooke. I don't feel as compelled to give up my virginity. I'm not as bothered by it as Brooke.\"\n\n\"Why did you tell Stef and Pam you would then?\"\n\n\"Well, they all encouraged me to do it. We were just talking one day and it sounded intriguing to me, especially when Brooke was so totally for it.\"\n\n\"What's happened since?\"\n\n\"I don't know. I guess somewhat the reality has set in of what Brooke and you are about to do. I'm not sure I'm ready.\"\n\n\"Marnie, only you can answer that for yourself. I can tell you, I have been with many women considering the same move as you, and when it was all said and done, they were very happy. Look at Stephanie and Pam,\" Jason added.\n\n\"I know...they're very compelling. That is how I got myself into this situation but I'm still not sure about it.\"\n\n\"What do you intend to do then?\" Jason queried.\n\n\"I'll leave if you want me to,\" Marnie offered.\n\n\"No, why don't you stay and watch. Maybe seeing Brooke and me will change things for you.\"\n\n\"Won't it bother you to have me here?\" Marnie questioned.\n\n\"No...And I think it will be good for you.\"\n\n\"Okay. I'll just sit over there,\" Marnie proposed, pointing to a soft sitting chair by a coffee table.\n\n\"Fine,\" Jason responded with a smile. \n\nJason put the TV on a music channel just as Brooke emerged from the bathroom. She had on red lacy lingerie that was quite sheer. Her shoulder length hair was combed out to hang straight down. She had on bright matching lipstick along with red nail polish on her fingers and toes. She looked quite sexy.\n\n\"Wow!\" Jason exclaimed.\n\n\"You like it?\" Brooke inquired with a sweet smile. \n\n\"Absolutely! You look stunning.\"\n\nIf there was one thing Jason had learned about women, compliments were always well received, especially when they were hoped for. In this case, fibbing wasn't necessary. She did look great.\n\n\"Thanks...sit on the bed,\" Brooke posed.\n\n\"Okay,\" Jason responded and did so.\n\nBrooke glanced at Marnie for a second but then started undoing the clasp at the top of the outer garment. She took her time and allowed the lacy top to slide down off her shoulders and off her arms before tossing it onto the desk. She now stood before them in the same color red bra and thong. The frilly bra looked a size to small and her boobs threatened to either burst through or out of the top. It was sheer enough that the outline of the bottom of her barely covered nipples could clearly be seen. The thong also gave away a strip of her brown hair just behind the small triangle of material barely covering her sex.\n\n\"Wow!\" Jason declared.\n\n\"You like?\"\n\n\"Very nice,\" Jason continued.\n\n\"Nice,\" Marnie said too. \"You want me to wait in the bathroom.\"\n\nBrooke thought for a second but surprised Jason and Marnie by saying no. Marnie could stay if she wanted. She said something about the original plan which Jason didn't get but didn't care either as he looked at the near naked creature before him.\n\nJason took a few moments to further check Brooke out. Here tits were her most striking feature but her pouty lips weren't bad either. Her tummy was flat, but lack the ripped definition of Beth. Her legs were shapely but a little too thin. Overall though, she wasn't bad and he suddenly felt his cock begin to enjoy the show.  Her face was even cuter framed by her brown hair. \n\nBrooke's smile filled the whole room. She seemed to enjoy being the center of attention. She smiled directly at Jason as she reached behind her back to unclasp her bra.\n\n\"Wait,\" Jason shouted, startling both Brooke and Marnie with shocked looks. \"Come here.\"\n\nBrooke hesitated a second, but then got his suggestion, and smiled again as she closed the gap to the bed before him. Her nice breasts were even with Jason's face as she reached him. She stopped only inches away. Jason looked into her eyes as his hands touched her outer legs on both sides. He nearly laughed as he watched the previously confident smile on Brooke quiver as he ran his hands softly up her sides. He reached the clasp in the back and unhooked the first one. He looked deeply into Brooke's eyes as the other two came loose. The bra now hung loosely over her tits.\n\nJason continued to look directly at Brooke's face as his hands reached higher to drop the straps from her shoulders. He loved the worried look on Brooke; as if nervous he wouldn't like her tits. That was ridiculous Jason discovered, as the straps dropped to her elbows, the bra sagged to her belly. Jason couldn't wait any longer either and looked down to her breasts. He was greeted visually by two of the best he had ever seen. They were like half softballs with aureoles of pinkish brown. Her nipples were slightly pinker and looked like oversized erasers that stuck out practically an inch.\n\n\"Beautiful,\" Jason lauded.\n\n\"Really?\" Brooke questioned.\n\nHer prior boyfriend had liked her tits, but hadn't been much on compliments. The way Jason praised them and looked at them made Brooke's pussy throb. She shifted a bit uneasy for fear she would soak the thong before they even got to it. The look of desire in Jason's eyes as he persisted in looking at her boobs gave Brooke an intense hot rush. \n\n\"Incredible,\" Jason added praise.\n\nComing back to earth for a second, Brooke said, \"Come on... you've probably seen dozens of breasts.\"\n\n\"Virtually none as good as these,\" Jason replied. \n\n'Virtually none...well that wasn't the absolute best ever,' she reasoned, but she was pleased with it all-the-same. \"Thanks.\"\n\nJason didn't bother to wait for an invitation or ask for approval, his hands moved towards the firm globes likes moths to the light. He kneaded the soft smooth flesh and felt the turgid nipples poking his palms. \"These are two beauties,\" Jason exclaimed.\n\nThey both heard Marnie shift a little in her chair, bringing them both back to reality. 'Poor Marnie,' Jason thought. 'She must feel a bit inadequate in the boob department sitting there.'  \n\nJason pulled Brooke from behind her knees closer and sucked first one nipple then the other. He flicked his tongue repeatedly over the nipples causing Brooke to moan and lightly hold his head to her tit. Jason's hands rose to palm her firm ass cheeks before seeking the string at the top of the thong. He hesitated only a second before pulling down. The garment came away and quickly plunged to her feet. Brooke sighed when Jason's mouth left her nipple. She stepped out of the thong as Jason's eyes fell to take in the rest of Brooke's charms.\n\nHe had been right and a small inch wide strip of fine hair extended from the top of her slit about three inches up. Jason examined her for a second before his right hand grazed across and through the thin soft tuff of hair. Brooke shifted slightly at his touch but didn't move. Her pussy was throbbing now. The thought occurred to her if he were to touch her clit right now, she'd probably cum just from that while standing up. \n\nJason pulled Brooke to sit by him on the bed. She did and they kissed. He kissed her like she had never been kissed before. His fingers teased a nipple as he pushed his tongue into her mouth to find hers. He kissed her until they both had to break for air. \n\n\"Oh, god,\" Brooke gasped when they parted lips momentarily.\n\n\"Nice,\" Jason said.\n\n\"What?\" Brooke questioned.\n\n\"You're a good kisser,\" Jason flattered.\n\n\"I am,\" Brooke replied, beaming.\n\n\"Sure,\" Jason said and kissed her again.\n\nBrooke returned the kiss passionately and gasped into Jason's mouth as his hand traveled the inside of her leg. Her skin was smooth and soft, no sign of razor stubble from shaving. His fingers caressed the skin at the crease of her leg and brushed close to her pussy. Brooke moaned into his kiss and her tongue became the aggressor.\n\nJason eased Brooke back on the bed and pushed her legs further apart. She let him mold her the way he wanted. He sucked again on her incredible nipples and lashed the sensitive nubs with his tongue. Brooke held his head to her as his fingers joined in on the assault of her body. Her old boyfriend had fingered her once but clumsily. Jason's experienced touch drove Brooke mad with lust. His fingers probed along her gash, picking up her own wetness as they went, and using it to ease access to her core.\n\n\"Oh, geez,\" Brooke growled.\n\nThe light touch of Jason's finger up through her labia and over her excited clit nearly triggered Brooke to cum. She groaned and arched her back off the bed. She was more turned on than she had ever been in her life. 'This was definitely a good idea,' Brooke mused to herself. 'Jason is pushing all my buttons just right.' \n\nBrooke reveled in the feelings Jason provided to her body. She was so into the wonderful feelings, she barely noticed him slipping to the floor. It wasn't until he pushed her legs further apart that she noticed the change and looked down.  He was looking right at her, smiling as he held apart her legs. \n\n\"What're you going...\"\n\n\"Shh...just lie back,\" Jason entreated.\n\nBrooke lay her head back on the bed far enough for her to see behind her. Marnie was sitting there watching intently.\n\n\"Go get changed,\" Brooke encouraged. \"You'll love it.\"\n\nMarnie didn't answer or move. She just looked on deep in thought. Jason and she exchanged glances after Brooke looked back towards him. He could see the conflict in Marnie's eyes as they met.\n\nJason looked down to get his first close up examination of Brooke's pussy. Her lips were flared and moist. He could see her little clit peeking out from her hood and it looked so inviting. He decided to see just what Brooke could take and lowered his mouth right to the tiny knob. His tongue flicked across the surface of her sex, right on her clit, and Brooke howled like she'd been tazored. \n\n\"Oh, shit!\"\n\nHappy with her response, Jason sucked the little bud into his mouth causing Brooke to stiffen. He applied some pressure with his lips and teased his tongue aggressively onto the trapped morsel.\n\n\"Oh, god,\" Brooke gasped and arched off the bed.\n\nHer hands pushed his face into her cunt as her first orgasm raked her body like a wildfire. Tremors of pleasure coursed across her skin. She had never cum this good even with the vibrating clit toy her friend had given her as a graduation gift. Brooke didn't even know what it was the first time she saw it but since had used it faithfully to get herself off. Jason's mouth though, felt ten times better than her toy. It seemed to last forever but eventually, Brooke crashed back to the bed with her chest heaving.   \n\n\"Mmm...Jason,\" Brooke moaned. \"God, that was great.\"\n\nJason moved away from her clit. He just licked the nectar from her oozing slit as he waited for her to recover. She had a sweet pussy and he wanted to get her off once more before moving on. When he thought she was ready, he pulled her labia further apart, and bore his tongue against her hole. \n\n\"Holy shit!\" Brooke wailed. \n\nEncouraged, Jason attacked Brooke's pussy using his fingers and mouth to give her unbelievable bliss. Brooke just rolled her head from side to side with her eyes closed. Neither of them noticed Marnie quietly grab her bag and go into the bathroom. \n\nUsing his tongue like a battering ram, Jason probed as deeply as he could get into Brooke's vagina. The root of his tongue started to ache from the unnatural act of being forced outward into something. The tip of his tongue touched the object of his cock's desire. She was indeed intact. Brooke just continued to press his face to her cunt and groan. \n\nBack at her clit, Jason drove Brooke to the edge of her climax once again. His fingers probed her opening but not too hard. He didn't want his fingers to do what his cock ached for in his pants. Jason needed to make Brooke cum soon, if for no other reason than to free his cramped cock. He felt fully hard, yet still trapped in his pants. \n\nHe didn't have long to wait as Brooke again stiffened on the bed and pushed his face harder into her cunt. Jason's teasing tongue pushed Brooke to beyond the brink as her pleasure skyrocketed. She trembled as the first exquisite waves consumed her and she bucked off the bed. If possible, this one was even better than the last.\n\n\"Oh, fuck!\" Brooke shrieked. \n\nOnce again, Jason tasted her syrupy goodness. He licked her from just below her cunt, to brush over her clit, and back down. Brooke seemed to cum forever. He could barely breath she held him so tight to her wet pussy. His nose tickled from the constant rubbing against her little strip of hair on top.\n\nFinally, Brooke crashed back to the bed. Jason looked up between licks to see the satisfied and drained look on her face as her orgasm slowly ebbed. He cleaned her a moment more before climbing up on the bed besides her. He smiled at her and wiped his mouth with the back of his hand. Brooke smiled back weakly.\n\n\"Jason, that was incredible. I don't think I can move.\"\n\n\"Just lay there a second,\" Jason informed.\n\nHe lay back on the bed to find his cock tenting the material of his pants. He quickly undid his belt and freed the button. He peeled off his pants and boxers in one quick move. His proud cock was glad to be free. Pre-cum coated the head already. \n\n\"Holy shit,\" Jason heard Brooke gasp. \"Wow...you're big.\"\n\n\"Thanks,\" Jason replied and rolled back towards her. \n\n\"Is this going to fit,\" Brooke questioned with worry as her hand reached for it. \n\n\"It has so far,\" Jason explained.\n\n\"Yeah, but will it hurt?\"\n\n\"It might, but I'll try to minimize it,\" Jason claimed.\n\nBrooke's hand wrapped around his big cock and pumped it. She stared at it as if enthralled. \n\n\"Geez...you're so much bigger than my boyfriend was,\" Brooke offered with a hint of concern.\n\n\"Don't worry, Brooke. Are you safe or do I need protection?\"\n\n\"I'm not protected. Do you have to cum inside me?\"\n\n\"No, I can pull out.\"\n\n\"Okay...let's do that. I want to feel the real thing the first time if possible\"\n\n\"You ready?\"\n\n\"Yes...let's go,\" Brooke encouraged.\n\nJason was about to move when the bathroom door opened and Marnie stepped out. She had changed into a white teddy similar to Brooke's red one. She looked like a thinner version of Brooke with much less on top. Her hair was brushed down like Brooke's and her nails were done in white to match her lingerie. Her lips were pink bringing some color to a good area for Marnie. Jason and Brooke watched her exit the bathroom but Marnie's gaze quickly focused on Jason's stiff cock. \n\n\"Nice,\" Jason said finally breaking the silence.\n\n\"Pretty, Marnie,\" Brooke added.\n\nMarnie stood transfixed in the doorway but did manage to gasp out thanks. Jason and Brooke watched her a moment longer but then Jason shifted to position over Brooke. He barely noticed Marnie move behind him. Jason ran his stiff cock up and down Brooke's slit making her groan. He wet the head thoroughly with her moist sex. He leaned down and started kissing Brooke like he had done many times before in this situation. He tried to distract her from the fact he was lining up for penetration. \n\nJason found the opening in her pussy and positioned himself for entry. He persisted in kissing Brooke until she moaned into his mouth. As he did, he slowly increased the pressure with his hips against her vaginal opening. The orifice opened marginally and her barrier stretch with the constant pressure. \n\nJason leaned to one side to support himself while still kissing Broke passionately. All thoughts of Marnie escaped either one of them in the heat of the moment. His right hand freed, it came up to caress and pull on her distended nipple. Brooke groaned with the various attacks to her most sensitive spots.  Jason added more pressure. He could practically feel the hymen stretching back and out of the way this time. He held off any violent thrust and instead pressed on.\n\nBrooke tensed as the pressure in her groin mounted. His dick felt huge as it forced open the entrance to her pussy. She tried to forget what was happening below to concentrate on his incredible kisses and the delicious feelings in her left nipple. However, the pressure at her vulnerable core seemed to be building. It distracted her from all else.\n\nMore force and Jason felt himself slide in a little. Brooke's louder groan confirm the fact that he was definitely inside her now. A little more power and he felt several inches bore inside her.\n\n\"Oh, fuck...you're huge,\" Brooke gasped.\n\n\"You okay?\" Jason asked. \n\n\"Yeah.\"\n\n\"I think the worst is over already,\" Jason confirmed.\n\n\"Really?\" Brooke questioned.\n\n\"Yeah.\"\n\n\"That wasn't so bad,\" Brooke stated.\n\n\"It's about to get much better,\" Jason asserted.\n\n\"Great.\"\n\nJason pushed more and Brooke moaned as another inch spread her insides, giving her unbelievable new sensations and thrills. Jason worked deeper slowly, allowing her to adjust to the new feeling of being stuffed with cock. Brooke was super tight but offered little resistance as Jason probed deeper into her body.  She held his sides and groaned with the exquisite feeling. \n\n\"Oh, god...you feel enormous inside me, Jason. I love it.\"\n\n\"You're incredibly tight around my cock too, Brooke.\"\n\nShe gave him a strained smile as he pushed deeper. He had over half his cock inside her now and pushed for more. Her pussy stretched taut around his cock but offered less resistance. Jason gave one more health push before he felt her cervical opening. He stopped there even though he had more dick to give. Brooke's grunt with the last thrust confirmed he shouldn't try to give her more now. \n\nHe held still inside her for a few seconds. He kissed her mouth, neck, and tits as he waited for her to adjust to the fullness of his cock. Satisfied she was ready to continue, Jason pulled slowly back. He left just the head inside her before pushing back deep.\n\n\"Oh, geez,\" Brooke moaned. \"That's it. Fuck me, Jason. Oh, I've wanted this for so long.\"\n\n\"Get ready for the pleasure ride,\" Jason said joking.\n\n\"I'm ready, big boy.\"\n\nTaking his time, Jason worked Brooke from slow penetration to bold thrusts. She climbed the ladder of bliss quickly and held his sides in a near death grip as he fucked her. It wasn't long before she learned to match his thrusts with those of her own naturally. Jason knew he had her close but he could also feel the familiar grumbling deep in his nuts as his own pleasure soared. Her exquisitely tight and moist pussy squeezed him beautifully. She wasn't a beauty. Not like Beth, or Sheila, or even Lana had been. Claire and Stef had nicer tits, but Jason could tell this girl would be a wild fuck for some guy lucky enough to get in this pussy. She had a body meant for fucking.",
        "His cock stroked strongly into Brooke now and she seemed to love ever second of it as her pleasure rose. His too was coming on hard but he wanted to make her cum first. She had to cum before he finished with her and pulled out. He wanted to give her a taste of the pleasure she could feel from a man's dick inside her. A few more thrusts and he knew she was close.\n\n\"Urgh...yes...yes...my god...oh, Jason...,\" Brooke shouted, \"It's so good.\"\n\nSpurred on by Brooke's words, Jason threw his big cock into her with increased speed. By her trying to arch off the bed and match his thrusts, Jason knew she was almost there. Breathing hard now, he kept up the assault on her newly opened pussy. His balls were churning with his own need as they banged against her ass on each stroke.\n\n\"Ahh!\" Brooke yelled as her orgasm consumed her.\n\nBrooke was pleased with the pleasure Jason had given her with his tongue, but that was no comparison to the shockwaves of ecstasy coursing through her body now. She froze up as the pleasure radiated from her pussy to the other parts of her body. Her brain and nipples seemed to take the most of it and her hands grasped her breasts roughly to address the wonderful feelings there. \n\nJason kept fucking her as sweat beaded on his forehead. A sheen of moisture covered both their bodies as they continued fucking.  Brooke came for what seemed forever. Her body thrilled at the newfound sensations coursing through it. She had barely recovered from her first orgasm when Jason's constant cock driving pushed her quickly along again. Brooke had never had multiple orgasms or two so close together. Her brain tried hard to understand exactly what was happening to her as she neared another.  \n\n\"Oh, fuck!\" she shouted.\n\nJason was like a machine now, fucking Brooke with reckless abandon. His dick felt like iron as it probed her depths. Her wet pussy filled the room with squishy liquid noises. She couldn't believe she was cumming again, but cum she did.\n\n\"Mmmm,\" Brooke moaned as her peak hit again.\n\nHer pussy muscles clamped down on Jason's cock making it hard for him to persist in fucking her. He was so close and needed to finish. He tried desperately to push into her spasming cunt. When she finally finished cumming and her pussy relaxed, he continued pumping into her. It only took a few more strokes and he ripped his cock from her cunt.\n\n\"Fuck!\" Jason roared as his cock unleashed rope after rope of cum between Brooke's breasts. \n\nIt hit high enough at first to splash her chin, and then trailing down in pulse after pulse until it just dribbled onto her narrow strip of pubic hair. She was copiously coated in cum from chin to pussy. It didn't matter to Brooke though. She had watched him cum after her orgasm, but then collapsed on the bed panting with her eyes closed. Jason breathed heavily over her before collapsing himself to one side. He rolled to his back besides Brooke but before he closed his eyes in exhaustion, he noticed Marnie standing there, beside the bed. She had obviously watched intently the whole time Jason had fucked Brooke. "
    ],
    "authorname": "BlewWater69",
    "tags": [
        "virgin",
        "frat",
        "blowjob",
        "anal",
        "cum covered"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/the-cherry-poppers-ch-23"
}