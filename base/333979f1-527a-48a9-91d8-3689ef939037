{
    "title": "Mr. and Mrs. Bohaven Ch. 02",
    "pages": [
        "Tate and Molly had smiles plastered across their faces that they couldn't have wiped off if they tried. \n\nThey kept staring over at each other happily as their car cruised along the semi-busy desert highway, weaving in and out of rolling boulders and hills. The Bluetooth radio pumped a primer in relaxation. \n\nThey'd earned it. Everyone had. The Coronavirus vaccine had been fully administered to the public at large and reports seemed to indicate that the worst was far behind them. \n\nNaturally, people were looking to celebrate, and Molly and Tate had some serious lost time to make up for. \n\n\"Ya know...I thought the first time you made out with me with cum still in your mouth was the hottest thing ever...but I gotta be honest babe, right now, being on vacation without a mask in sight, might literally be the greatest physical experience of my life. I'm having constant micro-orgasms.\" Tate beamed at his young bombshell of a wife. Her pale yellow sundress rode up her tan legs and she just allowed it to happen. The put the sunroof of their Jeep down and enjoyed the warm air flowing in on their skin. \n\n\"Oh my GOD! I KNOW! I think we should seriously see if we can snag one of the bonfires tonight and we can burn the ones we have in the car in effigy.\" \n\n\"That is an absolutely CAPITAL idea!\" Tate said, effecting a so-so British accent as he smiled widely. \n\n\"Is it British orrrr...Australian?\" She laughed at her goofy, handsome husband. He seemed more carefree than he had in months. They both did, obviously. Life had been paused right after their honeymoon, and they'd had to put their lifetime of fun on a brief hold. \n\nBut now there were no masks and no industrial strength hand washing stations and no 24/7 news cycles of how many people had died that day; or who was right and who was wrong. It was just peaceful. \n\nIt felt like springtime, even though it was the beginning of summer. \n\nAnd nothing could've felt more like summertime then the way they felt right at that moment-beats bouncing through the SUV as the 90 degree sun shown down on them. \n\nMolly raised her hands and cheered as the sign came into view: \n\n\"PALM SPRINGS,\" it read in gleaming, Art Deco silver. \n\nTate turned up the volume even louder as Lizzo welcomed them both back into the official world of leisure. \n\n\"I AM. SO. FUCKING. EXCITED. TO. BE. BACK. HERE. WITH. YOU!\" Tate excitedly yelled to her. \n\n\"KELLLLLLLY CLARKSONNNNN!\" She screamed back. And they both cracked up like teenagers again. \n\nFun was officially back. \n\nPalm Springs had all the quirky charm that was no longer available in Las Vegas and not quite as douchy as San Diego. It was a city that felt almost purposefully satirical-a wild mix of antique shops, the gay community, old Hollywood retirees, and young, partying people in their 20's looking to get progressively drunk by a pool over the course of a very stress-free weekend. There were very few chain hotels. Most the resorts had their own individual brilliance. You could practically identify them by which party drug they most resembled. Or perhaps even more accurately by the type of adult who stayed there. \n\nFive miles later and the car pulled into their preferred house of respite: the Ace Hotel. \n\nIt was like the millenial, cultural dog whistle of the whole town. If you were under the age of 30 and heading to Palm Springs, there were three major resorts you were staying at for vibes, DJ's, photo booths, Jetsons-meets-Vegas-meets-Urban-Outfitters themes, etc. It was desert chic, and almost too corny to be believed-from the photo booth stations and the weekday drag show trivia, to the tall white fire-pits all over the property with rentable Vespa's out in front. The pool was the main attraction, but they also had a second, quieter pool with a more understated vibe, and calmer, quieter waters. On the busiest weekends, a DJ would be providing the two contrasting vibes at each location. Basically, if you were the type of person who enjoyed simply being who you were, it was absolutely perfect. \n\nWhen they parked the car and stepped out, the blanket of desert heat that defined this oasis draped over them like a hug. \n\nWELCOME BACK HUMANS IN SEARCH OFJOY. It said, in a smooth baritone. \n\nThey both stood there for a moment and listened to the vibrating cicadas outside of the famous hotel, another calling card of the property. \n\n\"Is it just me? Or am I in literal heaven right now?\" She asked, completely without irony. \n\n\"Yes...but I think we're also in figurative heaven.\" Tate parried. \n\n\"Is it possible to be in both at once?\" Molly flirtatiously replied. \n\nThey both stared at each other with eyebrows mimicking sass. \n\n\"Wait...we haven't taken any drugs yet, right?\" Tate joked. \n\n\"YET!? WHAT'S TAKING US SO LONG?!\" Molly dramatically intoned. They grabbed their bags and headed to check in, as she squeezed her husband's butt while he put his arm around her. It felt almost more exciting than their honeymoon had. They felt reinvigorated. \n\nThey got all checked in and Molly made sure to bat her eyes at the hotel desk clerk for a room close to the main pool, but he batted for the other team so she quickly nudged Tate up to fill in. He did a valiant job, and soon they were off to set up their room for peak enjoyment capabilities. \n\nThey were staying for three nights. A Friday-through-Sunday fuck-a-thon with all the necessary accouterments. \n\nWhen they got to Room 207 they were thrilled. It appeared that the front deskman had upgraded them to a second floor suite overlooking the heavenly oasis of a pool that spanned the entire middle of the property, below. \n\nThe room had a king sized bed and a long set of couches by the wall with a big shower. the bathroom was hipster sized so it wasn't a ton of space...but you didn't come to Palm Springs to soak in the bath. You came for the pool and the 90 degree weather at night and all the people your age, who were also looking to escape the doldrums of city life...only now it would feel more like a bacchanalia. \n\nThey dumped their bags onto the floor and got their alcohol into the mini fridge. The very second that was done Molly rushed into Tate's arms. They crashed down onto the bed and they clawed at each other like horny college kids again. Molly worked Tate's jeans and boxers off and pulled her panties to the side as she sat up on top of him felt his seven inches sink deeply into her soaking wet pussy. She'd been leaking her juices out in the car for the last half hour thinking about his cock, and now she was finally riding it again, on vacation, with nothing to worry about but relaxing for the next three days. She squeezed him. He felt so good inside her. \n\nThey made out intensely as he sat up to meet her and she wrapped her legs around his back so that they were mirroring each other now. Molly started to grind on him, leaving him all the way in and teasing her g-spot as she maneuvered her brilliant, pelvic muscles to torture Tate's throbbing member. \n\nHe bit her shoulder and told her he was close to cumming and that was all she needed, as she bounced firmly up and down while her first orgasm crested the mountain. Tate exploded deep inside of her and they kissed all the way through it. She bit his lip as he slowly finished, and she could feel his warm spunk between them. \n\nThey kept kissing, staying like that, their bodies taking in the moment. They felt each other's heart beats. \n\nMolly took a deep breath in and smiled at Tate as she ruffled his short hair. They'd both gone and gotten haircuts right before the trip. Tate was a tight fade and trim while Molly had gone medium, straight Scarjo, as her dirty blond strands only fell just below her neck. She had curled it out and she looked sexy as all hell like that. She looked like she was ready for fun. \n\nThat's when she pushed Tate backwards onto the mattress. Molly carefully eased his sticky cock out of her messy pussy and then tantalizingly crawled up the sides of his body, peeling her yellow sundress off and throwing it to the floor. When she got to the sides of her husband's head, she lowered herself onto his mouth. \n\n\"Clean me up dirty boy,\" And Tate fell in love all over again. She squeezed her calves as her incredibly kinky man began to swirl his tongue into her folds, devouring his heavy shot of seed and making sure to slide past her clitoris on each new pass. He spent ten minutes licking his salty spunk from his wife's perfect pussy. Molly loved how he would spread her ass apart to get his tongue even further inside of her. She really had married the perfect sex partner. She grabbed his hair and held him in place as he licked her diligently. \n\nTheir kink for each other was so perfectly matched. \n\nAfter bringing her to the brink of another orgasm, Tate stopped, and pushed Molly off of him, which made her moan in dismay. But he knew exactly what he was doing. They both did. \n\nThe edging game had already started. \n\n\"You wanna finish setting up our room and then we'll get into our suits and go snag some drinks by the pool?\" He asked her. She stretched her body like a happy kitten on the bed and nodded a satisfied yes. She had just cum, on a crazy comfortable, king bed. The room smelled like sex and the desert heat. \n\nThey popped on the AC and Tate began to set up all the drinks and drugs they had brought for the weekend: \n\nTequila. Lagers. Jello shooters. Weed. Edibles. Molly. Poppers. Gatorade. Red Bull. Bags of chips. \n\nThey had thought of everything they were going to need. This had been such a long-time coming. \n\nMolly meanwhile unpacked the suitcase that had been stuffed with of all of their sex toys and naughtier outfits. She placed all the toys on the bedside table next to their bed along with the lube and various other items of physical pleasure. \n\nThey put clothes away and turned the AC to the desired level so that the room would feel like a cool breeze when they stepped in from the heat. \n\nThen they were off to pool. Molly went to the bar to get drinks while Tate scouted two chairs close enough for them to leave sandals and shirts-the universal sign of pool land claims. As Molly was walking back, Tate watched as numerous eyes were drawn to her sultry figure. She was wearing a pink and teal Victoria's Secret two piece that basically made her look like a juicy, summer fruit. The bathing suit amply showed off her incredible ass, that made small semi-circles as she walked slowly with their booze. The getup definitely brought attention to the fact that you could probably tell what kind of a girl she was in bed, and Tate loved that about her. She knew what she wanted. And she always got it. She was the fun girl. And she was his. \n\nTate was wearing a pair of smaller board shorts and Molly similarly loved to see the various guys and girls around the pool who admired her husband's muscular frame and boyish charms when he would walk past. He was effortless. She placed the bucket of lagers and the giant margarita down next to their lounge chairs, and they quickly unfurled towels. \n\nA hot girl wearing a tiny, lime green bikini and simple ponytail, that worked for a tequila company, came by and offered them a free shot, which of course they gladly accepted. Everyone was going all out for this weekend it seemed. \n\nAfter they clinked their chilled shots and licked their salty rims, they downed them while staring at each other in the face, ever challenging one another to who could do the cleaner shot. The girl took their picture and asked for permission to post it on the company's social media pages, which they gladly agreed to. You could post this version of them everywhere if you wanted.\n\n\"Andddd we're OFFICIALLY back.\" Tate said it as the last remaining invisible weights melted from his shoulders. \"Damn that's good.\" He echoed. \n\n\"You could've honestly given me distilled motor oil and I probably would've been happy.\" Molly reasoned, and he agreed with that sentiment. The ambiance was a thousand percent. \n\nTate slipped into the pool first and the cool water cleansed him of those final droplets of pandemic stress. Molly followed right behind him with two cracked beers as she leapt from the side ladder into his arms. She spilled some suds down her chest on the landing and Tate simply leaned down to lick it off as it trickled between her breasts. \n\n\"We do not waste beer in this relationship.\" He stated nobly. \n\n\"Oh, I agree. If I could bend my mouth in that direction, I would've done the same thing.\" \n\n\"If 'that's what she said' was still a thing that people said, I would now say: that's what she said.\" And again they were laughing. They hadn't laughed this much since their first date. Or maybe ever. \n\nHe spun her around on his tip-toes as they nudged just past the five-foot mark of the y-shaped pool. \n\n\"Ahhhhhahhhahhh!\" Molly mimicked the Little Mermaid song as he spun her around, which made a couple of people across the pool chuckle at them now. \n\nShe kissed him and then handed over his beer. \n\nWhen she was firmly in his arms, they paused for a moment to smile at each other from behind their shades. Molly squealed a tiny bit. \n\n\"Oh fuck, I am so happy right now.\" Tate said. \n\n\"Agreed. This is every vibe I've ever needed.\" \n\nThe pool was connected to the hotel's super buzzy hotel bar 'The Amigo Room' which went from craft cocktail lounge to sexy dance lounge later on into the weekend nights. There was also a killer hangover diner from the property's original design and a coffee/bakery combo all lined up back-to-back, just off the hotel's front lobby. They had maintained the 50's architecture and turn-of-the-century art deco elements, while adding in all sorts of modern browns and tans and earthen tones that gave the distinctly Instagrammable motif that people seemed to enjoy so much. \n\nTate and Molly crushed their first beer fairly quickly and now, in the ease of the moment, they began to fall back into their favorite game: \n\nPeople Watching. \n\nThey were leaning up against the side of the pool and cracking their next round when Molly snagged a giant pool noodle that was floating by, and wedged it between her thighs. Both of them had their best over-the-top stunner shades which allowed them to sidle up next to each other and make naughty comments about the various hotties they spotted around the pool. \n\n\"Super tan brunette, three o'clock.\" Tate offered up between sips. Molly's eyes zoomed over to the towel hut, where a girl in a burgundy two piece was grabbing towels. Her body was gorgeous, but there was a little too much pomp and circumstance going on.  \n\n\"Sexy body...but I bet she only makes one sound in bed,\" Molly joked, as she ditched her floatie to stand in front of Tate and lean back into his chest as he did the same against the side of the pool. \n\n\"Totally. Hmmm, what about the guy by the corn-hole game?\" Tate shifted their gaze back over towards the bar area which was surrounded by tables and air-misters and the popular bar game. \n\nMolly immediately got excited as she looked at the guy. He was wearing black shorts and a tank top and his arms had a swimmer's muscularity to them. When he bent over to snag a bag for the next round she also noticed his gorgeous buns. \n\n\"Damn babe, yes. Definitely. I'd bend over for him. What about you? Do you think he's hot?\" She pushed her ass back into his crotch under the water and he pulled her closer. Her soft skin felt even softer under the water. \n\n\"Mmmm, mayyyyybe. If you led me I think I would.\" Tate admitted and he could feel himself getting hard in the water as Molly continued to rub her round buns up against him. They kept the game going. Pointing out various girls and guys and who they would most like to fuck. They compared notes. They rated tattoos and haircuts and lips. They came up with backstories and tried to guess if they were there to relax, or if they were there for similarly devious reasons. Who was hiding secrets. Who was playing hooky. \n\nThey had talked for months about where they were going to pick back up on their sexual bucket list that they'd made on that fateful honeymoon night. Those long quarantine days trapped in their apartment had allowed them to play out all the possible avenues they could choose, when they finally got the chance to explore again. \n\nA threesome had definitely been at the top of their list. As soon as the government announcements had been made and they were able to book their vacation, they made a pact that they'd spend their second night in town looking to invite someone back to their room, but rather than try to set something up ahead of time through the exhausting world of apps...they were simply going to let the flow of the weekend take them. They were ready to flirt. Ready to mingle. Ready to stand close to new people who weren't wearing masks. The modern world had come roaring back.\n\nMolly turned and leaned in to make out with Tate. Now they both knew people would be checking them out. They were arguably one of the hottest couples at the pool and they'd both noticed roaming eyes since they'd gotten in. It was early afternoon and the crowd was starting to get more full and the pool was starting to get more packed and more people were dancing and more people were getting drunk and everyone was happy to turn off the invisible six-foot barrier. \n\nIt felt like everyone was forgetting together. It was marvelous. \n\nThey spent a while longer at the pool before deciding to head back to the room for some afternoon fun and a perfectly rolled joint. \n\nTheir upstairs patio couldn't have been placed at a better spot, because it allowed them a place to let their dank smoke drift away from the room, but also placed them directly above the pool where they could spy the appropriate times to head down and possibly meet people. \n\nThey cracked open some chilled waters and passed the freshly-lit joint back and forth as the DJ changed over to a funkier style. Evening was fast approaching and the music was underscoring the necessary change in mood. It was amazing how much could be accomplished with an evolving bassline. They truly loved this hotel. \n\nTate ordered some munching apps from the hotel bar and then joined Molly in the bathroom as she turned on the shower. They squeezed in together and began to playfully fondle each other. \n\nThey were stoned and in love. They had lazy sex in the hot stream that felt more like a slow dance. Neither of them came. They were just happy. He stayed inside of her as he washed her. She did the same for him. \n\nThey scarfed down their hummus platter and nachos when they arrived, overtipped the room service, and then took a blissful nap to recharge for that evening. It felt good to stretch out on king-sized hotel sheets that they wouldn't have to worry about making or washing. \n\nIt was nice to smell new smells and be somewhere exciting again. They slept like babies for a two glorious hours. \n\nIt was just before eight when they woke up and, magically, as the desert was wont to do, the sun was still setting, casting an apricot glow over the whole resort property-like a photo being slowly exposed. \n\nMolly woke up with her head on Tate's chest. They were both naked. She brought her head up and cuddled into his nook. He tousled her hair and she kissed him. \n\n\"Wanna get all dressed up and go flirt and dance and shit?\" Tate asked her, and Molly got a big grin on her face. \n\n\"Bayyybeeeeee!\" She squealed, in a purposefully exaggerated way. \"What a marvelous thing to wake up to.\" \n\nThey liked having a good time. \n\nTate made them both shots while Molly started to get ready. Just a little makeup and a sexy romper would do for her, while Tate wore shorts and a short-sleeved button up that showed off his arms. He licked lime juice off his thumb as he finished the chilled tequila shooters and poured them into the two hotel water glasses. ",
        "Molly was a dirty-blonde-golden-haired nymph and when she curled her hair out to the side she looked exactly like Charlize Theron from Atomic Blonde. She even did her makeup in a similarly dark, sexy way. \n\n\"God, you will never understand how fucking hot you are, babe.\" Tate moaned as, as he watched her putting the finishing touches on. She winked at him in the mirror and she pursed her lips to finish applying a gloss. \n\n\"Oh honey, yes I do. But especially because you always tell me how beautiful I am. Which I fucking love. It was one of the first things I fell in love with...the way you always built me up.\" She put the iron in the sink and turned around to kiss him tenderly. He squeezed her round ass in the cotton romper which felt thinner than his blood vessels. It was just too sexy not to squeeze every chance he got. \n\n\"Mmmm...I'm gonna give you a really great blowjob tonight,\" she said suddenly determined. And now it was Tate's turn to squirm in excitement. \n\nThey grabbed a keycard and shared chapstick and headed back down to the pool area. \n\nIt was officially nighttime and the pool deck had become the chill, drinking patio that people spilled out onto when they wanted to get away from the much more festive Amigo Room, where the tables had been pushed to the walls in favor of an open dance floor. This wasn't your thousand person club. It was one hundred people next to a killer bar with barely any space to move and all the damn charm that you never got out of the bigger city operations. It was the kind of club you had to be okay with bumping elbows. And everyone finally could. \n\nYou could smell the sweat and the body wash, and the recently consumed breath mints. The scent of suntan creams blotted the air-conditioned air with various levels of SPF rating. And then of course there was the weed. It hung in occasional clouds like the official herb of their return to paradise. \n\n\"Shot and a tequila soda?\" Tate asked for the thousandth time in their bar-hopping relationship. Molly did a happy bounce beside him as she got into the music and they were able to stalk a couple who were just paying out. They slipped right into the newly-exited bar stools and began their journey to getting back to the appropriate levels of vacation tipsy. \n\nSitting at the bar, they immediately loved the groove of the nighttime DJ's lesser known lineup. \n\n\"Goddamn, this is everything I've ever wanted. I feel like I'm in adult Disneyland right now.\" Molly started to bob her head as a suspendered bartender handed over their four drinks, limes on a napkin. \n\n\"Ready babe?\" Tate asked his sultry wife. She took the glass from him and they clinked with intention, before jumping back down one of their absolute favorite rabbit holes: tequila and dancing and foreplay. \n\n\"Mmmm, that was a pretty smooth well,\" she intoned, interlocking her knees with Tate's strong legs. He ran a hand up her smooth skin, freshly-shaven from the night before, and rested it on her upper thigh, which she loved every time he did it. \n\nThere were so many things to look at, but they couldn't help but stare at each other. This giant part of who they were had finally returned and the great anxiety monster that had ruled their life for a year was finally vanquished in a modern feat of scientific engineering. Thanks to a lab in Sweden no less. \n\n\"I'd like to do a toast.\" Tate said suddenly, affecting a proper voice. \n\n\"Oh, yes, yes, of course! Our first toast of the weekend...go ahead my dear,\" she played along cutely. This was a bit they did. \n\n\"I'd like to formerly toast the entire country of Sweden...who's vaccine basically allowed us to be here today and who will indirectly be the reason we get to do amazing drugs tomorrow night and maybe find someone really sexy for us to get naked with.\" \n\n\"Hear! Hear!\" Molly giggled in rapt agreement. \"To show our support...we'll buy a shitty Ikea desk with a bunch of extra screws.\" \n\n\"I'm always a fan of extra screws.\" He corny-smiled back at her, as he leaned in and kissed her icy lips-fresh from another sip. \n\nThey did another cheers with their highballs and gulped their zesty go-to's like they were ready to get things flowing. \n\n\"Speaking of which, how fucking excited are you to roll tomorrow night? This will be our first time since Disney!\" \n\n\"Mmmm, yeah...fuck that was an amazing night.\" Tate looked upward in thought, fondly remembering the warm, fall evening they'd spent walking around the greatest place on earth with their body's two feet off the ground. \n\n\"Do you remember how amazing the Pooh ride was?\" \n\n\"EDC has nothing on neon caves full of Heffalumps and Woozles.\" They both laughed at that. Molly got more quick-witted the more she drank. There were very few girls that could keep up the way she could. Tate loved that about their relationship-the friendly competitiveness that underscored everything. She usually was the one filling in his sentences when he became too intoxicated to maintain decorum. \n\n\"I completely agree. Also...to get back to your question I am SO. FUCKING. EXCITED.\" It's all I could think about at work this week. I'm like...stupidly hyped about it. We're gonna make out all night long. We're gonna take a shower and use all our toys and hopefully have some very naughty fun.\" He rubbed his hand along the inside of her leg to the hem of her high romper short. \n\n\"I know...I'm so excited to connect with you again like that. Also, I'm really excited for us to get back to our super kinky selves. I think we can definitely find someone to have fun with tomorrow and check off our next box on the list.\" They nodded agreement and gave each other a knowing look. They were about as on the same page as two people could be about something. They were ready to be crazy together. \n\n\"So was everyone at your office talking about where they were going on vacation? Because that's all my office could talk about.\" Molly queried. \n\nThe official 'Masks Off Day,' as the public had coined it, had come the day before, and everyone in the country just about, had been making their various plans for where they'd be going. Tate was lucky enough to have a friend that knew a guy who had gotten the info about the mask change policy a little early, and with that info Tate had immediately called the resort to make them a room reservation. It was kismet. They had snagged one of the last rooms. Clearly the word was getting out. Good news traveled fast. \n\nNow here they were, smack dab in the middle of a killer bar with a DJ shaking spinal cords as girls popped asses and everyone danced and shuffled with expressions of release plastered across their face. The Israelites were wandering no more...they were finding themselves (strangely, for the sake of this metaphor, still in the desert). And now they were all wanton Philistines. \n\n\"Sexy tattooed bartender, 10:00,\" Molly said suddenly, referencing the tattoo-covered beauty making drinks at the other end of the bar in the well. \n\n\"Fuckkkk,\" Tate agreed. \n\n\"Double fuck,\" Molly chewed the straw in her drink as she felt a rush of excitement in her shorts. It was exactly the type of girl Molly was into. Exactly the type of girl she'd love to be dominated by. \n\n\"I could definitely see that girl pushing you up against a wall and fingering you while you made out,\" Tate knew what he was doing. Molly had told Tate about her fantasy of playing with a girl in a public setting like that-maybe even being fingered somewhere that people could pass by and see. The idea of being dominated by a girl was something that very much appealed to her. \n\n\"Babbbeeee ughhhh, you're making me wet.\" Molly whined, but not really. She loved getting wet while talking about sex in public. It was a serious kink. Molly had had some experimental lesbian fun in college but it was very fumbly and long before she had settled into her sexual comfort zone. Now she wanted to experience it again in full, both with and without her hot husband. The sky was the limit. \n\n\"Guy, just walked in, black shirt, scruffy hair.\" Tate said, and threw up a peace sign to the passing bartender to indicate another round as the ice pinged to announce it's arrival at the bottom of their glasses. Molly turned demurely toward the door to make it look as if she was just doing an entire scan of the dance floor. A tan-skinned man at the head of a group glided into the room looking like a mysterious Bond character in one of the more alluring Daniel Craig entries. \n\n\"Ya see,\" she said, turning back to Tate in excitement, \"that is the exact kind of guy I think you and I would fucking cum soooo much with,\" and Tate felt his half-hard cock bounce with excitement at that sentence. \n\nThey still didn't know if they'd be hooking up with a girl or a guy for their first threesome together. All they knew is that they weren't going to be deterred. They were at a resort that was 95 percent people 20-30 years old in age, and everyone had the additional buoyancy of a newfound freedom-this should be like taking Woodstock bellbottoms from a liberated Bryn Mawr slut.\n\n\"Wanna do another shot?\" Molly asked with that confident grin, and of course the answer was yes. The bartender was close enough to hear the convo as he dropped off their drinks and immediately whipped up two more tequila's into their tiny, glass, silos of happy. \n\n\"Cheers to the lucky duck who gets to take our threesome cherry tomorrow night,\" she said, and Tate clinked more vigorously than usual as they easily downed their second salvo. \n\n\"This is SUCH a smooth tequila for the well,\" she repeated even more incredulously this time. \n\n\"Mrs. Bohaven...it's not the well. It's the 1942.\" Tate slapped her knees. \n\n\"Well, well, WELL, Mr. Bohaven. I should've known you'd be up to your old shenanigans. I can't believe we're shooting top shelf tequila...I mean...I can, but still...\" \n\n\"It's for a worthy cause I'd say.\" Tate parried. \n\n\"Oh. YES. It most certainly is. I think if we ever deserve to tap into that savings account...it's this weekend.\" \n\n\"I plan to do a lot of tapping this weekend,\" he didn't miss a beat. \n\n\"Oh baby...and maybe you'll be getting tapped.\" She reached further below the bar to squeeze his cock through his shorts as she gave him a coy wink. And now he was hard again. It was very possible he might be experiencing his first real cock soon. The idea was exhilarating. \n\n\"I'm gonna go pee,\" she said suddenly, as she hopped down from the high barstool as her butt swayed in the thin jumper. She was tipsy already and so was Tate, which made them both immensely more flirtatious. He and a few other roaming eyes watched her disappear across the dance floor towards the lobby in her low-cut, high-heeled boots, dancing the whole way and even stopping to groove for a second with a crowd of people who were probably the drunkest group there. \n\nWhile she was gone, Tate was approached by a girl with green eyes and dark, brunette hair. Her soft, white skin was like rose porcelain. She introduced herself to him immediately with an offered hand. The act of shaking hands seemed suddenly more special than it once had. \n\n\"Anyone sitting here?\" She asked cutely. She was wearing a white skirt and an olive green tank top that showed off the most natural set of breasts imaginable. They were so succulent Tate felt like he could fall safely into them from a great height. He averted his eyes quickly, but he was already caught in the act. She didn't seem to mind. She straightened her posture even more to press them out to him. \n\n\"Yeah...my wife actually.\" He said, and he noticed as she started to turn away, already having snagged a refill on her last drink, which may have been her only intent to begin with. \n\n\"That's too bad,\" she started to leave. \n\n\"Butttttt, you should take my chair!\" Tate interjected immediately. \"And I'll stand...my wife would love to meet you I think.\" He said quite confidently. He knew she would, too. \n\n\"Oh really?\" The girl replied in surprise, a pique of curiosity in her voice. \n\n\"Yeah...totally,\" Tate confirmed with his easy smile, and he spotted Molly dancing as she walked back across the floor. He caught her gaze as she approached and she was already tickled at the scene. \"Oh...speaking of which...this is my marvelous wife, Molly.\" \n\n\"Hi! Molly said brightly, as the girl sat back down on Molly's chair and Tate got up so Molly could take his spot. The girls were facing each other, their bare legs almost touching as they extended hands to one another. They were both sizing each other up and each appeared to like what they see. \n\n\"Hi! I'm Sadie.\" She said, with a confidence that Tate recognized in Molly's typical verve. Already the wheels inside his head were spinning with ideas. \n\n\"And I'm Tate,\" he suddenly offered, realizing he'd never said his name. He had a charm that was instantly affable. \n\n\"Well Tate and Molly, it is VERY nice to meet you both,\" and there was a definite sort of naughty in the girls eyes that had captivated them both. \n\n\"I hope my husband wasn't using any lame pick-up lines on you...I tend to be the one with all the game in this relationship.\" She purposefully ribbed. \n\n\"Excuse me??\" Tate playfully protested back. \n\n\"Ugh, ya know, I wasn't going to say anything...but he did ask me if it had hurt...ya know...when I fell from heaven.\" Sadie was obviously joking now, but she was quick and Tate was immediately smitten. Molly mock-gasped at Tate, as she crossed her legs to match Sadie's and their feet bumped gently. \n\n\"I most certainly did not, nor would I ever stoop to such depravity.\" He included the last part on purpose. They both knew it too. \n\n\"Depravity is probably the number one thing on your Tinder account.\" Molly joked, and there was the window. But Sadie wasn't biting just yet. \n\n\"You guys are super cute.\" She said instead. \"What are you doing in Palm Springs? Enjoying the end of the Westeros winter like everyone else?\" \n\n\"No one enjoyed the end of the Westeros winter, first of all.\" Tate started, pretending to push up fake glasses as he took another sip. The girls laughed. \n\n\"Amen to that!\" Sadie proffered. \n\n\"Long live the queen,\" Molly finished in solemn conclusion. And they smacked the bar-top together, like old fishermen agreeing on a rough season. \n\n\"But yes, absolutely. We are here to get back to our heathen ways and not have to worry about making beds all at the same time.\" \n\n\"That is a perfect way to sum up my intentions as well.\" Sadie said, eyeing both of them and taking in the fact that they were both hot and both definitely checking her out. The conversation was ridiculously fun and already suggestive.\n\n\"Are you here with a group or...? Molly asked, purposefully leaving it open. \n\n\"Actually I'm here with my husband, but he's finishing up in the room...he should be down soon I think.\" Tate was surprised to hear that. It had seemed like Sadie was flirting with them...but then, maybe she still was? Which would mean... \n\nMolly shot Tate a raised eyebrow when Sadie turned her head for a moment. \n\nThe thick had plottened. \n\n\"So, Sadie...I'm sorry if this is super forward...\" Molly began, and Tate couldn't believe she was going for it. \"We think you're super sexy.\" And even Molly seemed a little nervous as she said it, even through the fog of alcohol confidence. \n\nSadie immediately smiled the biggest smile and wiggled a little in her seat. \"Oh my GODDD you guys are sooo attractive...I'm so glad you said that just now.\" And now they were all laughing a bit more convivially. \n\n\"Are you guys...\" Sadie started, but Tate stepped in this time. \n\n\"Looking for some kinky fun this weekend? Yes, yes we are.\" \n\nSadie turned to look at Tate as she wrinkled her nose and took another big sip of her drink. \n\n\"This is fucking crazy,\" she smiled at them both. \n\n\"Which part?\" Tate asked again. \n\n\"Well...\" Sadie began, but she was suddenly interrupted by a striking 6'2 guy that looked like he had stepped right off of a Lacrosse calendar shoot. \n\n\"Hey babe,\" he nudged her as she leaned over excitedly and gave him a big kiss. Tate and Molly continued to feel like they were in some weird fantasy. He was gorgeous too. His arms were covered in butterfly tattoos and his short sleeve button-up was barely tucked into his jeans. He was laid back and put together at the same time. He looked like the kind of guy that could go up to just about anyone at a bar and start up a conversation. \n\n\"Baby! There you are! You have to meet my amazing new friends. This is Molly and Tate,\" she motioned to us as he took us in. \"And you guys, THIS is my stupidly good-looking husband, Roger.\" She said with a Price is Right flourish. They were both equal parts sexy and adorable. Roger looked like a Navy fly-boy and Sadie was simply the pin-up girl that had taken a turn for cabaret and sex parties. He had to have been in his late 20's, while Sadie looked to be a few years younger. \n\n\"But you guys can just call me Rog. Honestly...I prefer not to sound like a guy that shops at Brooks Brothers.\" \n\nThey all laughed. Then Tate added in: \"Yes, well, I might own like...one tie from there.\" And now they were really laughing. \n\nThe next ten minutes of their conversation went exactly like this. They vibed immediately. The girls got to know each other and the boys did the same. They eventually circled back around to what they'd previously been talking about when Roger had first walked up. \n\n\"So...wait...I believe Sadie, that you were about to tell me what kinda fun you and Rog were looking for this weekend?\" She teased her drink straw between her teeth and Sadie flushed a little, but did not wilt from the moment. \n\n\"Ahhh, right, well...\" She looked over to Roger, who was now buying another drink for himself to catch up, and he happily gave her a ready nod. \"We wanna seduce another couple back to our room,\" she said firmly. And it was the truth. They really were looking. \n\nMolly looked at Tate and he looked back at her like they were stuck in some sort of ridiculous Twilight Zone episode. This was all too convenient. There had to be a but coming. \n\nBut it never did. They were incredulously horny. \n\n\"You guys are very sexy...and you should know that Tate and I are actually looking for something very similar. We originally said we wanted to have a threesome this weekend...but, I think we'd gladly upgrade that to a foursome if you guys were interested in having some fun.\" \n\nTate loved how forward his wife was. He brought a hand down her bar stool and rubbed her butt through the gap. \n\n\"I think we need more drinks, that's what I think.\" Roger suggested, and soon they were carrying another round of tequila shots and four more cocktails outside to find a table where they could hear each other talk better. They settled on something close enough to still hear the amazing DJ through the large, open windows (the bar was an indoor/outdoor setup), where some people were even dancing outdoors. Nearby, cornhole and ping pong and giant jenga were all underway. There were ten or so stragglers that swam in the warm night pool, and ten more enjoying the spa beyond that. Also dotting the lounge chairs were various lovers and couples and groups of friends not-so-surreptitiously striking up joints and talking about the nature of life as it existed again.  \n\n\"Okay...so I get the feeling our conversation is about to level up...so I'd like to propose a toast,\" Roger started, raising his lime-rimmed tequila shooter up to the group. They were arranged girl-boy-girl-boy, and they all brought their drinks up to join him. \n\n\"I can't believe you guys also do pretentious toasts out of nowhere. Who are you????\" Molly giggled and Tate could see her obvious excitement from having met these new friends. She was digging them both. \n\n\"To meeting new people, and experiencing new things, while drunk in the desert! Cheers!\" He announced. ",
        "\"Cheers!\" They all chimed in, as the clink ushered their appropriate state of giddy blood-alcohol levels. \n\n\"Soooo, are you guys officially in an open relationship?\" Sadie asked now. They weren't going to waste any time. \n\n\"Yes! We totally are!\" Molly interjected after a cute booze burp. \"But we haven't really gotten to act on it yet. We made this sexual bucket list on our honeymoon and that was right before lockdown so...yeah...we've been waiting to go out and have fun again.\" \n\n\"A sexual bucket list? I have soooo many questions.\" Roger said, leaning in and taking a sip from his long-necked beer. \n\n\"Yup! Molly and I are like, kinky soulmates...so while we were on our honeymoon and insanely stoned in our Amsterdam hotel suite, we decided to make a sexual bucket list of all the things we've always wanted to do...but been too afraid to ask the partners we were with cuz they were too vanilla.\" \n\n\"Fuck! That is SO hot,\" Sadie said, and she looked over at Roger to give him a naughty grin. \n\n\"It's funny that you guys bring that up because Sadie and I consider ourselves fairly fucking kinky as well.\" Roger said with a certain level of pride in his voice.\n\n\"Oh reallllly?\" Molly said, leaning in to the center of the table now. \n\n\"Yes. REALLLLLLY,\" he said back with a challenge in his voice. \n\n\"Well the only way to find that out would be to see what you have on your sexual bucket list and compare notes.\" Sadie added. \n\nIt was a stellar idea. They all looked around at each other, taking another big swig of their drinks. \n\n\"Should we maybe do this first?\" Tate had taken out a perfectly rolled and quite large joint from his pocket, not even knowing if they smoked. \n\n\"Oooooh, Tate coming in with the perfectly timed line,\" Roger slapped his back and already Molly was imagining what her husband would look like sucking on Roger's cock. She didn't know this but Sadie was actually pondering the same thing. They just weren't there yet. \n\n\"Wanna go sit over there?\" Sadie motioned to one of the large day-beds that were unoccupied by the glowing, blue pool, illuminated by purple underwater lights. \n\nThey finished up the last of their drinks and grabbed a couple waters from a nearby station, and then headed over to the daybed. This time they sat girl-girl-boy-boy. The dry nighttime, 90 degree heat felt incredible on their skin. \n\nTate struck the blunt with a match and took the first big hit as the weedy smoke filled the star-filled sky above them. \n\n\"Mmmm, I love that smell,\" Sadie grooved as she took the joint to take the next hit. \n\nThen it was Molly's turn, and then finally Roger. \n\nThey passed it around three more times as they smoked their brains into goofy openness. \n\n\"You guys wanna talk about kinky sex?\" Sadie said, as she folded her legs in front of her, causing her skirt to ride up and lightly expose a tiny patch of white panties in the pale light. \n\nThey all laughed and quickly fell into similarly convivial seating positions. \n\n\"Yes, please,\" Molly said, and the boys echoed that sentiment. \n\n\"Okay...sexual bucket list. What's on it?\" Roger asked. \n\nTate and Molly looked at each other, as if wondering who should begin. \n\n\"Well...threesomes obviously. That was our first bucket list item. That's what we came out to Palm Springs to do.\" \n\n\"Two guys-one girl? Or two girls-one guy?\" Sadie asked, very interested in where this was going. \n\n\"Well, we actually wanna try both. We didn't know what type of threesome we were going to have...we are equally interested in both types.\" Tate admitted. \n\n\"We've had both types of threesomes,\" Roger said proudly, and Sadie bounced as she looked at her sexy man, readily offering up their own past sexcapades as they dove further into their convo with this sexy new couple they were clearly courting. Tate was very excited to hear this. \n\n\"Ughhh...that's so hot! I'm so jealous!\" Molly said. \"Which kind do you guys prefer?\" \n\nSadie cocked her head up in thought, but she was quick with an answer: \"Honestly, it really depends on what we're craving. We're both ALSO very sexual people so we go through phases where we want something in particular and we just lean into it.\" \n\n\"That's really hot. That's exactly how Molly and I are.\" Tate explained. He was getting hard just from staring at their new friends while they talked. They were sexy as fuck. \n\n\"So what else is on your list? I'm SO curious.\" Sadie kept it moving. They were all properly cross-faded at this point and very much enjoying the stimulating conversation. The night breeze prickled the hairs on their arms and they were all getting a little turned on from it all. \n\n\"Well...let's see. We want to fuck people separately and then come home covered in their juices and smells and make love to each other.\" Molly said, trying to remember the order of their list. \n\n\"That is VERY hot. Roger once fucked this girl at a bar that he seduced, and then he came home and I could taste her pussy and perfume and sweat all over him...it was so sexy. We came a lot that night.\" Sadie was feeling randy just thinking about it. \n\n\"Ughhh, I get horny just thinking about Molly coming home to me like that!\" Tate said, and everyone on the circular day bed couldn't help but glance at his crotch just in case there were any outlines. And there was. Roger picked up on that clue. \n\n\"What else?! This is the best game ever. Keep going.\" Roger said, and he flagged down a passing server and ordered another round of their various drinks. \n\n\"We want to visit a sex shop that has the porn booths in the back and fuck in there...and...this part is embarrassing to say out loud...\" Molly paused. \n\n\"Literally Roger and I have pornographic brains,\" Sadie assured her. \"You cannot gross us out and if you do we won't judge you for it...we've done some NASTY stuff in our time, trust me!\" She had a very devious curl to her lip when she said this. \n\n\"Fuck it. We really wanna play at a glory hole.\" Molly announced now. And just then a couple walked by their daybed from behind her. Everyone started cracking up. \n\n\"Oh man...that was amazing.\" Roger said, as they all razzed Molly for her perfect timing. \n\n\"But like...okay...that's really fucking hot. I think Roger and I would be into that too.\" Sadie agreed. \n\n\"So wait, I feel like we're dancing around something here.\" Roger said. \n\n\"Yes I agree, we are, let's just ask the question now.\" \n\n\"How do you guys identify? Molly do you like girls?\" He asked first. \n\nMolly quickly shook her head. \"Fuck. Yes. I love girls. I had some very fun girl play in college but I haven't really gotten to enjoy a full on girl-on-girl experience the way I really want to.\" \n\n\"Sadie?\" Tate asked now. \n\nSadie wiggled in her spot excitedly at the question. \"Yes...I love girls. I'm completely bisexual. I've had a lot of experience in that category. My best friend is basically my fuck-buddy and Roger has gotten to benefit from that many times. That was our first threesome actually.\"\n\n\"Fuck that is hot.\" Tate said, envisioning Sadie and Molly naked together. Molly agreed with him. The two girls were definitely looking at each other now with a bit more lust in their eyes. \n\n\"So...I would definitely fuck you.\" Sadie said point blank to Molly. Molly bit her lip and reached her hand out to grab her new friend's bare knee in excitement. She made the cutest little noise as her body swayed a little. \n\n\"Ugghhhh fuck. Sadie, I would DEFINITELY get naked for you.\" And now both of the boys were watching intently as they had a little moment. It seemed like they might actually kiss, when the server arrived with their drinks. Another laugh passed as they server left. Their timing had been impeccable. \n\nThey all resumed the game. \"Cheers to every single direction this night is going.\" Tate said, and they all definitely agreed with a happy clink. \n\n\"Okay, so wait, we only asked half of that question. Tate...\" Sadie started, \"do you play with guys?\" She asked the question in the sweetest way. Yet you could tell how excited the girls were that they had switched over to their men, who were seated side-by-side each other. \n\n\"I haven't yet...but it's a very big fantasy.\" Tate said, and he could feel his cheeks redden, even though his buzzed state allowed him the confidence necessary to begin with. \n\n\"That's sooo sexy.\" Sadie said. \"Are you into that?\" She said to Molly. \n\n\"Oh absofuckinglutely. I wanna see him hook up with a guy, maybe more than anything else.\" She looked over at Roger now. \"Roggggger? Do you rub your cock against other cocks?\" And they all laughed again. They were drunk and horny and loving the vibe they were all giving off. \n\n\"Oh yes. Sadie can definitely tell you about some amazing scenes she's gotten to watch on our bed back home, of me and other guys that we've hooked up with.\" Tate gulped a little when he heard Roger say this. He knew in that moment that Roger's cock was going to be his first. It was so scary and so exciting all at once. \n\n\"Fuck. I am so turned on right now.\" Molly said, running her hands up into her hair like a magical sex fairy. \n\n\"Yeah, I think I've been hard for the last 30 minutes of this conversation.\" Roger joked, and he adjusted a sizable shadow sticking out from his shorts. \n\n\"You guys are so fucking sexy.\" Sadie said as she popped up on her knees now and straightened her skirt. \n\n\"Look...\" Molly grabbed Tate's hand in hers and looked at their new friends in earnest. \"We were originally gonna make this first night a night for just us to have fun...but I think I speak for both of us when I say we'd much rather keep alllllll of this going.\" And she pointed a silly-shaped circle around their center as they all readily agreed. \n\n\"Yes please. You guys are so much fun.\" Sadie added. \n\n\"Okay. I have an idea.\" Tate spoke up now. \"Would you guys maybe wanna take a break in our rooms and change into some swimsuits, and like, meet back down in the spa in about 15 minutes?\" \n\n\"That is a brilliant idea.\" Roger nodded, and they all said a quick goodbye as they b-lined for the bar to close out the most recent round. \n\nOnce back in their room, Molly reached her arms around Tate and smiled the biggest smile he'd ever seen from her. \n\n\"Babe. Holy fuck. Can you pinch me right now???? Fucking Holy Yes! They are soooo hot!\" She was so turned on. Tate loved how excited she was. It made him more excited too. He wanted to fuck her right then and there. He laughed as he tried to arch his boner downward so that he could actually pee on target-one of the very few inconveniences men suffered. \n\nThey each started changing and getting ready. \n\n\"This is just batshit crazy. Stuff like this doesn't just happen, right??\" He was pulling his board shorts over his thick, seven-inch hard-on as it flopped below the pull-strings. Molly admired his cock for a second, completely lost in the fuzzy feeling of all her happiness. She was perfectly tipsy and horny at the same time. \n\n\"I know. She's really sexy. I want to lick that girl all over. You noticed, right? She was touching me below the water and I was so fucking turned on. I wanted her to finger me right there in the spa.\" Molly said, and Tate could see her rubbing her hands over her ass, which is something she only ever did when she was incredibly horny. \n\n\"I think you're going to get that opportunity very soon baby,\" Tate said, grabbing her as she got into her very tiny two piece bathing suit on over her delicious body. \n\nThey turned to make out for a slow couple of seconds.\n\n\"And what about you, stud...you gonna suck on your first cock tonight?\" She said it close to his ear as she ran her hands down over the comically large pole jutting the front of his trunks forward. \n\n\"Ughhhhh, fuckkkk I am so excited.\" He said. And she could tell. \n\n\"I can't. Wait. To see how NAUGHTY you can be for me tonight, baby.\" She said, and now Tate knew she was just absolutely playing with his arousal. She knew every one of his mental buttons at this point. And she knew how equally excited and nervous he was. She lightly rubbed his rock-hard cock through the fabric. They broke finally. \n\nAfter they'd finished freshening up, brushing teeth, and reapplying chapstick before doing a final mirror check. \n\nThey got back to the pool right around ten, and Roger and Sadie were just climbing into the spa. It was a long, twenty foot affair that curved into a T, with a seat all the way around it's border. The depth was a perfect four feet all around, and they chose the far corner as their own. There were only three other people in the spa and they were at the other end of the design, having their own distracted conversation. It was a great hotel for that. Everyone people watched. Everyone was friendly. But in the end, everyone also left you to your own devilish devices. \n\nAnd the four of them had clearly formed quite the impressive team. \n\nWhen Sadie saw Molly in her new swimsuit, her heart leapt up into her chest. She was wearing a powder blue two-piece that came up high on her waist and showed off her gloriously curved ass with its thong back. Her top was a simple low-cut affair with two thin straps and her boobs spilled out of this set like they were being presented for in a prix fixe menu. Her freckles all over her chest and face really came out in the glow of the spa and to watch her walk in was to watch Roger and Sadie go completely crazy all at once. They had equally set intentions when they saw Tate follow her in with his muscular form and his tight, blue shorts, that rode up his legs in the water and showed off his biking legs. His chest was built and he had a nautilus tattoo on his side. \n\nAs far as tattoos in general went, Sadie and Roger had them both beat. Sadie had a whole jungle leaf tapestry running up her back from her right side. It fit her body so well. She looked like a young Jennifer Connelly, especially with her long her combed back behind her ears to show off her intensely emerald eyes. Though when she saw that Molly had gone for a lazy ponytail, she followed suit and put hers up in a similarly cute way. Tate couldn't stop staring at Sadie's lips, and wondering what his cum would look like running down her nose. \n\nRoger was a beast too. His upper body especially had done some charity work in the pursuit of freeing weights, because his chest broke out of that water with Baywatch precision. He wasn't over-swoll. He was just the right amount of swoll. Also, Tate wanted to hook up with a guy who intimidated him a little...it made the whole thing even hotter to think about. \n\nSadie also had a tattoo of Virgo moons that ran up her neck behind her ear where she wore two small, green earrings. Her breasts were incredible. They were perky and round in the way tomatoes can be round-the types of C's that felled so many collegiate professors. \n\nThe girls sat on the inside of the corner, adjacent to each other-their legs almost touching below the steaming water. \n\nThe boys spread out to complete the square in front of them. \n\nThey were all flirtatiously drunk by now, and they weren't even close to being done.\n\n\"So...kinky new friends, what should we talk about next?\" Roger started them off fresh. \n\n\"Well, first of all...God Dayum Sadie, you are so fucking sexy in that suit.\" Molly said, staring at Sadie's sizable chest and perfect skin. Her lips looked so kissable with the small dew of water dripping from them. \n\n\"Thanks...I'm equally obsessed with your body. You have the most amazing ass I've ever seen. Roger and I watched you walk down the stairs from your room and we talked about it the entire time.\" \n\n\"Oh really?\" Molly laughed demurely. Suddenly she felt bolder. She pushed her leg forward until she brushed up against Sadie's calf underwater. \n\nSadie smiled and raised her eyebrows a little from the touch, and the boys knew something was happening, but they kept their cool. Molly was thrilled to be playing with this hot girl right there in the hotel spa. It felt like the beginning of a really stupid porno. But it was all real. Pinches be damned. \n\n\"So we never finished your bucket list? What were the other things on there?\" Sadie beckoned them to continue, even as she began to cricket her leg against Molly's seductively. \n\nTate looked to Molly, who was breathing a little bit more shallow, clearly excited by whatever was going on underwater. Sadie had placed her hand on the lower back of Molly, and she was running her fingers along the top of her suit. \n\n\"Well, let's see,\" Tate took the lead, \"I want to see Molly in a gangbang.\" \n\nRoger was instantly into that idea. \"You guys are so much like us. We have a gangbang fantasy for Sadie too. It's one of my favorite ways to make Sadie cum when I'm fucking her. But...okay...here's a very important question: how many guys?\" And they all laughed again because it was ridiculous but of course they had all considered this. \n\n\"Four.\" Molly said, and Sadie hooked a finger into the string of her bathing suit bottoms as she gulped. \n\n\"Six.\" Sadie countered, and she laughed because she loved how they all looked at her. \"LOOK! Honestly...I'm a slut. So If I'm gonna get fucked by a bunch of cocks in one night, I want to really lean into it. I wanna be on drugs and I wanna be absolutely ravaged and used like a cock-hungry whore.\" Roger saluted his wife. \n\nTate did a slow clap. \n\n\"There's just something really hot about watching your partner be slutty. I go crazy at the idea of watching Molly just getting pounded by multiple dicks in all of her holes and her just like...being so fucking into it. I think that's so hot. To see a girl that could handle that much attention and still get off on it. \n\nTate was getting lost just thinking about how hot it sounded, and both Sadie and Molly were absolutely oozing listening to him describe why he found the idea of a gangbang hot. It was titillating. \n\n\"Damn. Yeah. That's a pretty great description. Sadie once went on vacation with some friends and ended up fucking these two back in their hotel room that she met at the hotel bar and she sent me videos of them fucking her, and it was honestly the hottest thing I had ever seen. I still jack off to it.\" Roger finished his incredible story and everyone was very turned on now. They were all very much on the same level of kink. Checks started to fill up every single box. \n\nMolly slid her hand into Sadie's hands. they were playing with each other softly under the water-rubbing their fingers together. The feminine touch was so different. It was subtle and sexy and soft.\n\n\"Also on our list: I want to watch Tate have sex with a guy. That's pretty high up on our list actually,\" Molly added suggestively. Sadie arched an eyebrow to look at her and Tate now. Tate also noticed Roger's foot had found his on the floor of the spa where they were standing. He didn't move it away. They started to mess with each other gently under the water too. \n\n\"I think I could help with that.\" Roger said. It was Tate's turn to feel that embarrassing glow. \n\n\"I'm very serious. This is one of my all-time biggest fantasies. I want to see him suck on a big cock and I want to see him take a cock in his sexy butt.\" Molly wasn't messing around anymore. She was getting horny and beginning to get very descriptive with her fantasies. \n\n\"Roger really loves giving guys their first times. He's really good at it.\" Sadie bragged, as she pulled Molly over and had her sit on the step in front of her. She reached her hands around in front to hold Molly's hips. Molly leaned back against the girl and enjoyed the feeling of her full body up against hers now. \n\nThe guys were dying watching them together like this-being as touchy as they were with each other. The girls were clearly horny. It was sexy to see them both with their hair up in lazy spa ponytails wearing equally sexy swimsuits. They were such different kinds of sexy. There was the Suicide Girl, Snow White-esque, pin-up model qualities of Sadie that contrasted so nicely with the dirty-blonde, spunky athlete aesthetic of Molly. They both cleaned up to look like effortless goddesses. Or maybe it was the booze and the weed. Or maybe it was everything. ",
        "\"Molly,\" Sadie said, and when she tilted back to look at her they kissed. Molly didn't hesitate at all. \n\nThey kissed like long-time lovers. It was so right. \n\nRoger reached his hand back and squeezed Tate's upper thigh under the water as they watched, and Tate was getting very horny now. \n\n\"I'm really horny. Is everyone else really horny?\" Molly asked now, as they suddenly broke their mesmerizing kiss. Sadie slipped a finger down to run it along the inside of Molly's thigh. She gasped. \n\n\"Yes.\" \n\n\"Fucking, fuck yes.\" \n\n\"I'm so hard.\" \n\nCame the quick responses. \n\nSadie brought her mouth down to whisper to Molly now. \"I wanna lick you while the guys watch.\" \n\n\"Mmmmm,\" Molly moaned. \n\nThe boys had both gotten closer to the girls now. They were all low down in the water, staring at each other like wild animals circling fresh meat. \n\n\"Do you guys wanna come up to our room?\" Tate couldn't wait any longer. He said the magic words. \n\n\"YESSSSS!\" It was like everyone was racing to get their response out. They lifted themselves out of the spa like teenagers getting out of the last day of school before summer. There was excitement running through their bones. \n\nTate and Roger both eye-fucked the girls in their tiny suits as they quickly dried off and grabbed their nearby phones. Once they were dry enough, they exited the still-vibing pool area and ascended the stairs with boners flopping in their tightly-confined shorts. \n\nOnce inside the room, they luxuriated in the high AC that they'd pumped on before leaving. \n\nThe suite was perfectly sized to host a party of four people, and Molly went to work on making drinks while everyone took a turn using the restroom. \n\nSadie immediately noticed the incredible lineup of sex toys on one of the nightstands beside the king bed. \n\n\"You guys might be our actual soulmates!\" She joked, and when Molly walked over to hand her a drink, she turned and grabbed her and pulled her in for another kiss-this one as a little bit more firm. A little bit more exciting. \n\nThe boys stopped talking and just watched. It was thirty seconds of slow tongue play as their lips massaged each other into sublime eroticism. It was spontaneous and sexy. \n\n\"Fuckkkkk, can we freeze this WHOLE night in time and just never leave?\" Molly begged, when they finally broke apart. A string of saliva hung in the air between their lips. Sadie grabbed it on her fingers and put into her mouth to swallow. \"Ugh, I'm so wetttt!\"\n\n\"Same, babe.\" Sadie smacked Molly's ass and enjoyed how bouncy her cheek was, as the two girls admired each other. Tate opened up their patio door. \n\n\"You guys wanna get even more stoned?\" He gestured toward the wooden box they'd left on their round, patio table. \n\n\"Show us the goods. I should warn you though, Sadie is basically the Snoop Dogg of weed so she might smoke us all under the table if we're not careful.\" \n\n\"You ARE?\" Molly joked, but it was half sarcastic because clearly this girl was advanced in a lot of categories. \n\nIt was very invigorating to meet your sexual equals in such a totally unexpected way. \n\nTate was suddenly very glad he'd stowed away his best strains for this trip. He unlatched the carved, wooden box and slid open a hidden side compartment. \n\n\"Wait...is that a weed humidor with a hidden panel?\" Roger was impressed. \"Who do you secret agent for?\"\n\n\"Oh...well...you know...I'm an independent contractor,\" Tate joked back. \"I actuallymade it myself. Woodcarving is an old ROP hobby I never got rid of. Decided to finally make something worthy of the craft.\" It was Tate's turn to show off now. \n\nHe reached into the box and pulled out a blunt the size of a carrot. It was comically large. It looked like the type of prop you might see in a shitty PSA on gateway drugs. And yet...it had been painstakingly rolled and filled with: \n\n\"Chemdog 91,\" he stated, like a sommelier polishing off an old bottle at a restaurant. \n\n\"Whoa. No way. Where in the heck did you even...?\" Sadie was very impressed. \n\n\"I know. Trust me. I know.\" It was one of the hardest strains to find. The high was chimerical. \n\nTate pulled a wooden match out to light the joint and took a big hit, puffing the cloud of smoke into the soft light of their balcony patio. Down below, the music from the nearby pool and bar carried into their elevated position. \n\nThey all took turns getting stoned, as the smoke wafted between each of them. \n\n\"So Molly, I have a question for you.\" Roger said, looking her up and down with his fuck-me eyes.\n\n\"Mmm, I love questions.\" She said back, after taking another hit. She was soaking wet now. \n\n\"Is Tate the type to make the first move or will I have to lead him tonight?\" Roger said confidently. Sadie smiled at her man as she knew where this was going. She'd seen him do something similar before. \n\n\"Oh, he usually likes to lead...but something tells me you'll probably have to help him tonight.\" She said now, giving Tate a suggestive wink in the process.\n\nTate was turning red again. He was rock hard in his trunks at the thought that they were just discussing his sexuality in front of him. \n\n\"That's good to know.\" Roger said, giving Tate a more dominating look than he had earlier in the night. \n\n\"Who wants to go get on the bed?\" Sadie said suddenly, and she was already standing up and heading back into the room. \n\nMolly and Tate shared a brief kiss as they followed Roger and Sadie into the room. \n\nThe second they were on the bed the girls were all over each other again. \n\nThey were soon grinding their pussies into each other. They were completely on fire for one-another. The passion was legitimate. \n\n\"Fuck clothing.\" Sadie said, and she ripped her top off revealing her pert breasts. Her nipples were erect and Molly shoved her face into them to devour them before realizing that Sadie was undoing her clip too now. Now it was Molly's turn to be naked in front of everyone. Sadie flipped her over and began the achingly slow journey down her body to lick her sex. She kissed her breasts and licked her nipples, dragging her tongue in a languid zig-zag down her tight stomach, like a drunk skier going off trail and dodging trees. Molly could feel how soaked her pussy was. She was so excited that this more sophisticated-looking, version of a Megan Fox sexpot was about to have her tongue inside of her pussy. Sadie was staring into her eyes as she licked. She was very into her work. \n\nShe kissed her upper thighs and dragged small pecks down the inner lining of her suit, bringing her hands up to peel off the sticky fabric. Her mouth hovered over Molly's hood, breathing hot air against her as she used her feet to get the bathing suit the rest of the way off. \n\nThen she pushed on the inner thighs of Molly and forced her to spread more for the whole room to see. Molly's freshly waxed pussy was gorgeous and her folds were pretty and pink. It was the most beautiful pussy that Sadie had ever seen. She dragged her tongue along the inner thigh as the both boys held their breath and watched. Molly was moaning pleased \"MMMmmmmmm's\" as Sadie teased the skin around her pink center while using her hands to keep her legs spread. \n\nShe was about to kiss her clit when she turned to the boys with a devilish look. \n\n\"Tate. Rog. I want you guys to jack each other off while you watch us.\" Sadie said it so assuredly that Tate could hardly believe how sexy it sounded. Molly also laughed out loud she was so horny and in love with this girl's moxie. \n\n\"Mmmm, YES babe. Sadie isn't going to start eating me out until you boys are stroking each other's cocks for us.\" \n\nRoger looked at Tate and gave him a game grin. He slipped his shorts down and out flopped this perfectly straight, eight inch pole that had this immediately noticeable girth that made it look more like a statue in a park than a penis. Tate felt his mouth get a little dry. \n\nRoger was helping him now. He'd moved his hands over to Tate's shorts and the boys hands met together on the drawstring as they opened his pouch together. \n\nRoger grabbed Tate's precum-oozing cock with zero hesitation and pulled it out like you'd pull a doorknob. Tate worked up the courage with the immediate turn-on of the moment and wrapped his own hand around Roger's pulsing rod. \n\n\"That's good boys. Now keep jacking each other off and enjoy the show.\" Sadie said, and she bent down so that her amazing, thonged ass stuck up into the air behind her, as she bent her entire chest down to the bed and began to lick Molly's pussy for the first time. \n\n\"Fuckkkkkkkkkkkkkkk yessssssssss,\" Molly moaned, her hands clutching the bed as she arched her head back and stared from a lust-glazed eye at her beautiful man, stroking a real cock for the very first time in his life. They watched each other in love and in lust. \n\nRoger scooted closer on his knees so that the boys were almost facing each other. Tate liked the manly smell that Roger had, and he enjoyed when the space between them was closed, upping the intimacy of this very first act of homosexuality. \n\nIt was insanely weird to have a different cock in his hand. It felt so familiar and yet, like discovering a new continent at the same time. Roger was very hard, and his veiny dick throbbed in Tate's hand like a homing beacon, as his fingers came all the way up over the helmet to play softly with the slimy, precummy slit. \n\nTate had never been so hard. His hot wife was being devoured by this stupidly sexy girl who was flicking her tongue over Molly's clitoris like a master violinist, while wiggling her own ass in the air from how excited she was from it. The girls were having so much fun as they moaned together. Molly was running her fingers through Sadie's soft hair hair as this gorgeous vixen continued to eat her with all the expertise that a girl already had instilled from their own pussy play. She knew all the right moves and Molly was loving the way Sadie softly sucked on her as she moaned the most beautiful moans. Sadie couldn't get enough of how tasty Molly's pussy was. \n\nRoger rested his head against the side of Tate's face as their cocks were now touching between them. He wrapped his large fingers around their cocks and had Tate do the same and now they were jacking them together and using each other's cum as lube. Tate loved the way Roger's throbbing matched his own. It felt even sexier to have a throbbing cock pressing against your own-like a high end sex toy. He loved feeling Roger's head poking into his tight balls. \n\nSadie loved watching her man play with guys. He was so confident, even when handling a cock. It was sexy to watch someone so sure of themselves. Molly couldn't even figure out what to focus on-the fact that she was close to cumming or the fact that she just wanted to sit up and watch Tate fondle his first sausage. She'd never been so mentally stimulated before. \n\nTate noticed that Roger had slowed their speed now, taking his time. They jacked their cocks slowly and Roger used his other hand to bring it around Tate and hold his lower back. Roger's lips brushed Tate's chin and Tate felt goosebumps. He didn't know what he wanted but he was undeniably hornier than he'd ever been. Roger's stubble felt amazing on his skin. He was strong and commanding. \n\nRoger began kissing the side of his face as Tate smiled and moaned with his eyes closed. When he did that Roger turned his face to his and brought their lips together. Tate couldn't believe it. He didn't put up any resistance. The boys began to kiss and moan into each other's mouths. \n\nThe girls stopped for a moment. Sadie crawled up Molly's body as they humped slowly against each other. \n\n\"Oh my god that is so fucking hot,\" Molly practically came just from watching. Her body was on fire. Her sexy husband had another guy's tongue in his mouth. The girls started kissing now too. They were making out side by side and their bodies naturally slipped closer together so that now Molly and Tate's hips were touching. \n\nRoger broke from Tate for a moment so they could catch their breath. He leaned down to pull Sadie off of Molly's own energetic mouth. The girls were breathing hard too. He pulled Sadie's hair back and she laughed like the naughtiest girl. Her mouth was open and he spit into it as Molly felt her own pussy melt from that act of naughtiness. She pulled Tate over and they kissed below their new lovers, her hands running through his hair as she showed him how hot she was for all of this. \n\n\"I love you so much.\" She whispered to him, and he whispered the same thing back to her. \n\nThen Roger had pulled Tate back and the boys and girls restarted their make-out sessions. \n\nAt some point, Sadie grabbed the back of Roger's head over and he brought Tate with him. \n\n\"You have to taste her lips, baby.\" She said to Roger, and he kissed Molly for the first time as he squeezed her neck in his hand. Then he brought Tate over and the three of them shared a kiss, and soon Sadie was there too. The four of them leaned in close and shared each other's mouths in their first four-way kiss. It shouldn't have been hot and yet it still was. \n\nIt was nothing but pure joy. they traded partners back and forth, even as they ground their bodies together and reached out for every available body part. \n\nThey stripped the rest of their clothing off so everyone was naked now. They were all eye-fucking each other, thinking of the sheer possibilities with so much good naked flesh in one room. \n\nAnd then Roger was making another move. He crawled up the side of Tate's body until he was straddling his face. Tate knew what he wanted. The girls stopped to watch again. \n\nMolly's heart was beating so fast. \n\nRoger didn't wait. He grabbed his cock and positioned it above Tate's mouth and then ran his shaft over Tate's lips. Tate loved the smell of his cock. It smelled raw and savory. It smelled different than a pussy. It smelled like testosterone, if that even made any sense. He allowed his lips to explore the shaft and when Roger pulled back, he opened his mouth wide and used his free hand to aim it into his mouth. Roger shoved three inches into his throat and Tate gagged a little. \n\n\"Mmmmm, boys, you are so fucking sexy.\" Sadie said, and she fingered Molly while they watched. Molly found Sadie's pussy and the girls rubbed each other while enjoying Tate's very first blowjob. \n\nIt was long and slow. But Tate was very dedicated to the task. He had a big cock in his mouth for his very first cock. That almost made him feel sexier to know his first cock was a cock of such size. Molly definitely couldn't have imagined it this way. Her strapon was a medium size. Roger was a step up. Tate kept sucking and Roger would occasionally pull out to drag it over his lips and nose, rubbing his juices over his new conquest. \n\nSadie got back under Molly now and lifted her legs up so she was practically folded. She began to finger her with three perfect fingers right into Molly's exposed G spot. If she didn't stop, this was a position that usually made Molly squirt. \n\nTate bobbed his head up and down now. He was really getting into his first blowjob. His breathing slowly calmed and he was able to take more girth further into his stretched lips. Molly was moaning louder. \n\nTate looked over just as she held one long note and splashed the bed with a drenching of pussy juices. \n\n\"OHHHHHFUCKKKKYESSSSSSSSSS.\" \n\n\"Mmmmm, YES, BABY, CUM SO HARD FOR US YOU SLUTTY GIRL!\" Sadie talked dirty all the way through Molly's splashing orgasm. \n\nRoger plopped his cock out of Tate's mouth and Tate almost looked disappointed about it. \n\n\"Hey Tate, would you mind if I fucked your wife's brains out?\" He asked, and Molly eeked as she looked at Tate's sloppy face. \n\nSadie traded positions with Molly as Roger took over his wife's spot. He spread Molly's legs and thrust his cock firmly into her very wet opening. She made a noise that sounded like religious conversion. Tate loved it. \n\nSadie meanwhile crawled over and engulfed Tate's raging penis in her very slutty mouth and began to lovingly gobble all seven inches into her expert throat. \n\n\"UUGHHHHHH,\" he moaned as Molly pulled him over to kiss him again. She could hardly control her mouth as Roger began to thrust a little harder inside her. Tate could now feel Sadie's fingers pressing into the skin below his balls while she sucked him. He was very into that. \n\n\"Sadie it's soooo gooood, suck my cock with that sexy mouth, baby.\" Tate moaned, as Sadie loved the dirty encouragement to do more. Roger grabbed Tate's face now and opened his mouth with his fingers as he continued to fuck Molly right next to him. Tate allowed two big fingers into his mouth and he sucked on them and moaned while Roger's hips slapped wetly into Molly's heavenly pussy. \n\n\"You wife has an incredible pussy.\" He said, and he leaned down to kiss Molly now and Tate loved seeing his wife kiss another man. It was so sexy to see her so ravenous with another man, because he knew she was his and his forever. It felt like the most unselfish type of love he could ever imagine. Molly could be completely his, while also being completely used by a brand new cock right in front of him, and that was a powerful thought to consider. \n\nAnd then Tate moaned as Sadie slipped a pussy-soaked finger into his asshole. It was her middle finger. \n\nShe took her time getting up to that first knuckle. \n\nTate closed his eyes and tilted his head back. \"Fuck Sadie, that's so fucking good.\" \n\n\"Yeah? You like that finger in your ass, Tate? You have a horny little ass for me?\" She was incredible. They both were. Molly was lolling her eyes back in her head as her second orgasm approached. Roger didn't slow down. He fucked her to completion as she quaked under him and her entire body shook with the expanding vibrations of a full-body orgasm. She had to push him out and curl sideways against her husband as her body was racked with the sobbing ecstasy of this moment. \n\nShe kissed Tate's neck now and watched Sadie's amazing mouth bobbing up and down on her husband's perfect cock. She was so glad he was hers. Forever. She loved getting to see this total fox of a babe sucking her man and loving how great his dick was. She was possessive of that dick and wanted everyone to experience how good it was. \n\nRoger moved over to slide into Sadie's perfectly available pussy and she moaned louder on Tate's cock while she sucked. Her finger continued to slowly push into his hole, and now she was all the way in. She curled up to his prostate and he knew if she didn't stop he was going to cum soon. She arched his body up so she could finger him harder, and even while being pounded herself, she was fully aware of how excited Tate was from the way he had felt in her mouth. \n\nSoon though, Roger's cock was too much, and sucking was too much to focus on. Sadie brought her mouth off and began to furiously jack Tate off while her husband demolished her pussy while slapping her ass and tell her what a bad girl she was. She pushed back to meet each thrust and screamed loud enough for security to be called as she came for the first time that night. \n\nShe had to take a break too and she collapsed on Tate's other side. But Roger was far from done. He looked at the three of them laying in front of him, all glazed over with ravenous lust. Roger had his naked buffet of options. \n\nHe scooted closer to them now and grabbed Tate's legs to spread them. His right leg he gave to Molly and she held it up for him. His left leg he gave to Sadie and she dug her nails into him and pulled him up to her so that his legs were in a very vulnerable missionary. \n\n\"Molly, do you guys have lube?\" He asked her, and Molly reached over her head to their nightstand where the large bottle of water-based lubricant was stationed. She handed it over to this stallion of a man and watched with utter delight as he squeezed a giant glob onto his cock and then used his hand to rub it all over. He brought his fingers down to paint Tate's hole and Tate moaned when he felt the liquid smeared onto his taint. ",
        "He was about to take his first cock. The mere thought of it felt like an epic poem. \n\nThe girls seemed almost as excited as he was, if not more. They rubbed him like two supportive lovers. \n\n\"Mmmmm, Molly, I think we get to watch my husband pop your husband's cherry right now!\" Sadie moaned as she ran her hand up and down Tate's bouncing cock, playfully touching him. Molly was thrilled. She had waited so long for this. She knew Tate was nervous, but she also knew he was more excited. She could tell by how hard he was. \n\n\"Yeah. He's gonna learn how it feels to be opened up by a Nice. Big. Dick.\" And as she said this, both Sadie and Molly brought their lips over his own to make out. They allowed spit to spill out of their mouths and into his begging lips. Tate was so turned on. It was the perfect combination of everything he wanted. \n\nHe felt the tip of Roger's cock nudging his anus open as it rubbed more and more lube all over his ass and into his crack. And then there was that never-go-back moment where Roger looked down at Tate. \n\n\"Tate, do you want my cock inside you?\" And as he said this he was rubbing small circles into his anus, like a corkscrew slowing advancing.\n\n\"Yessssss...\" Tate unexpectedly extended the word into a groan when Roger pushed slowly, and fully into him. He didn't stop. He didn't need to. Molly had fucked Tate's ass enough with a strapon for the initial pain to be lesser than a total virgin's might. And there was already a sort of gleeful grit to the look plastered on Tate's face. Roger had pushed all the way inside of him. The girls rubbed his hands and chest and hair while they kissed him, carefully watching this insanely sexy show. They were mesmerized by the sounds coming out Tate's mouth as Roger began to slowly fuck him. \n\n\"Fuckkkk, I can't believe I'm watching my man take a cock right now. This is SOOO HOT.\" Molly uttered between kisses to Tate's ribcage. The girls would occasionally kiss each other as Tate's moans got louder and louder from being fucked and opened. \n\n\"Mm, I love how tight this ass is.\" Roger said, grinding his hips forward with a beautiful rotation of control. \n\nAt some point the girls got the same idea and they dragged their heads down his body together and met at his cock. For the first time ever, Tate experienced the absolute mind-bender of a double blowjob, with the added kicker of his very first dicking to make everything feel like heaven on earth. He had two beautiful girls sucking on his rock hard cock while a fat pole pumped his sloshing asshole with a steady drive. \n\nTheir lips ran up and down opposite paths as Roger firmly slid all the way in and all the way out. His girth made Tate feel so full, like he had to poop and pee all at once. Sadie held Tate's cock out and pushed Molly's mouth as far down as she could go until she gagged on it. But she didn't stop. Sadie was making her gag on her husband and Molly secretly loved being made to choke on a cock-it was one of her biggest kinks. She often would wear makeup that was purposefully there just to be messed up by rough blowjob juices. \n\nShe glogged Tate's penis, even as Roger fucked him forward into her throat. \n\nThen it was Sadie's turn to deepthroat Tate. The girls traded off playing with his cock and balls. It was like they were competing for who could be nastier and they were both winning. Their mouths and lips only ever left his dick when they shared a precum-covered kissing break which they both moaned their way through with raw sexual arousal. They girls were on fire for this moment. The smell of the guy-on-guy sex was like kink catnip to them both. \n\nTate was very close now. There was too much stimulation. He was going to cum with a cock in his ass. \n\n\"Do you want me to cum in your husband's ass, Molly?\" Roger asked now, thrusting forward harder and harder as he slapped against Tate's thighs. Molly moaned loudly as she felt Roger's fingers reaching over to fondle her own tiny hole as she sucked. \n\nTate couldn't believe the cock that was stretching his hole to its limit was about to fill him up with actual cum. He couldn't hold it any longer when he heard that. It was a surge of everything at once. \n\n\"I'm gonna cummmm!\" Tate said suddenly. the girls held his arms down at his sides and he arched his body up as Roger pounded his prostate with precision thrusts. Sadie lightly jacked the base of his cock with only her thumb and pointer, and the girls positioned their mouths at the very top of his helmet as they prepared to be drenched in the first male orgasm of the night. He didn't disappoint them. They were both hungry for cum. \n\nTate's jizz shot out like an oil rig, splattering the faces of Sadie and Molly who brought their mouths above his slit to spill more of his gushing seed into their path. Then they were kissing as he came into their necks and chests. Tate was cumming so hard he couldn't even open his eyes to watch two sexy girls sharing his seed in their mouths. They licked and spit on each other and suddenly Molly said she was going to cum again, as Roger fingered her with his long digits while he fucked her husband. \n\n\"Yessss Molly, cummmm for me baby.\" Sadie moaned to her. Molly came with Sadie biting down on her bottom lip. The mess and smell all over her face had been too much for her and she melted into the bed shaking with pleasure as her pussy ached in marvelous completion. \n\n\"My turn.\" Roger said. \n\nHe pulled Tate's legs further up his waist and began to hump his soon-to-explode cock into Tate with such a speed and pace that Tate could hardly get through a single moan before he began the next one. \n\nMolly crawled up her husband's glistening body and kissed him softly, the taste of his own cum immediately recognizable on her coated lips. \n\n\"I'M CUMMING FUCKKKK,\" Roger roared and arched his hips up so that his cock exploded in the furthest fucking depths of Tate's oiled bowels. \n\nTate made the most delicious noise into Molly's mouth as he experienced every molecule of his very first copulation. Molly was brimming with desire as she watched Tate experience the desire of being filled by an exploding cock. \n\n\"Yessss baby, fill him uppp with your cum!\" Sadie moaned, running her hand over Tate's still-hard cock as she lavished in the skills of her husband. \n\nWhen Roger was finally done with his powerful orgasm, he collapsed back on his shins...slowly pulling his sloppy cock out of Tate's ass with a plop that made Tate moan again. \n\nTate just stayed there for as second, his legs still spread in mid-air as his ass gaped lightly. It was pain and pleasure. It was something new. \n\nMolly couldn't help herself. She brought her head down to look at the cum trickling out of his hole. She gasped again. It was the sexiest moment of their life. \n\nThey all laid back for a moment and looked at each other with smiles so dumb, even Picasso couldn't have painted them.\n\nSadie popped up suddenly, always charged with energy, and zoomed to the bathroom. She torqued the hot water on and quickly soaked and squeezed four hand towels, bringing them back for everyone in the bed. \n\n\"Damn girl, you do hot towel service, too? Who are you?\" Molly was smitten with this sexy girl. \n\n\"What can I say...I'm a very complete sexual partner.\" Sadie brought her hands to her chin in an adorable curtsy, showing off her naked body for all of them to see as they admired her crawling back onto the bed. She collapsed into the pile of bodies as they all took a moment to breathe in and out and marvel at their kinky glee. \n\n\"Look at how hard they both are still!\" Molly said, already feeling how wet and needy her pussy still was. \n\n\"You guys wanna smoke some more?\" Tate asked, as they all hopped up from the bed and came back out to the patio. \n\nMolly grabbed four Corona's they'd stowed away in their room fridge earlier that night and cracked them all, before passing them out with limes. They were back at the table, clinking beverages again. \n\n\"Cheers to you two insanely sexy people.\" Roger said, with a rugged smile plastered on his face. \n\n\"No, you guys.\" Molly said. \n\n\"No way, you guys are way too hot.\" Sadie added. \n\nTate couldn't stop thinking about how he'd just been fucked. \"That was like...maybe my best orgasm ever. Roger...your cock is so hot.\" He said, and the girls laughed at his total honesty. \n\n\"Thanks. I would definitely fuck your tight ass again if you wanted. You have a great ass. Super round and sexy.\" Roger clinked his glass to Tate's again, who could hardly believe he was even hearing a compliment like that. \n\nAfter some more flirting and weed, they ended up pushing two of the armless chairs together and having the boys sit down. Sadie and Molly sat down on cocks that were not their husband's now. They rode the boys side by side. \n\nTate was thrilled to finally have his revived cock in Sadie's soaking snatch. Molly, too, was so happy to have Roger's freshly washed cock filling her up again. \n\nThey rode like this for the next half-hour, occasionally stopping so they could all make out with each other. At some point they decided to take it back into the room and continue there. \n\nTate had the idea to turn the girls around, and now Molly and Sadie sixty-nined while their opposite boys boned them from behind. \n\nMolly loved licking Sadie's delicious pussy while her husbands shaft was entering her and exiting her. She'd snake her tongue down to feel his familiar tool rubbing against her mouth even as it was covered in another girl's juices. She loved that so much. And for every thrilling thought she had about what she was doing, Roger's cock rubbing against her own folds at the same time completed the menagerie of her shocked lust. \n\nThey fucked like this for the next hour. \n\nThey changed positions. The guys sucked each other other off. for a long time The girls ate each other out for an even longer time. They all made out. They made each other cum again. The room was loud and sweaty and smelled like sex. \n\nBy the time they were all firmly spent...it was almost 4:00 in the morning. \n\nSadie's insane energy level was finally fading and she was starting to get sleepy as she lay on Molly's tummy, while the blonde ran her hands through her dark brunette hair, long since taken out of it's ponytail. \n\n\"You guys might be our favorite couple we've ever played with.\" Roger said. \n\nSadie moaned an approving yes. \"Might be?!\" As if he even needed to consider it. \n\n\"I can't believe we just had our first foursome with you two. That was so fucking sexy.\" Molly blurted out, stlll tickled at hot they both looked, laying naked with them in bed. \n\n\"What are you guys doing tomorrow?\" Sadie asked, running a hand down along Molly's shin. \n\nTate and Molly both looked at each other, and then they both subconsciously looked over at their backpack on the corner chair in the room, full of all their marvelously mind-altering goodies. \n\n\"Actually...it's funny you should ask.\" Tate took over, \"We were actually going to do some Molly tomorrow and get super kinky. We originally thought we might seduce someone back to our room to roll with us...but umm...\" \n\nThere was a moment of nervous anticipation as he left the sentence purposefully incomplete and looked around at the group. \n\n\"FUCK! That sounds really fun.\" Roger said now. \n\n\"Damn, you guys really did think of everything. It's been over a year since Roger and I were able to roll last!\" Sadie suddenly had a puppy dog type of face on, as she looked to Roger, who was clearly going to be her swing vote. \n\n\"Yeah, woof, that was SO much fun too. We were in Vegas for our anniversary last August and the weather was a lot like this. Sadie wore this see-through dress and we went to Drai's and just danced all night. Ugh. That night really cemented how much we love each other.\" Roger had the cutest smile on his face as he dove into some very happy memories. \"We were there for our anniversary and spent the entire night enjoying the nighttime air while we danced and talked and wow, it was just so incredible.\" Roger concluded. \n\n\"We've never actually rolled with other people before...so it would be a pretty new experience for us.\" Molly said, and she was building the case. Roger was stroking his chin absentmindedly, considering. \n\n\"I would absolutely love to roll with you guys. I think we could even make the night way kinkier than tonight was, if you guys are game. We could all go in the pool and go dancing and even play sex games here in the room if you guys are down. I think it would be incredible to get to know you both more and also, having that type of intimacy with four people in one bed would probably be the sex of our lifetime. So I'm TOTALLY down to roll those dice.\" Tate had just won his case and they all knew it. The chemistry was so intensely palpable. \n\n\"Well, I'm fucking down. I'd love to make out with Molly in the jacuzzi and not give a fuck about who is watching.\" Sadie reasoned. \n\n\"We could make out on the dance floor tomorrow too if you want.\" Molly challenged her as Sadie clutched her leg. \n\n\"Mmm YES that sounds so good. We can get dressed up sexy for each other too! And Everyone will know the four of us our are together. We don't have to pretend we're just friends. We can just mess with people all night, switching partners and flirting.\" Sadie was so into it. \n\n\"Okay well I also vote yes. I think if we're all on ecstasy together tomorrow there is gonna be so much naked fun. I'm definitely into it. You guys are so much fucking fun, I swear.\" Roger was legitimately proud of how well they were all getting along. \n\n\"Okay...so are we doing this?\" Tate asked again. \n\nThey all put their arms in like it was a pregame huddle. And then they broke. \n\nThey were going to roll together. \n\n\"So what is our plan then? Sleep in first and foremost, right?\" Molly reasoned. \n\n\"We need to make sure we eat very little tomorrow. Probably just a light breakfast with our coffee to handle all the alcohol we drank. And then drink lots of water all day long.\" As she was finishing sayng this, Tate fished some supplements out of a nearby duffle. \n\n\"Here, take these tonight. They'll help your body get ready for the chemical changes. And practically eliminate the hangover too.\" \n\nThey started to get up and get dressed. \n\n\"Let's say we'll meet you guys down at the pool at 3 tomorrow, yeah?\" Tate suggested, and it was quickly agreed to. That would give them enough time to sleep in and start the day off nice and relaxed. \n\nThey all shared a separate kiss and a hug and, just as they were about to leave, Sadie leaned back into the room. \n\n\"You guys wanna get brunch with us tomorrow like at 2 and then we can go to the pool after and plan out our night?\" \n\nMolly and Tate looked at their new lovers, still looking sexy as hell in their door frame, with their disheveled clothes hanging off their bodies. The resort was quiet outside. \n\n\"Yes. Absolutely.\" Tate said. \n\n\"Excellent.\" Roger cheered, and they said a final goodnight and shut the door to plod off to their own satisfied bed. \n\nMolly and Tate took a lazy shower and helped each other lather up and rinse off. It was just intimacy now. No sex. Just that tired completion of so many fantasies come true. Molly held Tate from behind, resting her head on his back and breathed in deeply. They meditated like this for a moment, as the shower was turned off and the last of the steam rose up into the ceiling. \n\nThey dried off and brushed teeth and Tate gave Molly's ass a soft slap. \n\nThey crawled into bed now and pulled up only the thin sheet, as the AC cooled their skin. \n\nMolly wrapped her leg around his and they lay side-by-side with their noses touching. \n\n\"I love you Mr. Bohaven,\" she said to him, saying all the things they wanted to say in that one single sentence. \n\n\"I love you more,\" he said. \n\nAnd they drifted quickly off to sleep, with sexual sugarplums dancing in their heads. \n\nThere would be so much to talk about. There would be evolving communication and they would figure it all out as they went. There would be play-by-plays and memories and the use of this night as the ultimate verbal foreplay for future sex. This was a part of who they were now, and they loved it. \n\nBut right now, it was all sleep. \n\nThey were so happy. \n\nThey were each other's person. \n\nAnd no matter what grand pleasures might away them, that anchor was all they truly needed. \n\nEverything else was simply an unexpected bonus. \n\n{To be continued... }"
    ],
    "authorname": "SluttyBisexualGuy",
    "tags": [
        "bi encouragement",
        "bi foursome",
        "bisexual female",
        "bisexual male",
        "first time gay",
        "foursome",
        "kissing",
        "mmff",
        "swapping",
        "wife swap"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/mr-and-mrs-bohaven-ch-02"
}