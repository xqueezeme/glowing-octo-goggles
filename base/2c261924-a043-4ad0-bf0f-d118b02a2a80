{
    "title": "Ignore the Warning Label Pt. 01",
    "pages": [
        "Author's Note:\n\nThis is my first attempt at writing any kind of story, erotic or otherwise. Please be kind.\n\nAs a warning, this is not intended to be a quick get-you-off type story. If that's what you're in the market for, you've come to the wrong place. It takes a while to come to a sexual scene.\n\nIf it isn't clear enough, 'lines like this in italics and single quotes' are meant to be Devyn's voice to herself in her own head.\n\nI'd love to hear all feedback. Think it's great? Happy to hear it. Think it sucks? I'd love to understand why.\n\nEDIT April 16, 2019: Edits and helpful guidance provided by EGRI.\n\n*\n\nIt had been a day just like any other day. I'd woken up horny before getting up for work. There hadn't been any morning playtime, which was unusual in the scheme of things but typical for this week. Work had been a frustrating journey from one SQL error message to the next, trying to focus through daydreams of color flecked eyes, close cut black hair and an iconic knowing smile. Turns out it's really annoying to transfer code from MSSQL into Oracle while hiding hard nipples from everybody working around you.\n\nMy work outfit lasted maybe 20 seconds past the door to my small studio apartment. Naked and finally free of #adulting responsibilities, I settled down for some me time. Like I said, just a typical ordinary day.\n\nExcept that it wasn't. Today was special. Today was the day that my best friend Malcolm would be on the Jersey City campus to take one of his law school finals. Just like every other time he'd come over to my side of the Hudson River, he would eventually text me to get dinner with him. Give it half an hour or so to finish the test and his invitation would appear on my phone.\n\nI ran my fingers over my thighs, letting them get as high as the edge of my trimmed bush before going back down. Just a little tease to warm myself up. I didn't need it, not after all the edging and teasing I'd done to myself this past week. My pussy had been leaking near constantly and my nipples hadn't been soft in ages. Still, I needed to make myself as hot as possible before leaving tonight. My plan was to be so horny that lust drowned out my fear of rejection when I finally attempted to break out of the friend zone.\n\nI'm not normally this much of a wuss. I'm actually really confident and brazenly flirtatious around everybody else in the world. But maybe that's just the freedom of indifference. I don't care much what any quick fling thinks of me as long as they get me off. Malcolm... well, he's different. I wanted far more than just a quick fuck out of him. I wanted him to feel for me what I felt for him. And, while he's never shown me anything but positivity and respect, he's also never tried to move past just being friends. And he's the kind of man to act on what he wants.\n\n'Maybe this is why he's never made a move on me,' I thought to myself looking over my lewdly spread body. 'I'm more of a guy than a girl. I'm messy and scratch myself in public. I dress for comfort and hate wearing makeup. I spend all my free time at the gym, playing video games or jilling off to porn. Those are the defining characteristics of masculinity, right? Oh yeah, and I've been friendzone'd by my best friend. Girls are not supposed to get sent to the friend zone by their male friends, right? I'm pretty sure it's supposed to be the other way around.'\n\nI don't have the most quintessentially feminine hourglass body. At 5'11\", I'd been a little taller than most of the guys I'd unsuccessfully dated. A lifelong love of basketball and feeling fit had made my muscles slightly better defined than most women allow themselves to get. Perfect form for seducing one's teammates... but a far sight from the delicate beauties Malcolm had dated over the years.\n\nIf things went badly, it wasn't exactly like I had a flush social circle to fall back on...\n\n'Stop that! Stop being such a downer.' This was why I'd finally come up with this plan, to turn that negative part of myself off. I brought my hands up to my breasts. Fuck feeling unfeminine, my tits are fucking awesome. Their C-cup bulk filled my hands completely with pleasantly feminine weight. Sure, their size sometimes got in the way of my active lifestyle, but the pleasure they gave me more than made up for it. Running my palms lightly over my nipples made me shiver and breath heavier. I tried to keep my caresses soft and teasing, but before long I found myself thrusting my chest forward and squeezing my nipples as hard as I could stand. Nearly time for the main event.\n\nMy external hard drive probably should have made it on the list of reasons why I'm basically a guy. Not many women I've met have 226 gigs worth of porn downloaded. Then again, that wasn't my fault. That one was all Malcolm's doing, and it showed exactly why our friendship had never been what one might call typically platonic. Even seven years later, the memory of meeting him and our early bonding still made me smile. It was so typically Malcolm... confident without being full of himself, firm without being abrasive, his magnetism had attracted me so easily.\n\nI wasn't very good at making friends in high school. It was hard to find a group to accept me. The gamer's clique didn't seem to know how to handle someone with breasts who wanted to play League of Legends with them. The male jocks would never play full speed with or against me, even though I was similarly sized or larger than most of them. And, of course, I'd rather have opened a vein than do what it took to fit in with the basic bitches of mainstream high school feminine culture.\n\nNot that I was a loner by any means. I had friends, but they felt more like niche role players than personal connections. For example, Heather and I scratched each other's video game itch, but we were both too introverted and awkward to get very close. I was on the girls' basketball team, but had trouble bonding with any of my teammates 1-on-1 without the pretense of practice. Long story short, I never really felt accepted for being more than just one part of me. I got very used to my own company and I developed a prickly cynical personality that pushed many people away.\n\nUntil one day in senior year when I was randomly assigned Malcolm as a partner for a social studies project on how recent technology changes have impacted longstanding traditions, organizations or industries.\n\nI hated group projects. Everybody hates group projects. The only people who like them are soulless extroverts who are destined to go work in an HR department somewhere. Of course, the only thing worse than a group project is one with somebody popular. Especially when it's a popular and hot boy. All the popular people I'd ever been around had been infuriatingly smug and condescending. Add to that the jealous glares from all the other girls and I was seriously annoyed.\n\nWe were given the last few minutes of class to confer with our partners.\n\nMalcolm was seriously popular. He had a reputation for being at home in nearly any group. And he was also seriously hot. He dressed just slightly better than high school required and stood an inch or two taller than me. I watched him cross the room to my desk, struck by how his short dark hair seemed to outline his face just so to accentuate his jaw line distinctively. It made his smile seem very genuine and warm, as though he was inviting you to join in a joke that only you and he knew.\n\n\"What are you looking so happy about?\" I asked when he arrived at my seat. Like I said, prickly personality.\n\n\"I've been waiting for an opportunity like this! This project is perfect.\" I cringed, thinking it was a really weird pickup line. Just another guy trying to get into my pants.\n\n\"Sorry, but you'll have to do better than that.\"\n\n\"Oh come on, don't tell me you haven't been looking out for the perfect excuse to do a school project about porn.\" I did a double take. '... Okay, that's a new one.'\n\n\"Erm... what?\" His smile turned slightly mischievous, but he continued in a completely serious tone.\n\n\"For decades, porn was formulaic. It followed an established script of little to no foreplay, blowjob, and hardcore penetration in numerous improbable and uncomfortable positions into a final money shot. Nowadays, that kind of thing gets very little views on Pornhub. Demand is much higher now for more realistic depictions of sex, especially for amateurs focusing on female pleasure. Before, people would buy DVDs with generic scenes on each. Now, there's hundreds of subreddits dedicated to specific kinks. What has changed? Is it simply the adaptation to the internet? Is it linked to expanding viewership and a more diverse audience? Is it because there's more suppliers trying to find a competitive niche? There's got to be enough material for a paper in there. What do you think?\"\n\nMy jaw was just about on the floor. He was completely serious. He had just walked up to me, not blinked at my rudeness, started talking intellectually about porn, and seemed legitimately interested in what I had to say. 'Dude has balls. Gotta respect that.'\n\n\"It sounds like you've given this a lot of thought,\" I stammered.\n\n\"I have,\" he confirmed. \"I'm interested in what moves people. And, pubescent teenager that I am, it seems that little moves people quite so profoundly as sex.\"\n\n'He's a wordy one.' The classroom had cleared out and the next class was coming in. I hurriedly gathered my books into my bag. \"Well, maybe it's not the same thing, but I bet there will be more ambidextrous people because of porn.\"\n\n\"Really? Why is that?\"\n\n\"Well, you need one hand to work the mouse and one to jerk off with.\" I tried to match his intellectual tone but couldn't quite manage it and laughed at the end. It surprised me, I hadn't been intending to say that. I'd been intending to mutter something about needing to get to class and rush away. And another surprise, he wasn't weirded out and was laughing with me.\n\n\"Maybe you're right! Maybe we can fit that in the conclusion 'looking forward' section. Listen, I've got to get to trig, but I'll message you tonight.\" And just as suddenly as he'd arrived, he was gone.\n\nThat's how Malcolm and I began bonding -- over porn. Like I said, not a normal platonic friendship. All in the name of educational research for our project, of course.\n\nOkay, maybe we kept going with it after the end of that project, which we got 100 on by the way. He'd send me a link to something hot and I'd try to find something hotter, back and forth trying to outdo the other for hours on end. It didn't take long for us to really understand what made one another tick.\n\nMalcolm was a dominant. He got off from controlling 'his' women and having them obey him. I know this because he told me right at the beginning. I asked what he was into and he literally told me: \"I'm a dominant. I get aroused feeling in control and being with somebody who accepts my control.\" Okay, maybe he phrased it a little differently... but still. He said it so matter-of-factly, like it was the most natural thing in the world.\n\nAt the time, I wasn't kinky in the slightest. Still, Malcolm's taste didn't seem weird to me. I felt like it should, he showed me some pretty sadistic shit after all, but it really didn't. I couldn't feel judgmental of him because, for the first time in my life, I felt like somebody was really accepting of all of me. Malcolm embraced the part of me that wanted to be a nerd and dream about Mistborn. He encouraged the part of me that wanted to be hyper competitive and demolish foes on the basketball court and Summoner's Rift. He understood the part of me that sometimes wanted to be left alone. He asked me questions and made me feel like I could answer truthfully -- that he genuinely wanted my full blunt honesty. He gave my inner slut a safe haven to come out and not be judged or feel threatened. And, perhaps most importantly, he understood that just because I'm sometimes a total bitch doesn't mean I actually hate him.\n\nSlowly, almost imperceptibly to me, I started getting turned on by BDSM. I found myself delving more into it, trying to find new material that would turn him on. He, in turn, fed me a steady diet of kink. A diet that was tailor made to appeal to me. For example, I identify as bisexual, but I really only get wet for a specific kind of woman. Someone who's very strong and wows me. It's kinda hard to describe, but I know it when I see it, and so does he. I fell in love when he showed me Queensnake. She and all her models are fucking goddesses of physical endurance, mental discipline and emotional strength. My eyes were inches from the screen watching her take stroke after stroke and manage to rise again every time. I don't think I'd ever been that wet before in my life. I admired her so much and I wanted to be that strong.\n\nBut it was never really sexual between us. We never talked about masturbating or wanting to fuck the models or getting off or anything. We'd say 'that's hot' or talk about what we liked or disliked about it, but in a distinctly not sexting way. It was great at first because it made the whole thing seem safe for me. I was able to express a taboo part of me to somebody who wasn't just trying to get into my pants.\n\nBut then I realized that I wanted to get into Malcolm's pants. Then it stopped being quite so great. By then we had graduated and were attending different colleges three states apart. Our relationship evolved. We'd only see each other online or over holidays visiting home. The pornographic part of our dynamic slowed dramatically to an eventual stop when we both started dating. Well, he dated. I tossed myself onto the hottest body at any given party.\n\nNevertheless, it was a hugely formative part of my life, and all our old history of instant messenger conversations was saved to my external hard drive. Years' worth of links, downloads and erotica flashed before my eyes as I loaded it onto my laptop. Over the course of many pleasurable nights, I'd sorted it all out into folders for Iconic Chats, Goddesses, Submissive Fantasies, Romantic Gay, Friends to Lovers (an especially guilty pleasure of mine), any dozens more. Sometimes I want something random, sometimes something specific. At work that day, I'd spent an embarrassing amount of time daydreaming about one favorite video.\n\nMy fingers dove to my pussy as I hit play on 'Amateur giving her boyfriend a blowjob (#14)'. Her passion and excitement made it hot fire as she worshiped his cock with her mouth. Her face was a collage of competing emotions -- excitement, joy, focus, pleasure and love -- as her eyes darted between her lover's face and his cock. It's like she knew she's supposed to keep eye contact as she sucks him, but she couldn't help herself staring at his cock. And it was a beautiful cock! Think and shapely, it looked like it would fill my cunt wonderfully.\n\nI curled my fingers inside myself, rubbing my g-spot as I fingered my clit and imagined being filled by the dick in her mouth. My heart raced in time with her bobbing head, each beat sending pulses of desire through me, making my pussy throb with lust. My muscles tensed and involuntary sounds escaped me. That's exactly the kind of sloppy blowjob I wanted to give Malcolm! Feeling his throbbing hard cock in my mouth... his hands on my head guiding my rhythm... The pleasure playing across is beautiful face, feeling his hard abs flex, his legs quiver by my sides as I'd suck him... I moaned with the pleasure coursing through me, imaging he could feel my voice on his manhood. My pussy radiated heat like a fire, seemingly immune to all wet juices pouring from me.\n\nSomething else. Another video. If I stuck with this one to the end, to see her look of pure satisfaction after she swallowed his load, I'd cum in seconds and I needed to hold back. Tease and denial is one of Malcolm's favorite games, and I'm not nearly as good at it as some bloggers I follow, but there was a lot at stake that kept me from tipping over the edge. Satisfied me is rational. Rational me gets nervous and afraid of taking chances. Rational me had held back from confessing her attraction to Malcolm for years, and she had no business coming out tonight!\n\nI was so absorbed in masturbatory hedonism that I didn't see the new text alert for some time.\n\nMalcolm: Hey, I'm in your neighborhood tonight. Would you like to get dinner with me?\n\n'He's got to be the only guy on Earth who uses correct punctuation in texts,' I thought. Our text message history was a long string of perfectly proofread English from him contrasting text shorthand and emojis from me. This was it! All according to plan! Okay, don't think, just let your hormones talk for you.\n\nDevyn: yeah sounds good\n\nDevyn: theres something iv wanted to talk about\n\nDevyn: do not let me say its nothing\n\n'Success!' I expected to feel consumed by regret and want to take it back, but I didn't. A little nervous, but excited. My clit, confused about where her pleasure had vanished to, throbbed in frustration. I smiled and gently patted her like a puppy. \"Don't worry, you'll have some real action soon enough... I hope.\" I supposed it's hard to feel too apprehensive with this much lust racing through your veins.\n\nIn a real way, what did I have to lose? Malcolm had been my best friend for seven long years, but our relationship hadn't been what I wanted for most of them. I'd never felt really fulfilled with any of my partners and I'd been near murderously jealous of all his girlfriends. Also, rationally speaking, this was the perfect time. We were both single and living as close to one another as two working adults could reasonably hope to.\n\nOkay, maybe it had been 'the perfect time' for several months already while I dragged my feet... but that was beside the point!\n\nSomething had happened with his last girlfriend. They were together for over two years, but their breakup was bad. We never talked about his romantic partners, probably because I turned bitchy the first few times they came up. Whatever it was, it was so bad that he was now trying to repress his natural kinky dominant side and was looking for vanilla satisfaction in a slew of Tinder hookups. He seemed less like himself... less confident and always slightly tired.\n\nMore than just my own unrequited attraction, I wanted to help him. I wanted to be the one that embraced him fully and let him be his real self, the way he had done for me. After many attempts to draw him out of himself, I'd finally realized that the only way to do that was to give him a new submissive. And that was going to be me.\n\nAll right, fine, I was more than a little nervous about it. Malcolm was naturally very dominant, but I wasn't a born submissive. I wanted to be one for him, but I didn't know how well I could perform. 'It will be fine,' I told myself for the hundredth time, 'get him on board first then worry about the kinky stuff later.'\n\nMalcolm: Well now, you have my attention. I'll swing by your house in an hour. Do you feel like Italian?\n\n'An hour!?!' It wasn't like I ever spent eons in front of the mirror, but I seriously needed a shower. Hot water running through my hair, over my nipples and between my legs... mmm... Something told me I'd need some time to get properly clean.\n\n-------------------\n\nHe arrived in a suit, complete with tie, perfectly creased pants and cuff links. All that just to take a final. Typical. It's unclear to me if he even owned a pair of jeans. An 85 degree summer evening and he's dressed to impress and still looking infuriatingly clean, cool and relaxed. Sweat, apparently, was the kind of thing that happened to other people. I, on the other hand, had gone with casual jeans and a tank top. A pretty low cut tank top that showed off my chest wonderfully. I had given myself a little eyeliner, which is downright fancy for me, but we were still quite the mismatched looking pair.",
        "It was completely typical for us. He nearly bankrupted himself on fashion while I'd probably break my legs if I tried to walk in heels. Much though I teased him about it, I had to admit that it made him look damn good. The way the sharply cut clothes hugged his sides and showed off his athletic frame... and those pants hugged his ass just exactly right...\n\nThere's literally thousands of amazing places to eat in Brooklyn close to Malcolm's house. Jersey City, on the other hand... not so much. There are plenty of upsides to living on the wrong side of Manhattan. Like being able to afford rent and being able to leave your house without getting mobbed, for example. The biggest one is the view. The views of downtown Manhattan from Jersey City are the single best city views on Earth. I was very happy for this as Malcolm and I settled into an italian restaurant by the water because It drew his attention away from me as I struggled to compose myself.\n\n'Just breathe,' I told myself, 'It's Malcolm, you talk to him online every day.' But he hadn't even once checked out my cleavage. Hadn't even eyed my ass while I'd tied my shoe. It didn't fill me with confidence.\n\n\"It's amazing,\" he said, gazing out over the water towards Battery Park and Wall Street, \"Captivates my attention no matter how many times I see it.\"\n\n\"Yeah.\"\n\nA pleasant breeze blew off the water over us, driving away the worst of the summer heat. It waved through Malcolm's hair in a very eye-catching way. Heat rose through my body that had nothing to do with the temperature. He was just so fucking sexy in a suit... Across the road from our table, tourists crowded the riverside path. A group with a selfie stick were getting in the way of everybody else and some bikers tried in vain to move faster than a crawl. We both laughed when one unwary kid lost a pretzel to a seagull.\n\n\"You know I'm dying of suspense over here.\"\n\nI jumped, realizing his attention had shifted to me. Time to tell him. But all at once, the haze of arousal I'd tried to shield myself in vanished. Butterflies fluttered through my stomach and I felt myself blush. 'It's Malcolm! You tell him everything else! If he were anybody else in the world, you'd already be flirting with him. For fuck's sake! You're a grown ass woman, get your shit together.'\n\n\"What?\" was all I managed to get out. 'Goddamnit!'\n\n\"Hmm... lets see if I can guess. You didn't finish the ARA project at work, you would have celebrated that right away without being cryptic about it. Same goes for Tyler finally getting fired. You didn't get a raise or you would have bought the most expensive wine on the menu. That one bit at the end makes me really curious. 'Don't let you say it's nothing.' Whatever could you mean by that?\"\n\nMalcolm is a complete slave to his own curiosity, so I'd expected something like this and I'd spent hours figuring out how I'd handle it. I'd tried a bunch of variants of tactfully easing into the topic. I hated all of them. Subtlety really isn't my thing. I sighed, gritted my teeth, and burst out:\n\n\"I want to be your girlfriend.\" I don't get to see surprise on Malcolm's face very often. It felt nice to swap our typical roles like that. Let him be the off balance one for once. I'd said it! I'd finally said it! \"God, I've wanted to say that for years! But you were always dating someone or I was too much of a coward or I hoped you would make a move on me on your own.\" I tried to gauge his reaction but couldn't. His serious poker face was on and it made me uneasy. \"And... I guess I'm tired of waiting. And I know you've been miserable with all those Tinder hookups. You've been trying to be someone you're not since you and Chloe broke up. I want you to be your full self with me. So yeah, there it is... please say something.\"\n\nWas that fear on his face? No... apprehension? A pit opened up in my stomach, threatening to drag me down into it. But no, there was more there. Desire? Longing? Was I just showing myself emotions I wanted to see? 'Please say something!' I internally begged, 'please!'\n\nFinally, he did. \"Wow, that's a lot to take in.\" Some of the shroud lifted and he offered a tentative smile. \"You can relax. I do want you. Very much.\"\n\n\"You do?\" 'AHHHHH!'\n\n\"Yes, and I'm sorry if I've made you feel unwanted.\n\nHis words and his expression were not matching up. \"You don't look thrilled.\"\n\nHe sighed. \"I'm thinking about what you said about me being something I'm not. I suppose you're right, but I'd like to hear it from your perspective. What makes you say that?\"\n\n\"You've seemed down on yourself. Not so much around me, but just in general. You don't seem so sure of yourself and have these tiny delays. It's like you have a normal reaction to things that you're suppressing or rethinking or something. I noticed it a little after your breakup and its felt like you're not getting any better.\" Admitting the next part was difficult, but it had to be said, \"look, I know I've been a total jealous bitch about all your girlfriends and I'm sorry I never asked about you and Chloe, but I know she was your first really serious long term D/s relationship. Things ended badly with her and you've been trying to turn off the dominant part of yourself. But you can't. It's just who you are, and it a part of you that makes you happy.\"\n\n\"And you say you're not perceptive about people...\" he muttered to himself. Then, louder, \"So you want to date me to put me back together?\"\n\nI pointedly looked him up and down, letting my eyes linger over his lips, his fit figure and directly into his crotch. \"Well... that's not only that reason.\" I'd never tried flirting with him and it felt good. I wanted to move the conversation away from downbeat areas and focus more on us together, but it didn't work.\n\n\"What if there's a good reason for me trying to leave power exchange behind? What if I seriously hurt Chloe and I decided that getting turned on by the pain of my lover is a little fucked up?\"\n\n'Oh god, how much is he hurting inside?' I felt terrible, realizing that my jealousy had stopped me being supportive. I wanted to hug him, but I knew that wasn't the way to get to him. He responded best to rationality. \"You're implying that you were abusive and I highly doubt that's true. You're one of the most emphatic people I know. Am I wrong about that?\"\n\n\"No...\" he said hesitantly, \"not abusive like that. But I did break her trust a number of times. Well, I suppose in fairness, we both broke each other's trust. But still\u2014\"\n\n\"Malcolm,\" I cut him off, \"we're twenty-five. We're young! We sometimes do things we regret.\" I took his hand from across the table and squeezed it for emphasis. \"You can't keep punishing yourself forever. You deserve to be happy.\" His hand was firm and powerful in mine. I enjoyed holding it more than I'd expected.\n\nWe both gazed down at our joined hands. He seemed to like it too. But still, he was unconvinced. I felt like I was getting close...\n\nI pressed him a little harder, \"Look, you're not happy now. Don't deny it, we both know its true. Reasons aside, you gave the vanilla lifestyle more than its fair chance, and the experiment has failed. Maybe it's time to try getting back on the metaphorical bicycle? Older and wiser, yaknow?\" I held my breath as he thought about it. Seconds ticked by, but I didn't know what else to say.\n\nSlowly, he smiled. Something about him changed, almost imperceptibly. He seemed slightly larger in my vision and slightly less tense. I could tell it wasn't over. I would still have a lot of work to do healing away his scars, but he seemed willing to give me a chance.\n\n\"You're right, I have not been happy. I confess, I've missed it.\" He gave me a wolfish look, hungry with desire, \"Maybe it's selfish of me, but I feel like I wanted you to talk me into it. Maybe especially because it's you...\" The unmistakable lust in his eyes absolutely thrilled me. Especially because it's me? Was it possible that he'd fantasized about me too? My breathing sped up and my own desire reignited. It started to feel real. I was going to get him! I gripped his hand harder, possessively. 'Mine!'\n\n\"But still,\" Malcolm continued, \"I want to make sure you understand what you're getting yourself into. There's a big difference between being my girlfriend and being my submissive.\"\n\n\"That's fine, I want to be\u2014\" He silenced me with his eyes. To this day, I have no idea how he does that. Nothing physically changes in them, but somehow, it works every time. It was the first time I'd really felt his dominance directed at me. I'd felt it before, seen it on display in different shades constantly, but he'd never really hit me with it like that. It had an immediate effect. Words died in my mouth and I shivered. I pressed my legs together, feeling the warmth within me intensify.\n\n\"This is important. If you really want me to be my full and unbridled self, then we're not just talking about some kinky sex a few times a week. We're talking about you giving yourself over to me. Physically, mentally and emotionally, I'll aim to own the entirety of what makes you Devyn. It would be very different from the friendship we've had all our adult lives. Are you sure that's what you want?\"\n\nI met his serious tone unflinchingly. \"Yes. I want to try. There will be a learning curve, but I want this.\"\n\n\"I know you do. You have your mind set and you are determined to see it through. That stubborn streak of yours will be quite fun to play with.\" He was looking me over, far more overtly sexually than he ever had in our whole relationship. Deliberately showing me his attention on my breasts, my lips, my neck. I squeezed my legs together harder, reveling in his attention. As he stared openly at my cleavage, my nipples hardened, as if they wanted his recognition too.\n\n\"Nevertheless,\" Malcolm continued, \"I won't feel right unless I do my best to give you as much understanding as possible before we change things between us. But it's difficult for me to talk about because I've never experienced the sub's side.\" He considered, then pulled out his phone and scrolled through his contacts. \"There's a friend of mine who lives pretty close that I'd like to invite to join us. She can tell you everything she wishes somebody had told her before she dove into submission.\"\n\nI thought about pushing back. I was already damn sure what I wanted. All I wanted to do was get through dinner quickly, rush home and strip him out of that suit. But he was trying to do what he thought was right and he would feel better knowing he'd done it. So, I resigned myself to waiting just a little longer. \"If it's really important to you, alright.\"\n\n\"Think of it as informed consent. Besides, you'll like her. She's very much your type.\" He paused, considering, before he continued, \"and there's a bit of background information you should probably know first.\"\n\n'A bit' didn't exactly cover it. Turns out that there was a ton Malcolm had never told me while he was shielding me from girlfriend envy. He and Chloe had met some like minded couples on Fetlife and they got together every few weeks. He was skimpy on the details, but it sounded like their meetings were very sexual in a not entirely monogamous way. A wistful look played across his features as he described the open dynamic among them, how they enabled and supported each other and how it was nice to be openly kinky around people who understood. Apparently, he'd grown distant with them since the breakup. This friend of his, Nicole, was part of that group with her mistress, and she lived a short walk away. Small world.\n\n-------------------\n\nNicole appeared at our table just as we were paying the check. I say 'appeared' because it really seemed like she materialized out of nowhere. One second Malcolm was doing tip math, and the next there was a small, pale woman hugging him. I gathered they hadn't seen each other in some time from her accusations that Malcolm sucked at staying in touch and was a dick for springing a reunion on her in the middle of the night.\n\nJust like Malcolm had said, I did like the look of her. She was small, a full head shorter than me, but athletically built with tough looking hands and a hiker's legs. She wore a t-shirt with a local bar's print and jeans ripped at the knees to be shorts. Her breasts looked wonderful, firm and full enough to be fun but compact enough that they wouldn't bother her while running. Short cut red hair framed her face, angled to one side to show off the orbital and helix piercings in one ear. She was focused on eyeing me up simultaneously as I took her in. Our eyes met and the spark of attraction between us would have sent my gaydar ringing even if Malcolm hadn't mentioned her mistress. My type indeed. I sat up straighter and made a show of sticking out my chest.\n\nShe liked what she saw. \"Who's your cute friend?\" She asked. When she heard my name, Nicole gasped, \"You're the one he's always talking about! It's great to finally meet you, I'm really happy this idiot finally got over himself and brought you to our world.\"\n\n'He's always talking about me?' I filed that away for later.\n\n\"As a matter of fact,\" I pointed out, \"He didn't do anything. I asked him out and he's still dragging his feet about it.\"\n\nNicole gave Malcolm an incredulous stare. \"YOU got asked out by a girl?\"\n\nHe laughed, \"Is it really that hard to believe somebody might find me attractive?\"\n\n\"It's hard to believe that you'd need somebody else to take the initiative.\"\n\nI joined Malcolm's laughter, happy somebody else appreciated my struggle. \"Don't you gang up on me too!\" he jokingly put his hands up. \"Anyway, before we get too into it, we should probably give them their table back. You both interested in ice cream? There's a good spot close by.\"\n\nWe ended up munching cold sugar creamy wonderfulness in a park near my house. We'd brought Nicole more up to speed and I found myself liking her. The way she crossed bubbly warmth with irreverent directness made her very easy to connect with. She did have a lot to share about 'our world' as she put it.\n\nSome of her observations were smaller amusing anecdotes. Like, for example, how she found herself mixing cuffs and crops into her analogies and needed to watch herself at work. Or how the most frequent reason she had to stop a bondage scene was to use the bathroom.\n\nOthers were bigger and more abstract. Everything in Nicole's life felt supercharged. The highs were higher, the lows were lower and she rarely felt neutral. Her mistress was into orgasm control, so Nicole was perpetually horny. Everything she did felt in some way sexual, from getting dressed in the morning to ordering Starbucks to meeting a stranger and reflexively checking them out. Sometimes, something as simple as taking a deep breath on a clear sunny day could make her feel incredibly ALIVE in an all upper-case letters way. Far from frightening me away, or whatever Malcolm had expected, it made me more interested. My own experiments in that department gave me some sense of what she was trying to say, and I liked the idea of adding some spice to my daily life. She blamed it all on Malcolm, who she called 'The Wizard', for introducing her mistress to tease and denial.\n\nThe look on his face made me ask, \"Why are you 'The Wizard'?\"\n\nHe ignored me and scowled at Nicole, \"I hoped you'd forgotten that damn nickname. Why don't you tell her about yours, Firefly?\" For some reason, despite all the personally sexual stuff she'd already unabashedly shared, this made Nicole's cheeks flush.\n\n\"Hers is easy, her hair is really fiery,\" I pointed out.\n\n\"Yes, Firefly because I'm a redhead,\" Nicole quickly said, \"Anyway back to Wiz--\"\n\n\"Nicole.\" Malcolm smoothly cut through her words like a knife. Neither louder nor softer, but with unmistakable authority that made me shiver and Nicole jump like she'd been caught on her phone at work.\n\n\"Fine!\" She confessed, \"I got my nickname in our little group because, when Mistress Sam spanks me, my pale white ass glows like a firefly.\" We all laughed. It got me to wondering, though. Enough people had seen this phenomena to be in on the nickname?\n\n\"How many people have seen you get spanked?\"\n\n\"Everyone in the meetup group and a few other friends of ours.\" She blushed deeper, making her light up in a very cute way. \"That's not nearly the heaviest shit that's happened for a crowd.\"\n\n'What is the heaviest shit that's happened in this group?' I wondered, but decided to hold that question for another time. Malcolm had deflected and I couldn't just let him get away with refocusing attention away from himself.\n\n\"Back to you now. Why are you the Wizard?\"\n\n\"It's because he can do magic--\" Nicole began\n\n\"I can't do magic,\" Malcolm said with a roll of his eyes.\n\n\"--Even though he denies it,\" she pressed through his interruption. \"Fortunately, you don't need to take my word or his for it! You can look at some evidence and decide for yourself.\" She whipped out her phone.\n\n\"Don't tell me you have that video saved and you carry it around everywhere you go.\" Malcolm groaned.\n\n\"Of course I do! Do you have any idea how hot it is to us subs?\" She passed her phone to me, \"do you have any headphones on you? Here, use mine. Seriously though, Malcolm, it's a good thing for her to see if you want to give an idea of how intense power exchange can get.\"\n\nHe sighed but nodded, \"Okay, but bear in mind that it is the very extreme end. It should serve as a warning.\"\n\nI looked between them, trying to decide how serious they were. \"That's a whole lot of buildup. Pardon me if I'm skeptical anything can live up to it.\" Malcolm smiled knowingly, as if to remind me that he'd spent years exchanging porn with me and he knew damn well what would live up to my expectations.\n\nHeadphones in, I hit play.\n\nImmediately, I was assailed by graphic sex. The camera focused on a pretty woman lying on her back on a raised table with her eyes closed, arms by her side and her legs spread. Specifically, it focused on her pussy, which was very clearly very hot. Rivulets of wetness traced from her nethers down to her ass and her pelvic muscles spasmed. A shadowy figured crouched by her head, seeming to whisper in her ears. Occasionally, he would caress her. Her face, her neck, her hair, his touches were gentle and seemed to covey warmth and affection... and love.\n\nI shifted uncomfortably. It was clearly Chloe on the table and Malcolm above her. 'Don't be jealous, he's yours now, soon those fingers will be caressing you.'\n\nHe never went below her collarbones, but her body responded like he had a vibrator pressed to her clit. Her abs flexed, her breasts heaved and all her muscles quivered. She convulsed but never shifted, like she was a mime acting out being tied by invisible ropes. Her arms pressed straight down while her thighs fought themselves to simultaneously open wider, clench together, and stay perfectly still all at once. Minute by minute, her struggles became more pronounced. Her labia flooded with blood and her clit became clearly visible between them. She moaned freely, like a pornstar acting the part of a cock hungry whore. Malcolm moved to be beside her, like Prince Charming bending down over Snow White but infinitely more X rated. Still whispering to her, he inched towards her mouth. Chloe's hips thrust themselves into the air, getting more frantic the closer Malcolm got to his target.\n\nThen Malcolm kissed her, and Chloe's pussy exploded in orgasm. Her clit looked like it would burst and her vagina couldn't have contracted harder if she'd had a cock buried inside her to grip down on. I felt my jaw drop. Nothing but air had touched any erogenous part of her. My own body responded to the raw fury of Chloe's orgasm as she kept cuming and cuming. Malcolm's lips still pressed to hers, his tongue clearly in her mouth, her orgasm ran its course over a minute and a half.",
        "The screen went black.\n\n\"How the fuck did you do that?\" I demanded of Malcolm. He and Nicole both laughed.\n\n\"You should have seen your eyes getting wider,\" Nicole teased me, \"Like I said, he's a goddamn wizard.\"\n\nMalcolm shrugged but looked distinctly self-satisfied. \"Simple. I told her to cum and she obeyed.\"\n\n\"How is that supposed to be a warning?\" I asked. \"No woman on Earth could see that and not want a taste. Do that to me too please.\" I pointed at the screen, \"I'll have what she's having.\"\n\n\"Okay, kidding aside, there's a lot of conditioning that makes hypnosis like that possible.\" Nicole mouthed 'Wizard' behind Malcolm's back when he said 'hypnosis.' \"It isn't mind control, it required her to genuinely want to let me into her mind and to obey me. Anyway, step back a second. Can you give yourself a hands free orgasm? Either of you? Of course not, that's why the video is so fascinating to you. Neither could Chloe.\"\n\n\"But,\" I motioned to the phone, \"I just saw her do it.\"\n\n\"Yes and no. Yes, she had an orgasm with no physical stimulation. But no, she couldn't give it to herself. She couldn't think herself over the edge, she needed me to talk her through it. She came because I told her to. That, Devyn, is your warning.\" His smile vanished and his stare bore into me, as if trying to force his message into me with the weight of it. \"In a very real way, I told her to do something that was impossible for her on her own, but she obeyed me anyway. That is how much power a dominant can wield over a submissive. That's how much control I might have over you. If that doesn't worry you, at least a little, it should.\"\n\nNicole nodded, also serious, \"It's true. It's the same for me. After a while, you get so used to submitting and being obedient that disobedience feels viscerally wrong. Like, even just the idea of it. I'm also super sensitive to everything from my mistress. I think that's true for all submissives. If your Dom is mad at you, or hell, even just slightly disappointed, it ruins you. Can't eat, can't sleep, can't think about anything else. You'll do a whole hell of a lot to avoid that feeling.\"\n\nThat worked its way into my head. I was pretty damn sensitive to Malcolm already. Hell, I'd just spent a week edging myself just to try to drown out my fear of feeling rejected by him. Would I feel that fear even more acutely? Would it expand to include any kind of negativity from him? It worried me. I never wanted to be that emotionally needy, but wasn't I already on my way there?\n\nBut that didn't give us enough credit as a pair, right? Malcolm cared about me. He'd always cared about me as his best friend and now I knew he would care even more as my lover. I could feel it deep within myself. He genuinely cared about making sure I was comfortable and felt safe.\n\n\"I trust you,\" I tried to put as much feeling into the words as possible, to reassure him that I really did mean it. I've always sucked at conveying my emotions, but his returning smile let me know he understood. I met his eyes, trying to convey as much emotion as possible, but I felt myself getting lost in the beautiful patterns of blue, teal and yellow surrounding his black pupils. He, on the other hand, seemed to be looking past my exterior deep into me. I wanted to show myself to him, for him to see me. 'I trust you, I want you.' I tried to convey my thoughts into his head through our eyes. 'I trust you. I want you. I want all of you. I want to make you happy. I want to kiss\u2014'\n\nThe thought had barely begun when there was suddenly no space between us. His arms around me, his face inches from mine, he seemed to tower over me despite being the same height. I breathed in his warmth and closeness and felt my eyes close on their own. 'Oh my god oh my god oh my god.' As romantically cheesy as it sounds, when his lips touched mine, my legs really did nearly give out. My entire body seemed to sigh all at once and I barely had time to register how hot his lips felt before his tongue was in my mouth. Did he feel so hot because the ice cream had cooled me? Why hadn't it worked on him? Why was I thinking about ice cream at a time like this? I turned my mind off and pressed myself into him. My tongue grappled with his and we danced around my mouth. Try as I might, I couldn't seem to gain any ground into his mouth. We alternated between entwining our tongues and him pinning mine. He held me close to make me feel wanted, wanted in a way I'd needed to feel from him for years.\n\nIt was perfect. In retrospect, I can't say if it felt that way because the kiss was actually that good or because it was our symbolic first. At the time, I felt pure elated joy. Well, maybe not actually 'pure' joy. It was diluted with a bit of lust. All right, maybe a lot of lust. I was panting, wet in some places and rock hard in others when we finally came apart.\n\n\"You read my mind,\" I whispered to him, \"You really are a wizard.\"\n\n\"No magic, simple muggle biology. Your pupils were very dilated. Means you're aroused.\"\n\n\"Wow, you both look like you needed that.\" I'd forgotten about Nicole!\n\n\"Sorry! We didn't mean to turn you into a third wheel.\"\n\n\"It's cool, I've creeped on many make out sessions. As far as heteros go, that was pretty hot. I give you guys 8 outa 10. Points for raw thirstiness, but could be improved with more groping and less clothing.\"\n\n'Less clothes! Now there's an idea.' I realized I was shamelessly pawing at Malcolm's chest along the buttons of his shirt. Nicole noticed with a smirk, \"That said, I think I'm gonna head for home now. I'll find you online, Devyn. I'm sure I'll see you both soon!\" She might have vanished as suddenly as she had appeared. I don't know, I was too busy grinning like a fool at Malcolm.\n\n\"Let's go home,\" I said. Seeing his nod felt like pure victory.\n\n-------------------\n\nMy tiny apartment felt completely different. Malcolm sat in my comfortable desk chair while I occupied the hard folding chair typically reserved for guests. It had just kind of happened that way. Like it was his home and I was just living here. I cast a sheepish look around the place. My work clothes still lay in a heap where I'd tossed them earlier, my bed was unmade against the back wall, dishes were still in the sink and my desk was in complete disarray. Malcolm noticed the hard drive still plugged into my laptop and teasingly asked if I'd gotten any use out of it recently. I felt my blood rise. It might have been the most sexual jab he'd ever taken at me.\n\nI liked it, and after all the buildup I was tired of waiting. So, I told him all about what I'd been doing before dinner. I told him how I'd done the same thing every day for a week, working myself up to tonight. I turned on the erotic flirt I'd always wanted to be for him, being as provocative as possible describing my fingers twisting inside myself as I imagined all the things I'd do to him and he'd do to me. How I'd suck all of him down to his balls until he grew hard down my throat. How I'd been so wet for hours that he'd slide into me instantly without any foreplay. How I wished he'd thrust into me, hard and fast, pounding me hard enough to make the bed shake.\n\nHe listened, politely attentive as ever, as casual as if we were talking about where to get lunch. \"And you say you're bad at expressing yourself,\" he commented ironically. His posture shifted subtly from casually relaxed to being more focused and intense. \"That's what you want, eh? To 'choke on my cock and get fucked to splinters', as you so eloquently put it?\" I swallowed and nodded, my words sounding much more dirty coming from his mouth. \"Well, we'll get to that soon enough. First, though, we need to talk about the two laws.\"\n\n\"Just two rules?\"\n\n\"Oh no, you'll have tons of rules to keep track of. These are different, they're called laws for a reason. When you get down to it, rules are just part of the game. If you disobey the rules, you get a sexy punishment and the game goes on. The laws, on the other hand, must always be obeyed by both of us.\n\n\"The first law is for safe words. Red and Yellow. Say 'Red' at any time and everything stops. Say 'Yellow' and we slow down. The safe words exist to keep us both safe and to help us both feel comfortable. You can use them at any time, for any reason. We'll talk about how you're feeling and how to help you feel better. There is never any shame is using a safe word.\" His focus added an edge to his words, \"It doesn't show a lack of trust or willingness to submit or anything like that. You should never feel pressured against using them. If anybody ever tries to tell you different, tell them to fuck themselves.\n\n\"The second law surrounds honesty. I'll never lie to you and I expect you to always be honest with me. If, for example, I'm spanking you and I check in on you, I expect you to be honest. If you're in serious pain and you can't take any more, I expect you to tell me that and not lie because you think it's what I want to hear. Similarly, if you think you've messed up and I tell you it's okay and I'm not angry, you should believe that and not second guess it.\n\n\"Basically, the two laws are about open and honest communication. It's important for all couples, but it's especially critical for BDSM. Power exchange is more than complicated enough without having to deal with basic stuff like that.\"\n\n\"Red and yellow. Easy to remember. I understand. But doesn't that mean that I could just complain my way out of getting tied up or spanked?\" That turned his smile from serious to wolfish.\n\n\"That might be a concern for some people, but not you. You don't know how to do anything half way. It's part of what makes you so attractive to me. I'm not worried about you giving less than 100 percent, I'm worried about you trying to push yourself for 130 percent and getting injured.\"\n\n\"Fair enough,\" I nodded.\n\nHe sat up slowly, somehow seeming to gain more height than he should have. He seemed like a predator looking down on some very tasty prey. It made me feel simultaneously smaller but desired. \"You've been in control of yourself all your life. How you spend your time, how you move, who you pursue, how you have sex... You're a virgin in this new world, Devyn. A very horny and willing virgin.\" He feral grin broadened, as though I was a juicy smelling steak, \"So now... are you ready to give up some control?\"\n\nI'd never been more ready!\n\nAnticlimactically, he didn't push me to the ground and fuck me. Instead, he instructed me to stand with my back to the wall. That, and nothing more. He sat, his eyes roaming over me while I stood fidgeting. He seemed like somebody in a museum taking his time to appreciate a master's painting. Not focusing on any part of me particularly, he seemed to be capturing all of me at once. I imagined I could feel his gaze like a very light physical sensation playing over my skin. It made me feel very exposed, despite still being fully dressed.\n\n\"Do you know why I find you attractive?\" He asked. I was surprised by the suddenness and by the question itself. Up until a few hours ago, I'd been sure he wasn't interested in me at all.\n\n\"No -- um --\" I realized I should give him some honorific but didn't know what to use, so I defaulted to \"\u2014Master.\" That earned a chuckle from him.\n\n\"I prefer 'Sir', but I like where your head is at.\"\n\n\"Oh. Can I ask why?\"\n\n\"You may always ask 'why'. Usually, I'll even answer. Master implies a level of... well, mastery, which I don't feel I possess. It's actually part of why I dislike that 'Wizard' nickname so much. Both seem to convey a sense of infallibility that isn't me.\"\n\n\"Oh. Okay, Sir. No, I don't know.\"\n\n\"You're strong, determined, highly intelligent,\" he stood and came towards me, \"and you possess a sense of self that's entirely your own. You seek out and do what makes you happy simply because it makes you happy, expectations of others be damned. I admire that bravery in you.\" My face heated at his praise and I swelled with pride. It felt fantastic being recognized like that from him!\n\nNevertheless, I was curious, \"but those aren't really very submissive traits, sir?\"\n\n\"On the contrary, those are the most appealing traits a submissive can have. Anybody can dominate someone weak. It can be fun, but there's nothing special about it. Someone weak has little power to give up to the dominant.\" He lightly caressed my cheek, his fingertips sending shivers all through my head, \"But when somebody strong chooses to give up her power to a dominant... well now, that's something different altogether.\" His hand snaked around to the back of my head, gripping my hair firmly but not uncomfortably. I found that I couldn't move, couldn't turn away if I'd wanted to. I didn't want to, I leaned back into his hand wanting to feel more.\n\n\"You have so much power inside you, Devyn,\" he whispered, his face little more than an inch from mine. \"Feeling it is very intoxicating to me.\" He breathed in deeply, like a connoisseur smelling a fine wine. His lips consumed my vision, so close to my own. I wanted to feel them again, but his grip on the hair just behind my head held me firmly in place. I tried to lean forward, my desire briefly warring against his grip on me, before giving up and letting myself rest against his hand again. I'd never felt so very controlled before in my life. His eyes burned into me and my breath came in short gasps. I wondered if my pupils were dilating again.\n\nThen Malcolm released me and stepped back. \"Remove your top and bra,\" he said. Casually, like he'd asked what time it was.\n\nSomething about that made me blush again. I'd wanted this. I wanted to feel more and go much farther. But, somehow, actually taking the first step and baring my breasts to him made me feel very nervous. Pangs of uncertainty about my body crept into the corners of my mind. What if I looked like too much of a tomboy to him? My hands didn't snap into action to automatically obey his command. That would have been too easy. Instead, they fumbled behind me with the clasp like a virginal high schooler trying to reach second base. It finally came undone and I tossed the bra to the side. Ironically, it landed right next to my bed on top of my discarded clothes from hours ago.\n\nI love my boobs. I absolutely adore them to death. I love how they feel in my hands, I love the pleasure they give me, I love the feeling of freedom when they come uncaged after a long day in a bra. And, right then, I absolutely LOVED The effect they had on Malcolm. His eyes were glued to them and he nodded slightly in appreciation. Maybe I imagined it, but I could swear there was a bulge growing in his pants.\n\n\"Intertwine your fingers behind your head and arch your back slightly.\" I quickly complied, raising my arms and pressing my chest out, making my tits as prominent as possible. Once again, his fingertips traced over my skin, this time on my abbs. \"Hold yourself still.\"\n\n\"Yes, sir,\" I promised. He glided over my smooth, hard abs, just lightly enough to send little tendrils of pleasure through me at his touch. Shivers ran upwards through me the higher he went, inch by inch upwards over my stomach. He teased me, going agonizingly slowly, feeling my bare skin all around everywhere except the spots I wanted. My nipples grew harder and more pronounced with every heartbeat. They cried out for attention, to be rubbed and pinched and pleasured. However, to my dismay, he skipped over them and instead focused on my arms and shoulders.\n\n\"You have excellent triceps and shoulders,\" he complimented admiringly. That almost made up for all the teasing. There's a select group of things girls are used to getting compliments on from men, and those muscles are not on the list. He liked my body for what it was!\n\n\"Thank you, sir! That's years of basketball and sweat at the gym.\"\n\nFinally, in one motion, he cupped both my breasts. They expanded into his strong, firm hands as I inhaled, making me gasp in pleasure.\n\n\"Are these very sensitive?\" he asked, noticing my reaction.\n\n\"Usually not this much,\" I was having great difficulty keeping myself still and not pressing into him. He squeezed lightly, clearly enjoying fondling me as much as I was. I closed me eyes and drank in the sensations. My chest alighted with pleasure as I presented myself to Malcolm to play with as he wished. It felt\u2014\n\nMy nipples exploded. My eyes burst open and I doubled over, letting out a weird moaning yelp sound. Malcolm had my highly teased buds between his fingers and he was rolling them none too gently.\n\n\"Hold still,\" he reminded me. I nodded, but it was very hard. Pleasure surged through me, spiced with a bit of pain when he squeezed. Each pulse of sensation sent a jolt down to my clit. I felt like his plaything. Like my body existed for his amusement and my consciousness existed to add to his fun. He tweaked and squeezed, enjoying seeing me swap between pleasured sighs and startled yelps.\n\n\"Pleasure or pain?\" he asked.\n\n\"Both,\" I gasped, \"it's very intense.\" He smiled broadly and released them, kneading my breasts while allowing the nipples time to recover. If anything, this was even more intense than before. Powerful tingling sensations concentrated all my focus into two sensitive points as blood flooded back into them.\n\n\"Your face is wonderfully expressive. Very genuine. Now remove the rest of your clothes.\"\n\nThis time I obeyed with no hesitation. My jeans and panties were both over my hips and down my legs before I fully registered what he'd said. I was so wet, so ready for some real pleasure, I couldn't wait to bring my pussy out to play. I hit a slight roadblock around my calves. Seriously, whoever designed women's jeans didn't have speedy removal in mind, especially not from athletic legs. Finally, totally naked, I stood before Malcolm.\n\nI expected him to tease me even more, but instead he immediately stroked my bush.\n\n\"Shave this before our next meeting.\"\n\nOkay, maybe this was actually more teasing. He barely gave my pussy any pressure or contact at all, simply soft petting and pulling my hair. It was very distracting. \"I thought you liked some hair on a pussy,\" I said.\n\n\"I do, and this is quite nice. However, I'm going to be learning your body and how it responds, so having clear sight of your sex will be very useful. Also, you value your bush a lot, so shaving it for me will be a daily reminder of your submission.\"\n\nI gulped, \"Yes, sir.\" 'He must feel how wet I am. Come on, fuck me!' I tried to inconspicuously press my hips forward, just a little bit, but he adjusted his hand before I could get any contact.\n\nMalcolm seated himself again and beckoned me forward. \"Kneel.\" I was very thankful that I'd put a rug down. My responses were coming faster, with less thought on my part. Settling into his control felt good. I didn't really have to think very much, just feel and enjoy. \"Knees spread a little wider, cross your arms behind your back. Grip your forearms as high up as you can.\" He guided me to the position he wanted, tits thrust out and legs spread wide, saying it was called 'Exposed Pose.'\n\nExposed is right. Holy fuck this is intense. Malcolm towered over me like a statue. I only made it as far up the third button from his belt. Still fully dressed in his crisp, clean suit, Malcolm looked down on my complete nakedness. The difference in height felt distinctly new and weird to me. We've always been similar heights, I was used to seeing him on my level. Now, he might as well have been Zeus seated atop Olympus. On top of that, the pose itself was more taxing than I'd have thought. My knees dug hard into the rug and my shoulders were unhappy with how much they were being asked to stretch.\n\nI tried to make sense of everything I was feeling but gave up. Saying I felt exposed or vulnerable just didn't cover it. I was kneeling on the floor at my best friend's feet because he'd told me to. But more than that, I was here because I wanted to be. I wanted to obey him, and expressing that so openly made me feel more naked than the simple lack of clothes could account for.",
        "But no. 'Vulnerable' implies some kind of perceived threat, doesn't it? That wasn't right. I felt completely safe, held firmly in control. It was almost liberating to feel so carefree. It just felt very... open. Like my inner self was on display along with my body.\n\n\"You're beautiful,\" He told me, look down over me appreciatively. It suddenly hit me that kneeling put me much closer to the bulge in his pants. The very distinctly cock shaped bulge just below his belt buckle. I licked my lips, hungry for it. Two fingers under my chin lifted my attention back to his face. \"Pleasure yourself.\"\n\n\"What?\"\n\n\"You heard me.\"\n\nMy arms twitched from behind me. \"Like... Masturbate? Sir?\"\n\n\"Indeed.\"\n\nYeah, everything I just said before about feeling naked? Forget all that, THIS is what I should have saved those descriptions for. My fingers slid between my lips more easily than a skater on an ice rink. That first long, hard slid over my clit seemed to shock my system, taking me from feeling teased to full on ready to fuck! I thought I was going to cum on the spot.\n\nHe moved from my chin to caress my cheek, gently playing with a few wisps of hair.\n\n\"You need my permission before you can orgasm, my pet.\" I moaned in pleasure, the wet sounds of my schlicking filling the room. \"You are mine now. Your sexuality is mine to play with. I decide when you cum... if you cum.\" It's completely unfair how being told I don't have control over my own orgasms turns me on so much and makes me want to cum NOW! I felt it boiling inside me, the pressure, building up the need for release. It was all too much, overwhelming, kneeling with my pussy spread wide, fucking myself for his whim.\n\nHe watched intently, paying close attention to my fingers, noting how I favored my clit and moved to penetration when I felt close to cumming. As I was beginning to adjust to what was happening, he added yet another level.\n\n\"Keep looking at my eyes, don't look down.\" Why would I look down? His expression looking back at me was beautiful. His emotion written there made me feel so special. His playful, knowing smile was back, though. That damn smile that always meant he knew something I didn't.\n\nI heard a zipper. 'Oh my god, is that? Did he just?' Without looking, I instinctively knew that his penis was free and inches away from me. One glance down and I'd finally see it. Malcolm's cock... how many nights had I fallen asleep dreaming about being fucked by it? How many classes had I daydreamed through imagining him naked? Now it was right there! But I couldn't look at it. It was so hard to obey, I kept involuntarily lowering my head and needing to force it back up.\n\nOf course, it only got worse when I realized he was stroking himself. The heat between my legs went into overdrive and I clenched down on my fingers.\n\n\"Please,\" I whimpered, \"it's so hard, please can I look?\"\n\n\"I'm enjoying watching you struggle. Seeing you choose obedience over your own want is very hot. You're doing well.\" He sounded proud. Proud of me! I wanted to be strong for him, but my hormones were all against me. I had wanted him too badly for too long, it was torture to endure. Just a few inches away and I'd feel his hard smoothness... I missed the feeling from before, the freedom I had felt without having to struggle and make decisions.\n\nSo, instead of his cock, I groped for his other hand and brought it up to my head. He understood without any words, taking hold of my hair just behind my head once again and firmly holding me in place. I immediately felt a burden lift off me. I didn't need to police myself or worry about being able to obey anymore. I nuzzled softly into his arm, enjoying the feeling of his warm skin against my cheek and the authoritative strength of his grip.\n\nI felt connected to him. A bond seemed to have formed between us, stronger than the physical hold he had onto me. Like giving him my strength and my problems and him being strong for me had brought us closer together. It felt very intimate, and very, very sexual. I was spending more time off my clit than on it to avoid tipping over. I want to cum. Every cell in my body wanted to cum! But I could also feel how much my continual retreats away from my clit, away from cumming, turned Malcolm on. I would be obedient for him! It was difficult, but I kept on edging, deriving my satisfaction from his quickening breathing and tapestry of facial pleasure.\n\nI'm not sure how long we stayed gazing intimately into each other. Time seemed kind of amorphous, like we existed together in a bubble where nothing else mattered. One heartbeat to the next, a circle over my throbbing and hypersensitive clit and a soft moan against his arm, circling onwards in a loop.\n\n\"How are you feeling?\" he eventually checked in.\n\n\"A little overwhelmed, Sir. But in a good way!\"\n\n\"Good. Time to move past foreplay.\" I gasped as I felt him guide my head down, \"you may look as much as you like now. If you're not too close, that is.\" I was going directly down into his lap!\n\nIt's hard to say if he was guiding my mouth to his cock or if he was holding me back from cannonballing my head into his crotch. It barely flashed past my vision before I had it engulfed between my lips. Each inch of his manhood passing inside me seemed to fill me with giddiness, like I'd just discovered the greatest toy of all time. I was determined to feel as much of it as possible, explore every smallest part of him with my tongue. His taste washed over me, combined with his scent and his pulsing excitement, all coming at me at once. Muskiness, soft skin covering rock hard desire, with a hint of salty tasting precum. Slowly, I eased back, sweeping my tongue from side to side on his underside. 'It should be here, right below the head...' He groaned, hard and long, when I hit the sweet spot.\n\nI felt intensely satisfied that I could bring that sexy man sound out of him, right past his dominant self-control, but I had little time to congratulate myself. His firm grip on my hair pressed me down again, slowly deeper and deeper.\n\n\"Tell me when it's too much.\"\n\nI love giving blowjobs. I love everything about oral sex, but deep throating has never been my strong suit. There were still a good two inches of cock left past my lips when his head hit the back of my throat and his guiding hand stopped pressing forward. I wanted more, I tried to get more, but my damn throat was simply having none of it. I gagged hard and was forced to back off.\n\nHe didn't give me any time to feel disappointed. \"That felt fantastic,\" he beamed down at me, \"This time you're going to taste my cum.\"\n\nHe guided me into a steady rhythm. Up and down, his hand on my head, pausing on every upstroke to let me lick his sweet spot before taking me down again. It really felt like guidance and not force. Like I was the one giving him the blowjob rather than him taking a blowjob from me, if that makes sense. He was simply showing me how he liked it best. Nevertheless, the experience made me feel deeply submissive. Kneeling before him like he was my king, worshiping him while ignoring how much wetter this was making my already throbbing pussy.\n\nI was in heaven. I hummed low in my throat to vibrate his cock, earning me another gratifying groan of pleasure from him. I sucked him hard and sloppy, keeping my tongue constantly working around and around as his pleasure mounted. Steady streams of saltiness accompanied faster jaw filling throbs as I sucked him. I did my best to maintain eye contact, looking up and trying to communicate with my expression just how much I loved his cock while keeping my focus inward. It was really a lot of work! Up top -- lick fast under his head. Slide down -- run my tongue over his whole shaft. Down at the base -- hum deep, smile without releasing the seal. Slide back up -- suck as hard as I could to give his head pressure. Again and again as he guided me up and down, gently speeding me up as he got closer. I found myself wishing there was some kind of jaw machine at the gym. My tongue burned and I was running short on air.\n\nPleasure, more and more uncontrolled, flowed freely across is face until finally he held me steady and convulsed mightily. Streams of hot cum filled me, coating the back of my throat and inside my cheeks as I frantically tried to swallow and keep licking him at the same time. It seemed like an infinite stream, spurt after spurt rocketed out from him, quickly overwhelming my efforts to keep pace. I was about to spill some when he finally slowed down and, with a heavy moan, slouched backwards and out of me.\n\nI savored the remainder of his cum in my mouth. I don't really like the taste and texture of sperm. Let's face it, who does? But feeling it there, seeing the satisfied grin on his face and remembering the feeling of him quivering and pulsing as he'd given it to me... it felt like a trophy. I'd made him feel that amazing! My body had turned him on so much that he'd needed his dick sucked, and he liked my head so much he'd overflowed my mouth with jizz. It made me glow with pride.\n\nAt the same time, a small shadow of disappointment grew at the back of my mind, linked directly to my dripping and sorrowfully empty cunt. With Malcolm spent, I would not be getting fucked tonight. I tried telling myself that it was dumb and greedy of me to feel let down by it. I was supposed to think of his needs before my own. This was what I'd signed up for. Indeed, what I'd practically begged him for. I knew it, but still, after sharing such an intimately erotic experience with him, I don't think I'd ever felt so horny in my life. I wanted to cum, damn it! It was fucking hard to come to terms with letting that go.\n\n\"You're pretty good at that,\" Malcolm had recovered and was extending a hand down to me, \"come, your knees must be killing you.\" They were, though I hadn't noticed it until then. I'd been too distracted by too many other things.\n\nBefore I could properly stretch, though, I found myself completely lifted off the ground draped up in Malcolm's arms. \"You've made me very happy today,\" he whispered in my ear, \"you deserve a reward.\" My heart skipped a beat as he carried me the short distance to my bed. Weightless in his arms, I felt hypnotized by his bottomless eyes so close. It really wasn't fair, the way he could flip a switch and overwhelm my emotions like this.\n\nHe lay me out with pillows comfortably propping my head up. Once again above me, he slowly played with my hair between his fingers. Despite still being naked and him still being fully dressed, I didn't quite feel so bare. It felt more... intimate? Comfortable? Natural? I don't know. I was having trouble thinking straight, my world was contracting to small points. The spots on my face where his fingers brushed me, the feel as he toyed with my bangs, the spot on my neck where he kissed me, the silk under my hands where I was rubbing his chest, and the ever present need inside of me that grew more urgent by the minute.\n\nHis fingers traced down my body as he positioned himself comfortably between my legs. I did a double take. Between my legs! He was set like he was about to eat me out!\n\nHe laughed and I could feel his breath on my upper thighs, \"Surprised?\"\n\n\"Um, yes, Sir.\" He rubbed my thighs, slowly spreading my legs as wide as they would go and sending bolts of pleasure directly to my core. \"It's not -- *moan* -- what I expected.\"\n\n\"People seem to think cunnilingus isn't manly or dominant. Nothing could be further from the truth. If you were a puppet, your strings would be right here. With a slight nudge --\" he pressed a finger directly between my lips, drawing it up through my slit and directly over my clit. My entire body jumped like I'd been struck my lightning and I let out a yelp of surprise and pleasure \"\u2014I can bring the most adorable reactions out of you. There's very few positions where I can exercise any more direct control over your body.\"\n\nHe was right. I writhed and moaned as he played me like a musical instrument. Teasing my lips with long brushes through my pubic hair to make me shudder and thrust my hips. Caressing my thighs with gentle squeezes just below my pussy to make me tremble and throb. Making me squeal and arch my back with a quick peck kiss directly on my clit. He worked those in with long, slow licks all the way up and through me, covering every inch of my sensitive cunt with his tongue.\n\nHe was like a researcher mapping out how I reacted to stimulus, testing and experimenting with different pressure levels and combinations. It kept me guessing and my orgasm level spiking up and down like an EKG machine. Any steady pressure on my clit brought me to the edge in seconds and queued him to back his teasing off. It was driving me crazy! I was on fire with need, long past the point of coherence. It felt so good. Everything about the roller coaster of stimulation felt so amazingly good, I didn't want it to stop. I wanted to explode. To cum my brains out through my cunt all over his face. But I also wanted this to go on forever. I never wanted the pleasure to end.\n\nMalcolm looked delighted between my legs, watching me closely for my reactions. Always so warm and attentive to me... even if he was using that attention to tease me, it made me feel special. Wanted. Loved.\n\nAll at once, I felt myself filled. Hot firm flesh of at least two fingers drove up into my pussy and mauled directly against my g-spot. I've never cum from penetration before, but I really thought I was about to. Without realizing it, I was putting the apartment's soundproofing to serious work and ripping the sheets off the bed. I thrust hard up to meet his fingers, wanting to feel them as deep inside of me as possible -- wanting to draw as much of him into myself as I could. He firmly pressed me down, easily overpowering me with his strength.\n\nMalcolm met my eyes and slowly, deliberately, lowered his mouth. \"Cum as much and as hard as you can,\" he told me from directly between my legs. Then my clit was being sucked hard into his mouth. He sucked me deep and licked me hard, each tiny bump of his tongue sending a vibration of pleasure directly to my core. I didn't last more than three seconds. I came. Hard. It was like a bomb exploded deep within me and exploded again and again with every contraction. Waves of pure ecstasy burst through me, filling every inch of me from my toes to my brain to deep within my mind.\n\nI came and came and came, clamping down so hard on his still thrusting fingers that I thought I could feel his fingerprints. My clit throbbed so hard into his mouth that I thought he was swallowing it. He never stopped hammering, forcing another orgasm right on the heels of the first. I felt myself melting, my mind going slightly fuzzy and my vision blurring around the edges.\n\nSlowly, with several aftershocks and relapses, the wildfire burned itself out. Everything seemed slightly hazy as I came back to myself, almost like I'd had a few shots of hard liquor. I realized I'd nearly crushed Malcolm's head between my thighs. I hadn't even realized I'd closed them! Also, I might have bruised my breasts a little. Again, didn't even realize I'd been squeezing them.\n\n\"Wow... that was fucking awesome.\"\n\n-------------------\n\nA short time later, we spooned together under the covers. The steady rhythm of his breathing as he slept was soothing, making me drowsy but still not wanting to sleep.\n\nWe'd chatted about everything that had happened, pressing each other for details about how the other had felt. I was especially interested hearing how powerful Malcolm had felt while directing my slow strip. Apparently, touch was a powerful form of control, and having free reign to touch me while I restrained myself made the Dom/sub dynamic more real. It was very interesting to hear his perspective, but even more so it was glorious to share a bed with him.\n\nHe had finally taken off his suit! His bare chest pressed into my back and his bare legs entwined with mine. I've always been a complete sucker for cuddles. Skin on skin contact does powerful things to my emotions.\n\nFinally feeling sated, I felt like I should be more analytical. Had I really done all those things? It had felt so easy to slip into the role, so natural to go with the flow. A voice in the back of my head repeated Nicole's words about obedience. What might I find myself doing? Maybe it should have worried me then, but it didn't. I felt too good to be worried by anything.\n\nI fell asleep holding Malcolm's hand tight to my chest. 'Mine!'"
    ],
    "authorname": "Lydra",
    "tags": [
        "consensual",
        "female submissive",
        "first time",
        "friends",
        "fsub",
        "male dominant",
        "mdom",
        "romance",
        "tease and denial"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/ignore-the-warning-label-pt-01"
}