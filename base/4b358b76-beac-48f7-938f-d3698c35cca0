{
    "title": "At His Majesty's Pleasure Ch. 10",
    "pages": [
        "Authors: Sorry for the massive delay in responding to comments, but we should have gotten back to everyone by now! (Let us know if we missed you.) As always, thanks for sharing your thoughts - it genuinely means a lot to us, and we wouldn't have gotten this far without your encouragement. \n\nAnd look out for another comment game at the end of this chapter!\n\n*****\n\nThe maids had left her with a fresh chest of day gowns the following morning. Now that there was (inexplicably) less guilt in enjoying herself, Alais perused through the fine silks and fabrics leisurely, still in her evening shift.\n\nThere was the sound of footsteps behind her, hardly enough warning before a heavy hand came to rest over her hip. \"Good morning there,\" said the King.\n\nShe jolted only slightly with surprise, before her lips drew into an unimpressed line - which may or may not have been a bit feigned. Nonetheless, she reached back and prodded him on the side, where he was proven ticklish. \"I thought you'd started your day before me.\"\n\nA laugh escaped him, but he did not prove so easy to deter, now that he was becoming more acquainted with her tricks. His fingers closed about the wrist of the offending hand, and then her other, disarming her from further attack. \"So I have. And now I've returned. Is it any wonder I couldn't stay away?\"\n\nHer arms squirmed in his grasp, an annoyed sigh coming out from her, albeit one more playful than foul-natured. \"Will you let go, please. I need my hands.\"\n\n\"Do you?\" His tone took on a playful air. \"Perhaps what I've planned for you doesn't require the use of your hands.\" He joined her wrists together, so that he held it with one hand - his hold (annoyingly) strong - so that his other might come to rest at the curve of her ass.\n\nIt was too early for this. At least, it was much earlier than usual. Her breath wavered with a nervous hitch from the touch of his hand. \"...Is this vengeance for something? What have I done now?\"\n\nAnother chuckle sounded, as his hand continued its trespass, now all but fondling the plump curves presented to him. \"Vengeance? Are my attentions so terrible to you? And here I thought you were in love.\"\n\nHis hand paused its groping, only to give a playful little pinch.\n\n\"But--\" she started, words dying out with that pinch. Small blessing she'd kept her face turned away from him, with the flustered look it held now. There was no moving away from him. There was no longer any need to move away from him - but even if that was the case objectively, was this not even the slightest bit embarrassing?\n\n\"You're so silly,\" she finished, swallowing.\n\n\"And you aren't?\" he returned. \"I don't know that you're the paragon of propriety either, what with how often you try to tickle your King.\" His voice turned playfully considering. \"Such unseemly behavior shouldn't be allowed to go unpunished.\"\n\nThis was met with some attempt at nervous laughter. \"I'm not unseemly; you're the unseemly one.\"\n\n\"And now you insult your King to his face,\" he mused, in the same mischievous manner. \"The list of your crimes just grows longer and longer.\" He almost managed to sound disappointed, in his teasing way, as if he were earnestly concerned for the ill behavior of his subject. There was a pause, as if he were appraising her (or her posterior). \"Some might even say a spanking would be in order.\"\n\nAlais resisted the impulse to scoff, even playfully. He was terrible enough that he actually might. She struggled to stand upright, but he kept her easily bent over by grace of the hold he had over her hands. \"You can't punish me like a child.\"\n\n\"No?\" His hand smoothed over her rump again, as if about to make good on the threat. \"Why not?\"\n\nReleasing a sigh of frustration, she let the side of her face fall against the foot of the bed. It was becoming a strain to hold herself up - but now the front edge of the chest was beginning to dig into her belly. \"Because - because that would be even more unseemly. May I get up?\" Her eyes flitted over a strand of loose hair nearing her face, which she blew back with a puff of breath. \"Please?\"\n\n\"Oh, but you're giving me such a good view, Alais. Would you really be so heartless as to deprive me?\" he said, laughing. \"No, I don't think I'll let you free just yet. I haven't even properly enjoyed you.\"\n\nThese intentionally lewd remarks were accompanied by an almost audible smirk. His hand finally left her hip, only to reach over to rummage around in the chest.\n\n\"It's... early...\" One of her own hands tried to slip out of his vice grip, a feeble attempt at escaping this cumbersome position he had her locked, but he kept her easily pinioned despite her efforts.\n\nHe found one of her scarves, red and silken, and drew it out before her eyes. \n\n\"Is it ever too early for love?\" he returned, his teasing on this point never quite diminished.\n\n\"It is when it's uncomfortable,\" she lamented drolly. \"What are you doing now?\"\n\nUnfortunately, comfort seemed only in danger of further waning as he took her wrists and began wrapping the scarf about them. The texture of the fabric was soft and silky, but there was no mistaking the firmness of the bonds as they wrapped around and around her limbs - trapping her. As he knotted the scarf, it drew tight against her skin, capturing her hands fast behind her.\n\nHeat coloring her cheeks, she strained a bit to glance back at him in silent complaint. Her limbs wormed and fidgeted with protest. Was he really tying her up again? Was she not compliant enough in her new mode that they could dispense with such...unpleasantries?\n\n\"Is that really -\" Her breath caught when the last knot drew taut against her skin \" - necessary?\"\n\nHe laughed again. \"Oh yes. I'm sorry for taking such measures,\" he continued, without sounding sorry at all, \"but you've proven yourself quite dangerous if I leave you unsecured.\" He was grinning again - there was no need to look at him to tell. His voice was a lower murmur in her ear when he added, \"And I can't help but enjoy the way you squirm.\"\n\nIt was something about the way he said it that sent an odd thrill through her, but she did not have enough time to process it (and its awful implications) before he took hold of her, his arm encircling her waist so that he might cast her over the bed instead. Her adrenaline heightened as he tossed her, breaths tearing from her lips. \n\nThe mattress was certainly softer than the chest, even if she remained bent face-first over it all the same. \"See?\" said the King, in an amused tone. \"I do care for your comfort.\"\n\n\"You're - you're incorrigible,\" she retorted lightly back, struggling to contain her stammer. Her hands twisted in the silk scarf, but to no avail; the knot had been firmly tied and there would be no escaping its capture until her husband released her. This was not a desperate struggle for her life, anymore, but still she somehow felt herself entitled to some contest for her dignity. (And a contest against a warring instinct that found something inherently provocative about being trussed up before him, which she didn't want to think too carefully about.)\n\nFinding no give in her bonds, she tried to twist around from her position - only to be foiled by a heavy hand at her back, keeping her pinioned there. She writhed, but the King only pressed her deeper into the soft bed. \n\n\"What does that make you then?\" he asked, lightly. \"Would a true lady flounder so?\"\n\nHis hands found the hem of her night shift, and before she knew it, he was drawing away the thin cloth - higher and higher yet, bunching it about her waist, so that there was only the scant covering of her smallclothes to protect her. He hooked his finger under this too, and gave it an unceremonious tug so that it fell away.\n\n\"I never claimed to be a true lady.\" She stalled her squirming though, at the final exposure, her breaths growing deeper in alarm. Fittingly, her mind managed to distract her with pecuniary details. \"Is the door locked?\"\n\n\"Always so practical, Alais. So concerned about your umbrellas and your towels and your locked doors.\" There was the telltale sound of the loosening of breeches, behind her. \"You needn't worry. I have ensured our privacy.\" More amusement. \"You are quite at my disposal.\"\n\nThe mattress, at least, was soft against her chest. She inhaled sharply, the muscles in her legs tightening in spite of herself. This was more sudden than those other times. More abrupt, and massively less predictable. He hadn't given her the opportunity to prepare. Or to cope. Her bound wrists flexed nervously.\n\n\"But - why this way?\" she tried again. It felt more barbaric, even slightly demeaning, to be laid face down for his taking - the way animals rutted.\n\n\"Because I wish to savor you in every way I can,\" said the King, smoothly. \"You will be experiencing many things with me, Alais. This is the least of them - but kind as I am, I am willing to begin slowly, so as to gradually broaden your horizons.\"\n\nSlowly, she felt his cock brush across her entrance; rather than pressing further, he began to rub up and down against her, his member hard and stiff between her nether lips. \n\nShe flinched at this contact, all those sensitive nerves lighting up despite herself. \"But -\" she tried again, but it was now even hard to grasp at distractions, what with all those...stimulations he was exciting within her. \n\n\"Feel how hard I am for you, Alais,\" he said, still in that low way. \"Does it not gratify you that you give me this pleasure?\"\n\nThe deep thrum of his voice was exactly the opposite of relieving, as if her level of fluster could not go higher. And he was hard. Rigid, unyielding...yes, it was a little gratifying that she could excite these feelings in such a powerful man - who must have at any number of women and pleasures at his fingertips - but only a little. Of course. \n\n\"You didn't need to tie me up,\" she protested, latching onto a different topic. Anything else. \"I would've been good.\"\n\nHis quiet laughter suggested that he suspected the deflection for what it was. \"I don't think you would have,\" he replied. \"But I don't blame you. Being good all the time can be boring, don't you think?\"\n\nThere was more of that tantalizing friction between them, that teasing way his member prodded against her ever moistening lips. \n\nShe turned her head and buried her face into the bedcovers, stifling the whimper which threatened to break.\n\n\"But I think you are gratified,\" he continued, his words coming slowly as he worked himself against her. \"And you are uncomfortable with your gratification, aren't you? Because, unlike the rest of your love, it is not a pretense.\"\n\nThere was probably some truth to his speculations, none of which she wished to dwell on. If only she had time to clear her head, to put some distance between them - but no, she was bound and draped over the bed, trapped by the looming presence of the King behind her. Perhaps if she willed it hard enough, she could sink straight into the mattress altogether.\n\nWhen he moved again, it was to take possession of her; she could feel his hard length forcing its way into her, in all its uncompromising thickness and rigidity. Buried though it was, her face contorted in a confusing mixture of tension and almost pleasure. But it was painful too. The first stroke was always a little painful.\n\nSo followed the second thrust, and then the third - each penetration seeming to stretch her further, reaching deeper and deeper into her core. His hands were gripping her hips, keeping her firmly affixed for his ravishing, so that there was no escape from each new violation. There was something innately more raw and animalistic about this position, the way he was pounding into her the way a beast might savage its mate.\n\nAnd it was more barbaric. She could not see him; there was only the feel of him, bearing down upon her in every which way - the way his cock reamed her, the way his hands moved to grope her breasts. The mattress squeaked beneath them and his onslaught\n\nIt felt crude and exquisite and - \n\n*\n\n\" - dangerous. Isn't this dangerous?\"\n\nShe could hear the wooden vessel creaking beneath her and shivered. The remediating scent of lake water surrounded them fully, a cool breeze rocking the top of the barge. Her fingers curled and bunched up the layers of cloak and gown spread beneath her, so that her knuckles drew white. \n\n\"You haven't forgotten the last time we were on a barge?\" She never before feared sailing on even the smallest boat; here, however, her pulse beat uncontrollably.\n\nThe King was looming over her, his mouth doting on her neck. His hands had claimed her wrists, pinning them on either side of her (as always, a casual deprivation of resistance), and his body heavy where he'd mounted her waist. Pressed against her like this, she could feel him slowly hardening with each of her blushes and suppressed moans. \n\nOut there had been the cool breeze of the lakeside, but within the cozy compartment of the barge seemed only the musky smell of him. \"It's perfectly safe,\" he murmured, as his teeth nibbled playfully at her skin. \"This vessel is much larger.\"\n\nWhen she could scarcely budge from side to side, she tried shifting upwards from the frenzy of his attentions. The sensory assault was too much, as always, but this time things were different (if the barge weren't evidence enough). A budding unease was seated in her belly. \"The rowers - they're just outside,\" she whispered, the hush of urgency about her.\n\nHe only chuckled. \"They're slaves,\" was his response, and his amused expression would not have been out of place had she been protesting the presence of furniture.\n\n\"People,\" she emphasized. It was so callous how he regarded other humans as mere property. Perhaps it was not even unusual, in Obsivia, but she could not be so cavalier about it. \n\nWas it how he regarded her too, as property, to be played with however he liked? Once he tired of her, and had taken his promised Vale, would he discard of her in favor of the next toy? She vowed that she would not be so easily disposed, that she would give him just as much trouble as he gave her - if it came to that. She was playing up this farce now, but only because survival dictated it. There would be opportunities at court. There had to be.\n\nIf only he would stop that distracting...ravishing of her neck. He had also finally relinquished her wrists, only for his fingers to settle on the swell of her breasts, beginning to fondle them through the velvet and lace layers of her gown. \"They will not give us trouble.\" His lips were soft and almost tender as he kissed her, in contrast to the rough kneading of his hands. \"No one will. You are mine to enjoy, wherever I like.\"\n\nHer nose wrinkled. \"But they still have ears.\" When scooting would not work, she lay there, trapped in dizzying enrapture. Still she was conscious - perhaps overly so - of the thin separation of walls between them and the people who rowed laboriously away, and for distraction, reached up to tickle his chin.\n\n\"And so what if they hear us?\" he returned, in the same tone, still in that amused way of his. \"What do you fear from them?\"\n\nHis hand slipped down to her side, answering her gesture with a little tickle at her waist. That was, before he shifted down entirely and began gathering up all the layers of her skirts.\n\n\"Fine.\" But she still wiggled and squirmed, almost like a fish. It was only appropriate, since they were out on water.\n\nHe laughed. \"Why do you always struggle so?\"\n\n\"I'm not struggling. You're struggling.\" It was a nonsensical statement. \"I'll just have to keep quiet then.\"\n\n\"Oh, you'd better,\" he said, with a mischievous glint in his eyes. \"I wouldn't want to have to gag you again, would I?\" \n\nShe could never tell when he was actually being serious, but she supposed that added a flavor of mystique in their dealings. \n\nThe fabric of her gown bunched up at her waist, under his care, whereupon he turned his attention to loosening his breeches. Again, like in the same part of the same song and dance, her breath caught in her throat, an uneasy anticipation building.\n\nHe observed her flustered expression, a look of complacency writ on his face. \"Perhaps it is not they you fear,\" he said. \"Nor I. You fear yourself - and your own responses.\"\n\nHe sheathed himself within her, hands tight on her waist to prevent her from bucking away - and again, she could feel the fullness of his manhood stretch and penetrate her, all the way to the hilt.\n\n\"Why,\" she started between gasps. \"Why must you always have your way?\" The smooth wooden finishing beneath her creaked with his tempo.\n\n\"Because I can,\" he said, his words coming slower as he pressed into her. \"And because you want me to. Don't you?\"\n\nThere had always been a gentle swaying to the barge, and now it felt compounded with his rhythm - back and forth, deeper and deeper.\n\nHer legs quivered around him, each brush against sensitive skin triggering barely controlled shudders about the rest of her body. Her lips pressed into a thin line, holding silence and refusing to cry out. Just as promised. But her answer to his question might have still been in the arguably provoked spark in her eye.\n\nThe pale blue of the sky gleamed from the windows, from which also filtered sunlight and the light croons of birdsong. Here, in the middle of the lake, surrounded by air and water from all sides, they were utterly isolated from the world and there was only each other's bodies to get lost in.\n\nThere was almost a bliss to how wanton this was, to not have a care in anything but the indulgence he promised. Even if every soul (not only rowing but waiting at shore) knew what they were doing. Even if she hadn't forgotten who he was and what he stood for. Even if being tangled up in him so pleasurably was a little - \n\n*\n\n\" - degrading. That's what this is.\"\n\nHer wrists tugged experimentally against the tension of her binding ropes. Then her ankles. And yet, the premier thought in her head was nothing more overwrought than a simple: again? She liked to think she wasn't overwrought. The apprehensiveness of the spread position might not have been one she could've denied, but this was ... starting to get silly anyway.\n\nShe liked to think those were her positions on the matter.\n\nThe King was at the foot of the bed, where her legs were so lewdly splayed open and held in place by the ropes. He scarcely paused in his attentions, his mouth still lavishing kisses over her thigh. \"Why do you say that?\" was the teasing response.\n\n\"Because - it is. And what if I have an itch?\" His stubble scratched and tickled the unblemished white of her skin.\n\n\"Then you can tell me,\" he said. His lips twisted into a smile, against her skin. \"Do you not trust me to care for you?\"\n\nHis mouth continued traversing up, closer and closer to her womanhood. There was not even the gauzy shroud of her night shift to protect her, for he'd deprived her of it already.\n\nIt would have strained her neck to look him back in the eye, so her head continued to rest against the wealth of pillows and cushions, slumping a little to the side. \"Not when you don't trust me to the use of my hands.\"\n\nHe chuckled, and this time he did pause, shifting to get a better look at her. \"It's not a matter of trust, Alais. It's a matter of enjoyment. This way you are fully accessible for me.\" He allowed his hand to roam over her flat belly, as if marking territory. His smirk widened. \"And you don't even have to pretend to struggle, too.\"\n\nHer leg turned, and almost seemed to nudge him as much as it could. \"Yes I do,\" she returned, sounding small.\n\n\"You don't, because struggling is useless.\" His fingers closed around the ankle of the offending leg, giving it a quieting little squeeze. \"You are quite helpless. So you will have to do the unthinkable, and let yourself enjoy it instead.\"",
        "It was true that she was helpless. Like the night he'd waxed her, she was captured against the bed, her limbs forcibly spread and held tautly in place by his ropes. And woefully, there was something tantalizing about being bound before him again - something about being exposed in every way and being utterly subject to his whims. \n\nThere was more to this, too. If she could not escape, then what choice did she have but to enjoy his attentions? It was almost freeing in a way, to be absolved of such decisions and know it was useless to consider them - to be only here, before him, heady beneath all the warm pleasures he inflicted.\n\nWas that his intent? She was spared more consideration on this front at he placed his hands against her thighs, spreading them yet wider, and then lowered his mouth between them. Before long, his tongue was tracing her folds, his breath hot against her moistening sex. Now that she was smooth, barren of hair, she could feel each tease and caress with yet more sensitivity - he was awaking tingles in nerves she had never known existed.\n\nAgain, the dampness clinging to her most sensitive crevice betrayed her. As did the flush spread across her cheeks. She felt a little jolt from his first contact; barely a feather-light touch, and it nearly sent her head spinning.\n\nHis tongue trespassed further, easing into her tight passage and teasing her with each intrusion and withdrawal, coaxing faint whimpers from her throat. Then his lips joined, his mouth clamping over her nub and suckling it with slow devotion.\n\nHe pulled away, but only barely. \"Do you like that, Alais?\"\n\nShe resisted a humiliating noise of complaint as he paused his ministrations. \"I think\u2014\" It was more of a struggle to form words at this point. But she had just enough clarity of mind to know this: he didn't need her to stroke his ego, as it was large enough as it was. \"I think you like hearing the sound of your own voice.\" \n\nHer voice was soft, barely a breath so that it would not betray her tightening coil of sensation, but she still managed to summon a flavor of saucy impertinence all the same.\n\nA flicker of surprise touched his features, his fingers tightened ever so slightly at the cheek. But after a moment, he only laughed. \"You do love evading my questions.\" Lazily, he let his tongue slip out again, flicking it tauntingly against her nub. \"Perhaps you're right. But I think I enjoy the sound of your voice even more - struggling to suppress the pleasure I give you.\"\n\nAnother gasp tore from her, her back arching just ever so slightly, as much as it could, as her head pressed against the pillows. The mounting pressures from his gifts was growing more and more palpable with each skillful lick, as her half-lidded eyes stared into the ceiling. She struggled in vain against the ropes, but they held fast, keeping her splayed wide open for him even as her tremors gave him full evidence of his effect. It really wasn't fair.\n\n\"Yes,\" he said, chuckling when she writhed unsuccessfully. \"Just so. Now, relinquish yourself to me. Enjoy this.\"\n\nHe said that sort of thing fairly often, didn't he? Give in to me, You are mine, or (this new one) Relinquish yourself to me. She wondered if he ever rehearsed that in front of a mirror, or if he were simply well practiced through experience alone.\n\nIf only these moments of internal sass could serve to distract her entirely from his trespasses. But no, as he lowered his lips again, she found her thoughts going white and blank as sweet pleasure purged all the rest.\n\nThere was more taunting and toying, as he always seemed to withdraw whenever she squirmed most needfully. But slowly, little by little, he allowed her to slip closer to the edge with each cycle. He spoke no more, his lips reserved only for those hungry kisses and his tongue for that maddeningly dexterous teasing. At last, with a final plunge of his tongue, he brought her to her climax.\n\nShe felt her muscles tense and ease in alternating succession, an intangible light behind her eyelids as she panted her final time.\n\n\"I can't,\" she cried, half delirious as she twisted against the ropes. \"I can't...\"\n\n*\n\nAs it turned out, the evening prior to her tickling attack was the last night she spent alone. Not that the King limited his attentions to only the nights. He was insatiable - it didn't matter when it was or where they were; when he wanted her, he took her, and every time she was lost to the intensity of his ravishments. The remaining few days at the lodge passed in a haze of passion and lovemaking, interspersed only by food and drink and sleep.\n\nHer ability to maintain pace was being tested, especially now when she had begun to approach every day with a fraught mixture of anticipation and trepidation. It was not the torment it could have been - quite the opposite - but his voracity risked tiring her out for all of its... voracity. The sleep that followed after, at least, was always a cathartic one, and she liked to think she had nothing too severe to worry about, so long as she maintained her brew. This final line she would not cross - she didn't think herself ready to cross even if the very concept of it repulsed her fundamentally. She did not want half of him growing within her belly like some parasite; this was the sole compromise she made for herself as she'd pledged so diligently to falsely submit the rest of herself to him. It seemed perfectly just.\n\nThe King, for his part, seemed to have reverted to that Duke Adrian personality that had been so affable before. He was suave, he was charming, and for all that he exhausted her with his appetite, he spoiled and pampered her just as much; outside of their wild romps, he was a convincing performance of gallantry and attention. Now and then there was some passing remark that shattered this illusion, such as offhanded references to plans of conquest or the occasional suggestion-that-was-really-an-order - but for the most part he was incredibly well-behaved. Especially compared to how cruel he had been before - and how cruel she knew he could be.\n\nShe didn't know how long it would last, this pleasant mood of his. Even before she had become (forcibly) acquainted with him, she'd long heard of King Alexander's reputation for his dangerous unpredictability. In considering this subject, she could not help remembering the advice that Duke Ethan had imparted all those days ago, after that chess match in the library.\n\n\"I wish I could tell you the King is not as terrible as the rumors would lead you to believe,\" the Duke had said. \"But I cannot. He has his genuine moments of generosity and sometimes kindness, but he is not consistent. I tell you this not to discourage you, but to ward you from disappointment - and to arm you with knowledge. His mood changes swiftly. There are two things that set him off in particular.\"\n\n\"I appreciate your honesty,\" she had offered, having been otherwise unperturbed by the non-news of the King being terrible. And water was wet and pots and kettles were black and molten metal was also very, very hot. \"Which two things?\"\n\n\"You can already guess at the first. The King has...what you might call control issues, and if you show him defiance, he instinctively sees it as a challenge to overpower. To that end, subtle deference is key.\"\n\n\"I see.\"\n\n\"The second danger is, well, his boredom.\" She remembered how Ethan had summoned an apologetic smile, at that. \"When the King has an objective he can actively pursue, or if his interest is piqued by some novelty, he is... mostly fine. It gives him something to focus on. When he does not, he becomes restless. It is then that he begins to create his own - diversions.\"\n\n\"Diversions?\"\n\n\"He provokes people. Toys with them.\" There had been an air of quiet exasperation to Ethan's voice, as if he were speaking of some troubling boyish habit, instead of the malevolent thing that it was. \"The best way to defuse this is through distraction. If you can entertain him your way, he won't have to entertain himself.\" \n\n\"So we are his monkeys.\" \n\n\"All Kings must be attended to,\" he had replied, with a loose shrug. \"Alexander is - unusually difficult, yes, but he is not without his greatness, or even his goodness. Sometimes. Keep him engaged and he will be more indulgent with you. Perhaps it won't even be too difficult, as he already seems quite fascinated by you.\"\n\nEvidently fascinated enough to kidnap her, for all the good that had done. Alais had mused over this conversation more than once, and it was partially responsible for the tactic she had chosen to adopt. So far, it seemed to be working well - even better than she had anticipated. Perhaps her antics amused him, or perhaps she was catching him off guard enough to sustain his interest. Whatever it was, he was in good spirits whenever he was making conversation (or love) to her. \n\nBut she was naive to think it could go on forever. He was kind now, but sooner or later, his interest would wane and that cruelty of his would manifest again. Wouldn't it? (Some small part of her wondered if maybe it could last, that maybe she was different - but she firmly put aside such notions whenever they surfaced.) She would be ready, when it did. For now, she would make the most of it while it lasted, and buy enough time to find some permanent solution when they returned to court. No good would come out of fretting in the meantime.\n\n*\n\nOn their last day, they spent one more (intimate) morning in the hot springs, and then readied themselves for departure by the afternoon. \n\n\"I hope you've enjoyed yourself,\" said the King, as he handed her into the carriage and climbed in himself. \"Of course, it was all a little more eventful than I had planned, but at least you've had good company.\" He smirked, wrapping his arm about her as they set off.\n\nAlais still thought the springs trysts utterly impractical, the morning spell having left her in some distant cross between dizzy and languid as she settled into the carriage. The difference with the way she treated his contact from their arrival was as drastic as heaven and earth.\n\n\"It got better,\" she admitted, as she nestled into his hold. She hadn't thought it would, but it did, though this in turn was for no lack of... effort, on her part, even as it may have seemed so effortless, so inscrutably natural, on the exterior. The act, of course, would have crumbled even under one microscopic note of disingenuity. (And she could not possibly hope to fool him if she could not fool herself, to some extent. So, yes, the feel of him was very pleasant, and she was, at least for the time being, safe with him.)\n\nThe unsteady rhythms of the carriage wheels rolling over the uneven paths had her near to dozing, but she thought to ask one more question, \"What happens now?\"\n\n\"I've had them prepare the wedding reception, while we've been gone, and there you will be formally announced. I think it will be quite the affair. There is much anticipation in my court about the new Queen, and undoubtedly they are all eager to meet you. That will be tomorrow, however - for tonight, you will rest.\" The King could not help amending, with a wicked smile, \"Well, you will rest for some of it.\"\n\nShe felt a little shiver at these words, though not an unpleasant one.\n\nHe kept his arm about her, letting her lean against him as the carriage trundled merrily along. \"You will meet your ladies-in-waiting in the morning,\" he continued. \"All hailing from good families, of course. I think they'll serve you well. But should any of them disappoint you, you may, of course, request replacements. Within reason.\" \n\nOf course they would be Obsivian noblewomen. She didn't yet remind him of her request for her handmaiden from home - he couldn't have forgotten, in such a short span of time. \n\n\"We should arrive by nightfall,\" he told her. \n\nAlais looked out the window, at the trees and foliage whipping by them, and the lodge in the distant hilltop growing smaller and smaller. For all the troubles she had experienced in this place, the natural scenery had been beautiful here, and (mostly) tranquil. It had also been isolated - she felt as if the King had secreted her here to enjoy for himself, far and away from the rest of the world. \n\nNow they would be returning to that world, and whatever awaited them there.\n\n*\n\nAlais napped restfully for much of the journey back to the palace, a head laying lightly against his shoulder and later falling unconsciously toward his lap during a particularly sharp turn. If this wasn't the crowning indication of her inscrutable ease about him, she wouldn't know what was.\n\nTheir return was marked by subdued fanfare; she later learned that they had entered by the East Gate, a smaller and more roundabout route (though still decked with enough soldiers and guards to take out a village) that had less eyes and crowds. The King stepped out, into the courtyard, turning to help her do the same, but he was interrupted by a shout.\n\n\"Alexander!\" What looked to be a tall, finely-dressed woman (it was hard to tell, with how fast she moved) had seemingly emerged from nowhere, and was embracing him at once. \n\nThe King appeared surprised, but only momentarily. \"Ada, you're not supposed to be here,\" he said, but the expression on his face was a mixture of fondness and relief, as he hugged her in turn. \"I've been worried,\" he said, in a lower tone of voice.\n\nFortunately, Alais was perfectly capable of helping herself down the carriage. Dresses always made the feat more cumbersome than they could have been, but with one foot after the other, she duly managed.\n\n\"You've been worried!\" the woman was saying, with some indignation, though she too was smiling. \"What about the attempt on your life?\"\n\nHe laughed. \"That was nothing. It's always nothing.\" He released her, remembering that he had not returned alone. \"Alais,\" he said, shifting so that their view of each other was not impaired, \"this is my sister, Princess Adeline. And Ada, you've heard of my newly crowned Queen.\"\n\nAdeline's expression smoothed, becoming more serene, as she dipped in a pleasant half-curtsy. \"Your Majesty.\" She was quite beautiful - of regal bearing and statuesque figure, and tall like her brother. She was dressed, too, in the latest styles, though the frills and ribbons of her gown straddled the ambiguous line between fashionable and fanciful. She bore the most resemblance to Alexander in the set of her mouth (with that touch of complacency) and in the slight glimmer of mischief in her eyes, but with softer lines by far and an acute sense of delicacy. She took Alais's hand, gently. \"I've been so looking forward to meeting you.\"\n\n\"Hello,\" Alais returned, a bit tentatively as she dipped into a curtsy of her own. \n\nWell, time for another pretense. Though now was the time, she recognized, to be genuine as opposed to immaculate in her disposition. And what was a genuine greeting for one in her position? One with kindliness, certainly, but not without its dose of self-awareness. Evidently, it was not a well-kept secret that her recent marriage to the King tread the lines of unorthodox. Extremely so.\n\nHer bearings were as best and sweet and well-mannered as they could be, but a joyful greeting at this point may have seemed a touch disingenuous. \"I'm very happy to meet you, Your Highness.\" Your Highness. She still missed being called Your Highness. No matter how she looked at it, everything had happened far too quickly to be truly comfortable. \"But, apparently, you're not supposed to be here.\" Her other hand lifted to lightly cover their shared grip, and the faint spark in both eye and smile suggested she was not at all being serious about what she said.\n\nShe had a brother too, after all, and were it not for her meticulous self-coachings, the reminder of what she was forced to leave behind might have stung.\n\n\"If we were always where we were supposed to be, I suspect life would be so much less interesting,\" returned Adeline, with a somewhat conspiratorial smile. She clasped her new queen's hands, with apparent warmth - genuine or feigned, she at least shared her brother's capacity for seeming affable. \"I know you must be terribly overwhelmed, but could I entreat you to supper with me tonight? I should like to become better acquainted, and if I don't steal you away now, I don't know when I'd next see you! You'll be terribly busy, I imagine, with all this wedding business.\"\n\n\"Alais is very tired,\" the King intervened, smoothly, though he seemed to be nursing a smile of some sort. \"And she has a long day ahead of her tomorrow.\" He turned to regard his wife, with a pleasant expression. \"My sister is very enthusiastic, but you need not indulge her if you are fatigued. I assure you that she enjoys exaggeration and knows full well she'll see you before long.\"\n\n\"How terrible of you,\" said Adeline, swatting at his arm, though it was good-natured. She smiled broadly at Alais. \"He's merely afraid of us forming an alliance against him. He's very suspicious like that, you'll soon see.\" Despite her pleasant demeanor, her gaze remain quite fixed on the other woman, and her look was not without a touch of shrewd assessment. \"But of course, if you need your rest, I wouldn't dream of taking you from it.\"\n\nThe Princess seemed perfectly friendly, though Alais could not help but also muse whether there were ... less pleasant aspects of her, behind this veneer of delicate courtesy. Either way, it would not make an impact on the mindful, amiable way with which Alais would treat her. It was true that she was not innately gregarious, especially not in circumstances of short notice. But fortunately, her mode of operation was not to blindly shy away from those reaching out, but through astute navigation and expert faking - not that she had much to falsify in the first place. Her lethargy had been much improved by her carriage nap, and she certainly hadn't taken to disliking Adeline during these first impressions. From a wholly impartial viewpoint, there should have been nothing unlikable about her whatsoever, aside from her close ties to His Majesty.\n\nHer eyes flitted thoughtfully from the King to his sister (why were they both so tall?), before she chimed in, \"But I'd already slept the whole way back, and it's just supper, isn't it? I'd be having it anyway.\"\n\nCould it be that the Princess was like another Duke Ethan, with the potential for insight? Either this, or more hidden cruelty - or that she was exactly as she seemed on the exterior (so rare, these were). Difficult to tell at this point, but... \"Why not?\"\n\n\"Oh, excellent,\" Adeline enthused, giving her fingers an extra squeeze to emphasize her delight. She beamed, aiming a teasingly triumphant look in her brother's direction, as if she had bested him. \"I knew he could not get in our way, no matter how hard he tried.\"\n\n\"Yes, I could never compete,\" said the King, smiling. \"Go on then, enjoy yourselves and your conspiracies.\" His gaze lingered just a touch on his wife. \"I'll see you later.\"\n\nAlais slipped him a soft and pleasant smile, and they went their separate ways. \n\nShe made note of the interaction, though. Among all those in his kingdom (Ethan included) that she'd observed so far, the Princess appeared to be the only one who acted with complete freedom and absence of fear, in his presence; she seemed entirely comfortable, without any indication that she perceived him as a danger. \n\nAnd in the King's manner, Alais likewise discerned that he appeared less threatening than she'd ever perceived - he'd exhibited pleasantness, yes, and charm, certainly, but not this kind of familial affection. Huh. Blood ties really were different for him. Alais had gathered as much during (technically right before) the boating incident, and this in turned dulled the edge of any great astonishment for him acting more like a human around his sister, even if in the most subtle ways. She filed the information away with the tidbits about his brother in self-imposed exile, for it was useless to her currently. ",
        "For now, she had to concentrate on present matters.\n\nThe Princess had hooked their arms together, with a flash of a smile, guiding her away. A few guards shadowed them at a discreet distance as they made their way through the entryway and into the inside corridors. \"You must have been through so much,\" she said, in a sympathetic tone. \"I couldn't even imagine. How are you holding up? Do you need anything?\"\n\n\"It's better now than it was before,\" she admitted readily, her eyes lighting up appreciatively for the show of concern. \"Thank you for understanding, but I've learned how to make peace even in this.\"\n\nEven those closest to him seemed distinctly aware of what he was. Strolling in apparent comfort alongside her sister-in-law, Alais reflected in silence for but a moment. She could no longer expect to say anything which did not have a non-trivial chance of reaching his ears. Even with this in mind, she ventured to quietly ask, \"... will it get worse again, do you think?\" \n\nHer eyes were lowered to the smooth patterns on the floor, her features taking on a somber, ruminating quality. If the objective was to appear genuine, she should not force herself into a pretense of invulnerability. In the first place, it would have been both unbelievable and... unrealistic.\n\nIf all eyes were to be on her in short time, she supposed it would have been better to be a poor, harmless girl to be pitied than some wily fatale, if she had to choose. And of course, just because she supposedly loved him now, it did not mean that all reservations need be relinquished even in pretense.\n\nAdeline cast a look of surprised confusion. \"What will get worse?\" she asked, turning slightly to observe her companion. \"I was speaking of that dreadful assassination attempt, and of course your boating incident - which, indeed, I should hope would not happen again. Surely you weren't speaking of the King?\"\n\nOh. Had she managed to offend the Princess already?\n\nBut Adeline only maintained her composure for all of a few moments, before subsiding into ladylike giggles, her free hand flying to cover her mouth. \"No, no, of course. I understand. I'm very fond of my brother, but he can be such a brute sometimes with how he handles things. Negotiations with your grandfather could have accomplished just as much! But no, he had to swoop in and kidnap you, like some foul highwayman. Most improper. I can only imagine how he's been this last week or so.\"\n\nA slightly abashed look lit her eyes, as she grasped Alais's arm with particular concern. \"Oh, that was terrible of me. I shouldn't make light of it. Will you forgive me?\" She seemed (seemed) genuinely concerned to have her intentions misconstrued. \"You mustn't think I'm callous to your situation. Quite the opposite!\"\n\n\"I had meant in general, but yes, that did include His Majesty.\" A hint of an apology touched Alais's smile, as though she could not help such critical thoughts even in this company, but neither would she deny it. \n\nShe even made to appear slightly alarmed for the Princess's own concern. Prompted to reassure, her free hand moved to pat her gently on the arm, her head shaking as she swept away all conjectures of offense. \"Please don't worry. I'd... like to be friends with you all, but I see there's so much I've yet to understand.\"\n\nShe still managed to project a remarkable absence of any and all bitterness and spite directed toward the King, or toward her own position. Her manner of bearing was, of course, distinctly more reserved than that of her companion, but neither did she lack for sweetness. \"I expect I'll blunder many more times. Will you, in turn, forgive me?\" Her eyes lifted to catch Adeline's, and she tried for a smile.\n\nThe Princess actually looked surprised, a spark of guilt alighting in her eyes, and she conjured up another, softer smile. \"You really are too sweet, Your Majesty,\" she said. \"I have nothing to forgive you for. And if I did, the fault would lie with us all the same, for stealing you away so unceremoniously and plopping you here without any warning. I must say that I'm quite impressed by your fortitude. I'm sure I would not take it so well, if it had happened to me.\" \n\nOf course, if it had happened to his sister, the King would probably have cut a bloody swathe across the continent by now, but that was beside the point.\n\n\"We shall have to heartily forgive each other, always,\" Adeline continued warmly. \"I'm so glad you and I are of the same mind. I should dearly like to be friends as well, and hopefully help you put all this awfulness behind us. And we must conspire together if we are to have any chance of curbing my brother's terrible habits, of course.\"\n\nAlais resisted a stronger reaction. The Princess made it sound as though her brother's \"terrible habits\" were a jest worth tittering over. But then, she thought wryly, maybe that wasn't entirely false; in some respects, his brutality might be thought of as almost hilariously over-the-top.\n\nIt had also escaped her notice that Adeline had not answered her original question, whether this was intentional or not. But frankly, she was already (mostly) sure of the answer.\n\nShe was about to respond, but it was then they had come to a stop - the hallway had reached a dead end, marked only by a pair of double doors, which must be their destination. Two slaves - collared, silent, and shaved of hair - stood sentry on either side, and hastily made to open the way for them. The Princess didn't spare them a second glance.\n\nAlais did, though. She hesitated as they passed through the doors, her gaze inexplicably drawn to the worn features of one of the slaves. For that instant, words seemed to freeze in her throat. She knew that face, and the collared young man had met her eyes for a split second, a jolt of recognition occurring between them, before quickly lowering his head. Jasper, once a lordling, cousin to Edmure, her thoughts recited listlessly. There was only a brief chill up her spine before she managed to refocus, ostentiously brushing the lapse off for another pause for reflection.\n\nOf course - the King was known for making slaves of the royal families who resisted him at war. They were a living and breathing embodiment of the consequences for defying him; this was Obsivian tradition, technically, but it had been largely abandoned by the King's pacifist father. Seeing Jasper there reminded her anew of what malice the King was capable of, even when he was being so charming to her on the surface. There was a monster there lurking beneath - that she should never forget. And was this what would have become of her family, had an alliance not been decided? She shivered a little, tearing her eyes away lest she attract suspicion. If she was to find some way to help Jasper, she could not afford to reveal their connection now.\n\nThe Princess ushered them inside, not having noticed the gaze that Queen and slave shared. \"Susan,\" she called, summoning one of her ladies-in-waiting, who curtsied toward them. \"Please relay my strongest apologies to Lady Beth, and let her know I will repay her amply tomorrow.\"\n\nAs the girl acquiesced, Adeline smiled again and led her into the chambers properly. It was an elegant room, verging on extravagant, with enough size and depth to afford grandeur. The Princess's tastes in portraits and furnishings were somewhat whimsical, and a little avant-garde, though still well within the confines of propriety. A delicate table took the center of the room, constructed entirely of glass, and there she led them. The slaves pulled out their seats for them, and brought them bowls of water with which to dip and clean their hands.\n\n\"Still, it was quite unusual, even for him,\" said Adeline, as she carefully perched herself down. She looked curiously over at her. \"You must have really caught his admiration.\"\n\nAlais took her seat without flourish, setting her hands upon her lap and managing to focus her attentions solely upon her host. Although the discovery of the lordling-turned-slave continued to weigh heavily in her mind, she was able to display no sign of it. Beyond the tactical reasons of not revealing her recognition, it would be...hazardous to allow herself to falter at every terrible discovery in this barbaric kingdom, and she had already started that disassociating process in her mind to control her nerves. \n\nAnd so, she resumed the conversation, falling back into the pleasant pretense with as much skill as she could summon. \"I think it was only convenient at the time.\" That Vale was, apparently, very important. \"I think he would not have been in such a hurry to commit to this...ball and chain--\" As though realizing the absurdity of the statement mid-sentence, she smiled and interjected herself in prompt manner, \"Oh. I'm more of a feather and string, aren't I.\"\n\nAdeline was beginning to shake her head, at this self-characterization, though she giggled at the interjection. \"Well no - I mean, yes, there are always some incentives in a marriage, and Alexander is certainly motivated by pragmatism more than he should be. But I don't think he would have made his move all the same if he didn't also fancy you particularly. I'm sure you must be very special. He's said very little about you, which only makes me that much more certain about it.\"\n\nShe gave her fingers a gentle little flick, ridding herself of the water, and drying the rest of it off on her napkin cloth. The bowls were soon swept away by the same slaves, replaced by exquisite ceramic plates and bread and soup, for appetizers. Adeline reached for her share, breaking off a small portion with a crunch. \n\n\"Speaking of balls, though, we should throw one here soon - it's the least we could do, to make up for ruining your own so shamelessly. And perhaps your family could visit? I'm sure you'd like to see them?\" It was more statement than question, though there was enough of a lilt to give deference to her opinion. \"I must admit that my brother is not especially fond of balls - he likes other entertainment, as you might guess - but I'm sure he could be persuaded. It would make diplomatic sense as well, to solidify our alliance!\"\n\nFamily. Here. The notion shook up her previously thought-to-be dormant surges of anxiety into something turbulent. They were going to see her like this, tied to that man (whom she \"adored\" now). They were going to see what had become of her, for her own carelessness and blind trust. To be fair, Queen of Obsivia was hardly a position to be ashamed off, but ... \n\nGentle, nervous laughter slipped past her lips. \"I think more time apart might soothe the sting. My grandfather is old, and my brother is - he's liable to say something offensive to your brother before long, and that is... not... ideal.\" She gestured emphatically with her freshly cleansed hands, unsure of how else to describe just how not ideal this was. \"... You know,\" she ended helplessly. \n\nIt was too soon. They would not be ready. She would not be ready, however much she would have strongly desired to see them. Better that some cousins much farer removed attend - like the Duchess of Toussaint. The Duchess always enjoyed a good ball. The Duchess could visit with her basket of baguettes, and everyone could have a merry good time, and her family could remain safe from her dangerous husband.\n\n\"I'll write to them in the meanwhile, and pass along your kind regards,\" she offered, before blowing softly onto her spoon. The warm and rich food, at least, seemed to brighten her spirits a bit more.\n\n\"Oh,\" said Adeline, simply. She seemed to understand this, and perhaps also had a sense that it went a little beyond the surface explanation, but accepted it just as it was. \"Of course, of course. Still, when you do think you're ready, you should let me know all the same. I'd make sure they were properly welcomed!\" She swirled her soup a little with her spoon, her eyebrows rising in that conspiratorial way of hers. \"Perhaps when my brother is away? It happens more often than not.\"\n\nThe Princess had a somewhat effusive manner about her, conversing easily, but at the same time, there was a certain care to her words that implied she was not chattering with complete abandon. Case in point - she observed the woman across from her for a moment, in an almost assessing way, before speaking, in a would-be casual manner. \"How do you feel about him, by the way? You must hate him, don't you? It's alright if you do. That's perfectly natural.\" \n\nShe put her bowl down, her hands still cradling it for warmth. Her eyes, however, were fixed across the table.\n\nAlais wondered if the timing of the laughably forthright inquiries had been intentional, but no matter. She still had the benefit of being able to answer without deceit, in her way, and the answer drew from her lips all too seamlessly, in response to these questions a normal sister-in-law might have considered taboo. Of course, she first needed to swallow her present mouthful of soup, after which she all but reciprocated that unassumingly casual tone: \"It began like that. But no, I don't hate him now.\"\n\nAs though aware that elaboration might possibly be warranted, she continued, swirling her spoon thoughtfully in her bowl, \"Maintaining something like hatred can be more tiresome than what it's worth, especially for someone like him.\" The term 'someone like him' was not meant to be a slight, nor did it necessarily refer to his less peaceable qualities exclusively; how else was one meant to describe him? While she might have given the impression that she had been otherwise disarmed by her host's effusiveness, not once did she forget on whose domain she sat. Everything she might say could still reach his ears; this too she remembered. And, of course, lingering apart from him hadn't changed her ostentatious resolve to \"love\" him.\n\n\"Hmm. How good of you,\" said Adeline, her smile not quite sincere this time, though it didn't appear for lack of trying. She had probably hoped to get some better insight from the question - if only because the abruptness of the query might have thrown her guest off. It was nothing unusual for Alais though; considering all the thought and effort she'd poured into her stance toward the King (to the point of tedium), it would have been an embarrassment if the Princess did catch her unprepared.\n\n\"Better to think on the positives, like this soup,\" Alais added with a hint of good cheer.\n\n\"Oh, you like the spices?\" said the Princess, brightening a little. \"I'm afraid it's my favorite type of flavor and I've selfishly ordered supper accordingly.\"\n\n\"I happen to love spice,\" she returned, sincerely this time, with a smile. \"Your Highness was fortunate this time.\"\n\nAdeline sipped at her own spoon with a pleased expression. \"Oh, it's a relief to have spared you an unenjoyable meal! I would have felt an awful host. But yes, you know how I feel then. Bland flavors are so uninteresting. I like new tastes and new things - I dearly love to travel, you know.\" She paused to recollect something, sighing. \"Though, considering my recent adventures abroad, it may be some time before Alexander allows me to again. He can be so overly protective sometimes.\"\n\nAlais tipped her head curiously. \"Oh, what happened?\"\n\nWas this what had caused the King to go silent before, and pray for his sister's safety at the shrine? He had been so sparse on the details.\n\n\"I was visiting Scalyris,\" she replied, with an exaggerated little sigh. This by itself did not seem too odd - Scalyris was a close neighbor and ally, even if it was full of arid desserts and gigantic bugs and other things a princess would not usually be drawn to. \"It's a beautiful place - have you ever been? You must if you like spices. Their cuisine is absolutely the most delightful. And the fashions!\" She looked wistful for a moment, as if her absence was a true tragedy. \"In any case, it was all going splendidly, when - oh, goodness, you wouldn't even believe it!\"\n\nShe certainly had a dramatic way of telling her story, dropping in meaningful pauses here and there, and catching her listener's eye with her own expressive features. \"There was a coup,\" she said in a lowered voice. \"A revolution! I don't know if you've heard - I suppose you couldn't have, since you've been away - but it's true! King Nenanthid was slaughtered in his own chambers, and by none other than his own brother!\"\n\nTheir bowls and plates were being discreetly gathered away, and replaced with the dinner entrees - plump pheasants and pink salmon, all heaped with the same spices - but this did not distract Adeline from continuing her story. \"It was a real uproar. The city was in absolute turmoil, and there were skirmishes breaking out left and right! No one knew if the line of succession would stand. And when Prince Jehan ultimately seized control, we thought it was for the worst. He's always had disagreements with Alexander, you see. There was a lot of bad blood between them. Now that he'd seized power, we thought he'd ransom me, or perhaps worst.\"\n\nThe narrative elicited a remarkably more animated response from Alais than the last subject matter, prompting her to blink rapidly with surprise. No, she could not have heard. News of the continent hadn't even reached her ears on a miserly level. It was uncomfortable being left in the dark to these affairs - either through negligence or willful intent, she did not know, but hopefully information would not be so sparse from then on. She was in the palace after all, and there would be more people to interact with than only the King.\n\nIt was also at this point, where her unfinished soup was being replaced by entrees, and where she appeared otherwise absorbed in the recounting of events, that she made a casual and polite request for a cup of hot water to one of the slaves - blessedly the one she did not know - ghosting by.\n\n\"His Majesty doesn't tell me anything.\" This almost came as a goodnatured grouse. \"How long ago was this?\" She thought she knew, but confirmation would be helpful. \"How did you manage? What did you do? What did the Prince do?\"\n\nShe remembered Prince Jehan. He happened to have been one of her numerous suitors - one of the more impatient, slimy ones, who she'd never felt quite comfortable alone with in a room. In a way, she was no longer surprised that the King had reacted with as much intensity as he did; she wouldn't have felt safe in his territory - without his more good-natured brother to check him - much less Princess Adeline, when there was reputedly bad blood between their two families. (The former Scalyrian King had kept an uneasy peace.) That Jehan had actually murdered his own brother for the throne, too! She supposed it confirmed what her intuition had always felt about him.\n\n\"No longer a Prince, but a King,\" Adeline corrected, but amiably. \"Well, it was actually terribly anticlimactic. King Jehan does dislike my brother, but not to the point where he'd risk war with us, as it turns out. He had enough on his hands as it was, quieting all the dissent from his very improper inheritance and dealing with outbreaks of resistance. Or perhaps his bark was always worse than his bite.\" This seemed unlikely, for someone who had committed fratricide, but she didn't linger on the idea for too long. \"In any case, after everything had settled down, he came to personally apologize to me for the upheaval, and assured me that I should have a formal escort safely back, should I need it. It wasn't necessary, of course, as Duke Ethan had rode out to see me back, but it was still a kind gesture.\"\n\nHaving taken them through the most pressing part of the story, she felt at ease pausing to serve the both of them, slicing delicate slivers of meat with a practiced hand. \"But news takes some time to travel. Alexander was furious with me. And worried, I suppose.\" Perhaps sensing that she needed to explain the former sentiment, she added, reluctantly, \"He'd had intelligence that something like this was brewing, and had warned me to depart early. But it was such an unlikely thing! I can't be blamed for not acting on improbabilities. Intelligence is often wrong, and if I were to be so cautious all the time, I'd hardly be able to travel or stay anywhere.\" ",
        "Despite her (somewhat hilarious) denial of responsibility, the Princess did seem concerned, perhaps guilty. \"But he must have been moody? This was just a few days ago - I only returned last night. Did he seem especially upset?\" Finished serving them, she lay the cutlery aside, reaching for her personal utensils. \"He really needn't have fussed.\"\n\nYes indeed, it was a few days ago that Alais had been in the middle of her unspoken (ha) vow of silence, when his mood had dipped distractedly elsewhere. It might have even been her saving grace that day; for now, she was prudent enough to lay these trivial curiosities to rest. She continued to listen attentively, eyes blinking again in recognition with Duke Ethan's mentioning. \n\nAll the same, she (apparently) could not help a slight grimace when informed of the King's fury. Were he truly angry, she thought she might have heard about someone losing their hand or a cruelty of similar magnitude - well, there was talk of what happened during his inspection of the monastery post-assassination attempt, and that may have had something to do with it. It was no use speculating. \"I have a difficult time reading him as it is, but I think he was worried about something. And now I realize the full extent of it - no wonder,\" she related with her sympathies. It felt odd looking back now, considering her own mental state at the time... \n\n\"He would not be a good brother if he didn't fuss,\" she added gently. She should've felt even odder reflecting upon him in such a way. \n\nWhen the steaming cup that she'd asked for arrived, her small acts which followed could not even be described as surreptitious, mundane as it was and in plain sight. Sitting as she sat, she leaned (gracefully) forward and not once removed her eyes from Adeline as her hands worked to withdraw a small, velvet pouch from the side of her dress - previously tied there by its purse strings, like some fanciful decoration - and sprinkled what appeared to be dried herbs into her now brewing tea.\n\n\"He is a good brother,\" Adeline agreed, with a sigh. \"It's so unfortunate too, for it makes it much harder to hate or find fault with him, when I know I should!\" She pronounced this with her characteristic dramatic flair, as if it were the most troublesome thing in the world. But this lasted only a moment, and then she was smiling again. \"It's very sweet of you to say, though. You are too sweet, really.\"\n\nShe observed the new Queen with a thoughtful eye, before noticing her beverage. \"What kind of tea is that?\" she asked, conversationally. \"I can have the servants bring you some next time - no need to be so polite, Your Majesty.\"\n\nA fond smile tugged at Alais's lips. \"Chamomile root with a little something extra.\" Oversimplification notwithstanding, the 'something extra' could easily be substituted with any other, benign ingredient should the princess request for a sample. \"Someone very close to me taught me how to brew, so I can be... particular about my tea. It's kept me grounded where I needed it most.\"\n\nThe Princess nodded, not looking otherwise suspicious.\n\n\"But as we were saying,\" Alais continued, \"I wouldn't say I find no fault in him.\" This, she managed to utter with a meaningful and conspiratorial glance, bordering on playful, to soften the edge of such a statement. Even with her new... outlook, she never intended to feign mindless delight for all the things she fundamentally disagreed with. She was never going to pretend to agree to each of the things he did (including the kidnapping) - only to her general acknowledgement that she could do nothing against him, what was past was past, and the best she could do was looking on the bright side. Or to kill with kindness. Either way.\n\n\"But credit should be given where it's due,\" she simply explained. Perhaps His Majesty truly was a good brother, for his sister to regard him so. He had, unbelievably, given her the impression that he did love his family, from those sparse moments of humanity.\n\n\"Perhaps you're right. Family is important to him,\" said Adeline. Her expression turned considering, and then more serious, for a moment. \"But something you should know about -\"\n\nThe door flung open, before she could finish her thought, causing her to start a little in her seat. Two young boys bumbled in, shrieking in glee, and instantly made a beeline for the Princess with laughing abandon. \n\n\"You little monsters!\" Adeline declared, as they attacked her, but she smiled happily as she gathered them into her lap. They were both tiny, one slightly older than the other, and full of suppressed mirth and golden curls. Held close to her, the resemblance was easily traced - their eyes were bright blue, like hers, and their nose had a similar little flair. \"I thought Evelyn was looking after you.\"\n\n\"I was.\" An older girl emerged from the doorway. Evelyn must have been no more than seven, though she was far less rambunctious than her companions. A toothy smile filled her face as she crossed her arms . \"But they wouldn't sit still.\"\n\n\"I should have known,\" said Adeline, as she bounced the children on her lap. Belatedly, she looked belatedly back to her guest. \"Do forgive me, Your Majesty - they caught me quite off guard! These are my sons. Edward here is the eldest, and that's William.\"\n\nAlais had been in the middle of chewing on a bite of salmon when the children exploded in. A nonplussed quality froze over her expression, and for the first few seconds she merely stared... chewing very slowly, before finally managing to swallow. Her eyes glanced over the little ones, then to Princess Adeline, and then to the little ones again as though confused.\n\nThen she burst into mirthful laughter, quickly moving to stifle herself with the back of her hand. \"I'm sorry -\" she stammered between giggles, \"I hadn't expected - they're so tiny.\" It was a little funny how the boys swarmed her, and the way her hostess had nearly jumped from her seat. She had the good graces to appear charmed, while still somewhat nonplussed. \"Very nice to meet you.\"\n\nAdeline beckoned the girl closer too, who complied. \"And this is Evelyn.\" She faltered a little here, glancing across the table. Her tone took on a more delicate tenor. \"Their...cousin.\"\n\nCousin? But that would mean...\n\n*****\n\nAuthors: As always, thanks for reading! If you enjoyed this, we appreciate any ratings/comments - and don't forget to subscribe (link in profile) if you'd like to receive an alert when new chapters come out! \n\nAnd another comment game: if the story was a show, what actors would you envision as the characters? (Inspired by a few comments from the chapters before!) Share your thoughts, and we'll share ours!\n\nOh, and happy double digits in chapters!"
    ],
    "authorname": "lady_temily",
    "tags": [
        "medieval",
        "historical",
        "royalty",
        "reluctance",
        "dominance",
        "control",
        "bondage",
        "reluctant",
        "submissive"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/at-his-majestys-pleasure-ch-10"
}