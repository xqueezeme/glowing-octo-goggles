{
    "title": "Gamers Pt. 08",
    "pages": [
        "I woke up a bit woolly. Then I remembered where in was: in bed, with Angie. We were both naked. I propped myself up on one elbow, to look at her more closely. As I watched her sleep, I wondered what I had just done.\n\nJazz was the woman I loved, without question, without reservation - except for the fact that we were 10,000 miles apart. So what the hell was I doing? Was last night an accident? An aberration? I liked Angie, and considered her a friend. Was she pretty? With her hair braided, or curled, I found her attractive. But with straight hair, her full lips looked too big to me. She was also better-looking with glasses than with contact lenses.\n\nHow could my attraction to her be so selective? And how could my loyalty to Jazz be so ephemeral? Or was I simply coming to terms with the unavoidable fact that she wasn't coming back, and that I needed to get on with my life? Too many questions.\n\nI needed a shower. I smelled like stale beer, and sex. My crotch and lower stomach were sticky. I gently disengaged from Angie, then managed to crawl out of bed without waking her. I peeked out of her room, and saw no sign of Trisha. It took only a moment to sneak across the apartment and close the bathroom door behind me.\n\nA quick shower, some mouthwash ... I wrapped a towel around my waist and headed back to Angie's room to ... to what? Was I going to collect my clothes and sneak out? That would hardly be fair to her. What was I going to do?\n\n- \"Good morning.\" said Trisha.\n\nShe was in the kitchen, in her housecoat, starting a pot of coffee. \"Would you like a cup?\" she asked.\n\n- \"Umm ... sure.\"\n\n- \"Have a seat.\" she said.\n\n- \"I should get dressed.\" I suggested.\n\n- \"Don't wake her up. Sit down - really. It won't bother me.\" said Trisha. She wasn't even looking at me, so I guess the towel wasn't an issue after all.\n\n- \"OK. Thanks.\" I said.\n\nShe served me a cup of coffee, and toast. Trisha offered eggs and bacon as well, but I declined. She settled for grapefruit and sat down opposite me.\n\n- \"You don't look too hung over.\" she said.\n\n- \"I feel pretty good, all things considered.\"\n\n- \"I'm glad you stayed last night.\" she said.\n\n- \"Me too.\" I agreed. \"Driving would have been a bad idea. I had quite a few.\"\n\n- \"Oh, that too.\" said Trisha. \"But I mean, I'm glad you stayed with Angie.\"\n\n- \"Pardon?\"\n\nTrisha smiled. \"I think it was the best thing - for both of you. You've been ... down, ever since Jazz left. And this is good for Angie, too. She's been feeling ... a little insecure, I guess.\"\n\n- \"Angie? Insecure?\"\n\n- \"I know, right? She's beautiful. But after you and Kasia, then you and Jazz, and Les and Lucy, and then Max and Cyn ... a girl starts to wonder, when she's the only one left out.\"\n\n- \"But - what about you?\" I asked.\n\n- \"Oh, I'm a bit of a special case, wouldn't you say? But I've been getting more than my share of attention lately. More than I want, actually. Angie has been wondering what's wrong with her.\"\n\n- \"There's nothing wrong with her!\" I said, a bit loudly.\n\nTrisha put a finger to her mouth. \"Shush - she's sleeping. I know that. And you know that. But she needs to know it. So I'm glad you spent the night with her. In fact, I have to run a few errands, do a little shopping. So if you want to stay a bit longer ...\"\n\nI didn't know how to answer that. I've had some unusual conversations in my time, but that was one of the weirdest.\n\nAngie came out of her room, wearing a bathrobe. It was clear from the expression on her face that she had heard at least part of the conversation between Trisha and me. She seemed a little unsure of herself. I reached out and put my arm around her hips, pulling her close.\n\n- \"Breakfast?\" I asked her. \"Or a shower?\"\n\n- \"I - umm, I was going to get a shower.\" she said.\n\n- \"Great. Why don't you do that, and then we can talk.\" \n\nI went to Angie's room while she showered, and sat on her bed. What to do? I knew what I wanted - or didn't want, to be more precise. My head and heart were still too full of Jazz. It would be dishonest, and probably disastrous in the long run, to attempt to conceal that from Angie. What did she want? Should I just ask her?\n\nShe returned, freshly showered, to find me still sitting on her bed, with a towel wrapped around my waist.\n\n- \"Oh!\" she said. \"You didn't get dressed.\"\n\n- \"Not yet.\" \n\nShe sat beside me, smelling wonderfully clean.\n\n- \"I guess we should probably talk about last night.\" she said.\n\n- \"Not yet.\" I repeated. I stood, and then pulled her to her feet. \"I think you need to hear how beautiful - how desirable you are. We can talk after that.\"\n\nI kissed her. She was willing. I toyed with her lips, and sought out her tongue. It was much nicer than last night without all of the alcohol. I love beer, but it doesn't make kisses sweeter. She tasted wonderful this morning.\n\nI untied the belt of her robe, and opened it. Then I slid my hands inside, caressing her hips, her flanks, and around to her shapely ass. Angie was a voluptuous girl, with rich, full curves. Her body was a lush playground, and I intended to explore it.\n\nHer breasts were large - a bit too large for my hands, though I tried to cup and support them. My lips were drawn to her small pink nipples, and I suckled them for several minutes, as she cooed and held my head in her hands.\n\nI lowered her to the bed, and trailed kisses down her stomach. She had a slightly larger clitoral hood than the girls I had known before (in my limited experience). I went down on her slowly, lovingly, letting her know that we were not in a hurry, and that I was exactly where I wanted to be.\n\nShe came early, softly. I stayed there, avoiding her sensitive clit, but still kissing and licking her outer lips, her inner thighs and lower stomach. With my hands I could reach her breasts, and caress and gently squeeze them while I continued to lick her pussy.\n\nIt was quite a few minutes before her second orgasm, but this one seemed to be more intense, as she clutched at me, moaning. \n\nI gave her time to recover. I slid up the bed, behind her, and held her close, though I couldn't keep my hand from straying to her breasts. Angie eventually started to return the caresses, and then reached into her nightstand again, producing another condom.\n\nIn short order I was wrapped, and back between her thighs. The moment of penetration was exquisite. I stayed inside her for a moment, without moving, savouring the sensations. Then Angie began rocking her hips, sliding herself the length of my erection. I helped her out. We began moving together.\n\nI lifted her leg, and moved behind her. We spooned, with my cock sliding into her from behind. It left my hand free to play with her nipples. I wouldn't call it passionate, but there is something to be said for an unhurried, warm, friendly fuck. Angie came again, before I did, but she kept working her hips to bring me off, too.\n\nWe lay together, entwined, for some time. \n\n- \"That was wonderful.\" she said, eventually.\n\n- \"I agree. 100%.\"\n\nShe was silent for a while longer, and then she called my name, as if she thought that I had fallen asleep.\n\n- \"Dean?\"\n\n- \"Right here.\" I answered.\n\n- \"Do you want to talk now?\" she said. \"I think we should.\"\n\n- \"Alright.\" I said. \"Tell me what you want, Angie.\"\n\n- \"What I want?\" she said, a bit surprised.\n\n- \"Isn't that why we're talking?\" I asked. \"You have something to tell me.\"\n\nShe turned her head to look at me. \"How did you know?\"\n\n- \"I have my moments, Ange.\" I had never called that before, but I decided that this level of intimacy deserved a diminutive. Plus, I liked the sound of it. \"You are either expecting me to say something, or you have something on your ... mind.\" I had been about to say 'chest'.\n\nShe thought about that for a moment.\n\n- \"You and I are friends, aren't we?\" she asked.\n\n- \"Of course we are.\" I confirmed.\n\n- \"So, you won't be upset if I tell you the truth.\"\n\n- \"Of course not.\"\n\n- \"And you would tell me the truth, if I asked.\" she said.\n\n- \"Of course I would.\"\n\n- \"Okay - I'm asking. Are you still in love with Jazz?\"\n\nI was able to look her in the eye as I answered. \"Yes. I am.\"\n\n- \"I know that.\" she said. \"So you need to know, right now, that I'm not trying to come between you. I love her, too. And I like you very much, Dean. But this isn't ... I'm not a substitute for her.\"\n\n- \"God, no. You are completely different.\" I said. \"Wait - are you saying ...?\"\n\n- \"I'm not going to be your replacement girlfriend.\" Angie wasn't shy - she said this while looking into my eye, at a range of six inches. \n\n- \"Wow.\"\n\n- \"Are you okay with that, Dean?\" she asked.\n\n- \"Am I okay with it? Ange - I don't even know what that means.\" I admitted.\n\nShe let out a deep sigh. \"It means that I'm not in love with you, Dean. I'm not Jazz, and I'm not a replacement for her. I really enjoyed ... last night, and this morning. But I'm not your girlfriend. And you're not my boyfriend.\"\n\n- \"Then ... what are we?\" I asked. \"I understand what you're saying, Angie. And I'm ... really impressed that you're saying it. It's the kind of thing Jazz would say.\" She grinned at that. \"I'm just not entirely sure where we go from here.\"\n\nAngie frowned. \"I don't know what to call it. Friends with benefits? I don't really like any of those expressions.\"\n\n- \"We don't have to call it anything.\" I said. \"But does that mean that if I was to kiss you right now, you wouldn't object?\"\n\nShe smiled again. \"No, I wouldn't. And if you wanted to do more than that, I wouldn't object to that, either.\"\n\n***********************************\n\nIt was really difficult to know what to say to Jazz. She would be expecting my description of the Halloween party - after all, I had been sending her my take on all of our games and other social outings. In the end, I decided that simple and straightforward would be best.\n\nSo I just said it: 'After the party, I helped Trisha and Angie clean up. Angie was going to apologize again (the usual), so I kissed her. Then we slept together. Yes, I had quite a bit to drink, but that's not why it happened. We did it again in the morning, completely sober.'\n\nI chose to stop there, and hit 'Send' before I chickened out. Jazz replied a few hours later: \n\nAngie!! Wow!! How was it?\"\n\nI had no idea how to answer that. I chose discretion: 'A gentleman doesn't discuss such matters.'\n\nHer reply came only a few moments later. Bullshit! Guys talk about that stuff all the time. Seriously - details! She has an incredible body, right?\"\n\nHow many men have this sort of exchange with their former girlfriends? And then it hit me - I had crossed some sort of barrier. I was now beginning to think of Jazz as my ex-girlfriend. That made me sad. It was probably inevitable, though. I couldn't pine away forever.\n\nBut that didn't mean that I was going to describe sex with Angie to her. I stuck to my original position - sort of. 'I don't know about other guys, but my friends and I don't discuss sex in detail. But I will confirm your question about her physique: she does indeed have a magnificent body. I'm not sure how our relationship will develop. Angie made it clear that she doesn't want to be my rebound girlfriend. She suggested that we remain friends with benefits.'\n\nI also told Les what had happened, but I didn't make a special announcement to the other guys. Gerry, for one, has lips so loose they sink fleets. Angie might not want me broadcasting it to all and sundry, in any case.\n\nWhen I got together with the guys, we played Cold War, a spying and counter-intelligence contest set in 1960s Berlin. It's about halfway between a Le Carre novel and a Rocky and Bullwinkle cartoon. Gerry and I won, mostly because I figured out the odds a long time ago. We all knew the game well, but the other three always seemed surprised when certain event cards came up. There are also three double agent cards. When the entire deck has been drawn, either you have them, or your opponents do. Max also labors under the delusion that a CIA agent will beat a KGB operative - when, in fact, the odds are exactly 50-50.\n\nAfter the game, Max surprised us.\n\n- \"Hey, Les.\" he said. \"You and Lucy want to double date with me and Vee?\"\n\n- \"You and Vee?\" repeated Gerry. \"Since when?\"\n\n- \"I asked her out after the Halloween party. Just thought she would be more relaxed in a group. I dunno. She's kind of shy around me - maybe she thinks I'm some kind of player, or something.\"\n\n- \"You are some kind of player.\" said Gerry.\n\nI have no idea why, but I was mildly jealous. That's right: it makes no sense. But something in me didn't like the idea of Max dating Vee. I had no right to feel that way, so I just kept my mouth shut.\n\n***********************************\n\nMy parents went away for a weekend in early December. I invited Angie over. It was pretty much a straightforward invitation to have sex. To my delight, she arrived with her hair in braids, one of the hairstyles I preferred on her.\n\nWe had a few drinks, chatted for a while, and then I stripped her and ate her on the living room carpet. Then we fucked on the couch. Jazz was right: Angie had the most incredible body. I asked her to stay over, and she agreed. I fucked her once more, doggy-style, on my own bed, before we fell asleep together.\n\nIn the morning, I fucked her in the shower - a first for me. Clean, and yet very dirty at the same time. I was coming to understand the meaning of recreational sex.\n\nSee, I liked Angie. I considered her a friend. We gamed together, socialized with friends, and had great sex. I convinced her to go out with me - alone - just once. That evening I learned a great deal.\n\nFirst of all, while her body was outstanding, I couldn't make up my mind about her face. When she curled or braided her hair, Angie looked mighty fine to me. But when she wore it straight - which she did most of the time, I found that Angie didn't look so good. To be crass, it was the difference between an 8 and a 6.\n\nIt was also a bit awkward when we were alone. We could talk for a while, and then we hit a wall. Angie liked to play games, but didn't seem to want to talk about them. The same thing happened with art and music. She had her favorites, but wasn't very keen to discuss them. Our conversations seemed to grind to a halt.\n\nThis wasn't an insurmountable problem. I could simply pull off her clothes, and mount her, or go down on her. But that only applied when we were alone. Angie had been right: we would not do well as boyfriend and girlfriend.\n\nTrisha spent a night with a friend, and Angie invited me over. We talked for half an hour, and fucked for four hours. Well, not four hours straight - you know what I mean. \n\nThe bright spot to our relationship (if you want to call it that) was that it didn't interfere with game nights, or our friendships with the rest of the guys and girls. There was no awkwardness between us. We didn't indulge in public displays of affection, or make up cute little pet names for each other.\n\nAnother bright spot was that I started doing even better at school. Don't get me wrong: I was a good student before that, and was making enough money from scholarships to pay my own way. Mom and Dad fed and housed me, but I was covering the rest myself.\n\nOne of my professors was so impressed with my work that he asked me where I planned to go for graduate school. I hadn't really thought about it. But this Prof suggested that if I could keep my grade point average this high in my final year and a half, that I would be able to write my own ticket.\n\nIn late November, Trisha finally admitted that she and Gerry weren't just dieting and working out together. They were dating. Les teased Gerry unmercifully. He certainly had it coming. But Gerry didn't care. He and Trisha seemed to get along remarkably well.\n\nLes and Lucy appeared to be set for the long haul. Max and Vee were a bit different, though. I only saw them together twice: once was a game, after which Max drove her home. The other time was a night out with the rest of us, when they seemed to have a mild disagreement.\n\nOn the 1st of December, I asked Lucy to meet me for a coffee. She gave me her patented suspicious stare. But the she smiled. \"Sure. Tuesday? Around 4:00?\"\n\n- \"It's a date.\" I said. \"I mean, not a date-date, but -\"\n\n- \"I know what you mean. It's cool. I wanna ask you something, too.\" she said.\n\n- \"Oh?\"\n\n- \"See you then.\"\n\nI had told Les, in advance, that I was going to do this. It was all entirely innocent and above board. I just had a question to ask Lucy. We met in a quiet cafe.\n\n- \"So ...\" I said. \"Here's what I was wondering. Do you think that Jazz would take it the wrong way if I sent her a Christmas gift?\"\n\nLucy's reaction surprised me: she laughed in my face.\n\n- \"That's so funny.\" she said. \"I was going to ask you what I should get Les for Christmas.\"\n\n- \"That's easy.\" I answered. \"Clothes. A nice shirt, or a sweater. Haven't you noticed? Les has the fashion sense of a raccoon.\"\n\nShe laughed again. \"Honestly Dean, I don't understand half of the things you say - raccoons have a fashion sense?\"\n\n- \"No. And neither does Les. That's the whole point. He thinks that you only need two colors: black and white. Same with raccoons. Plus, they always wear the same thing.\"\n\n- \"Hmmm ... you have a point there. I was thinking about something a little more personal, though.\" said Lucy. \"Still, that's not a bad idea. Thanks.\" She brushed her hair back. Ever since she and Les had gotten together, Lucy was hiding behind her hair less frequently. She still did - it's hard to change a long-standing habit - but far less often than she did before.\n\n\"Now, for your question.\" she said. \"What kind of present?\"\n\n- \"Does it matter?\" I asked.\n\n- \"Duh. And what did you mean by 'take it the wrong way'?\"\n\nI sighed. This was the hard part. \"I want to send her a gift, so that she knows I'm thinking of her. I want to give her something that she'll like - that she'll appreciate. But ...\"\n\n- \"But?\" said Lucy.\n\n- \"But I don't want her to think that I'm still in love with her. I mean, I am - I mean ... This is coming out wrong. What I mean is that I don't want her to think that I'm pining away for her. That I'm sitting there checking my mail every thirty seconds in case she contacts me.\"\n\n- \"Aren't you?\"\n\n- \"What?\"\n\n- \"Jazz says that you have superhuman response time. She claims that some of your answers arrive before she's even hit 'send'.\" said Lucy.\n\n- \"I'm not that bad.\" I protested. \"Okay - maybe I am. But that's the whole point. I have to quit doing that. And I want to Jazz to know that she can get on with her own life. You know? I don't want to her to think that I'm trying to ... keep her to myself. Does that make sense?\"\n\nLucy wasn't stupid. \"You want her to know that it would be okay for her to start seeing someone else. Like you have.\"\n\n- \"Yeah.\" I said. \"I guess that's it.\"\n\n- \"It wouldn't bother you?\"\n\nI told her the truth. \"Yeah, it would. It would drive me nuts. But I would have to get used to it. Lucy, can I ask you something else?\"\n\n- \"Sure.\" she said.\n\n- \"Is Jazz seeing someone?\"\n\n- \"No.\" \n\n- \"Would she tell you if she was?\"\n\n- \"Yes. We tell each other everything.\" said Lucy.\n\n- \"Would you tell me if she was?\" I asked.\n\n- \"No.\"\n\n- \"Oh.\"\n\n- \"Dean - you know her. If Jazz was seeing someone, she would've told you. She'd tell you first.\"\n\n- \"You think so?\"\n\n- \"I know so.\" said Lucy. \"So - back to your original question. Would she freak out? Probably not. Depends on what you sent her.\"\n\n- \"I was thinking about a necklace. This one.\" I showed Lucy a picture of it on my phone.\n\n- \"What? Are you nuts? What does that cost?\"\n\nI told her. Lucy just shook her head.\n\n- \"No, Dean. That would freak her out. Jewelry is exactly the wrong thing to send. Why don't you send her something she'd like. Something personal, from you. Send her Amazons.\"",
        "- \"The game?\"\n\n- \"Yeah - the game. She loves that game, Dean. She loved playing it, and she loved the fact that you made it for us - for her, at least in part. Make her a copy of the game - and especially a copy of the cards. It would be like sending her a piece of you. If she makes friends down there, she could play it. But every time she sees it, it would remind her of you - of all of us, and the fun we had playing it.\"\n\n- \"Lucy - that's a great idea.\"\n\n- \"You sound surprised. I have great ideas every now and then.\" she said.\n\n- \"That's an awesome idea. How can I thank you?\"\n\n- \"By helping me find something more personal for Les. I will buy him clothes. You're right about his colors. But I want to get him something he'll really like. Is he into graphic novels?\"\n\nWe talked for another hour. It was the first really good conversation I had ever had with Lucy. I was really glad we had done it, and told her so.\n\nI didn't ask her what I should get Angie for Christmas.\n\n***********************************\n\nAngie and I double-dated with Trisha and Gerry, at their request. I was concerned that they might still be at the awkward stage - it's not always a smooth transition from friendship to romance. But they got along surprisingly well. The awkwardness was between Angie and me.\n\nI could laugh and chat with Trisha without hesitation. Our conversation flowed naturally. Gerry, of course, was a one-man conversation. But I had no idea what to say to Angie. I couldn't remember ever having this problem with her before. I liked her, and I certainly wanted to have sex with her ... I just didn't know what to say to her when we weren't alone and naked.\n\nAngie did manage to let me know that she wanted me to come home with her. \n\n- \"Trisha's OK with that?\" I asked.\n\n- \"Yes. I asked her.\" said Angie.\n\nIt was decidedly weird when Gerry dropped the girls off at their apartment. He kissed Trisha goodnight, while I got out of his car and went in with the girls.\n\nWe had another drink, sitting at their table, while Trisha de-constructed the date, analyzing Gerry's reactions. She was mostly speaking to Angie, of course, but she did ask me for my impressions.\n\n- \"Do you think he liked what I wore? Was it too much?\" she said.\n\nI reached over, and took Trisha's hands between mine. \"Trish - sweetheart.\" I said. \"Gerry is crazy about you. Honestly, you could have worn a barrel and he would have loved it. I'm not giving away any secrets, here. He is obsessed with you. Just say the word, and he will come running.\"\n\nThat made her very happy. She kissed me goodnight, and kissed Angie, and went off to bed. Angie gave me a look, and then stood up. I followed her into her room.\n\nIt was sheer delight to take Angie's clothes off. That lush body had me absolutely fascinated. I kissed her neck and throat while I fondled her ample breasts. Then I caressed her flanks and hips while I licked and tongue-teased the little mole just above her navel.\n\nAngie knew where I was headed, but she surprised me by taking charge and setting the agenda. She took my shirt off, and loosened my pants - enough to slide her hands in and grab my ass. Then she started licking and sucking on my nipples.\n\nWhen she pulled my pants and underwear down, my engorged cock snapped upwards and slapped her under the chin. She smiled, and grasped it firmly, re-directing it to her mouth. Angie licked it from root to tip, and covered it in saliva. She produced a condom, and rolled it on me.\n\nShe pushed me back on her bed, and climbed atop me. She took hold of my cock, and inserted the head between her lower lips. With a groan, Angie sat down on me.\n\nShe did all of the work. I grabbed twin handfuls of tit flesh while she rode back and forth. It was especially obvious, now that I had nothing to do other than concentrate on her boobs, that Angie's right breast was noticeably larger than her left.\n\nThen she began to pump up and down, squeezing me with her vaginal muscles. I put my hands on her hips, helping to lift her up, and then pull her down. Angie had her eyes closed, in concentration, in guess. That gave me the freedom to observe her.\n\nShe started grinding, and came, a bit more loudly than she ever had before. I let her enjoy it, and then flipped her on her back. She groaned as I began plunging my cock into her. I lasted maybe six strokes before I grunted and filled the condom with ejaculate.\n\n***********************************\n\nWe went out again as a foursome a week later. Trisha and Angie announced that they had decided to host a New Year's Eve party. I told them that they didn't have to.\n\n- \"You guys had us all over for Halloween. You don't have to do it again.\"\n\n- \"We want to.\" said Trisha. \"It'll be fun.\"\n\nThere was a decidedly different dynamic to this double-date. Gerry and Trisha were a little tighter, almost nervous. Angie was a bit more distracted than usual. It felt like the three of them had a secret which I could not be allowed to find out. I was actually relieved when Trisha said that she wanted to call it a night early. She asked Gerry if he would drive her home.\n\nAngie put her hand on my knee.\n\n- \"Can we stay a bit longer?\" she asked.\n\n- \"Sure.\" I said. I would have much preferred to go home with her for a repeat of last week's bedroom Olympics.\n\nGerry and Trisha got their coats, and bid us goodnight. As soon as they were gone, I asked Angie.\n\n- \"Do you have any idea what that was about?\"\n\n- \"What do you mean?\"\n\n- \"Gerry had almost nothing to say. Trisha was acting weird, too. Nervous, almost. Is something going on?\" I said.\n\nAngie blushed. \"Well, Trisha asked me if I could stay out a bit longer tonight. She - she thinks that tonight might be the night, if you know what I mean.\"\n\nLucky Gerry. \"Good for them.\" I said. \"She's happy with him?\"\n\n- \"Very.\" said Angie. \"He knows exactly what she went through to lose all of that weight. He understands her. Plus she says he's sweet.\"\n\n- \"That's great.\" I said. \"So we should give them some privacy. That's cool. What would you like to do, then?\"\n\n- \"Actually, I was hoping we could talk.\" she said.\n\nThe way she said that sounded a bit ominous, but when you have no choice, you might as well accept it with good grace. So I smiled and said: \"Sure. What's on your mind, Ange?\"\n\nIt took some time for her get to the point. She was avoiding eye contact, at first. Finally, the story began to come out, in fits and starts. There was this guy. She knew him from class. And from the gym. Not a surprise, that: given what I had seen of Angie's body, it was a mystery to me why there weren't half a dozen guys following her home from the gym.\n\nAnyway, this guy, whose name was Rick, had asked her out. She was going to say yes.\n\n- \"It's just a friendly date.\" she insisted. \"But ... if it works out, I was going to invite him to the New Year's Eve party.\"\n\nI nodded. \"I understand. You want to see if this relationship has potential. I won't get in your way, Angie.\"\n\n- \"I knew you wouldn't be offended.\" she said. \"Thank you.\"\n\n- \"Offended? Hardly. I've enjoyed the time we've spent together. You're a beautiful girl, and absolutely fantastic lover. I'll miss it. But you have to follow your heart.\"\n\nAngie gave me a hug. \"I've enjoyed it, too. You're a wonderful ... partner. And just so you know - if this thing with Rick doesn't work out, I would love to pick up where we left off. But in the meantime, I think I should stay ... single.\"\n\nWell, that was a nice of way of being relegated to the bench. I would miss the sex, for sure, but it didn't hurt. For her sake, I just hoped that Rick wasn't a dick.\n\n***********************************\n\nWhen we got together for a game at Les' house, the week before Christmas, Gerry was practically bouncing off the walls.\n\n- \"Love is awesome!\" he yelled.\n\n- \"What is he on?\" asked Max.\n\n- \"He and Trisha made it official.\" I said.\n\nLes made whipping noises.\n\n- \"Yeah, yeah.\" said Gerry. \"I had that coming. Go ahead. I just want everybody to be as happy as I am. Les is happy. Are you happy, Max?\"\n\nMax shrugged. \"I'm okay.\"\n\nGerry hadn't heard him - he was already on to me. \"And Dean is knocking boots with the delectable Angie, so for the first time in history, all four of us have girlfriends at the same time!\"\n\nI didn't want to rain on Gerry's parade, but thought it was wiser to let the truth be known. \"Sorry, Ger - Angie and I are on hold. She's going to give some guy at school a try.\" I explained, for the benefit of all three, that I was perfectly fine with it.\n\nWe played a quick game of Stuffed Animals which Gerry somehow won, and then Killer Cars, a sort of Mad Max scenario with custom made war wagons. Max, predictably, spent his points on the most powerful engine available. Les took a balanced approach, while Gerry loaded up on offensive options. I changed my strategy. Normally, I prefer balance, but this time I decided to take every defensive upgrade I could.\n\nMax ran circles around the rest of us, while Gerry chose to pound Les to pieces. A lucky shot took out one of Les' tires, and after that, he was done for. Max and I had both taken a few long range shots at Gerry. I did minimal damage, but Max damaged Gerry's front end. He started leaking oil, and a cloud of smoke impaired visibility and accuracy for him.\n\nMax and I came at him from different angles. Gerry couldn't fire at both of us. He had to hope that he could put one of us out of action early. He chose Max, just as I would have, in his place. I nibbled away at Gerry's car with my popgun armament. Gerry missed a few times, but then nailed Max good. It wasn't enough to finish him off.\n\nMax and I finally had the satisfaction of watching Gerry go up in flames. From then on, it was a race for Max. He had to use his mobility to get into an advantageous position, but his medium weaponry made little impression on my heavy armour. I had to guess where he would be, and fire when I had the chance. I did little damage, but Max had already taken punishment from Gerry. It took quite a few rounds. I knew that Les and Gerry were getting bored, but Max kept trying, until I put a second shot into his engine, and cut his speed by half.\n\nKasia came home then (her parents had let her out for the Christmas holidays), with Lucy in tow. I said hello, and then went back to the table to finish Max off.\n\n- \"So close.\" he muttered. \"I almost had you.\"\n\n- \"You did.\" I admitted. \"That shot by Gerry gave me an advantage.\"\n\nWe had a drink with the girls. Lucy produced a tube of thick brown cardboard, with a red plastic cap at one end. It looked like the type of thing an architect would use to carry around drawings.\n\n- \"What is that?\" asked Gerry.\n\n- \"Dean's Christmas present.\" said Lucy.\n\nI looked at her, completely surprised.\n\n- \"From Australia.\" said Les.\n\nOh. I didn't know what to say. \"Should I open it?\"\n\n- \"Not until Christmas.\" said Lucy. Then she leaned over, and whispered in my ear: \"She said you should Skype her on Boxing Day.\"\n\nI spent Christmas Eve with my family. But in the early hours of the morning, I unwrapped Jazz's present. \n\nThere were two things in the tube. The first was the board for Maharajah. Jazz had photographed my clumsy, Spartan design for the Maharajah's palace, along with spaces to set the deck of event cards and the character cards.\n\nThen she had drawn her own beautiful rendition of my simple layout. The palace rooms were tiled, and featured ornate rugs. The harem featured a sunken bath and piles of cushions. The outer rooms had large windows. I had separated the rooms with straight lines; Jazz had drawn plants, and divans, or columns, or lacquered screens. Her board was a eyeful, with bright reds, yellows, and greens, and the occasional splash of purple.\n\nThe doorways were flanked by potted plants, or by bare-chested, turbaned guards wielding tulwars. The throne room was awash with gold and gems, while the lower levels were grim and forbidding. In the empty space, beneath the name of the game, she had drawn a miniature tiger hunt. And around the edge of the board, she had a parade of elephants, linked trunk to tail. \n\nI studied every inch of it, and stared at it for the longest time. That's when I realized that no two rooms were identical. Every single room had a different layout, or colour scheme, or some feature which differentiated it from the others. I also saw that the elephants were all different: some were larger, one had a broken tusk, or bigger ears, and some had mahouts riding on their backs.\n\nIn the end, I came to two simple conclusions. First, this piece showed skill. She might not be ready for the big time, but Jazz could make money through her art. I don't know whether an expert would call this art, or design - but it was fantastic.\n\nSecond, it was impossible not to feel what was coming off the painting, in waves. There was no way that Jazz could have finished this in a single evening. This must have consumed hours and hours of her time. And she had to have been thinking of me for much of that time.\n\nIt was an incredible thrill, and very humbling at the same time. It was also a little frightening.\n\nThere was a second piece in the tube. It was a sketch, in pencil. Jazz had done a self-portrait. In most self-portraits that I have seen, the artist is looking off to the side - usually, their left - because they are looking at themselves in the mirror. But here, Jazz seemed to be directing her gaze upwards. If I held the sketch in my lap, she appeared to be looking right up at me.\n\nIt was a striking portrait. Jazz had talent, for sure. Her hair was unruly, her eyes striking. She hadn't stinted on her nose - it was all there, strong and proud. She was half-smiling, giving the impression that she had enjoyed the whole process. \n\nIt was over an hour before I went to bed.\n\nChristmas Day was a bit of a blur. My mother had seen me bring in the package, and wanted to know what Jazz had sent. I let her see both the board and the sketch.\n\n- \"Oh, my.\" was her reaction. She stared at the sketch for several minutes. Then she asked me: \"Can your father see these?\"\n\n- \"Okay.\" I said. Why not? I was going to hang the sketch on my wall. I would let the guys see it, too. Lucy as well, unless she had already seen it.\n\nThat afternoon, while we were setting the table for Christmas Dinner, my Dad put his hand on my shoulder.\n\n- \"Those are quite the gifts.\" he said.\n\n- \"I know.\"\n\nBoxing Day couldn't come soon enough.\n\n***********************************\n\nShe was smiling as she appeared on my computer screen. Her hair was wet, and she was wearing a bathrobe, but she looked fantastic. She was also holding the package I had sent her present in.\n\n- \"I got it! I got the game - it's perfect!\"\n\n- \"Not as perfect as your gifts.\" I replied. \"Merry Christmas.\"\n\nHer smile grew even brighter. \"Same to you.\" She held up the card from the game - the one with the Warrior's pose. \"This is me. You have no idea how much this means to me, Dean.\"\n\nMy eyes were beginning to water a bit. \"The board - Your sketch ... it's the best present I've ever gotten. I can't ...\" I couldn't finish my sentence.\n\n- \"Now you know.\" she said. \"I think of you all the time. And now that you have the sketch, you can think of me. I know you do - I mean, you can think of me, and know that I'm thinking of you. Don't cry, sweetie - you make me so happy, even from the other side of the world.\"\n\nI was utterly useless, crying openly. \"Th-thank you.\" I got out.\n\n- \"I'm glad you like them. And I love your gift. You couldn't have picked anything better.\" she said.\n\nWe talked a bit more, about her family and mine. She wanted to know more about Trisha and Gerry - though I suspected that she already knew more than I did. She commiserated with me about the end of my arrangement with Angie (I had told her). \n\n- \"Well, don't sit around waiting for her to come back. Besides, that's just sex. You can do better than that. You deserve better than that.\" she said.\n\n- \"You are infinitely better.\" I told her.\n\n- \"But I'm not there, Dean. You need somebody who is there for you. Although, today, maybe we can make an exception ... is your door locked, sweetie?\"\n\n- \"It can be.\" I answered, still trying to get used to the fact that she had called me 'sweetie' twice already. I quickly locked my door and returned to the computer.\n\nJazz smiled at me, and raise her right hand to her opposite shoulder. She gave a little shrug, and the robe slipped several inches. I could see a bit of cleavage as the robe gaped open a bit more. She slipped her hand underneath the robe. From the location of her hand and the movement of her wrist, it was plain that she was playing with her nipple.\n\n- \"Your mouth is open, sweetie.\" she said. It was - I closed it. She slipped the robe off her shoulder, revealing her perfect breast and a very erect nipple.\n\n- \"You've been calling me 'sweetie' - that's three times now.\" I observed, while I watched her fondle her own breast and pinch her nipple.\n\n- \"I guess that means that I really liked your gift.\" Jazz let her robe slide off her other shoulder, so that all of her upper torso was visible. She was still smiling. I started to smile, too. \n\nThen she backed her up chair. Jazz put a foot up on the corner of her computer table. She had nothing on beneath the bathrobe. She draped the folds of the robe across her leg, so that I could see her clean-shaven pussy.\n\nShe licked her finger, ran it around her lips, and then moved it down to her lower lips.\n\n- \"Your mouth is open again.\" she pointed out. \"Maybe you could take off your shirt for me.\"\n\n- \"Your wish is my command.\" I said.\n\n- \"Ooh - I like that. Don't stop at the shirt, then. Get your pants off.\"\n\nI peeled off my jeans, and stuck my hand inside my shorts.\n\n- \"C'mon - don't be a tease.\" she said. \"Shorts, too.\"\n\nIn a moment I was naked, except for my socks, stroking my cock as I watched Jazz play with herself. She put her finger back in her mouth, and licked it again. Then she wet a second finger, before lowering them to her pussy. She toyed with her clit, and then put those two wet fingers inside herself.\n\n- \"You seem to be enjoying the show.\" she remarked. \"From what I can see.\"\n\n- \"Of course I am. You're an incredibly beautiful woman.\"\n\nJazz licked her fingers again. This time, she ran them around and over her hard nipples. I groaned aloud. That seemed to inspire her. She lifted her breast, and lowered her head - and, somehow, she managed to lick her own nipple. \n\n- \"I can't believe you did that.\" I said.\n\n- \"Multi-talented.\" she answered.\n\n- \"And flexible.\"\n\n- \"You'd know all about that.\" she remarked.\n\nJazz put her second foot on the table, giving me an unobstructed view as she returned her fingers to her pussy. She came first, hunching forward on her chair. That did it for me, as I sprayed come in the air. The first jets landed between my monitor and my keyboard. The next spurts landed on my chest.\n\nWhen I could breathe again, I told her: \"You're amazing.\"\n\nShe gave me one last dazzling smile.\n\n- \"I love you. Merry Christmas, Dean.\"\n\n***********************************\n\nThe party was pretty good. Gerry and Trisha seemed extremely happy with their new status, and their high spirits were infectious. I had a good talk with Lucy, and thanked her again for her suggestion about the gift for Jazz.\n\nRick turned out to be a dick. He got smashed, and tried to pull Angie's tits out of her shirt. Max and I had to help him down the stairs, when what we really wanted to do was throw him down. Luckily he had a friend there who agreed to make sure that he got home safely. We bundled them into a cab and that was the end of that.\n\nThat was probably the end of Angie's little relationship, and she was understandably upset. Maybe she was embarrassed, but she didn't seem to want my support, or my comfort. Max took over, talking to her quietly.",
        "It didn't bother me very much. I wasn't in any hurry to get her back in her bed. Skype sex with Jazz had probably spoiled me for a while. Mostly I just didn't know where my head was. It was very satisfying to feel about her the way I did, but she had a point. I couldn't build my life around a computer screen.\n\nMidnight brought that home to me. Les and Lucy were together. Gerry and Trisha were now a couple. Max and Vee were dating - although at the moment they were both concentrating on Angie. \n\nOf all people, it was Kasia who came to wish me a Happy New Year first. She gave me a chaste kiss on the cheek, and I gave her a brotherly hug in return. Les and Lucy joined us a moment later, initiating another round of kisses and embraces. Then Vee came over. She gave me a kiss and a hug, too.\n\n- \"Angie okay?\" I asked.\n\n- \"She's taking it hard. But she does seem to be more worried about what people will think than she is about losing Rick.\"\n\n- \"Rick the Dick.\" I said.\n\n- \"That sounds about right.\" she said, with a smile. \n\nThen I told Vee how delighted Jazz had been with her Christmas gift. \"I knew she liked Amazons, but she actually loves it - and I think it's in large part because of your cards. Thank you again, Vee.\"\n\n- \"Listen, Dean. Can you spare any time for a coffee, or something?\" she said. \"I need your help with something.\"\n\n- \"Sure. Day after tomorrow okay?\"\n\nShe nodded. \"Thanks.\"\n\nNew Year's Eve parties are often one big anti-climax after midnight, unless you're with somebody. Couples have their own agendas, of course, but for a single guy or girl it can be a bit of a downer. I bailed out relatively early, and went home to check my email, and to write one to Jazz, with my interpretation of the night's events.\n\nTwo nights later I met Vee at a small piano bar. She had opted for a drink, instead of coffee. She was already there when I arrived. We greeted each other with a hug, and then sat down.\n\nI could tell that something was bothering her. She kept her head down, for the most part. I noticed that she was wearing a little bit of makeup - Max's influence, I supposed. Just a little mascara drew attention to her light blue eyes, and soft lipstick highlighted her small, rosebud mouth. She looked delicate, compared to Angie.\n\nVee's hair also seemed a bit blonder than I remembered. It was still mostly straw-coloured, but with blonde streaks here and there. I couldn't compare her to Kasia; Vee was softer, more vulnerable, and innocent. She brought out my protective instincts. \n\nShe was obviously having trouble bringing up the subject she wanted to discuss, so I tried to help her.\n\n- \"Is it money, Vee? Are you having financial problems?\"\n\n- \"No. Not money. In fact, I'm in pretty good shape. Better than I have been for a while.\"\n\n- \"That's good. Something about school?\" I asked.\n\n- \"No. My classes are great.\"\n\n- \"Your apartment? Your roommates?\"\n\n- \"No.\" she said. \"It's about Max.\" She looked up at me, with her lips pursed.\n\n- \"Oh. What's wrong with Max?\" I felt a bit uncomfortable. I considered Vee a friend, but Max and I went back a decade. I didn't need to be involved in the private details of their relationship.\n\n- \"Nothing's wrong with Max.\" she said. \"He wants to be ... closer. The problem is with me.\"\n\n- \"Oh?\"\n\n- \"I'm not in love with him.\" said Vee. \"Because ... I have strong feelings for someone else.\"\n\nOh, no, I thought. Max would be devastated. Getting dumped is bad enough - but getting dumped for another guy?\n\n- \"That's ... difficult.\" I said. \"Is it someone we know?\"\n\nVee raised her head, and looked me in the eye. A split second before she uttered the words, I finally figured out what she was going to say.\n\n- \"It's you.\"\n\n***********************************"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "games",
        "friends",
        "group",
        "board games",
        "big breasts",
        "college"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/gamers-pt-08"
}