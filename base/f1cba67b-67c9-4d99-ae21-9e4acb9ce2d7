{
    "title": "Save One Love",
    "pages": [
        "Chapter 1: April, 1998 Jack Loved Janice\n\nIt was unusual. Janice called and said that they needed to talk soon, using that little girl voice she used when something was very serious. They were engaged to be married. He had asked her just two months ago, and they had gone ring shopping together that night. They'd picked one out but the size was not right-a little too loose, so they'd taken a few minutes and gotten it right and she walked out with it on her finger. They went to show their parents, proudly.\n\nHe had known Janice since they were first graders; they'd gone through school often in the same class, watched each other at sports and recitals and performances. She'd been class salutatorian senior year, he'd won a scholarship from the Marines. He had always loved her, always. Everyone assumed they would marry someday-after college, her parents insisted. His parents just nodded and smiled at that good advice. They were seniors in college now, and their virginity weighed heavily on them, but they had restrained ourselves. She wanted that for her wedding night, for him, for them. The ring told everyone what they had already known: Jack loved Janice, and Janice loved Jack.\n\nThey met that April day under the oak tree in her backyard, where her parents had placed chairs and a little table, and in the warm spring sun the place was peaceful and quiet. They often sat there with her folks and drank a pop or lit firecrackers on the Fourth or talked politics, religion or baseball. It was just Janice with him this afternoon; they had a month and a half until college graduation, she from University of Cincinnati and he from Miami. Different schools had been difficult, but she'd only lived on campus this one year and he was only a half hour away from home at his school. He thought it had worked out. The wedding was to be two weeks after graduation. He reported for duty to Quantico in July; they had a modest honeymoon planned.\n\nShe looked at him and took a deep breath. \"I have something to say and it's not easy.\" \n\nHe felt something in his chest: anguish, fear and dread.\n\n\"I always said I wanted to be a virgin on our wedding night. We had so many chances to do it...\" she said, holding his hand. They looked out on her house and beyond from the little knoll under that oak. \n\n\"Yeah, it wasn't easy,\" he said, smiling. \"Have you changed your mind? We still have time...\" \n\nBut no, she shook her head. She wasn't offering early access. \n\n\"I failed, Jack,\" she said, almost whispering. \"I failed you.\" \n\n\"What do you mean?\" he asked. He did not understand. She'd squeezed his hand each time she said failed. \"A class? I knew you had trouble with that methods teacher but...\"\n\n\"No, not class. I...I had sex with someone, Jack. A guy at school.\"\n\nHe had expected something serious but not this. She had made her virginity a symbol of purity, of righteousness, of love, of everything good that a man and woman could find in one another. He had lived with her standard, even embraced it when on summer activities with the Marines when far from home. He had been faithful to a woman who would not have sex with him...yet, not marry him...yet, not live with him...yet. He had that second beer on the Westpac cruise two summers ago instead of visiting with that floozie in some bar in South Korea. He'd had several opportunities then and other places and times. \n\nBut Janice had wanted them both to be virgins, to learn about sex together-and they had, he thought, having touched and kissed and done all those things they hoped would alleviate but only increased their sex drives, making it harder to say no but they did, they did say NO. Or at least they said, yes but not yet.\n\nShe said, her voice a definite whisper now, \"I met him in class in November, and I fell in love, Jack. In love with him even though I was in love with you for so long. But he was tall and dressed so nicely and he took me to games and things...\" She took a deep breath. \"I slept with him two months ago, just one time. But then it happened again the Saturday you went on that Marine trip, and I realized I loved him, too.\" \n\nHis reality crashed. He felt a mass in his chest that had never been there before, overwhelming his heart and lungs and leaving them no room. \n\n\"Two months ago? Before or after we got the ring?\"\n\nShe looked sheepish. \"The next night.\" \n\nShe reached in her pocket, pulled something out and handed him the ring. He looked at her left hand. She was wearing a diamond engagement ring, the stone larger than that they'd picked out a month ago. He looked at the ring in his palm. \n\n\"You were engaged to two men at once?\" he asked, incredulously. He shook his head.\n\nShe looked down. \"I know I've not done right by you, Jack. I do love you, but Kevin is more the man I've always wanted. You're the man I always had. You belong to my past. He belongs to my future.\" It sounded prepared, rehearsed.\n\nHe looked at her and restrained himself. He remembered her professions of love over the fifteen years they'd been friends and classmates and unsexed lovers. He remembered all the kid things they'd done together like building a snow fort, pulling a bee stinger from her leg, her holding a snake in her hands to show him, tossing a baseball, playing tackle football with other guys and girls in the mud. He remembered her white dress at their Confirmation, the proms they attended, eating together in the cafeteria, all the things kids do as friends and then lovers. He felt the grip in his chest. He'd really been in love with her, only her, forever. Now that would become something else, and he'd live with that pain, forever.\n\nHe stood. \"Yes, I agree. I've been had.\" He left her then despite her calling out that she wanted to say more, but he went on with the ring in his clammy palm. He saw only straight before him for the next few minutes. \n\nHe drove around Sky Grey, numbed and stunned, forcing himself to see the road and traffic and pedestrians. Tiring of that, he went home and talked to his mother, who called his father who came home to be there. His father, a solid, stolid man with jowls-and who had always loved Janice-shook his head as if he needed to clear it of a fog; he no longer understood the workings of the universe. He was Euclidean in a quantum reality. Jack without Janice seemed impossible. \n\nThe phone rang and Jack's mother answered. She spoke a few minutes, quietly, and then came back into the living room. \"That was Marge,\" she said. Janice's mother. \"Janice is pregnant.\"\n\nHis father looked at Jack, as did his mother, but Jack just shook his head. \"No, not mine. She had sex with Kevin Somebody.\" He stopped and looked at his parents. \"I feel like a fool.\" \n\n*\n\nChapter 2: February, 2001 SEAL Squad Unnumbered\n\n\"Lieutenant, we are looking at your service record.\" \n\nLeslie was at attention, standing before a table with Marine Colonel Samuel Lejoy, Rear Admiral (he preferred the archaic term Commodore) Elias Jansen (who wore a SEAL badge, Leslie noticed), and Navy Captain Juanita Estevez sitting on the other side. There were papers spread about the table. He sneaked a glance down and saw several pictures of himself-one portrait and several of him in action from the various schools and programs he'd attended. Because of the last one-20 months overseas-his term of obligated service had been extended to six as opposed to four years. He'd spent almost three years going to school since he'd been in the Corps. He did not regret the extra two years: he had no other responsibility, no wife, no child, and since leaving college he had thrown himself into these programs. He'd been home three times between schools, but most of his spare time was spent reading: professional journals, novels, essays about foreign policy and the military. \n\n\"Do you have a personal life, Lieutenant?\" the captain inquired.\n\n\"Ma'am?\" he said. He was puzzled.\n\n\"What are you like? You seem to have no particular friend, no girlfriend, only your parents back in Ohio, and you see them rarely-are you estranged?\" the colonel explained. \"We have no reports of any sexuality at all, no best friend, no bar fights. The Israelis report that you read in your free time, write some but do not correspond with anyone but family. We want to know what's going on.\" \n\n\"Oh, yes, Sir. I had a long-term girlfriend but she married someone else right before TBS, so I guess the Marines became my life. Then I volunteered for the Israeli exchange before the end of IOC, and it almost started over. That school was tough. I made some friends, had a date now and again, but I was always the American who'd be going home eventually. I wanted to learn everything I could-I understood I was in a unique situation. Learned to scuba and sky dive. Recon techniques. Hand to hand, small weapons, hostage rescue. Infiltration and assassination.\" \n\n\"So,\" said the commodore, \"You are military and no more? We want to know if you'll be able to work with SEALs. American SEALs, who are as highly trained as any troops ever have been. And some are married, some have kids, others have girlfriends, plans. How do you get along outside of school or program? You have not been to our SEAL school, you know no SEALs-but Shayetet-13 is respected. And your performance was rated very highly. Particularly, you were commended by a General Ari Lessud and there's a special letter here from Lt. Colonel Naftali Meier.\"\n\n\"I didn't know about Colonel Meier's letter, but it pleases me. I thought she didn't like me,\" Leslie said. Meier had scowled at him for the last six months he'd been in Israel. He did not know what her role at Shayetet was, but she was always observing. \n\n\"Yes, Colonel Meier-a woman? I don't know Hebrew names-speaks very highly of you,\" said Captain Estevez. \"She says that you have an ability to get along with people of different persuasions, races, religions. She was impressed how you acted during an altercation, said you broke up a fight before anyone's career was threatened.\"\n\nLeslie smiled, remembering. \"Yes, there were two groups in heated argument over the way to deal with terrorists. Most of them had relatives killed or injured in terror attacks. I was not known as an officer, these were mixed officers and enlisteds and we never identified that way, and I was able to calm the hot ones. I think it helped that I was never close to any of them, but they all thought they knew me. And knew I was American. They assumed I was naive, and in this case it helped.\" \n\nThe captain and colonel exchanged a glance, as if they had been discussing this point. The Commodore was impassive.\n\n\"So you believe an officer, even a second lieutenant, should maintain a distance from the enlisted people?\" Captain Estevez asked.\n\n\"Yes, Ma'am. I don't mean avoiding liking or being friendly. I mean always keeping a professional barrier. It is important to work as a team, but that doesn't mean it should be a democracy.\"\n\nStill at attention, Leslie wondered why. Usually military officers were more collegial. \n\n\"We are considering assigning you not to Delta, as originally intended, Lieutenant.\" This surprise came from the Commodore, who was looking at Leslie's eyes. \n\n\"Yes,\" continued the captain, \"there is a SEAL unit forming for some special missions. It won't be assigned a particular geography, just inserted where needed. The unit will be smaller and largely independent. The sorts of things you worked with in Israel. You'll be second-in-command, under a Navy commander. Oh, you will be raised another grade because of your performance to date. You are Captain Leslie, as of now.\" \n\nThe captain, commodore, and lieutenant colonel stood up, the captain coming around the table. The lieutenant colonel slid her a small box. As Leslie stood still, she removed his two first lieutenant's silver bars and put new, double bar Marine captain insignia in place.\n\n\"Congratulations, Captain.\" She shook his hand, and then the commodore and lieutenant colonel did also. They all returned to their seats. \"At ease.\" \n\nLeslie relaxed, hands clasped behind his back and feet apart.\n\n\"But all of your experience is in schools,\" the colonel went on. \"That gives you what-two ribbons on your chest? Oh, and the Israeli one. And these guys know combat ribbons from others. You'll be seen as shit, Captain. And you are NOT a SEAL. They won't know how a non-SEAL can lead a SEAL Squad, but there you go. Built-in professional distance.\" \n\nLeslie was breathing a little quicker. He'd been a first lieutenant for almost a year, but rarely was someone advanced to captain so quickly. \n\n\"What do you think, Captain?\" the colonel asked. \n\n\"I thought you'd called me in to send me to Bragg with Delta. Where will I go with the SEALs?\" he asked.\n\n\"First to Little Creek, where you will train with your SEALs, rehearse various scenarios especially hostage rescues, extractions under fire, a night drop, and HALO jumps. Rappelling. But mainly working together. Shayetet and we do things differently, based on the same principles,\" said the captain. \n\nLeslie smiled, then smoothed his countenance.\n\n\"Something funny, Captain?\" asked the captain.\n\n\"More training, Ma'am.\"\n\nShe saw it and smiled also. \"But you'll be training with the people you'll be fighting with this time. And only for a six week period. By then we'll have your ship assigned. You'll be going to the war zone, most likely, Captain, and we expect war is coming, not just the Taliban. This will be a different kind of war-it may not involve nation-states. Nation-state may just be a distraction. \n\n\"Report tomorrow to your commanding officer, Lt. Commander Luc Ormond. Since the team includes a non-SEAL and a different organization we'll assign it to a Team but detached, we'll officially call it SEAL Squad Detached. It is the custom to call any SEAL unit a team, by the way, despite the TO. Report here tomorrow, we'll have written orders. You've seen your parents?\"\n\n\"Yes, Ma'am,\" Leslie said. \"I went there straight from Israel. Home a week. Ready to get going, Ma'am. I am also ready to get in the fight. The schools have been great but...I want to use all this training.\"\n\nThe colonel and captain were nodding. The commodore was stalwart, never changing expression. \n\nThey stood up. \"Good luck, Captain. Go find some new insignia. Congratulations,\" the captain said, holding out her hand to shake his. He responded with his hand, shook hers, the commodore's, and the colonel's. He realized normal military protocols had been ignored for the meeting; he wondered at the fact the SEAL admiral had taken the observer's role.\n\n\"Thank you, Ma'am, Gentlemen,\" he said. He stepped back, about faced, and left.\n\nThey said nothing for a moment. \"He certainly is calm. They all remark on it,\" said Lt. Col. Lajoy.\n\n\"Hope he's as good in combat. He's as well trained as anyone can be. I just wonder if it makes sense to train someone to the point one bullet can disappoint all that time and effort,\" Captain Estevez said, shaking her head.\n\n\"Hope it doesn't come to that. That's always the risk, though, isn't it?\" said the commodore, remembering lost comrades.\n\n*\n\n\"Enter!\" said the voice behind the door. Leslie opened the door and stepped in front of the desk with Lieutenant Commander Luc Ormond behind it. \n\n\"Lieu...Sorry, Sir, Captain Jacob Leslie reporting as ordered, Sir.\" \n\nOrmond looked at his second-in-command, a tall bulky man who looked like a linebacker. The guy was big. Ormond looked down at his record-three miles in 17? A guy this big? He shook his head and looked at the date of the run-three weeks prior. Perhaps watches were slower in Israel, he thought. \n\n\"At ease, Captain. Congratulations on the promotion, by the way.\" Ormond stood up and offered his hand. \n\nLeslie shook it, saying \"Thank you, Sir,\" and then resumed his parade rest stance. \n\n\"Please, have a seat. Do you mind if I call you Jacob in private?\" he asked. \n\n\"No, Sir, but my friends usually call me Jack.\" Leslie did not ask to call him Luc, Ormond noticed. He approved that. Jack sat and the two officers eyed one another. \n\n\"Jack it is. You've come up quickly. I didn't make lieutenant until I was 28,\" Ormond said. (Navy lieutenant and Marine captain are equivalent ranks.)\n\n\"Yes, Sir, it's been a surprise. One school after another, but no real time in the fleet. I've never been in combat, Sir, and it weighs on me. It all has to mean something.\"\n\n\"Are you worried you'll fail? Or make a mistake?\" Ormond asked.\n\n\"Yes, very much so. Training pressure is one thing, but when the bullets are flying, when men are counting on me and a mission needs doing, I want to be competent.\" \n\n\"Yes, I understand.\" The commander turned a page in the record. \"I noticed you are not married, no children, 25 now. Family doesn't interest you?\"\n\nLeslie looked uncomfortable. \"I would like to have a family, Sir, I saw that as a big part of my future, but it hasn't worked out for me. I have no steady girl or any other girl in my life. Do you have a family, Sir?\" he asked.\n\n\"I do,\" said the commander, turning a picture around on the desk to show Leslie. \"My wife Julia, kids Rose and Luc Junior.\" \n\nLeslie felt nothing for a moment, but then...something like jealousy. \"Beautiful family, Sir. Luc is about 4?\"\n\n\"He is. Starting tee ball this spring, Julia expects.\"\n\n\"Wonderful.\" \n\nSilence followed. \n\n\"Probably best not to start a family quickly, you know,\" said the commander. \n\nLeslie smiled. \"I have no intention of a rash decision in that regard, Sir.\" \n\nOrmond nodded and closed the record. \"I will introduce you to the men today before our run, before chow. You should make a short statement. They will not know what it means that you're a Marine. Not sure I do.\"\n\n\"Perhaps we should not clear that one up. Let them discuss it and decide for themselves. Should I wear the Israeli SEAL insignia?\"\n\n\"Perhaps the mystery is better,\" Ormond said, smiling, worrying at Jack's age. Many of the men were close to it. In a small, special unit he thought it best there be discriminators between the leaders and the led.\n\n\"Aye, Sir,\" Jack said.\n\nThey talked then of plans, deadlines, meetings, character, programs, policies. Ormond wanted the introduction to the team to go well, thinking it needed to be subdued, businesslike, and constructive. Such a young man to be Two, and a Marine. The unit was unique: small with inflated ranks, due to the intent to use it in unacknowledged situations across borders that might not be enemy. He needed a Two who could take over immediately in a pinch. The senior enlisted was a veteran and very capable; he intended to watch their relationship keenly. Leslie and CPO Ortiz needed to work together well enough that they developed trust.\n\n*\n\nSeptember, 2001, Southern Syria\n\nLiving in the Syrian desert miles from the nearest community did not provide opportunities for childhood friendships to develop. Indeed, the Haddads were avoiding neighbors and hoped that no one had noticed that they had moved into the little house that Mr. Aglai had found. They had a field across the dirt track where Sarah could try to grow vegetables if they had to remain long, but now their real hope was escape. Jordan was not far, nor Israel. They had water, and Mr. Aglai came by every week or so with some groceries until they could get away. Adnan wondered if they should just leave and try to walk across the border, but Mr. Aglai said there were two communities and some extremists in the way. \n\nSarah was more active now that the baby had come, and she was caring for the other three most of the time. The baby suckled, cried occasionally, and slept. The heat was diminishing as summer passed away. But Rifat had no friends, just a few books he'd already read, and an under-pressured football. Soccer, as Sarah called it. So Adnan kicked with Rifat, now that he could not work because of the threat to Christians, and his wife and children were Christian.",
        "Adnan Haddad kicked the ball over the crest of the spur of the hill and left of Rifat, who scampered for it. He disappeared over the lip of the hill. Rifat was fast, and Adnan was sure he was smart. Suddenly the ball came over the lip, straight at Adnan, who played it off his chest and dribbled up to the little crest. Rifat was standing by two rocks. Adnan passed it to him. He stopped it with his chest and the ball settled into a hole between the two large rocks, where Adnan could not see it. Rifat ducked between the rocks, which almost made an arch above him; he was barely visible as he pulled the ball out of the hole, dropped it and kicked it to his father with his left leg, laughing.\n\nThe boy loved football. Someday Adnan would find a team for him-somewhere that Christian did not mean enemy. \n\n*\n\nCommander Ormond had the entire unit over to his home for a picnic three days before they were scheduled to fly to the Mediterranean. Leslie and all the members met Julia, his wife, and the two children. It was a group that liked to eat and beer went down like water. The SEALs were on their best behavior (keeping a careful watch on their language) and it was enjoyable. Leslie relished talking with Julia very much; it had been a year since he'd spoken to a woman near his own age. It was good for the sailors to see their officers in a completely different setting; only two of the enlisted men were married and their wives and children did not live near Little Creek, because the unit was new and they were shipping out quickly.\n\nThey were in the Mediterranean (not far from Jack's training grounds with Shayetet) a few days later, aboard the amphibious assault ship Bataan. From its flight deck they could be in Israel in five minutes, in Lebanon in four, in Jordan or Syria within 15. \n\nMost of the trepidation at Leslie's assignment to a SEAL unit ended on their second mission\n\nwhen they discovered an entrance to a basement. Leslie was in command in the house they were searching-Commander Ormond was with the overwatch element. Leslie refused to order a man into a hole-it was just too dangerous. So he ordered his unit to follow once he got down there. He thought his guys were going to object so he dropped immediately the eight feet into the basement, pistol in hand. It was just an empty room, but it could have been an ambush or desperate hiding place or a trap. On another mission, Bassett broke his leg so Leslie carried him a half mile to the extract. That run kicked his butt but he was not about to let them see he was done in. Most muttering about the Marine officer disappeared.\n\nVarmint said to him, after he climbed out of another hole, \"Are all Marines like you, Sir?\" \n\nLeslie said with a slight smile, \"No. Some are shorter.\"\n\nAfter eight months, the team had survived mission after mission with no friendly KIA. There had been casualties, one severe, but no deaths. There had been replacements, and like all military units the team carried on. With each replacement, Ormond scheduled rehearsals, classes, practices...to integrate the unit. He did not see it as fitting the new guy in, but as allowing the whole unit to assimilate. To him, each new guy made the whole team new.\n\nNine-Eleven stunned America. It gave proof to a threat that had been uncomfortably hidden from the public; apparently, the enemy was capable of planning, working in concert, and using civilization against itself. Suddenly, a fight that had been classified-not to prevent the enemy from knowing of it, but western civilization-was thrown into the light. Nine-Eleven brought a shadow war into stark relief. \n\nWithin a month America identified Bin Laden with the attacks, soon issued an ultimatum to the Taliban in Afghanistan, and prepared for an invasion. Operation Enduring Freedom began in Afghanistan, but SEAL Squad Unnumbered was given another mission-in southern Syria. It was a mission the world did not notice. When Lt. Commander Ormond was wounded, Leslie found himself in charge. \n\nThey were attempting to evacuate an old man who had contacted US authorities somehow from the border region, a huge desert, now threatened by a radical group; there were many reports of the executions of Christians and Jews in this strange group's hands. It was late afternoon, and they had good intelligence that there were no Syrian troops in the area. The Jordanians were looking the other way for this one, and the Israelis were fully informed and willing to help but for the politics of the situation.\n\nThings were satisfactory until Commander Ormond was shot, at which point he handed leadership to Jack. This shadowy radical group saw the helicopters and decided to take some shots, arriving in the area in some numbers. Two SEALs were wounded but mobile and headed to the LZ with the \"package\" and half the team; the rest blocked the bad guys near the top of a hill and there the commander went down. He lay wounded on the wrong side of the crest, exposed but for a rock between him and the bad guys. He was lucid but immobile; he contacted Leslie, who put out notice.\n\n\"Two, Six,\" Leslie heard over comm, \"I'm hit. Down. Under cover. Behind that big rock. Immobile. You're in charge.\"\n\nJack was up.\n\n\"Six is down. Six is down, on comm but down.\" Every man on the team heard it over helmet radio. It was Captain Leslie speaking, sounding as he always did-calm, each word distinct. \n\nThere was silence on the net. \"Is the package secure?\" Leslie asked, his voice deep, clear, unhurried.\n\nVarmint (whose name was actually Lansing) said, \"Aye, aye, package secure and at extraction point.\" \n\n\"Wounded?\" Leslie asked.\n\nVarmint responded, \"Mobile, both of them, neither serious, at extraction, and ready to go.\" \n\nLeslie paused for consideration, and then said, \"Take the first bird, Varmint, we can hold them from the hilltop until help arrives.\"\n\nThere was hesitance. \"All of us, Sir?\" Lansing asked. He did not want to flee an active firefight.\n\n\"Someone has to be first, and you guys are there. We'll get the second. Cobras are with our bus, out...two mikes.\" \n\n\"Roger,\" Varmint said unhappily, but someone had to get out of the battle first. It was apparent they were overwhelmed, but the Cobras should reverse that.\n\nThe Six was on the wrong side of the crest of this pile of rocks. They were only a quarter mile to extract, but there were bad guys east and they seemed to have plenty of ammunition. \n\n\"Charley, Butterfly, summit the hill. Cover fire asap. On my command unless you have a target. Roger?\"\n\n\"Aye, Two,\" came from Charley and Butterfly.\n\nLeslie went on: \"Montana can scoot with Hitter, west side of the hill. See if you can make the first bird. I'll accompany Ranger, getting Six. Ranger, secure Six, I cover. You with me, Ranger, Over?\"\n\n\"Aye, Sir, with you,\" said McAdam, known as Ranger, perhaps ten feet away.\n\n\"Charley, Butterfly, in position.\"\n\n\"Aye, Aye, Two.\"\n\n\"Ready.\" There was just a moment's hesitance, as was Leslie's custom before a command when he wanted all hands on cue. \"MOVE!\" Immediately Leslie and McAdam ran for Ormond, cresting the hill suddenly and without notice and finding the commander behind the rock. Leslie was firing where he thought the bad guys were, and then had no doubt so he was able to aim better. Covering fire came then from the peak of the hill to the south as Simpson and Plane fired past them or over their heads, trying to suppress those bad guys that were a threat to their commander. He assumed Montana and Hitter were heading to the LZ.\n\nOrmond had taken a round in the leg, and his knee was mush. He was in a lot of pain, but the blood was not spurting. Leslie and McAdam were behind the rock with him.\n\nRanger twisted a tourniquet above the knee, tied it, and did not look satisfied-but then he never was. McAdam was probably the strongest man in the unit, so he slung the much smaller Ormond over his back and said into his radio, \"Ready, Two!\" He was excited and it was evident in his tone, but he was calm and without panic. \n\n\"I hear choppers. Popping smoke.\" Leslie was up, throwing a red smoke canister. \"Ready to scoot,\" hesitation, \"GO!\" said Leslie. Leslie was up firing through the smoke where he'd last seen a flash, McAdam was up and running to the crest, and Plane and Simpson were putting out two rounds a second or more. Leslie and McAdam carrying Ormond were over the hill then, out of direct fire. \n\n\"We're over. Charley, Butterfly, if you have a target hit it in the next five seconds and then get your asses to the extract.\" Ranger with Six was still running down the hill toward the LZ.\n\n\"Aye, Sir,\" Leslie heard, followed by a flurry of shots and he knew they were running like hell for the bottom of the hill. \n\nLeslie had the Cobras on the radio. He popped another red smoke and threw it to the top of the hill. \n\n\"Bad guys just east of my smoke.\" \n\n\"Roger, I see your RED smoke.\" \n\n\"That's us. Hold 'em back, guys.\" \n\n\"Will do. Guys?\"\n\n\"Sorry. We're on the run down here. Good hunting, Ma'am.\"\n\nHe smiled at that as he heard the guns on the Cobras firing. Buuuuump. Buuuuuump. Buuuuuuuump.\n\nLeslie caught up to McAdam with about two hundred meters yet to the extract. He could see Charley and Butterfly keeping pace with them to his left. \n\n\"Ranger, give me your load, and you cover.\" \n\n\"Aye, Sir.\" MacAdam was flagging with the weight of weapons and equipment and the Commander. Ormond's eyes were tightly shut from the pain and loss of blood, but Leslie was sure he was conscious.\n\n\"Luc, it's Jack. I have you now.\"\n\n\"Jack, hurts like hell.\"\n\nBuuuuuuuump. Buuuuump. Buuuump.\n\nLeslie called Varmint. \"Varmint. How are our guys?\"\n\n\"Horse got one through the upper arm, and Crate got one through his side that isn't leaking much, Two.\" \n\nOrmond was listening in. \n\n\"Good, Roger,\" Leslie said. He was jogging alongside McAdam, carrying Ormond like a fireman. \n\n\"Boarding now,\" Varmint said. A second later an old Huey took off with half of his men, the old man, and especially his two wounded. Ortiz was at the extraction point; he never left until the last enlisted man. \n\n\"Montana and Hitter made the first bird,\" Ortiz said. A second Huey was putting down as they reached the field. The Cobras were still overhead but seemed out of targets. Leslie unloaded the commander into the side of the helicopter; Simpson (Charley) and Plane (Butterfly) were present and on board, McAdam was covered in perspiration from the run with the Six, and Ortiz and Leslie also dripping followed. The Huey was in the air, wing rotating, and the Americans pulled out of southern Syria.\n\nTwenty minutes later they were aboard the USS Bataan in a glassy sea. It was soon dark, and the moon lit their world. \n\n*\n\nChapter 3: 14 Years Later: May, 2015 A Good Day for a Ball Game\n\nIt was a Saturday morning in May, the sort of day that answered the question: why would anyone settle in Ohio? The sun was shining, there was a cool tinge to the air, and there were white clouds making a blue sky more interesting. Jack Leslie's right leg ached, reminding him of decisions made long ago-and that he had to get up. It ached every morning until he got it moving, but that first move was discouraging. Encouraging was the fact that his 13-year-old daughter was sitting on the end of the bed, ALMOST tickling his foot. He opened his eyes and looked at her, her index finger perhaps a half inch from the bottom of his right foot. \n\n\"I'm not touching you,\" she said. \n\n\"You know that drives me crazy,\" he said. \n\n\"Not touching your foot,\" she said.\n\n\"No, you're not,\" he responded. He hesitated and then moved. \n\nHe pulled the foot away and swiftly swivelled, grabbing Hattie, tickling her and tossing her onto his pillows as she shrieked with laughter. She was much more ticklish than he, and sometimes she just sought physical contact by this tickle game. They were both in pajamas.\n\nHattie was strikingly beautiful, with long, thick, black, wavy hair that was slightly unruly, black eyebrows, and startlingly blue eyes. She was small and thin-Jack wondered how she was able to pitch so fast with those thin arms. She looked Middle Eastern because she was, half, and people remarked on it at times. She was the fastest runner in her eighth grade class, at least in a sprint, and that included the guys. Jack had not seen her thrown out stealing in years-she'd actually stolen third and then home (on a throwback from the catcher to the pitcher) to win a game in the last inning last summer. \n\n\"So what's up, child?\" Jack asked. \n\n\"I'm practically in high school, Dad,\" she said, hinting. \n\nHe smiled. \"But not yet. Not yet.\" \n\nShe wanted Jack to tell her the full story of how he'd come to adopt her. She'd been bringing it up for months. For some reason he would not explain, he had always said he would tell her when she got to high school. She still had a month left of eighth grade, a summer of playing ball, and then he'd decide. He wanted her to know the story, but he had not arbitrarily picked high school as the time to do it-hoping she'd understand once she heard it. He wanted her to be strong emotionally, and the story was tough and emotional. Her grandparents knew, her Uncle Craig and Aunt Lisa knew, but no one else. She had always known that Jack had adopted her and that some terrible tragedy had befallen her birth family, but that was it. \n\nJack, on his part, wanted her to be old enough to hear the terrible story, and the situation to be right: he wanted his parents with them when he told her so she would not feel the terrible loss so devastatingly. She'd turn 14 in September and start at Merciful Saviour (with a u) in the fall. \n\n\"Merciful Saviour fired their softball coach after that letter to the editor showed up in the paper,\" she said, changing the subject. \n\n\"Did they? I hadn't heard that. I bet the coach refused to stop what they were doing. Sharon wouldn't fire a guy without giving him a chance. Maybe you can play there next year after all,\" Jack said. \n\nApparently the coach had his girls crowding the plate and putting an elbow in the strike zone, hoping to be struck by a pitch. One girl had her arm broken even though she had an elbow guard on-and the umpire called it a strike! The umpire had then written a long letter to the editor about all the unsafe things he'd seen coaches do over the years in various sports, and he'd named names, schools, and years. Many of the coaches had retired over the years, but some-like Merciful Saviour's-were still active. \n\nSharon Martin-the Merciful Saviour principal-was a friend of Jack's and he was not surprised she or the athletic director had fired the coach. Jack had applied to teach at Saviour when he returned from the war, but he'd been offered a job at the public school and he took the higher salary. He'd later become friends with Sharon Martin when he asked her to serve on his doctoral committee.\n\n\"Yeah, the ump who wrote it was suspended as an official-that was in the paper today,\" Hattie said. \n\nJack shook his head. Hattie rolled over and pulled his covers over her.\n\n\"Who's coaching the team the rest of the way?\" he asked.\n\n\"Uh, a Mrs. Rinker-a teacher at the school. The assistant coach isn't a teacher and can't get to all the games on time because of work. The paper just said Mrs. Rinker played in college and has coached younger girls over in Greenville.\"\n\n\"Well, we'll see if she comes back next year. Those parents are not real generous since the old coach won the state title a few years ago. I never heard he had girls doing that, though.\"\n\n\"I think he just started when he saw another team doing it, and the umps always gave the kid first base.\" \n\nJack shook his head. \"I guess this ump was different.\" \n\n\"Yeah.\"\n\n\"When's your game?\"\n\n\"Gotta be there at 11. Game's at noon.\"\n\n\"You pitching?\"\n\n\"Yup. Tanya says she hates it, so the coach said I'd pitch all games but a double header.\"\n\nJack shook his head. \"And you say your arm doesn't get sore?\"\n\n\"Nope. If it ever does, I'll tell you. But I'd rather pitch with it sore than not play or not be as good.\" \n\nJack said, \"I always had a sore arm after about sixth grade. Always. But I wasn't a pitcher.\"\n\nJack stood up, feeling that first painful stab in his right thigh, and then it disappeared as he hobbled to his dresser, right hip stiff. \n\n\"We better get dressed and get going. Meier's for breakfast?\" he asked.\n\n\"Yeah. That's almost a pre-game ritual on Saturdays, isn't it?\" she responded.\n\n\"Not too bad as long as you don't get greasy food.\"\n\n11 o'clock found him dropping her at Merciful Saviour High School field for her game. It was the only game of the year scheduled at a high school field and the girls were excited. Jack limped over to the stands behind the backstop as Hattie found her way through the fence to the real dugout. Merciful Saviour actually had dugouts that were dug into the ground so people could better see the field from behind them-most high schools had above ground dugouts that blocked any view from behind. The field itself was in great shape, but the outfield wall, the bleachers, and even the dugouts were very old and run down. \n\nHaving most of an hour, Jack walked around the athletic fields and the school because his gimpy leg would always prevent a jog. It was a constant battle to keep his weight down since he couldn't run. He rowed, he lifted, he bicycled, he swam, but he couldn't step up much or run because of pain and sudden loss of strength in his right leg. It would never be right. So he walked. By the time he finished the mile or so around the school facilities the game was about to begin. He saw Sharon Martin-fiftyish, grey-haired, thin, smart-sitting in the stands alone. She practically lived at her school. He joined her. \n\n\"Hello, Sharon. You've been in the paper a lot recently.\" \n\nShe shook her head, and he knew no matter how much he prodded she would say nothing material. \n\n\"Hello, Jack, how's the book selling?\"\n\n\"You mean Mary? Very well, my publisher says.\" Jack had three books still selling in stores-a history of racist literature which was actually his dissertation from 6 years earlier, and two novels. Mary's Mind was currently on most bestseller lists as a hardback. He'd quit his job as a teacher when his first novel, Caleb and the Colonel, came out. Sharon wondered if he quit because he didn't want to teach any more or because he knew some parents would object to the sex scenes he'd included in his novel. He said the story was based on real people and the sex scenes were included because they must have happened, although he admitted he made up most of the detail. \n\nBut she had to concede he seemed happy and was driving a new if not expensive car, so he must be doing alright.\n\nHe asked Sharon, \"You were quick to hire a new coach.\" \n\nSharon nodded. \"We didn't have time, and we needed someone for the next weeks. But Louisa is great, and I'd been hoping to get her involved. We'll probably keep her for next season too, if she wants it.\" \n\n\"Unless she tells them to stick their heads in front of strikes,\" Jack said, and they both smiled. \n\nSharon asked, \"Does it bother Hattie when she hits a batter?\"\n\n\"Yeah, very much. She cried the first time she hit two in a game. In a row, actually. I had to talk to her about how you handle that, so you don't get to hitting more as you lose confidence. I saw that a bunch in seventh grade. Some parents don't know how to handle it, either. They want to SEE remorse from the pitcher...\"\n\nSharon was nodding. \"Which leads to more hit batters...\" Hattie was on the pitching plate, preparing to throw the first pitch. \n\nSharon went on. \"Yeah, that ump that called that game actually called it off after four or five of our girls were hit with strikes. He had some guts. He said the opposing pitcher was in tears and had to be replaced.\"",
        "\"Its unsportsmanlike, I think,\" Jack said. \n\nHattie whirled her arm. Strike. \n\n\"She's fast,\" Sharon said.\n\n\"Yeah.\"\n\n\"You know,\" Sharon went on, \"she might be good enough to play varsity next year.\"\n\n\"We'll see. I'm not sure I want her around juniors and seniors,\" Jack said, as the batter popped up weakly to first. \n\nSharon nodded. \"Being good enough is not necessarily the most important factor.\"\n\nHattie struck out 9 in a six inning game. She had one hit, two walks, and three stolen bases. Her team won handily.\n\n*\n\nChapter 4: August, 2015 School Days\n\nThis is Hattie.\n\nIt was my first day of high school, my first day at Merciful Saviour with a u, as if we're British or colonials or something. I had to pay attention as the teacher got to the middle of the alphabet. \n\n\"Mike King,\" she called.\n\n\"Here. I'm called Mickey,\" a boy to the right said.\n\n\"Okay,\" responded the teacher, writing it down. She acted like she wanted to know us.\n\n\"Sarah Leslie.\"\n\n\"Here. People call me Hattie,\" I said.\n\n\"Got it. Hattie?\" she asked.\n\n\"From my middle name. Haddad,\" I said. \n\nMrs. Rinker looked up at that one-I think I have the only Arab middle name in Sky Grey. My birth father was Syrian, so I'm probably a mix of lots of things. She looked at me as though she wanted to remember my face, but it was the first day of school and she had a lot of faces to remember.\n\n\"Thomas Madden,\" she called out next.\n\n\"Here,\" said T.J. in the front. \n\nIt went on, almost forever. \n\nWe might be freshmen in high school, but some of us were still pretty small. A lot of the girls had shot up now that they were fourteen, taller than a lot of the guys. Unfortunately, I was still just an inch over five feet, thin, and my hair might be wavy but it could become a rat's nest for any provocation: wind, humidity, too much tossing. Dad wanted me to cut it short but I liked having it to my shoulders, anyway. Grandma liked the longer hair, too. She liked it when I put it in pony tails or braids when it hangs down my back. No matter how long the hair, I was still short.\n\nThe roll went on, and in every class, as the teachers assigned seats and tried to memorize names. It dominated the first day in every class in every school, probably. I knew most of the kids in this history class from past years. Grandma talked Dad into sending me to the Catholic schools, so here I was at Merciful Saviour High now. She didn't like that the public school had dropped cursive writing because keyboarding was dominant, so the choice was made before I was in first grade. I guess it seemed important to them way back then. I didn't mind, really, but it would have been nice to go to school with some of my other friends. I have lots of them at both schools, but I've always been with the Catholic kids. They were familiar. \n\nI noticed Mrs. Rinker was talking about our first assignment and I had to listen in. She was giving us a written assignment the first day of high school! She's a battle axe, I can tell. She's real thin-she said she runs for enjoyment, and that's always a bad sign. It's going to be a long year if this is any indication. \n\nInterview a parent, guardian, or grandparent and find out the circumstances of your family. Go back one generation at least. What significant events did your grandparents take part in, or your parents? What historical events of their lives were most memorable or important to them, even if they were not directly involved? Explain what those events were, why they were important to your mom or dad or grandma. Were they part of social trends or traditional, like did they join Hell's Angels in the '60s or dodge the draft or something else cool? \n\nI dreaded that; my family is dull. Dad and Grandma and Grandpa are from Sky Grey, and what is duller than a small town even if big things are happening out in the world? Dad writes or reads all the time-he doesn't even date. He did get shot in the war, so maybe I could ask about that. He never talks about it, and I know it's connected to my adoption, so maybe he'll tell me that story. Finally.\n\nIn some other classes I had to describe my summer vacation. In science I have to find a fossil by tomorrow. The kids were all panicky about that, but then I laughed and said they are all over any roadcut or bridge or even hills, just find some rocks and look carefully. In English she handed out To Kill a Mockingbird; we have to read some chapters by tomorrow. \n\nDad was home by supper as usual, and Grandma had it ready. Home in this case meant my grandparents' house; Dad and I live down the street on our own. Grandpa came in and sat at the head of the table and I sat across from Dad. We usually ate supper at Grandma and Grandpa's during the school year since I don't have a mom. \n\n\"How was your first day of high school, Hat?\" Dad asked. \n\n\"Okay, I guess. I have algebra first bell, an old guy named Mr. Milkin teaches it. He seems alright. Second bell is American History with Mrs. Rinker. She's the softball coach. She gave us homework already. I need to interview one of you about significant historical events in your lives, or anything. I have biology then, and I can't remember the lady's name...,\" I said.\n\nI went on through my day, and I noticed Dad and my grandparents giving each other looks. They had a secret or something they weren't letting me in on, like the time I got a new bike and it was hidden in the garage, or the time my cousin Mike was almost killed in a car wreck but then he finally was okay. They had something to tell me and they couldn't keep it secret. Maybe about THE ADOPTION. Finally. What's the big deal?\n\n\"What?\" I said. \"I know you have something to tell me.\"\n\nDad had that serious look on his face and I was suddenly scared. \n\n\"I think when we finish the roast beef, we should go sit in the living room. I promised you I'd tell you about your family, what little I know. It's also about how I adopted you. I think your teacher will approve your essay if you choose to write about it.\" \n\nI felt funny. \"Finally, you're going to tell me now? I don't know how to feel,\" I said, smiling.\n\nWe went into the living room and I sat between Dad and Grandma on the couch, and Grandpa sat in the overstuffed chair that doesn't go with the couch. Everyone was so serious all of a sudden, as if this terrible burden had been placed on them and now would be placed on me, too. \n\nDad said, \"I waited until now because it is not an easy story to tell or hear. It is a part of you, a legacy, a story I think you should tell your children. Not everyone has a story like this in their history. It's not a happy story, in itself, except that I became father to you.\" \n\nHe spoke on for thirty minutes. Shortly after it started, Grandpa came over and sat next to Grandma, and when I became upset and changed position onto Grandma's lap, he rubbed my back some. \n\nIt was as if my life meant something and had purposes I'd never realized. It involved Dad, my birthparents, and I found out I had three brothers once. It had Navy SEALs (I found out what those were), Islamic extremists, murder, courage, helicopters and probably dozens, hundreds, maybe thousands of people who risked their lives or worked together to save me. And some died doing it, or like Dad were crippled for the rest of their lives, or wounded. I cried, softly. Dad kissed my hair a few times between his sentences. I could not help the tears. Men were shot, helicopters flew to help me. My feet were in Dad's lap, and he would squeeze them sometimes. Nobody but Dad said anything. Grandma kissed my forehead some. \n\nDad finished. \n\nHow do you keep your poise when you discover your family was slaughtered saving your life? \n\nWe sat for a while in the dark living room. A few minutes later, Grandpa got up and went to get a pop. Dad picked me up and held me like I was a little kid, my arms around his neck. Grandma got up and got ready for bed. \n\nFinally, after I was calm and some time had passed, I asked Dad for advice on how to start, meaning my essay for class, and he said, with a story this heavy, \"you might want to lean into it. Slide into it. Find a humorous or amusing anecdote related to it, and then gradually explain\" the awesome tragedy of the experience. He called it \"emotional power.\"\n\nI wrote then, starting over several times, but finally I started like this:\n\nWe were at a church picnic two years ago, and some man was making fun of Dad for his limp-nothing really mean, but almost inappropriate. Dad smiled, and someone told the guy Dad was shot in the back of his right thigh in the war. I knew that much, a lot of people did-his leg has a lot of scarring and his limp is noticeable. The man said, \"In the back of the leg? Probably running away!\" I remember the man laughing and a few people feeling uncomfortable at the insinuation of cowardice, all of them sneaking looks at Dad.\n\nDad just laughed along and said, \"As a matter of fact, I was.\" I think Dad knew he was not a coward.\n\nHe spoke truly at the picnic, but not completely. He WAS running away because people were shooting at him-and I was in his arms.\n\n* \n\nChapter 5: Laeesha\n\nLabhaoise Rinker went by Louise or Louisa, the English equivalent of her Gaelic name. She had argued with her parents about their insistence she keep the Gaelic spelling, and now that she was many years a history teacher she had developed a fondness for the pronunciation discussion. She and most of the world pronounced it close to the Gaelic: Laeesha. Ignore the bh, they are decoration. To most people she was Louise, and so be it. She'd never been to Ireland, and Patrick Pearse was just an historical figure to her, not an inspiration. She didn't take sides in that long dispute.\n\nIt was the second day of school and she was early, as always, with a mass of things to do and so still in a hurry, her arms full of posters and papers and four textbooks stuffed in a bin. She climbed the stairs directly to her room, not stopping in the mailroom-she'd check in once she had these things in her room. She turned the corner in her hall and was brought up short. \n\nSitting on the floor outside her room, reading a book, was a huge man of perhaps 40. He looked up and saw her, smiled, and with a little difficulty got to his feet. He was even bigger than she'd thought. He must have been 6'3\", and he was not thin. Not fat, but a big man. \n\n\"Mrs. Rinker? May I help you with that?\" \n\n\"Yes, thank you.\" She handed him the bin, fumbled for her keys and unlocked her room. \n\n\"I'm Jack Leslie, Hattie's dad.\" He followed her in and put the bin on a student desk. \"I did stop in downstairs. Sharon and I go back a few years. She said I could wait up here.\" \n\n\"I didn't expect a parent conference so soon,\" she said, not sure if this was a good visit or not. \n\n\"I understand. I just need a minute of your time and I'll go. Last night, Hattie explained about her assignment in your class, to discover historical connections with her family's past.\"\n\nHe spoke slowly, quietly, not as if reticent but as if trying to parse his words so he used those most appropriate. \"Yes, I get some wonderful stories from the students every year I've done it.\" \n\n\"I think it's a great assignment. I took advantage of it and for the first time told her the story of how she came to America. I wanted to wait because it is violent and sad and overwhelming, but she's 14 and we were all together-her grandparents and me, I mean. She was upset by the story. I don't know if she's finished the essay yet. I know it's not due until tomorrow. If you could keep your eye on her, let me know if she's upset in class?\"\n\n\"Of course. You have me wanting to read her story very much, though with trepidation. I didn't mean to cause emotional distress.\"\n\nLeslie was shaking his head. \"No, it was my decision to tell her. She needed to be told. I had promised to tell her when she reached high school. It's one of those stories a family should never forget. I look forward to your reaction when you read it. If she writes it all.\" He paused. \"I'll be going,\" he finished.\n\nShe listened to him carefully. \"It's been nice meeting you, Mr. Leslie.\"\n\n\"Jack, please. Thank you again.\" \n\nHe turned and left, and she noticed a serious limp-probably aggravated by sitting on the floor waiting. She shook her head. She'd never had a dad ambush her before school worried about the emotions of his daughter.\n\nShe went to the mail room and collected twenty or thirty papers for the second day of school. She stopped in Mrs. Martin's office.\n\n\"Mrs. Martin, what can you tell me about Jack Leslie?\" \n\nSharon Martin was behind her desk, fiftyish, thin, sharp, and with a pleasant disposition that did not mean easy. \n\n\"You met? Good. He's a good one, Louise. Completely devoted to his daughter.\"\n\n\"What about her mother?\"\n\n\"Jack adopted her as an infant. He's never been married.\"\n\n\"Wow. A man adopting a girl...\"\n\n\"I don't know the whole story, I don't know anyone who does. He said he wanted to tell Hattie when she was older, and no one until then. As far as I know, no one knows. Probably her grandparents. Anyway, it goes back to his days in the war, I know.\"\n\n\"He limps, I saw.\"\n\n\"He was going to make a career in the Marines, but the wound ended that. He has a Ph.D. in history, by the way. You must have seen his books. Caleb and the Colonel? Mary's Mind? Jacob Leslie. That's all I know. Never married... Hint.\" Sharon was smiling.\n\nMrs. Rinker hesitated a moment. \"Come on, Sharon, you should know that the tall, handsome, degreed, gimpy, ex-Marine-with-a-heart-of-gold-for-his-adopted-daughter is hardly my type.\" \n\n\"Your standards may be a little high. Hattie is striking, isn't she?\" Sharon said.\n\n\"Yeah, she is. She'll find some boys here.\"\n\n\"She's a pitcher. Softball.\"\n\nLaeesha smiled and headed back to her room. Coaches always needed more pitchers.\n\nLaeesha, assuming it was Leslie, was pleased when her classroom phone rang about 4. \n\n\"Mrs. Rinker? Jack Leslie. I hope I'm not disturbing you.\"\n\n\"Not at all. Call me Louise. Or Laeesha, like my folks.\"\n\n\"Good. I had no idea how to pronounce Labhaoise. Gaelic I guess.\"\n\n\"Yeah, my parents wanted me to connect with the old country.\"\n\nShe went on. \"Anyway. I noticed nothing difficult with Hattie. She had red eyes this morning, as if she'd been crying or missed a lot of sleep. But she said nothing when I asked how the papers were coming along.\"\n\n\"I thought so. I guess that's better than weeping and all.\" \n\n\"Jack, what is it in her story?\" \n\n\"A massive tragedy. I'll let her tell you in the essay, if she has the guts. If not, I'll tell you myself next I see you. I'll let you go. Thanks, Labhaoise,\" he said, butchering her name at the end. He hung up.\n\nLeslie picked Hattie up after school and drove to his parents' home for supper. His parents were very close to Hattie. His mom loved having her around and mostly tolerated Jack. \n\n\"So, what do you think of Mrs. Rinker?\" he asked, trying to avoid his real concern. He didn't tell her he'd stopped in and met her.\n\n\"I like her. She seems tough, though. Kind of pretty, about your age. You ought to give her a call.\"\n\n\"Hattie,\" Leslie scolded, shaking his head, \"you know I don't date married women.\" \n\n\"She's not married, Dad. She said some people just called her Mrs. and it stuck.\" \n\nHe thought that changed things and smiled. \"So how's the essay, then?\" he asked right out. \n\n\"I finished it this morning. I couldn't sleep. It made me cry.\"\n\n\"Could I read it? It's up to you, though,\" Leslie asked.\n\nShe nodded. \"It's on the computer. I think it's pretty good. I'll change a few things probably before I turn it in.\" She hesitated and then asked, \"Do you know where they're buried?\" she asked.\n\nHe had not realized that she might want to see the graves. Of course she would-they were family. \"In Michigan. I can find out the exact cemetery if you want to see the graves.\" \n\nShe looked at him. \"I'd like that. They're kind of a part of our family, too. Maybe some weekend?\"\n\n\"We could go overnight or make it up there and back in one long day, if you'd like. Would you like Grandma and Grandpa to come? They might be interested.\" \n\n\"I would. It's like I want the whole world to know how good these people were, even though I can't remember them.\" \n\nJack nodded. \"You were only five weeks old, Hat. I don't think you could even roll over yet. I do understand you, though. They definitely are part of the family. They must have been extraordinarily loving of you.\"\n\nShe sent him her essay in an email that he read that evening. It was not long. Five pages, typed with normal spacing, but those pages recounted Leslie's words almost exactly, skipping details but recounting a tragic event and how it led to her adoption. He liked the start, and she'd used the Jewish saying \"save one life, save the world\" as its theme. The whole thing was far more touching than the usual essay. He wondered what the teacher would think. \n\nThe next day, Friday, his phone rang after the school day ended. \n\n\"Jack Leslie, please.\"\n\n\"This is Jack.\" \n\n\"Jack, the essay...Hattie's essay. Oh my God, Jack! I've never had such a story from a student. I don't see how anyone with a heart could read it without crying. I can't compare this to others. I mean, some of them are about their grandparents meeting Neil Armstrong in McDonald's or being able to drink 3.2 beer in the seventies. Jack...\" There was silence for a few seconds. \"It's just outstanding. Such a story. You were lucky, weren't you?\" \n\nHe nodded and agreed. \"Very. And more that they took me seriously when I pursued the adoption, recently crippled and with few real prospects.\"\n\n\"I am astounded, Jack. She's a very good writer,\" she said. \"She understands what makes the story touching.\" A few moments passed.\n\n\"Laeesha, would you like to meet us for some ice cream? At the Aramis parlor, in 15 minutes. I'm meeting Hattie there.\" \n\nThere was only a slight pause. \"Love to, see you there.\" \n\nHattie was sipping on a pineapple milk shake sitting in a booth at Aramis-just the third Aramis parlor-when Mrs. Rinker walked into the store. Instead of ordering at the bar, Mrs. Rinker found Hattie as if she'd known she were there and made a beeline to her table. \n\n\"Hattie, your father asked me to join you, if that's okay.\"\n\nHattie looked surprised. \"He asked you? ASKED you? Dad never asks women... Sure, have a seat. So Dad knows you?\"\n\nThey sat there for a minute in silence, not quite awkwardly, not quite easily. \n\n\"He talked to me yesterday. I read your essay,\" Mrs. Rinker said. \"It is one of the most moving stories I've ever heard from a student.\" \n\nHattie, eyes down for a moment, started to say something but stopped and then looked straight at her teacher, leading Laeesha to notice again the distinctive blue eyes under dark hair. This kid uses emotion and expression as well as any 14-year-old I've ever taught, she thought. She wondered if Hattie used that talent to manipulate her grandparents or father.\n\n\"Thank you, it was difficult for me to write. I only learned the story Wednesday talking to Dad,\" Hattie said. \n\n\"It has sacrifice and love and history. You used the scientific method to guide you, didn't you? The conclusion-your hope to find their graves and visit soon, to write the people hurt saving you-you write from the heart and that is such a rare thing in kids or adults. You could be a writer someday.\"\n\n\"I think I'd like to be. Dad writes for a living now.\" Hattie was smiling-looking over Laeesha's shoulder.\n\nShe heard Jack. \"Oh no, they're fomenting,\" Jack said. \"I can tell fomentation and this is definitely fomentation. Two women in cahoots.\"\n\nHattie smiled, \"At least it's not fermentation.\"\n\nJack said, \"Laeesha, it's good to see you. Scoot over, Scoot, I'll sit by you.\" \n\n\"Scoot?\" asked Louise.",
        "\"The kid is fast on the basepaths. One of her coaches nicknamed her Scoot years ago.\" \n\nAgain, Hattie had to force herself to look up. \n\nIt was a pleasant meeting. Jack learned a little of Laeesha's earlier life and decided he'd pronounce her name in the more Gaelic fashion-because it seemed to bring a smile to her and color to her cheeks. She was thin and brown-haired and attractive. A runner, she ran a dozen miles a week.\n\n\"My running days are over,\" Jack said, \"but my cycling days continue. My left leg can cover for my right. I'm not fast, but I can keep the cycle going when the one leg just doesn't have the endurance. Hills are a bear, though.\"\n\n\"The essay said you were a SEAL?\" she asked.\n\n\"I wasn't really. I was team leader, but not officially a SEAL. I attended the Israeli version of SEAL school, and they needed to find a spot for me then. I was second-in-command for seven months or so-I was only team leader a few days; the assigned leader was wounded and I was next in line.\" \n\n\"If you named her Sarah, why do you call her Hattie?\" she asked them both.\n\nJack replied after looking at Hattie, \"Her mother was named Sarah, and I called her that that long day. After what her family had done for her...I didn't want her to ever forget her roots. I wanted her to explain to everyone who she is, where she came from, and remember how much she was loved. And still is.\" His arm was around his daughter, and he hugged her gently.\n\nHattie watched her father and Mrs. Rinker discussing their lives, and she mused, why hasn't this happened before? Does something hold Dad back? She hoped it wasn't she-she liked the way he acted around her teacher-who he obviously treated differently. He was boyish and a little less confident and was interested in the smallest detail. She sipped her pineapple milk shake, watched her dad laugh, watched her teacher stir her root beer float. She liked Mrs. Rinker, who at this moment in this ice cream shop seemed a bit like a little girl grown up. \n\n*\n\nChapter 6: The Past in the Present\n\nTwo weeks later, Leslie was surprised to find an email message from Captain Luc Ormond, USN (Ret.) in his quieu. \n\nDear Jack,\n\nI was surprised and gratified to receive a letter from Sarah Haddad Leslie yesterday. I scanned it and attached it to this. She's quite some kid! I told Julia about her and how I'd been wounded during the first mission to help the Haddad family. I knew only the infant survived. I showed Julia the letter-she actually cried!\n\n'Hattie' you call her? I remember writing some essays supporting your candidacy for the adoption so many years ago. I hope the years have been happy. Have you found that wife yet? You always seem to skip a step: SEAL leader without SEAL school, family without the wife. \n\nI was able to finish my career shuffling papers at the Pentagon working for the Secretary of the Navy and later the Chief of Naval Operations. I retired two years ago and live near Washington, D.C. with Julia and Luc Junior. Rose is a student at Stanford majoring in whatever she feels like at the moment, and Luc is a senior in high school. \n\nI have a titanium knee now, and I set off alarms occasionally. I can't jog or run, but I always hated that anyway. I hope this finds your leg in as good shape as it can be. \n\nI was already off the Bataan when you completed the mission, so I didn't get a chance to thank you in person-or any of the team. You should know how I feel. \n\nSemper Fi, Marine. You were as much a SEAL as any of us. Regardless that Israeli shit.\n\nLuc\n\nJack smiled, clicked the attachment and a pdf opened. It was handwritten-he remembered the pains he'd taken to be sure Hattie used cursive. Her writing was round and clear.\n\nDear Captain Luc Ormond,\n\nI am Sarah Haddad Leslie (Hattie), adopted daughter of Captain Jacob Leslie, USMC (Ret.), who was your second in command during your missions in the fall of 2001. My father just told me the whole story of how I was evacuated from Syria and he included that your leg was seriously wounded during the effort to save my family. \n\nI want to thank you for your suffering and for taking the risk. I wonder if I can ever be worthy of such a sacrifice. I take some comfort in the fact that no one expected me to express gratitude and so this missive probably is a surprise. I am so lucky that our country has brave men and women who were willing to risk their lives for mine. \n\nI hope that you will tell your family the brave thing you did for me. Such things are hard for children to realize in their parents, as if there is another world in which parents existed. Tell them that at least one person knows what you did and will always be grateful.\n\nSincerely,\n\nHattie Leslie \n\nShe also included her email address and Leslie's. \n\nOver the next few days Jack received email messages from Billy Jackson, 'Horse,' and Damingo Warren, 'Crate,' who thanked Hattie and gave a few details of their lives since then; a few days after that he received a message from Juan Ortiz, still in the navy, who also sent a message to Hattie saying he caught her as her dad practically threw her to him after being shot. He told Hattie it was one of the most wonderful moments of his life, and he was proud he'd been on that mission. \n\n*\n\nHattie confronted her father the morning after his third acknowledged date with Laeesha. \n\n\"Are you carrying on an intrigue with my history teacher?\" she demanded facetiously, brushing her hair and checking her skirt outfit before church. Whenever Hattie read a novel, she tried to incorporate its expressions into her own speech. She was reading Anna Karenina since she finished Mockingbird and the intrigue line must have come from it. \n\n\"I am, if you mean am I dating her. This one made three times, plus the ice cream parlor. You who are not allowed to date due to your age and immaturity should not practice your indignation facility over such things.\" He smiled at her. He liked using a larger vocabulary with her.\n\n\"I am not indignant. I am...pleased. You like her?\" she asked, holding his arm as they headed out the door. It was a pleasant fall morning, leaves turning and some fallen.\n\n\"I do. Very much. But we are in no hurry...,\" he said.\n\n\"And why not? If anyone should be in a hurry, it's you and she. I mean, if you add your ages together don't you get like a gazillion or something? If I'm going to have a little brother you need to get t... \n\nBut Leslie was laughing. He patted her hand and said, \"Time for that, Syrian. There is time. It's a long way to us having a child. You'll be the first to know if our friendship turns to more, okay? But it takes time, and the journey is enjoyable, too.\"\n\n\"Ah, Dad...\"\n\n\"She's meeting us at church, by the way.\" \n\n\"Good. She usually goes to that Lutheran church. It's about time we got her some real religion.\" \n\n\"She teaches in a Catholic school. I'll ask her if that causes any mental reservation,\" Jack said.\n\n\"She says we have more ways to salvation. They think it's only by faith.\"\n\n\"Yeah, I think of it as we have more ways for guilt to develop.\"\n\n*\n\nIn a quiet corner of a cemetery in Dearborn, Michigan they found Sarah Gillespie Haddad, her husband Adnan Haddad, Joram Haddad, 3, Adnan Haddad, 5, and Rifat Haddad, 8. The markers were simple stones flat in the ground, with birthdates of the two adults and date of death for all. Jack realized the names must have been supplied by Mr. Aglai, who had not known Sarah's. Rifat had physically saved his sister unnamed, Jack noted. Rifat. \n\nGrandpa Leslie carried a bundle of roses. Hattie had a paper in her hand. She said, \"I'd like to say a prayer.\" She held Jack's hand in her right, and read from the paper, \"God in heaven, hear our prayer. We mourn for these five people who saved me. We miss their voices, we miss their hearts, we miss their lives. I feel their love. Keep them close and love them in heaven, for they were brave and selfless, and I am only here because of them. Amen.\" The adults added amen, and it was solemn.\n\nHattie divided the flowers among the five graves, two of which were very small. \n\nJack sent an email message to Laeesha describing the trip. His last line was, I wish I'd asked you to attend. \n\nLaeesha understood that it was a family trip-and building a family always took time. She noted that Jack Leslie was thinking of her that way, and smiled.\n\n*\n\nLaeesha invited Jack to her condominium for a casual dinner and a quiet evening on a Friday in early November. To this point, their dates had been collegial but not particularly intimate. He held her hand on the dates, but never at other times. He'd kissed her goodnight each time, but there had been no awkwardness of him wanting a nightcap and she avoiding it. The end of a date was the end. They did not \"hang out\" together, and Laeesha thought that was probably because he did not want her bonding with Hattie. (Perhaps more accurately, he did not want Hattie bonding with her.) They conversed daily either on the phone or over the internet. At first, they'd discussed Hattie, but then they discussed family and romances and why they were single. They'd been to a movie, a long dinner, a dinner and a movie, to a show in Dayton, and now she was inviting him into her home for the first time. She intended this one to be different.\n\nShe wore a scoop neck sweater (showing a little cleavage) and nice blue jeans, he khakis and a long-sleeve polo shirt and jacket. It was the first time she'd worn anything revealing or that he doubted she'd wear to school. She kissed him as she stood in the doorway, and he noticed a fragrance. Her hands were on his arms, squeezing, and then she followed him into the home. He could smell dinner. \n\n\"The food is all ready, but it can wait,\" she said from behind him. Her arms went about him then, around his waist, and she pulled herself into his back, her breasts pushed against him and her right cheek between his shoulder blades. Her right hand slipped down his front to the bulge in his pants, and caressed it lightly.\n\n\"I didn't think this would ever happen for me,\" she said softly.\n\nHis hands were behind him, on her hips, pulling her into him. He liked the feel of her hand on him, and he turned and bent to kiss her and she was against him, arms about his neck, and their lips were locked. His tongue was in her mouth, and she groaned, and he found her breasts with his hands. \n\nThe passion of years gripped them. He had been with few women-it had just not seemed appropriate, his life was full with work and study and especially Hattie, and no woman had seemed worth the trouble, worth the commitment. Sex was real for him, deep, emotional...it involved more than the acts, more than pleasure. He didn't want to have sex with every woman he saw. Indeed, he didn't want to have sex with any woman at all unless he knew her, liked her, and felt he could love her. Janice always came into his mind. Some wounds were forever. \n\nThere had been a fellow student in graduate school, but she was not serious about him, she did not feel the same way-sex to her was only physical, and maybe she'd fall in love with him someday. Hearing that rationalization, he looked at her as a representative for all intellectual women, and found them wanting. Wanting of full lives, of interconnectedness, of self-actualization. He did not want compartmentalization; he wanted synthesis, fullness, consilience. He wanted someone who loved because she was athletic and smart and active and bright and thoughtful. He wanted someone who could cry at a sappy movie and read War and Peace; he wanted someone who became excited at the start of a squeeze play and still liked a walk in the woods. He didn't want a great scholar, nor a great athlete, nor any other single superlative. He wanted a whole person. He was often disappointed.\n\nLabhaoise liked Jack and thought she was falling in love with him. For every factor Sharon had mentioned, Jack was a man she thought did not exist. He cried in a sad movie, he was completely his daughter's support, he was good-looking, mildly religious (if not Lutheran), and openly in love with his country. He was conservative except when he was liberal; he voted Democratic depending on who the Republican was. He was accomplished; he'd written several histories and novels. But she also saw a pain behind the laugh lines around his eyes. Pain. \n\nPerhaps he'd seen too much that night in Syria, or the other missions added to it. Too many sad things, too many dead men or women, too much evil that he could not fix or prevent. He was still a young man, with pain. One night she thought about it, a school night of course, and she wondered if he were not the perfect man, the man they all described when they said, THESE are the characteristics I want: good and decent and loving and fatherly and active and sexy and smart and humorous. His conscience...perhaps he'd done something he regretted? Or not done something? Or just wished some decisions had worked out differently? Maybe that was it. Laeesha wondered if there could be a decent man over 35 who did NOT need therapy. \n\nThey moved to her couch and sat, kissing, petting like teens... That realization hit them together, perhaps as it should, and they slowed. Their kisses continued but without the frantic quality, they became softer, slower, wetter, deeper. His hand remained on her right breast, but his left was on her arm. Her hand slowly caressed his member, but it was gentle, soft, tickling. He was rigid, big. \n\n\"I'm falling in love with you,\" he said between kisses, his lips against her cheek.\n\nShe was in no hurry, her cheek against his chest, thinking as she petted his dick. \"I'm no child, Jack,\" she said. \"I've held my love for a long time,\" she said, aping a line from a movie, knowing he'd know it. \n\n\"You are a sexy romantic, I'll say that,\" Jack said, smiling and squeezing her breast. \"I liked 'Open Range' also.\"\n\nThey kissed, and again. \n\nThey were naked, and his dick was hard, and she was little, he realized. She was a runner, and like most runners she was thin and he wondered if he was too big, sexually and just bodily. He engulfed her thinness and normal height. He did not want to hurt her, but she was there on the couch, spreading her legs, left foot on the floor. He looked at her eyes as he put his dick to her hole, and she said, \"Put it in, Jack. I want it in me. Please.\" Not frantic. Not begging despite the words. But as if there were years of longing for this moment, for someone like him, and now the time was here. He pushed, and the head of it was in and she inhaled, her right leg up on the back of the couch. \n\n\"Okay?\" he asked. \n\nHer eyes wide like her pussy, she nodded, gasped, \"Yes, Jack, push, I want it as much as I can...\" \n\nShe yelled out as he pushed it in her, and they were joined, he was buried in her. He leaned to her and kissed her mouth, felt her breasts against his chest, pulled out and rammed into her, and she said, \"YES!\"\n\nThey screwed then, slowly but deeply, and he delighted in her moans at each thrust, until with one rapid series he came in her and hoped she was on the pill. \n\nDinner was cold, the wine was good, and they knew they had crossed a bridge.\n\n*\n\n\"Intriguing,\" said Sarah when Leslie returned about midnight. \n\nJack shook his head. \"Go to bed, Syrian. I will tell you what I've said after every date: we had a good time, we are growing closer, and it will take time.\" \n\n\"Ah, Dad, jeez,\" she said. She kissed him on the cheek and went to bed. \n\nShe wanted him to find a woman to love, and Mrs. Rinker seemed perfect, for a Lutheran.\n\nJack poured himself a drink. It was October. He'd known Laeesha two months. He had yet to meet her family. But the evening had been wonderful, he had to admit, smiling and finishing his Rob Roy. He felt loved. He felt the asterisk, the Janice warning that women can't be trusted, but there was a difference: Laeesha was not Janice.\n\n*\n\n\"Hi, Mom,\" Laeesha said into her phone, \"how are you? How's Dad?\"\n\n\"Oh, we're much as we always are. He's around here someplace. Probably hiding out with a book, you know him.\"\n\nLaeesha laughed. She didn't remember her father ever without a book in hand, or a cigarette.\n\n\"I've got a new boyfriend, Mom.\" \n\n\"Oh, Eesha, are you serious? Who is he? How'd you meet? How long have you known him?\"\n\n\"He's father of one of my students. He's a writer, an historian, and he used to be a Marine officer.\"\n\n\"Divorced?\"\n\n\"No, he never married. He adopted his daughter.\" Her mother thought about that a few seconds.\n\n\"He adopted a child when he was single?\" her mother asked, surprised. \n\n\"Yeah, when she was an infant. She's 14 now.\" \n\nHer mother was silent for quite some time. \"This one's different, isn't he?\" She remembered a series of boyfriends, all serious at first, dropping by the wayside for one good reason after another. She was engaged once, but he refused to set a date and she left him, too. Then work took over-it was all she spoke of for years. They decided their attractive daughter was just not interested in men, nor they in her. They were wrong. \n\nSome men were interested. She said several of the men teachers hit on her-including some of the married ones-but they all seemed just academic. She was more interested in men who had done some things besides teach. She wanted something she had not found: a man like her father. She thought of that and smiled. Her little, shrinking, scatterbrained father, bent by age and disease, was who she saw in Jack Leslie: tall, big, hobbled by war, focused, with-it, but like her dad. She saw in him the kind of commitment her father had for her mother and her, complete faith in their goodness, replete hope for their lives, for a future, as Dad must have felt for the church at one time. Dad would have sacrificed himself to save an unknown child or mother or man. She remembered the mysterious scandal of his early years: Perhaps he had. \n\nJack had refused his own safety because a child he had never seen might be lost and in need. Might be. He ended up crippled in body but with a child to love. It was something her father would have done and never regretted. Laeesha decided they were more alike than appearances.\n\n\"Yes. Very. I've never felt this way. He has a depth and yet a presence I've never seen in men. Maybe some ministers I've met. But he's not the religious type.\"\n\n\"I want to meet him. What's his name?\"\n\n\"Jack Leslie. Jacob, actually.\" \n\n\"I know that name... Writer? Jacob Leslie? Wrote Mary's Mind? That guy?\"\n\n\"That's him, Mom.\"\n\n\"Can you ask him over for dinner some weekend? I know it's a drive...he could bring his daughter, too, if you'd like.\" \n\n\"I think that's a good idea. I haven't met his folks yet, either.\" \n\n\"Dad will love meeting a published author,\" her mother asked.\n\n\"If he's up to it. How is he?\"\n\n\"It won't be long, Dear. He needs oxygen a lot.\" \n\nLaeesha was quiet remembering good times-but too much smoke. Always, smoke. Smoking is a literary device for life. It foreshadows a bad end.\n\n*\n\n\"I have to tell you about my dad.\" \n\nJack thought that sounded ominous and very serious. Laeesha had told him almost nothing of her family, other than that she was an only child, and apparently they were the only devout Irish Lutherans in northern Ohio. \n\n\"He's older-76 now. Originally, before he met my mom, Dad was a Catholic priest, he was actually a priest when he was a young man. But he was one of those priests who scandalized the church-he was accused of improper conduct with a lady. He denied it, she denied it, but it was in the newspapers in Chicago, where he lived. This was back in the 1960s. His bishop didn't believe his story, and he was defrocked-I think by choice and disgust at his treatment. He went into a depression, left the church, drank, smoked, and finally moved to Ohio to get away from anyone he knew.",
        "\"When he met Mom, things changed. She convinced him to go to the Lutheran church figuring any church might help him fulfill a spiritual need. He found work. They married-Mom is ten years younger. Anyway, I came along a year later. I'm an only.\"\n\nShe was quiet. \"Mom and I have talked about him. We could talk about him in the room and he'd not notice he was the subject. Unless we directly address him, he'll take no note of our talk. He doesn't listen in. He'll read a book watching tv, and you can't be sure if he's attending to the one or the other or both at once. I think the church scandal hurt him permanently-he felt betrayed that neither the bishop nor anyone believed him. He withdrew from life, and Mom brought him partway back, but only partway.\"\n\nJack heard her, and wondered at scandals and gossip fifty years gone still affecting lives into more generations. \"What happened to the woman?\"\n\n\"I don't know. Many years ago I asked him, but he waved his hand and said they had no contact after the allegations... I've always felt he probably left the priesthood to save the woman, somehow. It was all very sad and mysterious. I'm sure there is more to the story but I doubt I find out. Dad has emphysema now, from the smoking. Still reads a lot, when breathing is not too labored. He's on oxygen and usually has a tank nearby.\" \n\n\"Sad, isn't it? How a life can be derailed and never put back on the track,\" Jack said. \"And then you find another track-maybe not going to the same place, but somewhere worthy. Frost's poem about the choice of road is often a matter of circumstances and events beyond our control.\"\n\nLaeesha nodded. \"A bullet to the leg, a gossipy scandal, a chance assignment to a particular teacher.\" Jack leaned over and kissed her. \n\n\"You think there's a story? With your dad.\" Jack asked Laeesha.\n\n\"Yeah, but I'm not sure it's important to get to the bottom of things. I mean, he's mostly happy. I think he loves Mom and wants nothing more than to end his life in her company. If you were to ask, that's what he'd say. But there is something in his eyes-it's been there as long as I can remember. Like he has a wish or a dream that he knows will not be fulfilled, or a secret or something left undone. A regret, perhaps. An unfinished life-but not a bad one. I think he's happy, in a settled, unexciting way.\"\n\n\"Does your mom ever talk about it? Does she see it, too?\" \n\n\"I have talked to her about it. She thinks he started off that way. She's not convinced it had to do with the scandal. Something from his time before her, part of the price of living in society, I think.\" \n\nJack was thoughtful for a while. He finally said, \"I wonder if it's even possible to go through life without neurosis.\"\n\n\"Sounds like the idea of a new novel,\" she said smiling.\n\n\"Give me time. You still haven't read any of my stuff.\"\n\n\"I'm afraid I'll say something critical and hurt your feelings.\" \n\n*\n\nChapter 7: Love and Death\n\nI'm Hattie writing again. \n\nWe went to Sandusky to meet Mrs. Rinker's mom and dad two...no, three weeks ago. They were little, especially compared to Dad. Her father was shrunken with emphysema, hunchbacked and seeming older even than his 76. His every breath was labored, but his eyes were bright as he shook my hand and said how do you do. Her mother was in good health. She was younger than her husband and waits on his every need. She held my hand in both of hers for a second, looked right in my eyes and said I was beautiful. I looked down for a second and had to make myself look up-Dad's talked to me about accepting compliments without going into something he calls my \"shy fog.\" \n\nI liked Mrs. Rinker's mom and dad, but her father was so frail. He used to be a Catholic priest, she told me on the drive, and for some reason he left the church and never went back. But he read books-there were novels everywhere and he gave me an old, old paperback of The Wall and a more recent one of Gone to Soldiers, and those got me on my World War II kick the last weeks or so. He talked to Dad about Caleb, Dad's novel based on a slave and slave owner relationship during the Civil War, and he found a copy of Mary's Mind on a shelf and asked Dad to sign it. So he did, with a nice inscription saying he hoped it brought some insight into anguish-I think he was referring to Mr. Rinker's loss of faith rather than his emphysema, and Mr. Rinker smiled when he read it. \n\nHe said, \"I appreciate all insight. Apparently I wear my emotions on my sleeve.\" \n\nDad and he sat and laughed, talked for about an hour with me listening or looking at the books on shelves and stacked about. Then Mr. Rinker said to pick out any I might like, if he'd already read it I could have it. I picked out those two and thought I was taking advantage of his generosity enough-but I would also have liked to take Kate Vaiden by a guy named Reynolds Price, and maybe two or three others. All the Light We Cannot See he had but hadn't read yet, he said. Mrs. Rinker the Actual and Mrs. Rinker the Faux came in and sat and we talked about softball and writing. \n\nMrs. Rinker the Faux said she had submitted my essay to a contest, and that it was a finalist. Being a finalist meant it was in the top ten essays, by their standards. She said the top three essayists would be invited to a dinner in Washington, D.C., and a government official would present an award-last year, the presenter was the Vice-President! The winner would get to read or summarize her or his essay. When she said this, Mrs. Rinker looked at me to see how I'd react. \n\n\"Well, it's good I won't win, then,\" I said. They all laughed.\n\nI liked the Rinkers, and I felt sorry for Mister. He was struggling for every breath. \n\nI read John Hersey and then I read John Hersey. I wondered why no one knew his name-it looks like he used to be quite popular. Rachel Apt is enough: any man capable of creating a character like Rachel Apt should live forever in literature. Strong, sensitive, tough, stalwart, smart, good, loving, kind, gentle-Rachel Apt was a character to make a novel, and she made The Wall. I couldn't wait for White Lotus-a long one, about an American woman in slavery, but I'd have to let it go until summer, probably-but The Child Buyer looked interesting since I'm adopted, anyway, or The War Lover, or A Single Pebble, and they weren't too long. Hersey must be a wonderful guy, maybe not married. He should wait for me.\n\nI checked the internet. Dead?? Hersey is dead??? I have no reason to live. Perhaps I should join a convent.\n\nThe Wall was powerfully good. If I were to become a novelist, like my teacher suggested, I'd like to write like John Hersey, or even some writer like Marge Piercy. Gone to Soldiers was so, so good! What was it about World War II?... I am looking for more novels about it. The War Lover, next.\n\nSo Dad met the Rinkers, I found two good books and a deceased author, and then Mrs. Rinker the Younger met my grandparents at Thanksgiving. There seemed less urgency in that, because no one seemed on the brink of death. Mrs. Rinker wore a sweater, the temperature being in the forties, and everyone sat around the table eating turkey and pumpkin pie-Grandma is a great cooker. Mostly Mrs. Rinker talked about funny things that had happened in her classes or softball games, Dad talked about another book he was working on-he actually said he had about ten books started but he didn't have but one mapped out yet-and I talked about starting to toss with Dad, working on a better changeup, and a little about school. Oh, and John Hersey.\n\nGrandpa really liked Mrs. Rinker-he held her hand when she said goodbye and he said something only they could hear. She smiled and blushed and said something back. It was a good day, and now everybody knew everybody's family. \n\nBut today, the day after Thanksgiving, I found out my essay was one of the three. Dad and I would be going to Washington D.C. in February. I dread it, because what if I win? \n\nAt least I'll miss a few days of school. \n\n*\n\n\"Hello?\" Laeesha said into her phone.\n\n\"Hi, Mrs. Rinker? This is Hattie.\"\n\n\"Hi, Hattie, is something wrong?\"\n\n\"No, not really. I just wanted to say that I think it's neat how my dad is going with you, now. I don't remember him ever doing that. I know he had a close girlfriend growing up but things didn't work out.\"\n\n\"I like your dad. Thanks for telling me.\"\n\n\"Yeah, well, have you noticed Derik? Across the room from me in your class?\"\n\nShe had noticed Derik paying inordinate attention to Hattie from afar.\n\n\"Yes, I've seen him looking at you. Is something wrong?\"\n\n\"I saw him outside my house Sunday. Down the street, not doing anything.\" \n\n\"Does that bother you?\" asked Laeesha. Derik seemed harmless; he probably had a crush and couldn't get up the nerve to talk to Hattie.\n\n\"No, he says hi at school, but once he came over to me in the hall and said hi and then he just stood there for a minute. So finally I said bye and went on.\"\n\n\"Do you think he likes you?\" Laeesha asked.\n\n\"Maybe, probably. Don't know.\"\n\n\"Do you like him?\" the teacher asked.\n\n\"Well, like is a strong word considering we haven't talked ever. He seems smart.\"\n\n\"Oh, he is. If he makes you uncomfortable, I can talk to him about not bothering you.\"\n\n\"No. I just wondered if you'd noticed anything.\" \n\n\"I'll tell you if I do. Are you reading any books?\"\n\nSo it went on for a bit, just talking. Laeesha was amused by her situation, enjoying the kid's forthrightness, realizing it signified a new attitude, a change in their relationship. When they finally hung up, Laeesha considered calling Jack but decided against it. \n\nIt happened again a week or so later, and then every few weeks.\n\n*\n\nJack asked Laeesha to a hike in mid-December when Merciful Saviour had a three day weekend because a water main burst, and she accepted. Hattie was going to spend the day and overnight with her grandparents, and Jack expected to be home about 11 after dinner at a place that would be comfortable for them in grubby clothes. They drove three and a quarter hours to Red River Gorge in eastern Kentucky, through the rough Nada Tunnel, and to a trail he knew. Laeesha was astounded at the wooded gorge, not that it compared to the Grand Canyon in size, but for its boreal beauty, its accessibility. \n\nThere were lots of trails, some pre-Columbian Indian, most modern American getaway, and climbing to a clifftop was a matter of minutes and relatively safe. Jack could make most of the trails in short bursts of effort. Sometimes climbing to the gorge clifftops required he stop or drag his right leg a bit, but it was doable. \n\nFrom the top, a wintry deciduous forest was clear to view. \n\nIt began to snow. Jack, carrying a backpack, pulled out a pad to sit upon and a backpacking stove, and made tea as they sat in a cave used by Indians centuries past and beer drinkers much more recently. They cuddled under a blanket (actually, a poncho liner from his days in the Marines), and kissed as the water boiled. The tea warmed them, and they did not have to talk. The snow was light but in the forest, with the longer views from the cliff, looking down a pathless draw, Laeesha exclaimed, \"Lovely.\" \n\n\"I was engaged once. In college,\" Jack said. \"Janice. We grew up together. Always, did everything together.\" \n\n\"What happened?\" \n\n\"We went to different schools, Miami for me, UC for her. She always insisted on us remaining virgins. Virgins together until marriage. We did things, but never full intercourse.\" \n\nLaeesha snuggled into him, letting him set a pace. He obviously wanted to tell her something, to explain something about himself, still important after almost two decades.\n\n\"We got a ring senior year of college, announced our engagement, but a few months later she said she'd fallen in love with someone else. That she'd had sex with him. She had sex with him the day after we got engaged.\"\n\nLaeesha just shook her head. \n\n\"She didn't tell me for some time, and then she gave back the ring. I noticed she was wearing another then. She said she loved me also, but I was her past and he was her future.\" He pulled the liner closer about them. \n\n\"Turned out she was pregnant. I went active with the Marines a short time later. After graduation.\"\n\nLaeesha waited, but he said no more. \n\nThey watched the snowfall for an hour until it stopped. They lunched on some cheese and turkey sandwiches Jack had made, and kissed some more. They packed up and walked some trails, found a natural arch, climbed Indian Stairway, watched another snowfall. It was a day. \n\nBut he didn't want to take her home. They found their car again, put the pack in, and Jack kissed her hard. \n\nLaeesha looked at him and coyly accused him, \"You arranged this just to have a night with me.\"\n\n\"Damn right, I did,\" Jack said. They drove to Stanton and checked into a motel, purchased amenities like toothbrushes, and found their room. \n\nThe walk had been cold, so they'd worn many layers, and their clothes made a big pile on the floor.\n\n\"You are just beautiful in your underwear,\" Jack said as he pulled Laeesha against him. His penis was hard and trapped between them.\n\n\"You seem eager to see me,\" she said, running her hands up and down his sides, then grasping his hardness as they kissed for some time. Then she knelt, ran her tongue around the head of his cock, tickled the hole with its dab of precum with the tip of her tongue, and then she worked the head of it into her mouth. He could feel her tongue going around and around the head, building his sensitivity until he did not think he could stand it, when she stopped and ran her lips up and down his shaft.\n\nShe kept on for some time, and felt him reaching his peak, but he picked her up then, carried her to the bed, and put his tongue in her slit. Up and down, side to side, he moved his tongue everywhere but her clitoris, until she was trembling, when he circled her clit with his tongue, brushing it, and she jerked slightly two and then three times.\n\nHe lifted himself, put his cock at her entrance, and pushed in slowly. Her legs widened, she said, \"Oh, Jack,\" and pulled him against her, his hardness fully within her. He was slowly but completely filling her, withdrawing, filling, for as long as he could stand it, but instead of going over the edge, he would stop, relax, wait-and once revived do it again. She began to wonder if it would go on all night, which seemed like a good idea to her. But no, Jack eventually said, \"I'm going to cum,\" and he rammed her hard, twice, three times, saying her name each time until he was cumming, and she felt it spurting in her, warm and wet and satisfying.\n\n*\n\nHattie said nothing about them spending the night together. Perhaps she had not noticed since she arrived home after Jack. She just kissed him hello when she got home that afternoon. They talked about other things. \n\n\"I went hiking with Laeesha yesterday, you know,\" Jack said. \"We are getting more serious.\" \n\n\"I hope you had a great time, Dad. I think some things are just too private and too important for me to be involved. It's between you and Mrs. Rinker. You're good people, and you told me before the journey is part of it so I'm glad you had a good day.\" \n\nSometimes his 14-year-old was more mature than most grown ups. \"Good. And I think I can safely say that I am getting to that state. She's really great, isn't she?\"\n\n\"I hope you fall in love. I could see her as my mom... Even if I did get a B first quarter,\" she laughed. \"It's been four months, you have never dated anyone that long since I've noticed.\"\n\n\"I know. It's new ground for me, too.\"\n\nThey celebrated Christmas at his parents' house, and Laeesha drove home to be with her folks. She called the day after Christmas to say that her dad was dying and in hospice. Two days later, unable to find enough energy to make his lungs work, his heart quit and he died. His long struggle for a full breath was finally ended.\n\nLaeesha called them a bit later to say she would stay to bury him on the last day of the year. \n\nJack and Hattie drove to Sandusky for the funeral, which was private because he'd been mostly a recluse with his long illness dominating so many years. A few friends came, invited by his wife, but only a handful. \n\nHattie and Laeesha stood by the open coffin for a while, talking quietly. Jack noticed that at one point they had their arms about each other. \n\nLater, Jack spoke quietly to Laeesha. \"What did Hattie have to say to you before?\" \n\nLaeesha responded, \"That even if you can't remember him, it's not easy to face the death of a parent.\" Jack shook his head. \n\nLaeesha spoke a few minutes later, as if she'd been considering something weighty, \"Hattie is...no longer my student. I mean, just my student. We'll finish out the school year. But it's a lot more than that. You know, she's been calling me sometimes to talk, sometimes for advice about a boy or situation.\"\n\nJack smiled, took her hand. \"Good. I'm serious about you, too.\"\n\n\"She said she's thinking of me more like a mom. She wanted to know if I could think of her as a daughter.\"\n\n\"Loving my child as a daughter is not a good enough reason to marry me,\" Jack said.\n\n\"I'm saying that if you are not serious, if we are not headed toward marriage, it would be best for her if we...\" she replied.\n\nJack looked at her seriously, so long a pause Laeesha wondered if she'd misunderstood the situation. \n\n\"I thought my feelings were obvious, Laeesha. I crossed that bridge a while back, I just needed to know that my love was returned. I love you, Laeesha.\" Laeesha kissed him on the cheek, requiring him to bend a bit and her to stand on her toes.\n\nMrs. Rinker the Older decided that she would remain in her old house as long as she was able. Laeesha offered to move her in with her, but she did not want to leave the community she knew so well. Unlike her husband, she had a card club that met weekly, she was a member of the church scheduling committee, and she had a few other activities. Laeesha wondered if she should find work near Sandusky to be closer to her mom, but her mother rejected that idea without a second's thought.\n\nMrs. Rinker the Older said, \"You finally fall in love with this great guy, whose daughter is great, too, and you want to force them to make a choice about you? I'd never forgive myself. If I'm not willing to give up playing cards to live with you, why are you thinking of leaving your new family to take care of an old bat like me?\"\n\nJack and Hattie drove home after the funeral. They had a long talk about Laeesha and her role in Hattie's life. Having a child can upset the best laid plans, Jack realized. It can also speed things up or slow things down.\n\nLaeesha followed on New Year's Day.\n\n* \n\nChapter 8: A Story to Hear\n\nThe Institute for Government and the Family was a non-controversial, nonpartisan group that supported study of government programs that affected families. It did not endorse politicians; it did not suggest legislation. It was simply a group that studied families and the influence government had or did not have on them. It financed studies and kept statistics on government programs, the lives of government families, and family structures in the nation over time. Its leadership changed biannually. Usually its director was a Democrat if a Republican had served the term previous, and vice versa. It held an essay contest yearly for students ages 13 to 15. The immediate families of the students with the three best essays were invited to Washington D.C. and the winning essay was read or summarized. The winner was not announced until the award dinner in mid-February.\n\nHattie asked Mrs. Rinker if she would attend with the family. She accepted. \"I'll take some personal days.\"\n\nHattie practiced reading her essay to Jack and Mrs. Rinker, just in case she won. She hoped she would not. She did not want to speak to a thousand people as had attended last year. The dinner was a fundraiser for the organization. This year's essay topic was: How has government affected your family? Jack wondered if they had expected the sort of essay that Hattie wrote. Perhaps it was just different enough, from such a unique angle, that Hattie was included in the finalists.",
        "Leslie wore a suit. His parents, paying their own way, were with them. Laeesha wore a rather elegant dress which did not reveal but certainly emphasized her slim lines and winter discretion, with a contrasting shawl and her brown hair about her shoulders. Leslie was struck by the classiness of her appearance, as if she were commonly seen attending expensive fundraisers. Hattie wore a long sleeve, dark blue winter dress that set off her eyes and highlighted her dark hair. Her grandmother pronounced her gorgeous and gave her a small pearl necklace to set off the blue. \n\nThey were to sit at a round table in the front of the room to the left of the podium-actually a stage-on top of which was a lectern with a microphone. Everyone was at round tables, with seating for perhaps six at each. The other two finalists were to their right, distinguished by their youth. Not many people paid $600 for a plate for a 15-year-old kid; finalists and families were free. \n\nHattie was not smiling. Jack held her hand as they entered, towering over her by more than a foot. Looking about the room he objectively adjudged her the most beautiful woman present-and realized he'd just considered her a woman instead of an adolescent. A whole new set of problems filled his imagination. They were joined at the table by a woman in the dress uniform of a foreign armed service-a woman Leslie recognized but could not place for a moment... He stood when he did.\n\n\"General, I am shocked.\" \n\n\"Captain,\" she said with her accent heavy, \"it has been a long time.\" Jack shook her hand and turned to his daughter, Laeesha, and parents. \n\n\"This is General Naftali Meier of the Israeli Defense Forces. I knew her when I was training in the Israeli SEAL school.\" He then introduced Laeesha, his parents, and \"...my daughter, Hattie.\" \n\nThere were handshakes all around and finally everyone sat. \n\n\"Miss Leslie,\" General Naftali Meier said, \"you are called Hattie?\"\n\n\"Yes, Ma'am.\" \n\nThey went on talking quite a bit as the noise about prevented others hearing, but sometimes Hattie smiled and even laughed, holding onto her papers in case she were named the winner. Laeesha, sitting next to the general, seemed to enjoy a long conversation with her also. Jack had never spoken socially to the General (a lieutenant colonel when he knew her), and he appreciated her gesture of assignment to his table and the effort she was making with Hattie. Hattie said later that she talked about how the Semites needed to stick together at this affair. \n\nThere were speeches about the fundraising and different officials spoke about the work of the institute. As dinner was served, a master of ceremonies stepped behind the lectern. \n\n\"Tonight we honor our essayists. Copies of the three finalists' essays will be distributed, one to each table...\" She went on for some time, first introducing Mischa Bretanski of California, asking the young girl to come up. \"Ms. Bretanski wrote of her family's difficulties immigrating and the help they received from government agencies from INS to Homeland Security and finally Health and Human Services. It is an extraordinary story, and we are honored to award her this plaque.\" She presented her with a plaque and pictures were taken. Her family stood and received a nice round of applause. Then the master recognized Jorge Villanos, whose family was aided by a state program in New Mexico when his father lost his job. She asked Jorge to come up, and presented him with a small plaque also. Again, the family stood and was applauded.\n\nBy this time the dishes were cleared and there would be a few minutes before dessert was served.\n\nThe master of ceremonies looked at Hattie from the lectern on the podium. \"Miss Leslie, if you and your family would come up.\" \n\nHattie looked at Jack, who was smiling. General Meier said, \"You won, Dear.\" Hattie looked down at the papers in her hands, and then forced her eyes up to her dad, who smiled, nodded, and stood. Her grandparents were up, smiling, moving around the table. Laeesha, as they'd agreed, went also, and Leslie noticed that Hattie's left hand was in Laeesha's right. They walked to the steps up the podium. Leslie stood behind Laeesha, his parents stood beside him, and the little girl who was slightly taller than the lectern stood just in front of her grandparents. A large box was nearby for her to stand on when it was time. \n\nThe master of ceremonies was not finished.\n\n\"Rarely is government influence on the family the military, at least in the essays submitted to us. Rarely does it involve military missions and wounded men, and Sarah's essay hit us like a thunderbolt. Oh, I'm sorry, she goes by Hattie, not Sarah. Usually our presenter is the head of a welfare agency, or Health and Human Services, or a state agency. This marks the first time a military department head will present an award for its positive influence on family. Sarah, HATTIE, if you would read your essay, please.\"\n\nThe master of ceremonies moved away, the box was placed behind the lectern, and Hattie released Laesha's hand and climbed up to look out at the crowd.\n\nShe smiled, looked down, and read.\n\n\"We were at a church picnic...\" and she read on. Reaching the end of the introduction, she said, \"...WAS running away... and I was in his arms.\" \n\nShe took a deep breath. She looked behind her at Jack and mouthed the words, I love you. He nodded back and smiled. Laeesha saw and squeezed his hand.\n\nHattie's voice and words took Leslie back to that time-to the last day and night he walked without a limp, to first meeting his little girl, to the end of his military career, and to the start of his family.\n\n*\n\nChapter 9: October, 2001 Finding Hattie\n\n\"Captain Leslie, CIC. Captain Leslie, report to CIC.\" \n\nIn his quarters, Leslie realized how exhausted he was. He had written his report, checked on the wounded, and finally showered. Commander Ormond was already transported from the Bataan for treatment. But Leslie had put off sleep for his chores, and now he had another. He hoped his team was asleep. He dressed and headed to the Combat Information Center. He was actually stopped short when the Captain of the Bataan, a black captain (all ship commanders are called captain, but Bataan's was also a ranking captain) named Miller, called him into the conference room hard by. The old man they had extracted just hours before was seated at the table, drinking coffee. There was a map on the table, with corresponding satellite photos, and an X was marked on a tiny building in the middle of nowhere. The man stood when Leslie arrived.\n\n\"I want to thank you, Captain,\" the old man said with an accent. He spoke impeccable English, which the commander had remarked on during the first contact. \n\n\"You're welcome, Sir,\" Leslie replied, shaking the man's hand.\n\nCaptain Miller spoke. \"Please, everyone sit. Mr. Aglai has notified us that an American woman and her children are in some danger. She is married to a Syrian engineer. A local, radical extremist group has threatened and indeed murdered most Christians and all Americans that we know of in their areas.\" \n\nLeslie looked up at that. Was that what all this was about? He'd assumed the old guy was a spy or informant, or nuclear scientist or maybe someone important like Asad's personal trainer. Leslie saw where this was leading. \n\nCaptain Miller signalled his messman, who poured Leslie a cup of coffee. Leslie signalled no cream or sugar and drank it black this time. \n\n\"A mission to extract them is scheduled for tomorrow night. There was too much today to risk another daylight mission just five miles away. We are gathering intelligence, photos. A drone has actually been sent to the gps coordinates and should arrive within the next few minutes. Another will go in daylight.\" \n\n\"Sir,\" said Leslie, \"my team needs sleep tonight. I am down to six enlisted and myself.\"\n\nCaptain Miller was quiet, drumming on the side of his coffee cup with his fingers. His fingers were long and lighter skinned, his nails clean. The cup was full, but he didn't sip it much.\n\nLeslie knew he was tired: only when tired did he focus on personal details like those. \n\nCaptain Miller sounded sincere as he said, \"And I want you asleep in a few minutes, Mr. Leslie. But I wanted you notified as soon as we knew the mission was approved.\" \n\n\"I'll see you here tomorrow at 10 hundred hours, Sir?\"\n\n\"I expect around 1600 tomorrow afternoon, Jack. We'll have more for you then. Have your guys ready for anytime after that. You need the sleep tonight, check your men, check your equipment; tomorrow night might be very long, and we need you at your best. Probably a helo insert in a field fifty yards from the target house, rappelling, helo pickup, pull everyone out alive. If they are. Back on the birds asap, then out. Four kids, two adults. If we're not too late.\" \n\nLeslie stood. \"I'm going to notify Ortiz and get to sleep.\" \n\nTen minutes later, he was asleep in his rack. Ortiz was pissed as hell that they'd have another mission so soon, but he was always pissed as hell that every mission did not have ten days' preparation time.\n\n*\n\nThe next afternoon the drone identified a car approaching the house, but then the platform developed flight difficulties and crashed as the remote pilot attempted to retrieve it. \n\n\"We doubt anyone's alive, Jack,\" Captain Miller said. \"As soon as it's dark, we'll send you in. Any sign of anyone but the family on site, and the mission is off.\" \n\nThe pilot found the house using gps. This one was far from the nearest village-it was not their home but where the Haddads had hoped to hide from the radicals. It was two rooms, with an outhouse up a short path. There was a well. A quick sweep was made using heat detection, but there was no sign of a watchman or any person.\n\nMr. Aglai said that they had hoped to hide there, but some people had chanced by a few days before and then there had been a man watching them from some distance away. They thought they were being watched even at night. \n\nAglai had become their contact with the world, visiting once a week and bringing them things they needed. The infant was born in that house a month ago, delivered by her father, a month after they arrived. When Adnan notified him two days ago that they were being watched, he'd contacted the American embassy in Amman using his satellite phone-he'd been looking for a way to move the Haddads across the border. The embassy researched him and discovered he had taught at several US universities-and that his former student was indeed married to the former Sarah Gillespie of Dearborn, Michigan. \n\nSarah Haddad was a graduate of Eastern Michigan University with a bachelor's degree in American history, and her husband had a master's degree in hydraulic engineering from the nearby University of Michigan. He built water supply and removal systems in the desert countryside of his home country. Sarah raised her kids, who were Christian and practiced until the local radicals squelched the practicing part. Now Mr. Aglai feared for their lives. Indeed, he thought it was probably too late.\n\nLeslie had asked him why he was so involved with this family. He said, \"I convinced Adnan Haddad to move back here to work, and to bring his family. I convinced him he should respect his homeland, help to make it better. He worked here a few years and then this...\" He was furious at the assault on moderate Islam. Radical Islam's violent intransigence had a way of drowning the moderate beliefs of the majority. \n\nThe team helicoptered to the little field where the Haddads intended to grow vegetables, across the dirt road from the tiny house. It was dark. They rappelled in after hovering over several other fields first, and the chopper then hovered over another two miles away after the team was gone. Four of the team including Ortiz kept watch at various points about the house, especially for the suspected watchman, as Leslie and Ranger entered the home. They knocked, but there was no answer. Leslie pushed the door open, which it did without hindrance. Unlocked? \n\n\"Sarah? Sarah Haddad? US Navy!\" He peeked in, saw nothing, looked around behind the door and found nothing. It was the cooking/eating/living room of the small house. The other room was to the rear, through a doorway with no door. He saw feet, unmoving, sticking out the doorway, and feared the worst. \n\nHis fears were quickly confirmed. He noted the situation on the comm.\n\n\"Found Sarah. Dead. Bullet to the temple. Husband beside her. Also dead, one shot temple.\" \n\n\"Stay in your general areas and look for the kids,\" Leslie said calmly. \n\nHe heard no comments, but he knew what they would be anyway. The three boys were found elsewhere, all shot. One, a seven- or eight-year old, was shot in the back farthest from the house on the far side of a small hill above the outhouse. The four-year-old and three-year-old were found in the outhouse, shot in the forehead once each. \n\n\"Anyone see the infant?\"\n\n\"No, Six,\" he heard over and over. \n\n\"Maybe they took her,\" said Ortiz.\n\n\"Could be, Two,\" Leslie said. \"But I am NOT going to leave an American kid out here to die, if we can find her. I'm going to go through that house. I'm calling to delay the choppers. A few minutes, anyway.\" \n\n\"Roger,\" he heard from several. \n\n\"Keep your eyes open for bad guys. Or a baby. Listen for her.\" \n\nLeslie pulled up flooring, flipped the mattress, searched the floor of the closet, the walls, the ceiling. He found some wooden toys, a flat soccer ball, some books, clothes, and utensils. There was no child in that house alive. He ran around the house, climbed to the roof; he went to the outhouse, past the two little ones placed outside by Varmint, put a beam into the pit-no child. He ran over the top of the hill to the spot the last boy had died, the oldest. His night vision goggles showed no one.\n\nHe could hear the chopper coming. \n\n\"Leave the bodies, Six?\" asked Ortiz. \n\n\"No, we're not in contact. Four of these are Americans... And I think he should be buried with his family. Load them up. I want to think.\" He followed the others with the bodies heading to the north field.\n\nLeslie imagined the couple, realizing someone had come for them, to kill them as Christian or American or just infidel. Sarah would have realized there was little hope, their hideout found, her children in danger. She sent the two youngest to the hide, perhaps straight to the outhouse which may have been a rash mistake, hoping no one would look, or she put them out the back window saying, \"Run, hide, don't let them get you. Run.\" And the two youngest boys naively hid in the outhouse. But the older boy, eight, what if... The chopper landed.\n\nSEAL Squad Unnumbered, officially SEAL Squad Detached, loaded five bodies on that Chinook. Ortiz counted all on board when the Six arrived, shaking his head and wondering at the loss of an infant girl. As Leslie stepped to enter, a thought occurred to him, about that eight-year-old dying on the other side of the hill... \n\nBut all hell broke loose and SEAL Squad Unnumbered, secured in a Chinook, bolted-without its Marine.\n\n*\n\nAn RPG missed the rear rotor of the Chinook by perhaps a foot-but that foot turned into a lot of yards before it exploded. Small arms fire opened up from across the field north of the house. \n\nLeslie yelled, \"GO GO GO!\" realizing he was relinquishing his seat on board-he was still a step from entering. He spoke quickly on comm. \"Ortiz, I have the sat phone. I think I know where the girl is, I think I know. I'll contact by phone.\" \n\nOrtiz was beside himself. \"We can't leave you, not gonna leave you,\" he yelled, and screamed at the pilot to put it back on the deck but the helicopter's machine guns had opened up as the chopper translated and there was all sorts of incoming-the rule of thumb is get the damn plane away, so the pilot did. In seconds the helicopter was relatively safe, but the pilot was then beside himself that he had left the SEAL Squad commander on the ground. Some standby Cobra gunships were flying in Jordan and would be there in seconds, but there was no telling what Leslie was facing. \n\nOrtiz remembered Leslie's last statement: He was going for that child.\n\n\"Keep all fire north of the house. The bad guys are there. We have a friendly on the ground and lost to the south. I hope,\" Ortiz said, thinking first of the loneliness of the abandoned castaway and then of the loneliness of a lost child. Unlike Commander Ormond, Ortiz had no family to speak of. His mother was somewhere, but they had not talked in years. Yet he knew the hold the idea of a lost child had on men and women, especially good men and women, and he understood the Captain's instinctive action. Perhaps, he thought, it was a thoughtful act. \n\nThe Cobra was mincing the ground north of the house, and rifle fire ended. It was 1 am local, and Ortiz would have an angry ship's captain to confront in a few minutes. \n\nGood luck, Jack. Find her, he thought. \n\n*\n\n\"What the hell do you mean, Chief? You left him behind? I'm listening in to chatter and he DIDN'T BOARD???\"\n\nOrtiz, at attention in front of the captain, away from the helicopter and the five bodies on the deck, knew a rhetorical question when he heard it. He had a college degree in English, picked up over the years at different naval stations. But he'd known before that, having been in the navy and not stupid. He said nothing.\n\n\"Why?\" the captain, a NAVY captain, said. That was not rhetorical. Ortiz knew navy captains wanted to be navy admirals and were so close they could taste it. And this navy captain had made it clear over the months that the Marine captain was one jarhead he liked. Probably the only one.\n\n\"Sir, as he was getting near, Captain Leslie said that he thought he knew where they would have hidden the child. Then an RPG went by and we took off. He has the sat phone, so he should be able to contact us. When he's safe.\" Ortiz realized that sounded ineffectual. \n\nIf he's ever safe, Ortiz thought. \n\n\"If he's ever safe,\" the captain said. \n\n\"Sir, the mission continues. I'd like to get the team ready for another extract-tomorrow night? The area seems saturated for a day extract.\" \n\nCaptain Miller said, \"So ordered. I'll let 'em know we left him behind and we want to go back.\" He meant he'd report to his boss, who'd report to his boss, and she to hers, and he to a man in the White House.\n\n*\n\nLeslie assumed the jihadi fighters did not realize that one American had been left behind. He ran to the brush and crawled up the hill behind the house as a Cobra occupied the survival wishes of the enemy. After ten minutes all was silent, helicopters gone, fighters dead or withdrawn or waiting, hiding, wondering if they were safe.\n\nHe knew there was a drone above, probably following his heat signature, but that would end soon.\n\nHe passed the outhouse, followed the contours of the hill, hiding in a depression that led farther up the hill, up the hill, and he crested it. He went along it and down to the spot the eight-year-old boy had died, shot in the back and heading directly away from the house. \n\nHe searched in the dark, careful to disturb nothing. He used his night vision goggles but there was nothing. The heat detection should have picked up a living child...unless she was covered by rock. He searched, looked, but it was mainly by feel, reaching into depressions, pulling bushes apart, but finding nothing. He stopped and thought. The boy probably had played hide-and-seek on this hill and knew the place he would put his sister. Jack was there for an hour, becoming frantic in searching every nook and cranny-when he heard her. \n\nHis first thought was not that she was found but that they were found. She would give away their position to any fighters on this side of the house. But he stood, risking his full height, and followed the weak cry to a depression between two rocks-a place a small boy could hide from anyone until hard by. Leslie saw the depression as a shadow, saw a movement among shadow, and risking his hand touched a small child. ",
        "He had very little experience with children. He went onto his knees and elbows, rifle slung around back, and scooped the child into his hands. She was tiny, only five weeks old, he remembered, and she was whimpering. She had a small strip of cloth in her mouth-to pacify? To gag? To prevent noise? He removed it. She was wrapped around with a light towel and a small blanket-not swaddled tightly but wrapped with a hood effect and it was tucked to keep her from getting out. The night was not cold-perhaps mid-fifties, and Jack thought she was in no danger from that, although maybe uncomfortable.\n\nHe knew she needed food or water to keep quiet-but he doubted she was weaned, or if it was even possible to be weaned so young, she only suckled at the breast, probably. He needed to find food for her, or something, so that he could keep her alive until rescue could be arranged. He needed food, milk, for a child, or they would risk the danger of her cries. The only place he could get some was in the house. Perhaps canned milk, or formula for water, or what else did he have? What was possible? He was a Marine in southern Syria, with dedicated jihadists around. What does a Marine feed an infant? \n\nHe had an MRE, extra instant coffee and creamer powder, sugar-he always had extra coffee and creamer packets. \n\nHe looked around. The hiding place was well situated. He softly placed her back in her hollow, made sure the cloths covered her, and softly over her face, and he crawled back, back up over the hill, down to the house, quiet and dark. His knees were painful from the stones he crawled on, but there was nothing for it. He avoided his light, saved his night vision goggles (he had no more batteries). He moved slowly, thanking the instructors of Shayetet for their insistence on patience in stealth. There was movement to the left of the house, and then a flashlight, and he backed out slowly. He heard voices. There would be no resupply from the house. He was quiet and low, and slowly found his way back over the hill.\n\nHe could not find her. He was frantic for a moment-he felt for her. No rock seemed right, and then one did but was not, and another. He panicked and forced himself to be calm. Oh my God I lost her, he thought. He heard sound of some sort, and went left. He was quiet and smooth and his hearing was paramount, and he heard noise. It must be her. He found a depression between two rocks. He heard cooing, and breath, and he touched a warm wrapped child. Again on elbows, he lifted her in his rough, calloused hands. He held her to his ceramic-plated, kevlar vest. Of course he could not feel her nor she him through all that. But he held her as if they could. He moved them farther from the house, finally between rocks that provided cover and shade when the sun would come up, and he hoped the bad guys did not happen by.\n\nSitting among the rocks on a cloudy night, he opened his vest and jacket and held the child against his tee shirt so she could feel his warmth, perhaps feel his heartbeat. He could feel hers. He listened for sounds of people and held the child, who mostly slept. She was warm and he felt her. He did.\n\n*\n\nSEALs were usually secretive, but the disappointment Mr. Aglai felt when he was told of the deaths of the Haddad family was wrenching and soon the whole flight deck knew of the mission and its failure. He latched onto the hope for the infant, who he'd only seen once two weeks before. He did not know her name. His heart broken, his hope focused, he spoke to people on the flight deck where he'd been awaiting the return of the Haddads. Seeing the bodies, sailors and the chaplain saw also his anguish, heard him speak. He felt the guilt of one who had coaxed a family to its demise. Word got around quickly: The SEAL Squad leader stayed behind to search for an infant. For once, the morbid attitudes of military men and women were subsumed as all came to hope that Baby Haddad survived, and that the lost Marine found her. \n\nIt was three hours before Leslie called Captain Miller.\n\n\"Captain, SEAL Squad Detached Six. I found the package, alive and well. We are evading.\" \n\nMiller knew a morale motivator when he heard it. He turned to those nearby. \"He found her alive and well.\"\n\nSuddenly there was cheering and clapping. There was smiling on the flight deck, middle of the night, somewhere in the eastern Med. The mission suddenly overwhelmed all other purposes. Sailors going through the motions were more aware of their tasks, more careful loading those rounds, checking that Jesus nut, adjusting this cannon. Everyone assumed an extraction would be attempted next night. \n\nMiller allowed himself a smile. Jack and a baby, lost in the desert. Now he had to figure a way to save their asses.\n\n*\n\nExtract was finally arranged for the next night, a klick away from the house, in darkness. \n\nShe'd had two dirty diapers which he'd mostly ignored, then rubbed the old cloth on the rocks under scrub and moved away. She was developing a rash, so he wet a strip of his tee shirt with water and wiped her, then let her bottom naked to dry. He thought, Sarah, you have to hang on just a few hours. \n\nEvery sound he feared an enemy. Every few hours he moved farther up the hill, looking for shade, getting away from the house, moving slowly to the extract. But they were still hundreds of meters from the top of the hill.\n\nHe did not drink much, trying to save one of his two canteens-one liter-for her drinking, her cleansing. He gave up on the whole canteen for her because she drank so little and he needed so much, but he kept some for her. He poured water on another strip of his tee shirt as the strip that had been in her mouth was too small, and let her suck on that, did it quite a while, then made a paste of the coffee creamer, and dipped the shirt into the creamer, wrapped it around his finger. She sucked on that some with his finger inside. He felt no teeth in her gums. When do kids get teeth, he wondered?\n\nHe surveyed the area as best he could, but he had a child to defend, to clean, to care for, and how much can one learn at Shayetet? Perhaps a course in infant care in the field? He smiled. The mission was a child. They were prone in the shade of some rocks, and it was hot. The sun beat so much shade was only slightly better, but October was not summer and it was bearable.\n\nHe checked his map. The terrain was downhill after cresting the hill to the south, then a straight run to the LZ. The best thing about operations in Syria was the plethora of landing zones. He waited out the day, trying to please the child, playing, tickling, giving her water and creamer paste... He rubbed his nose in her tummy beside her shrivelling umbilical cord. He made little sounds he had never made before, mostly under his breath. He sought her smile, which she gave occasionally. He feared her cry as a danger to them both. He considered his two drugs... NO. He would not drug her. He'd die fighting for her, but he would not kill her by an accidental overdose. By the late afternoon, he would not go more than ten feet from the child. \n\nHe wondered at his feelings. It mattered that she was American for the mission to be approved, but it was not his motivation. If she were Palestinian or Tutsi he'd have sent that helicopter away-what mattered to him was that she was threatened, she was innocent, and only he could save her. It was an awesome responsibility, an awesome opportunity, and Leslie wanted the end of the story to be happy despite its horribly tragic inception. \n\nSarah-he called her Sarah for her mom. \"They died for you, Little One,\" he whispered. \"Your mom and dad, your big brothers, they all died for you. I will get you out of here if I live. They deserve your survival.\" \n\nFour hours before extract Leslie notified Captain Miller he was moving to observe the extract LZ just as the sun went below the horizon. The Captain said, \"SEAL Squad Unnumbered will provide security at extract.\" Leslie smiled. Ortiz would be there, and he felt better. He wondered what the team thought of him, so recently their commander and then leaving them. He looked up for a drone but saw none-perhaps it was too high, or too small, or not there.\n\nHe carried her in his left hand, her face down, barely reaching his elbow with her curled legs. He had access to his pistol, his M4 rifle, his bayonet, and the sat phone with his right. He had been frugal in use of the phone and its batteries; he didn't know how long the batteries would last. He walked more slowly than usual, sometimes carrying the child in both hands. The walk was not long to the top of the hill, which should afford a view of the LZ. He reached the top after a half an hour, having travelled only about 250 meters. With several more hours to extract, he watched the LZ and the way they'd come. It was almost dark.\n\nHe heard noise behind them; they were not alone. He found a spot and waited. On the phone, he heard. \"Drone overhead. You have at least three enemy nearby. Nearest is...120 meters west. None south. One 200 meters east.\" The report continued. \"All are static.\" \n\nHe did not think they followed; rather, they had placed a wide perimeter, and had perhaps discovered him walking to the hilltop. Perhaps they only suspected, or it was their method to throw a wide perimeter in case the Americans came back. He thought the child and he were in a good place. He heard movement below, but not talk. Perhaps it was just one sentinel. The child slept in the early evening heat, and Leslie watched as the sky gradually darkened. The twilight lingered but finally ended.\n\nShe woke. He gave her more water, plain water. She sucked on his finger wrap, which he kept saturating with water. Make no sound, Baby, he thought. If you can stand it, Sarah, do not cry. But he was ready. If she cried, he intended to snatch her and run for that LZ. Hell or high water, he thought, smiling. \n\nAt twenty minutes to extract, he reported sounds but no movement near the hill he now occupied, and informed them he and the child were 400 meters away and moving to the LZ using a zigzag. The movement jostled the child and she began to cry. Jack decided the hell with it and, using his night vision, they moved fast, jogging when he had a good view of more open land. Her little cries stopped with the activity.\n\nHe went to his knees and checked his gps as he reached the field he thought the LZ. Then prone, the child tucked in safely below him, he said to her, \"You are Sarah Haddad, for your mother and father, who loved you. God save us. You will live much longer, if I have any say in the matter.\" He heard choppers in the distance. Suddenly tracers flew, a recon by fire, probably, but in the wrong direction, and Leslie swivelled his M4 around his body for action. Sarah was on the ground beneath him. Everything happened very quickly then, and some things simultaneously.\n\n*\n\nLeslie was sure he'd killed at least one, perhaps two of the fighters in the ten seconds he was firing. Their recon exposed their positions. He fired at some flashes from the hilltop he'd just left, and they stopped. Silence followed, and after some seconds a chopper was coming in, and he heard another circling. He scooped Sarah comfortably into his left hand, she looking down through his fingers, he hoping he did not irritate that withering, drying shrivel of an umbilical cord, and he ran for the chopper before it put down 75 meters away-when an RPG passed him and the child, impacting beyond the chopper. \n\nHe was yelling now, not wanting to die of friendly fire, yelling. Fifty yards, running... how long could it take? Twenty... He saw Unnumbered dispersed around the chopper, firing past him. He had only feet to go to the Chinook when he felt a blow to his thigh, his right thigh, and suddenly it didn't matter that he wanted to walk or run or crawl. His right leg would not work. He had the child under his body, along his arm, and he fell shielding her, left elbow in the rocky soil, left hand holding her face from the rock, falling with a twist onto his right to protect her. He pushed up with his left, good leg and his right hand. He was mostly erect when he felt another round impact his right leg, his calf, and he thought, Come on, give me a break! That side's already hit! He was half kneeling, his right leg useless, right knee bent but holding no weight. But he stiffened, right hand on the ground, and pushed with his left leg, every muscle requiring extraordinary effort. \n\nHe hopped up, toward his goal, heard someone yelling \"Mr. Leslie!\" and he finally reached...Ortiz, by the ramp, and his guys were backing in and firing into the brush, the chopper had a heavier gun firing, and that good man Ortiz was reaching toward Leslie, and Leslie swung with his left hand and felt Ortiz grab the child, saw the wonder in his eyes as he received a gift of God from his Six, and the world went dim and Leslie didn't care any more as he fell forward. \n\nSometime during his momentary relief, Leslie thought, I accomplished my mission. I did. I hope to God the kid's okay. I hope to God... \n\nHe saw his guys pile into the chopper and it was up, machine guns firing, and he heard a Cobra burping away. \"Ortiz,\" Leslie yelled in the noise of the flight, \"take care of the kid.\" Ortiz, cradling her awkwardly but almost like a first-time parent, gave him a thumbs up. Leslie looked at his guys as Varmint put a tourniquet on his leg, and they were all smiling. He felt them about him, satisfied in some way. They all said something to him or patted his shoulder, and there was the camaraderie of missions accomplished and this time-this time-they all knew the purpose. Someone gave him a shot of painkiller and he felt the warmth sweep over as they headed out to sea. \n\nAfter the chopper landed on the Bataan, there was clapping from however many sailors were present as Ortiz handed Sarah to a nurse on the flight deck, and then Jack was lifted onto a stretcher.\n\n*\n\nChapter 10: Save One Life \n\n\"Sarah,\" Leslie said. \n\n\"She's gone,\" he heard, but it couldn't be, 5 weeks, she was alive, she was sucking and crying and cooing and he almost screamed but...\" \n\n\"Sarah Haddad, she died before the raid,\" he heard. \n\n\"No, the child, the child,\" he said, hoping they heard, hoping for understanding, feeling relief they'd mistaken him. \n\nHe heard nothing.\n\n\"Mr. Leslie, you there? Mr. Leslie?\" \n\nHe heard and did not want to hear. \n\n\"Wake, Mr. Leslie. Jacob!! Awake!\" a voice said. There was a surreal aspect to the demand, Biblically surreal, as if a command to rise from death. Jacob, AWAKE!\n\n\"Yes?\" Jack said. \n\nDid they hear? He opened his eyes but he could not focus, and he forced himself to settle but the child, the child...how was the child? Was she safe? \n\nHe felt a hand on his shoulder and noticed also a throbbing in his leg, and instantly his memory cleared and he remembered practically throwing her toward Ortiz and the helicopter, the blows to his leg, the leg that throbbed now. He saw clearly, finally, saw a woman in scrubs smiling at him. \n\n\"Where...\" he got out.\n\n\"You're on the Bataan, Captain,\" she said, misunderstanding his question. \n\n\"No...no, where is Sarah? The girl?\" he said, knowing it was just a loud whisper until the last word.\n\n\"Oh,\" she smiled, approving, \"the child is here, fine. She's in great shape. Your team is here, Ortiz had to go to a meeting but he was here all night. I'm your nurse. It's been most of a day you've been here.\"\n\nLeslie fell back into his pillow, relaxed now. Sarah was fine, she's okay, he'd gotten her out, safe... Darkness overwhelmed him, and reality was debatable. \n\n*\n\n\"...an email message from an Israeli Colonel Meier,\" Leslie heard, and pulled, yanked, slid, and finally hoisted himself to his senses, his awake, his world. He felt himself groan then. \"Meier,\" he said, and he felt someone close, a woman, her ear, next his mouth. \"Colonel Meier,\" he said, hopefully louder.\n\n\"Yes,\" Leslie heard quite loudly, as the reader made effort for him to hear, \"Colonel Meier writes, 'You are S-13, Mr. Leslie,' she says. What does that mean?\" \n\nLeslie felt honored. \"It means she's proud of me,\" he gasped out, tracks appearing on his face, suddenly breathless, and he was thinking, how did she know?\n\nHe heard a woman's voice, \"I think every woman on this ship-and that includes a few pilots-has paid a visit to that kid over the day she's been here. She certainly doesn't lack for cuddling.\"\n\nLeslie was smiling at that image in his imagination. \"I couldn't hug her much with my vest,\" he said. \n\n\"She's great,\" the voice said, and Leslie read a woman's name tag, Smith. He saw a woman above him, clearly. Smith.\n\n\"So, we're awake,\" a man's voice said on the other side of him. \n\n\"I'm Bill Johnson, Captain.\" He was taller than Ensign Smith, and a commander. \"I operated on your leg. We took an AK round out of your thigh-it smashed your femur, I'm afraid, and it took us quite a while to pin it all back together. That is bad news. Good news is it should work, but you'll probably have a tough time jogging or walking without a limp. The other bullet was through and through, soft tissue damage, a good scar but it should heal more or less completely.\" \n\nIt's never easy to hear your career has been given a drastic come-uppance, and Leslie realized his active life in the Marines was likely ended. \n\n\"Will I have to leave the Marines, Doc?\" He felt the doctor's hand on his shoulder.\n\n\"I've never heard of a better reason, Captain,\" the doctor said, \"no one has.\"\n\nLeslie did not feel smug in the knowledge his career was likely over and life as a cripple begun. He felt the tear sneak out, and the doctor looked away. \n\n\"Can I see her?\" Leslie asked. \"Sarah? The baby? I had to call her something that day, and I didn't know her name...\" \n\nEnsign Smith did not see Leslie as the crying type, so his silent weep was a surprise. He was not embarrassed, she saw. She said, \"I think I can arrange that for you.\" She looked at the surgeon. \"By your leave, Sir?\" \n\n\"Of course.\"\n\nFifteen minutes later, propped up in his bed, he held Sarah again. It felt natural, right. Fifteen minutes later, he had a truly crazy idea...\n\n\"Ensign?\" he called out as she came beside him to take the baby back to her place. \"Could you send me the chaplain?\" \n\n\"Of course.\"\n\nThe chaplain, a Navy commander, came to see him several hours later. The medical personnel were loathe to listen in on the conversations of the chaplains aboard the Bataan. Such conversations were considered most private, even holy. Several of the dying had made last confessions in that public place with only a curtain, and no one ever discussed these most private things should they be overheard. \n\nBut Ensign Smith was near when a word was mentioned, and she listened in longer than she should have but she knew it was not a religious ritual in progress.\n\nSuddenly the chaplain-known for a dour countenance on most occasions-was laughing uncharacteristically. Everyone looked over at the curtained bed, and Ensign Smith was there, smiling, shaking her head. It was quiet for fifteen more minutes. The chaplain pulled the curtain back then, and smiling, said, \"Jack, this is my first. I've helped in my parish at home but not in deployment. You've made my day. Maybe my whole tour. Get the letter written, and I'm going to give the captain a warning order.\"  \n\n*\n\n\"Mom, put me on speaker.\"\n\n\"But Jack, it's the middle of the...\" when she realized something must be wrong. Jack had called many times at night from across the world, usually to let them know his mission was over and he was okay. This call was different. Leslie imagined her turning on the light, finding the button on the landline phone he'd called them on, his dad waking beside her. Dad had said he couldn't sleep during his overnight calls anyway. ",
        "\"Okay, Jack,\" he heard both Mom and Dad say.\n\n\"Alright, Mom, Dad.\" He hesitated as if he were giving an order to his men. \"We had a mission two nights ago. I've been shot in the right leg. Twice. They operated on it and I'm going to be okay, but...\" he had to stop, realizing he was not okay with talking about the likely end of his military career. \"But I'm going to limp, probably, and it will be very difficult for me to run any sort of distance. But I'm okay, and all my men survived the fight.\" \n\n\"Oh, Jack!\" he heard from his mom, and then his dad said, \"Jack, as long as you're whole. Where are you now?\"\n\n\"I'm aboard a ship, soon to be flown home, I think. They may need to operate again, maybe not. I talked to people and I'll have a few more months with the Marines, getting more medical care and preparing for separation. They might have something for me, working in an office, but I won't be able...\" He paused and took some breaths. \"I'll get a disability payment or something, until I die. Monthly. Probably won't be able to do things that rely on my legs-can't be a lineman for the electrical company. But I have that degree in history, I was thinking of writing or teaching. We'll see. No real pressure. I hope you don't mind me living at home until things settle out.\" This was not unforeseen. Most career servicepeople considered alternatives should a catastrophic injury end it. \n\nHe heard his mother crying. There was a long silence. \"No, course not,\" his dad said. \"Just get back safely. We'll have plenty of time to talk about the future.\"\n\n\"Yeah, I have some ideas about that. I think you'll like them. One of them, anyway. I'm going to go now. It'll be good to be home. I've only been home what-a few weeks over the last four years? It'll be good. Let Craig and his family know.\" Craig was his brother who lived with his family in Wisconsin.\n\nIt was three days later he arrived at Andrews Joint Base in Maryland, near Washington D.C. His parents met him there and drove behind the ambulance to Quantico, helped him into the hospital, and finally saw him wheeling around first in a wheelchair, then beginning crutches. They stayed with him for five days. He sent them home-it was good to see them but they didn't have the money to live in motels, and they knew he was okay. He kissed them and they flew off. He'd join them when he cleared up his situation. \n\n*\n\nA formal request to adopt a child named Sarah Haddad came to the New Hope Child Care Agency in Washington D.C. Several letters were forwarded to the agency, requesting Captain Jack Leslie be considered to adopt the child-these written by him before the child was in the country or in the care of the agency. He'd discovered the agency that would deal with her case before the agency knew. Recommendations came in from Naval personnel overseas-a Navy captain, a chaplain, a nurse. All sat in a file with a question mark until a Sarah Haddad arrived for their care. The agency was a small one; its director had never had a request to adopt before the child was in her care or even known to her. Sarah Haddad was assigned to New Hope about a week after Jacob Leslie sent the letter requesting consideration to adopt.\n\nLeslie filled out all the forms and essays requested of him by New Hope; normally the paperwork took weeks. He hand delivered the papers to the agency within three days. \n\nLeslie found himself assigned per his request to MCB Quantico for the remainder of his time with the Corps. He had physical therapy daily for a few weeks, learned to use crutches quickly, and was counselled regarding all things separate from the Corps. He realized that one thing kept him from depression: tracking the movements of Sarah Haddad. \n\nHe called the agency to check on her daily once he knew she'd arrived. They wondered at his interest, documenting each call. There was no mention of a relative; their information was that she was without any immediate family and had no known extended. Who was Jack Leslie? Captain Jack Leslie? To her? Her case worker noted the situation, worried about a stalker, and investigated. She found no one who knew him, not even his current commanding officer, who turned out to be the base commander who'd never met him, and just said he was assigned to the US Naval Hospital Quantico.\n\nSarah Haddad was assigned within a few days to a family in Silver Spring who had fostered several other infants over the last few years: the Earlings, Errol and Linda.\n\nA social worker, Ms. Jenkins, was assigned to the case and the director cautioned her; white, healthy infants were usually not adopted by single white men. Jenkins read the entire file, the recommendations, and understood there had been an unusual bonding of the candidate and child, but it was not detailed in any of the documents. She knew the child was the last survivor of her family but none of the circumstances of that survival. \n\nHer first interview with Jack was not what she expected. Jenkins was 30 years old and had been involved with state adoptions since she got her master's degree five years before. She thought this case strange: a specific child sought by an unmarried Marine officer about to leave the Corps for medical reasons, unspecified. She interviewed Jack in the BOQ at Quantico, a Marine base used mainly for training commissioned and noncommissioned officers. Jack met her at the door of the BOQ. \n\n\"Jacob Leslie?\" she asked. \n\n\"Yes, Ma'am, please just Jack.\"\n\n\"I'm Marisol Jenkins. I've been assigned this case for the adoption of Sarah Haddad.\"\n\n\"Yes, would you like to talk here in the common room or in my quarters? Quarters are a bit like a college dorm, though mine's for transients so it's a single and small.\" \n\n\"In your quarters, please. I need to see the way you live.\" She entered the lobby, really a vestibule, and seemed surprised Jack was on crutches. \n\n\"I didn't realize you were on crutches,\" she said.\n\n\"Yeah, hurt my leg working. I'm on this floor, so if you'll follow me? I'm still slow on these things.\"\n\nAt his room he opened the door and let her in. There were some chairs around a table, a bed, and a bathroom. \n\n\"I'll be living with my parents in Ohio as soon as I separate and the adoption is decided. I'm staying here now because I need physical therapy, I was given a choice, and Sarah's just thirty miles away.\" \n\nThey sat then around the little table, and Jack waited patiently. He was nervous, though it did not show, he hoped. His right leg sticking out, Ms. Jenkins asked him how he'd hurt it. \n\n\"I don't think it was classified, but it may have gone by the way with the war starting, matter of fact. I was on a mission in the Middle East and was shot. That was how I met Sarah. Actually, I named her.\" \n\n\"What?\" Her papers said only that the child had no living relatives and that she had no assets. She had a recent birth certificate issued by the state department, listing birthplace as in southern Syria. She checked the dates on the papers. \n\n\"They don't tell you these things?\" Jack asked, smiling. \"Would you like some coffee or tea? A Coke? I have regular and diet.\" \n\n\"I'll get it myself, don't you get up,\" she said smiling. \"What would you like?\"\n\n\"Diet Coke, please. I'm not exercising much the last three weeks.\" As Jenkins retrieved the Cokes from the small refrigerator, Jack told his story.\n\n\"I was on a team sent into southern Syria four weeks ago, to evacuate an American family that was living there...hiding there, really, and were in immediate danger of being discovered by Sunni jihadists. There were four kids and the parents, the mother being Sarah Gillespie of Dearborn, Michigan. I don't know her husband's history, but he was not a fundamentalist Muslim. He was Syrian.\n\n\"Are you sure you want to hear this?\" he asked her. She looked young to him, even though she was several years older than he. She nodded and sipped on a Coke.\n\n\"Anyway, we found their little house and found both parents executed by bullets to the head. We searched for the children, three boys and the infant, and found two of the boys shot in the outhouse and the oldest boy-about 8-dead on the other side of a little hill, about 150 feet from the house. We knew there was an infant, but we couldn't find her. Our chopper arrived to get us out, but I couldn't get it out of my mind that I might be leaving a kid, an American, behind. That was a death sentence for her.\" \n\nJack took a sip of Coke. \"I was thinking, Mom and Dad-Sarah and Adnan Haddad-saw the bad guys coming, put the kids out the back window and told them to run. The parents stayed, hoping the bad guys would only kill them, or they could talk their way out of it. I thought they probably gave the little one to the oldest boy, who was old enough to carry her. He would have tried to hide her. But we hadn't found her in the dark. \n\n\"Just as I was about to get on the chopper a firefight started, and I thought I knew where to look. So I told them to take off, I thought I knew where the kid was, and they took off. The pilot probably didn't know I was not aboard, but there was shooting from the north so he had to get in the air. I ran south, then hid and crawled up that hill behind the house, up over the crest and found where the oldest boy died. I felt around for an hour with no light because I was afraid jihadis were near. I had night vision and that helped, but until something moves it isn't real clear.\"\n\n\"You remained behind when your whole team left? Just because you thought you might find the missing kid, who could be anywhere?\" Marisol asked. \n\nJack maneuvered his leg to avoid a cramp. He took another sip and nodded. \n\n\"You found Sarah?\" Jenkins said. This was certainly the most unique adult/child meet she'd had.\n\n\"After about an hour and a half, yeah. I heard her, and she was hidden where a kid might hide in daylight for hide and seek. That's the romance I add-perhaps it was the boy's favorite hiding spot. She was between two embedded rocks in a depression, with a strip of cloth in her mouth, crying, kind of whimpering when I felt her. I couldn't see her in the dark of the depression, and I wouldn't fit in it, so I scooped her out and that was how I met her.\" \n\nHe took another sip and smiled at Jenkins.\n\n\"How'd you get away?\" she asked.\n\n\"I had a sat phone, I called in and said I had the child and she was alive-I heard the captain on the other end say 'he found her and she's alive' and there was this cheer-anyway they said they'd send a chopper after dark next night, but I had to evade until then. They gave me coordinates about a klick away...\" \n\nShe interrupted here. \"Click?\"\n\n\"Kilometer. A fifteen minute walk usually. So I had to get through the daylight hours. I didn't have much experience with babies. I had two packets of coffee creamer with me-I had some food to get me through, but she had only suckled I figured so I mixed the packet with water and fed her by dipping a strip of cloth I ripped from my tee shirt in the mix, and she sucked it out of the shirt around my finger. It worked, but she cried some, so we were just lucky no one heard us. I tickled her and blew quietly on her tummy, trying to keep her happy, figuring laughter better than crying. She smiled a few times. Mostly she slept. \n\n\"I named her Sarah because it was her mother's name, and Haddad is her last name. I had to have something to call her, to make her a real person to me, not just some kid. She still had part of her umbilical cord, I remember. She pooped twice, and I had no other diaper, so I wiped the mess on a rock and let the thing dry in the sun. It was all I could think of-I didn't want to go to the well by the house. I took her diaper off again and let her dry when she was wet later. It doesn't take things long to dry in the Syrian desert. It was hot, maybe over 90 degrees, and she slept much of the afternoon, thank God. A few times I heard someone nearby, and I was terrified Sarah would cry or something. As it was getting dark, I moved us to the top of a near hill and I could see the extract field, and we were farther from the house there.\"\n\nHe took a big gulp then of his Coke.\n\n\"The chopper came on time, just as I reached the field carrying her along my left arm. But as the chopper landed, shooting started from the hill we'd just left, maybe 400 meters away, not too bad, but then an RPG went by us as we were running to the chopper so some of them must have been right behind us.\n\n\"RPG?\" Jenkins asked.\n\n\"Rocket Propelled Grenade. Not a long range weapon. It missed the helicopter or we might still be there. Just as I reached the chopper I took two rounds in my right leg. The one in my thigh ended my military career, the other one was just to add insult to injury. I was able to give her to my guy and he got me in the helicopter because I collapsed.\"\n\nHe was quiet for thinking of that night. \"When I realized that was my last mission, I started thinking about purpose and all I kept thinking was that there was a kid who needed a family, and I might be single but I certainly want a family, caring for a kid would be possible if I turn to teaching or writing, my parents are wonderful grandparents to my brother's kids-but they live far away, and she'll never lack support or need for anything at home. And I felt...love, or something like it, for the kid. I'd been obsessed with finding her. I felt like it was meant to be, that she was my last mission for a reason.\"\n\n\"You believe in God?\" Jenkins asked.\n\nJack thought about that day and night, falling, protecting her from the rock, promising her that as much as he could he would get her to safety. He remembered thinking and saying, God help us. \"Yes, but I'm a lukewarm Catholic. Does that help or hurt my chances? Anyway, I don't think God arranges things like this. I think it was a lot of factors coming together. At best, this was a tragedy, with one significant joy.\" \n\nJenkins smiled. His story was different. She usually leaned against single parent adoptions because life can overwhelm and adoption is forever. Another kid comes along or a husband or something, more kids... She'd seen pets seriously damage family dynamics. She'd never had a man who wanted to be a single parent. There was nothing in Leslie's file that indicated pedophilia or any sort of aberrance. The only thing unusual was his bachelor status. She wondered at his sex life: were women traipsing in and out of his apartment when he was not deployed?\n\n\"Do you have a girlfriend, Jack?\" she asked.\n\nHe shook his head. \"I was engaged once. Unfortunately she was not. I haven't dated much since her. I went into the Marines. I was assigned to schools for years. I went to TBS and IOC here, then I was exchanged with an Israeli-he went to SEAL school and I went to their version, then I was put in the fleet with a small SEAL unit, even though I'm a Marine. SEALs are always sailors, you see. I was with them for some months when this happened.\" He patted his leg. \"I dated a few girls once, one girl twice. Over five years or so. Nothing came of them.\n\n\"But if this adoption happens, it would make all this stuff worth it. Have you seen Sarah?\" Jack asked.\n\n\"No, actually, I haven't. She's with a foster family in Maryland. You know that is temporary? They have no more claim because of the fostering...\" She was almost apologizing, and she realized why. One person had risked his life (actually refusing to fly to safety on the chance of finding and saving this kid), shielded her from bullets, faced an overwhelming enemy, lost normal function of his leg, declared his love, and sought to make Sarah-only Sarah- his own child: yet all have equal chance to his? Is it any wonder he loved the kid? He'd bet his life he might find her alive. \n\nShe equated it with the risk a couple takes when they decide to have a baby. There is always the risk of birth defect or miscarriage or stillbirth. Couples take the risk. Parents take it. Leslie took it-with no idea that he could parent the child.\n\n\"They actually are not seeking to adopt her. They have fostered several infants. What will you do if you do not get custody?\" she asked.\n\n\"It would be the worst blow of my life. Worse than leaving the Corps. I did not choose...how I feel. I was with her alone, we could hear the people who killed her parents, her brothers... We were all we had. They were right there, close, so close, right THERE. I know it's different for me, because she'll remember none of it, but it mattered nonetheless, and I bonded. I don't want a life without her in it.\" He was silent a moment, and she thought he was remembering terror. \n\n\"I'm sorry, I didn't really answer. I would go on, but sometimes people live with a permanent sadness, you know? Like a death or a lost love or something. There's a song line: 'Without a hurt the heart is hollow.' Mine would be full. I'll probably teach high school back home, or write. I've always wanted to write, but I thought I'd need to experience more in order to write better. I may be naive.\" \n\nShe did not think it naive at all. She saw the rush of his emotions regarding the child. \n\n\"You have a bachelor's degree in history?\" \n\n\"Yes, Ma'am, but I can student teach and take one course and I'll qualify for a secondary license in Ohio. Social studies. I'm thinking a master's in history would be interesting and helpful whatever I do.\" \n\n\"How would you care for a child in all of this?\"\n\nHe smiled. \"I have the money for more college-I listed my bank accounts on the application, and you can see my last tax return there. I have saved most of my salary for the last four years. I don't own a car, I've lived on bases, I haven't even gone home much, so transportation expenses have been minimal. I could live for several years of full time schooling without an income at all. I could afford day care if I had to purchase it, but I'd prefer family or me. My parents are in good health, in their early fifties, and would love a grandchild nearby. And who knows, maybe there is that woman in my future.\" \n\nShe looked at this guy. He was big, wide, trim, good-looking if you liked the square-jawed, deep-set eyes sort of man. He had laugh lines about his eyes, which seemed out of character for the serious military man he seemed to be. His hair was dark, but he was not Middle Eastern. \n\n\"Would you tell Sarah she's adopted?\" she asked.\n\n\"Of course. Her family died protecting her. That is a legacy that needs to be known. Her brother...\" he said and suddenly stopped and she saw the welling in his eyes. \n\n\"I would tell her first that I adopted her out of love, because her parents were gone. When she was old enough I would explain more. Finally, I'd tell her the detail, or write it for her. She should know it all, before others tell her or before others know. Their deaths were heroic as well as tragic.\" \n\n\"Have you told your parents your plan to adopt?\"\n\nHe shook his head and smiled. \"No, and it will shock them if it comes true. My mom would fall in love with the idea, and if I were not approved it would devastate her. You said there would be a home study since I plan to live there for some months or years? I hope that can be after the adoption for at home. I'd like to take Sarah home and surprise them.\" \n\nShe smiled. The circumstances were different, he was transient and a home study made little sense in a BOQ, or a man living with his parents for a few months to get things together. It could be got around, if the adoption happened here before he left for home. Home study was really more about the adopting than the home: how did siblings feel? Was the home satisfactory? Were there hidden animosities? Issues? \n\n\"That would be a happy moment.\" \n\nIt was two months before he was approved for the adoption of Sarah Haddad. There was no indication that the father's family had any interest, if there were any in America or Syria. Indeed, no family could be found. Mr. Aglai's statement that Adnan had been estranged for years from his family-for marrying a Christian and refusing the religious extremism that was spreading where they lived-was convincing. The adoption authorities decided finding his family was proscribed by political and religious animosities within the family and that the father's wishes could be surmised by his marriage and actions leading to his death. The letters about Leslie from the chaplain and captain of the Bataan were glowing; there was a statement from Ensign Smith regarding Leslie's desire to hold the child on the ship and other cues to his worthy emotion for the child. Ms. Jenkins had recommended approval with the caveat that a home study take place within a month of their move to Ohio, and any deficiencies corrected reasonably. ",
        "A week before the final hearing, Leslie met the foster parents of Sarah Haddad, in a conference room at the courthouse. Linda and Errol Earling were surprised to find that a limping, big, Marine in plain clothes was the prospective father of Sarah, their foster child for the last seven weeks. They knew only that Sarah was Syrian, her family all deceased, and that there was an early request to adopt.\n\nLeslie arrived after the Earlings; he approached the table with a limp, and held out his hand to Errol. \"Mr. Earling? They said your name was Earling? I'm Jack Leslie.\" \n\nErrol stood and shook Leslie's hand, surprised at the Marine's bulk and his desire to parent a child, particularly Sarah. \n\n\"Yes, Sir. I am Errol. We've cared for Sarah for over a month. She's a doll, by the way.\"\n\nLeslie turned his attention to Linda, Errol's wife. She looked at him, her visage hard, without congeniality. Leslie saw some feeling in her, a possessiveness for Sarah, protectiveness, skepticism. \n\n\"Mr. Leslie,\" Mrs. Earling said. She stood, shook Leslie's hand, and withheld judgment. To Linda Earling, Sarah was a precious and unique being to be protected. She looked at Leslie with many questions. \n\n\"Hello. I want you to know,\" said Leslie, \"I appreciate all you've done for her. She's only known loss. Loss of the people who loved her. She probably will always need to know someone loves her, and I hope it's me, but she needs to know love.\" Jack went quiet. It was just a preliminary meeting. He'd been approved by the social worker and the powers that be who only saw paperwork. He did not need to prove himself anymore, though. But these people had loved her and they should know that was her great need. And that he knew it.\n\nMrs. Earling looked at the man across the table from her. \"Mr...Leslie? Who are you to adopt our Sarah?\" \n\n\"Call me Jack, please,\" he said. Leslie looked at her, a woman 30, who had fostered many infants, and he wondered at HER motivation. He returned several ideas. One, looking at her, seemed most likely. He stood across the table from her, remembering his interview with the commodore, the captain, and the lieutenant colonel about SEAL assignment.\n\n\"I am no one, if you mean do I have money or prestige or power. I've none of those.\" He stopped and thought. Looking down first, he looked up straight at Linda.\n\n\"But I am the guy who brought her out of Syria. I found her when I was supposed to abandon her. I hid her for 26 hours within yards of the people who massacred her family, I fed her using strips of cloth and coffee creamer and water she could suck out, I shielded her from bullets, I handed her to the SEALs who brought her to safety, and I was shot twice doing it. I'm the only other person but you and your husband who loves her.\" Jack was looking straight at Linda Earling, leaning on the table, speaking not in threat but sincerity. \"I believe you would have done those things for her, too. No one loves her as we do. You and I. That's who I am.\" \n\nHe knew what was being asked of him this time. She wanted to know if he loved Sarah the way a child should be loved.\n\nHe stared at Linda. She looked back. Neither gaze faltered.\n\n*\n\nCustody transfer took place in a courthouse before a magistrate who was surprised that a Marine/SEAL Squad leader was adopting as a single parent. \n\nMs. Jenkins stood. \"Your Honor, may I make a statement?\" \n\n\"Go ahead. You were the social worker? You met with Captain Leslie three times?\" \n\n\"Yes, Ma'am. He also attended adoption group meetings twice a week for six weeks now. This case is unusual because of the way in which the Captain bonded with the child,\" she said. \"We believe we followed due process, but it was not the same process as most other adoptions. The time was condensed; everything was expedited. There is still a secondary homestudy to be performed in Ohio by...Ohio Adoption Services, upon Mr. Leslie's move there in a week or two.\"\n\n\"Is there a statement here about that?\" the woman said.\n\n\"Yes, in the first filing from my office,\" Jenkins said. \"We treated Captain Leslie as a relative or a close family friend.\"\n\nThe magistrate was reading for some time. She looked up at Leslie, stood and walked around her desk to him. She held out her hand. \"Just extraordinary.\" she said, and he stood and shook her hand. \"I think I understand the swiftness of this one. He applied before the child was in your hands, in the country, even, he'd already spent an emotional time with her... Why should we stand in the way of further bonding for the young child?\" \n\nThe magistrate looked at some other pages. \"How did you find out which agency Sarah would be assigned to?\"\n\nJack stood. \"Captain Miller of the Bataan kept me notified of the planning as soon as I notified him of my desire to adopt. He was able to follow the chain of people who were responsible for her. The decision to put her with this agency was made by someone at the State Department, the ones who issued her a birth certificate and passport.\" \n\n\"Remarkable.\" \n\nThe magistrate signalled to her assistant, who then opened the door and the Earlings brought Sarah into the room. She was bigger-Jack hadn't seen her in these months since the ship. But it was she, her eyebrows darker and a little thicker, her hair almost gone. \n\n\"What happened to her hair?\" he asked Linda, who smiled and said, \"It disappeared!\" \n\nEveryone was smiling, and the nerves were lost from the meeting. Jack knew he was about to be a father in the most nuanced way. The magistrate looked at the child in the foster mother's arms and smiled. \n\n\"Linda Earling, you may turn the child over to Jacob Leslie, who you already spoke to,\" she said. \n\nLinda went to Jack and handed the child over. \"Oh, and the baby bag, and we put a present in the bag for you and one for Sarah. And my husband has a bag of clothes and things. He'll carry them out for you. Good luck, Jack.\" \n\n\"Linda, I don't know what to say. I have something for you too,\" Jack said, holding Sarah with both hands, he nodded to a small wrapped package and a card on the table. \n\n\"Thank you.\" \n\n\"Captain Leslie, you are now father to Sarah Haddad Leslie. If you would sign these papers, it will be complete.\" Jack limped forward, no longer on crutches, handed Sarah to the judge, and quickly signed the papers. The judge saw no change in demeanor by the new father, but he was unable to speak. He saw she expected him to say something, but he could only shake his head.. \n\n*\n\nThey lived that last week of his active duty at a motel in Dumfries, Virginia, waiting on his separation papers. He took Sarah-who he decided to call Hattie, for Haddad, so that both her mother and family were remembered every time her name was used-everywhere she went. He bought a carseat he could use on an airplane at the post exchange, learned to tie pink ribbons around her hairless head, took her to restaurants, placing her in her seat on upended wooden seats. \n\nHe took her along even to see his commanding officer-the base commander, who was shocked and at first angry at the faux pas in military decorum, but then insisted upon holding her once he understood the situation. Jack had no duties but to await the paperwork, which he received the day after he met the base commander. He wondered if the meeting had anything to do with that. \n\nSuddenly he was Captain Jacob Leslie, USMC (Ret.). It was like a part of him was gone. \n\nBut no life is complete with only one dream, and when one dream ends or becomes impossible, most people develop another. Jack had his daughter to raise, school to attend, classes to teach, and books to write.\n\nChapter 11: Welcome Home\n\nAt 4 the next day, a cold but dry winter day, Leslie's cab pulled up in front of his old home in Sky Grey, Ohio. The driver took out his two seabags as Leslie pulled his child from the car in her new car seat. He thanked the guy for carrying the bags with him to the porch, and put the car seat down while he tipped the guy. \n\n\"Good luck, fella, glad the leg's getting better.\"\n\n\"Thanks.\" Jack took Sarah out of the seat and knocked on the door as the cabbie walked off. He opened the door and went in-it was never locked during daytime. \n\n\"Mom, Dad!\" he called out. They came in then, saw him, saw Sarah with her arms sticking out in a heavy winter coat, and if his mother was going to die of surprise, this would have been the moment. \n\n\"Jack? Jack?\" \n\n\"Mom,\" he said quietly, \"this is your granddaughter Hattie. My adopted daughter.\" \n\nIt was magical. His father and mother had a thousand questions, but Hattie was in his mother's arms within a second and crying not understanding new people and smells and so much love, and Mom was crying as she realized it was not a joke, taking the coat off her awkwardly, and Dad was harrumphing because that's what Jack's dad did now when he wanted to pretend he was not emotional. \n\nDad was speechless though he wanted answers. He hugged his son. \n\n\"She's five months old, we think. Her birthdate on the birth certificate is a guess, but close,\" Jack said, taking a seat at the kitchen table that they had migrated to during the initial shocks. \n\n\"How did you adopt a kid? And why didn't you tell us?\" his mother asked, carrying Sarah around the room, cheek to cheek, as the baby cried.\n\n\"It's a long story, and it's not all happy. Are you sure you want to know it?\" Jack asked, warning them because he knew they'd want the details. Love involves truth and the details don't get in the way.\n\nHis father said, \"We want to know.\" Of course they wanted to know. Who would not? \n\n\"Let me get our stuff in,\" he said. Jack went to the porch and brought the baby bag, his sea bags, and the car seat into the house. Then he mixed some formula and handed the bottle to his mother. \n\nSo he told them about the mission, finding her parents executed, staying behind when the first extract chopper came, and then about finding her. He told about her two brothers dead in an outhouse, and her oldest brother hiding her in a grotto before his own death, and then Jack finding her by feeling in the dark. Finally, he explained about hiding out for a day, trying to keep her happy and quiet, about getting picked up then in a firefight and his wounding. \"Her first name's Sarah but I kept her family name for her middle-Haddad. I want to call her Hattie, so the family is always part of her.\"\n\nMore harrumphing ensued. Jack had not seen much harrumphing when he'd lived at home, so it was a new affectation, but it suited his father who was almost as tall and much heavier than Jack. \n\n\"Sublime. Heroic. People can be so noble when they love,\" his conservative, stalwart dad said quietly.\n\n\"Yeah.\" \n\n\"You, too,\" Dad said.\n\n\"Harrumph,\" Jack said, and they laughed. \n\n\"So she's Syrian?\" his mother asked, still moving about with her granddaughter. \n\n\"Her mother's from Michigan, no known family, an orphan herself. That makes her American as well. Her father was an engineer who met her mother when he was at the University of Michigan, then they went to Syria to help build water systems in the desert. Caught in the religious extremism there, we found out and since the mom and kids were officially Americans and they were in direct peril, they sent my team in.\" \n\n\"Your team?\" his mom asked. He'd never told them his unit. \n\n\"I was a SEAL Squad leader, Mom,\" he said, and his dad knew what that meant. \"All those schools and that one in Israel for 20 months. Those trained me to parachute and scuba dive and about explosives. I was always jumping or swimming into places, bringing guys out, shooting bad guys. It's what we did, Mom. You know the war is wider than they let on. It's not us against one small group. It's a lot of groups. Lots of missions.\" He was quiet for a minute as they realized he was a warrior. \"And I found my daughter on my last one.\" \n\nMom sat down, cooing at her hungry grandchild. He didn't think she'd give the kid up without a fight. \n\n\"Those brows! She is so...stunning!\" his mother said.\n\n\"Uh, Mom, lots of Syrians have dark brows, and some have blue eyes...\"\n\n\"...but eyes often change color in young kids,\" she finished for him.\n\nIt was his mother's way of loving children, he knew. She'd remark on a kneecap or toenails or a birthmark, whatever she noticed. She'd delight in anything she noticed-like a stinky kid, eventually changing her but only after holding her with no concern for the smell. If the kid was happy, what was the rush? Everyone else might want the kid changed, but if the kid did not care why should she? Holding the kid was precious to her. Who cared about a smell if the kid was smiling? At that moment Sarah was sucking away at the nipple on the bottle. \n\n\"Why didn't you tell us?\" his dad said.\n\n\"I was worried they might not approve me for the adoption, so I didn't say anything to you. I thought you might get your hopes up and it would hurt your feelings then,\" Jack said. \n\n\"What about baptism? Has she been baptized?\" \n\nJack shook his head. He didn't know anything. They had only recovered the bodies, none of the papers or records. \n\n\"Maybe her mother baptized her because of the danger... I'll talk to Father and see what he says,\" Jack said. \"She had some shots before they'd let her off Andrews. But I'll get her to a doctor soon. Lots to do. Being a dad is a lot of keeping track.\" \n\nHis mom and dad laughed, and Sarah smiled for the first time in Grandma's arms. \n\n\"We should call Craig,\" Jack said. Craig, his older brother, lived in Wisconsin and had a wife and two kids Jack had seen only a few times. The kids should be five and three, both boys, Jack thought. His mom handed Hattie to her husband-\"Here, hold your newest grandchild!\"-and was dialing before he could answer. \n\n\"Lisa? Hi, this is Mom Leslie. We have some great news! ... \n\n\"Yes, he's home and he limps but...he has a daughter! She's five months now. Adopted.\" His mom covered the mouthpiece and said, \"I hear her yelling to Craig...\" \n\n\"Yes... Craig? Yeah, he adopted a girl. Quite a story. I'll write you an email with all the details, it's something... Yes. ... Yeah, here he is.\" She handed the phone to Jack.\n\nLeslie took the phone. \"Hello, Craig. Some change in my life, huh?\" \n\nCraig said, \"You adopted a girl? I knew with the injury you would probably leave the Marines, but...\"\n\n\"Yeah, but it was the right thing to do. Mom'll write you. But Craig...I may want to call you.\" \n\n\"Anytime, Yakker. A kid! I never thought you'd have a kid, not after what Janice did.\"\n\n\"History, buddy, just history. I learned.\" \n\n\"What's her name?\" \n\n\"I named her for her parents, who died in Syria. Sarah Haddad Leslie. Call her Hattie. I look forward to introducing you.\" \n\n\"Easter, Yakker. We'll meet her then. Love you, kiddo.\"\n\n\"Love you too, Craig. Kiss Lisa and those kids.\"\n\n\"I will. Yakker-proud of you.\" Click. Yakker: his nickname as a child, a form of Yakov, Hebrew form of Jacob, modified by his big brother, who claimed he talked too much.\n\nHattie was asleep in his mom's arms. They all sat around and talked until 10 that evening, discussing people Jack knew and what had happened over the years. Janice had moved away, Marge said she'd had her baby, but then Marge stopped attending the Ladies Sodality meetings at church and seemed to pull away from everyone. Jack's mom knew nothing of Janice, Kevin, or their child, not for several years. \n\n*\n\nChapter 12: 2016 Save the World \n\nHattie looked at the Government and the Family diners. She had one more paragraph to finish the essay, but she didn't read it. She changed it just a little and recited it. This usually shy little kid said, \"Some of my friends worry about whether or not their fathers love them. I have never wondered that. My birth parents and my brother Rifat gave someone a chance to love me. My adoptive father found me, saving my parents' love for me,\" and at this she almost whispered as her emotion caught up with her, \"and he has loved me ever since.\"\n\nThe audience erupted, standing. Hattie looked down, and Jack saw she was in her \"shy fog.\" \n\nJack felt his mother behind him on his right, behind Laeesha who had his hand, and his father behind him on the left. He heard a sob, or sniffle, from Mom? His father squeezed his left arm.\n\n\"Some kid you have there,\" his father said. \n\nEveryone was standing. General Meier was looking at Jack, clapping and shaking her head with a little smile. He had been saved that night, as much as Hattie, he realized. He'd been saved by Sarah Gillespie, a woman who died before he could meet her, and Adnan Haddad, a good man in a harsh reality. They gave him a chance to love their child. \n\nLaeesha, holding Jack's right hand, looked at him and said, \"Save one love, save the world.\"\n\nHe said, \"I think you altered that. I'm pretty sure the Talmud has it differently.\"\n\n\"I want to be part of your family, Jack,\" she said. \n\nHe smiled at her, looked in her eyes. \"I was hoping you would. Is that a proposal?\" \n\nShe smiled at him and said, \"Yes, it is.\" \n\n\"I accept on one condition,\" he said.\n\nLaeesha just looked at him, wondering what that could be.\n\n\"You must adopt my daughter.\" \n\nShe smiled. \"I love you. And I accept your condition.\""
    ],
    "authorname": "Malraux",
    "tags": [
        "marine",
        "rescue",
        "war",
        "adoption",
        "seals",
        "tragedy",
        "family",
        "syria"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/save-one-love"
}