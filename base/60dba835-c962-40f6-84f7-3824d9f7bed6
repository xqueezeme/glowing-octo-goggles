{
    "title": "Unusual Dinner Party",
    "pages": [
        "My wife's email was brief.\n\nHi everybody. I'm so sorry, but we're having a bit of an emergency at work. We might have to cancel tonight. Will let you know soon.\n\nAnn\n\nIt was addressed to me as well as our intended dinner guests for the evening. She had been enthusiastic about having them over, so I knew it had to be important if she was considering canceling. I tried calling her to see if she was OK, but after getting transferred to her recorded message a few times, I wrote her an email instead.\n\nHey babe, are you OK? Can I do anything to help out?\n\nIt took just a few minutes before she replied.\n\nHey honey. It's OK. It looks like I may have overlooked some crucial details on an important case. I need to solve it today. I should be home around 7, but there is no way I can cook before they come.\n\nShe took pride in her reliability, so I knew she'd do anything to correct any oversight she might have done at work. I tried calling her once more, but she still didn't pick up the phone. I resorted to email again.\n\nDon't worry about it babe. I can leave the office early, so I should be able to do the cooking in time(ish). I can entertain them until you show up.\n\nHer reply was instant.\n\nAre you sure? They're kind of more my friends than yours.\n\nIt was true. Erica was Ann's oldest friend, and Linh her former assistant. I knew them and their partners through my wife, but I had spent a lot of time with most of them by now. I assured Ann that she didn't have to worry.\n\nNo worries babe. Just clear things up and come home when you can.\n\nI then replied to my wife's first email to our guests.\n\nHi folks!\n\nSorry about the confusion. Dinner is still on, but we might have to make it closer to 7pm rather than 6.30. See you all then!\n\nBest,\n\nBen\n\nI swiftly wrapped things up and rushed off to get groceries for the cooking. It had to be something simpler than what Ann had planned, but I was sure no one would mind. It's the company that matters after all, and we always had a good time together.\n\nOn my way back from the store I stopped at a red light and checked my phone. There was another email from my wife.\n\nThank you so much. Sorry about the drama!\n\nI definitely deserve a spanking from you tonight...\n\nI smirked. This was exactly the way she liked it. The forbidden thrill of being spanked for something she had done wrong always turned her on.\n\nI had been the one to introduce her to this pleasure. Ann came home one day, moping about scratching her car when parking. I, of course, wasn't angry. It was her car, and even if it hadn't been, I was in no place to judge. I've done worse myself. But later that evening, I decided to joke about it to cheer her up. I found her in the kitchen, cooking dinner. She wore her blonde hair up, and my first thought was to just go over and kiss her slender neck like I usually do. But the sight of her curvy body -- particularly the way her jeans hugged her round ass -- inspired a different action.\n\n\"You need to be punished, young lady,\" I said and playfully slapped her ass.\n\nShe gasped, and her eyes widened. Her mouth fell open and she looked like she was going to protest. But nothing came out. There was a look in her eyes that I had never seen before. There were definite traces of excitement, and I decided to test the waters. I slapped her once more, a little harder this time. She gasped again and seemed to freeze like a deer in headlights. I gave her a few more swats before stepping it up a notch.\n\n\"Lower your pants,\" I whispered in her ear.\n\nShe acted like her body was on autopilot, obediently unzipping her jeans. They were tight, and she had to wiggle her ass to pull them over her cheeks. She steadied herself with her hands on the kitchen bench. Her panties were cut high, leaving most of her ass exposed as she passively awaited her ordeal.\n\nI slapped her ass again, this time enjoying the sensation of my palm against her skin. She gasped with affliction after each swat, but it was always followed by a soft moan. It encouraged me to continue.\n\n\"Come here babe,\" I said. \"I'm going to spank you over my knee now.\"\n\nShe looked confused, overcome with a mixture of emotions. Taking her hand, I led her to the living room. She had trouble walking with her jeans pulled down, but she made no attempt to pull them up. I sat down in the couch.\n\n\"Take off the pants,\" I instructed. \"And the panties.\"\n\nHer hands were unsteady as she hooked her thumbs inside her panties and pulled them down together with the jeans. She stood before me, naked from the waist down. I had seen her undress many times before, but never had she looked so delicate. Her big round tits were covered by a singlet, and I watched them move with her heaving chest. She looked serious, like she was shocked by her own emotions.\n\nI patted my lap and she lay down, her breath heavy as she assumed the position. I took a moment to admire her behind. I couldn't for the life of me understand why I hadn't spanked her before; her ass seemed perfectly built for it. It was big and round, and splayed over my lap it looked flawlessly inviting. I felt my cock grow as I let my hand caress her rosy cheeks.\n\nShe yelped as I slapped her ass without a warning. I gently rubbed were my hand had stung, and then did the same to her other cheek. The combination of dismay and pleasure coming from her mouth was the most sensuous thing I had ever heard. I repeated the pattern, slapping her ass and then caressing it. Not wanting to push things too quickly, my slaps were gentle. I wanted her to dwell in this erotic state of new thrills before increasing the intensity.\n\nSensing that she was ready for more, I surprised her by letting my hand rain down, moving between her cheeks in several consecutive swats. She wiggled her feet and pressed her hips against my lap as if trying to move away from my hand. But when I stopped, she immediately poked her ass out, instinctively begging for more. I slapped her cheeks again, even harder this time. She threw her head back as she yelped.\n\nI paused for a moment, and let my hand wander down to caress her legs. Slowly, I worked my fingertips up the inside of her thigh. She gasped as I found her wet pussy.\n\n\"It seems you are enjoying this,\" I pointed out, and smirked knowingly as I slapped her ass as if punishing her for it.\n\nShe turned her head to look at me, and her face was priceless. She was embarrassed by how turned on she was by this novel sensation. Her eyes were pleading, but I don't think she knew herself what for. We locked eyes as I spanked her again, her facial expression infused with shame and pleasure. She pressed herself against my lap once more, and from the way she was grinding, I realized that it was an effort to rub her pussy against my thighs.\n\n\"Touch yourself,\" I commanded.\n\nShe was quick to obey. Squeezing her arm underneath herself, she reached between her legs. I could hear the slippery sound of her fingers against her clit as she began circling it. She had to push her ass up to make room for her hand, creating an ever so inviting target. Focusing on the center of her ass, I slapped my hand over both her cheeks, letting it rain down steadily. The way it sent waves through her bulbous ass was nothing short of mesmerizing. My cock pressed against my pants.\n\nThe intensity of her squeals increased with the force of my hand. It didn't take long before she screamed out with pleasure, and she started shaking uncontrollably. I pressed down on the small of her back to hold her still as the other hand continued to spank her throughout her orgasm.\n\nI stopped as her spasms faded. Gently, I stroked her reddened ass. Still breathing heavily, she hid her face in the couch. I leaned in and kissed her cheek.\n\n\"Looks like you enjoyed that a lot.\"\n\n\"No,\" she lied, her voice muffled by the couch cushion.\n\nMy hand wandered down between her legs. I ran my fingers over her slit a few times. She was dripping wet.\n\n\"Some parts of your body say you're lying,\" I said, and slipped my middle finger inside her. She responded with a soft moan.\n\nI slid my finger in and out of her, and her body betrayed her again by pushing back against my finger. The orgasm she was still coming down from wasn't enough, and I was in desperate need of relief myself. I removed my finger, and she yelped with frustration. She turned and looked at me with a disappointed expression.\n\n\"I don't think my fingers are enough for you,\" I said, and her eyes lit up. \"Take off your top, babe. I want to see your tits.\"\n\nShe slid off my lap, and stood before me. She pulled the top over her head in one swift motion. Her bra followed, and I stared in awe as her breasts fell free. They hung naturally on her chest, swaying invitingly before me. Her pink nipples looked delicious.\n\nThe contrast between us was thrilling; I was completely dressed, and she naked. She blushed slightly as she stood before me. Her embarrassment was surprising, given how many times I'd seen her naked. But it wasn't just her body she was exposing that evening. She had revealed unexplored desires, and she didn't think they were fitting for a respectable woman of her stature.\n\nI stood up and kissed her. Her lips were full of energy. I embraced her and caressed her naked skin. As my hand traveled down over her ass, I felt it radiating. With our lips pressed together, I gently slapped her ass again. She moaned into my mouth.\n\n\"Help me undress,\" I whispered.\n\nShe unbuttoned my shirt as quickly as her trembling fingers allowed. She pulled it over my shoulder, and I discarded it. Her hands roamed over my chest and traveled down to my buckle. She sat down on the couch table as she tugged at it, but whimpered as her sensitive cheeks made contact with the hard surface. She resorted to squatting as she undid my belt and pants. Hooking her thumbs inside my underwear, she pulled them down together with my pants. She wanted me naked quickly.\n\nMy cock stood ready for her and was eagerly engulfed by her mouth. Her sexual hunger was unmistakable as she bobbed her head, sliding her lips up and down my shaft. Worked up by the pleasure of spanking her, I had to restrain myself so as not to climax.\n\n\"Get on the couch,\" I commanded \"I need to fuck you.\"\n\nShe got on her hands and knees, and as I knelt behind her, I admired the rosy hue of her round cheeks. I rubbed my erection against her slit. We moaned in unison as I slid inside her in one steady motion.\n\nAt this point we were too excited to take it slow. I fucked her forcefully, making her tits sway underneath her as I slammed in to her. The sound of my hips smacking against her cheeks blended with her shrieks of pleasure.\n\n\"Spank me!\" she yelled. \"Spank me more!\"\n\nShe was insatiable. Holding on to her hips with one hand, I used the other to slap her ass. It was driving her wild. Her screams escalated, and her body started shaking. I came with her, pressing my hips against her radiant ass. It was a powerful release for us both.\n\nShe still seemed embarrassed as she curled up against my chest afterwards. But she was hooked. I quickly learned her ways as she discovered them too. She would tell me about a mistake she'd made, and we'd use it as an excuse to give her a good spanking. It turned her on so much.\n\nHer ass wasn't the first I had spanked in my life, but it was honestly the one I enjoyed the most. I relished the sensation itself -- the sense of power as well as the feeling of her ass against my hand -- but what excited me the most was her reaction. It was such a taboo for her to enjoy it, and it embarrassed her. But this just turned her on even more. And since she didn't think it should, it added to her embarrassment. It was adorably sensuous to watch this erotic feedback unfolding inside her.\n\nHer appetite for spanking had grown over time. I recalled several of our spanking episodes as I drove home from the store, looking forward to another later. Arriving home, I had to wait in the car to make my excitement less apparent before stepping out of the car. As I composed myself, I noticed two new emails on my phone, both in reply to my wife's email. The first one was from Linh.\n\nDear Ben and Ann,\n\nGreat, let us know if we can help with anything.\n\nLooking forward to seeing you all tonight!\n\nBest wishes,\n\nLinh\n\nThe second was from Erica.\n\nHahaha! I'm happy to lend a helping hand for sure!\n\nShe always had a tendency to stir the pot, but this time I wasn't catching her drift. Unless...\n\nI quickly scrolled down the email and realized that my wife had made two fatal mistakes. First, she had replied to my email to our guests rather than to the one I sent just to her. Secondly, she had used reply all. I shook my head in disbelief. She must have been really stressed at work to mess up like this. She had sent an email to our friends, saying she needed to be spanked! This was going to embarrass the living hell out of her.\n\nI decided not to point out to Ann her mistake for the moment. If she was stressed, she didn't need this extra pressure. And maybe only Erica had picked up on the spanking request from my wife. Linh didn't comment on it, and neither of their partners had replied to the email. Maybe they hadn't seen it. I wrote a reply, not acknowledging Erica's remark.\n\nThanks Erica and Linh,\n\nI should be fine, but if you have time Linh, maybe you can come a bit early and help out? Just in case.\n\nSee you all soon!\n\nI was honestly short on time, but I also thought that steering the conversation in this direction might divert the attention from my wife's inadvertent revelation. Previously Ann's assistant, it wouldn't be the first time she'd have to cover for my wife. I really liked her, so I was glad they had started socializing as friends after Linh moved on to a new job.\n\nNot allowing myself to waste more time, I went inside and got started on the cooking. I was doing pretty good, but was still pleased to find Linh at the door around 6.30pm. I greeted her with a kiss on the cheek. She looked as cute as ever. Her black dress wasn't revealing much of her smooth skin, but it nicely hugged her petite frame.\n\n\"Mark is just parking the car,\" she said. It seemed like every time I met her there were less traces of her Vietnamese accent.\n\nShe helped me in the kitchen, and it wasn't long before Mark rang the doorbell. Linh had taken control of the cooking, so I went to open for him. He had a bouquet of flowers, and I laughed as he handed them to me.\n\n\"Oh, they are for Ann I suppose,\" he said sheepishly.\n\nI didn't know him very well. Though a bit on the quiet side, he seemed like a nice guy. He was a big dude, nearly two heads taller than his girlfriend. My wife sometimes commented that he worshiped the ground Linh walked on. I had him pinned as more of a jeans and t-shirt kind of guy, but it appeared Linh had made him wear a suit for the evening.\n\nWith Linh taking over responsibility of the cooking, it gave me an opportunity to get changed. Even though we weren't a formal crowd, we usually dressed up a bit for our get-togethers. I followed Mark's lead and put on a suit. As I returned to our guests, Linh had brought out candles from my wife's stash and created a nice atmosphere. I offered them a drink in the living room while we waited for the others. It was mostly Linh and me talking, Mark only occasionally joining in to agree with his girlfriend. Neither of them mentioned Ann's comment about spanking, but that said little about whether they'd seen it. Linh was too polite, and Mark wouldn't risk bringing up anything his girlfriend might disapprove of.\n\nAt exactly 7.00, the doorbell rang again. I was surprised by Erica's punctuality. She was usually more than fashionably late.\n\n\"Hey Ben!\" she yelled when I opened the door, kissing me on the cheek and handing me a bottle of wine. \"Is the dirty girl home yet?\"\n\nHer high heels clapped against the floor as she walked past me. Still holding the door open for her husband, I watched her march down the hallway. With her red locks and bright red dress, her aura seemed to take over the room.\n\n\"Ann isn't home yet,\" I half-shouted after her as she disappeared into the living room. There vanished all hope that my wife's blooper would be left out of the conversation for the evening.\n\nFred grinned and shrugged his shoulders.\n\n\"I thought maybe we could enjoy this later,\" he said and handed me a bottle of scotch.\n\nThe guest sat down in the living room as I checked on the food. In perfect timing, I heard the key in the door just as dinner was ready. My wife rushed in.\n\n\"Hey everybody! So sorry I'm late,\" she said and made her way around our guests to greet them.\n\nI welcomed her home with a kiss.\n\n\"You're just in time.\"\n\nShe was still in her work clothes, but it was a look I enjoyed. Her appearance was both professional and sexy, her white blouse and black skirt hugging her curves. I noticed that her skirt was a little shorter than her usual. As she sat down, it rouse up enough to reveal the top of her stockings. I hoped the email mishap wouldn't change her mind about getting spanked later.\n\nThe dinner was nice, with good food and engaging conversation. I was pleasantly surprised that Erica didn't bring up Ann's mistake. But toward the end of the main course, she couldn't hold it in any longer.\n\n\"So, Ann,\" she began, and I could tell from her voice that she was going somewhere. \"What was the drama at work?\"\n\n\"Oh, it's just this court case,\" Ann said. \"I don't want to bore you with the legal details.\"\n\n\"Hey now, don't patronize me,\" Erica said. \"I may not be a lawyer, but I could play one on TV.\"\n\nIt was the same joke she'd made many times before. She was an actress, and Ann often made me go watch her latest play. Erica liked to be the center of attention, both on and off the stage.\n\n\"Well...\" my wife continued. \"The filing date deadline was today, and I realized there was important information missing. I'm afraid my new assistant isn't as organized as you were, Linh.\"\n\n\"Don't be too hard on her,\" Linh advocated. \"It took me a while to learn everything too.\"\n\n\"Oh, I don't think Ann will hold it against her,\" Erica said, her big red mouth grinning from ear to ear. \"I hear she's famous for turning the other cheek.\"\n\nShe laughed out loud at her own remark, and Fred chuckled with her. Linh tried to fight it, but she soon started giggling, and then Mark joined in. It was contagious, and I couldn't help laughing too.\n\nAnn seemed clueless. \"What? What?!\"\n\n\"You may have made a little mistake in your correspondence today, honey,\" I said.\n\n\"What do you mean?\"\n\n\"Check the last email you sent to me.\"\n\nShe got her phone out and scrolled through her emails. All eyes were on her. Given the private nature of the content, she looked a bit uncomfortable as she read it, but she still didn't seem to catch on.\n\n\"Look at the recipients,\" I hinted.\n\nAnn covered her face. \"Oh my god!\"\n\nEverybody burst out laughing again. Ann looked like she needed a drink, and I refilled her glass.\n\n\"My god, this day just keeps getting worse!\" she said and downed half her glass in one gulp. The wine matched her face. \"Please, let's talk about something else.\"\n\n\"Hey now, you're among friends,\" Erica said. \"No need to feel ashamed.\"\n\nMy wife should have known better than to expect her friend to miss out on a teasing opportunity like this. Erica turned her attention to me.\n\n\"So, Ben, how often do you spank her?\"\n\nI didn't respond, looking to my wife to read her signals. It was difficult. She had gone back to covering her scarlet face with her hands.\n\n\"You're not ashamed about spanking your wife, are you?\" Erica continued.",
        "\"That I am not.\"\n\n\"Come on then. We all know each other. Give us a bit of details!\"\n\nI wasn't going to let her get to me. She gave up on me and returned her attention to Ann.\n\n\"Does he just spank you whenever he feels like it?\"\n\n\"No, only when I deserve it,\" Ann said meekly.\n\nI was shocked by my wife's words, and so was she by the looks of it.\n\n\"But only because she likes it!\" I defended myself.\n\nI didn't want to come off abusive, but the way it came out just made all our guests laugh again. Erica was the loudest.\n\n\"I bet she does!\"\n\nAs the laughs trailed off, Erica didn't continue her mocking for the moment. I had a sneaking suspicion it wouldn't last long, and decided to divert the attention.\n\n\"Let's move to the couch,\" I said. \"We can have dessert there. I'll clear the table.\"\n\nAnn stayed behind as the others went to the living room. Once we were out of reach from the others, I asked if she was OK.\n\n\"Yeah, I'm just really embarrassed. How could I mess up like this?\"\n\nI hugged her. \"Don't be so hard on yourself.\"\n\nShe reached up and kissed me, her tongue vigorous. Responding to her passion, I let my hands wander down her back. I patted her ass lightly, feeling it jiggle under the stretchy material of her skirt.\n\n\"Now get back to your friends. I'll tidy up in here.\"\n\nShe smiled and turned to walk away, but stopped herself.\n\n\"You know, after a day like this, I will really need a good spanking tonight,\" she said and winked at me. I suddenly wanted our guests to leave early.\n\nAs I joined them, I found them all in a good mood. Our guests were sitting on our big sectional sofa, with the guys on one section and the women on the other. My wife had pulled up a chair by Erica and Linh, and they were engaged in conversation. I took a chair closer to the guys, and as we chatted away, it seemed like it might just turn into another pleasant evening with some friends. But Erica wasn't done.\n\n\"So, shall we get started?\" she said, making all heads turn in her direction.\n\nAnn looked nervous. \"With what?\"\n\n\"Your spanking, of course.\"\n\nAnn rolled her eyes. \"Yeah, yeah. Very funny.\"\n\n\"Oh, don't act all shy now.\"\n\nAnn blushed and playfully slapped her friend's leg. \"Stop it, will you?\"\n\n\"Hey now,\" Erica chuckled. \"You're the one asking to be spanked, not me.\"\n\nAnn sighed. \"You're not going drop this, are you?\"\n\n\"All I know is that you sent around an email, asking to be spanked.\"\n\n\"That was meant for my husband,\" Ann said, hanging her head and covering her eyes.\n\n\"Aha, but you didn't just send it to him, did you?\" Erica argued, sounding like she was making her case before the court.\n\n\"So what? Are you saying you want to spank me?\"\n\nErica fetched her phone, and the room was silent as she fiddled with it.\n\n\"Here's what you sent,\" she said, and read my wife's email out loud. \"I definitely deserve a spanking from you tonight. Now, what kind of friend would I be if I didn't give you what you deserve?\"\n\nI thought for a brief moment about stepping in to help my wife, but Erica was her oldest friend. If anyone knew how to shut her up, it was Ann.\n\n\"If I humor you, will you shut up about it then?\" she said, pointing her finger at her friend.\n\nErica grinned. \"Maybe.\"\n\nMy wife mumbled as she got up from her chair. \"I can't believe we're doing this...\" She stood before her friend and turned around. Her expression was hard to read. She looked annoyed, but was that really all there was to it?\n\n\"Oh, you're going to get it now, naughty girl!\" Erica said, clapping her hands enthusiastically.\n\nEverybody watched silently, and the sound of Erica's hand against Ann's ass echoed through the room. Ann flinched, but as the next slap hit her other cheek, I was sure I could see her bending over slightly, pushing her ass back against her friend's hand. Erica was gentle and playful as she repeated her action, spanking my wife five or six times on each cheek. When she was done she looked at me.\n\n\"So, do you want to have your go now?\"\n\nI studied my wife's reaction, and she looked like she expected me to take the bait. All this focus on spanking sure had me wanting this, and she knew it. But a light slap over her skirt wasn't what I had in mind.\n\n\"Nah, I think I'll save it for later and do it properly.\"\n\nEverybody laughed, except for Ann. Erica turned to Linh beside her, and looked like she was going to say something. But she changed her mind and instead turned to Fred on the far end of the couch.\n\n\"What do you say darling -- is it your turn then?\"\n\nFred chuckled. \"Oh, I don't know if...\"\n\n\"It's OK,\" my wife interrupted him, her ass shaking alluringly as she walked over to him. \"Let's get this over with so your wife can shut up.\"\n\nIt was an unusual tactics for silencing her friend. If I knew Erica correctly, this would only encourage her. Fred looked at me, and I shrugged my shoulders. It was all just a bit of mocking around among friends.\n\n\"Go ahead, old chap. Be my guest.\"\n\nFred looked quizzically at me to see if I was sincere, and then glanced to his wife. He sat silently for a few seconds, contemplating the potential of hidden ramifications. He took one look at my wife's ass, and then grinned slyly. It was at eye level as she stood before him, and she was pouting invitingly in his direction. There was no way he would miss out on this opportunity. Erica applauded him as he began slapping my wife's ass. It seemed this wasn't his first time delivering a spanking.\n\nWhen he was done, Ann took a step over to Mark. I expected Erica would have suggested that everybody should have a go at my wife's ass, but Ann acted without her friend's coercing. Maybe she wanted to get this bizarre incident to be over as quickly as possible. Or was she was eager to let it to continue?\n\nMark looked perplexed, his mouth open as he turned to his girlfriend. She looked equally startled.\n\n\"Come on Linh,\" Erica said, her voice oozing with Machiavellian undertones. \"Let him have some fun.\" She gently brushed Linh's knee as she spoke. \"And you too.\"\n\nAll eyes were on Linh as she nervously fingered the glass in her hand. She broke out giggling.\n\n\"This is so weird!\"\n\nErica laughed with her. \"Oh, it's just a bit of fun among friends. She's not your mentor anymore you know.\"\n\nLinh took a big sip from her wine. \"Yeah, OK.\"\n\nMark looked at her with raised eyebrows, making sure he heard her correctly.\n\n\"Go ahead,\" she ensured him. \"Like she said -- it's just a bit of fun.\"\n\nHe glanced at me, and I held out my hands in a gesture of approval. How could I sanction one guest and deny the other?\n\nBesides, it was up to Ann to stop this if she was uncomfortable. She waited patiently with her back against Mark. I imagined it would have been awkward for her to stand there while her friends debated whether to spank her. She gasped as Mark started slapping her cheeks. As much as he tried to hide it, his face revealed just how fascinated he was by her ass as it moved before him.\n\nIt was Linh's turn, and she knew it. She looked like she was having second thoughts, staring wide-eyed at Ann's ass before her.\n\n\"Come on,\" Erica encouraged her. \"It won't bite.\"\n\nLike a kitten playing with yarn, she flicked one cheek with. Shocked by her own action, she shrieked and covered her mouth in shock. We all burst out laughing, and even Ann joined in.\n\n\"Here, do like this instead,\" Erica said and slapped the other cheek. \"Slap it with your palm.\"\n\nLinh hesitated a moment before imitating Erica. The redhead led the way again, slapping the left cheek, and Linh followed on the other. They soon worked up a rhythm, giggling as they jointly spanked my wife. Ann rolled her eyes, acting like the whole thing was stupid. But from the crimson patches on her face, I could tell she wasn't unmoved.\n\n\"Are you sure you want to miss out on all this fun?\" Erica asked me when they were finished. \"It's a good ass for spanking.\" She gave Ann one last swat on the cheek, making her 'ow'.\n\nI chuckled. \"I'm not debating that. But like I said, I rather do it properly when you've left.\"\n\n\"Oh, so we're not doing it right then?\" Erica said with feigned offense. \"Want to show us how it's done then?\"\n\nI avoided the question. \"I think it's time for dessert.\"\n\nI looked at my wife as I said it, and picked up a hint of disappointment in her expression. Did she actually want this to go on?\n\n\"Good idea,\" she said, at least sounding like she was glad it was over. \"I'll bring it out.\"\n\nAs she went into the kitchen to fetch the desert, Erica made it clear that she still wasn't going to drop the subject.\n\n\"So, what were we missing?\"\n\nI knew what she was referring to, but acted like I didn't.\n\n\"What do you mean?\"\n\n\"You know -- what do you do when you spank her that we didn't?\"\n\nShe framed it factual, like it was just a normal diner conversation. Part of me wanted to shut her down, but I always wanted to be a polite host. And while Erica's attitude made me cautious, my wife's reaction was intriguing me. Ann and I looked at each other when she returned with the cake. She looked a bit nervous perhaps, but showed no signs of dissuading me from answering the question. She wasn't making any serious effort to stop Erica either. I could tell that Ann was embarrassed about the fact that her affection for spanking was the main topic of discussion, but could it be that part of her actually liked it? Now that she had exposed this side of her to her friends, did she secretly enjoy them talking about it? I had to test this hypothesis.\n\n\"Well, for starters I usually do it over my lap.\"\n\n\"Oh, stop it honey! You're embarrassing me!\"\n\nEverybody laughed again, and I joined in. Her words didn't ring true, and she giggled erratically herself as she started cutting up the cake. She served the pieces on dessert plates and handed them out to our guests.\n\n\"Are there any nuts in this?\" Linh asked. \"Mark is allergic, you know.\"\n\n\"Oh, I completely forgot!\" Ann apologized and retrieved the plate she was just about to hand to him.\n\n\"O-oh!\" Erica howled. \"You're in trouble now, girlfriend!\"\n\n\"I'm so sorry, Mark.\"\n\n\"Is she trying to kill your boyfriend, Linh?\" Erica exaggerated.\n\n\"It's not that serious,\" Mark assured. \"I'd just get a bit of a rash.\"\n\n\"No reason to defend her,\" Erica said, wiggling her finger. \"She definitely deserves a spanking for this. Right Ann?\"\n\nAnn put her palm on her forehead, apparently frustrated by her headlessness. \"I can't really argue with that. Where is my mind lately?\"\n\n\"I think I reminded you only last week,\" Linh pointed out. Her accent had reappeared gradually with each glass of wine.\n\nAnn sighed. \"I know.\"\n\n\"So everybody agrees then!\" Erica said enthusiastically. \"Do you want to do it yourself Mark, or should your girlfriend spank her?\"\n\nI smirked at how guilefully Erica left out the option of nobody spanking my wife. I didn't call her on though. I was getting curios to see were this was going.\n\nMark looked baffled by the question. \"Uhm, she can do it.\"\n\nLinh seemed somewhat reluctant. But as she put down her wine glass on the table, her face turned into a coy grin. Maybe she still found the whole thing strange, but there was also a part of her that was intrigued. As Ann turned her back to Linh, the Asian girl didn't hesitate, and immediately raised her hand to administer the punishment. But Erica stopped her.\n\n\"Hang on -- it should be over the lap, right Ben?\"\n\n\"I guess so,\" I said.\n\nAnn looked annoyed. \"Whatever. Fine.\"\n\nShe didn't give Linh a chance to weigh in on it, and there were plenty of snickering as Ann climbed onto Linh's lap. But once she was in position, the room silenced. I wasn't the only one who appreciated the sight. My voluptuous wife was lying across her petite friend's lap, awaiting her spanking. Her skirt rose up to show the laced top of her stockings, and she pulled it down to protect her modesty. The fact that she was in her office attire made it even more fitting that it was her former assistant who was going to do it.\n\nLinh looked confused at first, holding her hands up like she didn't know what to do. But from the way she looked at my wife's ass, it was clear she wasn't going to back down. She bit her bottom lip as she flattened her palm, taking aim for Ann's round ass.\n\n\"Are you ready?\" she asked, and my wife nodded.\n\nLinh gave her a swat. It wasn't hard, but enough to make Ann gasp. Linh paused before the next one, and my wife poked her ass out. Was it deliberate? She gasped again as Linh slapped the other cheek. The petite girl gawked at my wife's round ass as it wiggled with the impact of her hand. And it wasn't just her. As she continued to spank Ann, everybody was transfixed on the action.\n\n\"Maybe that's enough,\" Linh eventually said, sounding like she just then realized what she was doing. She had gotten carried away, and now turned shy. She looked like she was trying to get rid of the evidence as she helped Ann to her feet.\n\nMy wife was flustered. \"Right, where were we?\"\n\nThere were a few chuckles, but the mood had changed. I could tell more of our guests wanted another go at her behind, and I couldn't blame them. I was getting increasingly eager to spank her myself.\n\n\"I think you were just about to get Mark something else for dessert,\" Erica said.\n\nAnn looked apologetic. \"Oh, I don't know what else to get you.\"\n\n\"Just a beer would be fine if you got one,\" Mark said.\n\nAnn spun around and headed for the kitchen.\n\n\"Of course, coming right up!\"\n\nReturning, she poured his beer into a glass. She was too eager, and the foam overflowed, dripping onto the floor as well as Mark's pants.\"\n\n\"Fuck!\" she said, a language that was unusual for her, at least outside of our bedroom. \"I'm so sorry Mark.\"\n\n\"It's OK. It was just a few drops,\" Mark said, trying to wipe the beer off his pants with his hand.\n\nMy wife fetched a cloth and got down on her knees to wipe the floor. Her ass stretched her skirt, making it rise up just to expose the naked skin above her stockings. It was an alluring sight, and I noticed other staring too.\n\nErica laughed at her. \"First he gets no cake, and now you spill the poor man's beer on him. I'd say you owe him another go at your ass.\"\n\nMark chuckled nervously, but made no attempt to dismiss the suggestion.\n\n\"Linh might not like that,\" Ann argued.\n\nLinh wiggled her hand. \"No, no. I don't mind.\" She actually sounded very positive to the idea.\n\nMy wife looked to me for support, but I just shrugged my shoulders. I felt a bit guilty, thinking I could have given her an excuse. But after seeing her over Linh's lap, I was getting increasingly curious to see her get spanked again.\n\n\"Argh!\" she exclaimed in defeat. Rather than refusing outright, she had looked for a way out through me or Linh. Gaining no support, my wife was cornered by her own rules. She sighed and then lay down over Mark's lap.\n\nMark wasted no time. Aiming for the center of her ass, his big hand sent shock waves through my wife's cheeks. I heard her grunt with infliction, but it was a sound I recognized from our private spanking sessions. To others it probably just sounded like annoyance, but I knew there was more to it.\n\nIt was odd, but admittedly hot to watch her getting spanked by someone else. Mark was the one she knew the least of our guests. It had to be very humbling for her to lie over his lap, getting spanked as the rest of us watched. As Mark stopped after a few swats, I felt disappointed that the scene was ending.\n\nAnn's face was bright red as she stood up and straightened her skirt. \"Uhm... Right, who else wants cake?\"\n\nThe tone in her voice had shifted. It was meek, like she was slipping into submissive mode. That's what spanking usually did to her. I started to suspect she no longer had the willpower to refuse another one if someone were to suggest it. It was up to me to hold things back at this point.\n\nBut she looked adorably cute in her embarrassed state. I had a growing urge to watch her get spanked again -- or to have others watch me do it. It was a classic situation of the devil and the angel on either shoulder.\n\n\"Are you sure you don't want to join in the fun?\" Erica asked with a wicked grin. There was no doubt what manifestation the devil had taken tonight, her whole appearance suitably red.\n\nBut what about the angel? Could I count on anyone else to support the voice of reason? Not Linh. Erica had won her over by the looks of it. And certainly none of the guys -- they wouldn't miss out on another go at Ann's sweet ass. As for my wife, she was increasingly subdued. She wouldn't be able to put a stop to this, even if it meant she'd never be able to look her friends in the eyes again. No, I was alone in this. Only I could protect her from herself.\n\nBut wouldn't she also get a lot of pleasure if I let things to carry on? Sure, it would embarrass her tremendously, but that embarrassment would also turn her on. The spiral of shame and sexual excitement that she got from getting spanked in private was huge thrill for her. Wouldn't it be even more powerful if she experienced it in front of her friends? Who was I to deny her this? Maybe I could at least take another step and see how she reacted? The angel was fading.\n\n\"You know, honey...\" I began, pausing to take a sip from my wine. \"Our guests have been nice enough to spank you for your mishap at work, but you also made quite the mistake by sending that email around.\"\n\nAnn knew where I was going. \"Et tu Brute?\"\n\nHer stilted remark prompted some chuckles, but they sounded forced. Everybody knew this game was moving further away from innocence. They stared silently as I patted my lap as an invite for my wife. She assumed the position over my knees, making her ass the highest point of reference.\n\n\"So, are you going to show us the right way to do it?\" Erica asked with a pleased grin.\n\n\"I don't know about that,\" I said, admiring my wife's ass. I knew Erica was trying to push my buttons, but I was becoming less inclined to resist.\n\n\"Come on!\" Erica encouraged me. \"Give us a little insight into your Friday night routine.\"\n\n\"Well, if no one minds, I suppose I could do it over the panties at least,\" I said and reached for the hem of Ann's skirt.\n\n\"Oh, you really shouldn't do that, honey!\" my wife said, reaching behind her to stop my hand. I didn't find her voice convincing though.\n\nErica, naturally, backed me up. \"Don't be so shy. Most us have seen you in your bikini, right?\"\n\nWe all knew the connotation was very different, but I wasn't about to argue.\n\n\"It's just...\" my wife started to object.\n\nI didn't let her finished. Grabbing her skirt with both hands, I forcefully yanked the elastic material up over her cheeks.\n\nAnd I was treated to a surprise. She wasn't wearing any panties! I had just exposed her naked ass to our guests. Browsing around, I saw a mixture of amazement and shock on their faces. Linh's look was priceless. As if she was watching a scary movie, she covered her mouth with one hand, and grabbed her boyfriend's hand with the other. She was startled perhaps, but she wasn't going to look away. Ann's ass demanded full attention.\n\nThe guys didn't have as good of an angle as the girls, and they stretched their necks to get a better view. Ann tried to pull her skirt back down. From the way I had yanked it up, it was wedged beneath her, and she only barely managed to cover herself.\n\n\"I was going to surprise you later,\" she said, her voice shivering with embarrassment.\n\nI felt guilty, but that concern was dwarfed by the lush sensation of exposing her to our friends. I wanted more.\n\n\"Well, the damaged is already done,\" I rationalized. \"They've already seen it now.\"\n\nI spoke softly, and I felt as if we were sharing an intimate moment, right before the prying eyes of our guests. She put her hand on her skirt, preventing me from exposing her again. But she offered no resistance as I removed it. Slowly this this time, I pulled her skirt up again, revealing her round ass to our guests. Centered over my lap, it looked deliciously inviting, but I took my time. The anticipation was such a turn on, and I wanted everybody to take in the sight.",
        "\"Oh god,\" she panted, making no attempt to cover up. \"I can't believe this is happening.\"\n\nNeither could I. Here was my wife -- a distinguished and respected woman -- lying over her husband's lap with her ass exposed, awaiting her public spanking. I slapped her lightly. Everybody stared intensely at her bare ass. To make it wiggle for the audience, I slapped up along the curve of her ass rather than straight on. From their fascinated stares, I could tell they appreciated the effort.\n\nAfter a series of swats, I stopped and caressed her ass. It was an erotic sensation to fondle her naked ass in front of our friends, and as I heard her pant, I knew she was getting turned on too. I was tempted to continue her spanking, but I was also curious to see if someone else might be daring enough to pick up where I left off. I pulled down my wife's skirt and helped her to her feet.\n\nShe was blushing as she took her seat. The atmosphere was thick with anticipation as everybody silently ate their cake. I could tell that all our guests wanted to watch my wife get spanked again. Erica had an impish smile, and I decided it was my turn to nudge her.\n\n\"So Erica, how did you like my wife's dessert?\"\n\n\"Oh, it's good,\" she said, and then stopped herself before putting another bite in her mouth. She placed the plate on the table. \"But it's a bit dry.\"\n\nAnn lifted her finger, looking like she was going to tell her friend off for being rude, but it only took a raised eyebrow from Erica to stop her. The redhead was confidently leaning back against the couch, her long legs uncrossed as a bidding for my wife to lie down across them. Ann hung her head in defeat a moment before getting up.\n\nWe all stared expectantly as she silently lay down over her friend's lap. Erica didn't disappoint us. She placed her hands on Ann's thighs, and slowly moving her palms up over my wife's cheeks, she pulled the skirt up. Ann was compliant, lifting her hips slightly to let Erica move the skirt up around her waist. It was extremely sensuous to watch my wife over another woman's lap. The eroticism was emphasized by the way Erica caressed her smooth cheeks. I knew Ann had a bi-curious past, and from her heavy breath I could tell she enjoyed the touch. Subconsciously, she pushed her ass up against her friend's hands. Over Erica's lap, her ass was directed at the rest of the guests. She tried keeping her legs together to protect a bit of modesty, but I guessed that they got at least a peak at her pussy as she raised her ass. To my surprise, I realized that I actually hoped they had.\n\nAnn gasped as Erica surprised her with a slap. The sound of the swat rang through the silent room. Soothingly, Erica caressed the spot where her hand had landed. She continued, alternating between slapping and caressing Ann's ass. My wife always liked it that way, and her body moved with her heavy breath. Before letting my wife go, Erica took a moment to fondle her ass, making it wiggle for our gratification.\n\n\"There you go,\" Erica said as she pulled down Ann's skirt.\n\nShe patted Ann's ass one last time before helping her up. Ann looked humiliated, but very turned on. She headed for her seat but stopped when Erica addressed her husband.\n\n\"What about you, darling? Can you think of a reason why our hostess deserves a spanking?\"\n\nYou could almost hear the machinery of Fred's brain as he desperately tried to come up with a reason. I smiled as I noticed my wife still standing. She knew he would think of something.\n\n\"Well...\" he began, pausing as he looked at me and Erica. \"Maybe the fact that our hostess has been walking around without any panties is a good enough reason?\"\n\nI nodded approvingly. \"Uh-hu, a very good point indeed.\"\n\nAnn didn't object. She just silently walked over and to lie down across his lap. He stopped her briefly, only to point out that he was left handed. She turned, again keeping her ass towards the rest of the guests as she lay down over his lap.\n\n\"Bare ass, right?\" Erica suggested.\n\n\"Of course,\" I agreed. An alliance had been formed.\n\nFred pulled up her skirt, and just like she had done for Erica, Ann raised her body. Perhaps I should have been jealous by the fact that my wife was laying with her naked ass over another man's lap, but I wasn't. My wife may have been calm on the outside, but I knew she was raging with emotions inside. The spiral of sexual thrills and embarrassment was escalating inside her, and I truly wanted her to fully experience the roller-coaster of sensations she was on.\n\nBut it wasn't just for her pleasure that I wanted this to continue. As Fred began spanking her, I felt my cock stir in my pants. The third person view of her round cheeks swaying was mesmerizing, and I wasn't the only one enjoying it. Glancing around, I could see our guest gazing at the scene with lust in their eyes. Their desire for my wife's spankable ass turned me on even more. When Fred stopped and covered her ass, I knew I had to let this evening progress. Erica, naturally, had the same idea.\n\n\"Oh, look. Your stockings have ripped,\" she said and pointed to a small tear above my wife's knees. \"I guess you just have to take them off.\"\n\nMy wife didn't even try to object; she was under the submissive spell. She took off her high heels and placed one foot on the couch table. It was sensuous to watch her roll down her stockings, all eyes glued to her smooth legs. The notion that we had moved to removing her clothes made it even more luring to watch. As she sat down next to me, I felt a strong urge to have her take off more.\n\n\"You would have many reasons to spank your old mentor, right?\" Erica said to Linh.\n\n\"I don't know,\" Linh replied. \"It was usually a pleasure working for her.\"\n\nI smiled at Linh's inability to be rude to my wife, even under these circumstances. I decided to give her a nudge.\n\n\"I'm sure that's true. But didn't you think she was a bit unjust to blame her new assistant for the stuff-up today?\"\n\nLinh smiled nervously, the corner of her mouth twitching as she looked over my wife. \"Maybe.\"\n\n\"Well, that's settled then,\" Erica concluded, turning to Ann. \"Come here sexy, your assistant needs to give you a little punishment.\"\n\nWatching my wife getting spanked by either of our guests came with its unique exciting flavor. But watching Linh do it was probably my favorite. The contrast between her petite frame and my wife's curves was alluring. I wanted to emphasize the contrast. As Ann meekly walked over to Linh, I stopped her before she was about to lie down.\n\n\"I think you're getting your blouse all wrinkly, honey.\"\n\nShe turned and stared wide-eyed at me, perfectly aware what I was hinting at.\n\n\"Would anyone mind if she removed it?\"\n\nIt was a poor excuse, and everybody knew it. But of course, no one objected.\n\n\"Here, let me help you,\" I offered.\n\nHer top button was already undone, and I was pleased to see she had five more to unbutton. I smiled at her as I undid the second one. She looked adorable as she stood there, her chest heaving with excitement. I leaned in and softly kissed her cheek.\n\n\"Let our guests help you with the rest,\" I instructed, and she inhaled deeply as she mentally prepared herself for what was about to happen. \"Fred, do you want to do the next one?\"\n\nI saw him exchange a glance with his wife, and then stand up. He grinned impishly as he reached for Ann's blouse. Her heavy breath was trembling with excitement, and as if calming her, he leaned in and kissed her on the other cheek. She smiled nervously at him, appreciating the tender gesture.\n\n\"Who's next?\" I asked. I wanted each of the guests to undo a button, signifying their participation in the unrobing of my wife. \"Mark? Linh?\"\n\n\"I'll do it,\" Linh said and jumped up.\n\nShe was now an eager participant. I noticed Linh brush against Ann's chest as she fiddled with the button, and it clearly wasn't all accidental. She grinned nervously at my wife's cleavage as the button flung open. She gave Ann a peck on the cheek before sitting down.\n\n\"Your turn,\" she said, nudging her boyfriend.\n\nAs much as he tried, Mark couldn't help gawking at Ann's tits as he worked on the next button. He was quick to get it open. Just like his girlfriend, he hastedly kissed Ann on the cheek before returning to his seat.\n\nErica grinned widely as she stood up. Skillfully, she undid the last button of my wife's blouse with one hand, using the other to press Ann's face against her lips. Her puckered lips left a red mark on Ann's cheek, and she looked pleased with her creation. She walked behind my wife, and ceremoniously lowered the blouse off her shoulders. Everybody stared at Ann, standing there with her tits overflowing her white lace bra. The crimson spots on her chest were a clear sign she was turned on by what she was experiencing.\n\nI was pleased that each of our guests had been part of the disrobing. We were all in this together now, unified by our craving for my wife's erotic embarrassment. But their kisses also signified their affection, making it clear that the people doing this to her were a group that cared for her.\n\nShe was about to sit down when I reminded her what she was supposed to do. \"Weren't you about to lay down in Linh's lap, honey?\"\n\nHer tits swayed in the confine of her bra as she again walked over to Linh. As she assumed her place, we all marveled at the sight, my blonde wife in just her short skirt and bra, lying across the lap of her Asian friend. The scene got even more alluring as Linh raised Ann's skirt, once again exposing her ass. She caressed Ann, running her dainty hand over my wife's smooth cheeks. She was getting bold. The wine probably helped, but that wasn't the only thing she was drunk on.\n\nShe started administering the spanking, and just like Erica had done, she altered between slapping and caressing Ann's ass. Over Linh's lap, my wife's head was lying next to Erica. The redhead scooted over, allowing Ann to rest her head on Erica's thigh. As Linh continued spanking, Erica stroke my wife's hair. The gesture was both patronizing and loving.\n\nLinh took her time, and no one complained. Both women were breathing heavy when Linh eventually let Ann get up. My wife pulled down her skirt, attempting to cover herself.\n\nIt was hard to comprehend the desire I felt, but it was burning intensely inside me at that moment. I usually don't ask my wife to flaunt her body, and she rarely acts exhibitionistly. But now I desperately wanted my wife stripped before our friends. I wanted them to see her naked body. And above all, I wanted her to experience the humbling sensation of being naked, surrounded by her completely dressed friends.\n\n\"You know, honey...\" I began. \"Your skirt will get ruined if we continue this way. It's better if you just take it off, don't you think?\"\n\nShe didn't reply. She just stood there, taking in what I was asking her to do. Eventually, her trembling fingers reached for the zipper of her skirt, but I stopped her.\n\n\"You might as well take off the bra too. Why don't you start with that one?\"\n\nTaking a deep breath, she reached behind her. Everyone was silent, and I could hear the unclasping of her bra. She didn't let it go, holding it against her chest as if holding on to her dignity.\n\n\"Go on, honey, no one minds.\"\n\nIt was an obvious understatement. All our guests were gazing at her chest, their pupils dilated to take in every bit of her. Slowly, she let the bra fall from her chest, exposing herself. Her pink nipples poked out invitingly for her audience. She meekly dropped the bra to the floor. She forced herself not to cover up, halting her hands as they instinctively moved up towards her chest. Our guests greedily drank in the sight of her exposed breasts.\n\n\"Good, now the skirt,\" I instructed.\n\nShe hesitated, and I decided to help her out. I stood up, trying my best to conceal my growing erection. Making sure she was in a spot where everybody had a clear sight, I got behind her. The sound as I lowered her zipper made her shiver. Hooking my thumbs inside her skirt, I slowly pulled it down over her hips. She moaned softly as it traveled down, exposing her pussy to our guests. She was smooth, treating our guests to all the details of her sensuous folds. Naked, she stood there as they admired her.\n\nAbsorbed in lustful shame, my wife seemed unsure what to do. In lack of a better option, she started clearing the couch table of desert plates. I'd normally help, but watching her do this naked was enticing.\n\n\"Very nice cake, honey,\" I complimented, acting like nothing was out of the ordinary.\n\n\"Thanks,\" she said, and I noticed how fragile her voice had gotten since last she spoke. \"Can I get anybody something else?\"\n\n\"What do you say, Fred? Shall we try that whisky you brought?\"\n\nI wasn't particularly interested in fine beverages at the moment, but watching my naked wife serving drinks was appealing, to say the least.\n\n\"Sure,\" he said.\n\n\"Do you want one too, Mark?\" my wife asked.\n\n\"No, I'm good with just the beer, thanks.\"\n\nWe all watched my wife's swaying body disappear into the kitchen. Moments later, she returned with two glasses, handing one to Fred and the other to me.\n\nI frowned. \"Honey, you know you're not supposed to put ice in a fine whisky like this.\"\n\n\"Oh, I'm so sorry,\" she apologized. \"Let me fix that for you.\"\n\n\"All in due time,\" I said. \"But I'm sure you agree you need to be spanked for this lapse.\"\n\nAnn hung her head. \"I know.\" Her eyes darted between me and Fred. \"Who first?\"\n\nI wasn't sure whether the mistake with the ice was on purpose or not -- I guessed she didn't know herself anymore -- but she was clearly willing to be spanked for it. Who first? Why choose?\n\n\"Let's do it together,\" I said. \"Here, honey. Get on the table.\"\n\nI placed a pillow on the couch table for the comfort of her knees. Holding her hand, I helped her up. Needing no further instructions, she leaned over, kneeling on all fours. It was an incredible sight, my naked wife displayed like this before our friends.\n\nI stood on her left side, caressing her naked back, letting my hand travel down over her ass. Fred needed no further hints. He got up and stood on her other side. I noticed he too was excited. But sporting an erection wasn't offensive at this point. On the contrary -- anything else would have been an insult to the eroticism of the moment.\n\nHe followed my lead, fondling her other cheek. Unanimously, we slapped her ass, making her moan. We alternated between spanking and fondling, her tits pendulating invitingly beneath her. I let my hand wander up along her stomach to fondle one of her breasts. Fred copied my motion, reaching underneath her for the other one. Together, we groped and spanked my naked wife, the scene captivating the three people in the audience.\n\nWhen we were done, Ann was getting ready to get up, but Erica stopped her.\n\n\"You might as well stay there, hun\" she said, and then turned to Linh. \"Did you notice how she only offered whisky to the guys?\"\n\n\"Oh, that's true!\"\n\nErica smirked, pleased with Linh's enthusiasm. \"Come on, let's spank her together.\"\n\nThey got stood on either side of her. It only took seconds before Linh's wandering hand found its way to Ann's dangling breast. As Erica slapped Ann's ass, Linh did the same, but it seemed her primary focus was on my wife's breast. She played with it, feeling its weight in her petite hand. She made it wiggle, even to the point of slapping it lightly.\n\nErica spanked my wife a few times, but inspired by Linh's actions, she too focused increasingly on Ann's tits. They threw in the occasional spanking, but it was clear this had turned into a sensual groping session. I marveled at the sight of two dressed women feeling up my completely naked wife. She squealed with pleasure as her friends lightly pinch her sensitive nipples.\n\nTo signify she was done, Erica gave Ann a series of hard spankings, making her groan. As Erica took her seat, Linh remained standing. She turned to Mark, looking for an excuse to get him involved.\n\n\"Didn't Ann often make you work late,\" I hinted. \"Maybe it made you miss the occasional dinner with your boyfriend?\"\n\n\"Yes!\" she said. She tried to look stern. \"Come here, Mark. Let's punish her for that.\"\n\nHe was quick on his feet. I smirked as Linh switched side, making sure she'd get a chance to feel up my wife's other breast too. Together, they spanked her, Mark copying his girlfriend and groping my wife. The young couple grinned at each other, bonding over their excitement of this unusual experience.\n\nLinh seemed reluctant, but eventually she stopped and returned to her seat. Mark did the same. Ann looked around, unsure if it was time for her to get up. Her ass was pointed at Erica, and the brazen redhead didn't refrain from embarrassing my wife further. She stared straight at Ann's pussy.\n\n\"Looks like you're enjoying this, you dirty girl. You're dripping wet, hun!\"\n\nI couldn't see from where I was sitting, but I was sure she was right.\n\n\"I'm surprised she hasn't touched herself yet -- she usually can't help herself,\" I said, adding to my wife's embarrassment.\n\nAnn stared at me, her eyes simultaneously begging me to stop and carry on. Increasingly turned on, I knew which appeal to adhere to.\n\n\"Is that true, sweetie?\" Erica grilled her. \"There is no need to hold back on our behalf, you know. Right Ben?\"\n\n\"Certainly not,\" I agreed. \"Fred, can you throw me the blanket over there?\"\n\nI held out my hand to my wife, helping her off the table. I threw the blanket over it, creating a suitable center stage for her. She didn't protest the slightest when I motioned for her to lie down on her back, her legs too shaky for her to stand up. I placed the pillow under her head for comfort.\n\n\"Go on, honey,\" I urged her. \"Our guests were nice enough to help with your spanking. Show them how much you appreciate their effort.\"\n\nLaying there, the naked center of attention, my wife glanced around. She was so turned on she was trembling, and moaned softly at her own touch as she caressed herself. With her legs curled, her feet rested on the edge of the table. As she reached down between her legs, she parted her knees. It gave Erica a clear view straight at her naked pussy, and I noticed Linh leaning in for a better view.\n\nUnhindered by their prying eyes, Ann gently caressed her smooth folds. She moaned sensuously as she found her clit. As she usually did when touching herself, she let the other hand caress her breasts. She kept her eyes open, not allowing herself to escape the reality of where she was doing this. She pinched and pulled softly at her nipple, and her other hand responded by rubbing intensely at her clit. Occasionally, she moved her fingers down to dip them inside herself.\n\nThe decadence was unprecedented. My wife was masturbating naked on her makeshift altar, surrounded by her dressed friends and husband. All eyes were peeled to her performance, and she knew it. She was moving quickly into ecstasy, moans building as she furiously circled her clit. It didn't take long before her body started shaking, and she screamed out uncontrollably with pleasure.\n\n\"Very nice, hun!\" Erica complimented. \"That's what I call quality entertainment!\"\n\nAnn was blushing as she regained the control of her body. She sat up and glanced around the room, bashful and adorably cute. I think part of her expected this to be the end of her predicament, but the rest of us were still high on excitement. Our desire to watch her humbling experience wasn't over just because she had come for us. Erica made that clear.\n\n\"Now that you've had some relief, maybe you can get us ladies another drink?\"\n\nMy wife had trouble collecting herself. \"Oh, OK... Right. So do you want a whisky then?\"\n\nErica smirked. \"No, just wine thanks.\"\n\n\"For me too,\" Linh added.\n\n\"Right, and whisky without ice for you two I suppose,\" Ann said to me and Fred. \"Do you want another beer Mark?\"",
        "\"Yeah, I'll have another one, please.\"\n\nWe all waited quietly for my wife to return. She carried the drinks on a tray. Placing it on the table, she handed the scotch to me and Fred, and gave the beer to Mark. I couldn't get over how sexy it was to watch my naked wife wait on our guests. And I wasn't alone. As she grabbed the wine bottle and walked over to Erica and Linh, both women leered openly at her exposed body. As she poured their glasses, the brash redhead reached up and fondled Ann's ass.\n\n\"Ah, it's still warm!\"\n\nNo one had spanked Ann very hard, but the numbers were adding up. She had a pink glow to her cheeks.\n\n\"Here, feel it,\" Erica continued, guiding my wife before Linh.\n\nThe girl looked cheeky as she fondled my wife's ass. She gave it a light slap, making Ann squeal in surprise. Linh giggled.\n\n\"Let the guys feel it too,\" Erica coerced.\n\nShe didn't even ask if I was OK with it; my blessing was implied by now. If there was any jealousy inside me, the excitement of watching my wife's public embarrassment overshadowed it. We looked into each other's eyes as she stood between Fred and Mark, presenting her ass for them. They caressed her lightly at first, but soon got carried away, massing her cheeks.\n\n\"I think our hostess is having a visible effect on our beloved partners,\" Erica said, chuckling.\n\nShe was referring to the obvious bulges in their pants. As Linh stared at Mark's crotch, he guiltily removed his hand from Ann's ass, attempting to hide his excitement. But Fred did not. Looking at his wife, he just shrugged his shoulders. What did she expect?\n\n\"You're right!\" Linh agreed, giggling joyfully. \"Shall we spank her for it?\"\n\nErica grinned mischievously. \"We could. Or...\"\n\nShe paused, looking at me and then at my wife.\n\n\"Or we could ask her to do something about it.\"\n\nAnn's mouth fell open, and her eyes widened. From her shocked face I could tell she hadn't expected this. I was stunned too. But then again, was it really an unexpected proposition, given the circumstances? The room was submerged in a high tide of intoxicating hormones.\n\nI was trying to think clearly. Erica certainly had a way of manipulating the situation. I was only then realizing how far the red devil had won us all over. But was that really a bad thing? Her schemes had brought us to this extraordinary level of sultry sensations.\n\nBut what was she suggesting exactly? The way Erica had framed her proposition didn't imply a flat-out gangbang -- I guessed not even she was prepared for that. It was something slightly more innocent, and at the same time more suiting for our attending servant.\n\nAnd yet, did I really want my wife to provide some well-needed relief for our guests? I tried digging beneath the thick layer of lust that coated my senses, deliberately looking for traces of jealousy inside me. But I couldn't find any. And why should I? It wasn't like she'd be doing anything behind my back. Far from it. I'd be right there watching, as would the partner of the one she'd be servicing. I felt a rush of excitement as I realized how embarrassing that would be for her.\n\nI stared into my wife's eyes as she stood there naked. She looked confused, but she was also glowing with submissive sensuality. The woman of stature inside her probably dreaded even the option of going through with what Erica was suggesting. But that wasn't the side of her we were savoring tonight. I winked at her.\n\n\"Well, I guess it isn't very well-mannered for a hostess to provide for herself and leave the guest wanting, don't you think honey?\"\n\nI watched my words sink in with my wife. She took a deep breath, bracing herself. She turned her face to Erica, shaking her head lightly in disbelief. For a moment I thought she was going to call quits on the whole affair, but as Erica grinned widely back at her, Ann slowly turned around and sank to her knees. She looked so delicate. Kneeling naked on the floor, she demonstrated her compliance. But she didn't make any advances. Someone else had to make the next move.\n\n\"Go on, darling,\" Erica urged her husband. \"You don't want to miss out on this, do you?\"\n\nHe was baffled, but Erica was right -- he wasn't about to let this opportunity escape. As he stood up, he tried to act casual, like he didn't care one way or the other. But his eagerness for my wife's service shined through.\n\nI shifted my chair for a better look. I wanted to see her face, and more importantly, I wanted her to know her husband would be watching. Her hand quivered slightly as she reached for Fred's zipper. The sound as she lowered it was like the starting signal of a race into unknown territory. She seemed determined to abide with her task, and we all held our breath as she reached inside his pants and set his erection free. She stared at it, as if her mind was just catching up with what she had done. Holding on to his shaft, she turned to me, as if asking me if I really wanted her to go through with it. I nodded softly.\n\nShe acted like she was in slow motion. Tilting her head backwards, she looked up at Fred, and then turned her gaze back to the cock pointing at her face. Slowly, she opened her mouth wide and leaned forward. Fred grunted as she wrapped her lips around his cock.\n\nIt was certainly somewhat odd to watch my wife on her knees, sucking cock. For the past ten years, her mouth had only worked its magic on me. But I felt no hostility. Instead, I was overcome by a sense of erotic rapture. Watching her sexual display had always turned me on, and this courtside seat gave me the perfect view. It was like watching an erotic movie, only the star was my devoted wife.\n\nOthers were equally hypnotized by the display. Erica, Linh and Mark stared with gaping mouths at my wife's performance. Everyone was too aroused to talk, and the sloppy sound of her increasingly eager mouth filled the room.\n\nLinh's hand wandered absentmindedly over her boyfriend's body. As it found his erection, she gave it a soft squeeze. Realizing what she was doing, she looked down on it, then back at my wife. With shaky fingers, she lowered his zipper, and fished out his erection. She panted as she wrapped her fingers around it. It looked big in her petite hand. She gave him a few strokes, but then let him go.\n\n\"Go on,\" she whispered. \"Let her do it.\"\n\nMark didn't hesitate. He quickly got up and stepped over before my wife. She looked up at him, and then at his cock. It was begging for attention, and she reached out and guided him to her mouth. The R-rated show had just gotten steamier.\n\nAnn moved her mouth between them. From her moans I could tell she enjoyed being a good hostess. Adding to the decadence, I reached for my glass and raised it to the women in the couch. Erica beamed back, and grabbed her glass to return my salutation. Linh however couldn't divert her eyes from the explicit scene before her, enchanted by the sight of her former mentor sucking her boyfriend's cock.\n\n\"Fuck her tits,\" Linh instructed, too intoxicated by her lust to be restrained.\n\nErica grinned, amused by the extroverted vulgarity coming from the previously so timid girl.\n\n\"Go on boys,\" she said. \"You heard her.\"\n\nAnn let the generous amount of saliva in her mouth drool down between her tits. Ready to serve, she pressed her tits together. Mark accepted the invitation, bending his knees slightly as he squeezed his cock in between her breasts. Linh was glued to the sight as her boyfriend began pumping his cock back and forth. As he backed away, Fred quickly replaced him. The two took their turns a few times, until Ann found a way to lean back and accept Fred's cock in her mouth as Mark kept sliding his cock between her tits. They found their rhythm, and it wasn't long before the inevitable was getting close.\n\n\"I want you to cum on her tits,\" Linh continued her instructions. Her mouth twitched nervously for a second, as if she just realized how inappropriate she was. But she was too far gone to care.\n\nMark moved back slightly. He pumped his cock, aiming for my wife's tits. She held them together as an inviting target. Linh's command was probably meant for her boyfriend, but my wife's chest was appealing to Fred as well. He too began stroking himself before Ann. Moments later, both men erupted, shooting long white strands across her tits. They grunted, and my wife moaned as the cum splashed against her tits.\n\nAs the frenzy settled, Ann remained kneeling. She held up her cum covered tits, as if displaying them for the audience. She looked at me for directions, and when I didn't immediately give her any, she turned to Erica.\n\nThe redhead grinned cunningly and stood up. My jaw dropped as she reached under her dress and yanked down her panties. She threw them aside as she sat down again. Reaching for the hem of her dress, she pulled it up to her waist. Her pussy was absolutely gorgeous, completely shaved except for a narrow strip of red hair that pointed down to her sweet spot. Emphasized by her high heels, her slender legs looked even longer than usual, and she shamelessly spread them wide as an invite. My wife stared, but made no move.\n\n\"Surely you're not just attending to the needs of your male guest, hun?\" she said.\n\nAnn walked on her knees over to her friend, her cum covered tits bouncing with her movement. She turned her head briefly to look at me, as if making sure I was watching. Of course I was. Here was my wife, kneeling between the legs of her friend, prepared to pleasure her. My cock pressed against the confines of my pants.\n\nErica gently guided my wife to her pussy. Both women yelped as Ann gently kissed her friend's folds.\n\n\"Ooh,\" Erica gasped. \"Just like back in college.\"\n\nShe looked around, grimacing wickedly as she boldly met the eyes of the four onlookers. I had guessed -- or perhaps wished -- that my wife's experimentation had involved her sexy redhead friend. At that moment, however, I was having trouble processing Erica's words. I was too mesmerized by the erotic scenery. Erica winked at me before turning her gaze back to the woman worshiping her enticing pussy.\n\nShe ground her hips, rubbing her pussy against my wife's hungry mouth. As Ann increased the intensity of her tongue, the redhead gasped and moaned. She was putting on a steamy show, her lustful exclamations mixing with the sopping sound of my wife's tongue. The audience was captivated.\n\nErica may have exaggerated her performance for the benefit of her spectators, but her pleasure was genuine. Her squeals escalated. Grabbing Ann by the back of her head, she pressed my wife's face against her pussy. The dominant act made Ann moan. She greedily lapped at her friend's pussy, driving the redhead into ecstasy.\n\n\"Oh, fuck!\" Erica yelled in fervor. \"I'm coming! I'm coming on your fucking tongue!\"\n\nShe screamed out with unrecognizable profanities as her body began to shake uncontrollably. My wife kept flicking her tongue over her Erica's clit, determined to give her friend a mind-blowing climax. As the squeals subsided, Ann switched to gentle kisses. Erica sighed with satisfaction as she regained her composure. She stared lovingly down at my wife.\n\n\"Ah, that's even better than I remember it,\" she said, stroking Ann's head. She turned to Linh. \"What do you say? You wanna have a go too?\"\n\nAnn lifted her head from between Erica's legs. She looked at Linh. She still had a humbled expression, with maybe a hint of reluctance inside her. But above all, she had an aura of sensual yearning.\n\nLinh lusted too, but she hesitated. She looked sheepishly at me and Fred, and then at Mark.\n\n\"I don't think your boyfriend minds, honey,\" Erica asserted.\n\nMark chuckled nervously. No man dared to talk at this point, fearing it might break the sapphic spell.\n\n\"I know,\" Linh said, her voice wavering. \"But I don't know if I should...\"\n\n\"Oh I think you definitely should,\" Erica shot in. \"And I'm sure our hostess thinks so too.\"\n\nAnn nodded.\n\n\"Go on, tell her,\" Erica urged.\n\nAnn shuffled over and knelt before Linh. She looked a mess, glistening with Erica's wetness around her mouth and cum dripping from her tits. Her shiny blue eyes glowed with a hunger for servitude.\n\n\"Linh, if you want...\" she began, her voice shivering with desire. She paused, as if tasting the words in her mouth before letting them out. \"If you let me, I would love to pleasure you too.\" She paused again, looking up at her former assistant with pleading eyes. \"May I lick you?\"\n\n\"Oh god,\" the girl panted, quivering with excitement.\n\nMy wife's sultry words were intoxicating for me too. Assuming her lesbian tendencies were a thing of the past, I had only dreamed I'd get to see this side of her. Now she was exposing it before us all.\n\nErica giggled. \"Oh, how could you possibly say no to that?! You don't know what you're missing, girl.\"\n\n\"I... I want to,\" Linh said, nearly whispering. \"But I don't think I can in front of everybody.\"\n\n\"I'm sure our hostess wouldn't mind serving you in private,\" Erica continued her coercion. \"But I think I have a better idea if you're feeling shy.\"\n\nOf course she did. She never seemed to run out of ideas, especially when it came to my wife's sexual humbling. I was very grateful for her innovativeness. She stood up and held out her hand, inviting Linh to her feet. The girl stood up, both eager and hesitant.\n\n\"Now, you lay down, hun,\" Erica directed my wife. \"On your back.\"\n\nAnn followed the instructions without any delay. Flat on her back, she laid naked with her two dressed friends looking down at her. Erica turned to Linh.\n\n\"And you take off your shoes.\"\n\nLinh followed the instructions, her legs shaky as she removed them.\n\n\"And your panties,\" Erica added nonchalantly, as if it couldn't possibly be an issue for the girl to do it.\n\nLinh warily scanned the room, cautious of the prying eyes. She exchanged a few glances with her boyfriend. His elated grin was silently pleading with her to go on. Her hands trembled with excitement as she pulled up her dress far enough to reach her panties, making sure her dress protected her modesty. She quickly yanked them down. Not sure what to do with them, she tossed them to her boyfriend. He caught them and held them tight, as if were they a precious gift.\n\nLinh must have figured out what Erica had in mind. She didn't appear particularly astounded when the redhead guided her up on the couch, standing with one foot on either side of my wife's head. With her mouth open, Ann stared hungrily straight up between Linh's legs.\n\nNeeding no further hints from Erica, Linh relaxed her legs to kneel over my wife's head, concealing it with her splayed out dress. She rearranged it behind her in what appeared to be a mixed attempt to keep my wife's tits in clear vision, and her dress away from the cum that coated them. She failed slightly at the later, but was too turned on to care. She slowly lowered her body further down.\n\n\"I can't believe I'm... Ooh!\"\n\nMy wife's tongue interrupted her. Shocked by the sensation, she raised herself up again. It was adorable, and I couldn't help chuckling. It didn't deter her though. With a puzzled expression, she again sunk down towards my wife's eager mouth. She flinched as Ann's tongue obviously found its target once more, but this time she didn't move away.\n\n\"Oh my...\"\n\nLinh panted, staring wide-eyed into oblivion as she focused on the sensation. We couldn't see what Ann was doing under Linh's dress, but the sound of her lapping tongue was giving us a good idea. Linh's sensual moans conveyed her appreciation.\n\nLinh seemed to get increasingly absorbed by the experience. She started to grind her hips, and as her excitement built, she grew bolder. She looked over her shoulder. Drawn to my wife's swaying breasts, she reached behind her. She greedily groped Ann, massaging the cum into her chest.\n\nLured out of her constrained shell, Linh had lost all inhibitions. She began moving up and down, and from the wet squishing sound it seemed she was riding my wife's darted tongue. Her wailing intensified until she suddenly froze up. Still with one hand on Ann's breast, she used the other to hold Ann's head steady between her legs. With an ear-piercing cry, her body began to tremble. She screamed out with what appeared to be Vietnamese obscenities, creating a sensuous choir with my wife's muffled moans.\n\nComing back to her senses, Linh's face turned a timid red. She didn't look regretful, but unmistakably shocked by her own behavior. Erica held out her hand, helping the girl to dismount my wife's face. She giggled nervously as she realized how weak her legs were. She stumbled over to her boyfriend, who greeted her with a passionate embrace.\n\n\"Here are you panties,\" he said in a dumbfounded whim as he handed them to her. She quickly snatched them from his hand, trying to hide them in her palm.\n\nAnn looked even more flustered. Her eyes flickered as she adjusted to the light. Her face was glistening with Linh's affectionate marking. As she sat up and looked down on her cum glazed tits, a drop of saliva fell from her chin. I could tell her head was spinning with emotions. It must have been an outrageously humbling sensation to sit there in her scandalous state, surrounded by dressed people staring at her.\n\nBut she didn't try to hide her body, or wipe away the evidence of the sultry service she had provided for our guests. Instead, she straightened her back. She was glowing with submissive pride, content with her servitude. Her breath was heavy as she looked at me. Signifying her compliance, she even parted her legs, allowing us all to peer at her shining wet pussy.\n\nIt was more than I could take. I stood up and assertively marched over to my wife. She stared up at me with expectant eyes.\n\n\"Get on your hands and knees,\" I ordered.\n\nShe purred longingly as she followed my instructions. I removed my jacket but adhering to the dress code, I kept the rest of my clothes on. Kneeling behind her on the couch, I unzipped my pants and pulled out my cock. In one steady motion, I pushed all the way inside my wife's welcoming pussy. Ann moaned with submissive gratification as I began to fuck her with steady, domineering thrusts.\n\nThe sight of her round ass moving with the force of my hips urged me to slam in to her even harder. It only took a minute before she screamed out in pleasure, her body ecstatically writhing as her pussy contracted around my cock. I held on to her hips, forcefully riding her through her orgasm.\n\nI was desperate for release myself, but I held back. As turned on as she was by her experiences, I knew she had more inside her. I wanted to give her all the pleasure she deserved. Barely giving her a chance to come down, I continued to drive my cock in and out of her. She seemed dazzled at first, but soon panted and moaned again, building up to another climax.\n\nFollowing the theme of the evening, I started slapping her ass.\n\n\"Oh, yes!\" she yelled. \"Spank me. Please, spank me!\"\n\nI glanced at the spectators. They had paired up, Linh and Mark on the other section of the couch, and Erica in Fred lap on chair. They were gently caressing each other, staring at our carnal exhibition with hazed eyes. I noticed my wife looking around too, and their peering eyes seemed to drive her wild. She reached between her legs and rubbed her clit. Within seconds, she was coming again.\n\n\"Yes, fuck me! Fuck me hard!\"\n\nI obliged. Grabbing her round hips with bot hands, I slammed forcefully against her. Unable to hold back any longer, I came with her. Mesmerized by my wife's demeanor throughout the evening, my powerful release was a tribute to her brave submission. Grunting and moaning, I pressed my hips hard against her ass, erupting with load after load deep inside her. The climax was mind-blowing, and for a moment I forgot that we weren't alone.\n\n\"Bravo!\" Erica exclaimed, initiating applause and cheers from the audience. \"I think that's a splendid finale to a splendid evening!\"",
        "She rose abruptly and pulled her husband up with her. I still had my cock buried deep inside my naked wife, who was kneeling on all fours. Erica grinned at our predicament. Looking at Ann, she mimed a phone with her hand.\n\n\"I'll call you tomorrow, hun. No need to get up, we will let ourselves out.\" She giggled. \"Honestly, I need to fuck my husband, and I don't want to steal the show.\"\n\n\"Uhm, we should leave too,\" Linh said, pulling her eyes away from my wife's body.\n\nShe jumped up, and Mark stumbled after her. I had no words, merely nodding at our guests as they prepared to leave. They chuckled their way down the hallway. But Linh came running back. My wife was still bent over in front of me, and the girl grinned evasively as she knelt down by Ann's head. She leaned in and kissed my wife softly on her stunned lips.\n\n\"Thank you,\" she whispered. She then jumped up with bubbly energy, and waved coyly at me as she disappeared again.\n\nThe door closed, and my wife and I were abruptly left alone. I slowly slipped out of her, and she rolled over. She was an explicitly sinful sight. Her lipstick was smeared around her mouth, mixing with Erica's and Linh's juices. And her tits shined with the cum the guys had sprayed her with. The token of our mind-shattering release was running down her thighs. She was gleaming with wanton gratification, the embodiment of sexual indulgence. Yet, there was something frail to her appearance. I couldn't think of anything relevant to say, and smiled warmly at her. She diffidently smiled back.\n\n\"We should probably clean up a bit,\" she said, her voice unassertive as she looked down over her sticky breasts. \"Why don't you go first: I need to collect myself a bit, if you don't mind?\"\n\n\"Of course.\"\n\nThe glistening gifts provided by Erica and Linh were alluring, and I briefly craved to taste them on her face. But they were offerings for my wife, and I kissed her softly on her forehead, the only place on her face that wasn't covered with her friend's juices.\n\nI disrobed as I strode to the bathroom. As the water poured over my body, I started to question my judgment. Had I let things get out of hand? Sure, it had been an amazing experience, and watching her get manhandled by our friends had turned me on more than I could possibly have imagined. And I was sure she felt the same. Her powerful orgasms were unequivocal testimonies to this.\n\nBut had I pushed her further than she could handle? She had been spanked, stripped and groped by her friends. She had shown them all her submissive urges, and masturbated before them. And as the perfect hostess, she had pliantly pleasured them all with her mouth. I had fucked her forcefully, letting them watch as she repeatedly came on my cock. Thinking about it all sent thrills through my body, but I was also feeling guilty. Would she be able to look them all in the eyes again after letting them see and do all this?\n\nI called out to my wife as I exited the bathroom, letting her know I was done. Still giving her space in case she needed it, I went in to our bedroom and waited for her. I recollected the evening in my head, flipping between excitement and remorse. She took her time in the bathroom, and I got increasingly worried.\n\nBut as she joined me in our bedroom, I immediately felt more hopeful. She was naked, but no longer the embarrassed woman I had seen throughout the evening. She had washed away her submissive role, along with the sinful evidence of her wild evening. She smiled confidently at me.\n\n\"It's got a nice pink hue,\" she said, turning around to show me her ass.\n\n\"It suits you,\" I complimented, relieved that she seemed content.\n\n\"I believe it does.\"\n\nShe straddled me, and we tenderly kissed. We stared into each other's eyes, sharing a moment of satisfied recognition of our unusual evening.\n\n\"I can't believe this just happened,\" I said. \"It was so hot!\"\n\n\"It most certainly was. Thanks for letting me have that experience.\"\n\nWe kissed again, her lips increasingly amorous.\n\n\"So I take it I don't have to worry about having pushed things too far?\" I asked.\n\nShe smirked knowingly. \"You pushing? You can be so naive sometimes.\"\n\nI looked at her with confusion.\n\n\"Do you really think I would make mistakes like this?\" she continued.\n\n\"You mean...?\"\n\n\"Yes, Erica and I have been planning this for months.\"\n\nSpeechless, I just stared at her.\n\n\"I told her about this fantasy of mine, and she convinced me we had to make it real. I was originally going to involve you in the planning, but it would have ruined the best part.\"\n\n\"Which was...?\"\n\n\"The thrill of not knowing where you would draw the line.\"\n\nI was silent for a moment as her words sank in.\n\n\"So you planned the whole thing? The emails, the mistakes with the cake and drinks?\"\n\nShe nodded.\n\n\"Everything, even down to...?\"\n\nI paused, contemplating how to suitably formulate what she had done. I decided the situation allowed for crudity.\n\n\"So you planned licking your friends' pussies, and sucking off their partners?!\"\n\nMy question came off more accusing than I felt, but my wife wasn't taken aback by it.\n\n\"Well, no. That was Erica doing some improv.\"\n\nShe leaned in and whispered in my ear. \"But you certainly seemed to like it.\"\n\nI couldn't deny it, especially since she grabbed on to my hardening cock. She guided me inside her again, and as she began to ride me, she looked into my eyes as she continued.\n\n\"I'm glad Erica pushed things this far, even making me lick my friend's cunts and suck off their partners.\"\n\n\"Oh, you liked that, did you?\" I panted, enjoying the dirty words coming out of my wife's mouth.\n\n\"U-hu. And don't forget -- we're having dinner at their place next time. Erica better be a damn good hostess then!\"\n\nThe end.\n\n<br> A big thanks to Ginger_Scent for her very valuable editing comments. The story is part of the Nude Day Contest, so don't forget to vote if you liked it."
    ],
    "authorname": "tomlitilia",
    "tags": [
        "spanking",
        "only one naked",
        "cum on tits",
        "facesitting",
        "lesbian",
        "submissive wife",
        "masturbation",
        "stripped",
        "serving",
        "groping"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/unusual-dinner-party"
}