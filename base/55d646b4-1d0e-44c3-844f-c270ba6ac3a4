{
    "title": "My Once & Future Kin",
    "pages": [
        "While goose is one of those conventional holiday staples, I don't expect traditionalists would approve of the goosing I received last Yuletide. Then again, I don't approve of traditionalists, so I guess that's fair.\n\nThe Carrs' Christmas dinner started, for me at least, as a melancholy affair. Not that the holidays ever raised my spirits much, but this one was more glum than usual. It was the first after my divorce. \n\nAs separations go, mine had been a benevolent one. John and I had not split because of any big fight, scandalous affair, or reprehensible abuse. No, we had simply fallen out of love the same way we had fallen in love; slowly. We hung on a few more years than we should have, trying to make the relationship work, but one day we both realized that whatever we had once shared was long gone. Without children or petty squabbling, the process was over almost before it had begun. \n\nInitially, I had felt free for the first time in a decade, as if an enormous weight had been lifted from my soul. Soon, however, this had been replaced by an enormous emptiness, one that still lingered as I sat at the dinner table that Christmas Eve, listening to my ex-father-in-law say grace over the goose.\n\nNot being a terribly religious person, my eyes often wandered during such prayers. On this occasion they strayed first to John and his new romantic interest. Marian's presence on his right made the absence of anyone special at my side all the more poignant. \n\nWith a sigh, my gaze drifted again, to John's sister, her husband, and then their newborn. I was more pondering than observing at that point when my wandering focus found a pair of eyes looking back from across the table.\n\nI inhaled a sharp breath as I met Brett's stare. I'd always thought of John's brother as my own sibling, yet there had always been something about his appearance, something engaging, but I could never quite put my finger on what it was. This day, the effect was amplified by the simple, honest smile he wore at what was an otherwise somber moment. My head fell a bit to one side as again I considered his features, nondescript as they were individually, yet somehow striking together.\n\nMutterings of \"Amen\" snapped me from my trance. The platters of food began to circulate amid light conversation. I tried to eat, but my stomach felt queasy before I had downed a quarter of my plate. And I knew it was no reflection upon the quality of the meal. \n\nI had been so thrilled when John's father had invited me to the family gathering that I had not considered the awkwardness that might accompany my presence. This oversight had made itself apparent the instant I had arrived at the farm.\n\nNot that anyone had been rude. Far from it; if anything they were too polite. I felt as though everyone, including me, was walking on eggshells. \n\nMy anxiety growing, I forced myself to eat while answering the few polite questions directed my way. The instant I thought it remotely acceptable, I excused myself and headed for the front porch.\n\nThe crispness of the winter prairie greeted me as I exited the old frame house. I smiled even as I shivered; anything was better than the stuffiness inside. \n\nMy eyes roamed the stark landscape even though the details were beginning to fade with the light. I loved the countryside. Others, I knew, thought of the plains as bleak, especially in the grey and white cloak of winter- but I loved the land no matter the season. I had always felt so at home here; I had loved coming home with John. Home, I mused with a sigh. That was exactly how I had come to think of it.\n\nBut the farm belonged to his family, not mine. And I was no longer a part of it. I didn't belong. Tears formed in my eyes as I accepted a fact much colder than the dusk air. My chest felt like lead as I glanced to my car and resolved to depart as soon as I could do so without appearing rude. \n\nI was blowing frosty breaths through pursed lips and wondering if I could find a way to leave without staying the night, when I heard the door open behind me. Twisting my head, I brought my eyes over my shoulder.\n\nBrett pulled the front door closed and turned to me, allowing the screen to spring back against the frame with a clap that echoed across the fields.\n\n\"I thought you might be cold,\" he noted, flipping an overcoat from his shoulder and spreading it with both hands. Before I could respond he had closed the few feet between us and draped the garment over my tightened shoulders.\n\n\"Thank you,\" I whispered. \"I guess it is a bit chilly.\"\n\n\"My pleasure,\" Brett replied. \n\nMy eyes drifted to my right where his palm lingered upon my shoulder. He moved his hand at once, bringing it to the porch rail.\n\n\"Trying not to fall asleep?\" he asked with a half-smile, half-smirk.\n\n\"What?\"\n\n\"Holiday dinners always make me drowsy. Sometimes a bit of cold air will snap me out of it. Just wondering if you were thinkin' the same thing.\"\n\nI grinned through a half chuckle. \"No. Just admiring the view.\"\n\nBrett's smile widened with his eyes. \"Me too.\"\n\nI looked away from him into the distant and darkening fields. \"Do you really find it beautiful?\"\n\n\"It?\"\n\n\"The prairie?\"\n\n\"Oh, that. I dunno. Seen it all my life. You've probably seen lots of places, what with John being in the army and all.\"\n\nWith a shrug, I turned to face Brett. \"Yeah, but you know I always liked it here. Felt like the home I never had. Every time we came, John had to all but drag me away.\"\n\n\"But you've seen cities; mountains; oceans. Surely this can't compare.\"\n\n\"What? Don't you like it here?\"\n\n\"Yeah,\" Brett said. \"That's why I never left. Never thought of it as beautiful though.\"\n\n\"Leave for a while and maybe you will. I thought it'd be nice coming back.\" I paused for a breath. \"But somehow it's not the same. I feel like an outsider now. Like I don't belong.\"\n\n\"Dad wouldn't have invited you if you didn't belong.\"\n\nI shrugged off his attempt at a compliment. \"It was nice enough of John to think of me like that.\"\n\n\"Uh, it was Dad that invited you, not John.\"\n\n\"Oh, yeah, your dad called, but I figured it was John's idea.\"\n\nBrett's head moved in a slow, resolute pivot. \"Remember Dad's birthday?\"\n\nI twisted my cheek into a low-browed smirk. \"It's Independence Day. Who could forget?\"\n\n\"John.\"\n\nMy jaw fell, relieving my face of its twisted appearance. \"John?\"\n\n\"Yep. Guess it pleased Dad plenty that you bothered to send him a card, especially with John forgetting, but what you wrote really impressed him.\"\n\nI shrugged. \"All it said was something about still thinking highly of your family in spite of the break up.\"\n\n\"Yeah, well; I guess the feeling's mutual.\"\n\nI smiled. \"Glad the card at least made his day.\"\n\n\"He did have one gripe though.\"\n\nI tilted my head. \"What?\"\n\n\"He doesn't much care for you addressing him as Mister Carr.\"\n\nI issued a half-snort, half-chuckle. \"I was just trying to be respectful.\"\n\n\"He'd feel more respected if you called him Bob.\"\n\nMy head remained cocked. \"I think I always called him Mr. Carr. Why didn't he ever mention it?\"\n\n\"I expect he did but he's not one to beat a dead horse. He'll tell you something once; if you don't hear it, he figures that's your loss.\"\n\nMy eyes wandered as I searched my memory. \"Must have been a long time ago,\" I concluded after several seconds.\n\n\"Yeah. Probably the first time he met you.\"\n\nI smiled and looked toward the door. \"It was right there. Seems so long ago now; yet not.\"\n\n\"I know what you mean.\"\n\nI brought my eyes to Brett as I tried to grasp the significance of his words. After a few seconds, I conceded defeat. \"You remember your father asking me to call him Bob?\"\n\n\"No. But I remember that day. The first time you were here; the first time I saw you.\"\n\nMy thoughts drifted back. Brett had been in high school then, or just out. I smiled as I recalled his impish charms. \"You were quite the show off back then.\"\n\n\"Was I?\"\n\n\"You practically yelled 'Look at me!' as if John and I were your parents.\"\n\n\"I never said that.\"\n\n\"Not with your mouth, but your actions sure did. I recall you climbed the windmill for no reason except your father said it was dangerous. And that horse, what was his name?\"\n\n\"Wrangler.\"\n\n\"Yeah, him. You knew he was going to buck when I got on behind you, didn't you?\"\n\nBrett's head vibrated in a crisp shake. \"No; I'd never put you in danger like that.\"\n\nI grinned. \"If I recall, it was you that got hurt. I thought the ride was all part of the fun until we flew off.\"\n\nIn spite of my smile and playful tone, Brett's countenance remained stern. \"I'd never put you in danger. I'd never do anything to hurt you.\"\n\nI passed a sigh as I tongued my lips. \"No. I suppose not. I just didn't know you then, that's all. Didn't know much about horses either.\"\n\nThe shadows were long and getting longer, but I still saw Brett's eyes shift to the ground before he brought them back to me. \"Do you maybe figure you know me now?\"\n\nI smiled at what I thought to be a silly question. \"Well enough.\"\n\n\"Good. I wouldn't want you to be thinkin' I would ever do anything to hurt you.\"\n\n\"I guess I already knew that. But you were a boy back then.\" I paused for a breath. \"And I was pretty young too.\"\n\n\"You still are.\"\n\nI issued a token snort. \"Doesn't feel like it. I used to see those movies where some woman whines about having given the best years of her life to a dead marriage. I always thought it was just some tear-jerking nonsense, until it happened to me.\"\n\n\"Maybe it didn't. How do you know the best years aren't just around the corner?\"\n\nI leaned my head toward a shrug. \"Doesn't seem likely. I was always looking forward to becoming a mother, but John and I never had money when we were younger. Later we weren't getting along well enough that I thought a baby was a good idea.\"\n\nMy shoulders slumped with my spirits. \"I didn't really think about how much I was losing when John and I broke up. I mean, it was the right move, but starting over's so hard. And I do want children. Carol's newborn is such a darling. Makes me wish I'd had at least one of my own with John, in spite of how everything turned out.\"\n\n\"Yeah, Robert's a cute little cuss, for a nephew; but I've always wanted a girl myself.\"\n\n\"You? A girl? I thought men always wanted boys, to carry on the name and all.\"\n\nBrett shrugged. \"Shakespeare got it right about what a name means. But nothing he could say would ever do justice to how cute a little girl looks in overalls.\"\n\nMy mind flew back a decade. I glanced to the old barn, specifically the hayloft. \"I used to wear overalls.\"\n\n\"Yep,\" Brett said. \"You did.\" I glanced to him; his eyes were on the barn too. \n\n\"Well,\" I sighed. \"That was a long time ago. Girl or boy doesn't matter so much to me.\"\n\n\"You'll have one of each I predict. Care to make a wager on it?\"\n\n\"Maybe,\" I said with a nod. My eyes shifted to the fields, now much more grey than white. \"But not like a divorced mailroom clerk living paycheck to paycheck makes a nice catch in most men's eyes.\"\n\n\"No one has tried to pick you up? I find that hard to believe.\"\n\n\"Sure, I had a few guys make it known they were interested in filling John's void as soon as we split; but I knew what void they really had in mind.\" I snapped my focus back to my companion. \"Not exactly father material in my mind. What is it about men? They seem to think if a woman's been getting some she can't possibly do without.\"\n\nBrett flashed a broad grin. \"Beats me. But as pretty as you are, well, it's probably hard for most men not to at least give that some thought.\"\n\n\"Yeah, well, not like I want the kind of men that are just after sex anyway. And I'm not sure there are any other kind left. I think all the good ones in my age bracket are taken.\"\n\n\"Your age bracket? Why you're prettier now than the first time you stood on this porch.\"\n\nMy eyes fell as I absorbed his second attempt at flattery in as many minutes. \"That's nice of you to say, but...\"\n\n\"You know how rude that is?\"\n\nI issued a short gasp as I snapped my focus upward. \"What?\"\n\n\"Deflecting compliments. It says you don't put much stock in the other person's judgment.\"\n\nMy mouth fell. \"I didn't mean it that way!\"\n\n\"That's the way it comes across. Like I either don't know what I'm talking about or I'm lying.\"\n\n\"I didn't think that; I just didn't exactly, well, I know I'm not eighteen anymore, and I don't have tits the size of Kansas like Marian and...\"\n\n\"So you don't think I'm lying?\"\n\n\"No!\"\n\n\"And you do trust my judgment?\"\n\n\"Yes.\"\n\n\"Fine. You're beautiful\"\n\nI tongued my lips for a few seconds before replying, \"Ok. Thank you.\"\n\nBrett's smile returned as his head moved in a single exaggerated nod. \"You're welcome.\"\n\nI caught myself smiling back. I couldn't remember the last time anyone had said I was pretty without an obvious ulterior motive. And that included John. \"Tell me more,\" I whispered.\n\nBrett's eyebrows bounced upward at once. His hand rose as well, lifting my tresses from my shoulder. \"Your hair always reminds me of fresh hay shining in the sun. Your eyes, they're the color of the first buds of spring.\" His shifted his hand, bringing the back of the same finger to stroke my cheek. \"And your skin is so smooth and perfect, just like that sky behind you.\"\n\nI turned my head toward the tender pink glow that marked the point on the horizon where the sun had just set. I could not recall a finer compliment. As much as I suspected Brett's honesty, I still wanted to hear more. Spinning my shoulders to match my viewpoint, I leaned back until I felt the firmness of his chest against my back. \n\n\"My figure is rather plain, don't you think?\" I knew I was fishing for another compliment in a most unabashed fashion. What surprised me most was not that I did so, but how good it felt, and how anxious I was to hear his response.\n\n\"Why do you find the prairie beautiful?\"\n\nMy brow dropped as I twitched my clamped lips. That was not the sort of response I had anticipated. \"It doesn't pretend to be what it isn't,\" I said after several seconds. \"It's beautiful in simple ways that are easy to overlook because there's no one thing that stands out.\" I opened my mouth to continue, but stopped with my jaw hanging limp. I understood what he was getting at.\n\n\"Exactly,\" Brett whispered. \"It's an honest beauty, but it never gets old. You can look at it every morning and it's just as beautiful. Even when it changes, it's still lovely. It always will be.\"\n\nI turned to look at him. \"I thought you didn't find the prairie beautiful?\"\n\nHis head shook with the subtlest vibration. \"I wasn't talking about the prairie.\"\n\nMy eyes clouded a bit. I squeezed them once, stopping the tears that would have otherwise rolled down my cheeks. I began to wonder if Brett might have some ulterior motives after all. Then I realized it was more a case of hope than wonder, and squelched the notion. \"It is getting dark,\" I noted. \"I suppose we ought to get back inside. I don't want your folks to think I don't appreciate the invite.\"\n\n\"You worry too much. Everyone's glad you're here.\"\n\n\"Thank you,\" I said with a shallow nod. In spite of my expression of gratitude, I doubted his words as he held the door open for me. I doubted them even more as the evening progressed. \n\nBob insisted the men play pinochle, which left the four women to our own devices. As awkward as things had been earlier, they were worse now as Marian and I tried to interact in a civil manner. Not that I bore the woman any ill will; John was fair game when she had made her move. Still, the situation was uncomfortable at best and I used the fine dinner and long drive as an excuse to retire early.\n\nBut the drive had not been so long nor the meal so filling that I could soon find sleep. I tossed and turned for hours; reliving past experiences in the old house, and the farm. I focused on my memories involving Brett, analyzing them for any interest that may have been beyond brotherly. Plenty I found in my recollection to warrant such an opinion, but I kept telling myself it was but more wishful thinking. \n\nEvery once in a while a hoot or holler or burst of laugher would erupt from the living areas below. Imagining that the mood had picked up with my departure did not help my spirits. I began to weep as I grasped that this was probably the last night I would spend at the farm. I had not cried myself to sleep since I was a girl. Not even when John and I split had I done so, but that is exactly what I did on the most dismal Christmas Eve of my life. \n\nIn spite of the late hour at which I finally fell asleep, I was up with the sun. I dressed and headed downstairs. The smell of coffee greeted me as I topped the stairwell. I knew the lady of the house was already awake.\n\n\"Good morning, Mrs. Carr,\" I said as I entered the kitchen.\n\nThe woman looked up from the morning paper with a wry grin. \"Good morning to you, Mrs. Carr.\"\n\nMy body stiffened as I heard the name and realized she was correct. Yet I did not understand her meaning; she had never addressed me by my surname before. Something in her soft tone and continued smile convinced me that she meant for me to feel at home. It did not work.\n\n\"Coffee ready?\" I queried.\n\nThe woman glanced over her shoulder. \"Sure. Help yourself.\"\n\nI did, joining my hostess at the table a minute later.\n\n\"Vicki?\" I prompted.\n\nMrs. Carr dropped the newsprint just enough for our eyes to meet. \"Gina?\"\n\nShoulders tight and hands clasped within one another and my thighs, I leaned forward. \"I was thinking to leave a bit early if you don't think it would be rude.\"\n\nVicki tilted her head. \"I didn't think you needed to be back to work until Monday?\"\n\n\"I don't,\" I said. \"I just feel uncomfortable; like I'm in the way.\"\n\n\"You're not,\" the woman assured me at once. Then she moved the paper as if to continue reading it.\n\n\"It was really nice of your husband,\" I said in a rush, effectively halting the movement of the newsprint. \"Of Bob I mean, to invite me here; and I am ever grateful, but I don't think it was such a good idea as it maybe seemed at the time.\"\n\n\"When were you thinking to go?\" \n\n\"Now.\"\n\nVicki dropped the paper. She inhaled a deep breath, then released it over several seconds. I saw her throat flex once before she responded, \"At least stay for opening the gifts. I know there's at least one for you.\"\n\n\"I thought...\" I started, but never finished. My budget didn't allow for any gifts, so I'd specifically asked not to be the recipient of any. \"I mean I wasn't expecting anything.\"\n\n\"It's not much, just a little box. Do stay for it though.\"\n\n\"Ok,\" I agreed with a nod and a sigh.\n\n\"And for breakfast afterward?\"\n\n\"Maybe.\"\n\n\"I could use a hand, if you don't mind?\"\n\nI smiled at once. \"Ok, for breakfast too.\"\n\nVicki gave me a wink. \"Thanks.\"\n\n\"My pleasure,\" I assured her, though I was certain it was a lie.\n\nTo my relief, the unwrapping of the presents proceeded with most of the attention on the newborn Robert and his mother as they handed out gifts, allegedly together. I hoped the box that contained my present was small enough that it would get lost, but such was not the case.\n\nAs the pile beneath the tree dwindled, Carol fetched a tiny box near the trunk, turned, looked to me, and called, \"Gina!\" I felt my cheeks warm as the woman crawled through the mass of shredded paper toward me, the gift held before her.\n\n\"Thank you,\" I accepted the package, rolling it in my hands. There was no name on it other than mine. \"You shouldn't have,\" I offered to no one in particular. For what seemed like the first time in half an hour, the baby was silent. I could feel every eye upon me as I peeled the paper back to expose a small box. Within this, I found a small brass-colored key.\n\nMy brows dropped as I held aloft the worn and dirty piece of metal, trying to read the remnants of the letters that had once been stamped upon it. \"What is it?\" I muttered, more to myself than anyone else.",
        "\"Remember that old red tractor?\" Brett began. \"The little one you always used to like to drive around.\"\n\n\"Yeah?\" I replied with a brisk nod.\n\nBrett's face blossomed into a wide grin. \"Well, it's yours.\"\n\nI was stunned. Sure, I thought the old tractor was a gem and always loved driving the noisy little beast around the farm, but that Brett should give it to me defied my version of logic.\n\n\"The old Case?\" Bob growled to his son, snapping me from my daze. \"Why that was mine. And my father's before that. He gave that to me when I was young.\" \n\n\"Yep,\" Brett retorted. \"And as I recall you gave that to me on my sixteenth birthday.\"\n\n\"I did, but I always meant it to stay in...\" \n\nSilence followed. Everyone knew what the last two words of that sentence would have been. The old man's wide eyes wandered to me before returning to Brett. \"Well, it's yours son,\" he muttered. \"I gave it to you. Do what you want to with it.\"\n\nBrett's face was as bright as ever when he turned back to me. \"I just did.\"\n\nI shook my head two brisk pivots. \"No,\" I started, easing the hand that held the key toward Brett. \"You should keep it. It belongs...\"\n\nThe younger man snapped his head to and fro in much the same manner as I just had. \"Declining a gift is the same as declining a compliment.\"\n\nI gulped as everyone's focus returned to me. \"Ok,\" I started, pausing to tongue my lips, wondering if I only imagined I could hear my heart beating. \"But can I leave it here? I don't really have much place for it.\"\n\nBrett's brow bounced high. \"For when you come back? Sure!\"\n\nI breathed a sigh of relief, believing I had found a way out of the quandary. \"Yeah,\" I agreed. \"For when I come back.\" But I didn't intend to come back, or stay any longer than I had to. I figured the goose wouldn't mind if one less person ate its leftovers. That went double for the bacon and eggs.\n\nThe only person I thought might be offended was Mrs. Carr, and I followed her to the kitchen as soon as the gift exchange was complete.\n\n\"Vicki,\" I began the instant she and I were alone. \"That was sweet of Brett, but it was a disaster, like the rest of this holiday. And the longer I stay, the worse it'll be.\" I placed the old key on the table. \"I best get my real keys and be off.\" I turned, intent on gathering my belongings and doing just that, but a single word stopped me in my tracks.\n\n\"Child.\"\n\nWith a sigh, I turned. \"Yes?\"\n\n\"You reckon Brett's a pretty smart boy?\"\n\nI nodded my agreement. \"He was second in his class, yes?\"\n\n\"Yes. And you're a pretty smart girl too. Always have been.\"\n\nNice of you to say, I thought, but caught myself before I said it, opting for a simple \"Thank you\" instead.\n\n\"You're welcome,\" Vicki responded in a somber, even harsh, tone. \"But put you and Brett together and you ain't got the sense of two rocks the plow kicked up.\"\n\nI tilted my head as my brow fell. \"What?\"\n\n\"The coffee's long cold and the bacon's still in the fridge, but you best wake up and smell something, girl! Brett's been sweet on you since the day he laid eyes on you. Of course, he's a good enough boy to not move in on his brother's girl, but that ain't the case no more, is it? Now it's just that he's just too shy to come right out and tell you and you're to busy feeling sorry for yourself to notice.\"\n\nMy mouth fell, quivering for a couple of seconds before I recovered to speak. Even then, I didn't say much. \"Brett?\"\n\n\"Who you think insisted Bob invite you? Now I don't know how you feel or if you're even in condition where you ought be thinkin' about such things, but you best at least let Brett know your notion on the matter before you slink out of here.\"\n\nMy eyes fell to the floor and I kept them there as I tumbled the information over in my head.\n\n\"Well?\" Vicki at last prompted. \n\n\"He's not as shy as you think,\" I muttered with a nod. \"He's told me a couple times. It was me that was dumber than a whole pile of rocks.\"\n\n\"Whatever it is, at least tell him goodbye so's he won't be expectin' you back.\"\n\n\"Yeah,\" I agreed. \"I'll tell him how I feel.\"\n\n\"Thank you,\" Vicki whispered. \"And don't ever think you aren't welcome here. No matter what. Anytime.\"\n\n\"I'll never think that,\" I assured her. \"But I do need one thing to help me tell Brett how I feel.\"\n\n\"What's that?\"\n\nI beamed as my eyes welled. \"A pair of overalls.\"\n\nMy spirits souring to heights I had not known in years, I helped Vicki with breakfast, or at least I tried to. My mind was elsewhere and, in hindsight, I am sure I was more in the way that anything else.\n\nBreakfast was a blur. My mind raced ahead, hardly daring to believe what Vicki had told me. I glanced to Brett often. Each time I found his eyes on me, though he always moved them quickly away, adding weight to my newfound understanding that he had never thought of me as a sister.\n\nAfter we did the dishes, Vicki and I stole away to the attic and the many treasures there, including several pairs of well-used denim overalls. Though many sizes too large for me, I picked the dirtiest, most worn, pair and retired to my room. \n\nFifteen minutes and a shower later, I made my way downstairs, wearing the overalls, the heavy woolen overcoat, my shoes, and nothing else. There I found Brett assembling a little red wagon.\n\n\"You suppose Robert's going to pull that today?\" I asked.\n\nBrett snickered. \"I doubt he'll pull it before next Christmas.\"\n\n\"I was thinking to go try and start my tractor,\" I announced. \"Care to help me?\"\n\nThe edges of Brett's lips bounced up in sync with his brow. An instant later, the screwdriver slid from his hand. \"Sure, but it's tucked in the back corner of the barn. We'd have to move half the equipment to get it out.\"\n\n\"That's ok,\" I said with a shrug. \"I'd like to at least see it, even if we can't drive it. Maybe we could just start it?\"\n\n\"No problem,\" Brett said. \"C'mon.\"\n\nMy mind wandered as we walked without a word across the yard toward the older of the two barns. Since they built the newer barn, the Carrs no longer used the ancient structure to shelter livestock. The old building was essentially a huge shed, storing all manner of farm equipment.\n\nBrett fumbled through some containers on a workbench near the entry, selecting a plastic quart jug. \"Expect she might be a little low on oil,\" he noted before leading the way through the horde of larger tractors and other pieces of machinery until we at last reached the antique Case just where he had said it was, in the back corner.\n\n\"I shoulda thought to have brought a light,\" Brett muttered as he knelt next to the old machine.\n\n\"It's ok,\" I replied. \"Like you said, we can't very well drive it today anyway.\" My eyes drifted upward to the deteriorating loft. \"Remember when we played hide-n-seek that summer? When I stayed here while John was in boot camp.\"\n\nBrett's eyes joined mine. \"Yeah. You hid up there in the hay once.\"\n\nI edged closer and asked in a softer tone, \"Remember when you found me?\"\n\nBrett issued a pair of brisk nods as he returned his attention to the old engine. \"Yeah, I heard something, but I was just reaching into the hay.\"\n\n\"Did you mean to grab my breast?\"\n\nI could not help but grin as I watched the young man stiffen. \"I, uh,\" he stammered, looking up. \"No. I was just reaching for where I heard the noise.\"\n\nI knelt, so that my arm rubbed against his shoulder. \"If you didn't grab me on purpose, why didn't you let go?\"\n\nBrett's eyes wandered and his throat flexed. \"I didn't even know it was you. Or anyone.\"\n\n\"That why you kept feeling?\"\n\n\"Uh, yeah.\"\n\n\"Did you like it?\"\n\nBrett shook his head. \"No. I didn't know it was you until you stuck your head out. Even then I wasn't sure what I'd grabbed.\"\n\n\"So you figured it out afterwards?\"\n\n\"Yeah, I guess so. I'm sorry. I didn't mean to. I guess I should've said something then, but I was just a kid, you know. And I was embarrassed.\"\n\nI smiled. \"As I remember, you weren't a kid. But it's ok, we were acting like kids. And it was just an accident. I was just curious if you remembered, that's all.\"\n\n\"Oh ya,\" Brett muttered almost under his breath. \"I remember.\"\n\nI turned to the tractor. \"Can we at least start her today?\"\n\nBrett shrugged. \"I don't know. Hasn't been run in some time and it's pretty cold. It'll probably take awhile, if we can get her running at all.\" \n\n\"I don't mind. Do you have anything else you'd rather do?\"\n\nHe reached for the dipstick and pulled the slender metal blade from the engine. \"No. I guess not.\"\n\nAs quietly as I could, I stood and began to unfasten my overcoat. \"How's the oil?\"\n\nWithout looking up, Brett rubbed his fingers across the blade, then against one another. \"Full. A little thick, but not bad.\"\n\nThe coat hit the packed dirt behind me with a thump. Brett turned, then jumped as he saw me standing behind him.\n\n\"Are you sure you wouldn't rather do something else?\" I asked. \n\n\"What?\" Brett mumbled. The dipstick fell from his shaking fingers. His lips quivered for several seconds before he managed to stutter, \"Aren't you cold?\"\n\n\"Yes.\" I paused to bend over and blow a frosty breath toward him. \"I was thinking maybe you could warm me up?\"\n\nBrett's jaw fell and I heard him inhale a jagged breath through his gaping mouth. \"What did you have in mind?\"\n\n\"Maybe you could check my oil with your dipstick?\" With a grin, I stood upright and brought both palms flat across the exposed tops of my bosom. \"Or maybe you'd like to see if these feel the same when it's not an accident.\" With that, I issued a token squeeze to each breast, then thrust my hands through the shoulder straps and upward. The loose-fitting overalls slid from my body, bunching around my calves. \n\nBrett remained motionless, except for his eyes. These roamed all over my exposed body. Goose pimples formed on my flesh as I waited, but he did not move, except his eyes; and his throat once as he swallowed.\n\nI stepped out of the overalls and stood almost above him. \"Where's that country gentleman that ran his hands through my hair yesterday, telling me how beautiful I was?\" My hands found my hips. \"Of course, if you'd rather play with the tractor...\"\n\nBrett leapt to his feet. \"No!\" His hand started to reach out, then recoiled, forming two fists that shook before his abdomen. \"I mean, yes. I am interested. If you are, I mean?\"\n\nI tried not to laugh, but a chuckle escaped anyway. I grabbed his left hand with both of mine. \"Does it look like I'm interested?\" I brought his hand upward, splaying his fingers as I did so until I had pulled his palm to my bosom. \n\nI cast my eyes once to his before moving my focus back to his hand. Ever so slowly his textured fingers began to move over my skin; stroking, petting, caressing. \n\nSuddenly, Brett withdrew his hand as if he had been shocked. There, on my bosom, was a streak of dirt and grease. \"I'm sorry,\" he stammered. His hand flew to his jeans, scrubbing his palm against the denim.\n\nI grabbed his other hand and moved it to my left breast. \"I'm a country girl at heart,\" I whispered as his flesh again met mine. \"I'm not afraid of a little dirt.\"\n\nAll four eyes followed his fingers as they moved over the softness of my breast, leaving little black streaks as they worked ever deeper into my flesh. Soon his caressing turned to a fondling and my body began to move in time with his fingers.\n\n\"You like? I whispered, leaning toward him.\n\n\"Oh, yeah,\" Brett affirmed with a nod, his own form tilting my way.\n\n\"Me too,\" I said. I then put my mouth to better use.\n\nBrett's other hand returned to my bosom. He began squeezing both breasts in a rhythm that matched the motion of our lips as they slid against one another. My palms roamed his torso; grasping, feeling, and kneading the taut muscles of his chest. I had never thought of him as anything other than a younger brother, a boy. How wrong I had been.\n\n\"I lied,\" he whispered as our lips parted. \"I always knew that was your breast I grabbed in the hay.\"\n\nWrinkling the bridge of my nose I hissed a deliberate, \"I know.\"\n\nThis time he kissed me. I began to unbutton his flannel shirt. Pulling the tails from his pants, I went to work on his belt buckle. Soon his jeans were loose and I slipped a palm in to cradle his already rampant cock.\n\nIt was then, as I comprehended what we were about to do, that I was struck by an odd melancholy. I withdrew from the kiss to focus on his eyes. \n\n\"How long have you felt this way?\" I asked. \"About me, I mean.\"\n\nHe passed a single deep breath before replying, \"Always. I knew you were special that first day I saw you on the porch. I don't know how, but I did.\" His left hand moved from my breast to my face, his fingers petting my cheek. \"And I was right. You are.\"\n\n\"But...\" my eyes wandered as I paused to swallow. I forced my focus back to his face, steadying my gaze and my resolve. \"But you've been with other girls?\"\n\n\"Sure. But it never worked. I always thought of you. I've only ever loved you.\"\n\nThat's when I knew I wouldn't be back to work in the mailroom Monday. Or Tuesday. Or ever. Brett saw in me exactly what I saw in him; an honest person, plain, down to earth. Maybe even simple. He would never pretend to be anything more than what he was, yet he would never be anything less than exactly what I wanted.\n\n\"I love you too,\" I whispered. \"For longer than I've known.\"\n\nBrett pulled me to him, hugging me, combing my hair with his fingers.\n\nI sighed as I considered again my dilemma. Neither of us were virgins, but I so wanted us to be. He'd loved me for all those years, in the most honorable way imaginable. He was special too, and I wanted his first time with me to be something special as well.\n\nMy chest surged as a possibility blossomed within my brain. I caught my parted lips forming the naughtiest of smiles as I breathed through them. I moved my mouth as if to kiss him again, but shifted at the last moment and slid my cheek along the side of his face until my lips were near his ear.\n\n\"You need to shave,\" I noted in a whisper.\n\nHis breath warmed my ear as he replied, \"I do?\"\n\n\"Scrapes my tender skin. You don't mind shaving for me, do you?\"\n\n\"No. I'll shave for you. Would you shave for me?\"\n\nI managed to smile through a snicker. \"If that's what you want.\"\n\n\"Yeah, I think I might like that.\"\n\nMy smile blossomed. \"What about me? Can I have what I want?\"\n\n\"Sure.\" \n\nI had no doubt at that point that he spoke the truth; that either of us would do anything the other asked, or didn't ask. But I decided to ask just the same. \"Can I have anything I want?\"\n\n\"Name it.\"\n\nI leaned against him, my lips all but touching his ear. \"All these other girls you were with,\" I whispered. \"Did you ever fuck any of them in the ass?\" I felt his body shudder as my words registered. \n\nBrett tongued his lips as I moved again to face him. \"No,\" he said with a firm shake of his head. \"I've never done that.\"\n\nI wrinkled my nose. \"Me neither.\" \n\nIt was true. John had hinted a few times, but the idea had been beyond repulsive to me. I'd never even given it serious thought, so loathsome the concept had seemed. I moved closer, until his features were a blur and I could feel his breath on my lips. \"But I want to,\" I concluded. \"I want you to be first. I want your cock in my ass.\"\n\nI heard him swallow before he mouthed his reply. \"I don't want to hurt you.\"\n\nA broad smile seized my face. \"If it hurts, we'll never do it again. But we won't know until we try. You did say I could have anything I wanted, didn't you?\"\n\nBrett tongued his lips, then nodded. \"Ok. If that's really what you want.\"\n\nI leaned again to kiss him, whispering, \"It is,\" the instant before out lips met. \n\nMy hand was back in his pants as our mouths meshed against one another. This time, I grabbed rather than stroked his cock. Making a fist, I squeezed his hardness, trying to imagine what it would feel like buried in my bowels. I cannot say why something so repugnant suddenly seemed so right, but it did. I wanted him. My sphincter twitched in what I took to be anticipation.\n\nMy thumb found his crown, stroking his softness; each circle my digit made was faster and harder than the one before. Soon his cock was seeping and I rubbed his fluid over his flesh. \n\nUsing both hands, I peeled Brett's jeans away until his cock was free. I dropped to my knees, my lips clinging to his until they were forced to part. Shifting my focus down, my chest heaved with a massive breath as I beheld the sight before me. His cock stood proud, majestic, hard; all for me. All mine. His crown was flared wide, like a mushroom, or a helmet. \n\nI'd never enjoyed sucking cock before. I'd done it, mostly because I felt obliged. Now I wanted to. I wanted to feel his cock in my mouth, on my tongue. \n\nGrasping his shaft, I steadied it, then slipped my lips over his crown. At once, I sensed his flavor; subtle, salty, sour, masculine. My eyes closed as my tongue roamed the contours of his flesh. I sucked him like one of those bullet-shape Popsicle's, only this was so much better. \n\nBrett must have thought so too. His hands found my hair. Soon, he combed my tresses with his fingers, repeatedly whispering my name.\n\nMy tongue explored his crown; the velvety texture, the ridges, that soft spot under his pee hole that really made him squirm. I squirmed with him, sucking him harder, wanting more. His seepage became a steady flavor upon my tongue. I realized I wanted two things. I knew I'd have both, of course, but for now one would have to wait.\n\nWith reluctance, I slipped my lips from Brett's cock and cast my eyes upward. \"Are you ready?\"\n\nHis head bobbed twice before he managed to gasp, \"Ok.\"\n\n\"Then get your pants off,\" I demanded.\n\nHis head bobbed again as he complied. \"Aren't we supposed to get some Vaseline or something?\"\n\n\"You get the pants,\" I insisted. \"I'll get the lube.\"\n\nBrett stepped out of his jeans and then looked back to me. With a devilish smile I held up the jug of oil he had brought for the tractor.\n\n\"Is that safe?\" he gasped.\n\n\"Probably not,\" I admitted as I poured a few ounces of the golden liquid onto my palm. My eyes locked on his, I moved my hand to his cock, rubbing the fluid along his length. \"But too late now.\" \n\nI bounced to where the overcoat lay. Assuming an all-fours stance, I looked over my shoulder. \"C'mon,\" I beckoned, wrinkling my nose in what I hoped was a wanton and enticing manner. \"Take my last cherry.\"\n\nBrett nodded as he eased forward and knelt behind me. \"I'm not sure what to do.\"\n\n\"Don't worry,\" I said. \"I know you'll never do anything to hurt me.\" With that, I turned and looked away. Putting my hands to my elbows, I leaned forward until my head rested on my forearms. I closed my eyes and waited. Sure, I knew he wouldn't intentionally hurt me, but that didn't mean it wouldn't hurt. \n\nFor a few seconds, I felt only the coolness of the air on my upturned ass. My sphincter twitched. My mind raced. Then both froze as I felt the softness of his crown at my entry. Squeezing my eyes closed, I tried to relax, to no avail.\n\nBrett leaned into me, then stopped, then leaned again. Each push was longer, harder than the last. For a minute or two this continued, with no noticeable change. Then I tried to imagine pushing, rather than relaxing, as if I was sitting on the toilet, doing my business. My sphincter loosened just a bit. I felt the tip of his head squeeze past the outer ring.\n\nI tried again on his next push, expecting to allow a little more in. Both rings surrendered in unison, allowing more than a little in. My eyes flew wide. I issued a low crisp grunt. It wasn't a tearing sensation like I had expected, more like a deep, sharp ache.\n\n\"Are you hurt?\" Brett gasped at once.\n\nI lied. \"No. It feels good. Just go slow.\"\n\nHe did. So did time. I closed my eyes and prayed. As my violated anus continued to scream its discontent, I promised myself over and over again that this was my last butt-fucking. ",
        "Then, almost as quickly as it had appeared, the pain subsided. Instead of the discomfort, I could feel my rings again, and Brett's cock sliding within them. At first there was something of a burning sensation, neither pleasant nor painful, just different.\n\nThis too passed quickly, replaced by a feeling not unlike a bowel movement; one that just kept going. It was odd, my brain trying to reconcile what the nerve endings were conveying versus what I knew to be happening. The experience was more than interesting. It was pleasant, in an odd, maybe even naughty way. My ass began to squirm, squeeze, and contract, as if trying to expel the invader. \n\nMy lover must have sensed the change. \"Are you ok?\"\n\n\"Yes,\" I insisted. \"It's good. Keep going. Just like that.\" This time it wasn't a lie. I became aware that my hips were in motion. I was fucking him back! \n\nKeeping my left forearm to the ground, I slipped my right hand beneath me. I began to rub my empty pussy, at first with long broad strokes. Soon I shifted my fingers to my clit. There I began a harsh, circular massage. \n\nBrett's excitement must have increased as well; the pace and force of his thrusting certainly did. After a half-minute or so, I started to experiment, alternately flexing my anus and my bowels. Finally I grew bold enough to squeeze hard and maintain the pressure. The sensations multiplied. I heard a sound emanate from my nasal cavity, something between a purr and a growl. Brett issued an elongated sigh and I understood that he relished the change as well.\n\nFor another handful of minutes, we squirmed, grunted, bumped, and moaned in unison. Then the fiery sensation began to return; my novice ass announced it had had enough. I realized I wasn't going to make it; my climax would have to wait until next time. Next time, I mused. A few minutes ago, I swore there wouldn't be a next time. Now I'm looking forward to it. \n\nThen my thoughts went to Brett. I looked over my shoulder. \"Are you close?\"\n\n\"Yeah,\" he gasped between breaths.\n\n\"Go for it,\" I urged. \"I love having your big cock in my ass. I love being ass-fucked. C'mon, give it to me. Let me feel you cum in my ass.\" \n\nI would have kept up the vulgar banter, but Brett plunged his cock deep into my bowels and left it buried there. The instant his cock was motionless, my anus ceased its protest. I again sensed my rings flexing. I closed my eyes as his warmth spread within me. Did I feel his cock throbbing within my ass or was it my muscles squeezing him? The pulsing continued for the better part of a minute, slowly subsiding until his spent cock rested peacefully within me.\n\nFor a minute or two we relaxed in that position. Then I felt Brett's hands begin to massage my buttocks. The next second he withdrew and, before I could move, planted a kiss on each of my cheeks. \n\nI spun and started to throw my arms around him, but I stopped and looked at him instead. His mouth was parted just so, not really a smile, something better than that. Even in the shadows of the old barn, I could see his eyes sparkling. His chest heaved as he breathed. \n\n\"I love you,\" he said just loud enough that I could hear it.\n\n\"I love you too,\" I acknowledged in the same soft tone.\n\nWithout another word, we stood and began to dress.\n\nI walked back across the yard hand-in-hand with Brett, not caring whether it was semen or thirty-weight oozing down my thigh. We walked in silence, stealing glances at one another as if to confirm that not only what we had shared was real, but that what we would share was real.\n\nWithout a word, I steered Brett for the backdoor of the house, where I knew I would find Mrs. Carr in the kitchen. The older woman's face blossomed the instant she saw me. I suspect the look on my own face must have said more than words could have. \n\nLids fluttering over my moist eyes, I rushed to her, bringing my lips to her ear as we embraced. \"Thanks, Mom,\" I whispered.\n\nThe woman gave me another squeeze, then a wink as we parted. \"You're welcome, Mrs. Carr.\"\n\nStill beaming, I grabbed Brett's hand and led him from the kitchen.\n\n\"What was that about?\" he asked as soon as we had cleared his mother's earshot.\n\n\"Just thanking her for reminding me who I was.\" \n\n\"And who is that?\"\n\nI stopped as I reached the bottom of the stairwell, mounting the first step so as to bring my face level with his. \"Why, I'm Mrs. Carr. Unless you'd prefer I wasn't.\"\n\nNo!\" Brett's head vibrated in a resolute shake. \"You can be whoever you want.\"\n\nI smiled as I comprehended the sublime accuracy in his words. Neither of us would ever again need to be anyone other than who we were. We'd spend the rest of our days enjoying just being ourselves. \n\nMy smile broadened as I considered all we could enjoy just being ourselves. I leaned over and blew a gentle breath into Brett's ear. \"So,\" I whispered. \"You ever cum in a girl's mouth?\"\n\nHe shuddered again, just like when I asked if he'd had anal sex. \"No,\" he admitted. \"I've never done that.\"\n\n\"Well, you're about to,\" I announced in the same soft tone. \"Just as soon as I wash your dick.\" I grabbed my man by his hand and lead him toward the bath.\n\n* * *\n\nThat was six months, almost to the day. At dusk, I often view the fields from the porch of the old farmhouse. It's something of a ritual for me. The prairie is green now instead of grey, filled with mosquitoes and ticks instead of ice and snow. And I still love it. The land is honest, like the people that live there. I catch myself smiling as my eyes wander the same landscape and Brett whispers the same sweet nothings in my ear. I'm not sure I've ever stopped smiling.\n\nI've all the reason anyone ever had to smile. I'll get married in the old barn tomorrow, wearing overalls instead of a dress. We'll have the reception there too. Square dancing instead of that ballroom stuff. The main course will be goose, naturally. And when my groom and I depart, the tin cans and streamers will not be attached to some rented limo. \n\nWe'll leave on a little red tractor. It doesn't go fast, but we don't have to go far; only across the yard. A yard our children will play on someday. Someday soon.\n\nBut that's the future. Just now I feel a little tingling, a special little itch that needs to be scratched just so, and I know the special person who's going to scratch it. And when I snuggle against his warmth later tonight, I'll smile myself to sleep. Exactly as I did on the most joyful Christmas of my life; and every night since.\n\nTHE END \n\nCopyright 2004 by Penelope Street\n\nPosted with permission at Literotica.com\n\nAll other rights reserved. "
    ],
    "authorname": "Penelope Street",
    "tags": [
        "tongued lips",
        "dad invited",
        "focus back",
        "back paused",
        "brett pulled",
        "back figure",
        "paused breath",
        "brett face",
        "put danger",
        "brett hand"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/my-once-and-future-kin"
}