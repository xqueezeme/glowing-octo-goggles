{
    "title": "What The Cat Dragged In Ch. 17",
    "pages": [
        "Hi everyone :)\n\nGlad to see you're all still here, still reading and still commenting! I know i love writing this story and i'm so glad you enjoy reading it.\n\nAmy\n\n17. How You Remind Me\n\nA sound tugged at Kelly's consciousness. It wasn't a loud sound, but even in her drugged state she knew something was different. The music that Victor always had playing while he drove wasn't present, but a deep thrumming was. It seemed to come from under her head and all around her at the same time. It was an undertone to the fragments of dream images that cascaded through her head.\n\nThe drug kept her mostly unconscious, but her body still struggled for comfort and her mind still struggled for wakefulness. If it weren't for the numbing white noise and the warmth that surrounded her, she might have succeeded in forcing the effect of the drug away.\n\n*~*~*~*~*~*\n\nCreed had bought the warehouse when he found himself spending more time in the Midwest. It was in the years between the strict usefulness of such buildings, and time when the cavernous brick structures were being converted to trendy lofts, galleries and clubs. He'd picked the place up for a song and pretty much worked his ass off over the next few months to make it livable. If anybody had asked, and if he'd chosen to answer, he might have made some excuse about money or not wanting anybody else pawing through his shit. The truth was, he liked doing something with his hands in a way that didn't involve his claws. \n\nIt reminded him of the time before. Before he'd gotten lost in all the wars. Before he'd become saturated in the blood and shit of an uncounted number of nameless victims. Before the animal in him had driven the man into hiding and driven Jimmy away. Before he became Victor Creed the monster, he'd wanted something normal. Course he had no fucking idea what 'normal' meant, but he knew it had something to do with having a place of his own and the freedom to feel the sun on his face whenever he wanted to.\n\nThrough the years he'd forced himself to forget about it. Told himself it was stupid and unformed and that it wouldn't satisfy his bloodlust or his rage. The houses he'd owned had been comfortable, built to suit him, and not places he could see himself living for any length of time. It'd reinforced the idea that anything 'normal' was permanently out of his reach. It'd made it easier to tell himself that he didn't really want it in the first place.\n\nThe weeks he'd spent with the frail had reminded him of that time before and had breathed tenuous life into that long-repressed dream, except now he wasn't alone in that deeply secret fantasy anymore. It was still stupid and probably impossible. He was in too fucking deep to get out completely and she was human. Along with all her other frailties that meant she would be an easy target for any of the enemies he'd made over the years. Still, the sweetness of her lingering scent teased him toward that walled off place inside his head.\n\nHe'd never tell her. She'd think he was out of his fucking mind. Besides, he had too much shit going on now to indulge in some kind of dumbass fantasy.\n\nHe slowed down on his way through the city, wanting to make sure that the car following him saw exactly where he went. Once he reached the distressed-looking red brick building he typed in a code and the ground level garage door opened. It was the only way into the building from the street. Once the door closed behind him he changed the code for the outer door and placed his palm on the scanner to open the inner door. Conlon's car was there already. Conlon was waiting by the elevator, gun at his side. Creed rolled his eyes and pulled the trunk release lever.\n\n\"You piss with your dick in one hand and that thing in the other?\" Creed asked.\n\n\"Just wanted to be sure you were alone.\"\n\n\"Think I would've come in if I wasn't?\" \n\n\"No.\" Conlon admitted. \"Guess it's habit.\"\n\n\"Well break it. No wonder the frail's fucking so nervous around you.\" When he opened the trunk, the stench of anxiety was almost enough to make his eyes water. He turned his head away until the majority of the scent dissipated into the gray, harshly-lit room. \n\nHe turned back again to find the frail was still clutching his shirt, but the blanket was mostly off of her. Her shoes were off as well. The blanket might have shifted with the motion of the car, though he thought he'd been careful to tuck it in around her. Her shoes were another matter. \n\nOne of the other reasons he'd chosen Hypnocyn was the fact that it didn't produce sleep-walking and all that other crazy shit that Ambien and other drugs like it could. He wondered what else his research had gotten wrong as he carefully lifted her out of the trunk. She shifted in his arms so that she was pressing closer to his chest. At least she was still unconscious. According to his calculations, she should have at least another hour and a half of that extremely deep sleep, and two to three hours after that of a more normal sleep. He wasn't at all sure any of that was trustworthy though.\n\n\"You got the groceries I wanted?\" He asked Conlon quietly as they stepped onto the steel-paneled elevator. The other mutant entered a code and the elevator started to rise.\n\n\"Fridge and pantry are all stocked.\" He replied in an equally subdued voice.\n\n\"And what needed to be gotten rid of?\" \n\n\"No one'll ever find it.\"\n\nThe elevator stopped on the second floor and Conlon typed in a second code. A panel slid open and Conlon set his palm on the scanner. A moment later, they began their ascent again.\n\n\"They better not.\" The soft growl that laced the statement sent a little shiver through the frail. He held her closer in an instinctive gesture of protection. \"Bags?\"\n\n\"Inside the door.\" Conlon said.\n\nThe doors slid open and Creed stepped out. \"I'll call you when I'm ready to leave. Stay downstairs unless she calls you.\"\n\nConlon nodded and the door slid shut again. \n\nOnce they were alone, Creed set the frail down on one of the large sofas, taking care to set her on her uninjured shoulder. He turned on the gas fireplace. He hated the fucking thing. It smelled all wrong and he didn't think it got the damp out of the air the way a wood fire did. Still, he had to admit it was more convenient that hauling firewood through the city. \n\nHe watched the frail for a minute and when he was satisfied that she wasn't going to move, he went to take a shower. There was no trace of the whore's blood on his skin, but the scent of her body and her death was still on his clothes and it disgusted him. After he was cleaned up, he'd find himself something to eat. It occurred to him that this was the first time he'd had to cook for himself since he'd found her. His meals appeared either on schedule or on demand and almost always exactly the way he liked them. A little smile curled his lips as he walked into the bathroom. Fucking frail. Had him spoiled already.\n\n*~*~*~*~*~*\n\nKelly's eyes fluttered open, but her limbs still felt as if they were being held down by lead weights. Panic crested and then ebbed away as she realized it was nothing more than the result of prolonged deep sleep. She concentrated on waking up the rest of her body and tried to figure out where she was. When she looked down toward her feet she could see the fire moving, but it looked unnatural. The tumbled river stone surround was not as perfect as the one in the cabin. The imperfections made it more pleasing to the eye. \n\nThe wood floor had suffered years of distress, but had been polished anyway, turning the scars into something beautiful that stood out in sharp contrast to the pattern of the oriental rug immediately in front of the sofa. She scanned the room in front of her eyes slowly, and found most of the space to be in darkness. Even in the lack of light, she could tell that the room was enormous. She could see the dark shapes of oversized furniture arranged in clusters, she presumed to denote specific areas. She could just about make out a difference in the texture of the floor in the clusters and the spaces between them. She guessed that a rug tied each cluster together, giving the illusion of rooms without walls. She couldn't discern more detail than that though. \n\nSlowly her body started to respond and she turned over onto her back and rubbed at her eyes. The ceiling soared above her, making her head spin. She closed her eyes until the feeling went away. When she opened them again, she focused on the opposite end of the room where she could just make out the sinuous patterns of wrought iron railings around an elevated loft.\n\nThe sounds came through next, but it took Kelly some time to recognize them as the clink of utensils against a plate. She sat up slowly and set her feet on the floor. Victor was sitting at a breakfast counter, illuminated by a row of pendant lights. His back was to her. Seeing him there made her surroundings seem less important.\n\nKelly tried to get up, but the world spun around her again. She sat back down and took a deep breath. Her second try was more successful, though there was still a distinct feeling of disconnection from her body. Her knees trembled with each step so she moved slowly. The shift from carpeting to bare floor was too much for her tenuous balance to take and her knees buckled. If she hadn't caught herself against an ottoman she would have hit the floor hard. As it was, the sound drew Victor's attention.\n\n\"What the fuck-\" He was across the large room faster than she would have imagined. He grasped her elbow and lifted her enough so that she was sitting on the ottoman. He grabbed a handful of her hair and tilted her eyes up to his. Kelly's heart started to pound as he studied her eyes intently for a long moment. His eyebrows knitted together and he let go. \"You really are awake.\"\n\n\"Yeah, kind of.\" She managed a smile. \"Where are we?\"\n\n\"Chicago.\" He was still looking at her curiously.\n\n\"What?\" With each passing moment she was starting to feel more normal.\n\n\"I figured you'd be asleep for another couple of hours. You hungry?\" \n\nKelly hadn't thought of it until that moment. \"Yeah. Show me where the kitchen is.\"\n\n\"Sure, then I can watch you set the place on fire too. I'll make you some eggs and sausage. You gonna be able to get to the counter without falling?\"\n\n\"I think so.\" She got up again, this time her head didn't spin. \"Bathroom?\" \n\nHe started back toward the kitchen. \"Over there.\" He pointed to a door in the enclosed lower part of the loft. \n\n\"Thanks.\" Kelly walked slowly at first, but with each step she gained more confidence. By the time she came out again, the unbalance and weakness was gone completely. As she crossed the room she saw Victor still cooking her eggs. She hesitated at the edge of the tiled kitchen, amazed at how comfortable he looked.\n\n\"What?\" He didn't take his eyes off the scrambled eggs he was finishing.\n\nKelly blushed a little and smiled. \"It smells good.\"\n\nHe gave a derisive snort and put the eggs on a plate. \"You thought I couldn't cook?\" He set it on the counter, then put his arm around her waist and lifted, saving her from an awkward climb up onto the tall stool. He put the plate and utensils in front of her along with a glass of juice.\n\n\"I didn't say that. Just that I've never seen you do it. Well, except that first night.\" She took a bite of the eggs.\n\n\"That first night I could've fed you shit, you wouldn't have noticed.\" He put two sausage patties on her plate. She knew in his estimation they were overdone, but they were just how she liked them. \n\nShe smiled at him. \"Thanks.\"\n\nThe corner of his mouth twitched into a smile before he turned away. \"Don't get used to it, frail.\"\n\nHe sat down next to her and for a few minutes they ate in silence. As her hunger was satisfied though, she began to notice tension creeping into Victor's neck and shoulders. She bit back the questions that formed on her lips. She knew from experience that if she asked him what was wrong he'd tell her she was imagining things and she never would find out. Difficult as it was, she maintained the silence and kept her eyes on her plate. \n\n\"Told you I was gonna give Stan's goons a show.\" He wasn't looking at her.\n\nKelly chose her words carefully. \"Yes. Did you?\"\n\n\"Yeah. 'F it worked, people will think you're dead.\"\n\nKelly looked at him quickly. \"Won't they look for a body?\"\n\nSilence hung between them for a long moment. \"They've got one.\"\n\n\"But I'm not...\" The meaning of his statement broke though. She tried to hide the shudder that went through her body. \"That was screaming I heard.\" She murmured.\n\nHis head came up quickly. \"Heard when?\" His tone was harsh and demanding. Kelly dug her nails into her thigh to keep from flinching.\n\n\"I don't know when exactly. I was sleeping. There was someone screaming and it didn't seem like part of the dream I was having at the time.\" She didn't want to ask the next question, but she knew she had to. \"You-\"\n\n\"I did what I had to do!\" He turned away again. His shoulders hunched. \n\nKelly couldn't absorb the full impact of it all. Not yet. She stuck to the details that seemed farthest removed from her feelings. \"They'll know it's not me. Fingerprints, DNA...\"\n\n\"They gotta have your fingerprints to compare to first. Unless you got an arrest record you're keepin' quiet, your prints wouldn't be on file anyway. DNA,\" He glanced over at her. \"Let's just say I made sure it would be pretty goddamn difficult to find any.\"\n\nKelly nodded. Her head was starting to spin. She murmured something about wanting a shower, slid off the stool and retreated into the bathroom.\n\n*~*~*~*~*~*\n\nHe'd watched her start to shut down before, but he'd never seen it happen so fast. One thing he was sure of was that when she came out of it, she'd fucking hate him. She'd look at him like the animal that he was. She'd be disgusted. How could she feel anything else about a murderer? \n\nAnd why the fuck did he give a shit what she thought or felt in the first place? She was just a frail. She happened to belong to him and she would until he decided he was sick of her. She didn't really matter. He started repeating that to himself like a callous mantra as he got up and took a bottle of whiskey out of the cupboard. \n\nIntoxication was another kind of solace that was lost to him. He hoped that the burn of the alcohol would at least take his mind off the pain in his chest and that he would start to believe the words that were running on an endless loop in his head. \n\nHe opened the bottle and took a long drink. \n\n*~*~*~*~*~*\n\nKelly didn't know how long she'd been sitting on the floor of the shower while the water cascaded over her. She knew that when she first got in the water was hot enough to be painful to sit under and now she was shivering from the cold. However long the gradual switch from hot to cold took, it hadn't been long enough for her to get anything straight in her mind. \n\nShe knew exactly how she should feel. She should be horrified. She should feel some sense of guilt, since without her that woman, whoever she was, would still be alive. She should be afraid of Victor. If he'd killed a stranger so easily, what would he do to her if she upset him?\n\nNone of those feelings surfaced on their own. The only one she could muster in any way at all was a renewed nervous fear of Victor. Even that was more subdued than it had been in the beginning though, probably because she felt like she'd given him plenty of opportunities to be upset with her and she was still very much alive and \u2013 except for a few bruises \u2013 intact.\n\nThe longer she sat under that icy spray, the clearer it became to Kelly that she was glad to be alive and to have a chance at a more permanent kind of safety, no matter what the cost to a stranger. The idea that a more lasting safety was even possible for her was something she'd only recently allowed herself to entertain. She wasn't ready to start putting conditions on how that safety was won. \n\nSomeday, maybe Stan would be out of her life. Maybe then she would start to feel everything she couldn't feel now. Maybe she would still feel grateful to have lived long enough to have the opportunity for those feelings to come back. If the guilt and horror came then, she would deal with it. The act was already over and beyond her control anyway. Still, the lack of feeling gnawed at her. It was one of those other things she couldn't do anything about.\n\nKelly got up and turned off the water. She wrapped her hair in a dark blue towel and herself in a matching bath sheet. The large towel made her feel warmer already, but there was will the matter of clothing. She dried off and walked quietly out into the large space. The TV was on, but she couldn't see Victor anywhere. Usually that meant he was sprawled out on the floor. \n\nShe saw the shadowy shapes of their bags by what looked like an elevator door and started toward them.\n\n\"C'mere, frail.\"\n\nShe paused and looked out into the semi-dark space. \"I forgot to bring a change of clothes with me. Let me get dressed-\"\n\n\"Your hearing goin' bad? You need me to repeat myself?\" A growl gave a dangerous undertone to the questions.\n\nShe recognized the tone of the growl as worried annoyance. She shivered a little. \"No.\" She walked slowly toward the light of the TV. He had the volume so low that she couldn't hear it until she was right in front of it. She found him stretched out on the floor, his back resting against the sofa, an empty bottle of Jack Daniel's lay next to him.\n\n\"Was starting to think you'd drowned.\"\n\nKelly sat down next to him and hugged her knees. Her chin rested on top of them. \"Sorry.\" For a few minutes she watched the images flicker across the screen. \"Why don't I feel it?\"\n\nHe looked at her through narrowed eyes. \"Feel what?\"\n\n\"Guilt. It's my fault she's-\"\n\n\"Bullshit. You didn't have anything to do with it.\"\n\n\"If Stan hadn't been looking for me-\"\n\n\"How far back do you wanna go? If Dawes had killed you, Stan would have no reason to look for you. If Stan had managed to drive you out of your fucking mind, you'd be locked up someplace. If your mother had never met your father you wouldn't be here at all. Any of that sound good to you?\" The words were laced with anger. Kelly turned her head and saw none of that venom conveyed in his eyes.\n\nShe managed a little smile. \"No.\"\n\n\"Didn't think so.\" He grasped her upper arm and pulled her into his chest, she snuggled close. \"You're a survivor, and self-preservation is a fucking ugly business most of the time. Best to get used to that early on.\" He pulled the towel off of her hair and started drawing his claws through it, separating the wet strands. Kelly shivered and pressed closer. \"What the hell did you do? Sit in ice water?\"\n\n\"No, but I guess the shower got kind of cold at the end.\"\n\n\"Fucking understatement.\" He fell silent again, letting his fingers work through her hair. \"First time's the hardest, even if you ain't got a choice. After that you get used to it, figure out a way to separate yourself from it.\"\n\nThe feeling of his claws lightly scraping against her scalp made her tremble. \"I'm so sorry.\" Kelly murmured.\n\nHis hand paused. \"For what?\"\n\n\"Ever since you found me, I've done nothing but create turmoil-\"\n\nA short, sharp laugh shook his body. \"As opposed to how placid and serene my life usually is?\"\n\nKelly couldn't help but laugh a little. \"I just meant-\"\n\n\"You meant that you're letting yourself get all wrapped up in sentimental bullshit again.\" He wrapped a lock of her hair around a finger and tugged, forcing her to look up at him. \"What've I told you a hundred times?\"\n\nKelly blushed, a little smile touched her lips. \"That you protect what's yours.\"\n\n\"Fucking right.\" He let her lay her head down again. His fingers started drifting through her hair. Tension was starting to creep into his body. \"I'm leaving tomorrow.\"",
        "Kelly flinched back. \"But we just got here-\"\n\nHe pulled her against him again and held her there. \"Ain't like me to stay in one place very long. We were being followed by idiots, but I would bet there's someone higher up with more than two functioning brain cells. If that's the case, this place is still being watched. If I stay, it'll be a clue that something's up.\"\n\nKelly glanced around at the tall, wide windows. She could almost feel eyes on her. \"If you leave, they'll still see the place is occupied though. Who will they think is living here?\" She realized she was holding on tighter.\n\n\"Conlon'll be here. He's got 'em thinking he's some kind of double agent. Working for me, feeding them information. Made sure to set up a paper trail to show that he owns this place and has for a couple of years. You're gonna stay inside, but seeing him coming and going won't be any big deal.\"\n\n\"How did you-\"\n\n\"Computers. Any kind of record you want is on a fucking computer someplace. You've just gotta know how to find it and how to change it without leaving a trace.\"\n\nKelly looked up at him, a little smirk on her lips. \"Is that all?\"\n\n\"Pretty much.\" He shrugged a little, the quirk of a smile revealing the tip of one fang. \"Having someone on the payroll who knows how to do all that shit without asking questions is pretty goddamn useful too.\"\n\nKelly laughed softly and put her head back down again. The details of who this mysterious person was or where Victor was going when he left were really not something Kelly wanted to know anything about, so she didn't ask. His hand wandered down to the back of the towel she had wrapped around her body.\n\nHer fingers moved through the thick mat of hair on his chest. \"Is that why you have so many houses?\"\n\n\"What?\"\n\n\"The fact that you don't stay in one place long.\"\n\nClaws traced her bare shoulders. The gentle scraping warmed her chilly skin. A little shrug. \"Wanted places to go back to, but I'd get bored. I can be bored and make money at the same time when I'm working. 'Sides, in my line of work you need places to hide out from time to time.\" He picked up the bottle and started to turn it slowly, his eyes focused on the way the bottle caught the light.\n\nThe meaning was clear to Kelly, that she was simply another annoyance and when he got bored enough he would disappear from her life completely. The searing pain that idea caused was worse than anything physical he'd ever inflicted on her. It took her breath and sent cracks radiating through her tenuous confidence in herself and in the way she read him. She started to pull away from him, but he twisted his hand in her hair. Still, she squirmed, but he held her in place as if he'd merely been discussing the weather. Kelly reached up to untangle his hand from her hair. He held on tighter.\n\n\"Different now.\" His eyes were still on the slowly moving bottle. Kelly froze. \"Not so easy to just leave...\" He pulled her face against his chest.\n\nKelly slipped her arm around his waist, her lips brushed against his clavicle. The grip on her hair eased. He turned to face her, his eyes still not quite making contact.\n\n\"It's not easy to watch you go.\" Kelly whispered.\n\nHis eyes locked on hers. Curiosity, anger, incredulity and something softer flickered through them. He stroked her cheek with the backs of his fingers. She moved closer. He advanced at the same time. Both paused when their mouths were scant inches apart. The faint scent of alcohol was still on his breath. She took it into herself and felt the world contract with each inhalation. Before long, there was nothing left except the parts of the world that he created. His breath. The scent of his body. The warmth and texture of his skin. The way the barriers had shifted behind his eyes.\n\nHe advanced first. His lips brushed against hers with a tenderness that Kelly had never dared imagine. A tremor course through her. For a moment it seemed like he might pull away, but Kelly arched closer. Her tongue caressed his lips tentatively. A low purr emanated from his chest. His tongue met hers in a gentle sparring match that continued until they were both breathless. Still, his mouth stayed on hers, simply resting against it, as if breaking contact would break a spell. \n\n\"Yours.\" Kelly breathed.\n\n\"You mean that.\" The tint of surprise colored the statement.\n\nShe moved back just enough so that he could see her eyes. \"Yes, I do.\"\n\nFor what seemed like forever, he just looked at her. Kelly's heart started to pound. He grasped the back of her head and kissed her again, this time with familiar, hungry passion. Kelly surrendered, her hands wandering over his chest and down to the waistband of his sweats. He pulled the towel off of her. Her fingers wandered over his growing erection. Without warning, he pushed her away.\n\nHe growled. \"Not here.\" \n\nHe got up with swift grace, pulled Kelly to her feet. The towels were forgotten. So was the bottle and the television. As soon as they were up in the dark loft his familiar aggression was back. Kelly was unbalanced by the dark and the unfamiliar space. She kept her hands on Victor's chest, retreating as he advanced. His hands wandered over her arms and down her back, the light scratches he left only served to heighten the sensation of the moment. When the backs of her legs hit the bed, she sat down and he moved over her. Kelly lay back and arched up to his body.\n\nTheir coupling was swift and filled with a ferocious need. Need that he expressed with his growls and his claws as well as with his hips. Kelly felt his claws trailing fire over her arms and breasts. The contrast pushed her deeper into the fast-moving, all-consuming pleasure. Her hips met his with an intensity that revealed her passionate lust and need for intimate connection. When the building pleasure consumed her, she wrapped her legs around his waist and held tightly.\n\nNothing in the world mattered more than the connection between them. In those moments it was easy to believe that nothing ever would.\n\n*~*~*~*~*~*\n\nCreed watched the frail sleep. He was half-propped up against the headboard. She straddled his hips and had nodded off against his chest. One hand was tangled in her hair, the other followed the angle of her body, over her back, down over her thigh and back again. He wasn't sure how long they'd been sitting there, but dawn was starting to filter in to the large space. He reached out and tapped a button on the remote next to the bed. Hidden shades descended with a soft whirring sound. The frail shifted against him, but didn't wake. Surprising, considering how long she'd slept under the influence of the drug.\n\nStill, he wasn't going to complain. As long as she was asleep, he couldn't fuck it up. He knew as sure as he was sitting there that he was going to fuck it up. Maybe she'd figure out a way to live with it, even after her own crisis had passed. Probably not, but at least now there might be a slim chance. \n\nHe shifted her carefully. She whimpered and trembled, but lay down next to him. He purred softly until she settled again. \n\n*~*~*~*~*~*\n\n\"Frail, when you finish with those come over here.\" \n\nKelly laughed a little, but kept her eyes on the dinner dishes. \"Victor, I don't have a healing factor like you do.\" \n\nHe grinned. \"You got two weeks to recover. And why do you just assume that's what I want?\"\n\nShe shrugged a little and the wide neck of his t-shirt slipped over her shoulder. \"Well, you followed me into the shower this morning. The breakfast dishes sat until lunch. Lunch sat out half made for-\"\n\n\"Didn't see you complaining.\" He walked over to her and squeezed her bottom firmly. Kelly jumped a little. \n\nShe tried to suppress a smile and feign indifference. \"I might've been faking.\"\n\nHe laughed out loud and gave her nipple a playful pinch. \"You might be able to fake the sounds, but there's no way in hell you could fake the way your scent changes.\"\n\nKelly stepped back, a deep blush on her cheeks. She rarely thought about the way scent added depth to his world. \"You can tell when I...?\"\n\n\"Fuck yes.\" A fang-baring grin. \"Hurry up. I gotta get you set up in the security system before I go.\"\n\nKelly finished the last few dishes quickly and joined him at the computer workstation that occupied one of the spaces between the large windows. Even though he'd assured her that no one could see in, Kelly was still nervous about standing in front of the windows. Clearly, he didn't seem concerned so she stepped a little closer. On one of the three screens was a schematic of the apartment. He pointed to it.\n\n\"I changed out the windows last year. These have two layers of glass with a layer of nanoctystals between 'em. Left alone the crystals aren't organized so it looks like clear glass. In the presence of an electrical charge, the crystals line up. From the inside, it looks lightly tinted. From the outside it just looks black.\"\n\n\"Even if there are lights on in here?\" Kelly had noticed the slight tint, but had no idea that the glass was so special.\n\n\"Lights on, lights off, doesn't matter. The outer glass and inner glass are both bullet-proof. Not that it should matter, but I figured as long as I was replacing things I might as well cover all my bases.\" He pointed at the schematic. \"See how they're all showing up green?\"\n\n\"Yes.\"\n\n\"Means they all have power. During a power failure, they're hooked up to a generator that'll power all of them for seventy-two hours. If any are running on generator power, you'll see the ones affected turn yellow. If for some reason there's no power to 'em at all, they'll turn red and the shades'll come down automatically.\"\n\n\"How-\"\n\n\"The shade mechanism holds enough power to raise and lower them twice, even during a complete power failure. Put your hand on the scanner.\" He nodded to a piece of equipment with the outline of a hand on it. Kelly put her hand inside the line while he entered a few commands into the computer. A bar of light much like that found in a copier began to descend. \"The garage in the only way in from ground level. Conlon has the codes and since you're not going anyplace you shouldn't need them, but I don't want you trapped in here if this all turns to shit. To get to or from this level the system needs your palm print and your personal code in that order.\"\n\n\"What happens if-\"\n\n\"Just remember to do it in that order, and that's a last resort.\" The scanner beeped. \"Take your hand off and enter the six digit code you want.\"\n\nKelly typed in the first six numbers that came to mind. He wrote them on the list with the others. \n\n\"Conlon knows all the details, but that should get you through anything you need in an emergency.\"\n\nShe watched him typing commands quickly and waiting for the computer's responses. It all looked like gibberish to Kelly, but that wasn't really what was on her mind anyway. \"Conlon hates me, doesn't he?\"\n\nHe looked over his shoulder. \"What the fuck are you talking about now, frail?\"\n\n\"I broke his nose. I apologized, but-\"\n\nHe groaned. \"Maybe he does, maybe he doesn't. All that matters is that he's paid to make sure you stay safe and have what you need when I'm not here. If he fucks that up, he better make damn sure he gets himself killed in the process.\" He tapped a few more keys, turned and advanced on her.\n\nKelly retreated until her back hit the rough brick wall. \"Thought you had other things on your mind?\" She smiled and trailed her fingertips down over his bare chest to the waistband of his shorts.\n\n\"I did.\" He grinned. \"Now I got something else on my mind.\" He lifted the hem of her shirt. His grin widened when he saw she wasn't wearing panties.\n\n\"Still sore.\" Kelly knew her words didn't sound convincing, even though it was the truth. She moved her hands down over his thighs, her fingers barely teasing the sides of his hardening shaft.\n\nHe sniffed the air. \"Maybe so, but your still so wet for me.\" He lifted the shirt up higher. \"Take this off.\"\n\nShe pulled it over her head. One large hand found her right breast and squeezed roughly. Kelly's knees went weak. She did ache, but the intense need made her feel a different kind of ache. He bent down and rubbed the rough side of his tongue around her ear. \"I'm gonna fuck you, frail.\" He pinched her nipple hard enough to bring tears to her eyes. \"Either I'm gonna do it here, or you're gonna bend that sweet little ass of yours over that sofa.\" He bumped his head against hers so that she would look over at the big sofa she'd woken up on the night before. \n\nKelly already had raw spots on her back from an earlier encounter with the rough brick. \"Have to let me go so I can walk over there.\" One of her hands was tracing the contours of his thick erection, the other was on his wrist, trying to coax him to release her throbbing nipple.\n\nHe chuckled, increased the pressure for just a moment and then he let go. Kelly moved from between him and the wall and walked slowly across the open space. She heard him discard his shorts and follow her. Her knees trembled. Need and anxiety coursed through her veins in equal amounts. When she reach the sofa she stood frozen. Clawed fingers moved up from the small of her back to wrap around her shoulder. She shook her head slightly.\n\nHe stroked the back of her neck. \"Broken frail ain't no good to me.\" His voice was little more than a soft purr next to her ear. She heard the reassurance in the harsh words. \n\nKelly bent forward. He took his time, stroking her back, positioning himself, teasing her with sharp scratches and slow pressure. Kelly pressed back as much as she could. Finally he pushed inside her. Kelly whimpered sharply with each movement of his hips. Her inner muscles clenched as pleasure and ache mingled, fused and became inextricable from each other. She began to move with him, to encourage him. Claws bit into her hips as the intensity of his passion increased, driving Kelly deeper into pleasure. His hand was on her shoulder. She reached back and laced her fingers with his. Moments later, the pleasure consumed her.\n\n*~*~*~*~*~*\n\nCreed sat in the car. It was a little after midnight and he knew he should leave. The frail was pretty damn sore, but she'd been close to falling asleep again. Conlon was there. Leaving was the right thing to do. The only thing to do now. He turned the car on, and drove out. If anyone was watching, they'd see exactly what they expected to see. Him leaving...alone. He'd change vehicles when he was sure that no one was following him, but right now, he wanted them to watch. \n\nAt the first red light, he played with the mp3 player until he found the song he wanted. \"Wherever I May Roam\" by Metallica filled the quiet car. The words used to be true. Some of them still were. He turned it up to an almost painful level and forced himself to focus on his schedule of jobs.\n\n*~*~*~*~*~*\n\nKelly was always amazed at how many places Victor could make ache with an act that was usually so pleasurable. The raw spots on her back, a long scratch on her ribs and her bruised nipple were obvious. The place between her legs was obvious too, though she also hurt from her navel down and her knees up. One of these days she would have to ask how he managed that. If she ever got up the courage. For two days until the ache abated, Kelly relaxed in bed or on the sofa. She called her grandparents daily. Her grandmother still wouldn't speak to her. Her grandfather said that she needed 'more time'. Kelly wondered how much more time she would need.\n\nVictor called once in those two days. Kelly had learned to expect those conversations to be short and limited to superficial topics, but hearing his voice always made her day. \n\nConlon was another matter. She hadn't contacted him at all. Victor told her that he'd let Conlon know when he was leaving, but the other mutant would stay downstairs unless she called. For the first couple of days, it was easy to put off talking to him. She was sore and she had to get settled into the strange, cavernous space. From what Victor had told her, this was a temporary arrangement. Getting familiar with the place would serve to ease her anxiety and that had to take precedence over figuring out how to apologize.\n\nBy the third day, Kelly was glad that the apartment was a temporary location. It was nothing she could put her finger on exactly. At night, the space was so large that even with all the lights on there were pools of darkness throughout the downstairs. During the day, the tall, wide windows all made her feel as though she was being watched all the time. She knew it was silly. Victor would have never left her alone somewhere inherently unsafe. That didn't change her general feeling about the place.\n\nShe also knew that she was going to have to settle things with Conlon. She searched through the fridge and cabinets and put together a batch of fresh focaccia, and while that was rising, she started a pot of tortellini soup.\n\nWhile the soup simmered and the bread baked, she tried to figure out what to say to Conlon. Several times she picked up her phone, only to put it back down immediately. \"If I promise not to hit you, will you have lunch with me?\" \"So, you still have a nose, right?\" \"I bet you looked distinguished with a broken nose.\" It all sounded stupid. Finally, she picked up the phone and dialed.\n\n\"Conlon.\"\n\n\"Have you had lunch yet? I mean, this is Kelly...\"\n\nHe chuckled. \"I know. No, I haven't had lunch.\"\n\n\"Neither have I. I'm making soup. It should be ready in about twenty minutes.\"\n\n\"I'll be up in twenty.\" He said.\n\nKelly set the table and put a salad together. In exactly twenty minutes she heard a soft tone from somewhere. She paused, terrified that the windows weren't working how they were supposed to. A moment later the elevator door opened and Conlon stepped out. He looked at her.\n\n\"What's wrong? Am I early?\" He crossed the room. Concern was on his features and in her eyes.\n\n\"Does the elevator make a sound when it comes up here?\"\n\nHe looked at her curiously. \"There's a chime that lets you know someone is on the way. Why?\"\n\nKelly released the deep breath she hadn't realized she was holding. \"Victor must have forgotten to tell me about that. Please, sit.\" \n\nOver the meal, they made awkward small-talk about the food, how her visit was with her grandparents and a hundred other insignificant things. Silence grew between them.\n\n\"I'm so sorry about your nose,\" Kelly said quickly.\n\nConlon just looked at her for a moment and then he started to laugh. \"Is that why you're so nervous?\"\n\nShe looked away. \"It's not like I just go around hitting people. I appreciate you being here-\"\n\n\"It was just a broken nose.\" He shrugged. \"By the day after Mr. Creed got back you couldn't even tell anything happened.\"\n\n\"You have a healing factor too?\" The words were out before Kelly had a chance to think about whether or not it might be rude to ask.\n\nHe smiled a little, the emotion reached his eyes. \"Well, it's not as good as Mr. Creed's, but yeah. Makes my line of work easier. Besides, it wasn't the worst thing a client ever did to me.\"\n\n\"Really?\" Kelly was fascinated now.\n\n\"Yeah. Most of 'em aren't so bad. They think they're in danger so they hire me. Most of the time it's not as serious as they think, but that means all I have to do is be there and I get treated pretty well. The one before you was a pain.\"\n\n\"Why?\" Kelly asked. She took another piece of warm bread.\n\n\"Lots of things. Is there more iced tea?\"\n\n\"Yes. Sorry.\" She started to get up, but he stopped her. \n\n\"I'll get it. In the fridge?\"\n\n\"Yes.\" \n\n\"You want more?\" He pointed to her half-full glass.\n\n\"No, thanks.\" Kelly waited until he got back to the table, hoping that he would continue.\n\n\"She was about your age, but I think she must have dragged me to every trendy dance club and flea-infested dive in New York City. She drank like a fish and had to be the meanest drunk I've ever had the misfortune to encounter. I could have lived with all that if she hadn't expected me to kick out whatever guy she brought home that night. I got into more fights with random, half-naked guys in the six months I was there than on any other job I've ever had. Course what made it even more fun was that they were all under the influence of something. Half the time she'd be screaming and yelling, he'd be trying to hit me and I'd be asking myself what the heck I was doing in the middle of that mess.\"",
        "Kelly laughed a little. \"Why did she hire you? I mean, it sounds like she was more of a danger to herself than anything.\"\n\n\"She didn't hire me, her father did. Looking back on it, I think he did it so someone would keep an eye on her and he could stay out of it.\"\n\nKelly smiled a little. \"The way you describe her, it sounds like that girl I saw on the news the other day.\"\n\n\"Who was that?\" He asked.\n\n\"Some celebutant who was arrested for indecent exposure. I guess it was her fifth arrest in three months and they said alcohol 'may have been a factor'. Giada Bellafiore, I think her name was.\" Kelly thought for a minute. \"Or was that the designer who was on later?\" \n\nThe look that flickered across his face told her she was right the first time. \"NO!\" Kelly leaned forward.\n\n\"Yeah. That's not really her name, but that's her. I didn't think you followed stuff like that.\"\n\nKelly shrugged. \"I don't usually, but it was on CNN the other night when I was straightening things up. They said her father was some kind of mobster. I don't remember his name though.\"\n\nHe glanced at her, as if guaging whether or not he could trust her to keep silent. \"Paul Cavallo. I only met him once when he hired me though, so-\"\n\n\"I know that name.\" Kelly sat up straighter.\n\nConlon shrugged. \"Probably, he's all over the news every few months-\"\n\n\"No. Someone with that name came to visit Stan every so often.\"\n\nConlon sat forward in his chair. \"Did he have a nickname he asked Stan to use?\"\n\nKelly was overwhelmed by the memory of conversations echoing in darkness. It took her a moment to process the question and come up with the answer. \"No, I mean, he told Stan to call him Paulie C, I think. Is that a nickname though? It's probably just someone with the same name-\"\n\nConlon was on his feet. \"What did they talk about?\"\n\nThe whole thing terrified Kelly. She drew her knees up and hugged them. \"I-I don't know, it was all numbers and places.\"\n\nConlon pulled out his phone and dialed.\n\n*~*~*~*~*~*\n\nCreed was sprawled out on a sofa across from Senator John Kelland and his fat bitch of a wife. The couple were tied to dining room chairs and both were gagged whimpering. The bitch was bruised and bloodied. The senator looked better, except for the fact that he was pale and covered in his own puke. Both had been there long enough that they had pissed themselves. The fact that he had to go slow reminded him again of how much he hated political shit. Still, you know where enough government-sponsored bodies are buried and people tend to overlook other activities. He took a big bite of the steak he'd found in their freezer and prepared for himself. Both of them moaned at the same time.\n\n\"What's the matter, John-Boy?\" He took another bite and savored it. Neither had eaten in nearly twenty hours. \"Not a bad steak. Might've expected better from a guy like you, but I guess you don't like spending your own money so much.\" He took another bite.\n\nHis phone started to ring. The gagged couple started to whimper and whine and make whatever noise they could. He picked up the steak knife and casually sliced off the bitch's earlobe. She screamed into the gag.\n\n\"Keep it up, she loses the whole fucking ear.\" He said it with a smile and licked the blood from the blade. When they were silent again, he answered the phone. It was Conlon's number and he knew Conlon wouldn't call unless something was up.\n\n\"Creed.\"\n\n\"Paul Cavallo. She remembered.\"\n\n\"Motherfucker!\""
    ],
    "authorname": "psyche_b_mused",
    "tags": [
        "sabertooth",
        "kissing",
        "sex from behind",
        "pain",
        "mystery",
        "victor creed",
        "human"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/what-the-cat-dragged-in-ch-17"
}