{
    "title": "Zach the Coven on All Hollows Eve",
    "pages": [
        "Zach is invited to a coven party on Samhain and does his manly deeds\n\n*\n\nFrom previous stories you might know that a bicycle accident left me in a coma from a brain concussion. When I awoke I had a power or mind control ability that worked only with woman. I can center on specific sexual centers of their bodies or target specific thought centers to enhance feelings. I never force females but tap into their deep thoughts and bring those feelings to the surface. This story is just another of those bazaar occasions. I was a little out of character during this event; perhaps it was the potion?\n\nMy name is Zach and I have been wondering what I was gonna do for Halloween and what I was gonna dress as. Maybe I wouldn't even go out. Just then my door bell rang and after opening the door I had to sign for a FedEx package. I opened the package and right on top was a note.\n\n\"Oh yes you are going out! We will pick you up on All Hallows Eve. We can't trust you to ride your bike! LMAO! Wear your outfit my Celtic Warrior. Make sure you go commando as it requires! Love Kate, kisses! PS: don't forget the knife. You'll need it for the ritual.\"\n\nI took apart the wrapping and pulled out the fabric and shook it out. It was a kilt! A white blouse came next and under that were the socks, an ornate Celtic kilt pin and the sgian-dubh (\"black knife\") which slides into the top of the socks. I tried on the outfit and I looked like a character from Braveheart or Highlander. I changed out and put the outfit in the box and waited for Halloween.\n\nOn Halloween I dressed and waited for Kate. My phone buzzed and a text arrived, \"I'm out front.\" \n\nI walked outside and two women were standing by a car. As I approached I saw that Kate was dressed like a Celtic warrior. She had on a full leather outfit, skirt and bodice and knife hilts hanging off the belt. Her red hair was braided in two strands and lay across her leather jerkin covered breasts.\n\nTaking all that in I was drawn away to the other woman. She was dressed all in white and long white hair flowed across her shoulders and breasts. I realized it was Lydiya and I walked to her and knelt before her. \"Tugadh Solais\", \"My White Lady of the Light,\" I said reverently. She smiled widely pleased at my using an ancient title for her. \n\nLydiya laid her tiny hand on my head and parted her robe. I saw she was naked underneath. I looked at her white down coating her coral pussy lips. There was moisture sparkling each labia and her womanness was giving off a strong hypnotic scent. I wanted to lean forward and eat her peach right there in my driveway. \n\nLydiya laughed, (reading my thoughts), \"Not now Zach. Kiss your baby girl Zach,\" she whispered opening her robe further. \"Be very careful not to awaken her from her natal slumber.\" I leaned forward and kissed her tiny baby bump and rubbed my hands softly and carefully over my daughter's home for the next seven months.\n\n\"Ahem,\" I heard next to Lydiya. I turned and Kate had unbuckled her bodice and a larger bump was showing. \"Kiss your Gemini daughters Zach,\" she whispered. \"You are gonna ruin my figure when my twins push this tummy out and my ass grows big to compensate. This will be the last time I can wear this bodice as my tits will get twice as big.\"\n\nI caressed her tummy lovingly and ran kisses all over the bump. I looked upwards and Kate started laughing. \"You're such a dirty man Zach! I can read your lust for my soon to be swollen milk filled tits. Your twin daughters go first and you can have the left overs. That's all you deserve after knocking up me and my sisters then taking off,\" she laughed and Lydiya joined her while boosting her naked breasts with her hands.\n\n\"Come my warrior your coven sluts await your thick manly horsecock and your thick baby butter. Show me you are prepared,\" Kate ordered. I stood and lifted my kilt and my thick cock and heavy balls hung down naked there under. Both Kate and Lydiya put a soft hand on my cock and rubbed softly chanting in a language I did not understand. \"This is not for us tonight Zach but for my sister coven. Let us leave for they await with wet pussies anxious for this horsecock to ride them and fill them with baby cum.\" \n\nI sat shotgun while Kate drove the fast sports car and Lydiya sat behind me. We left the city and drove up to the small hills. A not quite full moon shone bright adding to the eeriness of this special night. In the straight-aways Kate would reach across the short space and slip her hand under my kilt. \n\nShe softly stroked my hard cock and played with the pre-cum leaking from my dickhead. When she had to pull her hand out she licked her palm. Lydiya softly asked for the next wet palm and Kate obliged but somewhat awkwardly twisting her hand backwards. \n\nWe drove up to a large fenced gate and Kate tapped in a code and the tall gates opened. I looked out and suddenly two large Irish wolfhounds flanked the car. Since the sports car was strung low to the ground the wolfhounds' flanks blocked looking out the side windows. I heard the windows go down and Lydiya was singing softly to the hounds and the one on her side licked her hand as the other did to Kate. I kept my hands inside!\n\nWe pulled up to a circular drive and a tall statuesque blonde in dark leather acted as the valet and with deference assisted Kate and Lydiya from the car. I was on my own. I got out and stood by the car and the two hounds came to me and growled. Kate spoke to them in that ancient language and they came to her. She pet them briskly and lovingly then we walked to the door of this large manor house.\n\nThe door opened before she could reach for the handle. Strong seductive scents emanated from within. There were several naked women moving about the grand hall. They had Mardi Gras masks on and their long hair of various colors flowed down their backs. They met flowing tails across their asses that could only be held one way! Their tails matched their hair so there were blonde, brunet and roan tails of various shade swinging about.\n\nThese pony girls were the carriers of food and drinks and the trays were carried about belly button height so their breasts and nipples got stroked as females in various Halloween costumes took food or drink. It reminded me quickly of the party scene from \"Eyes Wide Shut.\" I also realized I was the only male here tonight.\n\nKate and Lydiya escorted me through the party rooms one on each of my arms. In one doorway we stopped and I saw five woman dressed like Lydiya in flowing robes but in different colors. Looking closely I saw the color of the robes matched their hair color and a collar of bright red leather held the robe in place. They also had Marti Gras masks on and I wondered why Kate and Lydiya did not.\n\n\"We are unknown to everyone here but these five women are well known women of industry, science or academia. They are a sister coven and your breeding stock tonight and at the stroke of midnight you will begin to fuck them and drop your baby cum deep down their hot cunts,\" Kate intoned, \"Unless you want me to take you home, of course,\" she said laughing.\n\n\"Here drink this potion,\" she said taking a bottle from a pouch on her hip. \"It is safe and will strengthen your ability during tonight but will prevent you from climaxing until I give you the antidote. You are free to fuck any female who asks politely and formally and you are allowed to let your power leak into them to enhance their pleasure. The five women will not ask.\"\n\nI took the small glass blown bottle and looked it over. It looked very old like one you might find on a dusty antique store shelf. It had tiny runes circling the cobalt blue bottle and a tiny cork stopper.\n\nLydiya took the bottle and said, \"Let me help my Celtic Chieftain,\" and she pulled the stopper and poured the liquid across my tongue and I swallowed. A warmth enveloped me then centered in my crotch. My cock got strengthened and my balls felt heavier. Kate pushed me into the room and told me to go have some fun and they would be back for me around midnight. \n\nI sat in an overstuffed chair and observed my surroundings. A few of the costumed women would hook up and begin kissing deeply. One nurse and one pirate had their hands up under each other's short skirt. They each tucked the short skirt over each belt so it was obvious they wore no panties. It looked like it was a race to make each other cum first as wet fingers pumped through red puffy pussy lips. \n\nAlmost at the same time they brought their other hand to the other's clit and rubbed that button frantically. As they moaned and shook through their own orgasm they dropped to the floor and quickly moved into a sixty nine with the blonde nurse on top. Her ass shone in its wetness pointed towards me. An elf queen dropped to her knees behind the nurse and a fat strap-on came out from under her gossamer skirt.\n\nWithout a warm up the elf pushed her fat cock into the nurse's wet pussy and started pounding away. The blonde's face came up and she screamed, \"Fuck my cunt, fuck my wet slutty cunt. Pound my cunt with that fat cock! Oh DAMM I'm cumming!\" and she sprayed the face of the pirate girl under her.\n\nThe elf queen pulled out a dripping cock and flipped the two girls over. The pirate's ass was now pointing away from me so the elf moved behind her and plowed into that cunt. \"No, my ass mistress, do my ass! Punish my naughty ass tonight. Get that fat cock down my ass and show me no mercy!\" the dark haired pirate yelled. She then leaned down and sucked on the nurses wet cum covered pussy.\n\nThe elf queen saw me watching and smiled as she lined up her cock to the begging ass and pushed until she was all in. The pirate just moaned and kept eating that nurse pussy. The elf queen flipped the pirate skit up and started slapping that ass as she pounded that poor ass chute with that fat cock. She went all out then quickly all deep back in. This went on for some time until the pirate, the nurse and the elf screamed out their orgasms soaking their partner with hot pussy juice. They collapsed into a three way spoon hug and moaned on the floor.\n\nWith that show over the other females moved off into the other rooms. A long legged pony girl brought over a tray of hors d'\u0153uvre and bent her large tits down and said, \"Would Master like a bite?\" and wiggled her tits. I ran my fingers across her nipples and let my power flush her body. She moaned as I saw juices leak out of her pussy lips and drip down her thighs.\n\nShe put her tray on the lamp table and dropped to her knees. She lifted my kilt and asked me, \"Would Master like me to suck his fat long cock?\" and before I could answer my crotch disappeared under a curtain of blonde hair. My eight inch cock slid slowly into her mouth and kept going until my dickhead was massaged by her throat and her lips kissed my balls. She kept my cock in her warm wet mouth and tight throat for a long time.\n\nShe pulled off my cock and whispered, \"Master is supposed to pull my hair when I'm to start sucking his cock again. Otherwise I will obey and faint.\"\n\nShe slid me deep into her throat again and bathed my fat cock with her wet tongue. She took my hand to the back of her head and pushed until she kissed my balls with her lower lip. Her tongue slipped out and licked my ball sack. She balled my hand in her hair and pulled hard on it and slowly slid her lips up to my dickhead. She kissed my leaking cock slit and sucked up the copious pre-cum leaking out.\n\n\"Remove my shoes and socks and sit your wet pussy on my ankle,\" I growled. She did that and having no panties massaged my ankle with her very wet pussy lips. \"Make yourself cum on my foot while you suck my cock you slut wench,\" I ordered.\n\n\"Thank you Master,\" she moaned as she moved her swollen clit against my foot and swallowed my cock. She humped her pussy along my long foot and sucked my cock deep. She took my hand again and pushed her head till her lips kissed my groin and held me there deep. She moved her wet pussy lips hard and fast on my foot and ankle. I sensed she was close so I concentrated my power onto her clit and slowly moved her to the edge. \n\nI reached down and pulled on both her nipples and my power current flowed from her tits to her pussy and she moaned loudly on my cock and started shaking. I could feel hot liquid pulse onto my foot as I pulled and twisted her nipples. She slipped into the little death and my cock slipped from her mouth and she slowly slid to the floor at my feet. \n\nA roan haired beauty in a school girl's uniform now stood before me. It was obvious she was beyond eighteen but playing the little girl role to the hilt. \"May I bathe your cock with my warm wet pussy Master?\" she asked in a young girl's voice.\n\n\"What's your name little girl and are you old enough to ride a manly cock like this?\" I asked playing along.\n\n\"Oh yes Sir, I'm all grown up. I'm Brianne and I just turned eighteen and I'm gonna graduate high school soon. Daddy tells me he loves my grown up body each night when he bathes me,\" she played seductively.\n\n\"Well I'll know for sure if your tits are all grown out. So show me them sweet thing. Take all your top stuff off Brianne,\" I growled.\n\nShe kept her baby blue eyes focused on me. Slowly the jumper suspenders dropped from each shoulder. Next the buttons on her white school girl shirt were opened one by one and the tails pulled from her skirt. The shirt dropped off behind her back. By now a small crowd of women circled around her.\n\nShe had a lacy push up bra on with demi cups that let her hard nipples peak over the edge and barely contained her grapefruit sized tits. She put her hands under each breast and squeezed them together emphasizing her deep cleavage. Her thumbs played with each nipple causing them to swell outwards and for her to take in a deep hissing breath. \n\n\"See Master my titties are all grown up. The boys just love to play with them in the back seat of their car and the girls just won't leave them alone in the school shower,\" she said in a little girl's voice.\n\nShe slowly raised her jumper to reveal a shaved bare naked labia. She had just a small tuff of red hair decorating where her pussy lips joined together. She kept her jumper raised and spread her thighs apart. Her pussy lips parted and I could see her juices leaking from her pussy and making her inner thighs all wet. I watched closely and a large clit began to firm and rise out from between her pussy lips. She must have flexed her kegels because her clit pulsed several times.\n\n\"That's not an innocent school girl's bra Brianne. You don't even have the school regulation panties on under that jumper! What would your daddy do if he saw that you were wearing a bra like that and going to school with your coochie on display to all your teachers?\" I grilled her.\n\n\"Daddy is not supposed to see what I wear under my clothes but if he caught me he would spank me real hard naked across his knees,\" she pouted.\n\n\"Take that naughty bra off and drop that jumper and get over my knees,\" I growled. She reached behind her and popped the bra hooks. She held the cups in place while she pushed the straps off her shoulders. Then seductively she slowly let the cups holding those great tits fall away. She reached behind her and loudly the zipper slid down and the jumper dropped to her black and whites.\n\n\"Come over here you naughty school slut and get across my knees,\" I growled loudly to frighten her.\n\n\"Master your kilt will be all itchy on my tummy so I am gonna push it up before I lay down,\" she said as she reached under my kilt. \"Oh Master what is this huge thing you have under here. It feels like a hard club. Do you hit invaders over the head with this to knock them out when you are in a battle,\" she said in faking shock as she rode her tiny hand up and down my cock.\n\nShe pushed my kilt all the way up my thighs and my hard fat long cock rose up and came into view. Several women watching what was going on hissed out a breath.\n\n\"Oh Master this is so big and thick, my little fingers can't go all around. My daddy has a hairy tiny one and he makes me rub it when he is spanking me. Can I hold your big club while you spank me Master?\" she cooed while she gathered my copious pre-cum across her palm. She licked off my spunk slowly savoring the hot liquid. She didn't wait for an answer and slid across my lap. Her big tits stroked across my right thigh as she settled her tummy against my left. She reached under herself and brought her left hand back to my big balls and the base of my cock.\n\n\"Spank me Master. Spank me hard for being such a school girl slut. Spank me Daddy for being slutty under my uniform. Spank me Daddy for teasing my teachers with my bare coochie when I open my legs under the desk. Spank me Daddy for getting horny and letting the boys and girls play with my body and getting my coochie all wet. Spank me Daddy I'm so naughty and you have to teach me a hard lesson,\" she whimpered.\n\nShe had a great ass! The cheeks were firm and rode up high. She spread her thighs and her woman scent filled the air around us. My hand caressed each cheek and slowly ran down the cleft of her ass and across her darkstar. I dipped down across her wet pussy lips and gathered up her thick hot juices. I went back to her anus and lubed her back door and pushed a finger against her star and it slowly gave way to allow my finger to slide into her ass. \n\n\"Oh Master what are you doing back there? That's so nasty and dirty. Daddy tries to touch me there and I tell him to stop. But it feels real nice when you slid your finger in and out back there Master. Can you do more? Do you think your club would fit in there? Oh Master stop teasing me and spank my naughty ass,\" she moaned.\n\nWith the finger of one hand still in her ass I brought my other hand down hard on one ass cheek such there was a loud 'crack' sound that made some women in the room turn in our direction. I saw two of the special robed women enter the room and stand close by.\n\nI slid my finger out of her ass and started a smack, Smack, SMACK attack on each of her ass cheeks. She was moaning loudly but was also pushing her ass upwards to meet my swats. Slowly her ass was turning bright red. I turned my hand slightly and smacked hard against her pussy.\n\n\"More Master, more against my nasty coochie. Spank it hard Master!\" she begged. \n\nSo I alternated spanking her ass and her pussy for some time until my hands started to hurt. \"Brianne count these last ten for me you slut. I can feel your naughty pussy juice leaking across my thigh. So let's begin.\"\n\nI slapped her ass real hard and it pushed her ass up and made her pussy slide across my thigh. I could actually feel her swollen large clit ride my thigh.\n\n\"One,\" she moaned. \"Two,\" she hissed and so on up to ten. When I slapped her ass the hardest at number ten she started moaning loudly and started humping my thigh with her pussy. I gave into her lust and started slapping her pussy lips as hard as I could. Each time I made contact I let my power find its way to her fat clit. It felt to her like I was pulling on it each time.\n\n\"Oh fuck Master I'm cumming. Slap my cunt Master I'm cumming, I'm cumming.\" Then she said nothing for some time as I saw her back tense tightly and her thighs push against my leg. I started slapping her pussy and her warm juice was spraying my hand.\n\n\"OH FUCK, MASTER,\" she screamed and her pussy juice sprayed out onto the floor, pulse after pulse as she moaned through her very strong orgasm. She let out a deep breath then lay panting across my thighs. \n\n\"Anyone wanna clean this bitch up?\" I asked the crowd. \n\nA brunet in a cop uniform pushed forward and knelt behind Brianne's ass and started lapping up the flowing pussy juice. While she did that the cop wet my two fingers in her mouth and I moved them to Brianne's asshole and slowly pushed them in deep to my palm. Brianne moaned deeply as my fingers slid in and out her ass. The cop would spit pussy juice on my fingers each time she gathered a good mouthful. ",
        "The cop knelt backwards and Brianne pushed herself up. She quickly straddled my thighs and in one move sunk my eight inch fat cock fully up her cunt as she sank to my lap. She grabbed my face with her hands and kissed me deeply for some while all the time riding up and down on my cock.\n\n\"Cum in me Master. Drown my cunt with your cum,\" she begged. \n\n\"No Brianne, my cum is not for you tonight,\" I said as I looked over to the two robed women. \"You can turn around and slide your hot ass down on my fat cock and we can get cop lady to suck on your little penis,\" I growled as I twisted her fat nipples.\n\nShe slid off my cock and turned around. She backed up and placed my fat cockhead against her anus and slowly pushed down. I used my power to soften her anal ring so my dickhead easily pushed into her ass. Brianne moaned and rubbed her thick pussy juice on the exposed part of my cock and used that lube to sink the other six inches of my cock deep up her ass. \n\nShe breathed deeply then slowly rode up and down my cock. She pulled the hair of the brunet cop and pushed her face back against her pussy. I heard sucking noises as the cop latched onto Brianne's clit. The cop had to keep up as Brianne rode up and down my cock taking me deep each time.\n\nI took the hand of the woman to my right and pinched her fingers on Brianne's fat nipple. A woman on my left did the same on her own. A third woman dressed as a ghost straddled the cop's back and started kissing Brianne. I used my power to intensify all the lustful feeling she was experiencing as each place in her body was being serviced.\n\nBrianne was moaning loudly in the ghost's face as she maintained the lustful kiss. The cop and the ghost and the tit women had trouble hanging on as Brianne started riding my cock hard and fast so I poured my power all over her body and it centered on her anus, her fat clit and her nipples.\n\nBrianne screamed into the ghost's face and she sprayed the cop with hot thick pussy juice as her ass pulsed on my hard cock. Brianne shook through several intense orgasms as the cop would not let up on her clit. Brianne finally pushed the ghost and the cop out of the way and slid of my cock onto the floor. \n\nI pointed to the ghost and ordered her to clean my cock. She knelt between my thighs and started by licking my swollen balls clean of woman cum. She then softly licked up and down my hard cock cleaning it of pussy lube. She then moved up and took my cock between her warm lips and slowly sank my cock across her tongue to the back of her mouth. She took in a deep breath and pushed forward until my cockhead slipped into her tight throat. She swallowed a few times massaging my dickhead with her throat.\n\nShe slid out to my dickhead then slowly took my cock back into her mouth. I told her to rub her pussy and make herself cum while she sucked my cock.\n\n\"Yes Master,\" she whispered when she let my cock slip out. I watched her push up her ghost rags as one hand disappeared onto her pussy and began moving about. She went back to sucking my cock.\n\n\"Can you show me your breasts from under there?\" I asked softly. She used both hands to push up a gray sports bra and her nice sized tits came into view. \"Let me taste your fingers,\" I ordered. She moved her hand back under her rags then brought her moist fingers to my mouth and I sucked off her pussy honey. This went on for several minutes as she fed me her nectar and moaned on my cock. \n\nSuddenly her mouth tightened on my cock and she moaned loudly. I used my power to swell and intensify the feeling on her clit. Her hand moved rapidly under her rags and her body shook. She forgot my cock was deep into her throat and she finally fainted at my feet as her body shimmied through aftershocks. \n\nSomeone touched my shoulder and said, \"That was all very interesting and all, but it's time for the main event.\" I looked up and Kate was smiling at me. She helped me up and to step over Brianne, the cop, the ghost and the long legged blonde pony girl. \"You leave a lot of spent victims behind my Warrior,\" Lydiya laughed as she took my other arm.\n\nWe walked into a room off the main hall lit only by a roaring fire in the fireplace. There was a large long heavy wood table in the room but no chairs. A large grandfather clock in the room was just beginning to stroke midnight. The heavy doors were closed and latched cutting us off from the other party goers.\n\nThe five robed women that I was to breed lined up in front of me. They were women of industry, science or academia and kept their masks on to hide their identity. Kate reached into my sock and pulled out the sgian-dubh (\"black knife\"). \"Cut the lashing of their collar and their robes will drop away,\" she whispered then took up a chant in her ancient language. There were other women in the room who slowly removed their Halloween costumes until all save Kate were naked.\n\nThe first woman came forward and stood in front of me. I took the knife and it sharply cut through the leather and the bright blue robes fell. She was a statuesque blonde slightly taller then I. I could see her sea blue eyes sparkle behind her mask. Her breasts were large and swelled on her chest as it rose and fell with her deep breath. She seemed to be in her late thirties. Lydiya sprinkled a pungent liquid onto her breasts and tummy. Then Kate shocked me as she drew a sister knife and holding the blonde's left breast ran the blade above the nipple and blood began to leak out. The blonde did not move as Kate made a blood line just above the belly button and blood dripped down into the blonde pubic hair.\n\nA novice moved her off to stand facing the table. The next woman in silken yellow robes moved to face me. I cut the collar and the robes dropped off. She was slight and shorter than me. She had tiny a-cup breasts and her hair and pubes were black and shiny. Her skin tone and appearance made me think she was Asian. Again Lydiya anointed her breasts and tummy and Kate took her knife and made the ritualistic cuts. Her blood dripped as she was led away to stand before the table.\n\nThe third woman dressed in soft brown robes and long brunet hair stood before me. She was athletic with firm b-cup breasts and a tight abdomen. She was sprinkled, cut and led away.\n\nSo it was with the forth woman dressed in red. I cut away her collar and the robes slid softly to her feet. She shook her head and her bright red hair was tied in many braids some lying across her breasts. Her breasts were full and sat proudly on her chest. Lydiya anointed her and before Kate could move I reached up and took her left breast in my one hand and used the knife blade to push her braids aside. She stood proud and defiantly before me breathing deeply. She had some years on her maybe early forties. When I raised my knife I saw she already had two scars above her left nipple. \n\nI massaged her large breast and could sense it already held milk. I leaned down and took her swollen nipple into my mouth and began to suck. I was rewarded with warm sweet milk that flowed across my tongue and slid down my throat. I stayed on that breast for some time then moved to the right one. The latched on nipple also gave up its sweet nectar. Using my power I bathed her body with a feeling of contentment and motherly feeling.\n\nWhen both breasts were empty I looked deeply into her green eyes. I took her heavy left breast into my left palm. I ran my blade tip higher up above her nipple to join the other two scars and blood ran down across her nipple. She did not move but challenged me with her eyes. I held onto her breast as I gave a third cut along her muffin tummy. I kissed her bloody breast and she whispered, \"It is done!\" and moved her hand on top of mine holding her breast and gave it a hard squeeze. She let the novice lead her quietly away to stand before the table.\n\nThe fifth woman was dressed in black robes which set off her back and gray long hair. I thought to myself that there is an older professor at my college that teaches that 101 anthropology required course. I think she is the dean of that program, Mrs. Petterson, Margaret Petterson.\n\nIn going to cut off her collar she moved and I slightly nicked her throat and it began to bleed. She brought her fingers under her chin and when she found blood there she shocked me by licking it off. She did it several times and the last time painted my cheek with her blood and laughed behind her mask.\n\nWhen her robes fell her breasts and chest came into view. She had various runes scared into her right breast and cobalt blue tattoos across her chest. She had like a Wiccan dream catcher or mandala tattoo on her belly. Her breasts were huge and had lost their tightness. After Lydiya had sprinkled her breast and tummy she grabbed my hand. \n\n\"This will be my only child so you mark me good Master. Cut me deep and leave a big scar. I want my daughter to know the story behind her conception and your scars will be there to remind her of this special breeding.\" \n\nI looked over at Kate and she nodded the ok. She took up a strong chant and the other women of that coven gathered around us and linked hands and started joining in on the chant. Any other time I would have been happy to see many swaying breasts and naked bodies of various shapes and sizes and to breathe in the scent of their dripping pussies. But this felt different, more solemn.\n\nI took the fifth woman's large left breast into my hand and brought the knife point up to her nipple. I squeezed hard on her breast as I ran the knife blade in a long arc across her breast above her nipple. The cut bled profusely and ran down her breast to drip onto her stomach. I ran the knife blade full across her tummy above the belly button and blood ran into her black and gray pubic hair.\n\nBeing in pre-med I knew the cuts were not deep and would not need stitches but they would leave a visible scar. She looked down to see the dripping blood and whispered, \"Thank you Master,\" as she was lead away to the table.\n\nI wondered what role the table would play in tonight's Samhain ritual but did not have to wait long. The five women were evenly spaced down the table as a naked novice went down the line spreading their legs apart. Another novice then buckled their ankles to a long bar preventing them from closing their legs. Walking behind them I could smell their essence leaking from their womanhood.\n\n\"Master, come on this side of the table,\" Kate instructed. \"You are to pull on their hair until they lay their body across the table and give you their hands to stretch out to the other side.\" Kate then began to chant again and the sisters joined in.\n\nI went first to the blonde who had her hair pulled forward laying in her hands. I grabbed her hair and pulled and she laid her tummy and breasts flat on the table and stretched her arms to the edge. There a novice handcuffed her to chains which when tightened held her fast to the table.\n\nBefore I took hold of the Asian woman I saw the table had many red stains going down the table and realized this was not the first such ritual. The Asian woman and the brunet willingly let me stretch them across the table and be handcuffed by the novice. \n\nWhen I came to the redhead in braids she had her arms folded across her breasts. \"You must force me to obey. I yield to no man! I shall not submit,\" she said in a strong voice.\n\nI looked at Kate for help and guidance. She took me to the other side of the room and opened a large armoire. She reached in and drew forth a flogger. She handed it to me and said with conviction, \"Show no mercy!\"\n\nI had a shocked look on my face so Kate moved up into my face and hissed, \"Show her you are her Master. Explain to her with this flogger if she does not obey she does not get bred and wears her scars with shame. And if you do not break this mare you are no cocksman and we have made a big mistake with you.\" Then she pushed me towards the back of the table.\n\nI stood behind 'red' and touched my hand to her spine. She flinched and that opened a link for me to use my powers to read her. She is an owner and CEO of a growing corporation and could not let the women in the room just see her yield and lay across the table. She wanted me to disciple her and push her to her own breaking point. Then she would yield.\n\nI stood to the left of 'reds' ass and swung the flogger hard across her ass and back of her thighs. She held firm and did not cry out. The flogger tails landed hard on her ass again. She flinched but did not give in. Five more hard swats landed on her ass and delicate thighs quickly and purposely. She began to whimper.\n\n\"I am your Master here tonight. I am your breeder and hold within me the potency that will produce within you a daughter who will possess extraordinary power. If you do not yield you will not be bred and the scars I laid upon you will be worn with shame,\" I growled and pulled her braids back arching her back for all it would take. \n\nI stood then directly behind her. Her ankles were buckled to the long bar keeping her legs wide open. I jumped up on the table and pulled her braids forward and she had to lean over the table to ease the pain. I straddled her and sat backwards on her shoulders slowly using my weight to force her tits to the table. She tried to buck me off the table so I rode the bitch until she tired.\n\nTo own her completely I swung the flogger down her ass and the tails slapped against her undefended pussy lips. I whipped her pussy a total of five times hard on without stopping. When I stopped 'red' was sobbing. \"Enough, I submit, I submit. I submit Master. I yield.\"\n\nI slid off the far side of the table and she did not try to rise. I pulled on her braids strongly and she extended her arms and allowed her wrists to be shackled by the novice.\n\nI moved around behind the fifth woman with the black and gray hair. I ran the flogger across her shoulders so some of the tails slipped across her left breast. I then slid the tails down her back and across her ass.\n\n\"What shall it be with you Margaret? Shall you yield or taste the whip?\" I whispered into her right ear so none could hear me say her name.\n\nWhispering she said, \"I yield Master Zach, but I must taste the leather across by back and across my ass and warm my pussy lips. I want it hard and strong. Do not hold back. But first you must carve a small 'Z' on my left ass cheek with the sacred knife as you carved my breast and tummy. I want your mark on me; I want you to spill my blood, claiming my body as yours until the day I die.\"\n\nMargaret then lay across the table and allowed her wrists to be bound. I walked to the small table and picked up the sgian-dubh and with its sharp point wrote a 'Z' into her ass flesh and threw the knife into the table just beyond her nose so she could stare at it. A few of the coven sisters drew in a sharp breath but went silent as I lay the first leather hard across her back.\n\nNext her fleshy ass received a lashing. I stood to her side and the back of her thick thighs felt the tails. Taking careful aim I slapped upwards against her pussy lips. I started the round-robin again and again loosing count until all of sweaty exposed flesh turned red. I softly caressed her back and ass with the wet tails and she said loud enough to be heard, \"Thank you Master.\"\n\nI looked across to Kate and her eyes held approval. I moved down the table and caressed 'reds' ass with my hand. She moaned softly. I went behind the third woman in line and swung a descending blow across her ass with the flogger. I waited then heard, \"Thank you Master.\" It was the same with the slight Asian woman.\n\nI moved behind the statuesque blonde and saw her sweet full ass for the first time. She was breathing hard and her thighs were shaking I don't know from fear or anticipation. From behind her I could see pussy juice running down her thighs and the floor by her ankles was wet.\n\nI leaned over and whispered, \"Shall I disciple you also blonde? Do you also want to feel the lash? Shall I warm your back and your ass with the flogger? Shall I run my hard thick cock up your pussy lips and into your ass, my Viking princess?\"\n\n\"Yes Master, all of that, Please,\" she whimpered and begged.\n\nI swung the flogger tails down hard on her perfect white ass. She moaned and whispered, \"More.\" Her ass and back got several more lashes then I took the hilt of the handle and ran it up her open pussy lips gathering her thick juices and pushed it against her winking ass hole. She moaned and tried to push her dark star further onto the handle. \n\nI slapped her ass with my hand and whispered, \"simmer down slut!\" and moved away.\n\nKate and Lydiya slowly undressed me and washed me down with the potion of herbs and spices. \"Drink this antidote. It will strengthen your sperm and invigorate your cock. We will chant a spell on you to control the discharge of your cum into each of the breeding mares. Each woman will receive three potent discharges from your cock then you are to move on. Your last woman will receive all of your pent up desire to cum and you may pleasure yourself with her until you are satisfied.\"\n\n\"You may fuck each woman in either hole but you must drive deep into her pussy when you get the urge to cum. Your spell will contain a word of power that will give you ecstasy but will also control each ejaculation. You may begin with the blonde.\"\n\nKate and Lydiya took hold of my cock and processed me around the table twice chanting in their secret language. My cock was surging harder as I circled the table and they stopped me behind the blonde. They ran my cock up and down between her dripping wet pussy lips then centered my cockhead against the hot doorway to her cunt. They let go and I lunged my cock down her cunt until my heavy balls kissed her ass.\n\n\"Oh fucking daaammm,\" she screamed out. \n\nAs I pounded the blonde's cunt I soon heard movement around the table. The chanting was picked up by each of the naked women in the room. Turning my head slightly I saw their naked bodies swaying to the chanting causing their breasts to rise and fall. Their nipples poked outward and stiffened. \n\nI was riding the blonde's pussy hard and deep driving my cock towards its orgasm. My plum sized balls began to pull up and tighten. The back of her tight cunt was rubbing my helmet and the crown of my cock. With intense pleasure my whole body stiffened and streams of my spunk shot out of my cock and coated the lips to her womb. But only three spurts of my cum left my dick and I collapsed on her sweaty back.\n\nI was still hard so I pulled out and centered my cockhead against her darkstar. I pushed hard and her warm back oven opened and took all my thick long cock down to my balls. She moaned and shimmied her ass against my balls. I let my power flow out through my cock to find her clit and with only several hard thrusts into her ass she screamed. And with that her ass tunnel pulsed strongly on my cock as she shook through a violent orgasm. \n\nHer cum flowed out her pussy and down her thighs to soak the floor by her shackled feet. I laid on her back again then bit her shoulder knowingly leaving a mark. Two naked novices helped me stand then bathed my hard cock with a scented potion and moved me behind the slight Asian woman. \n\n\"You are very tiny my shogun of industry. I shall not destroy your pussy with this monster that grows from my groin. I shall pleasure you then gift my strong baby cum to your womb and move on,\" I spoke to assure her while my hands roamed her small back and tiny ass.\n\nI took my cock in my hand and ran it up and down her pussy lips. She gave off a nice thick flow of her juices which coated my cock. I placed my cockhead directly on her clit knot and massaged that button while flowing my power to her nerve endings. She started to huff and moan and murmur in her Asian language. \n\nTrapped as she was she still moved her pussy around on my cockhead to bring about her own pleasure. When I thought she was close I moved off her clit and fed just my cockhead into the wet hot doorway of her pussy. She would moan loudly when her portal captured my helmet and I pushed in past the crown. She pushed her tiny ass backwards trying to capture more cock.",
        "I pulled out and lay my long cock along her ass crack and with two long fingers I massaged her clit. Her warm juices were coating my fingers so I brought them to her pussy and slowly slid them into her vagina. She moaned and babbled and shook her ass back and forth until my fingers bottomed out and my palm held her soaked pussy lips. I knew she was now very close to cumming so slid my fingers out and returned my cockhead to her clit. I stroked my cock rapidly over that button and her thighs tightened as she pushed off the floor. \n\nHer head lifted off the table in a silent scream as I poured my power onto her clit and she exploded into a powerful table shaking orgasm. Her warm cum shot out soaking my groin. I quickly pushed my cockhead into her pussy and in one punishing shove it kissed the door to her womb. My second orgasm took control and my hard cock pulsed my sperm against her womb. Her pussy pulsed on my hard cock milking the baby batter out of my balls.\n\nI put my hands on either side of her head to take my weight off her body but I kept my cock deep against her womb. I felt her head move and she kissed the hand close to her. I moved it towards her and she captured my thumb with her lips and sucked it into her warm mouth. Her tongue teased my thumb acting like it was my cock.\n\nWhen we calmed down I slid out of her pussy and stood up. This time one of the novices took my cock into her warm mouth and sucked it clean. She looked up at me with thankful eyes then sucked my cock clean from the thick base to the swollen head. She then dipped a silk clothe into the potion and washed my thighs and my balls. The power of the potion seeped into my nut sack and re-energized my desires. My balls felt warmed like applying menthol.\n\nI was through two women and I felt invigorated wanting more. I moved behind the brunet and ran my fingers across her labia and was gifted to warm thick heavily scented honey. \n\n\"Mate with me Master,\" she said with great need. \n\nWith my fingers I massaged her clit and leaked my power onto her excited nerves. I scooped her thick pussy juice that poured down into my palm and spread it all over her back and ass. I did this many times until the area around us smelled of her scent. I touched my fat cockhead to her darkstar and using my powers her anal ring opened to a wide 'O'. With one shove my cock claimed her ass as my heavy balls slapped her vulva.\n\nShe screamed over and over each time I rammed my cock down her ass. After some time of riding her ass hard I felt her ass chute begin to tighten around my long cock. I gave the huge orgasm she sought as her ass pulsed her pleasure. Suddenly I slid my cock out of her ass and with one shove I buried it down her pussy and knocked on her womb. She screamed and hissed and rubbed her tits on the table and began to match my thrusts into her cunt by pushing back her damaged ass. I knew I would not last long so I pounded away knocking my dickhead against the door to her womb. \n\nI slid my hand under us and found her clit. I turned on my power and heightened the pleasure center around her clit. With each deep thrust I squeezed her clit until I felt her pussy walls strangle my cock. She pushed back and the tip of my dick opened her womb as I shot strong ropes of my hot cum towards her egg waiting there. \n\nShe fainted and I slowly drew my cock out of her wet cunt. Leaning back the novice on my other side did the oral cleaning and then the anointing again. I realized 'red' was my next go. I leaned down across her whipped back and whispered so only she could tell.\n\n\"You were very brave my Red Maiden to endure your disciple to prove yourself worthy. You have bested all the women present and earned my respect. Do you wish me to make sweet love to you during your breeding or to destroy your ass and cunt with my huge cock?\"\n\n\"Sweetly Master, sweetly,\" the Red Maiden whispered. \"My daughter must start her life through tenderness and dare I say love?\" \n\n\"So mote it be!\" I replied.\n\nThe air in the room was pungent with spices and herbs and female essence. The chanting continued as the coven circled the table. The fire in the fireplace shone brightly and was reflected off the sweaty naked female bodies. The night of Samhain drew late. I waited with a feeling of strength building up strongly within me. My hard dick was stretched up my strong abs. \n\nI pushed my dick down then within the lips of her vulva. My cockhead rubbed her clit back and forth, round and round. I did this for several minutes until I felt her knees stiffen at my side. She slumped her chest upon the table and sprayed my groin with her heavy scented pussy juices as her orgasm took hold of her. When her breathing returned to normal she herself began to chant which was picked up the others in the coven.\n\n\"Corn and grain, corn and grain. All that falls shall rise again.\"\n\nI again rubbed my cock in her juices through her pussy lips and slowly sank my cock into her pussy until her ass was kissing my balls. My cockhead was against the hot lips of her womb. With only a slight movement of her hips to massage my sensitive cockhead she then fucked my cock with her hot wet pussy. As she humped my cock she chanted in the coven's ancient language. The coven sisters then circled me and placed their hands on my body. My power poured out of me and found each female's sexual essence center. They each used my powers for their own pleasure.\n\nIn my mind I made their clits swell and pussy juice pour out from between their lips. Each one used their other hand to rub their pussy and clit until each shattered into an intense orgasm. It was then that I realized that the woman under me was this coven's leader and had cum strongly and was milking my cock to an earth shattering orgasm. I drove my cock down into her pussy and pushed past the entrance to her womb. I shot jets of cum deep into the void of her womb. I felt as if my balls had released my sperm from deep within but did not now felt totally empty. I dropped onto her back with my arms beside her on the table and breathed heavily. The leader let one thought flow to me, \"Faelivrin.\" I realized she had given me her own secret name!\n\nThis time each of the sisters in this coven took turns cleaning me. Some licked my balls or my cock while others like felines licked my sweat from my torso and up my spine. Several dipped their fingers into the potion and applied it to my hard cock and swollen balls warming my groin and invigorating me again.\n\nI moved behind Margaret and slapped her ass hard. \"What shall it be old woman? Shall I punish your ass with my thick long cock? Shall I slam my cock deep down your cunt until my fat cockhead hits hard against your womb? Shall I flog your back to the rhythm of my cock thrusts? Shall I slap your ass and pinch your fat nipples?\" I growled at her.\n\n\"All of that Master! Punish my unworthy body. Give me pain and pleasure then explode your cum deep down my cunt then push that man bone down my ass. Slap your balls against my fat ass until I explode in orgasm. I wanna scream and mash my fat tits on this table and cum all over your thighs and the floor. I want my mind to be emptied of everything but pain and pleasure. Get to it Master, punish this unworthy slut!\" Margaret moaned.\n\nI climbed up on the table and sat on the table over Margaret's chained arms. I pulled her up by her hair and slid myself under. Holding her head up painfully by her hair I positioned my cockhead against her lips. I pushed her head down until my cock was embedded against the back of her mouth then pushed further until my cockhead was embraced by her warm throat.\n\nShe gagged on my cock leaking spittle down my balls breathing in quickly as she lifted up to my dickhead. I held her head lightly as she took over sucking my cock. I had the flogger in my hand and slapped it across her ass and pussy lips each time she didn't take my cockhead deep into her throat. I kept up this cock sucking for several minutes until I tired of that.\n\nI slipped out from under her and moved behind her ass. The flogger came down on her sweat coated back and her flabby ass until both were red and Margaret was moaning loudly. Her pussy honey was leaking down her thighs and pooling under her chained feet. I ran the tails along her pussy lips stirring her clit as they passed by.\n\nI took my cock in my other hand and ran it between her wet dripping pussy lips then going further upwards pushed my dickhead against her darkstar and pushed hard. Margaret's head came up in a scream as my cock invaded her ass. As I pushed full in I slapped the flogger along her back. She moaned and pushed her hips upwards to have her ass chute take all my long cock.\n\n\"More Master! Punish my ass with your fat long horsecock. Own my ass for your pleasure then breed me hard!\" she moaned.\n\nI rode her ass hard over and over as she moaned in words I did not understand. I realized the chanting by the coven was still going on as incense and herbs were being tossed into the fire. The air was getting heady. \n\nMy cock was still rock hard and the need to cum again as getting stronger and stronger. I pulled my cock out of her ass and quickly slammed down her pussy. I attacked Margaret's cunt with my cock pulling back to my cockhead then pounding away into her depths to knock on the door to her womb. \n\nMargaret added to the mating by pushing back towards me when I was thrusting in. I realized I was close to cumming and reached down Margaret's back and grabbed hands full of her black hair and pulled back hard. When her head was raised I lost control and bit down on her neck. I could taste her blood. My cock exploded with jet after jet of my hot animal cum. I felt like I fully emptied my balls of all the cum I had left. \n\nHer cunt clamped down on my cock locking my cock within her and milked me for all I had. Her kegel pussy muscles pulsed on my spewing cock pulling my baby juice from deep within my gonads. Margaret was my last mating for the night so I stayed deep within her hot oven and let my balls empty of any baby sauce I had left.\n\nThe two novices helped me stand and both cleaned my cock and balls. They kissed keeping my cockhead between their wet lips. Each took a ball sack to lick and suck into their warm mouth and bathed it with their wet tongue. I was then led over to a soft chair to regain my breath.\n\nAfter some time the novices moved behind each bred female and performed their cleaning orally. One by one the bred females were released and covered in red robes and led away. Only the red maiden looked back over her shoulder and kissed her lips at me then smiled broadly.\n\n\"Ok stud time to go home,\" Kate laughed at me. She and Lydiya helped me dress back into my costume. As I walked through the anteroom towards the door several women from the Halloween party pushed slips of paper into my hands or down my shirt. \"Looks like you'll be busy between now and Alban Arthen, the winter solstice, when we pick you up again,\" laughed Lydiya.\n\nThe tall blonde brought our car around and before I could slide into the car she kissed me deeply and slipped her note down my shirt. Before she shut the door the two wolfhounds came by for some affection of their own. As we drove away all I could think was this night was not what I had thought All Hallows Eve would be.\n\nEpilog: I saw several spring issue magazines and two of my bred females were on the cover with noticeable baby bumps. Margaret has requested several hook-ups and just loves being a submissive. I have to push her legs up wide to get past her baby bump. Can't wait for her milk to come in! "
    ],
    "authorname": "ZachDocEight",
    "tags": [
        "breeding",
        "anal",
        "flogging",
        "girl on girl",
        "witches",
        "breast milk",
        "spells"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/zach-the-coven-on-all-hollows-eve"
}