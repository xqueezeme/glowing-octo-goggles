{
    "title": "A Succubus Awakens Ch. 06",
    "pages": [
        "Here I will describe, to the best of my understanding, the physical traits observed in succubi. Much like Imps, their most defining feature are their horns. While their shape may vary between individuals, females tend to have larger horns with more curvature, and duller points, while males have smaller, sharper horns. This dichotomy holds true for their other bestial features as well. Females have longer talons, and thicker tails. Despite these differences, combat abilities seem to be matched between genders, and they demonstrate no discernable gender hierarchy. Further proof that they do not walk in God's light.\n\n<p align=\"right\">-Sir Arthur Thompson, The Demonic Archive</p>\n\nRecessed lights bathed the ceiling in a gradient from deep purple to gentle blue. Luxurious white sofas lined three of the walls in the small room. Dull, thumping vibrations were all that remained of the blaring music outside. The four of them sat around a polished black table. Gwen leaned forward, with both feet on the ground. Ready to act if needed. Across from her Mr. Fawn lounged with his arms stretched wide, resting one ankle on the other knee and watching her with a self assured smirk. He looked like a prince lounging on a throne.\n\nNestled into the crook of his arm was the woman she'd seen him enter with. She was older than Gwen had thought. Late thirties maybe? Hints of wrinkles had formed around the corners of her lips and the creases at the outer edges of her eyes. They only served to enhance her mature beauty. She wore her dark hair in a loose bun, with her bangs swept down her left side in careful curls. Her dark, form fitting dress showed off her curves and gave her an air of sophistication. A slit ran up the side, nearly to her hip, revealing a small tattoo on her tanned upper thigh. A perfect circle surrounding some kind of intricate glyph. Flowing lines flared outward at the circle's perimeter, mirrored on either side, intertwined to form shapes that reminded Gwen of wings. She gazed lovingly up at Mr. Fawn, resting a hand on his chest.\n\nFinally, the man who had entered on Mr. Fawn's other arm sat upright against the back wall with his arms crossed. He watched the woman and Mr. Fawn with hard eyes. He was the oldest, with flecks of grey throughout his hair. He had a clean cut look, and wore a business suit. It was well fitted, but plain. His left hand bore an identical tattoo.\n\nAfter Mr. Fawn had caught her, he'd led her, effortlessly, through the crowd to a dark stairway, tucked away in the back. A bouncer had nodded them through, and at some point the man had fallen in behind them. Upstairs, heads turned to follow them as Mr. Fawn marched her past the tables lining the balcony. Heavy black doors lined the back wall, leading to private rooms. They'd entered the last of them, to find the woman already waiting.\n\n\"So. Why is there a baby succubus attacking people in my club?\"\n\nAt the word 'succubus' both of the humans in the room turned their attention to her. The man frowned. The woman just watched curiously. Mr. Fawn's glowing purple eyes held her. Gwen considered her options. Amy could be on her way. If she wanted to prevent her from walking straight into a demon's lair she needed to leave as soon as possible. Running wouldn't work. The room was small enough that Mr. Fawn could easily grab her as she made for the door, and she already knew he was stronger than her. Seduction wasn't an option either. Even if her powers did work on other demons, it would be a two-way street. The idea of being subjected to the incubus' will if she lost that contest, the way she'd done to Laura, didn't hold much appeal. Better to keep things friendly. The truth then, at least as much of it was safe.\n\n\"I was following you. I've never met another...\"\n\n\"Demon?\" He finished for her.\n\nShe'd been afraid the term might be offensive. It was what Amy and her had been using, but now seemed like a bad time to make assumptions.\n\n\"Right. I was hoping to learn more about what's happening to me. I...apologize for any trouble Mr. Fawn. Those men were harassing me in the street. If I had known they worked for you I wouldn't have hurt them.\"\n\nThe apology tasted bitter. Deference had never come naturally to her, and her transformation hadn't helped. Gwen wasn't the one who started the fight, and the men deserved everything she'd done to them and more. But right now Amy's safety was her top priority, so she'd suck it up. As she spoke she took off Amy's bloodstained coat and bundled it in her lap.\n\n\"Oh, you misunderstand. Do whatever you like with them. They're just humans, I can always get more. Just don't do it here.\"\n\nGwen nodded. Sensing that he would continue, she stayed quiet.\n\n\"As for the other thing,\" He stood. The woman clung to him for a moment before pouting and letting go. He bent forward and extended a slender arm toward her with an open hand. \"Remy Fawn, owner of this fine establishment. Just Remy is fine.\"\n\n\"Gwen.\" Better not to share her surname. Hesitantly, she placed her hand in his. He held it softly and gave it a shake.\n\n\"And now you've met another demon.\" He let her go and rejoined the woman, who gave a contented sigh and took hold of his arm. \"This is Emily Hawkins. And this,\" He gestured at the man, \"is her husband Kyle. My thralls.\"\n\nThe man gave Gwen a simple nod. These two were married? Since she'd arrived Gwen hadn't seen Emily so much as look in his direction. Mr. Fawn... Remy, had completely stolen her away, and he kept her husband around to watch? The cruelty of it shocked her. Gwen wondered if Laura had a boyfriend. No, now wasn't the time to be fantasizing. What was it he had called them?\n\n\"You said they were your...\"\n\n\"Thralls.\" He blinked, waiting for some response. She shrugged. \"Surely you've thralled someone by now. I'd put you at...a week since your awakening? Two?\"\n\n\"Two. How can you tell?\"\n\n\"The process usually takes around a month. Claws usually mark the halfway point. Eyes come next, and the tail is the last.\" He raised his in demonstration, then curled it around Emily's leg. \"It varies from demon to demon, but you're about half way. You definitely should have taken your first thrall by now.\"\n\n\"I don't know what that means.\" Frustration crept into her voice. \"I didn't get a manual with the horns.\"\n\nHe chuckled. Emily smiled beside him, probably channeling his amusement.\n\n\"You'll be fine. It all comes quite naturally. No one was there to guide me, and I turned out alright.\"\n\n\"So what is a thrall?\"\n\n\"They're like servants. No,\" He considered, \"more than that. They're a part of you. They live to serve, and follow every command with unquestioning loyalty. It's hard to describe, but you'll understand once you feel it.\"\n\n\"How do you do it?\"\n\n\"You've at least fed on someone by now, yes?\"\n\nTongues dancing. A deep, lingering kiss. Gwen nodded.\n\n\"Good, that's something at least. While you consume their aura, you infuse them with yours. It's like a drug. They can't stay away. The more you give them, the more they want. Until, eventually, they give themselves to you. Complete control.\"\n\nIt sounded worryingly like her evolving relationship with Amy. Her mind returned to that night. Pinned to the sofa. Breathless as Amy fulfilled her blossoming fantasies. Before Amy had broken free, Gwen had felt as if she was standing at a precipice. On the verge of doing something irreversible. Something terrible. Something wonderful. Remembering that feeling, her heart, and her body, ached for it again. To cross that threshold.\n\n\"Does it always happen? Can I stop it?\"\n\n\"Of course. Once a human is thralled, they're bound to you. But the choice to bind them once they've offered themselves is yours to make. Those bindings take energy to maintain. Some demons can take quite a few, but for succubi like us, usually two or three is the limit.\"\n\nGood, she wasn't doing anything irreversible simply by feeding. As long as she never crossed that point of no return, Amy was safe. The promise she'd made, loomed in her mind.\n\n\"It seems cruel. To take their free will.\" She said the words, but her heart wasn't in them.\n\n\"You sound like a human. It's the natural order of things. They're prey to us. Besides, it's not such a bad fate. You're happy, right Emily?\"\n\nAs he spoke, he looked down at her. Emily placed a hand on his cheek and raised herself up into a tender kiss. As she pulled away she glanced sideways at Gwen, smiled, and answered, \"I would never go back.\"\n\n\"And what about him?\" She tilted her head toward Kyle. When Emily and Remy turned their heads to face the man, she slipped her hand into the folds of the coat, into one of the deep pockets, and gripped her phone.\n\n\"I know my place.\" Kyle answered gruffly.\n\n\"He knows his place.\" Remy mocked. \"Besides, it's not so bad for him. As long as it's not Emily, he gets to fuck whoever he wants.\" He leaned forward and whispered conspiratorially, \"Sometimes even me. Right, daddy?\" The last words were directed at Kyle, who gave a noncommittal grunt.\n\nGwen felt her face flush as she pictured Kyle taking out his anger on the lithe, boyish incubus. Her adrenaline had long faded and her focus was slipping away again. Why hadn't she fed on Amy when she had the chance?\n\nEven in the dim lighting Remy must have noticed because he laughed at her and taunted, \"Aww I made her blush!\" He tilted his head back and gazed down his nose at her. \"Still so human.\"\n\nHe turned away, and she raised the coat up slightly to get a glimpse of her phone screen. Before Remy could catch her she lowered it, hiding the light, and started tapping roughly where she remembered the messenger app being. Amy would be the most recent conversation, so somewhere near the top, then at the bottom to open the keyboard. Fuck, the next part would be hard. Flip phones used to make blind texting so much easier. The phone vibrated in her grip. Shit.\n\nRemy rounded on her in a flash. She barely had time to begin standing before the heel of his boot made contact with her shoulder, and slammed her back down into her seat. She struggled, but she was pinned. A dull pain radiated from her shoulder. Distantly, she recalled doing the same thing to Laura.\n\n\"No phones in class, Gwen. Hand it over.\"\n\nGwen snapped both hands up to grab his calf, then used all the force she could muster to stand and push his leg upward. He lost balance, and threw his arms back, catching himself up on the table. Freed, she snatched up the phone and bolted. Behind her she heard the table skid along the floor, followed by a grunt, then her head was yanked backward. Remy had her by the hair. He lifted her up until her feet left the floor. The pull against her scalp was uncomfortable, but not painful.\n\nRemy turned her to face him. The table had skidded back against the far wall, it must have struck Kyle in the knees. That explained the grunt. Remy was frowning, and had his free hand resting on his hip. As he opened his mouth to speak, she raked a clawed hand across his face. Felt the flesh part in bloody furrows as they tore into him.\n\n\"Fucking Christ!\"\n\nInstead of dropping her though, he whipped her around by the hair and threw her bodily into the back wall. Something behind the padded fabric snapped, and the breath was knocked from her. Kyle only just managed to step aside before she fell to the sofa in a heap. The world was sideways. Blood dripped down Remy's beautiful face. Gwen gulped down air. He lept on her. All pretense of civility was gone. They were a tangle of limbs and horns. The phone lay forgotten.\n\nClaws tore at her, ripping her long skirt to shreds. Warm blood trickled down her thighs. She headbutted him, and he reeled back for a moment then returned the favor. Stars filled the blue-purple ceiling above her like some beautiful nebula. Remy snarled down at her. His face inches from hers. One of his knees rested on the table pressed against the sofa. With a hand she gave the table a shove, his legs spread apart and she brought a knee up.\n\nRemy groaned as he tumbled to the floor. The sound filled her with satisfaction.\n\nShe cackled as she rolled off the sofa to pin him to the floor from behind. One hand held his neck, with the other she took hold of his tail. Somehow she knew it was a weak spot. He bucked upward, nearly throwing her. In response, she pulled at his tail, eliciting a hiss that rose to a shout. Wood cracked, and he twisted, bringing about a broken leg of the table and slamming it into her head. Luckily, it broke across one of her horns instead of her head, but the force of it still put her off balance enough for Remy to throw her aside. Her claws scratched lines into the vinyl flooring as she scrambled to stand. Too late. He straddled her the same way she'd done moments before. Gwen didn't have a tail, but she felt her head jerked upward as he took hold of both of her horns.\n\nAmidst the fury, and adrenaline, the touch sent a pulse of excitement through her. Her growl turned into a moan. Remy's hand left her left horn and gripped her neck. She arched her back and felt him pressing into her. He leaned forward and whispered into her ear.\n\n\"You really need to feed.\"\n\nHe released her and stood. Embarrassment filled her as the words brought her back to reality. Sometime during their fight, she'd gone completely feral. Gwen rolled over onto her back. Remy was brushing dust and splinters off his suit. Blood stains covered the right half. Neither human was in the room. They must have fled at some point. The phone. Gwen looked around frantically. It was also gone.\n\nAbove her Remy offered her his hand. She took it and he helped her stand. His suit was ruined, one of the buttons had come off, and his shirt had come untucked and hung loose on one side. He wiped his face with a sleeve, smearing blood along his cheek. Gwen looked down, she wasn't much better. Her skirt was in tatters, and a web of tiny red rivers criss-crossed her left leg. The white halter she wore had a tear down the middle, revealing a large swath of pale skin. Remy spoke first.\n\n\"Truce?\"\n\n\"Truce.\"\n\nShe brushed a mess of hair from her eyes. Strangely, after their scuffle she felt more comfortable around the incubus. The anger was still there, but she was filled with a rush of endorphins as well. The fight had been primal, passionate, maybe even... fun. Gwen watched Remy tucking in his shirt. Even in his disheveled state he was handsome. Gwen felt a little rise in her stomach. Different, somehow, from the feeling of wanting a human. The door opened. Emily stood holding Gwen's phone in one hand, and resting the other on Amy's shoulder.\n\n----------------------------------------------------------------\n\nI'm inside, tell the bouncer you're with me and he'll let you in.\n\nAmy knew it might be a trap. That Gwen may not have written the text, but what else was she going to do? Abandon her? A regal looking woman had greeted her at the door. Emily, she said, and led Amy upstairs. Dread grew with each step. Was Gwen okay? Was she even alive? Her heart hammered in her chest. Nearly as loud as the music beating against her skull. They stopped in front of a heavy black door. One in a row of similar doors lining the back wall on the balcony that overlooked the rest of the club. At some point a man had joined them. He stood behind her and to her left, preventing escape. Emily pushed the door open. Amy gasped, and tried to take a step back, but Emily's firm hand on her shoulder held her in place.\n\nGwen stood taking heaving breaths, ragged and bloody. Next to her, a tall man ran a hand through his disheveled hair. It was blue and purple, no, that was just the lighting. He looked nearly as bad as Gwen. Angry red lines marred his cheek, still bleeding. The room around the two of them was in shambles. A table leaned against the floor, One leg cracked and buckled, and another missing. Paneling on the back wall was bent, and a spider web of cracks in the wall's surface peeked out from behind. Her own coat lay crumpled on the floor, stained in blood.\n\n\"Gwen!\"\n\nAmy shouted and took a step before the man fixed his gaze on her. No. Not a man. This was a demon. She froze as all the warnings Xavier and Jim had given her, and all the claims on the archive raced through her mind. All at once the air around him seemed to warp and ripple, Like heat rolling off asphalt. His whole form shifted slightly. Everything seemed more angular. Streamlined. Parts in his hair that seemed almost like cowlicks before, made way for two sharp, ebony horns that rose upward and curved slightly back. His hands were tipped with sharp talons. A black tail twitched upward behind him. And those eyes. They were a captivating shade between purple and pink, and they glowed. Cold fear gripped her. Her body felt paralyzed.\n\n\"Don't. Touch. Her.\" Gwen stepped closer and growled up at the demon. How could she move closer?!\n\nHe raised his hands, palms out and shrugged. \"I wasn't going to. Relax. Besides, I'm not stupid enough to fight you again. I learned my lesson.\" His voice had a subtle, disarming drawl.\n\nGwen turned her back on him and rushed forward, throwing her arms up around her and practically hanging off her neck. Reflexively, she placed her hands on Gwen's waist. Gwen's brow knotted and her eyes grew wet.\n\n\"I'm so sorry. I shouldn't have come here, it was stupid. I just wasn't thinking and I knew you wanted more answers, and I thought we might lose the chance.\"\n\nAmy studied Gwen's face. For just a moment, she forgot about everything else. \"No, It's my fault. I shouldn't have left you alone. I didn't see your texts.\"\n\nA sarcastic voice cut through the moment. \"Can we take this sickening display somewhere else?\"\n\nReality crashed back. The demon was walking toward them. How had she let her guard down with a demon so close. Gwen must have felt her body tense because she said, \"It's okay. I won't let him hurt you.\"\n\n\"We need to leave now, Gwen.\"\n\nThe demon rolled his eyes. \"So dramatic. You can leave whenever you want. I was just eager to meet the new succubus in town. There are so few of us, I couldn't resist a little teasing. And it's bad form to take someone else's prey. Your human is safe here.\"\n\n\"There are others?\" Gwen turned to face him, leaving one arm around her shoulder. He had just called her prey, and Gwen hadn't corrected him.\n\n\"You're the fourth, at least that I know of. Most demons keep to themselves, but the three of us have a good thing going so far. You're welcome to join.\"\n\n\"Gwen, I don't think this is a good idea.\"\n\n\"Shhh.\"\n\nThe casual dismissal stung. Maybe Gwen meant to be comforting?\n\n\"I'll have another room prepared.\" He motioned, and Emily and the man from earlier nodded and began down the line of doors, \"We can talk there. The others should be coming tonight, if you want to stick around and meet your fellow succubi.\"\n\nThe idea of being in a room with three demons, four counting Gwen, who all had the ability to reduce humans to slaves didn't sit well with her. Not after everything she'd learned today. The demon began walking and Gwen followed. Amy pattered along behind her.\n\n\"Gwen, no.\" She whispered. \"You admitted you've been acting rash lately. Well I'm your voice of reason, telling you not to wait around until we're outnumbered.\"\n\nGwen looked up at her with, was that... annoyance?\n\n\"You said yourself, I'm the only first hand source of information you had on demons. Well here are three more. And you just want to walk away?\"\n\nIn a way, Gwen was right. Amy could feel her curiosity burning underneath the terror. Part of her ached for the opportunity to interview more demons, but it paled in comparison to the primal fear running through her. A human fear that Gwen clearly didn't feel.\n\n\"Gwen. I'm begging you.\"\n\n\"No, Amy. You're being-\"\n\n\"Pasiphae.\"",
        "Gwen stopped and Amy nearly ran into her. She turned and glared up at her. \"You can't use it for that.\"\n\n\"What? Why not?\"\n\n\"It's a safe word. It's for like, sex stuff!\"\n\nA few guests had turned to look at them. Gwen had shouted the last words loud enough to hear over the music. Amy battled to keep her composure as she responded. \"The rule is that you stop whatever you're doing when I use the password. No exceptions, remember?\"\n\n\"...That's not fair.\"\n\nAmy just watched her. Gwen was behaving differently tonight. Something exposure to another demon had caused? If Gwen refused to comply, she couldn't stop her. Gwen looked away and watched the demon as he talked up one of the servers in a skimpy angel costume. Was she really that drawn to him? Would she break the rules for him? Eventually, Gwen faced her again.\n\n\"Fine. We can leave.\"\n\nAmy stood back while Gwen informed the demon that they wouldn't stay. Would he really just let them leave? Apparently so, because other than saying something that caused Gwen to punch him in the shoulder, the conversation seemed civil. At one point they both turned to look at her. Amy's eyes met the demon's and he smirked at her. Gwen came back to her, they retrieved her ruined coat from the destroyed room, took the elevator down, and left Rapture.\n\nThe street seemed eerily silent compared to the deafening music within. Amy wondered if she'd done permanent damage to her eardrums. Gwen was silent as they walked down the steps to the station. Eventually though, she reached out and took Amy's hand. Relief flooded through her. She hadn't realized how worried she was that Gwen was angry. Heads turned to watch them, drawn to Gwen's ravaged, and now quite revealing, clothing. Hopefully they would think it was some new avant garde fashion.\n\nThey were silent during the train ride, but it was a comfortable silence. Gwen laid her head on Amy's shoulder. Amy could feel the hard surface of a horn against the crook of her neck. She had seen past the other demon's glamour, but apparently Gwen's still held. Did she really not see Gwen for what she was? Though she had been reluctant, Gwen complied when Amy used the password. Was that not proof that their friendship was intact? Amy tried to picture Gwen as the same sort of monster she knew the other demon to be, and glanced down. Nothing. Clearly whatever truth the glamour was locked behind lay somewhere in the middle.\n\nAmy had left her car too long, and there was a yellow slip of paper tucked under one of the wipers. She would gladly pay the fine, whatever it was, considering the disaster they narrowly avoided. Without looking, she snagged the ticket and stuffed it into her purse. Gwen was shivering, and threw herself into the car as soon as the doors unlocked. Amy cranked the heat as high as it could go, and soon they found themselves driving back along the Bay Bridge in toasty warmth. Lights reflected off the choppy water below.\n\n\"Sorry about earlier. I know I was being a little...\"\n\n\"Demonic?\" Amy suggested.\n\n\"Yeah.\" Gwen let out a sigh and curled up, hugging her knees to her chest. \"Meeting someone else like me was just a lot to take in.\"\n\nGwen relayed her encounter with the demon, Remy. Told her who Emily and the man, Kyle, really were. Amy felt her lips growing tighter with each word. It lined up too much with what Xavier and Jim had warned her about for comfort. Thralls. Slaves. Gwen assured her that the process had to be deliberate.\n\nAccording to Remy, Gwen was only halfway through her transformation. How much more would Gwen change before it was complete? For that matter, how much would she? Finding a cure felt more and more urgent.\n\nAmy considered telling Gwen about her own encounter despite her promise to Jim, but eventually decided against it. Exposing herself to Gwen's influence was her choice. She wouldn't risk forcing it on anyone else. Silence filled the car again as they both considered the implications of the night's events.\n\n\"I think I should move out,\" Gwen declared.\n\nThe words pierced Amy's heart. She was surprised at how much they hurt to hear. \"What? Why?!\"\n\n\"I don't think I realized how different I am now. Not until tonight. Meeting Remy.\"\n\n\"You're not like him.\" Amy knew that for a fact. The glamour told her that much, at least.\n\n\"I think... I think I am, Amy.\"\n\n\"No. I promise you.\"\n\nGwen shook her head. \"When he told me about Kyle and Emily I was excited. Not horrified, not scared. Excited.\"\n\nAmy considered how to respond, but Gwen continued before she got a chance.\n\n\"I wanted to do that to someone. To you. I almost did, that night.\"\n\n\"But you didn't.\" Gwen was echoing Amy's own arguments back at her. \"Besides, If you're this worried you'll do it, it shows that you don't really want to.\"\n\n\"I do want to. I can see what the moral choice is. I know the arguments against it. And I can repeat them back to you to make you feel better. But none of it matters to me. Not really. I'm not human anymore.\"\n\n\"Don't say that.\"\n\n\"It's true. Let's stop pretending otherwise. I'm a demon. I hurt people.\"\n\n\"You're not an animal Gwen.\" Jim had said otherwise. \"You're acting like humans don't also have harmful instincts. Every day we make logical decisions not to do things, despite wanting to.\"\n\n\"Maybe...\" She shrugged in Amy's periphery.\n\n\"Have you been worrying about this all week?\"\n\n\"Yeah, I guess so.\"\n\nApparently Gwen was struggling with her changes more than she'd let on. Until today it seemed like she had everything well in hand. While it was unsettling to hear that Gwen really did want to enslave her, Amy knew she needed to stand firm. Something told her that if she let go now, she'd lose all hope of Gwen agreeing to a cure.\n\n\"I'm sorry.\"\n\nGwen finally turned to face her. \"Why are you sorry?\"\n\n\"You didn't tell me any of this because you were worried I would leave, right? That's my fault. Today I even said I was scared of you... No wonder you felt like you couldn't tell me anything. Listen,\" She looked away from the road for a moment to lock eyes. \"I may be scared, but I'm not going anywhere Gwen. I want you to be honest with me. About everything. I won't judge you, and I won't kick you out. Let me share the burden, and help you make the right choices.\"\n\nSomething about what she said made Gwen laugh, \"My moral compass.\"\n\n\"Exactly.\"\n\nGwen's posture relaxed, and the atmosphere in the car seemed to get lighter. They were nearly back home. Rows of apartments passed them by, some still under construction. Her thoughts churned. Jim and Xavier's warned her she would end up a slave if she stuck around. Gwen had just said much the same. None of that mattered though. Staying was her only option. That, and hoping that she could influence Gwen enough to keep the worst from happening. Somehow, Amy knew she wouldn't get through this without more changes of her own. It was time to stop hiding from that and meet Gwen in the middle.\n\n\"I've been controlling your dreams at night.\"\n\nShe was pulling up to a red light, and accidentally slammed down on the brakes, jerking them to a stop. A horn blared from behind as a car narrowly avoided hitting them.\n\n\"You what?!\"\n\n\"I was trying to make you more comfortable with our...arrangement.\"\n\n\"You've been doing that? On purpose?!\" She was shouting.\n\n\"You just said you wouldn't judge me!\"\n\n\"I didn't say I wouldn't get mad!\"\n\nAll those dreams. Together. Naked. The things they'd done. Gwen had seen all of it. No, she'd orchestrated all of it. Amy put her head against the steering wheel, her hair fell forward. A dark curtain to hide her shame. Maybe it was for the best though. It would make what she was planning to do when they got home easier.\n\n\"I feel like you tricked me.\"\n\n\"Gwen.\"\n\n\"Entrapment, they call it.\"\n\n\"Shut up.\"\n\nThe car behind them honked again. Amy looked up to see the light was green.\n\n\"I thought the dreams were just a side effect,\" she groaned.\n\n\"Nope... all me.\"\n\n\"Please stop doing that.\"\n\n\"Are you sure? I know for a fact that you enjoyed them.\"\n\n\"This is your moral compass speaking. Do not do that anymore.\"\n\n\"Fine, fine.\" Then, after a pause, \"Sorry.\"\n\n\"Ugh... I forgive you. Anything else you want to share?\"\n\nGwen was silent for a while. \"No. That's it.\"\n\n----------------------------------------------------------------\n\nGwen disrobed as soon as they walked in. Dark stains covered the ruined skirt, and her shirt was shredded. Remy's claws may not be as long as hers, but they were certainly sharp enough. Behind her Amy tossed her ruined coat aside and pointedly looked away as Gwen pulled her top over her head. Dried blood covered her leg, with smaller patches scattered across her chest and stomach. The underwear she'd worn was at least still functional, but had several small tears. She lamented the money she'd have to spend to replace the clothing.\n\n\"Go ahead and shower. I'll take care of the laundry.\"\n\nAmy avoided looking at her as she spoke. Gwen sensed her arousal. Remembering the dreams maybe? She resisted the urge to smile.\n\n\"Thanks. I'll pay you back for the coat.\"\n\n\"Don't worry about it. It was old anyways.\"\n\nGwen knew it wasn't, but let it go. Normally she'd insist on paying, but with her funds already dangerously low, she decided to accept Amy's generosity for once.\n\n\"I might be in there awhile.\"\n\n\"Take your time.\"\n\nAs she scrubbed away the dried blood, she hummed to herself. After her confession in the car, and Amy's acceptance, she felt as light as air. She'd revealed her true self, all the urges she'd been fighting. Not only had Amy not run away, she'd been the one to convince her to stay. Gwen had really been prepared to leave. Though it would hurt, she would do it to protect Amy. Instead, she now had someone with whom to share her burdens. Between the two of them, the temptations she faced seemed trivial.\n\nStill, there was still one thing she'd held back. Why hadn't she told Amy about Laura? Maybe she was worried that it would be a bridge too far. Amy was prepared to forgive her monstrous thoughts, including that Gwen had considered thralling her. Actions were different though. What she'd done to Laura might be unforgivable. It wasn't worth the risk.\n\nRaised streaks of red were all that remained of the deep cuts on her thigh. Apparently sometime since their experiment with the pin, healing powers had kicked in after-all. Maybe not as flashy as supernatural creatures on TV but a fair bit faster than normal human healing. Remy had said she still had roughly two more weeks of changing. Outwardly, her eyes would change, and she'd grow a tail. She pictured Remy's swaying black tail and broke out in a rebellious smile.\n\nThe attraction she felt toward him was undeniable. It was markedly different from how she felt about humans, even Amy. Closer to how she'd felt about the rare crushes she'd harbored as a human. Gwen doubted it had to do with his powers, maybe it was because she saw him as a peer, and humans as something lesser? A spike of heat rushed through her, taking her by surprise and she sank into a crouch under the hot water. Whatever she felt toward the incubus was irrelevant. Given how she'd acted toward Amy in his presence, it was probably best to keep away.\n\nGwen eased herself back into a standing position, but a familiar warmth lingered. She breathed it in and froze. Attuned to the connection, she was suddenly aware of a rush of emotions backed by arousal. Not hers. Amy's. The strongest among them was Amy's distinctly sweet flavor of shyness. She forced herself to finish washing, instead of rushing out to see what Amy was doing, and did her best to close her senses to the connection. Amy deserved privacy.\n\nBy the time she'd finished, dried her hair, and wrapped herself in a towel she'd managed to calm herself down and act normal. Knowing she had Amy's support, and with her newfound motivation, it was easy. The hallway was dark, lit only by a flickering light from the living room. The apartment was silent. She moved to investigate. What was that scent? Cinnamon? She called out as she cautiously approached.\n\n\"So it seems like I can heal faster than a human after a-\"\n\nAmy stood, lit from below by a flickering candle, she'd removed her glasses and was wearing a red silk robe. The neckline was deep enough to just reveal the edges of a black bra. It was cinched tightly at the waist, exaggerating her bust and her wide hips before ending halfway down her thighs. Her legs were bare. Gwen hungrily ran her eyes along them, her pulse gained speed with every luscious inch. Amy coughed lightly into her hand, drawing Gwen's attention to her face. Even in the darkness Gwen could see that her cheeks were scarlet. Breath caught in her throat. Her heart raced. Hunger filled her. She opened her mouth but it felt dry.\n\n\"Me first.\"\n\nGwen shut it and nodded. She wasn't sure she could speak anyways.\n\n\"You were honest with me. About how your thinking has changed, and about your urges. I know that was hard, and I know it must be difficult to do the right thing when your instincts are telling you otherwise. So I wanted to thank you, and I think it's only fair if I'm honest with you as well.\"\n\nAmy nervously knitted her fingers together in front of her. \"Since you changed you've had romantic feelings for me. I've been denying it, but the truth is that I have those feelings too.\"\n\n\"Amy-\"\n\n\"They're side effects from your feeding, and the...threads. And probably the dreams. I know. You did this to me.\" Amy paused, but held up a finger to stop her from speaking. After a deep breath she continued,\n\n\"Regardless of why though, I'm attracted to you, and I can accept that. I think I'm ready to be in a relationship if you want that.\"\n\nGwen waited, but Amy was finished. Apparently she was allowed to speak now.\n\n\"This is dangerous Amy. What if I lose control? What if I thrall you?\"\n\n\"You won't.\" Amy spoke with a certainty that made Gwen believe it. \"We both underestimated your needs. Clearly just kissing isn't enough. This is what you've wanted, and you've been fighting it for my sake. If we do this, maybe you'll be satisfied. You can spend that effort resisting your worst urges instead.\"\n\nGwen didn't trust herself to get closer. \"I don't think I can go back after this, Amy.\"\n\n\"We don't have to.\"\n\n\"Are you sure?\"\n\nAmy sauntered toward her until they were only inches apart. She held the robe's sash in both hands. \"There are worse fates than being in a relationship with your best friend.\"\n\nAmy pulled, the knot came free, and the robe fell open. Gwen drank in her beauty. Her perfect, buxom curves, the smooth skin of her stomach, the flare of her hips. Amy had changed into solid black panties, fairly plain, but probably the most revealing pair she owned. Tight too. Flesh swelled out slightly at the edges of their waistband. Gwen reached out and placed a hand on Amy's thigh, eliciting a sharp inhale. Their connection, the portion of Amy's aura that they now shared, let her feel Amy's excitement at the touch.\n\nGoosebumps formed under her fingers as she slid her hand inward. She gave a small squeeze, and delighted when Amy shivered and clamped her legs together around her hand. She looked up. Amy stared down at her, lids heavy and face flush. Gwen laid her other hand on Amy's cheek and pulled her down, Amy bent forward until their lips met. It was different from their kisses thus far. Eager. Honest. The threads that bound them together flared to life. She broke the kiss and their eyes locked.\n\n\"You really want this.\" It wasn't a question.\n\n\"If you change. I'll change with you.\"\n\nThe promise caused Gwen to shudder. She shared the sensation with Amy. As one, their lips reunited, and she felt Amy's arms wrap around her. She began To work her hand between Amy's thighs, savoring the heat beneath the fabric. Amy's flower. Her prize, waiting to be unwrapped. Her other hand traced down Amy's neck, across her clavicle, and along the slope of her breasts. Amy gasped into her mouth, and Gwen couldn't help tasting her aura. Sickly sweet modesty diluted in a sea of needy lust.\n\nShe guided Amy backwards while their lips parted and their tongues played. At the edge of the sofa she gave a small shove. Amy's legs buckled and she fell to a sitting position. Amy gazed up, panting. Gwen watched her chest rise and fall, bathed in flickering candlelight. Shadow filled the deep valley between her breasts. She straddled Amy, moving in for a kiss before teasingly biting her lower lip instead. When Amy gave a soft whine she obligingly met her lips. As she did she reached under Amy's robe, behind her back and worked the clasp of her bra until it snapped open. Amy tensed for a moment and froze.\n\n\"It's my first time... with a girl.\"\n\n\"I'll be gentle.\"\n\nAmy relaxed as she slid the robe over her shoulders and down her arms. Amy bent backward to give her an easier time, until the silk came free and left her naked from the waist up, save for the loose black bra. Amy was clearly braced for Gwen to remove it, but Gwen smiled down at her, and used the threads to make her desire clear. Amy bit her lip and peeled it away herself. It fell away and her breasts hung free.\n\nThey were perfect. Enormous, and proud. Gwen cupped her hand under one and traced a circle around the darkened skin of her areola. Amy's eyes were closed, but she let out a low moan. Gwen leaned in and kissed Amy's neck as her fingers found Amy's stiffened nipple. Gwen carefully drew the tip of a claw along it. Amy gasped, the hot breath tickled Gwen's ear and she gave a reassuring moan of her own. She felt hands tug shyly at her towel until it fell in a heap around her. Gwen sat up, proudly displaying her naked body, and purred as Amy's eyes explored it.\n\n\"You're so beautiful.\"\n\nPride filled her. She hadn't realized how much she longed to hear Amy say those words. Gwen tossed the towel aside, and pulled Amy against her chest. Amy began laying kisses everywhere she could. Hesitantly, she planted her lips on one of Gwen's rosy pink nipples, and suckled. Gwen pulled her tighter and began slowly grinding. Amy's tongue pressed forward, cautiously lapping at her nipple. With her free hand she clumsily fondled Gwen's other breast. Gwen placed a hand atop Amy's and clutched down hard, forcing Amy to close her hand and grip her with force. She sucked in air through her teeth and released it in a contented moan. Amy patted her arm and Gwen realized she was holding her with more force than she'd intended. She let go.\n\n\"Sorry.\"\n\n\"It's okay. Just, remember. I break easier than you.\"\n\n\"Of course, love.\"\n\nShe cupped Amy's chin and sealed the words with an open mouthed kiss. Amy tried to resume her explorations, but Gwen playfully pinned her hands to the back of the sofa. She fed Amy more of her elongated tongue, and adjusted her position, nestling her knee between Amy's legs. Amy instinctively pressed her groin against it. They stayed that way for a moment, until Amy's breathing picked up pace and Gwen freed her mouth to take deep heaving breaths. She moved lower, kissing Amy's neck, then her collar, then her breasts, then her delicate stomach. She released Amy's hands, and moved still lower, sliding down to kneel on the floor before her.\n\nGwen placed a hand on each of Amy's knees and slowly spread them apart. As she did, she looked up and gave Amy a smouldering smile. Amy's face was a delicious mix of embarrassment and unbridled lust. Gwen sent a deliberate surge of pleasure across the threads. Amy clutched one of her breasts, just as Gwen had done before. Unlike Gwen's perky teardrops, however, Amy's ample flesh spilled from her grip. With her other hand she brought a finger to her mouth and tugged at her lower lip, whimpering. But she didn't break eye contact as Gwen moved forward, burying her face between Amy's thighs. She placed her mouth against the panties, stained dark by Amy's fluids and planted a firm kiss. Amy moaned, and tried to clamp her legs together, but Gwen held them in place. She pulled back and hooked a thumb under each side of the waist band, and began to slide the panties down Amy's long legs. Amy had to squeeze her legs together and shimmy out of them. When Gwen went to resume her position, Amy held her legs firmly closed.",
        "\"Nervous?\"\n\nAmy gave a sharp nod. Her entire face was red, but it was hard to tell how much was embarrassment and how much was arousal. Gwen's own body was buzzing, and her sex throbbed, desperate for attention. Amy first.\n\n\"You know I can just use the threads to make you open them.\" A playful threat.\n\nAmy gave another small nod.\n\n\"Is that okay?\"\n\nA nod.\n\n\"Show me.\"\n\nShe gave the threads a tug as she spoke the words, and felt the command reverberate through Amy's compromised aura. Their bond was infinitely stronger than it had been the night she'd almost thralled Amy. Eager compliance echoed back as Amy obeyed. Her legs parted wide, displaying her womanhood. She moaned as a wave of pleasure rewarded her obedience, and bucked her hips forward slightly. Below a neatly manicured strip of dark hair, her waiting folds glistened in the dancing light.\n\nShe gave a husky whisper, \"Gwen.\"\n\nGwen knew what she wanted. She planted a kiss against the side of Amy's knee and began moving up her leg, slowly tracing a line with her tongue. Muscles shuddered beneath soft, plaint flesh. When Gwen reached the junction of her thighs, she teased her tongue along Amy's swollen mons.\n\n\"Tell me what you want.\"\n\n\"Gwen, please...\" Amy trailed off.\n\n\"Tell me.\" This time, she used the threads.\n\n\"Taste me. Lick me. I want to feel your tongue in my...pussy.\"\n\nAmy brought her hands up to hide her face. Hearing Amy talking dirty, even if it was a bit timid, sent a surge of hunger through her. Amy felt it too. Gwen saw her muscles clench as it washed over her.\n\n\"Make me.\"\n\nBefore the words had left her mouth, Gwen felt hands on her head. They bumped up against her horns, clumsily grabbed at them, and forced her into Amy's waiting flower. Gwen moaned into it and breathed in Amy's scent. Amy adjusted her grip and pulled her harder, desperate for satisfaction. Gwen was strong enough to fight it, but that was the last thing she wanted.\n\n\"Yes! Gwen!\"\n\nAmy practically screamed as she began to wriggle her tongue through her folds. Gwen brought a hand up and sought out Amy's engorged clitoris. She gently applied pressure while her tongue burrowed into Amy's depths. She tasted divine. Tangy and sweet. A flavor that surpassed all the human food she'd ever consumed. Her tongue darted forward, in and out, all the while flexing and writhing. Each time she went deeper. Amy was moaning bodily. Her fingers began steadily rolling Amy's nub. She extended her tongue to full length. Amy's hungry orifice gripped at it. Gwen savored the sensation. She picked up speed until she was fucking Amy with her tongue at a furious pace. All the while she teased her clit along.\n\nAmy's thighs came together, and her grip on Gwen's horns grew tighter. Pleasure flowed back and forth between them, tearing across the threads like a euphoric storm until Gwen couldn't tell what was Amy and what was her. She withdrew her hand and brought it between her own legs, and buried her fingers there. Amy whined until she replaced it with her tongue and began dancing against Amy's bud until she felt the storm swelling.\n\n\"Gwen... Gwen... Gwen!\"\n\nAmy bucked her hips each time she called her name. Her voice grew louder. Gwen hungrily ground into her hand in time with her tongue's efforts. She felt Amy seize up. A hand left one of Gwen's horns, and Amy began emitting loud muffled moans as she came. Amy's ecstasy overflowed. Gwen let it flood the threads, bleeding into her own and carrying her to her own climax. She clenched her legs together, and moaned along with Amy. The legs locked around her head trembled, and finally released her.\n\nGwen stood up, and admired her work. Amy had slumped sideways until she lay on the couch in a pool of dark hair, eyes half closed, panting. Her body was still tensing from the aftershocks of orgasm.\n\nShe was completely defenseless. Gwen pushed more of herself, of her aura, into Amy's. No resistance. It would be trivial to keep going. To bind her with enough thread that she could never escape. She could eradicate any trace of independence until Amy wanted whatever she did. Her thrall. Amy turned her head and smiled.\n\n\"That was... really good.\"\n\n\"I am a succubus. I think it comes naturally. Not like I had a lot of practice before.\"\n\nShe bent over and lifted Amy's head, careful to gather up her hair, and sat down before placing it in her lap. She began gently brushing her hands through Amy's hair, untangling it.\n\n\"You used the threads?\"\n\n\"I thought you wanted me to.\"\n\n\"I did.\" Amy nodded in her lap.\n\n\"Could you tell?\"\n\n\"Yeah. I don't think I would normally say...\"\n\n\"Pussy?\"\n\n\"Mhm.\"\n\n\"It was pretty hot.\"\n\n\"I'm surprised though. I figured you would want me to be the one that... goes down.\"\n\n\"Actually, I like it when you take charge.\"\n\n\"I didn't think you were the submissive type.\"\n\n\"Me neither. I doubt I'm like that for everyone. You're special.\"\n\nAmy shifted until she lay on her back. She crossed her arms beneath her breasts causing them to pool on her chest.\n\n\"Did you want to thrall me?\"\n\nGwen stopped stroking her hair and looked down. Their eyes met.\n\n\"Yes.\"\n\n\"But you didn't.\"\n\n\"I didn't.\"\n\n\"Why?\"\n\n\"Because I promised.\"\n\n\"Good answer.\"\n\nFor a while they stayed that way. Amy pulled the robe back over her like a blanket. A small, inadequate blanket. Her nipples poked out against its smooth surface. Eventually, tired of the cold, she sat up and pulled a real blanket from the back of the armchair.\n\n\"Why cinnamon?\" Gwen asked. \"Not particularly romantic.\"\n\n\"It was the only candle in the apartment. Cinnamon pine. I think I got it for Christmas a few years ago.\"\n\nAmy sat back down and wrapped the blanket around both of them. She tried to lay her head on top of Gwen's, but nearly poked herself in the eye with the tip of a horn and gave up.\n\n\"Still can't see them?\"\n\n\"No, I could see Remy's though.\"\n\nGwen pictured Remy's narrow horns. Sharper than hers. Smaller. More streamlined. Handsome. Why could Amy see them and not hers? She asked.\n\n\"Um, I'm not exactly sure.\" Amy was definitely hiding something, but she let it go. \"They're smaller than yours right? I would expect it to be the other way around. In goats the females have the smaller horns.\"\n\n\"I'm not a goat.\"\n\n\"No, you're not.\" Amy turned to look at her, blushed profusely and mumbled, \"You're my...girlfriend. I guess?\"\n\nGwen's heart sored. Thoughts of Remy, of thralls, were forgotten. She pulled Amy into a bear hug, and let out a genuine, mirthful laugh. Timid, shy, Amy had put on her sexiest outfit, lit a candle, and proposed that they had sex. And now, apparently, they were dating. Without a doubt, this had been the best night of her life.\n\n\"I can't believe this was your idea.\"\n\n\"Well it wasn't really, if you want to get technical. I was corrupted by a demon, and lured down the path of temptation.\"\n\n\"Well thank god for demons.\""
    ],
    "authorname": "Autumn_Ash",
    "tags": [
        "lesbian",
        "succubus",
        "corruption",
        "slave",
        "mind control",
        "romance",
        "incubus",
        "transformation",
        "tail"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/a-succubus-awakens-ch-06"
}