{
    "title": "Delectable Syn Pt. 02",
    "pages": [
        "Characters you may need a refresher on:\n\nJennifer (aka Jen): This is me. I'm 19, nerdy, voluptuous, short and awkward. Less awkward now that Syn's ever flowing confidence has rubbed off on me, but still pretty clumsy. I have light brown eyes, a paler complexion, and shoulder-length dark brown hair.\n\nTyler (aka Ty): My older brother is 22, lean and muscular. My brother is a good cook and loves to please Syn and I. He also has a thick dick and knows how to use it. He has a sun-kissed complexion, earthy-brown eyes and short dark brown hair like mine.\n\nSydney (aka Syn): My brother's girlfriend is 21. She is fit and athletic. She has a more slender and toned build than me, but still has some nice curves to look at. She has sun-kissed complexion similar to Ty. Syn wears her chestnut brown hair in a pixie cut that really lets her beautiful amber eyes shine.\n\n****************************************************************************\n\nThat night, I slept better than I had in ages, even if I did wish I could sleep next to my brother. Ty and I were both pretty sure even our overworked parents would notice if we started sleeping naked in each other's rooms. If they didn't notice that, they would surely notice the lewd sounds that would inevitably follow.\n\nTo say that it was difficult keeping my hands to myself around Tyler would be a laughable understatement. Over the next few days I found myself craving his presence in general, cuddling every chance I could, and just hanging out. Given what happened on Thursday with Syn and Ty, I wasn't surprised by this.\n\nWhat I was surprised by however, was how difficult it was to restrain myself during the weekends. Our parents were usually home during the weekends, and since they didn't get to see us much during the week, they liked to spend time with us. Normally, this didn't bother Ty and I since our parents were pretty cool, for parents at least. Judging from the subtle glances and \"brotherly\" caresses however, I could tell Ty was wondering the same thing I was: \"When can I ravish you again?\"\n\nSo, the weekend was spent hanging out with our family Syn dropped by in the evening for a barbeque on Saturday, but we didn't do anything too risqu\u00e9 with my parents there. A few of our neighbors and family friends dropped by as well, so it was pretty lively.\n\nSyn happily told my folks the news that I was planning on moving in with them, which surprised them since they figured I loved living at home.\n\nMel, my mother, asked \"Jen dear, that's wonderful, but why the sudden change?\"\n\nI didn't dare say it was because I would able to do filthy things with Syn and Ty, funny as that would have been. Instead I told her a half-truth, \"I'm thinking of applying for college to go for something in computer science.\"\n\nMy father complimented the idea, commenting that it was a profitable industry. My mother had long accepted that I was a geeky nerd girl, and thought it was wonderful that I was \"following my passion.\"\n\nDuring the barbeque, Ty, Syn and I broke away to chat amongst ourselves for a bit. As we were chilling in my room, Syn got our attention. \"Hey...can I talk to you both for a sec?\"\n\nHer serious tone caught us off guard, causing her to laugh as us, \"No I'm not going to drop a crazy bomb on you both!\"\n\nWe exhaled with relief.\n\nShe just continued, \"I have kind of a...selfish request.\"\n\nWe said nothing, listening intently.\n\nShe took a steadying breath, \"I don't really mind if you guys mess around without me...but I don't want to become the third wheel...\"\n\nTy and I gave her a squeezing hug, making her laugh.\n\n\"We wouldn't do that to you!\" Ty and I said in unison.\n\nShe just laughed at us, smacking us off playfully, \"Let me finish damn it! I mean your first time, Jen.\"\n\nI blinked at her in confusion.\n\n\"I will be so hurt if you lose your virginity without me...I want to be part of it!\"\n\n\"O-oh! Yeah no,\" I told her, shaking my head, \"I want you there too!\"\n\nTy simply nodded his agreement.\n\n\"Promise? I know how easy it is to get caught up in the moment when you are horny.\" She was trying to sound casual about it, but I knew the thought really scared her. Some part of her really was afraid that we would abandon her, and it made my heart ache for her.\n\n\"Promise!\" Ty and I held our pinkies out, a childhood habit coming to the surface.\n\nShe laughed as she saw us do it. \"What are we, six?!\"\n\nNevertheless, she put her pinky in.\n\nWe laughed afterwards at our childishness, but the promise was real enough.\n\nI wouldn't do that to Syn, and Ty wouldn't either. I wasn't quite ready to have him take my virginity yet, but I knew I would be soon. Syn would be there when it was time.\n\nWe set up a group chat so we could \"Keep lines of communication open\", but I think we all knew we were mostly going to use it to send filthy things to each other. Still, I think it's important that we could talk to each other like this.\n\n***\n\nI have never had a problem entertaining myself, but when Ty had class and work on Monday, I found myself impatiently waiting for him to return. A fire had been lit within me that had been burning all weekend long.\n\nTy was a Sophomore in college, studying kinesiology and sports fitness. He worked at the campus Gym, which was cool since he and Syn could use the gym pretty much whenever since he had a key.\n\nI on the other hand had another type of workout in mind. I went out to the store to buy some popsicles. No one would bat an eye about craving popsicles in the spring weather...unless they knew it was so I could practice my oral skills. I was determined to learn to take my brother's cock deeper and learn to control my gag reflex. I would finish one, play a game for a bit, then move to the living room to grab another one.\n\nMy brother's face was priceless as he walked in the door, seeing my head bobbing up and down on a blueberry popsicle.\n\nHe burst out chuckling, \"Well that's one way to eat it, I guess.\"\n\nI felt my cheeks flush as I removed the cold popsicle from my mouth, \"Hey Ty, welcome back!\"\n\nHis head tilted to side as his eyes shifted from the popsicle back to me, \"I've gotta admit, out of all the things I imagined coming home to, this wasn't one of them. Not that I mind though.\" He set his book bag down and walked over to give me a hug.\n\nI couldn't tell if he was teasing me intentionally or trying to be good, so I said, \"I mean, I could practice with you instead?\"\n\nA hunger flashed in his eyes for a moment as he blatantly checked me out, but was quickly replaced with a gentle smile, \"Still horny, huh?\"\n\nI flushed a bit, but tried to let my determination show, \"Kinda...but I also want to learn.\"\n\nHe chuckled before he said, \"Alright, let me shower first, but you should probably rinse your mouth with warm water after your 'snack'.\"\n\nRight...cold mouth...warm dick...I hadn't even thought of that.\n\nHe kissed me on the cheek before heading to the shower, laughing as I was unable to hide my embarrassment. I quickly ate the rest of my cold treat before doing as he asked. By the time he finished his shower, I was sitting on his bed waiting for him. My shirt and bra lay discarded at the foot of his bed.\n\nHis look of surprise was adorable as he saw my topless form on his bed. He had a beige towel around his waist, his clothes in his other hand. His short dark-brown hair was still damp, and trickles of water trailed down his abdomen. I didn't even try to hide the fact that I was staring at him.\n\n\"I guess nudity isn't really as big a deal anymore huh?\" he asked as he threw his clothes in the hamper.\n\n\"Considering how I'm about to suck your dick? Probably not,\" I said with a teasing grin.\n\n\"I'm certainly not going to complain, but you know you don't have to.\"\n\nI rolled my eyes at him, \"We are a little past that I think.\"\n\nHe smirked before dropping the towel. His dick wasn't hard yet, but the thought of feeling him grow in my mouth excited me. God he was sexy, his lean ab muscles created a lovely V shape aiming toward his pelvis.\n\nHe walked over to me before he kissed me. I was caught off-guard by the kiss, melting into him before pulling away. He gave me a questioning look, checking to see if I was having second thoughts.\n\nMy cheeks burned as I stammered out, \"I...um...I wanted to feel him get...hard in my mouth.\"\n\nHe smiled widely, laughing at me before he said, \"Oh I was worried that-\"\n\nBut he was cut off as I leaned over to kiss his chest, trailing down his abs. He lightly pushed me off so he could sit on the bed.\n\n\"This will probably be easier for you,\" he said as he laid back, propping his head up on a pillow.\n\nI positioned myself so I teased him with my tongue. Feeling him harden in my mouth was more fun than I thought it would be, and I liked being able to feel his arousal build. As his erection grew, I had to slowly pull back to accommodate his increasing size.\n\n\"Fuck,\" I heard him say under his breath, as he took in the sight of his cock in my mouth.\n\nOnce he was fully hard, I was pleased that I could now take him a little deeper thanks to the practice, but I still could only take him a little more than halfway into my mouth. My mouth was proportional to my short size, and it was difficult to mind my teeth the deeper I took him.\n\nHe must have noticed, because he said, \"You'll get used to that with time, but you can stop if it hurts.\"\n\nOf course, he would say that. Such a caring bastard.\n\nI pulled off to tell him that I wanted to know how to make him feel good, and he instructed me on various ways to do so. I discovered that he liked when I roll my tongue around his tip, and he prefers a much firmer grip than I initially thought would be comfortable. Apparently, balls are hit and miss, sometimes they feel good, other times it can be too sensitive. He told me that playing with his balls when he was close could often make him cum. I was amazed at how good Tyler was at communicating what he liked and didn't like.\n\nHe groaned as I wrapped my hand around his girthy base and stroked him while I bobbed my head up and down. I teased him with the tip of my tongue as I did it, and after a while he started rocking his hips into me. His hands lightly held my head, and it made me want him to press me down hard on his cock, but I knew I would gag if he did that.\n\nI knew he was close when his gentle grip on my head tightened and he began to thrust more forcefully into my mouth. I bobbed faster as I pumped the base of his shaft. Before long I heard his delicious groan, \"Jen, I'm cumming!\"\n\nRopes of his warm cum poured into me, covering my tongue and throat. I noticed it tasted better than last time, sweeter and not as bitter.\n\nMaybe the lube had something to do with it last time?\n\nWhen his balls drained, he released my head and lay his head back, his chest rising and falling. I flopped beside him to snuggle up to him. As I laid my head on his chest, I told him \"Welcome back!\"\n\nHe kissed the back of my head as he played with my hair.\n\n\"Was that good?\" I asked him as I trailed my hands across his sexy torso.\n\nHe laughed, \"You mean you couldn't tell?\"\n\nI chuckled before planting a kiss on his chest, \"Smartass.\"\n\nI felt his hands caressing my back, his fingers trailing in gentle circles that made my skin tingle.\n\n\"Everything is good when you are here...\" he said in barely more than a whisper. My eyes almost began watering as I was caught totally unaware by the tender statement.\n\nI was also caught unaware when he suddenly shifted, moving my head off of him so he could roll on top of me. He surprised me when he kissed my lower lip gently, so I asked, \"That...that doesn't weird you out?\"\n\n\"What doesn't?\" he asked as he planted another kiss on my cheeks.\n\n\"Kissing me after I swallowed your...cum?\"\n\n\"To be honest, it's not my favorite thing, but it's a stupid reason to not kiss a woman who was willing to do that for you. I just won't use tongue until after you drink something.\" He tilted his head slightly, \"Is, that okay?\"\n\nI couldn't help but giggle at his odd sense of chivalry, but it was really sweet and thoughtful of him. I asked him if he wanted to me to go grab something to drink, but he simply shrugged, \"If you want to, but I was planning on kissing a different set of lips.\"\n\nMy spine stiffened as I realized what he meant. He didn't wait to see my response, nibbling on my ears and neck, causing a little gasp to escape me.\n\nThis wasn't part of my plan, since I hadn't thought further than blowjob practice.\n\n\"I thought...\" I managed to stammer, \"...guys get tired after they cum.\"\n\nHis eyes held a defiance in them I wasn't used to seeing, \"Some do, sure, but that's a poor excuse for not satisfying your partner.\" He caressed my cheeks as he looked at me, \"Besides, it would hardly be fair to leave my gorgeous sister hanging just because I already got mine.\"\n\nGuess my brother's need to please extended even to the bedroom, and it was so endearing. But all thoughts were stripped shortly after as he began biting my neck more forcefully, causing me to groan.\n\nHis earthy brown eyes met mine before he lowered his tone to a barely audible growl, \"Have I told you how much I appreciate you, Jen?\"\n\nReason? Logic?...Gone now. His words unraveled me as I felt myself getting wetter. \"Ty...\" I breathed as he moved his mouth down to my breasts. Kissing them teasingly, nibbling around the nipple sensuously.\n\n\"Let me show you how amazing you are...I've dreamed of this for years.\"\n\nA spine-tingling hunger flared in his eyes, one that made my heart skip a beat. No words came to me as I propped my head up on a pillow to watch him. He nibbled around my breast, trailing his hands along my stomach and sides, teasing me. I arched my back into him, craving more contact. Finally, his lips met my sensitive nipples, and I squirmed under his touch.\n\nHis hands trailed down to my shorts, which he began pulling down. I simply groaned my approval. He slipped a hand beneath my panties as he took a nipple into his mouth again, and I exhaled as he ran a slow finger along my wetness. His groan into my chest told me he could feel how wet he was making me.\n\nHe found my clit and began teasing it with delicate passes. I tried to sit up to remove my panties, but he gentle pushed me back down. \"I'll get those...you just focus on what feels good.\" He smiled wickedly as he said it, and I felt a familiar shiver down my spine that I couldn't quite place.\n\nI noticed he was watching me intently as he tried various strokes and intensities. He was gauging my reactions. He finally licked the tip of his fingers and plunged a finger inside of me, causing me to gasp. His fingers were thicker and longer than Syn's were, and in no time at all he found my g-spot. He gave it a few strokes, still watching me intently. He pulled his finger out before building any sort of rhythm.\n\nI let out a disappointed sigh, but he just smiled at me.\n\nHe got up and knelt at the foot of the bed. Slowly, he removed my purple panties, dropping them on the floor as he admired me. I felt my face flushing as he took a good look at my lips. \"Beautiful,\" I heard him say, and my face flushed even more.\n\nI squirmed with anticipation as he bit my thighs teasingly, his teeth tickling my skin making me more sensitive. He kissed my legs until he found my mound, and he swore under his breath as he parted my wet lips. I felt myself blushing profusely, and I had to fight the instinct to close my legs. He came up a bit to look at me as he said, \"You're so beautiful, Jen.\"\n\nI was helpless against his smile then, his eyes so clearly reflecting the joy he felt. The love in his eyes melted my heart.\n\nA moment later I was melting in a different way as his tongue dragged along my clit teasingly. Knowing my brother was the one sending these jolts of pleasure through me only added to the sensations. He toyed with me, trying a variety of different rhythms and licks. He stuck his fingers back in and did the same.\n\n\"Ty...what are...?\" I began to ask.\n\n\"I want to see what makes my baby sister tick. Be a good girl and tell me if you don't like something, kay?\"\n\nI knew this feeling now...powerlessness. It coiled through my spine. I was powerless against that smile...and I was loving every second of it.\n\nThe devilish light in his eyes shone as I nodded. I was about to be ravished by my pleaser brother.\n\n\"Just because we can't fuck,\" he said as he slowly inserted his fingers back into me, \"doesn't mean I can't make you cum till you are too sore to walk. Right...Sis?\" His tone on the last word sent me into overdrive. All I could do was nod as I stared at that beautiful wicked grin on his face.\n\nIt didn't take him long to figure out the various ways I liked to be touched. Some of them I wasn't even aware of. I realized then what kind of lover my brother was. He was studying all the ways I liked to be pleased, so he would have an arsenal to use on me.\n\nI moaned when he found my G-spot again. He stroked it tenderly a few times before upping the intensity, returning his mouth to play with my clit. I grabbed his hair as my thighs lightly shook.\n\nLike Syn, He was good at this, and his tongue was magic as he teased me. His pace was steady, but slower than I wanted, and it was delicious torture. I soon began rocking my hips into him, his touch on my sensitive spots overwhelmed all thought.\n\nI groaned as I grabbed his head, muttering his name. This wasn't just any boy...this was my brother, and the forbidden contact amplified the pleasure.\n\nBefore long he picked up the pace, eagerly attacking my clit and g-spot, causing me to arch my back into him. Moments later my legs began to shake, and I cried \"Ty!\" My orgasm crashed into me, causing my body to shake and ripple as each wave tore through me. The whole time Ty teasingly massaged my clit with little strokes, playing me like an instrument.\n\nHe slowed down enough to let me recover when I got too sensitive. \"Fuck Ty...that was so good!\"\n\nHe looked up at me but didn't take his finger out of me.\n\nI had seen a look like this before. Predatory, wicked, and primal. It wasn't just Syn...they were both predators...and I was their prey.\n\nHelplessness slithered though me as his pussy-juice-coated grin widened.\n\n\"T-Ty?\"\n\n\"Oh, no...\" He answered with a laugh, \"...I'm not done with you yet.\"\n\nHis fingers began to caress my g-spot again, causing a little moan to escape my lips. \"Remember what you would call me whenever I went out of my way to make you happy?\"\n\nMy breath caught as I realized what I was about to be in for, \"...A-aggressive pleaser...?\"\n\nHis grin turned villainous as he began attacking my clit again. I was more sensitive now, and each touch sent lightning through my entire body.\n\n\"F-fuck...Ty!\"\n\nHe groaned into me as he sent pleasure throughout my body. I was only vaguely aware that my little moans were growing louder as the intensity continued to build. I dug my fingers in his scalp as I felt another orgasm starting to rise. The taboo sensations were too much, and he was hitting all the right spots. His fingers and his tongue were both good but working in tandem they were way too good. It was too much, and my legs began to shake.\n\nI cried his name as I came again, rocking my hips into him as I soaked his finger and face. This time however, he didn't let up even when I got sensitive, causing me to thrash around the bed. I screamed and squirmed in a useless attempt to escape his powerful grip on my legs. Just like with Syn, the sensitivity soon turned to pleasure again.\n\nKnowing he was strong enough to pin me like this was so fucking sexy. He was going to make me cum whether I liked it or not. I couldn't think and was barely capable of forming words as the sensations electrified me.\n\nIt wasn't long before I felt another orgasm approaching. Ty kept his pace steady as he groaned into me. \"T-t-t-Ty...Fuck...I'm...I...\"",
        "His fingers didn't stop as he looked at me, his command was unyielding, \"Don't hold back, Jen.\"\n\nMy legs clamped around him as I came again. I couldn't stop myself from screaming as pleasure slammed into me like a train. My legs shook into him as his devilish tongue and merciless fingers worked me. I couldn't speak as the waves of pleasure washed over me.\n\nHow much longer could he keep this up?\n\nHow many more times would he make me cum?\n\nWhen I came down, I didn't even try to resist anymore. He could do whatever he wanted to me then as the aftershocks of multiple orgasms coursed through me.\n\nHe made me cum two more times before I became too sore and sensitive.\n\nAfter I recovered a bit from the numerous orgasms, Ty removed his finger and licked it, \"Delicious...and so sexy.\"\n\nI couldn't even say anything as I watched my handsome brother wipe his face on a towel. When he finished, he asked, \"Was that too much? I can keep going if you want.\" His eyes shone with a challenge in them, like he was daring me to say yes.\n\nI just stared back in disbelief, unable to find words.\n\nHe flopped on the bed, caressing my sides as he said, \"I could do that all day if you wanted me to.\"\n\nFuck me. Both Syn and Ty were monsters, endurance monsters...\n\nI just kissed him. Pulling my lightly quivering body into him as I did. We lay there for a time cuddling before I needed to get up to use the bathroom. When I came out, I found him in the hallway with two water bottles in hand. I watched as he walked down the hallway, giving me a lovely view of his semi-hard cock as he approached.\n\n\"Thirsty?\" He said, handing me mine.\n\nI drank it before going back into Tyler's room, feeling his eyes on my ass as I walked.\n\nI paused at the foot of the bed, leaning over it to reveal my voluminous ass to him.\n\nHe stopped dead in his tracks.\n\n\"Syn told me you loved my ass...\" I said, delighted at seeing him freeze for a change.\n\n\"Who wouldn't?\" he asked rhetorically, unable to take his eyes off me.\n\nI yelped in surprise as he spanked me, not hard enough to hurt. It made me almost want him to hit me harder.\n\n\"God damn...\"\n\nI turned around to kiss him before sitting on the bed, \"One day soon, I want you to fuck me from behind the way you fucked Syn.\"\n\nI saw him start to harden, \"Fuck...\"\n\n\"Syn told me you fantasized about it...\" I asked, trying to imitate Sydney's sexy tone of voice but pretty sure I was failing at it.\n\nHe laughed, \"Of course she did.\"\n\nI reached over to grab his dick, \"He looks like he is ready to go again.\"\n\nI was about start stroking him when our phones went off at the same time.\n\nTy and I exchanged a look before we went to check.\n\nIt was from Syn: Are you two fucking without me?\n\nI instinctively checked out the window but didn't see her car. Ty laughed, reassuring me that she was probably still at work.\n\nAn idea came to mind as I grabbed Tyler's dick. I began to stroke it teasingly until it was fully hard. He cocked an eyebrow at me before I told him, \"Let's send Syn something fun.\" I didn't give him the chance to reply before kneeling and taking him into my mouth, looking up at him as I did. He groaned and fumbled with his phone, and I heard the shutter click.\n\nI knew he sent it to the group chat since my phone went off a moment later.\n\nHer reply came a few minutes later: Fuck Jen, you look so good on your knees. Oh, and your cock looks nice as always baby! \ud83d\ude18\n\nTy read out his reply as I sucked him off: She wants me to fuck her from behind.\n\nLess than a minute later came her reply: I want to watch that! Her ass is so sexy!\n\nHe smirked as an idea struck him. A moment later he was recording me on Snapchat as I worked his cock. I bobbed faster, using my hands to stroke him as I took him as deep as I could. He groaned at the intensity of the new rhythm.\n\nSyn replied: You guys are mean. I'm getting so wet while I'm stuck at work!\n\nTy began filming again, and I began stroking him harder as my tongue swirled on the head of his cock. I kept at it until he started tightening his grip on my hair and bucking his hips. He groaned, and I knew he wouldn't be able to last long at this pace. I reached over and began caressing his balls, encouraging his release.\n\n\"Oh fuck...\"\n\nI pulled off him, but didn't stop stroking him as I told his camera, \"Wanna watch him cum in my mouth, Syn?\"\n\nI pulled him back into my mouth and began working him at full intensity. It wasn't long before he groaned, \"Fuck, Jen, I'm gonna cum!\"\n\nHe twitched and trembled as each pulse of his cum shot into me, coating my mouth and tongue. I just kept swirling my tongue on his tip, listening to the sexy noises he made each time I did. I couldn't help wondering what it would feel like as he came inside of me, the thought sending little quivers to my sore nether regions.\n\nWhen he finished, he sent the message before we flopped on the bed. I drank some water before laying down, knowing I would want to kiss him. He played with my hair as our lips met.\n\n\"Fuck that that felt so good...Thanks sis.\"\n\nI just smiled at him cheerfully, \"I'm glad you liked it! But I still want to deepthroat you.\"\n\nHis eyes cocked a brow in disbelief, opening his mouth to say something when our phones went off.\n\nHoly Fuck! That's just mean! Do you have any idea how turned on I am right now?!\n\nWe laughed as we read it. Tyler got up to go to the bathroom, checking the clock as he did. We realized mom and dad would home soon. We sent Syn a cute pick of us captioned with \"Miss you!\" Before heading to the kitchen to make dinner.\n\nWe had a generally pleasant evening with our family, but they had no idea we were texting Syn filthy things as we ate dinner and chatted.\n\n***\n\nThe next two days weren't very eventful. Ty had work and classwork to finish, and I had to take care of some college application stuff. Syn told us that they had gotten approved for the apartment they wanted, and that it would be ready in about 2 weeks.\n\nShe also sent a naughty pic, saying I can't wait to watch Ty fuck you Jen.\n\nShe wasn't the only one.\n\nI had reflected on it often since that fateful day when I joined Syn and Ty in the bedroom. The part of my brain that cares about what society thinks kept nagging me, \"Are you sure about this? Don't you want to save yourself for the right guy? Won't it ruin the family if it doesn't work out?\"\n\nYet I knew the answers to each of those questions each time they popped up. Save it for the right guy? My brother is the greatest guy on the planet in my eyes...there will never be any guy more deserving than him. I was so proud of who he had become.\n\nRuin the family? I'd say fucking your brother already indicates that something has gone terribly awry. Yet in my heart, I knew...Ty would always love me. As terrifying as the thought was, even if he and Syn didn't work out, he would never abandon me. I honestly don't even think he would consider it as an option. He would stand by me even to his own detriment.\n\nYes. I was sure. I was ready to have him take my virginity. My sexual awakening with him may have been only a few short weeks ago, but I had a crush on my brother for as long as I could remember.\n\nHaving reached a decision that my brother would take my virginity, I now had a new problem. Two weeks is a good chunk of time sure...but two weeks when you are looking forward to something? I braced myself for the wait, knowing this one would be far more torturous than waiting two days.\n\n***\n\nSyn came over on Friday afternoon to work on stuff for the apartment. It felt so natural shopping with her, and I felt my heart skip a beat when she casually grabbed my hand. We walked through the store, hand in hand, like a real couple. I tried to scan people's reactions, which isn't easy when making eye contact embarrasses you...but I wanted to know. I expected funny looks, since we made a rather interesting couple visually, what with our different body types and contrasting skin tones. Instead I found warm smiles and one couple came up and told us that we were \"adorable together\". I couldn't stop smiling after that.\n\nIt didn't feel real, but this beautiful, athletic girl was my lover now...and it even came with the added perk of getting to have my brother too. I laughed to myself at the odd dynamics of our wacky relationship, and yet it seemed to suit us perfectly.\n\nSyn and I cracked jokes while we finished buying stuff we would need for the apartment. She was so attentive to my input and kept asking what would help me feel most comfortable. She was determined to make me happy living with them.\n\nGuess Syn had a stronger pleaser side than I thought.\n\nI knew that the world might think that Tyler had a harem of two ladies, but honestly, more often it felt like Syn and Ty were my harem...which was a surreal feeling considering my lack of dating experience.\n\nWe got some ice cream before heading back to our house. We knew Ty wouldn't get back until about 30 minutes before our parents showed up, so we mostly hung out. Around 3 in the afternoon or so my alarm went off, scaring the crap out me.\n\nSyn gave me a curious look.\n\n\"It's my alarm for my birth control. I hadn't really been taking it, um consistently, until you know-\"\n\nI was going to finish with recently, but Syn finished it for me. \"-you saw us fucking last week?\"\n\nShe laughed at my awkward response before she said, \"I tried everything to not forget those damn things, but you know me Jen. When have I ever been good at stuff like that?\"\n\nMy eyes widened, \"You aren't on birth control???\"\n\nShe burst out laughing, \"If I weren't Ty and I would have like 3 kids by now! Nah I got an IUD when I turned 18. Best decision I ever made.\"\n\nI was on birth control since it made it easier to predict when my time of the month would be, but not having to worry about taking a pill every day sounded really nice. I made a mental note to look into it.\n\nSyn turned off the tv and turned to me with a wicked grin on her face, \"You know what Jen? I'm bored, lets change that!\"\n\nShe grabbed me by the hand, leading me into my room before pushing me onto the bed. She didn't even bother to close the door before she ravished me.\n\n***\n\nTy came home a little while later. I heard him call for us as Syn was working me toward my second orgasm. She removed her tongue from my clit to call out to him, \"We are here babe, in Jen's room. You should join us.\"\n\nShe didn't wait for him before she returned her face between my legs.\n\nTy's face was amazing as he saw Syn's gorgeous form kneeling on the bed, her head between my legs making me moan. My voice came out as a moan as I said \"Hey Ty, welcome...\"\n\nI never finished that sentence as Syn began massaging my g-spot with her fingers. Fuck she was good at that.\n\nWithin moments Ty had removed his clothing and closed my door. \"You guys are nuts; you know our parents will home in like 15 minutes right?\"\n\nSyn removed herself from my dripping pussy before she told him, \"Then you'd better fuck me hard.\" Her tone almost made me cum, I was already getting close when Ty walked in.\n\nTy smirked as he looked at me, \"I think it's your turn to sit that amazing ass on my face, Jen.\" I could hear the desire in his voice when he growled the words.\n\nSyn knelt down to give him a quick, make-him-fully-hard blowjob before guiding him to the bed. I watched him lay down as Syn positioned herself on top of him, her caramel skin looked incredible in the afternoon light. She didn't waste any time teasing, she just buried his thick cock to the hilt, drawing a moan from his lips. My brother eyed me with desire as he motioned for me to sit on him.\n\nI was still nervous about this position, but I was also too close to orgasm to stop. I sat atop him facing Syn so I could watch them fuck. His fingers dug into my luscious ass as he began working my clit.\n\n\"Oh shit...\" I groaned, knowing I wouldn't be able to hold on for long.\n\nSyn groaned as she began grinding on his cock faster, \"Does that feel good gorgeous?\"\n\nI couldn't answer, I just took in her beautiful form, admiring how good she looked with my brother's cock inside of her. A moan escaped my lips as my orgasm drew closer.\n\n\"Hear that Ty? Your sexy little sister is going to cum on your face.\"\n\nHis groan reverberated through me, pushing me to the brink. My legs began trembling on him as I watched Syn start working those hips at full speed.\n\n\"Ty...Syn....Fuck!\"\n\nI writhed and shook as my orgasm shot though me. Ty didn't stop assaulting my clit as I spasmed on his tongue. I leaned forward slightly as I trembled, unable to hold my head up as the pleasure overwhelmed me. The move threw off Syn's rhythm, so she stopped and kissed me as I came.\n\nAfter a bit he stopped teasing and I got off of him, my legs still wobbling as I moved to my gaming chair.\n\n\"We need to do that more often!\" Ty groaned out. His face was covered in my juices, and the satisfaction in his eyes made me want to jump on his cock right then and there.\n\n\"I love it watching you cum, Jen...\" Syn said, grinding him for a bit longer before pulling off. We knew our parents would be home any minute now. Ty checked the time, before he and Syn exchanged a look. Without saying anything, Syn laid face down on the bed, putting a pillow under her hips and squeezed her legs shut. My brother was going to fuck her in prone, and I couldn't even imagine how tight she would be like that.\n\nThey both groaned deliciously as he bottomed out in her. I could actually see her pussy lips gripping his thick cock as he pulled out from each thrust.\n\nIt wasn't long before they were groaning with pleasure.\n\n\"So...fucking tight babe!\" Ty groaned as his hips began bucking wildly.\n\n\"Baby, I can't.... it's so good!\" I knew she was about to cum, and I couldn't stop my hand from moving to my clit as I watched.\n\nTy smacked her ass hard, and Syn screamed into the bed as she came. She twitched and shook but didn't stop throwing her ass back into him. He didn't stop as I heard him start to groan.\n\nA filthy idea came to me, and it was one I wanted to try, so I told them, \"Cum in her tight pussy so I can clean her up after!\"\n\nSyn's pretty amber eyes widened at that.\n\n\"Fuck!\" was all Ty managed to say as his eyes widened before he impaled Syn's tight pussy, spasming as his orgasm pulsed through him. Syn's scream into my bed was so sexy as she felt my brother fill her.\n\nWhen he finished, he pulled out and Syn flipped onto her back, spreading her legs for me. There was something so fun about watching my brother's cum pour out of her. I simply knelt down and began lapping it up, spurred on by the fact that I could taste both of their juices at the same time. Every time I passed her clit she trembled, and I couldn't help but smile at the satisfaction it brought me.\n\n\"God that's so hot!\" Ty was stroking the last bits of cum from his cock as he watched us.\n\n\"Jen, I love you! You kinky little fuck!\" Her voice shuttered with each pass of my tongue.\n\nI pulled off of her with a smug smile on my face, knowing what I said had pushed Ty over the edge. With a giggle, I wiped my mouth and told her, \"I love you too, Syn!\"\n\nAs if on cue, we heard my mother's car drive up. We laughed as we fumbled for our clothes, Ty grabbed his clothes and ran to the bathroom to shower.\n\nWhen my mother came home, she saw her daughter and Syn emerging from my room casually, as if we had just told each other a funny joke.\n\nOf course, didn't see the fact that both of our panties were damp with our juices as we walked to the living room.\n\n***\n\nFriday and the weekend were mostly dedicated to apartment stuff and hanging with the family. It was super cute how Syn sought my advice when we were setting up the internet, saying that she didn't want me to \"lose to some asshole because our internet sucked.\" She wasn't entirely right about the types of games I played, but I appreciated her concern. No gamer likes lag.\n\nIt was our family friend's birthday on Saturday, so Ty and I went to make an appearance for a bit but it wasn't very interesting. I spent most of it playing an app game on my phone.\n\nWe stayed a while before Ty sent me a text saying: Think they will be here long enough for us to have the house to ourselves?\n\nI replied quickly, excited by the promise in his words, Probably. What did you have in mind? \ud83d\ude09\n\nHis reply was almost instant, I want you to sit on my face again!\n\nWithin a few moments we had said our goodbyes and mentioned that we needed to go do some apartment stuff. We walked back to our house, since they only lived a few houses down.\n\nWe grabbed something to drink before we closed the door to Ty's room to entertain ourselves.\n\n***\n\nSunday was our family day. It's when we would play board games, watch tv and hang out. Syn came over in the afternoon to join us. We received word that our 3 bed 2 bath apartment would be ready to move into by Friday. We decided we would pick up the keys on Friday, and move in on Saturday, since some of our friends were free to help.\n\nWe couldn't wait, but not entirely for pure reasons. I had told Syn and Ty over text that we should have Ty take my virginity as a sort of housewarming celebration. We wanted to do it on Saturday, but we knew we would probably be exhausted from moving and unpacking, so we tentatively decided we would do it on Sunday.\n\nIt was incredibly difficult not to burst out laughing in front of my parents as Syn, Tyler and I were texting. Syn started it by claiming we needed a name for the event.\n\nTy replied first, suggesting The Fuckening.\n\nI replied with my own sarcastic suggestion of V-day.\n\nTy added, That's good...Operation Ground and Pound?\n\nSyn was clearly struggling not to burst out laughing as she talked to my parents. When she got a chance, she replied, What about Jen's Welcum Party?\n\nTy and I both cracked up laughing, which made Syn do the same. Our parents just raised a brow after exchanging a look.\n\nTy covered for us, \"Sorry, sorry\", still trying to come down from his chuckling, \"Just something stupid I saw online, so I sent it to Syn.\"\n\nOur father just shook his head, \"Kids and your social media.\"\n\nOur mother simply smiled, \"Well I think it's wonderful how well you three get along. Our three children!\"\n\nOur mother had long taken a liking to Syn and had treated her like she was already family. We smirked at each other, choosing not to comment on the fact her \"three children\" were moving in together so we could fuck each other senseless.\n\n***\n\nMost of Monday morning was spent applying for jobs near campus, since everyone except me had work. I knew Ty and Syn had made it clear they didn't care if I worked or not, but I didn't want to be a freeloader. It was bad enough that they always wanted to spoil at me emotionally and in the bedroom, I wanted to at least make an effort to contribute.\n\nI also helped them as much as I could by doing things like calling the electric company to make sure we would have power and what not, but the rest of the day was spent gaming and texting Syn and Ty. I was anxiously awaiting Ty's return, since I had a devilish idea that I wanted to try. I knew we had promised not to have sex without Syn there, but that didn't mean we couldn't mess around, right?\n\nWhen he got home, I was waiting in the living room with my back toward him.\n\n\"I'm home!\" He called out as he dropped his bag by the door.\n\nI had been waiting for this little surprise with anticipation and took a deep breath since I didn't want to fuck it up by tripping or falling over.\n\n\"Jen?\"\n\nI stood up and turned around, revealing that I was completely topless as I said, \"Welcome home!\"\n\nHe froze as his eyes roamed over me, admiring my sizable tits as they bounced with each step I took to hug him.",
        "\"I missed you!\" I said, trying to make my voice low and seductive, mimicking the way Syn did it.\n\n\"I can tell!\" He didn't hesitate to kiss me.\n\nHe broke the kiss and headed to the fridge, presumably to grab some water, but instead he pulled out a pitcher of pineapple juice. I had noticed it in the fridge and assumed it was for a recipe. He drank some down.\n\n\"I had been slacking on this, since I usually cum inside Syn,\" He said simply.\n\nI tilted my head in confusion.\n\n\"Pineapple juice makes you taste better. I figure if my gorgeous sister is willing to swallow my cum, the least I can do is help ensure it doesn't taste awful.\"\n\nI was caught totally off-guard by his oddly thoughtful gesture that it struck a chord in me. He was such a damn sweetheart...he really does put me and Syn above all else in his life, and it made my heart leap for him.\n\nHe replaced the pitcher before wiping his mouth. \"Now then...\" Ty took my hand before continuing \"...Your room or mine?\"\n\n\"M-mine!\" I squeaked out, not expecting the way his voice changed from sweet to husky.\n\nWe both stripped after closing the door. Predictably he moved to satisfy me first. He kissed me as I laid over me on the bed. My hands ran along the lean muscle on his back and sides. I felt his cock hardening against my mound and began gently bucking my hips.\n\nI wanted my brother already. I knew the wait was going to suck. But neither of us would betray Syn like that. She was just as important to us.\n\nSo, I settled for the nibbles he placed on my neck and ears as he toyed with me. He slowly worked his way down to my tits and massaging them.\n\nI interrupted his journey to my wet folds when I asked, \"Have you ever done...69?\" I had been curious about it, and wanted to try it, even if the 9-inch height difference between us might make it awkward.\n\nHe grinned, \"Curious?\"\n\nThose earthy brown eyes were like sirens, calling to me. \"K-kinda...\"\n\nHe took my chin and tilted it up to look at him, \"Jen, don't ever be afraid to ask for what you want, okay?\" His words were a challenge and a command. I felt the by now familiar sensation of helplessness slowly snake its way up my spine at his tone. I parted my lips to answer him as I felt my other set of lips becoming wetter.\n\n\"Y-yes...\"\n\n\"Good girl.\" His praise unraveled me as I watched him lay down on the bed.\n\n\"You...want me on top?\" I wasn't able to keep my nerves from my voice.\n\nHe growled his response, \"God yes...that ass is amazing, Jen.\"\n\nI crawled on top of him, giggling when I heard his growl as he smacked my ass.\n\n\"What did I do to deserve this ass in my face, huh?\"\n\n\"Treat me like royalty and make me cum a lot...\" I impulsively replied, meaning it as a response, and realized my mistake when I heard his reply.\n\n\"I can do that.\"\n\nI exhaled as I felt his tongue against my clit in slow, tantalizing strokes. His fingers gripping my ass serving as a promise and a reminder: I was his.\n\nI reached for his now erect cock and began stroking it. It wasn't as difficult as I thought it would be to put him in my mouth, and I realized that I could take him deeper than I could before. All my popsicle training was paying off!\n\nHe groaned into me as I took his head slowly into my throat. I couldn't quite keep him there for more than a few seconds, but it was still progress. I bobbed my head up and down as I teased the head of his cock, exactly how he taught me.\n\nBut it wasn't easy to focus with Ty's skilled tongue assaulting my clit. I had to alternate between focusing on pleasing him and trembling on his face. He didn't stop regardless. When my legs began to tremble, I felt his finger enter me and began stimulating my G-spot.\n\nI pulled off his dick to moan. \"Fuck, Ty that's gonna make me cum!\"\n\nHe just groaned into me louder, vibrating my core.\n\nI tried to focus on sucking on his dick, but it was really hard to do when he was so good at hitting my sensitive spots. I pulled off him and just stroked him.\n\nMy orgasm hit a moment later. I shook and trembled on his delightfully cruel tongue as he teased me. When my orgasm subsided a little, I put his cock right back in my mouth, determined to please him even as the remaining pulses of pleasure rippled through me. He groaned as I shifted my weight onto my arm so I could stroke him as I bobbed back and forth.\n\nHe worked me to another orgasm before I could make him cum. I couldn't tell if he was deliberately holding back so he could get me off, or if my technique was to blame. Either way he didn't seem to mind as he groaned into me as I came again.\n\nWhen I came down, I got up off of him, causing his head to tilt as he looked at me, confusion dancing across his face.\n\n\"You keep making me cum...\"\n\n\"Is that a problem?\" He got up to stand next to me, caressing me and nibbling on my ears and neck.\n\nGod, it was so hard to think when he did that, like my brain just turned to mush. I pushed him back onto the bed, \"I want you to cum, Ty. I like pleasing you too...\"\n\nHe smirked up at me, \"But you always do.\" The way his eyes roamed over my body then made me feel like a goddess.\n\nEmboldened by his look, I grabbed a pillow for my knees and bend down before grabbing the bottle of lube. This time, I bought a flavored bottle of lube so it wouldn't be as bitter. He realized what I was about to do and grabbed a pillow to prop his head up.\n\nI loved his groans as I lubed him up, and the lust in his eyes made me want to make him cum even more. I sandwiched his thick cock between my tits as I worked him. He grabbed his phone and I smiled before tilting my head down to lick the tip of him I teased him for a bit before settling into a steady rhythm, quivering as a guttural moan escaped his lips.\n\n\"Holy Shit, Jen...You are so good at that!\"\n\nPride flooded through me as I continued working his cock. There was something visually satisfying about watching his meaty cock being enveloped by my silky tits. His muscled core began to tremble slightly, signaling he was getting close. I stopped teasing his tip with my tongue to tell him, \"Send it to Syn!\"\n\nHe knew what I meant, grabbing his phone and recording as I lifted my tits up and down, stroking his throbbing cock. He rose his hips to match me, and when I took his head into my mouth he grunted, \"Jen, I'm cumming!\"\n\nI groaned onto him as his orgasm struck, loving his moans and the way his hips bucked into me. I licked up every last drop of my brother's cum, pleased with myself for making him cum. I teased the head of his cock as he came, just like Syn had recommended over text, until he had nothing left to give. The taste of his cum was interesting with the strawberry flavored lube, but not bad. I kept teasing him until he got too sensitive and nudged me off.\n\n\"Fuck sis...that felt amazing.\"\n\nI giggled joyfully, \"I like making you cum...\"\n\nWe cuddled for a while before Ty got up to use the bathroom. I got dressed so I could help him start preparing dinner since our parents would be home soon. It was nice being able to have him make me cum like that, but it was starting to make me antsy. I wanted him to fuck me already...I wanted him to claim me.\n\nWhenever I thought of it, I couldn't stop the signals it sent to my lower half. A week seemed so far away.\n\n***\n\nTuesdays are Tyler's longest day, since he has the most classes and work that day. He would likely get home around 4 or 5. I knew Syn got off work around 4 as well, so I mostly amused myself with packing and gaming.\n\nSyn got here first, so we hung out and chatted while we waited for Ty. He got there about 20 minutes later, and I assumed we were going to have another fun quickie before our parents got here. As we chatted in the kitchen, I became aware that neither of them made any move toward the bedrooms, and there was a mischievous glint in their eyes.\n\nSyn was the one who brought it up, \"So...hey, Jen...\" Her tone made me straighten my spine and was dripping with that predatory energy she used so well.\n\nTy added for her, \"Syn and I have been talking. You know we want to make your first-time special right?\"\n\nI nodded. My palms began to sweat. Why did I feel like I was caught in spider's nest?\n\nSyn continued in a sexy drawl as she draped her arms around me from behind, \"I think we should add a bit of built up for it, you know, some suspense.\"\n\nTy took a pan from the cupboard and turned the burner on, \"We think it would be fun if we did some edging until the big day.\"\n\nThe strangest mix of delight and terror coiled through my spine, like a serpent exploring its new home. I tried and failed to keep my nerves out of my voice, \"E-edging?\"\n\nSyn sat down on the chair next to me before she replied, \"Remember when I told you not to cum before you joined us? That's edging.\n\nTy looked at me with a wicked grin, \"You can get yourself close...\"\n\nSyn finished for him \"...but you aren't allowed to finish.\"\n\nFuck. I knew two things then. First, while I could lie and get off without them...I didn't want to lie to them. Second, this week would be the longest week of my life if I said yes.\n\nTy added oil to the pan before cutting some veggies, \"We do it all the time, it makes the sex feel amazing.\"\n\nSyn just used the tips of her fingers to turn my head to look at her, \"We don't have to...but don't you think it sounds kind of fun?\"\n\nWhy was it so hard to refuse her or Ty? The prospect of spending the next four days in agonizing torture didn't sound fun, but the orgasms I had were incredible last time. \"It's...a little...It's kind of torturous...I guess.\"\n\nThe corner of Syn's mouth drifted slowly up into a smirk, \"It is kind of torturous-\"\n\nTy tilted his head back in emphasis as he added, \"-but it's amazing when you get your release!\"\n\nThe way Syn looked at Ty told me she was thinking of banging him right on the counter. She turned back to me with a similar look on her face as she eyed me over, \"What do you think Jen?\"\n\nI could just refuse. I could say no...but a part of me didn't want to say no. Some sick, fucked up part of me knew that the payoff would be incredible. The thought of having my pleasure-giving brother within reach but being unable to touch him drove me into a frenzy. I looked at them for a long moment, debating internally before I asked, \"W-would...would it really be that good?\"\n\n\"Five days of edging?\" Syn asked before she continued, \"Pretty damn good.\" Her tone dropped to that sensual whisper that always sent shivers through me, \"Your first time edging for five days...It will be incredible.\"\n\nI turned to the stove to find Ty looking at me, examining my face. I saw the hunger in his eyes. He wanted this. I turned back to Syn and found the same in hers. They wanted this for such a long time...I wouldn't refuse them. \"O-okay...\"\n\nTheir wicked grins had me feeling like I had simultaneously made the best and worst decision of my life.\n\n***\n\nWednesday, aka day 1 of edging.\n\nI spent an embarrassingly long part of the morning trying to convince myself that this week would fly by. If I just didn't masturbate until like the day before, it wouldn't be easy!\n\nThey say that our brain doesn't process negatives well, that the more you try to not think about a pink elephant, the more difficult it is to not think about said elephant.\n\nBasically, I screwed myself over from the start. I never had a problem not masturbating, but now that I had told myself I couldn't, the thought became irresistible. I distracted myself with job applications, video games and anime well enough, but the thought was always there.\n\nThe real challenge came though while Ty got there later in the evening. I figured this whole edging thing would mean we would be pretty hands off, so I was surprised when he greeted me with a deep kiss. He nibbled my ears and neck and he ran his hands up my sides.\n\nI whispered, \"So mean...\"\n\nHe whispered right back, \"I know.\"\n\nHe gave me one more good bite on the neck before he hopped in the shower.\n\nWe hung out watching movies and playing games, but I couldn't stop admiring him. Having him so tantalizingly out of reach was more frustrating than I thought. I had taken for granted the fact that I could jump him whenever I wanted to before yesterday.\n\nLesson learned, I guess.\n\nWe talked about the plan for moving in, and various things, but I was mildly distracted the whole time. He sat cuddling up to me on the couch, and as I looked at his lean muscle, or took in his scent, I wanted more of him. Not enough to break just yet, but I still wanted him.\n\nI managed to finish that day without touching myself once, but it wasn't easy. The more I told myself I couldn't, the more my body seemed to demand it. Saturday seemed a lifetime away.\n\n***\n\nThursday, or day 2 of edging.\n\nThis was going to be tougher than I thought. As it got closer to the weekend, I found myself increasingly distracted by thoughts like, \"How big will Tyler's dick feel in me?\" and \"How many times will I be able to orgasm before I pass out?\" I could already feel my nether regions beginning to nag me, a faint reminder. I had a renewed sympathy for people who just got out of a relationship, because I understood it now. When you are used to having something, and it gets taken away, that shit sucks!\n\nTo make matters worse though, today was Syn's half-day. She used this time to pack some of her stuff up, but that didn't stop her from sending me filthy texts.\n\nHey Jen, you'll never guess what I found!\n\nI replied back, What?\n\nShe took a bit longer than usual to reply. When my phone went off it was a picture. Syn had a pink dildo with the head barely inside her.\n\nFuck.\n\nShe sent a text soon after, I also found my old strap on, so I could fuck you too if you wanted! \ud83d\ude09\ud83d\ude17\ud83c\udf46\n\nI knew I shouldn't, but I felt my hand drifting slowly downwards. I replied, You're so hot, Syn!\n\nShe replied, Thanks, gorgeous! I wish I were stuffing you right now instead of these boxes. Thinking of you has me all distracted.\n\nYou aren't the only one! I found myself sliding my shorts and panties down.\n\nOh? Are you touching yourself, Jen? I wanna see! \ud83d\ude17\n\nI thought for a moment before I decided why not. I sent her a snap of me stroking my clit in slow circles. The touch electrified more than I thought it would, causing me to tremble slightly with each touch.\n\nMmmmm...God you look so delicious, Jen. Is it hard knowing you can't make yourself cum?\n\nUgh...don't remind me....\n\nOh, it's okay, Jen...Ty and I will make sure you cum more than enough times to make up for it. Good girls always get rewarded! \ud83d\ude09\n\nMaking myself stop before cumming the first time wasn't too bad.\n\nBut each time I felt my orgasm rise within me it became more and more difficult to break away. Eventually I got frustrated and pulled my shorts up, but my legs kept clenching as if they could fill me the way I so desperately needed right now.\n\nGradually the need faded, but the frustration didn't. As I played games, packed and texted Syn, the nagging from my core persisted. I found myself increasingly distracted with the urge to watch porn or read incest hentai.\n\nWhen Ty got home, these urges got even worse. I couldn't stop my thoughts like, \"Just jump him...you don't even have to fuck...beg him to make you cum. He won't say no to you if you beg hard enough.\"\n\nWhile we were hanging out on the couch, he asked me what he should make for dinner, and I said he should make something easy. But my tone came off with a hint of annoyance that I didn't mean to direct at him.\n\nHe just smiled. After a short pause, he walked over to me to kiss me. He pulled off slowly to whisper, \"Isn't it torture, baby sis?\"\n\nThe lips on my face weren't the only ones that quivered at his words.\n\n\"It's...so mean.\" I breathed, he was leaning over me, but I wanted to feel him on top me. I wanted him.\n\nHe kissed me for a bit before heading to the kitchen to take some frozen chicken out to defrost. I couldn't hide my pout as I watched the tv. The lines of edging often blurred between sexy and mean, and it felt mean right now. Why would they do this to me?\n\nI was lost in thought, so Ty scared me when he leaned the couch and whispered, \"You're cute when you pout.\"\n\n\"Ty...\"\n\nHe cocked a brow, waiting for me to finish.\n\nBut I knew I had no words. It wasn't him I was upset at. I agreed to this. \"...never mind.\" I turned to my phone, still pouting.\n\nI felt his breath on my ear and neck as he leaned down to whisper, \"It'll be worth it...I promise.\"\n\nI shuddered, the promise in his words sent familiar signals to my core. Even more so when I realized that tone held the same frustrated desire. He was suffering just as I was...\n\nWhy on earth do Ty and Syn do this each other? This sweet, cruel torture? Images of the first time I joined them came flooding back to me. I remember how hard I came, and how good it felt. These memories helped me understand why but didn't necessarily help with my eager libido.\n\nI decided to help Ty prepare dinner, since I knew I would just keep imagining filthy things if I just sat there. He welcomed the help, though I noticed he would deliberately bump into me from time to time, and that his hands would graze my body longer than necessary.\n\nAs I diced some tomatoes, he said, \"So Syn's mother bought us a new bed. It's a king.\"\n\nI didn't look up from my cutting as I replied, \"Oh?\"\n\n\"Yup...apparently she got a good deal on it. It's big enough for the three of us.\"\n\nI had just finished cutting and had set the knife down before he grabbed my sides from behind, pulling me into him.\n\n\"Best part is, the bedframe we got for it is just the right height.\" His tone dropped to that husky tone that drove me crazy, \"I'll be able to take you from behind easily on it.\"\n\nA little moan escaped my lips. I could feel his semi-hard cock though his shorts and began grinding into it. He thrusted back into me for a bit, but then pulled away.\n\n\"I take it you like that idea.\" He said with a little chuckle as he put an apron on to begin cooking.\n\nI bit my lip, opting to stay silent.\n\nSoon my parents got home, and we ate and talked as usual. They asked if I was fine, since I was even quieter than usual. I made up the excuse that I had a headache.\n\nBut it certainly wasn't my head that ached for attention.\n\n***\n\nFriday or day 3 of edging.\n\nMy eyes had slight bags under them in the morning, and my body felt tense. Mostly since I stayed up way too late edging. I just had one more day, but it felt like ages away. The past two days felt like two years.\n\nI finished packing the bulk of my stuff, other than my computer and such, since I wouldn't be loaded my gaming rig into a truck. No, no, no...my baby (aka my PC) was going to be riding safely with me, probably sandwiched between pillows and blankets.\n\nOf course, thoughts like these were drowned out by the demanding signals being sent to my brain from my core. I was developing a hair trigger to sexual stimuli now. Even slightly sexy things got reactions from me. I needed release so badly. Going three days without masturbating isn't hard...but edging for three days after waiting weeks to fuck your brother was torture. I needed to fuck. Syn, Tyler.... both. I didn't care. I needed to take the edge off.\n\nI couldn't stop staring at him as he made breakfast. Every time he spoke, I thought about sitting on that mouth. Every time he moved those muscled legs, I thought about him thrusting into me. I needed him so badly.\n\nI wasn't the only one. His voice had an edge of irritation that I could now recognize, and he was blatantly checking me out whenever he got the chance.\n\nAfter eating we loaded the truck his friend's dad lent us. Syn was going to pick up the keys soon, and we wanted to at least get some of the non-essential stuff done so we had less to do tomorrow. We spent a good part of the day loading boxes and doing check in stuff.",
        "I was thrilled to notice that Syn was just as fixated on me and Ty as I was on them. The blatant lust in her eyes made me want to throw her down and ride her face till I came. I wanted to watch her cum while my brother fucked me.\n\nBasically, I was horny as fuck.\n\nWhen you are horny, stupid ideas start to sound like great ideas, and it was that same horniness that compelled me to go to Tyler's room while I waited for him to get back. I knew we weren't allowed to cum, but I needed...something...anything to take the edge off.\n\nSo, I got ready for him and waited.\n\nWhen he got home and entered his room, he found me, stark naked with my ass up in the air, bottle of lube in hand.\n\n\"Hey, Ty...\" I didn't even bother to hide the impatience in my voice.\n\nHe exhaled as he took me in. I tilted my head to see a tent poking out in his cargo shorts.\n\n\"Hey, Jen...\" his voice was husky and thick. \"What's...what are...you are doing?\"\n\n\"Waiting for you...I had an idea. We can't cum...but we can at least have fun right?\"\n\nHe removed his shirt, tossing in the hamper, \"What did you have in mind?\" The frustration in his own voice was palpable.\n\nI wiggled my sizable ass at him. Tempting him with it. \"You could grind on me...using this,\" I added as I gestured to the lube.\n\nHis only answer was to begin planting kisses on my back and massaging my round cheeks. I was hypersensitized, and each kiss sent tingles along my body. As his face reached my eagerly awaiting rear-end, he began to bite and spank me. A moan escaped my lips each time he did.\n\nI heard him unbutton his shorts and heard them fall to the floor. I expected to feel his thick cock pressed against my ass cheeks, but instead I heard him say, \"No. if I do that...I won't be able to stop myself.\"\n\nAs I craned my neck to look back at him, he grabbed me and pushed me onto my side. I squeaked with surprise, and with one more push I was on my back at the edge of the bed.\n\n\"Ty...?\"\n\n\"You're bad you know...tempting me like this...\" The lust in his eyes was unmistakable. His breathing was shaky. He was struggling to hold himself back.\n\nI groaned as I felt his hard cock brush against my clit. I looked up to see that his dick was positioned so he could grind himself on my clit but wouldn't actually enter me.\n\nHe began thrusting, so agonizingly slowly as the underside of him became slick with my juices.\n\n\"Yes! Please...\" I couldn't stop myself from begging. I loved Syn and didn't to betray her...but I needed to cum. Just once...even a little one...\n\nEach thrust sent sparks through my body as he ground himself on my sensitive clit. One little movement and he could be inside of me, and we both knew it.\n\nHe replied in a husky voice, \"You're bad for tempting me like this you know...I think it's only fair that I punish you a bit.\"\n\nFear flooded me. What was he going to do? The fear was quickly replaced by shock as I felt the head of him prodding my entrance.\n\nMy lips quivered as I begged, \"Please...\"\n\nI groaned as I felt the very tip of him enter me. Yes! I needed this. I needed him so badly. I'd apologize to Syn. I'd do whatever it took...I needed this.\n\nWith a groan, he pulled away. A moment later he kissed me on the lips before he put his boxers back on. \"Mom and dad will be home soon,\" his words were matter-of-fact, but his tone was teasing, even if they were laced with disappointment.\n\nI whimpered and whined, holding his torso.\n\nHe caressed my cheek, \"Soon you can have me whenever you want. Look at how hard I am.\" His cock was throbbing and hard in his boxers, like it threatened to burst. \"Won't you wait with me, little sis?\"\n\nI couldn't hide my pout as I let out a long, irritated sigh, \"Yeah...\"\n\n\"I promise it'll be worth it.\"\n\n\"It better be...\" was all I said as I rolled off the bed to get dressed.\n\nHe simply grinned.\n\n***\n\nSaturday, day 4 of the hellish torture known as edging.\n\nFuck this.\n\nNo seriously.\n\nIt was so frustrating to be around a bunch of your friends and family when the two people you so desperately want to bone are RIGHT THERE!\n\nSo what if there was no furniture in there! I'd bang them on the damn floor.\n\nMy frustrated thoughts aside, moving in was a blur. Chelsey, a friend of mine, dropped by to help set up my room. Chelsey...wasn't really someone I had ever looked at sexually before. But in my sexually frustrated state, I found myself checking her out. Checking almost everyone out. I had to keep reminding myself that tomorrow I would get to cum all I wanted to.\n\nFriends and family helped us unload and unpack the bulk of our stuff. The bed for the master bedroom was huge and looked super nice. Syn's mother had worked as an interior decorator before, so she gave us useful tips on where to put our furniture and such.\n\nOur aunt came by to drop off some food for us, which was super nice of her, since we would be way too tired to cook.\n\nWhen the day was over, Syn, Tyler, and I were all so exhausted we laid on the new bed. Even Sydney...the living ball of energy, didn't say or do much. Moving is hard fucking work...\n\nI remember eating, and I remember flopping on the king bed and I vaguely remember Sydney snuggling up to me. But I don't remember much beyond that.\n\n***\n\nDay 5 of edging...I guess?\n\nI slept like an incredibly lazy rock. My body was still a bit sore, but nothing a salt bath wouldn't fix.\n\nI emerged to our new kitchen, which hadn't been completely unpacked yet, but was functional. The smell of bacon wafted through the air as Ty and Syn looked at me.\n\nSyn spoke first, \"Morning, beautiful...hope we didn't wake you.\"\n\nTy turned away from the bacon to admire me, \"Morning, Sis, like the hair.\"\n\nI just groaned, knowing that my hair was likely a mess. I totally got why Syn kept her chestnut brown hair in that lovely pixie cut of hers, I'll bet it was way easier to manage than the crazy dark mop I currently wore.\n\nI noticed that everyone was far more casually dressed than I was. Ty wore an apron with no shirt, and his shorts. Syn wore a thin tank top with similar shorts, no bra. I looked down, realizing I had crashed wearing the clothes I was wearing yesterday, jeans, bra and t-shirt.\n\nSyn laughed at me as I noticed. \"Wanna get comfy, cutie?\"\n\nI noticed the same edge of frustration in her voice that Ty and I also had.\n\nAs I headed to my room to get dressed, the reality of the situation began to dawn on my sleepy brain. I was living with them now...we could do whatever we wanted with our free time.\n\nI got lazily dressed in a tank top, no bra, and a light skirt before bounding happily out of the room to go brush my teeth. It didn't feel real. The past week felt like years...and then I remembered why. God, I was horny. I brushed my teeth, my hair and put my glasses on before bounding out of the room.\n\nSyn remarked on my clothing choice, \"Now that's what I'm talking about! That's much better huh?\" She and Ty didn't even hide the fact that they were watching my tits bounce as I walked.\n\nTy smiled as he handed me a plate of eggs, French toast, and bacon. His smile turned into a smirk as he said, \"Eat up, Jen...you are gonna need your energy today.\"\n\nSyn opened a bottle of champagne to make mimosas, adding \"Hell yeah you are!\"\n\nAs we ate, Syn and Ty laid down their basic plan. We would take turns taking Epsom salt baths to recover from yesterday, with the girls going first at Ty's insistence. After that...\n\n\"We are going to fuck like newlyweds till we pass out!\" Syn said.\n\nWe cleaned up the kitchen before Syn and I headed to shower. Normally we would have just showered together, but it was easier to transition from shower to bath in the separate bathtubs. The Epsom salt and warm water did wonders for my sore body.\n\nI could hear that Syn didn't take nearly in the bathtub as I did, but somehow that didn't surprise me.\n\nI lay relaxing for a while. Knowing that soon, I was going to get my release. I wanted to be ready for it.\n\nBecause when my brother got out of that fucking bath, I was going to fuck him and Syn both until we couldn't fuck anymore.\n\nI rinsed off any remaining Epsom salt and hopped out. I didn't bother getting dressed as I headed toward the living room/kitchen.\n\nSyn was sitting on the couch with a towel draped around her neck. Her smile was so beautiful and terrible when she took in my naked form. \"Well hello, gorgeous...\"\n\nI strode right up to her, trying not to trip on my own two feet. I was far too horny to be shy around these two.\n\nHer lips found mine and her hands greedily began to roam on my body.\n\nShe broke off to look me in the eye, \"Once Ty gets out of there...are you ready?\"\n\nI just grabbed her hand and placed it between my legs, letting her feel how wet I was. A moan escaped my lip as she slowly flicked my clit.\n\n\"Let's go wait for him on the bed.\"\n\nThe shower turned on, indicating Ty was washing off any remaining Epsom salt before we heard it turn of.\n\nMy heartbeat was thunderous, and my body quivered with anticipation. I needed this so badly. This wasn't just about cumming...it was a release in so many ways. I wanted to belong to my brother and Syn completely....\n\nSyn didn't wait for Ty though, she climbed on top me, kissing me intently. The lust in those beautiful amber eyes made me feel like the sexiest woman in the world as she began to nibble my neck and ears. I arched my back into her as I moaned. My body was so sensitive...so desperate for release. I could feel Syn's rapid heartbeat on my hands as I cupped her breast. She shivered with each touch.\n\nI wasn't the only one desperate for release.\n\nTy emerged from the bathroom connected to the master bed to find Syn and I caressing each other.\n\nHer head moved to my crotch as I watched his cock stand to attention. God it looked so thick, so meaty...and he was going to claim me.\n\nSyn didn't waste any time. She went straight for my clit with delicate flicks, my hypersensitized clit shot lightning through my body with each pass.\n\nOne stroke of her devious tongue.\n\nThen another.\n\nI could already feel my orgasm rising, I was so desperate for release and each stroke of her tongue was pushing me steadily toward it.\n\nMy hips began to rock into her as I called her name. I was begging at this point. To anyone. Tyler, Sydney, God...anyone...\n\nPlease let me cum.\n\nI was so close. One or two more flicks is all it would have taken,\n\nBut she pulled away.\n\n\"Nope...you are gonna cum...on this,\" Syn gestured to Tyler's fully hard cock. \"Just let me get it ready for you.\"\n\nIt looked plenty ready to me, but I didn't say anything.\n\nI watched as she sucked the head of his cock teasingly, drawing a groan from his lips as she swirled her tongue around him. She didn't suck him for long before she pulled off. \"There...hopefully that'll help.\"\n\nTyler grabbed an odd triangular pillow and told me to put in under my hips. The desire burning brightly his earthy-brown eyes as he admired me.\n\nSyn adjusted the pillow under me before she said, \"It'll help him fill you deep.\" She turned to Tyler, \"Don't hurt her now.\"\n\nTyler gave her a look we both understood. Ty would never hurt me. I knew that.\n\nHe positioned himself at my entrance and swore as he took in my body lying there.\n\nI knew I was plenty wet for him. Every fiber of my being wanted him inside me.\n\n\"Are you sure about this, Jen?\" His voice shook as he asked, even though I could tell he was straining to hold himself back.\n\nI held my arms out for him, \"Please, Ty...make me yours.\"\n\nI gasped as the first few inches entered me slowly, and my hand clasped Syn's hand tightly. \"Fuck...\" I swore softly.\n\nSyn just caressed my cheek, \"Does it hurt?\"\n\n\"No...he is just...big...\"\n\nTy softened his voice, \"Let me know if it hurts...sex should never hurt.\"\n\nSyn added, \"Not unless you want it to.\"\n\nWhen he slid most of the way inside me, my whole body reflexively clamped around him as I swore. \"Fuck...\"\n\n\"You okay?\" Syn asked lovingly.\n\n\"So...deep!\" was all I could say. He was deep, way deeper than I could ever go with my fingers. He felt so big inside me, and I could feel my wet walls squeezing him. It took me a few moments to get used to his girth. Ty just kissed me as I did. Slowly I released my death grip I had on him with my legs and arms so he could thrust more. I gave him a nod to keep going.\n\nA moment later I once again clamped around him as I felt him bottom out inside of me. This time I screamed, \"Fuck!\" My body began to tremble and shake as he split me in two. He was so fucking deep...\n\nSyn let out a sexy moan, \"Is she tight, baby?\"\n\nTyler groaned, \"So fucking tight...\"\n\nAgain, it took a few moments to get used to him. He was big...and even my very wet pussy was having trouble accommodating his size. I slowly released him once again.\n\n\"You can...thrust now.\"\n\nHe slowly pulled his cock nearly out all the way, before slowly thrusting all the way. A long moan escaped my lips. I had been so close from Syn's tongue, and I knew I wouldn't last long.\n\nTy pulled out again before rocking his thick cock into my tight walls. \"Fuck....that feels so good...\" His breathing was jagged, and he was trembling with restraint,\n\nTy settled into a steady rhythm, sliding his girth in and out of me, each time he bottomed out made my legs shake. My orgasm was coming and fast.\n\n\"Ty...I can't hold on...\"\n\n\"I'm getting close too.\"\n\nKnowing that he was going to cum in me soon sent my body into overdrive. My hips began bucking into him in time with his thrusts making him hit even deeper. I groaned into his neck as my legs shook. His thrusts became more frantic and I could feel him beginning to pulse within my walls. His hips began bucking faster.\n\nMy orgasm would denied no longer.\n\n\"Ty!\"\n\n\"Jen!\"\n\nI exploded on to him as I felt my brother filling me with a thick load of his cum. My entire body shook as I clamped onto my brother, a week's worth of denied orgasms slammed into me. I couldn't speak...couldn't even think as the powerful waves of pleasure flowed through every part of my body. My toes curled and my legs trembled uncontrollably, and my brother's grunts and moans sent bolts of pleasure down my spine. I dug my nails in his muscled back as he emptied himself in me. The ultimate taboo.\n\nI was his...I was finally his.\n\nI would never let him go. Never.\n\nWe laid there for a long while, catching our breath.\n\nTy caught his breath first, \"Sorry...\"\n\nConfusion flared on my face. The fuck was he sorry about?\n\n\"That...I didn't last long.\"\n\nMy face softened into a warm smile as I felt tears pooling in my eyes. \"Neither did I...You idiot pleaser...\"\n\n\"God, that was so hot!\" Syn's face was flushed and she was trembling. One hand toyed with her pussy, but I could tell from her shaking that she wasn't letting herself cum.\n\n\"Okay, Syn...It's...um...it's your turn.\"\n\nShe cocked a brow as she looked at me. \"Oh?\"\n\nI tried to look confident as I pointed to my face. \"Your turn.\"\n\nShe squealed with delight as she adjusted herself. I felt Ty start to pull out, but I wrapped my thick thighs around his torso. \"No!\"\n\nThey both froze.\n\n\"Stay in me!\"\n\nTheir smiles widened. Ty shifted his weight back, so he could kneel on the bed. He was only about halfway in me this way, but it worked.\n\nWith the way clear, Syn climbed onto my face, groaning when my tongue brushed against her clit. I could tell she was kissing Ty since her moans were muffled.\n\nShe began to shake after the second pass of my tongue. I heard her break the kiss to swear, \"Fuck...I'm so close...\"\n\n\"Is my cute sis gonna make you cum, Syn?\"\n\nShe whimpered, and I sped up as I heard it. Every part of her body was trembling, aching for release. She shuddered each time I flicked her clit.\n\nAfter a few more passes, she exploded on top me, drenching me in her juices as a massive orgasm crashed into her. I gripped her ass, digging my fingers into her as she trashed on top of me, teasing her clit as she screamed. Her legs trembled around me. I felt Tyler begin to thrust reflexively in and out of me, causing me to moan into her.\n\nWhen she came down, she got off my face, and Ty pulled out of me at the same time.\n\nI heard Tyler swear as his juices leaked out of me, which Syn quickly moved to lap up. Knowing Syn was eating a brother and sister's cum at once was unbelievable hot.\n\nSyn and Ty sandwiched me as we cuddled for a minute, laughing at the rush our release had given us. I was a little sore sure, but not nearly enough to stop me. We had been denied for a week, and my body demanded more.\n\nSyn looked like she really wanted to say something, and I got the sense that she wanted more too. Uncharacteristically, I spoke up first, \"That was...so good! But...I need more.\"\n\nTy looked at me lovingly, \"You don't have to push yourself for us, I'm sure you are sore.\"\n\nFrustration danced on my face, \"You don't have to be so gentle with me...I don't need lovemaking right now...I need to be fucked! Syn does too!\" I wasn't entirely sure if that was true, but the little growl that came from her lips told me I wasn't wrong. \"Even if it hurts...I need you both SO badly!\"\n\nSyn's smile turned predatory, indicating that I had set the beast free, \"Mmm...and here I was holding back for nothing.\" She crawled over me to kiss me, pinning my arms on the bed as she bit my neck hard enough to leave a mark.\n\nI gasped as she bit me. I was only vaguely aware that Ty was moving off of the bed. When she began moving for my breasts, I pushed her off, rolling that beautiful fit figure onto her back. She groaned at my unexpected show of force. I bit her neck for a bit before sliding down her silky caramel torso toward her mound.\n\nI didn't waste time. I went straight for her clit as I placed my finger inside of her. The last week was a living hell...time for some payback.\n\nI began working her clit in tandem with my fingers on her sensitive G-spot. She moaned as I did. I knew she had been edging just as much as I had been, and that she was going to be very sensitive down here. So, I stroked her in slow, tantalizing strokes, savoring how each one caused her body to shake under my touch.\n\nHer fingers dug into my scalp as she gasped, \"Shit...that's so intense!\"\n\nI just moaned into her as I slowly picked up the pace, but still kept it teasingly slow.\n\n\"Like what you see, baby?\" I heard her tell Ty.\n\nI took my lips off of Syn to see that Tyler's dick was rising to attention at the sexy show.\n\nI replaced my lips on her clit and hastened my pace, causing her to swear at the intensity. I knew she was starting to get close by the bucking of her hips.\n\nI heard Ty whisper to her from the other edge of the bed, \"I like watching you cum for Jen like this...\"\n\n\"Ty...It's so good!\" She let out a moan as she looked up to kissed him. He reached down and gave one of her nipples a pinch, causing her to arch her back further.\n\nI slid a second finger into her, marveling at how tight the week of denial made her. Her walls clamped around my fingers as I began alternating my fingers against her g-spot. She broke the kiss to groan, \"Jen! That's-\"\n\nShe didn't get to finish that thought as her orgasm crashed over her. I slowed my fingers, but didn't stop, nor did I let up on her clit. She bucked her hips wildly with each stroke and those sexy thighs trembled around my head. Her hands held my head tightly to her clit as she ground herself into me. I was addicted to those moans, and each one made me want to hear another.\n\nSyn was still shaking lightly as she came down from her orgasm, but I didn't remove my fingers as I smiled innocently at her. She flashed a grin at me, an idea had come over her.\n\n\"Ty...I think you need to fuck her from behind.\"\n\nI didn't bother to hide the excitement on my face as I looked at Ty, \"Yes! Please?\"",
        "Ty looked hesitant, \"Are you...sure? I can be kind of rough in that position.\"\n\nSyn answered for me, \"Trust me, Ty, she wants it rough right now.\"\n\nI nodded enthusiastically.\n\n\"Alright. Babe? Care to do the honors?\" He asked as he moved his dick to her mouth.\n\nCuriosity took hold of me. \"Why do you suck him beforehand?\"\n\nHe answered, \"Foreplay helps a guy last longer.\" He looked like he wanted to say more, but Syn had just taken him into her mouth, replacing any lingering words with a groan.\n\nI tucked that knowledge away for later as I began moving my fingers inside of Syn once more. She moaned around his dick as I did.\n\nOnce she deemed him ready, she pulled off of me, scooting further back on the bed. I realized she was making space for me so I could present my ass to him on the edge of the bed. I quivered as I realized Ty would be able to fuck me while standing up, allowing for maximum thrusting power...exactly how I caught them fucking in their room a lifetime ago.\n\nSyn quickly got up and rummaged through a box in the closet, emerging with a familiar pink dildo. \"Try this on me!\"\n\nI figured out how to use adjust the vibrator on it, and flashed a grin at Syn. I was going to make her cum all over our new bed with this.\n\nShe shot me a challenging look, \"We will see how cocky you are when Ty is stuffing you.\"\n\nI gasped as I felt his head at my entrance. He was testing to see if I was wet enough. Trust me...I was more than wet enough.\n\nSyn positioned herself so I could work her pretty pussy while my brother used me. He swore as he put the head in. \"God, Jen...that ass is unreal!\"\n\nI just smirked at Syn, \"Then you should claim it!\"\n\nBoth he and Syn groaned at that.\n\nI wasn't able to keep my rhythm on Syn's pussy as he entered half-way into me. I swore reflexively as my walls clamped hard on his intruding cock.\n\nSyn just groaned as she watched us, \"Tight fit, cutie?\"\n\nI looked up her, silently mouthing, \"So full!\"\n\nHe waited while I adjusted to him again, and fortunately it didn't take as long as last time. I realized he wouldn't continue until I gave him the okay, so I told him \"You can move again.\"\n\nI clamped around him and screamed as he bottomed out, trembling as I felt how deep he was. He groaned as well, and I could only imagine how good the view looked for him as his thick cock was buried in my voluptuous ass.\n\nI couldn't focus on fucking Syn with the dildo as I adjusted, but she just played with my hair. \"Fuck, you both look so hot...\"\n\nI gave Ty the okay to start thrusting before turning my attention back to Syn.\n\nShe groaned as I began messaging her g-spot with the pink dildo. It was a good size, but the vibrations were intense, even on the medium settings.\n\nA second later I groaned as I felt Ty pull nearly all the way out and slide back in.\n\n\"Fuck!\" He groaned, \"You're so tight, sis!\"\n\nI couldn't answer as I shook. Each thrust on my sensitive walls was mind-numbingly intense. When he sped up, I was going to be a flailing mess.\n\nHe pulled out and thrust back in again, causing me to moan into Syn's clit.\n\n\"I think she likes it, babe.\" She said seductively.\n\nHe grunted before thrusting a bit faster. I immediately began to tremble as I felt the new pace. From this angle, each thrust caused him to slide along my g-spot, and his balls slapped against my clit lightly. I was so royally fucked...\n\nSyn began to tremble as well as I clicked the vibration setting one bit higher as I ground it into her. My tongue still stroking her clit in time with my brother's thrusts.\n\n\"You sure you ready for me to go harder, sis?\" Ty didn't stop thrusting as he asked, making it hard to focus.\n\nAll I got out was, \"Fuuuck...\"\n\n\"You heard her...\" Syn told Ty before she looked at me, \"Tell us if it hurts or you want to stop.\"\n\nTy added, \"Or scream 'Butterfoot', it's our safeword.\"\n\nI just nodded I stared into Syn's gorgeous eyes, knowing I was about to be a spasming mess.\n\nHe adjusted his pace gradually, but the faster he got the more intense it became. My legs began to shake as he impaled me, and I couldn't stop moaning onto Syn's clit.\n\nFinally, he reached a speed where his balls began slapping on my clit and I screamed into Syn.\n\nHer breathing was uneven as she said \"Fuck, you are so hot like that, Jen...\"\n\nThe sound of flesh smacking wet flesh filled the room, as did the smell of our combined sex. My orgasm was rapidly approaching as each thrust brought me closer to the brink.\n\nSyn's legs began to shake as well as she watched us, her insides being ravished by the vibrator.\n\nI couldn't think. Couldn't even move. My orgasm would not be denied, and there wasn't a damn thing I could do to stop it.\n\nTy let out an animalistic groan, and it sent me way over the edge.\n\nMy orgasm crashed into me, turning me into a puddle of pleasure. My legs shook violently as Ty resumed thrusting into me. I screamed incoherently as the waves of pleasure robbed me of all words and thoughts. I was a slave to the sensations coursing through me as I felt Syn's orgasm begin.<br >She cried my name as she trembled beneath me, her nails digging into my back and scalp as she forced my head to her clit. I wasn't able to do much beyond scream into her as she bucked her hips into my tongue. Her moans blended with my own and made everything so much sexier.\n\nTy smacked my ass hard as he began thrusting even harder. I screamed as the sensations overwhelmed me. I began fucking Syn vigorously with the dildo now, trying to match it to Ty's pace. She groaned at the new pace.\n\n\"You two are so fucking hot!\" Ty called out, his hips began bucking irregularly as he dug his fingers into my considerable ass.\n\nSyn encouraged him, \"Take her, baby! Make her yours!\"\n\nMy orgasm was already building, and my legs began shaking again. Each thrust felt too good, and the assault on my g-spot was incredible. Knowing that my brother was going to cum soon sent me spiraling toward the edge.\n\nI began moving the dildo with everything I had as I turned the vibration up and sped up my tongue. She was going to cum with us.\n\nShe cried and shook at the new pace. \"Jen! Fuck!\"\n\nI knew my brother was close when he started thrusting so deep it hurt, but the pleasure far outweighed the pain as my orgasm flew over the edge!\n\n\"Fuck! Jen!\" was Ty's warning.\n\nSyn's followed suit, \"I'm cumming!\"\n\nTy impaled me as deeply as he would go as I felt his throbbing cock fill me with his seed, triggering the biggest orgasm of my life. Pleasure barreled through me. Every twitch of Ty's big dick caused my entire body to convulse as Syn screamed my name. Her shakes and shutters, and Ty's groans within me added fuel to orgasm, rising me to unprecedented heights of sheer ecstasy.\n\nTy came down first, but Syn and I stayed trembling for what felt like an eternity.\n\nWhen Ty pulled out, I rolled over and collapsed on the bed. A moment later Ty did the same. No one spoke as our chest rose and fell. I felt Ty's load slowly drip out of me but made no movement...I was a puddle of jello...\n\nTy leaned over to kiss my forehead, \"I love you, sis...\"\n\nThe smug joy on his face was the last thing I remembered before I passed out.\n\nI awoke in the king bed alone, still naked. Judging from the light coming in from the windows, I'd say I was out for about an hour or two. I sat up, laughing when I noticed that our combined juices had stained the bed and dripped down my legs. My dark, shoulder-length hair was so messy it was more of a crazy, twisted forest.\n\nBut none of that mattered. What I noticed first was the blazing smile on my face.\n\nI got up to use the bathroom and clean up. I debated putting clothes back on but decided against it. I knew I would feel super weird if I was the only one dressed. Besides, I lived here now, and there were no parents around to tell me I couldn't.\n\nI bounced out of the master bedroom to find Ty cooking something and Syn lounging on the couch. They both had the same bright smiles on their face as they greeted me.\n\nTy had opted for a set of simple gym shorts, and his apron. Syn wore a see-through baby doll and a wicked grin as she saw me.\n\n\"Hey there gorgeous.\" She drawled out, suddenly losing interest in her phone. \"I like what you are wearing.\" She added with a wink.\n\nTy just let out a low whistle that made me blush. \"Seriously though...damn you look good.\"\n\nI mumbled something about how they looked good too. I discovered they passed out too, but only for like 30 minutes. Syn said she tried to put a blanket over me, but I kicked it off. That's the wonders of having plump curves, I always ran a little warm.\n\nI felt weird being totally naked, so I threw a thin shirt on while Ty finished up lunch. He made us a Japanese-style rice bowl with onions, bell peppers, and beef for lunch, saying he had a craving for it. Personally, I think he just wanted to spoil us.\n\nWe cleaned up our new kitchen. Our kitchen....it had such a nice ring to it. Anyway, we hung out on the couch while we let our food settle. Now that my pressing demand for sex had lightened, I was able to appreciate how comfortable it was living with them. But then again, they never made me feel like I needed to be anyone other than my clumsy, nerdy self. I doubted that would change now.\n\nI helped Ty set up the television and the Wii U, though Syn didn't miss any opportunities to slap my ass. She was making the most horny comments out of all of us, and I realized that she hadn't gotten fucked by Ty yet. That would need to change later.\n\nSyn got bored of Netflix quickly, cuddling up to me before she said, \"So, did you have anything specific you wanted to do for your Welcum Party, Jen?\"\n\nTy and I both laughed, forgetting that we decided to call it that as a joke. I shrugged, \"Um...I was kind of distracted this week...to really plan anything.\"\n\nSyn just nuzzled her face into my cheek, \"Aww, Jen's first time edging for a week. I feel really bad, a week is a long time for a newbie to edge...sorry about that...\"\n\nSyn was taken aback when my smirk turned wicked for a change, \"Oh it was hell...and I don't think I'm done paying you back for it!\"\n\nSyn stammered, \"H-Hey! It was Ty's fault too!\"\n\n\"Oh yeah! I have to pay you back for teasing me like that!\" I turned to face him with a fake glare.\n\nHe leaned away from me dramatically as if I would attack him, placing his beer on the coffee table. \"In my defense, you did wait naked on my bed with that amazing ass in the air. Do you have any idea how much willpower that took?!\"\n\nSyn's eyes widened, \"Oh you're bad, Jen...that's so mean!\"\n\nI simply blushed and turned away, \"I wasn't trying to be mean...I was just really horny!\"\n\nTy muted the TV as his grin turned mischievous, \"What about now?\" He leaned toward me to bite my neck before he whispered, \"Still horny, sis?\"\n\nAs if I wouldn't still be horny, especially after he did that. I shivered as I felt Syn's hands lightly cascading down my back. \"I-I....um...I think Syn needs to be fucked.\"\n\nHer hands froze on my spine for just a second, \"Oh? But it's your welcum party-\"\n\n\"-and you are m-my....\" I cut her off, but stalled on the word, \"...girlfriend!\"\n\nSyn squealed with joy as she pounced. Her voice dropped into a sexy drawl, \"Does that mean you are mine, Jen?\"\n\n\"A-as if I didn't already belong to you both...sexy jerks.\"\n\nTy finished his beer while Syn giggled as she assaulted me with kisses. I heard him chuck the can into the bin before he said, \"Shall we move to the bed? Or break in our living room?\"\n\nSyn smirked at me as she sat on top of me on the couch, \"Well, Jen, what do you think?\"\n\nI thought for a moment before deciding, \"That bed is really comfy...\"\n\n\"Bed it is then.\" He held the door for us as we got up and walked to the bedroom.\n\nThere were no pretenses when we got there, Ty removed his shorts while Syn removed my shirt, revealing my silky pale tits once again.\n\nTy removed Syn's baby doll, and as soon as it was off, she threw me onto the bed, causing me too squeal. The hunger in her eyes as her eyes trailed over my curvaceous form made me feel desirable beyond words.\n\nTy laid next to me on the bed to kiss me as Syn began placed kisses along my collarbone, moving down to my breasts. I trailed my hands down the lean muscle of Tyler's chest, admiring the way his sun-kissed skin contrasted my own.\n\nI squealed as Syn began to bite and suck on my nipples, and Ty leaned over me to bite my neck hard. They were marking their territory, and the thought made my lower parts quiver. These two gorgeous people...were mine, and I was theirs.\n\nI arched my back, my pussy now begging for attention as I reached for Ty's erection. I groaned as I touched it, marveling at how big it felt in my little hands. I ran my fingers along his shaft in teasing strokes as Syn kissed her way leisurely toward my navel.\n\nTy ran a hand up my chest and toward my face, \"Fuck...you both look so good.\"\n\nThe sheer awe in his eyes as he looked at us set something loose in me. A beast that I didn't even realize was still caged. I pulled him in for a deep kiss as I began stroking him intentionally.\n\nSyn must've seen because she hastened her pace, getting down on her knees and began biting my thighs teasingly as she made her way to my mound. My body trembled as her tongue reached my clit, moaning into my brother's mouth. I was still sensitive from the edging, and her slow strokes sent lightning through me.\n\nI gasped when I felt her finger enter me, and with a simple come-hither motion, she found my g-spot. Ty broke the kiss to whisper, \"Do you like that, baby sis? Watching your badass girlfriend get you off?\"\n\nI whimpered, causing Syn to groan into me. She knew my spots and how to hit them, and my hips began to rock into her beautiful sun-kissed face.\n\nSuddenly, Syn began to move her hand in an up and down motion, causing her to finger to vibrate rapidly against my g-spot. I gasped at the change in sensation, \"Ooooh...fuck....\"\n\nI couldn't focus on stroking Ty anymore, the sensations were too intense.\n\nTy took one of my breasts in hand before sinking his teeth down on one my perky nipples. Syn's hand started to move faster, and my moans became louder. \"Syn...Fuck!\"\n\nShe just groaned into me; my hips began bucking wildly. Whatever she was doing was going to make me cum quick.\n\n\"Syn...don't stop...I'm gonna....!\"\n\nHer hand started moving even faster, and I couldn't finish that thought as my orgasm flooded me. My walls squeezed Syn's finger while I trembled around her. Between her tongue on my clit and Ty biting my nips, I was helpless against the pleasure they sent through me.\n\nGradually she slowed to a stop, and I was able to come down from my orgasm. Syn brushed her chestnut brown bangs out of her face before wiping my juices off her face.\n\n\"I love the way you cum, Jen.\" Syn said as she crawled back onto the bed.\n\n\"That...felt amazing!\" I said as I moved to kiss her.\n\nPride shone in her face, \"I can teach you if you like.\"\n\nI nodded enthusiastically, \"Yes, please!\"\n\nShe giggled before turning her attention to Ty. \"Care to uh, get him ready? Or shall I?\"\n\nI sat up, \"I'll do it! Look at the progress I've made!\"\n\nI didn't hesitate to crawl over Ty on the bed to take him in my mouth. I couldn't take him all the way down my throat yet, but I could fit the head in for a few seconds before my gag reflex acted up. Syn grabbed a hair tie to hand it to me, and I realized that was probably another benefit to her short pixie-cut hair style. When I sank back down onto him, Syn gave me pointers, tilted my head slightly to adjust the angle. Thanks to her, I was able to take my brother deeper than before.\n\n\"Damn Jen! That's pretty good for just two weeks! Your technique is good, now it's just practice. I'm sure Ty won't mind.\"\n\nTy just huffed a laugh that turned into a groan as I sank him into my mouth again.\n\nI pulled off of him, \"Is that enough to get you ready Ty?\"\n\n\"Trust me...it was enough. God you're getting so good at that!\"\n\nLove filled my smile, \"Only for you.\" I turned to admire Syn's gorgeous form in the early afternoon light. \"I want to watch you get fucked, Syn.\"\n\nShe giggled as she sandwiched me between herself and Ty to kiss me. \"Good cause I need to be fucked so bad!\"\n\nTy sat up, dropping his tone to a husky whisper, \"How do you want it baby?\"\n\nSyn adjusted herself so she was ass up on the edge of the bed, ready to be fucked from behind, \"Like this! It was so hot watching you fuck Jen like this.\"\n\nTy stood up and smacked her ass, causing her to squeal with excitement. Her ass didn't have the volume mine had, but it was firm and had a lovely bounce to it. She ordered me to position myself under her so she could eat me out before she grabbed her pink dildo.\n\n\"Have you ever used one before?\" She asked, dragging the vibrating head against my clit.\n\n\"N-not...really\" I said through my moans. I had used my gaming controllers before but never thought to buy any sex toys.\n\nShe moaned as Ty began to sink slowly into her. I caressed her cheek as I watched her eyes roll back. \"Fuck, I missed you, baby!\"\n\nTy just grunted as he bottomed out inside of her. Syn licked the tip of the dildo and turned it off before guiding it into my wet entrance. I shuttered as it entered me. It wasn't as big as Ty's dick, but it was a lot bigger than a finger. I moaned as she tilted it to make contact with my g-spot. Ty began to thrust slowly into her as a wicked glint filled her amber eyes.\n\nShe turned the vibration on, causing me to swear and shake with pleasure as the intensity on my clit overwhelmed me.\n\n\"Fuck...that's so hot, babe!\" I heard Ty groan.\n\n\"Mmmm...I want her to cum all over our new bed.\" She moaned out.\n\nI couldn't say anything as the intense vibrations made me tilt my head back, moans escaping from my lips. I had never experienced such direct stimulation on my g-spot before, and I was powerless against it.\n\nSyn began attacking my clit with her tongue and I felt my eyes rolling back. \"Fuck...Syn...Babe!\"\n\nShe groaned her approval into me as Ty settled into a steady rhythm, thrusting his thick cock into her. I began to tremble more as I watched their hot bodies fuck. My orgasm began to rise, and I rocked my hips into the dildo the closer I got.\n\nSyn started grinding the dildo into me, and I heard myself inhale sharply as she turned the vibration setting up a click. I knew I wouldn't be able to hang on for much longer.\n\nSyn groaned as Ty began fucking her faster. She removed her mouth to look at me. \"Jen...do you like how that feels?\"\n\nI nodded, bucking my hips more. I was so close.\n\nShe moaned, \"Do you want to cum for me?\"\n\nYes! Yes! Yes!!! I nodded in time with my hips, unable to speak. I was so close!\n\n\"Then beg for it.\"\n\nShe stopped moving the dildo as she took each of Ty's thrusts.\n\nI whimpered, \"Fuck...Syn, Please!\"\n\nShe groaned deliciously as she began moving a bit more.\n\n\"Please, please, please! I'm so close!...I'm yours, Syn! Please!\"\n\nMy legs were shaking now, I was on the right on the edge.\n\nShe smiled as her legs also began to tremble. \"Cum for me, Jen.\"\n\nI screamed her name as she sent me over the edge. My orgasm crashed through me, and my orgasm triggered hers as she screamed into my clit. We spasmed and twitched as the bolts of pleasure tore threw us. Tyler swore to himself, unable to look away from the two ladies he loved as we came. My fingers dug into her scalp and as I convulsed under her, and she clenched my thighs as she trembled.\n\nTy picked up his pace, causing Syn to scream again as he began fucking her hard. His hands dug into her sides as he pulled her further into his thrusts. Seeing it made me remember how good that felt, and I began rocking my hips into the dildo once more. I was still sensitive from the orgasm, but my lust for more was drowning out my body's complaints.",
        "Ty slapped her ass, his tone commanding and unyielding as he order her, \"Make my sexy sister cum again, Syn.\"\n\nShe groaned before she began sucking on my clit. I tilted my head back at the new sensation and screamed as she turned the vibrations up another notch.\n\nTy groaned his approval as his breathing became uneven. I moaned as I watched Syn's legs start to shake under the intense pace of his thrusts.\n\nI made eye contact with Ty before I told him, \"I want to watch you fill her, Ty! Cum in her!\"\n\nHis eyes widened, and his hips began to thrust frantically, his body building toward inevitable release. Knowing my brother was going to cum sent me to the brink, and I knew Syn wasn't far behind by the way she screamed into me.\n\n\"Fuck! Baby!\" Ty grunted as he impaled Syn deeply on his cock, trembling and groaning as pulse after pulse of his seed filled her. Syn and I screamed in unison as it triggered our own orgasms. The three of us shook and trembled as one. The waves of ecstasy rendered us helpless. Syn's legs shook as she screamed into my clit, and I screamed under the torturous vibrations on my g-spot.\n\nNo one moved. We just remained where we were. Ty standing at the edge of the bed, still impaling Syn from behind as she fucked me with her dildo. Syn turned the vibrator off...but made no other moves as we all finished trembling.\n\nTy pulled out, flopping on the bed, and Syn rolled over to do the same. Our chests rose and fell as we caught our breath.\n\nAfter a bit, I became aware that my entire body was sore from all the shaking. I cuddled up to Syn, squishing her between myself and Ty, wanting to be close to her.\n\nShe and Ty, as usual, recovered first.\n\nSyn said, \"Fuuuuck...I needed that.\"\n\nI just kissed her cheek as I lay against her.\n\nWe lay snuggled up together for a cute minute until Syn broke the moment by pushing me away. \"Your so cute, Jen...but why the hell are you so warm?!\"\n\nI tried to respond with something witty about my curves, but instead I realized I was so sore it hurt to laugh.\n\nSyn and Ty laughed at me, teasing that they \"must've fucked me too hard\".\n\nTy turned up the AC when he got up to use the bathroom, saying it was to compensate for their new space heater named Jennifer. We all knew that even though Syn and I technically had our own rooms, we were all going to be sleeping in here.\n\nWe lay for a while, chatting and enjoying each other's presence. We discussed our fears about people finding out about Ty and I, but Syn assuaged our fears claiming that \"You both could just say you are dating me.\" I had to admit it wasn't the worst idea. We may get some funny looks, but no one would need to know that Ty and I were also fucking each other.\n\nSoon we got up to eat some of the celebratory ice cream we bought, since it's my favorite desert. They laughed at me whenever I would clench my sides, as every time I chuckled it vibrated my sore abdomen, making me laugh harder. I was so happy I thought I would burst.\n\nAfter dinner and some discussion as to what we wanted to do tomorrow, we decided to go to bed early, exhaustion from moving and fucking beckoning us to sleep. We slept sandwiching Syn between Ty and I, and I cannot even begin to describe how nice it was. This wasn't just lust...I loved these two. I would stand by them and support them in all of their endeavors. They were mine....and I was theirs.\n\nI was home, I realized as I happily drifted off to sleep.\n\nWe still had a lot to figure out as a polyamorous couple, but I wasn't worried. I knew we would take care of each other. None of those things mattered right now though.\n\nFor now, my sore body needed to rest. Syn and Ty had the day off tomorrow, and I had a feeling I was going to need it. "
    ],
    "authorname": "Flameboy580",
    "tags": [
        "bisexual",
        "cunnilingus",
        "edging",
        "incest",
        "pleaser",
        "polyamory",
        "sibling",
        "threesome",
        "titfuck",
        "ffm"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/delectable-syn-pt-02"
}