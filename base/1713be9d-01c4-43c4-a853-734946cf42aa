{
    "title": "Golden Discovery",
    "pages": [
        "It was about a year and a half ago, I was sitting in my work truck having a lunch break and leching at any remotely sexy looking female who happened to walk by, fantasizing about kinky sex. Such has been my custom ever since I can remember. At 53 I still had a raging libido and quite simply did not get enough sex to satisfy it. I could still quite easily orgasm two or three times a day. \n\nMy wife and I had always looked after ourselves, eating properly and having active lives. My job as a farrier is particularly physically strenuous, as such I was still well muscled and tanned from working outside much of the time. I was in rude health.\n\nI still have a full head of brown hair with just a hint of gray and hazel eyes which I'm told still have a sort of boyish charm. Working with horses, you either get aggressive and shout and push and stay permanently pissed off \u2013 it's a difficult job with a surprising requirement for finesse and the horse constantly fidgeting can be frustrating \u2013 or you develop a sort of Zen sereneness, doing what is required all the time soothing and talking to the animal. Often we develop a sort of charisma, a chattiness and banter to keep everything pleasant and friendly, even if things are going wrong\n\nWomen, who are the vast majority of my customers, love the second approach. There is something about farrier men which some woman find attractive. Maybe it's the muscles, maybe it's the horsemanship skill, I don't know, but I'm not unaware of being ogled at sometimes and of course there is always the flirting.\n\nThis all did my uncontrolled sex drive no favours, even though I did well to hide it in order to maintain professionalism.\n\nMy wife Helena was also still a picture of health and sexiness, belying her 53 years and bearing of two children. She still fitted in the clothes she had when we were married 29 years earlier. I guess you would say her body was of the \"modeling type\". Very lean and slender, very little fat with small, still teenager-like breasts. Some would say her body was almost on the boyish end on the female body spectrum. She was built for speed, not comfort. She was very fit, her abs the envy of anyone who happened to get a glimpse of them.\n\nWhat made her sexy enough even at 53 to often be approached and propositioned from other men was her beautiful face, her cute ski ramp nose, sparkling blue-green eyes framed by her voluminous wavy blonde hair that cascaded down to the middle of her back; oh and those nipples which almost always presented themselves through her top. Yes, atop those perfectly shaped small breasts were the most prominent erect, overtly raunchy nipples.\n\nYet she had been raised by parents with Victorian values which we had never been able to get past sexually. Our sex was always very vanilla with nothing more risque than the occasional 69er. Amazingly however, Helena had the most intense orgasms and came to them quite easily and frequently. She always seemed try to control herself however and never really let herself go wild and enjoy them fully, almost embarrassed by their intensity. She aways seemed to be holding something back.\n\nThe frequency was also on the wane. Her seemingly decreasing interest in sex I always put down to boredom, tiredness or just a declining libido. This was distressing for me because still madly in love with her, I still wanted to fuck her every which way til Sunday, not withstanding my growing perversions and developing kinks.\n\nLiving on acreage gives you a certain amount of privacy. Typical of any male, when I needed a piss I'd just whop it out and go, often in front of my wife. I guess she felt what was good for the goose was good for the gander and eventually would do the same. When she needed to go she'd just pull down her panties squat down and let it go, often also right in front of me and often giving me full view of her pussy as she pissed. I don't know whether it was trying to erotic, trying to make a point, or just being completely comfortable with each other.\n\nHelena is a gusher and her bladder must be huge as she pisses in great volumes, gushing out like a fire hose. I'm not sure at that point whether Helena knew the sight of her piss flooding from her beautiful full sized pussy was a major turn on for me. I would become instantly hard at the sight. I never mentioned this perversion to her wishing not to offend those sexually obstructive Victorian ideals and dammit, I never wanted her to stop doing it.\n\nHelena was into some bizarre health practices, none more so than her recent use of urine for health. Part of this protocol was to drink from one's own morning urination which she did every day. Often as I gave her a kiss goodbye as I was off to work I could still smell it on her breath. It was intoxicating and I'd drive off with a hard on, wishing it was my piss I smelt on her breath.\n\nHaving such a strong libido and a sex life on the wane, I made use of Internet porn to jack off to. I loved all the hard core stuff. Things I'd love to have done with Helena but couldn't suggest. I'd downloaded and saved my favourites to a file on my hard disk, never believing my technophobic wife would ever find them. There was all sorts of stuff on there, all the hard core stuff, orgies, multiple creampies, oral creampies, a little bit of bondage etc. \n\nWith my growing piss fetish I had saved a lot of watersports videos as well. There was some great videos of mouth pissing both hetro and female to female, pissing inside pussies and assholes during sex etc. My fetish was never about domination or submission, it was about the taboo, the trust and intimacy of two (or more) people sharing their piss with each other. That is what turned me on.\n\nAs such I didn't save any pissing videos where there was any element of domination or abuse, well all except for one. It was titled \"Piss Whore Training\" or something similar. That was the title I gave it on my hard drive anyway. I just thought it was hot because of the amount the woman pissed as she was getting fucked.\n\nAs this fetish was raging in me, I had to play it out, I though there is no way Helena is going to go for this, so I had to find a fuckbuddy who shared my interest in pee sex. Her name was Kylie, a sexy blond woman in her early 40's that like me, liked to be pissed on and into during sex. Like me, she had no interest in a relationship, she also had a partner whom she loved but who wasn't into kink. She just wanted to act out her piss fetish and that is what we both did, in addition to all the other hard core stuff I fantasized about.\n\nI think Helena knew the whole time I was fucking somebody else. Women have a sense about these things, but once again that Victorian stoicism that accepted the husband taking a mistress, so long as it was just sex.\n\nMy phone rang as I sat there leching and eating lunch, It was Helena so I answered, \"Hi babes wassup?\".\n\nThere was a momentary pause before she answered and the tone I knew so well when something was wrong \"Hello\". Then nothing, silence except for the sound of her distressed breathing. I diddn't know whether she was angry about something or upset about something.\n\n\"What's wrong babes?\"\n\nThere was further silence, maybe 5 or ten seconds, then \"What are these videos on your computer?\"\n\nOh fuck, I thought to myself. \"What videos?\" I asked. Of course I knew which videos, but I was hoping she had found some of the other weird videos about conspiracy theories and whatnot, but that would not have prompted a call I didn't think. I was in deep shit.\n\n\"The sex videos and the ones where people are pissing all over each other\" she spitted out.\n\nFrantic for an excuse, I thought of saying that I was doing research for a PhD, or secretly a CIA spy and these were dirt files on politicians, but nothing remotes plausible popped into my head in the few seconds before my panic was interrupted with her inquiring \"Well?\".\n\nA few more seconds as the resignation came over me that my relationship could possibly be over or irreparably damaged, I decided to tell the truth,\"It's urolagnia\".\n\n\"I know what it is, I want to know what the fuck it's doing on your computer Wayne!\"\n\nI was still looking for a plausible excuse, a computer virus, hackers, friend borrowed it and I don't know how to delete them? Coming up with and absurd lie was just going to make it worse.\n\nAs a wave of resignation wafted over my consciousness, \"It's my fetish\" I dejectedly replied. My beautiful wife who I loved more than anything just found out I'm a pervert, a sexual deviant. Trying to shift the blame, a tactic I always reached for in desperation during our infrequent arguments... actually it was more an admission of the truth, I said \"Dammit Helena, the way you drink your own pee and pee right in front of me all the time has always turned me on, what did you expect?\"\n\nThere was no immediate reply. I couldn't tell whether she was just digesting my comment, about to hang up on me or completely blow up. When she eventually spoke again, her tone was softer causing me to speculate that she at least partly understood. Could I sense a mischievous smirk at the other end of the phone even? I wasn't sure. \"Well... okay, but what about all this other stuff on here?\" referring to the other hard core stuff I'd saved.\n\nThis was a time for telling the truth, I had no excuse for my love of hard core so I just had to lay it out, \"It gets me off Helena. You know I have a huge sex drive and I use that stuff to whack myself off... and we don't have sex that often anymore.\" I said, still trying to shift blame.\n\nI should have known better than use lack of sex as an argument weapon that is the hot button she never liked me to press and in a more accusing and angry tone she asked, \"So who do you think of when you're masturbating? Is it me or those girls?\"\n\nShe was expecting to catch me out lying when I said that I imagined her. She could always tell when I lied. Except when I told her that is was indeed her that I imagined doing all that stuff with, she could tell I was telling the truth.\n\n\"So you'd want to do all that stuff to me?\" she hissed.\n\n\"Not all of it, but I'd be lying if I didn't say yes.\"\n\n\"So what things would you do to me?\" she asked in her still Victorian outrage. Not waiting very long for an answer, she continued \"You'd fuck me up the ass? Ejaculate all over me? Watch me getting fucked by other men? Watch me with another woman? Fuck another woman while I watch dammit?\"\n\nI hesitated to answer as Helena impatiently asked \"Well?\"\n\nI thought the questions sounded more rhetorical, but I meekly offered ,\"Like I said, darling, not all of it.\"\n\n\"So which would you like to do?\" she asked but not in a tone that was in any way invitational.\n\nImpatient at my silence she started again \"Would you urinate on me? Want me to urinate on you?\" I gulped. I wanted to say \"Oh, fuck yeah!\" but I just couldn't let myself say it yet, still thinking that I was up to my ass in alligators.\n\nThat question sounded different, almost like she did want and answer, but before I could say anything she venomously spitted \"You'd want me to do piss whore training?\"\n\nOh fuck THAT video, I thought to myself. I wasn't much into B & D, but I found the redheaded middle aged woman on the vid extremely hot and I just loved how she almost continuously pisses while being fucked. In fact I skip over the domination aspects and just liked to watch the pissing. I sensed this was the one video that had her utterly concerned.\n\n\"I would never do anything to hurt you and I would never do anything you didn't want to do Helena.\" There was an ensuing pause and a very pregnant one at that. \"I need to explain something to you Helena,\" I said, breaking the momentary hiatus in communication, \"My pee fetish isn't about domination. It isn't about tying people up, or tying you up and pissing on you. I watch that video because I fascinated by the sex part, how she urinates so much during sex. I don't watch the BDSM parts of that video. For me it's about the taboo, the intimacy and trust that two people could share their pee with each other because they want to do it and be turned on by the naughtiness of it.\"\n\nThere was silence. \"Are you still there?\" I softly asked.\n\n\"Yes\" followed by further silence. I could tell she was digesting what I had just said and formulating her thoughts. I decided I could do nothing but stay silent and wait it out.\n\nFinally she spoke, softly and in a tone that under the circumstances exposed a great degree of unnecessary shame, \"I have an admission to make Wayne...\"\n\n\"Yes\" I answered, trying to prompt her to speak on.\n\n\"Well...\" she hesitatingly offered.\n\n\"Yes, what is it darling?\"\n\nIt must have been twenty seconds before she spoke again, a very long twenty seconds. \"I think I have a pee fetish too,\" she blurted as quickly as she could. I was almost like she was passing a mental kidney stone. The relief that it was out was palpable, even if it was painful passing it.\n\nI was mentally frozen and almost felt like I was going to black out at this revelation. \"Really? Go on.\"\n\n\"You're going to think I really weird now\" She squeeked.\n\n\"What? After what we just talked about? Babe I love you more than anything in the universe, nothing you say will change that or make me love you less. Go on tell me!\"\n\n\"Well, you know I'm into urotherapy, you know I consume my own urine amongst the other things I do with it. Well, I started to find the collection of my pee was turning me on. Drinking it, sometimes I wished it was your pee. I started masturbating when I had to have a pee during the day and I enjoyed the feeling of smearing my pee all over myself, My thighs and over my breasts, imagining it was your pee.\"\n\n\"Holy Shit Helena\" I exclaimed, \"That's so hot! Why didn't you ever tell me.\"\n\n\"The same reason you never told me I guess\" she reasoned. \"Anyway be quiet there's more. Wayne you know the video of the dark haired girl doing yoga, in the yellow singlet?\"\n\nBoy did I know the video she meant. The lady had a similar body type to Helena, it was one of my favourites. \"Yes, I know the one\" I said. Sitting in my work truck in the car park of a shopping strip I had gotten extremely hard listening to Helena's testimony, and I was starting to rub my cock through my jeans, my half eaten lunch beside me on the seat, now completely ignored.\n\n\"Well, you know how she lies on her back and draws her knees up, rotating her hips back...\"\n\n\"Yeah\" I interrupted, a noticeable lustful quivering in my voice.\n\n\"...how she pees on herself and onto her face and mouth?\"\n\n\"Uhuh\" I expectantly squeaked in an uncharacteristically high pitched tone as I massaged the bulge in my pants more vigorously.\n\n\"Well... I do that sometimes.\"\n\nTo be honest, I felt like I had entered a parallel universe. This is not something I ever expected to hear from my wife. I was light headed, almost in a dreamlike state, my world, her world had just changed because it was obvious we were now going to fulfill our mutual fantasy together. Although it was great doing all this stuff with Kylie, it was just sex on a physical level. Doing these things with the woman I love, my life partner and soul mate was on another level entirely.\n\n\"You've gone quiet Wayne, are we alright? You don't think I'm a freak do you?\"\n\n\"NO\" I blurted, almost shouting. \"That's the sexiest thing I ever heard, I can't wait to see that. Dammit if you're a freak, you're the hottest, most sexiest most beautiful freak in the world and this freak wants come home right now and have freaky sex with you.\"\n\n\"You want to come home and pee on me?\" she mischievously inquired.\n\n\"Only if you promise to pee on me.\" I bargained.\n\n\"What time will you be home Wayne?\"\n\n\"About 4:00 I guess, but I don't know how I going to work now.\"\n\n\"I'll be waiting\" she chirpily said.\n\nSomehow we manged to finish our conversation and sign off, and somehow I gathered myself up to get to the next job. That would take me up til about 3:30PM and a half hours drive home. I have no recollection of the work I did that afternoon, I can only recall thinking about Helena and anticipating what was going to happen when I got home and drinking as much water as I could. To make it worse, she kept sending me texts, actually they were sexts, another thing we had never done. I kept wondering if this was real, whether someone was playing a cruel joke on me. This was a different woman than the one I thought I knew. Well, not different, but a whole new dimension that was just being discovered, by both of us.\n\nI was speeding on the way home. I didn't care if I got booked I needed to get home urgently as my erection bubbled underneath by jeans, trying to burst through my fly to freedom. I also had a full bladder and was feeling just slightly desperate. I flew down our long gravel driveway, much faster than I'd ever driven on it before, bouncing on the ruts and kicking up clouds of dust. Pulling up at the door in a skid on the gravel I instantly sprang out, not bothering to shut the truck door and burst through the front door of the house, my cock bulging through my jeans.\n\nHelena was waiting there in the middle of the room, several towels arranged under and around her on the timber floor. She was absolutely naked, on her knees, her buttocks resting on her heels. I met her beautiful blue-green eyes with mine, her wavy blond hair cascaded down luxuriantly to the middle of her back, some strands forward over her shoulders, terminating at her pert breasts, those nipples that turn me on so much, rigid with anticipation. If not for the evidence of 53 years of laughter, joy, sorrow and grief in her face, I could have bee looking, lusting at a teenager. She had an expression on her face I'd rarely seen on her, unadulterated lust. Bloody Hell this woman still looked amazing I thought to myself. \n\nThrough my peripheral vision I saw an empty bottle of wine and a pitcher of water on the side table, she had been drinking, obviously. Understandable that this new sexual adventure would need some Dutch courage. My computer was still playing one of my videos. She'd been watching them all afternoon I surmised.\n\n\"Welcome home Lover\" she said.\n\nI stood, absolutely speechless, my mouth gaping at this splendid vision before me. I surveyed down her athletic body, past her breasts down to her amazing abdominal muscles. Her knees were wide open, exposing her pussy. Stunned once again by what I saw, she had shaven her pussy, her glistening and generously proportioned labia unfettered by hair.\n\nAs I looked at her, overcome by lust, I was also overcome by absolute adoration, that this woman whom I loved that has been so inhibited has taken such a bold step over the precipice from prude to overtly sexually adventurous woman. Only a few hours ago having her conservative sensibilities shocked by finding some the most kinky and depraved videos in existence on her husband's computer, coming to terms with them and accepting his kinks and then admitting and coming to terms with her own. Now she was about to play them out with him, with me. I was so hard, the head of my cock so engorged with blood I though it might split open.\n\n\"Come play with me\" she beckoned.\n\nI fumbled with my clothes, trying to get them off as fast as humanly possible and failing spectacularly, essentially trying to get my shirt and trousers off at the same time. Helena giggled at my unintentional physical comedy act. Eventually I succeeded, reluctantly realizing a bit of method was required if I was going to get naked. Successful, I violently threw my cloths aside in a faux tantrum. There I was, naked at last, standing there looking at her, my cock painfully erect, my balls aching from three and a half hours of anticipation. There she was, ready for her new sexual adventure, her implanted modesty, ripped up, shredded and cast out forever.",
        "As I moved towards her kneeling there on the towels on the floor, her eyes never left mine, nor mine from hers, her expression a mixture of the lingering amusement from my antics and expectation of what was about to happen, I knelt in front of her, softly taking one hand and pulling her forward to bring her buttocks off her heels. Our eyes were still locked on each other and I said, barely above a whisper, \"Fuck I love you Helena.\" \n\nFinally, we kissed, both shuffling forward on our knees to lock our torsos together, the smell of Chardonnay on her breath was intoxicating. As I reached down to pull my iron hard cock straight up along my abdomen, the only possible direction it could go in its current state, I found that Helena's hand had also arrived. Taking her hand I used it to guide my cock upwards, her continuing to to stroke it as our lips pressed against each other, our tongues tangled in their effort to search out each other's mouths.\n\nIt was the most intensely passionate kiss I can ever remember as our hearts raced and chests heaved, sucking in more oxygen. Pre-cum was oozing from my cock as she gently caressed me and I wanted so badly to get my hand on her pussy, ad impossibility in our current position. I ran my hands down her back, caressing as I went and finally down to the cheeks of her ass. She ground her hips into me as I thrust my hips forward and upwards, trapping my aching member between our abdomens\n\nI had to focus then otherwise I would have shot my load right then. Pulling my hips away slightly, I allowed room for her to continue softly stroking me as I ran my hands onto those perfect little breasts, gently taking her large erect nipples between my thumbs and forefingers.\n\nBreaking the seal between our lips she kissed my neck and ear, whispering \"Oh, fuck that is so good Wayne\", as I continued to molest her nipples.\n\n\"Are you sure you want this?\" I asked, referring to all the new things we were about to do to each other, \"You know, like this, like in the videos?\" Although I had dreamt of this moment for years upon years, I loved her too much for her to regret foregoing the modesty so strongly programmed into her. I wanted to make sure it wasn't just alcohol fueled bravado. I didn't want either of us to regret this.\n\nIn the most breathy, sexy voice imaginable she replied, \"Oh fuck yeah darling! I'm sick of being so inhibited, having my parents in my mind every time I have sex. Those videos opened my mind to what pleasures people who love each other can have together. I'm letting them go Wayne, I want to be your slut wife from now on, I want to try everything, do everything. I want to be fully alive without regrets.\"\n\nTo be honest I was stunned by her words. I was silent for several moments, I was taken aback by her referring to herself as a slut, an anathema to everything she had been taught to be. I tried to digest what Helena just said, what she meant by 'everything', whether everything to me was different to everything for her.\n\n\"Are you okay with that?\" she asked, worried that she might have said something wrong, interrupting my train of thought.\n\n\"Oh yes darling!\", I replied, \"I'm more than okay with that, dammit I've fantasized about this moment for so long, it's something I never thought would happen and to be honest I'm trying to figure out if its real or I'm dreaming.\"\n\n\"Oh it's real lover,\" she firmly stated, \"and Wayne...\"\n\n\"Yes?\"\n\n\"I really really really need to pee\" she explained, a mischievous smile coming across her face.\n\nMy own bladder was also feeling uncomfortably distended as well. With Kylie I had trained myself to piss through a pretty full on erection, but this was different, there was no way I was going to be able to piss through the intensity of this hard on.\n\nHolding her hips to keep her in her kneeling up position, I shuffled forward, maneuvering her thighs wider, positioning my knees between hers, and resting my ass back on my heels. I actually wanted my face in her newly shaved pussy when she gushed forth, but gently gently I thought, let's take this in steps. My cock would just have to have all the fun for now.\n\nWe had never really talked dirty before, but the way she said she wanted to be my slut wife, I thought I'd try to take a couple of risks as we went along. I enjoyed dirty talk myself and I didn't want to be abusive, just see if she liked it or not. \"So is my slut wife going to piss on my big hard cock?\" Being called a slut by me seemed to have a profound effect on her, visible making her melt and become even more aroused. \n\nIn this position, I had almost full view and full access to her pussy. Keeping my left hand on her hip, I moved my right hand to the glorious entrance to her womanhood.\n\n\"I like your new look, very slutty!\" I said as I massaged her labia. Is was absolutely dripping with her juices and as I found her clitoris and rubbed it she visibly shuddered.\n\n\"Oooh I'm going to piss on you,\" she moaned, letting me know it was coming, first a spurt as I inserted a finger into her vagina, the aroma hitting my olfactory senses, the golden nectar dripping over my hand and onto my thighs. Then, another slightly longer spurt.\n\nFinally as she took both her hands and spread her flaps, taking control of the future direction of her stream. I withdrew my hand from her pussy and offered it to her lips, her sucking the familiar taste of her own piss from my fingers.\n\nThis is insane, she really is letting go I thought to myself.\n\nThen at last her copious torrent gushed forth, over my thighs, my turgid cock and lower abdomen. I was shaking and weak with excitement, massaging her piss into my skin, feeling it hose over my cock as I stroked myself, streaming around my body, over my ass and saturating the towels beneath us. As her deluge subsided the only thing I could croak out was \"Oh fuck that was amazing\".\n\n\"Yes\" she whispered, as she shuffled back to access my lower half with her mouth She licked around my member, teasingly lapping as much of her own piss from me as she could avoiding my cock, then after a couple of runs up and down my shaft with her tongue, she took my glistening cock into her mouth. I groaned involuntarily.\n\nAs I watched this woman, still reeling from the sudden change in attitude, sucking as much of her piss from my body, I had two urgent needs. I needed to pee and I need to blow my beans. In my current condition there was no way I was going to be able to pee and I was very close to orgasm. Helena seem to intuitively know my dilemma. Stopping to look at me she said, \"Stand up, I want to do something super slutty for you.\"\n\nI could barely get my balance before her mouth was around my cock again, needily bobbing her head up and down my shaft. Fuck I knew I wouldn't last long, my hips thrusting her mouth in time with her, my bladder painfully sloshing around in my lower abdomen. We quickly picked up tempo, we both knew the was urgent and inside two minutes my first blast of cum was right there in the breech as I shouted \"I'm cummmming!\"\n\nIt was a warning to her. Though I desperately wanted to blast into her beautiful mouth, it was an opportunity for her to pull away and direct my jizz elsewhere, if she felt she couldn't take my cum. The reply was mmm... mmm... mmm and without Helena skipping a beat, my first ejaculation blew straight into the back of her throat. She didn't flinch as the next three spurts flooded into her, dribbles of cum overflowing through the corners of her mouth as I pumped her lips, her mouth now full to overflowing, taking the base of my cock with her hands and opening her mouth slightly for the last three spurts. \n\nPushing most of my cum out with her tongue and swallowing a manageable amount, my white seed was waterfalling down her chin now, recreating what she had watched on my computer, cascading onto her breasts. \"Oh my God!\" I whispered, as she massaged my cum into her breasts and nipples. I had masturbated to this very scene so many times and here was my Helena making my dreams come true.\n\nI knelt down, retaking my former position, both on our knees facing each other. Helena seem to be slightly overcome by the gravity of what she had just done and obviously suffering some level of shame and embarrassment. \"You're beautiful, that was beautiful!\" I said to reassure her of my utmost appreciation.\n\nTaking her hand and pulling her forward, I kissed her deeply and passionately, the smell and taste of my cum overpoweringly sexy. I massaged her breasts, slippery with my semen, again pinching her nipples between my fingers, her squeezing me closer.\n\nMy cock was still hard, the turgidity reducing just enough that I could empty my bladder on her. Concentrating on that task know as we embraced, I got a short spurt out, wetting her tummy where my cock was trapped between us, then another short spurt. \"Ooooh nice\" Helena said, as my aroma filled her nose and my warm wetness spread on her belly and dribbled down to her pussy.\n\nShe wanted to see this, she wanted to see my pee streaming from my cock and onto her body. She broke our embrace and lent backwards, buttocks on heels and supporting herself with one arm behind her. She spread her thighs as wide as she possibly could exposing that beautiful pussy to full view. I wanted so badly to get my lips on those flaps and clit of hers.\n\nWaiting for my stream, she started masturbating with her free hand. A bit of Zen concentration and my stream sprang forth, weakly as first, wetting only the towels between her legs and part of her thigh, then as my torrent gather strength, onto her belly and pussy as she alternatively fingered herself and massaged her clit. \"Ohhhh... ohhhh... ohhhhh\" she responded as I gasped with the concentration and effort to piss through the erection now becoming increasingly hard again.\n\nThen springing forward off her supporting arm, she sprang forwards to take the last of my stream into her mouth, following it down until her lips were again around the head of my cock, trying so swallow, but most of the final contents of my bladder spilling from her mouth. I felt faint as my cock returned to full raging hard on, closing off the final potential spurts of pee. Like a woman possessed with a demon, she pulled me over onto my back and kissed me deeply, shooting her tongue in to duel with mine, her right hand immediately molesting my cock and balls, the wetness of the towels beneath us squelching as we moved.\n\nThe taste of cum and piss mixed with a woman's saliva was not a new experience for me, it's something I dis with Kylie often, but this was the taste of my cum and my piss in the mouth of my beloved, taking me further into a parlous state of intoxication. The dopamine was running rampant in my brain, I was high as a kite on my woman's sex and I knew we were going to be fucking very soon, despite my very recent ejaculation. She needed me inside her, I needed to be inside her.\n\nWorking down her body with my mouth, I took a nipple between my lips and I groped and found the now hairless moistness between her legs. The sensation of me tantalizing her clitoris and the sucking sensation on that oversized nipple made her buck against my hand, her heart racing, gasping for oxygen, working down further, I thought this is no time for teasing, she needs to cum, fast. Organizing myself between her legs, Helena receptively drawing her knees up and out, her pussy beckoned my tongue, her labia glistening with moisture of her juices and our pee.\n\nWithout further ado, I hungrily my lips on her pussy. As I glanced up she was pinching and pulling her nipples aggressively. My fingers up her vagina, my mouth concentrating on her clit she was bucking hard against my face. I could taste small spurts of pee enter my mouth and drip down my hand as she thrust against me, then in a primal urge, she screamed \"I love you I love you I love you\" as her rhythm changed, thrusting harder against me, she orgasmed, squirting her ejaculate straight into my appreciative mouth.\n\nThe realization took me over like a blitzkrieg. Suddenly I knew why she seem to always be so restrained during sex and particularly at climax. My wife is a squirter! Holding that in, believing that it would put me off, that I might be disgusted by her had robbed her of her full enjoyment of sex all those years.\n\n\"Oh God Wayne, fuck me now, please fuck me now, I need you so badly.\"\n\nMy need was now as urgent as hers. In an animal frenzy I clamboured on top of her, her grasping at my body to try and speed up my entry. Her hand was waiting there to guide me in as fast as possible as our lips locked, her juices adding to the cocktail of sex we shared between us.\n\n\"MMMM...MMMM...MMMM\" she growled in a low sort of guttural tone as I desperately thrust into her, her bucking against me, our groins clashing violently. I could feel those little spurts of pee as I thrust, adding to the flood of juices squelching as we thrust into each other.\n\nAs Helena again changed rhythm positioning her pelvis so my cock was assaulting her G-spot. I could tell she was about to orgasm again, if it was possible I thrust even more deeply. I was so close as she erupted on my cock, her ejaculate fire-hosing my genitals as she screamed \"FUUUUUUUUCK\" as I kept ploughing into her. The sensation took me over the top as I exploded, my voluminous semen injected inside her.\n\nNeither of us wanted me to withdraw, both still softly moving rhythm, her vaginal wall spasmodically massaging my cock as it grudgingly begins to slightly wilt. I love the feeling of my cock in a cunt full of my seed and ancillary fluids of my fetish, our fetish. It's almost soothing, like a warm bubble bath after a long hard day, to be enjoyed and savoured.\n\nBreaking from our lingering kiss, Helena traced the contour of by cheek with her tongue, making a pathway to my ear, inserting it and sucking my earlobe. That always got me going prompting me to push a little harder into her pussy, and causing my cock to retain much of its erection.\n\n\"That was fucking wild\" she whispered into my ear.\n\nI was almost unable to speak coherently, my head spinning with the intoxication of being both madly in love and and fulfilling the mad, passionate and dirty sex I had always wanted with her. It was surreal.\n\n\"Pinch me!\" I whispered back to her, \"Actually, no, don't. If this is a dream, I never want to wake up!\"\n\nShe giggled and kissed me again, our tongues caressing, rather than duelling with each other.\n\nAgain she whispered in my ear, \"And what should a slut wife do now?\"\n\n\"Oh that's an easy one,\" I explained. \"a slut wife should clean up her husband's cock, sucking all the cum and pee off and licking it clean.\"\n\n\"Mmmmm, this is going to be my favorite type of cleaning\" she offered with a mischievous smirk.\n\n\"And because I'm such a good domesticated husband, I'm going to do the same for you, I'm going to lick your pussy clean,\" I said with an artificially broad smile, the one she knew I used when washing up as a bargaining chip for sex.\n\nRecognizing my expression, she giggled, the muscles in her torso flexing against mine, her vaginal wall giving just a bit more of a squeeze against my semi-hard cock. She kissed me again, deeply, passionately, then rolled me off onto my back, my cock bracing against the cool of the fresh air. I could see it was a mess of cum and wet with her ejaculation and pee as Helena spun her body round and straddled my face with her knees, getting her mouth into position. Her pussy was now directly over may face, it was likewise slathered with piss and cum, my copious ejaculation having overflowed from her vagina. It was a beautiful picture to savour, but for now I wanted to watch her, hoping she'd hold that position temporarily.\n\nSeeming to understand that I'd like to watch, she didn't bear down on my face, so I was able to see as her mouth descended on my cock, took a few strokes to suck of the juiced, then proceeded to lick the rest of my groin focusing extra attention on my balls. I drew my knees up to give her better access, Helena moving her arms to allow the passage of my thighs past them.\n\nShe was working the underside of my balls, slowly working her tongue southwards, licking and kissing my perineum, purposefully heading ever so subtly towards my anus. I'm as straight as a man could be, but the sensation of a woman's tongue in my ass is something special. She worked back again towards my balls, maybe unsure how far she should go, maybe looking for some sort of permission from me.\n\nShe sucked my balls momentarily, then again headed southwards. This time I wanted there to be no doubt that what she was contemplating was fully allowed, encouraged even. \"Mmmmmm that's so nice, I like that\" I croaked, straining my knees back further, rounding my hips and presenting my asshole as fully as I could.\n\nThis left no doubt in her mind as her tongue ran quickly down to my ass and ran circles around the opening. Fuck that's nice, I thought to myself as I started maneuvering her knees, dropping her messy cunt onto my face. As I licked and sucked our collective juices, swallowing what I had collected, Helena started to ride my mouth. Her mouth on my anus went AWOL momentarily, then feeling her saliva land squarely on my asshole, her mouth replaced by two fingers, massaging and circling around my sphincter muscle. My cock then feeling the familiar warm wetness of her mouth.\n\nI was already at full erection again, the anal play bringing me to attention. But there was no way I could cum a third time so soon. I'll enjoy this, but this was for her.\n\nI ravaged her clit with my tongue, her pressing hard into my face, struggling to occasionally get oxygen, her bobbing up and down my shaft, pushing harder at the entrance to my bowels with her middle finger. She was taking me deeply into her mouth, much deeper than ever before...\n\n...except for once. Long ago, before we were married, we were having a 69er with me on top. We were both pretty drunk. As I thrust into her mouth, I reached down, grasping her shoulders and lifting them, causing her head to fall backwards. In this position with virtually a straight line from her lips to her esophagus, I thrust deeply into her throat, right down the the hilt of my cock. She took it like a champion and didn't even gag, even as I shot my load down her throat. That was the only time we'd done anything like that, till now.\n\nHer finger was now violating the entrance to my asshole, breaking through just a little. Braking from sucking my cock she added more saliva to the operation, gently thrusting, ever so carefully as her finger made its way deeper into my ass. \"Mmmmmmmmm\" was my response as I bucked against her mouth and finger, encouraging her to push further.\n\nSuddenly she stopped her rhythm, as I felt her lip descending lower against my shaft, testing her gag reflex. I felt my cock right at the back of her throat, I felt her swallowing reflex and as my cock broke through to her esophagus, she pushed deeply into my ass and continued riding my face.\n\nWe were both unintelligibly groaning at that stage, her close to orgasm, excited by this new perversion, me in that never never land of being close to orgasm, but knowing it ain't coming right now.\n\nHer now increasing tempo and pressure against my face as my tongue worked her, then the familiar change of rhythm alerted me she was about to cum again. My cock grew harder in her mouth as her groans grew louder and more urgent. God I loved the taste of her as she leaked piss into my mouth as I sucked her. Her clean living meant she tasted sweeter than Kylie and I couldn't wait for this next explosion. I didn't have to wait much longer as she bucked twice, then screamed as she shot into my mouth once again, her ejaculate overflowing and splashing over our respective halves.\n\nI felt my cock deep down her throat as she orgasmed, her finger deep into my ass. Without the potential to cum, it was too intense for me so when she finished I lifted her off me and kissed her deeply.",
        "\"Oh my God what did I just do?\" she asked rhetorically, reflecting on the anal play and noting my lack of ejaculation. \"Was that wrong?\"\n\n\"Oh good grief, no!\" I immediately answered, \"that was amazing, I just need more time to build up.\"\n\n\"Oh thank God! I don't know what came over me just then! It's those videos Wayne, it's like they've flicked a switch on in me.\"\n\n\"I'm glad! Helena you don't know how long I've fantasized about this!\" stopping the reflect for a few moments. \"Maybe you've been a kinky slut the whole time, just like me, but society and your parents have laid so much shit on you that is was just hidden beneath layers of that bullshit.\"\n\n\"Yeah you're probably right, I have had to suppress 'thoughts' for such a long time,\" Helena wistfully remarked, reflecting back on her life. \"Well, I guess a big clue is the pee fetish I'd developed, that's pretty kinky isn't it?\" \n\n\"Very kinky\" I said smiling broadly, her juices still glistening on my face and chest. \"It must have been very frustrating holding all that in when we had sex.\"\n\n\"It's actually frustrating and painful and I thought there was something wrong with me, I thought I must be disgusting... I wouldn't even let myself go when I was by myself,\" Helena confessed, reliving the shame she'd held onto for so many years. \"Well, not until the last year or so\" She added, giggling.\n\n\"Well that's all changed now Helena,\" I astutely observed, \"and we're going to have to make up for lost time.\"\n\nShe looked at me lovingly, cocked her head to one side and smiled. \"Have you got anymore ammunition left in that weapon of yours?\" she asked, dropping her eyes to my cock.\n\n\"Sure, just got to reload babes. Let's get a drink and watch some porn.\"\n\n\"OK lover,\" she said, heading for the wine rack, indiscriminately grabbing a bottle and collecting a pitcher of water on the way to the lounge, \"shock me some more\".\n\n\"Ok, but I think you've seen just about everything, judging by our chat on the phone earlier.\" I said, as we both sat on the settee next to each other.\n\n\"Yeah but I want to find out which stuff you actually want to do with me\", Helena explained as she shouldered me suggestively, rubbing her inner thighs.\n\n\"Fuck I love you!\" I exclaimed.\n\n\"I love you too darling,\" she replied turning to look into my eyes and putting a hand on my inner thigh, \"I love being your slut.\"\n\nThe familiar tingling came to my genitals, this is going to continue to be an interesting evening."
    ],
    "authorname": "waynefar",
    "tags": [
        "pissing",
        "oral",
        "piss",
        "wife",
        "water sports",
        "blow job",
        "golden showers",
        "facesitting",
        "cum eating",
        "squirting"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/golden-discovery"
}