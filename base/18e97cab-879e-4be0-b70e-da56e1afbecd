{
    "title": "Camera Buff",
    "pages": [
        "Thanks for the comments! As a result I have edited this story better, and added a few more delicious details. Hopefully I caught all my spelling errors.\n\nAll characters in this story are over 18... but just barely.\n\nHigh School was never this fun for me! I hope you enjoy!\n\n*\n\n\u00a9 2010, C.B. Summers\n\n\"How 'bout this?\" she asked as she coquettishly tilted her chin down, staring up at me with her oceanic eyes. My heart skipped a beat.\n\n\"P-perfect\" I stuttered.\n\nI looked at her for a few moments through the safety of the lens, soaking up the power of that gaze. Then I took the picture.\n\nNormally, Rona Barrett wouldn't have talked to nerd like me. She hadn't made eye contact with me for as long as I could remember. Although we were both eighteen, she just seemed older than me somehow. But I guess that was because she was Rona Barrett, the most popular girl the senior class, Student Council President and lead soprano of the Glee Club. She was a radiant creature and boy did she know it. But here she was, sitting before me, looking at me like a lover... or at least looking into my lens like a lover. That's probably how she thought about it. But for me my camera lens might as well have been a third eye. It had opened the world to me in ways I had never thought possible.\n\nBefore I'd joined the camera club I'd been a nonentity at Malvado Playa High School, but now the popular crowd knew my name, for the simple reason that they liked to have their pictures taken, and I was pretty good at it. My dad had given me an awesome camera, much better than the ones they handed out to the other kids in the club, and it had opened doors, on occasion, to the world of the popular. And now it had granted me an intimate moment with the great one herself. Allowing me to gaze fixedly at her glorious smile and cascading auburn hair. Sigh. I was enjoying every minute of it.\n\nDon't get me wrong. Rona wasn't one of those mean girls. But she was 'above it all' nonetheless. She'd been elected Student Council President on beauty alone and would probably end up being the Prom Queen in a few months time. She had some pretty mean friends, however, and the guys she hung out with were for the most part jocks and chisel chins. She didn't have a steady boyfriend so my nerdy friends and me assumed she was sleeping around with the popular guys. Any other girl and that rumor would have made her a slut, but everyone liked Rona too much to think of her that way. Instead we thought anyone lucky enough to be touched by Rona Barrett was blessed by the encounter.\n\nNot that Rona was perfect. Her worst quality was vanity, although somehow she made that sin seem adorable. She loved herself with such abandon it was kind of cute. Well... to me anyway. My nerdy friends might mock her a bit, but I knew they secretly wished they were one of those good looking boys who were invited to weekend parties at her parent's lake house, about which rumors of wanton orgies abounded.\n\n\"Do I look okay?\" she asked. \"I want to look beautiful.\"\n\n\"How could you not? Of course you do. You look perfect,\" I replied.\n\n\"I dunno... I'm worried about this stupid stripy sweater. I only wore it because my mom gave it to me a few days ago. I forgot I was having this photo taken. It looks awful, doesn't it? Stripes make people look fat, don't they? Tell the truth.\"\n\n\"Well...\"\n\nIn fact, I had no frame of reference to answer that question. What did I know about fashion? To me she would have looked beautiful in a potato sack. Actually, I liked the way the stripes accentuated the shape of her tits. But is that the kind of observation you can share with a girl? My pause only served to confirm her bad opinion of the sweater.\n\n\"Fuck!\" she shouted. \"I hate this stupid stripy thing! I don't want this to be the way people remember me for the rest of their lives whenever they look through their yearbooks!\"\n\nMy heart sank. I thought she was going to cancel the photo shoot.\n\nShe huffed, \"I want this to look good. The Student Council President shouldn't look like crap, y'know. Do you have any outfits or anything?\"\n\n\"I don't know. Let's see.\" She followed me over to the photo studio closet. We looked through what was there, but it wasn't promising. It was mostly overcoats, band uniforms and letter jackets. But then she saw something.\n\n\"Yeah, this is it!\" She pulled something fuzzy out of a cardboard box on the floor. It was a weirdly shaped wrap, made of feathery white fur. I remembered seeing it used in some of the older yearbooks. They used to put it on the girls for their senior photographs to give them an elegant look, as if they were all rising out of a white cloud, exposing their youthful shoulders and clavicles for the first time to the prying eyes of the boys, as a sign of impending adulthood (my interpretation anyway). But it hadn't been used for years. Rona clapped with glee and ran back out to the chair she'd been sitting in. \"This is awesome!\"\n\nShe put the wrap over her shoulders, but her striped sweater was still completely visible. I'm not sure how it was used in the past, but no other clothes are visible in the fur-wrap shots.\n\n\"You need to make the fur tight around your neck to cover the sweater,\" I said.\n\n\"But I want my shoulders to show.\" She pulled out the neck of the sweater trying to expose her shoulders, but it just didn't work. It wasn't nearly stretchy enough. She looked ridiculous. As soon as she had one shoulder uncovered, the sweater neck would pop back onto her shoulder. She kept doing it again and again, as if somehow repetition would alter the course of the future. I casually reached over to the camera and switched the dial from photography mode to movie mode, and pushed the record button. I thought it would be amusing to show the guys in the camera club what an adorable dope Rona Barrett could be.\n\nTo my surprise she said, \"Oh, the hell with it. I'm going to take this stupid sweater off.\" She snapped her fingers at me and commanded, \"Turn around!\" I thought she was joking. She snapped her fingers again and I realized she meant it. In shock I turned away and all I could think was that if Mr. Hanners came in right now and saw her disrobing in the studio, he'd have a coronary. \"Hold on,\" she said. After a while she said forcefully, \"Don't turn around, or I'll kill you.\" Finally, after what seemed like far too long a time to take off a sweater, she said, \"Okay, I'm ready for my close-up, Mr. Demille.\"\n\nI turned and busied myself with the camera, too intimidated to look at her directly. I realized the camera was still in movie mode, so I switched it back to photo mode and looked at her through the lens. She was nervously clutching the center of the wrap to hold it closed, but loosely so her shoulders were exposed. I was dumbfounded by the beauty of her naked shoulders, which were only marred by subtle red marks in her perfect flesh. It took me a few moments to realize the marks were from the bra straps she'd slipped off her shoulders.\n\n\"How does it look?\"\n\n\"Great\", I replied. I didn't comment on the bra lines, because I figured I could easily Photoshop them out later.\n\nShe went into the same pose as before.\n\n\"Uh, I can see your hand,\" I said. She moved her hand down a little, but it was still in the frame. \"I can still see it\". I took a picture of her looking down in annoyance.\n\n\"This thing doesn't have a clasp.\"\n\n\"That's probably so it can fit anyone.\"\n\n\"Well, how the hell is it supposed to stay on? Damn it! Turn around again while I figure this out.\"\n\nThis time when I turned I kept my hand casually on the camera and took several surreptitious snapshots, hoping she wouldn't hear the faint snapping of the shutter. I listened to the sweet sounds of her rustling movements and grunts of frustration. I couldn't imagine what was taking so much time, but I figured there might be some funny photos in there somewhere. Maybe even a shot of her in her bra. That was an exciting thought! After a while, and over twenty secret shots later, she said sweetly, \"Okay, I think I've figured it out. Take a look.\"\n\nI turned and was just as dazzled as before, but it certainly looked better. Now she had her arms crossed under the fur, so she could neatly pull the tips of the wrap in front of her, forming an elegant line right along her collarbone. I could see her belly button under her crossed arms, which was pretty darned thrilling for a virgin like me. I made sure to take a few wide shots including her belly button before zooming in so the bottom of frame was all fur. She went through a variety of poses and facial expressions while I snapped away. She was clearly trying to look intelligent and wise beyond her years. \"Do I look like a Student Council President?\"\n\n\"I guess so.\" I replied, although, in fact I thought it was a pretty undignified pose. \"Sure, why not?\"\n\nAfter a while it was pretty obvious we'd gone through every possible pose in this position. I was afraid she'd think I was prolonging this session unnecessarily just so I could stare into her beautiful eyes, so I said, \"I guess we're about done\".  \n\nShe smiled mischievously and said, \"Hey, Louis, would you mind taking a few more... just for me?\"\n\n\"Sure,\" I said nervously. Then she pulled the fur down a bit... then a bit more. Then a lot more, revealing a healthy, downright indecent, amount of cleavage. All the while I snapped pictures, my heart pounding in my chest and my eyes popping out of my head. Then she tightened her crossed arms, causing her large breasts to swell up deliciously. I gulped, trying to cover my shock and arousal. Just act professional, I told my self. I could see so much naked flesh that I figured her bra was probably only nanometers away from being exposed. I took several pictures while she threw her head about like a fashion model, trying to look like a sex goddess. Several of her expressions could only be described as orgasmic. She even licked her lips erotically with her tongue. I guess she'd seen some of the same nudie magazines as me. I was in heaven.\n\nShe suddenly started giggling, amused by her own naughtiness. I absolutely loved the way her breasts wiggled and jiggled as she giggled! When her fit of hilarity passed, she looked at the clock on the wall and said, \"Whoops! Time's up!\" She gave me a genuine smile, and said sweetly \"Don't show anybody those pictures, okay? Those are just between you and me. Can I trust you Louis?\"\n\n\"Of course,\" I replied cheerfully, thrilled at hearing her say my name.\n\n\"Can I get a sneak peek?\" she asked.\n\nI was terrified she'd discover the unauthorized shots I'd taken, so I looked at my watch and said, \"I've got another class soon.\"\n\n\"Later, then?\"\n\n\"Actually, its probably not safe to download them in the computer lab if you don't want anyone to see those last pictures. So I better do it at home after school. But I'll be happy to show them to you tomorrow if you like. You can pick the one you want us to use for the yearbook.\"\n\nShe smiled and nodded. I guess I'd said the right thing.\n\n\"That would be awesome. I can't wait to see them!\"\n\nNeither can I, I thought.\n\n\"Now, turn around again, and don't peek,\" she sing-songed sweetly.\n\nI know I shouldn't have done it, but I switched the camera back to movie mode and started it recording before I turned to look away. I wanted to see her in nothing but a bra. I just had to. I was suddenly overcome with a powerful guilty feeling. I could hardly believe what I'd done. I knew it was immoral and unethical to take pictures and movies when she said not to look, but I'd never been in such a tempting situation before. I felt like a pervert. Then again, I was an eighteen-year-old virgin who'd never even been kissed... I pretty much always felt like a pervert! In spite of all this, I began to breathe harder in anticipation of what I might have captured with my camera.\n\nShe took a long time to get herself back in order. So long, in fact, I was about to ask her if everything was okay, when suddenly I felt the fur land on my head. \"Catch you later, Louis,\" she said cavalierly as she walked past me and out into the hallway. I took the fur off my head, and watched her walk away, my eyes glued to her gorgeous ass. \"Holy shit,\" I said under my breath. She looked awesome in jeans.\n\nI was itching to see those movies! After all, when was I ever going to get the chance to see Rona Barrett in a bra? Just thinking about it gave me a hard on. But then the bell rang and I knew I'd have to wait until after school. I suffered through several long classes, barely able to think about anything but the flash card that was burning a hole in my shirt pocket.\n\nLater in the day I ran into Jason, my buddy from the camera club. He said, with surprise, that Rona Barrett had talked to him. Just like me he'd always thought people like her were too lofty to speak to him. But she knew his name and even knew he was my friend. I guess she was paying closer attention than we'd thought. She'd asked him if he'd seen the photos I'd taken. He said no and she went away apparently happy with his answer. Jason begged me to see the pictures. His imagination was off the hook. I pretended not to know what Rona was worried about but I was pleased to know that she'd checked up on me and found me trustworthy. She could definitely trust me not to show any of these photos and movies to anyone. They were mine... all mine.\n\nAfter what seemed like a small eternity I finally made it home, although I still had to wait a while for my parents to get ready to go to the movies. But finally they left and I ran to my room to download the files onto my computer. I decided to look at them in order. First there were the photos I took of Rona in the striped shirt. I immediately got a boner just looking at her eyes. I could zoom right in and see details I'd never noticed before. For instance, she had these beautiful golden flecks in her irises. I'd never been close enough to see them before. My god, but she was a beauty! I actually liked the sweater. The stripes added form and sensuous roundness to her breasts in a way that made me itchy with desire.\n\nThen I started the first short movie that I took after we found the fur wrap. It showed her waiting for me to turn away. After that she took the wrap off and laid it over her knees. Then she crossed her arms in front of her chest, grabbed the bottom of the sweater, and peeled it upward and revealed, to my great delight, her beautiful bra. It was bright pink and silky. I pushed the pause button just so I could worship her beautiful breasts for a few minutes. I could just barely make out the little bumps of her nipples. Goddamn! It made my heart flutter!\n\nI pushed play again and watched as she put the sweater on the floor next to her and flip the fur wrap back over her shoulders. It was obvious to her that the bra straps were much too visible, so she pulled them off her shoulders. I began to rub the erection in my pants while watching her pulling down those straps. I had never felt such unbridled lust. She adjusted the fur a bit, saying \"Hold on.\" But the top of the bra was pretty high, too high for her liking I guess. Then she looked up and said, \"Don't turn around, or I'll kill you.\" Then she took off the wrap again, and turned nervously sideways in the chair, to get her back as much toward me as possible, just in case I were to peek. Then she reached behind her back and unhooked her bra in one deft movement.\n\n\"Holy shit!!!\"\n\nI nearly fell off my chair in surprise. The sight of her willowy fingers snapping the back strap free was utterly electrifying. Without conscious thought, I unzipped my fly and set my growing cock free.\n\nShe bent over and folded the bra up in her sweater on the floor, probably so I wouldn't know she'd taken it off. That gave me a delightful side-view of her left breast. I gazed in wonder at her beautiful nipple, mesmerized by the sight of her breast squishing against her knee. She sat up again and pulled the fur wrap around her shoulders, then turned back toward the camera again, trying in vain to figure out how to hold it right. It was not only the most erotic moment of my life, so far, but it was well beyond anything I had ever imagined I'd see. I could hardly believe it was actually happening. All I could think was, \"Rona Barrett's boob! I just saw Rona Barrett's boob!\"\n\nIn the video she continued fiddling with the fur wrap, giving me a few fleeting glimpses of her areolas, before she finally decided to clutch it in the center, and say, \"Okay, I'm ready for my close-up, Mr. Demille.\" I immediately watched the whole video again, this time stroking my cock lovingly and moaning with aching lust for Rona Barrett's glorious body. I froze on the frame that showed her nipple in profile. Shit, it was unbefuckinglievable! It wasn't a very high-resolution movie, but it was good enough for me!\n\nWhen it ended the second time I looked through the few photos I took when she couldn't figure out how to hold the wrap without getting her hands in the shot. Then I came across the photos I'd secretly snapped the second time she asked me to turn around. Although her naked breasts were visible in some of them, most of them were terribly blurry, because she was moving about trying to arrange the fur right. But finally I came across a perfect photo. In it she was holding the wrap completely open, her naked breasts gloriously exposed right at the camera. But most amazing of all was the look on her face. She was staring right into the camera, her lips open, eyes caught in a furtive moment, perhaps checking to make sure I wasn't looking. It was an unbelievably sharp photo. The primitive lighting job I'd done made her breasts look amazingly 3-d. I couldn't get over how frickin' great it was.\n\nI sat there stroking my cock for several minutes just looking into her glittering eyes and open, glistening lips. It was like she was actually looking at me through time, aware of what I was doing and enjoying the secret connection between us. I felt an aching sadness in me as I jerked off. This amazing girl never would, never could be mine. But damn it, at least I had this photo! I'd seen my share of porn, but nothing as amazing as this one perfect image of the most beautiful girl in my world. I zoomed in looked at every part of her in close up. Her nose, her eyes, her belly button, her tits... I was electrified by every little detail on her gorgeous breasts. The little wrinkles her areolas... the delicate indentions in the center of her nipples... the beautiful fuzzy transition of color between her pale white breast and her ruddy pink areola... and that adorable black mole just under her left nipple. I wondered if I was the only guy in school who'd ever seen it. Probably not, but it was nice to be in that select fraternity.\n\nThe next few photos showed her bringing her hands across her chest to close the wrap. But I hardly noticed her breasts in these photos. My attention was riveted on her face. She was looking right at the camera and her expression changed slightly from picture to picture, showing the unmistakable signs of realization.\n\nI sat back and my dick went limp.\n\nShe knew.\n\nShe knew that I'd been taking photos of her naked body without her permission. She knew I was a perv. In those pictures I could see her eyes discovering my finger as it pushed the shutter button again and again. The next few photos showed her sitting there quietly, as if she were thinking how to handle things. Many subtle expressions went through her eyes from shot to shot: anger, surprise and finally, flattery. But maybe I was misreading it. Or maybe she'd decided it didn't upset her enough to make a fuss. After all, during the shoot she hadn't given me any reason to think she was offended.\n\nThen I looked through the 'official' picture session, and was pleased to see that they were very good pictures. Perfectly exposed, and sharp. Moreover, she looked great. At ease. Not upset or even remotely pissed off.",
        "Then I came to the 'unofficial' photos she asked me to take toward the end, where she'd gleefully showed way too much cleavage and posed like a sex queen. I wondered what it meant that she'd trusted me to take these photos. After all, I'd already proven that I couldn't be trusted. It was baffling. I thought maybe the last movie might explain things.\n\nThe moment it began, I saw a gleefully wicked smile cross her beautiful face after seeing me turn away. She knew I'd done something with the camera. She looked into the lens and licked her lips and sensuously and slowly opened the fur wrap, exposing herself fully. She looked playfully down at her breasts. My cock leapt to attention again, and I began to stroke it with abandon. The fur slipped from her shoulders as she reached up to cup her breasts in her hands. She mouthed the words, \"You like this?\" then she squeezed her breasts together, and wobbled them back and forth in the most ostentatious way. Then she brought her right breast up to her beautiful mouth and tickled the nipple lasciviously with her tongue. She smiled wickedly and stood up. Her face went out of frame, but now I could see her midsection. She unbuttoned her fly, and slowly unzipped her jeans. She pulled them down exposing her little pink panties.\n\n\"Oh, shit!\" I groaned, grasping my cock in a death-grip, while fingering my balls with my other hand. Then she did something that made me gasp in shock. She pulled the panties aside to show me her little auburn bush. Her hair was so fine and fluffy that I could clearly make out her delicate little slit. She sensuously ran her fingers down her belly, between her legs and into the slit; finally pushing her two center fingers deep inside. She rubbed herself for a while, and then leaned forward, until her face filled the frame of the camera. She brought her wet and glistening fingers up to her lips, and licked them slowly with her tongue. She silently mouthed, \"Yummy,\" then smiled and winked. She pulled her pants back up, and put her bra back on slowly, all the while looking right at the camera with a wicked grin I'd never seen on her face before. She pulled her sweater on and then pulled it up one last time to let me see her bra-clad breasts. Then she blew a silent kiss at the camera. She grabbed the fur from the back of the chair and walked toward the camera, throwing the fur at me as she strutted out of view, saying, \"Catch you later, Louis!\"\n\nI was about to cum, so I reached out to run the movie back to the beginning in order to watch it again.\n\nBut the doorbell interrupted me. \"Shit!\" I shouted out loud. I looked at the clock, wondering if my parents were back already. Impossible! So I figured it was probably Jason dropping by to see if I'd tell him what was up between Rona Barrett and me.\n\nI pulled my pants back up, painfully forcing my cock inside so I could zip up. I closed all the photos on my computer, to prevent Jason from seeing them by accident. I went down the stairs and opened the door, prepared to stonewall Jason if necessary.\n\nIt wasn't Jason.\n\nIt was Rona Barrett.\n\n\"Louis, Louis, Louis...\" she said with one hand on her hip and a delicious grin on her lovely lips, \"So how do you like the photos?\"\n\nI was utterly incapable of speech. She smiled and shifted her\n\nweight from one leg to the other. She looked casually past me into my living room.<br>\n\n\"I guess you've seen them by now. What do you think?\"\n\nI gulped, nodding slightly. I opened my mouth to speak but nothing came out.\n\nShe seemed to enjoy my discomfort greatly. She giggled and said, \"Well, can I see them?\"\n\nI stood back from the door and she walked inside with a cocky strut. I could see her boobs bouncing lightly under her white shirt. I closed the door, mortified, and turned to look at her. She was casually peering around the living room. She looked back over her shoulder at me. \"Well, are you gonna introduce me to your parents or what?\"\n\n\"Uh, they're at the movies.\"\n\nShe smiled and nodded. \"Cool. Then I guess we better go to your computer or wherever you've got the photos. I can't wait to see them.\"\n\nI numbly led her to my bedroom, and I began to say that I hadn't sorted out the bad ones yet. \"No, no.\" she said, \"Just show me the pictures. All of them, understand? You bad boy.\" I nodded and went to the computer. She added wryly, \"They better be good or I'm gonna be pissed.\"\n\nI opened all the pictures in a viewer so she could go through them herself. I sat on my bed and watched in mortified silence as Rona Barrett looked through the photos as she sat in my chair. She was gonna kill me. Life, as I knew it, was over. She might even have one of her jock friends beat me up. I felt like hurling.\n\nAt first she was very displeased, particularly with the photos of her in the hated striped sweater. But then she saw the secret pictures I took of her when she was braless. She made a \"Tsk, tsk, tsk,\" sound. Then she came across the beautiful, perfect shot of her holding the fur wide open, exposing her naked breasts. She looked over at me and without a smile she said, \"What do you think of my body, Louis?\"\n\n\"Beautiful.\" I managed to choke out.\n\n\"Yeah?\" She looked back at the photo. \"This is a pretty good photo. I look fuckin' awesome. It was sneaky bad of you to take these photos without my permission, but I guess I'm glad you did. I love this fuckin' picture. Shit, just look at me. Fuckin' rock star is what I am.\" I felt a thrill of relief. Maybe I was going to survive this after all! I also felt proud, weirdly, of my photography skills. I moved off the bed and kneeled on the floor next to her so I could see the screen too.\n\nAs she looked through the official photos she was extremely pleased, and openly praised my work. \"I love the light. Wow, that fur looks awesome.\"\n\n\"It was a good idea to use it,\" I added. \"It made all the difference. You've got great instincts. You should be a model.\"\n\nShe smiled at me, \"You think so too? My stupid parents think it's a stupid idea. But look at me! I look great!\" she said, pointing at a particularly nice photo.\n\nThen she came to the unofficial shots she'd asked me to take, which showed her deep cleavage. She clapped and laughed in joy looking through them. \"Oh my God, Louis! These are great! Thank you so much!\" She put her arm around my back and kissed my cheek. It burned and I smiled so hard my cheeks hurt. She kept her hand on my back as she went through the rest of the photos, which I found stunningly intimate.\n\nWhen she was done with the photos, she turned to me and said, \"Okay, where are the rest?\"\n\n\"Uh, well, those are all the photos, but I did take a few movies.\"<br>\n\n\"Movies? Shit! I didn't know your camera did that, but I knew you were up to something. Come on. Lets see them!\"\n\nI reached up and started the first movie. She laughed as she watched herself taking off her bra. Then I started the second movie. She laughed watching her antics. I felt myself unable to look away. There she was, touching her breasts, squeezing them together, licking her nipple, and finally touching her pussy for my camera. My cock got hard again as I watched. I didn't know if it was noticeable or not. I was afraid to look. That would only make her look.\n\nWhen the second movie was over, she played it again and said, \"I don't know what came over me, Louis. I guess I'm as much a perv as you are.\" Suddenly I felt the palm of her hand press against my crotch. I pulled away so quickly I tumbled back onto the floor. But not before she got a good feel of my erection.\n\n\"I'm glad you liked it Louis.\" She rotated the swivel chair and looked down at me. \"And now the big question: what are we going to do with these naughty little pictures of yours, Louis?\" She reached over and took the flash card out of the reader and put it in her breast pocket. \"These are mine,\" she said, patting it so her breast bounced deliciously. \"The copies you put on your computer however... I'm wondering if I should let you keep them or not.\" My heart sank. The idea that I'd never see those pictures and movies again was very a dispiriting one.\n\nShe leaned forward and put her elbows on her knees and steepled her fingers in front of her. \"What do you say, Louis? Do you want to keep them?\"\n\nI nodded.\n\n\"Of course you do. But how do I know you can be trusted with them? How do I know you wouldn't show them to your little friends, or post them on the Internet?\"\n\n\"I'd never!\"\n\n\"Yeah, yeah, I've heard that before. You can't trust anybody, Louis. And I know for a fact that I can't trust you.\" My heart sank. Then she said, \"But I think I have a solution.\" I sat up, eager to hear it. \"First of all, you have your camera here, I hope?\"\n\nI pointed to it standing on a tripod next to the closet. She smiled. \"First, you need to show me how it works.\"\n\nI had no idea what her plan was, but I was happy to show her the workings. It was a pretty simple camera to operate. She carried it out to the middle of the room and pointed it toward my bed. \"So, what about the lighting? Is it good?\" I got out some portable lights and positioned them around, pointed at the bed. I wanted to kick myself for not investing in a flash setup yet. This would have to do. But what was up? All I could think is that she was going to let me take more pictures of her. I was nervous with anticipation! She took the flash card from her pocket and put it in the camera.\n\nThen she said, \"Okay, here's the plan. I'll let you keep those pictures of me if you let me take some pictures of you.\"\n\nI was completely floored. In a day of surprises, none of them compared to this.\n\n\"It's only fair\", she said. \"You've got a movie of me touching my pussy, it's the least you could do to let me take a few pictures of you.\"\n\nThe very idea of it was terrifying. I was frozen in fear.\n\n\"Well, what'll it be, Louis?\" Rona walked over to the computer and selected the photos and movies and dragged them toward the trash folder. \"You want me to delete these or what?\"\n\nI shouted, \"No! I'll do whatever you want!\"\n\nShe clapped gleefully. \"Awesome! Okay, Louis, lets get this started, before your parents come home. You stand right over there.\"\n\nI took a deep breath and stood by the bed. She snapped a photo and I gave a little nervous jump. \"Oh, come on, Louis. Loosen up.\" She walked around the tripod and came up to me and looked into my eyes. She reached out and rubbed my shoulders. \"Don't be so tense! Just loosen up. It'll be fun!\"\n\nI nodded and tried to calm down. But she clucked her tongue. \"I know what might calm you down.\" She leaned toward me and gave me a kiss on the lips. I melted. It was a brief kiss, but intense... my first kiss. Her tongue flicked across my lips and I felt something change inside me in that moment. The nerd inside me disappeared, at least for the moment. I became strangely calm. I looked into her eyes as she pulled back. I smiled and she arched her eyebrows playfully and said, \"Let's get started.\"\n\nShe gleefully directed me through the first stages of taking off my shirt for the camera. I had a pretty scrawny chest, but she ooh'd and ahh'd like I was a hunk. Then she told me to unzip the fly of my jeans. I did, and immediately my underwear-encased erection emerged. \"Ooh, that's nice,\" she said. She adjusted the camera lower and told me to lean back against the bed, which made my erection bulge out even further. \"Fuck\", she said, \"you're packing an ICBM!\" I smiled and blushed. I don't know what thrilled me most, that she thought I had a big dick, or that she knew what an ICBM was!\n\n\"Now play with it. Rub it with your hand.\" I did, and she took several photos. \"Now, let it out.\" After a pause, I started to yank my undies down, but she interrupted. \"No, do it nice. Look at the camera. You're showing it off. Be proud of it.\" And I felt it then. Pride. Rona fucking Barrett wanted to see my cock and I wanted to show it to her. I knew it was a pretty good cock. Not huge, but above average. So I looked at her camera lens and I pulled down the band on my underwear slowly, letting my engorged cock fold out dramatically. It was larger than I'd ever seen it before.\n\n\"Beautiful, Louis! It's beautiful, like a little sculpture. I mean a big sculpture. You know what I mean.\" She zoomed in and told me to hold it in different ways, and turn sideways to see it in profile. I just couldn't believe this was happening.  \n\n\"Now turn around and pull your pants down. Show me your ass. That's right.\" She whistled comically as I pulled my jeans down. I stepped out of them, and then I pulled my undies down. It was thrilling to hear her snapping photos as she said, \"Now that's a mighty fine ass, Louis. Wow. All I can say is, wow. Hold it just like that.\" She really liked my ass I guess, because she had me show it off in various was.\n\n\"Now sit down and spread those legs. Shit, look at your cock, Louis! Impressive!\" I put my hands behind me and showed her my cock and balls and I felt like a jock. It didn't matter that I was smart and scrawny. I had a great cock, and she couldn't take her eyes off it. Maybe it was a good thing I was so scrawny, because it just made my penis look that much larger. She took the camera off the tripod so she could get down on her knees and take close-ups.\n\nThen to my enormous surprise, she reached out and wrapped her lovely fingers around my shaft and took photos of it in her hand. I'd never felt anyone touching me down there before. It sent an electric wave of pleasure through my entire body. She ran her fingertips lightly under my balls and I just about jumped out of my skin with joy. The hairs on the back of my neck stood up.\n\nShe said, \"How do I turn that movie thing on again? Oh, I see.\" She turned the knob to the movie setting, and started recording. \"Now, jerk off for me, Louis.\" My heart fluttered. She was really getting into this! I spit into my palm and began to stroke myself, with her kneeling between my legs aiming up at me. It was utterly erotic. I looked down at her in amazement. She was dressed in jeans and a loose white shirt, which pulled slightly against her breasts. She saw me looking down her cleavage. \"Here, this might help.\" She unbuttoned her shirt slowly, revealing more and more of her skin. Then she opened it up completely so I could see the lacy white bra she was wearing. It was so sheer that I could see the dark circles of her areolas through it. I was masturbating like a madman. At this rate I was going to cum any second.\n\nShe suddenly stood up and turned her back on me. \"Hold on a minute. I want to do another setup.\" So I stopped and let the moment pass. I sat there in amazement at the recent events and watched her as she screwed the camera back onto the tripod. She moved it around looking for a new location. She was thinking hard... then she had an idea.\n\n\"Louis, does this thing have an automatic setting? To take pictures by itself?\"\n\n\"Uh... yeah. You can set it to take pictures at regular intervals. One second is the shortest, I think.\"\n\n\"Cool. Can you program that for me?\" I got up and stood near her and programmed the camera. All I could think was that Rona Barrett had just been watching me jerk off, and now I was standing right next to her, buck-naked! After fumbling for a few minutes, I finally had the camera set up. Then she had me put in new flash card, just to make sure we didn't run out of memory. She put the old flash card in her purse. Only then did I begin to wonder what she had in mind.\n\nShe took a deep breath and said, \"Okay, Louis. I didn't plan to take it this far but I am just too fuckin' much of a camera hog to stay on this side of the lens.\"\n\nShe pushed the button and the camera started taking photos. She told me to kneel on the bed and she sat in front of me on the edge of it, facing the camera.\n\n\"Kiss my neck,\" she said. I came up close behind her.\n\nI paused and said, \"This will work best if you try to pause when the camera snaps. Otherwise the photos may all turn out blurry.\"\n\n\"We wouldn't want that,\" she said, \"come on, I'm waiting.\"\n\nSo I leaned forward and kissed the neck she offered to me. I paused while the camera shutter clicked. From then on, every second we tried to pause together, no matter how hard it was to remember. During the whole time she played directly to the camera, but I only had eyes for her. Her neck was amazingly soft on my lips. I loved the smell of her skin and the feathery hairs that grew along her hairline. I breathed into her ears, which she seemed to enjoy. Without her asking, I put my hands on her waist, and moved them slowly upwards, under the loose tails of her shirt, until they were at the base of her breasts. I stopped, thrilled to have gone that far.\n\n\"Keep going,\" she said huskily. So I slowly slid my hands up to cup her breasts, which gave softly but firmly under my touch. I felt the bump of her nipples through the thin fabric of her bra. She arched her back and I pulled her shirt open for a photograph, I peered over her shoulder down at the top of her cleavage. So this is what her breasts look from her point of view! I ran my palms over the exposed flesh above the bra and squeezed her tits slowly. I noticed there was a small hook on the bra between the cups. I moved my fingers down to it, and then paused. She whispered, \"Yes. But do it slowly.\" So I slowly opened the hook, my mind exploding with lust, and pulled her bra open, careful to let the camera snap several photos of the entire procedure, while I greedily stared at her nipples from just over her shoulder.\n\nShe reached an arm back over her head to run her fingers through my hair. When I had fully opened her bra I ran my hands up her belly and cupped her breasts, feeling the weight of them in my palms. I could feel her naked nipples touching my sensitive fingertips. Her perfect round breasts fit so neatly in my upturned palms, it was like they were made for this purpose. She turned her head sideways and kissed me deeply. I felt her tongue invade my virgin mouth, and my tongue ventured forth to meet it. They danced together and I felt utterly alive.\n\nWithout breaking the kiss, I pulled her shirt and bra off her shoulders, slowly for the camera, and put them aside, then ran my hands all over her torso, front and back, exploring every nanometer of her exposed flesh. She reached one hand behind her and wrapped her sensuous fingers around my penis. I groaned in her mouth, and she groaned in mine as I squeezed her naked breasts. I moved my hands down her belly until my fingers went a little ways under her waistband.\n\n\"Unzip me,\" she said, so I did. I fumbled with the button fly for a few moments. She laughed, but I finally got my fingers on the zipper and slowly pulled it down for the camera. She spread her legs and I reached down into her pants over the top of her panties until I could feel the warm wet mound between her legs. She arched herself into my touch. I felt my middle finger push the fabric of her panties between her pussy lips. Oh god, it was great!\n\n\"Take my pants off,\" she said as she stood up. She turned toward me. Her breasts were right in front of my face. I kissed them tenderly, lovingly. She had us turn sideways so the camera could see. Then I took her soft nipples one by one into my mouth. I was particularly thrilled to feel her little black mole on the tip of my tongue.\n\nAfter doing that for a good long time, I pulled her pants down for the camera, and she curved her body to make the best show of it. She stepped out of her jeans, but only after an awkward moment when she had to clumsily kick off her sneakers. We laughed like crazy.\n\nThen she faced the camera again and opened her legs wide, and I touched her pussy through her panties. I did that for a moment, and then she said, \"Go take a few close-ups.\" I ran to the camera, and took it off the mount and got on my knees between her spread legs.",
        "\"How's this look?\" she said, playfully, putting her hands sensuously on the inside of her thighs and opening them for the camera.\n\n\"Fuckin' awesome.\"\n\nShe giggled. Her panties were white, with little blue teddy bears dancing on them. And the center was dark with her wetness. She ran her fingers under her panties as I took pictures, and she groaned in pleasure. Then she took her hands out and said, \"are you ready for the money shot?\"\n\nI said, \"Yes!\"\n\nShe pulled the panties aside, exposing her pussy in all its glory. It was more beautiful than I'd ever imagined. It was a simple, elegant slit with a round button on top, and a cap of fluffy auburn pubic hair. It wasn't curly like my hair, but soft and almost straight. She moved her fingers down and pushed them in, revealing bright pink flesh inside. After touching herself for several shots, she said, \"Take pictures of your hands touching me.\" I held the camera in one hand and reached out with the other. My fingers felt her wetness and slipped easily inside. She arched in joy.\n\n\"Rub my clit.\" I paused, \"the round part on top, stupid,\" she said with a chuckle.\n\nI was happy to comply. I began to rub it, perhaps a bit clumsily at first, but she moaned, clearly enjoying the sensations I was giving her. She lay back on the bed, and put her feet on my shoulders, opening her legs as wide as humanly possible for me. I switched the camera to movie mode, because there was too much motion for clear photos anyway. I filmed my fingers going inside her and a few seconds later she gasped, \"Yeah, like that! Don't stop!\" I thrust two fingers in and out of her tight, wet pussy, trying to respond to her cries of pleasure. I couldn't believe that my fingers were inside Rona Barrett... feeling the silky fold and flaps in her vagina. She was so tight; I couldn't imagine how a dick the size of mine could ever get in there. But the more I finger fucked her, the more open she became. So I added a third finger to the party. Pretty soon she was screaming into a pillow and her whole body was shivering uncontrollably. Her breasts danced as she gasped for breath.\n\nShe suddenly reached out and grabbed my hair and pulled my face right into her pussy. I forgot about taking pictures for a moment, because, after all, I was buried nose deep in Rona Barrett's wet cunt. I wanted to taste it, so I flicked her slit with my tongue and it was delicious. She whimpered adorably in pleasure, and coaxed me to keep doing it, so I licked her clitoris as fast and firmly as I could and she completely went stiff with a powerful orgasm that seemed to go on and on. Her wetness was all around me and dripping down my chin. I loved every second of it.\n\nFinally she pushed me back, over stimulated by my eager mouth, and I took several photographs looking down at her quivering naked body, some with my raging boner in the foreground. God she looked beautiful. After a while she opened her eyes and caught her breath. She smiled up at me with a dazed expression and said, \"That was perfect Louis. Fuck, where did you learn to do that?\"\n\n\"That's the first time for me. Beginners luck I guess.\"\n\nShe smiled. \"Are you a virgin, Louis?\"\n\n\"Busted.\"\n\n\"I wouldn't have guessed. That's the best orgasm I've ever had. You have the magic touch Louis.\" I thought she was probably just saying that to be nice, but I glowed with pride nonetheless.\n\n\"I'm too weak to get up. So come over here. Bring the camera. I want to suck your cock.\" Shit. I just about passed out when she said that. She pulled at me until I was straddling her with my balls resting on her belly. Her breasts looked even bigger than ever, now that she was on her back. I opened the lens as wide as it would go, and took a few photos of her beautiful body, with my cock resting on her belly, holding my breath to make them as clear as possible. She grabbed my ass with her hands and guided me up her body until my cock went up between her breasts. Her breasts bunched up on my thighs as she pulled me even higher until the tip of my cock was sitting right in the little dimple on her chin. I took photos of her smiling up at me. She spit into her hand, as she'd seen me do earlier, then grabbed my cock and pulled me higher until my balls fell into her open mouth.\n\nAll I could think was, holy fuck!\n\nBarely able to speak, I told her to freeze in several positions while I took photos. It felt so awesome, but I managed to keep my mind clear enough to take good photos. She looked up at the camera with her beautiful eyes and ran her tongue in circles around my balls. Then she licked my shaft up and down, from tip to base, her tongue wrapping around the edge of it. I took several close-ups.\n\nA while later she repositioned herself, with her head propped up on a pillow. She made sure that I arranged her hair artfully for the pictures. Then she started caressing my cock with her delicate fingers, while looking at it appraisingly. \"Your penis is beautiful Louis. I love it. It's like a work of art.\" She licked her lips and looked up at me with an expression of pure desire. I took a photo. Then ever so slowly she pulled me toward her open mouth, never taking her eyes off the camera lens. She took my cock deep into her warm, wet mouth. It was the greatest moment of my life, but I guess that goes without saying. For several perfect minutes she sucked and slurped and stroked. I switched the camera to movie mode again to get capture the action. She got into it, and handled my cock in her mouth like a piece of delicious chocolate. I wanted this to go on forever, but it felt too good. I felt an orgasm coming.\n\n\"If you keep doing that,\" I said, \"I'm gonna cum.\"\n\nShe smiled and said, \"That's a good idea. But let's do this right.\" We got up again and she spent several minutes trying to figure out a way to mount the tripod over the bed, but it was too bouncy. So we moved the bed sheets to the floor, so the tripod had a rigid surface to stand on. Then she had me aim the camera down at her so it included her face and breasts. Then I pushed play on the movie recorder and straddled her again. This time she spit all over my cock, until it was dripping with spit. I wasn't sure what she was up to. Then she pressed her hands against her breasts forcing them together. \"Fuck my tits, Louis!\" So I did.\n\nI pushed my cock into the warm pocket she'd formed between her soft breasts, and my god, it was the most amazing thing I'd ever seen. Not only did she look great, but I felt powerful and in control. I began thrusting myself between her tits, feeling the silky softness of them on my hypersensitive cock, my balls sliding up and down her torso. It took all my balance and strength to keep from banging into the camera that hovered over her head and in front of my face. I pinched and twisted her nipples playfully as I thrusted, and once I even put my fingers in her mouth, which she excitedly sucked on. I felt a surging sensation build up inside me. I grunted, \"I'm coming.\"\n\n\"Cum for me baby,\" she said. And I just kept pumping. It took longer than I thought. Usually when I masturbated I came pretty soon after I felt the warning surge, but this time, perhaps because of how long we'd prolonged things, it took a powerfully long time for my sperm to gallop free. I exploded between her breasts. To my surprise, a little spurt of white fluid shot up through her cleavage and onto her face, spattering her chin, lips and eyes lightly. She smiled widely, and shouted, \"Yeah! Yeah! Yeah!\" I kept pumping until I couldn't move any more, and the last spasms of jism shot out of me onto her collar bone.\n\n\"Quick,\" she said, breathing heavily, \"take some good photos, while you're still hard.\" I switched the camera to photo mode and took several clear photos of my cock resting between her breasts, which were spattered and dripping with cum, and photos of the little splatters of cum on her face. I was particularly thrilled by the little drips of my spunk that were caught in her long eyelashes. I don't know why that excited me so much, but it did. She pulled me up and licked my shaft, and took the sensitive tip into her mouth while I took more photos. Finally I was too weak for more, and I fell to the floor next to her. I turned to look at her from the side. Ah, rapture. I put my hand on her belly, and my dripping cock started to fall limp against her thigh.\n\n\"Louis, that was fun. More than I thought it'd be. Most fun I've had all year, actually, and that includes winning the election.\"\n\n\"Rona, it was the most fun I ever had in my life, and that includes being born.\" She laughed, her breasts bouncing playfully.\n\nAfter resting on the floor for quite a while, she asked me to bring her a warm wet towel. I got it and wiped my sticky white goo off her boobs and face. It was a great opportunity to feel her up some more. I was already totally certain that once she left my room it would be the last time she ever talked to me. She was the queen of the senior class, after all. She smiled up at me, with her hands behind her head. She enjoyed being bathed this way, the pampered little poodle she was.\n\n\"How long is that movie your parents went to, by the way?\"\n\nI sat up in terror. I checked a clock, but I saw we had another half hour at least, maybe more.\n\n\"Yeah? Hmm... that may be enough time.\" She said.\n\n\"Enough time for what?\"\n\n\"For you to get hard again, of course!\"\n\nMy heart soared. I thought it was over, but I was wrong. She rolled over on top of me and kissed me again, but this time it wasn't for the camera. It was for us. We really kissed this time, breathing hotly into each other's mouths, our mutual passion building more powerfully than before. My cock was starting to harden before she even began touching it. She kissed her way down my chest, and soon my dick was in her mouth again. She was kneeling over me, her auburn hair dangling on my belly and thighs. She tickled my balls with her beautiful fingertips, discovering a sensitive spot on the underside that I'd never noticed before. I played with her dangling breasts with my hands. It was a perfect, unrushed moment. The anxiety I'd felt all night had faded away. I watched Rona Barrett, Student Council President, suck my cock, and I felt powerful, confident, manly.\n\nWhen I was good and hard, she reached for her purse and took something out. She ripped open a condom and expertly rolled it onto my cock. I calmly thought, I'm going to lose my virginity to Rona fucking Barrett. I'm blessed.\n\nWhen the condom was on, she straddled me and said. \"I think we'll do this one without photos, if you don't mind.\"\n\n\"Not at all.\" I said. I couldn't believe how calm I was. Rona guided my cock as she squatted, until it touched her pussy lips. Then she rubbed the tip of it against her clit for a few minutes, making happy sounds. Then she looked down at me, her eyes twinkling with mischief.\n\n\"Are you ready to lose your virginity, Louis?\"\n\n\"Yes.\"\n\nShe slid herself down a few inches onto my shaft, and we both sucked in deep breaths of ecstasy.\n\nNow I was a man.\n\nShe was so tight; it felt like my cock was being squeezed by a circus strongman. The sensation of it was almost as amazing as the sight of it going inside. I just tried to soak in the visual splendor of my cock disappearing into Rona Barrett's beautiful body. I looked up at her face, into her eyes... Shit. She was beyond beautiful. She was Venus, the goddess of love. She was staring into my eyes, her mouth quivering in pleasure, holding her breath as she exquisitely lowered herself farther and farther onto me until I was almost fully encased and pressing into the back wall of her innermost recesses.\n\n\"Oh god,\" she moaned, her face a mask of pleasure. Then she began to ride herself up and down, slowly gaining speed. But she suddenly stood up and said, \"Fuck it, Louis. I need to film this.\"\n\nI said, \"Shit yeah. But not with my camera. The quality of the image is crap. Let me get my parent's camcorder.\" I ran through the house to my parent's room, my cock bouncing like a diving board, found the camcorder and raced back, my feet barely touching the ground. I madly screwed the camcorder to my tripod. Then I lowered the tripod, pointing it at the spot we'd been fucking a few minutes earlier. I pushed record.\n\nShe said, laughing, \"Okay, back to positions!\" That reminded me: we'd both taken a video production class last year. I'd spent the whole year looking at her from the other side of the room as she goofed off with her friends, afraid to talk to her. Now she was naked in my room, and was about to fuck me on camera. What a difference a year makes!\n\nI lay on my back in front of the camcorder, also giggling now.\n\nShe straddled me, slapped her hands together like a movie clipboard and said, \"Take two!\" Then she lowered herself onto my cock again, and our giggles turned into groans. My god, knowing the camcorder was there, its shiny lens pointed at us... well, all I can say is it felt even better than before. And she was like a wildcat now, performing like crazy for the camcorder, riding me like a bucking horse. Our eyes were locked. We were doing this together. Like it was a great hobby we'd just discovered. After fucking me for a few minutes she hopped up and repositioned the camcorder, to capture a close-up of her pussy swallowing my cock.\n\nShe fucked me like that until her legs started cramping up, so we changed positions again. This time we pointed the camera at the bed, and she got on her hands and knees and I kneeled behind her. I grabbed her hips, feeling her soft, silky flesh under my fingers, and I slowly guided my cock into her tight, swollen pussy. Then I started fucking her with intense power. She was moaning and shrieking in pleasure. I'd never heard such amazing music before. She was a beautiful singer, but the sounds she made in my room that night were better than any song.\n\nI'm fucking Rona Barrett, I kept thinking to myself. I even mumbled it under my breath once or twice.\n\n\"What are you saying Louis? Speak up!\"\n\nSo I said it out loud, \"I'm fucking Rona Barrett!\"\n\nShe laughed, between gasps of pleasure, and said, \"Yeah, Louis! You're fucking Rona Barrett! You're shoving your cock into the Student Council President's pussy!!\" She began gasping and quivering, then she stuttered, \"You're m...m...making Rona Barrett cum!!!\" She shrieked and I pounded her as hard as I could, my bed squeaking and shaking like mad. Her orgasmic screaming went on for minutes. The neighbors could probably hear, but I didn't give a shit. My body was shiny with sweat, and I was filled with energy. It felt like I could do this all night, if only I could keep from coming again. I knew that once I came, our night was over. But it was so hard to hold out! I kept changing the pace, anything to keep an orgasm at bay. I even tried to think about baseball and cowboy movies, the antithesis of sex for me. But I could only hold out for so long.\n\n\"I'm coming,\" I grunted.\n\n\"Oh shit, yeah, Louis!\" she yelled, \"Cum in Rona Barrett's pussy!\" Another wave of orgasms shivering through her body. I felt the cum charging out of me, like it was stampeding from my guts. I shot my wad into her pussy... well, technically, into the condom, but that didn't matter. I was coming inside Rona Barrett, the hottest girl in school.\n\nI stopped thrusting and just held onto her hips, buried deep inside her. I felt her vaginal muscles rippling and contracting around me as she continued to orgasm. It felt like she was milking the last spurts of cum out of me, although I doubt she was doing it on purpose. My cock softening, I finally pulled out, sadly knowing this awesome night was at an end.\n\nRona had another surprise for me, however. She hurriedly had me sit on the edge of the bed, and moved the camcorder closer, aiming it at my crotch. Then she pulled the condom off, letting the cum spill all over my cock and balls, then she licked and sucked the white stuff off me, playing for the lens. She was swallowing it, making humming yummy sounds. It was so raw... so off the hook... my cock started to grow again. It had never gotten so hard again so fast after an orgasm.\n\nOnce she'd licked every drop of cum off me, and sucked every drop out of my rock hard shaft, she said, \"One last thing. We only had that wide shot in that last setup. We need some close-ups to get proper coverage.\" I guess she'd been paying attention in video production class after all!\n\nShe had me kneel behind her in bed again, with the camcorder in my hand.\n\nI said, \"Uh... do you have another condom?\"\n\nShe looked over her shoulder at me and smiled, \"No. Now be sure you get a nice shot of yourself going in. But whatever you do, don't cum inside me. If you do I'll kill you!\"\n\nShit, I thought. It's real this time. No condoms.\n\nI pointed the camcorder down at her ass. She arched her back and the light illuminated her pussy beautifully. Her tight little asshole puckered, almost like it was winking at me. I'd never thought an asshole could be cute, but Rona's was adorable. I positioned the head of my cock between her beautiful pussy lips, playing them for a while before finally pushing myself into her soft, wet tunnel. My cock was inside her. My flesh, her flesh, touching... I felt as if I was having an out of body experience. I began to fuck her again, but it felt so much more intense this time than before. Every nerve on my cock, from tip to base, was firing like mad. I could feel every detail of her insides. It was unreal. But it was real. Totally real.\n\nAfter getting enough close-up footage in that position, she held the camcorder between her legs, pointing up to get an underside shot. I went in and out of her at different speeds, so she could cut to a close up at any point of our lovemaking. Sometimes it felt like we were just working on a school project together. But other times I almost forgot about the camcorder and just made love to her sweet body.\n\nAfter we got all the doggy style shots she wanted, she laid on her back and had me fuck her that way for a while, first with her holding the camcorder pointed up at me, and then I held it pointed down at her. I taped an extreme close-up of my cock sliding in and out of her pussy lips, while she fingered her clitoris. It looked amazing! I taped her boobs rolling in circles as I fucked her with growing power. It looked astounding! She started having another orgasm, and I taped her beautiful lips, groaning and whimpering with pleasure. It was unbelievably awesome.\n\n\"Oh, fuck, oh, fuck, oh, fuck....\" She moaned uncontrollably.\n\nDamn! I started feeling an orgasm coming on. Shit! I had no choice but to pull out of her.\n\n\"What? Don't stop!\" she moaned.\n\n\"Sorry. I was about to cum.\"\n\n\"Why didn't you just say so?\" She quickly got on the floor and kneeled between my feet and began to masturbate me with both hands. She looked up at the camera as she did it, her brown eyes wide and innocent. My orgasm was coming, and soon! I didn't know what she was going to do when I came, but I decided to leave that up to her. It was all I could do to keep the camera pointed down at her beautiful face.\n\n\"Shit... here it comes,\" I grunted.\n\nShe opened her mouth and stuck out her tongue. She jerked me hard with the tightest grip she could manage, until my semen began spurting. I shot three powerful, gushy loads, right into her face, surprising both of us. The first one looped over her face, laying a strip of gooey white across the top of her nose, cheek and left eyelid. She second one glanced across her upper lip before splashing up into her auburn hair. The third one shot right into her mouth, fanning out over her beautiful tongue.\n\nShe motioned for me to get the regular camera and take some nice photos of her face, which was spattered with my spunk.\n\nThen she had me get the camcorder again, and began to put on a show. She played with my cum in her mouth for a minute, opening her lips wide so I could see it spread all over her teeth and tongue. Then she slowly let the cum spill out over her lip onto her breasts. Then she began to spread it all over her tits with her hands. It was ridiculously filthy! I guess she'd seen some of the same porn I had. I'd seen that kind of thing a thousand times... only this time it was Rona Barrett, and the cum she was frosted with was mine!",
        "Then she sucked my softening cock dry and licked it clean. She swallowed every drop. Then, much to my surprise, and against all the laws of science, I started getting hard again. Her eyes opened wide.\n\nShe held my cock in her hand and watched it get larger and harder. \"Louis!\" I loved the way she said my name this time, as if with those two syllables she wanted to tell me that she'd never seen a cock as responsive as mine. That I was a better lover than any of the golden boys she'd blown before. That she wanted me to fuck her again, right now.\n\nI heard the automatic garage door opening.\n\n\"Shit! They're home!\" I said.\n\n\"Wow, our timing was perfect!\" she said, giggling gleefully. We dressed quickly. She didn't even bother to clean the smeared cum off her tits but just threw her shirt on over it without the bra, causing it to get dark with my wetness.\n\nWhen she was dressed, she smiled at me and said, \"How do I look?\"\n\nShe was joking. She knew that her face was still striped with my cum. I got the wet towel and wiped her face clean while she giggled. When I was done I had the urge to kiss her... but before I got the chance, she turned around and took the second flash card from the camera and put it in her breast pocket. She also took the tape from the camcorder. \"I'll get these back to you, erased of course. I don't mean to be all blackmaily with you, but if you show any of those photos to anyone at all, or even so much as tell a soul about any of this, I'll plaster naked pictures of you all over the school. So don't fuck this up, okay?\"\n\nI nodded.\n\n\"Can I trust you Louis?\" she asked, smiling. Her beautiful eyes stared at me unwavering.\n\nI nodded. I was stiff. Shocked somehow. It was over. Tomorrow we'd be back at school, and I'd be a nobody again, and she'd go right back to ignoring me as always. It was sad. I took her out the back hallway so we could avoid running into my parents. I walked her to her car. After she was buckled in she said to me, almost as an afterthought, \"See you tomorrow.\" I wanted to kiss her goodbye, but... I knew it would be crossing a line. She wasn't my girlfriend. We'd had some fun, but now it was over. That's the nature of great experiences. They all come to an end, and all you have left of them is the memories. Well, at least I had the photos of her in the fur wrap to remember her by.\n\nThat night I lay in stunned silence, unable to sleep, thinking about Rona and what we'd done. Not wanting to forget a single detail, I got up in the middle of the night and wrote down everything that had happened. And I made an emergency backup DVD of the photos and hid it away so even if my computer crashed, I wouldn't lose those priceless pictures of Rona Barrett. But I also encrypted it so nobody could share our secret. I anticipated that I'd be masturbating to these photos for years to come. I'd probably be looking at them when I was old and gray, looking back fondly on the greatest night of my life.\n\nThe next day at school I didn't cross paths with Rona all morning. I was pretty sure she was ignoring me as usual. At lunch I sat with my regular buds and looked at Rona over at the popularity table. She was laughing with her beautiful friends. But I didn't mind so much. She'd given me the greatest gift I could have ever asked for. It would be greedy to expect more.\n\nAt the end of lunch, however, Rona walked up to my table. \"There you are! I forgot you sat over here! I've been looking everywhere for you!\" My friends looked on in stunned silence. \"So, Louis. Can you come over after school? I wanted to show some pictures I took recently. I want to get your artistic opinion on them. Give me pointers on how maybe I can improve. And there's this little movie project I'm working on. Maybe you can help me edit it. Whattaya think?\"\n\nI didn't know what to say for a few moments. Then I said, \"Sure!\"\n\n\"Cool,\" she said, \"See you in the parking lot after assembly.\"\n\n\"Cool.\" I replied. She kissed me on the cheek and sauntered off back to her friends.\n\nI looked around at the rest of the nerds and they looked at me in amazement.\n\n\"What was that?\" asked Jason.\n\n\"She just likes photography... it turns out.\"\n\n\"Dude,\" said Jason, \"Rona Barrett's your girlfriend!\"\n\n\"No,\" I said. I looked at her walking away. She looked back over her shoulder at me and smiled. Fuck. He was right!\n\n*********\n\nThe sequel to this story will be loaded by January 20 2012.\n\nIt's called \"Camera Buff -- Exposed\" "
    ],
    "authorname": "cbsummers",
    "tags": [
        "virgin",
        "nerd",
        "photography",
        "blowjob",
        "first time",
        "come",
        "movie making",
        "masturbaton",
        "18-year-old"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/camera-buff"
}