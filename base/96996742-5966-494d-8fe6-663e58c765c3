{
    "title": "TT Spalding - Espionage",
    "pages": [
        "The further adventures of TT Spalding, PI This is just for fun as usual. I hope you enjoy reading as much as I enjoy writing it.\n\nEdited as always by Angel Love. My thanks to her\n\nTT Spalding, PI \u2013 The Industrial Espionage Case.\n\nAfter sitting here for the last three hours, racking my brain, trying to find a beginning worthy of my idol Mickey Spillane, I finally had the beginnings of an idea. Since his untimely passing, my literary clock had begun ticking. I felt it my duty to Mickey to write the all American PI novel. I would draw from my extensive experience as a fearless, intrepid private dick. My worldly knowledge would be my guide. I picked up my pen, (Well actually, it was a computer but what the hell. I know, I know, Mickey didn't use a computer!)\n\nHe reached back and turned up the collar of his black trench coat to block the dripping water running down his neck. It was this damned mist, absorbing the sound and making the night as silent as a tomb. But it was good for him as he leaned against the coarse, wet bark of the tree next to him. It hid him from the house as he stayed just back out of view. He was waiting for her to come out, knowing that she was going to meet her lover tonight. \n\nHer lover! He was number two in the local mob, controlling the numbers and the hookers for Don Giovanni, the top man. Normally that was a good thing to be unless the woman you were sleeping with was the wife of the Don. And Don Giovanni had found out about it. He was there tonight waiting for her in place of her lover, no longer number two and no longer anything. When I called to let him know she was on her way, my job would be done and my bank account would be a lot fatter. Her bank account would be stamped closed. But that wasn't my problem. She knew the risks! She knew what the score was. Shit!\n\nI had to do something! I couldn't let her be killed for loving the wrong man. I knew then that I had fallen for this dame. I had fallen hard and there was no hope for me now. \n\nNot too bad, but it lacked something. I needed to punch it up some. Maybe if I read one of Mickey's novels it would help. I needed inspiration and Mike Hammer was the one to provide it. Yeah, that would do it. I could pull out my copy of Black Alley, or even The Killing Man to stoke up my imagination. Maybe I could knock off early and . . . \n\nSlam! The door to my inner sanctum, my office, my writing den, flew open!\n\n\"Theodore, get your ass in gear! There's a gentleman here to see you. I'll give you a minute and then show him in.\" \n\nI was about to tell her to go the hell away when . . . , \"And don't you even bother to give me that crap! I know that look!\" \n\nTrapped! Hoisted by my own petard! (Wonder what the hell that means, anyway?)\n\n\"All right, all right! I'll be ready. God, give a guy a break why can't you?\"\n\n\"What did you call the last three weeks in Hawaii? Work? You don't need a break but we need the money.\"\n\nThat was Maggie, my wife and part time secretary and the only living soul that could call me Theodore and live. She was the boss, that's for sure. And she was right. We had spent the last three weeks in Hawaii, and it had been great. I got more loving and more sex than I ever dreamed and we were both fat, happy and sated by the time we had to leave. Good vacation! Good company! Good everything!\n\nI saved my new document, my novel, to disk and sat back waiting for my new client. I had no information on this one, since he hadn't come in before. Since we were on vacation, the office was closed so this would be the first sit down. Yeah, Maggie was right. We needed the money, especially since she had presented me with an anniversary gift, a first edition copy of My Gun is Quick, the first Mike Hammer novel and my most prized possession. God, I loved that woman! Always had and always would.\n\nThe door opened and Maggie showed him in.\n\nTall, coal black hair, combed back tight against his skull and gleaming with the liberal application of tonic. Looked to be mid forties, or maybe older. Sharp features, the face of a man used to giving orders. He wouldn't be good at taking them or of having them ignored. Dangerous, but with an air of vulnerability about him.\n\nI snapped back to reality and stood, waiting.\n\nMaggie glared at me to be sure I was ready and introduced him. \"This is Mr. Raymond Villager. He wants to discuss some business with us. Mr. Villager, this is TT Spalding.\"\n\n\"How do you do Mr. Villager. Welcome and please, have a seat.\" I indicated the softer of the two chairs in my spartan office.\n\n\"Thank you. Please call me Ray if you will. Mr. Villager sounds so tight, so formal. I'm just a plain guy.\" He sat down slowly, looking for all the world like he would rather be anywhere else than here. Interesting!\n\n\"And you can call me TT, Ray. Let's get some facts first and see what we can do for each other. OK with you?\"\n\nHe nodded affirmatively but didn't relax in the chair. He was perched, the best word I could come up with, on the edge of the chair with his legs tight together and his hands clasped on his knees. Not what I expected when I first saw him. Of course, I saw him through Mike's eyes and they were biased.\n\n\"First, I need to know what it is you want from us. We do many things but we need to decide first if we can even help you. Why don't you start from the beginning? OK with you?\" \n\nHe nodded again and seemed to withdraw into himself for a moment while he tried to come up with the words he was having trouble saying. I thought probably he was going to be one of those domestic problem guys with a cheating wife and my heart sort of stumbled. I was really tired of those: sad, broken men who couldn't believe that the love of their life didn't feel the same way. I had seen it all and it saddened me. \n\n\"I own and operate my own company. It's called, '411, Inc.' and we control access to, or provide the source of, information. Information of all kinds. We're sort of a know-all, see-all outfit. If there's something you need to know, we find it out. If there's something you want to sell, information wise, we sell it. We do it all.\"\n\n\"And this is a profitable endeavor? I mean, you make a living doing that?\"\n\n\"A very good living. I grossed more than seven million last year and this year, so far, looks much better. I have twenty employees and we provide services to more than two hundred companies. I travel a lot and spend a lot to time out of the office.\"\n\nBetter and better. Maybe this was my meat and potatoes problem: industrial espionage. I loved this stuff. People trying to steal secrets from one company to sell to another. This was the stuff of profits: mine!\n\n\"And what seems to be the problem? It sounds like things are going well.\"\n\n\"Yes and no. I'm still doing well and profits are up, but recently, we have been underbid by several other companies that aren't half as good as we are and they couldn't offer the services we do but they are able to come up with a program proposal equal to or better than I can provide at least for the presentation.\"\n\nThis came out in a rush and seemed to be confusing. If they were smaller and not able to provide the services, how could they promise them? I asked Ray this question.\n\n'If they get the job, they can afford to hire the people temporarily to do the job. Probably not as well or as complete but by that time, they're already hired. I'm shut out. The thing is there is no way they could know what I proposed or how much I was changing for that service. But their bid is always exactly 5% less than mine. On a $100,000 job, that's a difference of $5,000, usually enough to get the job.\"\n\nNow I saw. Someone was stealing the information of the bidding and using it to provide a lower bid with the same services. Someone was ripping him off and had done it enough that Ray was now noticing. I get it! Great! My cup of tea. I knew what I could do for him now.\n\n\"I see the problem. You want to know who's feeding your competition information on the job bidding process. Right?\"\n\n\"Exactly! I need to close the leak and I need to do it soon. There are a lot of people counting on me and I don't want to let them down. I'm good at ideas, information and the ways it can do things, but I'm out of my depth here. Can you help?\"\n\n\"We can help and we can close the leak. We work on a simple contract basis. I'll need $5,000 up front, permission to place two employees in your offices and permission to install camera or phone taps as I see fit. I'll provide you with the locations of all cameras and taps. We work on a flat fee basis. Once we begin, I'll provide weekly reports and if you are satisfied with the progress, you will pay us an additional $5,000 per week. Once we complete the job, and the leak is identified and stopped, our business will be concluded and there is a fee of $10,000 at the completion. If these terms are satisfactory, I'll have Maggie draw up the contract and we can begin.\"\n\nMr. Villager didn't give it much thought before standing up and putting out his hand. \"We have a deal. Thank you, very much, for helping. I look forward to stopping this as soon as possible.\"\n\n\"Excellent. Normally, we can wrap everything up in just a few short weeks. Shouldn't be too hard in this case.\"\n\nI yelled for Maggie and she was in the door before the echoes stopped. She was probably listening at the door. Maggie was a greedy little minx. But, she was my little minx so that was OK.\n\n\"Maggie, would you take care of the details with Mr. Villager?\" Since she was snooping, I didn't even have to give her the terms. She smiled at me, a smile that promised good things later and showed him out. She would take it from here.\n\nI considered giving my all American novel another try but decided to let it go today and let the creative juices stew overnight. Even Mickey had dry spells. It was seven years between the last two Mike Hammer novels. So there!\n\nWhen Maggie came back in, we discussed the case and decided to call both Polly and Bruno in on this one. I wanted Bruno to go in as a security guard while Polly could go into the mail room or as a temp secretary. Maggie agreed and left me to make the calls. She had the contracts to finish typing so we could review and finish them up. I wanted Ray in for one more consult before we began.\n\nI called Polly first. I told her the job and that she would need to be free for the next couple of weeks. She said that would be fine as her photo work was slow this time of year. She was actually happy to get the cash so we made plans to meet end of week. \n\nI called Bruno and talked to him and had a little trouble convincing him to give up his freedom for the time I would need him. I had never really understood where Bruno got the money to let him do pretty much as he pleased. He never volunteered the info and I never felt the need to ask. But, he finally agreed and we negotiated a price that was fair to both of us. \n\nWhen Maggie came in after closing the office for the night, she had a smile on her face. She had finished the contracts and had done some Maggie type calculations. She must have liked what she saw because she plopped herself down on my lap and nuzzled my neck, raising my blood pressure and my temperature. \n\n\"Well, well, what has you feeling so amorous tonight? Not that I'm complaining you know. Just wanted to know what I did to make you this happy.\"\n\n\"I just went over the numbers for Mr. Villager and if we play our cards right, we can net out a little more than $30,000 on this deal as a minimum. If you string it out a little, could be more. That's what you did right, lover.\" \n\n\"Well, all it takes with you is money, huh? Didn't know you were that easy. I can always find money.\"\n\n\"You don't need money lover. I'm yours for free, but you can always get me hot by showing me the dollar signs. I do like money.\"\n\nNow, you have to understand that Maggie and I had never been rich. We made a good living with the PI business, but we spent pretty much what we made. Neither of us was much for saving for the future. With no kids, we had nothing to save for except our own retirement and neither of us was in that big a rush to get there. So, we didn't think about it. \n\nMaggie and I left for home and I am glad to report that I indeed did get lucky that night with promises for more if things continued this way. I arrived at the office the next day for my meeting with Ray in great good spirits and even Maggie was in a good frame of mind. She was still smiling when she showed Ray in later that morning.\n\n\"Ray, thanks for coming. The paperwork is all complete and waiting only for your signature. I've talked with two of my associates and I would like to send them in to see you tomorrow. The gentleman's name is Bruno Morelli and I was thinking security for him. That would give him access to the whole place without arousing suspicion. The lady's name is Polly Purcell and maybe either the mailroom or as a temp secretary. She's not too good as a typist so, it's up to you. Either way, I'd like them to start right away.\"\n\nRay blinked in surprise before he nodded. \"I'm surprised that you can get to it so quickly. That's wonderful news. I think what you suggest can be arranged. I'll talk to my wife today and let her know.\"\n\n\"Pardon me Ray, but does your wife work with you? Is she one of the employees?\"\n\nHe had a little frown on his face as he considered this. Somehow, I knew things were not simple in that regard. \n\n\"Yes, she is. We've been married for just more than two years and she works as the office manager. It's not a full time job and she is not there most of the time. She fills in when I travel.\"\n\n\"Does she know that you've been to see me? Does she know that you are concerned enough to ask for help?\"\n\n\"Actually, no. I was going to tell her after we made it official. Why?\"\n\n\"I'd rather you not tell her. Just to be on the safe side, and to be sure there are no accidental leaks. It's not that she's a suspect, of course, Just trying to minimize the number of people that could let it slip. Is that OK? I'll talk to her later to let her know this was my idea.\"\n\nIt was clear Ray didn't like it but he was a smart businessman and knew the risks increased as the number of people involved increased. So he finally agreed, shook hands and went out to sign the paperwork and drop off the certified check for five grand. That would also keep Maggie in a good mood, and increase my chances for a little afternoon delight in the stock room. \n\n\"What time are Polly and Bruno coming in? I assume you called them for today?\" Molly asked me after Ray left.\n\n\"They'll be here in about an hour or so. Why? What'd you have in mind?\"\n\n\"Come with me, young man. I need some help in the stockroom.\"\n\nGod bless the stock room. As I know I've told you, some of the stuff we look at is very erotic and downright nasty and it always makes me horny and Maggie hot. We've stocked some really hot stuff in that stockroom. Today was no exception. Maggie was humming something about shopping for the world as she leaned over the table. That was almost enough to dim my fire, but not quite. Have you ever seen Maggie?\n\nWe met with Polly and Bruno and set them up with their fake IDs and sent them off to see Ray Villager bright and early tomorrow. They were smart kids and knew exactly what to do. We discussed the cameras and voice activated recorders and agreed on what and where. Ray had given me the blueprints to his building so we had what we needed.\n\nJust before they left, I let Maggie go out to begin shutting down the office while I talked to both of them.\n\n\"There's something I want you to watch for. There's a new wife in this deal and something just doesn't sit right with me. He travels a lot and she fills in for him. She also heads up the office, so be careful. But check her out good, you understand?\"\n\nGrins from both before they left. They were smart, like I said. They would do the job. After all, it was worth $750 a week for them, three weeks guaranteed, considerably more than the $800 per job with the domestic crap. They took off with promises to follow up with me in two weeks. We were in business.\n\nMaggie and I used the time to get things straightened up around the office. We had made a nice profit in the period just before our vacation and we went ahead and bought some of the new stuff we wanted for the office. New computers with a total office network was top of the list. Since Polly was working, I had to try to set up the computers by myself and that was a disaster. \n\nAfter a couple of days of embarrassing failure on my part, Maggie finally called for help and this young prick from something called 'Network Nerds' showed up. He was indeed a nerd but Maggie thought he was 'cute' and made a big fuss about showing him around. I left them to it, Maggie giggling like a schoolgirl, while I went back to my Great American Novel. I could use the old desktop for that. I fired it up and began.\n\nAn hour later, I was still staring at the blinking cursor on the screen and becoming aware of the silence from the office in front. I knew there should have been something happening out there and the silence made me nervous. I got up, went out to see what was up and found no one. The office was empty and the computer equipment was sitting there, seemingly deserted and still not connected and working. There were computer tools, computer repair equipment but no computer repair guy and no Maggie! No! No! Not my Maggie!\n\nI stood there partly in shock until I heard some sounds coming from the stockroom. The stockroom? God, not my Maggie and the repair guy! In our stockroom? In panic, my heart in my throat, I ran out the door, around the corner and into the stockroom, prepared to defend my honor and kill someone. The door flew back against the wall and there, in front of me and in full view was Maggie, holding a flashlight for the computer nerd who was up on a ladder drilling a hole in the wall. Maggie turned at the sound and, looking at me with this big innocent face, slowly began to smile.\n\n\"Hi, dear. Come to help? Expecting something else, hum?\"\n\nShit! How could I have been so stupid. I knew my Maggie and I knew she would never do me wrong, but I was so lost in my creative juices that I put two and two together and got five. I would never live this down now. I could tell by the look on her face. I was doomed!\n\n\"No, no, just curious. Why in here?\" I asked the computer guy, trying to recover as much of my self respect as I could. Hopeless, knowing Maggie, but I had to try.\n\nHe explained the stockroom backed on both my office and the outer office and he had to run some wires so this was as good a place as any. And, he said, Maggie suggested it so as not to disturb me. Hah! Fat chance. I was set up, no doubt about it. She set me up!\n\nI won't go into it any more but know, fearless reader, that I paid dearly for that little gambit of hers and she enjoyed every minute of it. Well, actually it did lead to some very nice fantasies. \n\nTwo weeks and three days after Polly and Bruno started, they come into my office with information. They had confirmed their suspicions with each other and were quite sure they had it nailed. But, they wanted to clear it with me before they went any further. I had decided to wait to tell Maggie and asked them to meet me one afternoon when she was out on an errand. Sneaky but she deserved it after that stockroom stunt.\n\nPolly looked at Bruno and he nodded, so she began.\n\n\"Well boss, we think we have the guy guilty of stealing the secrets but it's more than that. There are two of them and it's pretty much what you thought. Do you want to hear about it now, or wait till we have the PICS and discs?\"\n\n\"Get the pictures, proof positive of the theft and the two of them together and then let's talk further. What do you need? Another week or two?\"",
        "\"We only need a week but we'd like to string it out another just for the money. Any problem with that?\" That was Bruno operating. Not cheating the customer, just padding the account a little. So long as he got what he paid for, why not make it a little more expensive to increase the value of it? \n\n\"See you in two weeks from Monday. OK?\"\n\n\"OK!\"\n\nAnd that was that. With the extra two weeks, we would bill Mr. Villager $40,000 and Maggie and I would clear $34,000, minus a few bucks for incidentals. Not bad. But because Maggie had been a bad, bad girl and had caused me pain and suffering, I wouldn't tell her till the end. \n\nAs it was, Maggie began to feel bad about what she did and I let her suffer by pretending to still be humiliated and ashamed of myself. She finally took me by the hand one afternoon late and led me into the storeroom. But when I got there, I pretended to be angry and accused her of trying to humiliate me further. She protested but I remained adamant. She finally pushed me back against a stack of boxes of printing paper and yanked my pants down around my ankles. I won't tell you what she did or repeat what she said then, but I enjoyed that little visit more than any before it or since. \n\nFinally, it was time and Bruno and Polly came in fully loaded with facts and all the pictures Ray could want. There were two piles. The first pile was the thief. They had him dead to rights. It was a man by the name of Karl Damler. Karl was a consultant and helped design information systems for the company but normally had no access to the information that was critical. He was also a 'hottie', as Polly labeled him. Tall, well built, long black hair worn in a pony tail, a body that spoke of working out, and a face that looked to be chiseled out of concrete. Hard, firm chin, high cheekbones and eyes clear and bright. All this was Polly speaking. Not me, for God's sakes. To me, he looked like a guy. Period! A lot like the computer nerd. \n\nBruno let her talk, rolling his eyes for effect but still, letting her go on. That was not unusual for Bruno. He usually was stingy with the words. But, he was the one with the computer discs showing Karl sitting at Ray's computer and downloading all of the information on the jobs under bid. He apparently did it late at night when the office was empty. He had a key for Ray's office so he could get in at any time. He also seemed to have Ray's passwords and access information, a fact that I mentioned to Bruno. Bruno just nodded and let Polly finish.\n\nPolly watched as I reviewed the discs and pictures Bruno provided me along with a report showing when and how he accessed the data, what files he downloaded and what he copied. Bruno, that wonderful technician, had it all and he had him cold. Now for the rest of it. \n\n\"OK, good work. Just a couple of questions. First, how did he get the key to Ray's office and how did he get his passwords? That is critical to solving this case. Polly? What can you tell me?\"\n\n\"Oh, boss, you're going to love this one. Just like you said. Before I say anymore, I have a couple of pictures you're going to want to see. Bruno?\"\n\nBruno laid down three pictures with a flourish. That was not typical of Bruno. Usually he just smirked. A flourish? These must be some pictures. I sat down and pulled them to me to see what was so special. Ha! Ha! So, I was right! Damn, I'm good!\n\nThe first picture was sort of dark and showed two people in what looked to be a conference room. The woman was on her back, her ass near the edge of the table with her legs wrapped around the ass of a big man. They were both naked as jaybirds and it was clear that they were giving it a go. The second picture was similar except that the angle was different and I could see her face and the face of our Mr. Karl Damler. Their expression indicated that things were about to come to a huge climax! And the conference room was the one next to Mr. Villager's office. I remember the pictures of it when we were laying out the camera locations. The final picture was of a beautiful woman, the same woman in the picture, but this time dressed and sitting at a desk. \n\n\"OK, I give. Who's the woman or should I guess? Could it be our Mrs. Villager?\"\n\n\"Damn boss, don't you ever miss? That's her. She's been doing Damler and she's the one who gave him the passwords and the key. I have that on video as well as much more of the good stuff. She is one hot momma. She worked him over that night like a pro. She got him up three times in one night and I admit, he's pretty well endowed. Too bad he's a thief and a swindler. I'd like to have a roll in the hay with him myself.\"\n\n\"Where was Mr. Villager? How did he miss that? Christ, it was right outside his office!\"\n\n\"On the road. He had been gone for two days and the Missus decided to stay late at work both nights. She waited till the office staff left, went to the conference room and called our boy Karl. He came running, got naked before the door closed and she went down on him like a vacuum cleaner. God, I get hot just watching it. What was impressive was that it only took him a little while to get it back up and then he bent her over the table and rammed it home. She squealed like a stuck pig, but happy, you know?\" \n\nThere was much more and when I reviewed the videos, I was sold. It was all there, video of the betrayal, video of Karl working the computer, voice confirmation of the password and key source and nothing left to chance. The second pile was strictly one for Mr. Villager to use. It was all Karl and the Missus having sex in all different ways and times. It seems that she was not shy and there were pictures of her and Karl during working hours in the parking garage, in the conference room, a couple of her and him in the copy room and more. Seems she liked oral and there were several clips of her giving and getting. It was graphic as hell and hard to watch unless you wanted to see her get hers. And I did. \n\nWell, I took it all, paid both Bruno and Polly and sent them on their way with a 'good job'. And they did a great job. I sat there, looking at the pictures, watched all the videos and read the report. They were a wonderful team and I was as pleased with them as a proud father. I was still there when Maggie came in.\n\n\"What's that look for? You look like you just conned a con. I'm not sure I like that smirk on your face.\"\n\n\"Maggie my woman, just sit yourself down and look at this. Our children just reported in and they did their usual fine job. Just look.\"\n\nAnd look she did. I played the videos with sound and spread the pictures out for her as well. I quoted some parts from their reports to explain some of the footage but it was all very clear. Maggie was shaking her head when the last video was over. She was as pleased as I was but wanted to know what led them to suspect the wife. And then, before I could say anything she started to laugh.\n\n\"You old fox. You knew, didn't you. That's why you've been so secretive about this. You told them to look didn't you?\"\n\n\"So I'm brilliant. You knew that. That's why you love me so much.\"\n\nAnyway, Maggie called Ray the next morning and asked him to come into the office. She suggested he might want to bring the cash and she told him how much. She reminded him that he still had to approve the report but that he would probably be very pleased. He agreed to come in and she set the time.\n\nI admit, I was a little nervous as Maggie showed Ray in. This was the part of the job I never enjoyed much. To see a man or woman hurt by betrayal wasn't my cup of tea. I wasn't a religious man by nature but I was comforted a little by a quote from scripture that had always stayed with me.\n\n\"Can a man walk on hot coals without his feet being scorched? So is he who sleeps with another man's wife\"  (Proverbs 6:28-29)\n\nI knew in this case, Karl's feet were going to get seriously burned! Way to go Proverbs!!\n\nRay came in with Maggie and sat down, looking pleased and expectant. The weekly status calls let him know we had it nailed and he was about to find out who had been doing him in and he was ready for punishment to be meted out. I gave him that part first.\n\n\"Mr. Villager, Ray, the man who has been stealing your information is Karl Damler. He accessed your computer and made copies of all of the necessary files. We have him on video and in pictures with dates and times. It's all in this report and we have copies of everything he took. My agent made copies of all of the discs he made. It's all in the report.\"\n\nRay was reading the highlighted parts and he looked very satisfied. He had what he needed to press criminal charges and the information to change his bids on several jobs that had yet to be sent out. He had it all and was very pleased.\n\n\"This is great! It's all here and I can do what has to be done. Congratulations, this is excellent work and you'll have my recommendation in writing. I can recommend some work your way right now. Wonderful!\"\n\nI sat there and waited. It would come just about now. In my mind, I counted back from five, four, three, two, and bingo!\n\n\"But, how did he get the key to my office and my passwords? He isn't a computer guy to my knowledge. I don't see how he could have gotten these. Do you know?\"\n\nI nodded, reached down and pulled the second report out of the desk drawer. I glanced at Maggie and she just nodded. She wasn't as soft as me. She would go for the juggler if it were her. I pushed the report over to Ray with a soft, \"Read this first.\"\n\nI watched as he read the end of his life as he knew it. I saw the loss and the pain and the first healthy flash of anger as he read. I watched the pain intensify as he looked at the pictures and finally saw the slump of his shoulders as he finished. I watched him finger the CD and waited to see if he wanted to play it but wasn't surprised when he simply slipped it back into the envelope. \n\nHis eyes when they returned to me were wet with unshed tears and haunted with pain and sadness. I had seen that look before and understood. It tempered my words.\n\n\"Ray, I know this is hard, but it was important that you knew. This explains how Karl was able to do what he did. Your wife was part of it, but I admit I'm puzzled. Why would she do this? She had everything with you but she's poisoning the golden goose so to speak.\"\n\nRay shook his head and didn't speak right away. Finally, he looked back up.\n\n\"We haven't been doing well lately. Sally is jealous of the time I spend at work and the time it takes to keep this company up and profitable. She wanted to travel and spend my money and I objected. I finally had to cancel her credit cards so she's been pushing me a lot lately. I was considering filing for divorce but she pleaded with me not to. She said she loved me too much to lose me and that she would try to be a better wife. I believed her. But I guess the prenuptial agreement was what drove her. If I divorce her, she gets $50,000 for each year of marriage and that's all. I'm worth a couple of million without the company and that's another twenty to thirty million. Divorce would take away her living large life style and her Cadillac. I assume she was getting a cut of what Karl was getting by selling his information.\"\n\nWell, the story was all too typical and I assured Ray that this wasn't his fault. In my business I see a lot and I let Ray know he wasn't alone. Ray left our office a sadder but richer man. He would be divorced within two weeks and life would go on. I was just a little sadder than I was before Ray walked into my office but that was the job. I waited as Maggie showed him out, collected the money and closed the door. We were done for the day and $34,000 richer.\n\nAs we walked down the hall toward the steps, I tried to lift my spirits by asking Maggie if she was just staying with me for my money. I was looking for reassurance.\n\n\"You'd have to be doing a whole lot better than you are for that to be true. If it was your money I wanted, I'd make you get a real job. One with some security. No, it's not your money, it's your sparkling personality.\" \n\n\"That's all? Nothing more?\"\n\nShe reached around to pinch my ass and smiled. She knew me well enough to know what I was doing.\n\n\"You've got some other assets that are quite good too. Almost as good as the computer nerd. Too bad you caught us in the stockroom. I was about to ravish his body right there on the stockroom floor.\"\n\nI laughed and returned the pinch. She laughed as well and before we reached the stairs, she stopped, reached down and grabbed me where it counts.\n\n\"This is all mine and the only one I want. I'm always a little surprised that you belong to me. I just got lucky I guess.\"\n\nI kissed her and smiled. I was the lucky one. And funny that she should mention it: I always wondered why she picked me. Just goes to show! "
    ],
    "authorname": "thecelt",
    "tags": [
        "private investigator",
        "detective",
        "private eye",
        "satire"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/tt-spalding-espionage"
}