{
    "title": "Jenna, Sucker for the Team Ch. 02",
    "pages": [
        "Chapter 2\n\nJenna didn't hear anything from Rob or anyone else over the rest of the weekend, which was okay with her. She had a Fluid Mechanics paper she needed to work on and she devoted all her time to that. On Monday around noon, she was sitting at a study carrel in the school library, her face buried in a book discussing the pros and cons of deep water drilling. She looked up when someone tapped at the divider separating her from the next study space. A young man who looked vaguely familiar stared back at her.\n\n\"Hi. Uh, you're Jenna, right?\"\n\n\"Yes,\" she replied, somewhat confused.\n\n\"Rob's in class but he told me I'd probably find you here,\" the young man said as he reached into his pocket and pulled out a post-it note. \"He wanted me to give you this. I guess the coach would like to talk to you today at four o'clock. That's the number of his office in the Athletic Building.\"\n\n\"Uh, okay,\" Jenna said, more confused than ever as she looked down at the number on the paper. \"Do you know what he wants to talk to me about?\"\n\n\"Beats me,\" the young man said as he looked blatantly at Jenna's tits, nicely displayed beneath her tight t-shirt.\n\n\"Do I uh...do I know you?\" she asked.\n\nThe guy shrugged his shoulders and smiled. \"I'm Tyler. I'm on the lacrosse team. I don't play as much as guys like Rob, but I remember you from the party on Saturday night.\"\n\nJenna remembered the name Tyler now; he was the guy she'd sucked off just before the three coaches came into the room. \"Oh, okay. Yes. Umm, thanks for giving me this, and I guess I'll see the coach at four.\"\n\n\"Look, do you have a minute or two right now?\" the young man said as he reached down and took her hand. \"I'd like to show you something.\"\n\n\"Uh, what about all my stuff?\" Jenna gestured to her books and papers spread out on the desk before her.\n\nTyler poked his head around the screen between Jenna's space and the next study carrel where a girl wearing big owlish glasses was sitting. \"Excuse me, would you mind watching my friend's stuff for a couple of minutes? I want to talk to her about something.\"\n\n\"Uh, sure. No problem. I'm going to be here for at least the next hour.\"\n\n\"C'mon,\" Tyler said hurriedly as he all but pulled Jenna out of her chair. Holding onto her hand, he pulled her along at a brisk space until he reached the door to the handicapped washroom in one of the back corners of the building. He glanced around furtively before opening the door and ushering Jenna inside.\n\n\"What...I don't underst--\" Jenna started to say before she was interrupted.\n\n\"I've got something for you.\" She turned to see Tyler with his pants already open and his dick in his hand, stroking his cock which was almost totally erect. \"I got hard just looking at you sitting at that desk, with those big tits and that sweet mouth of yours. So, I figured, just in case you haven't had lunch yet, I'd give you a little something to help fill your belly. It was pretty clear the other night how much you like swallowing cum. I haven't jerked off yet today so you're in for quite a mouthful.\"\n\nStroking his hard cock with one hand, he reached forward with his other hand and started pushing down on Jenna's shoulder. Once her eyes had zeroed in on his stiffening prick, she was lost. She was already salivating, her mouth quickly filling up with hot sticky spit. Like a zombie, she dropped to her knees and opened her mouth as he moved in close, stuffing his throbbing cock right in between her parted lips.\n\nLess than two minutes later, she got that mouthful of cum and, he was right, it was a big one. Once Jenna had swallowed the full load and sucked out the last few drops of tasty dogwater, Tyler was quick to zip up.\n\n\"Thanks,\" he said as he reached for the door. \"And don't forget to see the coach at four.\"\n\n<p align=\"center\">****</p>\n\nPrecisely at four, Jenna found herself in the Athletic Building, somewhere she'd never been before. With her knapsack slung over her shoulder, she checked the office number above the door to the one written on the post-it note. Satisfied that she was in the right place, she hesitantly knocked. A few seconds later the door was opened by the man who she recognized as being the leader of the three older men who'd used her mouth on Saturday night. Yes, she remembered 'The Coach' as having a thick sturdy cock, a nice powerful slab of man-meat that was a joy to suck on. The biggest cock she'd sucked that night. He'd given her a thick tasty load too, thick enough to almost chew on, which she loved.\n\n\"Uh, Jenna, is it?\" he asked as he opened the door wide and gestured for her to come inside.\n\n\"Yes, thank you,\" she replied as she tentatively walked into the office. It was littered with all kinds of sports equipment and paraphernalia; trophies, posters, banners and certificates. There were doors on each of the other three walls, with the door on one side wall open. She could see that door led to a small private washroom, and through the one at the back, she could hear what sounded like basketballs bouncing and muffled voices calling out occasionally. She guessed that door opened into one of the school's numerous gyms. She had no idea about the last door on the office's other side.\n\n\"Have a seat,\" the coach said as he gestured to a simple chair in front of his desk, which was piled high with papers and files that seemed to be in total disarray.\n\nJenna set her knapsack down beside the chair and took her seat, noticing the coach's eyes looking her over as she sat down. She knew she was going to be spending some time in the geology lab today, so she'd dressed quite simply, a snug-fitting white t-shirt with a Banana Republic logo on the front, and a faded denim miniskirt. Both items fit her curvy 5'-4\" frame snugly and she saw the appreciative look in the coach's eyes as he looked her up and down, a nice expanse of the side of her full creamy thighs coming his way as she crossed her legs.\n\n\"You're probably wondering why I asked to see you,\" the coach said as he took his seat behind the desk and swivelled his chair to face her.\n\n\"Well, kinda.\"\n\n\"As you know, I was at the party at the frat house the other night and know what happened. Based on what I saw there, I was wondering if you'd be interested in helping us out this year.\"\n\nJenna was totally confused at this point. \"Us?\"\n\n\"Yes. By 'us' I mean the team, the lacrosse team.\"\n\nNow she was really flummoxed. \"What...what could I do to help the lacrosse team?\"\n\n\"Jenna, would it be okay if I was perfectly frank with you? I'm sure it would be easier for you to understand if I could speak quite explicitly about what I was thinking.\"\n\nJenna still had no idea what he was getting at, but... \"Uh, okay.\"\n\n\"To be quite honest, I've noticed that the boys play a lot better when they're feeling relaxed. You know, without being all tensed up and worried.\" He paused as she gave a little nod. That idea seemed to make sense to her. \"So, that's where you would come in. Based on what I saw Saturday night, if you were to kind of do the same thing with the boys that you did there, it would make them feel relaxed. And I'm sure if they got rid of some of that worry and tension, they'd definitely perform better on the field.\"\n\nNow it was perfectly clear to her. The coach wanted her to let the boys use her mouth in order to improve their play. They'd be getting rid of 'that worry and tension', and she'd be swallowing it. It was a novel concept, but she got the underlying psychology behind it. With the kind of analytical mind that she had, she found the whole idea quite intriguing, especially after having experienced what she'd went through on Saturday night, and how much she'd enjoyed it. But, there was one thing that was troubling her. She'd been wondering about it ever since Saturday. She had concerns about some other things too, and she decided to ask about those less important issues first before getting to the big question. \"Um, okay. I understand now what you're saying. I have a few questions though, if that's okay?\"\n\nThe coach was happy to hear that. At least she hadn't grabbed her stuff and stormed out of the room. \"Sure. Go ahead.\"\n\n\"How many players are there on the team?\"\n\n\"All Division 1 schools carry 48 players on their lacrosse team rosters.\"\n\n\"48?\" Jenna hadn't expected there to be that many. She didn't recall seeing that many on the sidelines when she'd watched that season opening game.\n\n\"Yes, that's how many we have on the full roster and that attend practices. A lot of those are freshman and sophomores who rarely play. On game days and when we attend out-of-town tournaments, we're only allowed to carry 24 players.\"\n\n\"So I'd...I'd be expected to suck off those 24 players?\"\n\n\"Well, I was hoping that you'd be available for more than just game days. They need to show what they can during practices too.\"\n\n\"So, all 48 then?\"\n\n\"Yes. Well, 51 actually, which includes me and my two assistants.\"\n\n\"And how often do you practice?\"\n\n\"Every day after school during the season. Except today. The players are all taking an English proficiency test right now, so no practice today.\"\n\n\"And how long does the season last?\"\n\n\"Well, as you know, we've just played our first game, so the rest of the season is ahead of us. Basically, with tournaments and possible playoffs, it'll be about four months long.\"\n\nAgain, being a numbers person, Jenna had the numbers going around in her head. Yes, that was going to be quite a lot of cum she was going to have to swallow. She did like the sound of that. \"So, 51 guys on a daily basis, for four months?\"\n\nThe coach gave a bit of a shrug. \"I know that sounds like a lot and I'm sure it wouldn't be that many every day but, if you're up for it, yes, that's what it would be. Seriously, Jenna, based on the way the boys have been talking since Saturday night, I personally think this would be the best thing for the team. With your help, I think we'd have a good chance of not only winning the division, but the national title as well.\"\n\nThe whole bizarre idea was starting to sound more and more appealing to Jenna. She could definitely see the boys playing better without the pressure they must be under at this level of competition. She knew that lacrosse was a big deal for Ivy League schools. Setting that part of it aside, what better way was there to feed her addiction than to have that many strapping young boys lining up to fuck her face. If she could help them take a load off, literally, it might be best for all concerned, including her. But again, she was still worried about one thing specifically, the thing that had been troubling her all along. \"I have to admit, Coach, the idea sounds quite interesting, but I have one more question, which is quite important.\"\n\n\"Sure, fire away?\"\n\n\"I was kind of thinking about this the other night too, you know, with all those guys coming in and out of that room. What if one of them tried something? Something rougher that goes beyond what you're talking about. You asked to be frank with me, so I'm going to be totally frank with you; I don't want any part of something like that, it would have to be just what I did for them Saturday night.\"\n\nBefore Jenna had finished speaking, the coach was already shaking his head. \"You don't need to worry about that at all. I would never put you in a situation where you felt unsafe or worried about something like that happening. I've talked to my boys before the start of the season, as have all the other coaches of the various teams. If anything got out of hand with a girl like that, if one of those boys went too far and got physical with you, or any other girl, not only would they be off the team in an instant, but the whole program could get shut down. That happened a number of years back at another Ivy League school. A girl got raped by a player and the whole program was shut down for three years. Not just for that player, but for everyone on the team, players and coaches. They still haven't recovered.\"\n\n\"Huh,\" Jenna said with an understanding nod.\n\n\"Like I said, I've talked to my boys about that so they all know the score, to use a sports term. Again, I'm going to speak explicitly; there's a real difference from a girl being on her back getting raped and a girl on her knees willingly sucking a guy off, with no one forcing her. I think you can easily picture that, and how a jury would see the difference if the girl in question ever cried 'foul'.\" He paused and shook his head. \"No, don't worry, that's not going to happen. You can trust me on that. And it's the same with their phones. No one will try taking videos or pictures of you while you're doing that. If I catch wind of anybody doing that, they're gone. I'll have them thrown not only off the team, but their parents will be informed and they'll be thrown out of the school too. Now, in the heat of the moment, they may call you an unflattering name or two, but nothing more than that. I hope you won't mind if that happens.\"\n\nJenna was satisfied with the coach's answer and explanation. She'd been wondering why none of the boys had made any further overtures or gotten more aggressive with her, or even just pulled out their phones and started filming her sucking them off. None had tried to take off her pants, grab her tits, or record it in any fashion. For that, she'd been thankful, since she just loved sucking cock and was happy to concentrate on using her mouth to give each of them as much pleasure as she could. As far as anything more, she still felt compelled to save that for the right time, with the right person, and so far, she hadn't felt that way about any of the boys she'd met at the university, not even Rob. But sucking them off...well...that was a different story altogether. As she thought about the number of players on the team, 48 virile young college boys in the prime of their life, and three handsome older men, well, the idea of getting fed as much cum as she could handle was starting to sound pretty darn good.\n\n\"Okay. I think I might be able to help you out with that.\" She paused as a broad smile came over the coach's face. \"How do you see this working exactly?\"\n\n\"Well, to start with, I want to let you know that we have some money in the team's budget to help you with any equipment or anything you might need.\"\n\n\"Equipment?\"\n\n\"Yes.\" The coach reached down beside him and picked up a mesh bag. He drew his arm back and tossed it over the desk so it landed at Jenna's feet. \"Just in case you agreed, I took the opportunity to speak to the coach of the women's volleyball team today and she gave me a bag of the knee pads her girls wear when they're on the court.\" Jenna reached down and picked up the bag, which was jam-packed with numerous pairs of knee pads. \"I think you can see how those would work, and I think there's enough in there to last you a while.\"\n\n\"Uh, okay.\"\n\n\"And as far as anything else you need, we can take care of covering the cost of that too.\"\n\n\"Umm, what else do you think I would need?\"\n\n\"Oh, well, I was thinking more about what you might wear when you're, shall we say, 'working' with the team? Let's call what you're doing for us that from now, 'working'. So, as far as what you might need, I was thinking of some sweaters or tops kind of like the one you had on the other night, or like that t-shirt you're wearing today, or maybe some crop tops or support garments to wear beneath. You know, ones that are nice and tight. You are quite a well-endowed young woman, and anything you want to get to help emphasize those attributes would help. Anything to help the boys 'get rid of that tension', if you know what I mean.\"\n\n\"Okay, I get it. And you have money in the budget to cover that kind of thing?\"\n\n\"Absolutely. I have discretionary control of the budget for the team, and what we spend money on. There's just one person I have to talk about this, but I don't think it should be a problem at all. So, besides what I talked about, for anything else you need, like maybe some lipstick or lip balm, maybe some of those hair scrunchie things to keep your hair off your face while you're working, basically, whatever you need, feel free to get it.\"\n\n\"I can just go out and get it? Don't I have to have some kind of authorized permission letter from the university?\"\n\n\"The sports programs aren't regulated as tightly as you might think. As I said, I just have to run it by the Director and we should be good to go. If you give me your email address or cell number, I can set up an e-transfer to you right now.\" He paused a second as Jenna took all of this in. \"I think a couple of thousand dollars should be enough for you to start buying the supplies you might need.\"\n\nJenna was blown away but the amount, never having expected anything like that. \"Two thousand dollars?\"\n\n\"Oh, do you think that's not enough? If not, just let me know and I can transfer more. I don't really have a very good idea of how much women's clothing costs.\"\n\nJenna waved her hand in the air. \"No, it's not that at all. I think that amount of money is more than generous.\"\n\n\"Well, that's great then. Once I make the transfer, just go out and get whatever you need. Oh, I forgot to mention a couple of other things. Since you're kind of a member of the team now, you should probably start carrying one of these.\" He reached behind his desk and grabbed a good-sized black gym bag, adorned with the school name and logo.\n\n\"Uh, okay. What would I put in that?\"\n\n\"Well, I think you should start with a couple pairs of those kneepads. Always have them handy. And based on what I saw on Saturday night, I'd suggest you start carrying around at least one change of clothes, maybe more. It's probably best if you don't leave here with your clothes covered in cum. Maybe some toiletries too.\" He jerked his head in the direction of the open door she'd noticed earlier. \"You're welcome to use the shower in my private washroom there anytime you want.\"\n\nThat part about having an extra set or two of clothes made sense to Jenna, based on the grim state of her spunk-soaked turtleneck and jeans from the other night. \"Okay. You said there a couple of things you forgot to mention. What's the other thing?\"\n\n\"Yes, when you go shopping, you should probably get yourself some bathing suits too.\"\n\n\"Bathing suits?\"\n\n\"Yes, I forgot to talk about when we go to out-of-town tournaments. When we do that, we'll of course put you up in your own room at the hotel we stay at, plus all your meals will be covered. A lot of these hotels have pools, and the boys like to take advantage of that, so it might be a good thing if you got yourself a few bathing suits, you know, bikinis or low-cut one-pieces, that kind of thing. Again, anything that will help the boys to release some of that tension.\"\n\nThis was starting to sound more interesting to Jenna with every word the coach said. She thought the idea of those out-of-town tournaments sounded like they might be a lot of fun. A nice hotel, swimming with a bunch of hunky guys, her meals all paid for--of course, she figured that with all the spunk she'd be swallowing, she wouldn't need to eat much of anything else. Yes, this whole thing was starting to sound better and better. \"Okay, that sounds fine,\" she said as she gave the coach a soft smile. \"I'm looking forward to the challenge actually. If you want to pass me your phone, I'll put my info into your contacts list.\"\n\nA minute or so later, Jenna passed the phone back to the coach. \"So, when do you want me to start?\"\n\n\"Well, practice starts at 4:00 tomorrow, so if you could be here by then, that would be great. Just come to this room and we'll sort things out from there.\"\n\n\"Okay,\" Jenna said as she picked up her new gym bag and thought about stuffing the bag of knee pads inside.\n\n\"Look,\" the coach interrupted. \"How would you feel about trying out a pair of those knee pads right now? Like I said the other night, my wife doesn't do the kind of thing you do anymore and it certainly is nice to meet a willing cocksucker, especially one who likes to swallow cum as much as you do. Besides, I haven't gotten off since Saturday night, so I think you're going to enjoy the load I have to give you.\"",
        "Jenna thought back on what the coach had just said about the boys calling her certain 'unflattering' names, and she assumed 'cocksucker' was one of those. As he'd thought, she didn't mind. After all, that's what she was, at least as far as they were concerned. She didn't have a problem with that whatsoever, as long as she kept getting a lot of cock to suck, and cum to fill her needy belly. She also remembered the coach's load from the other night, a nice thick copious mouthful of tasty semen, and she definitely had no intention of missing the opportunity to swallow more.\n\n\"All right,\" Jenna said as she opened the mesh bag and took out a pair of the knee pads. As she slipped them over her shoes and positioned them on her knees, the coach swivelled his chair sideways as he undid his pants. Remembering something else the coach had mentioned, she reached into one of the side pockets of her knapsack and pulled out a hairband, quickly whipping her long brown hair up into a tight ponytail. That would keep her hair away from her mouth, and let her concentrate on getting her reward with no interference. With her hair securely tied back, she stepped around the desk and dropped to her knees between his spread legs, the knee pads cushioning her from the cold hard floor. These things are a great idea, she thought to herself as she started to lean forwards.\n\n\"Here you go, sweetheart,\" the coach said as he stroked his stiffening cock towards her open mouth. \"Suck on that until I fill that pretty mouth of yours.\"\n\nWhich is exactly what Jenna did. As the coach pointed the flared crown of his big circumcised cock towards her, she leaned forward and slipped her full lips over the bloated knob. As soon as the broad mushroom head was in her mouth, she locked her lips down just past the rope-like coronal ridge, the coach's cock secured within her hungry mouth. \"Mmm...\" She couldn't help the purr she gave off as she pushed a wad of saliva to the front of her mouth and bathed the pebbly glans with her hot spit, her tongue rolling luxuriously all around the swelling cockhead.\n\n\"That's it, that's a good cocksucker,\" the coach said from above her. \"Don't worry, everybody on the team'll make sure you don't go hungry. Yes, you're going to get all the cum you can handle.\"\n\nThose words were like music to Jenna's ears and she started to suck more intently, pushing another big gob of saliva to the front of her mouth as she leaned further forward, taking more the coach's veiny shaft into her mouth. He was totally hard by now, and Jenna got into a steady up and down rhythm, her lips and tongue working slavishly on the older man's thrusting erection.\n\n\"Oh fuck, you are good, aren't you,\" the coach said as he took her head in his hands and started pumping it up and down, working her mouth like he owned it.\n\nJenna was getting a steady dose of his precum now, the tasty sap trickling out of the tip onto her working tongue. She purred and mewed like a kitten as she sucked for more, revelling in the tasty male essence he was feeding her.\n\n\"Oh yeah, not much more and you'll get a mouthful of that shit you love so much. That's it, suck for it, keep going,\" the coach said, as if he was coaching her. \"Suck it until you get it all.\"\n\nTwo minutes later, Jenna got her reward.\n\n\"OH FUCK...YES...YESSSSSSSS,\" the coach crowed as he started to go off. He flooded her mouth with a nice thick batch of cum, just as Jenna had remembered. Again, she was thrilled that it was so thick and tasty, almost like pudding. She swallowed eagerly, feeling the clumpy wad of seed slide warmly down her throat. But she kept on sucking, her tongue swirling over the sensitive glans as he continued to come.\n\nLike the other night, the eroticism of the whole bizarre situation had set Jenna's pussy creaming the instant she'd dropped to her knees in front of the coach. When he first went off and she swallowed that first mouthful of copiously thick cum, she'd felt a delicious little climax start deep in her pussy and shoot through her body, causing her to quiver and shake. But she never released his spitting prick from her avidly working mouth, continuing to piston her bouncing head up and down. Even as waves of euphoric bliss rolled over her, she wanted to give the coach as much pleasure as she could.\n\nAnd it worked. The coach unloaded a massive batch of spunk, wad after wad and rope after rope spewing into her mouth. But Jenna never hesitated once, continuing to suck and swallow, all the time whimpering and sighing in pure rapture, her tongue swirling and her lips sucking on the ejaculating cock that was flooding her mouth with its prize.\n\n\"Oh man, that was just what I needed, a hot wet mouth to get off in,\" the coach said once the intense sensations of his climax ebbed away.\n\nJenna continued to nurse tenderly at the seeping tip, drawing out the last pearly morsels of cum. She slowly let his big thick cock slip out of her mouth, her tongue moving to the base and taking a long slow swipe along the side right up to the tip. \"Mmm, that was nice. Your wife doesn't know what she's missing. Anytime she doesn't want it, I'll be happy to take it.\"\n\nThe coach definitely liked the sound of that.\n\n\"But you know how you talked about me helping the boys relieve some of their tension...\" Jenna let her voice trail off as she took another long leisurely lick along the veiny shaft.\n\n\"Yes?\"\n\n\"Well, you still seem a little tense to me, Coach. Would it be okay if I went for two in a row? That first load was kind of like an appetizer. I was hoping you'd give me the main course too.\"\n\n\"I think that's an excellent idea,\" the coach said as he stood up and started to shove his pants right off. \"I hear you eat ass. I'd like some of that before I give you another load.\"\n\nIt was obvious that Rob had done some talking about their night together. Jenna didn't mind. She'd enjoyed having her face buried in Rob's firm backside, her tongue sliding deep into his warm crevice, her lips kissing that hot sweet hole until he'd let her tongue inside. Yes, she definitely wanted more of that, especially since Rob had fed her a monster load after she'd rimmed him. \"That sounds perfect,\" she replied as the coach kicked his pants and underwear off and sat back down.\n\nHe tilted his hips up and then drew his legs up, draping them over the arms of the chair to open himself wide open for her. Jenna smiled as she looked at his big heavy balls lying beneath his still-swollen cock, the large eggs looking heavy and full of spunk, just what she wanted.\n\n\"There you go, lick that hole for me, sweetheart,\" the coach said as he reached down and started to stroke his cock. \"Get it nice and wet and I'll give you another mouthful of jizz.\"\n\nJenna dove in, slipping her tongue along the inside of his thigh as she lifted his silky sack out of the way. She ran her tongue right into the warm crack, pushing another mouthful of saliva forward and right onto his tiny little aperture. She laved her tongue slowly back and forth over the wrinkled pucker, her hot spit coating his backside as she pressed her face tightly up against his spread cheeks. Like she'd done when she'd first taken his cock in her mouth, she was whimpering and sighing with pleasure as she set her lips and tongue to work.\n\n\"Oh fuck, you are quite the cocksucker, aren't you? I love a cocksucker that eats ass too. Jesus, that feels so good,\" the coach said as he slowly kept stroking his meat, his cock hard as rock again once he felt her mouth pleasuring his backside.\n\nIt didn't take long for Jenna to get him to relax that constricting ring, her tongue probing relentlessly until he let her inside. Once she was there, she pressed her face even harder against him, sending her tongue deep into his hot chute, wantonly licking and tasting his warm masculine flavor. What she was doing was so hot and wicked that she couldn't refrain from shoving her hand beneath her short little skirt, her fingers slipping beneath her panties and into her gooey little box. \"Uhnn...uhnn...\" she gasped as she quickly brought herself off, her pussy gushing all over her probing fingers and coating her hand with warm cunt honey.\n\n\"Jesus, you fucking love that, don't you?\" the coach said as he watched her come. When she seemed finished, he reached down and pulled her working mouth out of his ass, tilting his hips downward and plugging his surging cock right into her hot wet mouth, the dark crimson crown engorged and ready to burst. He'd barely got it into her mouth when he started to come.\n\nJenna all but whimpered with excitement as she slid her lips down the bucking shaft, the head lodged deep in the back of her mouth. She drew back with her lips locked tight around the coronal ridge, just as the coach let loose, a huge torrent of semen rifling from the tip of his cock. Jenna sucked, wanting all of it. The coach's hips were flexing up and down, shot after shot of spunk spewing forth into her vacuuming mouth. She swallowed the chunky mouthful, relishing in the purely masculine taste of the coach's thick potent cum. While his cock kept spitting, she kept sucking and swallowing, draining him.\n\n\"Oh fuck, yes,\" he said breathlessly as he sat there recovering, his chest heaving as he drew in deep breaths of air. \"You're a fantastic cocksucker all right. No doubt about it.\" He let Jenna nurse quietly at his spent prick for another minute or so, her lips and tongue gently drawing out the final drops of seed.\n\n\"Hang on for a second,\" the coach said as he stood up and pulled his pants back on. \"Stay right there.\"\n\nJenna watched as he zipped up as he approached the closed the door behind him, the one she thought led into one of the gyms. He opened it and poked his head around the corner. \"Chad, Dave, c'mere,\" she heard him call out. A few seconds later she saw the two men he'd been with at the party walk into the room, dressed in shorts and t-shirts, one of them with a basketball under his arm.\n\n\"What's up?\" the one she remembered as Chad asked, neither one of them having noticed her yet.\n\nThe coach turned in her direction and nodded. \"Jenna here has agreed to help us out. You know, like we talked about this morning.\"\n\n\"That's great,\" the one named Dave said as both men looked over at Jenna, smiles on their faces. \"I see she's already trying out the knees pads.\"\n\n\"Yeah, she's just sucked two loads out of me. Why don't you guys go ahead and give her some more? She'll swallow as much as we can give her.\"\n\n\"Sounds good to me,\" Chad said as he set down the basketball and walked over to Jenna, reaching into his shorts and pulling out his dick.\n\n\"Great,\" the coach said. \"I've gotta go see the Director for a few minutes. Take your time with her. With all the boys writing that English proficiency test today, it's nice to have a day with no practice. She'll be starting to work with us tomorrow, and I'm sure they'll be keeping her belly full all practice long.\"\n\n\"We got it covered, Coach,\" Chad said. As the coach left, he stepped up and plugged his cock into Jenna's open mouth. She sucked him for a couple of minutes while Dave stood next to his friend, his hand stroking his own rising prick. \"Jesus, Dave, she's fantastic. Look at that mouth of hers go for it. Here, give her a taste of yours. We'll switch up for a while. When we're ready, I'm gonna blow this load all over her face.\"\n\nChad pulled out of her mouth and turned her face towards Dave. Jenna eagerly opened her mouth and sucked the other assistant coach, his dick quickly swelling and filling her mouth. A few minutes later, Dave pulled her mouth off his cock and turned her back towards Chad. They kept this up until they were both ready to blow. She was sucking Dave's cock at the time and when he started to go off, dousing her throat with a hot thick load, Chad pointed his throbbing cock at her face and shot off, rope after rope getting pasted against the smooth skin of her pretty face as he went at her like a fire hose.\n\n\"Mmm,\" Jenna gave off a low moan as she felt the man's cum rain down on her, gobs and ribbons of warm milky seed coating her skin.\n\n\"Jesus, can she ever suck,\" Dave said after she'd finished swallowing his load. As soon as he stepped back, Chad moved right in front of her and took his friend's place, stuffing his still-hard cock right back into her gaping mouth.\n\n\"What do you think, Dave, shall we give her a little more?\" he asked as he took her head in his hands and started to work it back and forth.\n\n\"Fuckin' right,\" Dave replied as he stepped closer and started to pump his resurgent prick. They started switching it up again, making her suck one at a time for a minute or two each. Jenna loved it, enthusiastically moving from one cock to the next, sucking and slobbering away. Both cocks were dripping with her spit, long gooey strands drooling off the undersides of their thrusting erections. When they were ready to come again, they switched up from last time. Chad fed his load directly into her vacuuming mouth while Dave blew off all over her face, this time making sure to direct some spurts into her glossy brunette hair. When they finished and stepped back to zip up, Jenna reached up and started pushing the warm gobs of cum off her face and into her mouth.\n\n\"What a perfect cocksucker,\" Chad said under his breath to his friend, who nodded in agreement. He'd said it quietly, but Jenna had heard him, and was thrilled that they were happy with her efforts.\n\n\"I see you guys have been busy.\" A voice came from behind her. Still on her knees, with cum dripping off her chin and spackling her t-shirt, Jenna turned to see the coach come back into the room, with a tall older man following him.\n\n\"Yeah, it's been fun,\" Chad said as he grabbed his basketball. \"We're gonna go continue our game, I'm kickin' his ass.\" Dave followed Chad into the gym, their time with Jenna nothing more than a brief, but satisfying, interlude to their game of HORSE.\n\n\"Jenna, this is Professor Worthington, he's the head of the Athletic Department,\" the coach said. \"I've been telling him about you.\"\n\nJenna looked over at the bespectacled man, who looked like a stereotypical Ivy League professor, dressed as he was in a dark woollen suit, complete with elbow patches, and a drab narrow tie. He was tall and slender, and with his gray hair and the numerous wrinkles on his mature face, Jenna pegged him at about 70 years of age, maybe more.\n\n\"Um, hello,\" Jenna said. As she spoke, she felt a dangling strand of cum drop off her chin. She quickly caught it in her hand and the men watched as she eagerly lapped it up.\n\n\"She's everything you said she was,\" the older man said to the coach, as if Jenna wasn't even there. He had a distinct English accent, as if he'd been educated at the finest private schools and somewhere like Cambridge or Oxford, which was quite likely the reason for his present position at an Ivy League school.\n\n\"Go ahead, Professor,\" the coach said as he gestured towards Jenna. \"You won't believe how hot that mouth of hers is.\"\n\n\"I think I just might do that,\" the professor said as he stepped across the room and stood in front of Jenna. Leaving his suit on, he undid his zipper and fished out his dick, pulling his long limber member out of his fly, his pants still done up. \"There you go, my dear, let's see what you can do with the Old Bayonet.\"\n\nJenna thought the man's member, the 'Old Bayonet', suited him perfectly, his cock being as long and slender as he was tall and thin. With her face a glistening mess of cum, she opened her mouth and slipped it over the bullet-like head of the old man's cock. She was worried about how this would go based on his age, but she was pleasantly surprised when she felt the slender cock stiffening and growing within her sucking mouth within seconds.\n\n\"That's a good girl, very nice, very nice indeed,\" the professor said in his clipped accent as his cock continued to grow and grow. Within just a couple of minutes, Jenna knew why he had called his dick the 'Old Bayonet'; it was a long beautiful thing that was slicing its way deep into her hot sucking mouth. It wasn't as thick as many of the cocks she'd sucked in the last few days, but it was certainly long, really long. And for his age, it was incredibly hard, like a bar of steel covered by a velvety-soft sheathing of skin. Jenna thought it was beautiful.\n\n\"Mmm,\" she cooed as she really started to suck. She bobbed back and forth, her spit flying everywhere as she eagerly engulfed the old man's long hard cock over and over.\n\n\"That's the way, my dear. Just a little bit more and I'll give you a little porridge to put in that belly of yours.\" Jenna was thrilled that the old man was so well-hung, the tip of his long spear-like cock bumping against the opening of her throat time and time again. It took only a minute or two more before she felt his prick get even stiffer, just before he started to come.\n\n\"Yes, that's a good girl...there you go...suck it...suck it all out,\" the old man said calmly as he looked down at her as he came, gout after gout of thick milky seed spewing into her mouth. Jenna thought it tasted like him, mature, well-seasoned, and a little bit salty. She loved it. She enthusiastically swallowed, loving the feel of the old man's spunk sliding down her throat.\n\n\"Thank you very much, Coach,\" the old man said once he'd finished and purposely tucked his spent member back into his pants. He turned and tugged on his suit, straightening himself up. \"I have no problem authorizing those additions to the team's expense account. I'm sure it will be money well spent. I think you're right, with the help of this young woman here, I think that the national title just might be within the team's grasp this year.\"\n\nThe old man looked down at Jenna and gave her a little wink before he ran his long gnarly finger over her chin and gathered up a shimmering gob of semen. He waved his cummy finger in front of her face, causing her to open her mouth instinctively in anticipation. He slid his finger into her mouth, smiling as she closed her lips around the bony finger and licked it clean. He waited until she'd gotten every drop before he pulled it out of her mouth, her wet lips reluctant to let it go. \"Perhaps we will meet again,\" he said it, not as a question, but as a statement of fact as he started to step away.\n\n\"I'd like that,\" Jenna replied, surprised at how much she'd like sucking the old man's long slender cock. \"I'd like that very much.\"\n\n\"We'll see then. Take care, my dear. Coach, good day,\" the professor said as he opened the door and left.\n\n\"Good job, Jenna. I just needed the Director's approval, so now we're good to go. I'll make the transfer to your account right away. I really think it's important that you feel free to get as many things as you need, so I've decided to make that transfer for $3,000 to start. Like I said before, if you find that's not enough, just let me know.\"\n\nJenna couldn't believe what she was hearing. Three-thousand dollars...wow! she thought to herself. \"Uh, okay,\" she said, trying to remain calm as she reached for the side of the desk and started to get up.\n\n\"Hold on a second,\" the coach said as he quickly came around the desk. \"As they say, 'while you're down there'...\" With that, he undid his pants and pulled out his thick cock once more. He stroked his hand back and forth, swinging his stiffening prick in front of her like a hypnotist's watch. Dizzy with desire, Jenna's eyes remained glued to the burgeoning cockhead as the coach moved closer, finally stuffing the big mushroom head into her open mouth. She reached up and wrapped her hand around the base of his sturdy cock, using a corkscrewing motion as she pumped up and down on the stiffening shaft.\n\nFive minutes later, the coach fed her another load, this one just as wonderfully viscous and deliciously tasty as the other two she'd sucked out of him earlier.",
        "\"Hmm,\" the coach said as he tucked his spent dick away and zipped up. \"Your t-shirt is kind of a mess. Like I said, from now on, you should carry at least one change of clothes in that gym bag I gave you.\" He reached behind him and grabbed a folded black t-shirt off a pile on a shelf behind him. \"For now, maybe you should wear this. You can change in the bathroom if you like.\"\n\nJenna sorted herself out in the bathroom, taking the knee pads off first. They had definitely done the job, she had to admit that. The bathroom was compact, but did contain a small shower that she felt like climbing into right then and there. Since it seemed like the coach was dismissing her, she gathered up the rest of the cum that she could off her face with her fingers and sucked them clean, not wanting to waste a drop. She'd have to shampoo the clumps out of her hair later. She peeled off her cum-spattered t-shirt and washed her face before putting on the new t-shirt he'd given her. She looked at herself in the mirror, noticing the school's name and logo on the t-shirt, with the word 'LACROSSE' beneath. When she came out of the bathroom, the coach was back at his desk, intent on looking at something on his computer. She went back to the chair she'd been sitting in earlier and stuffed her soaked t-shirt and the bag of knee pads into the big gym bag he'd given her.\n\n\"Okay, thanks Jenna. Glad to have you aboard,\" the coach said as she picked up her knapsack and slung it over her shoulder. \"Officially or unofficially, however you want to look at it, I guess you start work with us tomorrow at four o'clock. Like I say to all the team members, don't forget to bring your equipment.\" He paused and nodded to the gym bag in her hand. \"By the way, I've just made that transfer to your account, so whenever you've got some free time, feel free to go shopping.\"\n\n\"That's great. Thank you,\" Jenna said as she moved to the door.\n\n\"Oh, one other thing,\" the coach's words stopped her in her tracks. With her hand on the door knob, she turned and looked back at him. He swivelled his desk sideways again, his hand rubbing absentmindedly over the crotch of his pants as he looked at her. \"You know, I haven't felt like this around anybody since I was a teenager. I can't remember the last time I came three times in a row like that. You know, my wife said she's thinking of taking the kids and going to visit her sister sometime in the next week or so. Do you think you might like to come and spend the night? I'd like to see how many loads you can suck out of me when I've got the time to just relax and enjoy it.\"\n\nThat sounded pretty good to Jenna too, especially since the coach had such a nice big cock. She liked the sound of that challenge. \"Yes, I'd like that.\"\n\n\"What about if I ask a few buddies to come over?\"\n\nJenna couldn't keep the smile off her face. \"I'd like that even more.\"\n\n\"That's great. I'll let you know when she decides to go.\" He kept slowly rubbing himself as he looked at her, his eyes clearly focussed on her full pouty lips. \"Like I said, it's been years since I've been this aroused and I feel like I could go again already.\" He paused and gave her a sly knowing smile. \"You know, it would kind of be a shame if I had to go home and fuck this load into my wife. That would be a real waste of cum now, wouldn't it?\"\n\nJenna looked across at him, his provocative words and the growing bulge in his pants drawing her in like a magnet. \"Well, we wouldn't want you to have to go and do that now, would we?\" she said with a naughty glint in her eye. She dropped her bags and sauntered across the room. The coach was already undoing his zipper.\n\n...to be continued..."
    ],
    "authorname": "rmdexter",
    "tags": [
        "oral sex",
        "big tits",
        "multi partners",
        "oral gangbang",
        "mature"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/jenna-sucker-for-the-team-ch-02"
}