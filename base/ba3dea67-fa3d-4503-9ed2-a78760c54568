{
    "title": "Seven Days of Service - Epilogue",
    "pages": [
        "Monday morning, and I was into three cups of coffee already after a sleepless night. My office was just beginning to awaken with the sounds and sights of business activity. I was acutely aware that I was not focused on the work at hand, and tried to shake off my funk by calling a 9:00 a.m. project meeting, hoping that I could immerse myself in some meaningless details. \n\nFortunately, my senior project lead, Barbara, had her shit together and managed to turn the meeting into something that actually accomplished some substantial goals. I was beginning to see that the rest of my day was going to be a wash, until Sybil slipped into my office at about 9:55 a.m., informing me that I was invited to attend a meeting with Cathy and her crew at 10:00 a.m.\n\nBittersweet ending, that's all I could think of right now, but I did want to see her again, even if it was on neutral territory. This was all according to our previous discussions of course, so I wasn't reading anything into the invitation. I did, however, take a seat at the back of the conference room so I wouldn't become a victim of my own vivid memories. Trying to adjust my trousers to hide an erection in front of eleven professionals was not my idea of a successful technical meeting.\n\nEven though this conference room wasn't that big, Cathy looked over at me with a brief frown on her face, but introduced me to her team nonetheless. I suspected that she'd wanted me to join her at the front of the table, but I didn't want to be the 800 pound gorilla in the room as she tried to get her team off the ground.\n\nAs we'd done in our staff meetings last week, Cathy set out the ground rules for brainstorming then opened the floor up for discussion. After an uncertain, hesitant start, the team slowly began throwing ideas around, nixing some, embracing others. Revisions ran rampant for a while, and still, Cathy sat patiently taking notes, making changes, adjustments, erasing and actually smiling at the good-natured bantering taking place within her team. Finally, things ran down, and the team began to stall.\n\nCathy cleared her throat, stood up and presented a wonderful composite of the discussions that had taken place during the meeting\u2014by her teammates. From where I sat, it was a slam-dunk. She had virtually mastered the 'listen; file; edit; analyze and present' system of meeting management in just one week. Moreover, as I looked around at the faces of her staff, I saw nothing but grins and smiles. For some reason or another, I really felt proud of her at that moment.\n\nAs I quietly slipped out to give her some space with her group, I couldn't help but notice that she didn't have her collar on and the thought left a tight knot in my stomach. Dammit, I knew that the service period was over and I knew she shouldn't be wearing it anymore, but the raw fact of seeing the proof that it was all over, was too much. I took the rest of the afternoon off.\n\nThe rest of my week represented a major readjustment for me, not so much at work, but at home. Returning to that empty house every night, fixing a ham and cheese sandwich for dinner, cranking out 50 laps in the pool, then sitting in front of the TV set, and pounding down a couple of beers became my new routine. I thought that my life couldn't get much worse after my divorce years ago, but I was finding out that it could.\n\nBy the time the week rolled by, Barbara had our project by the balls and the team was humming like a finely tuned engine. I was beginning to feel like a spectator in the group, so I decided it was time to get my ass back out on the street and find some more business. My first stop this time, was the Harbor Bar and Hattie.\n\nIt was Friday about 3:00 p.m., and damned if Robert wasn't there already warming up for the weekend. Hattie had me topped off by the time I made it up to the bar, as usual, and Robert slid in next to me.\n\nSlapping me on the back, he told me that his committee had approved the proposal that Cathy had presented them earlier in the week, and he'd given her the contract this morning around 11:30 a.m. He mentioned that the committee was most impressed by the thoroughness of the documentation she'd presented. I felt a sudden surge of pride in her work, although I could hardly take credit for all of it.\n\nThen, dropping his head close to mine, he asked me, under his breath, \"Scott, just what kind of hold do you have over Cathy?\" Taken a bit by surprise, I asked him what he meant by that. He just chuckled and said, \"Well, I was going to give her one more chance to join me for dinner tonight, but she got a little testy with me, stating that she belonged only to you and that she'd be with you this evening. I didn't see her here with you, so I thought I'd check up and make sure that you two were still an item.\"\n\nA little confused, I stuttered out, \"Well, yeah. Cathy and I are in somewhat of an exclusive relationship. I'm just out doing some sales work right now.\" I was wondering if Cathy was just using me as an excuse to turn Robert down without insulting him directly, or that perhaps there might be something more in what he'd told me.\n\nWhatever was going on, I was suddenly acutely aware of the time at the moment, and as Robert rambled on about this and that\u2014I couldn't concentrate on what he was saying right now\u2014I began to plot my escape from the bar, and my return home before the bewitching hour of 6:00 p.m.\n\nI was reasonably sure that I'd be spending yet another night alone, wrapped up in my ham and cheese sandwich and a few beers, but worst case, I'd still end up with my memories of her during this last week. If nothing else, my right hand was still a fairly serviceable substitute for my pet\u2014albeit a piss-poor substitute\u2014and if my future was as predictable as it seemed, I should probably get used to it again.\n\nAs she floated up and down the bar, Hattie had been watching me, and with her female 'super-sense' in high gear, rescued me from an already well-lubricated Robert. Reminding me of a 'bogus' appointment that I was due at this evening, she broke me loose from the bar and sent me on my way.\n\nPulling into my driveway, all I could see was the same lonely house that I'd been returning to for the past few years, up until last week. Now the scenery had returned to that time, the memories of last week making the sight even more painful. I really wanted something magical to happen, to return me to the past week, to start it all over again.\n\nAlmost by habit, I showered quickly, slipped on my t-shirt and shorts, and returned to the living room to face yet another lonely night at home. This would also be the first weekend since the end of the service week I'd be spending alone\u2014depressing thought.\n\nI was just about to get up to go to the kitchen for a beer, when my doorbell rang. Startled, I wandered over to the front door, and cracked it open. What I saw stunned me, and I could only stare as Cathy entered my house and casually strode towards my kitchen, removing her clothing as she went. Her velvet collar was back in place and it now occurred to me that I'd lost track of it after I'd presented her with the silver substitute that last Sunday at the Harbor Bar.\n\nAs if no change had taken place over the past week, she quickly took charge of the kitchen, beginning to put together a meal for her and me. I was once again under her spell as my cock began to swell at the sight of her beautiful naked ass and legs\u2014swelling no doubt in hopeful anticipation for the evening activities to come. Was this just the result of wishful thinking?\n\nMaking my way slowly to the dining room table, I took a seat and wondered what had taken place to change our 'rules of engagement' as it were. What was I supposed to think about her showing up here, now? The game was officially over and she'd gained a tremendous amount of respect for holding up her side of the contest and for landing another fairly large account during that week, although she'd tried to give me complete credit for it.\n\nSitting silently across from me, she shot me furtive glances from time to time during our meal. I tried to guess what was going through her mind right now, but her beautiful body began to short-circuit my ability to think logically. Every now and then, when she reached across the table for one thing or another, I noticed her hand trembling, as though uncertain herself about our current situation.\n\nOnce the meal was completed, she quickly began to clean the table, moving all of the dirty dishes and such into the kitchen as I retired to the living room once more. I had moved the instruments that I'd obtained during the week of service back into the living room, thinking to pack them up and get them out of my sight\u2014not needing that very physical reminder of the 'week that was.' \n\nWithin a very few minutes, I was greeted once again by a beautifully naked Cathy, stepping up to me with a couple of brews in her hands. Offering me one, she set hers down on the end table, put her hands behind her back, and spread her legs before me. As if controlled by an addiction, I reached out slowly, automatically, and ran my fingers through her very wet sex; her aroma, her texture, everything about her conspiring to make my judgment a little fuzzy.\n\nAs I fondled her pussy, she watched me carefully, lips trembling, with what appeared to be a look of uncertainty in her eyes. I wondered if she saw that same look of uncertainty in mine as I cleaned my fingers of her nectar with my tongue. I put down my beer.\n\n\"Cathy,\" I began, but she interrupted me. \n\n\"Please don't turn me away, Sir,\" she implored. \"Please . . . \"\n\nIf this was just a tease, I wanted it out in the open quickly, so I challenged her. \"Cathy, do you still remember your 'safe' words?\" \n\nBowing her head, she whispered, \"Yes, Sir.\" \n\nI went on, \"Do you still trust me?\" \n\nAgain, she whispered, \"Yes, Sir.\"\n\n\"Cathy, you realize that if you continue this relationship with me, I'll continue to humiliate you and cause you the torment I did during your service week, don't you?\" \n\nAs she pondered her answer, I saw tears dropping onto her breasts, and I thought that she'd surely reconsider her decision to be here with me tonight. Instead, she said, \"Yes, Sir. I belong to you now-entirely.\"\n\nThis was too good to be true, I thought. My heart was pounding in my chest so loud I thought for sure she could hear it. My next test for her would be a little out of our box, but it would take our relationship to a slightly higher level.\n\n\"Cathy, I need to taste you again.\" I told her. This time I leaned back into the couch, and waited to see what she'd do. Puzzled, she waited for me to collect my sweet dessert as usual, but seeing that I wasn't making a move, she tentatively slid one hand down to her pussy and began pressing her fingers through her cunt, making them damp with her juices. As she extended her hand to me, I simply said, \"More.\"\n\nFrowning a bit, she dropped her hand into her sex once more and began to slide her fingers through her thoroughly lubricated pussy lips, gasping as she touched sensitive parts of herself. I could see that she was beginning to really get aroused by what she was doing now, and I encouraged her by simply saying, \"More.\"\n\nSoon, she was actively masturbating, trying to bring herself past the point of her sexual arousal, trying to bring herself to completion. The sight of her pleasuring her own body was so erotic, that without touching myself, I felt that I would soon join her in consummation. She caressed, pinched, stroked and penetrated herself with her fingers, providing me with \"Pleasing Cathy\u2014101\" lessons for future reference. Things were looking up for my future with Ms. Stretch.\n\nI overestimated my strength in resisting the lure of Cathy's sexuality and I succumbed to my lust at last. Grabbing her around the waist, I turned her back onto the couch and lifting her knees back into her chest, I plunged my face into her pussy, breaking her own hold on her pleasure. Drinking deeply of her essence, I used my tongue to reach every part of her cunt that I could reach, wondering at the marvelous circumstances that had brought her back to me.\n\nShe had gotten much closer to her release than I'd anticipated and before I could take full advantage of my position between her legs, she suddenly grabbed the sides of my head, pulling me firmly into her pussy, so hard that I could barely breathe as she convulsed through her orgasm. I didn't care. I was back where I belonged\u2014with my pet.\n\nFinally, I broke loose from her and stood up. Standing in front of her now, my cock was painfully jammed against the front of my shorts, a condition that didn't escape Cathy's attention. Quickly kneeling in front of me, she looked up at my face and asked, \"Sir, may I take care of that for you? Please?\" \n\nAll I could do was nod my head.\n\nAs my lovely pet was servicing my itch, I continued to admire her beauty, marveling at the fact that she'd given me the gift of herself in this way. Watching her run her tongue around my cock and balls, almost reverently, was the sexual electricity fueling the run to my own climax. Almost on cue, she began her little head bobble, tripping the switch that took me over the edge; pumping long, throbbing strings of semen into her talented mouth!\n\nAfter an exhaustive evening of tending to each other's needs, the time came for Cathy to return to her apartment. As she dressed for departure, I gave her one more order. \"Cathy,\" I said. \n\nTurning to me she replied, \"Yes, Sir?\" \n\n\"Pack your bags and return tomorrow morning. From now on, this is going to be your home.\" \n\nShe simply stopped at the door and stared at me. Once again, I thought I'd fucked up\u2014taken too much for granted. This was a huge leap in our relationship, but I definitely didn't want to wonder where our future was going much longer\u2014it was taking too much out of me. I already knew that she was looking for another place to stay and very soon.\n\nHer shoulders slumped and the tears once again began flowing from her eyes. Finally looking up at me, she asked, \"Can you help me?\" \n\nConfused, I told her, \"Of course, just call me when you're ready.\"\n\n\"No,\" she said. \"Now . . . \" Still confused, I just stared at her. \"I...I have some stuff in my car,\" she continued. Her eyes were pleading with me now and it finally dawned on me that she'd somehow anticipated my order. There was some 'moving in' ready to do right now. \n\nI should have been pissed at her presumption, but right now all I could think about was getting her firmly stuck in my web as quickly as possible. Sure enough, she'd packed enough stuff already to establish a good level of permanency in my home. I wasn't about to complain, as this was my goal as well.\n\n* * * Epilogue * * *\n\nAt work, there was some mumbling about 'fraternization' among managers, but the end result was; yep, but they don't work for each other, so stand back and don't screw with this team!\n\nAnd yes, Arthur and Sonia did become an item\u2014I guess that weekend barbeque did make an impression on those two. Bravo!\n\nBarbara, well . . . Barbara. She ended up with my job. Sharp as a tack that one. I wouldn't have given it up for anyone else.\n\nMe? I ended up with Wade's job. I'm now the director of the division, much to my surprise.\n\nCathy? It seemed that one of the directors from the 3rd floor was failing fast, so Cathy was nominated as a logical replacement and has filled in beyond expectations.\n\nThe end result-Cathy and I are still competitors\u2014fierce competitors! I will win\u2014sometimes, and she will win\u2014sometimes. And we're both good with that.\n\nOh yeah, I DID finally give her the ring, and the date is set for August. And yes, her father is proud of his wonderful daughter. We are an item now; an exclusive item-and together, we form a 'whole'; the Yin and the Yang. Hattie was right; this game is way too addictive. This trap had hooks at both ends!\n\nAnd Wade, the little asshole-it seems that his degree was actually in Clinical Psychology, and that his dad had brought him on board to solve a problem he had between two superior sales managers! If he ever writes a paper based on this experience, I'll . . . well, I don't know what I'll do, but right now I'm really happy about where I ended up with Cathy.\n\nAnd where does that leave me? I have some of the most wonderful meals that I've ever had in my life nearly every night, and I have no excess pent-up energy bothering me when I get up in the mornings, at least for long. My life has balance, and I'm happier than I've ever been in my life. And my life partner? She's expressed no complaints or disappointment in my treatment of her, and if I play my cards right, she never will.\n\nFinis"
    ],
    "authorname": "Hatsuda",
    "tags": [
        "submission",
        "clamps",
        "chain",
        "collar",
        "cuffs",
        "clamps",
        "pussy",
        "cock",
        "anal",
        "tits"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/seven-days-of-service-epilogue"
}