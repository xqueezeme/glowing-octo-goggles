{
    "title": "Coming to Grips Ch. 04",
    "pages": [
        "This is not a standalone story. Unless you have read the previous chapters, it will not make any sense. As always, I want to thank my editors, Terry and Snow. Both of them made this story possible. They contributed in so many ways, talking through scenes, deciding what to include or exclude, as well as just making sure that the spelling and grammar were right. They are amazing! I love both of you!\n\nI also want to thank everyone who has commented or sent me emails. It was so nice to hear what you thought about Suzanne's story. It means a lot to me to hear from you. That feedback is the fuel that fires the creative engine. I hope the conclusion is up to your expectations.\n\n*****\n\nOver the next several weeks, Colby played a much bigger part in Suzanne's life. Not only did she help Suzanne find a therapist, she made sure that there were no missed appointments. Having lunch together became a regular part of the day. While it wasn't every day, Colby had dinner with Suzanne frequently enough that she was sure that Suzanne was eating healthier. The slide in her weight stopped and started to reverse.\n\nAs much as she wanted to, Colby didn't ask Suzanne about her therapist appointments. It was intensely personal and if Suzanne wasn't going to bring it up, Colby wasn't going to either. It was good enough that Suzanne was taking the steps. Sometimes she seemed less depressed, but it was not consistent. There were bad days too, when in the evening Colby held Suzanne as she cried. \n\nAt work, Suzanne was too busy for the emotions to surface. Armed with the information collected on their trip back east, she had guided the new software through its final release. The launch consumed Suzanne, but she welcomed it. There was not enough time in the day to get everything done, but at least it left very little opportunity to dwell on her problems. It made it easy to keep up the illusion that she had it all together. Colby was the only one who knew her secrets, and she was an active participant in helping to hide them.\n\nWithout Colby's support, Suzanne knew she couldn't have managed to keep going. When she intervened, Suzanne was close to the breaking point. Handling the stress from the launch combined with her issues would have been too much. It wasn't just the mental stress either. The mistreatment of her body was just as bad. After a few weeks with her therapist, Suzanne was finally seeing that. The awareness only helped so much. There were still days when she didn't feel like eating, but Colby was always there to make sure she did. While there were moments when Suzanne resented it, the gentle pressure felt good most of the time. It was one of the few things in her life that made her feel loved.\n\nStill, feeling loved didn't help Suzanne with feeling worthy of love. The self-destructive impulses were getting fewer, but it was hard to find a way to forgive herself for what happened with Chloe. They did not happen as often, but there were still nights when she woke up in the middle of the night haunted by a dream of Chloe. Sometimes as she bolted upright in a cold sweat, her first thought was a wish that Colby was there to hold her. A feeling of shame always followed it. Part of why was a renewed feeling of betraying Chloe, but the other half was knowing that she wasn't worthy of Colby. \n\nSuzanne wasn't blind. She knew how Colby felt about her. Sometimes when Colby held her, Suzanne felt her struggle to hold back from taking it a step further. Once or twice, Colby started to move as if to kiss her, only to pull back. Suzanne was thankful she didn't go through with it. Their relationship worked right now. The support Colby gave her was the crutch that helped Suzanne through the day. Adding romance to it would have complicated it. \n\nSome of Suzanne's reluctance was almost normal. Office romances were messy and could have consequences, especially when they ended. The chances that anything with Colby would work out were low; Suzanne knew that. \"I'm too damaged,\" she told herself more than once. Even the thought of giving into her feelings for Colby was enough to send a wave of guilt through Suzanne. \n\nMore than the issue of working together, that was really the problem. Despite the time with her therapist, Suzanne still knew that she didn't deserve happiness. Chloe may have stopped haunting her, but the guilt Suzanne felt was still there. Most of the time it was manageable, and it no longer intruded on her everyday life. It was only with Colby that it came back, and that was with a vengeance. The same person who comforted and supported her was the trigger point of her turmoil. With so many issues to talk about, Suzanne held back on bringing up her feelings about Colby with her therapist. She could feel her therapist working her way towards getting Suzanne to talk about it, but they were not there yet.\n\nOne reason for not dealing with Colby was Suzanne's parents. Since returning from the east coast, she had not seen them once. They talked one more time after her father left his voice mail. It hadn't gone well. Or maybe it went as well as it could, given his beliefs. It didn't make things any better either way for Suzanne.\n\nIt took Suzanne two weeks to find the will to return her father's message. Her normal therapy sessions were late Friday afternoon. She spent much of the time that day talking about her parents and their homophobia. While her therapist had not suggested talking to her father, Suzanne came home feeling a little more courageous than normal. As was usual any day she had therapy, Colby came over to make sure that Suzanne was okay.\n\nThey were eating dinner when Suzanne looked up from her food. \"I was thinking about calling my dad. We haven't talked since before the trip,\" she said.\n\n\"Oh. What were you thinking of saying to him?\" Colby asked. \"Just catching up, or more?\" The look Suzanne gave her was calm but behind the mask, Colby could see the fear that was there.\n\n\"More. He made some assumptions in his voice mail. I need to let him know they are true. I need to at least own who I am,\" Suzanne said. Her voice was tight, but under control.\n\n\"Well, okay. Let's finish eating and then I can leave you alone if you want,\" Colby started to say before Suzanne interrupted her.\n\n\"Please don't. I'd rather you stayed.\"\n\nNodding, Colby reached out to squeeze Suzanne's hand. \"Of course I will.\" She gave Suzanne a little smile when she felt her squeeze back. The rest of dinner was relatively quiet.\n\nWhile Colby cleaned up, Suzanne went into the living room. Sitting down on the couch, she tucked her long legs under her. For a few minutes, she just sat there holding her phone. Finally, she pressed the speed dial for her dad's cell phone. Calling the house wasn't an option. She could barely have a conversation with her father. She wouldn't even consider trying to talk to her mother. The phone rang for long enough that Suzanne thought it would go to voice mail. At the last second, she heard her father answer.\n\n\"Hello Suzanne,\" he said. His voice lacked the warmth that it usually had when they talked. It was not unfriendly but there was a reserve to it that wasn't normal.\n\n\"Hi, Dad,\" she responded. There was a moment of silence as if neither one of them wanted to start the conversation. Finally, Suzanne went first. \"Sorry I haven't called you back before this. I wasn't sure what to say.\"\n\n\"I understand,\" he replied.\n\n\"And then when I was sure, I was afraid to call,\" Suzanne quietly said. She took a deep breath. \"Because I can't live a lie anymore. It's hurting me too much to pretend to be something that I just am not. And I know what that means, for you and Mom. So I put it off.\"\n\n\"What you are saying hurts us, Suzanne. It goes against what we believe and how we've lived our lives. Your mom and I talked about it and we've tried, but we can't give our approval to it. It's sinful. We can't condone sin,\" he replied. It might have been easier if he spoke harshly, but Suzanne could hear his pain in his voice.\n\n\"We love you, and hope that you can find your way back to God,\" her father continued, \"but we can't tell you it is okay. We've talked about it and it will be best if we don't see you.\"\n\nSuzanne expected this but it was still a blow when she heard him say the words. She let out a long sob. Hearing that, Colby came over with the box of tissues and sat down beside Suzanne. Handing her one, Colby gave her a little hug.\n\n\"Thanks,\" Suzanne whispered. As she dabbed at her eyes, she turned her attention back to the phone. \"No Dad, I wasn't talking to you. I was telling a friend thank you for handing me something to wipe my eyes. This is hard.\" Sitting down, Colby kept one arm around Suzanne. She could hear Suzanne's father say something else that caused her to tense up for a second. When she spoke again, her voice was hard. \"No Dad, she isn't my girlfriend. She's a friend, a good friend who understands what I'm going through. And yes, she is a lesbian too.\"\n\nColby gave Suzanne another little squeeze. Part of it was to reassure Suzanne that she was indeed there for her. There was another little part that was just for Colby, a consolation prize for only being a friend.\n\n\"Fine, I understand,\" Suzanne said, her voice losing that hard edge. The pain of the break with her parents was clear. \"I love you, and tell Mom I love her too. I hope one day you can accept me.\"\n\n\"We love you too and we will be praying for you,\" her father replied. The pain was evident with him too. Neither one of them held out a lot of hope for the change each wanted.\n\n\"Bye,\" Suzanne said as she ended the call. Turning, she buried her head into Colby's shoulder and really let the tears go. All Colby could do was hold her. Words weren't going to make this right. She had never met Suzanne's parents and right now, Colby hoped she never would. So much of Suzanne's pain was their fault. Their religious bigotry intruded into her life from an early age. It kept her from exploring healthy relationships and filled her with guilt for wanting what was natural for her. Just thinking about them filled Colby with a slow burning anger. She hugged Suzanne tighter.\n\n\"Thanks, Colby,\" Suzanne said as she tried to stop the tears. \"You are always here for me.\" \n\n\"I always will be,\" Colby said as she pulled back to look at her friend. Despite the smeared mascara and crushed expression, she thought Suzanne was as adorable as ever. If anything, her unhappiness made Colby want her more. It took all of her willpower not to kiss Suzanne. As much as she wanted to, Suzanne needed a friend more than anything else. Closing her eyes so she couldn't see the pretty face in front of her, Colby put her head on Suzanne's shoulder to give her another long hug.\n\nThey stayed like that for a long time before getting up to finish putting things away from dinner. Suzanne didn't want to be alone so Colby stayed to watch some television. With Suzanne leaning up against her, clutching her hand, it was hard for Colby not to imagine they were a couple. \"Maybe someday,\" she thought when she finally left for the night. The memory of Suzanne pulling her into a hug and kissing her on the cheek stayed with Colby. It made sleep hard to find that night.\n\nThe situation with Suzanne's family was much the same a month later. Her mother called her a couple of times to beg Suzanne to come back to God. As much as she tried to stay calm, Suzanne couldn't avoid getting angry with her. She didn't quite hang up on her, but her curt goodbye cut her mother off mid-sentence to end each call. It took Suzanne some time to calm down enough to get back to what she was doing before.\n\nFor that reason, it surprised her one day at work when she looked at her work phone and saw that it was her father calling. Suzanne almost didn't answer. She didn't want to make things worse by fighting with him. At the same time, with the help of her therapist she was trying to face her personal issues. \"I can't avoid him,\" she thought to herself. Taking a deep breath as she shut the door to her office, she answered his call. \n\n\"Hi Dad. What's up,\" Suzanne said. She tried to give it a cheery tone.\n\nHer father's voice was ragged. \"Suzanne, your mother ... She passed away. I came home from work when I couldn't reach her and found her on the couch. I don't know, the medics are guessing it was her heart.\"\n\nSuzanne sank down onto her chair. The darkness that had been slowly lifting descended in an instant. The words of the doctor all those years ago rang in her mind. It didn't matter that she knew deep down that they probably weren't true. She felt the guilt all the same. \"Oh Daddy. I'm sorry,\" she managed to say as she began to cry. \n\n\"It looks like maybe she took a nap and just never woke up,\" her father said. He hadn't been crying when he called but hearing Suzanne was enough for him to start too. \"At least it was peaceful. She's with God now, and with David.\"\n\n\"Daddy, there is nothing that I need to get done here at work. I can be there in a little while,\" Suzanne said.\n\n\"Suzanne, no. I'll let you know if I need anything. The pastor is here, and some friends. I'm sorry but this doesn't change things with you. Come back to God, and you are welcome home,\" her father told her. He wasn't angry. If anything, his voice held even more sorrow than when he told her about her mother.\n\n\"Daddy, please. You need me,\" she said. His rejection felt like a body blow.\n\n\"God is all I've got left, Suzanne. It will have to be enough,\" he replied. \"I'll let you know if I need help and I will tell you when we get the services set. It's probably going to be this Saturday.\" He paused for a moment. \"I need to go, honey.\"\n\nSuzanne was crying so hard she could barely hear him. She mumbled something in reply.\n\n\"Suzanne?\" Her father asked. When she didn't reply, he repeated himself. This time she muttered \"What?\"\n\n\"Honey, it's not your fault. It was just her time. Her heart was sick and had been for a long time. God called her home. This didn't happen because of you, okay?\" He spoke urgently, wanting to make sure she heard him. \"This would have happened no matter what.\"\n\nEven though she heard the words, Suzanne couldn't push the feeling of causing this away. Guilt was such a familiar companion. For years now, she struggled with it. Although she was starting to cope with her feelings about Chloe, it was still natural for her to accept guilt without questioning it. The sense of responsibility for her mother was overwhelming. It combined with the realization that her last conversations with her mother ended with anger. She would never get a chance to correct that. \n\n\"I have to go,\" Suzanne sobbed into the phone. \"Bye Daddy. I love you.\" She ended the call before he could say anything else. Leaning back in her chair, she let it all come out. Her body shook with the force of her crying though it was mostly quiet.  \n\nStill, Colby had a sixth sense that something was wrong. Going to Suzanne's office, she saw the shut door. She only hesitated for a second and then opened the door. Hearing the door open, Suzanne looked up at Colby with eyes that were already turning red. \"My mom died. Another heart attack,\" she told her friend.\n\nCrossing the space instantly, Colby put her arms around Suzanne and gave her a long hug. \"Sweetie, I'm so sorry,\" she softly said. She felt the sobs grow stronger as Suzanne let her grief flow. All Colby could do was keep holding her.\n\nNot having closed the door, it wasn't long before Jim showed up to see what was wrong. While Suzanne wasn't wailing, the sound of her crying attracted attention. He looked at Colby holding her. It was common knowledge that the two were close. While there were rumors, he didn't think they were true. He could tell that Suzanne was going through some rough times. Helping Suzanne with her issues just made him thankful for Colby in a completely new way. He liked Suzanne as a person even more than he appreciated her being a great employee. Colby seemed to be able to help her far more than he ever had. \n\nLooking over at him, Colby gave him a sad smile. \"Her mom just passed away,\" she whispered. Suzanne was clinging to her with her face buried in her shoulder.\n\n\"Oh God, Suzanne, I'm so sorry to hear that,\" Jim said. \"Don't worry about us, just go home.\"\n\nKnowing that Suzanne was barely there, Colby took charge of her. \"I know, Jim. We are okay for now. When she is ready, I'll take her home. I'm going to take a day or two off to help her. Her family situation is complicated,\" she said. \n\n\"Of course, take what you need,\" Jim said. \"And of course that goes for you too, Suzanne. There is bereavement leave and you have lots of vacation available.\" He met Colby's eyes and spoke in a low voice to her. \"Let me know if you need anything.\" She gave a tiny smile and nodded. Stepping out of the office, Jim shut the door.\n\nSlowly the first wave of grief began to ebb. The feeling of comfort from being held by Colby sank in and Suzanne clung to that support. When all that remained was some gentle weeping, Colby left Suzanne sitting in her chair. Carefully saving everything Suzanne was working on, she shut down the laptop before going out to her desk to do the same thing. Grabbing her purse, Colby hurried back to Suzanne. She paused for a moment to look at her. Suzanne was just staring out her window. Colby could see tears rolling down her face but there was otherwise no sign that she was still crying. Feeling her heart wrench, Colby thought, \"She's been through so much. Now she has to deal with this too?\" She made a mental note to try to get an extra appointment for her with her therapist. \"She'll need it,\" Colby told herself.\n\n\"Come on, sweetie. Let's get you home,\" Colby said aloud. She went over and put her arm around her friend. Suzanne slumped against her as they walked out of the office. \"It's okay. I'm going to take care of you,\" Colby said as they went down the stairs and headed to her car.\n\nFor the next few days, that was all Colby did. Most of the time, Suzanne was curled up on the couch. Colby made sure that she ate something. It was never as much as Colby would have liked, but it was enough. After hardly talking the first day, Suzanne began to open up to Colby. She still was on the verge of tears and sometimes past it, but she started telling Colby about her mom. \n\nIt was a new side for Colby to see. Everything that Suzanne had told her up to now about her mother wasn't flattering; her bigotry, how she kept pushing Suzanne about men, and her unwillingness to even consider accepting the reality about her daughter. Despite never having met her, Colby had a visceral dislike. Now that she was dead, Colby felt a little ashamed of that.\n\nFor the first time, however, Colby was hearing about a different side of her mother. Suzanne was telling her about when she was young and happy. David was still her beloved older brother and Suzanne didn't have to deal with questions yet about whether she liked boys or girls. There was the time her mother took them to the zoo in Seattle. Suzanne pulled her mother along by the hand, wanting to see everything. Laughing in a way that Suzanne hadn't seen in years, her mother indulged her daughter. Even then, she was heavy, but she walked for hours so that Suzanne could get to every part of the zoo.\n\nSuzanne told Colby about when she was ten and she asked her mom to make a pie out of the blackberries she had collected with David. Instead, her mother taught her how to make the pie, showing her all the steps that Suzanne's grandmother had taught her mother. Smiling, Suzanne recalled how it was the ugliest pie she had ever seen, but it tasted great. \"I'll make you one,\" she told Colby. \"They're not as good as Mom's but I make a pretty good pie.\"\n\nAs she listened, Colby saw a little glimpse of that girl from long ago. Even with the sorrow that never left, Colby could see some of the pain fade away, even if no one else would have caught it. It made Suzanne look years younger. Her teary eyes lit up as Suzanne recalled a prank that she had goaded David into pulling. It got him in trouble with their mom while her role stayed secret. Even though it would have lessened his punishment, David hadn't betrayed her. He never did. He was always her protector. ",
        "Slowly Colby began to see a clearer picture. It wasn't surprising, but everything changed after David died. The happy mother who delighted in doing things with her children disappeared. As a way of surviving, she immersed herself in the church and God. Suzanne was part of that life, but never again the center. The hole that David's death left in the family was devastating. It couldn't be filled, especially for Suzanne. God wasn't the answer for her, all the more so as she tried to deal with her emerging sexuality. The connection with her mother was lost. She went from small town conservative to religious fanatic. There might never have been a point where it was easy to talk to her mother about her feelings, but after that it was impossible.\n\nTalking about her mom and David took everything out of Suzanne. She stopped speaking and just sat there. Colby could see her starting to succumb to exhaustion. It wasn't the first time. Over the last couple of days, she catnapped every few hours. Colby was certain that was partially why Suzanne wasn't sleeping well at night but there didn't seem much to do about it.\n\n\"Here, Suzanne,\" Colby said as she patted her lap. \"Put your head down here.\"\n\nThere was no protest on Suzanne's part. She already found it hard to keep her eyes open. Sliding down the couch, she found a comfortable spot on her side with her head nestled on Colby's lap. She felt Colby's fingers touching her hair, pulling it back away from her face. Colby kept on running her fingers through Suzanne's hair.\n\n\"That feels nice,\" Suzanne muttered. It reminded her a bit of when she was little. For a moment, the feeling threatened to turn back into tears, but the tiredness won. She was asleep a few seconds later.\n\nContinuing to stroke her friend's head, Colby watched her sleep. All the crying left her looking wan and pale. Her face was blotchy from the tears, with puffy eyes. It didn't matter to Colby. She was so lovely. \"Damn, I've really fallen for her, haven't I?\" she thought to herself. \n\nIt wasn't just that she was reacting to Suzanne's vulnerability. \"I love being with her. She's smart, funny and quick. She's talented, and she has no idea how beautiful and sexy she is. God help me if she ever decides to flirt with me,\" she told herself. \"What am I going to do?\"\n\nColby couldn't think of any good answers. Right now, Suzanne needed her as a friend. Again. It would have to be enough. \"Plus, she's not ready for someone yet,\" Colby thought to herself. The demons Suzanne was wrestling were weakening but they weren't gone. Colby shied away from wondering if they ever would be.\n\nAs she felt the strands of Suzanne's hair slip through her fingers, Colby sighed. It was neither a happy nor a sad sigh. It simply reflected the complexity of her situation. On top of everything else, there was the issue of working together. \"I don't care and I bet Jim wouldn't, but Suzanne would. She is so buttoned down about things like that,\" Colby thought. It would be easier if Colby didn't love the job, but she did. \n\nSure that Suzanne was asleep, Colby allowed herself to brush the back of her fingers against Suzanne's cheek. \"Loving you isn't easy, is it?\" she whispered. It was barely audible. After a moment, Colby picked up a book she found on Suzanne's shelves and started to read it again. It wasn't the first time Suzanne had fallen asleep next to her.\n\nLater that day, Suzanne got a text from her father. It gave the details on the memorial service on Sunday. She looked over at Colby. \"He can't even call me about this. To tell me about my mother's funeral, he texts me!\" Her face reflected the anguish she was feeling. \"I knew that my coming out would cut me off from them,\" she said with her voice breaking as she said \"them.\" There was no them anymore. \"I didn't really understand what it would mean or how bad it would be.\"\n\nColby came over and took her friend in her arms. The hug she gave was completely platonic, although she longed to make it something more. \"I'm driving you, Suzanne. I'll stay in the car if that is what you want, but I'm not leaving you to do this alone,\" she said. \n\nSuzanne could tell that there was no changing her mind, not that she wanted to. Her father left her alone; she needed someone. \"Thank you. And you don't have to wait in the car. You didn't know her but funerals are about the living.\" Suzanne looked at Colby. \"Thank you for everything, Colby. I couldn't make it through this without you. I don't know what I would have done,\" she said. Her eyes clouded as she hugged Colby again.\n\nFor the most part, Colby avoided tears of her own over the last two days, but Suzanne's last words brought back her worst fears. Despite a tough image, Colby knew how fragile Suzanne was. Colby was there to help and support her friend, but more than anything she was there because she was afraid of what Suzanne might do. As Suzanne tightly hugged her, Colby let the tears come. The pent up worry was always there. It was a relief to get it out.\n\n\"I am always going to be there for you,\" Colby said. \"You're my best friend and that's what best friends do.\"\n\n\"I'm lucky,\" Suzanne softly said. \"Not only in having such a good friend, but to have you now. I've never had a friend as supportive as you, not even Chloe. She loved me, I know, but she never really tried to understand what I was going through. I don't blame her. I was so horrible and she was just trying to talk to me. All she knew was that I was hurting her, and myself. Her mom was so great; I don't think she could grasp the idea that I would lose my family. It wasn't in the realm of possibilities for her.\" Suzanne sighed. \"But it was for me, and I couldn't take that chance, not back then.\"\n\nShe slowly broke apart from Colby and sat back down on the sofa. Looking up, Suzanne shook her head. \"It wasn't just a chance, was it? I came out and I lost my family.\"\n\n\"Maybe after a while, that will change. Your dad's alone now. He may find that he needs you, sweetie,\" Colby said. She knew it sounded weak, but it was all she could offer. Besides, she thought there was a reasonable chance of it happening. Suzanne nodded but didn't say anything more. Finally, she picked up a book of her own and tried to read it. Colby joined her and the two of them read for the rest of the afternoon. Colby made much more progress in her book than Suzanne, but she took it as a good sign that Suzanne didn't nap again. Tomorrow would be a tough day and getting a good night's sleep would help Suzanne to get through it. Colby would spend the night in the guest room to help make sure that she slept.\n\nThe next morning Colby was up relatively early. She made coffee before popping her head in to look at Suzanne. Curled up in the middle of her bed, she clutched a pillow and held it to her body. \"Lucky pillow,\" Colby thought to herself. Leaving Suzanne to get a little more rest, Colby got a little breakfast of granola, yoghurt and fruit together. They were both going to need the energy today.\n\nGoing back into the bedroom, Colby climbed onto the bed. \"Wake up sweetie,\" she said as she reached out to brush the hair away from Suzanne's face. After a moment, Suzanne stirred and mumbled a sleepy protest. Grabbing Colby's hand, Suzanne pulled it close so she could use it as a pillow. Colby toppled a little closer.\n\n\"Suzanne, time to get up,\" she said with a laugh.\n\n\"Don't wanna,\" Suzanne muttered. She snuggled down in the bed, pulling Colby even closer.\n\n\"Sweetie, I don't want to make you either, but we've got to eat, shower, get dressed and then drive up to the service. I let you sleep as long as I could,\" Colby told her.\n\nSuzanne's eyes fluttered open. She hadn't expected Colby to be that close to her. Her beautiful face was floating only a few inches away, well within range of kissing. The temptation was strong, but the thought was fleeting. \"I know she wants it, but she deserves better than me. She doesn't need damaged goods,\" Suzanne told herself. Rolling on to her back helped by giving them a little separation. Loosening her grip on Colby's hand, Suzanne slowly let it slip out of her fingers. She gave a long sigh. \n\n\"What was that one for?\" Colby asked.\n\nLooking over at her friend, Suzanne gave her a little sad smile. \"Everything,\" was the only explanation that she offered.\n\nColby nodded. \"Okay,\" she replied. \"I've got something for you to eat all ready. Let's start there,\" she said. At the grimace Suzanne made, her look got a little sterner. \"No arguments. Skipping eating isn't an option when I am around,\" she scolded Suzanne as she got up off the bed.\n\n\"Yeah, yeah. I know,\" Suzanne said as she rubbed her eyes. \"I'll be out in a minute. Just need to go pee.\"\n\nColby went back into the kitchen. She wasn't completely sure that she wouldn't have to go and roust Suzanne one more time, but after a little bit she heard her up and about in the bathroom. \"Good. I hate feeling like I'm a nag,\" she thought as she poured herself a second cup of coffee.\n\nThe rest of the morning went by fairly fast. There was not much time to waste. Colby only had to push a little to keep them on schedule. It was a little tougher to get Suzanne to eat. It wasn't that she was uncooperative; struggling with nausea, Suzanne had to force down each bite. For a few moments when she was in the bathroom right before leaving, Suzanne thought she might throw it all back up. Closing her eyes, she managed to get her stomach under control. \"Don't ... don't,\" she chanted to herself. \"You'll worry Colby.\" It was that thought that helped the most.\n\nSuzanne mustered a weak smile as she came out and put on her jacket and overcoat. It was a stereotypical Seattle day, cool, overcast, and a little drizzle of rain; perfect weather for a funeral.\n\nThe ride up to her hometown was unusually quiet. Most of the time, Suzanne just stared out the window. When she spoke, it was usually to give directions. Since it was a Sunday, traffic was not an issue and the drive went relatively quickly. They got to the church a little ahead of schedule. \n\n\"Let's just stay here for a few minutes,\" Suzanne said. \"I doubt my father really wants me to be around early.\" She sighed deeply. \"What a depressing feeling to be unwelcome at your own mother's memorial service.\"\n\nReaching over, Colby took her hand and squeezed it. \"Yeah, it just makes a bad situation worse. I know we talked and I'll stay in the background. Remember though, if you need me, I'm here.\"\n\n\"Thanks, Colby. Daddy is going to make wrong assumptions about you no matter, but I don't want to make it worse.\" Suzanne felt tears threatening. This time it wasn't sorrow but frustration that caused them. She wasn't going to get any comfort from her father, and to try to keep peace, she couldn't lean on Colby either.\n\nThey sat in the car for 10 minutes, listening to the rain on the roof and watching people arrive. The rain was a little harder now, accompanied by a light fog. A feeling of nostalgia came over Suzanne. It reminded her of so many of the days when she came here as a child with her family. A little smile came to her lips as she recalled her mother trying to keep her from getting dirty when she was little. \"Everything was so simple then,\" she whispered. All Colby could do was give her hand another squeeze.\n\nAs they sat, Suzanne watched people arrive. Most of them were well known to her. They were people she knew all her life, mostly of her parents' generation or older. A few of them, she pointed out to Colby, like her old piano teacher, and the parents of a few closer friends.\n\n\"Oh,\" Suzanne suddenly said.\n\n\"What?\" Colby asked, surprised by the dismay in Suzanne's voice. \n\n\"You see the woman walking to the door with the black hat?\" Suzanne said.\n\nLooking over, Colby picked out the woman with ease. She was older but still lovely. Her outfit was perfectly matched, giving her a level of class that was higher than most of the other women she had seen. \"Yes, who is she?\" Colby asked.\n\nGlancing at Colby with a stricken look, Suzanne replied. \"It's Chloe's mom. It never occurred to me that Gayle would be here. I should have known. She was friends with Mom since high school. I just didn't think about it.\" She felt a renewed wave of nausea and opened the door, in case she lost it. As she deeply breathed in the cool moist air, she felt Colby rubbing her back. The reassuring reminder of her support helped. Suzanne fought the need to throw up. Finally, she shut the door and leaned back.\n\n\"I'm so fucked up,\" she said. It was mostly to herself. \n\n\"No you aren't,\" Colby said as she got out her makeup and did a little repair on Suzanne's face from where she wiped her hand. \"You have a lot of stuff to deal with right now. Give yourself a break.\" When she finished fixing Suzanne's makeup, she smiled. \"It's time. Are you ready?\"\n\n\"As much as I ever will,\" Suzanne said and then opened the door again. Colby was already waiting for her in front of the car. Not being from Washington, she had an umbrella out. At first, Suzanne ignored it and just started walking towards the entrance to the church. Then she paused and let Colby catch up with her. Most people would have seen it only as staying dry. Being close to her friend was Suzanne's real reason. As soon as they reached the door, she would have to leave that security behind.\n\nAs she came through the entrance, Suzanne saw her mother's brother and sister. They were greeting everyone as they arrived. Both her aunt and uncle were younger than her mother had been. It had been a couple of years since she had seen her aunt, but her heart caught at the sight of her. Although she always resembled her sister, Suzanne was struck by the similarities now. It reminded her of how her mother looked in high school, especially since her aunt had gained some weight. Her uncle was the only one of the three who managed to stay trim. Unlike her mom, they both moved away and it was rare that they made it back home. After their parents passed away, there was even less reason.\n\nWhen Suzanne's uncle saw her, the smile on his face seemed to lift his whole body up. She felt herself smiling in return. Which one of them was Suzanne's favorite was obvious. The feeling was mutual. Although he would never say it, he liked Suzanne best of all his nieces and nephews. He waved her over and gave her a big hug.\n\n\"How are you doing, Suzy?\" he asked. He was the only one who ever called her that. It started when she was a baby and she never even thought to tell him to stop.\n\n\"It's hard, Uncle Peter. Well, I'm sure you know how hard,\" Suzanne said as she squeezed him tight. She felt herself on the brink of tears again.\n\nPeter pushed her back a little so he could look at her. Despite the good job Colby did with her makeup, he could see the dark circles under her eyes. He didn't think that they were only from the last few days. \"No, Suzy. I don't think I know how hard it is for you,\" he said sadly.\n\n\"Hi Aunt Katie,\" Suzanne said as she turned to her aunt. \n\n\"Hello Suzanne,\" her aunt replied. Her tone was slightly formal, telling Suzanne that nothing changed with her. Just as religious as her sister, small town eastern Oregon had not altered her much. When they hugged, it was brief and lacked any semblance of warmth. \n\n\"Are Uncle Bill and the kids here?\" Suzanne asked. \n\nLetting go and stepping away, she looked over Suzanne's shoulder at Colby before answering. \"No, it was too fast. You father wanted to have it today. Plus they have school. I just drove up by myself. Bill stayed to take care of them.\" Suzanne realized that her eyes were still on Colby.\n\n\"Pardon me. Let me introduce a friend from work. This is Colby. She was nice enough to drive me,\" Suzanne said. She cringed inside. \"She is so much more than that,\" she thought. \"I just can't say that, not to them.\" She sighed. \"Not even to her.\"\n\nAfter the introductions were done, Suzanne's uncle took her by the elbow. \"Suzy, I need to talk to you for a second.\" They walked into a small room set off from the entryway. \"I'm sorry, but your father asked me to talk to you. He doesn't want you to sit with him. I called him a bastard, but he is as hard headed as he ever has been. Say hi to him, but then sit on the opposite side.\" He looked over his shoulder at Colby who was hovering just out of earshot. \"I suppose your friend can sit there too. When I'm done, I'll come sit by you too. I don't want anyone to think I agree with him.\"\n\nOnce again, Suzanne felt like someone smacked her in the face. Even today, her father wanted to show his rejection of her. Not just show it, he wanted to emphasize it. She pushed past her uncle. \"I'm sorry, Uncle Peter, I need to get to the restroom.\" Not needing to ask where it was, she made it there just in time to throw up in one of the stalls. Colby was right there with her, holding back her hair and making sure that she couldn't get any on her. \n\n\"I'm sorry. I've been fighting that all morning,\" Suzanne said as she knelt on the floor.\n\n\"Oh sweetie, you don't have anything to apologize for. You are the one owed an apology,\" Colby told her. Pulling out one of the handkerchiefs she brought along, Colby wiped around Suzanne's mouth. \"Are you done or is there more?\" Her beautiful eyes were full of concern. \n\nAfter thinking, Suzanne shook her head. \"I think that is all,\" she said. After trying once on her own, she let Colby help her back to her feet. Her eyes automatically looked in the toilet and she felt her stomach roll. Closing her eyes, she leaned against the stall and willed it back under control. It helped that Colby reached past her and flushed the vomit away. When Suzanne opened her eyes, the nausea had retreated until it was just an underlying distraction.\n\n\"Come on, sweetie,\" Colby said as she took Suzanne's hand and led her out of the stall. \"Put your hand under the faucet and get some water to wash your mouth out.\" Suzanne obeyed. Swishing the water around her mouth, she closed her eyes again as she spat it out. She didn't need to see any remnants. After that, she drank down a few more gulps of water. Each one helped her feel a little more normal.\n\nGiving Colby a weak smile, she nodded again. \"Okay, let's get this over with.\" She fought the urge to give Colby a long hug. If someone came in, she would just misunderstand it. Releasing a long breath, Suzanne opened the door and walked out. Out of the periphery of her vision, she saw the concern on her uncle's face but she ignored it. His sympathy wouldn't help her get through the encounter with her father, welcome as the sympathy was.\n\nWalking down the aisle, she could see her father standing by the pews in front. His mother was sitting down already. Although she knew her last grandparent would be there, her stomach did another flip flop. As much as she loved her, Suzanne's grandmother always frightened her. Like most of her family, she wasn't shy about her belief in God but she was the only grandparent who felt like she needed to enforce it. Occasionally while she was growing up, Grandma Ethel watched the kids while their parents took a short vacation by themselves. \n\nHer parents sometimes gave Suzanne or David a mild spanking, but the humiliation was usually worse than the pain. That wasn't good enough for Grandma Ethel. Even her spankings hurt, but if the offense was egregious enough, she picked up the switch that always leaned up in a corner of her bedroom. When she was five, Suzanne broke a cookie jar while trying to sneak an extra cookie. It was the only time that she ever got switched. After the first one, Suzanne screamed so loud that David heard her from outside and came running. By the time he found them upstairs, his grandma was finishing the fifth and final stroke.\n\nThere was nothing David could do that time, except for comforting his sobbing sister. Even complaining to their parents did no good. \"I was switched when I was little. It never did me any permanent harm but I can tell you it sure motivated me to behave,\" his father told David.",
        "After that, David tried never to leave his sister alone when Grandma Ethel watched them. Suzanne tried but she couldn't be perfect. Accidents and little mistakes happened, but David took the blame and the punishment every time. It was one reason that Suzanne idolized him. It was also why she could never warm to her grandmother.\n\n\"Hi, Daddy,\" Suzanne said as she came up to them. Her love for her father was still clear from the way she spoke. Without waiting for him to do anything, she gave him a tight hug. No matter what, she was determined to be the bigger person and let him know how she felt. For the first few seconds, she felt him really hug her back, then as if remembering, it changed. He barely held her and released as soon as he could.\n\n\"Hello Suzanne,\" was his reply. Any residual warmth from the hug was absent. It wasn't just his voice; his whole body seemed dead. It was not just with her. As she stood there, a couple of his friends came by to shake his hand. The energy she always saw was missing. His face was grey and the skin there sagged. He scarcely acknowledged them.\n\n\"Are you doing okay, Daddy?\" Suzanne asked him. \n\n\"As well as can be expected, I guess,\" her father replied. He offered no further elaboration. He was not going to give her any openings. She looked behind her and noticed that Colby already found a seat over by where Uncle Peter told them to sit. There was a little spark of irritation in Suzanne, not with Colby but with her father. It avoided any further deterioration of the situation, but it also meant she couldn't introduce someone important to her. \n\n\"I understand. I feel pretty much the same,\" Suzanne said. \"Daddy, we are both going through this. Can't we at least comfort each other?\"\n\nLooking over at Colby, her father shook his head. \"Are you willing to come back into the fold, Suzanne?\" he said. The harshness of his voice made it clear what he was offering and threatening. He might love her but his love came at a cost.\n\nIt was one she was not willing to pay any more.\n\n\"Daddy, I love you. I wish I could help you through this, but I can't be someone I am not.\" Even though he didn't return it, she gave him another hug. Right before she let go, she whispered into his ear. \"You said you didn't want me to be unhappy. I guess you didn't mean that.\" Letting go of him, she turned and went to sit down next to Colby. She wished that she just kept quiet, but it was too hard. A little of her frustration spilled over. As she sat down, Colby handed her a new handkerchief. She could tell that Suzanne would need it soon. \n\nAs the pastor stepped up to the pulpit, Uncle Peter slipped in beside Suzanne and put his arm around her. The reassurance it gave her was welcome. Even though there was nothing going on between them, she couldn't allow Colby to give her that. Things were complicated enough. She leaned against her uncle. Like all of her mom's family, he was tall. Her head fit just right in his shoulder.\n\nThe pastor was the same one that a decade and a half ago tried to help her deal with David's death. \"I'm too young to be doing this again,\" Suzanne thought to herself. She did not get much comfort back then. Her expectations were low now. When her brother died, the pastor was barely older than she was today. While his own faith in God was firm, he was less sure in dealing with people. The ensuing fifteen years removed that doubt. In a community that never questioned him, the confidence that replaced it bordered on arrogance. Each time she went to church with her parents when visiting, his smugness drove her further away. \n\nEven on a normal visit to church, Suzanne often tuned out what he said. With the combination of memories and her grief, Suzanne barely heard anything that he was saying. Suddenly, she felt Colby grab her hand and squeeze. Glancing over at her friend, she noticed Colby gritting her teeth. The look she was giving the pastor could only be called a glare. She missed what he just said, but now he had Suzanne's attention.\n\n\"Surely our sister in Christ Sarah will be welcomed in Heaven,\" he said. \"For like her beloved son David, Sarah led a righteous life. The reward for following God's law awaits her. David and Sarah are shining examples to us all. And while they never strayed from a righteous path, not all of us have that same strength.\"\n\n\"Yet there is hope for all. Our Lord is forgiving. No matter how far someone may have strayed from the righteous path, the path that Sarah followed, God will forgive. Even if you have fallen into sin and wickedness, God will forgive. You may feel divorced from God's family, but you can come back. God will forgive.\" As he spoke, he looked around the congregation. Nevertheless, at the end of each sentence he looked right at Suzanne.\n\n\"If you want to follow Sarah's example and find eternal life, all you have to do is ask. Ask for forgiveness and God will grant it. Accept Jesus as your savior. If you want to be one with your family, your family in Christ, you can. God's forgiveness is there. No matter how far you have fallen, salvation can be yours. Our Lord and Father loves you and will grant it,\" the pastor said as his eyes came to rest again on Suzanne.\n\nOn one side of her, Suzanne felt Colby holding her hand. It was tight enough to hurt a little. On the other, she felt her uncle's body tensing. The sense of anger that radiated from him helped. It wasn't just the two lesbians in the crowd who were appalled by what was being said. \n\nTurning, Uncle Peter whispered to her. \"I had no idea, Suzy. I'm so sorry.\"\n\nThe tears that fell now were different from before. They were bitter reflections of her feelings. \"It's not your fault, Uncle Peter. I wish I could say Mom would be angry too, but I'm pretty sure she would approve. It's okay. I'll survive. I know Daddy really believes he is trying to save me from damnation.\" \n\nDespite her words, Suzanne couldn't help the growing despair inside her. \"I tried so hard to be the daughter he wanted. Why can he not see what it's done to me? He won't even try.\" She sobbed aloud and squeezed Colby's hand. Peter's arm tightened around her shoulder. Their support helped but it didn't stop the darkness that was descending upon her.\n\nOnce the pastor moved on from redemption to talking about her mother, Suzanne no longer heard him. She stared straight ahead with tears rolling down her face. Her mourning now encompassed her father as well as her mother. Maybe there was still a chance he would accept her; Suzanne didn't think so. \"I'm on my own now,\" she thought. For the first time in a couple of weeks, she thought about the pills Colby took. At least, they were thoughts of relief, not regret. \"I'd have taken them tonight, I think,\" Suzanne thought, but she looked over at her friend. \n\n\"Maybe but maybe not. The old Suzanne would have, but I don't think I could hurt her like that,\" Suzanne admitted. \"Now I have two things to live for; Colby and Tuptim.\" Although she didn't consciously think about it, she still needed that; living for herself was not enough yet. \n\nMercifully, the rest of the service seemed to pass quickly for Suzanne. Long before graduating high school, she perfected the art of tuning out the sermons. Once they stopped having meaning for her, paying attention wasn't much of a priority. It was harder for Colby. Even after the pastor moved on to other subjects, she still heard the venom from earlier seeming to continue dripping from his words. Her fury simmered just below the boiling point. For Suzanne's sake, she managed to keep the lid on it.\n\nAt all the appropriate times, Suzanne got to her feet. She knew each hymn by heart. Singing along with the congregation, the beauty of the music gave her some solace. They were all her mother's favorites. Memories of standing beside her as they sang together surrounded Suzanne. Her tears of anger were washed away to some degree by new ones of mourning.\n\nWhen the service finally ended, Suzanne got up and embraced her uncle. His arms around her felt reassuringly good. Just before he released her, he whispered in her ear. \"Don't give up hope. Maybe when he has been alone a while, he will have second thoughts.\" Suzanne nodded but she didn't say what she wanted to. \"Maybe Uncle Peter, but I won't count on him. He is so damn stubborn and righteous,\" she thought to herself.\n\nColby got a hug too. Peter suspected she was more than just a coworker and he wanted her to know at least one member of the family accepted her. He had a whispered message for her too. \"Take care of her, Colby. She needs someone to love her.\"\n\n\"I will, Uncle Peter,\" Colby whispered back. Calling him that seemed natural. He smiled and gave her another quick squeeze.\n\nLooking at Suzanne, Peter grimaced. \"There are refreshments back at the house. I already had it out with him. I won't say you are welcome, but it's okay if you want to come over.\"\n\nSuzanne glanced at her father. His red-rimmed eyes told her how hard the service had been for him. As she looked at him, he turned his head and met her eyes for a second. The deadness in them scared her. \"If only he would let me help him,\" she thought. \"But he won't, and going over would make it worse.\" She sighed and shook her head. \"Thanks for sticking up for me, Uncle Peter, but Daddy will be better if I'm not there. We'll just head home.\" She sensed an inaudible sigh from Colby. Her friend would have gone with her, but it was a relief not to have to try to be pleasant in a hostile environment.\n\nJust how hostile it was became apparent as they made their way down the aisle. This was her mother's social circle. For the most part, the church was what unified them. Many of them Suzanne knew from growing up. She was friends with their children or babysat the younger ones. Always a well-behaved girl, her mother's friends liked her. Even after moving away, they welcomed her back at holidays when she went to church with her parents.\n\nNow it was different. Most of them had hard looks on their face. Even the ones who were still weeping didn't spare her a warm glance. Only a few looked at her sympathetically, but it was clear that they weren't willing to risk doing anything in the face of the general disapproval. Apparently no matter how shamed she was, her mother opened up to them about Suzanne. Equally obvious was their approval of her mother's reaction. Ignoring them, Suzanne continued to head out of the church with her head down.\n\n\"Suzanne,\" a gentle voice called out. Startled, she looked up and saw Gayle putting out a hand to touch her forearm and stop her. \"I'm so sorry, Suzanne,\" she said as she stepped a little closer. Looking Gayle in the face, Suzanne saw her more clearly than earlier. Her face was more lined and she let her hair go salt and pepper, but she was still a beautiful woman. Since moving away, she never saw Gayle. She didn't go to church. Despite the fact that she remained friends with her parents, they never did anything with Gayle when Suzanne was in town. It was with a little bit of pain that Suzanne realized she could see Chloe in Gayle's face. She couldn't remember noticing the resemblance.\n\n\"Thanks, Gayle. I appreciate it,\" Suzanne said in a low voice. The service took a lot out of her and she did not have much reserve left.\n\n\"I don't just mean your mom. Of course, that is terrible. She should have had so many years more. But I mean how James is treating you; how everyone is treating you.\" She made an exasperated sound. \"Sometimes I wonder how I've stayed friends with Sarah. She is such a small minded ...\" She trailed off, realizing how she was speaking about someone who just passed away. \"Anyway, I'm sorry.\"\n\n\"I didn't expect much more. Well maybe from Daddy, but not the rest of this crowd,\" Suzanne replied.\n\nThere was a man behind Gayle who made a slight noise. \"Oh, I'm sorry. This is my partner Leo. We've been together for about five years now.\" Suzanne tried to smile and shook his hand. He was a tall man, and at least five years older than Gayle was. With a trim beard and mustache to go with his long silver hair pulled back into a ponytail, he was attractive in an older man way. He also looked very out of place in this church and in a suit. \n\nWhen both of their eyes flicked over at Colby, Suzanne realized she had to say something. \"This is my friend, Colby. She's been taking care of me the last few days.\" She looked over at Colby. Maybe Suzanne forgot that she already told her who Gayle was, but she felt compelled to say it again. \"This is Gayle, Chloe's mom.\"\n\nThe mere fact that Suzanne mentioned her daughter told Gayle volumes about their relationship. She smiled. \"It's so nice to meet you, Colby. I'm glad that Suzanne has someone like you.\" Colby nodded but didn't speak. She wasn't sure how to respond. Glancing at Leo, Gayle said, \"Dear, would you mind giving me a moment? I need to talk to Suzanne.\" Taking Suzanne by the arm, Gayle walked her outside to stand on the porch. There was a little space there where they could be away from everyone else. Suzanne felt the comforting presence of Colby disappear and realized she stayed with Leo. It felt a little naked without her.\n\nGayle's face was full of warmth as she looked at Suzanne. \"How are you doing, really?\" she asked. The way Suzanne's face was quickly masked disturbed Gayle. The grief was still visible but everything else was obscured. \n\n\"I'm okay. It's hard, especially with the way Daddy is,\" Suzanne replied in a short clipped way.\n\nHiding the sinking feeling she felt, Gayle shook her head. \"Suzanne, I understand that but I mean overall. There was a time when you could talk to me. And I still care about you.\"\n\nSuzanne couldn't disguise the misery in her voice. \"I don't know why. All of the problems Chloe had are because of me! You should hate me.\" In her mind, Suzanne added, \"Like I do.\"\n\nPulling Suzanne into a warm embrace, Gayle shook her head. \"I never hated you, your father sometimes, but never you. You were too young and had too much pressure. And Chloe's mistakes were her own. You didn't make those choices for her,\" she gently said. Gayle didn't let go and eventually felt Suzanne return the hug. Nevertheless, when they finally released each other though, she could tell from Suzanne's face her words had not reached her. She sighed.\n\n\"Colby seems nice,\" Gayle said. She hid any other thoughts.\n\nBlushing, Suzanne quickly shook her head. \"It isn't like that. She is just a great friend, but yes, she is nice. She is getting me through things.\"\n\n\"I am so glad you have her. Still, unless years of having a lesbian daughter are misleading me, she is gay, isn't she?\" Gayle said with a tiny smile.\n\n\"Yeah, but so? It just means she understands me. There is nothing more than that. She is just a friend.\" She looked at Gayle. \"I know what you're asking, and no, there is no one. Not like Chloe.\" She ignored Piper and Sandy. They weren't like Chloe; no one was.\n\nOut of the corner of her eye, Suzanne saw the cluster around her father start to move. They came down the aisle towards her. She felt a spike of panic. \"Sorry, Gayle but I need to go.\" Without saying goodbye, she turned and hurried out to Colby's car. The rain was coming down hard. By the time Colby got there and unlocked the door, Suzanne's hair was soaking wet and plastered to her head. The tears mixed with the rainwater and ran down her face. As quickly as she could, Colby started the car and got the heater going.\n\nBack on the porch, Gayle watched as Colby's car pulled out and drove off. She felt Leo come over to her and put his arm around her waist. She sighed again and leaned her head against his shoulder. \"Poor thing,\" Leo said.\n\n\"Yeah, I can't stand to see that much pain. It reminds me of Chloe; somehow different, yet still the same,\" Gayle said. Her lips pressed together as she watched the car disappear, lost in sad memories.\n\nOn Monday, Suzanne returned to work. Colby continued coming over often, but she was not there every day anymore. As far as she could tell, Suzanne seemed to be doing as well as could be expected. Naturally, once back at work Suzanne threw herself completely into it. Burying herself in work was a long-standing way for her to deal with issues, although even Suzanne admitted that it was more ignoring than dealing with them.\n\nOne night Suzanne was lying in the bed with Tuptim purring on her lap. She was trying to read an engineering report but not making any progress. It slipped from her hand as she lay back against the pillows piled up behind her. Her fingers scratched behind Tuptim's ears, feeling the rumbling of her purr radiating out. When she paused for a moment, the little cat looked up at her with blue eyes and made a little meow.\n\n\"I'm sorry, Babycat,\" she said as she started to pet her cat again. \"I was falling down on the job, wasn't I?\" She watched as Tuptim closed her eyes again in pleasure. Suzanne's stomach rumbled a little. Although better at eating now, she still had days where she came home exhausted and the effort of making a meal seemed too much. \"I know I should eat, but that would require disturbing you. I can't do that, can I?\" Tuptim continued purring as she put her head back down. \"No, that would be bad,\" Suzanne said.\n\nSuzanne had her cell phone with her. If Colby called, she didn't want to have to get up. Now she picked it up and unlocked it. The screen glowed as she contemplated calling her father. Over the last six weeks, she called him every few days. She knew he wasn't likely to answer, but she wanted him to know she was there if he needed her. The messages she left were short and almost always the same.\n\n\"Hi. It's Suzanne. Just wanted to make sure you are doing okay, Daddy. I love you.\"\n\nSo far, there was no acknowledgement of her attempts to reach out. \"It's getting a little hard to keep doing this, Daddy,\" she said aloud. The frequency was dropping a bit. It was five days since her last call. Sighing, she touched the phone, put it to her ear, and waited for it to ring. Once it started to ring, Suzanne counted down until it would go to voicemail. She was shocked when it was picked up on the third ring.\n\nAt first, all Suzanne could hear was heavy coughing. She could tell it was her father. In between the coughs, his breathing was full of wheezing. Finally, a hoarse, breathless voice said, \"Hello?\"\n\n\"Daddy, it's Suzanne. What's going on? Are you okay?\" Suzanne asked. Her voice was tight with worry.\n\nThere were more hacking coughs before he said anything else. \"Suzanne? She's not here.\" There was a brief pause and then she heard him shout. \"Sarah? Sarah, when will Suzanne be back?\"\n\nAfter that, her father didn't speak again. The shouting seemed to cause a massive attack of coughing that faded back into the labored breathing. Her attempts to get his attention got nowhere. Finally, she hung up the phone and tried calling back, but now it was just a busy sound.\n\nGetting up and ignoring Tuptim's concerned meows, Suzanne went through her contact list looking for the family doctor's number. \"I know I had it at one point, but it's not here,\" she said to herself. Finally, she found the number of a neighbor. Dialing it, she crossed her fingers it was still good and that someone would answer. \n\n\"Hello Mr. McClellen, this is Suzanne Wilson. I was trying to reach my dad and when he answered, he sounded very sick. I hate to ask, but could you or Mrs. McClellen check on him.\"\n\n\"Oh, thank you so much. It is just he is alone now.\"\n\n\"Yes, I'll wait.\"\n\nSinking down onto the bed again, Tuptim came to her immediately and rubbed against her. She rubbed the cat's head without really paying attention. The turmoil in her stomach made her glad she hadn't eaten. It seemed to take forever. Finally, she heard Mrs. McClellen's voice.\n\n\"Suzanne, yeah Jonathan got in. Your father is up in his bedroom. He looks pretty sick and he feels hot. I'm going to hang up and call Dr. Johnson and see if he will come over. Give me your number and either he will call you back, or I will.\"",
        "\"Okay, you can reach me in my car. I'm going to drive up now,\" Suzanne said after giving her the number. The call didn't last much longer and then Suzanne was already getting ready to leave. She hadn't changed from work yet, so it wasn't long before she was out the door. In the car, she sent Colby a text, letting her know what was happening and that she would get in touch when there was any more news. A few minutes later, she got a text back asking if there was anything Colby could do. \n\nSuzanne sighed. It was another moment that reminded her of how important Colby was to her. What she really wanted was for Colby to be beside her so that she could feel that constant support and affection. It made such a difference when she was there.\n\n\"And I don't give anything back,\" Suzanne said to the empty car. \"She may be good for me, but I don't know how I'm good for her. I'm so messed up, I can't be.\"\n\nDark thoughts surrounded her as she drove. \"Colby is such a sunny person and so very caring; and she is stuck on me. She deserves someone better,\" she continued speaking aloud. \"I'm too weak to do what I should do.\" Just then, her phone rang. It was her generic ringtone so she knew it wasn't Colby. She touched accept and said hello into her Bluetooth.\n\n\"Hello, Suzanne. This is Dr. Johnson. I just finished looking at your father and I've called an ambulance. I'm sending him to the hospital in Everett. It looks like it was flu that has developed into pneumonia. We need to do an x-ray and run some tests to be certain, but I'm worried. He has been sick for some days, and he hasn't been eating or drinking enough. He is pretty dehydrated.\" He paused. As the longtime family doctor, he knew Suzanne. His understanding of what she had been through was better than most. \"He is a stubborn man, Suzanne. He won't let anyone help. If anyone is responsible, it is your dad. I just hope that his stubbornness will help him now.\"\n\n\"He won't return my calls. I would have been there but he won't let me in,\" Suzanne said. She always found Dr. Johnson easy to talk to, even if she could never bring herself to talk to him about her orientation while still growing up. The fact that he was outside their circle from the church helped.\n\nHis voice was calm as he spoke. \"Suzanne, that isn't your fault. You didn't choose to be a lesbian. That people like your father refuse to accept that it isn't a choice doesn't make it any less a fact.\" She heard him sigh. \"He is a good man in so many ways, but his treatment of you makes it hard for me to see that sometimes.\"\n\nSuzanne was not sure what to say. It was so rare for anyone from home to take her side. \"Thanks,\" she finally said. After a moment, she asked how sick her father was.\n\n\"I won't lie to you, Suzanne. The pneumonia is pretty bad. He should have come in a few days ago. His fever is high and he is drifting in and out of consciousness. When he is conscious, he is confused. Moreover, his breathing is very labored. I'm worried he has pleural empyema, or fluid in the area around the lungs.\" Dr. Johnson paused. \"I hear the ambulance coming so I am going to go. I'll see you at the hospital, Suzanne.\"\n\nAfter thanking the doctor, Suzanne ended the call and took out her earpiece. The lack of tears surprised her. She seemed to cry so often these days. \"Maybe it's because I'm angry at him as much as I am scared for him,\" she said, starting to talk to herself again. The feelings from the memorial service had not gone away, nor the anger from her calls being ignored. They were the subject of many of her discussions with her therapist. Suzanne couldn't get away from the thought that he did this to himself. Dr. Johnson hit the nail on the head. Now she was facing losing someone else she loved, but this time because of his own action. \"Damn you, Daddy,\" she swore softly.\n\nHer phone rang again, this time playing Colby's ringtone. She held the Bluetooth in her hand but didn't put it back in her ear. \"She can't be my crutch all the time,\" Suzanne softly said. \"Anyway I don't want to talk to anyone with the mood I'm in.\" The phone went silent for a minute or so then, it beeped to let her know there was a message. Suzanne couldn't help feeling guilty for not answering. She knew Colby would be worrying about her. Putting the earpiece back in, she pressed play.\n\n\"Hi, sweetie. I know you must be busy, but give me a call when you have a chance to let me know how he is doing and if I can help. I'm ready to come up, if you need me,\" Colby said. The caring in her voice was unmistakable which made the guilty feeling deepen.\n\n\"Guilt, it's what I'm best at isn't it?\" Suzanne whispered as she pulled into the parking lot. \"I'll call when there is something to say,\" she told herself more loudly.\n\nUnfortunately when she got into the emergency room, there wasn't much to learn. The necessary tests were being taken to confirm Dr. Johnson's diagnosis and she would have to wait. While she was waiting, she sent Colby a text letting her know that she was okay and would get back to her.\n\nIt was almost an hour later when Dr. Johnson came out to see her, along with another doctor. Their faces were grim.\n\n\"It's as I feared. His dehydration has made it worse, plus he should have come in before. We have had to put him on a ventilator to help him breathe and the tests confirm that he has substantial fluid around his lungs. It looks like the fluid may be infected. It is serious enough that they are prepping him for surgery now. Dr. Kaczynski will be doing the surgery,\" Dr. Johnson told her.\n\n\"Your father is very sick, Miss Wilson,\" Dr. Kaczynski said. \"Normally I would say that he has good chances, given the fact that he isn't particularly old and has been in good health, but Dr. Johnson tells me he recently lost his wife. Will to live can be critical in these situations. The fact that it got this far isn't a good sign.\" His voice was as grim as his face. \"I'm sorry; I need to go get ready myself.\" He turned and walked away to leave her with Dr. Johnson.\n\n\"Can I see him before he goes into surgery?\" Suzanne asked.\n\n\"They are already getting him ready to go in,\" Dr. Johnson replied.\n\n\"I know, but you heard him. I just want to remind him that I love him,\" Suzanne told him. \"Just in case.\"\n\nDr. Johnson thought and then finally nodded. Putting his arm around her shoulder, he escorted her back to her father. Suzanne felt her heart sink as she looked at him. He had lost weight since the service and his skin color was a sickly grey. He looked terrible, especially with the ventilator tube down his throat. \n\n\"You only have a minute,\" Dr. Johnson told her and then stepped back to wait.\n\nWalking over to him, Suzanne took her father's hand in hers and squeezed. There was no answer. His eyes were closed and the sound of the ventilator covered up most of the wheezing he was making. She leaned in close to his ear.\n\n\"Daddy, don't leave me alone. I know eventually that we can get past this. Just don't go. I love you, Daddy,\" Suzanne said. Finally, the tears started to come. \"First David, then Mom, I don't want to lose you too. Be strong and fight, Daddy. You always fought. Please, please do it again.\" She kissed him softly on the cheek and whispered one last time. \"Remember I love you.\"\n\nWhen Dr. Johnson pulled her away, Suzanne didn't resist. Her vision blurred from the tears that were rolling down her face. He sat down beside her once she was settled in the waiting room. He too thought about all the loss she had faced in her short life. Beyond that, he couldn't help thinking about how her parents treated her. He put his arm around her again and gave her a little squeeze.\n\n\"Is there someone you can call to come sit with you? It's going to be a while,\" he asked her.\n\n\"Yeah,\" Suzanne said. Giving an inner sigh, she knew that she needed Colby. She wasn't strong enough to do this on her own. \"I will call her in a bit. I want to at least stop crying,\" she said, sounding embarrassed. After a moment, a thought hit her. \"Damn, I have to call my grandma. I should have thought of that sooner.\"\n\n\"Don't worry. I'll take care of that. I have her number,\" Dr. Johnson said with a little smile. \"The benefit of being a small town doctor is I know my patients' entire families.\"\n\n\"Thanks,\" Suzanne said. In truth, the thought of having to tell her grandmother was only part of her concern. She needed Colby, and despite the fact that the relationship was only platonic, Suzanne could just imagine the disapproval her grandmother would show. At the service, most people assumed they were a couple no matter what she said. She felt a little defiant spark flame up.\n\n\"I'm tired of playing this game with them. If I was with Colby, I would be lucky. Anyone would be. I'm okay with being a lesbian. I can't help it if they aren't,\" Suzanne thought to herself. \n\nShe leaned against Dr. Johnson and gave him a half hug back. \"Thanks for the support tonight. It made things a lot easier,\" she told him.\n\n\"It's the least I can do. I'll make that call but then unfortunately I need to head home. There isn't any more that I can do,\" he told her. Suzanne nodded her understanding. He had a family of his own that he had left to help her dad. \n\nAfter he left, Suzanne worked at getting her emotions back under control. Finally, she got out her phone and called Colby. When she answered, Suzanne felt a little bit of strength come just from hearing her voice. \n\n\"Hi, sweetie,\" Colby said. \"What's going on?\"\n\n\"He has pneumonia which is bad enough, but he has fluid in his chest and they have to operate to deal with it,\" Suzanne answered. Her voice was steadier now than it had been a short time ago. \"The surgeon seemed worried. He said it sometimes comes down to how much someone wants to live.\" \n\nBy now, Colby knew Suzanne better than anyone. Even though she sounded okay, Colby knew how scared she was underneath that front. More than that, she knew that guilt might be eating away at her. Colby sighed very quietly. Feeling like things were her fault was still Suzanne's default state. \"I'm coming up. I'll be there as quick as I can,\" she said.\n\n\"You don't have to, Colby,\" Suzanne weakly protested. Even she knew it wasn't convincing.\n\n\"Suzanne, please shut up,\" Colby said. It was so full of affection that it erased any bite to it. \"I have everything I might need ready to go. I already called Jim to let him know what was happening. He knows that we might not be in tomorrow. He sends his best wishes and that he is keeping a good thought in mind for you. I'm coming, okay?\"\n\n\"Okay,\" Suzanne said as she gave in to Colby. \"I'll see you in a little while.\"\n\n\"Bye sweetie,\" Colby said as she ended the call.\n\nIt didn't seem like it was too long before Colby got there. Suzanne was in a daze, completely lost in her thoughts. She hadn't noticed the time passing. Still when she looked at the clock, Suzanne knew that Colby must have exceeded the speed limit and by quite a bit. The hug that Colby gave her felt very good. Neither one of them felt much like talking. They just sat in the waiting room, Colby's arm around Suzanne's shoulder with Suzanne's head resting against it.\n\nNot very much time passed before, Suzanne heard the door to the waiting room open. Thinking it would be her grandmother, she took in a deep breath to brace herself. When she turned around, however, she saw it was the surgeon, with a nurse trailing behind him. Their faces were grim. Her breath caught in her throat.\n\n\"I'm sorry, Miss Wilson. We did everything we could. His heart stopped beating during the surgery and we tried repeatedly to revive him. We weren't able to get it going again,\" he told her. He was well practiced at delivering speeches like this. His voice was regretful but firm. \"Sometimes medicine isn't enough.\" \n\nSuzanne knew what he was saying. It was the same thing as before the surgery. Her father needed to want to live. She started to cry again. As much as it was the loss of her father, she also felt that it was just one last rejection. She wasn't worth living for to him. \n\nThe two bystanders watched as Colby pulled her into an embrace. If not for the circumstances, it would have looked comical; the tall sobbing woman held tenderly by a woman a foot shorter. Yet they both only felt relieved that Suzanne had someone with her who cared.\n\nThe doctor withdrew to finish the paperwork for Suzanne's father. The nurse stood there a few moments longer. \"Is there anything I can do?\" she asked. \"Anything you need?\"\n\nLooking over at her with a sad smile, Colby shook her head. \"Not just now, but thank you.\"\n\nThey stayed like that for a while. At last, Suzanne let go and collapsed into one of the chairs. Colby held one of Suzanne's hands in both of hers. \"I'm sorry, sweetie. I really am.\" \n\n\"He just gave up, Colby. He didn't care enough about me to live. He didn't even care enough to call me for help when he got sick. He would rather die,\" Suzanne said, the bitterness that she felt came boiling out.\n\nLooking at the woman that she loved, Colby couldn't help herself. \"Fuck him, then. Suzanne, if he was that small minded and bigoted, fuck him. You are a wonderful daughter. Any parent would be proud to have you as a daughter. I'm sorry, sweetie, I know he just died but the only person I am going to feel bad about is you, for all the crap he put you through. This isn't your fault. It is his. He had the chance to let you back into his life, and he didn't take it.\n\n\"Suzanne, none of this is your fault, not David, not your mom, not your father, not being a lesbian and most certainly not how they treated you. Don't take this on too. This was him,\" Colby said as she lifted Suzanne's hand up and gave it a soft kiss. \"I won't let you blame yourself for yet another thing.\" The conviction in her voice was clear; and this time it got through to Suzanne.\n\n\"You know what I wish?\" she asked Colby.\n\n\"What, sweetie?\"\n\n\"That when he gets judged, Jesus only has one thing to say. \"It was about love. How did you forget that?\" Suzanne said. The tears didn't stop. The things he had done and how he treated her did not change the fact that she loved him. It was hard to believe that he was gone. For most of her life, pleasing him was the most important thing. That changed recently but she still felt adrift as if the compass of her life was gone. For some reason, she thought of her therapist. \"She'd tell me that I should rely on myself to be that, wouldn't she.\" She sighed. It was hard. It was much clearer to see what someone else wanted you to be than figuring out what you want. \"I need to try though,\" Suzanne told herself.\n\nColby remained silent. Even agreeing with Suzanne seemed hazardous. The emotional turmoil she felt was unpredictable. Instead, Colby just held Suzanne's hand and leaned against her. That would tell Suzanne everything she needed to know.\n\nThe rest of the night was a blur. Dealing with the medical red tape ... telling her grandmother ... Suzanne never remembered much of it. \"Just get through it,\" she kept thinking. When at last everything was done that could be done, she went home. Not wanting to have to deal with leaving a car behind, Suzanne refused to let Colby drive her home. Instead, Colby followed her back to her apartment. Putting her arm through Suzanne's, Colby led her upstairs and then put her to bed. \n\nAfter giving Suzanne a light kiss on the cheek, Colby started to get up when she felt Suzanne grab her arm. \"Don't leave,\" she said. Her voice sounded very much like the little girl Colby imagined she must have been. \n\n\"I was planning on spending the night, sweetie. Don't want you waking up all by yourself,\" Colby said. She kept hidden her worst fears deep in her mind. Colby did not plan to leave Suzanne alone until those fears went away again.\n\n\"I mean, don't leave me alone in here,\" Suzanne said in that same voice. \"Will you hold me while I sleep?\"\n\nBreathing suddenly became hard for Colby. All the time she spent with Suzanne, they never slept in the same bed. Even when she slept over, she would sleep in the guest bedroom. It was a line they didn't cross. With complete certainty, Colby suddenly knew that if she pushed even slightly, Suzanne would willingly give in and make love. The idea tempted her, but Colby knew it wasn't right. \"If this happens,\" she thought before correcting herself. \"When this happens, I want it to be right. I want her to be ready so it can last.\"\n\n\"Okay, sweetie. Just let me go change and I'll be right back,\" Colby said aloud. She spent so much time there that she kept a t-shirt and pajama bottoms in the other bedroom, as well as some toiletries and a few other things like panties. For a second, Suzanne's grip tightened as if she didn't want to let go. Then with a sigh, she let go. Colby hurried out and was back in a few minutes.\n\nSlipping in bed with Suzanne for the first time, the nearness was almost overwhelming for Colby. Her scent seemed to be everywhere and the warmth from Suzanne's body radiated. Moving closer, Colby spooned against Suzanne. Her arm went around Suzanne's waist and rested on Suzanne's belly. It didn't stay there long. Grabbing it, Suzanne pulled it up between her small breasts and held it tightly against her. It pulled Colby in closer. Her face was next to Suzanne's neck. \n\n\"Thank you for being here, Colby,\" Suzanne said. And then as if forced from her, she added, \"I need you.\" Colby took it the way she intended it. Suzanne tried not to rely on other people. Even when she did, like the last few months, she found it hard to admit. It was an opening; Colby just wasn't sure how wide. \n\n\"I know you do. I'm glad I'm here,\" Colby said quietly. The desire to lean her head forward another inch was strong. She almost gave in and kissed the back of Suzanne's neck, but she didn't. Instead, she gave Suzanne a squeeze and tried to get some sleep. With her arms around Suzanne, she expected it to be difficult. It wasn't. Part of it was being tired, but the other half was that it was much more reassuring than troubling to sleep like that. She was where she belonged. \n\nThe service for Suzanne's father was not very different from the one for her mother. The exception was that Suzanne made the pastor swear to God that he would avoid any repeat of the attempt to shame her. Even still, it was a nerve-wracking experience for Suzanne. This time at least, she had more than just Colby with her for support. Seeing the double blow of losing both of her parents in such a short time, Jim and many others from her work were there. Jim and some of them would have come anyway, but the story of how Suzanne was treated got around. They were going to make sure that nothing like that happened, even if they needed to disrupt the service.\n\nFortunately, nothing like that happened. Almost all of the locals came up and expressed their regrets to Suzanne, some warmly embracing her. Even the ones who did not were polite and simply left. Gayle was there again of course, but no opportunities presented themselves for another private talk. She joined the line of people waiting to express her condolences and then just gave Suzanne a hug. For the most part, Suzanne only went through the motions, trying to keep her emotions in check. She didn't always succeed, but she did better than with her mother's service.\n\nUnlike with her mom's death, Suzanne also did not take a lot of time off. When she did, it was mostly to deal with details. Before the service, there were lots of those. After it, there were even more dealing with the estate. From practical matters like paying bills and the mortgage to dealing with her father's will, Suzanne missed more work than she liked. The time to the company's acquisition was fast approaching and there was a lot she needed to do.\n\nColby found herself increasingly frustrated. The closeness they reached that night after coming back from the hospital receded some. She spent more nights at Suzanne's apartment, but almost every time she slept in the guest room. Only when Suzanne woke with a bad dream did Colby come to her room and crawl in with her. She kept waiting for a sign that Suzanne was ready to take it the next step, but it didn't come.",
        "Slowly Colby could see that at least part of Suzanne's reluctance was that they worked together. It was already awkward. Jim had her spending most of her time with Suzanne to make sure she had what she needed. For both of them there were stressful moments when one or the other bit back expressing frustration for fear of hurting the other one. In the past, Suzanne would directly confront the issue, and move on. Now things festered. \n\nOne afternoon when Suzanne had an appointment with the probate attorney, Colby came to Jim's office. The tense look on her face was a common one these days.\n\n\"Jim, do you have a moment?\" Colby asked as she stuck her head in the office.\n\n\"Sure, come on in,\" he replied. The way Colby came in and shut his door gave him a disquieting feeling. She sat down on the chair opposite his desk and folded her hands in her lap. \"Okay, what's going on?\" he asked.\n\n\"I had an offer to join another company. It is a full-blown marketing position so it is a step in the direction I want to go. After thinking about it and looking at how things are here, I think it's best to take it. So I'm giving you my two weeks' notice,\" Colby said. Her eyes were moist and shining, showing the emotions that she felt.\n\n\"Wait a second, what do you mean by 'the way things are here?'\" Jim asked.\n\nLooking him in the eyes, Colby felt her cheeks blush. She didn't say anything.\n\n\"Oh,\" said Jim and was quiet too. He looked down and then finally back at Colby. \"Listen, I don't care if you and Suzanne are involved. I can't lose you.\"\n\nColby felt something snap inside her. \"That's just it, Jim, we aren't. I love her, and I'm pretty sure she loves me back, but we aren't involved. Something is holding her back. You know how damned honorable she is. I think because it is \"wrong\" to be involved with a co-worker. Maybe that isn't all, but at least it eliminates one possibility.\" Colby's voice was shrill as her anger and frustration burst forth.\n\n\"Oh,\" he said again. His weak response took the wind out Colby's sails. It wasn't his fault. \"I assumed you must be. And I didn't care. Actually, that's not true. I was glad for both of you.\" He saw that Colby's emotions were getting the best of her. Tears slowly ran down her cheeks. He pulled a tissue out of a box and handed it to her.\n\n\"Look, Colby I understand. I want you two to be happy, but if you two aren't involved now, I don't think leaving will change things. If working together is an issue, it's only because it lets her hide from the real reason. I know her well enough to see she loves you, but until she can love herself ...\" Jim stopped as he felt a lump in his throat. Suzanne was like a daughter to him, all the more so because of her recent troubles. He swallowed a couple of times. \"Until then, she won't let herself be loved,\" he finally finished.\n\nStaring at Jim for a moment, Colby mulled over his words. Then she nodded as the tears started to come harder. \"I'm so fucked,\" she whispered, more to herself than to him.\n\n\"I don't think so, Colby. She is so much better than she used to be. That's all because of you, but you can't change a lifetime very quickly. You just need to keep being there for her,\" Jim said. At first, she didn't really hear his words, but then they slowly penetrated.\n\n\"It's hard,\" Colby said. \n\n\"I see that,\" Jim replied. \"Look, if I thought this was good for her, I would wish you the best of luck in leaving. I don't think it is. We need Suzanne at close to 100% for the next couple of months. And I think if you leave and aren't here to help her, she will fall apart. You know her too well to think that she won't try to do what needs to be done. She would push herself to the edge.\" He paused. \"Then she would go over it. And I could not stop her, short of firing her.\"\n\nIt was impossible to deny Jim's logic. In all her internal debate, Colby missed that. \"Oh my God,\" she thought. \"She would break and ...\" Her mind refused to go down the path, at least not consciously. The twisting of her stomach was the result of her unconscious conclusion.\n\n\"Can I suggest this?\" Jim said. \"Put them off, tell them I need you and offered a huge bonus to stay for three more months, which I will, as well as match your new salary. And after that, you can go. If need be, I will call whoever it is and get them to agree. Failing that, I will find you a new position in three months, one that is acceptable to you. Provided of course, you still want to go.\" Emphasizing with his hand, he went on. \"You see Colby, this way you get what you need; I get what I need; and we both get Suzanne what she needs.\"\n\nHaving made up her mind to leave, it was not easy suddenly to reverse her course. As she thought about it, Colby realized Jim was right. She couldn't do it when it would hurt Suzanne like that.\n\n\"Okay, Jim. You win. I'll call them and negotiate the start date. If I need help, I will let you know,\" Colby said as she took the hand he offered and shook it.\n\n\"Colby, I hope someday she will be able to tell you how lucky she is to have you,\" Jim told her with a fatherly smile. \n\nBlushing, Colby worked on getting herself back under control. Fortunately, she learned a fair amount over the course of the year about negotiating. It was time to practice it. It would be nice not to need Jim's help.\n\nAfter that, things got somewhat better. Colby decided to be a little firmer with Suzanne about issues and deal with them as they came up. It wasn't long before Suzanne felt comfortable in doing the same thing and some of the tension lessened at work. Colby also found that having a deadline made it easier to let things take their own pace. She was still waiting, but she didn't mind now.\n\nThe tipping point came on a rare Saturday when the two of them were not together. A friend of Colby's from college was in town. Colby was showing her the sights. In the evening, they would come by and pick up Suzanne so all of them could go to dinner. Curled up on the couch with Tuptim on her lap, Suzanne was close to finishing proofreading a report when the doorbell rang.\n\n\"Sorry, Babycat,\" Suzanne said softly in response to her meow of protest at losing the lap. \"Gotta get the door,\" she told the cat as she went to the door.\n\nOpening the door, Suzanne found a woman there that she did not recognize. She was shorter than Suzanne, but who wasn't? Her hair was jet black and cut very short on the sides, barely more than a quarter inch while the top was a bit longer but standing straight up and spiked. The color was too black to be natural. From under her shirt and jacket, tattoos extended up her neck and onto her cheeks all the way to her ears. They were vines and flowers in black and gradients of grey. They drew Suzanne's eye and she realized she was staring.\n\nLooking back at the woman's face, Suzanne tried to halt the blush she felt spreading across her cheeks from being caught staring. Her intense sapphire blue eyes were enough to hold Suzanne's attention. She had only seen eyes like that a few times before.\n\n\"Oh my God,\" Suzanne suddenly whispered. Looking again, she took in the entire woman. Her face was more sunken with lines on it that Suzanne wouldn't get for a long time, as if the woman had lived longer than her years. She was thinner too, but her eyes, her nose and those lips; Suzanne knew her.\n\n\"Hi Suzanne,\" Chloe said. Her voice wasn't the same either. It was raspier. Like her face, it was the voice of someone older.\n\nSuzanne felt her knees weaken and she almost fell before catching herself on the doorknob. Chloe jumped forward to grab her and help stabilize her. Suzanne tried to wrench herself away. She didn't want Chloe's help. She didn't deserve her help. Chloe's grip was too strong and she supported Suzanne as they moved back into the apartment. \n\nWorried, Tuptim jumped up and nuzzled Suzanne. \"I'm fine, Tup, I'm fine,\" Suzanne said as she felt most of her strength come back. She looked over at Chloe. It was almost like looking at a specter. The shadow of the Chloe she remembered was there but obscured by her physical presence.\n\nHaving shut the door, mostly so the cat would not get out, Chloe looked at Suzanne. Inside Chloe felt the pain that kept her away. Trying to be honest, Chloe admitted that it was a different pain now. For years, the pain of Suzanne's rejection festered. She couldn't take the thought of seeing Suzanne for fear of it bursting. For the last couple of years, she was free of that pain. Instead, the new pain was knowing that Suzanne was hurting too and being unable to help her. \"Be truthful,\" Chloe yelled in her mind. It was being unwilling to forgive her and help Suzanne find some peace. \n\n\"Hi,\" she said again. \"I hope it's okay that I came in,\" Chloe said.\n\n\"Yeah, it's fine,\" Suzanne replied. She tried to look at Chloe but found it impossible.\n\n\"I was in town and wanted to come by and see you,\" Chloe said, forgiving herself for the lie of omission. She was only in town to see Suzanne. There would be a visit to see her mother later, but only because she was so close. \"My mom told me where you were living when she told me about your parents. I am so sorry, Suzanne.\"\n\n\"Thanks. It still doesn't seem real,\" Suzanne said as she stroked Tuptim. It gave her something to distract her from Chloe's presence.\n\n\"How are you doing?\" Chloe asked her. \n\nSuzanne was quiet. There were so many ways to take that question. Looking down at Tuptim, she tried to focus. \"I'm okay. Taking each day as it comes.\"\n\n\"I guess that's all you can expect now. You know, it's nice to see you, Suzanne,\" Chloe said with a little smile.\n\nRaising her eyes to look at Chloe, Suzanne couldn't help expressing her surprise. \"It is? I can't imagine why.\" Chloe winced from the pain in her voice.\n\n\"It is. Suzanne, high school was a long time ago. I am not holding on to that,\" Chloe said. She unzipped her jacket. \"Do you mind if I take this off?\" she asked.\n\n\"Go ahead,\" Suzanne told her. She resigned herself to this conversation happening. She watched as Chloe shed her leather jacket. Underneath, she was wearing a simple black t-shirt that hugged her body. The little puckered scars along the veins of her arms drew Suzanne's eyes. Her stomach churned. As soon as she realized she was gawking, Suzanne averted her eyes.\n\nIt wasn't quick enough for Chloe to miss. She looked down at them. \"Sometimes I forget they are there,\" she said in a soft voice. \"Most of the time, though, they are a reminder of where I don't want to go again.\" She looked back at Suzanne and saw that her face was flushed again. \"It's okay, Suzanne. You don't have to feel embarrassed for me.\" When Suzanne winced, Chloe looked at her again. Sighing, Chloe got up and came over to sit next to Suzanne.\n\n\"This,\" Chloe touched her arm, \"isn't about you. This was my own doing, my own bad choices.\"\n\nSuzanne looked into Chloe's blue eyes. They were the only things about her that didn't seem to have changed. \"It is,\" she said in a tiny voice. \"If I hadn't treated you so horribly, it might not have happened. Your life would have been different.\"\n\n\"You don't know that, Suzanne. You don't know anything about my life, except maybe what you heard second hand,\" Chloe said. \"I don't blame you.\" She put her hand on top of the one Suzanne was using to pet Tuptim. She felt it twitch from her touch. \"I don't blame you for anything,\" she said again. Slowly she closed her fingers around Suzanne's hand.\n\n\"From what I hear and see, you've been doing a good enough job of blaming yourself for both of us,\" Chloe said as she slid her hand down slightly so she could feel Suzanne's wrist. She waited for Suzanne to say something. When she didn't, Chloe went on. \"Why is your wrist so bony, Suzanne? You were slender, not bony.\"\n\nLooking at Chloe, Suzanne tried to say something. The words wouldn't come out, but the guilt she felt was washing over her like a tidal wave. Chloe felt her pain and put an arm around her shoulders and hugged her. She tried to ignore how fragile Suzanne felt.\n\n\"I'll be honest. I used to blame you for my problems, and I blamed my dad, and even my mom. Until I was able to stop blaming others, I couldn't deal with those problems. It took me a long time to accept that I made those choices. I was to blame. It took me longer to stop hating myself,\" Chloe said, as much to herself as to Suzanne.\n\nShe extended her other arm out. There were several bracelets on it and as she let them slide down, they exposed a small line across the inside of her wrist. \"I know something about hating yourself so much that you would rather be dead, Suzanne,\" she said softly as she hugged Suzanne again. \"And there are lots of ways to be self-destructive. Believe me, I know.\"\n\nReaching out a finger, Suzanne ran it along the scar. Looking back at Chloe, she finally spoke. \"I never hurt myself.\"\n\n\"I didn't say you did. That doesn't mean you aren't self-destructive, Suzanne,\" Chloe said as she stared into Suzanne's eyes.\n\nFor a long time, there was silence as the two of them continued looking at each other. Finally, Suzanne dropped her eyes. \"No, it doesn't,\" she quietly agreed.\n\n\"Suzanne, a lot of people have their hearts broken at 18 and never implode like I did. They don't get into drugs and hooked on heroin. Those were my bad decisions,\" Chloe said as she leaned back against the couch. It gave the two of them a little separation although her hand stayed on top of Suzanne's.\n\n\"I hurt a lot of people, because of those decisions, and it took me a long time to really want help. Eventually, though, I did. My mom helped me get back into rehab. It's been two years since I used. Every morning, I get up determined to tack on one more day,\" Chloe said with a little smile. \"Some days are harder than others, but I am doing okay.\"\n\n\"I'm glad. Chloe, I'm sorry. I'm sorry for how I treated you. I shouldn't have. I should have stood up to my parents,\" Suzanne said as she turned her hand upside down so she could hold Chloe's.\n\nTurning to smile at Suzanne, Chloe shook her head. \"I forgive you, Suzanne. I understand why you did it, but beyond that, I forgive you. Going through rehab teaches you the value of being forgiven. It helped me to move on, to have my mom, my dad, others that I hurt, give me real forgiveness.\"\n\nSuzanne smiled for the first time. It was a weak smile, but it was genuine. \"Thank you, Chloe,\" she said.\n\nFor a little while, they were quiet again. It was still overwhelming for Suzanne to be next to Chloe. During the last eight years, she was always a silent ghost in the room. Now the ghost was talking.\n\n\"Mom says you have someone in your life. I'm glad, Suzanne,\" Chloe said, breaking the silence.\n\nSuzanne felt her cheeks blush. \"She's just a friend,\" Suzanne quickly said. She started to take her hand away but Chloe held on to it.\n\n\"That isn't what Mom thinks. She is pretty sure your friend loves you,\" Chloe told her. She looked at Suzanne. \"You think that I don't know what it's like not to feel worthy of love?\" When a look of pain went across Suzanne's face, Chloe quickly shook her head. \"No, Suzanne, I don't mean you. I'm talking about since then. You aren't the only woman I loved, and I hurt most of them. I lied to them. I stole from one of them ... cheated on one so I could get drugs. When I did this,\" she said, holding out her hand and showing the scar on her wrist again, \"I was sure I was unlovable.\"\n\nChloe looked Suzanne in the face. \"I'm with someone now. She loves me. She makes sure that I know I am worth loving every day,\" she said. She got a shy smile. \"I love her back the same way. It took me a while to believe I could be loved, even after I fell in love with her. There was a time when I didn't think I would ever say this, but I am happy in my life.\"\n\nUnbidden, Suzanne smiled a truly beautiful smile. In all her dreams and nightmares about Chloe, she never heard those words. Her imagination never let her picture a reality where Chloe was happy. It felt better than Suzanne would have guessed. \n\n\"I'm so glad,\" Suzanne said. Without thinking about it, she threw her arms around Chloe and hugged her. She felt Chloe returning it. When it ended, the grin was even bigger. \"Tell me about her,\" she told Chloe.\n\n\"Her name is Gabriela, and she is Latina. She is a little older than me, 31, and we met at work,\" Chloe said. \"It didn't take us long to start dating, but it took a while for things to be good. She's why I went into rehab and why it worked.\" Suzanne could see some of the pain that Chloe put Gabriela through to get to that point reflected in Chloe's eyes. \n\nSensing that Chloe did not want to talk about it, Suzanne changed the subject. \"What is work?\"\n\nThat put a big grin in Chloe's face. \"Can't you guess?\" she said as she touched the tattoos on her neck and arms. \"We are both tattoo artists. These are hers,\" Chloe softly said as her fingers almost caressed the vines on her neck and cheek. \"We opened a shop of our own a year ago. It's going very well so far.\"\n\n\"I'm happy for you, Chloe. That's great. She sounds amazing,\" Suzanne said. \n\n\"She is. She is the rock of my life,\" Chloe said. \"Let me show you a picture,\" she added as she pulled out her phone. A couple of seconds later, she handed the phone to Suzanne. She guessed it was the day they opened their shop, as it was full of people. Chloe was wearing a tank top that showed off her tattoos. Her arm was around Gabriela, who was a tall, Hispanic woman with hair long enough to be pulled into a ponytail. She had on a similar top so that her tattoos were on display too. She was very pretty with dark eyes that reflected the happiness of the moment.\n\n\"Chloe, she's beautiful. You two look great together,\" Suzanne said as she handed the phone back.\n\n\"Thanks, she is. I can't believe my luck,\" Chloe said as she looked at the picture. The way she glowed made Suzanne envy her. She wanted to let go and just feel like that with Colby.\n\nAlmost as if reading her mind, Chloe looked at Suzanne. \"Tell me about your friend,\" she said.\n\nAfter hearing about Gabriela, Suzanne felt hesitant to talk about Colby. Their relationship wasn't like what Chloe had. \"She's just a friend,\" she reiterated.\n\n\"I know; tell me about her,\" Chloe said neutrally but also clearly insistent.\n\n\"I met her at work too. She's my boss' executive assistant, but she is so much more than that. She helps me with the marketing and she's really good at it,\" she replied.\n\n\"Suzanne,\" Chloe said, gently interrupting her. \"You know that isn't what I'm asking about?\"\n\n\"Oh,\" Suzanne said with an embarrassed smile. \"Okay. Let me find a picture of her.\" She got out her phone and looked through the pictures. As she went through picture after picture, she realized that she never took any of Colby. When they were out, it was always Colby with her phone out, either taking selfies of the two of them or telling Suzanne to pose for her. She felt her face burning as she thought about having to tell Chloe that she didn't have one. Finally, she found an old one early in their friendship. It was the first time that Tuptim crawled up onto her chest and fell asleep. She insisted on Suzanne taking a picture of the two of them. She handed over the phone feeling embarrassed that she only had one picture of the most important person in her life.\n\nThe picture was more of Tuptim than of Colby. It was only her face above the curled up ball of cat. Still, Chloe could see her radiant beauty. Rather than the shocking black of her own short hair, Colby had longer curly naturally black locks of hair framing her face. The most noticeable thing about her was her blue eyes. She smiled a little. That seemed to be a thing for Suzanne, though in truth they were quite different shades. Unlike her own sapphire colored eyes, Colby's were a piecing sky blue. Combined with the black hair, she was striking.\n\n\"She's gorgeous, Suzanne,\" Chloe told her. She couldn't help chuckling again as Suzanne blushed. \"I forgot how often you did that. It never took much to make you blush, did it?\"",
        "Knowing her cheeks were beet red, Suzanne shook her head. \"No, and it's never changed. I blame the years in church,\" she said. She tried to say it as a joke, but it actually sounded as bitter as it really was.\n\n\"Me too,\" Chloe said, imbuing the words with a shared understanding of something neither one of them wanted to confront head on. Instead, she brought the conversation back to Colby. \"You still haven't told me about her. What is she like as your friend?\" She put the slightest emphasis on the word friend.\n\nFor a moment, Suzanne didn't say anything, held back by her lifetime habit of being secretive. Suddenly it hit her and she looked at Chloe. \"I don't know why this is hard. The first person I ever opened up to is asking me about the one person in my life who means as much to me as Chloe did,\" Suzanne told herself. She took a breath. \n\n\"She's a wonderful friend. She supports me and makes sure that I take care of myself. We took a trip together for work and I ended up coming out to her,\" Suzanne said. Looking Chloe in the eyes, she went on. \"I told her about us, about what I did. How I hurt you.\" Her voice almost faded away as she said the final bit.\n\n\"And she understood, didn't she? The impossible choice you had to make,\" Chloe told Suzanne. She could see the tears starting to well up in her eyes. \"She told you to forgive yourself?\"\n\n\"Yes,\" Suzanne whispered.\n\n\"You haven't though. If I can be here, forgiving you, then you can forgive yourself,\" Chloe gently told her. \"Please, Suzanne, forgive yourself.\"\n\n\"I don't know if I can, Chloe. It's become part of who I am,\" Suzanne said as the tears began to roll down her cheek. \n\n\"So was heroin for me,\" Chloe said. \"I had a choice. I could change and have a chance with Gabriela, or I could lose her. Losing her was the easy choice. All I needed to do was nothing. I couldn't take that choice. I love her and she is worth everything I went through to be worthy of her.\" She paused for a second. \"Are you willing to do nothing and lose Colby?\" Chloe said.\n\nThe pain in Suzanne's heart exploded. She always avoided thinking about Colby leaving. Deep down she knew that was inevitable if she didn't open up. \"God, no,\" she thought. Without Colby's warmth and caring, she did not know how she would survive.\n\nSuzanne felt the teardrops falling onto her lap from where they collected along her jaw. She wiped at them and then grabbed a tissue. Sitting there and holding it in her hand, she looked over at Chloe. \"No, I'm not, but what if I can't change?\" she said.\n\n\"I was in rehab twice before and I was using within weeks both times. Even though I thought I would probably fail, I tried again. Suzanne, Gabriela was worth it. Isn't Colby worth it too?\" Chloe asked.\n\n\"She deserves someone better than me, someone who isn't broken,\" Suzanne weakly protested.\n\nWith her deep blue eyes burning, Chloe nodded. \"So did Gabriela, but she wanted me.\" She squeezed Suzanne's hand. \"Tell me that Colby doesn't love you and want you.\"\n\nSuzanne wanted to deny it, the way she always refused consciously to acknowledge Colby's feelings. In front of Chloe however, it was impossible to lie; and Suzanne knew it would be a lie. \"She does love me,\" she thought. \n\n\"You're right. I can't tell you that,\" Suzanne admitted.\n\n\"Suzanne, if what I've gone through has taught me anything, it is that we don't get to decide if we are worthy of love. Gabriela thought I was, even when I hated myself. And it was her love that guided me to a place where I felt so too,\" Chloe said. \"I wouldn't have believed it four years ago, but I am clean and happy. \"\n\n\"Accept the gift, Suzanne,\" Chloe choked out as her own feelings welled up and she felt herself start to cry too.\n\n\"I'll try, Chloe. I really will,\" Suzanne told her.\n\n\"It starts with forgiving yourself. It happened, Suzanne. Whether it was right or wrong, it doesn't matter now. Forgive yourself and move on.\" Chloe's eyes burned with determination again. \"You've punished yourself enough.\"\n\n\"Okay. I'll try to do that too,\" Suzanne said, trying to smile again. After a moment, she put her arms around Chloe and gave her a long hug. \n\nIt felt so different from high school. There was practically nothing about Chloe that felt the same. Her body was harder and less rounded; even her cheek felt more angular pressed against her own. Yet there was something about the way she smelled that brought back memories of being together. The love that she could never completely let go of rekindled, but in a different way. Chloe was her first love. That made what they had unique and Chloe would always have a place in her heart, but she didn't own Suzanne's heart any more.\n\n\"Colby does,\" Suzanne told herself.\n\nAs the hug finally ended, Suzanne could tell that Chloe had similar thoughts. They smiled at each other, both thinking of someone else.\n\nChloe moved away just slightly and looked at Suzanne. She took a deep breath. \"Suzanne, I would like a couple of things from you. First, I would like to ask your forgiveness too.\"\n\n\"What do you need me to forgive?\" Suzanne asked, obviously confused. \"I hurt you.\"\n\n\"Not for that. I should have come to see you before this. For a long time, I held on to my hurt. I felt justified in being glad you were punishing yourself. It helped me to justify what I was doing to myself. If I was in pain, you should be too. Even after I went through rehab and I stopped feeling that way, I couldn't face you. I have lots of excuses why, but I really just tried not to think about you,\" Chloe said. \"I knew it was wrong, but I guess I still held on to a little of my anger. When Mom told me about your parents passing away and seeing you, I knew I needed to see you. I just wish I had done it sooner. I'm sorry for not forgiving you before this. Maybe it would have changed things for you.\" Suzanne didn't know what to say. \n\nChloe got a little smile on her face. \"I've had practice. It's part of the program to let people know you're sorry for the hurts you've caused. This is the point where you say, I forgive you, if you do.\"\n\n\"Of course, I do. Chloe, you came when you were ready to tell me. I understand,\" Suzanne said as she hugged Chloe once again.\n\nOnce again, they looked into each other's faces. \"There was a time when there was nothing more I loved to do than kiss those lips,\" Suzanne thought. Now, while a little of the old affection was still there, they weren't the lips she longed to kiss. She couldn't wait until Colby came over. Even with Colby's college friend there, Suzanne planned to find out finally what kissing her was like.\n\n\"Well, I should go. Mom is expecting me for dinner and it's going to be cutting it close if I don't get on the road,\" Chloe said as she stood up. Suzanne got up and walked her to the door.\n\n\"You know, I didn't say it but I am really glad you have Gabriela. I would like to meet her and tell her how special I think she must be,\" Suzanne said.\n\n\"Oh, that reminds me that I almost forgot the other thing,\" Chloe said. She started to smile shyly. \"We're getting married. Now that it's legal in California, we are going to do it. It will be next spring. We hope that you and Colby will come down for it. I would really like you both to be there,\" she said. \n\nSuzanne threw her arms around Chloe and gave her a big hug. \"You almost left without telling me that?\" she admonished Chloe. \"That's wonderful. Congratulations! Of course, we'll come down,\" she said.\n\n\"Great! I'm glad I finally came to see you, Suzanne. Just remember what I said. You do deserve happiness,\" Chloe told her before giving Suzanne a final hug.\n\nAs she shut the door, Suzanne smiled again as she thought about Chloe getting married. \"She really has found some peace and happiness,\" she thought. \"And it's funny how quickly I am using 'we' when I think of Colby and me.\" She smiled. \"I've got to let Colby know that we're a we now.\" \n\nA little of her self-doubt flared up. \"Maybe I'm wrong. Maybe after all this, it isn't what she wants,\" she thought. She felt Tuptim's body thread itself around her legs. Bending over, she picked her up. Once Chloe and Suzanne got too active, she left to find a better place to sleep. Now she was back, purring heavily as Suzanne held her against her chest.\n\n\"What do you think, Babycat?\" Suzanne asked the happy cat.\n\n\"Mew,\" Tuptim replied as she lifted her head to rub it against Suzanne's jaw.\n\n\"I hope you're right,\" Suzanne said as she walked into her bedroom. It wouldn't be too long before Colby was there with her friend. It was just enough time for Suzanne to get ready in a way that would make an impression.\n\nAs Colby and her friend Jillian came up the elevator, she gave Jillian one last warning look. As one of her best friends through college, Jillian insisted that Colby bring her up to date on her personal life. Once Colby finished filling her in, she also made it clear that she didn't completely approve of Suzanne. It had been going on all day.\n\n\"Look, I get it. She is amazing and beautiful, but she is also needy. You support her, but how much support is she giving back. It has to be two way for love to work. What is she giving you, Cole?\" Jillian asked while they were having lunch, using her nickname from back in college.\n\nFinding an answer was hard for Colby. Even now, hours after Jillian asked it the first time, Colby lacked a good answer. The best she could do was say, \"I'm willing to wait and find out.\" \n\nJillian was the bluntest of all of Colby's friends. She never gave a damn about offending someone. There were times when Colby appreciated it. Today wasn't one of them. Despite her job situation putting time parameters out there, they were questions Colby didn't like considering. Even when they were driving to Suzanne's apartment, Jillian did not give up. \"All I'm saying is that you give everything to her. And I'm sorry, but she's got issues. You are too wonderful a person to be trapped in a relationship with someone who can't even admit to being in a relationship. Plus you carry around the constant worry of if she is going to kill herself.\"\n\nFinally, as she pulled into a parking space, Colby turned to Jillian. \"Okay, enough. I heard you. I understand your opinion, and you have some points, but enough. We are going upstairs to meet Suzanne. Whether she is having a great day or she is fragile today, you are going to be nice. Keep your opinions to yourself for once, please?\" The surprise on Jillian's face was obvious. Colby was rarely this blunt. \"I know you are saying this because you care about me, but right now show that in a different way. Be nice to my friend. Her family disowned her. Her mother died and then her father died. Yes, I haven't thought too much about myself, but who would when a friend is dealing with all that?\"\n\n\"Okay,\" Jillian said. \"I know I can be a bitch, but I've learned to tone it down some. I'll be nice to her.\" She paused for one second. \"But I'm not done with you. I'm a bitch but you're too nice. The topic is just postponed.\"\n\nNow as the elevator stopped, Colby just hoped that Jillian could hold her feelings back. Most of the time, Suzanne was doing so much better. Maybe if she could see Suzanne on a good day, Jillian would understand.\n\nWithout thinking, Colby got out her key and let herself into the apartment. It was habit now. Neither one of them bothered to knock before coming into each other's apartments. She missed the roll of Jillian's eyes.\n\n\"Suzanne?\" Colby called out. \"We're here.\"\n\n\"I'll be out in a sec,\" Suzanne yelled from the bedroom.\n\nAt the sound of Colby's voice, Tuptim came bounding out of the bedroom and jumped up on the edge of the couch. Her indifference to Colby was long gone. Tuptim loved her almost as much as Suzanne. Laughing, Colby scratched her on the head. \"Yes I missed you too,\" she told the cat.\n\nHearing Suzanne coming out, Colby turned to introduce Jillian, but was stunned as she looked at Suzanne. To her, Suzanne always looked good, but even Colby had to admit that since her father's passing, Suzanne wasn't at her best. She just threw on whatever was handy. Usually she wore loose pants or jeans with a tunic top or occasionally a blouse. \n\nTonight was different. Suzanne looked fabulous. She had a black cardigan on over a low cut white lacy top. Suzanne's bust wasn't big like Colby's but that top gave the impression of much more than there was. The gentle curve of the tops of her breasts showed, as did the cleavage between them. Her long legs were in tight leggings that were mostly grey with irregular short ivory lines breaking it up. A wide belt that tied around her waist with the ends dangling accentuated her long slender body. Even though she was already tall, she wore two-inch heels that made her legs look even better than normal.\n\nSuzanne had a little smile on her face as she saw the effect that she had on Colby. A part of her kicked herself for not trying to please Colby more before this. Another part, awakened by Chloe, told herself to focus on the future and let the past go. She twirled around which gave Colby an appreciation for what the heels did for Suzanne's ass.\n\n\"You like?\" Suzanne said in a nervous voice.\n\nThe change in Suzanne stunned Colby as much as the new clothes, rendering her speechless for a few moments. Finally, she managed a few words. \"You look amazing, Suzanne.\" The smile that put on Suzanne's face was just as striking as how she looked.\n\nMoving over to Jillian, Suzanne put out her hand. \"Hi, I'm Suzanne. It's nice to meet you.\"\n\nShaking Suzanne's hand, Jillian mumbled her own introduction. Suzanne bore no resemblance to the woman Colby described. Jillian expected a somewhat mousy and mopey woman. Although straight, Jillian could clearly see why Colby fell for Suzanne.\n\n\"I'm sorry, Jillian. I don't want to be a bad host, but could I borrow Colby for a few minutes?\" Suzanne asked.\n\n\"Umm, sure. No problem,\" Jillian answered. What else was she going to say?\n\n\"Thanks. There's a bottle of wine open if you want a glass. Make yourself comfortable if you want something else,\" Suzanne said as she took Colby's hand and led her into the bedroom and then shut the door.\n\n\"Hi,\" she said to Colby.\n\n\"Hi,\" Colby said back, still confused as to what was up.\n\n\"I'm sorry that I've been like this. You are so wonderful. I'm so lucky, and I haven't shown you how lucky I feel,\" Suzanne said. Her voice was warm and full of life in a way that Colby could scarcely remember hearing before.\n\n\"It's okay. You've been through a lot,\" Colby started to say.\n\n\"Shut up! I'm not done talking. It isn't okay,\" Suzanne cut her off. When she spoke again, her voice still had the warmth and vibrancy, but her nervousness came through as well. \"It isn't okay when you love someone but you won't let yourself show it.\" She reached out and took Colby's hands. \"And I do love you, Colby. I wish I told you before now,\" she added.\n\nColby's heart felt like it was going to burst. It was so overwhelming that she didn't see when Suzanne leaned down to kiss her. She just suddenly felt Suzanne's lips pressing against hers and Suzanne's hand sliding behind her head. Her mouth automatically opened with an audible sigh. She felt Suzanne's tongue very tentatively enter her mouth. Recovering, Colby greeted it with her own. Their tongues began a slow dance as Colby slipped her arms around Suzanne's neck. She just gave herself into the kiss. She had waited for this moment for so long.\n\nWhen it finally ended, Colby looked up at Suzanne with shining eyes. \"I love you too, Suzanne Wilson,\" she said as she broke into a huge smile. She hugged Suzanne tight against her body. \n\nStroking Colby's cheek, Suzanne shook her head in wonder. \"I don't know why you do. And I don't mean because I'm not worthy,\" she quickly added as Colby started to protest. \"I'm going to try really hard to not feel that way anymore. What I mean is that I'm such a mess. A sane person would run away.\"\n\n\"I guess I'm just not sane when it comes to you, sweetie,\" Colby said, still with a smile that practically stretched from ear to ear. She hugged Suzanne again. \"What happened? Why now?\" It was such a radical switch for Suzanne. \n\nSuzanne tried to ignore the sudden feeling of nervousness in the pit of her stomach. Talking about her first love's visit was harder than she expected. Looking at Colby, she forced herself to start talking.\n\n\"Chloe was here today,\" Suzanne said. The look on Colby's face was only one of surprise. There was no trace of jealousy. It eased her nervousness. \n\n\"Wow, that must have stunned you, sweetie. How did it go?\" Colby said. Moments later the surprised look became a little smile. \"Actually, given that you are in my arms, it must have gone well.\"\n\nColby's smile banished all remaining nervousness. \"I don't know why I was nervous about telling her,\" Suzanne thought to herself. She hugged Colby tightly again and then continued.\n\n\"I'll tell you more later but basically she came to forgive me for what happened in high school,\" Suzanne said. \"And ...\" she trailed off. It was still hard for her to say some things aloud. She swallowed. \"And she said that I needed to forgive myself too, and stop punishing myself for what happened,\" she said in a shaky voice. It got even quieter as she continued. \"I need to stop hurting myself.\" Her deep brown eyes looked into Colby's.\n\n\"Good advice,\" Colby said. Her own eyes started to fill with tears. \"Can you take it?\" she asked.\n\n\"Yes, I think so. I want to,\" Suzanne replied. \"I don't want to just do it for you. That's part of it. I want to be worthy of your love, Colby. It's not enough though. I want to feel like I'm worth it, just for myself. So I am going to work hard at letting the ghosts go, not just Chloe but my parents too.\"\n\nSuzanne wiped the tears from Colby's face. \"You know what else she told me?\" Her eyes mirrored the smile that came back to her face. \n\n\"What?\" Colby said as she struggled to stop the tears. It was hard after holding back her emotions for so long.\n\n\"She told me she heard about an incredible woman who loved me; and that I should stop pushing her away and let her love me. She told me I was worthy of you,\" Suzanne told Colby.\n\n\"You are,\" Colby said as she kissed Suzanne again. This time is was longer. Suzanne clung to her as their tongues danced again. More than the first time, Suzanne was aware of the feeling of Colby pressing against her. The first prickling of arousal ran through her body. She could tell that Colby felt the same way. Her hardening nipples pressed against Suzanne.\n\nWhen the kiss ended, both of them were short of breath. Suzanne could see the fire of desire in Colby's eyes. It was new and stoked her own excitement. She wanted to throw Colby onto the bed and pull off her clothes.\n\nWanting the exact same thing, Colby forced herself to think clearly. \"Sweetie, we've waited this long, so we can wait a little longer. We need to take Jillian to dinner. In fact, I'm starved too. We walked a lot today and only had a little bite to eat.\"\n\nSuzanne made a little growl of desire. Colby smiled. \"I like that sound. I hope I inspire it a lot,\" she teased. Suzanne blushed and made a visible effort to calm down. \n\n\"You will. I expect that now that it's out there, you will find me easy to turn on,\" Suzanne said. That triggered a thought. She felt nervousness return. \"We need to talk about work.\"\n\n\"Yes, but not tonight. It will be okay, Suzanne. I promise,\" Colby told her.\n\n\"Okay. I'm going to believe you,\" Suzanne said as she reluctantly ended their hug. She looked at the door. \"I want to be open with your friend. Is that okay?\" she asked.\n\nColby smiled. \"Of course. In fact, I am glad she is the first one to see us. She keeps telling me to be happy.\" She looked at Suzanne and the love was evident in her eyes. \"And I am so very happy, Suzanne.\" Her smile grew a little impish. \"Plus I'll make her eat her words,\" she thought to herself. She held out her hand. When Suzanne took it, Colby opened the bedroom door and went out to face Jillian. ",
        "\"I probably should have told Suzanne to fix her lipstick,\" Colby told herself. \"Come to think of it, I probably should have checked my face.\" It was too late. Jillian caught sight of them coming out of the bedroom. Between Colby's hair being mussed up and the lipstick smudged around both of their lips, it was clear that things had changed.\n\n\"Oh,\" Jillian couldn't prevent herself from saying.\n\n\"Yeah,\" Colby said with a grin best described as shit eating. Tugging on Suzanne's arm, Colby pulled her close and leaned into her. How good that felt showed on Colby's face, especially when Suzanne returned the pressure.\n\nNoticing the open bottle of wine, Suzanne reluctantly let go of Colby's hand to grab another two glasses. After pouring, she handed one to Colby and then picked up the other. Raising her glass, she looked at Colby as she made a toast.\n\n\"To new beginnings,\" Suzanne said. Her eyes shone as she took a sip of the red wine. Colby needed to first control the grin on her face before she could take a sip of her own. When she finally took a sip, both she and Jillian echoed Suzanne's toast.\n\n\"It's so nice to meet you, Jillian. Colby's been excited about your visit for a while. I've heard a lot about you,\" Suzanne said.\n\n\"Mhmm. I hope it was more accurate than what I was hearing about you,\" Jillian said, managing to keep any expression off her face. Her attempt at remaining impassive failed, as Colby turned completely red from the look Suzanne gave her. Jillian started chuckling, but after a moment, she grudgingly went on. \"Maybe she was more correct than I thought. She assured me that you just needed time.\"\n\nHearing that gave Colby enough confidence to look Suzanne in the eyes. \"Which I also told you I was willing to give her,\" she said to Jillian though she never took her eyes off Suzanne's face. At the same time, she offered no hint of apology that she told her friend about their relationship.\n\nAny tension evaporated as Suzanne pulled her close. \"It wasn't just time I needed. Your unfailing love and support helped me to get here. Without it, I'm not sure I could have heard Chloe, or maybe even faced her.\" In the dark thoughts that still held some sway in her mind, she knew that without Colby she might not be alive. Rather than pushing the thoughts aside the way she normally did, Suzanne acknowledged them. \"She made me want to live again,\" she thought. \"That isn't me anymore.\"\n\nAt Jillian's raised eyebrow, Colby shook her head. \"Not now,\" she thought and Jillian seemed to get the message. While she told Jillian much of Suzanne's story, she didn't need all the details. Suzanne letting go of the past was what mattered, and it was clear to Jillian that had happened.\n\n\"Maybe I should go get dinner by myself,\" she suggested to the two women who were both figuratively and literally wrapped up in each other. \"You two want to be alone.\"\n\n\"Yes we do,\" Suzanne said with a smile, \"but nonsense! We have all the time in the world to be together. I want to go to dinner with my girlfriend's college friend. She's heard all about my life, but that has distracted me from getting to know her life.\" \n\nHearing Suzanne call her girlfriend put a huge smile on Colby's face. \"Not so fast,\" Colby said. \"I want to take my new girlfriend to her bed and show her another way to use it besides sleeping.\" She looked up at Suzanne and added, \"Please.\" Her pleading tone was so exaggerated that it was obviously mostly for Jillian's benefit.\n\nWith a smile almost as big as the one Colby was trying to suppress, Suzanne shook her head. \"Nope. And she's staying at your place; so, I guess tonight you will have to stay there.\"\n\nNow Colby's face really did fall. The look she gave Jillian was priceless. It was a combination of crushing disappointment and accusation, as if Jillian did this on purpose. Despite the fact that the situation was more Suzanne's responsibility, she didn't get any of the accusatory glare when Colby looked at her. It was just the longing actually to be with Suzanne after her long wait.\n\n\"Awww, honey,\" Suzanne said as she hugged Colby against her. That helped. It was the first time Suzanne used any type of endearment with her. It felt nice, as if it made things more real. In addition, when Suzanne pulled her close like that her head fit perfectly just above Suzanne's breasts. They weren't large but Colby felt them fill the space next to her neck. She playfully stretched her neck, knowing that it would brush against them.\n\n\"If I can't sleep with her tonight, I'm going to tease her so that she suffers as much as I will,\" Colby thought to herself. From Suzanne's little shiver, Colby suspected it would be easy to succeed.\n\nIt was not long before they finished their wine and headed out to dinner. As Suzanne went and got her coat, Colby watched her. \"She looks so lovely,\" Colby thought. \"I wish I'd known so I could have dressed up for her.\" It couldn't be helped, though. There was no way she could have anticipated the change. \"Thank you, Chloe,\" she whispered.\n\nAs Suzanne pulled on her coat, her eyes were on Colby. \"She's so cute,\" she thought to herself. \"Even when she is just dressed for a day sightseeing, she catches the eye. Those low cut jeans fit her perfectly and that mock turtleneck hugs her curves just right. I have to make an effort but she looks good without even trying.\" Her thoughts drifted for a second to Chloe. It was still hard to avoid the feeling of guilt, but she almost managed. What was easier was retaining the feeling of relief Chloe's forgiveness brought. If anything, it was stronger now than when Chloe was there. Accepting it was getting easier, as was truly forgiving herself. \"Thank you, Chloe,\" she thought.\n\nAs they walked to the door, Colby linked arms with her. It wasn't unusual for two women to walk that way and not have it mean anything more than friendship. No one could think that about Colby and Suzanne. The love there was obvious. Jillian shook her head as she followed them out. Her readiness to defend her friend was still there. She wasn't completely convinced that this lovely woman with so many problems was right for Colby. \n\nIt didn't matter. \"She won't hear anything I say tonight,\" Jillian told herself. \"I will just try and be happy for her.\" It's what friends did. Support them and then help pick up the pieces if needed. \n\nIt was hours later when they finally headed home. Colby smiled at the thought of Suzanne's apartment as home. It was unstated, but she knew both of them expected they would move in together. She already slept over at Suzanne's much of the time, and it was a much nicer apartment. As the door opened, Tuptim greeted them. She smiled and scooped her up. \n\n\"Hi there, Tup,\" Colby said as she scratched her ears. \"I know I said I wouldn't be back but my friend Jillian told me to come over here for the night. So I'm back!\" Colby talked to the cat but her eyes were on Suzanne. She couldn't keep the smile off her face.\n\nDinner was wonderful. Suzanne picked one of the famous Seattle seafood restaurants. Coming from the Midwest, it was a new experience for Jillian to eat freshly caught salmon. While she loved that, Jillian was less enthusiastic about the oysters on the half shell. Suzanne had introduced Colby to them months before and she was now a connoisseur of them. She managed to get her friend to try a couple, but the most Colby could get out of Jillian was that they \"were less disgusting than she expected.\"\n\nWhile the food was good, it was being with Suzanne that made it special for Colby. The only time she ever saw Suzanne acting upon her sexuality was the trip back East. Even after she accepted herself, Suzanne didn't go out with anyone. She might look at attractive women, but they were casual glances that anyone might make. \n\nTonight was completely different. The fact that the two of them were together was unmistakable. Beyond the frequent touching, there was a degree of intimacy present. Normally that would have meant that they were already lovers. Despite some remaining underlying concerns, Jillian enjoyed watching the two of them. Sometimes while Colby spoke, Suzanne would get a look in her eyes that revealed just how she felt. The sparkle of adoration would catch Colby's eyes and whatever she was saying got lost. She would shyly smile and lean over to kiss Suzanne. Whether it was because of Jillian or just being in public, Suzanne returned them but did not allow the kisses to go as far as Colby wanted.\n\nWhen dinner ended and the three of them continued talking, Colby moved closer to Suzanne and leaned her head against her shoulder. She looked so content that some of Jillian's remaining doubts disappeared. When they were finally done with dinner and ready to leave, Jillian looked at Suzanne.\n\n\"As much as I would enjoy torturing Colby, I think I should drop you both off back at your apartment,\" Jillian said. She had a wry smile. \"God knows, I don't want the two of you in the same apartment I'm sleeping in. No matter how quiet you tried to be, I'm pretty sure you would keep me up all night.\"\n\nColby tried to protest, but not too hard. Now a little while later, the two of them were alone. Suzanne moved closer to Colby. There was more than a little nervousness about her. Letting Tuptim slip out of her hands and onto the ground, Colby reached up to stroke Suzanne's cheek. \n\n\"Hi there,\" Colby softly said.\n\nSuzanne pressed her face against Colby's hand. \"Hi yourself.\" Putting her arms around Colby's waist, she pulled her close. At first, she was gentle, but as the moment went on the hug got tighter. Suzanne never let herself think this would really happen. She closed her eyes and savored the feeling of Colby's soft body against hers. She felt Colby's arm reach up and go around her neck, squeezing her just as tightly as she hugged Colby. She pressed her cheek against the top of Colby's head.\n\n\"It feels so right,\" Suzanne whispered.\n\nCraning her head back to look into Suzanne's eyes, Colby nodded. \"It is right,\" she said. She looked so happy. \n\n\"Her face is lit up like she was glowing,\" Suzanne thought. Mostly, however, it was her lips that caught Suzanne's attention. She needed to kiss them. Up until now, all their kisses were full of love and caring. She didn't want that type of kiss now. Suzanne felt raw sexual arousal letting loose inside her. She lowered her head until their lips touched. There was nothing gentle in the kiss. \n\nSuzanne's mouth opened as she pressed down against Colby who matched Suzanne's desperation. As soon as Suzanne's tongue touched Colby's lips, she sucked it into her mouth. Colby's arms tightened as she pulled herself up against Suzanne's body. The two tongues danced with each other with forceful thrusts. Colby couldn't hold back a long moan, which only served to excite Suzanne more. Her hands moved and grabbed Colby's rounded ass, pulling the two of them closer. Already, she could feel how excited Colby was. Her hips were moving without conscious thought, grinding against Suzanne's leg.\n\n\"Fuck! Suzanne, take me to bed! Please!\" Colby gasped as she pulled away from the kiss for a second or two. \n\n\"Oh, God! Yes!\" Suzanne desperately replied. The kiss continued and deepened. As much as they wanted to get to bed, neither one of them wanted to stop kissing either. They slowly moved sideways towards the bedroom.\n\nLike any good cat, Tuptim wanted to be with the two people she loved. She pranced in front of them, completely getting in their way. After the second time that Suzanne accidentally kicked her, Colby burst out laughing. She looked down at the cat and her completely offended look. \n\n\"Tup, your mommies don't have time for you now. Mommy Suzanne is going to fuck the shit out of Mommy Colby! If you get in the way of my getting fucked, you get no sympathy!\" Colby said to the cat as she pushed her out of the way with a foot. Even still she knew better than to shut Tuptim out of the room. When it came to letting Suzanne know she wanted in, Tuptim seemed to be able to scratch at the door forever. Nevertheless, as Colby ripped off her clothing, she managed to toss the pieces down so that they only barely missed Tuptim. After her jeans landed an inch from Tuptim's tail, she seemed to get the message and left. It was either that or her dignity was offended. Whichever way, they were left in peace.\n\nLooking over at Suzanne, Colby took the time to admire her girlfriend. She had been more careful in getting undressed, although she did it just as urgently. It wasn't the first time Suzanne was naked in front of her. A few times when she was taking care of her, Colby got Suzanne ready for bed since she did not seem capable of it on her own. Seeing her then was never like this. No longer did Colby protect herself with the armor of just taking care of a hurting friend; now she was free to marvel at Suzanne's beauty without holding back.\n\nStill even as she saw her beauty, Colby recognized how fragile it was. Suzanne's long body was too lean. The tragedy of it squeezed her heart. As a model, Suzanne might have fit in with long legs that drew her eye, but the knees were a little too obvious in comparison to the size of her thighs. She had that flat stomach that every woman wanted; at the same time, the sharp edges of her hipbones and rib cage were evidence to how she had neglected herself. What made it worse was that Colby knew she had gained some weight. It was worse before.\n\n\"I helped,\" Colby thought to herself. \"I helped her start down the path to recovery, and I will make her fully healthy,\" she promised. \n\nStill it was the beauty of her face and her smile that Colby saw the most. They filled Suzanne with a liveliness that was usually absent. Maybe she wasn't all the way back physically, but emotionally it was like night and day. Someone else, someone like Jillian, might just see the damage and warn Colby away. Having been there at the depths, she could see how far Suzanne had come. There was further to go, but Suzanne would get there. Now that they were being honest with each other, Colby had no doubt about it.\n\nTaking a few steps, Colby jumped onto the bed. \"Come here, you sexy thing,\" she said in a throaty voice. It was a tad chilly in the room, but she knew that wasn't the reason for her goose bumps. She watched as Suzanne covered the distance to the foot of the bed in two long strides. \n\nClimbing up the bed on her hands and knees, Suzanne licked her lips as she looked at Colby's luscious body. Her big breasts fell a little to each side and Suzanne looked forward to discovering how each one felt. Her raspberry red nipples were hard and jutting out. They reminded her of gumdrops. As soon as she was close enough, her head dipped down to take one into her mouth. Somehow, it actually tasted of Colby, as if her skin tasted just like she smelled. It was warm in Suzanne's mouth and as she scraped her teeth against it, she both heard and felt the reaction.\n\n\"Ohhh, fuck,\" Colby hissed as she arched her back up, pressing her breast against Suzanne's mouth. Pulling back, Suzanne stretched the nipple and was rewarded with a shudder that ran up and down Colby's body. After being with Piper, she was sure she could please Colby. Getting confirmation was still nice. She let the wet little nub slip from between her teeth, only to be caught again by her lips. This time when it popped loose, she noticed Colby's whole breast jiggling.\n\n\"So unlike mine,\" Suzanne thought. With almost no breasts, she loved the feeling she got playing with Colby's big ones. Taking them in both hands, Suzanne pushed them together. She smiled at Colby. \"You've got boobs!\" she said in a voice that was both teasing and admiring. \"You've got great big boobs!\"\n\nThat made Colby laugh. \"Yes, I do. I couldn't stop them ...\" she said, trailing off into a gasp as Suzanne began to flick her tongue back and forth between the nipples. Each little flick was like a tiny jolt of electricity through her body. Colby found it hard to think as she felt Suzanne suck a nipple into her mouth and start to swirl her tongue around it. \"I ... I think ... fuck ... you like my ... big ... boobs,\" she managed to get out. \n\nRather than saying anything more, Suzanne showed her answer by closing her teeth around the hard nipple and capturing it while her tongue flicked at it. She began to pull back, letting her teeth scrape against the rough skin. The sound of Colby groaning was confirmation of how good it must feel. Letting go, Suzanne switched to the other nipple and gave it the same treatment. She felt Colby's hands sliding into her hair and pulling her head down as she arched her back at the same time. It forced her breast further into Suzanne's mouth.\n\n\"Shit! Oh fuck,\" Colby continued to mutter obscenities as Suzanne found the most sensitive spots. Her excitement built each time Suzanne switched breasts. She seemed to know just how long to stay to avoid it being too much. Colby wasn't arching her back anymore. It wasn't necessary, though she still held Suzanne's head tight against her breast. Instead, her hips were lifting up to rub against Suzanne's belly. The smell of her excitement was filling the room. As Suzanne shifted positions, Colby coated another spot with her pussy juice. The overwhelming smell drew Suzanne's attention away from Colby's big tits.\n\nColby watched as Suzanne lifted her head. There was a little thread of spit that went from her mouth to the shining wet nipple. The raw passion in Suzanne's eyes sent a shudder through Colby's body. Licking her lips broke the thread, but only added to how erotic Suzanne looked. Her lithe body wiggled as she moved downward. A tiny portion of Colby's mind noted just how thin Suzanne was, but instantly reassured herself that things would be better now. It was a long time coming, but she was finally healing.\n\nEven though she desperately wanted to get to Colby's pussy, Suzanne took her time. She made a trail of kisses down Colby's belly. Colby's hands stayed on her head, but didn't press as they had when Suzanne played with her breasts. For now, she was content with caressing Suzanne. The moans became soft little mutters in response to the light brushes of Suzanne's lips; though when Suzanne dipped her tongue into Colby's belly button, Colby couldn't help a loud gasp.\n\nFinally, Suzanne was at her destination. She looked down at Colby's pussy. The lips were puffy and wet. Unlike Suzanne, Colby kept her pussy bare. It was completely smooth, different from either of the two pussies Suzanne had licked before. Whether or not Colby knew how much her hips were thrusting up was not clear. There was no doubt, however, just how desperate she was for Suzanne to eat her. She was pushing Suzanne's head now, trying to get the satisfaction she needed. \n\nDespite the pressure, Suzanne held back. Finding Colby's large clit protruding from between her pussy lips, she lightly blew on it. That elicited a long moan. \n\n\"Oh, please! Suzanne, don't tease me! I want your mouth on me,\" Colby whined. Her hips lifted up until her pussy was almost against Suzanne's lips. Moving her head forward just enough, Suzanne's tongue flicked out. It brushed against the shell of Colby's pussy. The spasm that went through Colby's body caused her to collapse back on to the bed. Before Colby could gather the strength to lift her hips up, Suzanne swooped down and pressed her face into her lover's needy pussy.\n\n\"Fuck!\" Colby moaned as Suzanne moved her face from side to side, worming her way in deeper. She felt Suzanne's tongue extending, gently pushing into her wet pussy. As Suzanne swirled it around, Colby cried out again and pulled Suzanne's head against her mound. As much as Colby wanted her deeper, it just wasn't possible. Suzanne couldn't get her face any further in than she already was.\n\nAt first, Suzanne's tongue was slow and gentle. Colby was already worked up and could have cum quickly with only a little help from Suzanne. That wasn't what Suzanne wanted. She wanted to drive Colby to new heights. The first orgasm she gave her needed to be massive. \"I'll enjoy trying to surpass it,\" Suzanne thought to herself.",
        "Swirling her tongue inside Colby's dripping pussy, Suzanne began to move it back and forth. The flowing juices filled her mouth so much that she had a hard time swallowing it all. It dripped off her chin and then down her neck. A wet spot formed on the bed. Suzanne loved the feeling of being marked by Colby's love juices and it added to her own excitement. As much as she wanted to hold back, she couldn't. She began to flick her tongue back and forth, extending it as far as it could go into Colby's pussy.\n\n\"Oh god, yes! Like that, Suzanne!\" Colby cried out. She rotated her hips as she ground down against Suzanne's face. Her body tingled when Suzanne accelerated what she was doing. \"Oh, fuck!\" she called out again and again. Her mind was starting to fade out as waves of pleasure hit her. Her head thrashed back and forth. The tingling grew more intense. She no longer knew just how hard she was pulling on Suzanne's hair. It was something that consciously she never would do. In the heat of the moment, she kept doing it. Not that it mattered; Suzanne kept on driving her tongue into Colby. She wasn't any more aware of it than Colby.\n\nFrom the way she pressed her face into Colby, the bridge of her nose brushed against Colby's hard protruding clit. Feeling it, Colby tried to rotate her hips so that she brought them together. Her hips snapped each time she felt her clit start to touch Suzanne. It felt so good. She moved her hips faster. The tingling was turning into a wave. Colby felt herself on the top of it as it broke over her.\n\n\"Fuuuuuuuuuck!\" Colby screamed. After that, her screams were incomprehensible. Her body arched up against Suzanne as she came.\n\nSuzanne rode her lover as she bucked and twisted. As much as it was possible, Suzanne kept her mouth pressed tight against Colby's pussy. Her tongue kept giving Colby pleasure, and extending the orgasm. With her mouth occupied, she couldn't talk, but in her head she urged Colby on. \n\n\"Unhhaaaahhhh!\" Colby groaned as she continued to feel the waves of pleasure crashing over her. Suzanne's tongue was fucking her, plunging in and out of her body. Her pussy spasmed and clenched as if trying to catch it. She still pressed down against Suzanne's face, but her body now moved all over the place. As much as she wanted Suzanne to keep going, at times her body jerked so that she lost contact with it. Each time, Suzanne eagerly followed and planted her face back where she belonged. \"Yessss!\" Colby cried out as she felt Suzanne slip into place.\n\nJust when it seemed that Colby was starting to slow down, Suzanne changed her tactics. Her tongue moved out of Colby's pussy. For a second, Colby let out a groan of frustration. It only lasted long enough for Suzanne to put her lips around Colby's clit. Gently sucking it into her mouth, Suzanne flicked her tongue over it. The direct contact caught Colby by surprise. For a moment, her body arched almost without movement. And then as Suzanne's teeth lightly bit down and vibrated her tongue against the hard clit, Colby screamed. A whole new wave of orgasm rushed over her. Her body uncontrollably shook. Her eyes rolled back into her head. With her feet flat in the bed, Colby arched her body even higher before collapsing. Completely out, her body continued to shake and twitch from the orgasm for a couple of minutes.\n\nIt almost took Suzanne that long to realize that Colby wasn't conscious. Licking up every drop of Colby's nectar occupied her attention. Suzanne felt Colby's body twitching as she did so, but after a long silence she lifted her head up to look at her lover. Colby's face was still enough to frighten Suzanne a little. She scrambled up to hold her.\n\n\"Colby? Hey Colby, are you okay?\" Suzanne said as she shook Colby gently. At first, there was no response. She shook a little harder, and finally Colby moaned and moved a little. A few moments later, her eyes fluttered open.\n\n\"God,\" was all Colby could manage to say before closing her eyes again. One arm limply flopped over Suzanne in an attempt to embrace her. It was more like a dead limb, without the slightest bit of strength left. Even now, there were little nerve firings from the aftermath of the two orgasms. Slowly she felt a little strength begin to return. Reaching up, she caressed Suzanne's shoulder as she opened her eyes again. \n\nColby smiled as she looked at the woman she loved. A new side to Suzanne was revealed. For most of the time she knew her, control was Suzanne's watchword. Ever worried about someone seeing through the mask she wore, Suzanne kept as tight a grip as she could on her emotions. Over time, Colby broached her defenses and saw more of that side to Suzanne than probably anyone else saw. \n\nThis was completely different. Lust filled was the only way to describe it. Suzanne's eyes shined bright as she gazed at Colby. Her face glistened with all of Colby's juices. As she watched, Colby saw her tongue snake out and gather up some of it. \n\n\"Mmmm,\" sighed Suzanne. \"Fuck, you taste good,\" she said with a big grin. \n\nAll of a sudden, Colby recognized the true difference. \"She's alive,\" she thought. \"She is more alive than I've ever seen!\" The realization reverberated through Colby's body. There might be bad moments in their life together, but for the first time in months Colby felt free of the nagging worry. The fear that Suzanne would kill herself slowly began to fade away, replaced by an anticipation of their life together.\n\nAs she watched Suzanne clean another corner of her lips, Colby felt her own desire spike. \"It's time to return that pleasure you gave me!\" she said with a thick voice. \"I want your pussy!\" She smiled in a predatory way that made Suzanne shudder.\n\nAlthough Suzanne hid it well, the reason for her shudder wasn't just excitement. Without a doubt, there was plenty of that. At the same time, it was still hard for her to forget what happened with Piper. \"I feel better, but what if I react the same way,\" she worried. \"I'll fuck up the best thing in my life.\" Suzanne's eyes closed as she tried to force away the worry.\n\nWhen she felt a touch on her shoulder, Suzanne jerked and her eyes opened. Colby's face was much closer. The gentle loving smile that made Suzanne feel so good was back. \"I love you, Suzanne. And you deserve it. I know what a wonderful person you are. It's time for you to be okay with happiness.\" She leaned a little further forward and kissed Suzanne. It was soft at the start. With first Colby's and then Suzanne's lips moving together in tiny kisses, it took time to build. As Colby began to open her mouth and kiss one of Suzanne's lips and then the other, she could feel Suzanne tremble. Sucking on Suzanne's lower lip, Colby pulled on it. Suzanne's response was a little sigh and a slight parting of her lips. Colby took immediate advantage and slipped her tongue into Suzanne's mouth. She could taste her own juices as she began to slide her tongue around. It explored every nook with delicate caresses. \n\nDespite deliberately avoiding any overt attempt to build the passion, Colby's approach fueled Suzanne's desire. She could feel the love in the way that Colby was treating her. It was not only about sexual need; Colby understood her emotional needs better than anyone. Suzanne's body felt on fire. Her pussy throbbed in time with the slow thrusts of Colby's tongue into her mouth. She felt her breath becoming heavier. She couldn't wait any longer. Suzanne pulled away from the kiss and looked Colby in the eyes.\n\nBefore she could say anything, Colby spoke. \"I love you, sweetie,\" she told Suzanne once again. \n\nAnother time, Suzanne might have cried. The love was evident in Colby's voice, and in the way she said the words with slow emphasis. Right now, however, Suzanne had other thoughts. \n\n\"I know you do. I love you too. Please show me how much, Colby,\" Suzanne replied in a voice that was full of lust. \"God, make love to me, Colby!\"\n\n\"I was hoping you'd ask!\" Colby said with a lustful grin of her own. Patting the pillow beside her, she waited for Suzanne to move up next to her. Suzanne eagerly scrambled up and onto her back. Already her hips were lifting slightly, betraying just how excited she was. Colby leaned over and kissed Suzanne again on the lips. Her tongue flicked in and out a few times before she moved on. \n\nSlowly, Colby began to work her way down Suzanne's body. Her lips gently kissed down Suzanne's neck, each kiss accompanied by a gentle nibble. The little sighs that Suzanne made encouraged her. As she reached the shoulder, Colby took the time to kiss along it while one hand stroked Suzanne's arm on the other side. Moving her head back to the base of Suzanne's neck, Colby spent some time playing at the notch there. Her tongue circled inside it, followed by kisses. Suzanne's moans made it clear how much Colby's attention excited her. Her eagerness for Colby to do more was obvious.\n\nJust as Suzanne loved playing with Colby's much bigger breasts, Colby was fascinated by Suzanne's flatter chest. In comparison, Suzanne's nipples were much longer and seemed much more sensitive. Holding a breast in her hand, Colby ran a thumb over it and lightly pushed the nipple to the side. It caused a sharp inward gasp of air by Suzanne. As she pushed it the other way, she heard a long hiss as Suzanne arched her back up. \n\nColby's eyes looked up at Suzanne. She was biting her lip as she looked back with half lidded eyes that burned with lust. Keeping contact with Suzanne's eyes, Colby lowered her lips to the erect nipple and closed them around it. As she made contact, she saw Suzanne's eyes roll up into her head and then close with ecstasy. \n\n\"Yesssss!\" Suzanne whimpered in a low voice. When Colby ran her tongue around it, she did it again, only longer. Opening her mouth a little, Colby scraped her lower incisors against it. Suzanne could feel each little bump as her lover dragged her teeth against the sensitive nub. \"Fuck ... fuck ... fuck,\" Suzanne said without even knowing she did it. \n\nColby couldn't keep the smile off her lips. She loved that she was taking away Suzanne's tight controls. \"She's so tightly wound; this is good for her,\" she told herself. \"If she can't think, then she can't get nervous.\"\n\nMoving over to the other nipple, Colby gave it the same treatment and provoked the same reaction. By now, Suzanne's hips were thrusting up with some force. Lifting her leg, Colby carefully inserted her thigh between Suzanne's parted legs. She immediately felt a shudder run through her lover's body as she pressed her mound against Colby. Her juices quickly coated Colby's thigh, making her pussy slide even more easily. Pressing her thigh down, Colby smiled at the reaction as she lightly bit and pulled on Suzanne's nipple.\n\n\"Oh, fuck. Yes, Colby,\" Suzanne exclaimed. She reached down to press Colby's head against her breast. \"I haven't felt like this in so long, not since ...,\"she thought to herself. Just as an image of Chloe started to form, Colby ground her thigh hard against Suzanne and banished any thoughts but the pleasure she was getting. The tiniest bit of anxiety that began to form vanished. All that mattered were the feelings of delight. They quickly built. Her hips thrust up against Colby's thigh with increasing force and frequency.\n\n\"Colby, I love you! I love you, baby,\" Suzanne babbled as she felt her orgasm begin. A wave of pleasure wiped any thought other than how much she cared for Colby. She screamed it out, \"I LOVE YOU!\"\n\nAs Colby rode Suzanne's thrashing body, she ground her thigh against Suzanne. Moving from one nipple to the other, she continued to suck and bite on them. Both of Suzanne's hands were on her head now, pulling Colby against her. Her leg felt soaked as Suzanne's cum gushed all over it. The smell rose up and enveloped both of them. Finally, Suzanne arched one last time and then collapsed with another scream. She lay in a heap, making tiny moaning noises and her body shook with the aftershocks. Her hands fell down onto Colby's shoulders, no longer applying any pressure. They just lay there as limp as the rest of her body. \n\nWiggling her body upwards, Colby wrapped her arms around Suzanne and gave her a soft kiss. \"I love you too, Suzanne,\" Colby told her. Her eyes sparkled. She adored the idea that she caused the normally under control Suzanne to scream out her feelings in the midst of passion. Suzanne blushed as she weakly smiled. \n\n\"I guess our neighbors will just have to get used to it, if you are going to keep doing things like that to me,\" Suzanne said. The words were bold, but they caused her to get even redder and she buried her face against the side of Colby's neck. \n\nColby couldn't help laughing in delight. \"They are going to have to! I plan on making you scream a lot, sweetie!\" Suzanne peaked out at her from where she was hiding her face and gave a little nod. The feeling of love that came over Colby almost overwhelmed her. There were moments when she despaired they would ever be like this. \"This feels better than I ever imagined,\" she thought.\n\nSliding her hand behind Suzanne's neck, Colby gently pulled her head close enough to kiss. The urgency from earlier was gone. Both of them still felt the afterglow of cumming. Their kisses were slow and leisurely. Each kiss was different as first one of them discovered something that delighted the other, followed by the other finding something new. Whether it was how Colby loved the feeling as Suzanne traced her jaw line or Suzanne enjoying the way their tongues wrestled, it felt timeless for both of them.\n\nEver so slowly, their passion rebuilt. Suzanne was beginning to brush the side of Colby's breasts with the back of her fingers when Colby pulled away with a little gasp. There was a happy little smile on her lips as she looked at Suzanne. \n\n\"No, no, no!\" Colby said. \"If you do that, I'll get too excited. It's still your turn. I want to eat your pussy, my wonderful Suzanne.\" Her eyes took on a determined glint. \"I am going to eat your pussy now.\" Even though she could tell Suzanne wanted to argue, Colby saw how her words affected Suzanne. Her eyes widened and her breath started to quicken. \"I love this side of Suzanne. It's great, if unexpected,\" she thought to herself.\n\n\"You would like that, wouldn't you?\" Colby said. \"You would like to have my tongue between your legs, licking you.\" She paused, almost imperceptibly, before continuing. Still, she felt a tiny shiver go through Suzanne at that moment. \"You want me to lick your pussy, your wet pussy.\" She kissed Suzanne lightly before looking her in the eyes. \"You want that, don't you?\"\n\nLicking her lips first, Suzanne nodded. It wasn't good enough for Colby.\n\n\"Tell me what you want, sweetie,\" Colby said in a husky voice.\n\n\"I want you to lick me,\" Suzanne answered. Her breath was coming faster and her eyes revealed the lust Colby was inspiring.\n\nColby pressed her lips against the side of Suzanne's neck and slowly kissed her way up to her ear. Baring her teeth, she grabbed ahold of the dangling lobe and tugged on it. Letting go of it, she whispered into Suzanne's ear. \"Sweetie, what do you want me to lick?\"\n\n\"My pussy. Colby, lick my pussy, please!\" Suzanne responded. \n\nNot quite done, Colby whispered again. \"Your wet pussy? Your wet ... horny ... pussy?\"\n\n\"Fuck!\" Suzanne exclaimed. In a few short minutes, Colby took her from a vague arousal to her body being on fire. She was aware of how her body was grinding against Colby. She just couldn't remember deciding to do it. \"Yes! Yes! I need you to lick my wet, horny, pussy. Fuck, Colby! Stop teasing me and make me cum!\"\n\nColby laughed and craned her head so that she could kiss Suzanne on the lips again. Suzanne returned for a moment before pulling away. \"Now, no more delays! You wanted to turn me on! You succeeded! Make me cum!\"\n\nUnable to help herself, Colby laughed again, but that didn't stop her from getting on her hands and knees to work her way down. She began to kiss Suzanne's nipples but felt her head being pressed further downward. \n\n\"No! Not my nipples! I want your tongue on my pussy!\" Suzanne said in mock petulance. \"I want it in my wet, horny pussy!\"\n\nColby's laughter died away. Suzanne's excitement was infectious. She could feel her own pussy throbbing as she got in between Suzanne's spread legs. Her pussy gaped open, glistening with all the juices dripping out of it. Taking a deep breath, Colby could smell it. Her hunger for Suzanne jumped. \"God, I want to lick it as much as she wants it,\" Colby admitted to herself.\n\nMoving a little further down, she positioned herself right above Suzanne. As if offering herself to Colby, Suzanne lifted up her hips. Carefully looking up at her love, Colby lowered her mouth. The moment that she touched the swollen lips, Colby watched as Suzanne's eyes fluttered for a moment before rolling up. A tremor ran through Suzanne's body. \"Oh fuck, yes,\" she hissed.\n\nAfter that, Colby focused on what she was doing. She didn't need to watch Suzanne to tell if she was enjoying it. The way that she lifted her hips to grind her pussy told her everything she needed to know, as did the moans and increasing cries. Colby concentrated on just continuing to give Suzanne as much pleasure as possible, while getting her fill of Suzanne's delicious nectar.\n\nFlicking her lips up and down along Suzanne's slit gave way to gentle penetrations. From the way Suzanne pushed down with each light thrust, it was clear that gentle wasn't what she wanted. Colby began pressing her face in harder and extending her tongue further. Finding the places that seemed to have the most impact, she gave them more attention, which only served to drive Suzanne to new heights.\n\n\"Oh God, Colby!\" Suzanne cried out. \"What the fuck are you doing to meeeeee?\" The last word turned into a high-pitched squeal as she twisted on the bed. One hand pulled on the bed cover, wrenching it out from under the bed. Colby found it hard to keep her lips in place and wrapped her arms around Suzanne's thighs to secure herself in place. The steady stream of \"oh fucks\" coming out of Suzanne's mouth confirmed for Colby just how good a job she was doing. \n\nWhen Suzanne bucked up a little higher, Colby took the opportunity to get a little further underneath her. From her new position, her tongue pushed in deeper, and she curled it to stroke Suzanne's sensitive pussy walls. As she experimented, she caused little tremors that drove her crazy. Periodically moving away from it, the reaction was greater every time she returned. Finally, Colby held back and could feel the tension in Suzanne getting stronger and stronger.\n\nColby swirled her tongue one more time and then pressed it down hard, and after that Suzanne stopped thinking. Her orgasm broke over her without any warning. Flashes of pleasure stabbed outwards from her pussy. She gave out a long scream that just got louder and louder. Her hands flailed as her body thrashed about on the bed. Colby's grip on her thighs was so tight that her tongue never moved away from Suzanne's pussy. In fact, it pushed inside Suzanne even further, bringing another wave of pleasure that washed over her body.\n\n\"Oh, fuck! Yes, Colby! Oh my God,\" Suzanne screamed as she bent her body. Her legs desperately pulled Colby against her.\n\nColby eagerly used her tongue to fuck Suzanne's tight pussy. Streams of pussy juice flowed down her chin. She wanted to drive Suzanne crazy. After waiting so long, tonight needed to be special. \n\nFinally, Suzanne felt the orgasm begin to fade. The fog in her brain drifted away and she could think again. Her whole body felt limp, as if she had finished a race. Her hips sagged down onto the bed. One hand reached out to stroke Colby's head. Almost reluctantly, Colby stopped playing with Suzanne's body. Instead, she gave Suzanne's thighs light and loving kisses. She could feel them quivering, betraying just how weak Suzanne was at that moment. Lifting up her head, she looked at her lover. The look on Colby's face was unbelievably smug.",
        "\"Ready for more, sweetie?\" Colby asked, not entirely kidding. Suzanne looked satisfied, but Colby was happy to keep going. To emphasize her point, she gently kissed a little trail up alongside Suzanne's pussy. She felt a tremor run through Suzanne.\n\n\"You'd kill me, Colby,\" Suzanne said as her head fell back against the pillow. She tried to get her breath back. It was still hard. \"Come here, my love,\" she said with a smile. It was nice to say that.\n\nGetting up on her hands and knees, Colby made her way up. Her large breasts swayed with each movement. Just like Suzanne a little while ago, her face was wet with juices. Flopping down, Colby put an arm over Suzanne and offered her lips for a kiss. Suzanne pressed her own against Colby's with as much force as she could muster. When she felt Colby's tongue touch her lips, she opened her mouth to welcome it.\n\nSuzanne couldn't kiss for too long before she ran out of breath again. Her body was still limp, although it started to glow with a wonderful warmth. Part of it was the sheer exhaustion from cumming twice in succession; part of it just reflected the feeling of loving and being loved in return.\n\nSummoning up her strength, Suzanne lifted an arm and put it on Colby's back. \"God, I know I don't have a lot of experience but I've never cum like that before. I thought I might blackout.\" When Colby grinned from ear to ear, Suzanne laughed. \"Yes, you did good!\" she told her.\n\n\"Yes, I thought I did!\" Colby said, the smugness of her expression reflected in her tone of voice.\n\nColby wasn't as worn out as Suzanne. Beyond making love, Suzanne's day was more emotionally taxing than Colby's. She raised herself up on an elbow and looked at her girlfriend. \"I wanted you to feel all the love I have for you. I wanted you to cum like you have never cum before.\" She met Suzanne's eyes and added, \"I'd do anything for you, Suzanne.\"\n\nSuzanne felt a little prickle of tears as she looked back. \"I'm so lucky, aren't I?\" Before Colby could say anything, Suzanne put her finger against Colby's lips. \"Don't argue with me. What I mean is that you waited. You didn't have to. Not everyone would wait for me to pull my head out of my ass.\"\n\n\"Sweetie, I didn't have to but I wanted to. If you mean, it's lucky that I was the one who fell in love with you, then I guess so. I know I'm feeling lucky now,\" Colby said. Laying her head down on Suzanne's chest, she gave her a hug. \"So very lucky,\" she whispered. Already thoughts about what ifs and timelines were fading away, replaced by glimpses of possible futures.\n\n\"That is what I meant. It's lucky I found you, and didn't delay so long that I lost my chance,\" Suzanne said. She made a deep, contented sigh. The dreamy smile on her lips got a little broader. \"Fuck,\" she said. \"You made me cum so hard. You know you set a high standard at the start! I'm going to expect all my orgasms to be as big as that!\"\n\n\"I'll do my best!\" Colby said as she raised her head again. The cocky smile was back. When Suzanne caressed her cheek, Colby closed her eyes and rubbed against Suzanne's fingers. Her smile grew less cocky and more loving. She couldn't help her own deep sigh. When she opened them, they shone with the love she felt for Suzanne. \"I can't believe you are mine,\" she told Suzanne. \n\n\"I am. I'm yours as long as you want,\" Suzanne replied.\n\nTaking Suzanne's hand in hers, Colby spoke again. \"Forever. I want forever.\"\n\n\"Forever it is,\" Suzanne said, nodding. Raising Colby's hand to her lips, Suzanne gave it a little kiss. She felt a contentment that was alien to her. Even when she was with Chloe, the feeling of foreboding was usually there. It always tainted the happiness. For the first time, Suzanne faced the future confident that things would get better. More than that, the future looked good and full of happiness.\n\n\"I love you, Colby,\" Suzanne said as she started to feel the glow fading, replaced with exhaustion.\n\n\"Mmmm, I like hearing that. I love you too,\" Colby answered back. She was feeling her eyelids dropping as well. She reached over and flipped the covers over the two of them, at least most of them. A little of Suzanne's side was uncovered. It didn't matter. They were content, as well as too exhausted to do much more about it. \n\nNow that they were motionless, it didn't take long before they felt the thump of Tuptim jumping up and climbing onto Colby's back.\n\n\"Trapped by a cat! I guess I'll have to stay like this all night,\" Colby said with a laugh.\n\n\"Babycat, don't ever move. Keep Colby there forever,\" Suzanne told her cat. She gave Colby a long kiss and sighed as Colby's head laid down in her shoulder. Her fingers stroked Colby's back as she slowly felt sleep take her. It took longer than she expected because her brain was still going fast. \n\nHer problems were not all gone. Suzanne knew it didn't work that way. Right now, she was on the high from being with Colby for the first time. There would be bumps on the road. The biggest difference now was that she wasn't alone. \"As long as I'm with her, I think I can survive them,\" she thought. \"And now that I let her in, she is in for good.\" It was a strange idea, but Suzanne knew it was true. \n\nColby's breath became more regular, and it hissed just slightly as it passed between her barely open lips. The sound lulled Suzanne into a drowsier state. Just before she fell asleep, one last thought crossed her mind. \"I can't wait for tomorrow,\" she realized. She couldn't remember the last time she felt that way. She took a contented deep breath and then fell asleep in the arms of the woman she loved."
    ],
    "authorname": "-Ripley-",
    "tags": [
        "lesbian romance",
        "lesbian love",
        "lesbian novella",
        "romance novella",
        "cunnilingus",
        "coming out",
        "closeted",
        "love",
        "forgiveness",
        "healing"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/coming-to-grips-ch-04"
}