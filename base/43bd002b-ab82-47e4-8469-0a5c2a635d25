{
    "title": "It's a Dead Man's World Ch. 06",
    "pages": [
        "This is a LONG story. If you don't like long stories or stories driven by plot and characters rather than just sex, you might want to skip this one.\n\n-------- ----------------\n\nDisclaimer: The following story is a work of (hopefully) erotic fiction. If you are offended by graphic descriptions of sexual activities, please stop reading now. Any resemblance between the characters (living or dead) and any existing people is entirely coincidental. Please do not copy or redistribute this story without the author's permission.\n\nThis story originates in the fictional city of Springfield, California several hundred years in the future. You might want to check out Parts 1, 2, 3, 4 and 5 of this series for background and character introduction.\n\n--------------- ----------------------------\n\n{{ How the fuck can this be happening?!? }} Eliza shouted through the telepathic link. {{ I've only been on Terra for four hours! How can I have pissed someone off already?!? }}\n\n{{ It's your natural charm, }} Thug thought. The troll's mind always sounded so clear compared to his normal guttural language. {{ I've got the back door covered, }} he sent as he engaged his natural cloaking mechanism.\n\n{{ Terillia, do you see anything? }} Eliza thought, looking out the front window. She had come all the way home to Terra from Earth to see if she could help her father, who she wasn't even able to speak to civilly, and she and her band had been attacked before they had even settled in at her parent's palatial estate. She thought back to when her life was simple. She had been a vampire working as a high-priced security agent on Earth. But then the dimensional portal between worlds had been closed by a radical group of humans known as the Purity who wanted to keep the Terran and human races separated. Eliza and her crew had fought for a year, but had finally managed to help get the portal open again using one of eight \"Living Jewels\" known as The Dragon's Breath, but it had come at a price. She had lost a friend, her tech-guy Wyrm had lost an arm, her girlfriend had been tortured and then both she and Veronica had been transformed into an entirely new species called Hybrids by another Living Jewel called the Alchemist's dream. And after finding her way back home, she discovered that Terra had been dealing with its own separatist group called the Swords of Cleansing. But that hadn't been Eliza's primary concern. Instead, it was the somewhat cold response she got from her own father, the Security Director for the Southern Continent. But despite their differences, she had brought her entire crew of seven humans, two trolls, two Hybrids and a succubus back to Terra so she could help someone who could barely tolerate Eliza's presence.\n\n'Maybe things were never simple,' Eliza thought to herself. \n\nTerillia had jumped out of a tower window and taken to the sky. Succubae had incredible vision, easily better than any of the other sentient species and they could see just as well at night as during the daylight. She scanned the grounds of the estate. {{ You have got four on the street. Looks like they're keeping watch. Looks like another half-dozen moving through the yard. And there are two going in the back door. }} As she was looking down, the two intruders going in the back came flying back out the door and landed in crumpled heaps on the turf.\n\n{{ No, they're not, }} Thug thought.\n\nThe rest of the invaders didn't fare much better. Eliza drew fire from the main group with a series of lightning strikes while Tiny moved into ambush position. A few more poorly placed steps and two more attackers got slammed against the cobblestone walkway in the front yard. \n\n{{ Terillia, what are the guys on the street doing? }}\n\n{{ Nothing, }} the succubus returned. {{ They're just . . . standing there. They've got shield spells up. }}\n\nEliza didn't like this at all. Not that she normally liked getting attacked, but this was weird. {{ Just keep your eyes on them, }} she thought.\n\n{{ But I want to . . . }}\n\n{{Terillia, reconnaissance is one of the reasons I hired you, so do it! }} Eliza didn't like being harsh with the girl, but she didn't have time to play nice.\n\n{{ Got one, }} said Snake. He and Bear had caught one climbing in a window and broke its neck. Dennis and Allyson also got a double-team in after sneaking out front via another window and pummeling it into submission with garden implements. \n\n'What the hell . . .' Eliza thought. It was all too easy. 'Where's the magic these guys were using earlier? Why are they so easy to take . . .' Eliza's train of thought was cut off as one of the two remaining individuals who had made it onto the grounds saw her behind a hedge wall and started towards her. The person was moving fairly quickly but seemed to be approaching with a lumbering gate. Eliza was a bit baffled, which may have been the reason that she didn't see the last intruder approaching by using the same hedge she was hiding behind as cover. But Veronica saw, and she bolted out of the front door. Eliza concentrated and absorbed heat from the air around her target then used that heat in a single powerful blast that knocked the thing off its feet. It lay smoldering on the ground, twitching oddly. Then she saw Veronica charging, staring at something that Eliza couldn't make out. She took a sniff of the air. 'That's odd,' she thought to herself. 'Nothing. The only thing I smell around her is us. I don't even smell the bodies . . .' She took a step back. {{ Veronica what . . . }}\n\nVeronica wasn't thinking. Suddenly, the buzzing in her head that she had been experiencing from the moment she walked into the Terran dimension had reached a fever pitch. She extended her hands with the firm intention of bludgeoning this threat to her lover with her fists. Veronica normally was a little calmer than she was at the moment, even in a firefight. Part of being an envoy meant keeping her cool. She couldn't explain why, but she needed to let loose on something. \n\nThen something odd happened. The air between Veronica and her target began to shimmer and ripple, almost as if it were made of water. Then the intruder was blown off his feet, flying fifty feet through the air and becoming embedded in the wall of the coach house.\n\nDespite not being completely out of danger, Eliza just stared at the body. Then she stared at Veronica. The blonde Hybrid appeared a bit glassy eyed but strangely enough, she was smiling. \n\nVeronica felt . . . relief. The buzzing in her head was gone and she felt . . . pure. \"God, I needed that!\" she muttered to the empty air in front of her. Then she collapsed face first on the ground.\n\n-------------- ------------------\n\nA little while later . . .\n\n-------------- ------------------\n\nVeronica felt well rested when she finally awoke. She was lying on a large sofa in one of the estate's social chambers. Everyone from the team was standing around looking at her. Most of them looked confused, Eliza looked relieved when she saw Veronica awake, and Vicky just looked miffed. \n\n{{ Hey . . . hey guys, }} she group-thought. {{ Did we win? And thank goodness that fucking buzzing sound went away, }} she mumbled.\n\n{{ What buzzing sound? }} Eliza started.\n\n{{ When did you learn to do magic? }} Vicky thought.\n\nSuddenly, the telepathic teleconference was a mass of chitter chatter that was almost overwhelming. The excess mental noise made Veronica realize that her brain was . . . sensitive.\n\n{{ QUIET! }} she shouted. {{ What the hell happened? }}\n\nEliza sat down next to her and offered her some hot tea-like beverage. {{ You don't remember? You let loose a magic surge that pretty much obliterated one of those things. Sweetie, Vicky is right. Apparently, you're a bit of a sorceress now. }}\n\nVeronica just stared.\n\nEliza smiled slightly. {{ I guess when we got combined, you became my equal in EVERY way. }}\n\n{{ That's not possible, is it? }} Veronica was almost at a loss for what to think. {{ I thought you had to train for years . . . are you sure it was . . . Can I have something stronger to drink? }}\n\n{{ Not a good idea. You're power is very raw right now, so you'll need to keep your wits about you to control it. As for training, we go to the academies to learn to channel our energy and understand the rules of the world. No one knows why some people have magical power or why some have more than others. But you've got it and you've got it in spades. }}\n\nVeronica tried to let that sink in. Eliza assured her that now that the more wizened spell caster knew what was going on, she could help stop Veronica from hurting herself. The buzzing that Veronica had been hearing was a build up of magical energy that was agitated by all the emotional and physical turmoil she had undergone. Most sorcerers and sorceresses vented such energy harmlessly, as easily as most humans breathed. It was the first thing anyone with the gift was taught. Veronica tried turning the conversation to something else: the fight.\n\n{{ Fucking automatons, }} Eliza thought, glancing at Terillia.\n\nThe succubus looked concerned. {{ Automatons are golems . . . magical constructs made of whatever material the caster has available. They are fairly mindless, only able to perform very basic commands or 'programs.' They can be dangerous since they have no concept of self-preservation, but they do not respond well to anything outside their programs. But they do require a great deal of skill to animate. It was a tool developed by the gargoyles to use against the succubus in the Great War for Heaven a millennium ago. }}\n\n{{ That doesn't sound like a particularly potent weapon against a group like this, }} Vicky thought.\n\n{{ It wasn't a weapon, }} Boomer interjected. {{ It was a straw-man. }} When Vicky looked confused, he continued. {{ It's kind of like a straw-man argument . . . something weak that is thrown out there just to see how strong the response is. That wasn't an attack, it was an intelligence gathering operation, and maybe a warning. }}\n\nTerillia nodded. {{ The men on the street were simply there to cast the fireballs and observe our responses. They vanished after you obliterated their last drone. }}\n\n{{ Any chance they'll be back? }} Veronica asked.\n\n{{ I doubt it, }} Eliza said. {{ We have the local constable and her men patrolling the street. They may not like me, but they HATE the Swords of Cleansing and they're still a bit afraid of my father. Besides, these guys are smarter than the Purity was. They're not going to make as many mistakes. }}\n\nVeronica was feeling wiped out. {{ Listen, can I go back to the room? I'm feeling a little woozy. }}\n\nEliza helped her lover to her feet. She made sure everyone knew when they were to be on watch, then she escorted Veronica out of the room. The last thing Veronica remembered was hearing her sister Vicky's thoughts.\n\n{{ She graduates from college first. She forms her own species first. Now she's the first one in the family to have magical powers. This SO isn't fair . . . }}\n\n---------------- -----------------\n\nThe next evening . . .\n\n---------------- -----------------\n\nVeronica was sitting in a dimly lit room with a cool cloth on her forehead, waiting for the pain to go away. While the buzzing in her brain was a thing of the past, it had been replaced with a throbbing ache, much like you feel the day after you exercise a muscle that you haven't used in a while. She noticed Wyrm poking his head around the corner.\n\n\"C'mon in,\" she said weakly. \"Just don't say anything loud.\"\n\nWyrm grinned and flopped down on a strange, round chair that was across from her. \"Did I ever mention you're the coolest chick ever?\"\n\nVeronica raised her eyebrow. \"Hunh?\"\n\n\"I mean, you just keep getting tougher and tougher. Pretty soon, they'll need kryptonite to stop you!\"\n\n\"Hardly. Right now, all they'd need is a really loud noise.\" She glanced at Wyrm's high-tech prosthetic arm. \"How are you holding up?\"\n\n\"Good. I brought a couple portable power sources and some solar panel hook-ups, and I've got 'em running a pretty sweet video surveillance set up. These Swords of Cleansing guys may have some tricks up their sleeves, but so do I.\"\n\nVeronica leaned back. \"That's not what I meant,\" she said.\n\nWyrm shook his head and rolled his eyes. \"You know, I wish that at least ONE of you girls wasn't gay. Besides Allyson I mean. I could have at least gotten a sympathy lay with all the worrying you do.\"\n\nVeronica chuckled, then stopped when her head began aching even worse. \"Where's Eliza?\" she asked. 'Isn't it a girlfriend's job to dote on the sick?' she thought.\n\n\"She's out front. Apparently she got word that there is an official envoy on its way.\"\n\n\"Her father?\"\n\n\"I'm not sure. Eliza didn't think so because the Prime Minister wouldn't let him go to an unprotected area. Hasn't the rest of the universe realized that Eliza's indestructible and the safest place to be is right behind her? I'm sure I sent a memo about that.\"\n\nVeronica stifled another chuckle. Wyrm had a way of making people feel better. \"She's kind of amazing all right.\"\n\n\"And so are you,\" Wyrm said. He looked up and saw Vicky in the doorway.\n\n\"Hey guys,\" Vicky said. \"Looks like the envoy is pulling up. There are A LOT of coaches in this procession, so this is something important. Eliza was wondering if you might be up for a meet and greet?\"\n\nVeronica smiled. Eliza had removed her from the telepathic link she had with the rest of her team to give her brain a chance to rest, and it had helped a little. \"I've endured worse,\" she said, standing up and walking towards the front, flanked by her sister and Wyrm.\n\nThey found Eliza pacing by the front door. \"I've only been here for twenty-four hours, and the Prime Minister is sending people to see me. I didn't do anything wrong,\" she muttered. Then she saw Veronica and approached the blonde woman, stroking some hair from her eyes and holding her palm against Veronica's cheek. \"Any better?\" she whispered.\n\n\"A bit,\" came the reply.\n\n\"You know, if you kissed where it hurt, it might make her feel better,\" Wyrm suggested. \"Actually, if wanted to go ahead and make out . . .\"\n\n\"Can it, you friggin' pervert,\" Eliza said, grinning in spite of herself.\n\nThey heard trumpets sounding at the front door. Eliza rolled her eyes, Veronica winced and the rest of the team stood at attention behind their boss. The doors open and a herald walked in.\n\n\"You might want to cover your ears,\" Eliza told Veronica. \"These clowns LOVE the sound of their own voices.\"\n\nThe herald heard muttering and shot a poisonous glance at the speaker. Then he turned back to his scroll. [[ With the blessings of the Prime Minister of the Seven Provinces of Devlia, I announce the arrival of Chancellor Valar of Narebican.]]\n\nEliza couldn't help but feel surprised as she began relaying the herald's words over her mental link for the benefit of the squad members that didn't speak any of the vampire dialects. 'What the hell is Valar doing here, and since when did he become a Chancellor?' A Chancellor was, for all intents and purposes, a mayor for any city of more than a million residents, and Narebican was Valar's hometown in the province of Muipantaikoff.\n\nValar strode in, looking as dignified and regal as Eliza had ever seen him. He was escorted by two bodyguards that fell away once inside the building.\n\n[[ With the blessings of the Prime Minister of the Seven Provinces of Devlia, I announce the arrival of Kalinicia Vonahme of Gralta. ]] A young vampire woman walked in and a number of people's hearts caught in their chests. Some women were attractive while others were considered beautiful. Kalinicia went one step further and could best be described as STUNNINGLY beautiful. Her eyes locked on Eliza the moment she crossed the threshold, her face unreadable.\n\nEliza found herself staring at the floor, eyes wide.\n\n{{ What's the matter? }} Veronica thought, in spite of the discomfort of using telepathy.\n\n{{ That's . . . that's Kelik's granddaughter. }}\n\nVeronica looked again at the beautiful young vampire maiden. Her high cheekbones, yellow eyes and full red lips were enough to capture most peoples' attention, and the long and shiny, raven-black hair that was braided and reached all the way to her firm behind could capture the rest. She was wearing a form-fitting but elegant black gown that was delightfully adorned and hugged her perfect set of curves. {{ What is she doing here? }} she sent, but Eliza didn't respond.\n\n{{ Can I have one? }} Wyrm thought absently, not privy to Eliza and Veronica's private conversation and completely unaware at who the girl was.\n\n{{ Wyrm, that's Kelik's granddaughter, }} Veronica sent, rejoining the group link.\n\nWyrm blanched. He and Valar had been there when Kelik was gunned down by Purity forces. No one else in the group knew it, but that image still haunted him in the moments before sleep came for him. And he carried the feeling of helplessness that he had felt at that moment every day since. He looked over the girl, and didn't remember seeing her at the funeral. Then he remembered that some family members went early so they could return to the home of the deceased so he or she could greet guests and well-wishers. \n\n[[ With the blessings of the Prime Minister of the Seven Provinces of Devlia, I announce the arrival of Lord Evlidone Msabdteelfinclor, Devlian Security Director and his wife, Lady Alyidana. ]]\n\nIf Eliza had been surprised before, she was shocked now. Why would her father be there? Who the hell in the government allowed the Security Director for the Seven Provinces of the Devlian Continent to leave the security of the palace during a time of (effectively) war to go to a place that had recently been attacked? 'Who the hell is running this government?' she wondered. She looked out the door and saw that several platoons of the elite Palace Guard had accompanied this entourage. That made her feel a little better. The Palace Guards were amongst the elite of vampires in both combat training and magic, though none of them could compare in magical ability to an actual sorcerer such as Valar, Evlidone or even Eliza herself.\n\nThe door slammed shut and Eliza heard the Palace Guards taking up position around the property and the building. Then her father stepped forward.\n\nEvlidone looked . . . tired. But he also looked like he had a purpose. [[ Eliza, I am . . . surprised to see you again so soon, ]] he said.\n\nEliza already felt her blood beginning to boil. [[ I heard that you had been attacked. I wanted to see if we could help. ]]\n\n[[ You could have communicated via your orb first. I assure you that we have things well in hand. Your presence gives our enemy another target and spreads our defenses . . . ]]\n\n[[ My team and I can take care of ourselves, ]] Eliza growled. [[ I'm sorry if my desire to help is 'inconvenient' . . . ]]\n\nEvlidone clenched his fists. [[ Would you PLEASE try and remain calm just this once?!? I'm at least trying to be civil here. ]]\n\nIt didn't take a sorcerer to feel the power that was beginning to build. Alyidana went to her husband to try and calm him down while Valar slowly moved towards the center to he could intercede if the proverbial shit hit the fan.\n\nVeronica's head was suddenly buzzing again. She had begun to get frightened and angry at the same time . . . frightened that there might be a fight and angry at the father and daughter who refused to even TRY and get along . . . then the buzzing in her head had returned with a vengeance, stronger than before. She gasped, grabbing her head and sinking to her knees.\n\n\"Oh God sweetie, I'm sorry,\" Eliza said, her father forgotten for the moment as she knelt in front of her lover, kissing her on the forehead and wishing to the powers that be that she could be a little more sensitive.",
        "[[ Is she . . . all right? ]] Evlidone said, taking a few steps forward.\n\n[[ She . . . last night . . . during the fight, she manifested magical power. She doesn't know how to vent very well yet, and she's particularly sensitive to emotional fluctuations. ]]\n\n[[ Good grief, ]] Alyidana said, moving to the girl's side. While not being nearly as powerful as her husband or daughter in regards to magic, she had a very specialized strength in regards to healing magic. She had actually been the vampire equivalent of a doctor (called Shamans), once upon a time. She put her hands on the sides of Veronica's head and looked into the woman's eyes. She was not in any real danger, but the headache she must be experiencing would be massive. Eliza's mother concentrated and cast a Weeping Wall spell around the girl's mind, which allowed Veronica's magical energy to siphon a little more naturally while numbing it to emotional influences. Veronica wouldn't be able to cast anything while it was up, but it would provide her relief until she started learning to control her power.\n\nVicky and Eliza helped Veronica to her feet. Valar approached to see if he could assist in some way, then found himself looking from one sister to the other. [[ Remarkable, ]] he said. He looked at Eliza. [[ Is this some aftereffect of her transformation? ]]\n\nEliza looked confused for a moment, then clued in. [[ No. This is Vicky, Veronica's sister. They're twins. ]]\n\n[[ I've heard of 'twins' before, but I've never actually seen them before. None the less, ]] Valar said, then switched to English. \"I have some experience in teaching. If you would allow it, I'll try and help give Ms. Adams . . . I mean Veronica,\" he added, glancing at Vicky, \"learn the basics of magic use. She won't be casting any particularly potent spells, but she won't be likely to explode anymore.\"\n\n\"Explode?!?\" Veronica exclaimed. \"No one said anything about exploding!\"\n\n[[ What did you say to the poor girl? ]] Alyidana asked. [[ Just . . . just take her to the atrium. It will be a good place for her to rest, away from these two . . . ]] She was so mad at her husband and daughter that she couldn't speak. Evlidone stared at his feet, but Eliza kept looking at Veronica as her mother and Valar helped the girl away from the entrance hall.\n\n\"Uhm . . . guys,\" Vicky started, looking from Eliza to Evlidone, \"I think we might want to . . . go away,\" she finished.\n\nAt that moment, Kalinicia stepped forward. [[ Which of you is 'Wyrm'? ]] she asked suddenly. Everyone just stared at her for a moment.\n\nEliza turned to Wyrm. \"I think she wants to talk to you.\"\n\n\"Me? Why me?\" The techno-geek was suddenly even more nervous. \"I don't even speak the language!\"\n\nKalinicia was staring at him, realizing that he was the one she needed to talk to. Not even bothering to ask permission, she got right in his face. \"Would you . . . walk with me? I have . . . questions for you,\" she added. Her English skills seemed well developed but untried.\n\nWyrm realized that this was probably about Kelik, and simply nodded. The two of them wandered off down a hallway. The rest of Hybrid Security found somewhere else to be, leaving Eliza and Evlidone alone. Eliza was still staring towards the hall where her lover had disappeared. She was clenching her fists and breathing heavily.\n\nEvlidone looked at his daughter and assumed she was posturing because of him. [[ What?!? ]] he started. [[ I haven't even said anything yet! ]]\n\nEliza looked confused, then shook her head. [[ I'm mad at me . . . this time. I knew she was having problems controlling the magic. She needs to stay calm, so I need to calm down. ]]\n\nEvlidone looked at his daughter. Then he started to laugh.\n\nHis daughter was caught completely off guard. She couldn't remember the last time she had heard her father laughing, and had no idea what was going on.\n\nFinally, he composed himself enough to speak. [[ You need to 'calm down'? I've been telling you that for eighty years, and NOW you get it?!? ]] He finally managed to get his chuckling under control. [[ Eliza, would you mind accompanying me to the study? It's more comfortable there, and I think we need to talk. ]]\n\n---------------------- ----------------------\n\nIn the makeshift control room . . .\n\n---------------------- ----------------------\n\n\"How does this work?\" Vicky said, trying to maneuver one of the hidden remote cameras that Wyrm had said up. There was supposed to be some way of changing cameras, while a very strange looking joystick was supposedly used to move the cameras' fields of view. But she couldn't quite get the hang of it, and she couldn't ask Wyrm. That was one of the people she and Terillia wanted to spy on. Okay, mostly he was one of the people that VICKY wanted to spy on, but Terillia didn't tend to object to very much. There was too much going on to be left out, and Veronica HATED not being in the know.\n\n\"How about that button?\" Terillia said, pointing at the keyboard.\n\n\"Which button? There's about a hundred of them!\"\n\n\"The one that says 'Shift.' Maybe that means to shift cameras.\"\n\nVicky chuckled. \"Actually, it means to shift between upper and lower case letters. People have been using pretty much the same pattern for keyboards for three centuries now.\"\n\n\"Oh,\" Terillia thought. She felt kind of stupid.\n\nVicky noticed that her friend was pouting. \"It's okay. It took me a long time to figure stuff out when I was traveling Terra. There are all sorts of little cultural nuances that you sort of take for granted.\"\n\nTerillia smiled and rested her head on Vicky's shoulder as the human woman messed with the controls a bit.\n\n\"Damn it,\" Vicky said. \"I'm never going to get this thing to work,\" she mumbled. She noticed how nice it felt having Terillia's head so close and how soft the succubus's cheek felt when their faces touched. And the girl even smelled nice . . .\n\nTerillia saw that Vicky wasn't messing with the controls any more. Actually, the older woman was staring at the succubus. Terillia blushed. \"Why do you look at me like that?\" she asked quietly. She found herself hoping for a kiss. Her hope was soon realized as Vicky's lips sought out Terillia's, and the two remained locked at the mouth for a couple of minutes. Terillia's tongue went six inches down her lover's throat, causing Vicky to give that muscle a little blowjob. Terillia found the entire experience to be quite arousing.\n\n\"Shouldn't we be . . . spying . . .?\" the succubus said at last.\n\n\"Why don't we do something other people would like to spy on?\" Vicky said, spinning her chair and pulling Terillia onto her lap. The two women began kissing again, which was the only thing that kept the succubus from just throwing her clothes off. Once Terillia got it into her head that sex was upcoming, she sometimes wanted to get to the main event right away. Vicky often found herself trying to slow things down and enjoy the ENTIRE act. Vicky traced circles on the loose slacks that covered Terillia's ass as the succubus continued to send her tongue into the human's throat.\n\n\"But . . . we might . . . might get caught,\" Terillia said, cupping Vicky's tits through her blouse. \n\n\"That is part of the fun,\" Vicky responded, kissing Terillia on the lips, face and then neck. She pulled her lover's shirt down as she kissed her way lower, and those cute bluish nipples came into range of Vicky's lips and tongue. She heard Terillia begin to coo as her warm lips sucked on the succubus's breast flesh. She grabbed Terillia's warm, tight little butt cheeks and held her close as both women began to heat up.\n\nTerillia started pulling on Vicky's shirt, finally getting it up until it was draped across her shoulders. The succubus slid down her human lover's body until her face was in front of those succulent round breasts, and her agile and talented tongue began encircling and teasing Vicky's pink nipples while Terillia struggled to pull the woman's pants down. \n\nVicky was biting her bottom lip as her young lover's tongue lavished affection on Vicky's tits. It was like a little bluish snake that was everywhere at once. And when Terillia moved her head south, Vicky flushed with excitement. The succubus's tongue danced around the human's bellybutton for a while, which was slightly ticklish to Vicky and highly arousing. \n\n\"This is also part of the fun,\" Terillia said, staring up Vicky's body as her talented tongue invaded Vicky's hot, moist pussy. When Vicky had first taught Terillia how to go down on a woman, she had gotten the younger woman to draw out her English letters with her tongue, and that had been one of her favorite cunnilingual tools. Since then, she had done the same activity using her own alphabet. This time, she decided to write out her favorite sonnet, one letter at a time. And succubae poets and songwriters did NOT write short sonnets. \n\nVicky's bare ass was squirming on the edge of her seat as her lover's tongue was going everywhere. She had no idea what the hot young woman between her thighs was doing, but Vicky was pretty sure she liked it. And when Terillia's fingers started penetrating her box as well, Vicky's pleasure centers started going through the roof. She was really thinking she needed to revisit the succubae lands because if Terillia was any indication, those people were BORN for lesbian sex. \"Lick me you horny little chick,\" she moaned. \"Get that tongue inside me!\"\n\nTerillia blushed and made a few more rounds with her tongue. Then she stiffened that muscled and used it like a piston, pounding it in and out of her lover's cunt and tagging her g-spot.\n\nVicky arched her back, resting more of her weight on her lover's shoulders and lifted herself off the seat. Her pussy twitched happily and she began to cum like nobody's business. \"Sweet-tongued devil, lick it all up! Lick up the mess you made!\"\n\nTerillia didn't need to be asked twice. Actually, she didn't even need to be asked once. She loved bringing such pleasure to this beautiful woman, and this was her reward . . . the consumption of girl-candy. And she devoured it all.\n\n\"My turn,\" Vicky said, sweat dripping from her forehead. 'This girl just wears me out,' she thought. \"Bend over,\" she ordered, getting Terillia to bend at the waist and grab the arms of the chair. Vicky wrapped one arm around Terillia's wings and waist and stuck the other through her legs, letting both of the human woman's hands meet near the succubus's vaginal opening. She sunk two fingers from one hand into the top of Terillia's slot, using her thumb to tease the girl's clit. She used two fingers from the other hand to penetrate the lower end of Terillia's pussy. She stood behind the girl while doing this, and began humping against her as she fingered the succubus into a frenzy.\n\n\"You are so skilled . . . I am . . . very aroused,\" Terillia half-said / half-chirped.\n\nVicky grinned, then began sucking on the succubus's soft earlobe after she got Terillia to reposition her wings a bit. Terillia's English was good, but apparently the phrases used to talk dirty during sex had been skimmed in her language classes. But like everything else she did, she seemed to be adjusting quickly. \"Such a naughty little bird,\" Vicky said, penetrating her lover's warm box with four fingers and rubbing her little clit. While Vicky's tongue wasn't as long or agile as Terillia's, her fingers were still more experienced. She had the young woman cumming in record time. Terillia even had to bite the top of Wyrm's computer chair to keep from chirping loudly or making that hiccup noise she often made during her climaxes.\n\n'She has the most beautiful orgasms,' Vicky thought, watching the delicate but firm muscles of Terillia's body strain ever-so-lightly as she came, her wings fully extended (almost knocking over a monitor) and fluttering. Vicky continued fingering her for several minutes as the girl's lithe body finally relaxed.\n\n\"That was most wonderful,\" Terillia cooed, her eyes shining with contentment as she turned to kiss her lover and teacher. \n\n\"You weren't bad yourself,\" Vicky said. 'God, even her EYES are beautiful,' she thought. \"You know, we don't HAVE to take turns,\" she murmured.\n\n\"A sixty-nine?!?\" Terillia said excitedly, then calmed her voice. When Vicky had shown her how that particular movement worked, she had been VERY pleased. She didn't even wait for a response, pushing Vicky onto the floor and then pounced on her like a prey item, burying her feathered head between the human's thighs and sending that magical tongue back to work.\n\nVicky had created a monster. Or perhaps the monster had just been there all along, waiting for someone to let it out of its cage. But Vicky would be damned if she didn't reap some of the rewards of the succubus's sexual awakening, and she sent her tongue and fingers once more into the breach.\n\nTerillia's wings were fluttering wildly, knocking over the chair and scattering some papers. Her tongue was moving like an eel through water, penetrating and exploring Vicky's tight pussy without pause or mercy. She was doing everything she could think of to keep up with the more experienced woman's tongue and fingers.\n\nVicky had flattened her tongue, made several long, slow passes, then darted her tongue against the clit while spreading the succubus's box with her fingers. If they were in their bedroom, she would be fisting this young creature already. Their prior experience with that particular sexual deviation had given Vicky a sense of power that she had never experienced before, and she wanted to feel it again. But in the meantime, she was quite satisfied with a piece of Terillia's pussy using slightly smaller invaders. So she licked and sucked to her hearts content, and Terillia appreciated her efforts.\n\nTerillia finally remembered that she could use fingers too, so she curled one of her long digits deep into Vicky's cunt, curling that finger until she found a spot in her lover's body she knew to be sensitive. \n\nVicky gasped. \"Oh no you don't,\" Vicky giggled, then tongued the tender area between pussy and asshole. \"You are NOT going to get me first,\" she added, then spread her lover's opening as wide as she could get it and almost literally buried her mouth and tongue inside.\n\n\"I . . . I . . . I did not mean to . . . (chirp) . . . offend,\" Terillia responded, pleasure coursing through her body. Whenever she thought she was gaining ground to her sexual mentor, Vicky took it to the next level. She had already promised to introduce Terillia to a \"strap-on\" when they got back to Earth, and she could hardly wait. \"Oh . . . I am . . . ooh,\" she moaned. Vicky's infernal superior cunnilingual skills had done their damage, and Terillia experienced another delightful orgasm. This was not as wet as her first one, but she still had some of her vaginal nectar to expunge onto her lover's face. She was moving her tongue like a weed-whacker in long but rapid circles.\n\n\"Oh, that's good . . .\" Vicky moaned directly into Terillia's box. She felt the familiar stirrings of the \"little death\" deep within her. He stomach tensed and she pushed up on the floor with her feet, forcing her pussy against Terillia's face. She wanted to see the succubus's face glistening with her cum when she was through.\n\nA minute later, the two women were lying on the floor, panting, sweating and enjoying the feel of each other's body. As was their custom, Terillia had cocooned the lovers in her wings as they recuperated.\n\n--------------- -----------------\n\nIn Evlidone's study . . .\n\n--------------- -----------------\n\nEliza and Evlidone had been sitting in silence for a few minutes after leaving the others, each trying vainly to relax in large comfortable chairs. Eliza was perplexed as to her father's sudden outburst earlier, and Evlidone was trying to carefully arrange his thoughts.\n\n[[ Eliza, ]] he said at last, [[ do you remember when you were just thirteen or so and we took a boat ride down the Devlian River? ]]\n\nThis wasn't what she had expected, but Eliza nodded. That was back when things had been . . . simpler. They had taken a family vacation, and her father knew how much Eliza liked the water so he planned a weeklong voyage down that mighty river.\n\n[[ The moment we stepped foot on the ferry, ]] he continued, [[ and while everyone else was looking down the river, I lost track of you. I saw you at the back of the vessel, looking up in the direction of the white-water. Do you remember what you said? ]] When Eliza shook her head, Evlidone went, [[ You asked if we could 'go that way.' I told you we couldn't . . . that the boat wasn't strong enough to go up the rapids. You just looked at me and asked me why. I told you because that wasn't the way the boat worked. You just asked why. I told you that going down river was just the way things worked. You asked why. And ever after ship started one way, you kept looking the other. It's funny. What was cute when you were young became INCREDIBLY aggravating when you got older. You never went the same way anyone else was going, probably because no one could explain to why you should. At least not to your satisfaction. ]]\n\n[[ Maybe I wanted to go somewhere else . . . I just know everyone kept trying to force me . . . well, down the river I guess. ]] Eliza still wasn't sure where this was going.\n\nHer father looked at her, a little sadness in his eyes. [[ It wasn't easy, always watching you walking away . . . always going in a different direction than everyone else. ]]\n\n[[ What did you expect me to do? I didn't want to be what you kept driving me to be! ]]\n\n[[ It wasn't just about me and you know it! When you went to the academy, you instigated the very first fist fight in history of the Graltan Academy. With one of your instructors, no less! I had to transfer you to that Military Sorcery Academy just because they were the only ones not scared enough to take you! Yes, I realized you probably orchestrated the whole thing just so you could learn more combat magic, but I didn't press the issue because you seemed happy there. But even there, you caused more explosions than anyone else had in over a century! You seemed so bound and determined to rebel ALL THE TIME . . . sometimes I wondered if you even knew what you were rebelling against! ]]\n\nEliza shook her head. Once again, her father was painting her as the troublemaker. The fact that everything he had said was true was irrelevant to her at the moment. She HAD started a fight with an instructor, but only because he had made some very off color remarks about trolls, and Thug had recently become her friend. And she HAD wanted to go the Military Academy because she was tired of perfecting pansy-ass magic and wanted something more exciting. [[ From the moment I started going to school, you made it clear that you had a plan for me. You already had your eye on Valar as a potential suitor, and that was when he was a hundred and twenty while I was only eighteen! You already had a job and a house and everything picked out for me, but you never ONCE asked me if I wanted any of it! I wasn't even two decades old, and you already had my entire life written in the Great Book! ]]\n\n[[ What was wrong with me wanting the best for you? ]] her father asked.\n\n[[ Because it scared the hell out of me! Good grief, you're my father! I thought fathers were supposed to be supportive, but you tried smothering me every time I did something that didn't fit in with your plan! ]]\n\nEvlidone felt the veins in his head trying to explode, but he forced himself to remain calm. [[ As a father, one of my MANY duties is also trying to KEEP YOU SAFE! I thought that even if your own magic couldn't protect you that Valar's could. I thought that getting you a job as a court sorceress for a family that no one cared enough about to insult much less plot against would keep you safe! Your home was supposed to be somewhere safe! You KNOW we live in a world of intrigue and danger! I didn't want you getting caught up in it. ]] He settled down in his chair and put his head in his hands. [[ But everything I did failed. I tried to keep you safe, and you seemed to seek out danger. Most fathers only have to worry about their daughters having spats about not getting to take the carriage out until late in the morning. I was often worried about you accidentally causing an apocalypse. You weren't my little girl anymore. You were an earthquake with a purpose and a grudge! ]]",
        "[[ I was NOT that bad! ]] Eliza muttered. 'Was I?' she thought.\n\n[[Now . . . please try and stay calm for this. I was the one who had to explain all this. I had to explain to the family friends, to your instructors, to our society . . . ]]\n\n[[ You were guarding your own . . . ]]\n\n[[ I asked you to let me finish! Good grief, are you really that blind?!? Look around at the world you came from, Eliza! Things work a certain way here, and they've been working that way for thousands of years! Vampires and other Terrans evolved into their current forms long before humans did, but things have moved slowly for us ever since. You can see it in our culture, our lives and our politics. But things work. We take our time, we have our ceremonies and things get done just like they have since the Age of Beginning. But you think that everything should change . . . just like that . . . just for your benefit! ]]\n\nEliza was also struggling to maintain a calm demeanor. [[ I was NEVER going to be like them, ]] she said, motioning towards the door. [[ I tried . . . You may not believe it, but I DID try! Every day, I pretended to be something I wasn't. When you asked Valar to court me . . . when you talked about the perfect wedding and the perfect grandchildren . . . I knew I would never be what you wanted, but I didn't want to embarrass you. I know what it would have meant if it had come out that I preferred the company of women. I knew what it would mean for you trying to become Security Director. And so I left. ]]\n\n[[ You took off for Earth on a 'vacation,' and never came back. You started up a business where people would shoot at you with those 'guns' the humans like so much on a regular basis. You hide out in some compound like a crazed militant. Was this all supposed to make things better? ]]\n\n[[ Yes! I got to be who I wanted to be, or at least be closer to that than I could ever be here. And if I'm over there with the 'barbarians,' no one is going to care if I get a little destructive. Don't tell me that anyone on this side even cared what I was doing anymore. ]]\n\n[[ Of course someone cared! I cared! And your mother cared! Every day, I had to worry about whether or not you were going to get yourself killed! ]]\n\n[[ Oh, and YOU'RE job is so safe?!? Father, I know how much you love what you do and how good you are at it. Well guess what? I found something that I was good at! I found friends! I found a place for myself that no one hand fed me or forced me into! Something that I enjoyed! ]] Eliza grew quiet for a moment. [[ And I found someone who made me feel . . . whole. And despite everything that has happened between you and me . . . I just wanted you to be happy for me. I wanted you to be proud of me. After I fought so hard to get back here, you wrote off everything I felt and everything I had accomplished as 'foolishness.' ]]\n\n[[ You never gave me a chance! I heard the gate had reopened and so your mother and I hurried down there. I didn't like the idea that our last words might have been so spiteful! We get there, and everyone who comes across is talking about you and your female lover! They're talking about how you were engaged in not one . . . not two . . . but three large-scale military conflicts, and that was just the ones they KNEW about! You almost started a Blood War! You're openly flaunting . . . you are quite obviously not interested in males of our or ANY species! And you're not even a vampire anymore! And then Valar tells me how it happened and . . . and how my only child almost died due to some vile little wizard-reject and some powerful 'Living Jewel,' . . . ]]\n\nEliza realized that her father was furious, but for one of the few times she could remember, he wasn't mad at her. \n\nEvlidone finally regained his composure. [[ How was I SUPPOSED to handle all of that? Remember what I said about things moving slowly and taking time on Terra? I had a week to adjust to my world being turned upside down! I know that it was harder for you, but you also had more time! And then you walked through the gate and confronted me, right in front of everyone. And as much as you hate it, I HAVE to play the game of politics! I wish I hadn't said some of the things I did, but as usual you HAD to have things happen YOUR way and on YOUR terms! ]]\n\n[[ You think that I was ready? The only reason I was able to walk across the gate was because Veronica actually made me believe that things would turn out all right. ]]\n\nHer father stared at her for a moment. [[ You really love her, don't you? ]] He sighed, then moved over to sit beside her. \n\nEliza was speechless. Was her father actually . . . being fatherly? [[ More than anything. I never understood what a 'link' really was until I shared one with her. We live in each other's minds half the time . . . we even share dreams. And I almost walked away from her once because I didn't want you to be embarrassed. ]] She hung her head. [[ I never wanted to hurt you or embarrass you. I'm sorry I made life so difficult for you, but whenever I was here . . .]] she started, taking a look around, [[ I wasn't even comfortable in my own skin. Out there, I got to feel . . . good. Then Veronica made me feel perfect. I just wish you could be happy for me. ]] She sniffed.\n\n[[ Eliza . . . ]] Her father thought things over, then continued. [[ I know what you want me to say, but I'm not sure I can . . . at least not completely, ]] he added when he saw Eliza tensing up again. This was the first real father-daughter conversation the two of them had had in over half-a-century that hadn't degenerated into name-calling, and he didn't want to blow it. [[ I don't know if I'll ever approve of your new . . . sexuality. But that doesn't mean that you and your 'friend' don't have a place here. I may never approve of the way you live your life, but that doesn't mean . . . it doesn't mean I don't love you. ]]\n\nEliza's eyes were beginning to water and she was trembling to the bone. It hadn't been the overwhelming acceptance she had hoped for, but her father had just told her something that she hadn't heard from him in over sixty years.\n\nEvlidone put his hand on his daughter's shoulder. He was a little unsure of how to proceed. He wasn't usually prone to this type of display or emotion, but he was damned if he was going to screw it up. His sometimes pig-headed devotion to the old ways of doing things had almost cost him his daughter, and that was something he would never allow again. [[ I do love you Eliza. You're my only child, and I'll never stop wanting to take care of you and keep you safe. But I see now that you can take care of yourself. And believe it or not, I AM proud of you. I'm proud of you for the work you've done, the business you've built, and I'm even more proud that you did it all on your own. I'm proud that the little girl in a pink dress that used to sit on my knee has become one of the most potent and famous warrior-sorceresses of our time. True, not all of your fame is . . . flattering, but that is your lot in life. ]]\n\nEliza started to cry. It was like she had just won some great prize but didn't know what to do with it. She wrapped her arms around her father's neck and just cried on his shoulder. He patted her back and felt a guilty flush of relief . . . this was something a father was supposed to be able to do . . . to be there for his little girl.\n\nAs he continued to comfort her. [[ Sometimes I envy you, ]] he said. [[ When our names are written in the Book of Blood and our deeds in the Great Book, your name will be underlined and your deeds will glow on the pages. But rarely does history remember the good politician. More often than not, they remember the warriors and the crusaders . . . and those who kept going up and challenging the rapids while others were content to glide down the river. But that doesn't bother me, for when I look down from the afterlife on all those Terrans and humans that are not yet born, I will be able to say with pride that it is MY daughter whose tales they still tell! ]]\n\nAnd with that, there was nothing more either of them needed to say.\n\n-------------- ---------------\n\nA little while later . . .\n\n-------------- ---------------\n\nEliza and her father found the rest of the gang hanging out in the main dining area. The house servants had returned en masse when they heard the master and mistress of the house were in residence, and the chefs had been waiting for Evlidone to return before starting lunch (which was served at midnight in Vampire households). Eliza's eyes immediately met Veronica's, and the two lovers smiled. In an instant, they shared all that had happened between Eliza and he father, and Veronica's heart swelled in her chest with the news of the reconciliation, even if it came with certain . . . reservations. Alyidana sought out her husband, and they also shared a silent communication. Etiquette be damned, she gave her husband a brief but warm kiss. Her daughter's stubbornness was matched only by her husband's, and she was overjoyed that they had finally reached some common ground. If things had gone on much longer, she would've had to start hurting people.\n\nEliza noticed that Wyrm was being unusually quiet, but he also appeared strangely at peace. Kelik's granddaughter sat next to him at the table, and occasionally appeared to exchange personal telepathic messages with him. Kalinicia noticed that Eliza was watching, then turned her head to the table and seemed to blush. Eliza was wondering if the girl was angry with her, but Wyrm caught her eye and shook his head. He mouthed the word \"later,\" then went back to his meal. So Eliza let the subject go.\n\nVeronica also seemed more comfortable. She explained that Alyidana had helped stabilize her mind and Valar had been provided her with instructions on how to shield and how to vent. It would be a long time before she was ready to try and wield real magic, but they were certain she was in control enough to avoid accidentally destroying anything. \n\nOver dinner, the conversation took a business-like turn. Eliza explained what had happened during the attack, and her father took mental notes. He acknowledged that sending a straw-man attack was something the Swords of Cleansing had done before. He filled the team in on some of what he knew, but reluctantly couldn't tell them everything due to security issues. Eliza chose not to make a stink about that, since it was part of the games she finally had accepted that her father needed to play. Then he informed his daughter that Valar had been chosen to be Evlidone's successor when he chose to retire. Eliza had to acknowledge that it was a good fit. It was strange . . . she was actually glad it was Valar. That particular vampire had shown that he could rise above petty disputes when needed and get the job done. \n\n{{ So, }} Evlidone started over the group link, {{ I'm afraid I will ask you to refrain from taking any overt actions at this time. This is not an insult to your intentions or abilities. Just keep in mind that we DO have some things going on that are delicate in nature. You are all welcome to stay, and we may very well call upon you for information or, sometime down the road, for your assistance. Just let us play our next hand first. }}\n\nEliza nodded her agreement. They were on her father's court, so they would play by his rules . . . for the most part . . . for now.\n\n-------------- -----------------\n\nA little while later . . .\n\n-------------- -----------------\n\nWhen the official dinner had ended, most of the crew headed off to bed. Evlidone, Alyidana and Valar had all started questioning Veronica about her \"Hybrid abilities,\" so Eliza took a breather. She found Thug and Tiny both staring at a single sapling in the courtyard, apparently trying to figure out how many leaves it had. Eliza didn't bother to ask why, because they probably didn't know. They were trolls . . . they didn't always understand things . . . they just did them. She walked down a hall and wound up in the control room, and found Wyrm rearranging things.\n\n\"What the fuck happened in here?\" he asked when he saw his boss standing in the doorway. \"Nothing's where I left it and it looks like someone's been chewing on my chair!\"\n\n\"You know as well as I that you can't predict what's going on around here.\" Eliza tested the air and smiled. The scent of sex was strong in the room, and she knew exactly who had been in there. \"So,\" she added, changing gears, \"what's going on with Kalinicia? Does she blame me for . . .\"\n\n\"Sorry boss, but I'm gonna let her cover that herself.\" Wyrm sat down in his partially chewed chair.\n\n\"You okay?\" Eliza asked. Her friend was normally a bit more chipper.\n\n\"No, not really. Kalinicia apparently was already being groomed to take Kelik's place as Terran Ambassador to Earth, so she was in the Palace talking with your father when they got the news that we had come through. She . . . Kalinicia wanted to know how it all went down . . . how her grandfather died. It brought up some memories I'd just as soon leave behind.\" Wyrm put his face in his good hand. \"How do you handle it?\" he asked. \"How do you handle the . . . the responsibility?\"\n\n\"What do you mean?\"\n\n\"I mean . . . I know you still blame yourself for what happened to me and to Kelik, even though you shouldn't. But talking with her . . . I felt responsible, like there was something I should've done to save her grandfather. I still can't think of what I COULD have done, but it doesn't make this sinking feeling in my stomach go away.\"\n\nEliza sat down on the floor in front of Wyrm and rested her head on one of his knees. \"I wish I could make things easier on you, bud. I don't know how I do it. I FEEL sick to my stomach and I NEVER completely forget what happened. I know that I helped save Veronica, but I'll always have that sick thought in the back of my head about what my life would have been like if we had been even a little bit slower. Sometimes that's what keeps me going . . . the desire to make sure that it doesn't happen again. Sometimes I just think of the people who still depend on me, and the ones I still depend on. Sometimes . . . sometimes I just keep moving. And a lot of the time, I rely on a wisecracking geek I know to cheer me up,\" she added. She started to stand and gave Wyrm a kiss on the forehead. \"And usually, that's enough.\"\n\n---------------- ------------------\n\nBack in her own room . . .\n\n---------------- ------------------\n\n\"So, you wanna . . . wander around the house again?\" Veronica asked as she and Eliza sat on the bed. The sun was now up in the Terran sky, so all the natives were going to bed. They had been \"politely\" informed that they shouldn't leave the house by a Captain of the Palace Guard, so they couldn't even wander the city. The newcomers of Snake, Bear and Boomer were playing chess in the dining room, as their human sleep cycles hadn't adjusted very well to life on Terra. And Eliza and Veronica . . . well, they just didn't sleep that much.\n\n\"I thought you saw everything already,\" Eliza said.\n\n\"Nah, we only got around the front of the house, the north wing and part of the south wing. Then we had that pesky Swords of Cleansing invasion thing.\"\n\n\"We could go bug the trolls and make them lose count of how many leaves that thing has.\" Eliza sighed. \"The last time I was THIS bored at my parent's house, I reenacted the Great Battle of the Alynis Plains with . . .\" Eliza stopped and waved her hand at the toys in the room.\n\nVeronica just sat there, staring at the wall of plush toys. Then she started to snicker. Finally, she began to guffaw.\n\nEliza rolled her eyes and smiled. \"I am NEVER sharing anything from my childhood with you EVER again.\" Then she joined in with Veronica's laughter. After a few minutes, she felt her lover's lips on her ear.\n\n\"Maybe we could take a bath?\"\n\nEliza grinned. Veronica had fallen in love with the bathtubs in her parent's house. They were easily the size of spas back on Earth, with plenty of room for . . . activities. Eliza jumped up from the bed and raced to get to the bathroom first. One advantage of coming from wealth was that even as a kid, Eliza had enjoyed having her own bathroom. Veronica began to undress as Eliza started a water-drawing spell as well as a heating spell. Then the white-haired Hybrid felt Veronica's hands sliding her clothes off, then those hands reached around and cupped Eliza's breasts, pinching her nipples between those talented fingers.\n\n\"Why my lady, I think you're planning on seducing me,\" Eliza said, moaning slightly as they both slid into the water. \n\n\"Actually, you're pretty much a sure thing,\" Veronica said. \"Remember, I can read your mind.\"\n\nEliza stuck her tongue out in a childish display, then thought of a much more mature thought came to her mind. \"Time me,\" she said, then dove her head under the surface of the water.\n\nVeronica watched as her girlfriend's head found its way between Veronica's thighs under the smooth surface of the water. Both Hybrids could hold their breath for several minutes, and she wanted to see what kind of \"damage\" Eliza could do in that time frame. She felt the warm water part as Eliza's tongue slipped into her pussy and started to wiggle.\n\n\" . . . four . . . five . . . six,\" Veronica muttered. One of Eliza's fingers had already found its way into Veronica's asshole and was exploring her backdoor as Eliza's tongue continued to rake across the sensitive skin of her outer labia. \" . . . seven . . . eight . . . nine . . .\"\n\n'Eating pussy underwater is hard!' Eliza thought. The warm water was helping Veronica relax her sphincter, so Eliza's finger had free reign, but trying to eat that perfect cunt without accidentally swallowing bath water was a bit tricky. She used her free hand to pinch the fleshy area around the clit, stimulating that sensitive nub with Veronica's own flesh. She licked her way along the surface of her girlfriend's opening.\n\n\" . . . ninety-seven . . . ninety-eight . . . \" The number of digits in Veronica's ass had just increased to three, and Eliza was using them like a jackhammer. Her normally-snug sphincter was being stretched every which way but loose, and Eliza's skill at the oral arts was undeniable. As her count reached one hundred and fifty (longer than Eliza's previous record), both women began to experience a sense of urgency. Veronica realized (a little late), that she was firmly holding Eliza's head in place, but her lover had gotten the job done. Veronica's released Eliza's head as her climax hit her like a truck and she came into the water while gripping the side of the tub like a lifejacket.\n\nEliza erupted from the water with a sputter and a cough, but she started to smile shortly thereafter. She was feeling a little light-headed from running short on oxygen, but it had been worth the effort, especially after Veronica pulled her in and kissed her.\n\n\"You are an AMAZING lover,\" the blonde woman said, gripping Eliza's slippery ass cheeks under the water. \"I don't suppose you have any toys in here, do you?\"\n\n\"Sorry,\" Eliza responded, \"but you're going to HAVE to use your imagination.\"\n\nVeronica bit her bottom lip. \"Well, I may just have to do something we tried the LAST time we fucked in the tub.\" She wiggled her eyebrows.\n\n\"Only if I get to do you too,\" Eliza responded, raising the bar a little higher.\n\nVeronica found the idea quite acceptable. She sat on the floor of the tub right next to Eliza, but facing in the opposite direction. Both women spread their legs and braced themselves on the floor of the tub with their right hand while sending their left hand between the other woman's thighs.\n\n\"Last one inside is a rotten . . .\" Veronica started, but was cut off as Eliza inserted three fingers, pressed tightly together, into Veronica's love-nest. \"You cheater,\" she snarled happily, moving to fit four of her finger's into her lover's opening.  ",
        "The water ebbed and ripples around them as they pumped their respective digits into each other's warm pussies. Eliza was the first to sink her hand in all the way up to the second row of knuckles, so she tucked her thumb into the indention in her palm and pushed a little harder. Veronica realized she had to move quickly, so she followed suit. Both women were pumping their hands in slow but steady movements. Veronica was beginning to sweat a bit as her vaginal entrance was slowly being stretched to try and accommodate the invading hand. Eliza was concentrating very hard as her own honey-pot was about to be pillaged.\n\nVeronica was hoping that Eliza's natural resiliency would forgive her, but she wasn't about to lose this race! With one last excruciatingly slow push on her hand, her fist slipped into her girlfriend's pussy completely and was enveloped by that velvet prison.\n\nEliza's opening was throbbing in a mixture of a little pain and A LOT of pleasure. She found herself gasping for breath as the entrance to her paradise clamped down on Veronica's wrist. Her own quest to fist her girlfriend was temporarily forgotten as her body tried to accustom itself to the intruder.\n\n\"I win,\" Veronica said with a smile. \n\nEliza shot her a dirty (but horny) look, grinning, then pushed her own hand that extra inch.\n\n\"Oh God!\" Veronica shouted as she succumbed to the violation. The two women sat in the water, staring at each other with open mouths and open eyes. They were both breathing heavily as their fingers began to twitch and probe, slowly coming back to life. Eliza preferred to pump her clenched fist while Veronica attacked all of her lover's insides by stretching out her hand as much as she could.\n\n{{ Fuck me, }} Eliza thought, no longer able to make her mouth obey her commands. She turned her hand a little and pumped again, causing Veronica's pleasure centers to erupt.\n\nStill biting her bottom lip, Veronica retaliated by directly stimulating Eliza's g-spot, rubbing one of her knuckles against it until her lover began whimpering with pleasure. But Eliza wasn't done. She brought the hand that she had been bracing herself with forward so she could gently run circles around Veronica's clit with her thumb.\n\n{{ Point . . . me, }} she thought cockily.\n\nVeronica's brain was swooning. 'I can't . . . I can't let her make me cum first . . . again,' she thought, a bit confused. Then the thought came to her. She pulled her free hand up and leaned forward as much as she could. She grabbed Eliza by the shoulder and pulled that girl forward. With hands inside each other's cunts, she kissed her lover. Eliza looked surprised (and tired) but please. But she was even more surprised when Veronica's fangs came out and sank into Eliza's neck. \n\n{{ Oh . . . you . . . bitch! }} Eliza thought as their powerful mental link kicked into action.\n\nIt was like one of those moments like when you were a kid, hanging onto the bars of the playground's merry-go-round. Things get to spinning so fast that you think you're going to go flying off, but you can't stop laughing. For Veronica and Eliza, each spin was like a gentle wave of pleasure that, after a few moments, grew into a tidal wave. And when they let go of the merry-go-round, the orgasms that followed spun wildly out of control. And just like those times on the ride as a child, both women's heads were spinning even after the ride was over. Luckily, as Veronica's fangs withdrew, they were leaning against each other, otherwise there might have been some drowning.\n\nEliza came to her senses first and pulled her hand out of Veronica's body. Then she grabbed Veronica's wrist and helped that woman return the favor.\n\n\"Can't . . . see . . . anything,\" Veronica moaned as she felt an unfortunate absence from her body. \n\nEliza laughed, leaned forward and wiped the hair from in front of her lover's face.\n\n\"Oh . . . there everything is,\" Veronica chuckled.\n\nEven though Veronica's vision was unobstructed, Eliza continued to stroke her lover's face.\n\n---------- ------------------\n\nThe next evening . . .\n\n---------- ------------------\n\n{{ It is actually quite infuriating, }} Evlidone thought, looking at the assembled force around him. All the occupants and guests in the house, as well as the local Captain of the Palace Guard (a man named Aruthis), were gathered in the central dining hall, which was acting as an impromptu war-room. The Security Director had been explaining what he knew about the Swords of Cleansing. Unlike the Purity back on Earth, the Swords of Cleansing had actually been around for a long time. In actuality, the fanatical group consisted entirely of vampires, even though they weren't above stealing magical ideas from other races. In fact, they despised ALL other races. The modern Swords of Cleansing had been formed by merging together a number of older and smaller secret vampire societies that had been proponents of vampire separatism, even on Terra. Succubae, trolls, gargoyles, lycanthropes and even octovians (half-humanoid, half-octopus-like creatures that lived deep below the surface of Terra's oceans) were targets of their hatred and ridicule. When the dimensional crack had opened and free travel had begun between Terran and Earth, these smaller groups had somehow organized and consolidated their resources.\n\n{{ And they are paranoid, }} Valar interjected. {{ The attack on this house a few nights ago was not part of their usual strategy. Unlike the Purity, the Swords of Cleansing do not generally rush into anything. As a result, there are fewer attacks, but they tend to be more damaging. }}\n\n{{ We . . . }} Evlidone started. Then he stopped, looked at his daughter and smiled. {{ We originally tried seeking out their hiding places, but they are elusive. When word came of how the Purity had been stopped . . . repeatedly . . . we tried luring our foes into a trap but they have been maddeningly uncooperative. }}\n\nEliza blushed a little. It appears that her father HAD been paying attention to her work on Earth, and imitation was the sincerest form of flattery.\n\n{{ We have tried all the conventional methods of locating them, but nothing is working, }} Aruthis said. He was more than a little confused as to why these . . . outsiders . . . were being consulted, but he would never disobey a direct order from the Security Director. {{ They tend to be based out of more backwater, conservative communities who won't speak to our investigators. And they know how to counter our intelligence gathering spells. }}\n\nTerillia was afraid to speak. Like many young succubae, she had dreams of glory and being part of the great adventure, but she was discovering the bane of young adventurers everywhere: taking that first step. She was surrounded by powerful spell casters, potent warriors and knowledgeable men. Terillia had an idea, but she thought it had to be stupid or have already been tried, seeing as no one had yet mentioned it. Her mouth was partially open in the fashion of a student who wanted to question his or her teacher but was afraid of appearing the fool. The she felt a hand on her thigh, and noticed Vicky was staring at her. The human woman smiled. 'How does she know . . .' Terillia started to think.\n\nVicky wasn't a telepath, but she knew her lover well enough that she wanted to say something, held back only by the insecurity of youth surrounded by experience. Vicky just nodded, still smiling.\n\n{{ Uhm . . . Instead of luring them out . . . why don't you . . . drive them out? }}\n\n{{ Because we don't know where they are, }} Aruthis said in a slightly patronizing tone. \n\n{{ You said they are paranoid, correct? Do they KNOW that we don't know where they are or how to find them? }} Terillia responded, the feathers on the back of her neck ruffling. She HATED being talked down to. That was something Eliza never did to her, which is one reason she had grown so loyal to the Hybrid.\n\n{{ Go ahead, }} Eliza said, glaring at the Captain. \n\n{{ I'm afraid I don't understand the difference, }} Evlidone said. If his daughter wanted to hear what this young woman had to say, he would extend her the benefit of the doubt.\n\nSuddenly Terillia was the focus of everyone's attention, and it was a tad disconcerting. {{ Well . . . let me put it this way, }} she started, glancing around nervously, {{ whenever the King or Queen of Ziticens (the home continent of the succubae) decrees a Royal Hunt, they always hunt from the air. But most of their quarry is adept at hiding, so the hunters either send someone on the ground to beat the bushes or they use force-pulse spells to drive the prey out into the open. Instead of waiting for your prey to come looking for you, why not drive them out? }}\n\nAruthis tried not to roll his eyes. {{ But we don't know where to start . . . }}\n\n{{ We do not need to, }} Evlidone said, his eyes narrowed in thought. {{ It is basic nature. I had the opportunity to watch such a hunt a few centuries ago. When a creature is frightened, it is likely to bolt even if it is not in any actual danger. }}\n\n{{ These Swords of Cleansing clowns just need to THINK that they're in danger, }} Eliza thought.\n\n{{ You mean you want to bluff them out into the open? }} Valar asked. {{ But how? They know how we look for people and they know how good their security is. }}\n\n{{ Correction, }} interjected Eliza, {{ They know how YOU look for people and how good their security is against YOUR intelligence gathering. They don't know anything about us, }} she added, glancing at her team.\n\nEvlidone wasn't thrilled about the idea of his daughter getting involved in something potentially dangerous. But since he seemed unable to control the young woman, he might as well use her talents and those of her team. {{ So what EXACTLY do you have in mind? }}\n\n------------ --------------------\n\nA week or so later . . .\n\n------------ --------------------\n\n{{ Okay. Wyrm, can you highlight the areas we've 'investigated'? }} Eliza asked, getting a laugh out of her crew. Her father was staring intently at the portable holographic projector that they had brought with them. He marveled at human technology, particularly when someone figured out how to get it to work on Terra. Wyrm had brought solar panels and a small windmill that was hooked up to the top of one of the towers, all of which powered his small array of technology. It was Terran bafflement in the face of such technology that they had been counting on.\n\nFor the last week, Eliza and her crew had been teleporting to a random set of locations around Devlia, concentrating their energies in the types of areas where the Swords of Cleansing might be able to hide. Everywhere they went, they took a number of fancy-looking gadgets and several members of the Palace Guard, just to make the entire expedition to look authentic. With two trolls, two Hybrids (an unknown commodity all by themselves), a succubus, four guards and number of humans, no one seemed willing to pick a fight with them. They talked to everyone they could find, making the locals feel as uncomfortable as possible. Wyrm wandered around, taking miscellaneous readings and then whispering conspiratorially with Eliza. The trolls looked menacing, and Terillia would fly around and stare at things from the air. Then they would gather up their troops and equipment, return to the teleport station and move on to their next target.\n\n{{ Here we go, }} said Wyrm, as a number of brightly colored red blips appeared on the map.\n\n{{ And what do we know about these areas? }} Eliza asked, curious as to exactly what readings her tech-guy had been taking.\n\n{{ Well here, }} he said, pointing at their first hit of the day, {{ the temperature was about eighty-four degrees with fifty-percent humidity and winds from the north at about ten miles per hour. And here . . . }} Wyrm continued to give all sorts of useless data about the places they had visited, including weather conditions, population . . . even the types of insects people had been complaining about. Eliza's crew wasn't actually concerned with finding anything. They just wanted to make some noise and give their enemies something to think about. And with the nervousness they had been causing and the fear the locals had about these \"foreign contraptions\" that Wyrm had devised. At one point, Wyrm had been staring intently at a couple of teenagers, holding a device that was making some kind of noise the youths found \"eerie.\" In actuality, it had just been his PDA playing an old, old rock song by some group called Lost in Texas that he had found on a classic rock download site.\n\nSuddenly, a messenger arrived at the door and handed a scroll to one of the guards, who then passed it on to Evlidone. Eliza's father smiled.\n\n{{ It seems that you're methods seem to be working. We have reports of small groups we believe to be associated with the Swords of Cleansing moving away from the area's you've been checking. }}\n\n{{ Are they moving in a particular direction? Are you picking them up? }} Eliza asked, wrapping her arm around Terillia's shoulders and giving her young prot\u00e9g\u00e9 a squeeze. \"You did good,\" she whispered, and the succubus flushed with pride.\n\n{{ We don't have enough information, }} Evlidone replied. {{ We need some more data. So no, we're not picking anyone up yet. We don't want them to hole up where they are. We need them to move, and they won't if they realize they're being driven. }} His gaze went back to the holographic projection. {{ Mr. Wyrm, could you put up province boundaries and geographical landmarks? }}\n\n{{ Coming up, }} the tech-wizard said, amused at being called \"Mr. Wyrm.\" It sounded so formal!\n\nEliza took a break from Wyrm's display of his technical expertise and headed down to the kitchen to get a cup of blood. The kitchen was deserted when she arrived. But when she had grabbed her nourishment and turned around, Kalinicia was standing in the hallway, staring at Eliza with a purpose.\n\n\"I would have words with you now,\" Kalinicia said in her unsure English.\n\n\"Very well,\" Eliza said. This was another conversation that was a long time overdue. But Eliza had settled things in her head, so she was ready for it.\n\nBut Kalinicia sat down on a stool and actually looked a little forlorn. This wasn't a girl looking for a fight.\n\n\"I . . . I was not sure how to feel when I saw you,\" the beautiful young vampire maiden said. \"I had heard that my grandfather had come to . . . to assist you. And I was told by other trapped . . . refugees that he had died under your command. I wanted to hate you. I tried to hate you.\"\n\n\"So what happened?\" Eliza asked, sitting back and taking a sip of blood.\n\n\"I . . . before you came over, I was talking with Chancellor Valar. I knew that he was one of the two Terrans who had been there when . . . when it happened. He said how you had asked him to stay behind where it was safe. Like you did with Wyrm. He told me how no one had expected an attack on . . . the fort.\" Kalinicia shook her head. \"Why did you not avenge him?\" she asked suddenly. \"You had his killers in . . . in the palm of your hand.\"\n\n\"I wondered that myself for a while,\" Eliza replied. \"But I couldn't beat them by being the monster they thought I was. You can't always fight fire with fire. Kelik understood that.\" She sighed. \"I need you to understand something, Kalinicia. I loved that old man. He was like family when . . . well, when I didn't have my own to rely on. And if I had thought there was ANY possibility that the Purity would've attacked Fort Crass, I would've moved him out. And to this day, I'd be willing to take his place. But that isn't a choice I get to make, but I do have to live with it. Kelik was a leader, just like you're going to have to be. That means making choices that other people may have to pay for. Every day, I have people who put their lives in my hands. I've accepted that responsibility. That also means I'll accept the heartache when I lose one, whether it was in my power to stop or not. Are you sure you're ready for that?\"\n\n\"I am not sure,\" Kalinicia said, trying to be as honest as she could. She believed Eliza when the woman said she loved Kelik. Kalinicia knew that her grandfather had had great respect for the daughter of the Security Director. There were times when she had been jealous of that. \"But I wish to find out. I am supposed to begin living on Earth soon so that I might become more acquainted with its people. I wanted to see what kind of person you were before . . .\"\n\n\"Before what?\" Eliza asked.\n\n\"Before I asked if I could come stay with you. Valar suggested that you have opportunities to travel all over the world and . . . and that my grandfather would want me to be under your care.\" A tear appeared in the young vampire's eye. \"He wants me to put my faith in you. Just like my grandfather did. And no matter how unfair it is, I'm not sure I can trust you.\"\n\n\"Well, I can't make you trust me, and I wish Valar had checked with me before suggesting you come back with us. I'm sure you've had some very good . . . training, but I really don't have time to baby sit . . .\"\n\nKalinicia's eyes shot open and her nostrils flared. She might have been a little unsure of speaking English, but she sure as hell understood it. [[ I am no child that needs looking after! I may not be a warrior, but . . . ]] She stopped, unsure why Eliza was smiling.\n\n[[ You need to learn to control that temper, ]] Eliza told the younger woman. [[ But at least now, you're acting like his granddaughter, ]] she added, patting Kalinicia on the shoulder and then heading back down the hall. \n\nKalinicia sat there for a moment. 'You're acting like his granddaughter,' she thought. It was a thought that finally let her smile.\n\n---------------- ----------------\n\nSeveral weeks later . . .\n\n---------------- ----------------\n\nEliza was sitting in her father's study again, a small fire in the fireplace and her father sitting in the chair next to her with Eliza's mother in his lap. The three of them were enjoying a fine bourbon, which her father had developed a taste for and often had imported from Earth. Evlidone had been \"pressured\" into a family moment by his wife, who had been far too patient in waiting for her family to reconcile, so she was going to push for these little moments as often as she could. \n\nThey were also celebrating what appeared to be the end of the campaign against Swords of Cleansing. After a mass exodus from their individual hidey-holes, the Devlian Intelligence Services were able to triangulate their movements and descended on the main encampment. And they had stolen another idea from Eliza's tactics on Earth . . . they enlisted A LOT of trolls. Eliza had been willing to go to war with six. When Evlidone gave the word to attack the camp, he sent about thirty trolls, and the amount of destruction they wreaked would be the stuff of legends. Many people were justifiably concerned that if this trend of troll unity continued that they might demand their own land. And no one was willing to step up and tell them they couldn't have it. The fight at the encampment had gotten ugly, but it had ended fairly decisively, leaving only a few small pockets of fairly weak resistance.\n\n[[ When do you think you might visit again? ]] Alyidana asked pointedly.\n\n[[ It might be a while, ]] Eliza said, looking a little guilty. [[ I have to get back to oversee the new construction in the compound, take on a new job just to let people know we're still out there for business, and I'm going by Veronica's parent's house for Christmas this year. It's an odd religious holiday on Earth, but it seems important to her somehow that I go. ]] She noticed her father shift a little uncomfortably, but she didn't say anything. He was just going to have to accept that she was seriously involved with another woman, and that included trips to the parents.",
        "[[ Will you be sticking around for the Festival of Stars? You and Veronica? ]] her mother asked, digging her elbow into her husband before he could attempt to object. [[ Of course, the rest of your team is welcome to stay as well. ]]\n\n[[ Mom . . . ]] Eliza started to whine.\n\n[[ It's only a few weeks away, ]] Evlidone said, [[ and you've missed the last fifty of them. It would mean the world to your mother . . . and me . . .if you would attend. ]]\n\nEliza wondered what was up. The Festival of Stars was a ceremonial affair that signified the end of the Terran year. There was a feast that generally was open to family and friends, followed by a traditional dance and an exchange of secrets between loved ones. But when the Prime Minister threw a Festival of Stars ceremony, it tended to be an ostentatious and grand event. [[ Dad . . . if I go, it HAS to be with Veronica. ]]\n\nEvlidone sighed. He knew she would make that demand. [[ I would not ask that you be with someone you didn't care about. But . . . just for the sake of tradition, conduct yourself like a lady. ]] He sipped his drink and then muttered under his breath, [[ Assuming you still remember how. ]]\n\n[[ I heard that, ]] Eliza replied.\n\nAlyidana, however, had the final trump card. [[ And think about it . . . you would greatly upset a number of high society people, but they wouldn't be able to do a THING about it. ]]\n\nEliza mulled it over. [[ I'll talk to Veronica . . . ]]\n\n--------------- -----------------\n\nA few weeks later . . .\n\n--------------- -----------------\n\n\"I have GOT to see this!\" Boomer said, sitting anxiously in the entryway for the house while waiting for the women to make their appearances. Every member of Hybrid Security had chosen to stick around for the Festival of Stars. Partially, they were nervous about splitting up while there were still pockets of the Swords of Cleansing about. Partially, they wanted to see Eliza, queen of jumpsuits and casual attire, sporting a dress. \n\nWyrm grinned. He had to admit, the idea was enticing. He had never seen his boss in a dress, though he had OFTEN fantasized about her in lingerie. Of course he felt a little foolish himself. He had never worn formal robes before, but he and the rest of the men found themselves in just such a fashion predicament. Apparently, robes were ALL the rage on Terra. They looked like something ancient Japanese warriors might have worn. But they were silky and comfortable.\n\n\"Woah!\" said Dennis as the ladies finally came into view. They were all wearing similar gowns, namely off-the-shoulder and elegant with a slight flare at the bottom. His wife was wearing one in white, and her hair was in a partial bun with strands of hair cascading down over each shoulder. She was as beautiful as the day he married her. \n\nKalinicia was wearing a similar dress in green, and she looked dazzling. She immediately attached herself to Wyrm's arm. Vicky wore a blue gown and came out with Terillia, who was dressed in a purple gown with a large section in back tastefully removed to accommodate her wings.\n\nBut when Veronica and Eliza walked out, hand in hand, time stopped. Veronica was dressed in gold, cut a little low in front to give a tasteful display of cleavage, and her curled and blonde hair fell from her head like well-orchestrated chaos. And Eliza was dressed in black; the gorgeous gown hugging her trim waist and slim hips as it flowed elegantly to the floor. She was even wearing jewelry, namely a necklace of gold and diamonds and a matching set of bracelets. She looked for all the world like a fairy-tale princess.\n\n\"Well,\" she said to her troops as they gawked awkwardly at her, \"my parents and the Prime Minister are awaiting us. Let's go piss off some aristocrats!\"\n\n---------------- ------\n\nAt the party . . .\n\n---------------- ------\n\nEliza was sitting at a long table with her father on one side and Veronica on the other. Boomer was still talking about how confused he was that vampires consumed something besides blood. Kalinicia was trying to reassure him that while blood was the most efficient way for her kind to obtain nourishment, it wasn't the only way. The Festival of Stars was an excuse for her people to \"indulge\" themselves. Eliza noticed that she seemed to stay close to Wyrm, no matter who they were talking to.\n\n{{ You enjoyed that, didn't you? }} her father sent telepathically with a hint of whimsy.\n\nEliza grinned. When she had arrived, everyone in her troop had been introduced separately by the herald, except for Dennis and Allyson. Only married couples were ever introduced together. The arrival of Hybrid security and their \"controversial\" leaders had ruffled many feathers and raised many eyebrows, but no one would dare be outright rude. Instead, all eyes had been trained on each of them, waiting for the slightest impropriety on their part so they crowd could have something to talk about. Veronica and Eliza were the last two of their party that were introduced and although they came in separately, Veronica waited for Eliza to be called and then took her lover's hand, and the two walked straight through the room. The indignation subtly displayed was delicious!\n\n{{ I would just like to point out that I've been behaving myself, }} she replied. {{ The feast is delicious by the way. }}\n\nEvlidone shook his head, but he had to admit that he was enjoying himself. He had never thought he would share this celebration with his entire family. He glanced down and saw that his daughter was holding hands with Ms. Veronica Adams again. 'With my . . . extended . . . family?' he thought. He felt a kiss on his cheek, and turned to face his wife. While he had been watching Eliza, Alyidana had been watching him.\n\n[[ Sir, ]] said an approaching Aruthis, [[ the . . . entertainment . . . has arrived. ]]\n\nSuddenly, Evlidone was a bit more serious. [[ And the Prime Minister is safely away? ]]\n\n[[ Yes sir. And the crowd has been suitably . . . diluted. ]]\n\n[[ Dad, what's going on? ]] Eliza said, not caring if she interrupted. [[ I've been watching guards usher guests into the side rooms and . . . ]]\n\nEvlidone placed a finger to his lips. [[ Shh. ]] He turned to Alyidana. [[ Dear, would you mind following Aruthis to the antechamber? ]] He turned back to Eliza. [[ You might want to go too. This shouldn't take but a moment. ]]\n\nEliza looked at him, leaned back in her chair and crossed her arms. She wasn't going anywhere.\n\nEvlidone sighed. [[ Why can't you just . . . never mind. We have a small band of acrobats signed up to perform at the party. Our intelligence believes that at least three Swords of Cleansing assassins have joined the troupe, hoping to make an attempt on my life. ]]\n\n[[ Evlidone! ]] Alyidana exclaimed as she rose to leave. [[ Are you mad?!? How could you allow them into . . . ]]\n\n[[ Because they are desperate and the target is tempting, ]] Evlidone replied casually. [[ And because I have everything under control. I learned this trick from listening to my daughter's legends, ]] he added. He felt a sudden rush of pride.\n\nEliza turned to Terillia. {{ Take Vicky, Wyrm, Kalinicia and . . . ]] Eliza watched as her ENTIRE team leaned back in THEIR chairs and shook their heads.\n\nWyrm was the first to speak. \"Nuh-uh boss. No one gets left behind anymore. We know the risks, and we're standing beside you.\"\n\nEliza looked incredulous. \"Vicky and Wyrm are non-combatants and the rest of the humans are non-magical. This isn't . . . Wyrm, at least take Kalinicia and . . .\"\n\n\"I will stay. My grandfather would not run, so neither will I,\" the young vampire said firmly.\n\nShe turned exasperatedly to her father. [[ They refuse to leave. They're being impossibly stubborn! ]]\n\nEvlidone smiled. [[ Now you understand what I had to deal with being your father for the last century, ]] he said, then turned to his wife. [[ Please, just go with the Captain and . . . ]]\n\n[[ Are you sure our daughter and her companions are safe here? ]] Alyidana asked.\n\n[[ Yes, but . . . ]]\n\n[[ 'But' nothing. I will stay. This is our first night out as a family in over half a century, and I'm not going to have it broken up by an assassination attempt. ]] Eliza's mother sat back down, leaving Captain Aruthis looking very bewildered. Did anyone in that family actually listen to anyone else?\n\nA group of men and women in brightly colored costumes was let in the front gate. Eliza noticed that the remaining crowd seemed to be composed of very calm people . . . probably undercover guards. The acrobats started their performance, and Eliza watched them quite carefully. She looked for hesitation in their movements, as that might signify someone new to the group. She looked for someone who paid too much attention to the head table. She was confused as to why her father would let this charade go on, but she reminded herself that he didn't get where he was by accident.\n\nWhen the attack finally came, it was actually a bit anti-climactic. Three of the tumblers rushed forward, their eyes harboring a fanatical madness. Eliza raised her hands as if to cast a shield, but her father waved her off. The assassins seem to cast a burrowing spell that would eat its way through any shielding, followed by a couple of nasty spells that rearranged the targets internal organs. But the burrowing spell was \"reflected\" back, causing it to eat the other attack spells in its wake. During the attack, the remaining acrobats, who seemed horribly confused, were ushered back out the door they had come in through. Then, shimmering walls of haze seemed to appear around the attackers, surrounding them like a cage. They realized they were trapped and began casting frantically, trying to find a way out. One of them looked backward and saw Chancellor Valar standing by the entrance, maintaining the shield spell. But then they heard a single set of hands clapping, and they all turned their attention forward.\n\nEvlidone was smiling as he gave his would-be dispatchers a round of applause. [[ It was a . . . pretty . . . attempt. I was hoping for better, but I shall give you points for effort. ]] The venerable Security Director stood up and faced the assassins. [[ Do you have anything to say for yourselves? ]]\n\n[[ You piece of shit, ]] one of them started. [[ You think that you've won? The Swords of Cleansing will be reborn and we will kill you and that disgusting abomination sitting next to you! ]] he added, looking directly at Eliza.\n\n[[ You would lead the vampires, the greatest of all races, down the road of racial dilution. You . . . ]]\n\n[[ What I meant was, did you have anything USEFUL to say? ]] Evlidone interrupted. He strode down the stairs to where the captives were caged. The containment area was about ten feet wide by twenty feet in length, and stretched from the floor to the ceiling. [[ Valar, please open this wall and let me inside. ]]\n\nValar looked stunned. The entire room had gone dead quiet.\n\n[[ Sir, what are you . . . ]] Captain Aruthis started.\n\n[[ Chancellor Valar, I ORDER you to let me inside, effective . . . ]] Evlidone stopped. His daughter had appeared at his side.\n\n[[ Dad, I don't know what you're up to, but I'm not letting you risk your life! You're too important! ]]\n\n[[ Eliza, I know what I'm doing. Please . . . just believe in me. ]]\n\nEliza stopped. [[ If I even THINK you don't have control, I'm coming in after you. ]]\n\n[[ Agreed. ]] He looked up. [[ Valar? ]]\n\nValar stared at him, then a smile crossed his lips. A door appeared in one side of the cage, and Security Director Evlidone Msabdteelfinclor stepped into the lions' den. Almost immediately, the confused assassins attacked.\n\nAs the general guests came back into the room and Eliza's team (and her mother) looked on, an ass-whooping was taking place. But it was the assassins on the receiving end. Eliza had forgotten how adept of a sorcerer her father was, but he was putting on quite a display. One of the assassins was actually embedded about a foot into the ceiling, while another was attempting to extinguish the flames that had been ignited in his clothing. The third attacker had just had his fourth and fifth spells absorbed and negated respectively, then made a blind attempt to bum-rush Evlidone.\n\nEliza snarled. [[ Valar! ]] she shouted. Another door in the cage opened and she sprung forward. She moved with such speed that the on-looking crowd gasped in surprise. Her father apparently had been planning on casting something against the man, but stopped after his daughter buried her shoulder into the assassin's midsection in a full-tilt charge. The man doubled-over as he flew back into the far wall, blood leaking from his mouth as he fell to the ground.\n\n[[ That was HARDLY ladylike, ]] Evlidone said. [[ If you ruin that dress, your mother will NEVER let you hear the end of it. ]]\n\nEliza checked the dress and, except for a bit of dirt on the front, it was fine. She brushed herself off.\n\nEvlidone looked at the smoldering but still breathing attacker. The man realized that his comrades had been permanently removed from the field of battle, and he started to whimper. Evlidone shook his head. [[ The Swords of Cleansing are finished. I hereby place you under arrest for treason against the Prime Minister and the nation of Devlia, assault, illegal use of combat magic within the Palace Grounds, . . . ]]\n\nEliza went back up to her seat while the remaining attacker was taken into custody, all the while being charged with a myriad of additional crimes.\n\nWith his daughter distracted, Evlidone turned and kicked the prisoner in the crotch, then leaned over and whispered in the would-be-assassin's ear, [[ And that 'disgusting abomination' is my daughter, you son of a bitch, ]] he growled. He stood up and saw Valar nodding his approval. The two exchanged a smile. No one fucked with Evlidone's family.\n\n-------------- -------------------------------\n\nBack at her parent's residence . . .\n\n-------------- -------------------------------\n\n\"I don't get it,\" Wyrm said as soon as they crossed the threshold. \"Why put his ass on the line like that?\"\n\nEliza grinned. Her parents would probably be tied up at the palace for a while, so she alerted the house staff to take a break. Then she turned to her friends.\n\n\"He was never in any danger,\" she said. \"They used all their big mojo in their opening gambit. They were no match for him in a straight-up fight. I keep thinking of him as 'old,' but he's still young for a sorcerer of his power. This wasn't about catching a couple of rebels. It was about making a statement.\"\n\n\"He made an impression,\" Dennis said, pulling up a seat and pulling his wife into his lap. \"He left an impression in the ceiling, the floor . . .\"\n\n\"That's NOT what I meant,\" Eliza replied. \n\nThug raised his head. {{ The main Swords of Cleansing force had been destroyed, leaving only fringe groups . . . isolated pockets of resistance. But those pockets could gain numbers and return to prominence if they felt they could still win, }} the troll thought.\n\nEliza nodded. Her friend was much more observant than many people gave him credit for. \"This was a very public and very thorough beating. With no single leader to unite them, they NEEDED this attack to work. But if was a dismal failure.\"\n\n\"It's going to be hard or impossible for them to convince any new recruits that they can win after such a decisive failure,\" Terillia said. \"This is . . . the straw that broke the camel's spine.\"\n\nVicky grinned. Her lover was cute when she mis-translated.\n\n\"My father knew that a single public display could save us against years of guerilla warfare,\" Eliza finished.\n\n\"Well, I think I know where you got your 'sneakiness' from,\" Allyson said.\n\n\"Maybe,\" Eliza replied. She looked over at Veronica. \"You know, I never DID get to dance with you,\" she said, pulling the beautiful blonde woman into her arms. \"Wyrm, could you hit the music?\" \n\nWyrm turned to his laptop and brought up a playlist. The first song was slow, which was perfect for Eliza. The members of Hybrid Security watched as their boss and her girlfriend giggled like young girls as the floated across the floor with uncanny grace.\n\n\"And she can dance too,\" Allyson chuckled. She got to her feet and pulled her husband with her. Vicky and Terillia joined them on the dance floor, and Kalinicia gently took Wyrm by the hand. After the established couples had finished the first dance, they paired off with others, bringing Snake, Boomer and Bear onto the floor as well. Thug and Tiny rolled their eyes, then wandered off to find something to stare at. Trolls didn't \"do\" dancing.\n\n\"That was a pretty good feast,\" Wyrm said, sitting down after several dances. Kalinicia sat with him. \"Do all these 'Festival of Stars' end with a fight?\"\n\n\"No,\" Eliza replied. \"Usually, it ends with an exchange of secrets. It's sort of like a 'whispering,' but instead of sharing something no one knows with the departed, you share a wish with a friend or loved one. It's sort of like our version of a New Year's Eve kiss on Earth.\"\n\n\"I think that's a fine idea,\" Allyson said.\n\nBear turned to Snake and Boomer. \"Dudes, I so love you guys!\" The three of them shared a laugh and then wandered off to find some alcohol.\n\nAllyson whispered into her husband's ear. \"I want to have a family,\" she said. Dennis looked shocked, so she continued. \"I don't want to quit yet and it doesn't have to be right away, but . . . \"\n\nDennis lifted his wife off her feet and held her close. \"I love you,\" he told her.\n\n\"Not much of a secret,\" she said, \"but it'll do.\" She took him by the hand and led him back to their bedroom. \n\nVicky and Terillia had removed themselves to a corner of the room. \"I think I see you as more than a friend,\" Vicky said. \"I think I kind of love you,\" she said.\n\nTerillia blushed dark blue and her heart raced. \"I feel the same way. I hope that doesn't mean you are not interested in bringing in additional women, though. I was contacted by two friends from my homeland before we left for the Festival. They wish to visit us on Earth so that you might impart your sexual wisdom upon them.\"\n\nVicky grinned. \"Are they hot? I mean . . . attractive?\"\n\n\"Absolutely!\" Terillia said. \"I thought you might enjoy them, but I wish to remain with you for a great deal of time.\"\n\nVicky kissed Terillia long and slow. \"You are perfect for me.\" She grabbed her young lover's hand and led her towards the stairs that led up one of the towers.\n\nKalinicia was looking incredibly nervous. \"Wyrm . . . I . . .\"\n\n\"It's okay,\" he interrupted. \"If you need to be mad at me or . . .\"\n\n\"No,\" she replied. \"I do not blame anyone for what happened to my grandfather. He seems to have trusted you all, and I have come to understand why. What I wanted to say was . . . Wyrm, I have never known intimacy with a man. I . . . I was wondering if you might be with me today. If I am to experience your world, I wish to start by experiencing your touch.\"\n\nWyrm took a deep breath. \"Are you sure?\"\n\nKalinicia looked at him and lowered her silky-soft lips to his. After a few moments, she ended the kiss. \"I am very sure.\" She took him by the arm and the two walked towards Wyrm's room.\n\n\"Well, alone at last,\" Eliza said. She was a bit nervous herself.\n\n\"Lover, I'm glad you and your father are talking again. I'm glad you let me be a part of this,\" Veronica added, looking around at the splendor that was Evlidone's house. \"I don't know if Christmas at my parents will be able to live up to this,\" she added with a smile, \"but it might.\"\n\n\"Veronica . . .\"\n\n\"Yes?\"\n\n\"Will you marry me?\"\n\nVeronica's eyes shot open and her lips trembled. Suddenly, there didn't seem to be enough oxygen in the room. \"Muh . . . marry you?\"\n\n\"There is no chance I want to spend the rest of my life with anyone but you,\" Eliza said. \"You are my equal, my love and my lover. And since we are neither human nor vampire, we can make up our own culture . . . our own rules, and . . .\"",
        "Eliza found her air supply completely cut off as Veronica grabbed both sides of her face and kissed her like she had never been kissed before. Considering their history, that was once heck of a kiss. \n\n\"Yes,\" was the only thing that Veronica was able to say.\n\n------------ -------------------------\n\nIn the Murgo's bedroom . . . \n\n------------ -------------------------\n\n\"Harder! Is that all you've got?!?\" Allyson shouted as her husband drilled her from behind. She was on all fours and he was buried deep in her box. She felt . . . liberated. There had always been this voice in the back of her mind warning her that in her line of business, there was no place for family. She had always worried about getting pregnant and bringing a child into a dangerous world. But she had begun to believe that she, her husband and her friends could keep any child safe. It was an exaggerated sense of safety and she knew it, but it made her happy.\n\nDennis was happy as well. While nervous about being a father, he had always known that Allyson would be a terrific mother. And in the last year, they had grown even closer. There was something about putting your life in someone's hands and having them come through for you time and time again that brought couples closer together. And for a woman in her late thirties, Allyson was still hot! Her breasts may have developed a little big of sag after all of their years together, but the rest of her was firm and powerful. Her back was already glistening with a fine sheen of sweat from her exertion. He was pumping his seven inches of manhood into her warm pussy and she was screaming for more. \n\nAllyson began to growl. There was something about getting fucked doggy-style that brought out her \"baser\" instincts. Her hot sex was gripping her husband's cock like a clamp, and she was squeezing as hard as she could. 'God that feels good!' she thought as he hammered her. In all their years together, Dennis had NEVER ceased being attentive to her physical OR emotional needs. Whenever she was with him, she still felt . . . young. She giggled at the thought, considering she was well over half-a-century younger than her boss, and almost half a millennium younger than Eliza's father. She felt her husband's weight settle lightly on her back as he grabbed her smallish breasts and cupped them as he drove his meat into her cunt. She felt his lips on her shoulder as he kissed her, and she bit her bottom lip. Finally, the incessant pounding and the angle of penetration proved to be her undoing, and she came with the reckless enthusiasm of an eighteen-year-old. Her tight hole squeezed her husband's schlong, forcing him to stop as her body relieved itself of her girl-juice. She dropped her head to bed, gasping as if she had just run a marathon.\n\nBut Dennis wasn't quite done (though he was awfully close). As soon as his wife had relaxed, he laid into her again. He always waited until she had come at least once before allowing himself to achieve release, and he knew that Allyson was going to want to \"talk\" afterward. He straightened his back, grabbed her hips and simply went to town. \n\n\"C'mon stud, show me what you're made of,\" Allyson groaned. Dennis had twice the stamina of men half his age, and he never failed to satisfy her. She spread her legs a little more and began shoving her weight backward. The impacts were incredibly satisfying and quite loud as flesh rammed hard against flesh. \n\n\"Here it comes,\" he moaned, blasting a load of baby-batter into his wife's box. The waves of cum seemed to be never-ending as he filled Allyson's hole all the way to the brink. When he pulled out with a sloppy plop, some of his seed began dripping down one of her thighs.\n\nThe two lay on the bed, Dennis spooning his wife of fifteen years. They talked about the number of children they might want to have and possible baby-names. Allyson was excitedly discussing colors they might paint a nursery when she felt something hardening between her ass cheeks. She reached back and touched her husband's member, which had been restored to full erection.\n\n\"You are such an animal,\" she said. 'Hell, making the babies is the fun part!' she added as her husband entered her again.\n\n-------------------- --------\n\nIn Wyrm's room . . .\n\n-------------------- --------\n\nWyrm hadn't breathed in a very long time, or at least that's how it seemed to him. Kalinicia had helped undress him before he lay down on the bed. His prosthetic arm was lying on the floor, as the stunningly beautiful creature standing at the edge of the bed didn't seem bothered by his handicap. The moon, whose light was creeping in through the window, illuminated the room.\n\nWhile Kalinicia was determined to go through with this, she was nervous. She slowly slid her dress down to the floor, leaving her standing only in her panties.\n\nWyrm's breath returned in a single gasp. The woman standing at the end of the bed was perfect. She wasn't an athlete like Eliza was . . . rather, she had the beauty of a model combined with an unmistakable air of grace. Her breasts were small but perfectly formed. Her stomach was flat, her hips slightly curved . . . but it was her face that caught most of Wyrm's attention. He wasn't sure, but he thought she was blushing.\n\n\"Am I . . . pleasing . . . then?\" she asked shyly. \n\n\"You're the most beautiful woman I've ever seen,\" he said, meaning every word. But there was something he needed to ask. \"Kalinicia . . . why me? Why tonight?\"\n\nA faint smile played across her lips. She crawled down the bed, tracing her hand along his leg, gently over his sizeable member (as far as she could tell) and up his abdomen. He was an impressive physical specimen, even without his arm.\n\n\"I . . . I know I have told you this before, but I trust you,\" she started. \"You have been honest with me, even when it was difficult for you. And because you are handsome,\" she added, biting her bottom lip for a moment before risking a kiss. She was unsure of her ability to kiss someone, but Wyrm seemed to be responding well. She reached down and tentatively took his nine-inch member in her hand. It was much hotter than she had imagined, and the heat was almost addictive. \"And . . . please do not . . . become 'turned off' by this, but you are all I have left of my grandfather, and that makes you important to me.\"\n\nWyrm was concentrating as hard as he could to prevent cumming right there on the spot. Her hand was so soft and so . . . child-like in its playfulness. She was exploring his cock, and he was afraid the excitement might overcome him. \n\n\"I know that there are many ways of providing pleasure,\" she continued, \"and I hope to explore them with you, but for tonight . . .\" She stopped and straddled his lap, placing the head of his penis at the entrance to her virgin pussy.\n\n\"Are you ready?\" he asked. When she nodded, he placed his hand on one soft butt-cheek, and slowly pushed her downward. From the moment the head of his cock entered her, Wyrm's brain went into pleasure overload. It had been a while for him, and this girl was TIGHT! Then he felt resistance, and Kalinicia let out a \"yip\" sound. She looked scared. \n\n\"Don't worry,\" Wyrm reassured her. \"The way I understand it, this feels about the same for vampires as it does for humans. It will hurt the first time, but then . . .\"\n\nKalinicia wasn't going to wait for a long explanation. While she had never done this before, she was aware of the basic workings of it. She pushed her hips downward, feeling a tearing sensation inside her. She stopped when her ass hit Wyrm's thighs, waiting for the dull, throbbing pain to subside. She let her torso gently fall until it rested on Wyrm's chest, and she just lay there for a moment.\n\nWyrm wrapped his arm around her and held her tightly. He could feel her nipples on his smooth chest as she took long, deep breaths. When she raised her head, he kissed her lips. Soon, she had forgotten the pain. \n\n\"I think I am ready,\" she whispered when they both came up for air. She placed her delicate hands on his shoulders and lifted herself up. His hand crept up and gently fondled one of her breasts. Then she raised her hips up just an inch or so, then moved them down again.\n\n\"I think you've got the basics down,\" Wyrm joked, making her smile. Of course, she was somewhat inclined to smile anyway, as she was beginning to understand the pleasure that nine-inches of hot dick could provide. While no stranger to masturbation, this was an entirely different level of pleasure. She felt her inner muscles squeeze and heard her lover moan.\n\n\"I'm ready to advance past 'the basics,'\" Kalinicia responded. She flipped her hair back over her shoulder as she slowly began riding her one-armed stallion. She liked having him inside her, his beautiful cock penetrating her pussy. 'Is that an appropriate term for a cock?' she asked herself. 'Beautiful?' She rocked back and forth on his lap, making even slower movements when he raised his torso and latched his mouth onto one of her nipples. It was a highly pleasing sensation for her, and the combination of pleasures she was experiencing was beyond enticing.\n\nWyrm had never experienced such a sensual act with such a perfect woman. Her skin felt wonderful against his, and her velvet tunnel seemed to be specifically built for his helmeted invader. He was struggling to maintain his composure. He would never be able to forgive himself if he wasn't able to help her cum on her fist time in the saddle. But he felt the pressure building in his balls and he knew he couldn't hold on much longer. So he decided to take a chance and utilize some information he had obtained from watching (and listening to) Eliza and Veronica's relationship. He released her nipples from his lips, then proceeded to kiss her gently on the neck.\n\nKalinicia froze like a deer in the headlights. It was . . . exquisite! Her neck was tingling beneath his lips, and she actually began to tremble when the tip of his tongue did a circle on her skin. Her eyes were open, her breath had escaped her and she felt incredibly warm all over her body.\n\nWyrm had reached the end of the road. His sperm came shooting out like a shot from a gun, spurting repeatedly into her womb as his cock twitched wildly. He went from broke with his mouth, latching his lips firmly on a particularly sensitive area and sucking with a tremendous amount of pressure. As he gave her a hicky to end all hickies, he felt his incredibly tender but still semi-rigid rod tightly ensnared as Kalinicia's body squeezed down. Her arms were wrapped tightly around his neck as she experienced her first orgasm of the hands of a man. It seemed to go on forever, and his constant attention to her neck kept things going. Even after the initial quake rippled through, the aftershocks almost knocked her on her ass. She wasn't able to think coherently until he finally released his lips from her neck.\n\n\"I . . . thought we were going to take it slow,\" she muttered, kissing those incredible lips. \n\n\"I had to do something,\" Wyrm replied with a grin. \"You're so hot that you were making me look bad.\"\n\n\"I think you look wonderful,\" she said, holding herself close to him. \"Do . . . do you think you might become aroused again? Soon?\"\n\nWyrm chuckled. With a woman like Kalinicia, THAT was a silly question.\n\n----------------- -------------------\n\nUp in one of the towers . . .\n\n----------------- -------------------\n\nTerillia was on all fours, her wings expanded and her eyes opened wide. A number of her primary feathers had gone flying all over the room. Vicky was kneeling behind her, and once again had her hand buried all the way into the young succubus's pussy. Every since the two women had arrived at the tower's observation room, they had been going at it like rabid dogs. Terillia had eaten her human lover to multiple orgasms before the teacher again took control, leading to that moment.\n\nVicky was overjoyed that she had found a creature that was not only sexually active but was also capable of things that Vicky had never imagined. Terillia's vaginal cavity fit Vicky's hand like a glove. Vicky leaned in and kissed one of those taut little ass cheeks as her hand explored the depths of Terillia's sex. As she extended her fingers and then pumped her fist, she lightly bit that perfect ass-flesh. She heard Terillia give out a squeak, causing Vicky to smile. She was glad they had picked an isolated area for this, because Terillia got VERY noisy when the sex was good.\n\nTerillia placed her face against the cold stone floor, noticing the contrast between the coolness of her face and the heat in her groin. When her human mentor took Terillia in such a manner, she felt so full . . . so complete. She squeezed her opening around Vicky's wrist, which sent a tingling sensation throughout her body. And she felt Vicky's tongue teasing her anal opening. Terillia outright squawked at that point. It was a pleasurable experience that she had not encountered before. 'This is why I am glad she is my teacher,' Terillia thought as she began to coo.\n\nVicky had never been with someone as easily or highly aroused as Terillia tended to be in sexual situations. She pumped her hand a few more times, and her lover started to chirp. Another pump and a light touch against the girl's asshole with a finger from her other hand, and Vicky had Terillia going off like a coo-coo clock. Terillia's slot was gripping Vicky's wrist tightly, and she shivered so hard that she actually lost a couple more feathers. But if the succubus thought that she was \"getting off\" easy, Vicky had other plans. Over the course of ten minutes, she made Terillia cum two more times. Her forearm was covered in Terillia's juices, and the poor succubus appeared exhausted.\n\nTerillia let out a little sigh when Vicky lay down next to her, taking refuge in the comfort of one of Terillia's wings. \n\n\"You were wonderful to me . . . as always,\" Terillia hummed. \n\nVicky smiled. Everything about her succubus lover seemed musical to the human teacher. \"Back at ya,\" she said.\n\nTerillia processed that, then smiled. \"We are not . . . done, are we?\"\n\nVicky laughed. \"I think we are. You've tired me out little one.\"\n\nTerillia looked cross. \"I am not tired,\" she said. \"I want . . . I want more!\" Her wings fluttered again, and a few more feathers hit the ground. \n\n\"But sweetie, we need to get some sleep! We're heading home . . .\"\n\n\"I . . . want . . . MORE!\" Terillia said, her eyes taking on a very predatory look.\n\nVicky watched one of the feathers slowly floating towards the floor. Suddenly, she realized what was happening. Terillia was molting! 'Oh shit!' Vicky thought. Succubae molted their wing-feathers at least twice a year (or more, if a wing had been injured). During this process, succubae tended to become . . . a tad aggressive, particularly when confronted about even the littlest thing.\n\n\"Okay,\" Vicky almost whimpered, \"I guess we can . . .\" The human woman was cut off as Terillia leaped on top of her, the succubus's face pointing at Vicky's ass as she pinned the human woman to the ground.\n\n\"Much better,\" Terillia said, roughly grabbing her lover's ass cheeks and burying her face between Vicky's thighs. With her head hanging upside down, the succubus sent her tongue flying once again between Vicky's nether lips and made the human woman squirm.\n\nVicky was feeling like a mouse with a cat on its back, but she couldn't help but respond to that persistent tongue action. Like a powerful snake, it slipped into Vicky's cunt and slithered around. She bucked her hips, pushing her ass against Terillia's greedy hands. She was sweating and moaning as that six-inch tongue acted as a sex toy, plunging in and curving to stimulate Vicky's g-spot with incredible speed and accuracy. Then, one finger from each of Terillia's hands penetrated Vicky's body, but it wasn't her pussy that they were exploring. Vicky had never been keen on the idea of anal play, unlike her sister who seemed to thrive on it. But it was much more pleasant than she had imagined, and her sphincter being stretched by those digits made her front opening particularly tingly. Then, an additional finger from each hand joined in, and Vicky's virgin asshole was being incredibly violated. She reached her arms out and started to crawl along the floor, almost in a panic.\n\n'Too . . . many . . . things . . . inside me!' she thought desperately. She found herself overloading with sensation, and her brain. But she wasn't able to crawl very far with Terillia on her back. And the succubus didn't even seem to notices that her quarry was trying to escape! She just kept licking and poking and having a grand old time with Vicky's privates.\n\n\"Oh God!\" she cried as her climax hit, rampaging through her like the running of the bulls in Spain. Her arms were splayed out to the sides and she rested her head on the carpet. There was nothing left for her to do except cum on the floor . . . and then to let Terillia do it to her again. But she wasn't struggling anymore. She was smiling!\n\n--------------- -----------\n\nIn Eliza's room . . .\n\n--------------- -----------\n\nEliza was sitting Indian-style on her bed, her glass dildo firmly grasped in one had and placed in the center of her lap. The business end of the sex toy was buried in Veronica's backside as that blonde woman was bouncing up and down in Eliza's lap. Both women's skins were glistening with sweat as they continued making love.\n\nThe two of them had entered into a sixty-nine as soon as they had gotten back, and they had stayed there for two orgasms apiece. Then, the nibbling had begun. Both girls had fresh puncture marks on their necks that were already in the process of healing. Between the biting and the finger action, both women had experienced multiple orgasms. That was when Eliza had broken out the toy and, after a few strokes in the traditional opening to get it nice and slick, had watched her girlfriend position the head of the dildo at her asshole and sank down onto it. Veronica's legs were wrapped around Eliza's waist as she bounced up and down.\n\nEliza dipped her head and wrapped her mouth around one of Veronica's breasts, sucking her lips in until they were locked on the nipples. She was grasping her lover's ass with her free hand, driving that sweet ass down onto the dildo, and then helping lift her back up again.\n\n{{ That feels SO fucking good! }} Veronica mentally growled. {{ Deeper! Stick it deeper in my ass! }}\n\nEliza pushed the dildo further in until she barely had any of the toy left to hold on to. {{ Your wish is my command. }}\n\nVeronica grabbed Eliza's hair and pulled her face away from Veronica's tits, kissing the white-haired Hybrid on the lips. {{ I am very much looking forward to our honeymoon, }} she thought, a little more gently.\n\nEliza smiled, then pushed Veronica back onto the bed. She let go of the glass cock with it still buried deep in Veronica's ass, then lifted the blonde woman's hips up and placed the backs of her knees on Eliza's shoulders. She could see how stretched Veronica's anus was, and she hoped that would make her oral assault that much more pleasurable. She kissed Veronica's left outer labia, then moved to the right. She sucked on one inner labia, then the other. She sucked every so gently on Veronica's clitoral hood, flicking the sensitive spot with her tongue. Veronica shuddered and groaned. Then, Eliza took a long, deep lick from the bottom of her lover's slot all the way to the top. Then another one, except that the second lick was a little faster . . . then faster . . . then faster.\n\nVeronica was grasping her own breasts firmly and pressing her legs together tightly against the sides of Eliza's head. 'My fianc\u00e9's head,' she thought to herself. She liked the sound of that. And she LOVED the feel of Eliza's tongue in her box, compounded by the pressure exerted by the glass rod in her rectum. {{ Lick me baby, }} she thought. {{ God you're so sweet! }}",
        "Eliza redoubled her efforts. {{ I'm looking forward to doing this while you're wearing a wedding dress, }} she teased. \n\n{{ That's just ONE of the fantasies I'll help you with, }} Veronica said. For her part, Veronica was looking forward to getting back to her \"human sacrifice\" fantasy that she and Eliza had shared in a dream once upon a time. \n\nEliza grabbed the end of the dildo and wiggled it a bit, just to further stimulate the pleasure centers in Veronica's tortured behind. Veronica squirmed, so Eliza went back to work on cleaning Veronica's front door with her tongue. Then she slowed down a bit. She began patting Veronica's swollen opening lightly, then pinching the outer lips. Then she would drag her tongue along the surface, just enough to tease the clitoral hood but not enough to actually stimulate the nub. Veronica rotated her hips, trying to get some part of Eliza's mouth to make contact with the clit, but Eliza pulled back just enough. Then she did it again. \n\nVeronica wasn't about to put up with this torture. She grabbed the top of Eliza's hair and pulled her face forward, then clamped down with her legs. She heard an amused chuckle emanating from between her thighs, but she didn't care. She wanted release in the worst way. And with Eliza's tongue back in Veronica's cunt, the latter woman got her wish. \n\n\"Oh God!\" she shouted at the ceiling, her meager remaining resources spilling into Eliza's mouth. Then there was that happy warmth that signaled the end of a climax, instigated by the woman she loved. She felt herself being lowered back to the bed and the glass dildo being removed from her backside. And finally, Eliza was lying on top of her.\n\n\"Is it always going to be this fabulous?\" Veronica asked, licking her own cum from Eliza's lips. \n\n\"Nah,\" Eliza joked. \"Haven't you heard? I thought that on Earth, don't you stop giving head after marriage? I thought that was a rule.\" She started to laugh as Veronica's finger began tickling Eliza's flanks.\n\n\"Take it back,\" Veronica said with mock seriousness. But then the tickle-fest got out of control, and there was no \"serious\" to be had.\n\n------------ --------------\n\nThat evening . . .\n\n------------ --------------\n\nMost of the household staff was puttering around, beginning the preparations for the night to come. None of Eliza's comrades had apparently awoken yet except for Veronica, who didn't sleep much. But Veronica was quite comfortable in bed after a night of sex and brief nap, and wasn't going anywhere until she had to. So Eliza wandered down to the kitchen for a drink. She looked out the window into one of the gardens and noticed Thug sitting quietly and staring at the stars. She wandered into the garden and sat down next to him.\n\n[[ Penny for your thoughts? ]] she asked.\n\n|| GOT CHANGE? || Thug replied.\n\n[[ Funny. So, where's Tiny? ]]\n\nThug paused. || I REALLY DON'T KNOW. HE MAY HAVE GONE DOWN TO THE DEVLIAN RIVER TO WATCH FISH. ||\n\n[[ Don't you mean to 'catch' fish? ]]\n\n|| NO, HE JUST WATCHES THEM. FISH GIVE HIM INDIGESTION. ||\n\n[[ You are weird creatures, ]] she said, leaning against one powerful arm and staring at the sky. Then she grinned. [[ Remember the last time we sat out here? ]]\n\nThug grunted. It was his equivalent of a laugh. || WAS IT FORTY YEARS AGO? OR THIRTY? IT WAS BEFORE YOU LEFT ON YOUR 'vacation.' THE ONE THAT LASTED FOR . . . THIRTY YEARS. YOU WERE SO ANGRY WITH YOUR FATHER THAT I WAS WONDERING IF YOU WOULD EVER COME BACK. AND I WASN'T THE ONLY ONE. IT IS WHY YOUR FATHER ASKED ME TO GO WITH YOU. ||\n\n[[ He was trying to look out for me, even then. After all the shit we went through and all the problems . . . }}\n\n|| YOU NEEDED TO DO IT, || Thug said. The woman sitting next to him had been a friend to the troll even when most sentient species would rather walk the other way, and he had never forgotten that. || TERRA WASN'T THE PLACE FOR YOU. OLD WAYS DON'T MESH WITH A FREE SPIRIT. AND BESIDES, IT TURNED OUT THAT THERE WAS SOMEONE WAITING FOR YOU. ||\n\nEliza smiled. [[ Was Veronica even born when we crossed over? ]] she said, thinking idly. [[ I think she may have been two years old or so. That's an intimidating thought, isn't it? I was finished with school and sexually active before by fianc\u00e9e was even born. ]]\n\n|| FIANCEE? SO YOU FINALLY ASKED HER? ||\n\n[[ What, are you on some kind of schedule? Yeah, I asked her this morning. Now all I have to do is break the news to Dad. Just when he thought he had everything settled . . . ]]\n\n|| YOU ENJOY MESSING WITH HIM AND YOU KNOW IT. BUT IT'S GOOD THAT YOU'RE SPEAKING AGAIN. YOU COULD FOOL EVERYONE ELSE, BUT I KNOW HOW MUCH YOU MISSED YOUR PARENTS. EVEN YOUR FATHER. || Thug sighed. ||YOU'RE GETTING MARRIED. WYRM IS GETTING LAID. VICKY AND TERILLIA ARE PLANNING AN ORGY. DENNIS AND ALLYSON ARE PLANNING A FAMILY. I WILL BE SPAWNING IN ABOUT SIX MONTHS, AND . . . ||\n\n[[ WHAT? ]] Eliza almost screamed. [[ You're going to have a trolling? ]] \"Trolling\" was the appropriate term for a young troll. It also meant that things were going to get . . . interesting . . . around the compound. Baby trollings were raised in pits until they had developed enough patience to stop destroying things. From the moment they came into the universe, trolls already had their regenerative capacity as well as their camouflage ability. Legend had it that the reason that adult trolls were so patient was because they had to raise their own children. [[ When did this happen? Why didn't you say something?!? ]] Eliza added, hugging her friends arm.\n\n|| I DON'T KNOW. I'VE NEVER ACTUALLY SPAWNED BEFORE. IT HAPPENED RIGHT AFTER THE BIG WAR BACK ON EARTH. THERE WERE SIX OF US TOGETHER, SO WE FIGURED WE WOULD TAKE CARE OF BUSINESS. ||\n\n[[ How romantic, ]] Eliza said with a smirk. [[ Still . . . you are coming back with us, aren't you? ]]\n\n|| OF COURSE. TINY HAS ALREADY PROCREATED A COUPLE OF TIMES. ONE OF THE REASONS I WANTED HIM ON THE TEAM IS SO THAT YOU WILL HAVE SOME HEAVY BACKUP WHILE I AM OTHERWISE OCCUPIED. I FIGURED YOU WOULD NEED IT SINCE YOU CAN'T GO A FORTNIGHT WITHOUT PICKING A FIGHT WITH SOMEONE. ||\n\n[[ Always my protector, aren't you? ]] Eliza asked. [[ But soon you'll have a trolling to look out for and I'll have Veronica. You know, I think things were simpler when we just shot at things all the time. ]]\n\n|| BUT NOT NEARLY AS REWARDING, || Thug replied. || IT'S A DIFFERENT WORLD THAN THE LAST TIME WE CROSSED OVER TO EARTH. WE'RE DIFFERENT CREATURES NOW. ||\n\n[[ Not all that different, ]] Eliza responded. [[ We're starting out the same way. You and me, sitting around and wondering what the future holds. But this time, I'm not running away from anything. ]]\n\n|| SO WHAT ARE YOU DOING THEN? ||\n\nEliza looked up at the stars and smiled again. [[ Going home. ]]\n\n------------------------ ----------------------------\n\nTHE END . . .\n\n------------------------ ----------------------------\n\nP.S. I have received some wonderful feedback and incredible responses to this story from a number of happy readers. I am flattered beyond measure at the patience, enthusiasm and loyalty that many readers have demonstrated over the last eight months. While I am going to take a break from these characters and the world they live in, I intend to leave things open so I might return to them someday. Thank you all for the time you spent reading these stories, and I encourage you to check out some of my other works on down the road."
    ],
    "authorname": "Evil Alpaca",
    "tags": [
        "sci-fi",
        "lesbian",
        "vampires",
        "magic"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/its-a-dead-mans-world-ch-06"
}