{
    "title": "Blow Your Mind Pt. 12",
    "pages": [
        "I hope you are all liking the series so far. Please be polite in the comments, even if it's negative. This one is a lot longer as Brandi and Kory work on how to co-exist and how their powers are changing.\n\nPART XII\n\nBrandi yawned as she got out of her Uber and started the complex system of undoing her numerous alarms to get into her condo. Brandi could tell Kory was feeling the sun and smelling the sea and taking it all in.\n\nAfter several minutes they got inside and Kory let out a whistle. \"Nice place Brandi. Really nice. Right on the ocean, lots of private security, top line systems, and I'm betting you have some other less obvious things in place?\"\n\n\"Yes and thank you. I've modified some of the alarm systems and made some of my own personal items. If you happen to get control of my body, be careful what you touch without checking first.\"\n\nKory snickered. Brandi walked all through her place checking various things and items, noting that no one had been inside since she had left nearly two months back. She checked her office last and swept it for bugs. Then she sat down and pulled out her new burn phone. She dialed the number and got Mr. Case right away.\n\n\"Brandi, so good to hear from you. The client is VERY pleased with your work. He included a bonus for you and said that things are going smoothly. I have to add my own thanks as this one was a hard one. That being said, we need to talk. Very soon. I want to hear details and we need to be sure to properly document this for future possibilities.\"\n\n\"Of course, are you free at 3pm?\"\n\n\"Yes, make it the office at 34<sup>th</sup> and White.\"\n\n\"Will do.\"\n\n\"One other thing. Your boyfriend Steve has been calling the office since you went out of town. We told him you had forgotten your phone and were on assignment, but I get the distinct feeling he is going to ask a lot of questions and not take wave offs this time.\"\n\n\"That is not good.\"\n\n\"Not it's not. I don't presume to tell you how to live your life Brandi, but you need to handle this. If he won't back off, you may need to cut him loose.\"\n\n\"I will handle it.\"\n\nThe phone went dead and Kory let out another low whistle. Brandi felt some alertness and alarm from Kory.\n\n\"That was Mr. Case I take it? Okay, yeah, I can see why you are nervous about him.\"\n\nBrandi blinked. \"You, wait, from just that?\"\n\nBrandi could feel Kory's link pulse wariness. \"Something about his tone. Call it gut feelings, but I've dealt with guys who are dangerous and the really dangerous ones are the ones that have no tone. He was neutral, I mean dead neutral. It's hard to pick up, most people who don't deal with danger never notice. But for someone like me? Yeah, that is the tone of someone you do NOT want to fuck with. He could talk to you about baseball and killing a guy with a screwdriver in the same conversation and not even break stride. I think we made the right call NOT telling him.\"\n\nBrandi nodded and looked at the clock. \"About noon. We can get cleaned up and then I'll call my boyfriend and have him come over.\"\n\n\"We need to fix him fast.\"\n\nBrandi paused at Kory's tone. \"Meaning, shit, yeah, I get it. Mr. Case didn't exactly leave any room for doubt and I need to be sure Steve doesn't do something stupid.\"\n\n\"That him?\"\n\nBrandi looked at a picture on her desk of her and Steve on a large boat that they had taken at a party right as Steve had closed a big deal for some real estate. It had been a fun night and she had left the next day for her Chicago assignment.\n\n\"Yes, that's him. He's fun, and rich, and connected. And I'm pretty sure he's head over heels in love with me.\"\n\n\"You got that right. That look in his eyes? Oh yeah, he's smitten. Fuck, this could be a problem. But he's handsome and looks great, so maybe the solution will be fun. In fact, maybe we can try something out.\"\n\nBrandi would have gotten mad at Kory but she felt the link. Kory was thinking hard about something. Then Brandi blinked.\n\n\"Donni.\"\n\n\"Yeah, Donni. Her mind was manipulatable when we were having sex. We might be able to modify his memories about this.\" Kory said.\n\nBrandi tapped her lip and smiled. \"That might work, but we need to do a test run first. There is something more to this. When I was scissoring at the club going after McLean, I changed some memories. With Donni though it felt like something more. We might be able to do something else, but we need to test it first. Steve isn't going to be a lab rat.\"\n\n\"Yeah, that makes sense. I get you like the guy, but if he's connected we need to be careful about how we work with his mind.\"\n\nBrandi opened her backpack and pulled out Kory's laptop and the hard-drives she had found. Brandi felt Kory tense up a bit, but she was also relieved and excited.\n\n\"Glad to see this stuff?\"\n\n\"Yes very. If I ever try to get back into Chicago, this stuff will get me in the door.\"\n\n\"I used your laptop back in St. Louis, I didn't see anything on it and the password was stupid simple.\"\n\n\"Feh, who keeps anything on a laptop anymore? The hard drives are the key. That one with the red dot is my blackmail stuff. Photos, videos, scanned papers and so on. I could put away the entire Chicago mob, half the police force and probably the entire city government with that. The FBI would pay me their yearly budget for that.\"\n\nBrandi made a mental note to see about copying it sometime. \"And this one?\"\n\n\"That is my rainy day money. Account information for a couple of offshore accounts, and a bunch of bitcoin.\"\n\n\"Nice. And this?\"\n\n\"Personal stuff and my \"business plan\" for running the city. I keep a lot of it in my head, easy when you are a genius, but my basic blueprint and my historic notes are on that. I can adjust on the fly, but I need to have it mapped out to really get the idea down and to make decisions.\"\n\n\"I get you, I use that white board and the whole wall there when making my plans. You have to be able to see it, and not just in your head.\"\n\n\"You got it girlfriend. Great minds think alike after all.\"\n\nThey both giggled at that.\n\n\"Okay Kory, here's the deal. I am going to lock up your stuff in a safe. I am not going to touch your money or your stuff. We will keep it here safe for you for when we get you out of me.\"\n\n\"Thank you. I appreciate that. Who knows, maybe I'll just retire after all this is done.\"\n\n\"I really doubt it, you don't seem like the person who retires.\"\n\n\"Well, neither do you.\"\n\nBrandi finished emptying the backpack and opened one of her safes. She had several, and this was a spare one. She put everything in it and locked it up. She turned back to the backpack and then remembered one of the interior pockets. She reached in and pulled out several bags of that synthetic coke she had taken.\n\nAs soon as she saw it, she felt a craving. Not huge, not like she got when she didn't feed for several days, but a dull ache or craving. Brandi felt Kory's link pulse a bit and it seemed similar to her own feelings.\n\n\"So what do we do with this?\" Kory asked.\n\nBrandi licked her lips. \"Um, I took it because I am curious as to how it might have affected me, well, us, when we had our incident. It's not normal coke, so I am wondering if maybe it can help us fix our problem.\"\n\nBrandi felt Kory thinking, and she was thinking herself. \"Hmm, I can get this to Mr. Case and have him run tests for me. Or...\"\n\n\"Kory, I'm a brilliant chemist. And you were the one who was overseeing the development of this product. I can use my company's assets and have them test it for me. Or, with a little bit of shopping and setting up I can run some tests myself.\"\n\nKory seemed to focus a bit more. \"Making this stuff wasn't that hard. I was surprised by how little equipment was needed. It's the chemical base materials that are the issue.\"\n\nBrandi mentally shook her head. \"Nope, not for our situation. You are thinking in terms of market, I'm thinking in terms of just personal. We are not making this for distribution, we are making it to test it and figure out if it can help us or not. That means the amount of chemicals we need we can likely get at a chemical supply store with no issues. It's not like we are cooking meth for sale, we are taking several ounces at most.\"\n\n\"Fuck, didn't think of that. Okay, but Miami is your boss's base, he likely keeps tabs on you. Starting up a lab is going to get noticed and he will ask questions.\"\n\n\"I am thinking we tell him some of the story. The coke boost was real, we can tell him that much. I've got an idea about the rest to tell him. And then I show him what I have and tell him I want to dig into it. He knows I'm a god-honest chemist and a really good one at that. Why wouldn't he let me work on it?\"\n\nKory focused. Brandi could sense she was running it through her head, just like she did. After a moment Kory said \"I think that will work. Your boss is a guy who catches lies and reads people for a living, so the story we tell needs to have as much truth to it as possible. In my experience, if you tell a story that is 90% true you can get away with bullshitting the last 10%.\"\n\nBrandi mentally nodded. \"I agree. For us, we can likely catch even that 10%. You see how sensitive we are, I'm practically a walking lie detector. But Mr. Case is an exception, he's hard to read and he is a guy who is exactly what you said earlier. We need to be careful.\"\n\nBrandi picked up the bag and carefully tipped some out onto a piece of paper. She got another plastic bag from the kitchen and poured it into the other bag. She locked that in the safe with Kory's stuff.\n\n\"Just in case we need some at a later time. Mr. Case may want to take all of it and I don't want to cause any fuss.\"\n\nBrandi could fell Kory was focused on the coke. And she was too. The craving was still minor, but it was like a little fly buzzing her head, just enough to annoy but you could ignore it if you focused.\n\n\"Kory, I think we need to do something, go for a walk or hit the pool.\"\n\n\"Yeah, I think some air is what we need.\"\n\nBrandi went into her bedroom and changed into some workout clothes. Brandi could feel Kory looking over her closet. She could feel approval and some jealousy.\n\n\"Problem?\"\n\n\"Fuck. I can't get over the fact we feel each other like this. You have an awesome wardrobe, and I'm jealous as fuck. This number? Sexy as hell, I bet you cause men to hyperventilate when you wear it. But classy. This is top shelf high dollar.\"\n\n\"Thank you. And right now it's more correct to say \"Ours\". Like it or not, you just got a new wardrobe.\"\n\nBrandi could feel Kory looking over the dresses and shoes and feeling happy. Almost giddy. And then some disappointment.\n\n\"What's the matter?\"\n\n\"I could have never worn any of this.\"\n\n\"Why not? You were a molten hot hottie, your body would have killed this one.\" Brandi said pulling out a short black dress.\n\n\"Yeah, my body would have. But I would have stood out like a sore thumb. You wear a dress like that and you have to act the part.\"\n\nBrandi realized what she was getting at. \"Wow. Kory is talking about not fitting into high society. She's sad because she felt that even with the power she had she wouldn't have fit in.\"\n\n\"Damn girl! There may be some more benefits to this for you than you or I realize.\"\n\n\"What do you mean?\"\n\n\"I know how to fit in. I copied high class social skills from a couple of high dollar escorts and a couple of trophy wives I worked over. If you are going to be a shape-shifter you need to not only look the part, but act it. I'll give you the best tutorial you've ever had.\"\n\nBrandi could feel Kory was excited about that. And also touched. \"Thank you. That is nice for you to do, but I guess I'd get it anyway since you would put on the airs regardless.\"\n\n\"That is true, but it's one thing to just watch. It's another to be tutored while you watch.\"\n\nKory seemed to agree with that based on the feeling, but she didn't reply as Brandi pulled on her workout clothes.\n\nBrandi put up her hair in a ponytail and put on her sneakers. \"How about a job along the beach?\"\n\n\"Sounds nice. Funny, strippers and high society both wear the same workout clothing.\"\n\nBrandi checked herself out in the mirror. Her body was in great shape and her figure was killing the skin-tight leggings and athletic bra. She blew a kiss at the figure. \"That's because both of them are trying to look the same type of hot in this getup.\"\n\n\"Well, you checked that block.\"\n\nBrandi laughed and headed towards the door. Just as she neared it the door buzzer buzzed.\n\n\"Huh. I wonder who that is?\" Brandi clicked on her camera. A young woman with blonde hair was standing in front of her door, dressed in a fashionable business blouse and skirt holding two cup of coffee. Brandi didn't recognize her.\n\nBrandi clicked on the speaker. \"Yes?\"\n\n\"Excuse me, is Ms. Mimms home? I'm her new neighbor, Cynthia Banners. I just moved in two months ago, and I saw someone entering the apartment earlier and wanted to check to see if my mystery neighbor was back from her job.\"\n\n\"Oh wonderful, looks like we have a new friend.\" Kory said with some annoyance and humor.\n\n\"This girl, seems a bit familiar now that I hear her voice...Oh, she was at one of the after-hours events. I met her at the last one before Chicago. Peppy. Very peppy.\" Brandi replied internally.\n\n\"Oh sure, I remember you. We met at the after-hours cocktail party right before I had to leave for my consulting job in Denver. Hang on.\"\n\n\"Shit, you are going to let this dork in? She sounds like another one of those busy-bodies who likes to get into everyone's business.\"\n\n\"Can't wait for her to leave, and she'll be back anyway. Kinda curious why she moved in here though.\"\n\n\"Why's that?\"\n\n\"She doesn't have that high paying a job, one of those society gigs, curator or something, and this place is expensive.\"\n\n\"Maybe she lives on her parent's dime.\"\n\n\"Maybe, but I'm getting the feeling that ain't it.\"\n\nBrandi opened the door and Cynthia pushed right in and took her hand.\n\n\"Oh, so glad to meet you again! I was so excited to hear that we were neighbors, but then I never saw you. I was wondering what happened. All our friends at the cocktail hour were wondering if you would ever come back.\" She gushed.\n\nBrandi smiled and shook her hand. But she was looking her in the eyes and immediately got an off feeling.\n\n\"This bitch is up to something.\" Kory said.\n\n\"Yes, I'm getting that feeling too. Those eyes have no smile to them.\"\n\n\"Fuck the smile in the eyes, although that is a good one. That smile is forced, see the way her lips turn?\"\n\n\"Good catch. I was going off her breathing and her facial twitching, it's not someone who is calm.\"\n\n\"Oooo, got it. Damn, you are not kidding, you are a walking sensor! Yeah, I can see her facial twitches, I can hear her rapid breathing, shit I can feel her heartrate. She's hiding something.\"\n\nBrandi nodded and smiled as Cynthia babbled on about various people at the cocktail party and how they all missed her.\n\n\"Well, I'm back and I will be trying to attend the next one, but I was heading out for a jog and...\"\n\n\"Oh of course, here let me put this down in your kitchen and I'll be on my way!\" Cynthia said and moved right past Brandi and into her apartment.\n\n\"Hey! I didn't...\"\n\n\"Not a problem at all, oh lovely place you have! And this must be your kitchen. And...what is this?\"\n\nBrandi came behind her and saw that she was bending down. Brandi sensed some excitement off of Cynthia.\n\n\"Uh oh.\" Kory said.\n\n\"I am seeing it.\" Brandi replied.\n\n\"What may I ask is this?\" Cynthia said as she straightened up and turned to face Brandi. Brandi noted a look of triumph in her eyes even though she put on a puzzled face. In her hand she held a small baggie of white powder.\n\n\"Oh shit! That must have fallen out of the backpack when we came in and were digging around! I took several sample bags from your safe house!\" Brandi thought.\n\nBrandi looked at the bag with a puzzled look. \"Where did that come from?\"\n\nCynthia held up the bag and gave a sympathetic smile. \"Not yours? Well, that is odd. Don't worry though Brandi, I won't tell anyone. As far as I am concerned this never happened.\"\n\nBrandi snarled internally. \"What the fuck is this idiot on about?\" Brandi kept her face straight and smiled back as she easily noted Cynthia's face. Her eyes had a slight look of triumph, her smile was obviously NOT about being concerned, and her breathing was definitely excited.\n\nKory started laughing. \"Cripes Brandi, she thinks she had the goods on you! Oldest trick in the book, be the best friend of your most hated enemy. Get them to trust you and then stab them in the back. She is going to try and be your best friend and use this against you when she needs to.\"\n\nBrandi nearly gaped openly but was able to control her face. \"For the love of God! Seriously? I come back after all of this crap in Chicago and THIS is what I have to deal with first thing? Some dumb blonde wanting to play social queen bee drama games?\"\n\n\"Well Brandi dear, no one needs to know about this \"mystery\". After all, you are such a popular figure with the young set here in Miami, it would be terrible for this to come out.\" Cynthia said with a mock tone of sympathy that Brandi could hear through a mile away.\n\n\"Oh fuck this. Brandi, let's fuck this cunt's head up!\"\n\n\"Agreed!\" Brandi said out loud.\n\n\"I be......\"\n\nBrandi moved forward and grabbed Cynthia. She kissed her full on the lips and Brandi dove into her head like she was an eggbeater going after batter. Brandi felt a full connection and she could sense Cynthia's mind turning into puree under her power.\n\nShe broke the kiss and let Cynthia simply slump to the floor in a heap. Cynthia's eyes were rolled up in her head and she was drooling. Brandi laughed and Kory matched her.\n\n\"God, what a moron! Of all the dumb shit to happen, having some bimbo trying to play high school drama games was NOT one I was expecting. Damn, she was planning on taking up my whole day to integrate herself as my new bestie.\" Brandi thought.\n\n\"Yeah. This chick's a gold digger, and not a very good one at that. She tried to move way to fast and force things. I'm betting she was making passes at your boyfriend right and left while you were gone while playing the sympathy card. \"Oh Steve, I don't know why Brandi would jut up and leave you, I'm sure it's not you. Being such a career-woman she has to focus on her work, you understand.\" And so on and so on.\"\n\n\"Feh, that's a sure thing. Hmmm, we have about 4 hours until we have to meet my boss. We can dump this moron outside, go for a run, and forget about it.\"\n\n\"Or...maybe we can do an experiment.\"\n\n\"What do you mean Kory?\"\n\n\"Remember about not wanting to hurt Steve? Well, it seems like we have an ideal test subject that is literally at our feet.\"\n\nBrandi looked down and tapped her lip while she thought about it.\n\n\"Hmmmm, that's not a bad idea. No rush, and she still pretty new in town. Not connected, probably, but we can verify that easy enough. And I want to be sure about this. She may be a stupid gold-digger, but then again, she might be something else. Having some jealous bitch decide she wants to be the queen and then going after the one they think is in the way is pretty typical in the crowd I'm in, but given my real job we can't afford to assume shit.\"\n\n\"Great minds think alike.\" Kory replied with a feeling that made Brandi think she was grinning.\n\nBrandi grabbed Cynthia by her feet and dragged her to her guest room. She heaved her up on the bed and then went back to make sure the door was secured. Brandi dumped the coffees in the sink and looked around to make sure the bimbo hadn't dropped anything. Aside from her keys which Brandi tossed on a small stand by the door, there was only the bag of coke.\n\nBrandi pursed her lips. \"Hmmmm, let's keep this handy. We might think of a use for it.\" She thought as she tucked it into her bra.",
        "Brandi felt Kory's craving for it and felt her own. Not big, but she couldn't deny it.\n\n\"Fuck. Kory, how little was your habit? I'm feeling some need here and I'm not liking it.\"\n\nKory sighed. \"I did a line or two at least every two days. You saw me at the club, sometimes more, sometimes less, but yeah, some every 48 hours. That's one of the reasons I was working on this new stuff, I was hoping to get a high without the side effects. And this stuff may be pretty close.\"\n\nBrandi kept her mind calm but she was angry. \"Fuck! That's not a \"little\" habit! Damn it! I did NOT need this.\" She took a breath and let it out. \"Okay Kory, I get it, but damn it, I did not need a drug addiction! And neither do you! We are going to kick this ok?\"\n\n\"Alright, alright, but that can wait. Let's fix this bitch first, keep it handy, like you said it may be useful.\"\n\nBrandi could tell Kory was annoyed at her, but they both got it. Not something that had been planned, so they just had to deal with it.\n\nBrandi went into the room and swept it for bugs. She got a hit on one of the buttons of Cynthia's blouse. She ripped her blouse open and found a tiny wire than hooked into a small recorder tucked into her bra.\n\nBrandi looked it over. \"Recorder, sound only. No transmitter. You can buy this at the mall for $25 bucks.\"\n\n\"Looks like she was after some dirt on you.\"\n\n\"Yeah, looks like it.\" Brandi smashed it with a heavy paperweight on her nightstand and swept the pieces into the garbage. \"Not anymore though. Now I REALLY want to mess this bitch up.\"\n\n\"Well, what are we waiting for?\"\n\nBrandi grunted and ripped off Cynthia's blouse and bra. She ripped off her skirt and panties but left the stockings on.\n\n\"Nice, I like my girls in stockings too.\"\n\n\"That's not, well, I do like it, but I'm just in a hurry to dive on this cunt.\" Brandi said as she pulled off her leggings.\n\n\"This chick is nice looking. Good body shape, nice tits.\" Kory said as she appraised her looks.\n\n\"Yeah, looks like a natural blonde, hard to tell since she is shaved, but looks it from the roots.\"\n\n\"Mmmm, wouldn't mind having her around for fun.\"\n\n\"Let's get into her head first.\" Brandi knelt down. She tugged on her nipple a bit and then forced some milk into Cynthia's mouth. She gagged a bit but Brandi forced it down.\n\n\"That should do it. Normally I just dope them up and then have them eat me out, a LOT more enjoyable.\"\n\nBrandi could tell Kory was getting excited and turned on and that in turn was turning her on. It was like Kory's lust was feeding her own and then she was feeding back to Kory and so on.\n\n\"Damn, I'm getting wet and turned on. My nipples are hard and my skin is flushing.\" Brandi said.\n\n\"MMmmmm, yeah, I'm really feeling horny. WOW! Come on girl! Get between that bitch's legs!\"\n\nBrandi didn't need to be told twice. She positioned herself and then ground down.\n\n\"HUUUHHHHHHHHHHH! Brandi and Kory hissed in unison as the connection was made. Brandi let the wave of pleasure roll over her. Unlike before where it was like being hit by a wave of force, this was slower and a lot more enjoyable, like being caught up in a gentle wave and carried a bit.\n\nBrandi moaned and let the pleasure ooze through her whole body. Kory was feeling the same thing and Brandi could tell Kory was enjoying it as much as she was. Brandi ground her pussy into Cynthia's pussy more and let her clitty rub up against hers and felt a nice easy orgasm wash through her and her prey.\n\n\"Ohhhhhhh, that was SO nice.\" Kory purred.\n\n\"Mmmm-hmmm.\" Brandi murmured. She let the orgasm spend itself and then she focused and dove into Cynthia's mind. The connection was excellent. Cynthia's whole \"system\" of DNA coding and operating system, memories, skills, and some other things Brandi didn't quite recognize were laid out in front of her. She felt the memories and they were definitely \"soft\".\n\n\"Oh yeahhhhhh, mmmmm, we can mix this cunt's head right up.\" Kory sighed out.\n\n\"Yesssss, mmmm, this is really nice. I get the same level of pleasure but it's not so wild and rough. And yes, her head is putty.\"\n\nBrandi dug into Cynthia's mind and soon was more than a bit annoyed.\n\n\"Mmmm, cripes, what a bitch!\"\n\n\"No argument there.\" Kory replied to Brandi's rather heated comment.\n\n\"This bitch shows up, and first thing decides she is going to be the ruler of the roost and decides I'M her target? Fuck! I never did anything but be nice there and try to stay out of the catty bitch games!\"\n\n\"That's, oh yeahhhhh, the whole point. People like you, you end up ruling the roost because you're NOT a bitch like her. I'm guessing everyone really enjoyed hanging around you and got invited to everything. Come on sorority girl! You know how this game works!\"\n\n\"Mmmmmm, okay, yeah. But shit, Steve and I are innnnnnnn, an open relationship.\"\n\n\"Look at those memories. This bitch made a pass the DAY you left! And Steve shot her ass down. And again and again to the point he stopped going because this bitch wouldn't let up. Sheeeeeeeee, OH MY GOD!\"\n\nBrandi and Kory rode another lovely orgasm. Brandi checked their prey and noted that Cynthia's mind was probably more blasted than any one she had ever feed on before.\n\n\"Okay, we need to figure out what to dooooooo. Shit, that's so wonderful. Okay, she's still trying to make a name for herself and appears to be failing. That's goooooooood.\"\n\n\"Hey what is this folder the one without the label.\"\n\n\"Ummmm, not sure. Haven't seen that one before.\"\n\n\"Let's, ahhhhhhhhhhhh, oh my GOD! This is so awesome! Let's see what it is.\"\n\nBrandi focused and she felt Kory focusing too and the file opened slowly. \"Uhhhh, this thing, it's hard to open!\" It snapped shut again as soon as Brandi stopped focusing.\n\n\"Yeah Brandi! It's like, like something important!\"\n\n\"What do you mean?\"\n\n\"Look at her system! She went haywire when you opened it, it's like you touched her core being or something!\"\n\n\"Shit! I don't want to mess with that. I might pull her out and I don't want this bitch in my head!\"\n\n\"Hold it! We need, uhhhhhh, we need a boost! We can open that file and see what's in it. It might help us figure out about me!\"\n\nBrandi opened her eyes and saw the baggie of coke lying within reach. She felt the craving and it was boosted. Her body was in overdrive and was using energy fast which weakened her resolve.\n\n\"No! We caaaaaaaaaaannnnnn, oooooo lovely. We can figure this out without that.\"\n\n\"Uuuuuuuuuhhhhhhh, come on! You said the coke boosted you like you never had felt before! Let's get into this bitch's inner head! Come on! This is our chance to figure out if this will work!\"\n\nBrandi moaned as another easy wave rolled over her. While the pleasure waves were not brutal and she could focus, the boosting she got from Kory was also causing her to feel other things. She was craving a snort of it and she was feeling even more horny that she ever had.\n\n\"Oh my GOD! Why am I so horny?\" Brandi hissed out.\n\n\"Uhhhhhh, I think it's my nymphomania. It's, oooooo, it's being boosted by this pleasure! Uhhhh fuck! Oh God this is so wonderful! Brandi! Do some! Come on, this is our chance!\"\n\nBrandi tried to focus on Cynthia's mind, but the next wave ripped apart her resolve.\n\n\"Shit! Okay, just a bit.\"\n\nBrandi opened the bag and had to focus hard as she poured a bit out onto the back of her hand. She nearly broke the connection but held firm and then she plugged her right nostril and snorted up the coke.\n\nThere was a moment of nothing and then Brandi started to float.\n\nAt least that was how it felt. Everything slowed down and she felt an intense wave of pleasure and stimulation hit her. It was like being wrapped up in a nice fluffy blanket all warm and cozy, and then a wonderful orgasm hit her and just carried her mind on it for what seemed like hours. Brandi felt like she was outside her body looking down.\n\n\"Brandi? Are you feeling this? It's sooooo wonderful, I'm floating.\"\n\n\"Yesssss, oh my, so nice.\"\n\nThey rode the high for a few moments longer and then Brandi started to return to earth. Her entire body felt plugged in and she was being bombarded with sensations. Smells, noises, feelings, visions, she had never felt more alive. And amazingly it was not overwhelming her. He was taking it all in and enjoying it fully!\n\n\"Oh my God. This, there are not words for this.\" Kory murmured.\n\n\"No, there aren't. Oh Lord, I want to cry from the pleasure!\" Brandi whimpered.\n\nHer mind felt stated and so alive. She could feel Kory and what she felt was bliss and warmth. Brandi was content to simply ride the feeling for several minutes, slowly rubbing against Cynthia's pussy and feeling everything. Slow easy orgasm after slow easy orgasm washed through her body and left her happy and so content.\n\nAfter another one, Brandi shook her head a bit. \"Ok, we neeeeeeed, mmmmmm, we need to do what we came here to do. Let's plug in.\"\n\nShe looked into her prey's mind and found that nameless file. Brandi looked at it and paused. She felt like it was something different, not a file per say, but something else. Something she could control, something she could grab and shape. Instead of opening it, she dove into it.\n\nBrandi felt like she was inside Cynthia once she dove in. Not like when she copied files or mixed-up heads, it was like she was INSIDE Cynthia's being, in amongst her thought process, her thinking, her actual being.\n\nAnd she could control it. She was feeling that she had Cynthia's entire \"being\" in the palm of her hand and that it was waiting for her to sculpt it.\n\n\"Brandi? This feels amazing! It's like we can mold her mind! No, like we can mold her whole being!\"\n\nBrandi felt a rush of power. Maybe it was the coke, maybe it was the boosted pulses from Kory, maybe it was Kory's voice egging her on, but Brandi smiled and said \"Time to make a servant.\"\n\nKory laughed and squealed in delight as Brandi mentally reached for the \"being\" part of Cynthia and began to shape it.\n\nBrandi couldn't explain how she was doing it. She just knew that Cynthia, the core Cynthia, was reshaping and remolding to fit her desires. Cynthia's mind was putty and Brandi could feel how weak it was, so easy to shape, so easy to program. It was a huge rush of pleasure and power. Brandi could feel Kory's link pulse with excitement and pleasure and that caused her to get more excited and to feel even more pleasure when the wave hit.\n\nKory egged her on. \"Yes! That's it Brandi! She tried to fuck us over, now she will serve us!\"\n\nBrandi decided what she wanted Cynthia to \"be\", and although she couldn't explain how she molded Cynthia's \"self\", she knew that she was. Cynthia was becoming a whole new person by her hands.\n\nBrandi suddenly knew she was done. Again she couldn't explain how she knew, she just felt it. She understood that Cynthia was now exactly what she wanted.\n\nBrandi pulled out of Cynthia's Core (that's what Brandi decided to call it) and could see that it was pulsing differently. It was synched to her and Kory's link. She was inline with their minds.\n\nBrandi let the next orgasm roll over her and let it carry her mind along. She felt her body nearly explode with pleasure as it felt every cell seemed to orgasm. She felt her internal operating system and saw that she could enjoy this for a while longer before she would start to have issues from exhaustion and dehydration. She noted Cynthia would not last as long.\n\n\"Ummmmmmm, Brandi. That was amazing. That last orgasm...mmmmm, just want to drift along and let it flow.\"\n\n\"Yes Kory. It's soooooooo wonderful. We can enjoy for a bit but will have to cut out soon or Cynthia will be injured.\"\n\n\"Okayyyyyyyy. Ohhhhhh, yeah!\"\n\nBrandi let her mind float and let her body slowly scissor against Cynthia. Brandi moaned as another orgasm washed over her. Brandi could feel Kory's link and it felt drunk with lust and pleasure. Kory moaned and sighed in her head matching her as their shared body shuddered with pleasure.\n\n\"Uh, soooo good, but I'd love some tongue action!\" Brandi sighed out loud.\n\n\"Mmmmmm, can we make her?\" Kory replied.\n\n\"Aahhh! FUCK SO GOOD! I've got an idea but we don't have time. Next time!\"\n\nBrandi could feel some disappointment from Kory but it was washed away as the next orgasm hit. This was a big one and Brandi felt her body nearly burst with pleasure. She was so amped up she couldn't even scream. She shuddered and jerked and then rode the wave down like she was on a sled going down a mountain. She lay back and the scissor connect broke. Brandi lay there and felt her body slowly stop twitching and relax. She felt completely drained and exhausted and SO wonderful!\n\n\"Mmmmm, so good.\" Kory whispered.\n\n\"Yes, that was wonderful, simply wonderful.\" Brandi said.\n\nThey lay still for a bit and Brandi felt her sensitivity drop off and exhaustion begin to build up.\n\n\"Kory? I think the coke is wearing off.\"\n\n\"Yeah, we are coming down. On man, I'm feeling tired.\"\n\n\"We need some food and fast or we are going to pass clean out for the whole afternoon.\"\n\nBrandi was able to roll to the side of the bed and after several attempts get up and stagger to the master bedroom. She got into a cold shower which shocked her more awake and then cleaned up. She eased into a robe and then grabbed her personal cell (her non-work \"Miami\" phone) and speed dialed her favorite Italian place. She had never felt so hungry so she ordered 5 large meat-lovers pizzas, a full pan of lasangia, spaghetti, breadsticks and two salads.\n\nShe staggered back into the guest bedroom and checked on Cynthia.\n\nCynthia was a mess. The bed looked like it had been left outside in a rainstorm with sheets soaked with sweat, cum and sexual juices. Cynthia was covered in the same and her hair was soaked with sweat to the point it looked like she had gotten out of the shower and towel dried it. The room reeked of sex. Cynthia was out cold and when Brandi checked her eyes they were rolled so far up that she felt she could almost see the ends of the optic nerves showing up.\n\nBrandi took her pulse and shook her head. \"Shit. We may have overdid it. Her pulse is a bit erratic, and she is dehydrated badly. We need to get some fluids into her.\"\n\nKory snickered. \"Serves her right for fucking with us. But yeah, don't need to have our new servant dying on us before we get to use her once. I don't suppose you have any IV's?\"\n\nBrandi thought a bit. \"No, but I have some glucose drinks. Those will work.\"\n\nBrandi went back to the kitchen and found the drinks. She downed one which gave her an immediate boost. She took three back to the room and was able to carefully pour them down Cynthia's throat. Cynthia was so gone she didn't even gag on it much.\n\n\"That helped a lot. Her pulse is evening out and she is getting some color back. We will let that settle a bit and then give her more.\"\n\n\"Good thing you whammied a doctor, it's useful to know about medical stuff.\"\n\n\"Whammied? Not the word I would use. Absorbed, copied, but in his case I ripped it out.\"\n\n\"Yeah?\"\n\n\"Fucker was going to do experiments on me. And more. He was a sicko.\"\n\nKory was quiet for a bit as Brandi drank another energy drink. Brandi found some old energy bars and ate them quickly. That helped a little, but they just sat there without much energy until the food arrived.\n\nBrandi had the delivery boy drop it on her doorstep as she had already paid by card and waited until he left. \"Don't want him carrying stories back about anything.\" She said as they got the food.\n\n\"Oh man! That smells good!\"\n\nBrandi's mouth was watering the second she opened the door. \"Yeah, the problem of heightened senses is that you can barely carry the food back to the table before tearing into it because of the wonderful input you get.\"\n\nBrandi had to force herself to make sure the door was closed and ran to the kitchen. She ripped open the first box she came to, breadsticks, and devoured them. After that she tore into a pizza and then was able to slow down and enjoy the food at a more controlled rate.\n\n\"Funny. Coke is supposed to dull your hunger, but I've never been hungrier.\" Brandi said.\n\n\"Yeah. The chemical mix for this new stuff was supposed to lose that effect, or at least have it not as much of a problem. Looks like it worked, at least in our case.\"\n\nBrandi ate every bite. She sat back and burped when she was done.\n\n\"Damn. I've never eaten this much food in my life. I should be vomiting right now from all of this, but I feel just content. Full, but not stuffed.\" Kory said.\n\nBrandi let her mind feel out her body. She felt full, she felt mentally energized, she felt mentally sated, and she felt that her cravings for sex and coke were fully sated and would be for a while. In other words she felt lovely.\n\n\"Yes. I feel just perfect.\" Brandi stood up and went out onto her balcony overlooking the ocean. She sat down on a chair and felt the warm sun for a bit. Brandi could feel Kory was mirroring her feelings nearly exactly, but there was a bit more.\n\n\"Hey Kory. You seem, um, a bit more relaxed than me? Not sure how to describe it.\"\n\n\"I'm just realizing that right now, I'm in the clear and safe. For the first time since I was sixteen, I'm not having to look over my back or worry about someone putting a bullet in my head. I'm out and even though I really enjoyed it, it's nice to not worry for a bit.\"\n\nBrandi nodded. \"I can see that.\"\n\nThey soaked up the sun for a bit and then Brandi sighed and headed into the master bath. \"Time to meet the boss. Let's clean up.\"\n\nBrandi took another shower, dried her hair and then got dressed and did her business casual makeup. Brandi could feel Kory checking out her attire and giving mental approval.\n\n\"You like?\"\n\n\"Sorry, I keep forgetting that you can feel me. Yeah, tasteful, business-like, just a hint of sexy, but nothing over the top. For blending in at your level, perfect. You are a chameleon. Heh, you blended in perfectly as high-dollar stripper. But you know what? You would have a problem being sleazy.\"\n\nBrandi nearly messed up her eyeshadow. \"Come again?\"\n\n\"Sleazy. I've been watching you work. You haven't ever worked the lower end and it shows. Good thing you have me now, otherwise you would have to copy some scank's \"talents\" from a dive joint by the airport.\"\n\nBrandi snickered. \"You know, I never thought of that. All my copied skills were with the high-end ladies, I guess I would stick out if I had to work the streets. Good thing I don't have to.\"\n\n\"Never underestimate man's stupidity. Even the richest guy likes to take a dive into the gutter once in a while. There is something about a classy woman who oozes sex appeal, but there is also something about a woman who is sleazy sexy and doesn't care who knows it. There is a thrill to it, an excitement.\"\n\nBrandi nodded. \"I can see that. I noticed how you worked the crowd. You were high dollar, but you had this appeal to you. Expensive, but just enough sleazy and trashy to make you dangerous and exciting.\"\n\n\"Flattery will get you everywhere.\"\n\nThey both laughed and Brandi checked out Cynthia. She took her pulse, gave her some more water and then covered her up. She put some water and some energy bars by the bed along with a pair of running shorts and an old t shirt and wrote a note.\n\n\"Drink plenty of water, eat these bars, clean yourself up, and wait for my return. Brandi.\"\n\n\"Think she will be up by when we get back? I felt her head and we melted it into paste. I'll be surprised if she remembers her own name.\"\n\n\"Unless I rip out memories, people do recover fairly quickly excepting the time period right around this happening. She may remember coming over, but I'm pretty sure after that it's going to be so convoluted she will have no idea. But I don't know how long the boss will be with me, so better safe than sorry. I'm going to lock the door as well, she won't be able to get out. I made sure these doors are tough and I've got the only keys.\"",
        "\"Taking no chances I see.\"\n\n\"Not after my run in with that doctor. Trust is something I have a very limited supply of.\"\n\nKory was silent at that. Brandi could tell she was wondering how much she trusted her, and Brandi was thinking the same thing.\n\n\"Well, time to go. Do me a favor, unless you see something or think of something that is so important you can't wait, keep quiet and let me talk. Mr. Case is the best normal human at reading people I have ever seen. I know I have the best poker face on the planet due to my control and sensitivity, but I still wonder how well he can read me.\"\n\n\"Got it, a voice in your head isn't going to help and we both have a lot to lose if he decides I may be a threat to you or more likely him.\"\n\n\"Yup.\" Brandi said and headed out the door.\n\nShe got to her car and started it up. Her condo complex had a hook up for batteries in each area so guests who were snowbirds could leave a car there and be sure it turns on when they showed up for a couple of weeks in January and she always made sure her car was hooked up.\n\nShe drove out and carefully took her time getting to where they needed to go. Brandi kept an alert eye and waited a bit until it was close to time. She entered the \"office\" which was a fake front. The front desk receptionist was just there to keep the lights on and let folks in when they needed to meet. Easy money and all she had to do was keep her mouth shut.\n\nBrandi went into a back office and swept it for bugs. Finding none she sat down and waited.\n\nMr. Case showed up about 2 minutes later and smiled as he sat down.\n\n\"Brandi, I am very happy to see you alive and well.\"\n\n\"Mr. Case, I am very happy to BE alive and well.\"\n\n\"I can believe it. So, first off, the client is happy. They have been able to finally set up shop and things are going as expected. He has paid us the full amount, plus you got a $1 Million bonus at the insistence of the client. It's already in your account as of five minutes ago.\"\n\n\"Thank you, and please let the client know I was glad I was able to fix his problem.\"\n\n\"And that is the second part. Jesus Brandi, what happened?\"\n\nBrandi sighed. \"I will type up the report and give it to later this week, but the short and sweet is that the head of the organization was a fucking brilliant woman who damn near killed me.\"\n\nMr. Case had his hand folded on the table and was listening attentively. Brandi could feel Kory paying close attention and she could feel Kory was impressed with what she saw. Even with her heightened senses, Mr. Case was a cool customer.\n\n\"Cute Kory, real name Cory Atkinson, from Chicago South side, was a certified genius. She took over her high school her junior year, at least that is what she told me when she was questioning me. I haven't had the chance to check it out, but given how she ran things, I'd believe it.\"\n\n\"She did. I checked her out. She was a major player in the underworld in high school. A friend of a friend was on her high school payroll and gave me some stories.\"\n\n\"Huh, I wonder who talked.\" Kory said.\n\n\"I hope your friend can keep his mouth shut, I'm not sure how much of her set will survive, but if the word gets out someone talked they may have a problem from the loyalists.\" Brandi said to Mr. Case.\n\nMr. Case nodded. \"Continue.\"\n\n\"So, Kory set things up over the last five years or so. She had it set up so it looked like she was the go between from the main players. There were, oh, maybe four or five major figures that someone who was able to track that you would have assumed were either the boss or were working together to run the show. But the trick was it was Kory, who had everyone thinking it was someone else. I got to DA McLean and figured it out. Him and that Police Captain Megan were probably the only two who knew it was Kory. Kory used her position as a stripper to play the \"mobster's girlfriend and messenger\" role which was really her giving the instructions to her patsies.\"\n\n\"I see. That is quite smart. Rare to see someone with a long-term plan and the ability to carry out so well.\"\n\n\"Yeah. Well, I had assumed the DA's wife's form and had pulled the info out of him. She had the house being watched from another house and when I jumped the fence I walked right in front of them. They used security cameras to track me, then tracked the bus, and then hacked the Uber site and then the hotel. I was changing back when Kory's goon busted in. I had just finished so he didn't see me change, but he was expected McLean's wife not Emerald the stripper. I was in the process of passing out when he came in, so I couldn't fight him off. Before I go further I found something else out. If I do a threesome I can change memories.\"\n\nMr. Case arched an eyebrow at that.\n\n\"FYI, its hard. Just the positioning alone was a pain, but if I can hook into someone's mind it helps boost my own. Memories become soft, pliable. I changed up Mrs. McLean's friend's mind, so now she thinks she had a meeting with her lover instead of running into me. So, useful skill, but not exactly practical.\"\n\n\"I see. Hmmm, well, now we know you can do that at least. But now, what happened after you were captured?\"\n\nBrandi shuddered, and she wasn't faking it.\n\n\"I woke up when Kory slapped me. That woman was scary.\"\n\nBrandi could feel Kory taking some pride in that statement, but she ignored it and pressed on.\n\n\"I gave up some information as she was going to torture me and I figured the truth would throw her off enough to let me figure a plan. It did. She didn't hurt me or torture me any and left me alone with a thug to finish me off. But I tricked him.\"\n\n\"What did you do?\"\n\n\"Yeah, what DID you do? I was wondering that myself.\" Kory piped up in her head.\n\n\"I told him I was a nymphomaniac and that I'd like a last fuck before I died.\"\n\nMr. Case blinked at that, which for him was a major show of emotion. Kory started laughing and tried to keep it quiet but failed.\n\nBrandi focused and continued. \"As distasteful as that was it worked. I was able to partially scramble his head and while he was trying to figure out what happened I was able to connect and rip his mind out.\"\n\nMr. Case nodded at that. \"You did that to the cop as well. I had a cleaning crew from out of town show up and they found a male and female that were lobotomized, another male who was dazed and didn't know what had happened for that last 24 hours and two bodies. One was a thug, hit from behind with a pipe wrench and the other was Kory.\"\n\n\"Yes. I knocked out the cop, assumed her form, and then took out the other two thugs and then Kory.\"\n\nMr. Case regarded her for a moment. \"How did you remain conscious after assuming the cop's form? That normally knocks you out for a while.\"\n\n\"I took a chance and used some cocaine. It is a stimulant, specifically a mind stimulant. I made an educated guess it might boost my mind enough to keep me in the game. It did barely, but barely was enough.\"\n\n\"How did that feel? What was the effect on you?\"\n\n\"It was a boost. A big one. My kisses were much stronger, my senses were even more heightened than usual, and my connections were amazing. But when I compare it to the memories of some of the people who have used it and from what I heard from others who had used it, it appears it has a different effect on me. I am more focused and my senses are boosted, but I'm not rushed or thinking I am smarter or faster. And the \"high\" I get is different. The pleasure I got from it was from how my sensory input was boosted. But it was also the cause of a problem.\"\n\n\"Which was?\"\n\n\"Kory. She had taken some coke too. It boosted her mind as well, and she resisted me when I tried to rip her memories out.\"\n\n\"Resisted?\"\n\n\"Yes, she actually pulled back when I tried to pull them out. I had her dopey and lopey from kisses, eating her out and giving her milk, but she still had enough juice to fight me. It was like a tug of war and I finally got mad and I, uh, jerked on her mind as hard as I could. I ripped her completely out.\"\n\n\"Like you normally do.\"\n\n\"No. I mean I ripped HER out. As in the whole her, her memories, her personality, her skills, her basic brain functions, everything. All gone.\"\n\nMr. Case was silent and so was Kory. Brandi could sense Kory was more interested in reading Mr. Case's reaction than her story which made sense since she already knew it. Mr. Case was hard to read as usual, but Brandi could tell he was in his computing mode in which he was internally going over new information and figuring out what it could mean for several different scenarios.\n\n\"How did this effect you?\"\n\n\"Shocked the hell out of me when I saw the body. What I had inside was worse though.\" Brandi shuddered again, faking it. \"I read my head and Kory's, self? Yeah, self, was shattered. I had parts of her mind scattered all over my desk. Parts of it, such as body functions and stuff like that, felt, ugh, dead. Disconnected, cold. It was unpleasant. Lots of her files were, well, corrupted, like when I jerked her into me the whole thing broke apart. I couldn't get many clear memories or skills, it was like a jigsaw puzzle scattered around.\"\n\nBrandi drew a ragged breath. \"Got an escort and dumped this stuff fast along with the stuff from Megan, that thug, and the McLeans. I kinda feel sorry for the escort, her head is going to be a mess. But I had to get that shit out, it was, unpleasant.\"\n\n\"Good story girlfriend. I think he bought it.\" Kory said quietly.\n\nMr. Case did look like he had, but Brandi wasn't going to start cheering yet. He was hard to read, but from what she could tell he appeared to believe at least some of it. After a bit he nodded.\n\n\"Yes, I can see that. That would be unpleasant indeed.\"\n\n\"After I had blasted Kory, I searched the place, found some stuff on a hard-drive which I copied, here you go and headed out.\"\n\nMr. Case nodded. \"What's on the hard drive?\"\n\n\"Information on her operation. Blackmail. Some offshore stuff and some Bitcoin, no good since the had the keyword for it and I couldn't find it in the wreckage.\"\n\nMr. Case nodded and pushed the hard drive back. \"Write up anything you think is important to our operation in your report, if you can access the offshore, keep it.\"\n\n\"What about the blackmail information?\"\n\n\"While it could be useful, its not part of our job and I'd rather not have the temptation of using it. Blackmail is great if you are a blackmailer, but for a spy? Not the best thing. People will always get to a point that they won't do any more and then turn on you. If you can get your job done without them knowing about it, or without you having to twist an arm, that is much preferable. Keep it, it may come in handy, and if we need something, I will ask you to check this out for me. But otherwise, I never saw any of this.\"\n\n\"Wow, this guy is a cool customer. I mean, REALLY cool. You were not wrong to be afraid of him.\" Kory said and Brandi could hear the respect in her voice.\n\n\"Mr. Case, something else. That coke I took? I have a sample and I want to test it.\"\n\nMr. Case arched an eyebrow. \"Well, I can have it analyzed certainly but why?\"\n\n\"No, I, as in me, want to test it. I'm a chemist and I want to know more about this. It turns out it was synthetic. Kory was working on a special mix and I am wondering if that had something to do with the effect on me.\"\n\nMr. Case thought for a moment. \"Interesting. Certainly, this could be very useful to you and us. If you can find out what gives you the boost and isolate it, you may be able to get the boost without the side-effects of this drug. Speaking of which, do you think you will have an issue with it? You said you greatly enjoyed the effects after all and this is Miami, drugs are easy to get.\"\n\nBrandi sighed. \"Mr. Case, I'm not sure. I have done some X and weed in college, but never had any addiction to it. I am not feeling any craving right now, but I am concerned about how this may turn out.\"\n\nMr. Case smiled. \"I do enjoy the fact that you can be honest in a situation like this. I have lost employees to drugs because they simply couldn't face up to the reality of being an addict. Everyone has a weakness and knowing that you have it and being able to deal with it openly is a strength. Hiding it is a weakness and one that can get you killed in our line of work.\"\n\nBrandi nodded and she could feel Kory shudder a bit.\n\n\"So, want to retire yet?\"\n\nBrandi snorted. \"Hardly. This mission was terrifying and the most fun I have ever had. I want a break yes, but I am no where near ready to quit.\"\n\nMr. Case smiled. \"Glad to hear it. You have a month off. Go see your boyfriend and see about getting him settled down. But be careful. That deal he put through right as you left? It was a BIG success. He took over the company and is now the majority owner. He made a lot of money and he is currently THE man about town. And Brandi, it's no secret that he has been missing you sorely. I have it on good authority that there is a betting pool at your after-work cocktail club as to when he will propose to you and if you say yes.\"\n\nBrandi flushed and gulped. \"Oh boy.\"\n\n\"Yes, indeed. I don't mind you having a social life my dear, but if you play up on this, you will have trouble in your real job. If it gets to that, we need to figure out what to do.\"\n\nBrandi nodded. \"I will talk to him and see how we can work this. I may have to have a threesome with him and fix his memories.\" She smiled at that.\n\nMr. Case let out a chuckle and stood up. \"Well, he may be in for quite the time. Send me the report once done, I need it by Friday.\"\n\n\"No problem boss, I'll bring it by personally.\"\n\nMr. Case handed her a new burn phone and left.\n\nBrandi waited a bit and she could feel Kory thinking hard.\n\n\"Well, now you know what my boss is like.\"\n\n\"Yeah. Intimidating man. He is one of those guys that you never realize just how dangerous he is until it's way too late, unless you are actually looking for the danger. I don't know if I would have noticed if you hadn't explained to me about him prior to this. Shit, he would have been a great guy in my mob.\"\n\nBrandi stood up and headed out the door. She ducked out the rear entrance and looped the block, scoping everything out. Kory was still thinking when she got in the car.\n\nBrandi drove home and went into her condo. It was now just after five and she walked in to hear her phone buzzing. She looked at it and it was Steve.\n\n\"Well, may as well say hello.\"\n\n\"Is that wise? He's probably going to storm over here right away and try to carry you off based on what your boss said.\"\n\n\"I checked the phone messages, he calls once a day. May as well make his day.\"\n\nBrandi could feel Kory was not in agreement, but she said nothing.\n\nShe tapped the answer key.\n\n\"Hello Mr. Successful.\"\n\nThere was a pause and then Steve blurted out \"Oh God! Brandi! You're back!\"\n\nBrandi giggled. \"Yes, were you expecting someone else?\"\n\n\"No, just you left and didn't call, and didn't email and, shit, it's good to hear your voice!\"\n\nNow Kory joined her giggling. \"Oh, he's whipped Brandi! Lead him to the barn and saddle this boy up!\"\n\n\"Stop it!\" Brandi replied. To Steve she said \"Look baby, I'm so sorry about not calling or emailing. My work was really hush hush, I can't even say where I was due to non-disclosure agreements. But it was some amazing work! Maybe the best job my boss has given me yet! I did so well, I got a big bonus and I have a whole month off.\"\n\n\"A whole month?\" Steve said. Brand swore she could hear the gears in his head grinding.\n\n\"Yes. I have to finish typing my final report to my boss by Friday, but after that. 30 whole days to do nothing. I wonder if I can find someone who wants to help me fill them?\"\n\n\"Miss Brandi, I will be your knight in shining armor for that. I've got some time off coming, and I can't think of a better way to spend it than to help a lovely young lady recover from her hard work.\"\n\n\"Oh such a gentleman you are. So who are you going to help?\"\n\nShe heard Steve gap for a second and then she giggled. \"Got you.\"\n\n\"God, you mess up my head.\" Steve said with an air of resignation and excitement mixed together.\n\n\"Good, that means you can't pull any surprises on me. I am the surpriser in this relationship.\"\n\n\"You got that right.\" Kory added with a snicker. Brandi could tell she was enjoying the show and that made her a bit annoyed and a bit excited. Annoyed that her private life was a reality show for another woman's mind, but a bit excited that she was enjoying it.\n\n\"I will be over shortly.\"\n\n\"Hold up. I just got back from a meeting with the boss and need to take care of some things first. Let me call you once I'm done and then you can head on over. And Steve? Be sure to tell your secretary that you will be in late tomorrow morning.\"\n\nThere was silence on the line and Brandi could hear Steve swallow. \"I will baby. Call soon.\"\n\nBrandi hung up. \"Aw, no \"Love you\" for the heartsick boyfriend?\"\n\n\"Ease up Kory. He's a nice guy, and I like him.\"\n\n\"I know you do. Sorry, not trying to be a bitch, but it comes naturally to me. That guy? He's yours on a plate.\"\n\n\"I know. I, we, have to figure out what to do with him. I don't want to hurt him and I don't want this to get any more serious. I like what I do, and I'm not giving it up for a guy, no matter how rich or handsome.\"\n\n\"There you go. So we have our bottom line figured out. Now we need to see where we can meet him along the way. Or if we can.\"\n\n\"Yes. But first lets check on Cynthia.\"\n\n\"Oh yeah. Forgot about her.\"\n\nBrandi unlocked the door and stepped inside the room. Cynthia was still asleep, but she was asleep, not passed out in a mind blasted trance. Brandi popped a smelling salt and waved it under her nose. After several waves Cynthia's eyes fluttered open.\n\n\"Awake?\"\n\n\"Um, yes, I think so. Oh, Ms. Brandi. Sorry, I, um...\"\n\n\"It's okay, I understand that the last day is probably very mixed up for you.\"\n\n\"Yes, it's all jumbled in my head. I'm, Oh! I'm quite naked!\" Cynthia said with a flush as she pulled the covers up around her neck.\n\n\"No need for that. Uncover and stand up please, drink some water.\"\n\n\"Yes Ms. Brandi.\"\n\nCynthia did as she was told with no hesitation. There was a bit of surprise on her face as she did as she was told.\n\n\"Problem?\"\n\n\"No Ms. Brandi. It's just that it's a bit strange that I am doing this. I remember not liking you, but that is so foolish.\"\n\n\"Why?\"\n\nCynthia looked at her with an expression of complete surprise. \"Because you are Brandi, my mistress. I have to obey you and I love to obey you! But these memories seem very at odds with this reality. It's confusing.\"\n\n\"Oh ho! This is great! She obeying every command! Looks like our mental makeover worked perfectly.\" Kory said.\n\n\"Not quite, we need to fix her memories or get rid of them. This can cause her some issues long term. And she is likely confused why she is not having a problem with being stark naked in front of me.\" Brandi replied.\n\n\"Cindy, don't worry. I can fix that later on so you are not confused. For now, don't think about what was before.\"\n\n\"Yes Ms. Brandi.\"\n\n\"And I'm calling you Cindy from now on. Cynthia is something I would call someone in my circle, but you are not in my circle.\"\n\n\"Of course not Ms. Brandi, I am happy to be called Cindy if that is what you want.\"\n\n\"Good. Now, here is what we are going to do. You will stop doing things in my social circle. That is for me and people who are at my level and you are not. You need to quit your job and you need to move to someplace cheaper and less fancy as befits your actual social level. You will work for me as my personal assistant, handle various things for me, run errands, so on. You will be well compensated of course. And if you prove your loyalty there may be more rewards in it for you. Do you understand?\"\n",
        "Cindy nodded eagerly. \"Yes, of course Ms. Brandi! Fully understand. As of now you are my mistress and my boss and I am at your command.\"\n\n\"Very good. You will not ever state I am your mistress to anyone other than me, never in public or where we can be overheard.\"\n\n\"Yes Ms. Brandi.\"\n\n\"Oh, I am getting turned on.\" Brandi got a mental image of Kory licking her lips. \"This is awesome! She's our slave! Fuck Brandi! Do you realize the power we have? We can turn anyone, ANYONE into our willing slave! Fuck!\"\n\nBrandi was getting horny too. She mentally growled. \"Knock it off Kory! We have other things to take care of!\" Brandi licked her own lips. \"Fuck, I am getting horny! Shit, we just fucked this bimbo's brains out not five hours ago! Damn it! Kory's nymphomania! Cripes, this could be a problem!\" she thought to herself.\n\n\"Cindy, I am expecting company. Put on those clothes, toss your old ones in the garbage, and tidy up the place, strip the bed, clean this room up and my master bath. Once done, let me know and go home for the evening. Once home start looking for another place to live. I expect you to be on call in the morning, I will have much to do and you will assist.\"\n\n\"Yes Ms. Brandi.\" And with that Cindy grabbed the clothes and went to clean up.\n\n\"Domestic help? That's kinda boring, unless we dress up her.\" Brandi could felt some interesting vibes on the link, like Kory was dreaming or thinking about something fun.\n\n\"Maybe we can get her a French maid outfit later on, but for now, she's our secretary. We are going to test her loyalty and once we know she is tight we are going to use her to help us in other things.\"\n\n\"What about Mr. Case?\"\n\n\"I want to see how well we can program her and how loyal she is first. Mr. Case has suggested that I get a temp as a personal assistant a couple of times when I'm getting ready for missions, makes things a bit more realistic for the false front and job. They can really help, but most of the time I can do it all.\"\n\n\"So why are we doing this now? Just testing?\"\n\nBrandi got a slightly evil grin. \"That, and I'm thinking about building my own support team. 100% loyal, no strings to anyone but me. If the time comes when I have to strike out, I want to have support.\"\n\n\"How do you think Mr. Case will take that?\"\n\n\"I'm going to tell him about this after we have run some tests with her. And then we are just going to keep her as my only assistant. So long as we are up front with my boss we should be okay.\"\n\n\"Why not whammy him? He's dangerous, but if you can give him a quick kiss you could have him in the palm of your hand.\"\n\nBrandi mentally shook her head. \"No. Two reasons. One, he's a good boss and he has kept his word to me and I'm keeping mine. Two, I am damn sure he has been hedging bets against me since we met the first time. If I move I am absolutely certain he has contingency plans in place that will likely rip my plans to shreds and likely end up with me on a table getting cut up. Just so you know, he has taken the only dose of the only drug that probably blocks my powers.\"\n\n\"Probably?\"\n\n\"He explained it to me, and as a chemist and doctor I can say he has a better than 50% chance that he can resist me. Unless odds of my success against him are 99% or better in my favor, I am not doing shit against him.\"\n\nBrandi could feel Kory mull that over. \"Yeah. Okay, I follow you and I agree. This guy is too dangerous to try something with those odds.\"\n\nBrandi went to her room and changed out of her business get up. She pursed her lips at her large selection of clothes. \"Hmmm, how do I want look tonight for Steve? Relaxed, sexy?\"\n\n\"I got the impression we were going to jump his bones the second he got here.\" Kory said. Brandi could tell she was going over what was available and making some picks of her own.\n\nBrandi felt a bit of horniness pulse through her. \"Damn it Kory. Can't you keep that nymphomania under control? We just had a mind-blowing bought with Cindy this afternoon and you are getting excited again?\"\n\n\"Sorry. Being a stripper and having sex, dancing and partying as your only release tends to make sex a daily thing. I'm not sure if I drove myself to nymphomania or it drove me.\"\n\nBrandi sighed and kept looking around. She heard Cindy cleaning and after a bit there was a slight knock on the doorframe to her large walk-in closet.\n\n\"Ms. Brandi, I have completed my tasks.\"\n\nBrandi smiled at her and felt Kory's smugness mirror her own as she saw Cindy bask in her smile. \"She looks like a puppy being picked by a little girl. Isn't she just precious?\" Kory said in a sugary tone.\n\n\"Very good Cindy. I have a meeting with my very good friend Steve Hanson this evening, so I will not be requiring your services anymore today.\"\n\n\"Oh wonderful Ms. Brandi. He is a very handsome gentleman, I do hope you two have an enjoyable evening.\" She said with a genuine smile.\n\n\"Dear Lord, I may have over did it on her personality change. She's acting more like an English housemaid than a regular personal assistant.\" Brandi said.\n\n\"Eh, we can adjust her tomorrow. Get her gone and let's get ready.\"\n\n\"That will be all. I want you here at my front door tomorrow at 11am sharp. I will show you your tasks as my assistant then as well as conduct some tests. I have to understand you abilities.\"\n\n\"Of course, Ms. Brandi. Good evening. Oh, I found this. Shall I dispose of it?\"\n\nBrandi looked at her hand and saw the baggie of coke. She immediately felt an urge to have some and then it seemed to increase as Kory's link pulsed as well.\n\nBrandi swallowed. \"Damn it! We left that out! Well, its not like she is going to nark on us.\" Brandi thought. She reached over and took the bag. She felt her body tingle as she took it.\n\n\"Thank you. I will take care of it. You will not mention to anyone, understood?\"\n\n\"Of course Ms. Brandi, good night.\"\n\nThe woman turned and walked out the closet. Brandi followed her and let her out the door and then made sure it was locked. Then she went over her condo again scanning for bugs and feeling around in the areas she had worked.\n\n\"Making sure our programming took and she wasn't playing us? Smart. I am so glad you pulled me in and not some idiot who has no idea how dangerous things can be.\" Kory said.\n\n\"I learned fast, but yeah, it blows my mind at how utterly clueless so many people are to how much they give away and how much they miss just walking out the door.\"\n\nBrandi swallowed again as she looked at the small bag. It had several hits left in it.\n\n\"I think we need to put this away.\"\n\nKory didn't respond, but Brandi could feel her wanting some.\n\n\"Kory, is your habit amping up? We just took some earlier today, are you already needing another hit? Is this normal?\"\n\n\"No, it isn't. This is weird and different. My urges don't feel like this normally. It's not like my body is wanting this, like normal coke. It's like my mind is.\"\n\nBrandi licked her lips. She was feeling the same way. It was like her mind felt like it was only running at half speed and knew that this white powder would get it where it needed to be.\n\n\"Kory, this is bad. We can't be taking multiple hits of coke during a single day. That is going to fry our minds fast.\"\n\n\"Maybe. Remember that this stuff is different. We may not have the physical side-effects for this stuff.\"\n\n\"We already have MENTAL side effects! I've only done two hits of this and my brain is quivering with excitement for this stuff!\"\n\nBrandi could feel Kory's hunger for it. But also some strength of will. \"Shit, ok. Put that stuff away. Hurry up before I stop resisting and start pushing my hunger down our link.\"\n\nBrandi sighed in relief and put the baggie in a hidden drawer in her jewelry box.\n\nBrandi went back to her closet and looked again. After a bit she pulled out a set of white lingerie. A very tight set of panties, practically a thong, a white garter belt, a very sheer white lace bra, white lace gloves and long white lace stockings. Brandi could feel Kory's approval.\n\n\"I'm thinking this, under this.\" Brandi said as she pulled out a black silk robe that covered everything. Brandi then pulled out a set of white high heeled slippers.\n\n\"Oh yes. Classy, and sexy as fuck. You will hit him like a hammer to the head.\"\n\nBrandi got dressed and then did some light makeup. As she finished, Kory piped up.\n\n\"Hey, are we going to try to fix him tonight? Adjust his thinking?\"\n\n\"I am not planning on it. I want to let him take the lead a bit on that, see what he says and see if he is going to make any demands. If he is over the top, I'm going to end it. I warned him earlier that he needs to understand that my job is currently the main thing in my life and I'm not ready to get serious yet.\"\n\n\"Going on a month-long vacation with this guy sure sounds serious.\"\n\n\"I'm not sure if he meant it. If this deal has put him as high up the totem pole as everyone is saying, then he may not have that time off to take. That will one of the tests. If he takes a full month with me, business be damned, then we have a real problem in terms of serious boyfriend. If he takes a couple of weeks and then begs off on new business, needs his leadership, you understand, and so on, then we are about where I want it.\"\n\nBrandi sent a text and got a reply nearly instantaneously. \"Be there in 15 minutes.\"\n\n\"He was probably in his car parked at his office.\" Brandi said with a giggle. \"God, I wish was able to mix up boys like this in college, it was a lot more work back when I had to actually work at something instead of just absorb it.\"\n\nKory and Brandi both laughed at that.\n\nBrandi sat down and waited and she could feel Kory was excited and horny, which made her horny. Which was better than the coke craving. But there was something she was curious about.\n\n\"Hey Kory, when we dove into Cindy's head today, how much of that did you really see? Did you see what I did? Did you understand it?\"\n\nBrandi could feel Kory thinking. \"Well, it's hard to explain. I was there with you, I made sure to not really do anything, like reach out or mess around or try to speak up. But I could, uh, understand what you were doing. I could tell you were shaping her will to obey, to be loyal, fully loyal. I wasn't sure how it would come out though, if she would be a zombie or confused or what. I could feel what you were doing, it was almost like my hands were mirroring yours helping to mold her.\"\n\nBrandi thought a bit. Kory was thinking to. \"Probably wondering if she could have taken over or maybe make a change on her own.\" Brandi thought. \"Shit. Even though we are getting along I need to be careful.\"\n\n\"Okay Kory. That was how I was feeling you as well. Thank you for not trying anything. I know that it's tempted to try and take control or maybe try something on your own, but right now this is completely uncharted territory. I am certain we are going to have a lot of experimenting to do about this. That is likely going to leave some people with completely fucked over minds, hate to say it, but I have a feeling we are going to be sending some people to the asylum as we work through it.\"\n\nBrandi made sure she was giving off a serious vibe. \"While I accept that, and I know you do, let's be sure we understand something between the two of us. We will do this together at an agreed upon time and on an agreed upon person. No suddenly trying something with Steve, no brilliant ideas during a job. We agree and plan it out and do it completely separate from work and personal.\"\n\nBrandi could feel Kory weighing her options and making some cold decisions.\n\n\"Deal Brandi. I think its some bullshit that we are taking these precautions on YOUR side and I'm pretty much along for the ride, but I get why that is. Life's not fair, and Lord knows I have lived it and made sure a lot of other people know it. You, for all the crazy shit that has gone on, have been as fair as you really can be and so far have kept up your end, so yeah, our deal stands and I agree to this. I do demand that some of this vacation time get used to figuring out if I can get out of you, and if not, what exactly I can do while in you, as in can I actually mess with minds too.\"\n\n\"Fair, but first, we have some fun.\"\n\nRight then the doorbell rang.\n\n\"And speaking of fun...\" Kory said with a sexy giggle.\n\nBrandi felt a wave of horniness flow through her from Kory's link. She shuddered just a bit and licked her lips.\n\n\"Ooooooo, easy Kory, easy now. Let's get him in the door at least.\"\n\nAnother wave followed easily through her and she let out a slight moan. Kory let out a sigh and a moan of her own.\n\n\"Sorry Brandi, the nymphomania is hitting me. Girls are nice. But Kory needs some COCK!\"\n\nBrandi's eyes rolled up a bit when Kory said cock and she moaned again.\n\n\"ENOUGH!\" Brandi focused and then giggled. \"Let's go meet Steve and see how things...progress.\"\n\nBrandi walked to the door and felt her walk change. She began to sway more and move her hips in her \"runway\" walk, the one designed to make every male in the room look at her. She didn't even think about it, she just started doing it. She felt her eyes narrow so they gave off a darker sultry look, she felt her smile change from a pleasant one greeting a friend to a \"Hello there fuckable man\" cock-hardening leer.\n\n\"Fuck! Kory! What are you doing?\"\n\nBrandi couldn't tell if it was Kory giving off waves of horniness or her or both. She was almost panting as she reached the door.\n\n\"Oh fuck! I'm not, uhhhhhh, fuck I want a man! Damn it! Brandi! You're turning me on and I can't calm down!\"\n\nBrandi tried to focus as she began to open the door. \"I didn't do it! You turned ME on! Oh shit! I WANT TO FUCK!\"\n\nBrandi opened the door and heard Kory moan \"Oh well, Steve's in for one hell of a night!\"\n\nBrandi opened the door and her eyes fell on Steve. He was in a sharp suit and looked like he had just come from work. He had a huge bunch of flowers and a small, wrapped box. He looked excited and nervous at the same time.\n\n\"Brandi! It's so...\" He trailed off as Brandi gave him her smokiest smile. His eyes widened as she traced a finger down from her chin into the folds of her silk robe. His eyes jerked back up when she said \"Hello Steve.\"\n\nBrandi put all of her \"Time to fuck\" tone into her voice and she swore she could see his cock instantly harden.\n\n\"I, I, uh, I'm...\"\n\nBrandi reached out and took him by the tie and gently pulled him in the door. She locked eyes with him and pulled him slowly down the hall. She didn't say a word and Steve looked like a rabbit hypnotized by a snake. His eyes were wide and his breathing was speeding up. They go to her living room and she guided him to the couch and sat him down. She pulled the flowers and the gift from his hands and then slowly undid her robe tie. She eased her robe up and back off her shoulders and let it pool around her feet.\n\nBrandi was feeling high. That was the only way she could describe it. Her whole body was alive and felt like she was plugged into a socket. Her breathing was controlled but fast, but she was HORNY. Brandi couldn't even tell Kory's link apart from her own or even hear her voice in her head she was so worked up. She had never felt like this ever.\n\nAnd she LOVED it.\n\nShe leaned over and kissed Steve full on the lips. She let her will flow through her lips and into his mind like water down a brook. She just rolled over and through his mind like it was nothing and washed away his will and his thoughts. She felt his mind just seem to sigh, give up and curl up in a little ball in her hands. Unlike before where she had to reach into his mind and mix things up, this just seemed to happen naturally, like her mind already knew what to do. And his thoughts were not jumbled around in a confused mess, they were simply gone.\n\nBrandi had a little voice in her head make a comment about how different this was, but it was just a peep. Brandi's main mind, and Kory's mind were overwhelmed by lust and by thoughts of how she would address it.\n\nShe broke the kiss and straightened up. Steve's eyes were glazed over, they looked like crystals, shiny and empty. His face wore a huge dopey and empty smile. His body was physically stimulated, and his mind was completely shut down.\n\nBrandi traced a nail down his chest and giggled as Steve just smiled on. Brandi straddled him and eased down onto his lap. She reached behind her and undid her bra. Her tits came free and she saw Steve's eyes seem to get just a bit of focus to them as she pushed her tits forward into his face.\n\n\"Kiss them.\" Brandi said.\n\nSteve began to kiss her nipples and then swirl his tongue around just like she liked. He slowly moved back as forth from tit to tit, kissing and licking and then after several minutes of slow tongue work he began to suck lightly on her nipples. After several sucks he began to lactate a bit and Steve soon gulped down several mouthfuls of her milk.\n\nSteve's eyes rolled up and his body began to go limp. Brandi leaded down and kissed him hard. She reached into his mind and felt how empty it was, how utterly vacant, not a thought to be had.\n\n\"Pleasure me, NOW.\"\n\nBrandi started a bit when she heard Kory's voice echo in her AND Steve's head.\n\n\"Kory! What the fuck are you doing? I told \"Gasp\"!\"\n\nBrandi cut off as Steve suddenly picked her up and spun her to the side on the couch. Brandi looked at Steve's eyes and saw them to still be glazed over, but with a spark of light. Like something was going on in his head.\n\n\"Steve? What are you...Oh!\" Brandi cut off as Steve reached down and ripped her panties clean off her body with one jerk. Brandi gasped at the force and suddenness of it. Steve didn't even pause but put his face right down between her legs.\"\n\n\"Steve! Whaaaaaaaaaaaaooooooooooooooo! Brandi cut off as Steve's tongue swirled on her clit just like she had taught him. The connection was instant, and the wave of pleasure combined with the shock and excitement of Steve's actions washed over Brandi's mind carrying her focus with it.\n\n\"OOOOOHHHHHH MMMMMYYYYYYYYY GGGGAAAAWWWWWDDDDDDDD!\" Brandi moaned. Or maybe it was Kory? Or both of them? Brandi couldn't tell as her mind tumbled in the wave of pleasure as her boyfriend used his tongue perfectly.\n\nBrandi felt herself spreading her legs further apart and then pulled her boyfriend's head down deeper and deeper into her snatch. She moaned and writhed and then orgasmed all over Steve's face with a massive squirt. Steve sucked hard and drank her juices as he had been trained to do and Brandi felt the connection's power increase.\n\n\"Pleasure Brandi, Pleasure Brandi, Pleasure Brandi.\"\n\nBrandi felt this command echo in Steve's mind as she rode the link.\n\n\"Oh FUCKKK! Kory! You weren't suuuuuuuuu, you damn it! Why did you do that!\"\n\n\"OOOOOHHHHHHHH! I'mmmmmm, uhhhh, sorry! I was just feeling so horny! I couldn't wait! I just felt the link and how empty he was, and IIIIIIIIII, OH MY GOD! I just focused and thought it!\"\n\nBrandi and Kory both shuddered as the next orgasm rolled over their minds. \"Uhhhhh, he's not going to stop unless we stop himmmmmm! Oh my GAWD! This is so wonderful!\" Brandi moaned.\n\n\"Whyyyyyyy, uhhh, why stop him? OH LORD! This is so fucking awesome!\"\n\nBrandi shuddered again and then tried to focus. It was harder this time. Kory seemed to not care so Brandi was fighting the wild vibes off of Kory's link, and Steve's tongue was working overtime EXACTLY in a way Brandi had taught him to bring her maximum pleasure. The combination was smashing her focus to pieces.\n\nShe ground her teeth and focused. She shoved his head deep into her pussy. She reached into his mind and thought \"Stop, lay back and relax!\"\n\n\"Stop, lay back and relax!\" echoed in her head and in Steve's head. Brandi sucked in a huge breath as Steve stopped his wonderful tongue action and sat back on the floor. He eased back and laid down and took a deep breath. His eyes lost the spark and that dopey empty look returned as he let out a very contented sigh.",
        "Brandi lay on the couch panting like she had just run a 400-meter sprint. Her body shuddered out one more small orgasm right as Steve broke the connection and she let the pleasure roll through her body as she caught her breath. After several minutes she lifted her head to see Steve still lying there looking contented and stoned.\n\n\"Oh shit, that was amazing!\"\n\nBrandi felt several emotions roll through her and she felt out Kory's link as well. Kory was surprised, amazed, happy, contented, and unsure. Brandi's own emotions mirrored that, but she also had the emotion of anger coursing through her.\n\n\"Fuck Kory! What the hell did you do? What did we agree on? Don't FUCK with my boyfriend's head! What the fuck?\"\n\nBrandi could feel some embarrassment now, and some guilt, but some more excitement as well.\n\n\"I'm sorry! I, damn it, I was feeling so fucking horny Brandi! And I know you were too! I don't get what happened, I've never felt like that. It was like we were feeding off each other, the more worked up I got, the more it worked you up, which worked me up more and so on. I couldn't help it!\"\n\nBrandi focused on reading Kory's emotions through the link. She was certainly surprised, and she was also a bit scared now as she thought through what had happened, and guilty. But she was still very excited, and Brandi didn't like that.\n\n\"I'm sorry. As he was working over our body...\"\n\n\"MY BODY! Don't you ever fucking forget that Kory! When you fuck around it's MY body on the line!\"\n\n\"I'm sorry! Damn it Brandi! I really am! I didn't mean to do that! I just, fuck, Brandi I couldn't FEEL you! Normally when we do this it's like I'm looking over your shoulder or through a body cam or something, it's intense but there is always just a tiny bit of disconnect. But this time it felt like it was ME! Full feeling! Like I was in charge and could do things. His mind was just there begging to be filled!\"\n\nKory paused a second and then said \"So I filled it.\"\n\nBrandi was mad. Mad as she had ever been. But she was also scared, and she hated that Kory could tell that. \"That bitch knows I'm frightened by this, and how she can do this. How did this happen?\"\n\n\"Cripes, how did we get to this? You couldn't do this before.\"\n\n\"Well, how did we get to the point where we could implant a command? You said we couldn't do that either and it just happened.\" Kory replied.\n\nBrandi could tell Kory was feeling a lot more confident now.\n\nBrandi thought a moment. \"Alright, so we have some new situations. We can implant commands in someone's head after we have blanked them, and you are now able to get into their heads as well. And when we first linked, I didn't scramble his head. I, fuck, I washed it clean?\"\n\n\"I felt it. Like water running over mud and sweeping it away. It was like you just wiped his whole conscious mind clean.\"\n\n\"Yeah. And then you filled it right up. I don't like that.\"\n\n\"I know, I can feel it. You don't like that I am gaining power. Well, too bad. Look Brandi, I'm not going to stay a junior partner along for the ride. I get that we need to be careful, I really do. But I want some of this power! This is so much better than Chicago ever was!\"\n\nBrandi could feel her excitement and her honesty. Kory was LOVING this!\n\n\"This is power like I have dreamed about! No blackmail, no bribing, no paying off, no threatening. I just programmed a guy with a thought!\"\n\nBrandi could feel Kory getting turned on. Dominating someone like this, it was a huge rush for her.\n\nAnd for Brandi. Brandi licked her lips and felt herself reacting to what had just happened. Her body was still riding the rush from Steve's attentions, but her mind was stimulated by the thought of how her boyfriend had just been turned into a zombie obedient to her command.\n\nTheir command.\n\nBrandi felt herself starting to get horny again, and she felt Kory feeling the same.\n\n\"No! Damn it! We need to be careful about this!\" Brandi muttered.\n\n\"Yes, we do.\" Kory purred in her head. \"And we can. Nothing crazy here. We just kiss him again and we put a thought in his head. Just one. A nice one, one that we will all enjoy.\"\n\nBrandi could feel Kory's link, it was pulsing with horniness and with some other emotions all mixed together. Brandi tried to focus but she was getting worked up just like Kory was. The power and the appeal of that power and what that power could get her was a heady mix.\n\n\"Kory, we, oooooo, I think we are turning each other on!\"\n\n\"Yessss, we are. Mmmm, sorry Brandi, I'm not stopping this time.\"\n\nBrandi moaned and she looked at Steve on the floor.\n\n\"One simple command.\"\n\n\"Maybe one...\" Brandi thought as she eased her hand between her legs.\n\n\"That's right. Just one.\"\n\nBrandi let out a sign as her fingers eased into her pussy.\n\n\"See? Why work when we can have Steve do it for once. Instead of you just doing all the work while he lays there, let's get him to work this time.\" Kory cooed.\n\nBrandi licked her lips again. \"Shit, she's using that sexy voice of hers like when she was whaling as a stripper. Oh damn, it's SO hot when she talks like that!\" Brandi thought.\n\n\"What, ummmm, what do you want to do?\"\n\n\"Girlfriend, let's link to him and tell him to sweep us up, carry us to bed, and fuck our brains out.\"\n\nBrandi had visions of Steve mounting her, having him pound into her. It had been so long since she had a real fuck, one where she was the one getting worked on, where she was being worked over. Not where she was plugged in and making all the effort to control and ride the waves. She could make Steve work her body AND ride the pleasure.\n\n\"Oh yeah! You like that idea don't you?\" Kory moaned in her head.\n\nBrandi's head swam. Something was off, she could feel it, but she didn't care at the moment. She wanted to be fucked!\n\n\"Okay, let's do it! But I'm the one putting the thoughts into his head. Don't fucking do anything, got it?\"\n\n\"All yours partner.\"\n\nBrandi's felt like she was in a mental haze. She was so horny and Kory's idea was so appealing to her. It had been so long since someone had really fucked her, not lain there, mindless, just a body she was plugged into. The thought of having her pleasure while being fucked like a hot woman by a stud was so awesome.\n\n\"Yes, all mine.\" Brandi murmured as she eased down and undid Steve's buckle. She pulled out his cock and stroked it slowly.\n\n\"We need to be sure. Get a good connection.\" Brandi said as she leaned down and licked Steve's shaft.\n\n\"Yes Brandi, yes. A solid connection.\" Kory said in her sexy voice. Brandi could feel pleasure, excitement, and horniness pulse from Kory's link. It seemed so powerful, she felt so connected to Kory's emotions. Almost identical, almost perfectly matched.\n\nBrandi let her lips gently seal around Steve's cock and she sucked slowly up. She had an instant connection and she let her mind flow through his. It was wiped clean in an instant and Brandi could feel his body simply staying there at minimum functionality.\n\nAwaiting its orders.\n\nBrandi shuddered with excitement and then concentrated. She could feel Kory's link pulse with matching excitement.\n\nFormed a picture in her mind of Steve waking up, sweeping her into his arms and carrying her like a newlywed into the Master bedroom. Brandi felt Kory's approval as the idea began to shape in Steve's mind. She envisioned Steve laying her down, telling her his innermost thoughts on her, and slowly pleasuring her body, running his hands over her tits, kissing and sucking, fondling, teasing her thighs, rubbing her ass, spreading her legs and then mounting her. Him pumping in and out of her first slowly and then faster and harder, becoming more and more worked up as he went.\n\nKory moaned. \"Yes! Yes! Make him an animal! Make him our beast!\"\n\nBrandi shuddered as she felt her body begin twitch with anticipation. She focused and had Steve's mind slowly turn off and his lust take over. She envisioned him growling and pounding her without mercy, like a beast in full rut. Brandi paused and gasped at her vision.\n\n\"More!\" Kory mewled.\n\nBrandi gasped as she sucked. This was so much and she could tell it was about ready to solidify in his head.\n\n\"No! MORE!\" Kory yelled. Suddenly a vision of Steve cumming hard in her appeared. Brandi saw Steve catch his breath and then spin her over. With a growl Steve grabbed her by the waist and pulled her up onto her hands and knees and then mounted her from behind. Brandi moaned at the hot vision as she sucked. She wasn't even mad at Kory for taking over, it was so fucking hot!\n\n\"End it Kory! He's about ready to cum!\"\n\nBrandi could feel Kory focus and then she saw Steve howl as he came hard in Brandi and she saw herself scream in ecstasy and then they both flopped down. Brandi pushed her mind and felt this vision solidify in Steve's head. Steve's cock spasmed and she gulped down his seed and she felt her vision lock into his mind. Somehow she knew that what she and Kory had implanted was now programmed into him.\n\nAnd she couldn't wait to see how it worked out.\n\nShe pulled off his cock with a pop and looked up at Steve's face.\n\nSteve lifted his head. As soon as he saw Brandi he smiled one of his heart melting smiles, the one the made her go all soft and mushy. Brandi looked into his eyes and saw that they were a bit glazed but looked normal. Like there was someone home instead of the usual mindless empty eyes she was used to.\n\nSteve sat up and lifted her head up. He kissed her softly and let his fingers run through her hair. He then stood up and with a very broad smile leaned down and swept her up in his arms. Brandi whooped and giggled and she could feel Kory matching her in terms of excitement and being turned on. In fact, she seemed to be very closely linked to her, almost to the point of not feeling much of the link at all.\n\nSteve carried her off in his arms to the Master bedroom and lay her down on the bed and kissed her gently again. He then pulled off his now rather sweaty shirt and undershirt and let his pants fall to the ground. Brandi let her eyes roam hungrily over his tones and muscled body (Steve was a long-distance swimmer) and she could feel Kory doing the same and getting more and more turned on.\n\nSteve crawled up beside her and kissed her gently. She felt his mind, it was programmed to do exactly as she had thought up. He was her puppet and was doing as his puppet-master commanded. He slowly kissed her neck and shoulders, softly and gently.\n\n\"Brandi, I've dreamed of you every night.\" He whispered in her ear as he nibbled on her earlobe. She giggled and sighed.\n\n\"I dreamed of making love to you. I dreamed of kissing you, and how your kisses melt my mind, just make me so happy and turned on.\"\n\nSteve slowly kissed over to the other side. \"I dreamed of your body naked atop me, riding me, making me cum again and again.\"\n\n\"Oh, this is so fucking hot!\" Kory hissed.\n\nBrandi would have agreed but Steve kissed her deeply again and she felt her power over him and the rush it gave her. Gave Kory? Both? She couldn't tell anymore what was her own emotions or Kory's. It had been so long since she had had real sex that her body was simply being overloaded by the sensation.\n\n\"I dreamed of your laugh, I dreamed of us dancing, partying. I dreamed of showing you off. I dreamed of your sexy walk, how you can make yourself the center of attention.\" Steve continued and began to kiss down to her tits.\n\nSteve licked her nipples and Brandi let out a little moan. Steve swirled his tongue around one then the other.\n\n\"I dreamed of having you Brandi. I WANT you. I want you forever.\"\n\nKory and Brandi matched each other with a low \"ssssssss\" as Brandi sucked in her breath as Steve fondled her tits and then nipped her nipple.\n\nBrandi put a finger under his chin and lifted it up so she could look into his eyes. \"Tell me your secrets Steve. Tell me everything. What is your deepest desire?\"\n\nSteve didn't even hesitate. \"I want you as my wife. I want you to be mine forever. To be my Lady, to be my Lover, to be my Partner.\"\n\n\"No, ummmmm, no surprise there.\" Kory cooed out.\n\nSteve spread her legs and eased up towards her. She moaned again as she felt his cock slide over her pussy lips. It was so hard. It was so long. And it was so thick. She licked her lips and moaned again as Steve pushed and then pulled back.\n\n\"I know you are more than you say. I had experts look into your work. I know you are more than just a consultant.\"\n\nBrandi and Kory both tensed at that. \"He what?\" Brandi thought.\n\nBut under her programming Steve went on. \"I know you do things, things that may not be legal. I know that you are really good at it. And I don't care. I just want you.\"\n\nAnd then Steve pushed his cock into Brandi and her whole body tensed like she was in an electric chair. The connection was instant, and her mind was flooded with a wave of pleasure.\n\n\"AHHHHHHHHHHHH! YESSSSSSSSS! Brandi and Kory hissed together as Steve's cock slowly pushed all the way in. Brandi's body shuddered as she felt Steve begin to pump in and out.\n\n\"Ohhhhh, so fucking GOODDDDDD! More! MORE!!\" Brandi hissed in Steve's ear.\n\n\"My Lady asks, My Lady gets.\" Steve replied and sped up.\n\nBrandi's focus was completely gone. The normal waves of pleasure, heightened by Kory's linkage, had been intense. But having Steve being an actual participant, not just a body she was plugged into?\n\nOh God.\n\nBrandi's eyes rolled up as she pulled Steve in closer. She felt her nails scrap across his back. She wrapped her legs around him and pulled him in tight at each thrust. The pleasure with actual sex with an \"live\" participant blew her focus and control completely out of her head.\n\n\"YES! FUCK ME STEVE! FUCK ME! HARDER!\" Brandi howled. Her own head was a jumbled mess as pleasure and amazing sensations tumbling through her mind while she heard her own and Kory's babbling screams and moans echoed through her head and out her mouth. She was so into it she couldn't tell what was screamed out loud and what was in her head.\n\nBrandi looked into Steve's eyes again when she was able to get hers to stop rolling up into her head for a second and saw Steve's eyes were beginning to dim. She felt his cock twitch and then he shoved as hard as he could into her pussy and came.\n\nBrandi and Steve both howled like animals as they came at the same time. Brandi couldn't tell her own scream from Kory's in her head. She thrashed around as her body convulsed from the pleasure, but Steve pinned her down while he let his cock pump everything deep inside her. Brandi felt her pussy fill to overflowing and then stretch as more pumped into her. After several moments she final was able to suck air into her lungs.\n\nFor several moments Brandi couldn't even move. She drew a breath and her whole body shook with the sensation. Everything seemed to stimulate her, the air from the fan, the feel of the bed beneath her, her own body feeling so full of cum, the reek of sex, Brandi mind just keep trying to shut down from the overload. The pleasure waves from connecting had been amazing. But THIS was something else. The physical interaction had made her body and senses react and respond in a whole new way and it was beyond her ability to describe it.\n\nBrandi finally reached out and sought the link. She had a tough time finding it, it was giving off the same overloaded pleasure she was and her own internal system and Kory's seemed synched and were pulsing at the same time. Even when she did have it, it was nearly impossible to tell apart from her own emotions.\n\nBrandi sighed and closed her eyes. \"Kory?\"\n\n\"Bleaaaaaaaafirmm? Duuuuuuusmmmm? Huhhhh?\"\n\nBrandi giggled. \"Koryyyyyyy? Are you in there?\"\n\n\"Ummmmmmm, yes...\" Kory finally responded. Brandi was able to discern her a bit better when she \"spoke\". Kory was overloaded on happy and pleasure just like she was.\n\n\"I think we are onto something.\"\n\n\"I think you are right.\" Kory purred in the most sexy and contented voice Brandi had ever heard.\n\nBrandi was trying to focus some more when she was suddenly jerked up to a sitting position. She opened her eyes and started straight into Steve's.\n\nHis eyes were the eyes of an animal. A very HORNY animal.\n\n\"Um...WHA!\" Brandi got out as Steve spun her around. She heard a smack and yelped as his hands slapped around her butt and jerked her up onto all fours.\n\n\"Uh oh...\" Brandi heard Kory say and then her eyes crossed and then rolled up as Steve shoved his cock right into her pussy from behind.\n\n\"UHHHHHHHHOOOOOOOOOAAAAAAHHHHHHHHH!\" Brandi howled out as the cock roughly shoved into her hole and just powered straight into her, no gentleness, no easing, just raw force and power. Brandi felt all the cum that was still inside her get slopped out and start to ooze down her legs as Steve began to roughly pump into her. Her body shook as the connection amped up. The feeling she was getting was raw uncontrolled lust, smashing into her mind and crushing her focus.\n\nIn two pumps Brandi was panting like a bitch in heat. Her head swam again and Kory's voice was lost in the insanity that was inside her head. He could her the \"fap, fap, fap\" of Steve's loins smacking into her ass, she could hear his mindless grunting, sounding like a cross between a caveman and a wild boar. Lust seared through the connection and she could feel the roughness of his actions. Steve wasn't making love to her, he wasn't even fucking her. He was rutting in her.\n\nBrandi growled as her body responded to the brutal fucking. She felt so hot! Sweat poured off her, she panted like a wild animal, and she gritted her teeth as she shoved back into Steve as hard as she could. She felt wild, she felt like she was an animal getting mated by the alpha male, and it was turning her on. She had never really been into rough sex, but this was amazing and she was completely carried away by the raw emotions and rough waves of pleasure blasting through her.\n\n\"FUCK! FUCK ME! You fucking animal! Pound me! Pound me like a bitch! Make me your BITCH!\" Brandi snarled as Steve sped up even more. Steve responded with a grunting growl and smacked her ass hard.\n\n\"OW! FUCKER!\" Brandi howled.\n\nSuddenly she screamed \"AGAIN!\"\n\n\"What the fuck? Shit! Kory did you just...\" Brandi gasped out.\n\nSMACK!\n\n\"AHHHH! FUCK! AGAIN!\" This time Brandi heard herself and Kory shout seemingly together.\n\nSteve let out a howl and smacked her ass hard again and then wrapped his arms around her and pulled her up. He wrapped his arms around her and roughly cupped her tits with one hand and jerked her mouth to the side. His lips locked with hers in a rough kiss. His tongue shoved down her throat and he held her squirming form as he pounded her from behind.\n\nBrandi's mind was all over the place. She couldn't focus, she could only feel the brutal power of Steve's fucking through her connection and through his body. She felt helpless against his strength and force, she felt like she was being used and brutalized.\n\nAnd she was in ecstasy. The sensations overwhelmed her rational mind, the overload simply burned out her higher though process. Where she could have controlled the pleasure and ridden the wave if Steve had been her thrall, she was helpless in the overpowering surge of sexual energy and lust Steve forced into her body and mind.\n\nShe was an animal. She was a fiend. She was a wild beast, existing only to fuck and fuck and fuck.\n\nSteve pulled her in tight as he pounded away from behind as hard as he could. Brandi began to have trouble breathing from how tight her held and squeezed. Brandi felt his body tense and she let out a howl.\n\n\"FUCKKKKKKKK!!!!\"\n\nBrandi came just as Steve came and her mind seemed to flash in her head. She saw dancing lights as her whole body thrashed and jerked from her orgasm as she felt her pussy fill from Steve's cum pumping into her. She heard Steve grunting in her ear as he held her and felt his body jerk and spasm along with hers.",
        "Brandi sucked in a breath and then her mind simply shut down and her eyes closed. She felt herself fall onto the bed and felt Steve fall next to her with a grunt and then nothing but darkness and sleep.\n\nBrandi opened her eyes and looked around. She was lying on her stomach on her bed, her arms at her sides, and her legs tangled with Steve's legs. Steve lay off partially to her left side with his legs twisted into her and one arm draped over her bare back.\n\nBrandi could smell sex and pussy and cum and she felt her crotch full of sticky cum and a lot of cum staining her legs and hips. Her stockings were feeling gross and her gloves were soaked with sweat.\n\nBut she felt WONDERFUL.\n\nBrandi closed her eyes and just too a deep breath and sighed. Unlike the other time when she had linked for sex, this time wasn't a mind blasted hung over recovery. This was a bone tired, worked out, but fully enjoyed every minute of it feeling. Her head didn't feel messed up, but she did feel very hungry. She focused on her mind and it felt content, almost like she had fed. She could tell her body had burned a lot of calories, but not like when she had done a full linking. She felt, balanced.\n\nBrandi untangled her legs and rolled over. She felt nasty and bruised in some spots, but it was SO worth it.\n\n\"Hey girlfriend.\"\n\n\"Oh my God Kory.\"\n\nThey both sat there for a few moments as Brandi let her mind flow through her body and sensed everything from the small tics from a clock on the wall to the smell of sweat on Steve to the feel of the AC on her bare skin. It was so wonderful to feel everything.\n\n\"That was the most intense sex I have EVER had. God! I seem to have been saying that a lot over the last several years, but THIS was it!\"\n\n\"Brandi, I believe you and I fully agree. That was beyond anything I have EVER felt, and that is saying something given my background.\"\n\nBrandi and Kory giggled. Brandi got up and checked out Steve. \"He's asleep, let's let him rest a bit.\" She looked at the clock, it was about midnight.\n\n\"I have some cans of ravioli, let's get some food.\"\n\n\"Yeah, sounds good. Shower first? Or do you like feeling a bit sleazy for your man?\"\n\nBrandi felt the sticky cum and was about to say shower when she giggled. She was feeling playful and the thought of being sleazy just a bit to throw Steve a curveball when he woke up was appealing.\n\nBrandi could tell Kory was feeling mischievous and dirty. Kory giggled and said \"You're tempted aren't you? Come on girl, let's mess with his mind a bit, in a \"normal\" way.\"\n\nBrandi giggled and stood up. She put on her slippers and then picked up a see-through white lace robe. She put it on and swayed out to the kitchen. For some reason she wanted to feel sexy, as in overpowering sexy, the kind that made her the center of attention.\n\n\"Mmmm, I'm enjoying how you walk girlfriend. I love walking around and showing off. It just feels right.\"\n\n\"Yeah, it does for some reason.\" Brandi said.\n\nBrandi and Kory made some small talk as she opened and heated up the canned food and then ate. Brandi was focused on her report and what parts they were going to leave out and Kory was making various suggestions. Brandi had a pretty good rough draft in her mind by the time they were done.\n\nBrandi sat back and smiled as she felt some more cum ooze out of her and onto the towel she was sitting on. \"Heh, just like a stripper. Gotta sit on a towel to show off the assets properly.\" She said.\n\nKory giggled. \"Yes. I never liked that part though. I was always wondering what kind of seating a club should have so the girls asses don't stick to the chairs and we don't have to carry around towels. Kinda takes away from the sexy look.\"\n\n\"Yes, it did.\" Brandi got a vibe from Kory that felt nearly entirely in agreement.\n\n\"Kory? Last night when we were having sex, right as Steve went into beast mode, he smacked my ass hard.\"\n\n\"Yeah! Turned me on massively!\"\n\n\"Did you scream \"again\" when he did it?\"\n\nKory seemed to think and then there was a shock through the link.\n\n\"Kory, did you scream \"again\" out loud? As in out of my mouth?\" Brandi said with some nervousness.\n\nKory was silent for a moment and then she said \"Brandi, I think I did. I don't know how, but I remember screaming \"again\", and I remember hearing it. Not in our head, my head? Inside the skull? Shit you know what I mean. I heard it out loud. Another voice. Not exactly mine, not exactly yours, but it came from your mouth.\"\n\nThey were both silent for a while.\n\n\"Kory, I don't know how it happened. I heard you for sure once, the second time my mind was so overloaded I couldn't tell whose voice was screaming what.\"\n\nBrandi could tell Kory was thinking. She was confused, excited, scared and nervous.\n\n\"Brandi, we had a deal. And I always try to keep my end of a deal. I wasn't supposed to try anything with Steve or with you when we are doing this. I'm not sorry for working us up and trying what we did last night. No way in hell will I ever be sorry for THAT fuck!\"\n\n\"No argument there.\" Brandi said.\n\n\"But last night in the heat of the moment, I...I tried something.\"\n\n\"What?\"\n\nBrandi could feel her nervousness and her fear, but also some excitement. \"When he slapped us on the ass, I couldn't help it. I LOVE a little bit of pain, a solid smack on my bare ass always gets me hot. And so many guys are afraid to do that anymore, even in the club or in a hotel room. I just had to have more.\"\n\nKory hesitated and then went on. \"Our minds were in a haze last night and I noticed that the link felt different, or almost didn't feel at all. It was like we were so linked or our thoughts were so similar that the link wasn't needed, like we were in sympatico, you know what I mean?\"\n\nBrandi nodded. \"I noticed that too, at times I couldn't feel you at all, it was like we were washing around in my head together.\"\n\n\"Good description. All my thoughts swirling around, no order, just chaos and insanity and lust. But when I wanted more I had this clear thought of \"Beg him for more!\" in my head, and I shouted. Like my mind thought of how I would have shouted in my normal body. And I just...did.\"\n\nBrandi and Kory were both silent for a bit.\n\n\"This makes things complicated.\"\n\n\"Yes, it does. On one hand this is giving me some hope, maybe I can get into another body and, you know, have it. Like as my own, that I can work it or make it work like my own. But on the other, this may be really bad. It could mean I'm getting linked to your bod. And I know you are now scared as hell that I could take your body over.\"\n\n\"Fucking link.\" Brandi thought. \"Yeah, you are dead on.\"\n\n\"Okay, look. I did something in the heat of the moment, and I am sorry about that. I gave my word and I try to keep it. I won't do that again, unless we both agree to. I don't have that feeling right now, we feel distinct, you know? I don't think I could take over right now.\"\n\n\"But when we are so closely linked, when we are so boosted up, you could try.\"\n\n\"Fuck Brandi, the only thing I was thinking about was how fucking good that cock felt! Yeah, maybe now you have some additional fear that I could end up in control, but it only happens when we are being fucked mindless. We can figure something out, a shorter session, or maybe we just don't fuck like that for a while? Although I'd really like to do that again soon.\"\n\n\"You got that right.\" Brandi thought. \"Okay Kory. Here's the deal, we hold off on the wild sex for a bit and figure things out. I want to dig into that coke of yours, and I want to figure out some of our linkage. I'm curious about something. Ever since we did that coke with Cindy, I've noticed our linkage seems to be a lot more powerful. I can really feel your emotions now, I swear its almost like I can hear your private thoughts sometimes. It's like the distance between our decks has been reduced or the link has been sped up or something.\"\n\n\"Yeah, I have noticed that. And I think that is a smart idea. The real wild card in this equation is the coke. It gives us power, but it's a wild power, random, or not fully known.\"\n\nBrandi felt a little bit of a craving and she growled. She felt Kory's embarrassment and a bit of shame through the link. \"Sorry, I felt that too. Shit, I knew I had an issue, didn't mean to make it one for you. Well, not now or like this anyway. I was thinking if you didn't come around I might have to get you nice and hooked at the club.\"\n\n\"Gee, thanks. Nice to know you cared.\"\n\nKory snorted. \"Hey, back then it was MY club and if you think I was going to let some little Brazilian tramp take top billing you are fucking stupid.\"\n\nBrandi rolled her eyes. Brandi felt the link again and frowned. Kory seemed a little excited about something.\n\n\"Kory, what are you excited about?\"\n\n\"Um, huh. I was thinking how cool it would be to work on that coke. Not like take any, but study it. Find out what it can do. It's sounds kinda fun and interesting.\"\n\nBrandi frowned at that. \"That sure doesn't sound like Kory. Sounds more like me.\" Brandi crossed her legs and let out a slight sigh. The feeling of her dirty stockings and her stained thighs made her feel dirty and slutty. Not horny per say, but like she was something a bit more daring, someone who didn't care what anyone thought and liked being attractive in a dirty daring way.\n\n\"Hold on. When the hell have I ever thought like that?\" Brandi said to herself.\n\nHer ruminations were ended when she heard the door to the bedroom open.\n\n\"Hang on Kory, I think our prey is awake.\"\n\nBrandi felt Kory get excited. Not horny per say, but definitely focused and excited.\n\nSteve staggered into the room wearing a bathrobe and looking stunned. His eyes still seemed to have a glaze to them and when he saw Brandi he broke into a huge smile.\n\n\"Hi handsome. Sleep well after our welcome home?\"\n\nSteve came over and pulled Brandi to her feet. He leaned down and kissed her deeply. Brandi focused on NOT scrambling his brains and Steve just sighed and sat down when they stopped.\n\n\"Is that what you call it? You have a gift of understatement my lovely Brandi.\"\n\nBrandi smiled and sat down. \"So, you liked it?\"\n\nSteve's eyes got a distant look to them. \"It was amazing. I remember kissing you at the door and going all dopey. I remember you leading me into the living room and then dropping your robe, and how stunning you looked. And then you kissing me and...\"\n\nSteve trailed off and his eyes got very distant.\n\n\"Can't stop there lover. Go on.\"\n\nSteve spoke in mellow voice, like he was having a hard time believing what he was saying. \"I suddenly had this thought in my head. It told me exactly what to do to you. It was like my mind was turned off and just had to obey.\"\n\nSteve's eyes got a glint to them and a smile spread across his face. \"It was fucking amazing. It the most intense sex I have ever had. It was like I was transformed into a perfect lover, and then into a beast. GOD! It was so incredible! I remember my mind just shutting down and I felt like an animal in rut. I just wanted to pound your pussy as hard and as long as I could. I wanted to fuck both our brains out. Fuck! I've never felt like that! I've never fucked like that! Cripes! Listen to me! I tossing fuck around like I'm a junior high school kid trying to be tough in the locker room.\"\n\nSteve looked her dead in the eyes and she saw a fire there. Passion. Steve was aroused again and he was feeling good about it.\n\n\"I don't know what you did to me. But do it again. Do it every night. I know you loved it. I could feel your body responding, I could hear it in your voice. I swear your voice changed when you screamed \"again!\" when I smacked your ass. More dirty, more sultry.\"\n\nBrandi felt her pussy tingle a bit and then felt it tingle more as she felt the stickiness on her thighs.\n\n\"Did you like me like that? Slutty and sleazy?\"\n\nSteve licked his lips and his grin widened. \"Actually yes, normally you are so smooth and polished. You are wild in bed always and I've never had anyone who comes close to you, but you are always so classy about it, so high end. Like making love to a Lady or a Princess. But last night, when you were screaming dirty words at me, when you howled like an animal? Oh fuck Brandi! It was, shit, I lack the words.\"\n\nBrandi's eyes were half-shut and her fingers were straying close to her pussy when Kory spoke up.\n\n\"Hey! Brandi! Unnnnnn, focus girl, you're getting me horny again! Stop it before we can't stop!\"\n\nBrandi shook her head. \"Shit, that was weird. I never liked being thought of as sleazy or slutty, but now it's turning me on.\" She smiled as Steve.\n\n\"Glad you liked it lover. Sometimes you need to change things up.\"\n\nSteve nodded excitedly. \"Yes, yes you do. But there is one more thing. I can remember all of it! It's not like before when my mind is a haze and my memories are fucked up! I remember everything as clear as a bell.\"\n\nSteve leaned over and kissed her gently. \"Last night was the most incredible night I have ever had Brandi. And I want us to enjoy more.\"\n\nHe got up and walked around a bit. After a moment he said \"Ah ha\" and picked up the gift from near the doorway to the living room where it had been tossed last night.\n\n\"A welcome home gift. Don't worry it didn't break.\"\n\nBrandi smiled at him and began to unwrap it.\n\n\"I hope its not an engagement ring.\" Kory said.\n\n\"No, Steve would do something over the top for that. This is something else.\"\n\nBrandi smiled at him as she opened it. It was small square box, bigger than a ring box. She opened it and her breath caught.\n\n\"Oh my.\" She said is a very surprised voice. \"Holy shit.\" Said Kory.\n\nIt was a complete set of jewelry. A matching set of earrings, a necklace, and two bracelets. It was all done up in rose colored gold. But the size and the stones were what caused her to gasp.\n\nThe gems were all very large emeralds. Dark green, and they caught the light easily and sparkled. The earrings had a large stone in the center with smaller ones arranged around it, the bracelets were studded with them, but the necklace was amazing. The emerald was the size of a robin's egg set in a large gold setting surrounded by others. It was breath-takingly beautiful.\n\n\"Oh my. Steve, you shouldn't have. This is too much.\"\n\n\"No, no its not. I had this custom built just for you. The green offsets your grey eyes just perfectly.\"\n\nSteve seemed to frown a bit and then shrug. \"They are perfect for you. They were literally made for you.\"\n\nBrandi was still pretty stunned. She expected that Steve would be giving her more expensive gifts, but this was way over the top from what she expected.\n\nSteve took out the necklace and draped it around her neck. He then put on her bracelets and let her put on the earrings. Brandi stood up and Steve grinned as he pulled out a small hand mirror.\n\nBrandi gasped as she saw herself. The matched set of jewels sparkled and seemed to light up her face. Even without makeup the necklace and earrings seemed to frame her face. She smiled and pouted.\n\n\"Damn girl! We, sorry, you look HOT with these jewels on!\" Kory said. Brandi could feel some genuine respect and awe in that statement along with some jealousy.\n\n\"Wow, these really do bring out the color in my...eyes?\" Brandi said as she looked closer in the mirror. She could see Steve had picked up on her hesitation and while keeping a good poker face, she could tell he was slightly nervous.\n\nBrandi looked closely at the mirror. Her eyes were a light grey, but as she looked at them she swore that they seemed to have hint of blue to them.\n\nBrandi thought for a moment. \"Hey Kory, notice anything about my face?\"\n\nBrandi could feel Kory focusing. \"Aside from how lovely it is? Hmmm, nice eyes, grey with a little hint of blue. These jewels really make a nice contrast to it.\"\n\n\"What color were your eyes?\"\n\n\"Mine? Light blue. But I wore contacts a lot to change things up, why do you ask?\"\n\n\"Kory, my eyes were light grey, no hint of blue ever. But now I've got some.\"\n\nShe could feel Kory thinking a bit. \"That is interesting. Megan had blue eyes, did you not quite fully revert?\"\n\n\"I don't know, but I think Steve noticed my eyes are slightly different.\"\n\n\"Brandi? You there?\" Steve asked with some excitement and what appeared to be some confusion.\n\n\"Sorry baby, I was just lost in thought about how beautiful these are.\"\n\nShe leaned over and kissed him again and he smiled when she pulled away. His hand gently brushed up her stockinged leg and his eyes arched a bit when he felt the dampness. Brandi licked her lips and giggled in a very sexy way, like when she had been a stripper and was trying to reel a guy in.\n\n\"You haven't cleaned up yet. How...dirty.\" Steve said with a low voice and a smile.\n\n\"Yes. I was going to but for some reason I just felt the need to be a bit dirty. Being a classy woman is lovely and don't ever think I don't love being your Cinderella, but sometimes I get the, urge, to be more of the cleaning lady in the back instead of the belle of the ball, if you follow.\"\n\nBrandi said this as she traced a nail down his chest through his robe.\n\nSteve smiled what Brandi would call an evil smile. Brandi felt her pussy tingle again and heard Kory give off a low moan.\n\n\"Careful Brandi, you're starting to work me up and you know how that goes.\" Kory said with some breathlessness.\n\n\"I know, I'm just teasing him.\" Brandi giggled at Steve and said \"Ok, hold on. Before we continue down this path, I want to know some things.\"\n\nSteve sighed and sat back. \"I cannot refuse a Lady's request. What does my Cinderella wish to know?\"\n\nBrandi giggled and Kory gave a groan. \"Cheesy. I hate it when guys act like this. Just be a man.\"\n\n\"Quiet you. It's nice.\" Brandi replied.\n\n\"Steve, last night you said you had experts look into me. What did you mean, and I do mean exactly.\" Brandi said in her no-nonsense business voice.\n\nSteve kept a straight face, but Brandi could sense his pulse quicken and his breathing speed up slightly. After a moment he took her hand.\n\n\"Okay Brandi, I will tell you everything. You are my girlfriend, but I think you know I'm head over heels in love with you. You are the most amazing woman I have ever met, not just the sex although I'd be a liar if I said that wasn't a big part of it. You are wicked smart, quick on your feet and your mind, you are nice when you can be, and utterly vicious when needed. You've got more spine that 90% of the senior management in my company and the brains and determination to use it for your ends.\"\n\nSteve took a breath and continued. \"I couldn't figure out why someone as brilliant as you was just doing consulting work when you could easily be slashing your way to the top of any company in Miami. Fuck, if you worked anywhere else you would already be a VP on the way up to a senior spot. You can be modest, but you are no fool. I know you know exactly how good you are and while maybe you like your \"job\" as much as you say you do, I couldn't believe that you loved it enough to stay in a lower position. Especially with your tastes.\"\n\nSteve waved his arms around. \"I know you said you put a down payment from a \"bonus\" you got for this place, but even then this place is just a bit out of your pay grade. And I have noticed some of your clothing. Most of it is stuff that is perfectly fitting your position and paygrade. But I have noticed several designer dresses that I found out were custom ordered from France and Italy, along with some silk numbers from China.\"\n\nBrandi kept her face still. \"Shit! How did he know those items were anything special?\"\n\n\"Steve have you been spying on me?\"\n\nSteve looked embarrassed. \"Well, sort of. Not following you or anything, but once while you were at the pool I was up here getting us some drinks. I snuck into your closet and took some pictures of stuff you had so I could get you some clothes you liked, sizes and colors. I have a professional shopper who gets me my stuff, and I had her look at the pictures. She picked up real quick that you had some really expensive stuff. Stuff you could not afford at a standard consultant fee for a Chemist.\"",
        "\"Damn it. Figures. I assume the man in my life won't know shit about clothing, so I keep just a couple of my most favorite items around and he shows pics to someone who DOES know. Cripes, never assume anything.\" Brandi muttered in her head.\n\nKory was laughing. \"Oh hell Brandi! This is fucking awesome! You got tripped up by clothing! For all the shit you have been so careful about, that is a fucked-up thing to get caught by.\"\n\n\"Oh shut up.\" Brandi said.\n\nSteve continued. \"I did some thinking and then did some asking around. I may not look like it, but I have some \"friends\" who are, shall we say, good family men from NYC. I happened to be the roommate of one in college and another in grad school. Now, I have never done anything illegal or partnered with them for anything. We are just friends. But I have on occasion asked them a question or two. And I asked about your company.\"\n\nSteve sat back and seemed to think hard for a bit. He then nodded and looked her directly in the eye. \"Brandi, I know that Case Consulting does more than just consulting, it does some things that are illegal. I didn't ask for details, but I do know that my friends spoke highly of this company and that this company was not into anything violent or hard core, such as drugs or human trafficking. I got the impression it was mostly information, as in acquiring it for people through various means. Sometimes fully above board, sometimes not so much.\"\n\nSteve smiled at her. \"I am not sure what your position is there. I very specifically did NOT ask about you in any way, shape or form, or Mr. Case or anyone specifically who works or did work there. But I am very sure that you are not just some cog in the machine.\"\n\nBrandi kept her face smooth as Steve grinned more. \"After I heard this I thought about it and I have realized that I honestly don't care. Brandi, you are unique and amazing, and I'm not surprised you have a job that is the same thing. In fact, it turns me on even more and makes you more appealing. You don't care about money because I'm sure you make plenty even if you hide it well. You don't care about position, or being the social queen, you care about being you. And that is a woman I cannot resist.\"\n\nSteve stood up and pulled Brandi to her feet. He kissed her with a gentle passion that made Brandi's toes curl and Kory moan in her head. He smiled at her and said \"Brandi, I don't know exactly what you do, and if you decide to never tell me I am going to be okay with that. So long as I can have you I'm good and will support you in any way I can.\"\n\nSteve let his figures slide around her neck tracing the necklace. \"I was going to propose to you, but I knew you would probably say no. So instead of an engagement ring, I got you a something else. A deal set.\"\n\nBrandi arched her eyebrow. \"A what?\" She and Kory said in unison with Brandi saying it out loud and Kory in her head.\n\nSteve chuckled and let his fingers trace her ears. Brandi bit her lip and let out a little moan as Steve's fingers teased her neck and ears. \"I'm offering you a deal my fine Lady. I want you, but I know that you won't accept a, shall we say, \"Traditional\" arrangement at this time. Maybe later, but not now. I want us to be a couple, but I will do it on your terms. If you want to fade into the background while you are here, then ok. I will be going stag to a lot of events, but I won't put you in the limelight. If you want to be \"the girlfriend\" of the hottest developer in Miami, and all the spotlight it entails, then ok. If you want something in-between, then tell me and I'm good with it.\"\n\n\"Wow, this boy is your toy.\" Kory said with a tone that suggested Brandi should take him up on it.\n\nBrandi was lost in thought for a moment. \"Shit Kory. I don't know. I like him. A lot. Maybe even love him. But damn, this could make my job hard.\"\n\n\"Or easy. Brandi, being arm candy is a great way to hide in plain sight. Look at me, I did it and no one except a superpowered shapeshifting spy ever figured out what was really going on. Shit, when you go out of town for a month or two, or a week or two, who's gonna care? All the girls are going to be trying to take the opportunity to hit on him and won't give a fuck, and the men are going to be sad you are not around to hit on.\"\n\nBrandi thought a bit more. And then she gave Steve a big smile.\n\n\"I accept your deal on the following conditions. One, you never, ever, ask what I do. Nada, zip, nothing. I consult on Chemistry, and that is it. You never show any interest in that. If I disappear for a week with no announcement and then just re-appear, you simply smile and carry on like nothing happened. If anyone asks you either ignore it or spin some bs. And you be sure to tell me what you tell them and who you told so I can be sure I can cover properly.\"\n\nBrandi held up her finger and kissed it, then she pressed it against his lips. \"Two, you never talk to, call or otherwise have anything to do with my company. I don't care how long it's been or what you may have heard or whatever, you don't call, visit or anything else. If my company needs to talk to you, they will contact you, but it's all one way.\"\n\nBrandi pulled her hand back and kissed another finger and put it to his lips. \"Three, if anyone starts showing a lot of interest in me, or my business, you let me know. You're smart, you're clever, and you can hustle with best, but when it deals with me, you say nothing. You change the subject or just walk off it they press and you tell me who is pressing.\"\n\nBrandi kissed a third finger and put it to his lips. She slowly rubbed his lips and she smiled.\n\n\"Four, and final, condition. In terms of being your \"official\" girlfriend, I will set the level. I expect you have a busy social calendar being who you are, but I'm not quite ready to be full exposure. You share your calendar with me and let me know which events you really want to show me off at, and we will see.\"\n\n\"If you can accept those terms we have a deal my fine besotted boyfriend.\"\n\nSteve took her hand and kissed each finger. \"I accept my fine mysterious lady, but with one additional condition. Whenever you get to a point when you can change how this arrangement works, where you can be more than just my mysterious lover, you let me know right away.\"\n\n\"Deal.\"\n\n\"Oh, you just got the bowl of cream kitty.\" Kory said with a very sexy voice. Brandi felt her body twinge again with excitement.\n\nBrandi leaned in and kissed Steve long and passionately. She let her mind wash over his and filled his head with pleasant thoughts. Not horniness or passion, just mellow, relaxed thoughts, the ones that made you want to cuddle and just hold someone.\n\nSteve broke the kiss and Brandi saw the dazed look in his eyes. He grinned at her and said \"And you just did it to me again my Lady.\" He reached over and swept her up into his arms and carried out to the living room and sat down with her on his lap and snuggled in.\n\n\"Mmmmmm, this is nice.\" Kory murmured. \"I can see the attraction to having a lover. A real lover.\"\n\n\"Yes, it's nice. Especially when you can read his mind and make sure he is doing what you want to do.\" Brandi replied as she snuggled in close.\n\nThey just sat there cuddling for a bit. Steve hugged her and held her and let his fingers trace along her arm. Brandi enjoyed the feeling and noticed that she and Kory seemed to be very closely linked. To the point she almost couldn't feel the link.\n\n\"Hmm, I wonder if Kory could talk through my mouth right now?\" Brandi thought. \"Tempting, but I'm not up for that right now. This is too nice.\"\n\nAfter a bit more Steve lifted her chin and kissed her gently. Brandi returned it and she felt her body tingle again.\n\n\"Mmmmm, love that feeling.\" Kory said in a lazy voice. \"But I like sex a lot more.\"\n\nBrandi felt the tingle again but with a lot more power. She shuddered a little and sighed deeply. \"Kory, I'm not sure we should go another round, and this is so nice.\"\n\n\"It is nice, but I'm feeling the need for some more fun.\" Kory said. Brandi sucked her breath as another wave washed through her.\n\n\"Hmmmm, is my fine lady feeling a bit excited?\" Steve said and let his hand trace around her neck, and then down her chest between her tits.\n\n\"No, no this is fine just like this.\" Brandi said. \"Knock it off Kory!\" She thought.\n\nKory giggled and Brandi moaned internally. That was Kory's \"time to play\" giggle, and right after the giggle another wave of horniness washed down her body. This time Brandi moaned out loud.\n\n\"Just like this?\" Steve said playfully as his other hand moved down between her legs and traced her garter belt.\n\nBrandi was getting a bit flustered. She didn't want to tell Steve to knock it off, but his roaming hands and Kory's vibes were turning her on quickly.\n\n\"Come on girlfriend! You know you want it. Having this handsome stud, having him...fuck you.\"\n\nBrandi bit her lip as the excitement began to build inside her.\n\n\"Mmmm, a garter belt with no panties, but stockings. And these stockings seem to be slightly...used.\" Steve said as his fingers traced down the strap to her legs and then around the top.\n\nBrandi felt dirty as she felt his fingers touch the damp garments and feel the stickiness around her bare crotch. And that turned her on.\n\n\"You like that idea don't you girlfriend?\" Kory purred in her head. \"Being his booty call. Being his awesome fuck.\"\n\nBrandi moaned out loud this time as her body betrayed her and she began to feel her pussy tingle and moisten. Steve's fingers slowly eased over and found her clit. They slowly rubbed it, just like she had taught him to back when they had started dating.\n\n\"My lovely Cinderella, but you're not the beauty at the ball right now are you? You are the dirty little maid.\"\n\nBrandi's breath caught at that and she had a vision of Steve bending her over and taking her from behind.\n\n\"Uhhhhhh, this is soooo fucking good.\" Kory cooed. \"You love this girlfriend! WE love this! Being a dirty slut for Steve, being his personal woman. Having him so wrapped up that he is willing to do ANYTHING for us! Anything at all...\"\n\n\"Anything...\" Brandi whispered.\n\n\"What was that my dirty little maid? You'd do anything?\"\n\nBrandi's mind was awash in lust again. As she had feared, Kory's pulses had worked her up and Steve's hands and whispered comments had turned her on again. The feeling of being dirty, of being a bit sleazy, of not being the graceful belle of the ball, but the dirty maid in the backroom had her fired up again.\n\n\"Fuck! Why am I so turned on by this? I was never turned on by this stuff before. What is happening to me? Ooooooooh fuck it!\" Brandi thought to herself as she finally gave in.\n\n\"Yes! Anything! Anything my Prince wants...a princess? Or something...else?\" Brandi moaned into Steve's ear.\n\n\"I think I want something else.\" Steve whispered into her ear as his fingers worked her clit. \"I think I want my lady to display her jewels.\"\n\nBrandi smiled. She stood up and stepped back a step. She undid her robe tie-off and let the robe drop to the floor. She put a gloved hand to her lips and giggled.\n\n\"Display her jewels? Sounds like you want to see what you have purchased.\"\n\nSteve blinked a bit at that but Brandi smiled evilly. \"Yes, what did it cost to buy these hands?\"\n\nBrandi tugged on one of her white lace gloves and slowly pulled it off. She just let it drop to her feet and then wiggled her fingers at Steve. She then did the same to the other.\n\n\"What did it cost to buy this ass?\" Brandi said as she slowly turned around and bent over. Steve was sweating and Brandi licked her lips and then gave her ass a smack.\n\n\"Oh yeah! Work him girl!\" Kory said with a heated voice. Brandi felt Kory's link pulse with excitement and heat, and she felt her own match it.\n\nSteve jerked at the smack and Brandi swayed back and forth. \"Does that turn you on? Does it turn you on to think that your girlfriend is just a gold-digger? That she is doing this for jewels like a sleazy stripper?\" Kory laughed at that and Brandi felt another pulse of heat rip through her.\n\nBrandi turned around and could see Steve was getting very turned on. Brandi snapped her garter belt with her fingers and eased it down. She left it on the floor and then snapped her fingers.\n\n\"Eyes here! That's my good, besotted boy. Eyes up here to this wonderful necklace. Did this necklace buy these tits? Hmmmmmm?\" Brandi let her fingers trace down from the necklace and then to her tits. She circled her nipples and then she cupped her tits and lifted one up to her mouth. She kissed it lightly and then the other one.\n\n\"Fuck...Brandi...\" Steve gasped out.\n\n\"You like? You like it when I'm a bit...dirty?\" Brandi slowly raised her hands up over her head and swayed her body back and forth slowly.\n\n\"You like it when I'm a bit...sleazy?\" Brandi turned slowly and displayed her back and her ass. She slowly bent down and pulled off one stocking. Then the other.\n\n\"Bring him home sister!\" Kory panted in her head. Brandi's mind was swirling in a haze of lust and heat. \"Fuck! I'm so fucking hot right now!\" Brandi thought as she slowly turned around.\n\nSteve's eyes were wide and he was openly panting.\n\n\"Or not? Eh, maybe I will play the sleazy girl later.\" Brandi said and turned around and started to walk back to her bedroom.\n\n\"What the? What the fuck are you doing?\" Kory practically screamed in her head.\n\n\"Wait for it.\" Brandi replied.\n\nBrandi got about three steps when she heard this growl and was shoved against the wall. She was spun around and looked straight into Steve's eyes. There were not the eyes of a lover, they were the eyes of a lust crazed beast.\n\nSteve didn't waste a single second. He lifted Brandi up, pined her against the wall, and shoved right into her.\n\n\"WOOOOAAAAAAAHHH!\" Brandi screamed out as Steve's cock shoved roughly into her. She spread her legs apart and then wrapped them around his waist. She grabbed his hair and pulled him in for a rough kiss. Their tongues rolled around while Steve began to ram into her. The connection blasted her mind again with raw lust and power.\n\n\"OH FUCK! OH FUCK! OH FUCK!\" Kory and Brandi grunted together inside her head. Brandi couldn't feel the link, but she was so carried away she didn't really care. Just like the night before, her focus was completely washed away by the lust and heat of the moment. Brandi could feel her head bumping off the wall and her back getting slammed against it, probably causing some bruises. But it was so intense and hot she didn't care.\n\n\"YEAH! Fuck your sleazy girl! Fuck your dirty maid! Make me your nasty, dirty whore! Brandi grunted into Steve's ear.\n\nSteve didn't seem to need any encouragement in that regard. He slammed into her again and again and Brandi's vision began to swim and she started to see spots. Steve gave a loud growl and came inside her hard and the second she felt his cum shoot into her she came so hard that everything went black.\n\n\"Brandi?\"\n\nBrandi opened her eyes and looked up at a concerned Steve.\n\n\"Oooooooo, that was so fucking hot.\" Kory purred in her head.\n\nBrandi smiled up at him and then winced. \"Ow. My head hurts.\"\n\n\"Um, I think you kinda knocked yourself out on the climax. We were fucking and when I came you came and your head slammed back into the wall and you blacked out.\" Steve said with a look of concern.\n\nBrandi touched the back of her head, felt a knot starting to form, and then looked up at Steve and giggled.\n\n\"Wow, I've got a man who can literally fuck me unconscious. Steve, if your ego ever needed a boost, THIS should do it.\"\n\nSteve blinked and then grinned and laughed. \"Damn Brandi! You always mix my head right up. But shit! That was intense! It was such a turn on to hear you talk and act like that!\"\n\n\"So your boy likes it sleazy? Mmmmm, looks like you lucked out in getting me in your head.\" Kory said with sly voice.\n\nBrandi ignored her. \"You like your girls sleazy? My, you hide it well.\"\n\nSteve snorted and sat down beside her. \"No, I like my girl to feel free to do whatever she wants to. If she wants to be a Lady at the ball with a Knight in Shining Armor, then fine. If she wants to channel her inner stripper, then also fine. So long as the end result includes ME as the knight or the john or whatever, I'm good.\"\n\nSteve leaned in and kissed her. Brandi broke off and leaned back crossing her arms so her bracelets would show along with her necklace and earrings. She smiled and said \"Well thank you lover. So, how do I look all decked out?\"\n\nSteve smiled and said \"Ravishing. But I think I do need to get you a ring, no, two rings. Complete the set.\"\n\nBrandi smiled. \"Well, looks like you know what I want for my birthday then. No rush baby, and you know I'm not after you for the money. But it was fun to play that way.\"\n\nSteve nodded. He looked at the clock. \"Hmmm, 7am, we've been up and at it for a while. Hungry?\"\n\n\"Yes. There's a 24 hour dinner down the beach a way. Fancy a walk and some breakfast?\"\n\n\"Sounds like a plan.\"\n\n\"Yeah, sounds like a great plan.\" Kory added in.\n\nThey got cleaned up without jumping each other's bones and had a lovely walk down the beach. They ate a large breakfast, but not a massive one like Brandi normally did.\n\n\"Huh, looks like when we split the work we don't burn so much energy.\" Kory said.\n\n\"Yeah, I was noticing that. Giving Steve some instructions and letting him go seems to be a lot easier to do that riding him and controlling him.\" Brandi said.\n\nBrandi could feel Kory thinking. \"What are you thinking about?\"\n\n\"How this programming can work. What we did here was a one shot and done instruction. I wonder if we can make it permanent without having to boost.\"\n\n\"I hope so.\" Brandi cringed as she felt a very slight craving for coke. Brandi could feel Kory's feeling of desire, but also embarrassment and even a bit of shame. \"Yeah, me too. I'd like to kick the habit. It was easy to say I had in under control in Chicago when I had to use it to get everything done. Now? Yeah, I'm feeling the real need and I don't like not having control over something like that.\"\n\nBrandi and Kory finished the meal in silence and then they enjoyed the walk home with Steve. Steve kissed her gently at the door. \"I need to go home to my place and get a suit. Mine is not exactly one I can wear to the staff meeting right now.\" Brandi giggled at the bag holding Steve's stained and torn suit.\n\n\"I'd love to see you try. Everyone would be wondering how much fun you had the night before.\"\n\n\"Oh, I think it will be pretty obvious.\"\n\nSteve turned to go and then stopped. \"Oh shit.\"\n\n\"What?\"\n\nBrandi looked over where Steve was looking and saw Cindy was waving at them.\n\nBrandi giggled and waved back. \"Hey! Come on over! We need to get to work!\"\n\n\"Yes Ms. Brandi! Be right over!\" She called back.\n\nSteve looked from Cindy who was taking some stuff into her condo back to Brandi.\n\n\"Wait, you know her? You're...friends?\"\n\n\"Oh no, she's my personal assistant. I just hired her yesterday. We had a nice talk right when I got home. Pretty young thing. She's moving out of here shortly, this place is way too expensive for a Personal Assistant to afford.\"\n\nSteve was gaping. Brandi giggled again and gave him a little kiss on the lips. \"Don't worry baby, I know what she was trying to do, and it's taken care of. She won't be making any passes at you ever again.\"\n\nSteve opened his mouth and Brandi cocked her eye at him. \"Remember the deal. She works for me and helps me in my job. You don't ask about that. Ever.\"\n\nSteve seemed to struggle a bit and then looked up to the sky and shook his head. \"Lord, they broke the mold when they made you. Okay baby, I'll call you later. Are you up for the cocktail hour after work?\"\n\n\"Sounds wonderful. Meet you there.\""
    ],
    "authorname": "Moosetales",
    "tags": [
        "mind control",
        "girl on girl",
        "girl on guy",
        "oral sex",
        "domination",
        "brain washing",
        "drugs"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/blow-your-mind-pt-12"
}