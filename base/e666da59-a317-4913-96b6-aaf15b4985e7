{
    "title": "The Garden Centre of Eden",
    "pages": [
        "They say every journey starts with a single step. In my case, the journey to enlightenment began with a spilt cup of tea.\n\nI should begin by explaining how I got to the starting point of my journey.\n\nMy name is Eve Laidler. I was born and raised in England: my father was the owner of a small independent garage and repair workshop in East Anglia, a quiet, gentle man but with a twinkle in his eye and an unassuming sense of fun, which I'd like to think I've inherited. My mother on the other hand was a more severe woman who tolerated, but never really joined in, my father's humour. Then when I was eleven years old, my father died quite suddenly of a heart attack.\n\nMy mother tried to take on the running of the garage, although it was already clear that the big car dealerships were squeezing the likes of us out of business. But our little operation was near an American air base, and some of the staff stationed there would use us to service their American cars which they had brought over, since the big boys had no advantage over us when it came to models they had no experience of. One day about two years later, my mother announced that she was going to marry one such serviceman, Joseph Waller. This was out of the blue, as far as I was concerned; she had never brought him to the house, and although I knew she had evenings out, I never realised she was dating. Within 6 months, she was married, Joseph was sent back to the USA, and we went with him. Shortly after, he left the Air Force, became the manager of a hardware store and we settled in a modest wooden house in a small town in middle America, in what some comedian called \"one of the square states\", and I found myself having a completely different life.\n\nJoseph was a humourless and solemn man, who was stern and domineering. To give him his due, he tried hard to be a father figure to me, and was kind in his way, but the austere outlook soon had me suppressing my fun side, and I became more introspective, careful about what I said, and keeping my emotions hidden. My mother and I became Americans. We became closely involved with the local church, the Church of the Redeemer, and Pastor Josiah Brown became a regular visitor to our home. I was persuaded -- actually, more like commanded -- to join the choir, and what with school and church affairs, I had a steady and secure, if not exactly stimulating, existence.\n\nAt school, I was a bit of an oddity, with my English accent and upbringing, and a lack of understanding of many of the ways of life that my fellow students took for granted. Even the teachers found me hard to integrate, since the syllabus was different and I was missing some of the early years' grounding in some subjects. Also I found it hard to get used to American spellings, and constantly got ribbed for using the wrong words -- after I asked a class mate to borrow a rubber, instead of an eraser, I got called Rubber all the time. I didn't know at the time it meant a condom, at school in England we called them Johnnies. So I found myself a bit socially excluded, and became a bit of a loner.\n\nThen when I was sixteen, my stepfather died. He'd been fit and healthy, but ran out of the store after a customer who'd left his wallet on the counter, and was hit by a car coming past the front of the store. This was in the parking lot, and the car was only doing ten or fifteen miles an hour, but he fell awkwardly and hit his head hard on the road -- a freak accident.\n\nMy mother was devastated. She cried a lot, and when she wasn't crying, she was angry -- at Joseph for leaving her, at herself for not coping with it, and often at me, for reasons I couldn't always determine: I couldn't seem to do anything to please her. She seemed to lack the drive of old, and I think she probably had a minor breakdown. More and more of domestic life I found myself taking over -- cleaning, shopping, cooking. My mother had had a part time job as a receptionist for a local doctor, but took so much time off for 'compassionate leave' that eventually the doctor was forced to replace her. I began to wonder how we were fixed financially. Pastor Brown stopped by often to lend his support, and slowly my mother began to rally. Eventually one of the church members found her another job helping out in a store -- not well paid but at least it helped her back into normal life and interaction with the outside world.\n\nIt was easier in the choir at first, as we had little time for socialising, and choir practice was more about singing than chatting. There was one boy there though, Pastor Brown's son Abe, who began to take an interest in me when I was seventeen. I had become a reasonably attractive teenager, with a decent and trim figure and a pleasant if not exactly pretty face. Although I did nothing to show off my looks, Abe began to seek me out. Now Pastor Brown was an ebullient man with a booming voice who always seemed to fill any room he was in. He seemed to consider his role in life as uplifting people by force of personality, and of course keeping them in God's way in the process. Abe, on the other hand, was a sly, unctuous kid with a wheedling voice, who acted in public just like the very correct Pastor's son, but who in private started to come on to me. At first, it was sexual innuendo. For example, one evening I was collecting up all the various hymn books and music sheets after choir practice, and Abe stood watching whilst everybody else was packing up and leaving. When they had all left, and I had nearly finished, he came over with his usual oily smile and said, \"I'll help you if you like, if you do something for me in return.\" \"That's big of you,\" I replied sarcastically. \"It's what you can do in return that will make me big!\" he responded with a leering grin.\n\nThis kind of exchange became more frequent when he had the opportunity, and I could see him start to engineer such opportunities. If I borrowed a book from the church library, he would somehow be there when I took it back. Once a month in summer, the church had a stall in the car park selling donated goods to fund missionary work, and if I volunteered to man the stall, so would Abe, forever trying to peer down my cleavage if I leaned to reach an item from under the table.\n\nThe Pastor seemed to think I was sweet on Abe, and kept pairing us up for church tasks. He asked me to distribute the monthly parish publication to congregation members, and arranged for Abe to drive me round one evening. After we finished, I went into the church to put the unused copies in the office, and Abe followed me in.\n\n\"You owe me a reward for helping you!\" he said.\n\n\"Oh yes, and what do you suppose that is?\"\n\nMy reply was incautious. He grabbed me and spun me round with my back to the cupboard, and kissed me hard. It wasn't a very romantic or arousing moment. Before I could gather my wits, his hands were on my breasts, kneading and mashing them. It didn't feel good. I pushed him away and ran out, laughter in my ears.\n\nHe kept telling me I should lose my cherry before I went to college, so I would be ready for the boys there, and he was the man to take it for me. My response was to tell him to get lost, but it seemed to have little effect.\n\nNot surprisingly, what with my mother's state of mind and my involvement in the church, my schoolwork suffered, and it began to look as though it would be harder for me to graduate from high school. So it wasn't a question of losing my virginity before going to college -- I wasn't likely to get there. Even if we had the money, or I could get a job and work myself through college, my mother would not let me go and it did not seem as if she could cope without me.\n\nSo I got a vacation job at Jackson's Mow &amp; Grow -- a large garden centre on the outskirts of town. It was thanks to old Mr. John Jackson, whom I knew as a leading member of the church, although he was now pretty much retired and most of the day to day running was done by his grandson Luke. I really enjoyed it, from manning the shop tills to watering the stock to plant culture in the greenhouses.\n\nThen just before I graduated from high school, my mother got sick. She developed severe abdominal pains and fever, and the doctors diagnosed peritonitis from a bowel rupture. She failed to respond to treatment and within a week she had died.\n\nSo there I was, just turned eighteen, now completely dependent on myself, with no near relatives to help, no close friends thanks to my restrictive home life, and no money. I somehow got through the immediate issues of bereavement and funeral, found that she had actually been organised enough to make a will in which she left me the house, and it turned out there was a savings account which I hadn't known about -- close to ten thousand dollars -- but she had stated it should be used to cover all the funeral expenses, and the balance went to the church. I was left with the current account with just a couple of hundred dollars, but at least no debts.\n\nSo now I had no worries about where to live, but no money and serious worries about pretty much everything else. By the time all this was done, school had finished, so I never went back. I went instead to see Luke, and he offered me a full time job at Mow &amp; Grow, which I eagerly accepted -- not much money, but enough to enable me to keep the house and still eat.\n\nFast forward four years to the spilt cup of tea. I mentioned it to Marijka the following day whilst we were at the potting bench potting up begonias for the forthcoming Spring rush.\n\n\"I usually make myself a mug of good old fashioned English tea to drink in bed with a few minutes of reading before I go to sleep. Well, last night I managed to throw it all down my front -- I was carrying my book and the mug out of the kitchen and caught the sleeve of my nightie on the kitchen door handle, and splosh! Tea all over me and the floor, and to make matters worse the mug smashed and the book fell into the tea puddle. I was lucky the tea had already been standing for a few minutes otherwise I could have been scalded! Took me ten minutes to mop everything up. Then I had to change my nightie, but I'd only just put a clean one on, the old one was in the dirty washing basket and my only other one was still in the wash. I had to go to bed with nothing on! Luckily I was so tired I was asleep in minutes.\"\n\nWhat I hadn't mentioned is that I had never done this before, and it felt very illicit, like I had secretly done something bad.\n\n\"Lucky you!\" said Marijka, \"I always sleep nude. It feels so much better! You should carry on like that and see if you don't agree.\"\n\nIt came as no surprise. Marijka was modern, liberated, confident, lacking inhibition -- all the things I was not. A Dutch girl, she was in the States on a gap year after finishing university whilst she decided what career to pursue, staying with an uncle who lived locally; and despite being older than her, I felt so much less mature and experienced. However, she was fun, enthusiastic and never seemed to be down, and we got on really well.\n\n\"Well, I don't know... I somehow feel more comfortable in a nightie.\"\n\nActually, it had felt really good -- cool, smooth on my skin, and very sensuous. When I woke in the morning with the alarm buzzing, and I realised with a shock I was still naked, it had felt... exciting. But I had leapt out of bed and into my dressing gown to head to the bathroom for my morning shower. It was when I got out of the shower and was towelling myself dry, I thought: why was I so scared to walk a few feet to the bedroom with no clothes on? I was alone in the house, no-one could see. What was I afraid of or embarrassed about? Indeed, what would be the consequence of not wearing my dressing gown?\n\nAnd so, when I finished drying myself, I left my dressing gown on the bathroom door and walked back in the nude. It took some self control not to cover myself with my hands and scamper back: irrational fears take some time to get over.\n\nWhen I said I felt more comfortable in a nightie, what I really meant was I felt uncomfortable about not wearing a nightie.\n\n\"It just seems more free and unconfined and -- well, sexy to be naked in bed,\" said Marijka. \"But then I like being naked around the house too, for the same reasons.\"\n\n\"What about your uncle?\"\n\n\"Oh, after he caught me out a couple of times coming home when I was naked, we've come to an arrangement -- Dirk likes it too so now we accept each other nude.\"\n\nThis would take a bit of mental processing. Marijka was tall, stately, blond, very attractive; her uncle Dirk was middle-aged, shorter, balding, I suppose reasonably fit and not bad-looking, but even so, to go around naked in front of him...\n\n\"Well, as long as you don't forget and strip here... Bert would have a heart attack!\"\n\nBert was the general maintenance and fix-it man around the garden centre. Fifty-ish, portly and nervous, especially around women. Marijka giggled. \"It's almost worth it to see his reaction! If I could manage it without getting fired!\"\n\n\"Perhaps you could get Francine to do it -- she's more his type!\" Francine was regularly on the tills, a large black lady, kindly but loud and assertive, and Bert was clearly terrified of her. One of the four till positions had a dodgy power outlet so the till regularly cut out: Francine would be heard bellowing \"Bert! Bert! This dang cash register don't work again!\" and Bert would rush up, flustered, and mutter about cables or water or something. \"I don't care! Fix it!\" she would exclaim, with a wink to anyone nearby. Even Marijka was a little intimidated by Francine. She had patiently and repeatedly explained the pronunciation of her name, which roughly rhymed with \"Ma Raker\", but Francine kept lapsing back to \"Mary Car\", so Marijka gave up and accepted it.\n\nBefore we could develop this theme any further, however, we were interrupted by Luke, who swept in and demanded, \"Hi ladies, have either of you seen any of the bug sprayers? The large ones, the rucksack style.\"\n\n\"No, sorry Luke,\" we chorused. \"Didn't Jimmy have one to spray the roses out the back?\" I added. \"Thanks, I'll ask him,\" and out he swept again.\n\n\"Now that's someone I could strip for,\" said Marijka, \"and judging by your reaction I think you could too!\"\n\nI blushed. Luke was very nice and very good looking, not that I'd ever stand a chance of attracting his attention.\n\n\"Don't forget Luke is spoken for -- that heiress, Keiron Sangster...\"\n\nShe was 'posh American' from a wealthy family with several ranches in the area. Always impeccably groomed, poised and haughty. She certainly didn't seem to me to be the sort of woman who would settle with a practical, down to earth local businessman like Luke.\n\n\"Well, am I right?\" Is he part of your late night fantasies?\"\n\nI felt a bit flustered. Now I knew how Bert felt.\n\n\"Well, I don't -- er, haven't given it any thought,\" I finished lamely. I wasn't sure where this was going and hoped I could head it into more comfortable territory. \"Have you heard when the wedding is scheduled for?\"\n\n\"They won't get married, they don't fit -- she will seek out someone a bit more -- how do you put it -- aspirational!\" For a Dutch native, her English was sometimes better than mine.\n\nUnfortunately the ploy didn't work. \"So who do you fantasise about in bed?\"\n\nI was a rabbit caught in the headlights.\n\n\"Well, I don't -- er... I'm not sure what you mean?\" I was lost.\n\n\"You know, when you are feeling hot, when you let your fingers do the talking?\"\n\nI realised with a start she was talking about masturbation. I blushed even more obviously. I had been brought up to believe that masturbation was wrong, sinful, un-Christian.\n\n\"Well, I don't -- er...\" I felt I was repeating myself. \"I mean, I haven't -- er --\"\n\n\"You don't play with yourself? Why not?\"\n\n\"Well, it doesn't seem right, I was brought up to think it was wrong...\"\n\nMarijka snorted. \"What's wrong with it? If you can give yourself an orgasm with no man involved, no-one to get emotionally tense, you can imagine yourself with anyone on the planet -- well, not someone old, fat and smelly, obviously -- then why wouldn't you? It's a fabulous feeling, better than alcohol! You aren't doing any harm to anyone, how can that be wrong? Give it a go, Eve!\"\n\nFortunately for me, before I could dig my hole any deeper, Luke came back and got me to help him put a stock delivery away whilst Marijka continued with the potting on.\n\nI thought about this in the evening as I was preparing to go upstairs to bed. What was my hang-up exactly? Indeed, did I have one -- perhaps I was just being 'proper'? I remembered how I felt more free and comfortable in bed nude, and how hard it was to walk across the landing from bathroom to bedroom in the nude. But I thought, no-one can see, why should it be wrong? Why should enjoyment of nudity be sinful if you are alone? I took my nightly mug of tea upstairs -- fully clothed and carefully this time -- set it down on the bedside cabinet, took a deep breath, and got undressed. This evening, instead of rushing to get my nightie on (well, I still didn't have a clean one anyway), I dropped my underwear into the laundry basket and walked over to the mirror on the wardrobe door.\n\nI hadn't really looked at myself in the mirror naked for... well, probably ever. I saw a reasonably fit and shapely young woman, with a bush of brown pubic hair, shapely breasts -- not very large, not small either -- and quite prominent nipples. Should they be that hard? Don't think they are normally... I wonder why?\n\nI turned one way then the other, looking over my shoulder at my reflection. Seems ok, not supermodel territory, but nothing to be ashamed about. It still felt a bit naughty, but I couldn't think why it should be.\n\nI felt a bit emboldened. I opened the bedroom door to saunter down to the bathroom, and did my usual evening toilet. When I came back to the bedroom, I took a sip of my tea and realised I'd left my glass of water on the kitchen table. What the hell, I thought, and walked down the stairs and into the kitchen. I forced myself not to hurry. Here I was, naked where I'd never been naked before. I walked around the kitchen, noting the feel of air gently breathing on my skin. I went over to the kitchen window. It looked out onto the back yard, with my vegetable patch. It was deep into dusk and I realised the kitchen light was on and it would be easy to see in. There were only a couple of upstairs windows of the houses on the next block visible, and they were dark.\n\nSuddenly the light came on in one and I could see a man coming into the room. I squawked with fright, clutched at my boobs and groin, and scuttled out of the kitchen. Then I remembered the water, reached around the door and felt for the light switch, and edged slowly round the door as my eyes adjusted to the dark. I scampered to the table, grabbed the water, and rushed out and up the stairs.\n\nI dived into bed, turned the light off and pulled up the covers. My heart was still pumping. Had he seen me? Then I thought, and what if he had? Would he think me dissolute, a harlot, or -- wait a minute -- would he be turned on? I realised that despite my panic, I was actually exhilarated, and that my nipples were again hard, and I had a funny sensation in my groin. I thought I'd better lie still and let my heart rate get back to normal, and try to direct my thoughts back to less distracting topics. And soon I drifted off to sleep and dreamt of Marijka standing in the garden centre shop naked, ordering me to take my clothes off too, and the other staff standing around chanting \"Off! Off!\" until I woke with a start.\n\n<p align=\"center\">- 2 -</p>\n\nIt was a few days before I got to chat with Marijka again, as we were going through the vegetable module pots -- squash, zuccini, sweetcorn and so on -- checking and thinning the seedlings to ready them for sale.",
        "\"So Eve, still sleeping in the buff?\"\n\n\"Yes,\" I replied shyly. \"It saves a bit on laundry!\"\n\n\"That's my girl! I'll get you sunbathing nude before long! No more white suntan lines!\" I snorted with disbelief. \"Well, at least it's getting to sunbathing weather now, not that I do any of that -- I'm not the lie in the sun type. I think Al next door is pretty disappointed about that!\" Al was a teenage boy, who often watched me when I was pottering in the garden and he thought I wasn't looking. Mind you, it was pretty obvious he was -- there's only one gap in the fence he can look through and he always found something imaginary to do in that particular part of his back yard! Not that he had much to look at -- I was mostly gardening or tidying the yard out there, and dressing provocatively was hardly my style, especially for yard work. I think he was very shy and doubtless unsure of himself around the opposite sex, something I could sympathise with. His parents, Jeff and Ayleen, were out a lot and he seemed to have few friends.\n\nMarijka stretched and wiped her brow. \"I wouldn't mind wearing a lot less now -- it's getting warm in these greenhouses!\" As she was wearing the regulation green shorts and Mow &amp; Grow polo shirt, she was hardly overdressed as it was. \"I wonder if Luke would mind if I didn't wear a bra? All this bending down is not comfortable and it's making me feel hotter.\"\n\n\"Do you often go without a bra?\"\n\n\"Quite often when I'm not at work. It feels freer and whilst my boobs are young and firm I might as well take advantage! Also it's amazing how many men notice and can't take their eyes off my shirt front!\"\n\n\"Doesn't that bug you or make you nervous?\" I asked.\n\n\"Hey, it's nice to be noticed! As long as they only look and don't act. I've had a few men chat me up but no-one has done anything threatening.\"\n\n\"It sort of seems a bit like flaunting, almost sexist... although it depends on how much you show I guess,\" I mused. I'd never really thought about this before. Mind you, the thought of being braless did seem to be attractively daring. \"Well, if you want to, there aren't any customers going to come in here, and it's getting late so you won't get moved out front today...\"\n\n\"What the hell! I will if you will join me!\" and Maijka made as if to start.\n\n\"What, me?\" I was shocked. I'd never gone without a bra in public since puberty.\n\n\"Sure, why not? You said yourself it's private in here.\"\n\n\"But what if one of the others comes in? Luke for instance?\"\n\n\"Hey, we're not going to be topless! How much will they see? Come on, let's see if it is more comfortable!\"\n\nShe reached behind under her shirt and unclipped the bra. She slid the straps down her arms and pulled her elbows through, then tugged the bra down the front and out from under the hem. \"Come on, you can't pull out now!\"\n\nI didn't think I had made any commitment to join her, but found myself automatically following her. Off came the bra. I realised I hadn't got my bag there so it had to be rolled up and stuffed into a shorts pocket. Marijka applauded and gave a small cheer. \"Ta-dah! See, the sky hasn't fallen down!\"\n\nMy heart was racing and I was aware my nipples had gone very hard again. I looked at her. She struck a few poses. \"See? Just looks natural!\" Sure enough the thick cotton and loose nature of the polo shirts meant that you couldn't readily tell there was no bra. \"I see you are enjoying the situation!\" Marijka's words jolted me back and I realised I had been staring at her. I looked down my own chest and it seemed to me my nipples were quite prominent bumps in the cotton. It suddenly occurred to me that perhaps Marijka thought I was turned on by her!\n\n\"Oh, I -- er, sorry, I've never done this before!\" I felt myself blushing yet again. Marijka seemed to have the knack of bringing this out in me.\n\n\"Forget it and just get on with life -- you will find it becomes natural.\"\n\nBefore I could think of anything to say, the noise of a trolley alerted us to Luke's arrival.\n\n\"Hi girls, just found this abandoned outside, returning it to the entrance. Marijka, are you using unconventional means of weed control or something?\"\n\nMarijka suddenly realised she was still holding her bra. \"Oh, sorry, it was digging in a bit and so... um...\" I hadn't seen her on the back foot before and it was a relief to discover she wasn't always so much more confident than me!\n\n\"OK! But I suggest you put it down somewhere so you can use both hands?\" He grinned and pushed the trolley off.\n\nWe carried on working, and as we both moved the plant trays around, I realised it was quite comfortable, but distracting to have the cloth rubbing over the nipples. I also noticed that when Marijka bent down, although the shirt was not especially low cut, it was loose enough that you could see her breasts. However, I hadn't realised that when a woman bends forward, the upper swell of the breast when hanging down masks the view of the nipple. Later however, as we searched on all fours for a dropped tool in amongst the discarded pots under the bench, I discovered that the converse meant that viewed from behind, Marijka's nipples were clearly in view as the shirt hung low. I realised this was the first female nipple I had clearly seen since the locker rooms at school, when each girl checked out her neighbours to assess their developing breasts. And then the emphasis was on the breast not the nipple. I realised I liked the view and suddenly wondered with a jolt if this meant I was attracted to women. I didn't think so but frankly I didn't know.\n\nThere seemed to be a lot about myself that I didn't know.\n\nLater, I put my bra back on in the ladies room. I couldn't face driving home braless just yet.\n\nThat evening, as I was getting ready for bed, I thought again about what Marijka had said about masturbation. Was it wrong or just an innocent pleasure? The church had always taught that it was sinful, and only that past Sunday, the pastor had preached about 'scarlet women' -- he hadn't mentioned masturbation specifically, but you felt that it was part and parcel of being a scarlet woman -- whatever that was exactly.\n\nI thought about the bible studies I'd done over the years in Sunday School. I couldn't actually remember anything about self gratification. So I decided to google it. And it seems the Bible is pretty silent on the matter. It talks a lot about adultery, lust and coveting, but apart from a passage in Leviticus saying that if a man has a \"discharge\" then he is \"unclean\" until he has washed -- which seems pretty ambiguous -- there wasn't any direct declaration that playing with yourself is wrong. And Marijka's declaration that it can't be wrong when nobody else is involved let alone harmed or upset seemed logical. So I thought, perhaps I should at least try it and see what I thought of it.\n\nSo I went to the bathroom and washed and cleaned my teeth as usual, my head full of equal amounts of excitement and trepidation. I went back to my bedroom and got undressed, and slipped under my duvet naked.\n\nNow what? I hadn't ever masturbated before. In fact I don't think I had ever touched my pussy other than with toilet paper after a pee! How best to go about it? I presumed just touching my pussy would get me going. So I tentatively ran a finger along my slit. It felt alright. Was this being turned on? I slid my finger up and down my slit a few more times. It felt quite tingly, and a bit moist. I remembered at school one time, a group of girls gathered round reading an article in sex in a woman's magazine, giggling about it. One of them saw me and said, \"Hey, Eve, want to read how to get your orgasm from clitoral stimulation?\" Another one said with a grin, \"It's no good asking Eve, I doubt she even has a clitoris!\" and they all laughed. I blushed and left them to it. So now I thought, I don't actually know how to find my clitoris, or come to that, what to do if I can. Do I put my finger inside, I wondered? Then I thought, but I'm a virgin, will that break my hymen? Does it matter if it does? Maybe not, I thought, most men probably already have had sex before marriage, and if any future husband is upset at no hymen, even if I'm still technically a virgin, then I don't want to marry him. So as my pussy was starting to feel quite a bit damper, I tried pushing my finger inside. Was there a momentary pang of a breaking membrane, or was that just the sudden electric feeling of pleasure?\n\nI remembered Marijka's question -- did I fantasise about Luke? Well, I'd never fantasised about anyone before, so I wondered what it would be like if it were his hands touching my stomach, my pubic hair, my pussy... my butterflies multiplied a hundred fold, and my pussy became definitely wet rather than moist. Every touch felt electric. It was a bit overwhelming, and I stopped for a sip of nearly cold tea. I'd have to get used to this in stages. I lay back to let my breathing return to normal, and almost at once fell asleep.\n\n<p align=\"center\">- 3 -</p>\n\nThe days passed, and I was getting used to walking about the house naked, at least upstairs, but not downstairs again just yet. I hadn't nerved myself up to touch myself down there again, but I knew I would eventually. At least I hadn't spent time alone with Marijka to endure further teasing, until one day we were assigned to getting the geranium cuttings priced and ready for sale. Before we could start chatting, however, Luke came round and said,\n\n\"Girls, I'm going around all the staff, but as you are here, I'll speak to you now. I'd like to pick your brains... We need some kind of a sales boost, maybe a special event or something, and I don't want to have an 'everything discounted' type of sale, something a bit different. Any ideas?\"\n\nI was initially a bit alarmed. \"Does this mean we are in financial difficulty?\"\n\n\"Not really,\" said Luke, \"but I'd like to redevelop and freshen up the plant display area, and the checkouts, and we need to get proper barcode checkouts installed, and the power tools shop is so cramped, it needs more space. There's a limit to what I can borrow, so I need a cash boost to improve liquidity.\"\n\n\"How soon do you need this?\" Marijka asked.\n\n\"Let's say within the next ten to twelve weeks would be ideal, say by the end of July or so.\"\n\nWe ummed and ahed a bit, Marijka suggested getting a celebrity for a day, but Luke said he suspected the cost of anyone worthwhile might be a bit high. I suggested a series of themed events, such as a fairy grotto for Midsummer's day in June, maybe a barbecue day, a stars and stripes day for Independence Day. Luke quite liked that, if we could get a regular schedule of events planned out, and asked us to see what themes we could come up with over the next week or so. Further ideas seemed to elude us and Luke went off to find other groups to ask.\n\nMarijka and I continued discussing themes, but couldn't come up with something that was a real slam-dunk, and after fifteen minutes or so work got in the way of further chat.\n\nOver the next couple of weeks, there were tentative plans laid for a couple of theme days, but nothing that really inspired. Then one day, I had just arrived at work, and Marijka came through the door, and saw me, rushed over and said, \"I've had an idea about an event, I want to see if Luke is bold enough to go for it!\"\n\n\"What event?\" I said, intrigued. Just then Marijka saw Luke coming into the shop area on the far side and yelled to him. \"Come on!\" she said and rushed off to intercept him. I tagged along, wondering what this was all about.\n\nAfter a greeting, with Luke obviously in cheerful mood and enjoying Marijka's enthusiasm, she burst out with:\n\n\"I know what we can do! If you have the nerve!\" she said. \"I found out about it last night... It's on July 14th -- National Nude Day! We could have a nude day here!\"\n\nI was in shock, I couldn't speak. Luke however seemed to be considering it.\n\n\"How would that work I wonder... I guess our staff would need to be nude, we could perhaps invite customers to be nude... Perhaps we offer a discount to naked customers!\"\n\nI found my voice. \"My God, you're serious!\"\n\n\"I'll need to check on the legality, but I think it could cause quite a splash, if no other businesses are doing it... Marijka, can you see if you can get enough staff to agree to be naked? I guess we'll need to have -- er, let's see, about eight with rest period cover for the checkouts, say four floor walkers in the plants, about four in the power tools area, a couple for the hard landscaping, I guess around half a dozen in the caf\u00e9, kitchen staff in the back exempt from nudity I think, is that enough? Oh, and we will need at least one to manage the parking lot -- that's probably clothed -- and a couple at the entrance to welcome visitors and explain the day, say a couple more for the disrobing rooms -- need to work out how those will be set up.. See who is game, I'll let those who won't strip change their day off or work in the private areas like the nursery glass houses so no-one is out of pocket. And none of the temporary staff who are under 18. But a good idea, let's see if we can make it fly!\" And with that he strode off smiling.\n\n\"So what do you think, Eve?\" Marijka asked.\n\n\"Um... I don't know...\" I was in a turmoil. \"What if you have your period?\" I made a quick mental calculation. I wouldn't be on mine. No excuse there.\n\n\"That's a good reason to decline. I'm sure we can work around those who won't or can't strip. What about you, Eve? Will you join in?\"\n\nNo way, I thought. I'm not going to be naked in front of potentially hundreds of people.\n\n\"Of course, you'll get to see Luke naked!\"\n\nI had to admit that was an appealing thought, but still, no way was I going to be naked in public.\n\n\"OK I guess...\" What, was that me? What on earth did I think I was agreeing to? Why didn't my mouth respect my mind's decision? I must speak up and say no, but before I could, Marijka exclaimed, \"Great! We'll have so much fun!\" and gave me a big hug.\n\nI still felt appalled and horrified, but also I suddenly realised, part of me was excited at the prospect. How could that be?\n\n\"Is it really legal?\" I asked.\n\n\"All I know is that there are Nude Day parades or pageants in some cities, especially it seems in San Francisco. I think there is some wriggle room depending on the state, but I don't know what is the case here. Anyway, we are talking about a private enterprise, not a public street. Maybe it is OK.\"\n\nOver the next couple of days, I don't think Marijka got much work done, she was going round the staff cajoling and arguing, and slowly built up an unexpectedly impressive list of those consenting. The college students who normally worked weekends and between terms seemed particularly keen. Even Francine was game. \"Hell, I ain't no fashion model,\" she said, \"but I ain't ashamed of how I look. It was my Ethan persuaded me. He said he was lookin' forward to seeing me naked in front of everyone! He's gonna take time off work to come see for hisself!\"\n\nLuke reported that his chat with the lawyer indicated that there shouldn't be a problem on our premises, with the law pretty much untested if anyone was naked on the road out front. In theory it should only be a problem if there was 'indecent behaviour' but no-one had any real idea of what that meant. Did it mean simply nudity, or did it require some sort of lewdness?\n\nSo it was decided the event would go ahead. Luke called a meeting of all staff who were to be involved, plus any others interested, at the end of one working day. He announced that customers would be limited to over 18s, and would be invited to strip themselves -- there'd be 20% discount for all customers, but naked customers could claim double that. We'd set up temporary changing rooms just inside the entrance where customers could strip and leave their clothes -- like a cloakroom, only a bit more comprehensive! As for the staff, we'd get a bonus for participating, and would be expected to be naked apart from the Mow &amp; Grow branded baseball caps if we wanted, just as normal, and of course for shoes and socks. Normal rules applied to makeup, jewellery, glasses and sunglasses. It would be up to us if we took part in photos by visitors. We'd have one or two clothed wardens in the carpark to organise traffic.\n\nLuke was really enthused about the publicity and the potential boost to footfall, and hoped that would translate into money in the tills. We would start publicising the event about ten days before, with banners outside, posters in the town and advertising on local radio. Luke said he hoped we'd get four or five thousand visitors!\n\nSomeone asked, what if a visitor got an erection? (Sniggers from the assembled staff!) \"Well,\" said Luke, \"we should ask them politely to hide it with something -- maybe we'll keep some sun hats to hand for that!\"\n\nSomeone at the back called out, \"We'd need some extra large if they are like Adam!\"\n\nAdam was a young man from Lawnmowers who was probably six ten or maybe even seven feet, a gangling man who was cheerful and friendly but seemed to blush profusely at anything. Needless to say, the resulting laughter had him beetroot coloured in no time.\n\nSomeone else called out, \"If we are going to have Adam and Eve naked, it will be like the Garden of Eden!\"\n\nMarijka piped up, \"You mean the Garden Centre of Eden!\" When the laughter died down, Luke exclaimed, \"Perfect, Marijka! I think you just nailed our publicity slogan!\"\n\nEventually a pretty eventful week came to an end, and I got home on Sunday evening tired out. (I'd taken to working Saturdays and Sundays -- busy days at Mow and Grow -- and having Monday and Tuesday off, an arrangement which suited me but Pastor Brown was not pleased about, although I said I'd arrange to be available special Sundays for church events.) I'd been getting home late, after a busy day, and pretty much grabbing something to eat, watering the plants in my own greenhouse, and falling into bed and asleep in seconds. Tonight I thought I'll open a bottle of wine and try to relax and wind down. So I sat down after dinner -- takeaway pizza bought on the way home, I'm afraid -- with an inexpensive but pleasant California Chardonnay, and allowed myself more or less for the first time to think over what had happened.\n\nIn just a few weeks' time, I would be naked in front of maybe five thousand people. My track record to date was a handful of girls in the sports changing rooms at High School! I'd never been naked in front of a man -- even my doctor was a woman.\n\nCome to think of it, I'd never had a naked man in front of me either. I mean, I knew about human biology from a purely academic point of view, but I'd never seen a real live penis, let alone an erection. I know, I thought, I'll Google it. So I went online and tried 'erection', and got nothing much except medical references and definitions. I tried a few other search terms, and after twenty minutes or so the only picture of a penis I'd found was a photo of Michelangelo's David. I leant back on the settee and closed my eyes to try to gain some inspiration; the next I knew I awoke in the dark, my laptop gone into hibernation. Nature's way of telling me to go to bed!\n\n<p align=\"center\">- 4 -</p>\n\nThe next few weeks seemed to be a blur. I used my days off collecting various goods donated for a grand garage sale in aid of the Christian orphanage we sponsored in Africa -- the actual sale would be a week before Nude Day, about three weeks away - and work at Jackson's was also pretty busy. I had frankly used this as an excuse not to think any more about Nude Day or about my own body. Luke had given me more responsibility for monitoring stock levels and re-ordering, and helping cash up at the end of the day; and with that came a welcome if modest increase in my salary. It also meant more frequent meetings with Luke at the Garden Centre and sometimes having lunch together in a quiet corner, me with my packed lunch brought to work and Luke usually with something from the caf\u00e9.",
        "Marijka of course noticed and one day when Luke was out visiting a supplier or something, and she joined me for lunch in the private area out the back where we had the shrubs not yet ready for sale. She had just got back from a couple of days off in Chicago, her uncle Dirk took her, and I heard all about the great time she had.\n\nThen suddenly she changed the subject.\n\n\"I reckon Luke is getting sweet on you! He's always hanging around like a bee around a honey pot!\"\n\n\"Don't be ridiculous,\" I responded, \"mostly we just talk about things to do with work.\"\n\n\"That wasn't the case on Wednesday when I was there too, he hardly spoke to me, and it was all about where you came from and what you liked doing! He'll ask you out soon, mark my words.\"\n\nI couldn't believe this for a minute. \"He wouldn't be interested in me! And anyway, he's still engaged to Keiron Sangster.\"\n\n\"I tell you, that won't happen! So does he figure in your thoughts now you are pleasuring yourself?\"\n\nI gasped at her directness, and of course my face coloured up at once. Damn my face for revealing my discomfort so plainly! I avoided answering the question directly. \"That reminds me, I tried to take a look at pictures of naked people on the internet...\" (my face got even redder) \"...just to, er, you know, research Nude Day and so on...\"\n\n\"Of course, just proper research!\" Marijka interjected, with a smirk.\n\n\"Anyway, I couldn't find anything! I thought the net was supposed to be full of that sort of stuff?\"\n\n\"Hmm, there must be something not right... Want me to come round this evening and take a look for you? Besides, when I was in Chicago I got a small present for you! I can bring it round.\"\n\n\"You shouldn't have -- it's not even my birthday! But thanks, it would be great if you can take a look. I'm not the world's most IT literate person!\" And so we fixed up for her to come round Sunday evening, which was also the end of her working week, for something to eat and a bottle of wine, and some computer consultancy.\n\nBy the time Sunday came around, I was more than ready for some chat, food and wine. Marijka arrived having gone home to shower and change, and I was just getting some salad prepared. Marijka opened the bottle she'd brought and we toasted the forthcoming National Nude Day.\n\n\"It's funny,\" I said, \"I've almost got used to the idea, but not to the practicalities of actually taking part! I've never been naked with anyone before, other than changing rooms.\"\n\n\"Well, do you want to practice now? I'm happy to strip off if you like.\"\n\n\"No! Er, I mean, I wouldn't want to with some steaks to grill, health and safety precautions and all that.\"\n\n\"OK! Later then?\" she said with an evil grin.\n\nSo over dinner we had more of a chat about Chicago -- I'd been just the once and really enjoyed it, although to be honest I was glad to get back to small town America after a couple of days there. Then Marijka told me all about her new boyfriend, Dan, who was a salesman of some sort of office equipment, I think; for some reason that surprised me, perhaps because Marijka seemed a free spirit and being a salesman seemed so corporate and formal. Eventually we were sitting back in our easy chairs with the last of the wine, the gossip more or less gossiped out, and Marijka said,\n\n\"So, perhaps I'd better take a look at your computer?\" I went and fetched the laptop. \"Show me what you did.\" I repeated how I'd started searching, and the same result came up. \"Ah, I have an idea. Let me have a look at your browser settings... ah yes, you have the adult filter set on! Let's unset that and try the search again... There!\"\n\nA whole load of dodgy sounding links popped onto the screen. \"Let me show you some of my favourites! These are free sites, lots are subscription only,\" said Marijka, and suddenly on screen there was video playing of a couple naked on a bed. The man had what looked to me like a colossal erection -- I hadn't realised they got that big! - and the woman grasped it and slid it into her mouth. I was agog, I had heard about oral sex and the girls at school were often chattering about blow jobs, but although I had a vague idea it meant putting a penis in your mouth, the actuality of it took me aback.\n\n\"She looks like she's enjoying that!\" said Marijka.\n\n\"It doesn't look like she's blowing much,\" I mused. Marijka laughed. \"Yea, I don't know why it's called a blow job and not a suck job!\" she said. I filed that one away, I'd thought you had to blow.\n\nThen the man pulled his cock out of her mouth, and pulled her onto the bed and opened her legs to return the compliment. I'd been looking at his cock, and had a sudden shock. \"Gosh, she's shaved her bush off!\"\n\nMarijka grinned. \"Most women do nowadays! I do. It feels better when you use your fingers, and the men like it better when they are eating pussy.\" I guessed she meant cunnilingus.\n\n\"But it seems weird, and possibly a bit dangerous!\"\n\n\"Tell me Eve, do you shave your armpits?\"\n\n\"Yes, of course!\"\n\n\"And your legs?\" I nodded. \"So why there and not your pussy?\" I didn't have a good answer. \"Give it a try, Eve, even if you don't have Luke licking away down there you'll enjoy your own pleasuring more! Just one tip -- if you do shave, cut it close with scissors first, it will shave much more easily.\"\n\nI focused on the screen again, the guy was working overtime with his tongue, and the girl was squirming and moaning loudly. It certainly seemed to be getting her going, although I wondered how much was for the benefit of the camera. Then she pushed him away, and he climbed on top of her and gave her a passionate kiss.\n\n\"That's got to taste of her own pussy!\" I said. \"Oh yea,\" said Marijka dreamily, \"I love that!\" Another unexpected fact to log for future consideration.\n\nThe man then used his hand to guide his cock into the woman's cunt. (I had to force myself to use these crude terms even mentally, to see if I could get more comfortable with them!) After a few slow strokes in and out, he moved faster and was soon hammering away. The girl moaned louder and louder, and her tits gyrated around. I was mesmerised. Then suddenly Marijka clicked out of that -- \"I'll show you a couple of other sites, you can look at this when you're alone and can join in!\" I blushed again, just what I'd been thinking.\n\nShe found a video of a girl masturbating with a large dildo. It looked like a white shiny penis. \"Have a look at that whilst I get you your present!\"\n\nI barely heard her, I was again fascinated, partly by the focus on what I presumed was her clitoris, and partly by the thought that this woman was prepared not only to do this in front of a cameraman (I knew it wasn't a fixed camera as the viewpoint kept changing), but also to post this on the internet where goodness knows how many people were looking at her private parts in close-up and at her in ecstatic pleasure. I have to say it made me get wetter and wetter.\n\n\"There you are, Eve!\" I had been so caught up in what was on screen that she startled me. There in her hand was a dildo just like the one on the screen! \"It vibrates too -- switch it on here, and turn the vibration up or down here. Do you want to give it a go now?\" There was a twinkle in her eye, and I realised it was a dare rather than an expectation. She didn't wait for an answer. \"Take it!\"\n\nI grasped it tentatively. After all, I'd never held a penis, let alone an erection, and this sure looked like that. \"Thanks Marijka, you shouldn't have...\" I made the polite response automatically, although inside I was glad she had -- I'd never have the nerve to get one myself.\n\n\"Let me show you one more site, these are erotic stories, I love browsing through these, especially the competition entries!\" I saw the stories were categorised into headings such as Erotic Couplings, Group Sex, Exhibitionist and Voyeur -- that last one caused a frisson given the Nude Day event looming ever closer, and I thought I'd better take a look some time. \"And there's a Nude Day Story Contest!\" I exclaimed. That I had to see.\n\nI took a deep breath. \"Thanks Marijka, I really appreciate you showing me all this. And thanks for the gift -- that was unexpected!\" I closed the laptop lid firmly, that would save till later. \"Can I offer you some more wine? Or a coffee perhaps?\"\n\n\"No thanks, actually I really ought to go, I said I'd catch up on a box set with Dirk later this evening!\" And so she grabbed her purse and car keys, and I thanked her profusely again, and we had a big hug. That actually felt pretty nice too, I wondered again about that.\n\nAfter she had gone, I decided to take the laptop into the bedroom. I took the dildo too. I'll just get ready for bed, I thought, putting another delaying tactic in place. I undressed -- my panties were damper than I recalled them ever being -- and went to the bathroom as usual.\n\nOn returning to the bedroom -- keeping up the sleeping nude approach -- I sat on the bed and opening the laptop, found the video we'd watched first. It resumed where we'd left off, with them going hammer and tongs. Then the scene changed, the man lay on his back, and the girl got on top. The sight of her lowering herself onto his cock and sinking down made me very wet again, and I really wanted to feel what she was feeling.\n\nThen I remembered the dildo, and pausing the video, I picked it up. I turned it on, it was set to low, and it made a pleasant hum and to my hand there was a nice gentle buzz. Imagine if this was the guy on the screen -- they are about the same size. I touched it to my pussy, and the jolt was like an electric shock, but a nice one. I got to my knees on the bed and held the dildo upright as though it was the man on the screen's cock, positioned myself above it and lowered myself down slowly, like the girl in the video. When it touched my pussy lips, the buzz of the vibrator delivered a much larger buzz to me, and I gasped and moaned. I very slowly eased myself further down and felt it start to head into my pussy. It felt epic. I felt a barrier and remembered my hymen; what the hell, I thought, it has to go sometime, and I pushed on. There was a sudden stab and then it eased. I paused, and the sweet sensations overwhelmed me again and I eased down some more. Then I started easing it out and pushing back again, going a bit deeper each time. The feeling was fantastic, and nothing outside my pussy existed -- not the video, my bedroom, any noise other than the slight slurp on my pussy muffling the buzz and the sounds of my own ragged breathing and little cries of pleasure. I felt everything getting more and more intense, and then suddenly there was nothing but these waves of pleasure, spasms of ecstacy that seemed to go on for ages and then eventually subside. I keeled over and slowly started to pull the vibrator out, but suddenly the pleasure built and built again like a chain reaction and I had another glorious pleasure wave. Much later, after I'd become familiar with the concept of the G-spot, I realised I'd probably overstimulated it on the way out.\n\nI lay back on the bed, chest heaving, and realised I'd just had my first orgasm -- indeed, my first two. If that's what they were like, I'd be doing that pretty often from now on! Eventually I gathered myself together, climbed off the bed and realised I'd made quite a mess. Not only was there a large wet patch, but a little blood from my hymen was on the duvet. I'll have to change that, I thought. Then something occurred to me: was I still a virgin? I wasn't any longer 'intact', but I hadn't been with a man -- unless you counted the one in the video, I thought with a smile. Perhaps it doesn't matter. Could a man give you more pleasure than that? I hoped one day to find out.\n\n<p align=\"center\">- 5 -</p>\n\nTime seemed to fly by, with work so busy as well. I'd taken to spending more time naked at home, trying to get so as it felt natural and to build my confidence before doing it in public. I was often too tired during the week, but on my days off, I confess I got to look forward to spending some time with my new toy. I learned what turned me on most, discovered I liked to pinch my nipples whilst working my clit, and also found that imagining myself being exposed in public turned me on. I wasn't sure if I would find Nude Day too embarrassing and intimidating to be able to take part, or if the opposite would be true and I'd get too obviously aroused by it. Either way, it still excited and terrified in equal measure.\n\nThen one Sunday Marijka and I were chatting over lunch, and she said,\n\n\"Listen, we are both off tomorrow, and the weather sounds like it's going to be hot, why not come over in the afternoon and join me in Dirk's pool? It's not very big but it's cool and wet on a hot day! Dirk will be at work, Dan can't join us 'cos he's working too, so it's just us.\" That sounded very tempting, I hadn't had a swim for -- oh, it must be at least a couple of years. Why not, I thought.\n\n\"OK, I'll bring a bottle and we can have a good chat -- if there's any Mow &amp; Grow gossip you've heard that I haven't!\"\n\n\"Great! Come in time for lunch, I'll get a salad together. Say about twelve thirty?\"\n\nNext morning, as I was starting to get ready, it suddenly occurred to me I hadn't even seen my swimsuit for a long, long time. It took me a while to find. Yes, I only had the one. It was a relatively modest one piece, plain dark blue. I had to admit it didn't look very glamorous; still, I didn't need to impress Marijka. I tried it on: it still fitted, but seemed a bit dated. I left it on and put a tee shirt and short denim skirt over the top, and threw a pair of briefs with a towel and some sunscreen into a bag. I'd be coming back with no bra, I realised -- the thought sent a small thrill through me!\n\nMarijka answered the door in a bright red bikini that seemed to cover about the same area as a couple of pocket tissues.\n\n\"Hi Eve!\" she beamed, and gave me a big hug and kiss on the cheek. \"It's a great day for it!\"\n\nShe led me through the house and onto the patio at the back. She was right, the pool wasn't very big, but big enough, and nicely secluded. There were a couple of loungers by the pool, and a table, two chairs and a sun umbrella on the patio, set for lunch. I handed over a chilled bottle of ros\u00e9 and she opened the screw cap.\n\n\"You can change in there,\" she said, gesturing.\n\n\"It's ok,\" I replied, \"I'm wearing my costume.\" And so saying, I shimmied out of my tee shirt and dropped the skirt.\n\n\"Very demure! We'll have to freshen your look, I can tell!\"\n\n\"OK,\" I laughed, \"but after lunch and after I've loosened up with some wine!\"\n\nMarijka brought the food from the kitchen, and we had a pleasant salad lunch, talking about the local radio adverts that had started to promote \"Jackson's Mow &amp; Grow -- the Garden Centre of Eden\" on National Nude Day: it had created quite a stir locally and Luke had done various interviews for radio and for a local TV news crew about the event. I helped Marijka clear away, and we moved to the poolside; then she suddenly said,\n\n\"Oh, I know what I was going to tell you, Jane in the landscaping section heard Luke and Keiron having a blazing row. Apparently she came to see him and they went off into a quiet corner and things got heated. Jane couldn't hear what it was about, but it ended with her shouting 'You can keep it!' over her shoulder as she stormed out! Now that sounds like a break-up to me, I reckon she'd just given him the ring back. Don't say I didn't predict it!\"\n\n\"No, it doesn't sound good. I wonder how Luke is taking it?\"\n\n\"I'll bet he's relieved. I think he knew they didn't fit, I think his heart is elsewhere, he just hasn't realised it yet.\"\n\n\"Oh really? Who has turned his head?\"\n\n\"You, you silly goose! I've seen how he looks at you when you aren't looking! You should make it clear to him that you are interested.\"\n\nI made a non-committal grunt. I couldn't see it myself. Anyway, how do I indicate I'm interested? I have to admit Luke is attractive, and I really enjoy his company.\n\n\"Anyway, let's swim!\"\n\nWe both jumped in the pool, with shrieks of shock -- the water wasn't that cold, but it was a whole lot colder than the poolside. We played and splashed for a while and then climbed out and settled on the loungers.\n\n\"The water was cool, wasn't it!\" Marijka exclaimed. I realised she was looking at my chest, and my nipples were quite prominent. I suddenly remembered that last time I wore this, one of the breast cups had come unstitched, so I'd taken them both out to repair and replace, but never did so. Before I could reply, she reached behind and undid her bikini top, throwing it on the ground.\n\n\"Come on Eve, get some sun on you!\"\n\nI was open mouthed. She seemed perfectly comfortable with bare breasts, and was looking at me quizzically.\n\n\"I, er, haven't got a top to take off,\" I said lamely.\n\n\"Hey, us Dutch women know how to take care of things like that! It's normal on any beach in Holland. Stand up!\"\n\nI did so uncertainly. She pulled the straps off my shoulders and over my arms and rolled the swimsuit down to my hips. I was topless outdoors for the first time in my life. I could feel my nipples hardening.\n\n\"Let's go all the way. An undress rehearsal for National Nude Day!\"\n\nBefore I could do more than make a half stifled gasp, let alone assent, she had pulled my swimsuit down to my ankles. Now I was naked outdoors for my very first time. She stood up and slid her bikini bottoms off.\n\n\"See? No thunderclap, the world is still turning!\"\n\nI could see that she was shaved down there, and it made her look very exposed and open -- the ultimate exhibitionist gesture. She saw me looking, and looked at my full bush.\n\n\"I think we should take care of that, don't you? But first, let's get some screen on -- I bet you've never had sun on a lot of that skin!\"\n\nWe both got our sunscreen out and began to lather it on our fronts, arms and legs. I couldn't help noticing that Marijka's boobs, a bit larger than mine, seemed nice and firm and bouncy as she covered them.\n\n\"We'll have to do each other's backs,\" she declared, \"turn around!\"\n\nI did so and she started covering my shoulders and back. It felt very nice, but then she started rubbing it over my bottom, and it felt more than nice, it felt erotic. I was getting turned on by a woman. Was I perhaps gay? No, I was sure I was attracted to men. What was happening?\n\nMarijka stopped. \"Now me!\" she said and turned round. I followed the same path, shoulders, then back, and then -- with a slight hesitation -- her very taut and pert bottom. It felt good, and a bit illicit. She sighed. \"You have a nice touch!\" she murmured. I finished and stopped, a bit uncertain as to what next.\n\n\"A bit of time on the sun beds now, I think. I'll get some more wine!\" and she sauntered off round the pool. I settled self-consciously on the sunbed on my front -- it felt a bit less exposed, and yet the exposure was still thrilling me. I watched Marijka returning with two plastic wine glasses: she was displaying her breasts and her pussy, at the same time proudly and carelessly, her groin glistening with sunscreen -- or was it arousal?\n\nShe passed me a glass and settled on the empty sunbed on her stomach, head turned towards me. \"Bottoms up!\" she said, and laughed. \"What if Luke could see us now!\"\n\nThat thought suddenly made me tingle, and even more when I realised with a start that he would see me naked in just over two weeks' time. Before I could dwell any further on that, Marijka said,\n\n\"Right, time to turn over. No hiding! Ready?\" And before I could say No, she commanded: \"Turn!\" -- and I found myself turning over with her. I tried hard not to cover boobs and crotch with my hands, and ended up sort of hovering them uncertainly over my tummy in a clear gesture of discomfort. Marijka reached over and grasped my nearest hand in hers, which at least stopped the vague waving.",
        "\"Don't be shy, you've nothing to be shy about. You are a real good looker.\"\n\n\"I don't believe that, but it's just that it's my first time and I haven't had time to get used to it.\"\n\n\"Let me give you some advice. Any time you are naked intentionally, be proud of your body. Any time you are accidentally naked, such as, oh I don't know, dropping your towel whilst changing on the beach, be calm and nonchalant about it and correct the situation with dignity. If any time you are unfortunate enough to be forced by a man to strip, act with reluctance because it is not your choice, but act as though it is no big deal -- men of that type get off on humiliation, so refuse to act humiliated. And certainly don't double up and frantically try to cover yourself with your hands -- by then anyone looking has already seen everything, you can't make them unsee it, so act casually.\n\n\"But I think you've got a closet exhibitionist inside. Use getting naked where you can for thrills and don't worry about it! Like on July 14th...\"\n\n\"I'll try!\" and I squeezed her hand.\n\n\"Now,\" she said, \"let's see what we can do to improve things down there... Let me get some tools!\" and off she went into the house, leaving me waiting in some trepidation. She was back quickly carrying a towel and scissors, a razor, and a bottle of baby oil and a hand mirror in a trash bin.\n\n\"Lie still! It will be easier if I do it first time. You realise this would cost you a bomb in a salon!\"\n\nI was definitely uncomfortable now. This was going to be a bit up close and personal.\n\n\"Right, first question -- do you want it all off or are we leaving a landing strip?\"\n\n\"Oh, er, I, um...\" I hadn't really yet considered shaving there at all, let alone in what style.\n\n\"It will be easier just to shave it all... You can easily let it grow back if you decide you want something to point the way!\"\n\n\"Oh, er, I, er, OK...\" I said decisively -- not.\n\n\"I'll start from the top and work down. Scissors first!\" And before I could say anything she bent over, gat a lock of my short-and-curlies between two fingers, snipped it off and dripped it in the bin. I made an involuntary small squeak and Marijka smirked and grasped another lock. She steadily worked down, getting closer and closer to my most intimate area. I found myself getting a little aroused.\n\n\"OK, time to open the legs for me!\" she said. I slowly parted my thighs, and it felt really quite erotic exposing myself like that. I was definitely getting moist. She continued working down along the edges of my labia. I could smell my arousal, and so surely could she. Finally she said, \"Stage one over!\" and brushed her fingers along my slit. I was sure that was intentional. It felt electric.\n\n\"Now the oil,\" she said, \"it helps avoid razor burn.\" She poured a small amount into her left palm and dipped her right fingers in it, and rubbed it into the stubble. Now I was sure she was deliberately touching my slit and it was getting hotter and wetter. She wiped her hands and picked up the razor. A disposable just like the one I used for my armpits and legs. She bent over so close I could feel her breath on my pussy, and started with small strokes, working from the top down towards my slit again. She used her other hand to press and hold the skin, and as that hand got closer and closer to my privatest part I got to hoping she would touch me there. I realised I had let out something between a sigh and a moan, and she smiled knowingly. My thighs were now as wide as I could get them; they'd done that all on their own, I hadn't told them to. A few careful small strokes below the opening and then to the sides. Her fingers were so close to my slit, and I'm sure I was leaking arousal juices. Then she said,\n\n\"I think that will do, but let me check for any slight stubble left.\" With that she ran her fingers all over my mons and along the edge of the lips, and then finished blatantly running them along the slit and into it, up to the clitoris and around it. I couldn't help a gasp of a combination of shock and pleasure. She laughed and stood up. \"Feel free to -- well, feel freely, if you need to!\"\n\nWell, although I would have been unable to resist if she had continued to fondle me, I wasn't quite ready to masturbate in front of someone else, so I tried to quell the surge of arousal. \"I think I'll just shower and have a swim,\" I said.\n\n\"Before that, don't you want to take a look?\" and she handed me the mirror. I positioned it and inspected the result. Now I'd looked at myself naked in a full length wall mirror a few times recently, but never inspected my crotch so directly. It looked like it belonged to somebody else, not me. It was glistening a little, and the inner lips were peeking out. I ran my fingers around the edge, feeling the strange smoothness that I wasn't used to. It also occurred to me that to be naked like this on Nude Day would be to expose myself absolutely fully. The thought gave me a little thrill and a shock of fear all at the same time.\n\n\"Wow,\" I said. \"Wow indeed!\" she replied. \"Like it?\"\n\n\"I think so, I need to get used to it!\"\n\nShe smiled. \"Don't forget you'll need to shave regularly to keep it smooth, just like your legs.\"\n\nI handed the mirror back and went for a shower and then into the pool. The shock of the coolness of the water after the heat of the sun -- and of my arousal! -- was sharp and refreshing. I climbed out again after a few minutes and resumed lying on the sun lounger.\n\nMarijka appeared with a couple of drinks she'd gone to fetch. As she was putting them down, there was a noise in the house and a deep voice called \"Hello?\" I sat up with a start, alarmed and conscious of my nudity.\n\n\"Out here by the pool,\" Marijka called. As she got up, she turned to me and murmured, \"It's Dan! Remember -- dignified, nonchalant, proud!\" and she trotted over to the door into the house as a man came through the other way.\n\n\"Hi Dan, I thought you were working!\" and she threw her arms around his neck and gave him a kiss.\n\n\"Hey, I'd have stopped by sooner if I knew you were skinny dipping! I'm on my way to a meeting at Mason Chandler's, but I don't need to be there until four, so as I was passing I thought I'd call in for a few minutes.\" He suddenly caught sight of me, desperately trying to act as if I was naked in front of men all the time. \"Oh, excuse me, I didn't know you had company,\" and he averted his eyes politely.\n\n\"It's Eve, my friend from work. Come and meet her!\" and she took him by the hand and led him over. I took a deep breath and stood up, held my hand out and shook his.\n\n\"Pleased to meet you, Dan.\"\n\n\"And you Eve, Marijka's told me a lot about you, so I hoped we'd meet. Didn't expect it to be like this though!\" He turned and pulled over a chair from the poolside table and sat down. I moved back to the sun lounger.\n\nI realised his resolve had cracked and he was now checking out my body. I quite enjoyed that, and realised I was checking him out too. A smart young man, neat hair, pleasant smile, wearing a business shirt and slacks, in which I couldn't quite detect if there was a bulge.\n\n\"I, er, Marijka wasn't expecting you...\" I said lamely.\n\n\"Well, I am at work technically, I'm on my way to meet a client, but I had to pass this way and had about ten minutes to spare, so thought I'd drop in. I knew Marijka had planned to have a lazy day by the pool, but I never realised she had company, or that it would be so... decorative!\"\n\nI blushed. But I was amazing myself at how cool I was, naked with a man I didn't know. At that point Marijka returned with a drink for Dan, and we spent five minutes chatting inconsequentially about Dan's work, as though we were all fully clothed, before Dan made his excuses and left for his meeting.\n\nAfter he'd gone, Marijka came and stood in front of me, hands on hips. \"I now declare you definitely ready for National Nude Day!\"\n\n<p align=\"center\">- 6 -</p>\n\nBefore I knew it, National Nude Day little more than a fortnight away. Then things started to go wrong.\n\nFirstly, my aging car gave up the ghost, and Jimmy at the workshop I used told me it would cost more to repair than it was worth. I needed a couple of thousand dollars for a new car which was money I didn't have. Fortunately, I was able to get a lift to and from work from either Francine, who it turned out lived a couple of blocks away, or Gill, another middle-aged lady who worked mainly on the tills, and by juggling these offers I could manage most days without being late arriving or leaving. Just once I had to walk, and as it was about a mile and a half I was glad not to do it too often -- it wasn't that it was a long way, I could manage that far easily enough, but by the end of the afternoon when I was walking home it was pretty warm for that, and not enough parts of the walk in shade.\n\nAt the time I was also helping to set up the Church Sale. I would spend evenings there helping to sort through the donated items in the Church storeroom ready for the sale on Saturday. I discovered that Abe was back from college, and no less leering and oversexed than before he went. Needless to say I got asked to go with him in his car to collect last minute donations on Thursday evening. As soon as we were alone in the car he resumed his campaign of trying to have sex with me.\n\n\"So, Eve, still a virgin?\"\n\n\"None of your business!\" I snapped. I'd obviously developed a bit more backbone since last time.\n\nHe smirked. \"Got a boyfriend?\"\n\n\"Yes thank you, so keep your distance!\"\n\nUnfortunately I wasn't good at lying. \"I'll take that as a no, then! Let me introduce you to sex -- you'll enjoy it, and wish you'd let me sooner!\"\n\n\"I'd rather have sex with a tramp off the streets than with you!\"\n\n\"I'm sure I can persuade you sooner rather than later,\" and he gave a sneering laugh. I wondered what he meant.\n\nThen on Friday after the garden centre closed, Luke had those working on Sunday for the Nude Day event in for what he called a \"Dressed Rehearsal\". We went through our places and tasks for the day, and rehearsed what to do about customers who got overwhelmed by the event, either morally or sexually. I was to be on the door, greeting visitors, explaining the day and the offers, and showing them where to disrobe if they wanted to, with Adam also helping, so we had cover for the mens' and ladies' changing rooms. These were areas just inside the door normally used for displaying sales goods, conveniently placed near the caf\u00e9 with its rest rooms. They had been converted with the aid of screens and equipped with seats and plastic crates to store the clothes, and there'd be a staff member in each to look after things there.\n\nSo I'd be the first naked woman they would see on arrival! The thought send a frisson of fear and excitement through me. I later found out that Marijka had suggested this to Luke -- the crafty fox! Marijka herself was to be in the car parking lot, directing people and warning them of nudity inside.\n\n\"So you won't be naked then?\" I asked in surprise. \"Wait and see!\" was all she would say.\n\nAfter the Dressed Rehearsal was done, Luke came up and took me by the arm and steered me into a quiet corner.\n\n\"Eve, er..\" he said, uncharacteristically tongue-tied. I thought he was going to ask me to do something for Nude Day which he thought I wouldn't like doing.\n\n\"Luke, it's ok, whatever it is you are about to ask me!\"\n\nHe seemed to pluck up his courage. \"Ok, then, I was going to say I've really enjoyed us working together on this project, and wondered if... er... perhaps we could go out to dinner to say thanks? Maybe on Wednesday? I'd really, um, like to get to know you better.\"\n\nI smiled and took his hand. \"Thank you Luke, I've really enjoyed it too, and I'd love to have dinner.\"\n\nLuke beamed and said, \"Great! I'll firm up the details nearer the time!\" and then before I knew what was happening, he leaned forward and gave me a brief kiss, and before I could react, spun around and rushed off.\n\nI felt my lips tingling and my heart beating. Could Luke really be interested in me like that? I'd been enjoying his company more and more, but I was trying not to fall for him as I was sure that would result in disappointment.\n\nThe next few days passed in a kind of dream. Luke and I had little contact at work, both of us busy with our separate tasks, but whenever we did meet, we both had big smiles on our faces. I felt more excited about dinner with him and what it might lead to than about Nude Day. I told Marijka of course, and she was triumphant. \"See, I told you he was keen on you!\"\n\nSaturday came round, and unusually I wasn't working at Mow &amp; Grow, having taken the day off to help out at the Church Sale. It went pretty well, and even better, I found four second hand gardening books and a casserole dish I thought I'd get myself. When I did the cashing up, I found we'd raised some $4,000, which was very good. I put the coins in a bag, and the notes in a bank envelope with a slip totalling the amount, and left it on Pastor Brown's desk with a yellow post-it note addressed to the Pastor and a comment to the effect of a good amount for the cause. I noticed Abe had watched me do this, and when I came out and went to pick up the rather heavy cardboard box with my purchases in, he came over and said, \"Are you still on foot? That's too heavy for you to carry home.\"\n\nI was a bit surprised at his apparent helpfulness. \"I'm sure I can manage, but thanks.\"\n\n\"No you can't, that's quite a weight. Give me fifteen minutes and I'll run you home.\"\n\nI felt I couldn't refuse, it was a big help after all. Whilst I was waiting, I saw Pastor Brown as he was passing and told him how much we'd raised and what I'd done with the money; he was of course very pleased and thanked me for my efforts and contribution.\n\nAfter a little while, Abe came out with one of his mates in tow, an equally oily and unpleasant young man called Gerry. They got in the front and I got in the back, with my box in the trunk.\n\nWe arrived at my house, and Gerry got the box and they both walked me to my door. I got my keys and opened it, and Gerry said, \"Where do you want me to put these?\" I led him to my lounge and said to put them by the bookcase there. Abe had followed us in. \"What a day! I don't know about you Gerry, but I could do with a drink!\" and they both looked at me. I felt trapped, and offered a beer, which they both accepted with alacrity. I went to the fridge in the kitchen, there were just two beers left, so I brought them through to the lounge. They were both lolled in armchairs, and took the beers, leaned towards each other and clinked the bottles, and took a swig.\n\n\"Nice place you have here!\" said Abe. He got up and wandered around the room as if inspecting it. He paused by a side table against the wall with my purse on it where I'd dropped it when we came in. \"What's this?\" he said. I saw there was the corner of an envelope sticking out the top. Abe grasped the corner and pulled the envelope out. I saw with horror it was the bank envelope containing the cash which I'd left on Pastor Brown's desk.\n\nAbe was smirking openly. \"This must be just the right amount of money to get you that used car you need,\" he said triumphantly. \"I reckon my Pa will want to call the police about this. What do you think, Gerry?\"\n\n\"For sure, Abe,\" he said with a grin. I realised why Gerry was with us and that this was a set-up. I could guess what would happen next.\n\n\"Of course, we could just quietly return this and keep quiet,\" Abe said musingly, \"if we had a reason to... You know what I want, if you give it to me I'll be very discreet!\" I remained silent, partly out of shock that this was happening, and partly because I couldn't think how to get out of this. I could deny it all and point the finger at Abe, but Pastor Brown was hardly likely to believe me over his doted son. I tried to play for time.\n\n\"I'll have to think this through, give me a couple of days and I'll give you an answer on Monday,\" I said.\n\n\"Oh no, I don't give you time to weasel out of this. I need an answer now. Before Pa misses the money.\"\n\n\"OK,\" I said, \"you leave me no choice. It will have to be Thursday, that's my day off this coming week, and not here. You sort out where.\" I couldn't believe I was saying this, and hoped it bought me enough time to figure out how to get out of this without being branded a thief.\n\n\"See, that wasn't so hard! I'll give this back to my Pa and tell him you left it with me to give him.\"\n\n\"I think I'd like you both to leave now.\"\n\n\"OK, we were just going, weren't we Gerry?\"\n\nThey got up slowly and walked to the door. \"I'll call you and tell you where and when. Make sure you are hot and ready!\"\n\nAs I was shutting the door behind them, I heard Abe say as they were opening the car doors,\n\n\"Thanks buddy, I owe you one.\"\n\nI shut the door and burst into tears. What was I to do? I sobbed as I tried to think. I knew I'd been set up but there was no way to prove it. I couldn't see a way ahead without bedding Abe, which would be nothing short of rape. At least with violent rape you don't have a few days to anticipate it.\n\nWhen I had almost stopped sobbing I called Marijka. Perhaps she would have an idea.\n\nShe answered almost immediately. \"Hey Eve, how are you doing? Church sale go well?\"\n\n\"The sale went fine, but afterwards...\" and starting to recount the events I broke down again. Marijka told me to stay put and she'd be round in five minutes. She was as good as her word.\n\nI opened the door to her and flung my arms round her neck and started crying again. Marijka bundled me to the sofa, sat me down and slowly got the story out of me. \"Let me get you some tea, and I'll think what to do,\" she said. I went with her into the kitchen and sat on a stool, and pointed out where to find the mugs and teabags.\n\n\"Right,\" she said when she had finished making the tea, \"I've got a couple of ideas, let me work on them and see if they might work. Don't worry, I won't let this happen. We'll talk again very soon.\"\n\nWe talked some more and then Marijka got up to go. I hugged her again on the doorstep and thanked her profusely for her help.\n\n\"Hey, what are friends for? Now you get some sleep and remember, this will work out, I'm sure.\"\n\nI was feeling a lot better, but still in the absence of a plan, I couldn't sleep for the worry.\n\nNext day, I went into work a physical wreck. I had bags under my eyes, and they were still a bit red from the crying I'd done from time to time during the night. When I got there, Luke asked me to help him count some of the low stock items in the garden supplies shop. When we got there, he said with a big grin,\n\n\"I've booked us a table at Fred's, can I pick you up at seven?\"\n\nWith what had happened, I'd forgotten about dinner with Luke. How could I go out on what I hoped would be a date, and then have sex with someone else the next day?\n\n\"I'm sorry, Luke, I can't go out with you, I...\" and bursting into tears, I rushed off and hid in the Ladies' rest room. My world was falling apart. I was branded a thief, blackmailed into having sex with an odious oick, and my hoped-for relationship with Luke was over before it started. I couldn't stay. I put on some dark glasses from my purse, came out and bumped into Marijka.\n\n\"Marijka, can you do me a favour? I'm not feeling well, I'm going home, can you tell Luke?\" I turned and hurried off, hearing her calling behind me but not stopping.\n\nIt was a long walk home but it helped me stop crying. When I got home, I just curled up on the settee, put a golden oldies radio station on loud enough to block out the noises inside my own head, and eventually fell asleep despite the radio, no doubt since I'd slept so little the previous night.\n\nSome time in the early afternoon, I woke up and realised that as well as the radio blaring, the phone was ringing. It was Marijka.",
        "\"Eve, are you ok? Are you ill?\"\n\n\"I'm a bit better, thanks. It was just that, well, with everything, and I couldn't go out with Luke because of it, it all got on top of me.\"\n\n\"Well, Eve, you are not to worry, I've sorted out a plan, we'll get you out of this. I'll be round this evening to explain it all. It's going to work out Eve, no way we'll let you do this!\"\n\nI allowed myself just a smidgeon of hope.\n\nThen a couple of hours later the phone rang again, and it was Abe.\n\n\"Looking forward to our little tryst?\" he said smarmily.\n\n\"Just tell me where and what time, and spare me the small talk.\"\n\n\"Now then, don't get all uppity, you need to relax and enjoy it! I'll pick you up at seven o'clock Thursday evening.\"\n\n\"And where are we going?\"\n\n\"I've booked a room at the Holiday Inn Express.\"\n\n\"No expense spared then, you really know how to make a girl feel good.\"\n\nHe laughed. \"You'll feel good, I promise,\" he said. I hung up.\n\nAround seven thirty, the doorbell rang, and when I opened the door to my surprise Marijka was there with Dan and Luke. And before I could manage more than a feeble hello, Luke stepped forward and swept me into his arms for a hug.\n\n\"Eve, why didn't you tell me what was going on? You shouldn't have to deal with this on your own! Dammit, I would make sure this ridiculous blackmail never took place!\"\n\nMarijka stepped forward and took over. \"Eve, let's all go and sit down round a table, and we'll explain to you what we are going to do.\"\n\nShe explained that she had gone to Luke to pass on my message, and found him distraught with worry. She gave him the full background, and they discussed what to do, and they came up with the plan, which was where Dan came in. It seems Dan's company was a supplier to Mow &amp; Grow, and he and Luke knew each other well.\n\n\"Now Dan sells security equipment -- CCTV and other monitoring gear. So what we are going to do is get one of Dan's miniature microphones and transmitter hidden in your clothing. Dan will be stationed outside, and you need to have a conversation with creepy Abe that spills the beans. Make sure he reacts to it as we know he will, and make it completely clear you don't want to have sex with him, that he is coercing you because you can't prove your innocence. Don't worry about this for now, I'll rehearse it all with you. Dan will record it all, and once we have what we need, we'll come in. Do you know where he's meeting you?\"\n\n\"The Holiday Inn Express, he's picking me up at seven.\"\n\nDan brightened up, \"That's good, I know the manager there, Sandra Fielding, I'll explain the situation to her and I'm sure she'll help us interrupt his seduction attempt!\"\n\n\"OK then,\" Marijka continued, \"we'll come round here at say five thirty to set up the equipment in your clothing, and to rehearse what's going to happen. Is that OK with you two?\" She looked at Luke and Dan. They both agreed immediately, and Luke added, \"Whatever it takes to take this problem away!\"\n\nThey got up to go and I saw them to the door. Luke paused at the door, and said quietly, \"I'll put the dinner booking back to next week, when you are over all this. We'll celebrate liberating you from this nasty piece of work, and celebrate a successful Nude Day event as well! Now don't worry any more, we'll take care of this.\" And with that he cupped my face in his hands and gave me a gentle kiss. I broke it after a few seconds and hugged him again. The tears were flowing again. \"Thanks Luke for believing in me and helping me.\" I watched him go with renewed hope.\n\n<p align=\"center\">- 7 -</p>\n\nOn Thursday, I spent the day at work, but I'm not sure I contributed much to the business. I was as nervous as a kitten, kept going over what was coming and the briefing and rehearsal I'd had with Marijka. I kept forgetting things, dropping things and was generally a hindrance to everybody else.\n\nEventually, a little after four in the afternoon, Marijka came to find me.\n\n\"Come on, Luke says go home now and get ready. I'm running you home.\"\n\nThat was a relief, I wanted to get going with this, it was really hanging over me like the sword of Damocles.\n\nShe took me home and we had a discussion about what I should wear.\n\n\"I think you should be clean, tidy but not glamorous. Ordinary everyday clothes. You need to wear something loose on top, your wire will be attached to your bra.\"\n\nWe looked through my wardrobe (which, let's face it, doesn't take long) and settled on jeans with a button-up blouse. Although it was a warm day, I agreed to put a tee shirt under the blouse. It meant that there was no way the bug would show through, and if he tried to undress me there'd be plenty of time for the cavalry to arrive before he could expose the bug.\n\nThen we had a bit of a wait for the men to arrive. Marijka insisted I made some tea and I got out some bought cakes -- I hadn't felt like baking in a while. I wasn't hungry, but Marijka tucked in. She was very chatty about all sorts of things, particularly gossip from work -- was Adam keen on one of the girls from the caf\u00e9? -- and I realised she was keeping me occupied so I didn't think about the ordeal to come.\n\nSoon enough the men arrived in quick succession. Dan had some news: he'd called Sandra and explained the situation, and she offered to set aside a room to put the bug in, so I wouldn't need to wear one. He'd already been and set it all up. He got his phone out.\n\n\"Let me take a picture of you to send to her, Abe might not check in under his real name, and we want to ensure he's in the right room. You'll just need to make sure it's obvious you are with him when he's registering.\"\n\nSo I posed and he texted the image to Sandra.\n\n\"Now, this room is one of those with a door into the adjacent room. Luke and I, and I guess Sandra as well, will be in there, I'll have the receiver and the recording equipment, I'll be using headphones and we'll need to keep quiet so he doesn't suspect anything, but my guess is he'll be so focused on what he thinks is an easy lay that he won't be suspicious. We'll head off shortly to be in position.\"\n\n\"I'll stay in my car across the street to let them know when he's made the pickup,\" Marijka chimed in. \"So, anyone got any questions? Everyone clear on what is happening?\" Nods and assents all round.\n\n\"OK then,\" said Luke, \"I guess Dan and I can set off now.\"\n\nI saw them to the door, and Marijka said she'd stay a bit longer.\n\n\"Have you got anything to drink? It might help settle your nerves.\"\n\nI realised I hadn't. I'd been so preoccupied that I hadn't done a proper weekly shop for a while. Then I remembered I had some Scotch in a cupboard kept for visitors -- I don't really like the stuff myself -- and Marijka found it and poured me a tot.\n\n\"I know you don't like it, but drink it. There's not enough there to impair your judgement, and you'll feel better.\"\n\nI did as she said, shuddering as the pungent liquid burned its way down. She was right though, I felt a little steadier.\n\nWith about twenty minutes to go, Marijka left after giving me a hug and telling me it would all be OK. I really hoped so, but I was pretty much on edge despite the whisky. I saw her get into her car and reverse thirty or forty yards down the road, and settle down to wait. I went inside and sat by the front window. She hadn't left any too soon, Abe pulled up about five minutes later. Obviously he was keen.\n\nI took my time answering the doorbell.\n\n\"You're early,\" I said curtly. He gave one of his oily smirks.\n\n\"Don't want to keep a lovely lady waiting when she's in for a treat,\" he said. I snorted derisively. He moved towards me as if to kiss me.\n\n\"Oh no,\" I said, \"you want sex, that's all you'll get!\"\n\n\"We'll see,\" he replied undaunted, \"once I get you going it will all be different!\"\n\n\"Come on then, let's get this over with.\"\n\nHe stepped back onto the porch and made a grand sweeping gesture. \"This way!\"\n\nHe took my elbow and steered me to his car, and started to drive away. As we passed Marijka's car, I saw she was on the phone, doubtless to the men.\n\nIt was almost fifteen minutes to the Holiday Inn Express, the traffic was quite busy. Abe parked up and we walked into reception. There was a lady standing in the background, and as we approached, she stepped forward and murmured something to the receptionist, who got up and went into the back room. She greeted us and said, \"How can I help you?\" I saw she was wearing a name badge, this was Sandra. She was well groomed with full make-up, shoulder length wavy straw blonde hair, and looked very professional. She certainly made me feel confident. I caught her eye and although there was nothing said and no gesture, it was clear she knew who I was.\n\n\"I have a reservation under the name of Wayne Evans,\" Abe said. It was all I could do not to laugh out loud.\n\n\"Yes, Mr. Evans,\" she said briskly, \"One night, yes? Please fill in the registration. How will you be settling the account?\"\n\n\"Cash,\" said Abe, pulling out his wallet.\n\nThe formalities completed, Sandra handed over the little folder with the keycard.\n\n\"Thank you sir, you are in room 213, it's on the second floor. The elevator is just in front of us here. Enjoy your stay.\"\n\nWe took the elevator in silence. Abe opened the door to 213 and ushered me in. I stood by the door and he went over and sat on the bed. He patted the bed beside him. I shook my head.\n\n\"I don't think I can do this.\"\n\n\"Come on honey, I don't want to have to tell my father I found four thousand dollars of the church's money in your home, do I? You know he has a zero tolerance when it comes to crimes against the church. He'll call the police and they will charge you for sure, the evidence is compelling.\"\n\n\"And I will tell them you planted the money to blackmail me.\"\n\n\"Really? Perhaps I did, perhaps I didn't. But you can't prove that, it will just look like an attempt to wriggle out of the charge.\"\n\n\"But you did plant it. I didn't bring it home, so it must have been you. Or your mate Gerry.\"\n\n\"But I didn't see Gerry put it there. I'm sure Gerry didn't see me put it there. We both saw me find it.\"\n\n\"OK, so what guarantee do I have that if I have sex with you, that's an end to it?\"\n\n\"I'll be happy with one night with you. No doubt after that you'll want more, but I doubt I will!\" He smirked unpleasantly.\n\n\"So just to make it clear: if I have sex with you, just this once, you won't tell your father you found the money you planted?\"\n\n\"That's about the level of it. So are you going to or not?\"\n\n\"You are blackmailing me into having sex by means of a false accusation. How can you live with that?\"\n\n\"I'm just encouraging you to indulge in a little fun. And you can't prove it, and I can prove the money was found in your house. So it's your word against mine, and I have a witness.\" He got up and came towards me. I backed up to the door as he stopped in front of me.\n\n\"OK,\" I said, trying my best to sound compliant, \"I can see I've got no choice. I'll do it, but for my own satisfaction, was it you or Gerry that planted the money?\"\n\n\"Right decision! Well, since you told me the money was on my father's desk, it was easy to pick it up before I came out to take you home.\" He reached forward and started to undo the buttons on my blouse. \"And then it was easy to get you to leave the room whilst I dropped it into the top of your purse. I told Gerry to look away so he could honestly say he didn't see anything.\" He reached the bottom of the buttons, and started to pull the blouse down off my arms.\n\nThen all hell broke loose.\n\nI heard the click in the door behind me and it burst open. Of course, I was stupidly positioned right behind it, so I was catapulted into Abe, and he fell backwards with me on top. Somehow in all of this my face hit his head or arm or something, and all I was conscious of for a minute was a blinding pain in my nose. There was a lot of noise and shouting, somebody pulled me off but I had both hands holding my nose and didn't see what was going on. There was scuffling and Dan shouted, \"Luke! Leave him, that's enough!\"\n\nI realised it must be Marijka holding me, as she suddenly said, \"Eve, are you alright? Where are you hurt?\" and tried to pull my hands away from my face.\n\n\"Oh, my nose!\" I moaned. Marijka called out, \"Sandra, I need something for the bleeding!\" I realised my nose was gushing blood. Sandra was there in a moment with a hand towel from the bathroom. \"Use this,\" she said. \"We get a lot worse than bloodstains in a hotel!\"\n\nThings quietened down. Sandra it turned out had first aid training as part of her job, and examined me gently. \"I don't think it's broken,\" she said, \"keep the towel there until the bleeding stops. Your nose will be sore for a day or two but I don't think there's anything worse.\"\n\nI dragged my attention away from the throbbing in my nose to where Abe was still on the floor on his back with Luke sitting on his chest. I noted with satisfaction that Abe seemed to be sporting the beginnings of a shiner.\n\nMarijka took charge. \"Right Abe, it's like this. We have this room bugged, and a recording of you admitting to planting the money and blackmailing Eve to have sex with you. I don't know about the States, but in the Netherlands procuring sex by coercion is a criminal offence akin to rape. I guess the police here will form their own view on what laws have been broken.\"\n\n\"Hell, no, wait, I didn't mean to harm Eve, I wasn't going to rape her, just have some fun. Please don't involve the police! I'll do anything you want...\"\n\n\"Well, Eve, what do you think we should do with him?\"\n\nI tried to think, although my nose was throbbing and I was I think a little bit in shock. I didn't want to land him with a jail term, he was an unpleasantly smarmy sort but he wouldn't physically hurt anyone. I think he was just a bit rebellious at his strict upbringing.\n\n\"Abe, do you solemnly promise, on the bible if necessary, never to attempt to force a girl into sex ever again?\"\n\n\"Sure, anything, if you don't tell the police.\"\n\n\"Do you have any idea what misery you've caused me? Tears and sleepless nights? Well, we'll sit on this recording, but if you ever cross the line again, I'll make a formal complaint and make sure this gets to the police. I'll leave it to you to decide what if anything you tell your father, and I'll decide later if I tell him anything. Let him up, Luke!\"\n\nLuke reluctantly stood up and stepped away from Abe, who scrambled to his feet.\n\n\"Let's go home,\" I said. I turned to go out of the room. As I did so, Abe called out, \"Eve?\" I turned. \"I... I'm sorry, I didn't mean for you to get hurt, I thought you'd enjoy having sex, it's not as if you have a boyfriend after all.\"\n\n\"Oh, but I do,\" I said, and held out a hand to Luke, who jumped forward and took it. That might have been a lovely moment had I not still got the towel held to my nose with the other hand. The bleeding had all but stopped.\n\nAfter profuse thanks all round -- I later arranged for flowers to be sent to Sandra, and gave Marijka a bottle of good Scotch to give to Dan -- I let Marijka take me home. Luke wanted to but I said no, I wanted to get over this evening, and anyway my nose was too sore for kissing. Luke told me firmly to take a couple of days off, so my first day back would be the big day...\n\n<p align=\"center\">- 8 -</p>\n\nNational Nude Day dawned bright and sunny, it promised to be perfect weather -- plenty of blue sky, warm but not too hot, with a light breeze. To get myself in the mood, I decided not to dress at all for breakfast, and so brazenly went into the kitchen after showering and sat at the table for my muesli in my birthday suit. To my surprise I'd actually slept pretty well -- the nose was no longer sore, I felt I'd put the trauma behind me, I'd realised I had good friends to turn to in time of trouble, and I was confident there was no longer a sword of Damocles suspended over me and I could focus on the day ahead.\n\nI got ready as usual, except without clothes, and at the last minute I slipped my Mow &amp; Grow shirt, cap and shorts on with no underwear. It felt very illicit. Francine arrived to pick me up and with a cheery greeting I got into her car.\n\n\"So, Eve, ya lookin' forward to git nekkid?\" she said with an exaggerated accent and a wink.\n\n\"Yes, to my surprise, I think I am. And you?\"\n\n\"Hell, I ain't bothered one way or the other. I know I ain't no oil paintin', but you take me as you find me. Some men like 'em big you know!\" and she gave one of her hearty laughs. Francine always seemed to be able to lift my mood.\n\nWe pulled into the staff car park at Mow &amp; Grow, and went in the rear entrance and through to the front. The only person we saw was Debbie from the caf\u00e9, who waved and called out \"Happy Nude Day!\" -- she was apparently naked but had on her caf\u00e9 apron. \"Hey, that's cheatin'!\" Francine called back with a grin.\n\nWe went into the ladies staff room and I gripped the bottom of my shirt. Here goes, I thought, but I'm ready for this. And with a deep breath, I pulled it over my head and undid and dropped my shorts. I popped them into my locker and turned to see Francine magnificently naked, big but firmer and less flabby than I'd expected. \"Here goes!\" she said and we high fived.\n\nWe went out through the door, and bumped into Luke. He was already nude.\n\n\"Hey, Luke,\" said Francine, \"very nice! You should do this more often!\" and she gave another hearty dirty laugh. Luke looked a bit discomfited. I looked him over, he was the first real live man I'd seen naked, and I liked what I saw. Fit, well muscled without looking as though he spent all his time in the gym, and a good looking cock, uncircumcised. I suddenly realised he was looking at me too, and with an expression I couldn't quite fathom. He suddenly said, \"Great, you ladies look great, er, I'll see you later,\" and rushed off.\n\n\"I don't think he's used to seeing nekkid women!\" laughed Francine. She went off to the cash desks and I went to the front entrance. Adam was already there, and I greeted him. We looked each other over, and he blushed -- I was proud of myself that I didn't. \"All set?\" I said, and he replied, \"I guess so!\"\n\nI looked out the door: Marijka was in the car park, dressed in her normal Mow &amp; Grow shirt and shorts, talking to a couple of customers who had already parked and were waiting for opening. I felt rather disappointed and, if I'm honest, a bit let down that she wasn't joining in the Nude Day event.\n\nSoon opening time came. The first customers were a couple of men in their forties, and as they approached I felt my heart pounding. I took a deep breath.\n\n\"Hello, welcome to the Garden Centre of Eden! Here's how today works...\" and I went through the rehearsed spiel. They looked shocked, and declined to strip. I got a trolley for them and they set off to go round the displays.\n\nThere were others behind them. There was quite an early rush in fact. The second ones through were a married couple, who agreed to strip for the extra discount. I directed the guy and led the lady into the changing area and handed her over to another of my colleagues, Gillian, who was a redhead, and who had agreed to work the changing rooms so as to avoid too much sun.\n\nAnd so the day began. We were certainly a whole lot busier than usual, and I wasn't keeping count but I reckoned probably more were stripping than not. I noticed the men generally gawped at seeing me naked when they came through the door -- despite all the notices and the publicity, I think many of them believed it was in some way a hoax, that they'd find us in body suits or with fig leaves or something. I surprised myself yet again by finding the inspections thrilling, not creepy or sexist.\n\nIt was getting on towards midday, and I was starting to look forward to being relieved from my stint on the door to have a break and get some lunch, when Luke came over with a TV cameraman and a lady impeccably dressed, fully made up, whom I recognised as a reporter with local TV news.",
        "\"Eve, this is Lucy Spellman from KYTV, she's doing a piece on our Nude Day opening. Will you do an interview? I'll cover on the door for a moment.\"\n\nWow, that was unexpected. I stammered my acceptance, and was led back to the bedding plants display for a suitable background. The cameraman set the camera on a tripod.\n\n\"OK Eve, now I'm going to ask you some questions about the event and how you feel about it. Don't worry about this going out on TV, they'll pixellate the naughty bits otherwise it would be too racy for a news broadcast! OK, are you ready?\" I nodded.\n\n\"Ready Jim? OK, three, two one.... I'm talking to Eve Laidler, who has the job of meeting customers at the entrance and helping them get over the shock of a nude garden centre. Eve, what did you think when they asked you to do this?\"\n\n\"Well, initially I couldn't believe it was for real, I thought it must be illegal or it would put people off coming, but when I realised it was going ahead, I have to admit it took a while to talk myself into it!\"\n\n\"And how are you finding it now it is actually happening?\"\n\n\"I'm really enjoying it! I've found that being nude feels natural, and seeing other people naked just strips pretence away, you have to be yourself, there's nowhere to hide. Why don't you try it? Shouldn't a reporter get into the feel of what she is investigating?\"\n\nI saw the cameraman starting to laugh and having to take his hands off the camera to avoid shaking it. Lucy seemed a bit fazed by the question. Then the cameraman said, \"Yes Lucy, she's right, you should strip -- it'll make you a news legend!\"\n\nThere was a pause of indecision. Then she said,\n\n\"Jim, camera on me... Well Eve, I guess you are right. Let's see what this is all about!\" she paused, and then said to Jim, \"But I expect you to as well!\" Jim squirmed a bit but clearly the prospect of seeing Lucy naked got the better of him, and he agreed. I told them where to go to disrobe and agreed to wait by the camera.\n\nIn a few minutes they came back. It looked as though Lucy had taken a moment to blend the makeup down onto her chest, otherwise there would have been an obvious boundary between made-up and not made-up areas. She looked pretty statuesque. Jim, on the other hand, was a bit flabby and -- well, shrivelled.\n\n\"Right,\" said Lucy, \"Camera on me first... So I've decided to try the customer experience here at the Nude Day event at Jackson's Mow &amp; Grow. I'm talking to staff member Eve Laidler. OK Jim, camera on Eve again... Now, Eve, how are people reacting when they encounter you naked?\"\n\n\"I think it's curiosity as much as anything, most people don't encounter other folks nude, and they are agog to see how they look and behave naked in a social situation.\"\n\n\"Have you had anyone behave improperly?\"\n\n\"No, it's not as if it's a sexual situation, it's just normal everyday life where folks happen not to have any clothes!\"\n\n\"Thank you Eve,\" Lucy said, and nodded to Jim. That clearly was that for the interview. \"OK, now we need to get a few vox pop.\" She saw me looking a bit blank. \"Street interviews, talk to some of your customers.\" Ah.\n\nJust then a small group passed and saw and recognised Lucy. Someone produced a phone and took some snaps. Lucy sighed.\n\n\"That was my reservation about stripping here. I'm not a prude, but now those will be all over the internet, on celebrity nude websites, and so on. I've been looking for a way to cement a reputation for fearless reporting, and when you suggested I strip off, I thought this might be a way to do it. I'll certainly be remembered for it!\"\n\n\"I think you are brave to do it as it were professionally. And I think people will admire your body as well as your composure,\" I said.\n\n\"Thanks Eve. Maybe I'll see you here again next year!\"\n\nShe went off in search of customers to interview, and I went back to the front entrance, where Annie had taken over and told me to take my lunch break.\n\nAfter lunch things got if anything even busier. The place was crowded with increasing proportions of naked customers, and I was kept too busy to take in the weirdness of the situation. Then mid-afternoon, who should approach the main entrance but Pastor Brown and Abe.\n\nPastor Brown came in with a face like thunder. He was trying not to look at me. Abe wasn't having the same problem, his eyes lit up and he openly leered at my breasts and pussy.\n\n\"Eve, I'm shocked and ashamed for you,\" said the Pastor. \"I didn't think you'd indulge in such indecent and depraved activities!\"\n\nI seemed to have found some backbone and some self-confidence. \"I'm sorry you should think that, Pastor, but I don't see anything indecent or depraved. Simple nudity is neither of those.\"\n\n\"It's an incitement to depravity, a temptation to indecent behaviour! Please stop it at once!\"\n\n\"Pastor, before the apple, God walked in the garden with Adam and Eve whilst they were naked. Surely that must mean God condoned this behaviour. Take a look around here, you'll see plenty of nudity, but nobody is acting depraved. Anyway, have you come to get something here, or just to be a voyeur?\" I shocked myself at my outspokenness.\n\nPastor Brown seemed shocked as well; at least, he was put out of his stride. \"Ah, well, yes, I was going to pick up some more bedding plants, someone managed to reverse onto one of the flower beds on Saturday, so I need to replace them.\" Pastor Brown was very proud of his neat flower beds outside the church.\n\n\"Certainly,\" I said sweetly, \"the bedding plants are down there and through those doors to the right. Please come back and let me know if you find anyone acting indecently or depraved and we'll ask them to leave.\" He glared at me and hurrumphed, but moved off.\n\n\"Abe,\" I said, \"you can put your tongue away and close your mouth. Now you know what you will never have!\" He made a contemptuous noise and an angry gesture and turned away. \"What did she mean, you'll never have?\" I heard the Pastor saying as they moved away. I smiled to myself as I wondered how Abe would answer that.\n\nI wondered if I'd burned my boats at the Church. Strangely, it didn't feel bad. There are other churches after all.\n\nEventually we reached closing time, and everybody gathered in the main queuing area at checkout for an excited celebration of what we'd done. Luke appeared with a crate of bubbly and a couple of boxes of plastic wine glasses, and this was shared around. He clapped his hands and shouted,\n\n\"Listen up everybody! I just want to say a huge well done and thank you for your efforts today, and to say how really good you all look!\" A laugh and a sudden babble of comments. Luke held up his hand and we all quietened down. \"This has been more successful than my wildest dreams, and it's down to all of you! Besides the overtime, I'll be arranging a bonus for each of you who have helped, I won't say how much right now until we've sorted out the revenues. It's been a big boost to takings, and we are now the talk of the district thanks to all the publicity. Keep an eye on KYTV news tonight, I'm sure we'll be on! Enjoy the rest of the day and finish off the wine before you go!\"\n\nThere was a big cheer and general applause. There was no doubt everyone was buzzing.\n\nI had to admit that, although I wasn't aroused, I'd really enjoyed being naked in front of so many people. The nearest I can explain it is when you've had that first few sips of wine, and you get a slight pleasant buzz, but you clearly aren't yet tipsy; that's how it felt, a pleasant buzz rather than actual arousal.\n\nI looked around and saw Marijka through the throng. She came towards me, with people keeping stopping her and exchanging words as she came, so I went to meet her halfway. As I got close I realised why so many folks were talking to her: what I had taken as her work clothes was in fact body paint. She'd had a very realistic shirt and shorts painted onto her naked skin, so she was in fact 'naked in plain sight' out in the parking lot.\n\n\"Hey Marijka, you crafty old soul, you got pole position to shock all incoming customers!\"\n\n\"Yes, well, it was thought we couldn't be obviously naked out there in sight of the road, but as you can see, you can't tell until you are close, and even then you'll be amazed how many people still didn't realise!\n\n\"Anyway, I've got some great news for you! I don't know if you were aware, but it was so busy out there that some of the staff who were clothed in the private areas got roped in to help out in the parking lot. One of them brought a shopping cart with Pastor Brown's plants, and I helped them put these in the car. Incidentally, Pastor Brown was one of those who didn't realise I was naked, but I could tell Abe did. He couldn't take his eyes off my fanny! But the best bit was when I opened the door to let Abe get into the driver's seat -- it was Abe's car I presume -- and there was a post-it note on the floor down the side of the chair. I picked it up, and it was the note you'd left with the money! It couldn't have got there unless Abe had taken it. So I said, I think we know what this is Abe, he nodded, I said you shouldn't have dropped this, it's the final proof of attempting to coerce sex by blackmail, he paled. I said we'll keep this with the other evidence. Pastor Brown said, what's going on Abraham, and I left them to it. Although that's a conversation I'd love to have heard!\"\n\n\"Oh, thank you so much!\" I felt the tears welling up again, and flung my arms around Marijka for a hug. It was only then I remembered we were both still naked! I went to release her but she held the hug a moment longer, whispering \"Time to reel in Luke -- he's hardly taken his eyes off you!\"\n\nI still couldn't really believe that was true. I had come to regard Luke as a real friend but he was my boss after all. Although he was pretty attractive, especially naked! And he had been trying to arrange a date.\n\nAnyway, we mingled and chatted to each other, until eventually people were starting to leave. I caught Francine's eye.\n\n\"So Francine, did Ethan stop by?\"\n\n\"He sure did, he was tickled pink that I was there on the checkout without a stitch!\"\n\n\"Did he strip as well?\"\n\n\"No, and I ain't gonna let him forget it! The coward!\"\n\n\"Absolutely! Anyway, I still need to help Luke with the cashing up, so you head off, I'll get a lift with someone else or walk home, I'll be fine.\"\n\n\"OK Eve, see ya tomorrow. It will seem strange to come to work and be dressed!\" We both laughed. Funny how this being naked thing had become natural so quickly.\n\nSo I went and found Luke and we got the cash drawers and the till rolls and took them through into the office.\n\nIt took us over an hour, checking and rechecking, and getting it put into a night deposit bag with all the bank forms filled in. Eventually it was done; Luke was ecstatic about the takings, which exceeded his most optimistic forecasts. It was certainly a whole lot more than I'd had to cash up before.\n\n\"So, Eve, have you got a car yet? No? Then let me run you home. I just need to go past the bank to drop this into the night deposit.\"\n\n\"Thanks, Luke, I'd appreciate that. It's been a long, busy and somewhat exciting day!\" I looked at my watch, it was almost seven thirty.\n\n\"Let's go and get dressed, and I'll meet you at the staff car lot door in ten minutes.\"\n\nI went back to the staff room and found my locker. I looked at my clothes for a bit, and thought what the hell, it's still Nude Day, and so I dropped the clothes in my bag and went to the rendezvous still naked. I amazed myself at how I'd adapted not just to being naked but to being confident in my skin in public. Little timid as a mouse me.\n\nLuke arrived. \"Wow Eve, are you going to be ok in the car like that?\"\n\nI beamed at him. \"I'm prepared to risk it!\"\n\n\"Well, I have to say I like the new Eve even more than the old one!\" he said with enthusiasm. I liked that, but I liked even more the look of hunger in his eyes.\n\nHe locked the door and set the alarm, and we walked out to his car, a pickup truck with the Jackson's brand on the side. We set off, and I dropped the window on my side. At traffic lights in particular I enjoyed seeing other drivers do a double take when they saw my breasts.\n\nLuke pulled up at the bank and got out to put the takings in the night deposit safe. Behind us another car pulled in and I saw the lady who ran Suzy's Boutique, whom I assumed was Suzy. I'd sometimes looked for clothes in there, they had some nice stuff but mostly out of my price range. She saw me and her jaw dropped.\n\n\"Happy National Nude Day,\" I said.\n\n\"Is that so? Well, hats off to you for being so brave. I hope it doesn't catch on too much, I want folks still to wear clothes, or I'm out of business!\"\n\nLuke came back and we drove to my home. I opened the door and said,\n\n\"Won't you come in, Luke? Come and have a drink!\"\n\n\"Thanks,\" he said, \"I'd like that.\"\n\nSo I found myself walking up to my front door, in my home street, naked as a babe, for any of my neighbours to see. If that man in the upstairs room who could see into my kitchen were to appear now, I'd positively flaunt myself for him.\n\nI let Luke in and led him through to the back room where I spent most of my time. It was a bit hot, so I opened the door onto the patio. The table and two chairs out there were now in the shade and it was pleasantly cool. I left Luke having a look at my garden and went to get a couple of glasses of white wine.\n\n\"Sorry Luke, I'm out of beer.\"\n\n\"This is fine thanks. Here's to National Nude Day!\"\n\nI made the toast and put my glass down. I then took Luke's glass and put that down too. Luke looked at me quizzically.\n\n\"National Nude Day is not over yet! We aren't overlooked here,\" I said. It came out a bit huskily. I felt nervous all of a sudden. I reached out and tugged at the hem of his shirt. He caught on and pulled it over his head. He undid his shorts, looking into my eyes the whole time. The shorts dropped to the ground followed by his boxers. He reached out with both hands and cradled my cheeks, and leant forward to kiss me. It was a long, slow, gentle, almost chaste kiss but it was enormously erotic. I'd never been kissed like that before. I moved closer and put my arms round him; I felt his erection against my stomach, and pressed against it. I kissed back with more urgency. I was filled with a need to satisfy the longing inside and the urge that was making me wet, and to banish the loneliness of being single.\n\nWe broke the kiss, panting. \"I don't think I've shown you the bedroom...\" I tried to be nonchalant and jokey but it came out a bit hoarsely. I took him by the hand and led him back into the house. I thought of something and stopped.\n\n\"Luke, I'm not on the pill...\"\n\nHe gave me a look of mixed longing, mortification and frustration, then it cleared. \"I know, my brother used to borrow the pick-up for meeting his many conquests, he used to keep a supply in the glove box. Let me see if there's any there.\"\n\nI reached down and grasped his erection. It was the first penis I'd ever touched and I was intrigued by how firm it felt.\n\n\"You can't go out looking like this! Give me the keys, I'll take a look.\" He picked up his shorts and fished them out of the pocket. I opened the front door and marched boldly down the path. The old guy in the house diagonally opposite was watering his hanging baskets. I waved cheerfully and he stared open mouthed. Just as well he's not closer, I thought, I'm sure my pussy is engorged, my nipples are like bullets, and I must smell of desire. I found three packets in the glove compartment and brought them all back into the house. I gave them to Luke, took his other hand, and led him to the bedroom.\n\nI turned inside the door and kissed him again. \"Please make love to me Luke,\" I whispered. \"Just... I've never been with a man before, so I'm sorry if I don't know what to do.\"\n\n\"I'll take care of you,\" he murmured. He gently guided me down onto the bed, and leaning over, kissed me again, long and slow like before. Then he started kissing down my jaw, round my neck, and slowly down my chest. I was beginning to feel desperate for his touch on my boobs, when his hand slid up my stomach and oh so gently caressed my left breast, as he kissed down the swell of my right breast until he nibbled on my nipple, which if anything got even harder.\n\nHe started switching from breast to breast; it felt so erotic. I reached out for him but he whispered, \"Not yet, this time it's all about you...\"\n\nHe started kissing down my midriff, nuzzled in my navel, and slowly carried on down. The excitement and anticipation was really building. I was so turned on. He kissed and nibbled into my crotch, up and down beside my pussy, but not touching it directly. I was desperate for a touch there. When I thought I couldn't wait any longer, he licked lightly and slowly up my pussy lips and then I felt his tongue gently but firmly circle my clit. I had a mini orgasm there and then. He continued to circle the nub and I felt a finger just pushing between my pussy lips. I gasped and moaned in sheer pleasure. After a moment of this, I felt it building up inside like a balloon ready to burst. I reached down and put my hands either side of his head and pulled gently.\n\n\"Please, I need you inside me now...\"\n\nHe broke off a moment, and I worried I'd done something wrong, but I realised he was putting on a condom. He eased back over me, kissing both nipples again in passing, and started giving me lots of quick light kisses on the lips. I felt the tip of his cock rubbing up and down my pussy, and then he started gently pushing it in.\n\n\"Tell me if I need to stop. It will hurt at some point but then get better.\"\n\n\"No,\" I said, \"I'm a virgin but I've lost my hymen -- a girl's toy...\"\n\nHe beamed. \"Then I'll just take it slow while you get used to it.\"\n\nHe slowly eased in, stopping every now and then to pull back a bit and then push a bit further. It felt so good, so full, so right. I put my hands on his buttocks and pulled him in. I was making little whimpers and squeaks, but I couldn't help it. He started moving more vigorously, and I was moving with him, kissing his shoulder, his chin, anywhere I could reach; then he reached down between us and a finger or thumb, I don't know which, I didn't care, rubbed my nub and within seconds I had an earth-shattering climax. He slowed down, waited for me to come down, and whispered,\n\n\"You OK?\"\n\n\"God yes, that was amazing...\"\n\n\"Ok for me to carry on?\"\n\nThere was more? He hadn't come? I thought the men always came first...\n\nHe picked up the pace again and within a minute or two became more and more urgent, and the feelings built inside me again too, and then I felt him spasming and jerking, his cock pulsing, and then I was spasming too.\n\nAfterwards, I lay there in the crook of his arm with my head on his shoulder.\n\n\"I never realised how good that could be,\" I murmured. \"Thank you ...\"\n\n\"Hey,\" Luke replied, \"I should thank you. I was falling for you and tried to resist it, but it made me realise what a fake Keiron was, and how wrong she was for me. You rescued me from a dead end relationship, and now you've made me an even happier man.\"\n\n\"You were falling for me? You never gave me a sign!\"\n\n\"I was afraid to, I didn't think you were feeling the same about me, and I didn't want to spoil the friendship we already had. You never gave me a sign either.\"\n\n\"That's because I thought it wouldn't be possible. I really liked you but you moved in higher social circles than me, and you are my boss, so I tried not to think of you in those ways because I was sure it would result in disappointment or heartache.\"\n\n\"And now?\"\n\nI snuggled closer.\n\n\"Now, I can't believe what has just happened. I'll not believe it until I know it's not going to be a fling. I've never had a serious relationship and I'm afraid of getting hurt...\"",
        "Luke turned towards me, raised himself onto his elbow and looked me in the eyes.\n\n\"This is no fling for me. I find I keep thinking about you when you're not there. When I'm doing something I like, I find myself wondering if you would like it too. I want to learn what you like or don't like, how I can make you happy. I guess that means I'm in love with you.\"\n\nMy eyes filled with tears. \"Me too,\" and I just reached for his face and drew him in for a passionate kiss.\n\n\"I've got a lot to thank Marijka for. Without the suggestion of an event for Nude Day I'd never have had the opportunity or the nerve to invite you in.\"\n\nI felt his manhood stirring.\n\n\"And now I think there's someone else who needs attention! I need a closer look -- don't forget I've never had one of these to play with before!\" and I scooted down the bed and grasped his cock. It swelled to full size in no time, it was a wonder to watch and feel as it did. I tentatively rubbed it, then reached forward and licked it. Surely it was too big for my mouth? Only one way to find out... I pushed the tip into my mouth and sucked. I didn't think I could get much more in. I popped it out again and said, \"You'll need to tell me what feels good and what not to do. I don't have a user's manual for one of these!\"\n\n\"Anything you do with love will I'm sure feel good. We can explore that together later. Right now I want to be in you again.\" He reached out and felt around for another condom. He turned onto his back and I watched him roll it on, and then he pulled me on top of him.\n\nI felt it nudging my pussy, and I moved my knees so I was kneeling over him and reached below me to direct it in. I settled back onto his cock and rocked to and fro. He reached up and fondled my breasts and rubbed and pulled my nipples. That felt really nice, I murmured appreciatively.\n\n\"Eve, that's so good. Just do what makes you feel good, let me learn from you...\" I silenced him with my mouth and we kissed passionately, tongues duelling, whilst my loins seemed to have their own agenda, and I was starting to bounce more and more vigorously on his cock. I felt so full, it was glorious. It swept me to another shattering orgasm in no time, and as it was dying away, Luke started urgently thrusting into me from below and his followed in short order, which set me off again.\n\nI lay on top of Luke trying to recover and wondering if you could wear out a pussy. How far had I come since that first spilt mug of tea! And all thanks to National Nude Day...\n\n<p align=\"center\">- Epilogue -</p>\n\n\"Ready?\" Luke called.\n\n\"I guess so!\" I came out of the house naked, my six month bump held proudly in front of me. Luke held the passenger door open, and I kissed him and got in. \"Come on, tell me what this surprise is!\"\n\n\"No, you'll have to wait till we get there!\"\n\nIt was a short drive to Jackson's Mow &amp; Grow, where the banners outside proudly proclaimed, \"Third Annual Nude Day Event -- The Garden Center of Eden reopens today!\" Luke pulled into the staff car park. There were already half a dozen cars there, but as we got out, the door of one opened and a buxom naked blonde leapt out, rushed over and flung herself into my arms.\n\n\"Marijka! I thought you were in Holland!\"\n\n\"Eve! Hey, you look good, how's the bump? I couldn't refuse the invitation when Luke got in touch. I was so disappointed to miss the wedding, it was so stupid to break my ankle the day before I was due to fly!\"\n\n\"Oh Marijka, it's so good to see you, I can't wait to have a real good gossip.\"\n\n\"Hey Marijka, lovely to have you here,\" Luke came and gave Marijka a hug as well. \"Why don't you two go to the caf\u00e9 and have a coffee and a chat? Everything's in hand, Eve should be taking it a bit easy now, there's plenty of staff cover. Go!\" and he swatted my butt. I needed no second bidding. I'd not seen Marijka in the flesh -- so to speak -- since a couple of months after Luke and I first got together; there's only so much you can catch up with by WhatsApp or Skype.\n\n\"So tell me all about how you got engaged. Is Jan over here with you?\"\n\n\"Uh huh, he's coming along about ten. He's heard so much about you and is looking forward to meeting you. I haven't told him about Nude Day -- I can't wait to see his face when he finds out we are all naked! He's going to love it!\""
    ],
    "authorname": "CloudCuckoo",
    "tags": [],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-garden-centre-of-eden"
}