{
    "title": "Wolf in Sheep\u2019s Clothing",
    "pages": [
        "Author's Note: A few things. This story came to be because of a request for a certain character type :). It made me a little nervous to post it, but here goes! I hope I did it justice.\n\nSecond, it's been noticed from a few sources that I'm terrible with tags (because I am), so I'll put content warnings here. This story is a sadist/masochist and domination/submission exploration story. A lot of fetishes are talked about or discussed (why people might like some harder play styles, memories of things done , etc.), but the ones done are things like bondage, anal sex, impact play, sensation play, and light breath play.\n\nAlso, it's a romance, too. And I hope you have fun!\n\nAlex\n\nI could use many different analogies and legends to try to describe a girl who was named Lily Lofton. I could liken her to Scheherazade, being clever enough to avoid death with her storytelling and her silver tongue. Or I could say she's like the mongoose, Rikki-Tikki-Tavi, and she's the end of snakes. There's the Japanese legends of kitsune, the fox spirits who are clever enough to outsmart wolves. I could say she's like the lotus flower or any other narcotic, sweet and sedating. There's a hundred stories, but the problem is every last one of them is fucking faulty and doesn't do the real her justice. Scheherazade told stories and Lily didn't need to tell stories. Lily could spin real life into a romantic daydream. Rikki-Tikki had to tussle with the snakes and Lily would never have needed to because she'd just pet the snake into happy sedation with one easy paw while she effortlessly charmed it into harmlessness. Kitsune are closer but they often had to run off when their trickery was discovered and Lily's wasn't something that would ever make you angry.\n\nInstead, I'll say that I'm pretty sure my path was crossed with Lily's by some touch of the devil's. If you figure that God touched people's lives in delicate little manipulations and the devil pridefully tried to imitate him, then he might try that same tactic. Hear me out on the happenstance. I worked IT in the corporation where Lily ran advertising campaigns and most every call I got could be handled over the phone or by remote access portal. But Lily's problem had to do with this wireless printer and by some freak series of events, this printer had been incorrectly set up and then \"fixed\" to the correct settings in an incorrect way. There was a power flick one night and the printer went to the initial setup, didn't work, and there just so happened to be one of the ad campaign meetings on that day and...\n\nYou get the gist. I ended up in the office of this red-haired, high energy, wild eyed demon to fix a printer connection. For every appearance, the encounter was absolutely normal except for one moment. I heard her curse behind me while I was working and looked around to see her crouching to pick up a folder she'd dropped. Her black skirt fit her well, yeah, but it wasn't even anything meant to be sexual and the moment wasn't even sexual. It was just that when she crouched, it drew her skirt up a little above her knee - still long in length - but there was an angry red welt there, low on the outside of her thigh.\n\nI fixed her printer and left, heart beating fast because I'd never seen one of those stripes in person. It was something I had seen on several videos, but nothing really makes you ready for when you see something like a cane stripe in reality, not in a scenario like that. It was so much more vivid than I would have thought, this raised welt that made my blood race. I didn't know why I had always been drawn to the things I was, only knew that I had gone down the paths of stories and videos, enough to recognize that mark easily. It made me even more curious to see it on an advertising executive like Lily Lofton, who was a powerhouse name in our company. She was excellent at what she did, she had endless amounts of energy without the appearance of being overly dominating or threatening, and everyone thought she was the sweetest, most adorable person they'd ever met.\n\nBut that's not where the real story started. I never expected to run into Lily again, but something seemed to keep putting us in each other's paths, despite the fact that I'm an introvert and rather reclusive. She was definitely neither of those things and she took over conversations when we spoke to each other, so much so that even I couldn't be overly stressed by the social interactions. I started to like them, started to go along whenever she asked me to go eat lunch or whatever else. I have no idea what she got from these moments because I was a quiet person, but I can tell you what I got from them.\n\nI got a connection with someone that didn't require me to overthink, one of two forms of social interactions that I willingly took part in. And, of course, every now and again she would turn around, having taken her jacket off, or she would walk in front of me to lead the way and there would be another mark. The top of a whip line high on her back, for instance. They were little things that no one would have paid any attention to otherwise and it definitely wasn't the kind of thing that I would bring up to her, but it was the kind of thing that started to have sway in my fantasies, even while I felt guilty about that fact. Even so, I wouldn't approach her on it. It wasn't in my nature. She was the one who initiated most of our friendship actually.\n\nEventually, she started another freak series of events that would start the real story.\n\n\u2014\u2014\u2014\u2014\n\nLily\n\nAfter the whole story was said and done, Alex would always say that I was the romantic, but he was full of shit. Later on, he would always be the one to talk about how some force of religion made us cross paths. It wasn't.\n\nIt was obviously because of my lucky pencil skirt I wore the day I met him. I had had that skirt so long that there wasn't even a zipper anymore, but I had sewn the skirt rather than throw it away because it was lucky. It fit just right and everything turned up aces when I wore it. I did always kind of wonder how something bad like a printer problem would happen when I wore that skirt.\n\n\"Okay, so what's the most stupid call you've gotten while working for our company?\"\n\nI went and found Alex on days before I had things like presentations because he was calm and I wasn't. He was quiet and I never even thought before I spoke. He chose so much as every word and my life was chaos. So when I felt frantic for work meetings or I felt like I was fraying, and I couldn't play my masochism games because I didn't have time or for another reason, then I found him and he always made me think straight. By that point, I had had to experiment with ways to make him talk more, too.\n\nI struck gold with that question and I knew it when he made a face. \"I can't actually tell you a single incident, but I can tell you that the higher up the corporate ladder you go, the angrier people seem to be about it.\"\n\nI laughed and took a drink of beer and that was another thing. I had also discovered he liked IPAs by then and I had to make him try a few different ones at a favorite restaurant of mine to get him to talk more. \"Oh, this is good. Tell me names.\"\n\nHe smiled into his beer, his head lowered in this shy way. That was another thing. Alex Horne was cute right from the start. He had this sandy hair set in a crew cut and these gray eyes, but more to the point was his mannerisms. He kept his eyes lowered a lot in this subjugated way. He always let me talk to waitresses, he never fussed when I was too energetic or when I chose things like where to sit without thinking. \"I'm not exactly a 'good with names' person, Lily.\"\n\n\"Liar. You just said mine.\"\n\n\"Sure, because even I'll remember them eventually.\"\n\n\"You just don't want to tell me because you're too nice.\"\n\nHe laughed one of those soft sounds again, taking another drink while I took one. \"It doesn't feel right.\" He hesitated. \"Okay, I can tell you that one of the accountants last week had me come all the way up to his floor when he couldn't figure out what was wrong with his printer. I went through everything I could think of on the phone and was actually getting pretty confused myself. Then, when I got there, I just had to plug the power cord in.\"\n\nI choked on my laughter. \"Oh, please tell me he had you delete a thousand print jobs after it started working.\"\n\nHe made a face. \"Yes.\"\n\nI couldn't keep back the hysterics. Alex had this sense of humor that was so flat and dry as a result of being a pacifist. It had taken me a while to learn that he really was a pacifist, too. He would go out of his way to avoid and negate confrontation because it stressed him out. So when he talked to people and he felt something like \"are you fucking kidding me\", his face went blank and his eyes were the funniest part of it. He would hide it so well, except for just a little bit of nihilistic exasperation that he couldn't completely cover.\n\nI drank more so that he drank more, enjoying the company after a high stress day. The problem with this is how impossible it is to tell if a quiet person is buzzed or not. I had made the mistake of adding alcohol to the conversation, for both of us, so he would talk more and then I realized I had a problem when my tongue felt really numb when I was trying to talk.\n\nThis led to two things. I lived somewhere along the same way Alex went to get home and he lived farther out than me in the city. We didn't live in a bad part of it at all, but he was the kind of guy who made sure I got home okay. He was laughing those soft laughs at whatever I said too, while I wondered how much I was going to hate myself in the morning when he seemed the same as he always did and I was a fast talking drunk. I apologized when we got to my door while he shook his head and said it was fine and entertaining.\n\nAnd the second thing was right before I was about to go upstairs. \"Wait, hang on, let me see your phone. I just realized you don't have my second social media page.\"\n\nHe gave me his phone easily, quietly asking, \"Who would ever want two of those?\"\n\n\"Me. There's too many people on the main one, so I feel like I can't ever post anything without running the risk of offending someone. So I made the second one because I'm actually a pretty terrible person. There's a lot less people on it and they... Okay, as a warning, they're pretty damn vulgar and they curse a lot, but if you don't mind that...\" I used his page to add me and then accepted it on my phone because I knew if I just gave him the name and told him he could, then he wouldn't.\n\n\"I don't mind. You okay, Lily?\"\n\n\"Yeah, I'm great! And I'll see you tomorrow.\"\n\nAnd I honestly never once considered what might show up or be referenced on that alternate page. It was actually exactly what I said, the page with far fewer friends where I could post things like my dark humor. Of course, that meant that a lot of the friends on it were people I had met during my night life sadomasochistic forays and I wasn't thinking of what would be indirectly referenced in things like, I don't know, the comments sections.\n\n\u2014\u2014\u2014\u2014\n\nAlex\n\nLucky skirt? Lucky skirt? That's what we're going with while accusing me of being the romantic? She-! You know what, I'll just let the story decide it. So, that night.\n\nHer last words before she left made me curious, made my heart race a little again. Vulgar friends, she'd said. What kind of vulgar friends did she mean?\n\nThe kind who left cane stripes down her thighs, low enough to see?\n\nEven so, that wasn't the reason that made me open Facebook when I got home. Her adding me had made me think of something else, which was how another friend of mine named Jason had messaged me for the one other social event I was willingly part of in life. Don't judge me, but it was Dungeons and Dragons. Look, I was enticed enough by the tabletop setup to get out some, so that was something. I was shy, but I wasn't a total recluse.\n\nPulling it up on that night was another event that... God, I swear to this day that she was sent to me by the devil. It was these little random touches in life, these coincidences that were wild. Her alternate Facebook name made me laugh. It was Morgan Le Pharaoh and it was the exact kind of random nonsense I'd expect from someone as chaotic as Lily Lofton. I still have no idea why it was easy for me to relax around her because she was everything that should have made me more anxious. Maybe it was the fact that I had met her along with my first real sight of a cane stripe, the fact that during our encounters she would have random other little marks and some of them I didn't even recognize. Maybe it was the fact that she wasn't actually an overly domineering person, but she was so excited and high energy all the time that she didn't think about how she was taking the lead with me. She just did it, while I fell quiet and it was the little things like the restaurant when we drank together. She didn't realize it, but the way she'd talked to the hostess and made those small decisions made me really appreciate her. And the way her cheeks turned flush when she was drinking made me smile, too.\n\nIt kind of made me feel all the more guilty that I had started to orgasm to twisted fantasies like someone spreading her agonizingly wide with a speculum. Even when we went to eat, I would sometimes visualize her with thin cords wrapped around her tits so that whoever was leaving whip marks on her could whip those as well...\n\nI had meant to answer Jason. With the thoughts I was having, though, I got distracted with a feed post that showed up from that Morgan Le Pharaoh page. It wasn't even something I had to look for, wasn't something I had to so much as click on. It was a random picture, something cute and funny about kittens.\n\nBut someone had commented on it and it was the comment that got my attention because it referenced a fetish porn site, one of the ones where people could post pictures under various tags. And it referenced Lily.\n\nIt was someone teasing her about having a profile on that site, someone not so subtly bringing up her username on that site. It was right there and we had been talking for weeks by that point, while I kept having images inspired by moments with marks on her body. Even when we'd been drinking a little together that night, there had been another one of those smaller events, one where her shirt sleeve had fallen over her shoulder when she'd stood up and she hadn't been wearing a bra, but when she turned around, there was another mark again, one that seemed like a thinner whip stripe this time. It was another of the ones I didn't recognize.\n\nI pulled up the page and typed the username in the search bar. I had thought my fantasies about her were bad before? They were nothing to the door I opened by doing that. The more I learned about Lily, the more she interested me. She talked about being a cynic, but she was so optimistic in every other aspect. She had brought up being a Laveyan Satanist, but she was so reserved about talking about it. She was sweet, but she had cane stripes that made me wonder. She was so sunny, so happy.\n\nI had wondered how dark. I found out with those pictures. She was right there, but that wasn't all of it. She had a fucking ton of images, ones that made me burn. I started flipping through them at the images that answered my cane mark inspired questions. The first one was a full body shot of her ass and back and she could apparently take a lot of pain. Her ass was covered in the stripes and her back was whipped with those smaller welts. It only got more interesting the further down I went, too. There was one where she had nails through her tits, one where her tits were wrapped in the cords I had fantasized about, one where her pussy was splayed open with a hoop spreader and painful clothespins. There were ones where she was wearing a gas mask and chained in heavy bondage and that was another thing. She never showed her face. It could have been anyone, so much so that even I kind of wondered if it was actually Lily I was looking at. It was one image in particular that made me recognize something I didn't think anyone else would notice. It was that black skirt, the same one she'd been wearing when I first met her. I followed her on her kink page, feeling... a lot of different things, but the one I felt most was more curiosity.\n\nAlong with wild arousal. At that point in my life, I knew that there were words for the things I felt, words like sadist, words that made me shy away from the thoughts of my desires because I felt guilty at the time. I liked really dark things, but I couldn't reconcile it with being a shy pacifist. I didn't take the lead on anything in life because I hated decisions. They stressed me out, but I was confused, too, because the kinds of stories I liked were...\n\nLet me tell you one, actually. It might be easier that way. I had a few favorites, even then, and some of them were realistic, while some traded the realism in favor of more sadism and humiliation. If that latter was good enough in writing, then it could be the kind of thing I really got into. For instance, there was one like that with this Master who had a slave he wanted to degrade into being his cow slut and, through some connection, had lactation drugs he could try, so he went on to do it and the drugs worked too well in the story. The slave started to hurt when he didn't milk her and then he started to humiliate her by making her beg for it because he didn't let her wear bras and it leaked through her shirt when she didn't beg hard enough for him to take care of her. Another few were these brainwashing stories or mind control stories where the person was aware they were being controlled, but couldn't do anything about it.\n\nThat's the point where this happened in my life. I was confused, conflicted. I had been through a divorce that happened because I was too quiet and distant sometimes. I had fantasies that were dark as they could run and I couldn't reconcile them with who I was. It felt like too much of a dual nature. And then Lily happened.\n\nHave you ever seen a dowel rod right as you bend it to break it, if you do it slowly? You have to add steady pressure, creating a center of stress to it. My friendship with Lily had started as this innocent enough thing, despite my years of unrequited fantasies. And then she added pressure without meaning to.\n\n\u2014\u2014\u2014\u2014\n\nIt had started with run-ins before, but after I saw her drunk, it seemed like Lily decided she liked me. Which is fair, actually. I contend that it's a decent friendship trial to see if someone will hang out with you after they see you get drunk. I didn't judge her for it and after she seemed to realize that, she would come and find me for lunch sometimes and each time, after I added that page, felt like more stress being added on that dowel rod. The first time she was bouncing on her toes and breathless, her eyes excited. \"I have another presentation after lunch.\"\n\n\"I'm sorry.\" That was my knee jerk response, to be honest with you, because that sounded absolutely fucking horrible with the type of people up in advertising.\n\nShe laughed, though. \"No, no, it's the perfect presentation, but I'm too excited and you're calm. Do you want to go out to eat and talk with me?\"\n\n\"Sure.\" And I don't know what I did to help her while out to eat with her because there isn't much to tell about it. She told me about her color schemes while I answered and I was actually engaged in it even if it wasn't a topic I knew much about.\n\nYou see, I was fascinated enough with the person talking that it made me interested. She sat in her chair with so much energy while I had mental images of the pictures she'd posted on her kinky page from the weekend, images where she'd had cruel looking torture hooks pierced like skewers through her back, where she was tense with fear and adrenaline.",
        "\"So you really don't have much problem with standing in front of that group?\"\n\nShe grinned and shook her head and talked about how she spent a lot of time faking it until she made it and knew her work was pretty good to begin with. I couldn't keep from picturing her standing in front of a different crowd of people, nearly naked, small blood trails forming on her back, the pulley lifting so that she was lifted by her flesh and suspended. I pictured her in other ways, pictured her tied with more bondage so that she was helpless, imagined her shivering with a lot more fear in her eyes. Her arms had been free and the atmosphere had been relaxed with her hook suspension. What if it was a different atmosphere? What if she was more terrified, so I could make her cry?\n\nThat thought made me swallow. It was the first time I'd thought of myself in it, if I'm honest, and at first I didn't even realize it. It was something I didn't think I'd actually done before Lily, you see. I read stories, I had fantasies, but they were most often about tormenting and degrading a girl who wasn't even a specific girl and the fantasies didn't have me doing it, even if I focused on the sadistic aspect the most. I just pictured a different person and got off on the thoughts.\n\nUntil that date, when the little demon across from me gave me so much inspiration just by existing.\n\nSee the start of the pattern? I went home that night and read more, abusing the hell out of the \"extreme\", \"hardcore\", \"humiliation\", and \"BDSM\" tags for stories. My sex drive went into overload and I had always been curious enough, but now I got even worse, somehow. Lily would post new pictures and I would want more. She posted everything that could have ever taunted me, too, pictures of herself in stocks and heavy bondage. She posted pictures where she wore clover clamps with weights on them, where she was tightly bound as if being forced to suffer the hardcore pain. One time she posted pictures of herself tied up with a dildo stuffed in every hole in her body - the one in her mouth connected to a pump even while the rest of her face was covered in latex - and filthy, degrading words written in marker all over her. She asked me out to eat after that one and all I could think of was how the word \"fuckmeat\" was probably still written on her thigh, the word \"cuntslut\" was on her tits.\n\nShe grinned when I told her the only night of the week I was busy was on Saturdays because I was part of a Dungeons and Dragons campaign. And the great thing about Lily, one of the many wonderful things, was that she wasn't too cool for anything. She knew all about it, too. \"Let's see, let me guess. Don't tell me! A rogue?\"\n\nI shook my head, smiling and feeling a little shy about it. But the shyness was fast fading when she kept going about how I definitely wasn't a wizard type because AoE hurt too many teammates and I seemed too mindful of that kind of thing. She made me laugh when she got it on the second guess. \"A ranger!\"\n\nThe word \"Cockwhore\" was on her stomach. Lower down, it said \"fuckhole\" with an arrow pointing between her legs.\n\n\"One of the first games I ever played was with three players who all wanted to be casters,\" I said softly.\n\nShe choked on her laughter and I smiled absently, thinking about how she'd had another set of photos where two other girls had squirted cum in a measuring cup. They'd had Lily between them, her sweet face covered in more humiliation latex while they poured what was in the cup down a funnel into her mouth and she'd looked so perfectly filthy. One of the girls had caned her clit in some kind of punishment after that. I liked to imagine them hurting her while telling her she wasn't being a loud enough little worthless bitch for them when they were so kindly feeding her all that cum.\n\nAnother time she sat across from me and asked me about the video games I liked, if I liked them, and Lily was clever with these questions. She'd realized the Dungeons and Dragons thing and asked about the logical correlation: other games. I smiled. \"Yeah. Mostly single player ones, like Outerworlds and Borderlands.\"\n\nShe grinned, feigning surprise in that charming way she had. \"No, wait! You mean you're not an ultra competitive battle royale streamer?\" We were so opposite. She had these pink nails all done up with glitter and I wore jeans and a t-shirt because I didn't have to care when I worked IT. I thought about the fact that a lot of other people must have fantasized about Lily Lofton... and wondered why I wasn't having the normal kind of fantasies.\n\nI was thinking other things, like how the night before she'd put up pictures of herself in more latex, a full body suit of it, one of those frames that cast the body in tight immobility and had a breathing tube because she'd been so strictly bound, her large tits emphasized. Her dominatrix friend had licked and fingered the breathing tube in this perverse way...\n\nI shook my head. \"Can't claim to be the competitive or streaming type, no.\"\n\nAfter each of these, I would end up at home for the night, reading and fantasizing about her being in the twisted things I read about. It was worse that way, too, to place her in the thoughts, to think of directly doing these things to her. It wasn't just thoughts of her either. I'd think of her with another girl, but I always imagined Lily as my degradation slut. For instance, I'd think of coming in the other girl and then think of making Lily lick and suck what I'd left out of her pussy. I'd think of calling her a horny little fucktoy, of writing it on her tits so she could wear it to work. I watched slave head shaving videos and imagined Lily in tears.\n\nSome of it was realistic. Some of it definitely wasn't. All of it was cruel and sadistic, though. It felt like this build there at the beginning, when we were first talking and she didn't pay attention to this follower named Shere Khan for her fetish page. I knew and she didn't know that and I kind of wondered where she'd lead me. I didn't generally prefer the lead in anything in life, especially not relationships, but I got a little more bold as we talked.\n\nShe asked me about books after a few more weeks and the night before, she'd been tied to a table with a speculum in her pussy and her asshole. Both had been gaped obscenely wide while someone stood over her and fucked a cock down her throat, one that was connected to a wooden pole so the person didn't even have to bend down. Her head had been covered in a leather partial dog hood with an open ring gag in her mouth to force her to take it... \"Okay, so what are you reading right now, for instance?\"\n\nI hesitated and then I told her the truth. \"Kushiel's Dart is the name of it. By Jacqueline Carey.\"\n\nShe laughed happily. \"Damn it, I don't know that one. What's it like?\"\n\nI smiled because I had a feeling she'd really like it, but I didn't say that. \"It's really great. I'm not far into it, but it has thought out world building, which is always a bonus in epic fantasy.\" World building. That was what I was going with.\n\nShe grinned. \"World building.\" She said it as if mirroring my thoughts and I ran a hand through my hair, even though she wasn't being mean by saying it, only thoughtfully considering. \"That's fair, but leads to another question, then. Are you one of those people who like epics like Wheel of Time?\"\n\nI took a drink of beer, smiling again. She didn't know it, but confessing the book I was reading at the moment was something I thought I'd only tell her. She was the first person I'd met and gotten close to, that I directly knew of, who was kinky. That also made her the first person who I might even consider opening up to, talking to. It was the kind of thing I didn't dare hope for too much. Everyone would talk about everything online, but directly getting to talk to someone about things like that? It wasn't the kind of thing you got your hopes up for, you know? Especially if you were an introvert.\n\nI thought of her being forced to take a huge, painfully ridged dildo, thought of the way her pussy had looked spreading with the transparent speculum and thought of her lifted against her restraints in pain when the toy was forced inch by inch, a toy larger than a man's fist. I didn't bring up the book again.\n\n\"I love Wheel of Time. I thought Sanderson did really well finishing it, too.\"\n\nI masturbated to another of the unrealistic stories, going a little bit crazy. It was one where the Master conditioned - er, brainwashed, actually - his slave to associate having her tits tortured with his loving her, while he called her a filthy fucking slut who deserved it. She started to beg for it and all I could think of was Lily and her pictures and how great she was as a person, which made me feel a little bad when I thought about her tits and how large they were for her size instead. God, it was messed up and I know that, but every story was making me crazier and I was inspired by the galleries of pictures of Lily. And I wasn't psychotic, nothing like that. I know there's differences in fantasy and reality and I know some of the stuff I read was twisted and evil. Hell, I had spent half my life wondering what was wrong with me. So you might wonder, \"why tell the gory details?\"\n\nBecause, well, Lily. I couldn't keep from wondering how she was the way she was! You see, she was so happy, so loved, and so sunny. She played these dark fantasy games wherever she went to and she was no saint, but when she was outside, no one would have known. Actually, she was even more cheerful than most people who condemn those kinds of depravity. She was just so basically self accepting in some way. I read these stories that messed with me and couldn't figure out why the hell I was the way I was. It was Lily who made me wonder about the possibility of being not so bad. How did you reach that level of acceptance? How did she go home and not have problems when she looked in the mirror? She spent nights being called names and being abused and she just went home and was totally okay with it? She didn't let the names get to her or anything? I didn't totally understand, but I really wanted to.\n\nBeyond that, well... I thought about all the times she'd teased me for choosing a Ranger in my campaign and had to smile. Because it made me feel like a high schooler to think the words, but I was pretty sure I had a crush on Lily.\n\nAnd that dowel rod? It just needed a little more stress, the smallest push.\n\n\u2014\u2014\u2014\u2014\n\nLily\n\nEven at that point, I actually had no idea that anyone had even referenced my fetish page. The loudmouthed person who posted the comment to tease me about it had apparently taken it down about ten minutes after, realizing that maybe they shouldn't put up that much info (like an idiot), and I never even saw it, but that leads to... Okay, maybe I should explain a little of my secret life, or try to.\n\nYou know how everyone has that hidden shadow self, if you believe in Jungian psychology? For me, I felt like I was made up by a lot of my shadow self. That dark side that craved pain, that got off on being hurt and degraded and humiliated in ways to shock some sensibilities felt like the larger part of who I was. The good side felt like a mask. The day after Alex told me about this book, for instance, I liked my boots and a fluffy zebra backpack and the color pink. I was happy Lily, the one everyone adored. I was good girl Lily, the redhead that always behaved herself.\n\nBut I also had a date that night. Not a date-date. I mean that I had plans and those plans involved getting to indulge in play piercing. Just the thought of the terror when the needles pierced my back made me shiver in delicious anticipation, made me smile more sweetly than ever so that people loved the happy Lily all the more. Things that would make me mad otherwise were things I let go because I would think of the sharp, singing pain and release, the way the blood would well sometimes. Just the knowledge that I was going to indulge made me deal with the rest of life better.\n\nI've never been very good at describing masochism or why it makes life so much more for me, but I can try! You see, there's an adrenaline rush that follows the hot sensation of sharp pain, but it's more than that too because even before that there's a build of human instinct, of fear. Nature tells us to run from pain, to avoid it, and it gives us incentive to do that with things like fear. But if you force yourself through the fear? If you wait for the sharp crack of the cane or if you go tense with anticipation for the pierce of the needle? There's a split second of baited breath that's like waiting at the top of a roller coaster and, if you've been terrified of heights at the top of one of those, you probably know that sensation of staring into an eternity for one second. And then it's over. For the roller coaster, you drop.\n\nFor the pain, it hits like a hot blast and you have to breathe through it, have to endure it. Every time feels like this challenge, too! It feels like something to take, not something that's just easy to coast through. It feels like a trial and a triumph and then there's just the aftershocks of bliss and giddiness. I love pain. I don't know why. All I know is that I was born with this addiction to feel thrill and, sure, things like skydiving would work, but pain is readily available, I've learned. And you can do it safely, if you're careful and you know what you're doing.\n\nIt took me time, but I had learned when it was okay to be my darker side around people because there for a while I hadn't wanted to put my mask back on. I had wanted to just be that side of me all the time, but I had figured out that I couldn't do that. So I made sure I could indulge all I liked, without getting myself killed in the process, and I kept my shadow self close to my heart because I loved her. It's a big part of that Jungian philosophy that you embrace the dark side and I had. I don't know if it works for everything, but it worked to make my life all the more exhilarating to do it.\n\nSo now, I was just happy all the time. I started to see these moments as the good Lily as Halloween moments, like playing a game. I was a maso slut in good girl office clothing, a good girl who wasn't good, a happy girl who was sinful as hell. The only downside was that people didn't like me anymore once they got closer to me. The kinky people were definitely the most accepting, but even they thought I was too much to ever date. The Sadists and Doms in Sulfur's fetish club had all mostly figured themselves out and everyone has hard limits, you know? Which is good! They should. The trouble was I didn't actually have many limits of my own and I didn't even really have specific fetishes either.\n\nI was into the really dark things, the hard humiliation that would make me see stars with adrenaline and thrill. I'd done some things that I'd never thought I would be into because a sadist spun the scene the right way. That's how I got into watersports really hard for a while, actually. There was a guy who was into it and I was adventurous enough to try most things out, even if they made me a little wary, but sometimes people will do something just the right way. That first time trying piss play had been one of those times. He'd called me a foul fucking whore and told me I deserved it for being so goddamn dirty. It hadn't even been anything particularly violent, you know? It'd just been this wicked condescension and filthy thing and God, that was exactly what I was into. Being brought low, being brought to tears, being made to take something while being told I deserved it for how much of a bad fucking girl I was.\n\nBut that meant that I hadn't really found a sadist that fit well with me for some obvious reasons. I didn't have so many limits, so I had to be careful for a start. I also didn't dig on the high protocol domination and I was really submissive, definitely, but it was usually only a mindset I could keep hold of in the bedroom. I was too much of a flirt and I was a formulaic bundle for jealousy. There were all kinds of issues with my trying to date someone who might be into everything I wanted to do and try.\n\nBut I think the easiest way to describe the entirety of it is to say I had too much of a dual nature. I was submissive, except not always. I was happy-go-luck, except I was violent. I was the good girl stereotype at first sight.\n\nI was anything but good.\n\n\u2014\u2014\u2014\u2014\n\nHe can always claim that I had hand in these breaking moments, by the by, but he had some play in it, too! His book, for instance.\n\nI ended up buying his book about a week after he told me about it. I didn't always go out, believe it or not, and it had been a while since I'd read anything, an embarrassing amount of time. I sometimes didn't have a lot of time and I loved talking and flirting with people, but reading was just good for the soul. Sometimes it felt nice, even to my chaotic self, to start a bedtime routine where I'd just read a few chapters. Okay, that wasn't all of it either. If I'm being honest with you, I really liked Alex. He was calm and I wasn't. When I felt a little too excited or anxious, I could go down to his offices and find him for lunch and he always just let me guide the way while I prattled on and on. He never seemed like I stressed him out either, which was something I worried about since I seemed to stress out a lot of people by being high energy all the bloody time. And sometimes he had this dry sense of humor that was all the more funny because he was so shy about it. I just... I liked him.\n\nSo I remembered the book he mentioned and started reading it. It took a few nights before I got the context of the book and when it sank in the direction the content was taking, I remember jolting upright in bed, horny and excited. See, the place in the book was built on the ideology of \"Love as thou wilt\". That was the creed, but here's the really interesting part. The main character had a spot in her eye, one that marked her as belonging to a specific god of the world. \n\nThe god of punishment in a creed of \"love as thou wilt\".\n\nI disappeared for a three day span, excepting work, and I finished the book in those three days. Once I reached a certain part, I just couldn't put it down. It was so good and it was kinky as hell. The involvement of things like gods made the atmosphere all the darker and the language of the book was almost flowery, which contrasted the content and made it stand out all the more. It wasn't light either. It had things like blood play, things like branding. It made my heart race, made me feel this nervous flutter in my stomach. It's true that I'm a hell of a masochist and I've played with some scary fucking people, but here's the thing you learn from something like BDSM.\n\nLife is about contrasts. For instance, I've played with some sadists who will soothe their submissive with a soft kiss while they're hurting her and pressing her limits and that one kiss is enough. In the midst of all the violence and roughness, that one brush of softness seems like the most gentle thing in the world because of the contrast. Well, that goes backwards too and it goes for other things in life. Alex and I had been talking for a while by then and at first it had started out as my curiosity, but it had turned into something more. It turned into interest and this warm sensation of being near his calmness, of him just letting me talk myself out of all my pent up energy. But the thing is, in all that time of talking, not once had he mentioned anything vaguely sexual, not even to make a joke. He didn't even look at me the way some guys did, the way they'd stare at my tits or something. He was always nice, always easy going, and he never crossed that barrier.\n\nAnd then he gave me a book and the contrast made me feel... it made me feel shy, almost nervous. It gave me butterflies. I bounced on my toes while waiting for him before lunch and I wasn't even planning on telling him I wanted to get that. I was planning on something else.",
        "He smiled when he saw me and it had taken months, but he even looked at me when he said hello now. \"Hey, Lily.\"\n\n\"Hi.\" Oh, man. I was way off my game. He paused and just waited like he always did because he didn't seem to ever like making decisions. He still left that up to me. \"Um. I wanted to ask you something.\"\n\n\"Sure.\" How was his voice soft all the time? And he liked the book title he had given me! I had a million questions. What did he like about it, was it the kinky stuff, what parts of the kinky things did he like, did he want to know more, what did he already know? And something else had occurred to me too. His mentioning that book had seemed a hesitance, so why mention it to me?\n\nI finally managed to burst out a squeaky, fearful question, my moment of shyness. \"Would you want to come over for a date at my place? By that I mean I'd really love it if you did.\" Was that too needy? Was it not forward enough? I didn't want to give him anxiety.\n\nIt turned out to be just perfect. He met my eyes before he inclined his head in that submissive way he had. \"I'd love to.\" And he had this smile at the corner of his lips that said he meant that. \n\nI gave him my address while my heart fluttered, but then I froze. \"Wait. You don't live very far away and I'm on the same route you take. Would you rather just go home w-with me instead?\"\n\nHis smile was gentle still and it was something that soothed me. \"I don't mind either way.\" He paused, then shrugged. \"Although it seems like it'd be the easiest for me to just go home with you.\"\n\n\"Okay. I'll see you after work.\"\n\n\u2014\u2014\u2014\u2014\n\nI moaned to myself in the bathroom at lunch, wondering why I had asked him for a spur of the moment date. My panties and bra didn't match and it was good luck to have them matching. Actually, it was also a habit thing because I'd taken to dating sadists when I felt frisky and it was a \"just in case\" thing. This wasn't like those dates. I was trying to figure him out. I wondered why I had been so fascinated with him from the beginning, wondered about him in general. If I was taking him home to my place, was it too obvious if I changed after work? Would it be weird if I did? Did people stay in things like their work clothes for something like that? My thoughts went a mile a minute and that was just the start. They didn't shut up. What was I going to do with him? What did I want to talk about? Okay, that was fucking dumb because I knew what I wanted to talk about, but I didn't know him well enough yet to just outright ask him and wasn't sure how to segue into that and I had so many questions and-\n\n\"Hello again.\" The thoughts shut up as soon as I said it.\n\n\"Feels weird not going the other way to the bar after so long.\"\n\nI snickered at that, leaving with him. I asked him how his day was, where he politely asked me the same. I'd forgotten how basically easy he was to talk to because I definitely just... talked back. It was calm and it relaxed me actually, even while I still had these butterflies. I'd think about his book every now and again and get excited, get horny too. He had these shy little smiles that made my heart flutter every now and again. I think even then I had a feeling as to what I was going to do. People didn't open doors unless they wanted to go to the other side or wanted someone to come through to their side. I had definitely opened a door.\n\nIt was a physical one when I got home and stood to the side, letting him in. I'd learned topics of conversation to draw him out by then too and I had asked him about Mass Effect on the way to my apartment. He looked around when he got in and even flirted a little. \"Wow. You actually live somewhere quieter.\" He did that cute thing where he ran a hand through his hair and I couldn't decide if it was a nervous tic or not anymore. His smile gentled his teasing. \"I thought for sure you'd live somewhere much louder.\"\n\n\"Nope. I even live alone here and not in a communal place.\" He laughed and my thoughts were back to racing because I hadn't thought this through. I hadn't thought about what I wanted to do and I'd been acting on pure impulse, was still running on impulses, and they were all over the damn place, too. They were absolutely in control with the next words out of my mouth. \"I read your book.\"\n\n\"Which- oh.\" He blushed, catching on quickly. \"Yeah, I haven't fin-\"\n\nI didn't let him finish because those damn impulses had me again. I hoped to God I didn't scare him off, because I had questions. Even so, I clasped my hands gently to his jaw and pressed my lips to his.\n\nCatching him off guard with that kiss was the best thing that ever happened in my life. He wasn't dominating, wasn't controlling. He didn't pull my hair or anything like that. All he really did, in hindsight, was cup a hand to the side of my neck to pull me closer, but it wasn't just that. It was how he was so obviously engaged and interested. He tilted his head and I tilted mine and we just fit together. I don't know if that makes sense or not, but he moved in this perfect reaction so that it was just... right. My heart raced and then there was what it led to.\n\nHe moved his hand on my neck, just slightly, just enough that his thumb brushed my pulse and I lifted closer for more of him. His hand didn't even tighten, not really, but I had all these thoughts and I pulled away, not really thinking about what I was saying when I whispered, \"Harder. Please... please.\" I went back to his kiss and he hesitated, returning it with that hint of shyness before-\n\nHe did it. His thumb tightened and it wasn't even that hard but God, the bloody contrast. I whimpered, whining against his lips, so that he pulled away with a sharp inhale and stared down at me, watching me. And there was this pure spark in his eyes, this sense of basic excitement that made me thrill. He hesitated again, then softly asked, \"More?\"\n\n\"Yes, please! Please!\" He pressed his lips back to mine and he gave me more of those light, almost gentle touches.\n\nIt was like this magic. It made me feel like a teenager again, made me feel nervous in all the good ways. His touches weren't mean at all, you see. They were experimental and they had this sense of playfulness. It was like he would gauge how much I liked different touches on my throat and he kept it to that at first, too. He'd stroke his hand to feel how it fit against the front of my throat, while I kept him distracted with kisses so he couldn't think too much, and he'd press just slightly, teasing, smiling when I moaned up against him in response, when I begged. He pet his other hand around the back of my throat and smiled again when I tried to bow my head at the slight touch, when I went to be more submissive. There was something about being held around the back of the neck that just made me want to bow, made me go still. He curled his hand up around my jaw so that I gasped and arched. My mind was a blank and I was happily all feeling, happily licking almost innocently at his lips while he gently licked back, his hands still around my throat so that I felt like I was in some stasis of submissive need, that moment right before subspace hit.\n\nI had to pull back, had to come back to, and he stopped as soon as I did, watching me when I grabbed his hand. \"Wait, come here.\"\n\n\"Yeah?\" His voice turned husky when he was turned on, almost hoarse, and it still held that softness.\n\nI tugged him over to my big cozy chair and gently pushed him back so that he sat down. \"There.\" I curled up in his lap while he watched me, while he blinked as if a little shocked he might find himself in the position he was in, which was something I empathized with. I shut both of our thoughts up by pressing my lips back to his and snuggled closer into his arms, taking a moment to realize that he was really hard and it made me wet and needy for a lot more to know it. But then I grabbed his hands and I knew what to do with them with what he had shown me so far. I placed one back around my throat and one in my hair.\n\n\"Pull,\" I whispered against his lips.\n\nHis breath caught with arousal and excitement and mild shock and all the emotions that were really good signs. He did that cute, sweet, arousing thing where he hesitated, so that I waited with baited breath, and then he pulled this hard, tentative little tug.\n\nContrast is everything in life. Happiness is all the more delirious after sadness. Feeling warm is all the more satisfying after playing in the snow. \n\nLight, controlling gestures are all the more noticeable after gentleness sometimes.\n\nI squealed hotly against his lips, then whimpered, arching so that his hand tightened around my throat again, so that I whined and tilted my head to let him have easier access. \"Oh, please! Squeeze tighter?\"\n\nAnd he did it.\n\n\u2014\u2014\u2014\u2014\n\nAlex\n\nJesus bloody hell. I had thought nothing made me ready for the sight of a real cane stripe? Nothing made me ready for the feel of just the start of some of those dark, twisted fantasies I had. It was the kind of thing that I had always thought myself too shy to take, you know? There were basic truths in my life. I didn't like decisions because they stressed me out. I didn't argue back with anyone and was a pacifist because assertiveness was too much effort for things I didn't care that much about. Even in my previous marriage I had been the more submissive, had been the quiet one. She had been the one who took over the finances, who could do what she liked, whatever she liked. In fact, I had been, apparently, too submissive, too distant. I hadn't meant it that way, but connection wasn't my strong suit. I was just a born introvert and I didn't do things like take the lead for Valentine's Day or anything like that. So I for damn sure didn't expect to take over in the bedroom, even if I had fantasized about it for most of my life. It was one of those dualities that you just reconciled as an impossibility, you know? It felt like a fact of life that if I wasn't an aggressor in any other sociological aspect, then the love interest who took to me wouldn't be interested in me taking the aggressor role in bed. Besides that, I hadn't tried it and hadn't practiced it or anything, had only fantasized about all of it.\n\nLily didn't let me think about any of those things. No, Lily whined up against my mouth with such visceral desperation that even I couldn't have questions. It wasn't just reassuring. It was arousing as all hell. I didn't wonder things like if I was doing the wrong thing or if she liked it. She told me what to do and reacted to let me know that she loved it. And the way she was writhing on my lap between my hands where she had placed them in her hair and on her throat? She had to know I was hard because... I had never been this hard.\n\n\"Yes! Please, yes, yes, yes! Choke me harder?\"\n\nI answered her by pressing my lips back to hers... and by squeezing her throat, gasping into her kiss. Like I said, nothing makes you really ready for what it actually feels like. There was so much and I didn't want to miss a thing. This was all of the start of my fantasies that I had never expected to get to experience. For a start, she made this soft involuntary struggle in my arms while she also made this short gasping attempt to take more air. I wasn't choking her that hard, so she could absolutely do that but it was the basic, small threat of suffocation that seemed to make her do it. What was more, her whole body shivered with the reaction to it and it was fascinating.\n\nI tugged her hair where she had placed it, the lightest pain, and she whined, writhing with sexual need before she managed to get herself back under control. It made me all the more hot. You know how everyone you meet every single day is so fucking nice all the time, how it's almost infuriating because you know it has to be fucking bullshit? It's like there's this veneer between every other human following the rules of society and their animal side and you know it's there but you can't do a damn thing about it?\n\nPulling Lily's hair to make her cry out in feral desperation before she could think straight enough felt like ripping that sheet away from her and seeing that secret side of her that took the pictures she had posted and that craved to feel all the humiliating, twisted things I had seen her take part in. It was an addiction and it wasn't even like I was doing this hardcore shit, you know? I had some wild fantasies from where I had read so much dark content but, for the moment and with her whimpering in my lap, it didn't even take all of that to get me hooked on the kinky stuff. Hell, I had been hooked on it since her fucking pictures and it seemed asinine to pretend otherwise.\n\nI stroked my hand around her throat, feeling the delicate vein there that pulsed with her excitement, and felt this thrill that I hadn't actually considered before, one that realized how easy it would be to seriously harm her. That vein was right there, pumping her life's blood, right under my thumb and I could feel how it fluttered wildly. I noticed that kind of thing too. I had fantasized for so fucking long and none of it was taken for granted for me. It was the kind of moment where I adored and got lost in every last second. I pressed my thumb against the front of her throat, caressing the side to experiment, and the action made her pull away and cough, choking.\n\nI went to apologize, but I didn't even get the words out before she squealed and begged. \"Yes!\" She coughed again, staring at me. \"Please, yes! More, God, please?\"\n\nHer begging was the kind of thing that could do me in, too. \"Fuck, Lily.\" I managed to say that before I locked my lips back to hers, only because I had to express some kind of shocked pleasure, some kind of gratitude to her. She shivered and whimpered in more of her sensual desperation, twisting on my lap, drinking in my kiss. I don't think I'd ever known anything as hot as Lily's kiss. I moaned into her and then pressed my thumb again because I couldn't help it and she made it so easy.\n\nThis time, she choked and I controlled her with the hand she had placed in her hair. I was far enough gone that I held her to my lips and made her stay put and holy fucking God. It was the kind of thing that made me nervous while I was doing it even if I had seen her fetish page, but I would never regret it. She choked into my mouth, then made this hoarse squeal of ecstasy while I tasted it. Her cry of lust at that one touch was so like an inferno with its heat that I only realized after a few seconds that she was writhing on my lap harder than she had been. I held her tighter by some instinct, letting her pull away to cry out a shocked, \"Oh my God, please!\"\n\nI looked down only because I felt her touch on my thigh and watched while she clasped herself between her legs, her head tilted back and her eyes fluttered closed. She seemed so close and I remember thinking that I really liked Lily and that I wanted her to love it and I didn't want to ever really hurt her so bad, no matter how messed up I thought my fantasies were, but I had seen a little of what she liked...\n\nI pulled her hair a little harder and it worked. She cried out this sound I'd never forget, a sexual yelp, and she threw her head back so that her tits were in my face, and Lily has these fucking large tits for her size, the kind that makes you salivate with the thought of fucking them. Which was definitely the first thing I thought about while she rode her palm, while my harder jerk of her hair seemed to be enough.\n\nShe came, the sort of orgasm that wasn't mistakable for anything else, that made you look into her eyes to watch it, and it was another thing I'd never forget. It was the thing that made me pretty damned involved with Lily afterwards. \"Oh, my God.\" She whimpered it even before she managed to focus back on me. \"Oh, my God.\" She finally looked at me, her face flushed.\n\nI blushed, lowering my hand from her throat to her side. \"Are you okay? I didn't mean to be so-\"\n\nShe cut me off by throwing her arms around my neck and kissing me again, this frantic, ecstatic kiss that made me blink before I closed my eyes and hesitantly stroked her side with my thumb. But then she pulled back away and her cheeks still had these beautiful spots from adrenaline response, although her eyes were a little more tame. \"That was amazing! Like so fucking amazing!\"\n\nI grinned shyly. \"Yeah?\"\n\n\"Yes! I mean, I-!\" She seemed to have to work to focus and I was still horny, don't get me wrong, but she distracted me from even that with the sudden thought that maybe I could have even more than this. Maybe I could have even some of my darker pain thoughts. Because she asked in this tentative voice, \"Um, do you mind talking with me about the book?\" And she was clever with asking, leaving it up to me like that at just the right time. I hesitated even after what had just happened because it was just the kind of thing that I had gotten so used to hiding. It was that filthy secret that you never told, ever, especially the part I was into. We lived in a day and age where male domination just felt discouraged. I went to tell her... and it still froze in my throat, but this was Lily Lofton, the demon who could make even me comfortable. She worked more magic with a playful smile. \"You were right. It has great... world building.\"\n\nI couldn't stop the laugh, not when she was so close to me, not when she seemed to fit so well. She snuggled into my chest, making these soft little sounds, and it actually took me a second to realize that she was kissing up my collarbone, overtop my T-shirt. It just wasn't what I expected after what had happened. \"Thank you for telling me about it. Thank you for playing with me like that because I really loved it.\"\n\nI finally managed to talk with her, even if it made me feel shy. \"I did, too.\" And I hesitantly lifted my hand before I stroked her hair because I wasn't sure what I was doing. But I had read a fair few stories and there was this mood. Lily affirmed my thoughts with a nuzzle against my palm and this joyful purr of a sound that made me feel pleasure too, which was something else I didn't expect.\n\nAnd I didn't realize it then, but Lily had decided to start training me and that was how she started. That night. And it was a magical night too.\n\nBut I still would like to contend that all I did was give her a book. Orgasming in my lap is, like, nine times what that's worth in steps of who initiated everything.\n\n\u2014\u2014\u2014\u2014\n\nLily\n\nHey! It was a kinky ass book and it counts as steps when he definitely intended it as a red flag.\n\nThe next part was all me, though, that's true. I'm saying it before he can make the accusation, but I had reasons!\n\nSee, I couldn't let him just leave after that. I knew that. I knew that because then he'd get social anxiety, especially if he'd been having fantasies for a while, and we needed to be rid of that anxiety right then. I thought through a lot of things while he held me in his lap, while I nuzzled his chest, wondering how to go about it because I wanted to know more about him and what he liked, wanted to show him things if he liked the ideas. It gave me some wild thoughts right from the start, especially with how shy he was. Those ideas were fueled even more by the fact that he'd choked me when I begged.\n\nWhat if he had sadistic fantasies and an extreme masochist trained him on how to do things safely? Heheh. That seemed like a wicked combination and it also sounded like a ton of fun because then I could watch someone find out the things they liked and didn't like, watch them figure out how dark and deep they really wanted to go. Besides that, he deserved it for the sheer fact that he listened to me prattle myself out most days.\n\nI decided on where to start, then glanced up at him, \"Would you mind if I talked to you about some things?\"",
        "He pulled his head back from where he'd been cuddling me and gave me a flat look. \"Lily, I feel like you could damn well do whatever you wanted right now.\"\n\nWhich made me giggle. He had that dry tone of voice again, the one that was only made more intriguing by how gentle his eyes were, whenever he was being funny. \"Okay. One second.\" I stood up off his lap.\n\nAnd curled up on the floor at his knees instead, so that he tilted his head and stared down at me, as if taking the sight in. Let me try to explain an idea that a lot of people starting out need help with, especially if one partner is into submitting and wants to engage the other partner. Power exchange is a two way street. There are a lot of people who make the mistake of agreeing to a scene, when they're trying things out, and then they'll break the scene halfway through with a new Dom. It's the kind of thing that they just don't think about because they're not used to playing or not used to the rules, but for a sub to do it to a Dom is a cruel thing to do. You see, when you've agreed to give up control and then you break the agreement or just step out of the atmosphere, you rip the rug out from under their feet, so to speak, and it's doubly true if they're new at things. They're trying to figure you out, figure out what makes you aroused, what hurts if you're into that, what goes well with different types of erotic pain. They're figuring out commands and how you like them and what you react to and then suddenly you just break it?\n\nMost Doms I've ever met were pretty much done once you did that. They didn't want to play anymore because the game wasn't fun anymore. It just feels damned stressful after that, where they'll wonder if you're going to follow the rules or not once they're set.\n\nThat also means that if you give up a little control or if you create a small bit of power imbalance to someone who wants to be part of it, they'll take the chance. I rested my head on his knee and I started a routine that... Well, I wasn't really aware of the monster I was making with doing that actually. I was just a natural submissive and masochist and I wanted to make him more comfortable, make him happier, make him not feel alone and not feel guilty because everyone on both sides of it feels guilt or self shame, it seems. I like making people happy and I really liked him. We got along well with each other, you know? Two opposites, sure, but he never minded when I took over random things like where we sat at a restaurant, never started arguments about stupid things which was awesome. I'm really absentminded and I'll just decide those things while talking about something I'm excited about, so the formula was there. He liked me, I liked him, and he seemed like he wanted to play. I knew all kinds of games to play. So all I did was all I had to do.\n\nI just talked with him, calmly. My way of thinking was that there was a major religion centered on the idea that a snake once just talked with the first female and made a suggestion and now we're all plunged into freaking chaos, so it had to have some power. And for the first little bit, I just talked about the basics, things like domination in general, and I figured him out on a different level. I had a few months of interactions to go off of, months that gave me an understanding on subjects that made him talk more, on things that made him the most curious, and the answer to both of those was the psychology involved in anything, the mental engagement, which made absolute sense, by the way. He liked things like Neal Stephenson and theory studies.\n\n\"I can share a book with you, too,\" I remember telling him, starting nice and easy.\n\nHe was leaning forward to hold me while sitting over me because I think he really liked being that way. \"I can't claim that one is a usual one, actually. I... can mostly only do fantasy books.\"\n\nI took a break to talk about that, too, because I didn't want him to get too nervous over talking about the other pieces, over how he sat over me. I didn't want to leave him with any doubts about how I liked what he'd done in those light play ways. That first night, I just talked enough to make sure he'd be okay because I didn't want to outright shock any sensibilities. I might have gone down the masochism line pretty quickly, but even I don't just start out with shit like tit torture. Doesn't work like that. So I went slow and I started a routine of asking him to come over for more talks at nights after work. This was something that definitely took time at the beginning.\n\nEventually, I managed to get him to talk about domination. Somewhere along talking about what interested him about it, after he finally told me that too, he started petting my hair, as if it comforted him when he was discussing these ideas. It made me grin, made me nuzzle closer.\n\nPerseverance really does pay off, as it turns out. I didn't know it, but I was looking up at a masochist's goldmine. After even just that first night, I had to stop and take a breath once I was done kissing him goodbye, had to lean against my wall and whimper in a kind of pain. I was so freaking aroused just from talking about these things with someone. Most of the people I had ever met anymore already knew all of where they stood. They'd gone through that discovery or they already had someone showing them. It was this exciting thought of possibility that made it so freaking arousing, the mystery and questions. He'd liked choking me. What else did he like? What was he into? How hard did he like it? What was more, there was how amazingly submissive he was to everyone else and even with the kiss, I'd had to start that, but then there had been this excitement in his eyes. I think if I tried to claim innocence and say that I just wanted to help him out, I'd be a fucking liar. That excitement I had seen meant that I was being absolutely selfish and talking to him with the intent of getting him to play. With me. It was just a look that made me grin, made me have butterflies again. It was something about the contrast again, I guessed, something about the thought of light signs of sadism in someone quiet. It was like...\n\nYou know how epic fantasies have this archetype of a quiet antihero or hero? They keep to themselves usually and they don't talk a lot and when they get in trouble for whatever plot reason, they bow their head and they go with whatever someone else decides because they don't see a reason to reach for any violence and they prefer the calm. But then something happens and they have a reason and it makes that moment of their violence all the more of a \"holy shit!\" moment. Even when it's over the character might be back to calm and patience, but now you know as the reader and you know what they could do. It was like that!\n\nWow, I thought my friend Deirdre was bad about the romantic daydreams. I was the eccentric who was so cynical that I came across as happy because when I expected the worst of everything, then every event became a nice surprise. But then when I looked in the mirror after that first night... It might sound crazy, but I looked different. I was flushed from how horny I was, from excitement and eagerness. What was more, I didn't want to go play and fix my little arousal problem. I really wanted to stay that way. And that was the thought that made me realize something.\n\nShit. Everyone always said my playful energy and outgoing weirdness was going to come back to bite me one day and I thought that they might have been right. Because I thought I was infatuated.\n\n\u2014\u2014\u2014\u2014\n\nAlex\n\nA... masochist's goldmine? Really? Well... Thanks. I think? Also, she's damn right she was all that part. That was the type of corruptive, slow work from a fantasy book, since she brought the analogy up!\n\nThere was something intrinsically connected with my dates with Lily, this sense of... It's hard to explain, but there were a couple of things. For a start, I hadn't confessed this or had anyone to share it with all my life and it wasn't something I had ever missed because, well, that was par for the course in my life. I just didn't talk much unless someone directly asked first and made it clear what they wanted. That went for everything, even things like books, so it for damn sure went for things like what I sexually liked. So when I finally started to answer Lily, it was... holy shit, it was this amazing thing. I wanted to talk with her about them and I had this gratitude that I could. There were a few reasons why the formula seemed to work and the first was that Lily wasn't awkward with me because she was, obviously, high up on her own submissive tendencies. She understood and that was more than enough for her to work with. She got what it was like to wonder if you were going to be judged and I learned that was because she had been judged for it, and harshly. She got what it was like to look for the right words and she didn't let me stagger for very long. One time, I hesitated and she grinned up at me, sitting at my knees.\n\n\"Want to hear an awful story? One time, I got this new phone the night before one of my older cousins flew in to visit the family for the holidays. He's a missionary in Africa, you see. Well, the night before, I had transferred all my photos from my laptop to my phone and just didn't have the time to go through and sort the photos. While he was visiting, my dad told me to show my cousin this picture I had and, I didn't know this, but apparently this phone had a cool little slide show feature. You tilted it and-\" She cut off, laughing at the look on my face.\n\n\"What did it land on?\"\n\nShe grinned, then actually blushed. \"Don't judge me, but straight up tit torture.\"\n\n\"Lily, that's awful!\"\n\nBut she was laughing at my knees, so hard she was choking on it. \"He said he wasn't into that. I think I broke a missionary.\"\n\nI was stroking her hair and that was the second thing. She'd have me sit in her chair and I leaned forward while she curled up on the floor. And it didn't feel awkward either, is the thing. You know how most everything in life seems good until you go to start to try it and then anxiety ruins everything? Lily made it so easy. She didn't let me reach the anxiety and after the third night together, I sat without her guiding me and leaned forward and it was only then that I paused with the realization of what I was doing. But Lily already had her head against my knee. She was already nuzzling me.\n\nOne of the things I said she was like was Rikki-Tikki-Tavi and it took a few weeks of these talks before I realized that sadists were her snakes. The cute little mongoose in that story was death to snakes. This cute little mongoose wasn't dangerous because of how well she could tussle or how well she could overpower, though. No, this one was dangerous because she was addictive to talk to.\n\nYou see, Lily Lofton had this superpower where she could make anything sound like a romantic intimacy. It took her all of a few talks to realize I liked things more along the sadism and humiliation lines and she started talking about those. I didn't ever want her to stop talking about them, either. There's one conversation that I'd never forget because it just encompassed who Lily was so totally.\n\nShe was talking about needle play. You see, after she'd brought up the pictures on her phone and after we'd talked a few more times, I'd finally gotten up the nerve to ask her if she had those pictures because that was her thing. \"I...\" She hesitated. \"Okay, tit for tat. I have a lot of things, really, but it's definitely... part of one.\" She frowned, trying to think of her words, while I felt a little guilty because I knew these answers. I had seen her pictures and she didn't know that. But the guilt was a little overwhelmed by the fact that I just wanted her to keep speaking. It excited me to hear her talk about these things and it gave me these thrills. Not just arousal, although that was definitely part of it. \"Um. I like the rush, you know? Like the nail thing. For a start, the nails aren't actually nails. They're just needles that are made to look barbaric, almost piercing needles even.\"\n\n\"Really?\" I had always thought they were bigger. The hooks used in torture suspension were fucking nightmarish in size.\n\n\"Yeah!\" She grinned up at me and she was so excited, like we were talking about a movie and not goddamn tit torture. Her blush was even gone. I'm telling you that I still contend Lily was sent to me by the devil. \"It's not about them being a larger gauge. The smaller size works for the purpose enough because it's still that piercing pain, still a point that you have to watch when it's happening, you know? And that's the real purpose. The fear and the conflict. You see, you get this rush with the pain, this awesome giddiness, but you really don't want to go through the pain to reach it... but you do, though. It's the reaction, the self struggle, and that rising choke of terror. And then it hits and it's like a sudden burst of release.\"\n\nShe was torture with these conversations. I had fantasized so much and I had seen those pictures of hers, so I could imagine it on her face. It was even worse with her at my knees, looking up at me. I'd stroke her hair and stare down into her blue eyes and I could easily see those gazes that had always been hidden in her pictures, ones of excited fear, ones of anticipation, ones where the pain hit and her eyes watered, ones where she stared up in pleading. I don't know what those moments made my face look like, but I know she always seemed to know when she could take advantage of them.\n\nShe'd lift up and meet me for a kiss and she always made this soft little whimper of a sound that made me thrill. She had taught me what that noise meant from her, though not in words. Of course, the first time I still hesitated and I was still a little tentative when I touched her throat. But then, Lily gave me a louder, begging whine when I did and it was the kind of obvious sign that definitely meant \"green light\". I choked her, just a little. Each time made me feel a little more wild, too, because each time was this tease, especially with the conversations we were having. I pulled her hair and I learned really fast what kind of choking and hair pulling turned Lily on the most. It felt a little like getting drunk off her kiss, sadism drunk. I had all these images running through my head, this blend of her pictures and how she had stopped posting any of them at all since the night we started talking. It was how I knew those things about her, how I'd read all these stories and had all these ideas in my head.\n\nSo that's how it started and, for a while, it even stayed that way. Lily was so careful, so playful. She took her time, too, making sure I didn't feel uncomfortable with whatever we talked about, making sure she didn't have me talk about too much too fast. Even later, I loved to imagine her as my wicked little demon, working to draw me out. Of course, demons don't stay in a stasis of conversation. Lily had learned that the things that made me most embarrassed to talk about were fantasies. I could talk the philosophy with her easily, especially when she had me desensitized to feelings of shyness, which took a shorter time than you might expect. But this devious little demon was weaving her magic for an end goal and she took the first chance she saw. What was more, she didn't just lightly addict me. She unlocked the goddamned flood gates.\n\n\u2014\u2014\u2014\u2014\n\nWe were talking about ropes and rope bondage and I eventually got up the nerve to say the words on my mind. \"No offense, Lily, but that sounds like it's pointless when you said there's the straps for just about everything.\" Because I'd love to have her tethered, but the rope thing? God, have you seen some of those videos? It can take a freaking age.\n\nShe grinned up at me, getting this wicked look in her eyes that made me pause. It was impossible to have these conversations with Lily and not learn to read her, figure out her mannerisms and expressions. That look made me wary. \"I don't think you're thinking of it quite right. Boring in videos, sure.\" She teased a hand up my thigh and her voice was husky with this sexual purr that made me burn a little more. \"But think of real life. You'd get to tie each knot and wrap each layer of rope and, with every one, you'd know that your victim was getting more and more helpless. They'd be more and more at your mercy, so you could do whatever you wanted.\"\n\nShe stroked her hands higher up my thighs, on her knees. \"Lily...\"\n\nShe giggled. \"It'd be this teasing build.\" She massaged back around to the outside of my legs and all I could think of was how we'd been teasing each other for weeks. She had started texting me too and even that was a tease, although she had yet to crossover our conversations with messages. I thought this was intentional on her part, keeping these conversations out loud, building this tension. She stroked back down to my knees. \"And you could make it last as long as you'd like, too, because you'd be the one making the rules. You'd know that you were suffering the tease, but your playmate would be suffering way more because they wouldn't know what you wanted to do afterwards. They'd just be trapped in anticipation build and waiting.\" All I could see was Lily, forced to wait for that curl of my hand around her throat. I had seen how she reacted to that enough to know how much she loved it, how it made her wild. The thought of her unable to lift up for it, of her with her wrists wrapped in coils of rope behind her made me...\n\n\"Okay, Lily. I get it.\" My voice was hoarse. Weeks. We'd been just talking and kissing and teasing for weeks.\n\n\"But just to make sure, you know, you'd be able to decide when you'd made them wait enough and then you could...\"\n\nI hissed out a breath when she finally brushed my cock over my jeans. Her touch was so light and gentle and God, for weeks. She pressed her palm, just hard enough to be enough pleasure through the denim and my head fell back, while I tried to think straight. Instead, I just remembered those pictures of Lily under two Dommes, with a funnel gag and cum being poured down it. When I looked back down, she was smiling wickedly and she pressed her lips to my jeans while I watched her kiss hard enough for me to feel it. I threaded my fingers through her hair and she lifted her head with a moan of her own.\n\nAnd I knew what she wanted and liked. I hadn't done this with her before, but we had had some great make out sessions where I knew what that tilt of her head meant. I hesitated even so, but then I tightened my hands in her hair.\n\nI used my hold to press her back down so that she made this cry of a hot sound. \"Christ,\" I whispered. It was good.\n\nIt was so damned good. She wasn't even blowing me, but I could have done just that for a long fucking time, sexual pain of need or not. I lifted her head, then forced her back down in a blowing motion, just to see it. She moved with my touch too, bowing so easily. She made these low whining sounds of desire that made me hotter than hell and I didn't wonder if I was doing the right thing. Lily had been so careful with how she talked with me and, in a twist that made me horny, she'd been the one to train me. I watched her work as I guided her and I realized something else. I didn't have a particularly dominating demeanor.\n\nI didn't need it. It was definitely enough that it turned me on to see her in even that mild form of degradation. Something about it flat did it for me, something about the fact that she was just made to do the motion because it was a turn on to humiliate her. It made me think of her being reminded that even when the hole in her face wasn't being used, it was still just another hole to fuck.\n\n\"Stop stroking me.\" I said it in another soft voice and then thrilled when she obeyed me. The truth was I didn't mean to actually say it as a command. I said it more from the fact that I was getting too turned on too quickly and didn't want it to be over, but when I wasn't thinking about it, it came out as a command. It was some kind of magical addiction when she obeyed, when she placed her hands on my thighs and let me just control her head.",
        "When she breathed out a soft, \"Yes, sir,\" and it sank in that I had had her at my knees all this time, how I had stroked her hair.\n\nI leaned back so that I could better make her \"throatfuck\" me, loving the sight. Everything about it was sensual in those ways you wouldn't expect. Her hair parted between my fingers in this neat way and her shoulders went tense with each time of my lowering her. Her breathing was softly erratic in these little whimpers that made me shiver. I worked her face until I couldn't think straight anymore.\n\nLily seemed to be able to tell, too. She paused to look up at me while I stared through a haze of pure need and desire, still a little unsure of these things. Her lips parted, though, and I realized she wasn't doing much better than I was. And Lily got this pink blush across her cheeks when she was so turned on, I'd already noticed. It was the kind of thing that would be adorable if it wasn't so damn sexy. She shook her hair back and hesitated, as if trying to decide something.\n\nBut then she undid my jeans, eagerly, while I helped her. She paused only one more time and that was to ask, \"Can I show you something? One of the fantasies you told me so I can show you how good it feels?\"\n\nI laughed a little breathlessly, still not thinking straight. \"Lily, if you think I could say no to you showing me anything right now, you're crazy.\"\n\nShe laughed along with me and it was that sexually shy kind of laugh that you have as a teenager when figuring out your first kiss together. It was somehow slightly innocent, while being definitely not. Hell, I had been married and divorced and felt like I was somehow new to everything all over again, but not in the awkward ways. Only in all the best ways. Lily helped me stand up and took her shirt off, so I got to see her in her lacy heart bra for the first time. And goddammit I'd known she had really great tits, but... She paused when I stroked her, when I gently brushed my thumbs over the top of her breasts. When I looked back up at her, she was smiling this wicked, delighted little grin and I felt this jolt.\n\nBecause she knew I was pleased and she was reacting to it. There was something heady about it, something wicked and sinful and still with just that right spin of innocence. She bit her lip mischievously and reached behind her to undo her bra, taking her time to tease me with it, so that I had to smile. \"Maybe I should just keep it on instead-\"\n\nIt was the perfect push. I tugged off her bra and there was a fair bit of assertiveness in the gesture, so that she giggled and then broke off with a moan when I stroked my thumb over her nipple. \"That was just plain mean and manipulative,\" I answered playfully.\n\nShe nipped my jaw. \"I'm going to make it up to you, I promise.\"\n\nI looked back down, then rolled her nipples between my thumbs and forefingers. \"Oh, there's nothing to make up.\"\n\nIn answer, she whimpered and then seemed to say the next part in an involuntary exhale. \"Oh, God, it's so good.\" I hesitated, but then I squeezed my fingers a little tighter. \"Oh, please!\" Her voice rose again like it did when she was excited, when I upped any sensation or gave her the thrill of threat. It was the kind of thing that made me realize something else. I was starting to really want to hurt Lily, to actually do it and not just because I had fantasized about it. It was because of those animated reactions of hers, those small things that made it so very clear that she wanted me to hurt her.\n\nI hesitated again... and then I took a breath and pinched my nails into her nipples, digging them into the flesh. My eyes went wide with how it felt to press like that into such a tender area because it didn't even feel so very different, didn't even feel kind of violent. But it was the knowledge of what I was doing. And the fact that Lily arched, her tits lifting up and jutting out even farther while she made this eager, shocked sound. \"Oh, it's so good!\"\n\n\"God, Lily, you're amazing.\" I felt electrified. It was something about the way she reacted to every little touch, every squeeze, as if I could so easily control her with my fingers on her nipples. She was still arched to me too and she stared up at me with these wide eyes.\n\nI was hesitant again, but that time it was a lot shorter. I had another image, another fantasy going through my mind and it was one that I could do a piece of, a small enough part that it wasn't so bad. I took both of her nipples in between my thumbs and forefingers again and then I tugged on first one, then the other, then back again. I thought of one of those darker fantasies. Lily was whimpering, whining, as if she was in pain with how aroused I was making her and it made me smile.\n\nI really liked the thought of her in that kind of pain. I wondered what she'd do for an orgasm when she was like that, wondered how far she'd degrade herself. \"Tell me what you're thinking? Please!\"\n\nShe stared up at me and I bit my lip. I couldn't stop those pauses yet, not even for that when I'd been talking to her, but it was getting a lot easier. \"I'm imagining how you would look with a cowbell.\" Her eyes went wide and her head fell back and she gave me this sound that was... wild. Uncontrolled. Animal. Without pretenses.\n\n\"Harder?\" She whispered it like a plea. \"Please?\" I did it and I finally wasn't shy about it that time. Instead, I was smiling, staring down at her nipples between my fingers, pumping them in alternating pulls, thinking of filthier mental images. \"Tell me more, please! Please?\"\n\nI raised my eyes back to her face and realized she was close to fucking orgasm off this. And I knew how to send her over the edge. It was one of those things like knowing to control her by her hair the last time. I just knew because it was impossible to consider and talk about these things without having some kind of intimacy where I noticed her reactions. So I knew what to do and Lily didn't let me have any room for doubt. I answered her softly, even so, trying to make the words gentle for what they were. \"I'm thinking of you spritzing milk into a bowl and making you drink it.\"\n\nShe yelped, throwing her arms around my neck while I could smell her sex. What was more, she writhed against me, her face in my shoulder, and she was grinding herself against my side, riding out her bliss. She was shivering against me too, in this weak little way that made me want to do worse things so I could hold her in other, more disorienting moments. Because I really loved Lily's whimpering breath against my neck, her soft shocked shivers.\n\nWhen she pulled back, her eyes were still glazed and she watched me while I was pent up with desire. I didn't expect what she did next, if I'm being honest with you. I just didn't think to expect it. If it had ended like that and if that was the thing she had wanted to show me, then that would have still been the perfect fucking night. She just made it better and Lily, very evidently, was not a one and done kind of person. She shimmied against me even if her face had that glow of satisfaction from an orgasm. \"I wanted to show you something. Favor return.\"\n\nI laughed. \"Oh, yeah?\"\n\n\"Yeah.\" But she already had my total attention because she sat down in her chair and got oil out of her side table, which she stroked on her tits while I watched, my mouth going dry. I swallowed and she coated down the valley between her breasts until it had a silky, enticing shine. \"Lily, I-\"\n\nYou see, she had gotten some basic fantasies from me. She hadn't pressed me for many of the darker ones, having been sweet and patient with her questions. Apparently, she'd decided she had enough of being patient with finding out more and she'd decided to press me with the fantasies she already knew.\n\nIt was working, especially when I could still smell her arousal from her orgasm, especially after she had pressed against my side while I told her I was imagining milking her like a cow. She tugged me closer to her, smiling up at me with this look in her eyes. Like I said, a mongoose was death to a snake. She used the oil to lubricate me, where I stood over her at perfect height while she sat in her chair and I couldn't look away from her tits, from the way they glistened.\n\nLily sat on the edge of the chair, then knelt up a little instead for better height, so she could place my cock against her chest. And then she shook her hair back and clasped her breasts, pressing them together around me.\n\n\"Lily...\" I loved her name, loved it. An innocent flower name for a gifted masochist. She made a low mewl of heated desire and lifted up and down, but she didn't have to do it very much. This was the kind of fantasy that didn't let me think about much either and she knew it. I covered her hands with mine, pressing them closer to make the feeling tighter, and lifted up to fuck her for myself. It made me growl a little, the sight of it. It was one of those things where the visual and the mental aspect turned me on so damn much, especially after watching her orgasm to my lactation fantasies.\n\nThis time, she was the one who said it out loud. \"All I can think of is milk leaking from my tits while you do this now.\" My lips parted and the bubble of pleasure I felt turned almost painful in pressure. I moved my hands, still squeezing, so I could thumb her nipples, making her moan. \"It's so sensitive after you toyed with them like that.\" I had to take deep breaths, fucking her tits slower, stroking myself up to almost touch her chin. Her eyes sparked with heat and need and then she whispered another thing, as if testing it. \"I like thinking of you calling me your little cow slut.\"\n\n\"Jesus fuck, Lily.\" I choked it out when the bubble of pleasure finally burst from the pressure and I couldn't look away from it when I came, when she arched with a soft delighted cry. Cum pumped out onto her collarbone, around her throat, and I felt something feral at the way it looked. I thought of the way she'd looked with all those degradations written on her in black marker and wanted her to wear things like that cum under her clothes, too.\n\nShe stared up at me with this shy little smile, while I still felt numb with the shock of what she'd let me do, of how it had felt to cross the barrier between fantasy and reality. \"I like it when you tell me things,\" she said with this sly little smile. \"I like showing them to you if I can or thinking of close proximities to the things that aren't realistic. Your fantasies are great.\"\n\nThat did it. She broke me.\n\n\"I have a username on the fetish site where you post your pictures because someone mentioned it on your Morgan Le Pharaoh page,\" I finally answered. She froze and then a grin of pure joy broke across her face. \"I like everything you took a picture of. The nails, the needles, the latex, the cat stuff, the cum drinking. You know when you asked me to go out to eat with you that day after you posted the pictures of the writing all over your body?\" She nodded eagerly. \"I masturbated when I got home because I was thinking of you sitting across from me with those kinds of words on your body.\"\n\nI'd been scared she'd be angry or freaked out or something. I don't know. Look, I know that, logically, she probably wouldn't be shocked by much because of what all she was into, knew that she wouldn't blame anyone for seeing those pictures, but social anxiety doesn't shut up and it considers every possible bad outcome. But after that, in the wake of what she'd done? I finally just said it. And she didn't give me any of the bad possible reactions.\n\nHer voice was excited and she said, \"I have a permanent marker in the kitchen and the shorter island chairs are probably the perfect height so you can fuck my tits again.\"\n\n\"I really want to fucking do that.\"\n\nHer laugh was almost delirious and she grabbed my hand, hurriedly trying to kick off her jeans so that I fell over her and kissed her instead, trying to help her get naked while she got distracted and yanked at my shirt, but she didn't seem to want to stop kissing me long enough to get it off. She whined when I curled my hand around her throat and I laughed in this giddy desire because I knew how to do it, how she loved it. We were still like two teenagers so that she was falling when trying to guide me back to her kitchen, her lips locked to mine. I was still laughing when I managed to get her on her island chair, when she was nipping up along my jaw, when I pulled the cap off the marker with my teeth and placed it on the tabletop. I laughed again when she writhed, watching me hold the marker with that excitement in her eyes. \"Hold still,\" I finally had to tell her. \"You're going to mess up my writing 'fucktoy' across your tits.\"\n\n\"Oh God, please!\" She arched on the chair, whimpering up at me while I grinned, thrilled from how hot she was getting off of all of this. She really loved it. She stared down at my writing the word with this look that was molten with desire, the kind only Lily could make look quite so wide eyed and innocent. Her lips were open while she watched, her eyes glazed over. I glanced up at her again while I slowly finished up the 'y', meeting her stare for this moment that made me fix it in memory. Her eyes danced with happiness and her legs were spread, her pussy dripping with how wet she was from this.\n\nWould you call me crazy if I said it might have been one of the most intimate moments of my life? She was excited like I was excited, horny like I was horny, playful while I was discovering the way fantasies could happen in this wild way. I kissed her again and she moaned into it so that I got to feel her desperation on my tongue again. \"Want me to choke you out and call you worse names in marker?\" I finally asked when she let me draw back.\n\n\"That sounds like the best idea I've ever heard.\"\n\nI choked on more laughter again, clasping my hand around her throat so that she gasped, delighting to the feel of it when she couldn't breathe and the slight panic sank in. I held her still and wrote \"cum pipe\" over her pussy. And then I kept going while Lily drove me wild.\n\n\u2014\u2014\u2014\u2014\n\nLily\n\nArguably, whenever I finally broke through to him, I didn't even have to do much work after that. Well, besides teaching, I mean! But I'm just saying. He was into it.\n\nI woke up feeling like I was on cloud nine. Alex had had to go home because he needed things like a change of clothes and neither of us had expected the night. God, he hadn't left until late, though, and he'd still been letting me kiss him these messy kisses. \"I have to tell you goodbye!\" I\u2019d said when he had his hand on the doorknob.\n\nIt was somewhere around five minutes into my goodbye making out that he'd forced me back with his hand in my hair, his eyes alive. \"I don't think you know what that word means.\"\n\n\"Five more minutes?\"\n\n\"Lily!\"\n\n\"So you can try slapping my face?\"\n\nI had squealed in laughter when he froze and then grabbed me. \"Okay, five more minutes.\"\n\nIt had been like 15 more minutes and he'd done that thing he did, one of my favorite things, where he hesitated before he struck his palm against my cheek, careful and horny all at once with his slap. He moaned when I cried out into his kiss, then did it again so that I arched, nuzzling him in ecstasy and playfulness. The third slap was even slightly harder so that my cries turned all the louder.\n\n\"Lily, I'm one of those people who are terrible at existence if I don't get enough sleep.\"\n\nThat was the only thing that worked to make me let him go. Otherwise, I would have held him hostage and had him slap me more because I loved it and I loved how much he loved it, too. His mild gazes and his calm pacifism got this elation when he tried these things and then there was the way he'd just thrown caution to the wind and told me that he'd already seen all the pictures. I wondered what else he'd seen, what else he already knew. I was already thinking of ways to get him talking more because he had said he liked the really twisted kinds of play and then followed it up with how he liked my tit nailing pictures. Those were hardcore pictures, too! What taglines did he like for his story searches? Did he go down the drugging ones, the humiliation ones?\n\nI finished my shower, feeling excited and horny and happy, then giggled when I looked in the mirror and the marker writing was still there, since that marker would take a week to wash off. The words 'pain slut' were across my thighs. 'Fuckwhore' was across my torso and that one made me bite my forefinger. He'd had me laid out on my floor and had been sucking one nipple in between writing the letters, squeezing my tits so that I moaned. \"Bite me,\" I had whimpered.\n\nHe had done it, chuckling wickedly while he did.\n\nIt was amazing. He was amazing. I had to make myself get dressed for work, laughing at the thought of the words underneath my shirt, my slacks. I thought of my massive toy chest in my closet and all the fun things I had in it, distracting myself with thoughts of what to do next and how to go about it. Thank God most of my advertising work was on a coast for the moment and just needed monitoring because I was not entirely present with ad work that morning and I don't like being a bad employee. I had made it pretty high up in the ranks of my job by being good and likable and I wanted to keep it that way.\n\nBut when you're infatuated, things start to be like so many distractions and all I could think of was Alex. I was planning things and being manipulative and wily about it too, but not in the bad ways. I wanted to teach him, but I wanted to go about it the right way, you see, and I knew what it was like to be shy. I knew how easily things could suddenly seem awkward when you were worried about messing up or not doing things right and I didn't want him to have a bad experience with any of it.\n\nSo, rule number one was that if you gave power up to someone who wanted it and you stuck with it and set easy rules to begin with, then you created a decent starting point. Rule number two, I decided, was definitely twofold. It involved reassurance and going nice and easy.\n\nLet me explain. For guys especially, there was a stigma on being in a position of power. It wasn't the kind of thing they were supposed to like over a female and they were told it was bad. That was just for taking power positions, so sadism like the kind Alex seemed inclined to? That was a hard thing to get through and it was all the more awful by the fact that he wasn't a sociopath because then he was forced to care. Add that to how he was shy and submissive in every other aspect? Jesus, that was a recipe for self torment.\n\nBut you want to know a secret? Guys have a stigma for wanting to submit, too. They're told they're not supposed to like that and girls are the same. If you like other girls, then some judgmental meme on the internet has made you think you're a slut or a bitch. If you like dominating in bed, then you're cold or not feminine enough half the time and that's the good parts. If you like Master/slave fantasies, it doesn\u2019t get any better, either, because then you\u2019re thought to be dependent and helpless. What I'm saying is that if it has to do with sex and kink and it feels good to a person, then they can find a million different reasons and internet sayings and ingrained judgment to shame themselves for liking it. But the truth is that everyone feels the same insecurity, anyone who judges is always living in a glass house of some kind anyway, the world is chaos, no one knows what's actually happening, and there's no rhyme or reason to anything.\n\nLook, I work in advertising and I'm so good at it because I'm a cynic who thinks the only thing you can rely on is human greed. I've seen what makes people want to buy stuff.\n\nSo I didn't want Alex to have doubts. I didn't want to leave him wondering, like someone leaving you hanging with a Facebook message. The day after our play spree, I went down to visit him for lunch with the intention of keeping him company and talking about more books.",
        "I learned something about myself that day, a fetish I had never known I had. Hell, it was a fetish I didn't even know a name for. When I went to get him, he was talking to his boss.\n\nMore accurately, he was nodding along with what his boss was telling him to do, his head slightly lowered in that soft signal of submission. People never realize the cues they give off, but he gave off every indicator of bowed respect, polite and calm.\n\nMy tits felt heavy when all I could think of was how he'd written \"fucktoy\" on them after he fucked them... and then he'd fucked them again afterwards.\n\n\"Thank you,\" he said in that quiet voice, running a hand through his hair while he looked down thoughtfully, and then he turned around and met my eyes and his expression lightened. \"Hey, Lily.\"\n\nIn the triangle between my legs was where he'd written \"cum pipe\" and thinking of it made my pussy ache for a touch, for his fingers. \"Um. Hi, Alex.\" God, my voice sounded lower and sultry and-\n\nHorny. My voice sounded fucking horny because I felt like I needed to masturbate right then. He hugged me, going through an easy routine we had started, an easy routine I had started because he didn't take the lead for anything. He waited for me to take it and even then he was soft with his motions, chaste with a submissive respect when we were in public.\n\nHe had milked me and told me how he fantasized about me wearing a cow bell, making me spritz into a bowl so he could make me drink it, and when he'd said it his touch had tightened with the potential for violence. Holy fucking shit, I was in pain with my need.\n\nI meant to reassure him and I guess, in a way, I definitely did. All I could think was how he kept his head lowered, how he stayed quiet and out of the way by nature, and then how he could turn around and have that sadism sparking his eyes. The words just came from me in a rush. \"I was going to ask if it's okay with you if I tell HR we're dating because you're supposed to tell that kind of thing, not that it matters so much with different departments, but as a just in case.\"\n\nHe froze and drew back to look down at me, his eyes wide, but he had this involuntary little smile too, one that made me shiver. I was starting to learn something about those shy smiles and how some of them were just a little different than others, a little more hidden. \"I would like that, Lily.\"\n\n\"Tell me what you're thinking. Please?\" I mouthed the last word again and he bit his lip, that hesitation that I loved.\n\nHe drew me to the side before he answered. \"I'm thinking how I just realized that you're technically a lot higher up the rank than I am.\"\n\nHe met my eyes and it sank in what he meant, what kind of fetishes he must have been thinking about. It was a stretch because it was totally different departments and my office had a lot more of a ladder, but technically I was higher up. Which meant he was thinking of me being his boss even if I wasn't actually.\n\nBecause he was thinking that he'd written \"cum drinking fuck doll\" on my back. \"I can't have lunch with you right now because I'll do something that will get us both in trouble, so will you come back over again tonight instead?\"\n\nHe grinned, but his eyes were apologetic, too. \"I actually can't this time. I was hired for a night job and usually it doesn't matter, but this one is a little farther away.\"\n\nIt was about that time that I realized I had an addiction because, for a wild moment, I wondered if he'd want company for something like that and then thought about how crazy clingy I was being. I even went so far as saying, \"Would-\" before I managed to think through being an idiot. \"That makes sense, though! I was just being... I was not thinking straight.\"\n\nHe laughed and it was low. \"I'm not judging.\" But then he watched me, his eyes considering while he seemed to think through something until he finally asked, \"You know, I can take someone with me for help since it's an office after hours that needs a system fix, if-?\"\n\n\"Yes, please.\"\n\nHis eyes lit up and then I had to leave him. I went up to my floor to the bathroom instead of getting anything to eat, so I could masturbate. I imagined actually being his boss while he obeyed me when I commanded him to do something, while he looked down in polite, submissive behavior and obeyed whatever I led. I imagined telling him to do random other things and then I imagined him coming to my office after hours and staring at me, his face changing to that more curious and sadistic nature I knew it could have.\n\nI fantasized about his hand around my throat again while he fucked me, while my tits still said \"fucktoy\", while he told me he'd spent all day thinking about this moment because he knew I could play at being his boss, but I was really just a filthy, horny cow slut. At the last moment, on an impulse, I got my phone out and videoed the last bit, capturing where I fingered myself so damn hard that it was audible with how wet I was. And I couldn't stop the soft whimper when I orgasmed.\n\nWhen I went back and watched it, it made me blush. The camera angle had captured my insides and I was so wet that the white of cum stood out just that much against my pussy. I saved the video but I was still too shy to send it, at least for the moment.\n\nAnd when I met up with him after work, I learned something else about dating that I had forgotten. You discover a lot of new hobbies when you start dating.\n\n\u2014\u2014\u2014\u2014\n\nAlex\n\nThat's such bullshit. Teaching absolutely counts as steps forward.\n\nLily was... God, there weren't words. She was amazing, but I'd never dream of calling her an angel. It'd be an insult. The night she came with me on one of my side jobs was yet another night where I felt bemusement. Who the hell would ever want to come with someone for a system fix at night? It just seemed like the kind of thing, to me, that wasn't interesting and could never be made so. Except, something interesting actually did come of it, something that affected the dynamic of things in a way I wouldn't have considered.\n\nFor a start, Lily made it entertaining with how engaged she was with her questions and you know how you can tell when someone is just humoring your hobbies? Like, you can just sense when they don't actually fucking care and they're just trying to be a good person. Lily wasn't like that. Lily was definitely interested.\n\n\"You said you mostly do coding, right? How did you end up in IT with us?\"\n\nI had to laugh and when I answered her, it was impossible to not feel at ease after the things she'd started getting me into. I was as shy as could be and yet, even that level of shy has to dispense with some nerves when she was leaning against my side and I had my hand easily around her waist, where she'd placed it. And not far from that hand, on her thighs, were the words \"pain slut\" in marker. So I talked. I told her how I had started out in QA testing before I'd realized how much of a nightmare it was. I told her how I'd quickly switched to IT in our building when the job security, benefits, and all the rest were still on par. Once again, we talked and it was easy. I think, in hindsight, that was always Lily's real magic. Conversation. She was so good at talking through everything. That night she spoke with me about coding and that might not sound like an important event, but here's why it was.\n\nShe asked me to teach her some of it and the way to the office I needed to get to was so long that I did, right there. You can feasibly learn most general programming languages off of free apps or websites. I started with an app, quietly telling her the basics and teaching her. She asked questions and...\n\nAnd I had an image of her sitting at my knees, stroking my thighs while she did these things instead. The picture just fit with the thought of teaching her something that I knew.\n\nLittle ties. We didn't go to her apartment that night, instead saying goodbye to go our separate ways, but a new thread had been made, one of those almost unnoticeable ones that you never expect. It was the summation of all kinds of little things again, much like our conversations before and how eventually one had crossed the threshold. The next night Lily asked me again to go to her place and I did. We talked about hard bondage and why it was so arousing. She asked me softest questions again, sitting at my knees and I got distracted with the image and thought of how I'd been teaching her the night before, distracted enough that I was just talking at one point.\n\n\"For me, I think it's the humiliation of it. Okay, so like, I like the reactions most. The fear, the shock when the pain hits, that kind of thing. Even in the stories, no matter how unrealistic, my favorite part is the horror reaction of a twisted degradation. Like clamps, for instance. I hate it when people don't describe clamps very well because there's some videos and stories that show and describe it so well. I remember one where the Dom taunted his sub with clipping the clamps shut, only to not do it, while she was yelping in fear the whole time. And she was restrained, too. So I think the thought of heavy bondage limiting those reactions just...\"\n\nI trailed off because that was where I realized quite what I was saying. That's how good she was at sedating a snake. She was magical, evilly so. She calmed me with thoughts of her at my knees while I taught her coding, with innocuous little habits, and I realized that I was stroking her hair again and she was massaging me with this servile little nuzzle. \"Makes you...?\" She prompted me gently, respectfully.\n\nI shook my head, blushing, aroused by this and those feelings of guilt came back when I knew what I was trying to say. I liked heavy bondage because it made Lily look like a rubber fuck doll in her pictures, a toy I could use and debase and I got horny off thinking of how those reactions made me aroused. Because if I took them away from her and reduced her to that, then it felt twistedly fucked up and sadistic as hell to consider. Lily leaned up and kissed me, her eyes dancing. \"One second.\"\n\nShe stood and dashed off while I stared at my hands and tried to reconcile how nice Lily was with those kinds of fantasies when every one of them were starting to star her specifically. It made me run a hand through my hair where I wondered, for the millionth time, what the hell was wrong with me.\n\nBut then Lily came back and she was smiling with wicked mischief. She tugged her shirt off while she walked back so that she got my attention because God, I loved Lily's tits. The sight of them with the marker words was all the better and she'd been wearing this office skirt for the day with these heels, which she left on. \"You talk about clamps a lot.\"\n\nI adjusted when she snuggled in my lap, cradling her, and I had to smile with how Lily just seemed to know when she needed to switch her style. \"I don't know how they feel, but I know some stories describe some of them as... awful. They make it sound intense.\"\n\nShe curled closer, eyes light with play. \"Want to find out?\" She raised her hand and let the long, silver chain fall from it while I shifted, blood racing. She grinned at the look on my face and lifted two of the clamps... so that another fell from their intersection in a Y shape. \"These are really kind of awful, too. Well, I mean there's clover clamps, but this one is fun because the teeth are jagged and they're jagged in all three clamps, you know?\"\n\nWhen I held out my hand, she placed the chain in it and it made me shiver. There was something inspiring about the cold metal, how evilly it shined. It just looked perfectly harsh for the kind of atmosphere I would die for. Lily shifted and tugged off her bra while I watched. \"It hurts worse if you tease them beforehand, too. You know, if you did something like milked them.\"\n\nI was definitely distracted from whatever thoughts I had been having before then. Lily didn't let me find my way back to remember those either. She tugged the clamps chain from my hands and guided my fingers, smiling up at me while I thought about filthy fantasies. She covered my fingers with hers and then closed her eyes, sighing when she worked our hands in that motion that turned me on, until she didn't have to cover mine anymore.\n\nI teased her on my own, watching the way her tits tugged with every motion, feeling hot off the degrading thoughts alone. Lily lifted and whimpered, shifted and made soft little gasping sounds. I could smell her again too and it made it better. \"When they're red and hard with blood flow like that is when it's best... or worse.\" Her voice was breathless when she spoke and I realized it wasn't just from arousal.\n\nIt was from anticipation as well. My blood raced frantically when it sank in that she had to kind of torture herself in order to teach me these things. She had to ask for each one and tell me when and how to do it to make it worse and she knew that. It gave her a fear thrill and I got to see it in her eyes, got to feel that connection that the stories always talked about. She was waiting and I liked it. I really did and I wasn't even thinking about any of my social anxieties or how I didn't have a very dominating personality. I was just thinking of how much I enjoyed this on a deep level.\n\nI raised the first clamp and she whimpered, shifting with fearful excitement. Her lips were slightly parted, almost like she did when she was aroused, but it was different this time. I don't know exactly how, except to say there was just a basic, more intense expression to her when she was aroused and scared, too. It made me pause to enjoy it for a second longer... and then I fitted the first clamp to her darkened right nipple and let it fall closed.\n\nThe result was instant. She made a low sound, staring up into my eyes, and her body went tense in my arms. It was this tightening of the muscles that made me desire her all the more, this involuntary shudder of pure reaction, as if her body protested such harsh sensation in such a sensitive place. \"Oh, please...\" I had a sudden other thought, that it would be entertaining to see her shocked with the second clamp.\n\n\"What's it like?\" I asked quietly, holding the second clamp close to her other nipple.\n\nShe glanced at it fearfully before she looked back up to my eyes and smiled shyly. \"Harsh. It's sharp too, like a sudden burst of sensation. Sometimes it's nauseating even to me still.\" She laughed and she seemed drunk off the sensation, so that she couldn't quite filter her speech so much, as if she was answering in giddiness.\n\n\"Really?\"\n\nShe nodded. \"Yeah, it's something about the burst of it and I always think that eventually I'll get used to it, you know, but- Oh, please!\"\n\nIt hurt how much that last reaction aroused me. She threw her head back in this spasm of surprise when I had her distracted and I realized, with a shock of my own, that I was laughing a little, just softly, but out of a cruel kind of amusement. And then I also realized that she might have been drunk with headiness, but I had my own form of intoxication too.\n\nI was fucking hard and not thinking straight at all. I tugged the chain and Lily yelped, staring at me with frightened delight, something else I loved. The visual of her response made it clear that I had a twisted kind of control over her. Because I tugged the chain again, harder, lifting it so that she lifted on my lap to follow it. \"It really does hurt you,\" I said in soft amazement because she was moving with me to avoid the pain of the chain being pulled.\n\nAnd her eyes were dazed. She whimpered and nodded. \"These do. Clover clamps do, too. There are others that are softer and nicer and those don't. And- Oh, God... I'm trying to think straight. And there's ones that are purely for pleasure, but I thought you'd really like these the best.\" She shivered, taking deep breaths. \"Do you want to see what the other one does when you place it?\"\n\nI trailed my fingers down the remaining chain, enjoying the way her stomach was tight with her slight pain. \"Yes.\" I paused, but this made me feel just evil enough to add, \"I want you to stand while I do it.\"\n\n\"Okay.\" Her voice shook a little but she stood up so that I sat forward, waiting while she tugged off her skirt and kicked off those heels.\n\nShe stood still, her breathing turned into those little whimpers while she had to make herself show me these things. I wondered how much willpower it took her when I was so shy, then felt a rush at the thought while I stroked my hand down her stomach and teased the triangle between her legs, tracing the fading words that she'd let me write. I hesitated, then stroked down to her clit, swallowing when she squealed above me, thinking that I hadn't done this with her yet. \n\nI loved it. She was so responsive. Lily\u2019s whimpers turned more desperate at my soft strokes and she stared down at me while I pet her between her legs. I couldn't look away from the sight of her pussy, from the way she was darkened with arousal, the way her clit was swollen. I stroked her again and I only managed to look up at her face in favor of years of unrequited sadism fantasies, so I could see the reactions. She stared down at where I held the clamp and I felt a thrill that was even more intense than before. This had to be worse for her and the thought made me eager to know. I glanced back down and stroked the hood of her clit back, then fitted the clamp again while Lily whined as if in an involuntary plea of mercy. I let it fall closed.\n\nLily squeaked, the cutest sound I've ever heard in my life. It was a pained kitten mewl of begging and I looked up to see her wide eyed expression, feeling spikes of adrenaline, enough to make me lift up to lave one of her nipples where it was crushed in the cruel pincer clamps. Lily arched and I purred, tugging the chain in response, but this time I tugged up so that it tormented her clit.\n\nShe lifted in a dance of need, whining again. \"Oh, God!\" Her body shimmied with my tugs and I kept making them, kept making her dance for me while I smiled, enjoying the sight and the way it gave me such easy control. She had to make herself focus and I loved watching how much effort it took her, loved it. But she managed even while I still tugged the chain and she squeaked out, \"Cum on my tits?\"\n\n\"God, yes. Lay down on the floor.\"\n\nShe laughed in that playfulness that made my heart sing and it made me feel this basic joy to get to find all the intimacy that came from studying her expressions and feeling her in pain, only to follow it up with that flirting feeling of butterflies and infatuation. She was eager when she moved, laying out on the floor for me to straddle her, but I didn't kneel over her chest just yet. I knelt lower, smiling evilly up at her. \"Can't forget manners.\"\n\nShe laughed while I massaged her thighs, then trailed my fingers down to the clamp torturing her clit. \"Which ones?\"\n\n\"Ladies first, Lily.\" I stroked my fingers down her slit and she squealed so loud that I didn't even have time to consider the fact that I was the one who took the lead on this, that all I was thinking of was her pleasure for what she'd given me. I thrust my fingers inside of her and jerked the chain and she writhed, her eyes fluttering shut and her body twisting.\n\n\"Alex, please! Please!\"\n\nI really liked the sound of her saying my name like that. She sounded thoughtless and so needy, like I imagined it when I fantasized over her masochism pictures. She started to thrash, arching, and I pumped my fingers, working her, tugging the chain harder. And I had an idea too, if I could make myself do it and I thought I could. It was something I really wanted to see her reaction to, especially after how responsive she had been to everything else.\n\nShe spasmed, then went stiff, her pussy tightening around my fingers. I almost hesitated but I couldn't do that because the timing had to be right, so I made myself release the clamp on her clit."
    ],
    "authorname": "Payne_Hall",
    "tags": [
        "bondage",
        "female sub",
        "femsub",
        "fetish",
        "mdom",
        "pain",
        "sadistic",
        "submissive",
        "masochist"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/wolf-in-sheep-s-clothing"
}