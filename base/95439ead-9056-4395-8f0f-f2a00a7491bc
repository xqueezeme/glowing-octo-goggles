{
    "title": "A Very Ditzy Christmas",
    "pages": [
        "\"I really did used to like the holidays,\" grumbled Ralph Persons Junior as he rubbed the same spot on his head that he'd whacked several times in a row on the same slanted ceiling beam. It was the first weekend in December and he was crawling around the attic looking for boxes of holiday decorations that his mother wanted hauled downstairs and put up the day after Thanksgiving. Having just started his first term at community college, he managed to dodge that bullet by complaining that he had a couple of papers due in English Composition and Early American History. The papers being due the Monday after Thanksgiving was true, but he'd left out the part that they were already finished. With a mighty grunt, he shoved a box of Easter lawn decorations aside and hit his head again. That time he saw stars. \"If she wants them down so bad, why doesn't she do it?\" he grumbled louder to himself.\n\n\"Because she's more than twice your age, she doesn't like to hit her head, and she's got you to do it,\" said Ralph Sr., looking like a disembodied head sticking out of the floor of the attic. \"Now, if you're done complaining, if you've got some boxes to come down then pass them to me and I'll take them down the ladder for you.\" \n\nThat suited Ralph just fine, because trying to balance the boxes as he slid out the access hole and then find his footing on the ladder was no easy chore. He pushed what he already had found toward the opening and looked for more. After hitting his head once more, he was convinced he'd found them all. \"I think that's it, Pop.\"\n\n\"You're missing the box with the tree ornaments,\" came his mom's voice through the access way.\n\nRalph took a deep breath and counted to ten. \"Alright mom, I'll keep looking,\" he said, sounding a bit miffed. Actually sounding a lot miffed. \n\n\"We're gonna go and start setting up the outside lights and blow up characters,\" said his Pop through the hatchway. \"That'll keep us out of your way a while and let you blow off some steam. I don't want you saying something to your mother the wrong way and have you regret it later.\" \n\n\"Okay,\" sighed Ralph, nodding his head as his Pop disappeared down the hatch. He took a long look around the attic and didn't see a box marked ornaments, so he decided to straighten and organize the entire loft by opening each box and marking them. He found that some of the boxes had his old clothes that he wore in grade school. \"Why doesn't she get rid of this stuff?\" he thought to himself. Then he chuckled. \"If she's waiting for grandkids she's got a long wait.\" \n\nHe didn't really have a girlfriend but his parents thought he did. For some reason they both kept pushing the idea of him and the girl he took to the prom, Louise Johnson, as being a couple. \"A couple of dorks,\" he thought. Actually, he did take Louise AKA 'Looney Louise' out on a few dates during the summer. She was kind of funny and interesting, but her shenanigans and her perpendicular hair far outweighed the positives, except for her tits. \"Whew,\" he said, shaking his head at the thought of them. He remembered when she showed them to him and he started to daydream. \n\n*\n\nThey were in the back of the movie theater and she was jamming popcorn in her mouth. He saw that she had as much 'fruit of the Redenbacher' on her shirt as she still had in her trough of popcorn. \"I think you better do something,\" he said, pointing in the general direction of her breasts. \n\nShe put the bucket under her boobs and pushed the lucky kernels back in causing her breasts to bounce several times. \"There, better?\"\n\nOther than a few genuine imitation butter stains she was all clean. She settled back in her seat and shifted around a bit almost slumping, forcing her breasts up and out. Between the seat in front of her and her tits in her face, Ralph didn't think she could see the screen. He didn't realize he was staring at her until her eyes slowly turned toward him. \"Imagination running wild?\" she whispered, placing her trough of corn on the floor. \"I bet you've got a hundred different visions of what they look like going on in your head. What do you think they look like?\"\n\nRalph sat there with his mouth agape. \n\n\"Oh come on. Maybe they're perky, droopy, hard, or soft. Maybe they have veins all over them. Maybe my nipples are large like acorns, small like cherries, or even big and puffy,\" she whispered, encouraging him in her game.\n\nRalph still sat there with his mouth agape.\n\nShe sighed. \"No idea, huh? Okay,\" she said, unbuttoning her blouse down to her navel and unclasping the front hook on her bra. She snapped them open and said, \"Behold!\"\n\n*\n\n\"Junior, did you find them yet?\" his Pops voice said from the hole.\n\n\"No, I decided to go through everything while I was up here. By the way, why is Mom saving all my old clothes? Some of this stuff goes back to first grade,\" he yelled loud enough for his Pop to hear.\n\n\"I don't think she's actually saving it. It was more like putting winter or summer clothes away till next year but you grew out of them and they just didn't come back down. Mark those boxes 'Donations', slide them toward the hatch, and we'll get them down the road to the Goodwill later. Just make sure you go through every box you want to donate to make sure there isn't anything important in them,\" yelled Pop.\n\n\"Okay,\" Ralph yelled back.\n\nThinking back to Louise as he continued his work, it reminded him that he hadn't heard from her since she went out west to college. She didn't come home for Thanksgiving and he wondered if she was coming around for the Christmas break. Several times, he thought to call to just say hello but she didn't have a cell phone (something about messing up her brain waves). He didn't have any idea exactly where she was staying out there so that was that.\n\nEventually, Ralph found the ornaments and pushed them toward the hatch. The other holiday decorations were neatly stacked by which came next and all that was left was for him to go through the boxes he marked 'Donations'. Most had nothing but clothes in them and a few had some old grade school projects in them like a Thanksgiving turkey made from a tracing of his hand. He put that kind of stuff aside for safekeeping and opened the last box. Under some toddler clothes, he found some folders and wire notebooks that belonged to his Pop. The folders contained some receipts and warranties for products long gone. The wire bound notebooks had some recipes and newspaper clippings about people his parents knew. One of the books had some writing in it, kind of like the notebook he'd found in the garage that spring. He flipped through it and saw some of those same magic words he'd seen in the last book like, 'boobs and tits'. On the first page, it had a header and a title:\n\n\"Thursday, December 26, 1974.\"\n\n\"Christmas With the Ditz\"\n\nRalph settled himself under the dangling light and pulled the string to turn it on. \"Okay Pop, entertain me,\" he said as he began to read...\n\n***\n\nIt's been two weeks since she came back into my life. Donna. Ditzy Donna. I figured I'd write this down while it's still fresh in my mind. It's been kind of a crazy two weeks but what other kind would it be with her? She made the decision not to move in permanently with me until she found a job to help contribute. The job hunt took exactly fifteen minutes when she walked two blocks to Kiddie City and landed a job demonstrating toys. That sure took a stretch of imagination to see her potential as a goof-ball playing with toys for kids. At least she didn't have to go too far for the party favors she wore out on a regular basis. Her smock was always loaded down with a usual assortment as well as her favorite, a pair of Groucho glasses. The guy that hired Donna remembered her from somewhere in the past and gave her a huge starting rate. Most people started at two dollars and hour but he gave Donna six. I'm still a little jealous of that, considering I've worked for the same place since junior high school and don't make much more than that. \n\nBy Wednesday of her first week, the manager realized he had a goldmine with her and worked her as long as she wanted. When they closed Saturday night, they gave her a paycheck for sixty-four hours at $6.00 an hour plus overtime, plus a hundred-dollar bonus for a job well done. The boss even cashed the check for her. Suddenly Donna was a rich ditz with the next day off and Christmas coming a few days later. On that Saturday night, the 21st, the true meaning of Christmas started to come shining through: Love, generosity, and ditzyness...\n\n*\n\nI heard the door slam and came out of the bedroom.\n\n\"Look,\" yelled Donna, fanning her riches out in front of me.\n\n\"They could be all ones,\" I said, standing on the other side of the room.\n\nShe bunny hopped herself over to me and flapped the fanned greenbacks in my face. Nope, they were all twenties and tens and as crisp as the day they were made. \"We got to go shopping,\" she said, slurring her words from a dollar induced high.\n\nI looked at my watch and said, \"It's nine-thirty, everything's closed.\"\n\nShe crossed her eyes and gave me a Bronx cheer. \"It's the Saturday before Christmas! Everything is open until midnight!\"\n\n\"You said you wanted to go out to eat tonight. We can't shop and eat at the same time,\" I said. Donna suddenly looked very disappointed.\n\n\"Come on, Ralph. I worked real hard this week for this,\" she said, letting her fist full of dollars flop down to her side. It was immediately covered by her six-inch too long sweater sleeve.\n\n\"I don't feel like dealing with that tonight. I just want to and get something to eat and then hang out with you,\" I said, trying to sound as sincere as I could. That and the fact that we hadn't had sex since last weekend when she came back into town. Not that we didn't want to, it was a matter of female biology. \n\n\"Do you promise to take me tomorrow?\" she asked.\n\n\"Yes.\"\n\n\"Bright and early?\" she asked, holding her index finger up at me.\n\n\"Yes.\"\n\n\"Bright and early as in first in line when they unlock the door?\" she asked, now wagging her finger at me.\n\n\"Ah, yes,\" I replied not as rock solid as before.\n\nShe looked at me a second and tilted her head. \"Cross your heart?\"\n\n\"Yes,\" I said, crossing my heart.\n\n\"Pinky swear?\" she asked, holding out her little finger to me.\n\n\"Yeah, pinky swear,\" I said, hooking my little finger with hers.\n\n\"Good. Now before we go out I need a shower 'cause I stink,\" she said, walking past me to the hallway. I watched her as she walked in the bathroom, turned on the light and the transistor radio. One by one, pieces of clothing were tossed out into the hallway and then the door closed. I heard the water start running and turned to go to the kitchen. The bathroom door opened, her hand popped out, and her finger beckoned me to follow.\n\nI may not be the smartest but I didn't need an explanation on that gesture. Even though I'd just gotten a shower an hour before I shucked my clothes and was in the bathroom faster than you could say 'All the way!' \n\nShe was completely under the shower with her eyes wide open watching me as I hopped in myself. Little Ralph was stiffly bouncing with glee at in her direction.\n\n\"Don't get too frisky, we don't have a condom in here,\" she said, handing me the soap and washcloth. She was right; I had nearly four dozen brand-spanking new assorted Trojans sitting in their boxes, individually foil raped, tucked safely in the top drawer of the nightstand next to the bed.\n\nI told you I wasn't the smartest.\n\nShit.\n\nWell, there was no use crying about it so I started to give Donna a good scrub down. I started down at her feet and worked my way up, taking extra special care on her privates and giving her boobs two coats of wax. She did her face herself to make sure she'd removed her make-up properly while I got the shampoo ready for her. Somewhere between squirting her head and getting up a full head of lather, her hand had managed to attach itself to little Ralph.\n\n\"Feels like someone didn't like being ignored this week,\" she said, blowing soap foam away from her mouth. \"Think he'll forgive me?\"\n\n\"I'm sure he'd be happy if you tried,\" I replied. Just then, Sam Cook's 'Chain Gang' began playing on the radio. \n\nDonna started bending her knees and moving to the music, giving me hard tugs with every 'Hooh! Aah!' She mouthed the words, 'Well don't you know...' and then said, \"I'm going to make you cum before the end of this song,\" while blinded by lather and spitting soap.\n\n\"Okay,\" I squeaked, while trying to clean that wild mop of blond hair.\n\nShe sang some, mouthed the words some, and gyrated as she worked on me to the music. She started using both hands, making sure that every time the 'Hoohs' and 'Aahs' came on, the tugs were more forceful. By the time he was singing about going home to see his woman, I wasn't scrubbing her head any more, I was holding on for dear life. My left knee started shaking and I gagged on a mouthful of water as she coaxed me over the edge. As he asked for some water 'cause he was thirsty, the first blast hit her on the stomach. The second and third hit her thigh and kneecap and the rest dribbled down into the water. \n\nDonna held me until I went soft while I leaned on the shower wall for support. \"I told you I'd make you cum before the end of the song,\" she said, spitting more soap at me. \"Now do you mind if I rinsed off too?\" she said, still blind with lather.\n\n\"Sure,\" I said, climbing out and drying myself off.\n\n*\n\nAt 10:30, we were slamming the doors to my car. We could've been out of my apartment ten minutes faster but even with a super heavy-duty hair dryer it takes forever to get Donna's hair to the point of just being damp let alone dry.\n\n\"So, where do you want to go?\" I asked, as my '64 Malibu turned over.\n\nDonna thought for moment. \"I guess we're a little late for the 'All the Way House'.\"\n\n'Thank God,' I thought.\n\n\"I'm hungry, but I just don't know what I'm in the mood for. Just head over to Main Street and we'll look for something open,\" she said. A car pulled up behind us, blocking our way out. \"Uh oh,\" said Donna when she saw who got out of the car.\n\nIt was my good buddy Jim. \"Hey guy, how ya doing?\" He asked leaning down to my window. \"Hey mop head,\" he said, nodding in Donna's direction. \"I see you're heading out. What a coincidence. How about letting me use the place for a little while?\"\n\nJim usually dropped by on Friday nights to 'use' my apartment. Being it was Saturday I thought I was safe. Guess not. \"I don't think so.\"\n\n\"Come on. We'll be gone before you know it,\" he said, looking back at his smoking piece of crap. Tonight's girl looked about ten years older than us and her make-up was crooked.\n\nThe memory of last week's debacle was still fresh in my mind and I couldn't help but get nasty. \"How much is she costing you?\"\n\n\"Be nice,\" he said, wagging his finger at me. \"It's a cousin of my sister's friend. She's got Parkinson's or something.\"\n\n\"Getting pretty far down the list, aren't you?\" asked Donna, shaking her head.\n\n\"What, are you kidding? That shaking bit could take things to a whole new level,\" he replied, humping my door to stress his point.\n\n\"No, for a lot of reasons starting with the fact that you owe me twenty dollars for the money you took out of my wallet.\"\n\nHe tossed a twenty down on my lap.\n\n\"You also owe me fifty for that citation for disturbing the peace.\" \n\nTwo more twenties and a ten fluttered down the wheel and my legs.\n\n\"My apartment still smells like burnt popcorn!\"\n\nHe went to his car and came back with an unopened air freshener. \n\n\"You smashed my TV!\" I shouted.\n\nJim sighed. \"I can't help you there right now.\"\n\n\"He said no, Jim. Go down by the lake. She can give you a shaky handjob like all the other high school kids parked over there,\" Donna said. \"Now move your car, I want to eat!\"\n\nThat was my Donna, ditzy yet assertive.\n\nI didn't bother letting Jim in on the fact that I had the citation taken care of. Well, I had fifty bucks toward a new TV. He left and we were finally on our way. We passed a few burger places but neither of us wanted one. Then Donna pointed. \"Oh! Vito's is still open!\" \n\nVito's pizzeria and restaurant opened its doors in 1950 in a strip shopping center as a simple pizza and sandwich shop. Business was so good that a few years ago when a store next to it went vacant he expanded turning it into a table and booth establishment. The food was excellent and they had a B.Y.O.B. policy that most customers utilized. Though their menu was somewhat pricey, it was a successful family business. No, I don't mean Vito's family. I mean that other Italian family. \n\nYou know, wink-wink. \n\nNow I don't know for sure if Vito is one of them, but there's always a table that has four to six men in suit coats playing cards while people come and go, greeting them with envelopes as they shake hands. It's always the same four to six. One thing was for sure at Vito's:\n\nSkipping on the check was not recommended.\n\nI'd heard rumors of those that tried, nothing factual, just stories. Tonight the check will be paid. I enjoy walking without a permanent gimp.\n\nWe entered the place and the first thing I noticed was all six suits were in attendance at their usual table playing cards and the place was all decked out for Christmas. Donna picked a table far enough away from the door so she could take her coat off and not get cold, but left her very long sleeved sweater on. I left my coat on and sat down. I looked around, saw a few people I knew, and only a couple of empty tables. \n\n\"I guess there's a lot of hungry people finishing holiday shopping tonight,\" I said.\n\n\"Look at that tree,\" said Donna, marveling at a giant white fur lit up like a, well, like a Christmas tree with all white lights standing in the corner. \"We need to get a tree.\"\n\n\"The apartment complex kind of frowns on that Donna. They're fire hazards. They don't mind artificial trees,\" I said, trying to salvage her good mood.\n\n\"What, you mean those stick aluminum trees that have a lighted dial that changes color shining on it? My grandparents had one of them. It looked stupid,\" she replied. \"I want one like that!\" she said loud, pointing across the room. \n\nThat got the attention of the 'suits' and they turned to look.\n\n\"Donna!\" said the skinny one with a pair of jacks.\n\n\"Donna!\" shouted the tall one with three threes.\n\n\"Donna!\" coughed the fat one holding a busted flush.\n\nAll six of the men got up and came to our table to greet us. Make that greet Donna. In the course of their conversation, I picked-up that they all knew her dad, and one summer she ran errands for the guys. \n\nWhen they were done talking they headed back to their table except for 'fat busted flush'. \"Anything you want tonight's on us. You want something to drink, order it.\"\n\n\"But this is a 'bring your own' place,\" said Donna.\n\nHe shook his head. \"Anything you want, you got it,\" he replied.\n\n\"But we're not old enough to drink,\" she said, laughing.\n\n\"Believe me,\" he said, holding his hand over his heart. \"Anything you want honey, no problem.\" \n\n\"How about a tree like that,\" she said, pointing at the giant in the corner.\n\nHe patted his coat, pulled out a pad and pen, and jotted something down. As he handed the note to Donna he said, \"Go down the corner where they have that temporary pen of trees set up, ask for Paulie Toucan, not Paulie Asshole, and hand him that note. He'll take care of you.\" Then he turned to look at me and said, \"How ya doin',\" and waddled back to his seat.\n\n\"Boy, the way they acted you'd think you were Italian,\" I said, catching the eye of the waitress.\n\nDonna looked at me like I was stupid. \"I am.\"\n\n\"Your last name is Brunner. How is that Italian?\" I asked.\n\n\"Actually my family's last name is Bruno. It was changed when my grandfather came over on the boat. Does it make a difference?\" she asked, propping up her chin on her hand. \"Bruno. Why does that sound familiar?\" I asked.",
        "\"It should. My grandfather is like a second cousin to the big guy in Philly,\" she said. \n\n\"Hi Donna,\" said our waitress. \"Do you want a menu or do you know what you want?\"\n\nI thought she looked familiar. Now I knew who she was. Ronnie Vaspero. She was the cutest girl in school from first grade all the way up through high school. At first, she was a nice girl, then she realized her looks were special. Suddenly most people she knew no longer existed to her. She oozed conceit and kept her nose in the air around anyone that wasn't Italian or a member of the upper class. The only reason she was working there was that she was engaged to Vito's son who stood to inherit the joint when Vito hung up his apron for good. At that moment, her nose was so high that if a bird was in the rafters and took a dump it would've gone right up her nostrils. I glanced up at the ceiling. Nope, there weren't any birds when we needed 'em. \n\n\"I'm just gonna have the veal parmie,\" said Donna, \"And a Coke.\"\n\nRonnie didn't even turn her head in my direction. She just stood with her pen hovering over the check pad. \"I'll have the same,\" I offered.\n\n\"Original thinker,\" she mumbled as she turned to go.\n\nDonna slapped the table. \"Wait! I want a side dish of hot peppers and make sure I get a shaker of the red pepper stuff!\"\n\nRonnie stopped in mid stride facing away from us and wrote that done. When she continued to stand there I realized she was waiting to see if I was adding anything. \"Nothing for me.\" \n\n\"Wuss,\" I heard her mumble as she went into the kitchen.\n\nI shook my head and patted Donna on the hand. \"What does the note say?\"\n\nShe opened it and snorted. \"Whatever she wants - delivered tonight, Alphonse.\" \n\n\"That's not bad but is it really a good idea to take a favor like that from them?\" I asked, not sure of the rules.\n\n\"If we didn't take them up on the offer it would be a great insult to them. Trust me, we don't want to do that,\" she said waving at the thin one that glanced in her direction.\n\nOur food came quickly and Donna emptied half a jar of crushed red pepper on hers. Next to her plate was another just as large with two-dozen green hot chili peppers on it. My nose started running just from the smell of them. For every red pepper laden mouthful of veal or spaghetti, one pepper was eaten until they were gone. When we finished, Ronnie gave us a check that said 'COMP'. I left her a tip and we gave our thanks to the suits and walked out.\n\nDonna looked up and down the street. \"Which way is the...\"\n\nI glanced back in Vito's and all six guys were pointing which way to go. \"This way,\" I said, trying to make myself sound intelligent.\n\n\"Cool,\" said Donna, as she put on her Groucho glasses and blew on a party favor.\n\n\"You know, I don't have anything to put on the tree let alone a stand for it,\" I let my girl know.\n\n\"Don't worry about it,\" she replied.\n\nAs we got near the place, we saw two men standing by a barrel with a good fire going in it and both were warming their hands. Behind them were dozens of trees of different types and sizes. A few people were milling around looking them over. In the center of the lot was a immense tree lit and decorated to the hilt. As we approached the men, they noticed Donna and started to laugh. \n\n\"So,\" said the tall one, still laughing. \"What kind of tree you want?\"\n\nDonna took off her glasses and stuffed them in her pocket. \"We're looking for Paulie Toucan.\"\n\n\"I'm Paulie,\" said the short older man. It was obvious why he had the nickname Toucan. His nose made Jimmy Durante's look petite.\n\n\"I'm supposed to give this to you,\" Donna said, handing him the note. He read it and showed it to the other guy.\n\nHe read it and said, \"What the fuck? That's the second one tonight. He's killing all our profit.\" He quickly shook his head. \"Forget it. You can turn right around and tell that fat fuck if he wants you to have a tree he can come pay for it.\"\n\n\"Hey, watch your mouth, Paulie,\" said the Toucan, pointing out the fact that Donna was a girl.\n\n'Asshole. A perfect nickname,' I thought.\n\nToucan pulled Donna aside and lead her through the lot while I followed a few paces behind. \"Don't worry about him, we're thinkin' it's a sugar problem. Now, what kind of tree were you looking for?\"\n\n\"I was hoping for one like Vito's got in his place,\" said Donna hopefully.\n\n\"I think it was a White Pine.\" He turned back and shouted, \"Hey Paulie, wasn't that a White Pine we sent over to Vito's?\"\n\n\"Fuck off!\" Asshole barked, as a woman and her kid passed by him. \"Hi sweetie,\" he said to her, as the woman pulled her kid away from him.\n\n\"Could be Tourette's,\" Toucan said, shrugging his shoulders. \"Now tell me why Al wants to give you a tree.\"\n\n\"He knew my father and remembered me from when I was little,\" she replied. My dad's Silvio Brunner.\n\n\"Your dad's Silly Toots? Yeah I know him. He's an old friend of ours,\" said Paulie smiling from ear to ear. \"So you're his kid, huh?\"\n\nDonna looked at him. \"Toots?\" she asked.\n\n\"Yeah, ah, you know. He always farted when he walked like a toy train tooting.\"\n\nDonna hit the ground laughing her ass off. \"Now I know for sure you know my dad,\" she said between whoops. When she calmed down, I grabbed her hand and pulled her up. As she finished giggling she snorted and said, \"I want that tree,\" pointing at the lit and decorated centerpiece. \n\n\"That one?\" asked Paulie, making sure she wasn't kidding.\n\n\"Yep, that one,\" she replied.\n\n\"That's our display model,\" Toucan stated.\n\n\"But I want it.\"\n\n\"Donna, don't make him mad. Pick another tree,\" I said, trying to help.\n\n\"I want that one,\" she said emphatically. \n\n\"It's too big to fit in the apartment,\" I said just as sternly.\n\nToucan turned to me and said, \"Hey, Douche Bag, did I ask for you help?\" He turned and pleaded with her. \"If we give you that tree it's gonna take forever to take all the stuff off and put it on another one.\"\n\nDonna looked him right in the eye and said, \"I don't think you understand. I want it exactly the way it is.\" Then blew a party favor in his face.\n\n\"But, but...\" he stammered.\n\n\"Read the note again,\" she suggested.\n\nHe didn't have to. He knew what it said. Drooping his shoulders in defeat he said, \"Okay, if you want this tonight it's gonna take a while cause I gotta get some more guys over here to help me. Besides, I can't leave Paulie in charge,\" Toucan said pointing in Asshole's direction.\n\n\"What the fuck you looking at,\" Asshole snapped back.\n\n\"Not with his epilepsy,\" added Toucan.\n\n\"Donna that tree is way too tall for the ceiling,\" I said.\n\n\"We'll cut it down as needed,\" said Paulie. \"He really is a douche bag, isn't he?\" Toucan asked Donna.\n\n\"Yeah, but he's kind of a sweet douche bag,\" Donna said, pinching my cheek.\n\nHe looked around until he saw some of his helpers. \"Hey, yous three, when you're done there I need you get this tree ready for delivery,\" he shouted, pointing to the demo.\n\n\"That fuckin' thing?\" asked the kid tying a tree to the hood of a car.\n\n\"That fuckin' thing?\" growled the kid picking a woman's purse.\n\n\"That fuckin' thing?\" asked the kid holding a young boy upside down by the ankles.\n\n\"What?\" screamed Asshole, kicking over the fire barrel.\n\n\"Ah, yous two ought to get out of here before Paulie pops an aneurysm. Give me your address and phone number and I'll see you later.\" Toucan glanced at us both. \"You are gonna be up later, right?\"\n\nI looked at my watch. It was 12:30. I wondered just how serious Donna was about getting up early to be first in line at the shopping center. I also was concerned about making too much noise for the neighbors. \"Around what time are we talking, \" I asked.\n\n\"I'm not sure. I have to get at least four more people here. Tonight is our busiest night of the year,\" Toucan said. \"Might be a couple of hours.\"\n\n\"But it's already after midnight,\" I said, not following his reasoning.\n\n\"It's the last Saturday before Christmas. A lot of people wait until tonight after the kiddies go to bed to get a tree. Then mom and pop sit up all night decorating as a surprise. Of course, some wait until Christmas Eve, telling the kids that Santa brought it. We don't wait around for that. At midnight, we call it quits and head home. Any trees left are up for grabs. By then, the only people that haven't gotten a tree are those that don't celebrate it or the really hard off. For them I say, God bless you, take a tree. Now go before Paulie gets his second wind.\"\n\nI looked over at Asshole and he'd already picked up the barrel and was headed in our direction. \"Thanks Paulie, we'll see you later,\" I said, grabbing Donna by the arm and pulled her in the direction of my car.\n\n*\n\nIt didn't take long for Donna to clear enough room for the tree considering I didn't have a TV anymore. Now all we had to do was wait. I looked at the clock. It was 1:10. I got a wonderful idea and turned back to tell Donna, only she wasn't in the room. I headed down the hallway to the bedroom and found her face down, buck-naked, and spread eagle on the bed. \n\n\"I see you had the same Idea I had,\" I said, ripping off my clothes as fast as I could.\n\n\"It wasn't so much an idea as a need. You better have some life left after earlier,\" she said, almost like a warning.\n\nI dug through the drawer, came out with a condom, and handed it to Donna.\n\nShe put on her Groucho glasses like they could actually help her read. \"What is this?\" she asked. \"Ribbed for her pleasure,\" she read. \"And it's pink.\" \n\n\"I wanted to try something different,\" I replied.\n\nShe kissed me. Donna wasn't big on physical contact around others, even when we were alone she didn't cling to me. That made any contact with her all the more meaningful and electrifying. Right now, her kiss sent shock waves through me and burned the crap out of my tongue. \n\nAll those frickin' hot peppers.\n\nMetal note: no oral sex tonight. \n\nI caressed the smooth skin of her back and her thighs. With each touch, my mind kept asking if this was real. Just a few short weeks ago, I was as alone as any one could be. Now the girl that I've always loved was here and she loved me. As my hand moved back to her side she drew her knee up exposing herself. I could smell her urgency.\n\nI'd never 'diddled with the cliddle' but I'd read some stories about it. So, I lowered my hand and touched her. She sighed and kissed me harder. So far so good. I felt around for her clit and she let me know when I found it by biting my tongue.\n\n\"Sorry,\" she whispered, pulling away from the kiss and rolling onto her back. A moan escaped her lips. \"A little faster, please,\" she whispered.\n\nI diddled a little faster and she grabbed the first thing her hand touched, my hair. Her hips heaved up and slammed back down on the bed. She shrieked and shook and pulled my hair. When she calmed down, she let go of my hair, pulled out a party favor, and blew on it. From beginning to end, less than a minute went by.\n\n\"Whew, I needed that,\" she said, pushing her hair out of her face. \"Where's that thing?\" she asked, looking for the condom. \"For my pleasure, huh? I may never want to do it any other way.\"\n\nI was plenty ready by the time she had the wrapper off and put it on me. After a few misfires she helped guide me in. It felt so good I stayed there unmoving.\n\n\"Are you okay?\" she asked.\n\n\"It feels so good,\" I mumbled.\n\n\"I know Ralphie, but let's give those ribs a rip.\"\n\n'Never leave your girl wanting more, always finish the job,' I thought, as I found a rhythm she seemed to like. \n\n\"These are great,\" she said, pumping me harder and faster. I tried to keep up with her but she was going nuts below me. \"Wait, wait,\" she said, as she rolled us over and climbed on top. \"Relax and enjoy the ride,\" she said breathlessly.\n\nDonna rode me like I was a bucking bronco. Her hair was flopping and boobs were bouncing, while I could do little but get thumped in the crotch and watch this magnificent girl work herself into a mind blowing orgasm.\n\nWhen she came, she jammed down hard, grabbed me by the shoulders, and shouted 'Yes!\" through gritted teeth. She breathed hard for a minute and then flopped her head down on my neck. Her breath was still brutal, but I didn't mind. \"You didn't cum,\" she whispered, moving her crotch a little with me still in there.\n\n\"How could you tell?\" I asked.\n\n\"You get a funny look on your face,\" she said. \n\n\"I think I got bruised,\" I said.\n\nDonna rolled off and inspected me. \"Oh shit, I'm sorry Ralph. Oh my God, you're all red down here. I guess I don't know my own strength. I'm really sorry,\" she said, as her eyes started to fill with tears.\n\n\"That's all right, don't worry about it. You didn't break anything permanently,\" I said, pulling off the condom. \n\n\"I'll make it up to you,\" she said, between kisses on my cheek and rubs on my crotch.\n\nThere was a crash in the living room and Paulie Toucan's head popped in the semi open door. \"Hey you love birds, where you want the tree?\" Three more heads looked around the door. Donna and I scrambled for our clothes.\n\n\"Don't get dressed on my account,\" said the pickpocket.\n\n\"Don't you believe in knocking? What broke out there?\" I asked, shielding Donna from their gaze as she got decent.\n\n\"Did something break?\" asked the stupid looking one.\n\n\"I heard something smash,\" I replied, pushing my way out to the living room. There was the tree, or part of the tree sitting in the room on top of my glass top coffee table that now was in a thousand pieces. The top part of the tree was still out the door in the hallway and out the common entry door. \"I thought you said you were going to cut it,\" I said furiously.\n\n\"We are. We needed to measure first. Okay boys, start measuring,\" Toucan said.\n\n\"Why didn't you leave it outside until it was cut?\" asked Donna, now fully dressed.\n\n\"We're not gonna cut it outside and wake everybody up. That wouldn't be nice,\" said the one that looked smarter than he probably was.\n\n\"Look what you did to my table!\" I shouted.\n\n\"Shh... you'll wake the neighbors,\" said Stupid.\n\n\"We need to cut it right here,\" said the pickpocket, putting the measuring tape away.\n\nToucan dug a circular saw out from under three and plugged it in. I didn't think it would be any louder than a vacuum cleaner, but I didn't count on it being one from hell. \"What's this thing made of, it won't cut,\" shouted Paulie. He tried again and smoke started wafting up from the tree trunk, but as far as cutting it, not a scratch. \n\n\"That's a new blade, I just put it on before we came over,\" screamed the smart looking one over the din.\n\nI noticed that we were getting an audience at the doorway. I looked outside and could see more and more lights going on the other buildings as the saw wailed on. Sure enough, one of our township's finest was suddenly standing in my place with his arms crossed. That's usually not a good sign. Paulie noticed the man in dark blue and said, \"Hi Tony. You want to take a look at this thing. I can't get it to cut.\"\n\n\"Shit, somebody called the cops,\" I complained.\n\n\"Nobody called this in, I heard it driving by.\" He turned his attention to Paulie. \"Why are you doing this at three o'clock in the morning?\"\n\n\"This was supposed to be a one and done deal, as a favor to the little lady,\" he replied, pointing to Donna. \"But it won't cut.\" He kicked the tree.\n\n\"Let me see the thing,\" said Tony. \"Pull the plug and get me a screwdriver. Who put the blade on this thing?\"\n\n\"I did,\" said the smart looking one, all proud of himself.\n\n\"You're an idiot,\" stated the cop, as if it were as plain as the nose on Toucan's face. \n\nSee, I called that one. \n\n\"You put it on backwards.\" Tony made the switch and said, \"Plug it in and try that.\"\n\nPaulie tried again and the saw cut through the tree like a hot knife through butter. \"Hey, thanks Tony,\" said Toucan.\n\n\"You done making noise now?\" Tony asked.\n\n\"Yep, all done,\" I said, wishing everyone would go away.\n\nTony left and eventually so did the crowd. Between the six of us, we managed to get the tree up, transfer the decorations, the lights, and clean up the shattered coffee table. Paulie asked the boys to wait for him outside and turned his attention back to us.\n\n\"Sorry about the screw up tonight. As far as the table goes, I'll find you another,\" he said to me. \"Now young lady, is there anything else I can do for you this morning?\"\n\n\"I was wondering. Do you have any idea where my dad is? I haven't heard from him since my mom and him split up. She says she doesn't have a clue where he is,\" she said, sounding depressed.\n\n\"She doesn't, huh,\" he replied, rubbing his chin. \"I'll put out some feelers and see what I can find out.\"\n\n\"Thanks for even trying,\" said Donna, giving him a kiss on the cheek.\n\n\"No problem. My pleasure,\" he said, then he turned to me. \"Try not to be such a douche bag,\" he said and left.\n\nI was tired but before I headed to the bedroom, I looked at the tree. \"It really turned out nice.\"\n\n\"I knew it would,\" Donna said stifling a yawn. \"I'm going to bed.\"\n\n***\n\n\"Junior!\" Pop shouted, breaking Ralph's concentration. \"Did you find the box of ornaments?\"\n\n\"Yeah Pop, here,\" he said handing the box down the ladder.\n\n\"Your Mother will be relieved that you found it. What are you doing up here?\" Ralph Senior asked.\n\n\"You told me to go through all the boxes before we donate them. I found some of my old grade school stuff and was looking it over, that's all.\"\n\n\"Are these the boxes that are going to the Goodwill?\" he asked, looking up through the hatchway.\n\n\"Yeah, here you go,\" Junior said, passing them along to his dad. Settling back under the light he continued to read.\n\n***\n\n\"Ralph get up!\"\n\nI'd just closed my eyes. Why does my groin hurt?\n\n\"Ralph, you promised to take me to the store so we could be first in line!\"\n\n\"What time is it?\" I asked, trying to focus my eyes.\n\n\"It's five-thirty, come on!\" she said, shaking me.\n\n\"Five-thirty...am?\"\n\n\"Come on, let's go!\" she said, waving a cup of coffee under my nose.\n\n*\n\nIt was still dark out when we stood in front of JC Pennys and it was cold. At least they were opening early. The parking lot was filling fast and the crowd was growing. I felt bad for whoever it was that going to open that door. \n\n\"I can't wait to get you your present,\" she said.\n\n\"Don't go spending your money on me,\" I answered, watching my breath float away.\n\n\"Are you kidding, look at this wad of cash,\" she said, waving her money in the air.\n\n\"Put that away, are you nuts?\" I barked, looking to see if anyone noticed.\n\nA short, balding man in glasses was at the door. \"Now, I want everyone to take it easy coming in,\" he shouted through the glass. \"There's plenty of everything for everyone.\" He turned the lock and just barely made it out of the way as Donna and the crowd lunged forward. \"Take your time!\" he shouted, which had exactly the reverse effect.\n\n*\n\nBy nine o'clock, we were working on our second shopping cart of stuff and Donna didn't seem to show any sign of slowing down. Everything she bought was on sale or closeout. She was very good at stretching a buck.\n\n\"How much cash do you have?\" I whispered into her ear.\n\n\"About four-twenty,\" she answered. \"Taxes killed me.\"\n\n\"How much do you think is in here,\" I asked, meaning the carts.\n\n\"If my math is right, about seventy five,\" she replied. \n\n\"How much more do you need to get?\" I asked, having lost track of this person and that aunt.\n\n\"I think I'm about done except for wrapping supplies,\" she replied. She loaded the second cart with wrap, bows, ribbon, tags, and tape and headed toward the checkout line. \"I still have to get your present, that's going to require me doing it alone. If you want to, we can split up now.\"\n\n\"Do you need the car?\" I asked.\n\n\"If it's okay with you,\" she replied.",
        "\"Okay,\" I said. \"I'll meet you out front in an hour. Is that enough time?\" I asked, handing her money to cover my stuff in the carts.\n\n\"Yep, I know what I'm getting.\"\n\nWe parted ways and I headed right back to the coat section. Donna was still wearing the same coat and sweater that she wore in ninth grade and they were well past their prime. Thanks to my snooping, I knew her sizes and soon I'd picked out a few blouses and a new pair of jeans to go along with the coat and sweater. They also had pj's on sale with matching robe and slippers. Perfect. I was set and soon outside waiting for her. It was only a few minutes before she pulled up.\n\n\"All done?\" we asked in unison. I tossed the bag in the back seat and Donna drove us home. \n\n*\n\nI wasn't much help to Donna when we got home. I brought one load in and flopped on the bed. I must have been dead to the world because I never even noticed Donna lie down next to me and cover us with a blanket. When I woke, Donna was an inch away from my face snoring like a drunken sailor. As I glanced out the window, I noticed three things. One was that it was getting dark out, two it was snowing, and three, Paulie Toucan was waving at me on the other side of the glass. When he saw that he had my attention, he motioned to me to open the window. I did.\n\n\"Hey Douche Bag, I got that table I told ya about,\" he said, then blow in his hands.\n\n\"That fast?\" I asked.\n\n\"I told ya last night it was no problem. Different size packages fall off the back of trucks all the time. So, ah, ya gonna let us in, or do we just stuff it through the window?\" he asked, shaking from the cold.\n\nI opened the front door and he and Paulie Asshole carried it in. It was an elegant looking mahogany, glass top coffee table. It was a light year better than my old one. Words escaped me. \"I don't know what to say.\"\n\n\"Fuckin' figures,\" said Asshole.\n\n\"There's no need to say anything, but a simple thank you would be nice, Douche Bag.\" Toucan said.\n\n\"Thank you. Now, why do you keep calling me that?\" I asked.\n\n\"What?\" asked Paulie Toucan, looking at Paulie Asshole as if he really didn't know.\n\n\"You know, Douche Bag,\" I replied.\n\n\"That's your name, isn't it?\" he said, shrugging his shoulders.\n\n\"No, it's Ralph.\"\n\n\"I thought it was his name,\" he said and turned toward Asshole, \"Didn't you think it was his name?\"\n\n\"Yeah, I thought it fuckin' fit him perfect,\" Asshole replied.\n\n\"Well, I hate to break up this magic moment here, but we got to get back to the tree lot. Say hello to your sweetheart for me and tell her I passed on the word about her pop,\" and out they went.\n\nAfter admiring my new table, I went to check on Donna. She was sitting up on the bed wanting to know what was going on. I told her about the table and about Paulie's message. That put her in a good mood.\n\n\"How are you feeling?\" she asked.\n\nI shrugged my shoulders, \"Okay.\"\n\n\"I mean down there,\" she said pointing at my groin.\n\n\"Oh, it's still kind of sore,\" I replied, not kidding around.\n\n\"Let's have a look,\" she said, tugging at my belt. She pulled my pants and underwear down. \"Uh oh.\"\n\n\"Uh oh what?\" I said looking down. She turned on the desk lamp and I saw the 'uh oh'. I was black and blue from the base of little Ralph, up to an inch from my navel.\n\n\"Do you feel okay other than just being sore?\" she asked, not sure whether to laugh or cry.\n\n\"It doesn't hurt much other than to touch it. I don't think we'll be, you know,\" I said making humping motions with my hands, \"Any time soon.\"\n\n\"Does this still work?\" she asked tapping mini me. She got her answer quickly. \"You got hurt yesterday and didn't get to enjoy it. I'm going to do something I never did before. I don't know if I'm going to like it or not, but I'm willing to give it a shot considering I'm the one that injured you.\" She reached over and put on her Groucho glasses. \"If I were you, I'd really try to enjoy this because it might be the only time I ever do it.\"\n\nShe pulled me close to the bed and took me in her mouth. Never taking her hands off my thighs, she used just her lips and tongue over the head and top of the shaft. The feeling was silky, soft, and it kind of tickled. At first, I thought that I could last forever because there was little or no friction. I tried to look down and watch her but her hair was blocking the view. I closed my eyes and enjoyed myself like she suggested.\n\nJust as I was about to tell her that nothing was going to happen, a strange tingling sensation started on the underside and base of the little guy. It slowly moved up to the tip like a slow burning fuse. My thighs shook and I gasped as a jet blasted out and caught Donna off guard. She pulled her mouth off me, gagged, and coughed. What was still down there shot out on her cheeks and neck. \n\n\"I'm sorry!\" I said, grabbing her some tissues.\n\n\"I think it might be a while before we try that again,\" she replied between coughs.\n\n*\n\nMonday before I came home, I went across the bridge to Jersey and got myself a six-pack of Miller and a bottle of pink wine for Donna. She was busy cooking food for Christmas Day including a big boneless ham. All we had to do was stick the stuff back in the oven to heat it up and eat. There was enough food there to last us the rest of the week, which was kind of nice since we were both off until the Monday after. As the ham and casseroles cooled in the kitchen, we went to separate rooms to wrap our presents. \n\nTuesday was Christmas Eve and we both had work until six. When I got home Donna was already there having only two blocks to walk. \n\n\"Want to go out to eat?\" she asked.\n\n\"I don't think anything's open,\" I replied.\n\n\"The Ho-Wah is open,\" she said whipping out a pair of chopsticks.\n\nTen minutes later, we were sitting in the Ho-Wah, an authentic Chinese restaurant that was considered the place to go on a date to impress the girl. I didn't need to impress Donna, I needed to feed her and quick. There weren't many people in the place but more customers were filing in as we waited for our server. \n\nDonna had started to munch on the noodles at the table, dipping them in hot mustard. \"You gotta try this,\" she said, scooping in some more.\n\n\"That's a little too hot for me,\" I said, dipping mine in duck sauce.\n\n\"Hello,\" said an attractive middle-aged Asian woman. \"Would you like our special for two tonight?\" A beautiful Siamese cat sat on the floor next to her.\n\n\"That sounds good, also we want a pu pu platter,\" I said, feeling extra hungry.\n\n\"Pu pu not on special,\" she stated.\n\n\"I know, we want the special and the pu pu platter,\" I repeated, thinking I wasn't being clear.\n\n\"Pu pu not with special, you must pay extra,\" she said.\n\n\"I understand. I'll pay extra for the pu pu platter.\"\n\n\"Pu pu for two is not cheap.\"\n\n\"Okay, forget the pu pu,\" I said in defeat.\n\n\"You get pu pu. I already wrote it down, see?\" she said stuffing the ticket in my face.\n\n\"Okay, we'll take the pu pu platter.\"\n\nShe glared at me. \"You want pu pu or not?\"\n\n\"Yes!\" I barked back.\n\nShe turned around shouted something in Mandarin.\n\nThe guy working the wok said, \"Pu pu for two!\"\n\nThe man chopping vegetables shouted, \"Pu pu for two!\"\n\nThe fellow cleaning the litter box yelled, \"Pu pu for two!\"\n\nThe lady served us our tea and the cat took turns rubbing mine and Donna's legs. Dinner and the pu pu platter came while Donna and I made small talk. The conversation eventually led to her father.\n\n\"I still have no idea why he dropped off the face of the Earth like that. I mean, just because he and my mom didn't get along any more didn't mean he had to stop talking to me. I always thought we were close, but I guess I was wrong,\" she said, finishing her plate.\n\nI didn't have any words of wisdom for her. My parents were only five minutes away and I saw them twice a week. I had no basis for comparison. She had little to say after that and we finished our meal and headed home. \n\n*\n\nAs we walked in, I noticed something not quite right, namely Jim trying desperately to get out the living room window.\n\n\"Stop!\" I shouted. Jim pulled his head back through the opening. \"What are you doing here?\" I said, trying to sound as irritated as I actually was. I really didn't need to ask with him trying to hold up his pants, but I wanted to hear him say it.\n\n\"Funny you should ask that,\" he said, buckling his belt. \"My friend needed to use a bathroom and we just happened to be in the neighborhood,\" he explained while Shaky waved to us from outside. \n\nI wandered into the bedroom and it was a wreck. \"That's it! Both of you get your asses in there and fix it up! Now!\" I hollered, pushing Jim done the hall. Donna yanked Shaky back through the window and shoved her toward Jim. I stood in the doorway with my hands on my hips watching the two. \"Change the sheets on the bed.\"\n\n\"They ate the ham!\" shouted Donna from the kitchen.\n\n\"You two ate a ten pound boneless ham? That was supposed to last me and Donna until the weekend!\" I asked astonished. \n\n\"We were hungry,\" said Shaky.\n\n\"What, like Fred and Wilma Flintstone?\" I looked back toward the kitchen and asked, \"Is there anything else missing?\"\n\nDonna looked around the corner and sheepishly replied, \"They got your six-pack of Miller too.\"\n\nJim and Shaky were done with the bedroom and stood there like two kids knowing a spanking was coming. I pointed to the front door, grit my teeth and said, \"Get out. I don't want to ever see either one of you again.\" \n\nThey both stood there.\n\n\"Get out!\"\n\nThey went quickly and silently. I may never see Shaky again, but something tells me that I haven't seen the last of Jim. \n\n\"What does that leave us with in there?\" I asked, feeling low.\n\nAround the corner of the kitchen a potato with her Groucho glasses on and forks stuck in for legs with Donna's voice said, \"Well, they didn't touch any of the stuff I made to go with the ham. We could make sandwiches tomorrow and get another ham on Thursday. You can make another run across the bridge for your beer too. We both have the rest of week off so it won't matter that much.\"\n\n\"I guess,\" I said to Mr. Potato head.\n\nDonna came out of the kitchen and gave me a hug. \"Let's put the presents under the tree.\" \n\nThere was one heck of a lot of presents sitting there when we were done. It almost made the tree look less immense. \n\nShe grabbed the potato guy and held it up to my face. \"I'm tired. Want to go to bed?\"\n\n\"Are we going to have sex? I don't think I can take any pounding tonight,\" I said as a reminder. \n\n\"I'll go easy on you, but wait here until I call you in,\" she said, skipping into the bedroom.\n\n'I hope I don't have to do Mr. Potato head too,' I thought.\n\n\"Okay, come on in,\" I heard her say through the closed door. \n\nI heard bells jingle. 'Oh boy...'\n\nThere she stood dressed as Kris Kringle complete with boots and hat with jingle bells on the top. Well, she wasn't completely dressed like him; she was bottomless.\n\nIn the deepest voice she could muster, she said, \"Ho, ho, ho. You've been a good boy this year. Tell Santa what you want.\"\n\n\"More oral sex?\" I asked, hopefully.\n\n\"Santa takes a pass, try again,\" she said, shaking her jingles bells at me.\n\nI thought for a moment, wondering what we could do that wasn't going to hurt. Finally I said, \"How about I return the favor to you from the other night and then you can give me a,\" I jerked my hand up and down.\n\n\"Santa likes the first part but the second needs some work.\" She hopped on the bed and drew her knees up exposing herself. \"Santa says mush!\" she commanded.\n\nI'd never done this before but I'd read some adult books that were explicit as well as educational. I laid down between her legs and kissed her. \n\n\"Nice,\" Santa moaned.\n\nHer scent was sweet and not what I expected. I'd always heard that it smelled like fish. Of course, this was Donna and she wasn't like anyone else. Why should this be any different? I used my tongue to find her clit and fingers to expose it fully. I was gentle because I'd read it was sensitive. \n\n\"Santa says, you found the mark now mush, mush!\" she said, sounding a lot more like Donna than Santa.\n\n'To hell with being gentle,' I thought as I gunned it. I flicked and jammed my tongue as fast as I could on her button while as she bucked her hips below.\n\n\"Almost there,\" she said, grabbing the back of my head and grinding herself on my face. \"Yes!\" she said followed by a wail sounding like she'd just stubbed her toe. \"Santa says thanks,\" she said breathlessly and blew on a party favor. \"Now I know what they mean by a 'Holly Jolly Christmas.'\"\n\nI made a trip to the bathroom to make sure I wasn't bleeding and to remove Santa's pubic hair that was lodged between my teeth. When I returned, Santa had removed 'his' coat and was displaying perfect 38 double D breasts. I dropped my pants and said, \"Why Santa, what beautiful boobs you have.\"\n\n\"Ho, ho, ho. Glad you noticed. Come here and lay down,\" 'he' said, patting the bed. I did what I was told and she produced a small bottle of suntan oil. \"It was on your dresser.\" She poured some on her hand and rubbed it generously over my dick, careful not to touch the bruised area. \"No, this is not going to be a handjob,\" she said shaking her head at me.\n\nShe finished applying the oil and then oiled up her breasts. Kneeling between my legs and propping herself up on her elbows on either side of me left her beautiful boobs lying on my groin. \"Ho, ho, ho, do you know what to do?\"\n\nLittle Ralph slid into place and slid back and forth. \"Like this, Santa?\"\n\n\"You learn quickly,\" 'he' answered.\n\nIt didn't hurt at all and since I was doing it at my own pace and didn't have to worry about how 'Santa' felt I was able to enjoy myself. Her breasts were so soft and the look on her face of coming up with something much better than a handjob excited me even more. Used my hands to cup her breasts and mold them around me, their soft flesh caressing me with each stroke. My breathing got faster but I slowed my rhythm relishing the imminent explosion to take place.\n\n\"Santa says show him how much you like this. Make it a big one.\"\n\nI'd nearly slowed to a stop as my toes curled and thigh muscles seized up. One last slow push all the way, a groan, and a blast shoot out and hit the wall behind my head. The next mighty jet hit so hard it rebounded back on my face. The remaining projectiles landed on my shoulder and chest. It took a moment to catch my breath and Donna wiggled her boobs over my crotch.\n\n\"Santa sees you like that,\" she said.\n\n\"Wow,\" was all I could muster.\n\n\"I got to tell you Ralphie, that was pretty amazing,\" she said in her own voice, pointing at the wall.\n\nAll over the world, Santa Claus, Father Christmas, Kris Kringle, or whatever name he was known by, was busy sliding down chimneys making dreams come true. We never heard him as we both slept very well that night.\n\n*\n\nWhen I woke, Donna was already up and the radio was playing Christmas songs. The smell of coffee beckoned me as I put my robe on and headed to the bathroom. When I came out, Donna was standing there holding a Christmas mug brimming with my morning caffeine and laid a big wet Christmas kiss on me. \n\n\"I'm going to make a nice breakfast for us since dinner's gonna suck. Do you want to eat before we open presents or after?\" she asked.\n\n\"After I guess,\" I replied, noting that it was already after noon. \"That way all we need is to eat light later,\" I said, explaining my reasoning. I dug out all the things I got for her and shoved them in her direction. One by one, she opened them and made a big fuss over each. \n\nWhen she was done, I was thanked with several kisses and hugs. Then she handed me a few things. \"I'm still waiting for one of the presents to get here,\" she said, putting on her new robe and slippers.\n\n\"Dancing girls?\" I asked, kidding.\n\n\"You want me to dance?\" she asked, standing up and twirling around.\n\n\"Not the right kind of mood music,\" I joked.\n\n\"Yeah, it's kind of hard to find the beat to 'Silent Night'.\"\n\nI opened my things and they were all small stuff like new combs and a toothbrush. I thanked her and gave her a hug.\n\n\"Well, I guess I'll start breakfast,\" she said, looking at the clock and sounding disappointed. As she stood, there was a knock at the door. She started jumping up and down ran to the door. She looked through the peephole and said, \"It's here!\" She whipped the door open and there stood Paulie Toucan and Paulie Asshole. On the floor in front of them was a large wrapped box with a bulging paper bag sitting on top.\n\n\"Merry Christmas!\" said Toucan.\n\n\"Yeah, whatever,\" said Asshole.\n\n\"Merry Christmas to you guys,\" Donna said, motioning them in. \n\nToucan handed her the paper bag and then both of them picked up the box and carried it in. \"This is for you, Douche Bag,\" said Asshole.\n\nDonna started to close the door but Toucan stopped her. He reached out in the hallway and brought another box in. \"This one's for everybody,\" he said setting the box on the new coffee table. \n\n\"Holy shit, thank you,\" I said, wondering what was in the box.\n\n\"It's not from us, it's from your Sweetie,\" said Toucan. Then he shrugged, \"Maybe we helped a little.\"\n\n\"You're never going to believe what's in the bag,\" said Donna.\n\nWith these two, I would. \"What is it?\"\n\n\"A twelve pound boneless ham,\" she said, needing two hands to pull it out.\n\n\"How is that even possible that they knew about the ham from last night?\" I asked, stunned.\n\n\"Your girl asked us over for dinner today when she asked us to help her with this,\" Toucan said, giving the box a tap with his foot. \"We came by last night to drop it off but it sounded like you were having a problem so we waited in the car for things to settle down. When your friend came out, we got the whole story and decided to wait and come back today. In the meantime Paulie here found that on the back dock of the butchers.\"\n\n\"Kind of strange that they leave things like that sitting around. Fucks up the profit margin,\" Asshole said, giving us an economics lesson.\n\n\"What's that?\" I pointed to the gift for everybody.\n\n\"Oh,\" said Toucan as he unwrapped it. \"Want one?\" he asked. It was a whole case of Miller and it was ice cold.\n\nI looked at my coffee and back at the beer. \"Yes, please!\" I replied.\n\n\"The beer distributor has a fucked up profit margin too,\" said Asshole. \n\n\"Excuse me, I'm going to stick this in the oven. Forget breakfast, we're having a Christmas dinner. Don't open that until I come back out!\" Donna said, pointing at the big box as she rushed into the kitchen. \n\nI asked them to sit and made some small talk. \"Are either of you married?\"\n\n\"Nah,\" Toucan replied.\n\n\"Fuck that,\" Asshole stated.\n\n\"How about girlfriends?\" I asked.\n\nToucan shook his head. \n\n\"What is this, the fuckin' Inquisition?\" quipped Asshole.\n\nI heard the oven door close. \"Okay,\" said Donna wiping her hands on a towel. \"Open 'er up!\" \n\nThe tag said 'To Douche Bag from Your Gal'. Very sentimental. I opened it up and couldn't believe what I was seeing. It was a brand new 22\" Quasar by Motorola.\n\n\"We just happened to have an extra one and seeing that girlie here was in the market for a TV for you, we gave it to her cheap,\" said Toucan helping me pull it out of the box.\n\nI dragged the TV cart out of the closet, set it up on there, and plugged it in. Even running off the internal antenna the picture was amazing.\n\n\"Oops, wait,\" said Asshole, as he produced a screwdriver and pulled the serial number plate off the back of the set.\n\n\"We don't want to leave anything that would lead back to us,\" said Toucan, innocently. \n\n\"Sorry, but your warranty is void,\" stated Asshole, as he pocketed the plate and screwdriver.\n\n\"Those things go for around five-hundred bucks. How much did you pay for it?\" I whispered in Donna's ear.",
        "\"Do you really want to know?\" she asked. I nodded. \"Let's just say that it was probably around what you spent on my clothes.\"\n\n'Screw the warranty,' I said to myself.\n\nSomeone pounded on the door. I went to open it and it was Tony the cop. \"Merry Christ...\" was all I managed to say before he pushed me out of the way.\n\n\"There you are,\" Tony sneered, grabbing Toucan and Asshole by the coat. \"I've got you dead to rights this time.\"\n\n\"What for,\" asked Toucan, nonplussed.\n\n\"For fencing stolen goods like that coffee table there.\" He turned and saw the Quasar. \"A semi of these got high jacked a month ago and I'll bet that thing as hot as the table. Lucky for me I just happen to have a list of the serial numbers of the ones on the truck.\"\n\n\"You got it all wrong officer. We just came here for some Christmas grub. Help us out here, Roy,\" asked Toucan.\n\n\"It's Ralph,\" I replied. \n\n\"You're in trouble too, my friend,\" said Tony. \"Receiving stolen property is a serious crime.\" \n\n\"Come on, Rudolph, tell him where you got this stuff,\" pleaded Asshole.\n\n\"I found the table on the side of the road. It must have fallen off the back of a truck. I guess I was lucky to be the first person by,\" I lied.\n\n\"If it fell off a truck, how did the glass top manage to stay unbroken?\" his inquiring mind wanted to know.\n\n\"I was surprised myself. It was still in it's original box and the glass top was packed in Styrofoam and shrink wrap,\" I said quickly. \n\n\"How do you explain the TV?\" he said, relaxing his grip on the boys.\n\n\"Donna got it for me for Christmas,\" I said, nodding in her direction.\n\n\"Where?\" he snapped.\n\n\"Silos,\" she lied, never missing a beat.\n\n\"Let me see the receipt,\" he said, letting go of both Paulies.\n\n\"It's taped here on the box,\" she said, turning it around a few times.\n\n\"That place is a scam. The employees rip off the place by selling the stuff for cash and pocketing the money. I bet if you look you'll find the serial number's been taken off so it won't track back to them,\" said Tony, turning the TV to inspect it. \"There, see?\" he motioned at the spot where it'd been ripped off. \"Good luck using the warranty if it breaks down.\"\n\n\"I'm sorry, I don't see the receipt right now, but I paid six-hundred and ninety dollars cash for it,\" lied Donna through her teeth. \"Maybe it's in the bedroom.\"\n\n\"Forget it. If you paid that much money for this thing, you got ripped off big time. It's an expensive TV but it's only worth about five, maybe five-fifty with a warranty.\" He snapped his fingers. \"Hey, maybe they forgot to get the serial number off the bottom of the box.\"\n\nBoth Paulies turned pale as ghosts. Donna shook her head and I held my breath as officer Tony lifted the box to look.\n\n\"No luck,\" he said, dropping the box back down. \"The box must've been dragged 'cause the label is scuffed off.\" He raised his head and sniffed the air. \"Something smells good.\"\n\n\"It's ham,\" Donna replied. \"Do you want to stay for dinner?\"\n\n\"Thanks for the offer, but I have to go check in. My shift's almost over and my wife's got dinner going at home.\" He headed for the door and stopped. \"You two ought not to get involved with these guys,\" he said, motioning to the Paulies. \"They're always up to no good.\"\n\n\"Tony, this is Silly Toots' kid,\" said Toucan.\n\nHe reached a hand out to her hair. \"Donna?\" he asked.\n\n\"Yep, that's me,\" she said grinning.\n\n\"I should have recognized you. Nobody has hair like yours. How is your dad?\" he asked.\n\n\"I don't know. I haven't seen or heard from him for a while. My parents broke up,\" she said, looking away.\n\n\"I'm sorry to hear that. Look, forget I brought it up. You folks have a good Christmas day,\" he said and left.\n\nThe Paulies and I sat on sofa and cranked up the Quasar.\n\n\"Thanks for the help there, Douche Bag,\" said Toucan, giving me a thumbs-up.\n\n\"The same here, Ra\u016dl,\" said Asshole. \n\nThe phone rang. \"Ralph, could you get it?\" asked Donna, as she was juggling casseroles around in the oven.\n\n\"Who's Ralph?\" asked Asshole. Paulie shrugged and shook his head.\n\n\"Hello.\"\n\n\"Hello, this is the operator. I have a long distance person to person call from Silvio Brunner for Donna Brunner being paid for by a third party, is she there?\"\n\n\"Hold on,\" I answered. I looked at the boys and mouthed the words, 'It's her dad!'\n\nAsshole and Paulie winked at each other and shook hands.\n\n\"Ah, Donna, it's for you,\" I said, acting like it was a survey.\n\nShe came out of the kitchen and I turned down the TV for her. I plopped down between the Paulies and we all held our breath.\n\n\"Hello,\" she said. \"Yes, this is Donna Brunner...Excuse me... Okay, I'll hold...\" She looked up at us. We could hear his voice across the room.\n\n\"Merry Christmas, baby doll. How's my little mop head doing?\" \n\nDonna immediately started laughing and crying at the same time. I motioned the guys to get their coats and follow me outside. I wanted to leave her to her privacy and they nodded in agreement. We stood out by our cars and the guys lit up.\n\n\"I needed one of these when Tony was there,\" said Toucan.\n\n\"Thanks for not smoking in the apartment. I don't care but it makes Donna sneeze.\"\n\n\"She really doesn't know where here father is?\" asked Asshole, almost more of a statement than a question.\n\n\"Don't,\" Toucan warned Asshole.\n\n\"The operator said the call was being paid for by a third party.\"\n\nThey both started laughing. \"Somebody somewhere is gonna find that phone call on their bill next month. They dispute making it, it comes off the bill, and that's that,\" said Toucan. \n\nThey smoked another and then Donna stuck her head out the door. \"Dinner's ready.\"\n\n*\n\nLater that night, Donna told me what happened. It seems that Silvio Brunner and her mother did break-up and not long afterward, Toots was nabbed for running numbers and loan sharking. He was serving a one-year stint in an Arizona correctional facility and didn't want Donna to know. He thought he would be out on parole by now, but he violated some rule and had to serve his whole sentence. When Paulie Toucan put out the word, he found out quickly where her father was. He simply passed the word for him to make sure to call his daughter at this number on Christmas day.\n\nI'm sitting here eating a ham sandwich while Donna dreams sweet dreams. The only light I have is coming from the tree. It really is a nice one. I'm glad Donna picked it. \n\nYou know, my crotch doesn't feel half bad today. Maybe I should find another condom that's 'ribbed for her pleasure'. I wonder what color it'll be today.\n\n*\n\nThat was it. \n\nRalph turned the page and saw another date and title:\n\n\"Saturday, January 17th, 1975.\"\n\n\"Donna's abscess.\" \n\nHe shuddered. \"I think I'll leave that for another time,\" he said to himself, closing the book. He dropped it into a box he reserved for paperwork and marked it 'Save'. Looking out the small window he saw that it was dark outside. \n\n\"Are you coming down or what?\" his Pop yelled.\n\n\"I'm coming now,\" Ralph answered, pulling the string to turn off the light.\n\n\"Go and get changed, we're taking Grandpa out to dinner,\" Pop said, as he steadied the ladder for Junior to come down.\n\nHe washed his face and hands and put on clean clothes. He liked Grandpa. He was always funny and now that he knew his little secret, some of his stories might now make more sense. When he came down the stairs, he saw that his parents had already set up the tree and decorated it. He sat down to wait until they were ready and looked at it. Just under the star on top, there was an ornament he'd seen as long as he could remember, but never gave it a second thought. \n\nIt was a Toucan. \"What do you know,\" he mumbled.\n\nThey got to the rest home and Ralph and his mother went in to get him. He was seated in the front entryway waiting for us. Ralph helped him to his feet and he broke wind.\n\n\"Sorry. Hi Baby Doll,\" he said, kissing Donna on the cheek. \"God you're tall,\" he said looking up at Junior. \"Where we goin'?\" Grandpa asked.\n\n\"Vito's,\" answered Donna.\n\n\"Oh good, they have great veal,\" he said.\n\n\"Grandpa, got any good stories tonight?\" Junior asked.\n\n\"I got a million of them,\" he replied, jabbing Ralph in the side.\n\n\"Great,\" Junior said, rubbing his hands together in anticipation.\n\nThey arrived at Vito's and the place smelled great. Ralph looked around and saw a few open tables. In the corner was a table with five guys playing cards. He saw a tall one, a short one, a fat one, one with a huge nose, and one that looked like...\n\nOne looked up and pointed. \"Look who the fuck just walked through the door!\"\n\n...an asshole.\n\n\"Toots!\"\n\n\"Toots!\"\n\n\"Toots!\"\n\n\"Douche Bag!\"\n\n\"Rufus!\"\n\nMerry Christmas."
    ],
    "authorname": "Kirk482002",
    "tags": [
        "christmas",
        "handjob",
        "oral sex",
        "condoms"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/a-very-ditzy-christmas"
}