{
    "title": "BDSM: Toybox Tips On A Budget",
    "pages": [
        "Not everybody can be Christian Grey or even aspire to that level of luxury. Most people in the BDSM scene are required to be budget conscious as a singular purchase can blow the weekly toy allowance out of the water for a month. So I thought I would write my \"How to...\" essay on how to build a fabulous toy box on a budget.\n\nFirstly grab yourself a medium-sized box, no not a cardboard box, we are not cheapskates here just frugal and prudent with our money. I have a wooden box that is detailed to look like a pirate chest that I picked up in a second-hand market and then relined it myself. Markets are the budget conscious submissive's best source of toys and equipment so you should get to know your local markets, op-shops and good-will stores well. I know some people feel put off entering these places but all the money you spend there goes straight to the charity involved, so I have never understood the stigma of picking up a bargain even if you are using it for a purpose it was not meant for.\n\nBack to the box. You will need something sturdy and try to imagine a crop, cane or large flogger fitting across its length or width so that you don't get it home and realize your toys won't fit. Old suitcases can be perfect if you have a lot of large toys, just be careful. When your mother comes to ask if she can borrow a suitcase for her trip make sure that you give her the right one. My sister was searching my room for batteries one day and, to her horror, opened my toy chest during her search. She has never gone into my room to search for anything since so having the toy chest found isn't always a bad thing but it can lead to questions you may not want to answer.\n\nSo finally, after the embarrassing moments of explaining why you are making a toy chest when you don't have any children, you should have your box, suitcase, duffle bag, or even backpack if you're a person who likes a change of scenery. Now we need to fill it with goodies to bring you pleasure or pain or both depending on your kink. So let's look at a few simple things the budget conscious could explore rather than settling for the high-end prices of so many of the kink stores.\n\nSilk scarves: the most versatile thing in your chest. They can be used as restraints, blindfolds or for pleasurable sensation. The best thing about these items is that you can pick up ten for a dollar at most good-will stores, soak them, wash them and they are good as new!\n\nBlindfold: Pick these up everywhere from pharmacies to sleepwear shops: an inexpensive buy but if you are wanting a particular look, say an animal, a puppy, a kitty, or the owl from the story of O, then head to the local party outlet and grab a few masks and just tape over the eyes.\n\nCandles: I have found that standard old table candles are best, or basic coloured candles, which is great because they are also the cheapest. You don't want to use scented candles or any of the weird fancy ones, as there are often a large variety of strange things in the wax that can cause irritation to the skin. A tip with using candles is always start a long way from the skin and move down until you find that happy medium that suits you or your partner. The closer you are, the hotter the wax will be and as with firing a gun, always be mindful of your background. Wax can be a real pain to get out of some surfaces\n\nPinwheels and pricking tools: Head on into your favorite department store and over to the kitchen area unless you know of a great outlet or your local good-will store that has a kitchen section. In amongst the bakery equipment you will find all sorts of pastry cutters, pizza cutters and yes pinwheels that are meant to aerate pastry and pasta not the soft skin of a submissive but work beautifully! Also in the kitchen section another little gem of an item that works well for this type of sensation are small wooden and bamboo skewers, the ones you use for barbeques. These are sharpened at one end and can provide an amazing sensation, be it with just the one or a nice little bunch held together. They can be used for pricking (as the sharp end is still quite blunt and won't pierce the skin without a LOT of force) or used to flick from a short distance. These are a nice versatile little item that can be discarded after use as they are so cheap and can be easily found.\n\nVampire Gloves/rabbit fur gloves etc: As an easy solution to the big-bucks items like these that might cost you dearly, I have a few suggestions and while not quite the same, can be fun to play with. In the car-care section of the department store you will find furry mitts and chamois mitts can give you those soft tickling sensations and in the bathroom section, loofah mitts can give the most wonderful sensations similar to a vampire glove but not as intense. In the absence of these, in your local shopping haunts head back to the good-will and pick up a few pairs of light material gloves and use sandpaper and the fur lining from an old jacket or a cheap jacket from good will to create your own with the help of some good craft glue or a sewing kit.\n\nClamps (nipple and genitalia): Let me say up front I DO NOT ever suggest or condone the use of rubber bands directly on the body, there is a lot of literature out there to explain the damage they can do to nerve endings so I won't lecture everyone except to say, while I do mention them here, they should not be applied directly to any body part. Clothes pegs are a cheap and easy solution for those who do not like messing around with fiddly things. There are some things that pegs alone are good for (zippers) so this makes them an even more versatile item. I would suggest that wooden pegs be used as they are less prone to breakage (no little plastic slivers - especially if you choose to whip those little buggers off instead of a slow release) and they have a much nicer feel as well. \n\nFor those who like to be able to adjust the tension and variety of clamps I have a few different suggestions. Seek out an orthodontist and buy yourself a small bag of those tiny bands used on mouth braces, these are fabulous and can be used in so many ways. Used on a pair of tweezers they can be slid up the prongs to tighten the tension to the desired limit. They could also be used in conjunction with chopsticks to flatten and clamp the desired body part. If you are looking for something way out there and very study however, I am assured by a friend that the old style jumper cables which you can pick up really cheaply these days can work a treat. I have never used these nor am I personally into electrical play so I am mentioning it only as an aside as told to me by a dominant friend.\n\nPaddles: I know I don't have to tell you all to go to the sports store for ping pong paddles but perhaps some of you may never have investigated the kitchen section of the local department store and their range of paddles. Large ones for pizza ovens, smaller ones used as cheese boards, in a range of light to heavily-weighted materials. As with the gloves mentioned above, they can be covered with a range of materials to make that sensory element all the more surreal during a scene in both texture and sound. Hair bushes and even puppy brushes can work well for this too, depending on the feel you want and if a particular object sets a scene for you.\n\nBrushes: For the body not the hair. There is such a vast array I encourage everyone to try them all from hair brushes to tooth brushes and everything in between. Make-up brushes and pasty brushes can be soft and titillating while scrubbing brushes and pet brushes can be harsher and enliven the skin, the combination of the two can be amazing.\n\nShort & long floggers in a soft suede: Sometimes there is just no real substitute for the real deal but I have friends who have made their own floggers, both soft and harsh, out of a variety of materials including old suede clothing which may otherwise be thrown out. My tip here would be, if you are interested in making your own, is to get to know the owners or managers of the second-hand and good-will shops. Mostly, if a donated garment is damaged by water, or whatever, they will throw them out as no one will buy it in their shop. Let them know you will take those things and you're in business! If that is unsuccessful, quite often men's clothing stores will sell leather thongs as replacement ties for specific shirts or pants.\n\nCrops and canes: As with the above, sometimes there is just no decent substitute for the real deal, but if you really need one let me suggest you check out your kitchen and the wonderful world of wooden spoons and flexible spatula's. The variety of size and weight is astounding. The short-handled variety can be good for those in long distance relationships where self-abuse is part of your Skype cam-dates. Rulers can work well too. In the end though, if this is your kink, I would gather a range of leather belts in different thicknesses and sizes, but I am very much a leather lover.\n\nCollar and leash:  The obvious solution here would be to head on down to the local pet shop and go nuts! Leather collars, choker-chains, harnesses and leashes in a variety of colours and styles. For a permanent collar that a submissive could wear out in public though, I would head to a pawnbroker or cut-price jewelry shop. Quite often choker-style necklaces come with heart shaped locks or nice wide chain links that can take a leash attachment or the addition of a ring and dog tag. In truth the options are limitless. Thicker dog collars can be doubled up and used as neck corsets for those who enjoy that type of kink.\n\nCuffs and ropes: Soft nylon rope is best for the true enthusiast. However for short-term use, lengths of nylon laundry rope could be used with caution. Strangely enough cling wrap can be used for the same purpose and has the advantage of being able to immobilise larger areas of the body. I have seen it used with good results as an arm binder. Strips of Velcro can be used in a similar way and can be very efficient especially for quick release holds, but do not have a long life span and will need replacing reasonably often, depending on how frequently you play.\n\nSpreader bar: Your local hardware store will sell you lengths of thick dowl or you could cut up a broom handle to the size required. Once done insert large eyelets at various intervals. Non-locking carabiner's can be used in conjunction with this as the easiest method for use, but it is not hard to thread a scarf or other form of restraint through them.\n\nInsertion toys: Dildos, Vibes, Anal toys: Here is one place I will say there is no substitute for quality. Take all of the money you might save from being frugal with the other bits and pieces and get yourself something that is going to rock you or your partner's world. People joke around and play with using fruits and vegetables, candles and even ping pong balls. I am hardly one to throw stones or be judgmental, as I am very curious girl and have experimented myself but if you do experiment, be sure to look after yourself and be sure you have no allergies or anything that could cause a drastic reaction.\n\nFinally, being the Santa's little helper type of girl I am, here is my biggest tip, stock up on batteries whenever you see them on sale. Butterflies, bullets and eggs can have odd-sized batteries so make sure you know what you're after, put a little list in your phone to remind you because we always see bargains when we are least prepared and batteries can burn a hole in your budget as easily as the toys themselves.\n\n*****\n\nHaving said all of the above, I cannot stress enough the importance of safety and being prepared for any eventuality.  I would strongly urge anyone creating their own toy box to have an extended safety kit. Here are some of items I have in mine.\nAloe Vera gel and/or lotion for Aftercare\nBandage Scissors (the kind with one end blunt so you can get it under ropes without piercing the skin)\nA box of latex gloves\nWater based lube\nCondoms (to use on the dildos and vibrators less cleaning.)\nFlashlight.. (be prepared) \nEmergency candles (also can be fun)\nFirst-Aid Kit \n*****\n\n\nThis is by no means definitive or a serious attempt to cover everyone's kink or fetish, it's just a sharing of some of things I and my friends have learned and shared over the years. If you feel the need to correct my take on things or add your own personal preferences please feel free by using the contact button on my home page. I always try to reply if you leave an email address to reply to. I am much better at responding to comments made through the contact button and subsequent email than I am in the comments section at the end of the story.\n\n\nHappy bargain hunting to you all!"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "toys",
        "candles",
        "pinwheels",
        "clamps",
        "scarves",
        "safety"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/bdsm-toybox-tips-on-a-budget"
}