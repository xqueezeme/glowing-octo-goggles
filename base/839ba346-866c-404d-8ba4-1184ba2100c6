{
    "title": "Halfway to Nowhere",
    "pages": [
        "At twenty-four, Angie Barrett had slept in more strange beds than she cared to admit. Her back ached almost as much as her head did. Working only brought frustration. Nothing would silence the demons wreaking havoc on her mind after a shocking conversation with her parents. The young woman was ready for a change and Route 66 called to her soul. She realized she didn't even need a specific destination as long as she followed the popular highway. \n\nA week later, she was Halfway to Nowhere. \n\n**** \n\nAngie grabbed the coffee pot as the elderly couple walked toward the corner booth. The Sanders ate at Lou Mitchell's Caf\u00e9 every night. Angie was their favorite waitress. \n\n\"Young lady, do you ever have any time off?\"\n\n\"Every morning, Mr. Sanders,\" Angie replied as she filled the coffee mugs on the table. \n\n\"You look tired, honey,\" the older woman said, her concern reminding the young girl of her grandmother. \"Are you having trouble?\"\n\n\"Now, Martha,\" the old man said. \"You remember what it was like at her age. The boys around here would have to be blind if they didn't notice this one.\"\n\nAngie shook her head at the elderly man's suggestion. She enjoyed serving the couple and took a few minutes to visit with them whenever she could.\n\n\"Git busy, girl,\" the cook yelled. \"Food's gittin' cold.\"\n\n\"Time to work again,\" she said. \n\n\"You should tell that horrible man where to put his job,\" Mrs. Sanders said.\n\nThe young girl laughed at how feisty the eighty-year old woman sounded. But Angie hadn't gone to college and didn't have many job skills. Working at the diner suited her friendly personality. \n\n\"Someday I will,\" the young girl said with a wink.\n\nThe cook glared at her as she loaded several platters of food onto the oversized tray. Her shoulders ached from carrying them each day. Yet she didn't complain. She knew it wouldn't do any good. \n\n\"Table four needs coffee. Six and eight are waitin' for dessert. You're fallin' behind, girl.\"\n\nThe balding and overweight cook chewed on a toothpick as he spoke. His constant stares gave Angie the creeps so she stayed as far away from him as she could. \n\n\"Ya' can't keep up, I kin find someone else,\" he said, already anticipating hiring a meek young girl who would thank him in ways Angie refused.\n\nHe harassed her for the rest of her shift until the young woman lost her temper. \n\n\"Keep your fucking hands away from me!\" she yelled when he reached around her with both arms.\n\n\"Jes' gittin' the salt offen the shelf.\"\n\n\"You could ask the way most normal people do.\"\n\nThe dark glare he intended as a way to frighten her did the opposite. She threw a stack of plates against the wall. Then she wagged her finger in front of him. Before she could say anything, she made a decision.\n\n\"You know what? You're not worth what I'm thinking. I quit,\" she said, untying her apron as she spoke. \n\n\"Ya' can't talk to me like that, you scrawny little whore. I'll\u2014\"\n\n\"No you won't do anything because you're afraid I'll tell the cops about that illegal gambling you've got going on in the back room.\"\n\n\"Git back here!\"\n\nShe yanked her jacket off the hook in the back room and ignored his screaming threats. Before she shoved the front door open, she faced him and raised her middle finger. \n\n\"Go fuck yourself.\"\n\nHis stunned look made her laugh as she ran to her car and drove away. Reality set in as she realized he most likely wouldn't pay her for the week. She still lived with her parents and although they didn't charge her rent she couldn't go without any income, either. Thinking about what to tell them, she parked at the curb in front of their house and went inside, hoping they would understand. \n\n\"Mom, dad, I'm home.\"\n\n\"Angela, would you join us in the den, please?\" \n\nHer mother's words were more a demand than a question. She generally obeyed her parents anyway, but there was something about the tone of voice the older woman used that bothered the young girl.\n\n\"What's going on? You guys OK?\"\n\n\"Your father and I . . . sit down, Angela; we have something to tell you.\"\n\n\"You look so serious.\"\n\n\"Angie, sit down and listen,\" her father said. \n\nStan Barrett stood next to the fireplace. Agitation replaced his normally cheery disposition and that worried Angie. \n\n\"Daddy?\" Her fear and uncertainty of the situation made her feel six years old again. \n\n\"No matter what, I love you,\" he said.\n\n\"You're scaring me,\" the young girl said. \"What's happening?\"\n\n\"There isn't an easy way to say any of this. But it's time you know the truth.\" Her mother paused to clear her throat. \"You know about the years your father served in the military. The war . . . I was lonely and scared when he left. So many men weren't returning and, it isn't an excuse, but, I spent several weeks with someone else.\"\n\nAngie stared at her mother. Her father remained silent as his wife continued. \n\n\"Your father returned and we resumed our marriage. I remained faithful from that day on, but I was already pregnant by then. He didn't know, at first, but I couldn't hide the timing for long. We agreed no one would know. Angela, I never intended to . . . if I could take it back, I would. It happened before I even realized what I was doing.\"\n\n\"Who is he?\" Angie asked.\n\n\"I don't know. I mean, I knew his first name, but we never really shared anything personal.\"\n\n\"Nothing personal? How much more personal can you get than to sleep with someone?\"\n\nAngie struggled not to say more. Her head hurt. Nothing made sense. She glared at her mother before she ran to her bedroom. How could her father not be her father? How could her parents have lied to her all her life? She couldn't understand how her mother could have cheated. Not only had she slept with another man, she had done so while her husband was fighting a war in a foreign country. \n\nSuddenly she felt as if she didn't have an identity. She was a Barrett, yet she wasn't really a Barrett. Her father\u2014no, he wasn't her father. Some nameless stranger her mother had sex with was her father. Married less than a year, her mother opened her legs to another man, just because she was lonely. \n\nThe young girl shifted her attention to the man she called her father. He loved her, she didn't doubt that, but who was her real father? Angie tried to imagine what drew her mother to another man when she had a husband. She began envisioning the color of his eyes and his hair and wondered if she took after him. How would she ever know since her mother apparently didn't have any idea what his full name was or where he was from? \n\nThe sun slid from the sky and the moon took its place. Angie remained in her room, wide-awake. At some point, she realized she couldn't stay living with her parents any longer. She couldn't promise not to lash out at her mother or inundate her with questions. And the man she thought of as her father . . . she didn't even know what to call him anymore. \n\nThe rising sun brought her answer. She had to leave. It didn't take long to pack and even less time to toss her bags into her old Chevy. For a moment, she thought about writing a note. When she realized she didn't know what to say, she walked out the back door, pulling it shut behind her. \n\nWithout a destination in mind, she drove across town and headed toward Route 66. Choosing the famous highway was a conscious decision. Working at the caf\u00e9, serving travelers and tourists as well as locals, she often heard stories about the adventures people found on Route 66, something she desperately needed.\n\nTaking off on a whim, without her family's knowledge, didn't seem dangerous to her. After her mother's admission about her true father, Angie needed to find a sense of calm to her world again. She settled behind the wheel of her old Chevy, increased the volume on the radio, and ignored the fingers of fear threatening to choke her. It didn't take long before Angie realized she needed to stop for gas. The attendant sauntered across the dusty driveway and nodded. \n\n\"Howdy, little lady. Whats kin I do fer ya?\"\n\nThe man, his age disguised by a bushy beard and overly long mustache, turned to spit before she replied. \n\n\"Fill it, please. Do you have a soda machine here?\"\n\nHe waved in the general direction of the dilapidated building behind him. A handwritten sign taped against the filthy window warned intruders of guard dogs. Angie hesitated, listening for the tell tale barking associated with the animal. When she heard nothing more than the thumping of her own heart, she took a step.\n\n\"Ain't no dogs.\"\n\nStartled that the man seemed to know her thoughts, she hesitated. A little voice inside her head reminded her she chose to travel alone and might face challenges along the way. She stood straighter, determined to prove she had the strength and courage to survive. Then she ignored that same little voice pointing out she ran away instead of facing her mother. Angie shoved the rickety screen door open and scraped her feet over the wood floor in hopes of silencing the voice. After seeing the flies swarming around the aged soda machine, she changed her mind, retreating from the building without a beverage.\n\n\"Gas'll be three ninety.\"\n\nThe man stood next to her car. He scratched his chin and spit again before holding his hand out for her money. She cringed at the sight of the filth underneath his fingernails and covering his skin. \n\n\"Thank you,\" she said, placing four one-dollar bills in his palm. \"Keep the change.\"\n\nShe didn't wait for a reply before sliding into her car to continue her journey. An hour later her stomach growled. The pounding in her head had refused to leave since the night before. The young girl checked her watch as she waited for a traffic light in Braidwood. She spotted a billboard that directed travelers to the Polk-a-Dot drive-in. Making another quick decision, she drove to the small restaurant and pulled into the first empty space she saw. \n\nA teenager on roller skates stopped at her window and asked for her order. Too tired to read the neon menu flickering in front of her, she chose to rely on the teen's advice.\n\n\"What do you recommend?\" \n\n\"The Polk-a-Burger and onion rings. Oh, and a chocolate shake,\" the teen replied.\n\n\"That's perfect, thank you.\"\n\nThe teen shrugged and skated away. Several minutes later, she returned with Angie's food and bill. The drive-in was busy. Angie noticed a family in a convertible and smiled. A girl, maybe six or seven, leaned over the front seat, her hand on the shoulder of the man at the wheel. Her father, Angie assumed. A sudden vision filled her head of that young girl discovering one of her parents lied just as her own had. She tossed the last of her meal onto the tray in disgust. Emotions clogged her throat until a sob burst free. \n\n\"Can I get you anything else?\"\n\nThe voice startled Angie. She brushed a tear from her cheek and shook her head. The teen unhooked the tray latched to the car window ledge and shrugged as she had before. Angie put the car into reverse and left as soon as the teen skated away. \n\nA motel sign blinking in the distance caught Angie's attention as she stifled a yawn. She felt as if she had aged ten years overnight. Maybe sleep would help her forget for a while, she thought as she pulled into the motel parking lot. Then she grabbed one of her suitcases and went inside. It wasn't very late so she hoped that meant there was a vacancy.\n\n\"You look exhausted. Let's get you a room,\" the old woman behind the small counter said as soon as she saw Angie. \n\n\"I . . .\"\n\n\"Harold! Come get this nice young lady's bag.\"\n\nThe man who emerged from a back room looked far too frail to carry anything heavier than a cotton ball. \n\n\"Oh, I can\u2014\"\n\n\"You just follow Harold and we'll sign you in tomorrow when you're feeling better,\" the old woman said. \n\n\"But\u2014\"\n\n\"He ain't as feeble as you think, honey. Now go. I'll be right behind you with fresh towels.\"\n\nAngie didn't have any choice but to do as the woman instructed. Harold was already several feet ahead of her, whistling as he tottered down a dimly lit hallway. He carried her suitcase in one hand, a room key in the other. \n\n\"Here you go, little lady,\" he said after unlocking a door near the end of the hallway.\n\n\"The water takes a couple minutes to heat,\" the woman said as she laid a stack of fluffy white towels on the bed. \n\n\"Thank you. I'll keep that in mind.\"\n\nOnce the couple left, Angie flopped onto the bed and closed her eyes. Visions of a hot shower soon had her back on her feet. She turned the handle to let the water run while she stripped. When the small room began to steam up, she stepped into the tiny enclosure. A fragrant bar of soap provided vast amounts of lather that left her skin soft and smooth. When she finished, she wrapped a towel around her body, and took another for her hair. \n\nAn extensive search in her suitcase confirmed her suspicion that she forgot to pack pajamas in her rush to leave home. That she was alone, in a strange city, surprisingly didn't bother her. \n\nSleeping naked didn't either. She slid into bed where the scent of roses and sunshine lured her to sleep. \n\nEventually voices woke her. Angie stretched and snuggled back under the covers until they got louder.\n\n\"We can't go in there.\"\n\n\"What if something happened? She's all alone, Harold.\"\n\n\"If she ain't up in an hour, and she don't answer your knock, you can go in.\"\n\nAngie heard the couple from the night before. She sat up, taking a moment to familiarize herself with the small motel room, looking for a clock to check the time as she did. A soft laugh followed when she remembered she didn't have to wake up at any certain time. She tossed the blanket to the side and slid out of bed. Bright sunshine lit the room through the thin curtains. Eager to see the area, she pulled on an old T-shirt before looking outside.\n\nFlowers in every shade and species greeted her. A small statue sat in the middle of a fountain. She imagined dozens of fish meandering through the assorted plants. Adding a pair of shorts to her T-shirt, she grabbed her room key and ran down the hall. \n\n\"There you are. I told her you were fine,\" Harold said when he saw her.\n\n\"Yes, I am. How do I get to that garden?\"\n\n\"Well now, that's Martha's private place. You have to ask\u2014\"\n\n\"Martha?\"\n\n\"My beautiful wife. And she don't take too kindly to strangers tramping through there.\"\n\n\"I think I can make an exception, Harold.\"\n\nAngie turned to see the old woman from the night before standing behind her with a mop and broom. An assortment of cleaning supplies sat at her feet.\n\n\"If you can wait for me to finish the cleaning, I'll bring you out there.\"\n\n\"Can I help?\" Angie asked. \n\n\"Wouldn't be right to let a guest work,\" Harold said.\n\n\"But if I help, we can get it done faster. I'm a good worker. What do you need to do yet?\"\n\n\"Well, the room across from yours went empty this morning.\"\n\n\"Don't you have someone to clean the rooms for you?\" Angie asked.\n\nHarold sighed and shook his head. \"She quit last week. Needed more hours, she told us.\"\n\n\"I'm sorry. I shouldn't interfere, but I don't have anywhere to be today. I'm serious about helping.\"\n\n\"We'll pay you,\" Martha said.\n\n\"We can figure that out later. I just want to . . .\"\n\n\"Yes, I know. The garden is a special place with healing abilities.\"\n\n\"Then lead the way, boss. You can do the light stuff and I'll do the rest.\"\n\nThe women chatted as they worked. Angie didn't understand the pull she felt to that small space behind the motel. Neither did she comprehend her openness with the elderly couple. Not that she was shy or arrogant around others. Yet somehow, their concern touched her.\n\nThe minutes seemed endless to the young girl but the cleaning took less than an hour. Then she was in the garden.\n\n\"This is absolutely amazing. I feel as if I'm in another world,\" Angie whispered.\n\n\"I feel that same way when I come out here. Any time I need to think, this is where Harold will find me.\"\n\n\"Did you put it all here?\"\n\n\"Harold and I moved into the motel thirty years ago. Our daughter died when she was a baby and we needed something to distract us. First we were going to keep it small, but each year we found more varieties to add.\"\n\n\"I'm sorry about your daughter.\"\n\n\"You remind me of how I pictured her to be.\"\n\nAngie wasn't sure how to respond. The couple both seemed to have an uncanny ability to hear words she hadn't verbalized.\n\n\"You can leave your troubles here, honey. If you need someone to talk to, I'm a great listener. If you just need to talk without anyone around, you say so and I'll go inside.\"\n\nMartha pointed to a bench near the fountain. The water that trickled through the statute sprayed back out from the top. \n\n\"I was just thinking how you seem to hear words I don't say.\"\n\n\"I've been told that a few times before,\" Martha said with a chuckle. \n\n\"You know nothing about me. I could be a bad person. I could be a thief . . . or worse.\"\n\n\"I know you're troubled.\"\n\nAngie stared at the old woman. \"You can't know that from a few minutes with me.\"\n\n\"I knew it last night when you walked in.\"\n\nThe young girl looked away but not fast enough to hide the pain. \n\n\"Tears can heal. Let go, honey.\"\n\nThe kindness from a total stranger after the shock from her mother's admission brought more tears to Angie's eyes. Instead of wiping them away, she let them fall. \n\n\"That's it, let go of the pain,\" Martha whispered.\n\nShe sobbed, releasing her anger at her mother. When she stopped crying, Martha handed her a tissue.\n\n\"Why do people lie?\"\n\n\"I can't answer for other people really. Sometimes they're just scared.\"\n\n\"My parents lied. My mom cheated. She slept with someone while her new husband was fighting in the war. All my life, I thought he was my dad and he isn't. Some nameless guy my mother slept with is my father. She didn't even know his full name.\"\n\nMartha didn't reply. She could tell the young girl wasn't done speaking. \n\n\"I thought he was my dad. He's been my dad all my life. When I was a kid, he played games with me. And he learned how to jump rope. But then I found out he isn't and I don't know who I am anymore.\"\n\n\"Do your parents know where you are?\" Martha asked.\n\nAngie didn't react to the question. Her silence was answer enough for the old woman.\n\n\"Did you plan where you were going when you left?\"\n\n\"Nowhere,\" Angie said.\n\n\"Then you can stay here.\"\n\nSurprised at the woman's offer, Angie wanted to accept. Yet the few dollars in her pocket told her she didn't have enough money to stay. \n\n\"I can't afford it.\"\n\n\"You can work for us. We need a housekeeper.\"\n\nShe stared at the fountain for several minutes before nodding. Something about the place felt comfortable. Otherwise, Angie would have questioned their offer, possibly refusing to help.\n\n\"Good. I'll have Harold show you the room you can have.\"\n\nMartha summoned her husband who led her to a little room at the back of the motel. Separated from the rest of the guests, she had a small refrigerator, a hot plate, and a tiny patio. Angie loved the room despite the limited space. The couple left her to unpack but made sure she knew they were available if she needed them. Although the motel didn't have a lot of guests, Angie stayed busy the first two weeks. Martha asked for help with a thorough cleaning of the kitchen. Harold needed a hand rearranging the storeroom. They always had a task for her. Most didn't require much energy. Yet the old couple didn't seem to have the strength to complete them. \n\nThe next few days followed a pattern of cleaning rooms and helping with whatever the couple needed done. However, she soon became antsy. There hadn't been any guests at the motel for almost a week. Angie searched for answers to her restlessness in Martha's garden.\n\n\"We'll miss you.\"\n\n\"I haven't said I was leaving.\"",
        "Martha sat next to the young girl and prayed for the right words. Several minutes passed before she next spoke. \n\n\"We knew you wouldn't stay. You were never ours to keep. But we knew we could provide you with a safe place for as long as you wanted to be here.\"\n\n\"You did more than give me somewhere to stay, Martha. Thank you for trusting in me. I won't forget you.\"\n\n\"Any thoughts on where you're going from here?\"\n\nThe young girl shook her head. \"I just hope wherever I go, I find someone like you and Harold.\"\n\nThey stood together: a wise old woman and a young girl searching for her identity. Both had the future on their mind. Only one was comfortable with what lay ahead. Harold nodded and waved but didn't speak as Angie put her bags into the car. \n\n\"I'll miss you,\" she said to him. \"I'm sorry I can't stay.\"\n\nSuddenly feeling alone and frightened, Angie turned to the old man and hugged him. He draped his thin arms around her shoulders and held her tight. \n\n\"Drive safe, Angie.\"\n\nDetermined to be strong, she slid behind the wheel and started the engine. Then she drove away without a backward glance. Angie wiped the tears from her eyes and knew she wasn't even close to where she needed to be. The irony hit her that she still didn't have any idea where that was. \n\nTraffic was light. Angie obeyed the speed limit even though she thought about going faster. She laughed as she realized driving faster would only get her to nowhere quicker. Near the city limits of a small town, she spotted a hitchhiker. The young man held a sign with a destination that convinced Angie to pull over. \n\n\"That's the same place I'm headed.\" \n\n\"Are you serious?\" the young boy asked. \n\nHe looked at his sign as if checking to be sure no one changed the letters. Convinced it was right, he turned to her. \n\n\"You aren't going anywhere? I mean, you don't have a real destination?\"\n\n\"I'm following the road,\" she said, repeating the words from his sign. \n\n\"I put that on there as a joke, thinking a certain destination might limit the amount of people who would stop.\"\n\n\"Good idea. I'm Angie.\"\n\n\"Jake. Thanks for stopping.\"\n\n\"Everyone needs a helping hand at some point.\"\n\nThe words reminded the young driver of her recent stay with Harold and Martha. The elderly couple needed help to manage their motel. She was able to provide that. Keeping her attention on her driving, Angie understood the couple did the same for her by sharing their knowledge and wisdom. \n\n\"Hey, nice car,\" the young man said, changing stations on the radio as his head bopped to the music. \"I need one of these.\"\n\n\"They aren't cheap, even something as old as this one is. After paying for gas and insurance, I barely had anything left out of my paycheck each week.\"\n\n\"You worked? Old people make work sound so boring. They think everyone wants to become the big boss, doing all sorts of crap to get there. You should hang out with my friends. They don't know much. Most people think they're kind of stupid.\"\n\nAngie knew her brother talked about his friends the same way. She laughed even though she envied the young stranger for having the nerve to leave instead of stagnating at home.\n\n\"Where are your friends?\"\n\n\"They're staying in a deserted hay shed about half an hour or so south of here. I was hoping to be back a day ago but I couldn't find a ride and walking takes forever.\"\n\n\"How far did you walk already? Where did you start?\"\n\nAngie didn't ask because she was nosy. The girl hadn't met a hitchhiker before. Learning what drew someone to the road interested her. She had already noticed the worn sneakers he had on and tried to imagine walking on gravel, sand, and asphalt day after day. She couldn't understand the allure.\n\n\"I went home to see my grandma. Sunday was her birthday and she's sick. Not that I'm sentimental or any of that crap, but I was thinking what if I didn't go home and she died. I wouldn't admit it to my parents, but they're right when they say I'm good at making excuses. Adjusting to their rules sucked and makes it easier to live somewhere else.\"\n\n\"You discovered that before I did,\" Angie mumbled, thinking about her family.\n\n\"Hey, you really should check this place out my friends found. They wouldn't care if you stayed.\"\n\nAngie glanced at the young man riding with her. She knew nothing more about him than his first name and that he seemed polite.\n\n\"I'll keep that in mind. Which way do I go,\" Angie asked as they approached a stop sign. \n\nJake directed her to the right. The road led into a small farming community where a gas station and grocery store were the only businesses in town. Angie wondered what it would be like to grow up in such a secluded area. She couldn't imagine finding enough things to do to keep busy.\n\n\"This place is great for hanging out but man, I could never stay here long,\" Jake said.\n\n\"Weird, I was thinking the same thing. I guess you wouldn't know any different though if you were born here, went to whatever school they have, and only knew people from around here. I mean, how would you know what it was like in the big city?\"\n\n\"My friends talked to the old guy running the grocery store. He said most people had gardens and raised animals to butcher. The women made their clothes like back in the old days.\"\n\nAngie glanced at her shorts and tank top. She remembered how easy it had been to walk into a store and choose them from the endless racks and shelves. Living without access to at least a few good stores didn't sound appealing. \n\n\"Oh, hey, see that fence on the left? There's a gate near the end. Turn there.\"\n\nAngie nodded at the young man's instructions. She pushed her thoughts into the back of her mind and focused on her driving. The road changed to gravel right before she spotted the gate. \n\n\"I'll open the gate. Just drive through enough so I can close it again. No one comes back here but leaving it open would look suspicious in case anyone checked the place out,\" Jake said.\n\n\"Hey, thanks, but I think I'll keep going.\"\n\nAngie didn't elaborate. When she imagined his friends, she pictured a lethargic group who hadn't showered for days and wore the same clothes for weeks. She suspected they shared more than the marijuana she noticed in Jake's pocket. Their lifestyle held no appeal. Then again, she admitted, her current situation wasn't much better. \n\n\"Thanks for the ride. Maybe we'll meet again,\" he said.\n\nShe waved and backed onto the road. Although she didn't have a destination, staying with Jake and his friends wouldn't be a part of her trip. She went back to Route 66 where traffic was light. The small towns seemed to look alike. Each one had an assortment of stores and restaurants for tourists. Angie noticed a building at the south end of a place called Pontiac and pulled into an empty parking space. With the engine off, she hopped out of the car. A sign designated the building\u2014in the shape of a pistol\u2014as the old police headquarters. \n\n\"This is so cool. I can't imagine having the talent to create something like this,\" she said, talking to herself as she walked closer. \n\n\"Howdy, ma'am,\" an elderly man said from his perch on a bench near the entrance. \"Quite a sight, ain't she?\"\n\n\"I love it!\"\n\n\"Here, have a seat. Anything you want to know 'bout this here building, I kin tell ya.\"\n\n\"Well, I'm not really on a schedule, so I have time. I'm Angie . . .\"\n\nShe smiled. The man, balding and overweight, slid along the bench to make more room. \n\n\"Joe,\" he said, \"and this here po-lice station went up in 1941.\"\n\n\"I was born in 1940.\" \n\nAngie wasn't sure why she told the man her birth year but he just nodded. \n\n\"The 1930s had what they called an Art Mo-derne style of architecture. There were long lines, lin-e-ar. Then they made 'em curved. The people who done built this place used struc-tur-al glass for e-ffect.\"\n\nJoe emphasized his words in strange ways that made Angie smile. Regardless how the man described the building, it didn't change how intriguing the concept was to her. \n\n\"I bet a lot of people stop when they see this place.\"\n\n\"Yep, seen 'em here of all ages. Most jest drivin' through on vacation.\"\n\n\"I'm not on vacation,\" Angie said.\n\n\"Nothin' wrong with takin' time to think, little lady.\"\n\n\"There's more to see than I realized. When I was home, this was just the highway, a road that took people from one place to another. I never thought about the landscape or the buildings along the way.\"\n\n\"Where you headed?\"\n\n\"Nowhere,\" Angie said, shrugging her shoulders when he looked her way.\n\n\"Don't git lost. Settin' a des-tin-a-tion might be the best way fer ya ta know when ya git there.\"\n\nShe stood and stared at the unique old police station for several more minutes. Joe lit a cigarette and leaned back on the bench.\n\n\"I'll know when I get there. Thanks for the bit of history.\"\n\nAngie waved at the man as she drove away. Her thoughts remained on his comment about setting a destination. At twenty-four, she should be able to manage on her own, she decided. Yet she admitted she couldn't go far without money. Finding a radio station she liked, she sang along with the hot new British sensation, the Beatles. Singing made her troubles seem lighter. \n\nShe drove into Cuba, Missouri, just after noon. A sign outside of town directed her to the Midway restaurant where she pulled into the small parking lot marked patrons only. The tantalizing smells in the air made her stomach growl again. The sign over the door wasn't fancy. Angie guessed from the condition of the building the d\u00e9cor wouldn't be either, but she didn't care as long as the food was good. A wood framed screen door banged shut behind her when she walked inside.\n\n\"Find a seat, darlin'. I'll be right with you.\"\n\nShe spotted an empty booth near the windows and slid onto the faded vinyl. A menu appeared in front of her seconds before a tall redhead did.\n\n\"Special today is a chicken club on your choice of white or wheat and a side,\" the waitress said.\n\n\"That sounds good. What do you recommend for the side?\"\n\n\"The cooked apples with a sprinkle of cinnamon are popular.\"\n\n\"I'll go with the club on white, the apples, and a root beer.\"\n\nAngie looked around the busy diner as she waited. People talked to each other across the narrow aisles and from the long counter in the front of the room. She recognized the comfortable exchange between neighbors as well as the friendly chatter aimed at the tourists. The atmosphere suddenly made her homesick. \n\n\"Not from around here, are you.\" The voice belonged to a middle-aged woman sitting at a table across from Angie. \n\n\"No, I'm just driving through.\"\n\n\"Where you headed?\"\n\n\"Nowhere,\" Angie said, ending the short conversation. \n\n\"One special, side of apples, and a root beer,\" the waitress said as she placed each item in front of Angie. \"You enjoy, now.\"\n\nThick slices of homemade bread held layers of chicken, tomatoes, bacon, lettuce, and cheese. Cut into neat triangles and arranged on the plate, the sandwich looked too pretty to eat. However, her stomach protested and hunger won. It didn't take her long to finish her meal. The waitress took her empty plate away and left Angie sipping on the root beer. She watched as people left and others took their place. Although busy, the diner wasn't full, and the redhead managed quite well. \n\n\"The cook made fresh coconut cream pie this morning. Interested in a slice?\"\n\n\"I'm stuffed. But thanks,\" Angie said.\n\n\"Hank can ring you up when you're ready. Thanks for comin' in.\"\n\nKnowing how hard the woman worked because of her own job in a similar setting, Angie left a bigger tip than normal. Hank, she discovered, was the cook. He asked about the meal as he punched in the numbers on the old cash register. She noticed the clean fingernails and the immaculate grooming. The man was nothing like the cook she had worked with back home. \n\nOn her way out the door, Angie noticed a small sign announcing the diner was hiring. Without thinking, she turned back, approaching Hank once more.\n\n\"Excuse me. Are you still looking for help?\"\n\n\"We sure are,\" he said.\n\n\"I was a waitress before and . . . well, I don't have references or anything, but I'm interested.\"\n\nWillow overheard the brief conversation. She didn't know the young girl speaking to Hank but she trusted her instincts. Setting the tray she held on the counter, she faced Hank.\n\n\"What if we give her a trial run?\" \n\n\"I'm a really hard worker. You won't have to tell me twice what to do,\" Angie said.\n\n\"Where are you staying?\"\n\n\"I don't know yet. Is there somewhere cheap around here?\"\n\nHank trusted Willow. Whatever she decided was fine with him. He stepped back as she spoke to the young girl. \n\n\"What about with me? I have an empty guestroom just sitting there\u2014and it would be convenient,\" Willow said. \n\nHank nodded and smiled at Angie. \"Then I guess it would help if we knew your name, young lady.\"\n\nExcitement filled Angie as they exchanged names. She hadn't planned on taking a job anywhere when she left home but traveling wasn't cheap and the income was necessary. \n\nWillow smiled. \"I'll be done within thirty minutes. You can wait in here or outside. There's a bench by the front door.\"\n\nAngie tried to hide the tears gathering in the corners of her eyes. Once more, strangers who knew nothing about her were offering to help her, not asking for anything in return other than a few hours of work. \n\n\"Hey, we've all needed a hand before. Hank's a great guy. Everyone around here knows they can count on him when times are rough,\" Willow said. \n\nThe diner had a homey feeling. Angie thought about her previous job and was positive she would be comfortable around Hank and Willow. After the shift was over, Willow drove the few blocks to her home. Angie followed, and once there, carried her bag inside and took a deep breath. Similar to when she stayed at the hotel with Martha and Harold, sharing someone's home seemed a bit more personal. The older woman had treated her kindly from the moment she waited on her in the diner. Yet knowing someone for an hour or so wasn't the same as knowing them for months or years. \n\n\"The spare room is right here, across from the restroom. Use anything you find in the shower. The refrigerator doesn't usually have much\u2014I eat most of my meals at work. Hank's a great cook,\" Willow said.\"I'll put the diner's number by the phone. Just call in the morning whenever you're ready and one of us will come get you.\"\n\n\"Thank you, for everything,\" Angie said. \"I promise I'll work hard.\"\n\n\"I believe you, honey. I'm tired and ready for some sleep. See you tomorrow.\"\n\nAngie slept the night through and woke up feeling refreshed and ready to begin her new day. She showered and dressed before walking into the kitchen. Thinking back to the short drive the night before, she was sure she could find the diner on her own. If she was going to stay in town a while, then she would have to learn her way around anyway, she decided, going out to her car.\n\n\"Angie, I thought you were going to call,\" Willow said when the young woman walked into the diner.\n\n\"I remembered the way from last night. Besides, what if you had been really busy? I couldn't expect you to leave for me.\"\n\n\"We'll go over a schedule later. First let's get you an apron and the all important pad of paper and pencil.\"\n\nThe pair laughed. Angie felt at ease as she went to work. She realized she wasn't as speedy as she had been in her old job but figured it was because she didn't know where everything was. No one complained, though, and the tips were good. \n\n\"Time for a break, kid,\" Hank said later. \"You've been going at it non-stop ever since you got here.\"\n\n\"Let's head outside for some fresh air,\" Willow said.\n\nAngie was ready to sit. She filled a glass with water and followed the redhead. \n\n\"You're doing great. Hank and I both saw the way you interacted with the customers and could tell you enjoy what you're doing.\"\n\n\"Waiting tables is the only job I ever had. I started at a little pizza place. When it closed, I went to the diner, the one I was at last. I hated it there but I couldn't afford to just quit. The cook was a horrible man. He would try to . . . he gave me the creeps,\" Angie said. \"I liked talking to the people though.\"\n\n\"I'm sorry you had a bad experience. Hank's the best.\"\n\n\"Yeah, I can tell.\"\n\nThey spent the rest of their break talking about whatever came up. When they went back inside, they were ready to work again. Angie stayed busy most days. The diner was a popular place and people wandered in for anything from a cup of coffee to a full meal. Evenings she walked around the small town before returning to Willow's. The woman was friendly and easy to talk to. The first week passed in a hurry. The second did as well. Before she knew it, Angie had been working over a month. \n\nLife was comfortable yet she couldn't hide the fact that she was ready to move on. It wasn't that she had somewhere to go. In fact, it was just the opposite. She was in search of answers even though she wasn't asking the right people the questions. Angie just didn't understand that yet. \n\nShe approached Hank the following morning. He nodded and wished her well. Talking to Willow was harder. The two women spent a lot of time together and she would always consider her a friend. With her bag tucked into the trunk, Angie wiped the tears from her face and drove away, already missing them.\n\n* * * * \n\nThe miles passed as they had before. She stopped a few times to get a beverage or snack but her stomach soon reminded her it was time for a full meal. She spotted a sign for a mom and pop store and gas station called the Totem Pole Trading Post. Although she had money from her time working with Willow and Hank, she wanted to be careful with what she spent. \n\nDetermined to find a bargain, she went inside, pushing her concerns away until later. The trading post had everything anyone needed and more. She took a small basket from near the entrance and went in search of nourishing snacks and some juice. Then she headed for the checkout wondering how much longer she could survive before she needed to find another job. \n\nThe old woman hitting keys on the ancient cash register sighed. \"I don't know what's wrong. It worked yesterday.\"\n\nAngie wasn't sure if the statement required a reply or if the woman was talking to herself. Before she could answer, the woman banged on the side of the machine, grinning when the money drawer opened. \n\n\"I knew the darn thing would open. Now then, young lady, your groceries come to three hundred dollars and twelve cents.\"\n\n\"What? That's not right. I don't have anywhere near that much. Do it again,\" Angie said, shocked at the amount the woman said she owed.\n\n\"Well, that does seem a little high. Let me look over the receipt.\"\n\nThe woman compared Angie's groceries to the numbers written on the tiny slip of paper. Soon she only had to check the apples. \n\n\"OK, apples . . . that should be twenty-nine cents . . . oh dear, the register made them two-hundred-ninety-nine dollars,\" the woman said. \"Oh, this is terrible. I'm sure there's a way to fix this, but I never had such an error before.\"\n\n\"Ma'am, you just have to . . .\"\n\nAngie went through the steps she knew would reverse the error so the woman could enter the correct data. Somehow, the woman managed to skip a step and make the machine worse.\n\n\"This new technology confuses me,\" the woman said. \n\n\"It's not that difficult. I've done it many times,\" Angie said, chuckling at the look of dismay on the woman's face. \n\nThe woman hit a sequence of keys on the cash register with great care. She looked up to the heavens a few seconds before gently tapping the total. \n\n\"Oh, my, that didn't go the right way either. Now it says five hundred and two dollars . . .\"\n\n\"Do you want me to fix it for you?\"",
        "\"Oh, I shouldn't bother you.\"\n\n\"Really, it's no bother. I don't mind at all.\"\n\n\"Would you? There's no one else here for me to ask.\"\n\nStepping behind the cash register, Angie spent a couple minutes looking at the machine before she began punching an assortment of keys. Soon a receipt printed, negating the incorrect tabulations. Then she rang up each item of her groceries, pushing the final key to get a total. Satisfied with the amount, she dug into her pocket for some money, laid it on the counter, and hit another key that calculated her change. \n\n\"You made it look easy. I forget which one of those keys does what.\"\n\n\"It's not that hard if you use the register a lot. Besides, if you worked somewhere busy, and made mistakes all the time, you wouldn't keep your job long.\"\n\n\"That's very true, young lady. I assume you've done that before?\"\n\n\"Well, not at a store, but at a diner, and it got busy at mealtimes. And often I was the only waitress there, so I couldn't take the extra time to fix mistakes.\"\n\n\"You aren't from here.\" \n\nThe woman said the words with confidence. She reminded Angie of the matriarch of a family. No matter what happened, or who did it, she would know. \n\n\"You're young, so this is a perfect time to follow your dreams. Where are you going?\"\n\n\"Nowhere,\" Angie said, shrugging her shoulders.\n\n\"Ah, turning wherever the mood strikes. I like free spirits.\"\n\n\"It's not difficult to learn how to use a cash register if you know certain tricks.\" Angie changed the topic to one she was far more comfortable discussing.\n\n\"You think you could teach someone as old as me?\"\n\n\"Age isn't a factor in learning. Anyone can do it.\"\n\n\"That sounds very convincing, young lady. Are you a school teacher?\"\n\nAngie laughed at the idea of her having the patience to be a teacher. However, she sobered when she imagined teaching her own children. A quick vision ran through her head of a husband sitting at her side. Finding someone she trusted wouldn't be easy, she knew. \n\n\"Are you staying in town?\" the woman asked, breaking Angie's concentration.\n\n\"No, I'm not.\"\n\n\"I was hoping you were because I could use someone with your skills to help out here for a while.\"\n\nAngie wasn't sure what to say. After all, she didn't even know the woman's name, yet she seemed to be offering her a job. That she was in need of one wasn't the issue. If she didn't work again, she would have to live in her car. That meant finding a place safe enough to park it until she earned more money. Yet the offer, as ideal as it was, came so fast it worried her. \n\n\"You don't know anything about me. I'm not sure how you can offer me a job without even knowing my name.\"\n\n\"You have kind eyes,\" the woman replied. \n\n\"That's it? You're basing it on my eyes?\" \n\nAngie wasn't sure if she should take the comment as a compliment or if she should laugh. A sudden image of her father telling her the very same thing took any hint of laughter away.\n\n\"Let me backtrack a little. My name is Jeanette Roundy. My late husband and I built the Totem Pole in 1933. Rolla didn't have much then\u2014it still doesn't\u2014but we loved it here. Herman suffered a stroke and passed away five years ago. I've been holding on to the place because I see him here. And I worry that if I sell it, I might lose him forever.\"\n\nThe younger girl saw the tears in the old woman's eyes after she finished speaking. She felt the emotion in her words and wanted to let the woman know she would never lose the memories. Suddenly she had an odd feeling that the best way to help would be to take the job and spend time with her.\n\n\"Angie Barrett and I'm very pleased to meet you, Jeanette. This looks like a lovely place for making memories.\"\n\n\"Herman made me laugh. He always knew if I was having a bad day\u2014like today, with this old machine here,\" she said, tapping the cash register for emphasis. \n\n\"I can't promise how long I'll stay. And if I can't find a cheap place to call home while I'm here, that would change everything.\"\n\n\"Oh, I don't expect you to commit yourself to a specific amount of time. Although, I would appreciate it if you gave me a day or two notice before you leave.\"\n\n\"I don't have a problem with that. Is there somewhere you can recommend I rent a room?\" Angie asked. \n\n\"Yes, I have just the place. Come along and I'll take you there.\"\n\n\"What about the store?\"\n\n\"I'll put up the sign that tells anyone wanting to come in I'll be back in ten minutes. They can either wait or come back later.\"\n\n\"Aren't you afraid someone will steal from you?\"\n\n\"Honey, this is Rolla, not some big city in California. Herman and I found that if we showed the community we trusted them, they would be honest and trustworthy with us.\"\n\nThe old woman flipped over a piece of cardboard hanging in the front window. She turned toward Angie and smiled before stepping outside. \n\nThey walked along a sidewalk that connected the trading post parking lot to what appeared to be Jeanette's home. Shrubs and bushes once trimmed hung in total disarray. The sidewalk turned into a narrow path hidden by the overgrown brush. Angie pushed branches and twigs to the side as she followed the old woman. \n\n\"Herman used to keep the path cleared,\" she said, ducking under a prickly branch.\n\n\"You must not come back here often then.\"\n\n\"No, I haven't been out here now for several months. I hope the neighbor children haven't destroyed . . .\"\n\nA miniature castle stood in the clearing in front of where Angie stopped. Built of stone, the structure featured towers, and a small walkway. A gate led to the thick front door. Angie fell in love at first sight.\n\n\"We traveled across Europe when we first married. Herman had this built as our guesthouse.\"\n\n\"It's beautiful.\" \n\nThe building looked deserted. Angie noticed a cracked window and wondered about the condition inside. \n\n\"Without Herman, I couldn't come back here.\"\n\n\"But you're showing me now,\" Angie said. \n\n\"It's the right time. He would have liked you.\"\n\nThe women smiled at each other, both deep in thought, neither making the first attempt to enter the building. However, a squawking bird brought them back to the reality of the moment. \n\n\"Here's the key. Go on in,\" Jeanette said, holding the object out for Angie. \n\nShe held the metal key in her palm until she stood in front of the door. Images of the future skittered through her mind. Reassured by the visions, she turned the key, took a deep breath, and pushed open the door. Fine particles of dust floated through the air before settling on the covered furniture. Shadows danced on the walls from the sunlight that managed to shine through the dirty windows. Angie couldn't wait to see the space shiny and clean.\n\n\"This is gorgeous,\" she whispered. \"I love it!\"\n\n\"It needs a lot of scrubbing. There doesn't seem to be any damage, but there's certainly a lot of dust everywhere.\"\n\n\"I'm not afraid of cleaning. Are you saying then . . . do you . . . I mean . . . yes . . . if this is . . .\"\n\nJeanette smiled at the young girl's confusion. She liked her enthusiasm for what could be a difficult task. They went back up the path to the trading post for supplies. Jeanette had customers and went to work but Angie returned to the castle to begin cleaning. She scrubbed counters and floors and wiped down cabinets and inside the cupboards. The bathroom she saved for last. \n\nAngie hummed along to the music playing inside her head. Memories from her childhood kept her company in the otherwise empty spaces. When she took a break, thoughts of her current situation played on a movie marquee. Questions she couldn't answer taunted her. \n\n\"Why do they trust me so fast? What do they see in me that tells them I'm a good person so they offer to help?\"\n\nShe whispered the words, yet in the sparsely furnished rooms, they echoed the same as if she shouted. Startled at the sound, she shrieked, tipping the water bucket she held when she jumped backward. Dirty water splashed everywhere, including over her clothes.\n\n\"Oh, hell, that was stupid. I swear, Angela Rae Barrett, you can be the clumsiest female in the world at times.\" \n\nShe whipped her wet shirt over her head and went to the sink. There she stood in just her shorts while she tried to rinse off as much of the dirty water as possible.\n\n\"Well, well, well, it looks like the beautiful princess lost her shirt instead of her shoe.\"\n\nAngie spun around when she heard the voice behind her. \n\n\"Who are you? How did you get in here?\" \n\nAngie tangled the wet cotton in her haste to cover her naked breasts. Her cheeks changed from their normal golden tan to a warm blush tone. The stranger stared but didn't move. \n\n\"Get out! Jeanette!\"\n\n\"There's no need to scream. She isn't coming to save you.\"\n\n\"What did you do to her? What do you want?\"\n\nAngie backed toward the cabinets as she spoke and tried to remember where she saw the knives. She dropped the wet shirt and whipped around all in one move. However, she didn't count on the stranger moving as fast as he did. \n\n\"You won't win that fight, sweet thing. Besides, you really don't need a weapon.\"\n\nHer heart thudded against her rib cage the same as if she had been running a marathon. Angie whimpered when the man wrapped his arms around her and held her tight. \n\n\"Jeanette can vouch for me, you know.\"\n\n\"You didn't knock.\"\n\n\"For that I should apologize. Of course, if I had, I would have missed seeing\u2014\"\n\n\"Oh my god,\" she mumbled, suddenly aware again of her naked chest. \"Don't look!\"\n\n\"Honey, I've already looked. Not only that, but they're touching my arm\u2014both of them. And if you move at all, you're going to push a puckered nipple right against my thumb.\"\n\nShe stopped breathing. Her knees buckled. Angie tried to catch herself on the countertop but failed. The stranger gripped her waist and held her to him as she gulped in enough air to breathe again. \n\n\"That's it, sweet thing. Breathe nice and slow.\"\n\nShe felt his heated skin on her nipple and gasped. The intense pleasure confused her and angered her at the same time.\n\n\"Who are you? Why are you here? Where's Jeanette?\"\n\n\"Easy there. Don't worry about me. Let's get you\u2014\"\n\n\"No, damn it! Answer me.\"\n\nAngie pulled away as she spoke. She stood in front of him, her chest naked, looking defiant. \n\n\"My name is Steve. Jeanette is at the trading post yet. She stays open until six each night,\" he said.\n\n\"You didn't answer why you're here.\"\n\n\"No, I guess I didn't.\"\n\n\"Are you always so obtuse?\" she asked.\n\n\"Do you always greet company half naked?\"\n\nHe tossed the question at her with a straight face. Something about the situation suddenly seemed funny. Angie laughed\u2014not a chuckle or a childish giggle, but a hysterical snorting laugh that brought tears to her eyes within seconds. \n\nSteve watched the transformation and relaxed. Angie sat on a kitchen chair and crossed her arms over her chest. She didn't know where her shirt was and didn't even care anymore. The stranger had looked at her for so long that a few more minutes didn't matter. \n\n\"So, Steve, do you have a last name? Or are you going to ignore that one too?\"\n\n\"Cook,\" he said, sitting across from her on the only other chair in the small kitchen.\n\n\"OK, so, Steve Cook, why are you here?\"\n\n\"Would you buy that I'm here for the view?\"\n\nShe snorted and shook her head. \"Try again.\"\n\n\"I'm passing through and couldn't resist the allure of the castle?\"\n\n\"You're full of it.\"\n\n\"I followed you so I could make passionate love to you all day and night?\"\n\nThe thought of someone following her made Angie nervous. Even though she didn't believe the stranger, she hesitated. Traveling on her own hadn't seemed dangerous until his comment made her admit she was often too trusting of strangers. \n\n\"I'm a lesbian.\"\n\nHe somehow knew she wasn't but went along with her ruse. \"Oh, well, then I suppose you wouldn't have any use for what I have.\"\n\nStunned at his words, she stared at the bulge in his jeans. \n\n\"I turn my back for two minutes and you've got the poor girl half naked,\" Jeanette said from the doorway.\n\n\"Then leave and I'll do the other half,\" he said, motioning for the old woman to go.\n\n\"You think I'm as green as the first day you walked into my house?\"\n\n\"I'm positive you learned something each time that door opened to another defiant smart ass like me.\"\n\n\"Excuse me, but not only am I thoroughly confused, I'm still half naked. Mr. Cook, since you have a dry shirt, and you broke into my home, I believe it's only right you give me yours.\"\n\nAngie put one hand on her hip and held the other out to him. She wasn't going to allow the man to embarrass her any longer. \n\n\"Excuse me?\" he asked.\n\n\"Your shirt, right now,\" she replied. \n\nHe looked into her eyes for a few seconds before following her instructions. She slid the soft polo shirt over her head and let it fall down her body. \n\n\"And do you feel better now that I'm half naked?\" he asked, flexing the muscles in his chest to draw her attention to his physique. \n\n\"Ah, I, um . . .\"\n\n\"Stop teasing the girl,\" Jeanette said.\n\nShe moved into the room to stand next to Angie. Steve had already noticed the protective tone the woman used when talking to her. He wondered what the girl's story was and how long she was staying.\n\n\"You've done an excellent job, Angie. The place is looking fantastic.\"\n\n\"I just had to clean the dust off everything. The mattress wasn't covered though. I thought about taking it outside and hitting it with the broom, the old fashioned way, you know?\"\n\n\"Get Steve to carry it out for you. He can do something good while he's here. In fact, I haven't asked yet, but why are you here?\"\n\nAngie waited for the man to give his answer. She hoped he couldn't see how interested she was in his reply. \n\n\"I haven't been here for a while,\" he said, shrugging his shoulders and looking away.\n\n\"That's a vague answer and you know it.\"\n\n\"I wanted to meet this gorgeous\u2014\"\n\n\"Steven, the truth,\" Jeanette said, her voice telling the man she was losing patience.\n\n\"The firm defended one of Whitey Massino's boys last month and lost. You can imagine how happy Whitey is about that.\"\n\n\"You're staying right here. I won't let you work for a man who represents anyone as evil and unscrupulous as that mobster Whitey Massino. I'll clear out the back porch and you can sleep there.\"\n\n\"The porch? Come on, Jen, there's not even room for a decent sized bed in there. I've always used the castle . . .\"\n\n\"Angie's staying here. You'll have to find somewhere else,\" the older woman said.\n\n\"No, please, I'm the one who should have the porch. You're family and I'm a stranger.\"\n\n\"Honey\u2014\"\n\n\"No, really, I'm just here for a while helping Jeanette. I can't take the castle and let her family sleep on a porch.\"\n\n\"Although this scoundrel is the closest thing to a son that I have, he never accepted my offer to make it legal.\"\n\nAngie didn't have to ask the other woman if his refusal hurt. The pain was in her voice. \n\n\"This isn't the time to bring that out,\" Steve said, glaring at the older woman.\n\n\"Look, it's obvious you two have a history. I'm the new girl. I should have the smallest and most uncomfortable sleeping arrangements.\"\n\n\"The castle has two bedrooms. I don't see why we can't share the space for as long as you're here. That way we're both comfortable,\" he said, looking from Angie to Jeanette for support. \n\n\"You think that's a smart idea? Look how fast you had her topless.\"\n\n\"She didn't have her shirt on when I walked in,\" he said. \"And if you don't believe me, you can ask her.\"\n\nAngie turned away to hide the blush creeping over her cheeks. Since she arrived in Rolla, Missouri, she hadn't thought about her family or the problems facing her back home. The owner of the Totem Pole Trading Post\u2014and the man at her side\u2014had her so off balance she was afraid she might be giving them the wrong impression of her true personality. \n\n\"I'll do whatever you decide is best, Jeanette. This is your place, and since you're being kind enough to let me stay, and to give me work, then I can't make demands on where I'll sleep,\" Angie said. \"I'm not a bad person. I'm not in trouble and no one is looking for me. I'm just . . . I needed time . . .\"\n\n\"I think we should get some dinner and figure out the sleeping arrangements later. Steve, the old grill is still in the garage. There's a new bag of charcoal from the neighborhood block party last month. Get that started and I'll pull some hamburger patties from the freezer. Oh, Angie, we'll need buns . . .\"\n\nJeanette kept talking as she left the castle, assuming the others would follow. She smiled when she heard their footsteps on the path behind her.\n\n* * * * \n\nDinner was a success. They sat at an old picnic table where conversation revolved around the food and the weather. Soon the food was gone though and the mosquitoes arrived. They gathered empty plates and bowls, doused the few remaining coals in the grill, and went inside. \n\n\"Look, Jen, I'm tired. I haven't slept more than two or three hours a night in weeks. If Angie has a problem, either now or any other day while she's here, I'll move to the porch. Agreed?\"\n\n\"I don't mind sharing. I have a bro\u2014um, it's fine, really.\"\n\nJeanette tucked the tidbit of information away about Angie having a brother. She might find it helpful later.\n\n\"I've had more excitement today than I've had in months. I'll see you two in the morning,\" Jeanette said, waving them off.\n\nSteve followed Angie down the path to the castle. He tried not to notice the gentle curve of her hips or the way her bottom swayed with each step. \n\n\"I'll take whichever room you say. I've slept in more strange beds than I care to admit,\" Angie said, not realizing how her words sounded.\n\n\"In that case, I'm surprised you didn't invite yourself into mine too.\"\n\n\"What? No, oh crap, no, not that. I meant, traveling, I've slept in strange beds along the way.\"\n\nHis look questioned her explanation. She shook her head but didn't clarify herself.\n\n\"Good night, Steve. I'll take the pink room, since you haven't chosen. I'll figure out how to clean the mattress better tomorrow.\"\n\nShe didn't wait for his reply. Ten minutes was all she needed to undress and fall asleep. Steve stood on the patio, nursing a beer, imagining he was in the pink room with her.\n\nAngie woke the next morning excited to start what she saw as an easy task. Operating a cash register wasn't difficult. Teaching Jeanette shouldn't be, either. After a quick shower, she pulled her hair into a ponytail and dressed in denim shorts, a halter-top, and sneakers. Streaks of sunlight burst through the windows to brighten the small rooms. Angie ignored the soft snoring coming from the second bedroom as she went into the kitchen to make breakfast. \n\n\"Whatever you're making, it woke me.\" Steve yawned before filling a mug with coffee. \"You always get up this early on vacation?\"\n\n\"Technically, I'm not on vacation. I'm teaching Jeanette\u2014\"\n\n\"You didn't come to Rolla to teach her how to use the damn cash register. I'm not a fool you can win over with your big blue eyes and sexy body.\"\n\nAngie heard the hardness in his voice but didn't understand why it was there. She decided to ignore him as long as she could. Steve regretted his outburst the moment he saw Angie's smile disappear. Her image had kept him awake a good part of the night. It confused him that she didn't seem aware of the impact she had on him. \n\n\"Did you sleep well?\" he asked, softening his tone with the topic change. \n\n\"Yes,\" she said, not adding to the single word reply as she lost focus on the scrambled eggs in front of her. \n\n\"I haven't been home for a while. I forgot how relaxing it is here.\"\n\nAngie listened but didn't ask him for more information. She wanted to know about his past. What brought him to Jeanette and Herman? The sizzling eggs penetrated her thoughts in time to save them from burning. A moment later, as if synchronized, the bread popped up from the toaster. Although her breakfast was ready, she didn't have the appetite she had when she began preparing the meal. ",
        "\"Hungry?\" she asked him.\n\n\"I don't expect you to fix meals for me, you know.\"\n\n\"I'm not hungry anymore.\"\n\n\"You didn't take a single bite, Ang.\"\n\n\"I'm not a big breakfast eater. Go ahead or I'll throw it out,\" she said, pushing the plate toward the opposite end of the table and closer to where he stood.\n\n\"You should have something though, even a glass of juice. Unless Jeanette slowed down in the last few years, she'll run you ragged.\"\n\nShe nodded but went into her bedroom instead. \n\nInside the small store, Jeanette punched a key on the old cash register. When nothing happened, she looked around, hoping to see the young girl who was staying in her castle. \n\n\"Having trouble, Jen?\" Steve asked from where he lounged against the doorway.\n\n\"Not a bit, dear boy. How did you sleep last night?\"\n\n\"Ah, the castle has excellent beds.\"\n\n\"Beds . . . what . . . did you . . .?\"\n\n\"I had to check both mattresses to be sure I didn't give your lovely house guest the lumpy one, didn't I?\"\n\n\"Steven, you're still the same rascal as you were at ten. Are you ever going to grow up?\" \n\n\"I left a lot of that little boy behind,\" Steve said, pushing away from the wooden frame. \"In fact, you'll be right pleased to know I stopped wetting the bed.\"\n\nHis sense of humor hadn't changed, which was a positive point in the eyes of the older woman. She grabbed a cleaning rag to start her daily chores when she saw Angie leaning over near the back door. \n\n\"Something's wrong,\" she said, hurrying toward the door. \n\nKnowing the woman didn't panic easily, he followed her outside, stopping at the sight of blood on Angie's hands.\n\n\"What happened? Steve, get a stack of towels from the storeroom. Honey, what is it? Are you hurt?\" Jeanette ran her hand along the young girl's back in soothing circles. \n\n\"Ith I no . . .\"\n\nSteve struggled to understand the garbled words. \n\n\"She has a bloody nose,\" the woman said, handing the young girl a stack of clean towels. \"You all right, honey?\"\n\nAngie gave a slight nod confirming the woman's assumption. \n\n\"How can she be all right if she's bleeding? You don't just get a bloody nose,\" Steve said.\n\n\"There are tons of reasons, including stress, for a bloody nose.\"\n\nJeanette glanced at the young man she thought of as a son. Yet in recent years, living hundreds of miles away as he did, she wasn't sure she knew as much about him as she had in the past.\n\n\"So you're implying then that I caused her stress and gave her a bloody nose,\" Steve said.\n\n\"Grow up, Steven. You're not the center of this entire universe anymore.\"\n\n\"Shtoff,\" Angie mumbled through the towel covering her nose.\n\n\"What?\"\n\n\"Huh?\" Steve asked at the same time.\n\n\"Shtopf,\" Angie said in what was an attempt at a yell.\n\nEven though the word didn't sound close to the correct pronunciation, Jeanette understood when she noticed the young girl clenching her fist. \n\n\"Well, that's a first,\" the store owner said with a smile. \"But you're right. We shouldn't be having words when you're standing there with a bloody nose. How can I help? Has this happened before? Do you need medical care?\"\n\nAngie gave her answers by either nodding or shaking her head. Steve stood back, intrigued at the way the stranger spoke to the woman who practically raised him, even though he found her bravado humorous. \n\n\"Steven, watch the trading post while Angie and I go to the house. We'll be back when she's ready.\"\n\nJeanette helped the younger woman inside where they washed her face and hands. Noting the pale color of the young girl's skin, she led her to the sofa.\n\n\"But, I have to teach\u2014\"\n\n\"That's nonsense. It can wait. I've managed this many years, I can make it another day,\" Jeanette said. \"But you lost a lot of blood. You should get something in you to replace it all. Did you have breakfast?\"\n\nThe floral wallpaper in the small living room reminded Angie of her grandmother. She settled back into the assorted throw pillows as images of her family filled her head. A single tear slid down her cheek at the thought of not seeing them again. \n\n\"Aw, honey, it's all right. Cry if you need to. Tears are good for the soul.\"\n\nJeanette sat on the edge of the sofa and caressed the young girl's arm. She didn't have to ask to know the girl missed someone.\n\n\"He might not like it that I'm telling you this, but Steven came to us because his parents didn't want him anymore. A child disrupted their life. They had visions of becoming stars, acting on Broadway, having millions of fans . . . not of chasing after a toddler or seeing that he went to school. Of all the children we raised, he was the hardest one to convince that he was worth loving.\"\n\nAngie tried imagining the confident man she met the day before as the child Jeanette described. Even though she didn't know the woman sitting next to her very well, she pictured the couple spending endless hours showing the young boy they loved him.\n\n\"He was trouble. No matter where he was, he caused, and attracted, trouble. Herman used to say the boy came to us to teach us what patience truly was. None of the other children we had compared to him.\"\n\n\"Did he ever see his parents again?\" Angie asked.\n\n\"They left town before we had a chance to do any paperwork. I don't know for sure, but I think Steven hired private investigators a few years ago, in hopes of finding them.\"\n\n\"Why would he want to see them again if they didn't want him? I mean, they pretty much gave him away, right? Parents are supposed to love their children, to take care of them, to tell them the truth.\"\n\nJeanette sensed the young girl wanted to say more. She spotted a photograph of her late husband and sent a silent plea for help.\n\n\"Parents aren't perfect, honey. Making a baby doesn't give two people instant knowledge on what to do in every situation as they raise that baby. Sometimes, a parent might believe that admitting the truth would make that child think less of them at the time, so they tell a lie instead.\"\n\nWondering what caused the young girl to leave home, she waited, watching the array of emotions crossing Angie's face. \n\n\"When I stopped here, I didn't have much money left. Without a place to stay, I would have had to go back. And . . . and I can't. Not yet. I'm just, I know what you said is probably right, but . . . I'm not ready.\"\n\n\"You have a place here as long as you need it. Now then, how about we get you cleaned up. If you keep getting nose bleeds, I have a dear friend who's a retired physician, and for a home cooked dinner, he'll check you over.\"\n\nAngie silently thanked whoever sent her to Rolla and the Totem Pole Trading Post. \n\n\"Yeah, looking like this isn't a great way to greet customers at the checkout. I think I'll take a quick shower. Then I can soak this shirt while we begin class.\"\n\n\"Oh, my, I haven't been in school in . . . well, never mind how long. You go and I'll sharpen my pencils while I wait.\"\n\nAngie ran down the path to the castle. She stripped the bloody shirt from her body and walked into the kitchen for a glass of juice.\n\n\"My, my, I must admit that I'm enjoying this habit you have of running around topless.\"\n\n\"Steve! I thought you were watching the store.\"\n\n\"When I can be here, watching you?\"\n\nFeeling more daring than normal, she walked closer, not stopping until they stood inches apart. His cologne drifted through the air until his scent surrounded her. \n\n\"Can you see better now?\" she asked, her voice husky.\n\nHis blue eyes darkened to black a moment before he cupped her breasts. \"A little closer,\" he whispered. \n\nHer back arched in an automatic move that pushed her nipples against his thumbs. She stared, comparing his golden skin to her pale flesh. \n\n\"Angie, I want . . .\"\n\nSteve left the desire unspoken. Instead, he swiped each nipple with his tongue before capturing one between his teeth. \n\n\"I, oh, please, yes,\" she hissed.\n\nAngie wrapped her arms around his neck and held him tight to her aching breasts. Steve accepted her silent invitation. He devoured her puckered nipples with more passion than the young girl knew existed. He pushed her against the wall, forcing his knee between her legs, never removing his mouth from her body. \n\n\"Harder, suck harder,\" she mumbled between ragged breaths.\n\nHe didn't argue. He couldn't have with his body screaming at him to take her the way it was. Yet a tiny portion of his mind told him it was too soon. With one last swipe of his tongue, he backed up.\n\n\"Angie, sexy wench that you are, I'm going to stop now. If I take you here, in this room, this way, you'll hate me. I'll hate me. And I don't want that.\"\n\nHis eyes, dark with desire, looked into hers as she digested his words. Unashamed but still sizzling, she traced the corner of his jaw, leaning forward to plant a kiss on the small scar marring the skin.\n\n\"Jeanette is waiting. I should shower now,\" she said.\n\nHe waited until he heard the water running before he punched the wall. Angie emerged several minutes later to find the room empty. She put the episode away until she could spend time examining her behavior and went to find Jeanette. The woman stood in front of the old cash register as if studying the keys. \n\n\"Are you ready for this?\"\n\n\"Honey, I'm so nervous I just know I'll forget everything you say.\"\n\n\"Don't be. What would you tell one of your children if you were teaching this to them?\" Angie asked, reversing the woman's position in the hope the words would relax her.\n\n\"You're a smart one. All right, teach away.\"\n\nAngie laughed and moved closer to the cash register. \"OK, let me show you an easy transaction. Try to remember the steps so you can do the same thing when I'm done.\"\n\nJeanette mumbled but did as the young girl instructed. However, when a customer entered the store, she lost her focus. \n\n\"Hello, Jeanette.\"\n\n\"Tess, what brings you to town?\"\n\n\"I can't stop in to see you without a reason now?\"\n\nAngie stepped back to avoid the nauseating scent of the woman's cologne. She recognized it as a cheap imitation of a popular name brand. The smell was so strong Angie sneezed several times.\n\n\"Excuse me; I think I'll do some cleaning while you visit.\"\n\nThe excuse let her escape but it also kept her from hearing more of the conversation. Angie sneezed again and decided the woman wasn't worth another nose bleed.\n\nJeanette stared at the woman propped against the counter. At thirty-three, she was on her fourth marriage, a fact she shared with pride. \n\n\"Too much for you to handle the place alone, I see,\" Tess said, nodding in Angie's direction.\n\n\"Did you need something, Tess?\"\n\n\"Where is he?\"\n\n\"Ah, I wondered how long it would take before you heard he was back. What would your husband\u2014Ralph, is it?\u2014think about you chasing after another man?\"\n\n\"It's Donny, and what I do is my business, not his,\" Tess said.\n\nJeanette heard the hatred in the woman's voice. She smiled as an idea flitted through her mind.\n\n\"You might not hold your vows sacred, but I'm sure Steven will.\"\n\n\"Of course I will. I love my fianc\u00e9e.\" Steve joined Jeanette behind the counter. \"Hello, Tess.\"\n\n\"What fianc\u00e9e? No one told me. I wouldn't have come all this way . . .\" Tess cleared her throat. \"Well, do I get to meet the lucky girl? I would love to congratulate her while I'm here.\"\n\n\"Sure, I'll get her,\" Steve said, winking at Jeanette as he turned away.\n\nHe found Angie in the far corner of the trading post. The tears in her eyes startled him.\n\n\"What's wrong? You're crying.\"\n\n\"That horrible woman's perfume made me sneeze. Now my eyes are all puffy and dripping. I must be allergic to the stuff.\"\n\nSteve wanted to laugh with relief. Instead, he went into the small restroom a few feet away and soaked several paper towels with cold water. \n\n\"Put this over them to see if it helps.\"\n\nShe moaned as soon as the dampness touched her skin. Steve bit his lip to stop himself from doing anything inappropriate.\n\n\"I have a favor to ask . . .\"\n\nAngie kept her eyes covered while he explained his idea. When he finished, she removed the paper towels, looking straight at him.\n\n\"Oh, Steve, I can't wait to marry you. You make me so incredibly happy!\"\n\nHer words weren't real, but he imagined, for just a moment, that they were. His body stirred once again in response to the girl he barely knew. Afraid that she might hear the emotions churning within him if he replied, he kissed her on the cheek, inhaling her fresh scent as he did.\n\n\"Oh, her,\" Tess said when the couple joined Jeanette. \"I thought she was the hired help.\"\n\n\"Don't be rude, Tess,\" Steve said, stepping behind Angie so he could pull her against his chest.\n\n\"They're a perfect couple. He lights up when he sees her walk into a room,\" Jeanette said, adding to the illusion.\n\n\"She's amazing,\" Steve whispered as an image of her half-naked body filled his head.\n\n\"Well, she's not exactly your type, is she, Stevie?\"\n\n\"Tess, I love Angie a great deal. If you can't be respectful, maybe you should go home to . . . Tom, is it?\" Steve asked, purposely using the wrong name for the woman's current husband.\n\n\"It's Donny. Tom was my second,\" Tess said.\n\n\"Oh, well, you've had so many I can't remember them all anymore. What is this one, the fifth?\"\n\n\"Insults, Stevie? I remember a time when you had good things to say about me.\"\n\n\"And I remember a time when you were a good person.\"\n\n\"Tess, have you been to see your parents yet? I'm sure they've missed you.\" Jeanette moved the newcomer away from the counter as she spoke. \"Are you staying with them?\"\n\n\"No, I didn't tell them I was in town.\"\n\n\"I'll give your mom a quick call then. Do they still have the same number? Of course they do. Silly me, I just talked to her after the neighborhood block party. We're on the committee for the church bizarre this year. Oh good, it's ringing,\" Jeanette said, holding the phone while she continued talking to the woman. \n\nTess glared for several seconds before walking away. She raised her middle finger at Angie and Steve as she left the trading post. Jeanette smiled when the irritating woman slammed the front door on her way out. The dial tone reminded her she still held the telephone.\n\n\"Oh my, I think I forgot to dial.\"\n\n\"You and Herman, you would use that ruse on us kids. Not always with the telephone, but rambling on about something stupid to distract us from whatever trouble we were trying to cause. One of you would always end up getting us to talk about why we thought fighting, or arguing, or misbehaving of any kind, was the right thing to do.\"\n\n\"All parents have their own way of teaching their children lessons. We found what we thought was the best way for our family,\" Jeanette said, patting his cheek and smiling.\n\nAngie tried to imagine the man at her side as a father. She decided he would be like the woman who raised him, teaching his children lessons without using speeches or boring information. \n\n\"My parents didn't do that. They never did things together. I always thought it was strange, until my mom told me . . .\"\n\nSteve waited for Angie to finish but she shook her head instead. Angie noticed the yawns Jeanette tried to hide. She figured there had been too much excitement in one day for the woman, considering her age. They walked with her to the small house she called home to be sure she didn't fall. When the trading post owner yawned again, Angie spoke.\n\n\"I'll keep an eye on the store and take care of things there.\"\n\nSteve winked but didn't move. He needed time to think. \n\n\"Go help her,\" Jeanette said.\n\nWithout answering, he left the woman alone. Instead of returning to the trading post though, he wandered around the yard, remembering how neat and colorful it had been when he lived there.\n\nInside, Angie kept busy. She dusted shelves and rearranged displays as a way to keep her mind off everything that happened with Steve. He didn't show up until it was time to lock the door and turn off the main lights. \n\n\"Thank you, for going along with that whole fianc\u00e9e bit earlier,\" he said as they stood in the darkened room. \"That woman is like a vulture. I have no idea how she knew I was even in town, but whenever I am, she shows up.\"\n\n\"Jeanette didn't seem to like her much.\"\n\n\"No one does.\"\n\nAngie nodded. \"I should check on Jeanette. She looked really tired earlier.\"\n\n\"Oh, I'm sure she recovered just fine as soon as we left. She used to do that when I was a kid, too.\"\n\nHis words made Angie think they had more in common than she first thought. His parents hadn't wanted him and hers lied to her. Yet it was all confusing. \n\n\"Let's go see what she fixed for dinner. I'm guessing her famous meatloaf with scalloped potatoes.\"\n\nDinner was as Steve guessed. Angie enjoyed the conversation and laughed at some of the stories Jeanette told about the children who had been a part of her family. Eventually she noticed how tired the older woman looked and offered to clear the table and do the dishes. \n\nJeanette nodded. \"I think I'll head to bed.\"\n\n\"I guess I'll be sleeping alone tonight,\" Steve said, giving Angie a sad look. \"Since I didn't technically propose, I assume I'm not engaged.\"\n\n\"You could call Tess to cheer you up.\" Angie turned toward Jeanette. \"Didn't you say you had her mother's number?\"\n\n\"No, no way, absolutely not, never, not while I'm breathing,\" Steve said, moving to the door. \n\n\"But you shouldn't have to be alone when there's someone so willing\u2014\"\n\n\"Good night, Angie. I was going to walk with you to the castle, but because you were mean to me, you can find your way back yourself.\"\n\nAngie laughed. She wondered for a moment how it would feel to be his fianc\u00e9e for real. He seemed to be a caring person. So far, in the short time that she had known him, he had been attentive. Steve stopped in the kitchen, took a beer from the refrigerator, and left through the back door. Jeanette stifled another yawn. \n\n\"That boy has a way with words. He's always been able to mix things up to sound silly. Herman and I were never sure what he would come up with next.\"\n\n\"I can tell you're proud of him.\"\n\n\"Steven had me worried for a while. I wasn't sure he would realize how smart he was. Herman and I, we tried to teach him how to use his positive traits, but we didn't always succeed.\"\n\nAngie thought about what the older woman said. \"But if you didn't succeed, when did he figure it out?\"\n\n\"He played football. The coach pulled him his junior year because his grades were too low. That opened Steven's eyes faster than anything we tried. It took him four weeks to get back onto the team. But he never goofed off in school again.\"\n\n\"I guess we all have something that slaps us awake,\" Angie said. \"Good night, Jeanette.\"\n\n\"Good night, my dear.\"\n\nThe moon lit the path to the castle. Angie took her time, deep in thought, imagining the young boy Steve had been. The castle was quiet when she opened the door. Angie turned the light off and went to bed. She never noticed Steve hiding in the shadows. He finished his beer before following her example and going to bed. Neither fell asleep until close to dawn.\n\nJeanette followed the instructions Angie had written on the index card next to the cash register. The customer, one of the locals from the neighborhood, kept up a running conversation without any input from the store owner. When she saw the total for the two items the woman intended to purchase, Jeanette swore.\n\n\"I'm sorry, Nellie, you know I don't swear that often. But this machine is determined to turn me into an evil monster.\"\n\n\"Oh, I'm sure you're exaggerating,\" the woman said.\n\n\"I kid you not, the thing watches for me, spitting out totals that make me look like an imbecile.\"\n\n\"But Jeanette, you've used this same register for year\u2014\"\n\n\"Am I ever glad to see you, Angie,\" Jeanette said, pulling the young girl toward the counter. \"Nellie\u2014this is Nellie, one of my neighbors\u2014is so patient, but this darned machine gave me a total of over three hundred dollars! Can you believe it? She's not buying a whole cart of stuff, just two things.\"",
        "Angie scanned the receipt before tapping a few keys on the ancient register. A new total popped up in the screen to replace the one Jeanette had.\n\n\"Four dollars and twenty cents, ma'am,\" Angie said. \n\n\"That's much better.\" Nellie handed Angie the correct amount but remained standing at the counter. \"I thought I saw Steven here.\"\n\nIn her late forties, the woman preferred younger men. Jeanette hadn't been surprised to see the woman in the trading post.\n\n\"Did you? Well, considering he grew up here, I think it's safe to assume he's allowed to come back if he wants to,\" Jeanette said, keeping her reply general.\n\n\"Well, you could just say if he's here or not. What harm is there in that?\"\n\n\"I swear I followed those directions you gave me,\" Jeanette said to Angie, turning away from the woman she considered a nosy neighbor. \"That machine is possessed.\"\n\n\"You never\u2014\"\n\nSuspecting the woman was going to say something that would give her secret away, Jeanette cleared her throat, adding a cough for good measure. \"Oh, I hope I'm not coming down with that horrible flu all the TV stations are warning us about. Do I have a fever? What if I do?\" She pressed the back of her hand to her forehead and gasped. \n\n\"I have a weak immune system. Stay back! I'm leaving before I breathe more of your polluted air,\" Nellie said, backing away from the counter.\n\nJeanette coughed until she couldn't see Nellie. Then it changed into laughter. \n\n\"Ah, that was fun. Angie, the entire town knows that woman loves gossip. She makes her rounds each day to find the latest news she can pass on.\"\n\n\"We had a neighbor like that. She sat on her front porch every day. For people who didn't know her, they would think she was just relaxing. Instead, she was really watching to see who drove past, how long they were gone, and if anyone had company she didn't recognize. When nothing exciting happened that she could see, she would go to different neighbors on the premise of having a cup of coffee with them. That gave her a chance to learn fresh gossip,\" Angie said.\n\n\"I think every town has someone like that. Oh, good morning, Steve, you just missed Nellie,\" Jeanette said, winking at Angie as she spoke. \n\n\"You think I want to see that old . . . neighbor?\" \n\nAngie laughed. \"Uh huh, neighbor, right.\"\n\nJeanette busied herself cleaning shelves, leaving the two younger people alone, even though she could still hear them. Steven's unexpected arrival so soon after Angie's had to be more than a coincidence. It was karma, or destiny, she decided as she worked out a plan to put them together somehow. \n\nSteve watched the woman who cultivated the potential inside him with love and compassion. Of all the people in his life, she was the only one who didn't question his career choice. He thought back to their conversation on the day he left town to begin a new job. She reminded him to have faith . . . her motto for life. \n\n\"Was she always such a nice person?\"\n\nAngie's question brought Steve back to the present. He shook his head to clear the memories.\n\n\"You know, she was, even when I thought she was mean for grounding me or when she made me eat liver for dinner.\"\n\n\"That's disgusting; no wonder you thought she was mean. I would, too. I mean, what parent thinks liver is anything close to edible?\"\n\nSteve mimicked the scrunched up look on Angie's face. Their behavior turned childish as they stuck out their tongues and made fake gagging noises. A customer smiled as she walked past them on her way to pay for her purchases.\n\n\"You two make such a cute couple. How long have you been together?\"\n\n\"We\u2014\"\n\n\"We've been engaged exactly,\" Steve said, looking at his watch before continuing, \"twenty-three hours and twelve minutes.\"\n\nAngie opened her mouth to question him when she saw a shadow at the end of the aisle. She recognized Nellie, Jeanette's neighbor, crouched behind a display of snacks. \n\n\"I'm the luckiest girl ever. He's amazing.\"\n\nThe woman didn't appear to approve of their engagement. Angie decided Nellie must have sent her into the trading post as a spy. Under that assumption, she snuggled into Steve's arms, dropping a long kiss on the curve of his jaw as well. \n\n\"Well, yes, congratulations then,\" the woman said, giving them a fake smile and walking away.\n\n\"That woman, Nellie, is still watching,\" Angie whispered.\n\nSteve pulled her closer in a move that looked natural. He realized his mistake as soon as he covered her lips with his. Intending to make the false engagement appear real, his body immediately reacted to hers. \n\n\"Well, well, I never knew you got off on giving the public a show.\"\n\nAngie saw Nellie approach them. She had recognized the flash of jealousy in her eyes when Jeanette implied he was involved with someone. \n\n\"I'm just so excited Angie said yes,\" he said, looking at her with adoration.\n\n\"How could I not? You're amazing, a perfect match for me, and on top of that, you have the sexiest dimple on your cheek.\"\n\nAngie placed her hand on his bottom as she spoke. Steve's heart rate jumped at the idea of the saucy brunette in his bed.\n\n\"I never knew you had a dimple,\" Nellie said, moving closer in an attempt to separate the couple. \n\n\"I'm sure there are many things you don't know about me, Nellie. Now, excuse us, my fianc\u00e9e and I have some planning to do.\"\n\nThey walked hand in hand, both deep in thought, leaving out the back door. Nellie kicked a display of magazines as she left the trading post. Jeanette pretended to be busy until the woman drove away. \n\n\"I'll be,\" she mumbled. \"Those two might just connect without my help.\"\n\nAngie worked her fingers free from Steve's as soon as she could without having it appear awkward. She sat on the old picnic table while clearing her thoughts.\n\n\"That might keep the witch away from me,\" he said with a chuckle.\n\n\"She was livid when you said we were engaged.\"\n\n\"Nellie has a few issues. She fails to see any reason for keeping her marriage vows even though she expects her partner to remain committed to her. She's a lot like Tess that way.\"\n\n\"Did you ever date her?\" Angie asked.\n\n\"Are you serious? She's always been annoying. Besides, do you see her as my type?\"\n\n\"Not really, but I just met you, so how much do I know?\"\n\n\"Does this all seem odd to you?\" \n\nShe cocked her head to the side to show her confusion at his question. Angie realized she had only been in Rolla a couple days but both Jeanette\u2014and Steve\u2014treated her more like family than a stranger passing through town. \n\n\"You're a stranger. Yet Jen offered you a job and a place to stay. She never lets anyone stay in the castle and she's been quite protective of me for a long time. But she has us sleeping a few yards away from each other,\" Steve said. \"Herman and Jeanette opened the Totem Pole in 1933. That was thirty-one years ago. Who do you think has been operating that cash register since Herman died?\"\n\n\"What are you saying then, that she's pretending she can't use it? Why? What point is there in faking it?\"\n\n\"For whatever reason, I think she's decided you need to be here. Herman and Jeanette opened their home to strays for years. They took in unwanted and most often unruly kids. The discipline wasn't in the form of belts or paddling the way so many of us had experienced from our birth parents. They raised each one of us with love, using far more patience than anyone I've ever met. \n\n\"Herman spent every spare hour with us. He learned how to jump rope and dress a doll just to be able to interact with the girls. Jen threw the meanest fast pitch in town. They invested their hearts and their lives to us.\"\n\nAngie saw the devotion on Steve's face. She remembered Jeanette telling her Steve came to them as a young boy. \n\n\"You loved them.\"\n\n\"Once I grew up a bit, I did everything I could to make them proud. Because of them, I'm not bitter or angry at my birth parents anymore. I realize not all parents have the skills to raise a child. Without support from family or the community, it's overwhelming, to the point where giving that child to someone else is the only answer they can see.\"\n\nHis words made her wonder about her birth father. Her mother slept with the man while married, an affair she claimed to end after a few short months. Angie hadn't thought much about the man before listening to Steve. Yet she realized her mother hadn't said whether the man knew he was going to be a father or not. \n\n\"I . . . it can't be easy, giving a child away,\" Angie said, still not sure she wanted to talk about her own family. \n\nSteve suspected she wasn't ready to share. His years living with the couple he considered his parents taught him not to force a discussion but to lead the person to opening up on their own. \n\n\"I promised Herman I would do my best not to get into a situation where I jeopardized a child's future. That old man was a gem. He could tell when I needed space even before I knew I did. He was the kind of father I want to be.\"\n\nAngie looked around the small area behind the store. The picnic table, though old, was sturdy. An empty milk crate appeared to be there as a foot stool. At first glance, it all looked stark until one noticed the climbing roses along the old fence. She pictured her parent's home and the miniature roses her mother spent hours pruning each week. \n\nEverything reminded her of home, she realized. She missed her room. When she allowed herself to admit it, she even missed her brother. Two years separated them. Danny's hair was the same fiery red shade as their father had. \n\nAngie gasped at the sudden comprehension that she and her brother had different fathers. She had been thinking of herself since she heard the news. Her brother hadn't been home when her parents talked to her. He had moved to California with several friends soon after graduation. The last time she heard from him, he had been talking about karma and spending his days surfing. \n\n\"Oh my god, that's why I don't have red hair,\" she whispered, the realization making perfect sense.\n\n\"I've either gone deaf or you left something out.\"\n\n\"I, no, I'm sorry. I was thinking.\"\n\n\"Nothing wrong with a pretty girl who's smart,\" Steve said. \n\n\"Do you believe in karma?\"\n\n\"Where did that come from?\"\n\n\"Just, well, my brother talks about it all the time. He moved to California and I haven't seen him in a few years. When he calls, though, he's always making some weird comment. There was one time, about six months ago, when he tried to get me to move there with him. He said it was his destiny to keep me happy. I didn't even understand what he meant.\"\n\nSteve was older than the girl sitting across from him, yet in the short time since his arrival at Jeanette's, he saw more than her attractive attributes. He recognized the same wounded soul in her that he had as a child. Because he did, he accepted that he would need to take his time if he wanted a chance with her. \n\n\"Karma has different meanings, depending how each person interprets the word. Think of it as similar to destiny. We're destined from birth to have certain characteristics. Even the flaws we have are part of it. We can absorb a great deal of knowledge but if it's our destiny to be a farmer, that's what we'll be.\"\n\n\"It sounds confusing, sort of.\"\n\n\"That's where the different meanings fit. There's a simpler way to think of destiny and karma.\"\n\nSteve recognized the moment as his opportunity to plant a seed on relationships. He leaned his elbows on the old table and smiled. \n\n\"Two people meet in a city far from their homes. They fall in love, marry, and live in bliss forever. How can that happen if destiny didn't plan for them both to be in the same place at that same moment?\"\n\nAngie forgot to breathe. She stared into his eyes and read the message of hope in them. \n\n\"Is destiny ever wrong?\"\n\n\"Never ever,\" he whispered, watching her face as he spoke.\n\n\"I'm leaving soon.\"\n\n\"Soon isn't here though, is it?\"\n\nSteve wondered how long he could postpone soon. A crash from inside the trading post had them both rushing to their feet and running inside. \n\n\"Jen, where are you? What happened?\"\n\nHe looked down every aisle with a sick feeling building inside him. Jeanette was stubborn. She didn't ask for help. A scattered display of snacks near the front door had him fearing the worst.\n\n\"God darn nasty thing, you get your skanky ass right back out that door!\"\n\nSteve stopped so fast Angie slammed into his back. He lunged forward a step before catching his balance. The sight in front of him changed his fear to laughter. Cowering in the corner was a small dog. \n\n\"Aw, he's scared.\" Angie moved around the others and began speaking to the animal. \"I bet you're hungry. You didn't mean to cause trouble, did you? Look at how pretty you are. A bath would feel so good. First is something to eat though. Would you like Steve to find something for you?\"\n\nThe dog, a puppy from what Steve could see, slid deeper into the corner when the man reached for a package of beef sticks. \n\n\"Don't be scared. He's just opening some food. I think you're going to be gorgeous after a bath. I'm sorry you're so hungry. I wish you could tell me why no one took care of you.\"\n\nAngie felt Steve's hand near her shoulder. He transferred several pieces of spicy dried meat into her fingers before opening another package. She rolled the sticks within a foot of the dog.\n\n\"Go ahead. It's OK to eat in front of us. We'll be fine.\"\n\nThe puppy whimpered before taking half a step. Angie smiled when the animal began eating. \n\n\"There you go. Steve has more, too. I would like to help you. Will you give me that chance?\"\n\nJeanette watched the magic happening between the young girl and the puppy. The distance between the two narrowed as Angie inched forward. Steve gave her another handful of the beef sticks before easing back a few steps. \n\n\"Here's a little more until we can get you some proper food. I hope the spices don't bother that cute little tummy you have there.\"\n\nIt crossed Steve's mind that it was a good thing there weren't any customers in the store to scare the pup any more than it already was. In fact, he worried the animal might attempt to bite anyone who approached it.\n\n\"I really think you need a name but what if I choose one for a boy and you're a girl? Help me out here. Give me a clue if you can. Maybe you could wink at Steve if you're a girl. If you're a boy, you can wink at me. See how easy that would be?\"\n\nSteve smiled at the idea of the animal winking. He looked at Jeanette to see the same expression on her face.\n\n\"I wonder why you came here, to this place, today,\" Angie said as the dog continued to eat.\n\n\"Destiny, Ang. It's the dog's destiny.\"\n\nSteve spoke from his spot behind Angie. His words took her back to the picnic table and his explanation. She shivered at the connection.\n\n\"Perfect,\" she whispered, holding her hand out to the dog. \"Hello, Destiny, I'm very honored you chose this spot to present yourself.\"\n\nThe puppy's tail thumped the floor. With a little food to help the hunger, and Angie's calming voice, the animal moved closer. Her fingers stroked the once clean fur while the little dog sniffed her arm. Determining she wasn't an enemy, the animal dropped at her side and went to sleep. \n\n\"That dog is filthy. You don't know what's happened to it or if it's healthy. I think we should call animal control,\" Jeanette said.\n\n\"I can wash her. She's just a little thing, I bet she'll fit in the cleaning bucket. We can put an ad on the door to see if anyone claims her.\"\n\n\"We need to get her out of here and clean this mess,\" Steve said, keeping his movements slow.\n\n\"Is there some rope in the trading post? I should make a leash of some kind so she doesn't run away again. Oh, and a collar . . .\"\n\n\"Way ahead of you,\" Steve said. \"Bring her out to the shed but hold on to her.\"\n\nThe pup brightened and squirmed once out of the store. Because the road was quite close to the store, Angie held tight so the little dog didn't run in front of a car. \n\n\"I can't see her cleaning this place out, and last time I was in here, Herman had some rope hanging in the back. One of us kids always had a dog we found somewhere in town. He started keeping supplies for us.\" \n\nThey worked together to secure a leash and collar for the puppy. Angie smiled when Steve walked at her side once they left the shed. \n\n\"Where should I tie her up, though? I want to be able to check on her.\"\n\nSteve veered off the path toward a small fenced-in enclosure. \"I know there's a bunch of weeds in it, but this should work. Herman kept it for all those strays we had. See if you can tie the leash around a fence post. That will give her plenty room to move around.\"\n\nAngie spoke to the puppy as she followed Steve's directions. He disappeared only to return with a bowl of water and one of dry dog food. While the pup ate, they filled a bucket with soapy water, taking only minutes to clean the dirty fur. Angie laughed as the pup shook her wet fur. \n\n\"I'll take care of the store. Go shower,\" Steve said.\n\nAngie looked down at her dirty clothes and nodded. She didn't even argue before she ran to the castle. Steve swore. He wanted to follow her. He wanted to be in the castle when she stepped out of her room. He kicked a dead branch and swore again. Once inside the trading post, he saw that Jeanette had already taken care of the mess the dog made there. She was at the counter talking to one of her friends. Because he knew she could handle the place on her own, he left. Without a destination in mind, he got in his car and drove away, hoping to cool his racing thoughts. Angie returned to the trading post, unaware she was the cause of the man's disappearance. \n\n\"Time to close,\" Jeanette said. \"I think I'll take a magazine with me and call it a night. Grab whatever you want for dinner, Angie, or send Steven out for something later.\"\n\n\"I'm going to check on the puppy then relax, too. I'm exhausted.\"\n\nThey parted at the path after locking the store doors. Angie waited until Jeanette went inside her house before backtracking to the enclosure. Expecting to find the puppy inside, she couldn't hide her disappointment when only the collar and leash remained. She swore, thinking she hadn't put the collar on tight enough, then remembered the discussion about destiny. \n\n\"I guess you weren't meant to stay,\" she whispered.\n\nShe dropped the collar and went inside the castle where the evening dragged. Soon after darkness fell, she undressed and crawled into bed, hoping to sleep away her sudden bout of loneliness.\n\nSteve remained in his car even after he turned the key to silence the motor. The trial brought him home in time to meet Angie. Yet he knew so little about her. He went inside the castle, making as little noise as possible, doubting he would sleep. \n\n**** \n\nAngie stood in the kitchen the next morning thinking about her life. She hadn't heard Steve return in the night, but she sensed when he walked into the room. \n\n\"If destiny brings a person to a certain place, then what is it that makes them leave?\"\n\n\"It's destiny in reverse,\" Steve said.\n\n\"So when I left the places I stopped at, it was my time to go?\"\n\nHe nodded. \"Do you question it?\"\n\n\"I worry about the people, the ones I, ah, met.\"\n\n\"Do you believe you should return to wherever you were and explain something?\" he asked.\n\n\"They helped me.\"\n\n\"But you didn't do anything in return? You just took their help and left?\"\n\n\"No, it wasn't that way. You don't understand, Steve.\"\n\n\"I can't understand what you don't tell me,\" he said, taking her hand. \n\nShe looked into his eyes before nodding. \"It might take a long time.\"\n\n\"Then let's sit on the sofa. I'm too tired to stand.\"\n\nHe smiled, hoping to relax her. She curled into the corner of the cushions. \n\n\"My parents lied. All my life, they lied. My father . . . he's not my father, but I didn't know . . . my mother cheated when he was gone, fighting in the war. She was pregnant, from someone she barely knew, when he got back. All my life, she never said anything. Neither of them did, until one day, they decided I was old enough to know. They could have told me before or made it seem less sordid.\"",
        "\"Would you have listened better when you were younger?\"\n\nShe wondered how he could know she hadn't taken the news well. \"No.\"\n\n\"I'm proof that it's more important who raised the child than who created it. Jeanette and Herman didn't care I wasn't their birth child. Maybe your father was the same way.\"\n\n\"When I was little, he would sit on the floor and play dolls and games with me. After I started school, he would help me with my homework and go to all my school functions,\" she said. \"Still, I couldn't stay there, after they told me. I don't know who I am, Steve. I'm not a real Barrett. My brother is but I'm not. He has red hair, like my fa\u2014\"\n\nSteve pulled her into his arms seconds before she broke into tears. \n\n\"Your parents made a choice long ago. They raised you\u2014and your brother\u2014as a family. My parents didn't want me. They handed me over and walked away. I was angry, even angrier than you are, because I didn't know who to be mad at. How Jeanette and Herman survived through those years is beyond me but they never gave up. They continued to love me as if I was their flesh and blood.\"\n\nHe massaged her back as he spoke, calming her until she sat up again.\n\n\"Was I wrong, to leave home?\"\n\n\"I can't answer that. No one knows what was in your mind except you.\"\n\nA knock at the door stopped Angie from replying. She wiped her eyes the same time Steve dropped a kiss on the top of her head. Angie tried to act as if the kiss came from a good friend. \n\n\"Sit tight. It must be Jeanette. I'll get rid of her.\"\n\n\"No, it's OK, let her in.\"\n\n\"You sure?\" he asked.\n\n\"I'm sure. Unless you . . .\"\n\nThe man confused her. His knowledge and attitude about life made him seem much older than he was. Conversations about destiny flowed as if he wrote the scripts. Yet she remembered Jeanette saying he just turned thirty on his last birthday. \n\n\"Good morning, Jeanette.\"\n\nThe woman's motherly instinct kicked in as soon as she saw Angie's tears. \"If you did anything to hurt her\u2014\"\n\n\"Thanks for having faith in me.\" \n\nSteve turned before Jeanette could respond. Angie saw his body shaking and jumped from the sofa. She wanted to go to him but stopped at the door instead.\n\n\"I'm fine. Did you need something?\" \n\n\"I was worried when you didn't show up for a lesson with the cash register,\" Jeanette said. \n\n\"We were talking. I'm sorry.\"\n\nAngie glanced at the man behind her. He hadn't moved. She tried to think of a way to make the woman at the door leave. \n\n\"I'll be there soon, OK?\" Angie asked.\n\nJeanette peered around the girl as she realized she interrupted a deep conversation. Although she wanted to help both of the young adults through their problems, she stepped back, nodding her agreement as the door closed. Herman's voice reminded her that when Angie and Steve wanted her advice, they would ask. She retreated, hoping that would be soon.\n\n\"Why did she say that?\"\n\n\"Let it go, Ang.\"\n\n\"But she\u2014\"\n\nThree steps brought Steve face to face with Angie. His lips covered hers in a kiss that conveyed his hunger and desire better than words could. His arms closed around her slender frame in a hug both gentle and passionate at the same time. When he pulled back, she gulped in much needed air.\n\n\"She's smart, Angie. She knows you have me tied in knots.\"\n\nHer heart thudded so hard she was sure it would break through her chest. \n\n\"That's what you mean about destiny, isn't it? Destiny brought us here, at the same time,\" she whispered. \"Kiss me again.\"\n\nShe swallowed his groan along with her own when he obeyed her simple request. Much later, walking hand in hand, they found Jeanette. \n\n\"Don't say a word, Steven. I was wrong, and I apologize,\" the old woman said. \"I hope you can forgive me.\"\n\nSteve dropped Angie's hand to give Jeanette a hug. \"Done,\" he whispered.\n\n**** \n\nThat evening they sat around the table for a late dinner. Steve cooked steaks on the grill while the women contributed salads, vegetables, and beverages. Angie picked at her food as she tried to find the words for what she was about to say. \n\n\"Um, I need you to know . . . I have to go home.\"\n\nSteve couldn't explain his feelings for the girl but he couldn't stand hearing her say she was leaving. He thought she cared for him. He swore and went outside without a word. Angie's smile left with him. \n\n\"Let him go, honey.\"\n\n\"But\u2014\"\n\n\"Talk to him after he's had a chance to calm down.\"\n\n\"Jeanette, I need to face my parents. I acted like a child when I heard what my mother said. I should have stayed home and tried to understand better. Running away wasn't the smartest thing to do. Even though I haven't been gone long, I've grown up. I need to talk to my parents and straighten out my feelings about the whole situation.\"\n\n\"You know I'll miss you, Angie. In the short time you've been here, you've become another member of my family.\"\n\n\"That means a lot, Jeanette. You've helped me see that running won't give me the answers I want. That's why I need to go home.\"\n\n\"I understand. Can't say I won't miss you though,\" Jeanette said. \"But promise me one thing. If you have any feelings for Steven, you need to make sure he knows why you're going home. Don't let him think you're leaving him. I've never seen him so happy before.\"\n\n\"I'm confused, Jeanette. We barely know each other\u2014\" \n\n\"Go find him.\"\n\nAngie hugged the old woman and ran outside. She looked in all the places she thought he might be but didn't find him. Finally, she spotted him sitting in the run-down garden on an old chair.\n\n\"Steve? I need to talk to you.\"\n\nHe didn't acknowledge her even though she stood right in front of him.\n\n\"When I left, I didn't know where I was going. I just wanted to get away from my parents. My mother, she just seemed as if what she told me shouldn't matter. And my father, he looked so sad. After all the other places I stopped on the way, and all the people I met, I stopped here . . . and found something I didn't even know I needed. Jeanette saw I was hurting inside. Her kindness and gentle ways made me understand things I hadn't before. Then you showed up. When you looked at me that first time, without my shirt . . .\"\n\nSteve listened to her as he thought back to the moment he walked into the castle. Nothing would ever erase that image.\n\n\"Then we pretended to be engaged, and we kissed and held hands, and I wondered what it would be like if it was real. At night, in my bed, I would dream of you. Yet I was sure once those women stopped stalking you, that you wouldn't . . .\"\n\nShe stopped speaking to wipe the tears off her face. He still hadn't said anything or even looked at her. \n\n\"I'm leaving to face my parents the way I should have before. However, I\u2014\"\n\nSteve stood so fast he almost knocked her over. \"I get it. You've had your fun and now you're taking off.\"\n\n\"No, you're wrong\u2014\"\n\n\"Don't bother making up excuses, Angie. You never planned to stay.\"\n\nHe walked away without giving her a chance to finish. Long hours passed as she sat on the chair he vacated. When the sun rose, she packed her bag, hugged Jeanette, and drove off.\n\nJeanette hadn't heard from Steven in days. He hadn't left a note and didn't answer his phone when she called. Sitting in her chair one evening, she chastised herself for the possible role she played in pushing the pair together so soon. Her rouse with the cash register hadn't been to hurt anyone. Nonetheless, she had. \n\nSteve finally called two weeks after he disappeared. He was involved in a big case, he said, and hoped she was doing all right. Then before Jeanette could mention Angie, he hung up. As if she knew the older woman needed to hear from her, Angie called that evening too. Jeanette smiled as soon as she heard the girl's voice, pleased with how well she sounded. Seconds after hanging up the phone, she began to devise a plan to get the two young people back to the trading post. \n\n* * * * \n\nAngie's parents had been afraid when they discovered she was gone. They worried whether she was safe or not. Her father even talked to a friend of his who was a police officer. The man was able to offer little help. Angie was an adult who didn't need parental permission for what she did. There was no proof someone took her or that she was in danger. He encouraged them to stay positive the girl would contact them. As time passed, they accepted that their deception drove her away. \n\nTheir personal relationship suffered until they rarely spoke to each other. Stan wished he had been stronger when his wife decided to break the news to Angie. In fact, he hadn't seen any reason to tell her at all. He loved her as his daughter regardless if she shared his DNA or not. Then one evening, as he stared at the newspaper in his hands, he heard her voice.\n\n\"Hello? Anyone here?\"\n\n\"Angela?\" \n\nStan ran toward the kitchen in tears. His daughter was home. She was safe. He hugged her close and cried. Angie suddenly knew it didn't matter if he helped create her or not. He was her father.\n\nHe stepped back to look at her and smiled. \"You look great.\"\n\n\"I have so much to tell you. Is mom home?\"\n\n\"She went to the grocery store.\"\n\n\"Do I have time for a shower before she gets back, you think?\"\n\nStan nodded. \"Everything is in your room yet. We left it . . .\"\n\nShe filled in what he hadn't said on her own. They hadn't given up on her. She hoped they wouldn't stand in her way after they heard what she intended to do next. Her heart skipped a beat as she thought of the man behind her decision. \n\nHer bedroom felt strange. She stared at the pink walls and the endless posters and photos covering them. An old teddy bear she had when she was a child sat on her pillow. Her room was the same as when she left. The change was within her. She hopped into the shower as she continued to think. She had just finished dressing when she heard her mother's voice. Intent on getting what she had to say out before her nerves took over, she took a deep breath, then walked out of her room.\n\n\"Hello, mom.\"\n\n\"Angela!\"\n\nStunned at seeing her daughter there, Katherine didn't move. Angie hesitated. She had been so angry with her mother for so long. \n\n\"Stan? Did you know she was coming?\"\n\nThe words were more of an accusation than a question. Stan shook his head. Katherine glared at him for several seconds before stepping closer to Angie.\n\n\"It's good to see you.\"\n\nThe simple greeting hadn't been what Angie expected. Then she chastised herself. She should have known her mother wouldn't react the way her father had. \n\n\"When did you get back?\" Katherine asked as she busied herself with the groceries.\n\n\"Not long ago. If you're done there, maybe we can go into the living room and talk?\"\n\nKatherine didn't answer. Mixed emotions\u2014including fear\u2014filled her. \n\n\"For once just stop thinking about yourself, Katherine. She's our daughter.\"\n\nAngie left the room. If her mother didn't want to listen, that was her choice. She would talk to her father. Changing her mind, she returned to the kitchen.\n\n\"No, you know what? I have something to say to both of you,\" she said. \"If you don't like that, then I'm sorry. I'm not a kid anymore. I don't need your permission for what I choose to do but you should listen.\"\n\nStan silently applauded his daughter's declaration. His wife faced most problems by ignoring them or by speaking before she should.\n\n\"Please, Katherine. Even if you don't care, I do,\" he said.\n\nThe trio went into the living room. Angie stood near the window until her parents sat down. Then she began . . .\n\nShe told them about Martha and Harold, and Hank and Willow. She told them about the small towns she visited. Talking about Jeanette made Angie emotional but she kept going. Her father smiled several times but she wasn't sure her mother was even listening. That changed as soon as Angie talked about the reason she left home. It was important to her to make them understand she wasn't a child anymore even though her previous behavior made her seem as if she was. \n\n\"Mom, I don't think you realize how confused I felt after hearing what you said. All my life, I was a Barrett. I had a father. Then with a few callous words, you ripped that away. It didn't even seem as if you thought you had really done anything wrong. It was like oh, I slept with someone else and got pregnant, like it wasn't a big deal. I can't even figure out why you suddenly thought you had to tell me about it anyway. I mean, how did you think I would take it? That I would run over and hug you and go on as if nothing was different?\n\n\"Did you suddenly believe that telling me would somehow make you less guilty for what you did? I've spent the past months away because you told me my father was just someone you slept with, a man you didn't know, who filled your bed because you felt lonely. Did you stop to consider what your words would do?\"\n\nStan cried at the pain he heard in his daughter's voice. She had a right to be hurt. He hadn't wanted Katherine to say anything. He had moved past her infidelity long ago and raised both their children as his own. Their marriage hadn't ever been what he dreamed it would be though. \n\n\"I didn't come home for you, mother. I guess I really didn't even expect you to answer me. All my life you've pushed aside anything that made you uncomfortable. I didn't see that until I stayed with people who were kind and gave whatever they could to help a stranger. It took leaving home for me to grow up. Nothing you can say will change my mind about what happens next. I'm going back to Jeanette's, if she'll have me. I'll talk to her tonight.\"\n\nStan cleared his throat. \"You'll always be my daughter, no matter where you live. And I hope that someday I can meet this woman who took you in so I can thank her.\"\n\nKatherine remained sitting when her husband hugged Angie. She blocked out anything they said and eventually left the room. Angie realized it didn't really matter that her mother didn't try to explain her actions. Her mother wouldn't change. It was time to let go of the anger that caused her to leave and to be happy again. Leaving home had been about the questions. Returning home had been about telling them she found the answers she needed. All she wanted to do next was to see Steve and tell him how important he was to her. \n\n* * * * \n\nAngie felt her heart pounding through her chest as she approached the trading post. It had been a few days since she called Jeanette. Steve's name hadn't come up in their conversation. Jeanette watched the door constantly. She still hadn't figured out how to get Steven home. As she so often did when she had troubles, she asked Herman for help, hoping he had even a small piece of advice for her. As she waited to hear his whispered words, the crunch of tires on the gravel driveway caught her attention. \n\n\"Oh my lord she's here,\" Jeanette said, getting out of her chair to greet her.\n\nIn her haste, the excited woman caught her foot on the rug and crashed against the bookshelves before tumbling to the floor. Her screams reached Angie even before she turned her car off. She ran into the woman's house to find her sprawled over a pile of books. When the woman reached for her leg and screamed louder, Angie knew she needed help.\n\n\"I'm calling for an ambulance.\"\n\nAngie couldn't think. She'd been in Jeanette's house many times. Yet suddenly she couldn't remember where the telephone was. She frantically looked around the small house until she spotted it on the wall in the kitchen. Relieved when a kind operator assured her help was on the way, she took a deep breath, trying to put her fear to the side. \n\n\"They're on the way. Don't try to move,\" Angie said, crouched on the floor next to her.\n\nWhat seemed like forever but was only a matter of minutes, Angie heard a siren. She ran to the door and waved to the paramedics.\n\n\"She's inside. I told her not to move.\"\n\nThey nodded and went to work checking the woman for injuries. After only a short time, they put a brace around her ankle for support. Angie did her best to answer their questions but wasn't much help. She stood by as they carefully put the woman on a stretcher. Tears filled the young girl's eyes as the ambulance drove away. \n\nIt took her a few minutes to shake away the crying and do as Jeanette had asked. \"Call Steven,\" the woman had whispered, clearly still in pain.\n\nHer hands shook as she opened the small book next to the telephone. She tried to calm down but she was so afraid. Calling Steve to tell him Jeanette fell and was on the way to the hospital hadn't been what she envisioned as a way to let him know she was back. Both hoping he would answer and praying he wouldn't, she dialed, then listened as the phone rang. When it went to an answering machine, she took a deep breath. \n\nHer message had been short and to the point. She wanted to get to the hospital to check on Jeanette. Ignoring the pile of books on the floor, she left, following the directions one of the paramedics gave her to find the hospital.\n\nThe next hours were a blur. Angie waited where directed while the staff took x-rays and ran blood work. She paced. She cried. Most of all, she prayed Steve would appear. It had been four hours since she left the message for him. Soon, she kept thinking. He would be there soon. Then it occurred to her she wasn't even sure where he lived. Maybe it was so far away he would have to take an airplane. Her head hurt trying to figure it all out.\n\nAfter a long day at work, Steve debated whether to stop for dinner or just go home. His growling stomach won. The small diner he spotted didn't look busy. Once inside, he smiled at the woman behind the counter, and slid onto the first empty stool.\n\n\"Coffee?\" she asked, holding a steaming carafe in her hand.\n\nSteve nodded as he scanned the plastic menu. Spotting a house specialty burger, he ordered it, adding French fries as well. It wasn't the healthiest, he decided, but he could always spend more time at the gym to make up for it. He sipped his coffee and waited. As they always did, his thoughts went to Angie, and the first time he saw her. He swore at how he ran once he heard she was leaving. It wasn't an adult way to act, he finally admitted. No longer hungry, he opened his wallet, pulled out a few bills, and tossed them onto the counter. Then he went home.\n\nThe first thing he spotted was the flashing light on his answering machine. Few people called him other than Jeanette. So far, he had been able to ignore her most of her calls. However, the constant flicker irritated him . . . and gave him a bad feeling. He pushed the button and waited.\n\n\"Hi. It's, ah, it's Angie.\" Several seconds passed in silence. \"Jeanette said to call you. She fell. They took her to the hosp\u2014\"\n\nThe beep of the machine cut off the last of the message. Steve heard enough though. He ran to his room and packed a bag. Jeanette lived five hours away. If he pushed the speed limit, he could make it there in less than four. Once on the road, he tried to figure out how Angie knew about Jeanette. He assumed she had gone home. Had her parents kicked her out? Had something happened to her? The concern he had for Jeanette doubled as he worried about the person who stole his heart. \n\nThe bright lights of the hospital were a direct contrast to the darkness of the night. He didn't even know if he would be able to get in since it was so late. Luckily, the nurse at the desk recognized him and brought him to Jeanette's room. A benefit of living in small towns, he realized.\n\nShe looked pale even from the doorway. It was the first thing he noticed. Of course, it was late, and according to the nurse, they had given her something to help her sleep. He turned around and went in search of answers. \n\nAngie crouched deeper into the sofa as soon as she saw Steve. The hospital wasn't the place to talk to him, especially considering he was there for Jeanette. She waited until he turned a corner before sneaking outside. Unsure what to do, she drove back to Jeanette's. Once there she took one of her suitcases into the castle with her. The rest could wait. ",
        "Strange sounds woke Angie. Maybe an animal got in somehow, she thought, trying to remember if she closed the door all the way the night before. As the noises grew louder, she dressed, looking around for something to use as a weapon. The only thing she found was a shoe. Creeping to her door, she pushed it open a few inches. \n\n\"You can come out, Angie.\"\n\n\"Steve?\" The word came out as a cross between a scream and a screech. \n\n\"Who did you think would be here?\"\n\n\"Why aren't you at the hospital?\"\n\n\"I just talked to her doctor. She'll have bruises for a while, and she won't be able to put any weight on her foot until it heals some, but they said she can come home tomorrow,\" Steve said.\n\n\"That's great, right?\"\n\n\"Tell me what happened.\"\n\nShe noticed her ignored her question, which confused her. His entire demeanor appeared cold and irritable. Hopefully that would change once Jeanette improved. \n\n\"I don't know, exactly. I mean, I was still in my car when I heard her scream. She didn't say how she fell.\"\n\n\"Did she know you were coming?\"\n\nAngie nodded. He stared at her and left. His head hurt from lack of sleep. Nothing made sense anymore. The only thing he was sure of was that Jeanette needed help.\n\nAngie went to open the trading post for a few hours. The work would keep her mind off Steve\u2014at least she hoped it would. Several neighbors who saw the bright lights of the ambulance stopped in to ask what happened. After the fifth one showed up, she had enough. Using the flap of a cardboard box and a marker, she made a sign for the front door. The bright red letters simply said closed. \n\nSteve sat next to Jeanette while she ate her lunch. For hospital food, it didn't look bad, he admitted, thinking of the meal he missed the night before. The doctor had already been in and recommended she use a wheelchair until her ankle healed some. Later she would be able to use a walker. Steve assured the man he would have them at the house for her. The staff social worker gave them a list of agencies to call to have someone help her at home for the first weeks. Jeanette balked at the idea but Steve nodded and tucked the paper into his pocket. He was in the middle of a tricky trial and knew he needed to get through that before he would be free to take care of her himself. \n\nAngie wandered around the yard deep in thought. The weeds and high grass tickled her bare legs. She smiled when she looked at the castle but sadness took over at the sight of the chair Steve sat on the day she tried to talk to him about going home. She hoped she could get him to understand why she had to leave when she did. \n\n* * * * \n\nJeanette wasn't the ideal patient once she returned home. She constantly tried to get up and do things the way she always had. Angie wanted to stomp her foot and demand the woman follow the orders given to her by the doctor. Instead, she crossed her arms and gave her an ultimatum.\n\n\"If you think you can do everything on your own, then there's no need for me to be here. I might as well continue on with my travels.\"\n\nAngie waited for the woman to answer. She expected to hear a snappy reply about how much wiser the older woman was from everything she learned in life. Instead, Jeanette laughed. She laughed until tears ran down her cheeks.\n\n\"You think that's funny? That leaving you alone is no big deal. Who do you think will be here when you fall again, or if you want something to eat and your ankle is so sore you can't make it to the kitchen?\"\n\nJeanette hesitated. The girl had a good point. Her ankle still hurt like hell and going from room to room wasn't easy even in the wheelchair. All she wanted to do was stay sitting with her foot propped up but taking it easy wasn't something she was used to. \n\n\"You're right. I'm sorry. I don't know what it's like to just sit all day. The store and the house don't take care of themselves. Maybe I'm just old and set in my ways.\" \n\nJeanette realized she missed having Steve around. The boy was always in the middle of some case and didn't make it back too often. Once she saw his reaction to Angie, she hoped that would change. In the beginning, when she had been trying to think of a way to get them together, she never imagined an injury would make it worse. She turned away and sighed.\n\nAngie hadn't asked about Steve but he never left her thoughts. In the short amount of time they had together, she was sure they connected, and not just sexually. That's why it didn't make sense when he hadn't let her explain her intentions for going back to talk to her parents. If he had listened, he would have known she would only be gone a few days. Jeanette noticed the sadness in the girl's eyes and wished she could make it go away. Only one person could do that\u2014and he wasn't answering his phone. \n\n\"I promise to be a better patient if you promise to stop worrying,\" Jeanette said.\n\n\"That sounds perfect. I'm sure your doctor would like to hear you say that too.\"\n\n\"Old women like me tend to get cranky when something stops us from doing what we're used to. Add in the pain and it's even worse. Thankfully, I have you to keep me in line.\"\n\n\"First, you aren't that old. Cranky, OK, yes, but pain sucks.\"\n\nFor a few minutes, it was if the two women reversed roles. The conclusion made Jeanette smile. She settled into her chair and picked up a magazine. Her ankle would heal. Then she could get back to living as she had before.\n\nFive hours away, Steve sipped on his beer while staring out the wall of windows in his apartment. Although the road below rarely seemed empty, he didn't hear anything through the glass. Lights from other buildings twinkled in the night, reminding him how much he missed seeing the stars. He should be asleep but he couldn't stop thinking of Angie. In just the few days they were around each other, he knew he wanted her in his life forever. \n\nHe was ashamed of the way he ran when she tried to talk about going to see her parents. His fear kicked in as soon as she mentioned leaving. In reality, he was proud of the way she was handling it all. His own past taught him to stand up to those who hurt him or they would never stop. It was time he checked on Jeanette, and a phone call wasn't what he had in mind. A few minutes after he made his decision, he had a partner covering his current case. He hadn't put his suitcase away after using it last time so it was easy to clear it out before packing it again. It was late, but he didn't want to wait. A quick check of his apartment and he was ready to leave. \n\nOver four hours later, he was there. The one place in the world he truly felt he could relax and be himself. Herman and Jeanette gave him more than a place to live when he was young. He learned love from the way they gave love. If anyone could choose their parents, Jeanette and Herman were the perfect ones for the job. After Herman passed away, he made sure to check on Jeanette as often as possible. Yet he realized it hadn't been enough. If he had lived closer, or went to see her more often, he might have noticed how tired she appeared. He should have known, he chastised himself.\n\nHer house was dark when he parked in the driveway. Once he had made the decision to go back and check on her, he hadn't given the time much thought. He grabbed his bag and made his way along the path. Since he knew the layout of the castle so well, he opened the door, dropped his bag, and went to the bedroom he used just a few weeks before.\n\nHe hadn't expected to see Angie sprawled across the blankets, naked, sound asleep. His heart pounded as he stared at the woman he hadn't been able to forget. From the first time he saw her standing at the sink, washing her shirt, he wanted to know more about her. If he didn't want to scare her away, he knew he had to walk back out of the room, even though it wasn't what his body screamed at him to do.\n\nA brief memory of their discussion about destiny ran through his head. He hadn't given the theory much thought until their discussion on the subject. Trying not to make any noise, he took a bottle of beer from the refrigerator and went outside. The cool air did nothing to ease the heat of his skin. All he saw was Angie, naked, in his bed. \n\n\"Steve?\"\n\nHer voice came out as a whisper. He knew she was there even before she called his name. \n\n\"I didn't mean to wake you.\"\n\n\"You came back.\"\n\nHe struggled to answer. How could he explain why he left? After taking another swallow of beer, he cleared his throat, hoping he didn't scare her away again. She took a few more steps, stopping at his side, unsure of what else to say.\n\n\"I'm sorry I left the way I did,\" he said.\n\n\"I understand. When I left home, I didn't tell my parents. I just took off. I should have stayed and talked things out with them\u2014especially with my father. I let go of the anger I had over what my mother did. Jeanette made me see a father was more than the man who provided the sperm. A real father loved his children and took care of them. I believe my mother was wrong for what she did but I can't stop loving my father because of her mistake. \n\n\"The other places I stayed at were important. They taught me there are good people in the world. When I stopped here, Jeanette made me feel as if this was my home. Without knowing it, I reached my destination. Then you showed up and we talked about destiny. It made sense in ways I never thought of before. \"\n\n\"Angie, I was wrong to just take off the way I did. No one ever made me feel the way you do. It happened so fast it scared me. Mostly, I was afraid you were going home to your parents and I wouldn't ever see you again.\"\n\n\"That would never happen. From the first time I saw you, I couldn't imagine loving anyone else,\" she said. \n\n\"Come here.\"\n\nSteve reached out for her hand and pulled her onto his lap. They sat in the dark, two people with troubled stories who met at the right time in the right place. Destiny, they both thought seconds before they kissed.\n\nThe next morning, Jeanette looked out her window and smiled. Steve and Angie were asleep in the chair. It was easy to see by the way he held her that he wouldn't ever let her go. Herman would have loved Angie the way he had loved Steve. They were perfect together. She turned from the window imagining a grandchild, a little girl named Destiny."
    ],
    "authorname": "_Lynn_",
    "tags": [
        "love",
        "friends",
        "traveling",
        "happiness",
        "destiny",
        "route 66"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/halfway-to-nowhere"
}