{
    "title": "Up, Up, and Away",
    "pages": [
        "Mid-September, 2019. Near Seattle, Washington.\n\n\"It's funny, but I don't want you to go, Morgan,\" her therapist said with a warm smile.\n\n\"No. I understand. We've gotten very close over the last three years,\" the woman she'd been working with over that period of time replied.\n\n\"We're not supposed to get attached to our patients, but we're just human beings with the same wants, needs, and fears as everyone else. You've lived through my worst fear, and I have to tell you I admire you for the way you've worked through your loss. I really can't imagine losing a child.\"\n\nThe therapist quickly added, \"And a husband.\"\n\nMorgan Graham had just turned 36 two weeks before her nightmare began. It was cold, dark, and rainy when a Washington State Patrolman pulled into her driveway in the Seattle suburb where she, her husband Nick, and their daughter Audrey lived.\n\nShe couldn't recall a single thing the young state trooper told her other than, \"I'm very sorry. Both of them were killed instantly.\"\n\nThat had been four years ago, but it wasn't the passage of time clouding her memory. It was her brain's way of protecting her. It had instantly gone into a defensive mode shutting down everything but essential life-sustaining functions. \n\nDuring those first months after 'the accident' as she called it, she'd obviously continued breathing, but everything else was a chore. Occasionally, she was able to eat and drink, and when she was lucky, she might sleep 2-3 hours in a row. But other than that she'd been hollowed out from the inside, and until the last few months, she'd been little more than a shell of her former self.\n\nNick had provided well for them, and the life insurance money she'd received had allowed her to stay at home at grieve, and after a year of being nearly housebound, had also paid for therapy three times a week for the last three years.\n\nInitially, she couldn't see where talking and answering questions was doing any good, but her older brother, Hank Thompson, had insisted she keep going. He'd tried to get her to go a month after the accident, and kept at it until his sister gave in a year later. Hank had been there for her like no one else, and through it all, he was the one person on whom she could count no matter what. \n\nSo she'd kept going, and about six or seven months ago, she'd had a breakthrough session. It was hard to quantify what that meant, but she left the therapist's office that day feeling hopeful, and until then, hope had been the one thing she no longer had. \n\nWithin a month, she went on a kind of date with a friend of her brother. A month later, she got up the courage to go back to the elementary school where Audrey had been a 1st-grader, and began helping out in the office as a volunteer. While there, she began talking with one of the three male teachers on staff, a nice man around her age, and went out with him several times before realizing they had very little in common.\n\nJust three months after the breakthrough, Morgan started feeling almost normal again. It wasn't that there wasn't still a huge, gaping hole in her life. It was more that she'd learned to navigate around it and not look at it whereas it had previously consumed her every waking moment. She would not only look at it but stare into endlessly as though there was some sort of answer at the bottom; a bottom she could never see. But there wasn't, and now she had the tools to avoid it, and that only added to the sense of renewed hopefulness and optimism she'd been feeling.\n\nMorgan looked at the therapist, Doctor Ann Lee, PhD., who'd become a friend, and replied to her comment about losing her family.\n\n\"No. That's not something I'd recommend.\"\n\nThat she was now able to say that with a smile on her face spoke volumes about how far she'd come, and as much as her therapist hated to admit it, it was time for the sessions to end.\n\n\"Then I believe there's no reason for you to continue coming here,\" the woman told her reluctantly. \"But I'd love to stay in touch.\"\n\n\"We will, Ann. I promise,\" Morgan told her.\n\n\"So any idea what's next?\"\n\nMorgan smiled and said, \"Oh, my. I just turned 40, and there are so many things I want to do. I haven't made a list yet, but I want to do things that make me feel alive.\"\n\n\"That doesn't include bungee jumping, does it?\" her therapist asked, only partly kidding.\n\nWhen Morgan laughed, she smiled, and told her she was glad to know that was what she meant even though Morgan hadn't answered her verbally.\n\n\"Most of all, I'd like to love again. I'd like to really, truly love someone the way I loved my husband and daughter. I have no idea when or where or even how that might happen. All I know is I'm ready to experience that.\"\n\n\"Well, I have to tell you, you're a beautiful woman, Morgan, and finding someone won't be an issue.\"\n\nHer patient thanked her for saying that, then said, \"Not to state the obvious, but I don't want to just find someone. I'd want to find that really amazing someone I can't live without. And of course, I'd want him to feel the same way about me, and that might be a very tall order.\"\n\nNow her therapist laughed but in a polite way.\n\n\"I get what you mean. Men, even nice looking men, are a dime a dozen. Even attractive men with money are out there\u2014not that you're looking for money. But finding one who has all of the intangible things we women dream about is another thing.\"\n\nMorgan loved how she and her therapist nearly always agreed on nearly everything they discussed, at least once they'd gotten to a point where it wasn't just an endless stream of being asked, \"And how does that make you feel?\"\n\n\"As usual, you and I see the challenge the same way. And even if that never happens, I feel like I'm strong enough again to enjoy life, whatever it may bring my way.\"\n\n\"Will you be staying here in the Seattle area?\"\n\n\"I'm not sure. Nick absolutely loved the TV series Breaking Bad. It ended in 2013, and before he was killed, I'm sure he watched it on DVD at least a half dozen times. I watched it with him here and there, and there's something very appealing to me about the desert.\"\n\n\"Well, as often as we've agreed on things, that isn't one of them,\" her therapist kindly said. \"I love the mountains and the green and wouldn't live anywhere else.\"\n\n\"It's nice, but it comes with a cost, and that cost is endless gray skies, cold weather, and raw, drizzly weather.\"\n\n\"I'm not wild about that, but seeing nothing but sand all day, every day would just about do me in.\"\n\nMorgan laughed then brought up the old saying about one man's trash being another man's treasure.\n\nHer therapist laughed, too, and said, \"Or in this case, a woman's.\"\n\n\"Yes. Right,\" her long-time patient agreed.\n\n\"Well, whatever you decide, I wish you all the best, and I want you to know it's truly been a pleasure working with you and getting to know you, Morgan.\"\n\n\"Thank you, Ann. I feel the exactly same way, and I will never forget you or all of the many ways you've helped me work through this.\"\n\nThe therapist stood up, held out her arms, and received a warm hug from the patient and friend she would never forget.\n\n\"Take care, Morgan.\"\n\n\"I will, and you do the same.\"\n\nAs she closed the door to the office for the last time, that too, felt like a kind of breakthrough moment. It seemed like a figurative door in her life had closed along with the actual door she'd just shut. And, of course, a symbolic door closing entailed a new one opening. So as Morgan Graham opened the glass door of the outer office she'd been to so many times, she stopped on the sidewalk, looked around, and readied herself for the rest of her life.\n\nOctober 1st, 2019. Albuquerque, New Mexico.\n\n\"That was THE most fun I've ever had!\" one of the passengers told him.\n\n\"I'm glad you enjoyed it,\" her pilot told her.\n\n\"Enjoyed it? That was positively...orgasmic!\" she chirped.\n\n\"I'm sorry,\" one of her friends said to him from just a few inches away. \"She uh...she had a few before you took us up, and this is, well...not unexpected.\"\n\nThe younger man laughed and assured her it wasn't a problem before saying, \"Ah, okay. That would explain why she asked if she could join the 'mile-high club' with me during the flight.\" \n\nShe'd gotten up close and personal when she said it, and he'd smelled the alcohol on her breath, so he'd politely smiled and told her that sounded wonderful except for the fact that there were no rest rooms in a hot air balloon.\n\nHer reply to that shocked the handsome hot air ballon pilot who'd been hit on by his fair share of women.\n\n\"We don't need a room! My friend will look away, so don't let that stop you!\"\n\nA stunned pilot looked over at the woman's friend who could only shrug.\n\nAs the ladies exited the 'ship', he thanked them again and wished them a good rest of the day. As he did his post-flight check, he thought back on the history of ballooning in his hometown of Albuquerque and recalled that the first hot air balloon event there took place in 1972. It happened in a parking lot of a local mall where two men gathered 13 balloon pilots together for a flight. Now, some four decades later, the city's annual festival had grown into the biggest hot air ballon event in the world.\n\nIt was five years later when his grandfather, Zayn Webber, Senior, opened a commercial hot air balloon business he called Beautiful Balloons, a name he came up with using the words of the hit song Up, Up, and Away by The 5th Dimension from 1967. \n\nHe ran the company until his untimely death in 1990 from a stroke that took his life just minutes after landing a balloon filled with six passengers. His son and the pilot's father, Zayn Webber, Junior, took over the business and had high hopes that his son, Zayn Webber, III, would do the same. But the youngest member of the trio had other plans. Growing up, Zayn the Third, or Z3, as his friends called him, wanted to spread his wings and see the world. \n\nHe'd been told he would go to college for as long as he could remember, and his rather stern father was too intimidating to challenge at the tender age of 18. So after graduating from high school, the youngest Zayn Webber dutifully went to school at the University of New Mexico in his home town where he'd also earned his pilot's license and balloon certification and regularly flew passengers after turning 18, the youngest age for a commercial balloon pilot.\n\nBut when he graduated from college, he was sure enough of himself to finally stand up to his father, and when he announced his decision to fly for the US Air Force, his stoic parent stood there looking at him, stone faced and silent before turning around without saying a word.\n\nZayn had followed through on his promise, and after graduating from officer training, he reported to flight school, and for the last 3 1/2 years of his five-year obligation, he flew the F-15E Strike Eagle. During those years as an Air Force officer, Zayn spent just over a year during two different deployments flying close air support missions for Army and Marine units in Afghanistan.\n\nFlying was the love of his life. Lieutenant and later Captain Webber was no peacenik, but dropping precision weapons on human beings and blowing them to bits wasn't\u2014especially when one of them had killed an older woman who was outside at the wrong time in the wrong place. He loved knowing he'd saved American lives, but it ate at him knowing he'd killed an innocent woman along with a dozen or so jihadists during his time there. Even now it didn't matter to him that they were considered the enemy. The were still human beings, and by the time his five-year obligation ended, he'd had enough. Just a week later he found himself back home in Albuquerque flying for Beautiful Balloons.\n\nTo his credit, Zayn, Sr., never once gave his son a hard time about wanting to take five years away from the business. Being a rather austere man, he wasn't about to say anything like how proud he was of son or even worse, that he envied him for having the strength of character to do what he'd wanted. He was just glad to have his son back home and helping out with a business that continued to grow and thrive.\n\nMore than anyone, his mother, Sandra, was thrilled to have her boy back home. It didn't matter that her 'baby' was now 27 years old and stood just a shade over six-feet tall. He would always be her little boy, and she relished every minute she was able to spend with him after five long years of seeing him once or twice during each of those years.\n\nTragically, he hadn't been home for more than a month when his father met the same fate as his father had. They'd been sitting down eating dinner when Zayn, Senior, lowered his head. His wife asked if he was okay, and seconds later, he spoke the last words he would ever speak.\n\n\"Everything is...spinning around, and I...I feel sick to my stomach. I...I'm just so weak. I don't think I can even sit up any mo...\"\n\nZ3 had his phone out and handed it to his mom and told her to call 911 as he ran around the table and tried administering CPR after realizing his father wasn't breathing. In spite of his best efforts, by the time paramedics arrived, he was gone. They were required by law to continue CPR until a doctor could formally pronounce him dead, but Zayn knew it was over, and the only thing left to do was take care of his mother.\n\nHis sister, Katharine Webber-Kane, was three years older than him and lived with her husband in pleasant subdivision of town. Like her younger brother, she was initially in a state shock, but after the funeral, she was equally committed to helping her mother get through this. \n\nZayn had lived at home since leaving active duty, and as much he appreciated having a bed, home cooked meals, and a built-in maid in the form of his loving mother, he'd been on his own too long to dependent on anyone and was making plans to move out. But when his father passed away, he agreed to stay for another couple of months until his mother insisted she was strong enough to live on her own.\n\n\"As long as you and your sister are here in town, I can handle this,\" she'd bravely said.\n\nSo for the last two months, he'd been living in a very nice apartment in Nob Hill, part of the main street that ran through the city, and which had once been part of the famous Route 66. The complex where he lived was called 'Platinum' and was the epitome of high-end apartment living in the state.\n\nZayn had saved a ton of money during his time in the Air Force, and he was making more than enough to live comfortably on by taking locals and tourists up for an hour or so in a hot air balloon, something he'd been flying since he was 15.\n\nOne had to be 14 to become a hot air balloon pilot, 16 to be a private pilot, and 18 to fly commercially. It wasn't quite as exhilarating as flying at 'the speed of heat' over enemy-controlled territory in a foreign country, but it was still very pleasant and enjoyable. And best of all, no one was ever going to die because of a balloon flying overhead.\n\nHe was fortunate to be an attractive man, and it wasn't uncommon for the women he took up with him to flirt now and then. But the woman who'd shamelessly propositioned him that day was a first. \n\nAll those thoughts and more flooded his mind before heading back to the hangar. As he walked, he laughed one more time about the tipsy woman who was 40-something then let it go.\n\nKatharine was Zayn's only sibling, and she was waiting for him when he walked back into the office.\n\n\"How'd it go?\" she asked the moment she saw him.\n\nHe chuckled then told her he'd have to discuss it in private. There were other customers in the office booking a flight, and as the public face of the company, Katharine understood. When he told her about it later that evening after everyone else left she laughed loudly.\n\n\"No way! She...said...that?\"\n\n\"She did,\" he told her as he laughed, too.\n\n\"I hate to admit it, but my little brother is kinda hot, so I can't say I blame her. I just hope when I'm that age, I'm not a lush who throws herself at younger men.\"\n\nZayn laughed again because his sister was a beautiful woman in her own right and she rarely even had a glass of wine. Another reason was that she was quite possibly his best friend in the world and the one person he could trust to tell him the truth no matter how painful it might be.\n\nShe was his Goldilocks. His late father didn't 'do feelings', and his mother would immediately agree with anything her 'darling son' said or thought, so she was no help at all when it came to objectivity. But Katharine was not only in charge of the business's marketing and finances, she was an honest broker in every sense of the word.\n\n\"So another festival kicks off tomorrow,\" Katharine said after the laughter died down and they turned off the lights and set the alarm before heading home.\n\n\"I was looking at the schedule. We've got a busy week ahead of us,\" Zayn said as they walked outside together.\n\n\"No kidding. We're pretty much booked solid. I think I've got a grand total of three slots left for the entire week.\"\n\n\"That's not a bad thing, right?\" her brother said cheerfully.\n\n\"Hey. I'm not complaining. I'm just giving it to you straight.\"\n\nZayn laughed again then told her he was going home for the night.\n\n\"Oh, yeah. To your swanky new...Platinum Pad.\"\n\n\"Hey. What can I say? I know what I want.\"\n\nKatharine laughed because her brother did know what he wanted. Since going to college he'd done pretty much whatever he wanted, and no one had tried to stop him, and Zayn truly enjoyed life and the freedom having a little money and some good DNA brought him.\n\nAnd because he wasn't much of a drinker, either, most of that freedom consisted of women. A lot of women. Katharine had no idea how many there'd been, but she knew it was more than she could count on her fingers and toes, and the truth was, she didn't want to know. The Air Force had slowed him down a little bit, but only a little. And now that he was back in town and living in the nicest place in the city, she was pretty sure that more than a few cute co-eds and beautiful women in their early 20s had graced his bed.\n\nShe'd had her share of boyfriends over the years, too, but she could count the ones with whom she'd been intimate on one hand and have a finger or two to spare. And after having met someone who swept her off her feet three years ago, she had no interest in ever adding to the count. \n\nHer husband, Zach, another 'Z' in the...zany...Webber family mix, was the be-all, end-all of her world, and she still couldn't wait to go home to him each night knowing he'd been there since getting off work himself at 5pm. And most evenings, Zach would have some kind of delicious dinner waiting for her, so for those reasons and many more, she considered herself a very lucky woman.\n\n\"Yes. Yes, you do,\" she told her brother. \"So go home, get some rest, and I'll see you bright and early tomorrow.\"\n\n\"Rest? What's that?\" Zayn said with a laugh as he told her 'goodbye'.\n\nHe'd met a senior from University of New Mexico earlier that morning and gotten her number then called her from from a thousand feet a few hours later. Between that and asking her to stop by his apartment at Platinum for a drink around 8 o'clock was more than enough to win her over. Of course, had he been 5' 7\" and 200 pounds, none of that would have mattered, but he wasn't so it was extremely likely he'd get lucky again sometime around midnight. \n\nZayn had enough time to go home, shower, grab a bite to eat, then gear up for what would undoubtedly be 'a hot time in the old town, or rather...the new apartment...tonight'.\n\nBy 1am, the hot time was over, and Zayn was alone and sound asleep for the next five hours, more than enough to recharge his batteries for the upcoming first day of the annual balloon festival. Another quick shower and shave and a bowl of cereal and he was more than ready for his first flight which was lifting off at 8am.",
        "Katharine had already been in for an hour when her brother showed up, and their three other pilots were prepping for their first flights. They still had one vacancy to fill, and in spite of being booked solid, they could have made a lot more with one other pilot. Every balloon would be up in the air numerous times that day with the pilots on hand, and this one week would account for about a quarter of everything they'd earn that year.\n\nThe truth was they only needed one other pilot besides Zayn for most of the year, and it was going to be difficult to let two of the men he'd hired go after the festival. It wouldn't be a surprise to either of them, but actually telling them was something he wasn't looking forward to.\n\n\"Here's the passenger list for your first flight,\" Katharine said as she handed her brother the manifest.\n\nHe scanned the names then said, \"Morgan. Is that male or female?\"\n\n\"Seriously? That's a woman's first name. How can you not know that?\" his sister asked with no small amount of incredulity.\n\nThings went from bad to worse when her brother shook his head and said, \"Who names their daughter 'Morgan'?\" \n\n\"What's wrong with that? I think it's pretty,\" Katharine told him as she continued working.\n\n\"Sure. If you think naming your kid after a mortgage broker is sexy.\"\n\n\"What? That makes NO sense whatsoever,\" Katharine said with a shake of her own head, the firm of Morgan-Stanley not coming to mind.\n\n\"Maybe not, but it's still a ridiculous first name for...anyone.\"\n\n\"Maybe she's cute,\" his sister observed.\n\n\"Uh-huh. And maybe she'll max out the balloon's weight limit on her own.\"\n\nKatharine grabbed an ink pen and threw it at her brother.\n\n\"Male chauvinist pig,\" she teased.\n\n\"Yes, but I'm YOUR male chauvinist pig,\" he reminded her.\n\n\"Yeah. Gee, lucky me,\" his sister replied with another shake of the head and a little smile. She knew her brother was a 'player', but he was no chauvinist pig. He was as decent and caring a man as she'd ever met.\n\nTheir morning banter out of the way, Zayn excused himself and headed to the flight line which wasn't a flight line in any real sense. It was really just a series of large concrete pads, one for each balloon. He still laughed at how balloonists tried to equate their zeppelins with real aircraft when they had very little in common other than flight. But the terms and rules had been decided long before he was born, and it wasn't like he had the power to change them.\n\nAs always, he began by doing a preflight check looking for any sign of tearing, ripping, or cuts in the balloon and the tie-down ropes. Satisfied, he then made sure there was enough propane onboard to fuel the burners that heated the air to provide lift.  \n\nAll of the day's flights were going to be done at the most common altitude of 1,000 feet, and there was more than enough to get up to cruising altitude, gently float around the city for an hour, then get safety back down to earth. All for the low, low price of $500.\n\nNormally, a ride was somewhere between $350 and $400, but during festival week, supply and demand dictated a higher fee; a fee many people from all over the world were happy to pay. \n\nZayn checked his watch and saw he still had 10 minutes remaining before his first flight, so he headed back to the hangar where he would meet his passengers. As he walked in, he heard his sister talking to a woman who was going to be on that flight and what she said caught his attention.\n\n\"So he was a pilot in the Air Force?\" he heard the woman ask.\n\nHe winked at his sister who told the woman, \"Not just a pilot. A fighter pilot.\"\n\nHe tried not to laugh when the woman, who was obviously nervous, asked another question.\n\n\"So does that mean he's going to make the balloon fly faster than normal?\"\n\nAs always, Katharine answered every question, no matter how ridiculous it might be, with patience and a smile.\n\n\"Oh, no. He's the most careful person I know, and you have nothing to worry about.\"\n\n\"Ha! Easy for you to say!\" the woman said as she turned away and saw Zayn.\n\n\"Good morning,\" he said to her. \"I'm Zayn Webber, your pilot.\"\n\nHe extended a hand along with a warm smile and also said, \"It's a pleasure to meet you.\"\n\nThe rather heavyset woman smiled back and told him her name was Dee-Dee. As she shook his hand, she turned and said over her shoulder, \"You didn't tell me your brother was so handsome!\"\n\nZayn laughed politely then told her, \"Flattery will get you anywhere,\" as he secretly hoped she hadn't been drinking already.\n\nThe woman laughed then seemed to relax a little, but it didn't last long as she turned back around and started asking more questions.\n\n\"How many others will be with me? Will there be children? How about teenagers? I don't do well around noisy teenagers.\"\n\nAs Katharine patiently answered those questions, too, Zayn heard the door open and saw a very attractive couple come in. Since his sister had her hands full, he walked over and greeted them.\n\n\"Good morning and welcome to Beautiful Balloons. I'm Zayn Webber, and I'll be your pilot today.\"\n\n\"Nice to meet you,\" the man said as he extended his hand.\n\nThe woman, who was extremely attractive for someone who was clearly older than him, said hello as she smiled and let her husband do the talking.\n\n\"Is this your first time flying in a hot air balloon?\" Zayn asked.\n\n\"Yes. For both of us,\" the man told him.\n\n\"Wonderful. Just come on over and my sister, Katharine, will get you all checked in. Once we have our other passenger, we'll get ready to lift off.\"\n\nThe man thanked him and the woman smiled at him again as he excused himself just as the fourth and final passenger, a man about his father's age, walked in.\n\n\"It's really good to see you again, Zayn,\" the man said as they shook hands.\n\n\"I'm sorry. Do we know each other?\" Zayn asked as his brain searched its memory banks.\n\n\"We met several years ago. I'm Jeff Michaels. You father and I went to high school together, and I wanted to tell you how sorry I was when I learned of his passing, and to apologize for not being at the memorial service.\"\n\nZayn wasn't going to lie and tell him he remembered the man. He only told him he understood about missing the service and welcomed him before pointing him toward Katharine who recognized him and called him by name.\n\nOnce Jeff was checked in, Zayn checked his watch again then said, \"Okay. Ladies and gentlemen, if I may have your attention.\"\n\nThe four paying customers gathered around him who began by introducing himself again then said, \"If you don't mind, maybe we could go around and have each of you introduce yourselves and tell us anything you'd care to about yourself.\"\n\nJeff started off and after sharing his name told the group that he'd gone to high school with 'this young man's father about a hundred years ago'.\n\n\"I'm here today in honor of his dad's passing, so...that's about it for me.\"\n\nZayn quickly and politely shared the news of his father's untimely death, then turned to Dee-Dee who was now visibly upset.\n\n\"I don't like talking about death. Especially not before doing something where I could die!\" she said before launching into what would have been a lengthy speech had Zayn not found a way to politely get her to stop. \n\nIn spite of his best efforts, she appeared to be offended as she ended by saying, \"Well, I suppose that means I'm done,\" which was spoken with a noticeable huff.\n\n\"And I believe we have a married couple here,\" Zayn said as he smiled at the attractive woman and her husband even though the only wedding ring he could see was on the woman's hand.\n\nThey looked at one another then laughed.\n\n\"Oh, um, we're...we're not married,\" the man said. \"This is my little sister, Morgan Graham, and I'm Hank Thompson. We're from the Seattle area, and when my sister told me she wanted to come down here for your balloon festival, I agreed to tag along.\"\n\n\"My apologies for assuming,\" a mildly-embarrassed pilot said with an apologetic look to the woman he now knew was named Morgan who again smiled understandingly at him causing him to wonder if she somehow knew what he'd said about women named Morgan.\n\nWhen she did, he smiled back, and for the first time in his life, he found himself attracted to an older woman. It was odd in the extreme, because he thought of 25-year olds as 'older women', and this woman was likely a good 10 years older than that.\n\nBut she was obviously married, just not to Hank, so whatever brief amount of attraction he may have felt was immediately shelved as he asked them to follow him outside for their preflight safety brief.\n\nAs they walked, Hank sidled up to him and said, \"You looked a little surprised. I hope we didn't embarrass you.\"\n\n\"No. Not at all,\" Zayn told him before laughing quietly and saying, \"you did surprise me, though.\"\n\nHe glanced around and saw that Morgan had been roped by Dee-Dee who was talking non-stop.\n\n\"My uh, my sister lost her husband and daughter in a car accident four years ago. She's just really gotten back to being her old self this last six months or so, and I do what I can to be there for her.\"\n\n\"That's...awful. I can't even imagine,\" Zayn said truthfully.\n\n\"It was. She was totally devastated. But she's really bounced back, and this is something she wanted to do. She just didn't want to do it alone so I told her I fly down here with her. And as I said, I've never done this myself, and I'm really looking forward to it.\"\n\n\"My sister and I are very close, too, and yours is lucky to have you,\" Zayn said as they continued walking.\n\n\"No. I'm the lucky one. Morgan isn't just my sister, she's one of the nicest people I've ever known.\"\n\nZayn smiled then said, \"Don't tell her I said this, but she's a very attractive woman.\"\n\n\"You're not kidding, my friend,\" Hank told him as he clapped Zayn's far shoulder.\n\nHe moved a little closer then said, \"And she's finally dating again, too.\"\n\nHe paused then said, \"You're a little on the young side for her, but if you've got an older brother...\"\n\nZayn chuckled as they walked onto the concrete pad then stopped at the door of the balloon and turned around and waited for the others to arrive then began the short safety brief.\n\n\"Oh. I have one more question,\" Dee-Dee said. \"Do you have parachutes on board? You know, just in case?\"\n\nZayn glanced at Morgan who covered her mouth to hide an understanding smile just before he assured the worried passenger they weren't needed. When she asked how he could be so sure, he saw Morgan cover her mouth again and turn away as Zayn explained how many thousand safe trips they'd had since the mid-1970s, and that they could easily float back down even if the burners went out.\n\n\"Does that mean they sometimes DO go out?\" she asked, as she looked to the other passengers for support or to feed her fears.\n\nThere was a groan from Jeff which caused Dee-Dee to say, \"Well, I'm just asking, okay?\"\n\nWith that, Zayn opened the door to the basket, and let them file in and find their places before closing it and locking it, making sure Dee-Dee saw him do so.\n\nFor the next hour he was distantly aware of Dee-Dee's constant chatter, but unless she asked him something directly, he tuned it out. His interest was elsewhere, and the focus of it was a beautiful, older woman named Morgan who was clearly enjoying herself but doing so with a kind of silent dignity he found very appealing. \n\nOccasionally, she would point something out or ask her brother a question, but for the most part she was reveling in the beauty of nature and the bustle of the city as well as the dozens of other balloons already in the air. It was almost like watching a child taking something in for the first time in wide-eyed amazement and yet it also somehow felt...refined.\n\nWhen Zayn informed his passengers they would begin a slow, gradual descent, no one was surprised when Dee-Dee loudly said, \"We may live to see another day after all!\"\n\nHer pilot laughed out of politeness, and to his chagrin, she glommed onto him the rest of the way back down never taking a break from her constant chatter, and even though the basket barely bounced at all, she still grabbed him for dear life. \n\nOn the positive side, she not only hadn't propositioned him, she didn't even try and kiss him when she had him in a bear hug, so Zayn had that to be thankful for as he opened the door for his passengers.\n\nThis time it was Morgan who was waiting for him when he stepped out.\n\n\"I just wanted to thank you for one of the most enjoyable and memorable experiences of my life.\"\n\n\"You are too kind,\" Zayn replied with a friendly smile.\n\n\"No. I'm serious. That was absolutely breathtaking.\"\n\n\"Well, I'm very glad you enjoyed it so much.\"\n\n\"Do you think there's any chance I could possibly get another ride today?\" she asked as they headed toward the hangar and caught up to Hank.\n\n\"Oh, wow. I don't know. My sister told me we're pretty much booked solid all week.\"\n\n\"Yes, I was afraid that was the case. I just had no idea how amazing it would be.\"\n\n\"Sorry, sis. I hate to say it, but I told you so.\"\n\n\"I know. You were right, Hank. I just thought it couldn't hurt to ask.\"\n\nThey walked a few more steps when Zayn said, \"You know what? Let me ask for you, okay?\"\n\nMorgan looked his way, and the hopeful expression on her very pretty face told him how important this was to her.\n\n\"As it turns out, I know the owner, and we might just be able to make that happen.\"\n\n\"I...I'm not asking for any special favors,\" she told him.\n\n\"And that's just one more reason I'm going to try and make this happen for you,\" he said before asking Hank if that included him.\n\n\"Me? No. Definitely not. I enjoyed it, but the price tag is a little steep for me.\"\n\n\"Well, maybe we could help out with that, too,\" Zayn said as he opened the hangar door for Morgan who thanked him as she and then her brother stepped back inside.\n\nKatharine had another group gathered around waiting for their pilot, but the moment she was free, Zayn asked her if there was any way to make that happen.\n\n\"Two people? Are you kidding me?\" she replied without hesitation.\n\n\"No. Just the um...the beautiful woman.\"\n\nKatharine looked at her brother and did a little head shake thing.\n\n\"Hold on there. Did you just call a woman over 30...beautiful? A woman whose first name is...Morgan?\"\n\n\"Yes. What's wrong with that?\" Zayn said rather defensively.\n\n\"Nothing. I guess. But did you notice the huge ring on her hand?\"\n\nZayn moved closer then quietly explained.\n\n\"Oh, my goodness. I'm so sorry. That was so...\"\n\n\"It's fine, Kat,\" he said, using a name only he could get away with and only occasionally.\n\n\"Let me see what I can do, okay?\" she told him as she looked over at Morgan who really was a very attractive woman regardless of her age. She thought about ribbing her brother for what he'd said about the name earlier some more, but it no longer seemed quite so funny.\n\nZayn walked back over to his favorite new passenger and said, \"No promises, but Katharine is working on it, and if anyone can make it happen, she can.\"\n\nMorgan wanted to go back up so badly she could taste it, and without warning, she threw her arms around Zayn and thanked him as she hugged him. Unlike Dee-Dee or the tipsy woman, Zayn not only didn't mind this hug, he hugged her back.\n\nHe saw Hank smiling just before she pulled away and said very excitedly, \"Thank you, thank you, thank you!\"\n\nA couple of minutes later, Katharine walked over and said, \"Okay. I'm moving a woman with two small children to your 3 o'clock flight, and that means I can put one more adult onboard at 2 o'clock without going over the limit. So if that works for you...\n\nKatharine got the same hug Zayn got, but it didn't do quite the same thing for her as it had for her brother. But when she saw the tears welling up in this widowed woman's eyes, it did something equally pleasant for her just the same.\n\n\"I'm glad we could make this happen,\" she told Morgan sincerely.\n\n\"Oh. Let me pay you now before I forget,\" Morgan said as she pulled her purse off of the arm it was slung over.\n\nZayn thought about the money but only for a second before catching up to them.\n\n\"Morgan? That's okay,\" he said.\n\nShe stopped and looked at him then said, \"I don't understand.\"\n\nHe glanced at his sister who was already behind the counter, and she was giving him the 'are you crazy' stare.\n\n\"This one's on us,\" he said. \n\nWhen he saw the way Katharine was still looking at him he changed that to, \"This one's on me.\"\n\n\"No. Zayn, I can't let you do that. This is your business. You depend on fares for your livelihood. Please let me pay.\"\n\nOnce Katharine knew the money was coming out of her little brother's pocket, the look of annoyance became one of amusement.\n\nVery quietly Zayn said, \"I recently lost my father, and well, your brother mentioned how you lost your family, so...I'd be honored if you'd let me do this for you.\"\n\nWhen she began to protest, he smiled and said, \"Please?\" as he gently touched her forearm.\n\nHe wasn't sure what was going on, but the look on her face and specifically in her eyes seemed to somehow soften. It was as though she was trying to peer into his soul in order to learn why someone would be so thoughtful, kind, and generous. At no point, however, did it so much as occur to her that he found her incredibly attractive and even more so after speaking to her.\n\n\"Are you sure? I can afford to pay,\" she quietly told him.\n\n\"It isn't the money. I...I want to do this,\" he replied.\n\nHer eyes seemed to change again just before she said, \"Well. Okay. If you're sure, then...thank you. Very much.\"\n\n\"My pleasure,\" Zayn replied with a smile as Katharine let him know it was time to get ready for his next flight.\n\nHank stopped Zayn as he went to walk by and stuck out his hand.\n\n\"Thank you. You have no idea how much that means to me, because my little sister means the world to me, and that was very nice of you.\"\n\nZayn shook it then assured him it was his pleasure as Morgan joined them.\n\n\"Listen. Why don't you have dinner tonight?\" Hank said to Zayn as he looked at his sister for confirmation.\n\n\"Yes! Please do!\" Morgan insisted immediately. \n\n\"I don't want to interrupt your plans,\" Zayn replied, hoping they would insist.\n\n\"Nonsense! It's the least we can do, right Hank?\"\n\n\"What she said,\" Hank told Zayn with a smile as he nodded at his sister.\n\n\"If you're sure,\" Zayn said, using Morgan's words.\n\n\"We are. And feel free to bring a date if you like.\"\n\n\"Oh, I uh, I won't be bringing anyone, but maybe we could exchange numbers?\" Zayn suggested as he pulled out his phone.\n\n\"Yes. Of course!\" Morgan said with a very happy smile as she provided her number and entered his.\n\n\"I'll be here until about 7 o'clock. Is that too late?\" Zayn asked.\n\n\"That's perfect. We eat late so if 8pm works for you...\"\n\n\"Sure. I'll run home and change and meet you at...\"\n\nThey agreed on where and Zayn told them he needed to run but said to Morgan, \"And I'll see you again after lunch.\"\n\n\"Yes. Yes, you will!\" a very happy and excited woman replied as she and her brother got ready to leave.\n\nThe flights in between Morgan's were non-eventful. There was the typical mix of passengers who were amazed to those who almost seemed bored.The best part was watching twin five-year old boys as they marveled at the balloon and then the view from a thousand feet in the air as their father held them one at at time to let them see the city from on high.\n\nZayn grabbed a quick bite in his office around one o'clock then made sure to brush his teeth as he got ready to see Morgan again. This time, when she walked into the hangar, she smiled immediately. She didn't know that Zayn had been standing there for 15 minutes watching and waiting for her. His sister noticed, though, and she only smiled as she wondered what was going on with her brother.",
        "Katharine almost laughed when she saw Zayn perk up and even wave as he called out, \"Hello, there!\" when Morgan walked in.\n\nIt got even more interesting when she saw her brother offer her a hug which she accepted without hesitation.\n\n\"So how was lunch?\" Zayn asked as they walked toward the counter together.\n\n\"Very nice, thank you. I have to say I'm really enjoying your city.\"\n\n\"ABQ...sorry, that's what we locals call it, like it quite well.\"\n\nMorgan laughed then shared with Zayn how she knew it was called that.\n\n\"Oh, okay. So you heard Jessie Pinkman say it,\" Zayn replied referencing the failure of a chemistry student Walter White partnered up with to make meth in the Breaking Bad series.\n\n\"Oh, yes. My husband LOVED that show!\"\n\n\"I can't say I blame him. To me, it was THE best TV series of all time.\"\n\n\"He would have agreed with you on that,\" a smiling Morgan said.\n\n\"Can I uh, show you around?\" Zayn asked.\n\nKatharine nearly laughed again as they were in a standard hangar where a balloon was in for repairs. Otherwise there wasn't much to see.\n\n\"Oh. Um...sure,\" she readily agreed.\n\nAs they walked by Katharine, she not only smiled she gave him a funny look.\n\n\"What?\" Zayn asked.\n\n\"Oh, nothing,\" she replied, the smile still there as she went back to her paperwork. \"Just don't forget your 2pm flight.\"\n\nZayn then gave her a look that said, \"Yeah. Like I'd ever forget that.\"\n\nA few feet further away Morgan asked, \"Is there a brother-sister dynamic going on there?\"\n\nZayn smiled and told her there was.\n\n\"I know it well,\" Morgan told him. \"Hank and I don't even have to speak most of the time.\"\n\nZayn smiled again then said, \"So far you and I both like ABQ, we both like Breaking Bad, and we both 'get it' when it comes to our older sibling.\"\n\nMorgan laughed politely then asked their age difference.\n\n\"Three years.\"\n\n\"Really? Same as us,\" Morgan replied with another beautiful smile.\n\nZayn wanted to ask her age but knew that was taboo, so he tried being more subtle.\n\n\"I guess that means Hank is getting close to 40 then,\" he said as nonchalantly as he could.\n\nMorgan stopped, looked at him, then started laughing.\n\n\"Why is that funny?\" Zayn asked.\n\n\"Because if you think Hank isn't already 40, that means you think I'm ever further away from 40.\"\n\n\"I'm confused,\" Zayn told her as he shook his head.\n\n\"Hank just turned 43,\" a still-smiling Morgan informed him.\n\nShe was even more amused when she saw the wheels turning in his head as he did the math.\n\n\"No. No way,\" he finally said.\n\nMorgan laughed again then said, \"I could just hug you!\"\n\nZayn was so surprised by her age he didn't hear what she said or he'd have taken her up on another hug.\n\n\"I...I'm not sure I believe you,\" he nearly mumbled.\n\nMorgan laughed again then pointed toward an office and asked if it was his.\n\n\"Oh. Yes. That's mine. Katharine's is just to the left.\"\n\n\"Okay,\" Morgan said, as Zayn just stood there looking at her. She was expecting him to at least take her over to look into it if not go inside, but he still hadn't moved.\n\n\"Maybe we should just go back to the counter,\" she suggested in hopes of getting him to move.\n\nFor the briefest of moments Zayn felt panic well up inside him before he looked at his watch to make sure he wasn't late.\n\n\"Yes. That...that sounds like a really good idea.\"\n\nNeither of them spoke until the got back to where Katharine was, and then Morgan thanked him for 'the tour'.\n\n\"Sorry. I really didn't show you anything, did I?\" Zayn said apologetically.\n\nMorgan smiled in an interesting kind of way as she politely said, \"Oh, I'd say you actually showed me quite a bit.\"\n\nThe 2pm group was all there, and Zayn didn't have time to process what she meant, but later he realized she meant that he'd given her some insight into who he was, and more importantly, that she liked what she'd seen.\n\nThis time, there was no Dee-Dee to contend with and to his great delight, most of the time was spent next to Morgan as he either pointed out various features or answered her questions.\n\n\"You know, I have to tell you, I'm almost envious,\" she said toward the end of the flight. \"I would absolutely love this job.\"\n\nZayn smiled then told her, \"Well, I'm a certified instructor, so if you ever want to get your private pilot's license and balloon certification, just let me know.\"\n\nHis offer was sincere, but he was certain she was going back to Seattle in a few days, so it wasn't as though that was ever going to happen.\n\n\"You know, I'm going to give that some serious thought,\" Morgan told him before sharing with him just how much she was enjoying the desert and how ABQ was growing on her.\n\n\"If you need a realtor, I know several,\" Zayn told her with a smile.\n\n\"I may just take you up on that. Maybe we could discuss it over dinner tonight?\" Morgan replied with another amazing smile.\n\n\"Sure. I'd like that.\"\n\nThey made small talk until the balloon was back on the ground then all the way back into the hangar where Morgan again thanked him profusely.\n\n\"Seriously. The pleasure was all mine,\" Zayn assured her.\n\n\"I guess I'll see you tonight then,\" she told him, her radiant smile on display and having some kind of powerful effect on him.\n\n\"I'm looking forward to that,\" Zayn said before she offered another hug which he accepted with pleasure.\n\nZayn hadn't been to The Artichoke Cafe since returning from the Air Force. It was one of the nicer places in town, and he was not only looking forward to the excellent food, but he couldn't wait to see Morgan again. He was trying to understand why as he drove toward Central Avenue where the restaurant was located, and none of it made any sense. Or almost none of it, anyway.\n\nShe was clearly beautiful. But he 'spent time' with beautiful woman fairly often. And those women were between 18 and 30 with only a handful ever having been over 25. It was also true that very few of 'his' women could carry on a thoughtful conversation, but many of them were as attractive as this woman he now knew was 40 years old. And while Morgan was very pleasant to talk to, conversation had never been his goal where women were concerned. Even odder was how his 'normal goal' was the last thing on his mind as he found himself smiling without realizing it until he glanced at himself in the rearview mirror.\n\nUnable to sort it out, he pulled into the parking lot and decided to table the issue for now, because all that mattered was spending more time with her. And that thought made him realize she wouldn't be in Albuquerque much longer.\n\n\"Unless I can somehow change her mind,\" he said to himself as he walked inside the upscale restaurant.\n\nA very pretty young woman met him immediately, but he paid no attention to her as his eyes scanned the room, first left and then right until he saw her.\n\n\"Sir? Do you have reservations?\" she asked just as Morgan got up and headed his way.\n\nWhen the younger woman saw him hug a seated customer, she assumed this was the third person in her 'party of three' and left him alone.\n\n\"Zayn. Hi! It's so good to see you again,\" Morgan told him after the hug.\n\n\"You, too, Morgan, and may I say you look...amazing.\"\n\nShe laughed and told him that was very nice of him to say.\n\n\"It's true. You look beautiful,\" he assured her as Hank stood up and shook his hand.\n\n\"Evening, Cap'n,\" Hank said with a laugh before offering Zayn a seat.\n\nMorgan heard it and chimed in saying, \"Yes! We should have been calling you Captain Webber, right?\"\n\nZayn politely laughed then told her, \"No, thanks. I was Captain Webber on active duty, and Zayn is just fine now.\"\n\n\"Yes. The Air Force. I want to hear about your experiences,\" she said with a level of interest that surprised him.\n\n\"And I want to know what's it like flying Mach 2 or however fast the plane you flew went.\"\n\nZayn laughed again then said, \"The F-15 tops out at Mach 2.5 or 1,875 miles an hour, but...\"\n\n\"Did you just say what I thought you said?\" Morgan asked, not sure she heard correctly.\n\n\"I did,\" Zayn replied. \"But no matter how fast you're flying you don't really notice it if you're moving in a straight line.\"\n\n\"So how many Gs can that thing pull?\" a very-interested Hank asked.\n\n\"The real limit is how many Gs the pilot can handle without blacking out, and that's around nine. The airframe can do a little better than that, but it's a moot point if the pilot is unconscious.\"\n\n\"Unconscious?\" Morgan asked causing Zayn to turn her way again and explain what happens to the body in high speed turns and how a G-suit counteracts them.\n\n\"I had no idea. So the suit inflates and the air pressure keeps blood where it's needed?\" she essentially repeated after hearing the explanation.\n\n\"Correct. But we rarely get anywhere near 9Gs. I mean, I've never been in an actual dogfight except in training, because we haven't gone up against another Air Force since Vietnam. Well, unless you can't the few Iraqi jets that gave it a whirl back in 2003.\"\n\n\"And you gave all that up to fly hot air balloons?\" a baffled Hank asked.\n\nNot wanting to discuss anything personal Zayn smiled, shrugged his shoulders, then said, \"What can I say?\" just as their server came to take their order.\n\n\"Dinner's on me, Zayn, so have whatever you like,\" Morgan quietly told him.\n\n\"I know you offered, but I don't think I can actually let a beautiful woman pay for my meal,\" he said with a smile.\n\n\"I'm a traditional woman, but when you compare a free balloon ride with one dinner, it's hardly a big deal,\" Morgan told him.\n\n\"In principle, I suppose you're right, but...\"\n\n\"Then it's on me,\" Hank interjected ending the non-dispute dispute.\n\nWhen Zayn shrugged again, Hank said, \"I'm neither beautiful nor a woman, so that's that.\"\n\nThe woman waiting on them looked to be around 40 or 45, and she smiled at Hank and told him she agreed about the woman part but disagreed about him not being...handsome...then looked at Morgan and wondered if maybe she'd just flirted with her husband.\n\n\"No! Not at all,\" Morgan said with a laugh after the woman apologized and told her why. \"No, that good looking guy is my brother, and I happen to agree with you.\"\n\n\"Whew!\" the relieved server said before asking if they'd like any appetizers or drinks.\n\nHank ordered a bottle of champagne and told her they weren't sure about the appetizers yet. Zayn noticed the way he was taking charge and smiling at the woman and assumed he found her equally attractive.\n\nMorgan also noticed and said, \"My brother is obviously smitten with someone.\"\n\nBefore he could deny it, she looked at Zayn and asked, \"How about you? Are you...\"\n\n\"Me? No. I'm not...seeing anyone.\"\n\nHe was surprised that her question caught him so off guard, and he wasn't quite sure how to answer it without sounding boorish. Somehow, \"I only do hook ups,\" just didn't have the ring he was looking for.\n\n\"No worries and no hurry, right?\" she replied, the same amazing smile on her very pretty face. \"One day the right woman will come along and catch your attention, and she'll be the last woman you ever look at .\"\n\n\"My sister is a hopeless romantic,\" Hank told Zayn as he leaned over his way. \"She thinks everyone else is, too.\"\n\n\"I do not!\" Morgan insisted.\n\n\"Yeah, you kind do, Morgan,\" her brother insisted back.\n\n\"I just think that when you find that special person, you willingly stop looking. That's all.\"\n\n\"For what it's worth, I agree with you,\" Zayn told her as he looked right at her in a way that told her there was more to his words than the words themselves.\n\nTheir bottle of champagne arrived, and the trio still hadn't looked at the menu, but they promised to so very soon.\n\nThe server, who's name was Cheryl, popped the cork and let the towel she was cradling the bottle in take the foamy overflow before pouring each of them a glass.\n\n\"Enjoy, and I'll be right back,\" she said as she gently touched Hank's arm as she left.\n\n\"Oh, yeah. Someone is definitely smitten,\" Morgan teased as she watched her brother's eyes follow the woman until she was out of sight.\n\n\"I take it you're not married?\" Zayn tactfully asked Hank.\n\n\"What?\" he replied before realizing he hadn't been listening. \"Oh. No. I uh, I was married. For 12 years. But my wife wasn't one of those who um...\"\n\nHe looked at his sister, but not in a mean way, then said, \"Ever stopped looking.\"\n\n\"Sorry. That was none of my business,\" Zayn quietly said.\n\n\"No. It's okay. I was bitter for a long time, but I got to the point where I enjoy being single, so no big deal.\"\n\n\"And I'm finally at a point where I'm realizing I don't like being single,\" Morgan added with no hidden agenda. It was just a statement of fact.\n\n\"Hank mentioned your...family. I can't tell you how sorry I am,\" Zayn told her.\n\n\"Thank you. I wasn't 'bitter', but I was angry and then just...lost for a long time. But thanks to an amazing therapist, I was able to work through the grief and the hurt and well, I'm finally at a place in my life where I think I could even fall in love again.\"\n\n\"Okay, okay,\" Hank said as he raised his glass. \"Enough of this, all right? Let's have a drink, but first...a toast.\"\n\nHe thought for a second or two then proposed, \"To new friends and new experiences.\"\n\n\"I'll drink to that!\" Morgan said with a laugh as they all touched glasses before taking a sip then turning their attention to the menu.\n\nBy the time Cheryl brought their appetizers, everyone was on a second glass and the conversation was flowing freely.\n\nMorgan wanted to know everything she could about flying hot air balloons and Zayn was more than happy to walk her through the process, answering each of her many questions as he went along.\n\n\"I still can't believe how much I enjoyed being in one,\" she said once she ran out of questions to ask.\n\n\"Well, you could go up with me...us...again,\" Zayn told her.\n\n\"Oh, no. We have another three days here and still have quite a few things to see. And as much as I would love that, I do want to try and stay at least to being on-budget.\"\n\n\"Who said anything about paying?\" Zayn asked with a tilt of his head and a raised eyebrow.\n\nMorgan smiled at him then laughed.\n\n\"What's so funny about that?\" Zayn asked.\n\n\"Were I at least close to your age, I'd swear you were flirting with me,\" Morgan replied with a laugh indicating that was a ridiculous idea.\n\nZayn rarely drank more than one beer and then only occasionally, and he was feeling pretty good after draining a second glass.\n\n\"What does age have to do with anything?\" he said quietly but so seriously that it made Morgan stop laughing then stop smiling.\n\nHank was watching them both carefully, and his sister's reaction evidently told him something Zayn couldn't see as he started laughing and said, \"Well, well. I do believe our young guest is flirting with you, sis!\"\n\nThis time, Zayn saw something, too, as Morgan looked at him then at Hank before she replied.\n\n\"That's...that's just...ridiculous!\"\n\nShe looked back at Zayn then said, \"Right? Please tell my brother he's completely lost his mind.\"\n\nWhen she looked at him again, Zayn only smiled before saying, \"I can't. I can't because he's absolutely right.\"\n\n\"What? That...that makes no...\" Morgan began as her brother nearly roared with laughter.\n\nZayn looked over at him, and that made Hank laugh even harder, and that, in turn, made Zayn laugh.\n\n\"I hope you two are having fun,\" Morgan said with a sound of hurt in her voice.\n\n\"Relax, Morgan. We're not poking fun at you. We're just laughing because you can't see what's right in front of your face!\" her brother told her.\n\nThe conversation waned after that, and at one point Hank said he needed to use the restroom. What he really wanted to do was talk to Cheryl\u2014alone\u2014but neither of the other two people thought that as they were still mentally grappling with the flirting comment from before.\n\nOnce Hank was far enough away not to be heard, Zayn turned to Morgan and said, \"I hope I wasn't out of line.\"\n\n\"It's okay,\" a very subdued Morgan told him as she mustered up a weak smile.\n\n\"No. No, it isn't,\" Zayn replied. \"I realize now that well, with you being a romantically-minded woman who's ready to, you know, maybe one day get serious again, it wouldn't be funny at all to joke about such a thing.\"\n\nMorgan quietly thanked him, but Zayn didn't stop.\n\n\"The truth is, I wasn't joking or trying to be funny. At all.\"\n\nShe looked at him but didn't speak, so he continued.\n\n\"I was flirting with you, Morgan. I never thought Hank would, well, react that way, and what was meant as sincere ended up seeming silly and...mean. And if I hurt you in any way, please accept my apologies.\"\n\nMorgan watched him as he spoke, and now that she knew he was being completely honest with her it touched her deeply.\n\n\"No. It's fine, Zayn. I think I'm just a little sensitive, because I've been so hopeful lately, you know?\"\n\n\"Hopeful?\"\n\n\"Yes. That I really will meet someone new. Someone I can fall in love with and...\"\n\n\"And not ever look at anyone else again?\" he said, showing her he'd been paying attention.\n\n\"Yes. That,\" she told him, the warm, happy smile he loved now back.\n\n\"You will, Morgan. I promise you that. You're an amazing woman who's smart and pleasant, and...very beautiful.\"\n\nShe was still watching his eyes very carefully, and when he said those words, they hit her so hard she had to look away as she tried to play off his compliment by saying, \"That's so sweet of you to say.\"\n\nBut when he gently reached over and touched her forearm and said, \"I'm still flirting with you, Morgan. I may not be doing a very good job of it, but I'm trying very hard over here.\"\n\nJust the touch of his fingertips on her bare skin caused her entire body to react in an old, familiar way that took her by surprise.\n\n\"It...it's just so hard to believe you're serious,\" she told him as she forced herself to look at him again.\n\n\"I'm not too good at this because I never flirt. Well, not like this anyway. So all I can do is try my best and hope it's working.\"\n\nIt had been so long since she'd felt like this, that Morgan wasn't sure what to do or even what to say. What came out was, \"Zayn. You're a really great guy, but you...you know how old I am, so...\"\n\nHe touched her arm again then repeated what he'd said before.\n\n\"What does age have to do with anything?\"\n\nNeither of them saw Hank heading back their way as Morgan sat there, her eyes rapidly darting between Zayn's as her brain tried to make sense of what was going on. \n\n\"Guess who has a date for tomorrow night!\" Hank announced as he surprised them both.\n\n\"You did not!\" Morgan said as she smiled at her brother.\n\n\"I most definitely did. Got her number, too,\" Hank proudly announced as he wagged his phone before setting it down.\n\nUnder almost any other circumstances, Zayn would have offered Hank a high five and said something like, \"Nice!\" or \"Way to go, Hank!\" But because of what had just happened, he only smiled politely and said, \"Congratulations. She seems very nice.\"\n\nHank wasn't listening. He was smiling and looking across the room where Cheryl was standing and smiling back at him.\n\n\"Yes. Congratulations,\" Morgan said as she turned to get another look at the woman who was waiting on them.\n\n\"Hey! Why don't you and Zayn join us?\" Hank suggested out of the blue.\n\n\"What?\" Morgan asked, the look on her face one of surprise and confusion.\n\n\"Well, Zayn was flirting with you, and it's pretty obvious you didn't mind, so...\"\n\n\"Oh, my goodness!\" Morgan said, the confusion turning to frustration and embarrassment.\n\nNow Hank said, \"What?\" as he looked to Zayn for support.\n\n\"You know what? I think I'm the source of the problem here,\" Zayn said. \"It might be best if I just...\"\n\nJust as he was getting ready to push back, Morgan reached over and touched his forearm. Zayn stopped moving, looked at her, then saw her smile.",
        "\"Please don't. Please stay and finish dinner with us.\"\n\n\"Yeah. Absolutely,\" Hank agreed. \n\nHe looked at Hank then back at Morgan, and when she smiled this time she also said, \"I think I may have...overreacted. A tad.\"\n\nZayn was getting ready to tell her he'd stay, but before he could, she added, \"And I really don't want to spend tomorrow evening alone, so if you could maybe force yourself to endure another evening of my company...\"\n\nZayn glanced over at Hank who did the 'wink and nod' thing, something his sister saw, then looked back at Morgan.\n\n\"Well, I suppose it might not be as bad as say...a root canal...so...\"\n\nMorgan actually laughed the way she had before and told him that was high praise.\n\n\"I said it might not be that bad,\" Zayn reminded her in an over-the-top kind of serious way.\n\nWhen she smiled again then playfully said, \"I can live with that,\" Zayn's heart skipped a beat. \"Okay then. Sure. That sounds great.\"\n\n\"Then it's settled!\" Hank nearly boomed again causing Morgan to laugh which let Zayn do the same.\n\nThe conversation picked back up where it had been, interrupted only by the occasional visit from Cheryl who was now openly flirting with Hank. It was all by way of smiles and little touches, but it was impossible to miss.\n\n\"You're a hit,\" Zayn told Hank after she left their check with a big red heart on the bag.\n\n\"Well, yeah. I mean. We are talking about...ME...right?\" he said, trying to keep a straight face.\n\nAnother round of laughter followed as they got ready to leave.\n\nAs the three of them started to walk out, Hank handed his car keys to Zayn and quietly asked if he'd walk his sister outside.\n\n\"Just hit the fob and you'll find our rental.\"\n\n\"Where's my brother going?\" Morgan asked as Hank peeled off from 'the formation'.\n\n\"Well, it isn't the rest room,\" Zayn told her.\n\n\"Oh. Gee. Duh!\" Morgan said with a laugh.\n\nAs they got near the exit, Morgan stopped to put on the cardigan sweater she had draped over her arm.\n\n\"Here. Let me help with that,\" Zayn said as he reached for the garment.\n\n\"Oh. Well...thank you,\" she said very sweetly as she held out one arm and then the other. \n\nZayn pulled it over her shoulders, and once it was in place, he gently put his hands on her shoulders and said, \"There you go.\"\n\nAnother rush of...something...washed over Morgan as she thanked him before picking her purse up again while Zayn opened the door.\n\nThe October evening air was cool and dry causing Morgan to say, \"It's chilly.\"\n\nWithout hesitation, Zayn slipped the jacket he was wearing off of himself and draped it around Morgan's shoulders.\n\nShe looked over at him, and just as sweetly as before said, \"Thank you, Zayn,\" as he hit the fob and watched for taillights.\n\n\"Ah. There we go,\" he said as he pointed toward the flash, forgetting that Morgan had ridden there and knew where it was. Even so, she didn't say anything as she was again trying to understand what was going on between her and this very attractive, much-younger man who had been flirting with her all evening.\n\nAs they got to the car Morgan turned toward him and said, \"This was really nice, and I'm so glad you came.\"\n\nZayn smiled at her and told her he agreed, and as he looked at Morgan, he could tell she wanted to say something.\n\n\"What is it?\" he asked. \n\nShe didn't answer right away, but he did see her shiver, so he ran his hands along the jacket where her arms were.\n\nWhen he did, Morgan smiled at him then said, \"In spite of the rather awkward way my brother asked you to join us tomorrow, I'm really glad he did.\"\n\nShe smiled again then quickly added, \"And I'm even happier you said 'yes'.\"\n\n\"So you're not upset with me for flirting with you?\" Zayn asked as he smiled back at her.\n\n\"No. I'm not,\" she assured him. \"Confused? Yes. But upset? No.\"\n\n\"You can't blame me, though, can you?\" Zayn asked as he moved a little closer.\n\n\"I can't?\" she asked as she suddenly felt very warm and even flushed.\n\n\"Well, you are an incredibly attractive woman, so you can't really fault me for wanting to let you know how I feel, right?\"\n\n\"I...I guess that depends on how you feel,\" Morgan replied very quietly as they stared into one another's eyes.\n\n\"I can't answer that yet,\" Zayn began. \"At least not completely. All I do know for sure is that I have never met a woman who makes me feel like you do.\"\n\n\"You...you can't possibly be serious,\" a very-surprised Morgan Graham said, her voice soft and small.\n\n\"And yet I am. Just like I really was flirting with you before.\"\n\n\"I...I see,\" was all she could say.\n\nJust as Zayn began leaning down to kiss her, Hank's voice boomed out again.\n\n\"Who's the man!\" he called out, startling both of them.\n\nMorgan stood up straight as Zayn backed away and turned toward the sound of the noise.\n\n\"Good news?\" Zayn asked, wondering if he'd noticed how close he came to kissing this older man's sister.\n\n\"I feel so alive!\" Hank said as he walked over and picked his sister up and whirled her around.\n\nMorgan shrieked with laughter while Zayn watched and smiled.\n\n\"Hank! Stop!\" she said as he spun her around a second time.\n\nHe put her down then turned to Zayn and said, \"I wasn't wild about coming to Albuquerque, but I didn't want my sister to go alone. But man, oh man, am I glad I came!\"\n\n\"Settle down, Romeo!\" his sister told him.\n\nShe was still smiling but not at her brother, and Zayn noticed.\n\n\"Are you okay to drive?\" Zayn asked him.\n\n\"Me? Oh, sure. I weigh 190 and I had two glasses of champagne so, yes. I'm fine.\"\n\n\"Okay. Then I guess I'll see you two tomorrow?\" Zayn said in the form of a question.\n\n\"I'll text you the info,\" Morgan promised.\n\n\"Please do,\" Zayn told her in a way that said he was interested in more than just the time and location.\n\n\"Oh. Don't forget your jacket.\"\n\nMorgan slipped it off and thanked him again as Hank went around to the driver's side.\n\n\"You sure you don't need it?\" Zayn asked as he opened her door.\n\n\"I'll be fine,\" she promised with a smile.\n\n\"Well. Okay, then. I'll uh, I'll see you tomorrow.\"\n\n\"That sounds really nice, Zayn,\" Morgan told him as she sat down.\n\nZayn made sure her dress was out of the way then closed the door and waved. As Hank backed up he put his jacket back on then watched the car drive away. It was nearly 11 o'clock, and Zayn realized he not only didn't have someone to go home with him, wanting a woman like that was the last thing on his mind.\n\nIt was too late to call his sister as she was often in bed before ten o'clock, so he drove home with only his thoughts; very pleasant thoughts about the best time he could remember having in well, quite possibly forever.\n\nAs they drove to their motel, Hank did all the talking. It was 'Cheryl this' and 'Cheryl that' the entire way, but Morgan was actually very happy for her big brother who didn't date much at all. His divorce had been so bitter that she often wondered if he'd ever love anyone else again. \n\nAnd yet here she was feeling on top of the world because a very handsome, younger man had not only flirted with her but made her feel...special. No one but Nick had ever done that before, and while she still ached for him and the love of their daughter, it was wonderful to feel this way again. \n\nFor some time now, Morgan felt like she would one day be able to feel those kinds of feelings again. And today, for the first time since the death of her husband and daughter, she had confirmation of what she'd only previously believed.\n\nBy lunchtime the following day, Morgan felt almost sick to her stomach. Hank could tell something was going on and asked her if she was okay.\n\n\"Oh, sure. I'm fine,\" she told him, hating herself for lying but not wanting to discuss any of this with him, as she changed the subject and asked if he was excited about his date. \n\nFor the next half hour or so, Hank answered her question. When he finally took a breath she told him she was really happy for him. And when he walked her back up to her room before going to his, she let him know she might not be going with him later that evening.\n\n\"Are you sure you're okay? We can see a doctor here, you know,\" her brother reminded her.\n\n\"Yes. Of course. But I really just need to lay down for a bit, okay?\" she said, hoping to reassure him.\n\n\"Okay, but I'm going to stop by around five or so and see how you're doing.\"\n\nMorgan thanked him then went inside and sat down when she realized there was at least one person she could talk to.\n\n\"Morgan? How are you?\" the familiar voice of her former therapist said.\n\n\"I'm okay,\" came the unconvincing reply.\n\n\"I know you too well to believe that. Is there something you want to talk about?\"\n\n\"I'd ask if it's really that obvious, but yes, you really do know me that well,\" Morgan replied as she tried to laugh.\n\n\"What's going on?\" her friend asked.\n\n\"Oh, boy. I'll tell you if you promise to be honest with me. And not to laugh.\"\n\nA small laugh preceded the answer of, \"When have I not been completely honest with you?\"\n\nMorgan sighed, said she agreed, then began explaining.\n\n\"So you're in New Mexico.\"\n\n\"Yes. For the Balloon Festival.\"\n\n\"Oh, right. I've seen pictures. Is it as amazing as it looks?\"\n\n\"It is. And I've been up in a balloon twice, and it's even more beautiful than you can imagine.\"\n\n\"Something tells me this isn't about hot air balloons, though.\"\n\nThere was another audible sigh before Morgan came clean.\n\n\"Oh. I see. So...you've met someone.\"\n\n\"Well, yes and no. I have met someone, but it hasn't...we haven't...no one's...\"\n\n\"I understand. It's still early.\"\n\n\"Yes. And I'm not sure there's even an 'it' yet.\"\n\n\"Morgan? You wouldn't have called if there wasn't. Don't get me wrong. I'm very happy to hear from you for any reason. But you're looking for advice or at least my opinion, so how about you tell me the rest of the story?\"\n\nIt took her a couple of minutes to get around to the most important detail after sharing his name, his military service, and how nice he'd been to her, but eventually, Morgan said the words that had been making her feel nauseous all morning.\n\n\"So he's quite a bit younger than you. Okay. Now this is starting to make sense.\"\n\nMorgan tried to laugh as she replied.\n\n\"If it made sense I wouldn't be calling.\"\n\nShe got a more genuine laugh in return and then something close to advice.\n\n\"Let me start by assuring you that I understand your concern. I can't give you a number of years that would make me uncomfortable, but anything more than say...ten...might do that.\"\n\n\"Yes. Same here!\" Morgan said as soon as she felt like she'd found common ground.\n\n\"But...\"\n\n\"But?\"\n\n\"It would still depend on a lot of other things.\"\n\n\"Such as?\"\n\n\"Well, like...personality. Like...a sense of humor. You said he and his sister own this business, so I don't think job security or laziness are potential issues. You mentioned he's...how did you put it? Oh, right. You said he's 'freaking gorgeous'.\"\n\nMorgan sighed then admitted she had.\n\n\"He treats his sister well, and from everything you've told me, he's been incredibly good to you, too.\"\n\n\"All of that is true.\"\n\n\"All right. Then tell me how many things, other than his age, bother you about him.\"\n\nThere were several seconds of silence before Morgan finally spoke.\n\n\"I can't think of any.\"\n\n\"Not even one?\" Ann asked to drive home her point.\n\n\"No. None. But in all fairness, I don't really know him all that well.\"\n\n\"Isn't that what dating is for?\" her ex-therapist asked in a very lighthearted way. \"To get to know someone?\"\n\nWhen Morgan didn't reply, she said, \"If you were the same age, all other things being equal, would you even have called?\"\n\n\"No,\" a very quiet, resigned-sounding voice replied.\n\n\"Morgan? Listen. I can't make this decision for you. All I can do is help you think it through. You've been alone for over four years now, and no offense, but you haven't exactly hit it off with anyone since you started dating again. You seem to really like this...younger man...and he seems to like you. So my question would be, 'What harm is there in spending some more time with him'? It's not like you're accepting a marriage proposal if you go with him and your brother tonight.\"\n\nThose words, especially the last two sentences, worked like magic. The pall that had hung over her all morning disappeared, and the queasiness in her stomach went away.\n\n\"You're right. I'm taking this way too seriously,\" Morgan said, her old voice returning.\n\n\"Then there's your answer. Go with Hank tonight. Talk with this Zayn some more. Find out who he really is. And what's the worst that could happen? You have a nice time, come back home, and continue looking.\"\n\n\"Yes. Yes, that's exactly right,\" an excited Morgan Graham replied. \n\n\"Can I help with anything else?\" Ann asked.\n\n\"No. But thank you. For everything.\"\n\n\"You're welcome, and I hope you have a wonderful time this evening.\"\n\n\"Yes. Me, too, and...well, I just wanted to tell you you're amazing.\"\n\n\"Ah! Thank you, Morgan! But you did all the hard work.\"\n\n\"I'd call it team...work,\" Morgan suggested with a laugh.\n\nHer former therapist laughed then said, \"I'm here for you, and if you need to talk again\u2014as a friend\u2014just give me a call, okay?\"\n\n\"I really needed a friend today, so thank you again, Ann. And I will.\"\n\nBy the time she hung up, Morgan couldn't understand what she'd been so upset about. What Ann told her was true. She'd accepted an invitation to hang out with Zayn again, and there was nothing more to it. \n\nAnd with that, she decided to go see her brother and let him know she was feeling better and looking forward to joining him later that evening.\n\nBut just as she went to knock on his door, she heard the unmistakable laughter of a woman.\n\n\"Hank! Stop!\" the female voice said in a very playful way.\n\nMorgan lowered her hand then quietly stepped away as she heard some loud giggling followed by another, \"Hank! What are you doing?\" and then a loud moan.\n\nAs Morgan walked back to her room she wasn't sure what to think. On the one hand she was happy to think that her brother was having a nice time. But on the other, the kind of nice time he was having was too much to imagine. She was no prude, but this was her brother, and he'd been single and unattached for so long she couldn't even imagine him...doing that.\n\nBack in her room, Morgan sat there staring out the window of her fifth-floor room. She'd felt more alone before many times, all of it due to the 'accident', but she hadn't felt like this in many months. Her worry and anxiety about Zayn were gone, but here she was in another emotional quandary with no one to talk to.\n\nThe only other person she knew in ABQ was Zayn, and after about 20 minutes of feeling desperately alone, she picked up her phone and found his number. It took her another ten minutes of staring at the phone before her thumb hit 'dial', and even then, she almost hung up.\n\nBut the moment she heard his voice cheerfully say, \"Morgan? This is a very pleasant surprise,\" she felt much better.\n\n\"Zayn. Hi. Am I bothering you?\" she asked.\n\nHe was a thousand feet in the air when he said, \"No. Not at all.\"\n\n\"Oh, good. I...I think I just needed someone to talk to.\"\n\nOnce those words were out of her mouth, she felt ridiculous for having said them, because she'd just had someone to talk to. Someone who'd helped her realize it would be just fine to get to know someone a little better.\n\n\"Then I'm glad you chose me,\" he told her sincerely.\n\n\"Now that I have you on the line, I'm not really sure why I called,\" the once-again-very-confused woman told him.\n\n\"Why don't you start with how you're doing,\" Zayn suggested. \"Or I could start by saying what a great time I had last night. With you.\"\n\nGrateful not to have to bring up Hank\u2014or the giggling and moaning\u2014Morgan finally smiled then said, \"Yes. Me, too. That was really nice.\"\n\n\"And I'm very much looking forward to seeing you again tonight.\"\n\n\"I know you're not desperate for female companionship, so I'll just have to trust you that you really mean that,\" Morgan told him before realizing that made it seem like she didn't trust him. Or want to see him.\n\n\"I do really mean that,\" Zayn told her. \"In fact, I've had to force myself not to call you all day so I could tell what I just said.\"\n\n\"You're...flirting with me, again, aren't you?\" a slightly more-relaxed Morgan asked.\n\n\"I guess you could call it that,\" Zayn replied. \"I'd prefer to think that it's just me letting you know how much I like you.\"\n\nThere was no confusion, but the relaxed feeling vanished. She wasn't sure what replaced it, but Morgan did know she was feeling all...fluttery inside.\n\n\"I...I like you, too, Zayn,\" she said, stopping before adding 'as a friend'.\n\nZayn somehow picked up on it then told her, \"For me, it's more than just, as a friend, Morgan.\"\n\nMorgan's heart skipped a beat before she replied.\n\n\"But we, you and I, we...we barely know each other, Zayn.\"\n\nWhen he said, \"Well, isn't that what dating is for?\" a cold chill ran through her.\n\n\"So I've been told,\" she quietly replied.\n\nMorgan heard the loud sound of propane burning to provide lift for a balloon and asked if he was in the air.\n\n\"I am as a matter of fact,\" he told her. \n\n\"Well, don't you...shouldn't you be...\"\n\n\"I won't ever do this, but I could fly one of these with my eyes closed. This group is very quiet, and that's made it possible for me to talk to you.\"\n\nHe paused then said, \"And there's nothing I'd rather do than talk with you, Morgan.\"\n\nWhen she didn't reply, Zayn told her, \"That was flirting.\"\n\n\"Oh. Yes. Right,\" Morgan nervously laughed.\n\n\"So I'll see you later this evening then?\" Zayn asked hopefully.\n\n\"Um...yes. Of course. I'll see you then, Zayn,\" she told him being ending the call without letting him know where they were going.\n\nHer loneliness was gone, but now she had butterflies in her tummy; butterflies that refused to go away until she and Hank pulled into the restaurant where they would be double-dating, just like they were in high school. Even though they'd never done that before. Ever.\n\nMorgan hadn't said a word about what she'd heard at the motel, and Hank hadn't offered. But when Cheryl met them in the waiting area, it was obvious they weren't meeting for the first time. The kiss was short and sweet, but it was the way they looked at each other and the way Cheryl laughed that gave it away.\n\nBut before things got uncomfortable, Zayn came in right behind them and said, \"Hello!\"\n\n\"Zayn! Hey, buddy!\" a very-animated Hank said as he pumped the younger man's hand. \"I see you got my text.\"\n\n\"I did,\" Zayn told him.\n\n\"You remember Cheryl, right?\" Hank asked as though the younger man might have forgotten overnight.\n\n\"I do. Good evening,\" he said as they also shook hands.\n\n\"And I believe we've met, too,\" he said to Morgan, who looked even more beautiful than she had the night before. \n\nShe'd worn a beautiful dress and her long, dark hair down the night before. Tonight she was wearing black pants and a dark blue sweater with her hair pulled back in a ponytail but looked just as beautiful.\n\n\"I believe we have,\" she agreed, that happy smile on her face as Zayn hugged her in a platonic kind of way.\n\n\"Dinner's on me tonight!\" Hank let everyone know.\n\nZayn looked his way, but the only thing he noticed was how he and Cheryl were holding hands.\n\n\"Fast mover?\" he whispered to Morgan.\n\nShe nearly laughed then leaned his way and said just as quietly, \"Oh, you don't know the half of it!\"\n\n\"Oh, really?\" Zayn replied, his eyes open wide. \"I'm looking forward to hearing this...other half.\"\n\n\"Well, I'm not looking forward to telling it!\" a smiling Morgan said, suddenly feeling much more relaxed just as the hostess met them.\n\nWhat began as annoying between Hank and Cheryl became entertaining as time went by. It also allowed Morgan to feel like she was developing a bond with Zayn who had a great sense of humor that matched up with hers quite nicely. ",
        "The restaurant Hank chose wasn't anywhere near as nice as the one they'd been to the night before. It was actually more of a bar with food, and it also had a small dance floor. When dinner was over, Hank asked Cheryl to dance, and that's when Zayn asked for 'the other half'.\n\nIt took Morgan a second to 'get it', but when she did, she laughed and said, \"Oh, right. I did mention that, didn't I?\"\n\n\"You don't have to tell me,\" Zayn said. \"It's probably none of my business anyway.\"\n\nAgain, the way he looked at her and the way he spoke touched her.\n\n\"I trust you,\" she told him as she stared into his eyes.\n\n\"That makes me very happy,\" Zayn told her as he slowly reached over for her hand.\n\nHe saw her look at it then at him and when she smiled he knew it was okay.\n\n\"So what's going on?\" he asked as he held her tiny hand in his.\n\n\"Well, let's just say this isn't their...first date.\"\n\nZayn tilted his head a little and raised his eyebrows at the same time.\n\n\"Yeah. I kind of heard them. Together. In Hank's room. Earlier today.\"\n\n\"Oh. Ohhh!\" Zayn replied with a look of understanding. \n\nMorgan laughed then Zayn asked her how that made her feel.\n\n\"You remind me of someone very special,\" she told him with a smile of her own.\n\n\"Me? Really?\"\n\n\"Yes. You.\"\n\n\"May I ask who this special person might be?\"\n\nMorgan looked down for a second then said, \"You know I lost my husband and daughter.\"\n\n\"I do, and again, I'm so very sorry.\"\n\n\"Thank you. Me, too. Well, as you can imagine, my world was turned upside down in an instant. Hank kept trying to get me to see someone, but I couldn't see the value in sitting and talking. I assumed it was mostly rehashing the same thing time after time. But I eventually gave in, and to make a long story short, the therapist I ended up seeing was incredibly helpful. In fact, she and I sort of became friends.\"\n\n\"I'm very glad to hear that the therapy helped. And that you made a friend.\"\n\n\"I...I even called her today.\"\n\n\"Oh?\" Zayn asked without any pressure for her to answer.\n\n\"Yes. I...I guess I needed someone to talk to, and this is an area I don't share with Hank. Pretty much anything else but not this.\"\n\n\"With 'this' being...?\"\n\nShe looked down again for a moment then looked at Zayn and said, \"Men. Dating. Feelings about men and...\"\n\n\"Feelings? As in possibly having feelings for me?\" he asked quietly and without smiling.\n\nMorgan looked down a third time then said, \"Yes.\"\n\n\"May I share something with you?\" he asked.\n\n\"Of course.\"\n\n\"I had a similar conversation with my sister today.\"\n\n\"You did?\" a very-surprised Morgan replied, her eyes open wide in disbelief.\n\n\"I needed someone I could talk to myself, and Katharine is the only person I really trust.\"\n\n\"I see.\"\n\n\"She knew before I even mentioned your name.\"\n\nMorgan shook her head a little then said, \"Are you kidding?\"\n\nZayn chuckled and told her, \"No. Not at all. I no sooner said, 'I need to talk to you', when she laughed and said, 'You really like her, don't you'?\"\n\n\"Oh, my goodness. So...your sister knows?\"\n\n\"She does. And she did. She's extremely perceptive. I may have been a fighter pilot, but to Katharine, I'm still just her little brother.\"\n\n\"That's funny. Hank sees me the same way. Without the fighter pilot part. Or the brother part,\" Morgan told him with a smile and a little laugh. \n\n\"So did talking with this therapist-friend of yours help?\" Zayn asked as he squeezed her hand.\n\n\"It did. It helped a lot, actually.\"\n\n\"The uh...the age thing, right?\"\n\n\"That would be the one,\" Morgan replied.\n\n\"Does it really matter that much to you?\" Zayn asked with genuine sincerity.\n\n\"Let's just say I'm not totally freaking out about it anymore.\"\n\nThe nervous laugh that accompanied Morgan's answer was interrupted by Cheryl's much louder voice as they headed back to the table.\n\n\"That was SO much fun!\" Cheryl bubbled as she sat back down.\n\n\"Hey! You kids should give it a whirl!\" Hank nearly insisted.\n\nMorgan looked at her brother then at Zayn before saying, \"Oh. I don't know. We're just...\" when Zayn stood up and pulled on her hand until she was standing in front of him.\n\n\"I guess that means we will!\" Morgan said as Zayn lead her away.\n\n\"Does your sister know Zayn's crazy about her?\" Cheryl asked as she cozied up to Hank.\n\nHe gave her a kiss then said, \"She does, and it scares the hell out of her.\"\n\nCheryl gave him a puzzled look and Hank clarified things for her.\n\n\"Okay, the thing that really scares her is that she likes him, too. But my sister and I don't talk about 'relationships', so I don't have confirmation, but I know her as well as I know myself, and trust me, she likes him.\"\n\n\"Ah, okay. So it's the age difference, isn't it?\" Cheryl, who was very proud of herself for breaking the code, said.\n\n\"Bingo!\" Hank told her before kissing her again.\n\nNeither Morgan nor Zayn knew the song that was playing when they got to the dance floor, and much to their delight it ended before he could even take her hand. But both of them knew the second song, and it hit both of them hard as Simon and Garfunkel's Bridge Over Troubled Water began playing.\n\nZayn didn't see the look on Morgan's face because she buried it in the crook of his neck as he quietly spoke.\n\n\"My dad was a hard man to understand or even get to know. He didn't talk a lot, and he was pretty stern. But he loved this song, and I can remember him grabbing my mom when I was maybe nine or ten and whirling her around to it.\"\n\nWhen Morgan looked up, her eyes were filled with tears, and Zayn immediately asked if she wanted to sit down.\n\n\"No. I...it's just that...\"\n\nShe needed a moment to collect herself before saying, \"This was one of our all-time favorite songs. Nick and mine.\"\n\n\"If it's too painful, we don't have to dance.\"\n\n\"It isn't...painful,\" Morgan told him as she blinked away the tears. \"It's just...bittersweet.\"\n\nShe managed a little smile and added, \"Mostly sweet.\"\n\nAs the words 'if you need a friend' rang out loudly, Zayn pulled her close and Morgan snuggled up to him then put her arms around his neck as he put his around her waist. \n\nJust before the song ended, Morgan looked up at him at smiled.\n\n\"You are so beautiful,\" Zayn told her.\n\nShe thanked him then unexpectedly said, \"Zayn? I like you, too.\"\n\n\"Yeah?\" a smiling Zayn asked.\n\nMorgan smiled back and said, \"Yes. Maybe even a lot.\"\n\nHe pulled her back in tight during the last few bars, and it was then that both of them knew something was going on between them; something very real.\n\nBy the time they sat back down, the carrying on between Hank and Cheryl no longer bothered Morgan at all. In fact, each time they kissed, she looked over at Zayn and found herself longing for him to kiss her. But she wasn't a 'PDA' kind of girl, and if a kiss was ever going to happen it would be when they were alone. For now she was enjoying sitting next to him and holding his hand and getting the occasional smile or wink that made her heart flutter.\n\nBoth couples danced several more times in between periods of socialization, and Morgan began wondering if her brother, who'd sworn many times that he would never, ever get married again, might be headed that way. She knew better than to ask, but it was wonderful seeing her brother like this. Well, not so much with the public kissing, but other than that...\n\nWhen the time came to call it quits, Zayn asked Morgan how she was getting home. Or rather, back to her motel.\n\n\"I rode with my brother, but I have the feeling I might be a third wheel.\"\n\nZayn laughed then told her he'd be happy to drive her.\n\n\"You know what? That would be very nice,\" she told him before informing her brother.\n\n\"Oh, okay. A little alone time with Cap'n Zayn?\" Hank teased.\n\n\"Ha! Says the guy who needs to soundproof his motel room door!\" Morgan shot back before realizing what she'd said. \n\n\"Hank. I...I only meant...\"\n\nHer brother laughed and told her it was fine then said, \"And by 'fine', I mean...amazing!\"\n\nMorgan shook her head and tried not to laugh as she told him goodnight and reminded him to be careful. Her brother smiled and promised he would before giving her a quick hug then shaking hands with Zayn.\n\nAs they drove through the relatively quiet streets of ABQ, Morgan mentioned the horrific traffic in Seattle.\n\n\"I live in a suburb a few miles away, but it's still awful. Wall to wall, bumper to bumper, almost all the time. Even now it would still be busy.\"\n\n\"I couldn't deal with that,\" Zayn told her. \"Or the rain.\"\n\n\"You know, it doesn't rain all that much there. Atlanta gets more rain than Seattle.\"\n\n\"Get outta here!\" Zayn replied.\n\n\"No. It's true. But it's dark and gray and...raw...a lot of the time. But it really doesn't rain as much as most people think.\"\n\n\"You must enjoy living there, though, right?\"\n\n\"I don't really know. I've never lived anywhere else, so it's never been an issue. But my husband's love of Breaking Bad got me interested in the desert.\"\n\nShe smiled then said, \"Albuquerque in specific.\"\n\n\"How do you like ABQ so far?\"\n\n\"It has its...finer points,\" she said almost coyly as she smiled at him.\n\nZayn laughed then pretended to be very serious as he asked Morgan, \"Are you flirting with me?\"\n\nEven more coyly she said, \"Maybe.\"\n\nHe reached over and took her hand again and smiled at her.\n\n\"I'm still trying to work through this age thing, but one thing at a time, right?\"\n\nZayn squeezed her hand, and after he did, Morgan asked the $64,000 question.\n\n\"So...how old are you, Zayn?\"\n\n\"I'll be...\"\n\nHe looked over at her, smiled, then said, \"Twenty-eight in December.\"\n\nMorgan's hand went limp and her jaw went slack.\n\n\"So...you're 27?\"\n\nZayn laughed then said, \"Well, I believe that's how it works.\"\n\nMorgan knew he was younger, a lot younger, but hearing it shocked her.\n\n\"Zayn?\" she said.\n\nHe looked over again but didn't say anything.\n\n\"I'll be...41 in March.\"\n\n\"What day?\" he asked so nonchalantly she was surprised again.\n\n\"What day?\"\n\n\"Yeah. That way I can send you a birthday card,\" he told her matter of factly.\n\nHe saw the blank look on her face and laughed. \n\n\"Unless you decide to stay here, of course.\"\n\n\"How can you not care?\" Morgan asked, still not understanding how he could be so cavalier about something so important.\n\n\"I care more about you living so far away, Morgan,\" Zayn told her as he squeezed her limp hand again.\n\nAs she felt herself returning to normal she asked again, \"How can this possibly not matter to you?\"\n\nThey were now almost at the motel, so Zayn asked her to let him get parked before he answered. He found an empty spot, pulled in, then shut off the engine.\n\nHe unbuckled his seat belt, turned her way, then said, \"When I see you, I don't see an age, Morgan.\"\n\nHe slowly reached out and put his hand on her cheek then said, \"I see the most amazing, beautiful woman I've ever known. And all that matters to me is being with her.\"\n\nHe gently brushed her hair back then said, \"Okay?\"\n\nMorgan's heart was racing, and she reached up and took his hand then held it in her lap. She sat there just looking at him for several seconds before saying anything.\n\n\"What you just said to me may be the sweetest, most romantic thing I've ever heard.\"\n\nHer husband had said many wonderful things to her, but at that moment she couldn't recall a single one.\n\nZayn told her he meant every word then said, \"I have never wanted a relationship before. All I wanted was...fun.\"\n\n\"Like my brother...and Cheryl. Today in the motel room,\" Morgan said as she smiled at him.\n\nZayn chuckled and told her that was true.\n\n\"But with you it's...it's just...different. I don't look at you like that. Instead, I see you...\"\n\n\"Hey!\" Morgan interrupted. \"What do you mean you don't 'see me like that'? Am I not...attractive to you?\"\n\nZayn laughed again then told her, \"Just the opposite. You are more beautiful than any girl I've ever...dated.\"\n\nMorgan smiled indicating she didn't care how many there had been, so Zayn kept going.\n\n\"You...this is going to sound clich\u00e9, but it's absolutely true. You take my breath away, Morgan.\"\n\nShe smiled again then asked him why, if that were really true, he hadn't kissed her yet.\n\n\"I believe we got interrupted the one time I tried.\"\n\n\"Oh, yes. I do seem to recall that,\" Morgan happily replied as she saw him leaning her way.\n\nTheir first kiss was soft and sweet and ended much too soon for both of them, but it reinforced the feelings Morgan had experienced when she felt like this was becoming real.\n\n\"So now what?\" she asked very sweetly.\n\n\"Were it up to me I'd ask you to...\"\n\n\"Come back to your place?\" Morgan said, only partly teasing.\n\nHe put his hand on her cheek again then said, \"Were you anyone else, I'd have asked you the first time we met. But you're not just anyone else, Morgan.\"\n\n\"I do believe that was even more romantic than what you said a few moments ago,\" she quietly replied.\n\n\"I honestly don't even think about those...other women. But I can't stop thinking about you,\" he told her in a way that made her heart race again.\n\nMorgan had no idea why she knew, but she knew that she did, and once she did, she had to say it.\n\n\"Zayn? I believe you. But I also want you to know that were you to, you know, ask me to...come back to your place...I would say 'yes'.\"\n\n\"Nothing would make me happier, Morgan. But if rushing things hurt any chances we might have to make this work longterm, I'll wait as long as...\"\n\nMorgan leaned over, took his face in her hands and kissed him.\n\n\"I promise it won't hurt your...\"\n\nShe smiled at him then changed it to, \"Our...chances.\"\n\n\"Are you sure?\"\n\nMorgan bit her lower lip then said, \"I haven't been this sure of anything since Nick was alive. So, yes. I'm sure.\"\n\nWithout another word, Zayn started the car and backed out before heading toward the Nob Hill area. Neither of them spoke on the way their or until they got to his apartment.\n\nBut once they stepped inside, Morgan was more than a little surprised.\n\n\"This can't be a bachelor pad,\" she said as she looked around. \"It looks amazing.\"\n\nZayn thanked her then said, \"I have a sister with a very good sense of taste. She decorated it for me.\"\n\n\"This whole complex is...gorgeous,\" Morgan told him as she continued looking around.\n\nZayn followed her and explained this and that as she asked questions, most of them about his Air Force pictures on one of the walls.\n\nShe turned around and asked him why he left the military. Zayn had never shared his feelings with anyone, but he knew he could tell this beautiful, older woman, and that she wouldn't judge him for it.\n\n\"I can't stand the though of ever taking another human life,\" he told her quietly.\n\nHis words felt like they'd seared themselves into her heart as she tried to imagine what it would be like knowing that he'd done the thing he said he could never do again, and without further hesitation she put her arms around him and said, \"Will you please make love to me?\"\n\nZayn was a practiced, skilled lover, and Morgan was utterly amazed at the things he made her body feel. What she didn't know was that even after four years of total abstinence, she was still a very able lover herself, and Zayn was every bit as satisfied as she was when they lay in each other's arms an hour or so later.\n\n\"Are you disappointed?\" Morgan asked, causing Zayn to nearly sit up.\n\n\"Why would I be disappointed?\" he asked, stunned by the question.\n\n\"Because you've seen me naked. And by me, I mean my 40-year old body.\"\n\n\"Hey! Your body is amazing and sexy as hell,\" he told her with a smile.\n\n\"No, that would be your body, but thank you just the same.\"\n\n\"You still don't get it, do you?\" Zayn asked as he played with her hair.\n\n\"Get what?\"\n\n\"The way I see you or how much I...like you.\"\n\n\"Maybe I don't, but I'm very happy that you do,\" Morgan told him with a warm smile.\n\n\"You know, I have insecurities, too. About us.\"\n\n\"Oh? How so?\"\n\n\"I'm afraid you'll realize I'm not the man your husband was and you'll come to your senses and go back home and forget all about me.\"\n\nNow Morgan nearly sat up.\n\n\"I'll always love Nick. But that doesn't mean there isn't enough love in my heart to love someone else just as much.\"\n\n\"I know there's a lot of love in there. I'm just not sure it's designated for me,\" Zayn told her quietly. He wasn't whining or hinting, and he definitely wasn't complaining. He was simply sharing how he felt.\n\n\"So I guess it isn't just me then,\" Morgan said. \"You know, with you being a college graduate, a fighter pilot, and a business owner while I never went to college and have never had a career.\"\n\nZayn smiled then, mustering up as much faux bravado as he could said, \"And all that by the age of 27.\"\n\n\"Oh, there we go! Just when I was feeling better about that, you just had to go and bring it up!\" Morgan teased back.\n\n\"Speaking of up,\" Zayn said.\n\nMorgan had been looking at him, and when he looked toward the foot of the bed, she did, too. The sheet that was draped over her young lover looked like a teepee just below his waist.\n\nMorgan laughed then told Zayn, \"What goes up\u2014must come down.\"\n\n\"Someone knows her physics,\" he teased as she reached for him. By the time she used something other than her hand on what had 'gone up', Zayn groaned loudly. \n\n\"And someone knows her...\" Another loud groan ended his sentence as he lay there marveling at how beautiful and amazing she was.\n\nAt some point that night, Zayn asked the question he wanted to ask but dreaded saying out loud.\n\n\"Do you know when you're leaving?\"\n\nWithout looking at him Morgan told him, \"The day after tomorrow.\"\n\n\"I have the name of a realtor. If you were serious,\" he told her as she traced little circles on his chest.\n\n\"Zayn. I...I really do like you. A lot, in fact.\"\n\n\"But?\" he asked, knowing one was coming.\n\n\"This is all happening so fast.\"\n\n\"I'm tempted to remind you this is the longest it's ever taken for me to, you know,\" he said as he tried to smile.\n\nShe looked up at him, smiled, then said, \"Oh, right. Perspective really is everything, isn't it?\"\n\n\"I'd like you to stay,\" Zayn told her, tired of being indirect.\n\n\"I can't, Zayn. I...I need time.\"\n\nShe looked at him again then said, \"Can you give me some time?\"\n\nRealizing that relationships meant compromise, it was clear he couldn't have everything he wanted, and he wanted Morgan to stay in the worst possible way.\n\n\"Of course. Take whatever time you need,\" he told her before softly kissing her again. \"I'll be here\u2014whatever you decide.\"\n\nAs Morgan lay there looking at him, she no longer saw him as 'the younger man'. She now saw him as an intelligent, mature adult who might possibly be in love with her. And as much as she wasn't ready to admit it, she couldn't help but wonder if she might just be in love with him. And it was that thought that scared her half to death.\n\n\"I hope you understand,\" she said quietly as she looked at him.\n\n\"I can't say it doesn't hurt, but I do understand.\"\n\n\"I know it's the middle of the night, but would you take me home?\"\n\nZayn didn't mention that 'home' was a motel. He only told her he would as he forced himself to smile.\n\nHe walked her to her door and asked if he could see her again that evening.\n\n\"I'd like that,\" she told him before kissing him goodbye.\n\nThe last time Zayn had felt that alone was when he learned that the precision munitions he'd dropped near a village in support of Army soldiers on the ground had killed the elderly woman who was outside at the wrong time. He and his wingman had taken out a half dozen jihadists, too, but the only thing he could see was this woman's face even though he'd never met here. \n\nAnd now he was about to be unable to see the most beautiful face he'd ever seen before, and as much as it hurt, he knew he had to let her go.",
        "That evening, he and Morgan spent the evening alone at his place. They ordered take out, watched an old movie, and made love again, but it was somehow different, and the only reason he could think of was that Morgan had put up a kind of protective barrier to keep herself from being hurt, too.\n\nWhen he said goodbye to her at the ABQ airport, he came very close to tearing up when she did.\n\n\"I've never been in love before,\" he told her just before she left to go through security.\n\n\"It's pretty amazing, isn't it?\" she replied with tears in her eyes.\n\n\"I don't know what the future holds, Morgan, but I'm hoping that mine has you in it.\"\n\nHer eyes were darting with his even as she blinked away tears as she listened to him speak.\n\nHer own heart was breaking as she kissed him one last time then said, \"Take care, Zayn.\"\n\nAs he watched her walk away, Zayn swallowed hard and blinked several times himself before turning around and going the opposite direction.\n\nWhen he got to his car he said to himself, \"Whoever said 'tis better to have love and lost' doesn't know what the hell he's talking about.\"\n\nHe'd missed two flights on the last day of the festival, but right then, money had no meaning to him. He did take up the rest of his scheduled passengers that day, but his heart wasn't it. It wasn't because it was with someone near Seattle. It was with the only women he'd ever loved; a woman he felt sure he would never see again.\n\nHank was already waiting to board when a teary-eyed Morgan found him.\n\n\"You really like our young captain, don't you?\" her brother said understandingly as he watched his sister dry her eyes.\n\nShe looked over at him and as she tried to speak, nothing came out. Nothing but tears, and her brother held out his arms then just held her.\n\n\"What about you and Cheryl?\" she asked once she could talk.\n\n\"Oh, no. Uh-uh. That's over.\"\n\n\"Really?\" Morgan asked, now very concerned. \"I thought you two really hit it off.\"\n\n\"Last night she started in about...marriage. And children. And you know how I feel about both.\"\n\nMorgan did know, and now it all made sense.\n\n\"I'm sorry,\" she told him with genuine sympathy.\n\n\"No. Don't be. It was a lot of fun. This whole week was a lot of fun.\"\n\n\"It was, wasn't it?\" Morgan said as she mustered up a brave smile.\n\nHank looked at his sister then said, \"You don't need me to give you advice, but I do have to ask.\"\n\nHe paused then asked, \"Do you love him?\"\n\nThe tears that fell answered his question, and Hank didn't say anything else other than, \"We should be boarding here any minute.\"\n\nOn the flight back, Morgan felt as lonely as Zayn although neither of them knew how much the other was hurting. For her, the last time she'd felt like this was the night she learned her family had been taken from her in an instant. \n\nJust as she had then, she felt...hollow...inside, and although it made no sense to her that she could have really fallen in love in less than a week, it was hard to imagine feeling this way if Zayn had been nothing more than a fling.\n\nMorgan closed her eyes and willed herself to think about something else or even nothing at all, but no matter how hard she tried, all she could see in her mind's eye was his very handsome face and the smile that made her go weak inside.\n\n****\n\nOne month later.\n\n\"You have a 10am flight tomorrow and a first lesson at 2pm,\" Katharine reminded him when he walked in that morning.\n\nHe thanked her almost perfunctorily, and she asked him if he was still thinking about her. She'd mentioned her name a few times, but the last time she did her brother glared at her like he'd never done before. \n\n\"Is it that obvious?\" he asked as he did his best to smile.\n\n\"You've been home every night since she left,\" his sister reminded him.\n\n\"Not every night,\" he countered.\n\n\"Hanging out at my house until 2am watching old movies doesn't count,\" Katharine reminded him.\n\nZayn sighed loudly when Katharine said, \"Are you going to call her?\"\n\n\"Why? What's the use?\"\n\n\"Well, what if she's sitting there moping around like you and telling herself that you'd call her if you really cared?\"\n\n\"She made it pretty clear she's not interested,\" her brother said, the disappointment in his voice coming through loud and clear.\n\n\"Call her, Zayn,\" Katharine said before welcoming a customer who walked up to the counter.\n\nHe had almost two hours until his first flight. Business always fell off dramatically after the festival, and he'd had to let two of the other temporary pilots go until things picked up again.\n\nAs he sat in the office, he looked at his phone for several minutes before finally convincing himself that Katharine was right. He had to know, and if she said she wasn't interested, then he'd have his answer.\n\nIn this case, too, there was something else he didn't know. Katherine had been exactly right. \n\nMorgan had talked with her former therapist in detail two different times since returning home, and in the end, she believed that if she really mattered to him, he would call. Maybe it was the fact that she was a more traditional woman who had never called a man before. At least not to ask him out. But that didn't mean that she wasn't still feeling almost as bad as she had on the flight back to Seattle.\n\nSo when her phone rang that morning, her heart leapt into her throat when she saw his name show up. Her heart was hammering as she swiped 'Accept Call' then said, \"Hello?\"\n\n\"Morgan? Hi. It's...it's Zayn. From New Mexico.\"\n\nShe could feel the nervousness in his voice, and that made her smile.\n\n\"Oh. So it's not one of the other Zayns I know?\" she teased.\n\n\"Sorry. Right. There aren't a lot of us around, are there?\" he replied, not quite as nervous but close to it.\n\n\"How have you been?\" Morgan asked.\n\n\"Me? Good. I'm good,\" he told her even as he shook his head at himself for lying.\n\n\"Oh. Well, that's good,\" Morgan said as she chided herself, too, for sounding like a fool.\n\n\"Actually, I'm not all that good,\" Zayn told her.\n\n\"Oh?\"\n\n\"No. You see, there's this woman. She's...well, she's the most amazing, funny, beautiful woman I've ever met. And I can't stop thinking about her.\"\n\nMorgan's heart beat even faster as she said, \"She's a very lucky girl. Does she know you feel that way?\"\n\nZayn paused for a moment then said, \"I guess I thought she did. I did my best to let her know how I felt when we were together. Here. In...New Mexico.\"\n\n\"Maybe she's the kind of woman who needs to be told more than once,\" Morgan said very sweetly.\n\nZayn could hear her smile as she added, \"Or even twice.\"\n\n\"I'd tell her every day for the rest of my life if she'd give me the opportunity to do so,\" he told her as sincerely as he'd ever said anything before.\n\nMorgan had the confirmation she'd been hoping and praying for, and her heart sang as she spoke her reply.\n\n\"I haven't been able to stop thinking about this amazing, intelligent, handsome man I met last month, either. In New Mexico.\"\n\n\"No?\" a very-heartened Zayn replied.\n\n\"No. But he's quite a bit younger than me, and I think that scared me to the point where I wouldn't let myself believe that there was something very real between us.\"\n\nNow she could hear Zayn smiling as he used her words on her.\n\n\"Does he know the way you feel?\"\n\n\"No, but if he'd ask me to come back, I'd tell him every day for the rest of my life.\"\n\n\"Morgan?\" she heard the man she loved say.\n\n\"Yes?\"\n\n\"I love you. And...and I want you to come back. Here. With me.\"\n\nTears fell again, but this time they were tears of joy.\n\n\"I love you, too, Zayn,\" she told him, her voice choked with emotion.\n\n\"I don't want to live without you another day,\" Zayn told her.\n\nShe smiled then said, \"It'll take me a few days to tie up loose ends here, but if you can make it another week or so...\"\n\n\"I could in Seattle tomorrow. To help you. Tie up loose ends.\"\n\nMorgan was so happy she couldn't stop crying or speak.\n\n\"Is that a 'yes'?\" Zayn asked, knowing why she was crying.\n\n\"Yes!\" Morgan choked out. \"Please come and be with me.\"\n\n\"I will,\" Zayn promised. \"And then please come and spend the rest of your life with me.\"\n\n\"I...will,\" Morgan told him. \"I promise.\"\n\n*****\n\nTen days later, Morgan's house was on the market and had multiple offers the first day. Most of her things were in storage, and Hank promised to have them shipped whenever she was ready. \n\nSaying goodbye to her brother and the best friend she had was the third hardest thing she'd ever had to do. Losing her family was by far the worst, and saying goodbye to Zayn had been gut-wrenchingly awful. But in this case, she knew Hank could come and visit, and she could do the same.\n\nShe moved into Zayn's swanky apartment the day they arrived home. Home in Albuquerque, New Mexico, where the man she loved had grown up; a home that now included her.\n\nZayn gave 30 days notice on the apartment, and by the time her house closed in the Seattle area, they were ready to close on a beautiful home of their own in a quiet subdivision Morgan loved. \n\nThat first evening in their new house, after a long day of moving numerous boxes Hank had shipped a few days before, Zayn lit some candles at the table as they got ready to share a pizza. Morgan's hair was in a ponytail, and some it was hanging loosely around her face. She was only wearing an old shirt and some jeans, but Zayn told her she was the most beautiful woman on earth.\n\n\"Hey. I'm a sure thing, you know,\" she teased, loving the compliment even when she looked her worst.\n\nHe just smiled back at her as he reached for something behind him. Once he grabbed it, he turned back around then got on one knee in front of her in the dim candlelight.\n\nMorgan was exhausted, but when the younger man she loved asked her to marry him, she felt more alive than she could ever remember as she happily told him she would.\n\nThey'd only known one another for eight months when they married at the home of Zayn's mother, a simple woman who fell in love with her daughter-in-law to be the first time they met. But they both knew that they were meant to be and more time wouldn't have made that any clearer.\n\nHank flew in to give her away, and one of Zayn's closest friends from active duty came to town to be his best man. Morgan paid to have Ann fly in, too, and be her Maid of Honor.\n\nIt was a simple ceremony, but Morgan had had the big wedding. This time, all she needed was the man she loved, and when it came her turn, she told that man, \"I do,\" with tears in her eyes and without any doubt in her mind.\n\nOver the course of the next year, Morgan earned her pilot's license and Zayn became her instructor to become balloon certified. On their final flight, Morgan told him how much she loved him then said she had a surprise.\n\n\"Hey. Are you asking me to join the mile-high club with you?\" her handsome, younger husband asked with a devious smile.\n\n\"Oooh! No, that wasn't it, but I think that's a wonderful idea!\" his beautiful wife bubbled.\n\n\"Then what's the big secret?\"\n\n\"Well,\" she began before putting her arms around him as they drifted over the desert surrounding ABQ. \"I...WE...are going to have a baby.\"\n\n\"What? Really? Are you...are you serious?\" Zayn stammered.\n\n\"I am,\" his beautiful wife told him.\n\nThere wasn't a lot of room in the basket, but Zayn still grabbed his wife, picked her up, and spun her around.\n\n\"Does that mean you're happy?\" Morgan asked, knowing that he was.\n\n\"Happy? I'm...over the moon!\" he told her before picking her up again.\n\n\"We don't have to go down just yet, do we?\" his beautiful wife asked with that look in her eye.\n\nZayn checked the propane level then wriggled his eyebrows.\n\n\"Nope,\" he told her.\n\nShe turned the nozzle on and the propane ignited providing the needed lift before putting her arms around her husband and smiling deviously.\n\n\"Up, up, and away\u2014in my beautiful balloon!\" Morgan sang as she got ready to take her husband on the most amazing ride of his life."
    ],
    "authorname": "komrad1156",
    "tags": [
        "older woman",
        "younger man",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/up-up-and-away-2"
}