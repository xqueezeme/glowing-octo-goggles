{
    "title": "It Has Led to Dancing",
    "pages": [
        "Sally Macmillan was a study in sharp contrasts. Her mother was of Native American descent, and those features were prominent in Sally. Her father was predominantly of Irish and German heritage. She always wore baggy, drab clothing to conceal her body. She never wore makeup, and wore her long, flowing black hair pulled back and up in a severe bun. Beneath those concealing clothes, her body was lush. It was an artist's dream of sensual deliciousness. Her breasts were naturally very large, and would cause her embarrassment if they weren't always held in check by painfully severe brassieres. Her legs and buttocks were muscular, yet supple. No one ever got to see them.\n\nSally grew up traveling and moving often before her family settled in the southwest of the United States, where her features were often mistaken for Mexican-American. Unfortunately, she had never learned any Spanish, which was occasionally awkward. She would be approached by someone who would look at her, smile, and then speak rapidly in Spanish. She would understand maybe every second or third word, and that largely because she had studied Italian. Some of the root words were similar.\n\nHer parents were staunchly conservative Christians. Sally was forbidden from dating. Throughout her childhood, she was lectured at length about the dangers of Sin and Hell. This was not as severe an upbringing as it might sound; her parents were fun people with a tremendous sense of humor about most things. They loved her dearly and did their best to be good parents for her and her two younger brothers. \n\nShe read the Bible early and often. She also learned early not to question what she read in the Bible too closely. It smacked of disobedience, and that was never to be tolerated or entertained. That sort of behavior could lead to damnation. Most of that severe feedback came from her Sunday school teachers. She stopped asking those tough questions, but her reading continued well above the level of her peers.\n\nEverything else in the world was open to questioning, however. Ironically, this led Sally to embrace a love of science, and in particular Physics and Astronomy. It was easy for her to bridge this apparent dichotomy; the words of the Bible weren't ever written down by the hand of God, they were written down by people living thousands of years ago. Most of them had little or no education, and they were trying to explain the Creation to followers who were even less sophisticated. Even today, the idea that it took fourteen billion years to create the Universe is beyond the grasp of the average citizen. Seven days is a number that is easy to comprehend.\n\nShe understood that it was the essence of scripture that mattered. She strongly believed in a loving and caring Creator whose works were clear in the night sky and in the movement of quarks and electrons. The mathematics of that movement were elegant and beautiful to her mind. She also understood that most people could not grasp that complicated math the way that she could. It was her gift from God, she thought.\n\nAlthough she was normally quiet and kept her thoughts to herself, she could speak quite eloquently when she felt she had to. One of her most compelling speeches was to her own parents, as she calmly explained to them the beauty of God's work that she found in these scientific studies. She was able to convince them that she was striving for a better understanding, and not questioning her beliefs. They somewhat reluctantly agreed to let her continue these studies at San Diego State University.\n\nSally had spent a great deal of her free time preparing for college during her senior year of high school. It wasn't just the preparation for the SAT exam, like most of her peers. She had taken advanced placement classes in school, and had also taken college level examinations to place out of several courses. She applied for and received several grants from private foundations and corporations.\n\nHer parents were genuinely astonished when Sally informed them that she would not need any financial assistance from them while she went to school. Quite to the contrary, she would be bringing in a healthy six-figure income each school year. That was after her scholarship paid for her tuition, fees and books.\n\nAll of this was fantastic in theory. Sally was about to receive a crash-course in harsh reality.\n\nAlmost all of her financial assistance was delayed, often for weeks at a time. Her nice apartment in San Diego was more expensive than she had expected, with the high cost of electricity and fees that she had not taken into account. Taxes were also substantially higher, and those were pervasive. Everything she had to buy had sales taxes, and the state of California expected to tax her income from all of her private grants, even though most of those hadn't yet paid her a dime.\n\nIt was extremely frustrating. She feared she would lose her apartment. Sally was on her own for the first time in her life, and was just not prepared to deal with everything that she was suddenly facing. She went to a local church to pray for guidance.\n\nIt was nominally a branch of the same church as the one she attended with her parents. There were some glaring differences that she noticed immediately. This one had church dances, as advertised on the sign out front of the building. Her own church frowned on dancing entirely. In fact, her parents would jokingly say \"it has led to dancing\" as a reference to any activity that could be seen as a slippery slope into sin.\n\nThe pastor at this church was a woman, which would also be disconcerting to Sally. Pastor Julie was in the church building, dressed in loose fitting jeans and a work shirt. Her outfit did not give any indication of her calling. She approached the troubled young woman who was kneeling in prayer.\n\n\"Can I help you, sweetheart?\" she said, loudly enough to be heard from halfway across the chapel.\n\nSally took a moment to look around and locate the woman. \"I don't know,\" she replied softly, \"I was just praying for guidance.\"\n\nThe woman approached and held out a hand. \"I'm Pastor Julie,\" she said.\n\nSally took her hand and shook it, not sure what to make of a female pastor. \"I'm Sally Macmillan,\" she said.\n\nDespite her initial reticence, Sally soon found herself opening up to the pastor about her problems since she had moved to San Diego. Pastor Julie realized quickly just how sharp this young girl was as she listened to her. Julie's own college experience had been radically different. She had lived in the dorms, and had roommates throughout her college career. She hadn't ever felt alone or lacked for support as a result. Those girls had been some of her best friends.\n\n\"You don't have a roommate?\" she asked when Sally paused in her story.\n\nSally grimaced at the thought. \"I wanted to avoid that,\" she said, \"Too many of the girls my age are just not serious about school. They are into dating and drinking, and I don't want that influence around me.\"\n\nPastor Julie thought to herself, \"Man, this girl is wrapped way too tight.\" Pastor Julie had been into dating and drinking when she was at that age, years before she took a calling in the priesthood. She thought for a bit before saying out loud, \"Perhaps another student or someone else in my congregation could serve as a suitable roommate for you. I can ask around on your behalf, if you would like.\"\n\nThat seemed an imminently wise idea. Sally nodded gratefully and shook Pastor Julie's hand again. \"That would be perfect! Thank you so much.\"\n\nPastor Julie got Sally's cell phone number and her address, and proceeded to make some calls.\n\nSally was both surprised and delighted when she got a phone call from Pastor Julie that very evening. It seemed that there was a young graduate student, an engineering major named Dana, who was in need of a place to stay.\n\n\"It seems that one of Dana's roommates dropped out of school suddenly, and she lost her apartment while she was at her parents' house,\" Pastor Julie confided. \"Dana's father told me that she had to dig her clothes and furniture out of a dumpster. It has just been terrible. You would be doing us all a favor if she could stay with you.\"\n\nPastor Julie was not intentionally lying to Sally. She just didn't know that 'Dana' was actually a young man. When she had talked to Dana's father, for some reason she had pictured someone else's daughter in her mind. It was quite a shock, then, when Dana showed up at Sally's apartment the next day prepared to move in.\n\nDana Jacobs was a very fit twenty-three year old. He was broadly muscular and just a bit under six feet tall. He had light brown hair with blonde highlights from a summer spent outdoors and in the water. He wore baggy shorts and a tank top, revealing his tanned and muscular shoulders. He smiled and introduced himself, holding out his hand. Sally shook it out of reflex, but was so completely shocked that she barely said anything as he started moving his clothes into 'his' bedroom.\n\nHe asked for her help carrying his mattress and box spring into his room, and she just followed along and helped, her mind still trying to come to grips with this situation. She assumed the fault was hers, not Pastor Julie's. She figured she had heard the name 'Dana' and assumed it was a female. She also assumed that Pastor Julie knew this young man and vouched for his character enough to think him a suitable roommate.\n\nIn fact, Pastor Julie didn't know the first thing about Dana Jacobs. He was an environmental engineering major, though his studies were predominantly focused on maritime engineering solutions. He was now into the second year of his Masters program at SDSU. He was in fine academic standing, and he would certainly have plenty of career opportunities after graduation, but he was far more focused on enjoying college women these past two years.\n\nIt wasn't as if he was a blatant sensualist or suffered from satyriasis, he just had a healthy sex drive and plenty of opportunity. Unlike Sally, his parents were casual churchgoers. Dana had never read the Bible and did not take religion that seriously. He did attend church occasionally, and he wasn't disrespectful, but it just wasn't a big part of his life.\n\nLike Sally, though, he did jump to assumptions about his new roommate when he first met her. From her clothes, he assumed she was obese and self-conscious about her body. She was very quiet, saying almost nothing the entire first day as he moved in, so he assumed she was not very bright. He had no idea what her major was, and really didn't care. Although he was moving in, he did not expect to spend much time sleeping at the apartment. He usually slept over at one of his girlfriends' places or crashed with friends after a party.\n\nHe also spent long hours in class and in simulation labs on campus. He pulled odd hours, and had barely seen his previous roommates in the two years they had shared their apartment. Often, he would have a girl over for sex in the middle of the day, when his roommates were in class. He expected that his life would go on as it had, despite having a female roommate.\n\nHe finished moving in before the sun set. Sally was shocked once again when he brought a case of beer into the apartment, put it in the fridge and opened one. He sipped it and looked out the window at the pool.\n\n\"How is the pool here?\" he asked her.\n\n\"I don't know,\" she said softly. In fact, she didn't own a swimsuit and didn't know how to swim.\n\nHe figured she was so self-conscious of her body that she hadn't put on a swimsuit to try the pool. He was right, but not for the reason he had in his mind.\n\nOne of the reasons Sally had selected SDSU for her studies was that the university had a world-class observatory, and allowed undergraduate students access to it. As a result, she often stayed on the campus after dark to follow graduate astronomy students around, to learn from and assist them as much as she could. She had an early class each morning, but the middle of her day was free. She often came back to the apartment to eat and sleep then so that she could stay up later and take advantage of the time at the observatory and other labs. Like Dana, she expected she would rarely see her new roommate.\n\nIt only took three days for them to both be shocked out of their preconceptions. Dana was the one to get blindsided first. He had returned to the apartment early Thursday morning to get changed after a long night out. Sally was in the shower when he came in, and she did not hear him. He heard the shower running, and grumbled to himself. He needed a shower, but would have to wait.\n\nHe was standing just outside the bathroom door when it opened. Sally shrieked and actually jumped a little when she saw him standing there, not expecting anyone to be in her apartment. She had her hair wrapped in one towel and a second wrapped around her body. The ends of the towel just barely reached around her large breasts, and only an inch of it was tucked to keep the towel in place.\n\nIt wasn't enough.\n\nHer shock and embarrassment were magnified when the towel slipped from her voluptuous breasts and dropped to the floor. For five full seconds, they both stood in stunned disbelief. Sally then scrambled to cover her body with the fallen towel, her bobbing breasts and hard nipples swaying outrageously in front of Dana's wide eyes.\n\n\"Holy shit!\" he gasped out loud. This girl had an insane, smoking hot body! What the fuck?!? Why would she hide that under those ridiculous clothes? Her ass was amazing as well, he noticed, as she held the towel in front of her and dashed into her room.\n\nDana was shaken as he made his way into the bathroom to use the shower. He could not get the image of Sally's incredible body out of his mind. He looked down and his cock was inflamed with arousal, as hard as it had ever been. This was despite the fact that he had just left one of his girlfriends with two massive loads of his cum inside her well-satisfied pussy. Even after he finished showering and dried his body, he was still completely hard. He wrapped the bath towel around his waist and made his way out to the dining room. He felt he needed to apologize to Sally.\n\nSally was absolutely mortified. No one had seen her naked body since she had been out of diapers. She was always so careful, and this just caught her completely off-guard. She was savage as she dressed in her normal, severe outfit, crushing her breasts beneath the unreasonable brassiere. Her nipples actually hurt as she did it. Likewise, she jerked her hair back viciously as she put it up. She felt that she deserved the pain she inflicted on her body for being so careless. She emerged from her bedroom and got a yogurt from the refrigerator.\n\nDana approached her cautiously.\n\n\"Hey,\" he said softly, \"I am really sorry about that. I didn't mean to scare you.\"\n\nSally blushed almost crimson as she looked up at him. She was still embarrassed that he had seen her, but she was also painfully aware that he was wearing only a towel as he talked to her. She didn't know what to do or say in this situation. She was further shaken when she realized his dick was hard and throbbing under that towel. She realized she was staring at it and looked away quickly.\n\nDana looked down at her, seeing her embarrassment written all over her face. He didn't know what to do. He also couldn't help but look at her conservative clothing and imagine her sexy body underneath it. He shook his head.\n\n\"I really don't understand,\" he finally said, \"You have an amazing body. Why do you dress like that?\"\n\nSally actually choked on her yogurt. Her eyes were wide as she just stared at him in disbelief. It was bad enough that he had seen her, but now he said something like that?\n\n\"Please, Dana,\" she finally got out in a near whisper, \"Just...forget it.\"\n\nDana nodded, but he couldn't really understand her at all. It was then that he first noticed the stack of textbooks next to her on the dining room table. \"Whoa,\" he thought, \"those are some serious courses!\" The level of math and physics represented in those books matched the pinnacle of his own mastery in those subjects, and she was only a freshman. He looked from the books into her eyes, and then he sat down facing her.\n\n\"Look,\" he said, \"I feel like we got off to a really lousy start as roommates. Do you think we could start over?\"\n\n\"What do you mean?\" Sally responded. She was intrigued at the suggestion.\n\nDana put out his hand, \"Hi, I'm Dana Jacobs.\" He smiled at her as he said it.\n\nSally decided to play along, to see where this went. She shook his hand. \"Sally Macmillan. Nice to meet you.\"\n\nDana went on. \"I'm working on my masters in Environmental Engineering here at SDSU, with a focus on Maritime Engineering and Oceanography. How about you?\"\n\n\"I'm double majoring in Physics and Astronomy,\" Sally replied, \"I'm a freshman, but I took AP classes and CLEP tests to get half my undergrad courses out of the way. I should go straight into the masters program in two years.\"\n\n\"Jesus,\" Dana said softly. That earned him a very stern look from Sally.\n\n\"I thought you went to the same church I do,\" she said.\n\n\"What?\" Dana genuinely didn't realize he had taken the Lord's name in vain. To him, it was just an expression of disbelief at just how accomplished Sally was academically. Sally realized, from his response and his expression, that he had no idea what he had said. She didn't want to ruin their 'fresh start,' so she decided to drop it.\n\n\"Well, it was nice to meet you Dana,\" she said, \"I really need to get going for my morning class.\" She rose from the table and disposed of her empty yogurt container, washed her spoon, and then returned to pick up her textbooks.\n\nDana's eyes were on her the entire time. \"You really can't see her shapely ass at all in those pants,\" he thought. He stood and watched her gather her things and leave. She locked the door with her key from outside before heading for her car.\n\nUnreal, Dana thought. He shook his head as he headed for his bedroom to get dressed.\n\nHe had a sort-of date lined up this morning. Denise was a friend of one of his on-again, off-again girlfriends. She wanted to meet him for breakfast at a restaurant to talk. He was pretty sure she wanted to have sex with him, but at the same time she didn't want to ruin her friendship with Cindy. It was not the first time he had handled such a delicate situation. He still had two hours before the appointed breakfast, so he used the time to dig out his coffee pot and set it up in the kitchen.\n\nWhile that pot of coffee brewed, he started some laundry. It was nice to have a washer and dryer in the apartment. He had his own detergent and fabric softener sheets, different brands from what Sally used. He normally used a laundromat, which consumed a big chunk of a day. Here, he just started the washer and had a seat on the living room couch.\n\nHe noted that it was a very nice couch as his butt settled into it. It was comfortable and allowed him to lie back, but still supported his head and neck so that he wasn't straining to watch the television. Dana could easily imagine having Denise sit on his lap and ride him on this couch. If breakfast went well, perhaps he could make that happen. He expected Sally would be in class all afternoon.\n\nWhen the washer finished, he moved his laundry into the dryer and started it. He had a second cup of coffee before heading off to breakfast with Denise.\n\nShortly after the dryer finished, Sally returned to the apartment. She called out, \"Hello?\" when she came in the front door. No one was home. She was a little relieved at that.\n\nAs she walked inside, she noted that the apartment smelled different. It wasn't bad, it was just the smell of coffee and Dana's laundry detergent and dryer sheets. Sally didn't drink coffee. It wasn't a religious thing, she had just never acquired a taste for it and her parents didn't drink coffee. It did smell good, almost like chocolate.",
        "Sally fixed her usual lunch of a sandwich and a bowl of soup with crackers. She ate quickly and cleaned her dishes quickly as well. She was very efficient with her time in these midday hours. She went to her room and stripped out of her clothes, removing the uncomfortable brassiere and gently kneading her breasts. Her nipples always got aroused when she did this, but she ignored them. She pulled her loose nightgown over her body, crawled beneath her sheet, and was asleep within minutes.\n\nDana's breakfast date with Denise went pretty much as he had hoped. Denise had broken up with her most recent boyfriend, Roger, a couple weeks earlier. She knew that Cindy was seeing someone new.\n\n\"Cindy and I have been friends since the seventh grade,\" Denise said, \"I wouldn't normally date one of her ex-boyfriends. But she and Jill both raved about how 'amazing' you were in the sack, and I have to admit I'm really curious.\"\n\nDana smiled broadly at this. He always treated the women he dated with respect, without the clinging possessiveness that plagued so many young college guys. He was very confident in his ability to please a woman in the bedroom. Like so many of the other women that he dated casually throughout college, Cindy had left him to date other guys. She broke up with him three times but invariably came back to him afterwards. Cindy had encouraged her friend Jill to date him when she was in one of those more serious relationships. Now Jill had him over to her place at least once a week. Their relationship was entirely sexual.\n\n\"Look, Denise,\" he said, looking into her eyes and holding her hand, \"I think you are just beautiful. You are a sexy woman, and I would love to be with you. You obviously know Cindy better than I do. If you and I see each other, and you guys are best friends, we couldn't flaunt it in her face. That would be cruel, and I wouldn't want to do that to her. I don't think you want to hurt her either.\"\n\nDenise nodded at this and squeezed Dana's hand. He clearly understood. She thought he looked so sexy at that moment. He was so understanding and thoughtful. Denise hadn't been sure before, but she definitely wanted him now. They paid for breakfast and left, walking together out to the parking lot. Dana stood close to her when they reached her car. He wrapped an arm around her and gently rubbed her back as he asked her how school was going this semester.\n\nDenise leaned up and initiated that first kiss. Dana managed to look surprised before he kissed her back. He was a very good kisser. They weren't tongue-fucking each other's mouths or anything like that. His lips gently sucked and nibbled at hers, stroking her mouth sensuously. His arms held her in a loose embrace as his hands gently caressed her back, stopping just above her shapely bottom.\n\nThey kissed in the parking lot like that for ten minutes before Dana gently disengaged. Denise's eyes were wild as she looked him over. She was on fire with her desire for him, and his shorts bulged prominently with his own arousal. She groaned softly.\n\n\"I wish we didn't live so far away,\" she said. \"I would love to continue this.\"\n\n\"Oh, didn't you know?\" Dana looked surprised, \"I got kicked out of my old place. I had to move. My new apartment is two blocks from here.\"\n\nNo sooner were they inside the door of the apartment than Denise was all over him.\n\nIt was not as though it was all an act; Dana wasn't manipulating these women intentionally to get what he wanted. He did think Denise was very sexy, and yet he was fond of Cindy. He figured Cindy would be back in his life and his bed as soon as her latest relationship ended. If not, if this guy turned out to be the serious relationship she was looking for, then he would be happy for her. Still, he would never have aggressively pursued Denise. He had flirted with her a bit, but nothing overt. Now, she was practically tearing the clothes from their bodies in the living room of his new apartment.\n\nDenise's honey blonde hair tickled his thighs as she eagerly sucked his cock. When he was getting dangerously close to coming, he gently pulled her up into his lap. She had magnificent breasts, easily a 'C' cup, but very firm. Her pale pink nipples were hard and she moaned as he started sucking them. Her soaked pussy slid eagerly along the length of his hard shaft, stimulating her clit and moistening his length. Dana looked down at Denise's completely bald pussy. He realized she probably got her pussy waxed at the same place as Cindy and Jill.\n\nDenise turned around and held the base of his cock as she guided it into her. They both groaned loudly as he started to spread her open. Once the head and first inch had worked inside her, Denise released his shaft and instead seized his thighs with both hands. Her ass was on full display for Dana's hungry eyes as he watched her puffy little pussy lips eagerly engulfing him. Like her nipples and pussy, her sphincter was a pale pink. It was nestled between two lovely ass cheeks. He softly squeezed and spread her cheeks, letting her control the pace as she took his cock inside her.\n\nSally was awakened by the loud moans of a woman. It sounded like it was coming from her living room, which didn't make any sense. She stumbled out of bed, confused and out of sorts as she left her room and padded quietly to the living room. She stopped in her tracks when she saw a naked woman, slightly bent over...was she really seeing this?\n\nSally had never as much as seen pictures of naked women\u2014or men, for that matter. She had certainly never watched pornography. Her eyes were open wide as she watched a thick cock slowly penetrating a wet pussy not ten feet away. She was behind the couch, slightly to the right side. She could just see the top of her roommate's head, but his thighs and cock were on full display, as was this naked woman's entire body.\n\nShe was frozen in disbelief, mute witness to the entire process. It took five full minutes for the entire length to work its way into that snug orifice. Denise began to work her ass up and down after that. She started slowly, groaning in pleasure as she was so thoroughly filled. She gasped when Dana teased her asshole with a moist finger. Denise wondered how he knew. Anal sex was her absolute favorite. She was soon taking deep strokes on his cock and wiggled her butt encouragingly as he sank his finger into her eager backside.\n\nSally couldn't believe what she was seeing. She also could not believe how her body reacted to the lascivious sight in front of her. Her pussy felt like it was on fire! It was also soaking wet, leaking juice down the inside of her right thigh. Her nipples throbbed against the soft material of her nightgown. Looking down, she could see them protruding against the cloth. She was suddenly very self-conscious and retreated on shaking legs to her bedroom. She closed the door softly and sat on her bed, still shaking like a leaf.\n\nShe could still hear the couple in the living room. They were actually getting louder and it made her tremble to hear it. Sally felt hot juices seeping out of her fuzzy pussy and lifted the hem of her nightgown to investigate. She had never masturbated\u2014it was a sin, after all\u2014so it was a real shock to her when her fingers tentatively touched her molten pussy and it just exploded in the first orgasm of her life.\n\nShe gasped out loud, practically seeing stars as she was overwhelmed by the sensations spreading from her throbbing clitoris and swollen pussy lips. Her entire body shook with the force of that climax, further stimulating her nipples as her breasts wobbled against the clinging gown. She collapsed onto her back, panting. She could not believe how amazing she felt, and yet she was powerless to stop her fingers as they continued exploring her tight, virginal pussy. Her hips bucked up in response, pressing her mound against her exploring fingers.\n\nThe sounds of wet, urgent sex continued to drift in from the living room. Bodies smacking against each other, delighted moans, and filthy talk assaulted her mind as she lifted and spread her legs. Two of her fingers were now inside her, eliciting new and powerful pleasures that she had never imagined. She was so tight around those two fingers, she thought, certainly there was no way that she would ever be able to accommodate the thick shaft she had just observed in her living room. Her drenched pussy lurched at the thought, and she was coming again.\n\nDana was rapidly approaching the point of no return. \"Denise, I'm getting really close,\" he groaned, \"Should I pull out?\"\n\n\"No!\" Denise replied, \"I'm on the pill. I want you to come inside me! Fill my pussy with your hot cum!\"\n\nDana groaned loudly as he came, which triggered another orgasm in Denise's suddenly flooded pussy. In the other room, Sally also climaxed as she heard them and furiously fingered her pussy. All three of them panted as they recovered from that intense coupling.\n\nDana stroked Denise's body as she lay back against him. He softly kissed her cheek and nibbled her earlobe, then whispered, \"That was just amazing. You are so sexy, Denise.\"\n\nDenise shivered. Then her eyes opened wide and she looked at him.\n\n\"You're still completely hard?\" she gasped out loud\u2014loudly enough that Sally could hear it clearly.\n\n\"Perhaps I should take your sexy ass to bed,\" Dana replied.\n\nSally heard them walking down the hallway to Dana's bedroom. She could not help herself. She had to see them again. She was carefully quiet as she once again emerged from her bedroom. She crept through the sunlit apartment until she could see through the open doorway of Dana's bedroom.\n\nDenise was on her back, her legs spread wide. Her ankles waved in the air crazily as Dana pounded his cock into her. Dana's back was to the door, and Sally was almost hypnotized as she continued to get closer and closer. At the doorway to Dana's bedroom, she was only three or four feet from the salacious sight of that thick cock driving in and out of an obviously soaking wet pussy.\n\nSally was overwhelmed again by the combined assault on her senses at that close range. The moist, slurping and smacking sounds, coupled with the moans and occasional passionate cries of \"Yes! Yes!\" overlaid the incredible visual stimulation. She could also smell the aroused pussy in front of her, as well as her own. Her nose also took in the unfamiliar smell of Dana's cum as it was forced out of Denise's pussy.\n\nShe shook and bit her lip as she watched Dana's buttocks clench and heard him moan, \"I'm going to come again.\" She could actually see, at that close range, as his balls throbbed and pulsed, and as his shaft swelled with each explosion. Denise howled and her thighs and ass shook when she felt herself once again being filled with hot cum. Sally retreated to her room after that, shaking as she pictured the pornographic scene over and over while stroking her pussy to multiple orgasms.\n\nIn the afterglow, Sally felt guilty. She had masturbated, and that was a sin. She had been assured, though, that it was a fairly minor sin. Still, she would have to be careful not to do that again. She smiled softly to herself as she thought, \"it could lead to dancing.\"\n\nDenise and Dana lay in the afterglow and enjoyed stretching languorously against each other. They kissed and fondled each other gently. Neither could keep the smile from their faces, nor could they take their eyes off of each other. \"We have to do this again,\" Denise moaned as she kissed him again. \"May I come back tomorrow?\"\n\n\"Absolutely,\" Dana replied, leaning into her body with his for another searing kiss.\n\nDenise left a little while later, kissing her new lover in the doorway of his bedroom before heading out the front door. She turned and caught him with his eyes glued to her ass, and gave her hips a playful shake before leaving. She felt positively giddy as she got into her car. Dana was everything she had been told and then some. She could not wait to be with him again.\n\nDana took a hot shower after Denise left. He stroked his soapy cock as he replayed the scene on the couch in his mind. When he finished his shower and dried off, he was once again rock hard. He hung up the towel to dry and walked stark naked out of the bathroom. He didn't even notice Sally sitting at the dining room table as he turned the corner into his bedroom, pushing the door of his room mostly closed out of habit.\n\nSally was still wearing her nightgown, though she had put panties on beneath it. She had expected to confront Dana and talk to him about his behavior. Instead, she watched him parade naked through the apartment. Her eyes were still wide in disbelief after he had disappeared into his room. She had seen the full, rampant length of his dick swaying in front of him. She couldn't believe all of that had gone into that woman's pussy. There was no possible way that could fit, she thought. It shook her when she realized what she was actually thinking.\n\nThere's no way my roommate's big, thick cock will fit inside MY tight little pussy.\n\nShe got up with a start, rushing back to her bedroom. She had just put these fresh panties on, and they were getting soaked with her juices! What was happening to her? She slid the panties down her legs and sat on her bed, spreading her thighs so she could look at her soaking wet opening. She intended to just touch it with her fingertips, to see how wet it was, but she couldn't stop there.\n\nSally was once again thrusting two fingers into her hungry pussy, biting her lip to stifle her moans of pleasure. She forced herself to hold still when she heard Dana moving around in the apartment. When she heard him go out the front door and lock it behind him, she let go and really worked her flooded little hole to a crashing climax. She cried out with pleasure at the overwhelming sensations. The entire time, she had been picturing the scene from earlier, in Dana's bedroom. Instead of that anonymous woman lying in his bed, though, she pictured her own body being taken by that thick dick.\n\nIn the afterglow of her orgasm she thought, \"That can never happen.\"\n\nSally only made a brief appearance at the observatory that night. She was tired. She had missed out on her normal afternoon nap time, and had felt out of sorts all day long. Since she was normally very quiet in class, nobody even noticed how distracted she was. She didn't feel she missed anything she should have noticed in class. However, she did notice for the first time how everyone else was dressed. Her conservative wardrobe, which was supposed to make her less noticeable, really stood out among her classmates.\n\nPerhaps Dana was right, she thought. Maybe she needed to rethink her choice of clothes. Not that she should display her body or draw attention, but it wouldn't kill her to dress in something a bit more casual. She was thinking t-shirts and baggy shorts would help her fit in better here. That would also be considerably more comfortable in the heat of the southern California afternoons.\n\nDana was out when she returned to the apartment that night. Sally showered the sweat from her body and carefully emerged from the bathroom, clutching her towel around her body. She was still alone in the apartment. She pulled on another soft gown and returned to the bathroom, hanging up the towels and brushing out her hair. She set her hairbrush back on the counter and brushed her teeth.\n\nShe kept glancing down at the hairbrush, and couldn't figure out what it was that kept drawing her attention. She blushed when it dawned on her. The handle of the hair brush looked like a small, stylized cock. Her pussy twitched at the thought of that handle entering her. It was about the same size as her two slender fingers pressed together, though it was significantly longer than her digits. She shook her head, trying to clear those naughty thoughts from her mind.\n\nShe finished brushing her teeth and flossed them before heading into her bedroom. It was with sheer astonishment that she looked down to see she had carried the hairbrush into her room. The brush clattered as she set it on her nightstand hastily, backing away from it to turn off her bedroom light before crawling into bed. She was really exhausted, she realized. She was sound asleep almost immediately.\n\nSally's dreams were haunted by sexual thoughts and images. Sometimes she was watching other people having sex, often very close up. The anonymous woman she had seen with Dana earlier in the day looked right at her and told her just how amazing it felt as she was being filled with that thick cock. Men she had met in school were looking at her hungrily, and she realized she was scantily clad. She was helpless to resist as these men undressed her and began licking, sucking, and fondling her body.\n\nSally had neglected to wear panties to bed that night. Her fingers were feverishly working her soaking pussy in time to the actions of the molesters in her dreams. She was squeezing and pinching her aroused nipples and moaning out loud. She didn't quite wake up fully, but she did climax four times in her sleep.\n\nAt four in the morning, she had one of those weird dreams in which she dreamt that her alarm was going off and that she was late. She reached out for her alarm clock on her nightstand. Her fingers closed on the cock-like handle of her hairbrush. She recoiled, rolling away from that sensation, still not awake. The hairbrush was still in her hand, now crushed beneath her left breast.\n\nShe moaned as she felt a hard cock being pressed into her breast, her erect nipple sliding along the shaft. She rolled back away from it, finding herself helpless on her back as the tip of that cock slid down the length of her body. She knew it was headed toward her virgin pussy, but there was nothing she could do to stop it. She pressed her thighs tightly together, desperately trying to protect her virginity.\n\nThe tip of the cock was teasing her clitoris, and despite her best efforts she felt her thighs weakening. More and more of the invader was gaining access, sliding through the folds of her soaking wet pussy. She moaned \"noooo\" weakly as she felt her little flower being opened up. Her thighs opened up, then, and she was sliding the plastic cock into her eager pussy. She shook in pleasure as her hand built up speed. Then she was jolted entirely awake by a fierce, sharp pain.\n\nShe had pierced her hymen.\n\nIn a daze, she looked down at the hairbrush protruding from her violated pussy. It took a few minutes for her to work out what had happened. She made her way to the bathroom in the darkened apartment, squinting at the bright light when she flipped the switch. She washed her juices and the trace of blood from the hairbrush and put it into the medicine cabinet.\n\nShe stripped off her gown and got into the shower, gingerly washing her pussy and the drenched insides of her thighs. Her pussy felt bruised. After the shower, she saw that her breasts were bruised, especially around the nipple of her left breast. She gently rubbed that area, and found it was extremely tender.\n\n\"My goodness,\" she thought, \"it has led to dancing. Even if only in my dreams.\"\n\nShe vaguely recalled some of the dreams, the anonymous men with their desires written all over their lust-contorted faces. She finally cleared it from her mind. She pulled her gown back on and padded back into her room. She knelt and prayed for forgiveness before she crawled back into bed. She slept fitfully until her alarm actually went off three hours later.\n\nWhen she awoke, she really needed to pee. She heard the shower running, and knew that Dana was home. She stood outside the bathroom door, hopping from one foot to the other until she knew she had to act or she would wet herself right there in the hallway. She knocked on the door.\n\n\"Dana,\" she gasped out, \"I am really sorry, but I have to pee. Now!\"",
        "\"It's not locked,\" she heard him reply.\n\nSally was terribly embarrassed, but she didn't really have a choice. She opened the door and rushed over to the toilet, raising her gown out of the way. She sat and relieved her bladder immediately. She desperately hoped that Dana couldn't hear her urinating over the sound of the shower. She was wiping herself clean afterwards when Dana poked his head around the shower curtain.\n\n\"Oh, sorry!\" he said. He blushed as he hastily pulled the shower curtain shut. \"I was going to ask you to please wait before you flush the toilet, so I don't get scalded in here.\"\n\nSally was mortified yet again. He had clearly seen her pussy while she was wiping it clean. She was a little tempted to flush the toilet anyway, to punish him, but it hadn't been entirely his fault.\n\n\"Alright, I won't,\" she said, loudly enough to be heard over the shower spray. She did wash her hands before leaving.\n\nOn her way to the campus that morning, Sally noticed a Goodwill store in one of the shopping centers. She pulled in and walked briskly through the store. They had lots and lots of women's clothes there. She was able to quickly select a dozen t-shirts that looked to be the right size for her. There was also a nice tan skirt that did fit her. She would have to find shorts elsewhere. She paid for those items and still made it to class in plenty of time.\n\nDana was having trouble getting going that morning. Not only had he clearly seen Sally's spread pussy as she cleaned it, but he could also see her breasts and hard nipples through her gown. He was rock hard, and masturbating in the shower did not make that go away. He was a little surprised that she was gone by the time he got dried and left the bathroom.\n\nHe called Denise, but his call went directly to voicemail. He was unaware that she had a morning class every other day. He left a brief message, being intentionally vague in case Cindy or Jill overheard it.\n\n\"Hey, I really enjoyed hanging out with you the other day, and wondered if you would like to hang out with me again. I'll be home until about four this afternoon if you'd like to call back. Have a great day!\"\n\nDana was a little hung over from drinking with friends the previous night. He had run into one of his former roommates at that party, and the guy was deeply apologetic. He wasn't the one who had dropped out and bailed on them, but he had at least known in time to retrieve his belongings from the apartment. They wound up getting fairly drunk, and crashed out there. It was a decent party, all around.\n\nDana had some eggs and toast with ice water and vitamins, not trusting his stomach to handle milk. He lay down and dozed off for two hours. The doorbell woke him. He was groggy as he answered the door, clad only in some snazzy looking boxer shorts.\n\nDenise pushed him inside the apartment and kissed him hungrily. She pushed the door closed behind her. She was wearing a blouse and skirt, which looked very stylish on her. She undid two buttons on her blouse, and her unencumbered breasts were suddenly exposed. She fed one into his mouth and growled into his ear.\n\n\"I can't stay long. I have to get back for another class right away.\" She licked his ear before adding huskily, \"I'm not wearing anything under this skirt.\"\n\nThey rushed to the bedroom. Denise lay on her back and Dana shed his boxers. They didn't waste any time. He was balls-deep in her hungry pussy and noisily fucking her within minutes. Neither of them heard the front door open.\n\nSally had been right behind Denise all the way back from the campus, without realizing it. If not for the randomness of two red lights that held her back, the two of them would have arrived at the same time. Sally was puzzled that the front door was unlocked, but as soon as she opened the door, she understood. She could hear the intense coupling from the front door. She closed the door quietly and before she could even get through the living room she saw Dana's clenched butt driving between eager, spread thighs.\n\nShe stood there in the living room, holding the two shopping bags from Goodwill in her hands. She couldn't take her eyes off of the sight of her roommate having sex again. They shifted positions on the bed, and that got her moving. She didn't want to get caught watching them. Once she was in her room, she dumped the shirts and skirt onto her bed.\n\nShe shrugged off her baggy, long-sleeved shirt and her oversized trousers. She pulled on the tan skirt and admired it in her mirror. It fit perfectly, the waist an exact fit and the hem falling to just above her knees. The material was heavy enough that it didn't fly up when she twirled her hips from side to side. It was light and breathed well. That made her notice that the crotch of her panties was soaked, just from the brief time she had watched her roommate and his girlfriend.\n\nShe peeled off the panties and looked in the mirror again. You couldn't tell the difference, she realized. She pulled on one of the t-shirts next. She was chagrined when she saw her reflection. The massive brassiere that she wore was clearly visible through the thin fabric of the shirt, and it looked horrendous. She tried on two other shirts, both darker than the first white one, but the lines of that undergarment stuck out below her ribcage against the cloth and it just looked awful.\n\nShe reached behind her and gradually undid all the clasps fastening the back of her brassiere, sliding it down her body. She looked at her reflection and once again shook her head in dismay. Her unfettered breasts looked absolutely enormous under that shirt, and her nipples pressed out obscenely. Just shaking her head in disapproval had her breasts shaking and wobbling all over her chest. Obviously that would not work. It would attract exactly the sort of attention she was trying to avoid.\n\nThe sounds of sex were still pounding through the apartment, distracting Sally as she pulled the shirt over her head and tossed it back on the bed. She looked critically at her reflection again, her big, heaving breasts drawing her eyes immediately. She imagined for a moment what would happen to her if she walked outside dressed like this. She shivered at that thought before laboriously putting her big, ugly brassiere back on. She put her baggy, long-sleeved shirt back on. It looked ridiculous over that smart-looking skirt.\n\nSally sighed sadly as she slid the skirt back down her legs. Clearly, she needed to find some reasonable bras that she could wear beneath a t-shirt. She hoped that didn't make her vain. She had never spent so much time worried about her appearance as she had the past two days. She put on a fresh pair of panties and her baggy trousers and quietly made her way back out of the apartment, leaving the front door unlocked behind her.\n\nNeither Denise nor Dana noticed. They were so intensely focused on pleasuring each other that the rest of the world ceased to exist for them. They groaned loudly and their bodies smacked wetly together as they enjoyed their brief, late-morning dalliance.\n\nSally was sorely disappointed when the first department store had nothing available in her size for bras. Oh, they did have a nice selection of exactly the sort of baggy khaki shorts she was looking for. They also had some really pleasant blouses to go with those and the skirt. Those were even on sale. A sales girl took her measurements after she had removed her brassiere. She just stared wide-eyed at the tape measure. Twenty-eight inch waist, thirty-eight inch hips...40EEE bra size.\n\nThe girl was embarrassed. She explained that she couldn't even order anything that would fit, let alone the sort of suitable garment she was seeking. She did have a couple of potentially useful suggestions, though. She might try the maternity department of another department store. Those bras were specifically designed to help conceal the enlarged breasts of pregnant women.\n\nShe might also try a specialty lingerie shop. The typical lingerie shops in malls would not carry anything in her size, but there was a place. She tried to keep a straight face as she wrote it down on a scrap of paper for Sally. The place was actually known more for the pornographic materials and sex toys they carried, but they did have a specialist tailor who worked there. She was an absolute genius at designing bras and lingerie for women of all sizes.\n\nSally looked at the sales girl's name tag. \"Thank you so much for all your help, Tina,\" she said. She paid for the shorts and blouses, and drove to the larger mall-based department store. She found a pair of maternity bras that would serve her purposes. They were not cheap\u2014they were more than four times as expensive as the bras she had seen elsewhere. They also didn't look particularly appealing, but they would be comfortable.\n\nIt was around two in the afternoon when she pulled past the \"lingerie shop.\" She found a parking lot a block and a half away and walked to the store. She stepped inside and took two steps toward the register before stopping in shock. The place was well-lit and wasn't cluttered. Everything was neatly displayed on shelves and wall racks. It was what was on display that stopped her cold.\n\nThe place was a regular porn emporium. Adult toys, dildos, vibrators, lingerie (some of it really outrageous and kinky-looking), adult videos, and a wide assortment of what looked like torture devices adorned the place. Sally's eyes were wide in disbelief. What on earth was she doing in a place like this?\n\n\"Can I help you?\" The sales girl smiled at Sally. She seemed to be sincere in her desire to help. Sally blushed as she approached the counter.\n\n\"I was told to ask for Karen,\" Sally managed to get out.\n\n\"Oh, I'm sorry,\" the sales girl looked genuinely sad. \"Karen...isn't with us anymore.\"\n\nSally was at a loss. \"Is there someone else who makes...custom bras?\" She was terribly embarrassed to even ask the question. She was even more mortified at the response.\n\n\"Were you looking for something in leather? Anthony makes some incredible leather pieces.\"\n\nSally saw some of those\u2014half of them didn't even cover the breast at all, just displayed and framed it in black leather. Her face felt hot, she was blushing so furiously.\n\n\"No,\" she said weakly.\n\nThe woman behind the counter was named Jasmine. She felt bad for having embarrassed Sally. She smiled reassuringly. \"Please, just feel free to look around. If I can help, just let me know.\"\n\nSince Sally was still wearing her drab, baggy outfit and had her breasts compressed in her oversized brassiere, her plight wasn't obvious. She looked down at her chest and blew out a big breath, trying to get her embarrassment under control. Finally she was able to speak clearly.\n\n\"I have dressed like this,\" she spread her arms, displaying her overly conservative outfit, \"most of my life. I have tried to avoid drawing attention to my breasts, because they are very large. Recently, though, I moved to San Diego. I realized I stand out like a sore thumb dressed this way. I wanted to be able to just wear t-shirts and shorts and fit in.\"\n\nSally lifted up her baggy shirt, revealing her brassiere up to the level of her breasts. After she felt she had made her point, she dropped her shirt back down.\n\n\"I have worn this type of brassiere because it flattens and conceals my breasts. It actually sticks out noticeably if I put on a t-shirt. I went shopping for 'normal' bras today, but they just don't have my size. A helpful sales girl at a department store recommended coming here and having Karen make something in my size.\"\n\n\"What is your bra size?\" Jasmine asked.\n\n\"Forty triple-E,\" Sally responded.\n\nJasmine's eyes shot open and she whistled. \"You would have a really tough time finding something that size. You may be in luck, though. We may just have a couple of bras that size. I'll be right back.\"\n\nIt took a while for Jasmine to return. Sally found her gaze drawn to the wide assortment of artificial cocks inside the glass display of the countertop. Some were barely larger than a lipstick. A few were impossibly large. Somewhere in the upper middle range, she saw a very lifelike plastic dick that looked remarkably like Dana's. She felt herself getting wet as she looked at it and licked her dry lips. There was no way, was there? Was she seriously considering buying that...thing?\n\nJasmine came out of the back of the store and motioned Sally over. Sally trotted over, glad to get away from that tempting fake dick.\n\n\"I found four of these bras,\" Jasmine said. \"You will definitely need to try them on, though.\" She unlocked a dressing room and handed her the bras.\n\nSally took a while to remove her own brassiere before she tried on the first of these custom bras. She had to admit the lacy garment looked amazing on her. Unfortunately, it did nothing to conceal her huge breasts. Instead, it seemed to emphasize them, which was not at all what she wanted. The next bra clearly did not fit; her breasts spilled right out over the cups. The third was a cutaway that didn't even hide her nipples. She didn't even try it on.\n\nThe fourth bra did fit, and it was a nude color that blended with her skin. It was also almost transparent, so her aureoles and nipples were clearly visible through it. Beneath a shirt, though, that wouldn't be a problem. The bra was expensive, but it would be worth every penny. Sally beamed at Jasmine as she held up that bra. \"This one is perfect. I wish you had another five of them.\"\n\nJasmine was pleased that she had managed to help this girl. She understood the plight of large-breasted women when it came to buying bras. She rang up the bra and smiled at Sally as she looked into her face. \"Anything else for you today?\"\n\nSally's eyes were drawn involuntarily down to the fake dick in the display case.\n\nAs she walked back to her car, she still couldn't believe she had bought it. Jasmine had even thrown in a free sample of lubricant to go with it. She set the bag on her passenger seat and shook her head as she looked down at the plain plastic. You wouldn't even know what was in there, she thought.\n\nSally went to two more stores, where she bought more panties and three more skirts. She was unable to find any more bras that were suitable. Three bras were not going to be enough to sustain her. The last place she had shopped she found an older sales woman who shared her plight. She confided to Sally that she had to buy all of her bras online, and even gave her three websites that she used.\n\nDana was eating a late lunch when Sally finally returned to the apartment. She carried several shopping bags as she came in the front door. Dana raised an eyebrow.\n\n\"Shopping?\" he said, \"I thought you were in class.\"\n\n\"I had a break in my schedule today,\" Sally responded. \"Look, Dana...\" Although she intended to confront him about having sex in the apartment, she hadn't a clue how to start such a conversation. She thought about it, and decided that confrontation could wait. Instead, she raised the shopping bags.\n\n\"I thought about what you said yesterday. I realized that I really don't fit in wearing what I do. I have dressed this way my whole adult life, trying to avoid attention. Here, though, I just draw more attention. I don't want to dress provocatively, or anything, but I did get some outfits that I think will be better.\"\n\nDana wasn't sure what to make of that. He did look forward to seeing what she would wear next, though. Sally spent several minutes in her room before she emerged wearing a blouse and baggy shorts. The shorts did not reveal much of her legs, but she did look like an entirely different person in that outfit. Her severe hairstyle did not fit with the outfit, though.\n\n\"Sally,\" Dana said, \"That outfit really looks good on you. You do need to do something about your hair, though.\"\n\nSally frowned at that and walked into the bathroom. She looked at her reflection in the bathroom mirror and had to agree. She needed to do something about her hair. She pulled the bun loose and instead let her hair hang in a ponytail. She ran her hairbrush through her hair until it was lustrous and shiny, hanging to her waist. It was a remarkable transformation. Dana sucked in a breath when he saw her.\n\n\"Wow,\" he breathed out, \"You look beautiful, Sally.\"\n\nShe blushed at the compliment. She wasn't really sure if that was the response she was hoping for. That evening, she opted for a baggy t-shirt to wear with the shorts. She did notice that she got many more looks than normal. As people approached and talked to her, she understood that it was only because she looked so different. People complimented her on her looks. They weren't openly lusting after her as she had feared so unreasonably. By the time her last class ended, she was happy and relaxed. She felt she actually fit in.\n\nIt was Friday night, so there were a lot of casual visitors to the observatory. Sally had learned that she wouldn't learn anything useful on those nights. She made her way back to the apartment.\n\nDana was not there when she arrived. Friday nights were always a time for him to party with friends. Tonight, that friend was Jill. Jill was somewhat orally fixated. They would spend this entire night locked in a 'sixty-nine' position in her bed, pleasuring each other with their mouths.\n\nSally fought with herself for hours before she finally opened the box and pulled out the dildo. She was surprised at just how lifelike the latex toy felt in her hand. If it had been warmer, she would have sworn she was holding a real cock. She dropped it on the bed at the thought. How had she bought this thing? Surely, it was evil to own such an obviously sexual object. She tossed it into her trash can.\n\nTwo hours later, she pulled it back out of the trash. She sighed at her weakness as she shoved it beneath her pillow. She tried not to think about it as she buried her nose in her books. She took a break from studying after four hours and ate a yogurt.\n\nAfter she had done that, she went online and spent an hour studying bras that might actually suit her. She eventually ordered six different bras from two different companies. She made sure that they could be exchanged if they proved inadequate. She saved the third website to her favorites, because they actually offered lower prices on all of the bras. However, they did not have any guarantees on the merchandise. Once she found some she genuinely liked, she could order more of them through that site.\n\nShe returned to her school studies for two more hours before showering and going to bed. She was exhausted and managed to fall asleep without touching the dildo. She had made sure to wear panties to bed, so she did not touch herself in her sleep. She slept through the night and awoke feeling refreshed for a change.\n\nShe checked her mailbox, and her day improved dramatically. Most of her grant money had finally come through. Even better, three of her corporate grants included a tax exemption certificate. The state of California would not be getting any of that money. Sally was almost gleeful as she wrote the checks that would pay off her credit cards. She paid the next three months' rent in advance.\n\nShe even treated herself to a decadent chocolate dessert for brunch.\n\nWhen she drove back to her apartment, she noticed Dana's car was in the parking lot. He was sound asleep in his bed, but had left his door ajar. Sally stood in his doorway and smiled as she watched him sleep. Then he rolled onto his side facing her, and his hard, throbbing erection was exposed.\n\n\"He sleeps naked?\" Sally thought as she looked at the obvious evidence.\n\nOnce again, she beat a hasty retreat to her own bedroom to avoid being caught. She lay in her bed, but couldn't get the image of that pulsing dick from her mind. Again and again she was picturing it opening that woman's pussy. She had seemed to really enjoy it. Sally felt her own pussy tingling and getting wet as all those sexual images flowed through her mind.",
        "She groaned in surrender then. She knew she had to try it, just to know if it was even possible. She raised her hips and slid the new shorts and panties down her legs. Her fingers found her aroused puffy little lips already soaked with her juices. She rose from her bed and got her hand mirror from atop her dresser, then lay back down. She reached under the pillow and her hand shook as it closed around the thick shaft of the waiting dildo.\n\nShe put the pillow up against the headboard of the bed so that she could recline against it. She could see her own aroused little pussy clearly in the mirror. It seemed far too tiny to take the fat head of the fake dick, much less the entire veiny shaft. She watched in fascination as she rubbed the latex knob between her glistening pussy lips. They seemed to open around the bulbous cock head as if eager to engulf it.\n\nSally couldn't believe how aroused she felt as she slid the toy up and down the furrow of her pussy. It looked so sinfully hot in that little mirror. She gasped when she applied a little more pressure and felt herself being spread open. It was actually going inside her! Not only that, but it felt absolutely amazing. She started to understand, as she slowly worked more and more of that fake cock into her, why people had sex. Never before had she understood the levels of pleasure that this simple act unleashed.\n\nHer mind felt like it melted a little when the thick head of the dildo first stroked her g-spot. Her mouth opened in a wide 'O' of pleasure and her hands shook. The deeper she drove the toy inside her, the better it felt. Sally once again pictured Dana's cock as it drove in and out of that anonymous woman's pussy. She tried to emulate that same motion with the artificial member.\n\nIt was a little awkward at first, but then she started to get the hang of it. The sensations were beyond anything she had imagined as the thick toy plunged in and out of her. She could only gasp as deep, thunderous orgasms wracked her body. She pounded the toy in and out of her clutching little pussy for a half hour.\n\nAfterwards, she was a bit tender down there from all that novel activity. The muscles in her legs and bottom were also a little sore from the unaccustomed exercise. Sally quietly made her way into the bathroom and washed the latex toy in the sink. She still marveled that the whole thing had actually fit inside her. She dried it off and returned to her room, stashing the toy beneath her pillow again.\n\nShe heard Dana moving around the apartment a bit later, and realized that she had walked to the bathroom and back without putting anything on her bottom. She could only shake her head softly at that. She pulled her panties and shorts back on and went out to see what he was doing.\n\nDana was completely drained after last night at Jill's apartment. She had sucked four loads of cum from him. He had never before had four orgasms in one night, and the intense way she pulled the semen from his body was just beyond belief. His balls actually ached as he gingerly made his way to the dining room table to eat lunch. It was nothing fancy, just a baloney sandwich and a bag of chips. He had a cold beer to wash it down.\n\nDana was surprised to see Sally as she joined him at the table. She really looked like a different person now.\n\n\"Hi, Dana,\" she said as she sat down, \"How are you today?\"\n\nDana suppressed a groan. He really was worn out, despite sleeping in. \"Alright, I guess,\" he answered, \"How are you?\"\n\n\"I feel really...different,\" Sally answered truthfully. \"I appreciate your candor. It has really made me think about things in a whole new light.\"\n\n\"You're welcome, I think,\" Dana said with a slight grin, \"I really didn't think I did anything all that special.\"\n\n\"Well, I appreciate it anyway,\" Sally said with a smile. She looked thoughtful then. \"Dana, I've been meaning to ask, are you planning to go to church tomorrow?\"\n\nDana was a little surprised. \"As a matter of fact, I was. I was going to meet my parents there and stay at their place after church for a family visit.\"\n\n\"If you don't mind, could I go with you?\" Sally asked, \"I haven't attended church here, and I don't know anyone else besides you and Pastor Julie. Honestly, I only met her once, so I'm not sure that even counts.\"\n\nDana looked at her and nodded. \"I would like that,\" he said, \"Plus, I'm sure my parents would love to meet you.\" Dana was thoughtful for a bit, and then almost blurted out, \"You know, I never thanked you for taking me in. You really saved my butt. Thank you, Sally. I really owe you for that.\"\n\nSally's smile was warm. \"I'm glad I was here for you.\" She then realized she had not shared her good fortune from earlier in the morning. Her eyes opened a bit wider. \"Oh! I totally neglected to mention it, but I got great news in the mail this morning. My grant money finally cleared on Friday, and I no longer have to pay taxes on most of it. I already paid our rent for the next three months.\"\n\nDana was stunned at that news. He couldn't have afforded to pay the rent on a one-bedroom apartment on his own. He was actually accumulating student loan debt while he attended grad school. His look was questioning.\n\nSally got up and brought her laptop to the dining room. She slid a chair next to Dana's and sat next to him, her thigh touching his as she brought up a spreadsheet detailing her finances. Dana went from stunned to blown away as he saw how organized and prepared Sally was. Her mind was out of his league. In fact, with her finances in order, she had no need to keep him around.\n\nDana was uncomfortable as he contemplated that reality. Sally was continuing to explain everything in a bright and cheerful manner. She stopped when she saw him looking at her with that expression.\n\n\"Dana, what's the matter?\" she asked.\n\n\"Do you want me to move out?\" he asked softly, \"You obviously don't need me financially anymore.\"\n\nIt was Sally's turn to be caught off-guard. \"No!\" she answered without thought. She colored slightly, but continued. \"I like having you as a roommate. I don't feel like I'm alone and helpless here. You have made such a difference in my life. It's true I don't need you financially, but that just means we both have more funds available to spend on other things.\"\n\nShe looked so amazing that Dana couldn't help himself. He leaned in and kissed her softly on the mouth. Sally's eyes shot open in surprise, but she didn't stop him. She didn't really kiss him back, either. After his eyes caught her expression, he gently broke off the kiss.\n\n\"I'm sorry about that,\" he said softly, \"I should have asked.\"\n\nSally shook her head, unsure what to say. Her heart was hammering in her chest after that amazing kiss. \"I've...\" she started, but then stopped. Her voice was hoarse as she finally managed to get out, \"That's the first time a man has ever kissed me.\"\n\nDana blurted out, \"Really?\" He immediately followed it up with, \"I'm sorry. Of course you are serious. You wouldn't make up something like that. I just...I had no idea. I feel awful for\u2014\"\n\nThen she was kissing him. She wasn't the polished kisser that he was, but her lips were hot and passionate as she leaned into him. They kissed for a good minute, and smiled hesitantly afterwards. Sally put her hand on Dana's forearm reassuringly.\n\n\"Thank you,\" she said softly.\n\nShe gathered her laptop and got up from the table, still smiling as she took it back to her room. Dana watched her go. You could really tell she had an excellent ass in those shorts, even though they weren't tight. He almost felt guilty for thinking it.\n\nDana finished his lunch and beer and cleaned up afterward. Sally hadn't emerged from her bedroom, but he hadn't heard her close the door either. He walked tentatively to her doorway and knocked on the open door. Sally was seated at her desk with her laptop open and three books spread around her. She looked up at him and smiled.\n\n\"Hey,\" she said, \"What can I do for you?\"\n\n\"I was just checking to see what you were doing.\"\n\n\"Just some particle physics and quantum mechanics,\" she answered indicating two of the books, \"Pretty basic stuff, really.\"\n\nDana snorted out a laugh at that. \"'Basic stuff' for you, maybe,\" he said with a smile. \"I just...I was worried you were mad at me, or that I freaked you out by kissing you earlier.\"\n\nHer smile softened. \"It was lovely, Dana. I just figured it was a spur-of-the-moment act. I don't think we should make a habit of it. Do you?\"\n\nDana thought about it and nodded in agreement. She really was smarter than he was. It wasn't even close.\n\n\"Thanks again,\" he said, \"I'll leave you to your homework, then.\"\n\nDana actually got to his own work after that. He did have a lot of projects ongoing, but all of them were long-term. As long as he showed some progress each week, his professors were happy to let him manage his own schedule. Only one of his classes had 'homework,' and that was only intermittent. Still, it couldn't hurt to get his projects ahead of schedule. He was three hours into his work when Sally knocked on his door.\n\n\"Hey,\" she said with a smile, \"Do you feel like going out for dinner?\"\n\nDana stretched and looked at his clock. \"That sounds great.\"\n\n\"Would you mind picking the restaurant?\" she asked.\n\n\"I know just the place,\" he responded.\n\nSally was a little surprised when they pulled into the parking lot. It was a Mexican restaurant, but it didn't look fancy at all. In fact, it looked run-down and cheap. She looked at Dana questioningly.\n\n\"I know, it doesn't look like much,\" he said, \"But trust me, this is one of the absolute best restaurants in town.\"\n\nHalf an hour later, she had to agree. The food was absolutely top-notch. The place had a homey, warm atmosphere inside. Everyone was not only polite, but they all seemed happy to be there and to welcome their guests to dinner. It was just a superb dining experience all around.\n\nAfter that dinner, they sat at the apartment and relaxed. They watched a bit of television before heading to their rooms to continue working. Dana was surprised at how quickly the time had passed. He also surprised himself at how much work he got done. Sally surprised him even more when she returned to his bedroom door. \n\nShe was wearing her nightgown. She was unaware that he could see right through it. She wasn't even wearing panties beneath the soft garment. Her puffy pussy lips, thin patch of pubic hair, huge swaying breasts, and hard nipples were all clearly displayed. Dana somehow managed to maintain eye contact while enjoying her gorgeous body in his peripheral vision.\n\n\"What time does church start tomorrow?\" she asked from the doorway.\n\n\"Eleven o'clock,\" Dana responded. \"Would you like me to drive you?\" He winced inwardly at his choice of words.\n\nSally cocked her head, which did really distracting things to her unfettered breasts. \"I thought you were going to visit with your family after church?\"\n\n\"You could come along for that,\" Dana said, then grinned conspiratorially, \"I could use you as an excuse to get out of there if it gets too boring.\"\n\nSally laughed at that, again causing her breasts to wobble and bob. \"That sounds great. Good night, Dana.\"\n\n\"Good night, Sally.\"\n\nHer ass swayed beautifully as she walked away. Dana was hard as steel after that display. It took him a while to get back to concentrating on his work.\n\nSally turned off her light and lay awake in her bed for a half hour. She kept smiling as she thought about Dana kissing her. She knew that she would not get to sleep soon. She was eager this time as she pulled her new favorite toy from beneath the pillow and buried it in her wet pussy.\n\nThe next morning, they were both up early. They shared breakfast, making omelettes and toast. Sally was still blissfully unaware of the show she was giving as she jiggled around in her nightgown. When she bent over the dining room table to set down the silverware, it took all of Dana's self-control to hold back from taking her right on the spot. The gown rode up and presented such a lush target. He was likewise unaware of the show he was giving her as his hard cock presented a delicious bulge in the front of his boxer briefs.\n\nThey managed to contain their hormones, taking turns showering and preparing for church. When they emerged from their bedrooms dressed for church, they looked like completely different people. Dana wore a dress shirt and tie, his dress slacks held by a shiny leather belt. His black dress shoes were polished. Sally wore a long, conservative dress. It was pretty, but it was definitely not revealing at all. It did emphasize the loveliness of her face, particularly with her hair in a ponytail as she now wore it.\n\nThey made a lovely couple as they headed for Dana's car and drove to the chapel. Dana's parents were indeed delighted to meet the young woman who had taken in their son. She carried her well-worn Bible lovingly, and embraced the familiarity of the service. Pastor Julie gave a stirring sermon. Sally joined in singing the familiar hymns with an angelic voice. Dana was just blown away by a radiant Sally in her element.\n\nHe had never really believed in angels before. He was convinced now that he was living with one.\n\nAfter the service, they talked briefly with Pastor Julie. She, too, was overwhelmed by Sally. At first, she didn't even recognize the beaming young woman. When she was introduced to Dana, she managed to conceal her surprise. She wasn't certain that the two of them cohabitating was a great idea, and she was already party to it. Still, Sally looked happy and comfortable in her congregation. Dana seemed committed to becoming a regular with that influence in his life.\n\nGod works in mysterious ways, Pastor Julie thought as she watched them walk away.\n\nThe rest of that Sunday was remarkably comfortable for both Dana and Sally. They both felt right at home with Dana's family. His younger sister was in college, and his three younger brothers were in high school and junior high. This weekend everyone was home, and happy to have Sally with them.\n\nDana's father took him aside briefly.\n\n\"Son, you and Sally aren't...?\" he sort-of asked.\n\n\"No, Dad,\" Dana chuckled in reply, \"This girl is way out of my league.\"\n\nDana's father bristled at the thought. He had seen some of the amazing young women his son had been with, and he was proud of his academic accomplishments. \"Dana, I can't imagine that's true. You are being hard on yourself if you really believe that.\"\n\n\"You don't understand, Dad. This girl...she will give Einstein a run for his money. She's that smart. She's actually making money\u2014good money\u2014while she's going to school. Believe me, if she was interested in me, she would be settling. Not that I would complain!\"\n\nThere was a long pause then. Dana's father smiled at his son. \"It sounds to me like you are finally inspired to kick your game up a notch! Good luck, Dana.\"\n\n\"Thanks, Dad.\"\n\nIn truth, Dana was in no hurry to change his lifestyle in the hope of dating his roommate. He was happy, and didn't want to ruin it. If his parents were happy to see him with this girl, that was fine. It would keep them from asking questions they really didn't want answered.\n\nDana's family felt comfortably familiar to Sally as well. She enjoyed helping Dana's mom prepare lunch for the family, and enjoyed talking with his sister. She felt welcome right away. It was a nice change from her life of isolation on campus and in her apartment prior to Dana's arrival in her life.\n\nLate that afternoon, they said their goodbyes and headed home. When they stepped inside the apartment and closed the door, Sally impulsively kissed Dana.\n\n\"Thank you so much for today,\" she said after breaking the kiss. \"I really enjoyed meeting your family.\"\n\nDana realized then that he had not introduced any of his recent girlfriends to his family. He had to wonder if Sally was the first girl he was proud to bring home to his mother. It gave him pause.\n\nSally had gone to her room to change while he stood in thought. He shrugged and went to his own room, emerging in a comfortable pair of shorts and a tank top. Sally was once again in a new pair of shorts and a t-shirt. This shirt was a little tighter than the ones she had worn earlier. It was white, with a cartoon Tasmanian devil on the front. Dana tried not to stare at her breasts.\n\nSally plopped down on the couch with her Bible in hand, flipping to the section that Pastor Julie had referenced at the beginning of her sermon. She read aloud to Dana, and then he found himself sucked into a religious discussion with her. If he thought she was out of his league before, he felt hopelessly out of his depth now. She was patient with him, though, and seemed eager to answer his questions.\n\nIt was dark outside when they finally concluded their discussion and called it a night. As Dana lay in his bed, he felt as if he had learned more in that discussion than he had in the last three years of college. Well, almost. What he had learned from the young ladies in his life counted as an education entirely on its own.\n\nSally prayed fervently that night before crawling into bed. She fell asleep with a smile on her face. It had been such a good weekend. She didn't even think about masturbating that night.\n\nMonday morning saw a return to their normal routine. Sally grabbed a quick breakfast before heading off to school. Dana slept in late, and then called Denise. An hour later, she came over eager to join him in his bed. Once again, she wore a khaki skirt with nothing beneath it. She brought a treat with her this morning: a bottle of silicon-based anal lubricant. Dana was very deliberate and careful as he prepared her tight asshole. They both enjoyed the process of gradually working his thick dick into her willing bottom.\n\nBy the time Sally returned from her morning class, she entered the apartment to witness Dana vigorously driving his cock into the anonymous woman from behind. She would have snuck by to her own bedroom, but the woman's voice stopped her in her tracks.\n\n\"Yes! Oh, your cock feels so good in my ass! I'm coming again! OHH!\"\n\nAt first, Sally thought she couldn't have heard that right. She softly crept closer to Dana's open door. Her eyes were open wide when she saw the truth. He was indeed driving his thick cock into her asshole! Sally was genuinely shocked. She fled to her bedroom and shook as she sat on her bed.\n\nShe had thought there were limits to Dana's depravity, but sodomy! Here, under the roof of their home, he was practicing that abomination! She just couldn't believe it. She didn't want to kick him out, but this seemed too awful to overlook. They had enjoyed such a nice weekend, too. After their spiritual discussion the night before, she felt betrayed by this basest of sins.\n\nShe couldn't block out the sounds coming into her room. After a short while, she started to realize that it was only the woman's voice she was hearing. Evidently, she was the one who was really into sodomy. That seemed just inconceivable to Sally. Why would a woman want to have that thick cock in her ass, when it felt so amazing in her pussy?\n\nShe recalled, then, that just a few days ago she wouldn't have thought that cock would even fit in her pussy, and she hadn't the slightest clue how amazing that would feel. She hesitated to reach the conclusion...what if it felt even more amazing in her ass? Maybe this woman just knew something else that Sally didn't.\n\nThe woman was far more vocal now than Sally could recall her being before. She seemed to be having amazing and loud orgasms with Dana's thick dick filling her ass. Sally licked her lips. Was she really considering this? Sally reached up beneath her khaki skirt and slowly slid her panties down. It took her a moment to find the lubricant sample she had gotten with her toy. She knew her bottom was clean from her shower earlier.",
        "She was a little shaky as she got her hand mirror and watched her fingers gently work the lubricant into her tight sphincter. She had to admit, it did feel good. Her pussy was soaked at the erotic sounds coming through the apartment walls. Sally shivered as that first lubricated finger worked its way inside her bottom. It seemed she was far too tight to take more than that.\n\nShe contented herself with slowly working that one finger in and out. After a while, though, she felt the little hole loosen up just a bit. She was able to tentatively work in a second finger. That actually felt far more intense. She was beginning to understand the attraction. It didn't take nearly as long to go to a third finger. In the mirror, the sight of her asshole being spread open like that just looked incredibly arousing. Her pussy was actually being stimulated in the process, and she shook as her first anal climax tore through her body.\n\nSally had to bury her face in her pillow to keep from screaming out loud. Oh, she had no idea! This was simply amazing. Sally actually felt badly for having misjudged Dana's anonymous girlfriend. She couldn't swear that it was better than having that cock in her pussy, but it was pleasure she had not imagined. She pulled out her toy and coated it with the rest of the lube sample.\n\nShe was actually working that thick cock into her ass. It was just amazing. Her eyes rolled back in her head as more and more of the latex dildo opened her eager backdoor. She had just over half of it inside her, stroking it in and out, when she felt it begin to burn a little. She slowly pulled it out of her distended bottom and looked at the toy. It was almost completely dry. She needed more lubricant.\n\nSally sighed in frustration, and then realized that the apartment was silent. In fact, it had been silent for a while now. She listened intently at her door before slowly opening it. She didn't hear anyone. Evidently they had finished having sex and then left. Sally suddenly thought, \"They must have had lubricant. There's probably a whole bottle of the stuff in Dana's room. Perhaps I could borrow just a little bit, and then I can finish what I was doing with my toy.\"\n\nShe tiptoed into Dana's room, and there was nobody there. On his bedside table, though, was the bottle of lube she had hoped to find. She picked it up quickly and squirted some onto two fingers, promptly working it into her ass. Oh, this was the good stuff! It was much more slippery in her eager bottom than the free sample had been. A noise made her freeze.\n\nThe bathroom door had opened.\n\nDenise had left the apartment, but Dana had only gone to the bathroom. He was now approaching his bedroom.\n\nSally panicked. The only thing she could think to do was dive under the covers in Dana's room and hope he didn't notice her. It was foolish, really. Even more foolish was the fact that she failed to even get her body completely covered before she heard him walking in. She froze in place, with her head buried under Dana's pillow.\n\nSally didn't realize it, but her bottom was sticking out from beneath the covers. Dana looked into his room, and saw that sexy, glistening little asshole, the khaki skirt pushed up and exposing those sexy cheeks. He just naturally assumed that Denise had not left, and that she was ready for more. He had just finished washing his cock in the bathroom. He smiled as he reached for the lube and applied a fresh coat to his renewed erection.\n\nSally felt him climb up on the bed and touch her bottom. Her heart sank as she realized she had been caught. Before she could say anything, though, a second hand squeezed her other cheek. \"Oh my goodness, he can see my ass!\" she thought to herself. She was mortified again. How could she possibly explain...wait, what was that?\n\nHer eyes opened wide as she felt the wet, hot tip of Dana's cock pressing into her exposed asshole. The spongy, rubbery head of the real cock felt far more intense than anything she had experienced as it opened her sphincter wide. She gasped in disbelief, and then groaned as the meaty head slipped inside her.\n\n\"Oh, damn, Denise,\" he groaned from behind her, \"Your ass is so tight!\"\n\nSally realized then that perhaps she wasn't caught. It was still a foolish thought, but it caused her to hold still as he started sliding his thick shaft into her well-lubricated little hole. She tried, but couldn't stifle her moans of pleasure as he started sliding in and out. It was unbelievable, she thought, this is how the real thing actually feels?\n\nDana was surprised at how tightly her ass was gripping his cock. He thought that she must be clenching down on him intentionally to heighten his pleasure. It was working. He started fucking her faster, working his way deeper with each thrust. Her sexy ass bucked back into him, and soon she was taking his full length with each stroke. Her grunts and moans were so damned sexy. He could feel her pussy, soaking wet against his thigh, as he took her ass.\n\nHe slid his right hand down her ass cheek and slid two fingers into her fuzzy little pussy. She gasped out loud at that. He felt her tight little pussy clamp down on his fingers as she came. His eyes shot open when the truth hit him. Denise kept her pussy waxed smooth.\n\nIt was Sally in his bed. He was having sex with his angel of a roommate. He was fucking her ass!\n\nDana could not begin to fathom how she got there, or why her ass was lubricated and prepared for him. He wasn't about to stop and ask any stupid questions. His cock swelled even larger, impossibly turned on in that moment of realization. Then it erupted in her bowels, causing her to howl out loud for a brief, precious moment.\n\nHe could not peel his eyes from the salacious sight of his shaft bucking in orgasm in her sweet little hole. Her pussy was soaking his fingers with her juices as her own orgasm caused her body to shake uncontrollably. He barely softened at all as the last of that load drooled out of the head of his cock and coated her insides.\n\nHe knew she would be mad. She might even kick him out of the apartment, and he would deserve it. He determined he would enjoy her tight asshole for as long as possible.\n\nSally gasped in disbelief again. Dana's cock felt even bigger and harder. It began to renew its urgent thrusts into her sensitive bottom. He was soon fucking her hard, causing her entire body to quake with the force of his deep thrusts. She came three more times, one leading right into the next nearly without stop, and then she had a bone-shaking final climax when she felt him erupting deep inside her a second time.\n\nDana shook helplessly as his balls were drained by the clutching little asshole of his sweet roommate. He recovered enough to whisper, \"That was amazing, baby. Just the best ever. I'm going to go wash up real quick and then I'll be back.\"\n\nHe was tempted to plant a kiss on that amazing backside, but instead made his way shakily back into the bathroom and started the shower. He listened at the bathroom door and smiled to himself when he heard Sally padding quietly back to her room. He stepped into the shower, then, and washed his body clean.\n\nDana dressed and left the apartment after his shower, so that Sally would have the chance to use the shower. When she heard him lock the apartment door from outside, she did exactly that. She showered quickly, amazed at the quantity of semen leaking out of her well-fucked behind.\n\nDana actually had to be back on campus, so they didn't see each other that afternoon.\n\nSally had her evening classes, so she wasn't back when Dana returned that evening. He left the apartment to meet up with friends for drinks. He wasn't there when Sally returned and went to bed.\n\nIt wasn't until the next morning that they finally ran into each other again. Sally emerged from her room, wearing only her nightgown. Dana was sitting at the dining room table, and couldn't take his eyes off her. Sally finally realized the truth about her soft, comfortable night gowns. They were virtually see-through at a distance. She knew then that she was showing him everything.\n\nThen she noticed the guilty look in his expression and was shaken by another truth. He knew it was her in his bed yesterday. He had fucked her in her virgin asshole, knowing full well it was her.\n\nDana was shocked when she walked right up, pushed his chair back, and sat in his lap facing him.\n\n\"Look, buster,\" she said sternly, \"We need to get this very clear between us. You took my first kiss, and you didn't even ask.\" She kissed him hard on his mouth, leaving him gasping. She wiggled her ass on his hard cock then, pressing it between her cheeks.\n\n\"Then, you fucked me in my virgin ass, and you didn't even ask.\" She leaned her face forward, and her voice was husky in his ear. \"Before you even think about fucking my tight, virgin pussy, you'd damned well better ask first!\"\n\nShe pulled her face back, and the intense look in her eyes caused Dana to swallow heavily. Damn, she looked so hot! His mind reeled as her words reverberated in his head, and his eyes shot open.\n\n\"You\u2014you're a virgin?\" he whispered in disbelief. \"Nobody had ever...?\" He swallowed again, unable to forget how incredible her tight little asshole had felt as his cock had slid inside it.\n\nShe shook her head softly and cocked her head. It was clear she was waiting for him to say something, but Dana couldn't figure out what it was.\n\n\"I'm...sorry?\" he asked.\n\n\"For what, exactly?\" she countered.\n\n\"That I didn't ask you,\" he managed. \"I should have, of course.\"\n\nHe stopped then. It was clear from her expression he just wasn't getting it. Then his eyes shot open as he finally got it.\n\n\"You want me to fuck your virgin pussy?\" he blurted in disbelief.\n\nSally sighed and slid out of his lap. \"Close enough,\" she murmured, pulling him to his feet.\n\nDana stood at the doorway to her bedroom, staring in astonishment as she lifted that flimsy nightgown over her head and let him feast his eyes on her incredible body. She felt an incredible sense of power and purpose as she watched his reactions. He was practically drooling as she hefted her heavy breasts and held them toward him.\n\n\"Do you like my breasts?\" she asked softly.\n\nHe nodded vigorously and swallowed.\n\n\"They're amazing,\" he breathed.\n\n\"You're the first one who's ever seen them,\" she whispered. \"Do you want to touch them?\"\n\nDana nodded eagerly and stepped forward, not trusting himself to say anything intelligent. Instead he filled his hands with her massive boobs and bent to suck her throbbing right nipple.\n\n\"Oh!\" she gasped in surprise. \n\nHer knees trembled and pleasure shot through her sensitive nipple and both breasts as Dana squeezed and kneaded them. She had no idea how good that would feel, and his hot, wet mouth on her tingling nipple felt simply amazing! Her legs nearly gave out beneath her when he released her nipple with a wet slurp. As soon as his lips closed on the other one, she shuddered and reached out to grab his shoulders.\n\n\"Please!\" she muttered, shaking her head. \"I need to lie down. I had no idea how intense this was going to be!\"\n\nDana nodded and stood upright. He watched her turn and crawl into the bed, and then it occurred to him that he was overdressed. Sally watched and shivered as he peeled off his shirt and slid his shorts down his legs. She stared at his rampant cock and licked her lips nervously. Once again, she could scarcely believe that big, thick thing would fit inside her.\n\nThen her eyes shot open as she recalled the previous afternoon. Not only had it fit in her tight backdoor, but it had felt incredible in there! She trembled as she wondered how it would feel in her pussy. Then she swallowed as he slid into her bed and his body slid up hers. Another gasp shot out of her throat as his lips once again found her sensitive nipple and his tongue teased it lightly. Then he sucked in more of her breast, and her eyes rolled back in her head.\n\n\"Ohhh! Oh my!\" she groaned. \"That feels incredible!\"\n\nDana went back and forth between her breasts three more times, taking his time and savoring every second of this first extraordinary experience. His dick was throbbing and he knew it would feel incredible, but he remembered to pull back and ask this time.\n\n\"Sally, may I please slide my hard cock into your sweet little pussy?\" he asked softly, looking right into her eyes.\n\n\"Yes!\" she gasped, nodding her head eagerly.\n\nHer mouth shot open when she felt the thick tip spreading her open. It felt so hot! It only got hotter after that, as she felt her sensitive little lips spreading around the thick invader. Dana went slowly, staring down in disbelief as her wonderful, tight little virgin pussy welcomed his throbbing dick. He was only slightly surprised that she didn't have a hymen there, but that was a relief, really. He had worried about hurting her.\n\nInstead, she moaned deliriously as her drenched little pussy spread open and took every inch of his rock-hard dick. Her legs spread wide as she surrendered her virginity to him. Dana couldn't believe any of this was happening, but it felt phenomenal. He shook his head and pulled slowly back before pushing his entire cock back inside her.\n\n\"Oh, yes!\" she moaned. \"That feels so good, Dana!\"\n\nHe moaned in response, and enjoyed three more deliciously slow thrusts. Then his eyes abruptly shot open.\n\n\"Wait\u2014Sally, are you on the pill?\" he asked.\n\nShe shook her head, but did nothing to stop him from continuing. \"Of course not,\" she replied.\n\nHe let out a groan and looked down once more, admiring her puffy pussy lips spread around his shaft before he slowly started pulling his dick out of her.\n\n\"Sally!\" he groaned. \"We can't have sex without protection. If you get pregnant now, it could ruin everything!\" He could see she wanted to argue, so he sighed. \"Sally, having a child out of wedlock is a sin. You know it. I know\u2014we aren't supposed to use birth control\u2014but think about what is best for both of us.\"\n\nShe sighed. \"You're right. I suppose I will need to get onto birth control. Do you have any condoms?\"\n\nAt that point, she was already sitting up and sliding to the edge of the bed.\n\n\"No, I don't,\" Dana growled in frustration.\n\nHe was confused again when she gently took his arm and guided him from the bed. He followed as she led the way to his bedroom. When they got to his bed he shook his head again.\n\n\"Sally, I told you, I don't have any condoms,\" he repeated.\n\nShe smiled at him and patted his cheek.\n\n\"I know,\" she said. \"That's why you'll just have to fuck my ass again, instead.\"\n\nDana blinked as he watched her pick up the bottle of lube. She hummed happily as she prepared her asshole for him once again. Then she moaned out loud as her roommate and new best friend fucked her ass deep and hard. It was even more incredible when he flipped her over, taking her ass and sucking her nipples at the same time! Her entire body arched and she cried out loud as she felt him erupting deep inside her once again.\n\nAfterward, she kissed him eagerly and marveled at how amazing the entire experience had been. Then her eyes shot open when she felt him thrusting into her again.\n\n\"Already?\" she squeaked.\n\n\"Yes ma'am,\" he replied. Then his eyes shot open and he stopped. \"Oh! Sally, may I please fuck your sexy ass again?\" he asked sweetly.\n\n\"Yes!!\" she cried out, wrapping her legs around him and pulling him urgently back into her.\n\n* * *\n\nHe fucked her asshole in a variety of positions for the next hour. Dana surprised himself with his control, and he managed to go that entire time before he finally cried out and came inside her again. Afterward, the two of them lay together panting and exploring each other tenderly in his bed. They kissed and whispered and held each other.\n\nSally giggled when he kissed his way down her body, but then her eyes and mouth shot open in stunned disbelief when his talented lips and tongue found her sensitive clitoris. She had never imagined how intense that would be! After a particularly loud outburst, she shoved her forearm between her lips to keep from screaming out loud again. Dana just smiled up at her and kept right on licking and sucking.\n\nBy the time he stopped, Sally had lost track of how many spectacular orgasms she'd had. It was beyond belief! She shook her head and stared down at him in wonder.\n\n\"That was...that was...\" she panted helplessly.\n\n\"That was wonderful,\" he finished for her, sliding up her body to kiss her lips. \"You taste divine, Sally. I can't wait to do that again.\"\n\n\"Wow,\" she breathed.\n\nA little while later, Dana suddenly snapped his fingers.\n\n\"Oh! I meant to ask you earlier,\" he said.\n\nShe looked up at him nervously, fully expecting him to ask her to do some other sexual act she'd never heard of before. By that point, though, she expected she would enjoy it. She just wasn't prepared for his actual request.\n\n\"There's a church dance this weekend,\" he said. \"Would you like to go with me?\"\n\nHe couldn't for the life of him figure out why she laughed so hard she fell off the bed."
    ],
    "authorname": "LexxRuthless",
    "tags": [
        "roommates",
        "big tits",
        "first time",
        "ass play",
        "college student",
        "first time anal",
        "room mates",
        "masturbation",
        "virgin"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/it-has-led-to-dancing"
}