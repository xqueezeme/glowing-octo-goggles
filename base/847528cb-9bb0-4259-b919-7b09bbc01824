{
    "title": "The Bra Salesman Ch. 05",
    "pages": [
        "Thanks to all who have written, commented, and voted. This took me a little longer than I thought to complete, since I decided to split the next story into two chapters (this and the next one). I hope it'll be worth the wait! :)\n\nChapter 5: Three's a Crowd\n\n\"Just hear me out, John. I promise I can make this work. You just need to...\"\n\n\"Goddamnit, I said no!\" Jesus Christ, Dave, you ought to be down on your fucking hands and knees in gratitude for ignoring my better judgment and agreeing to let you come back to Tasha's for another night and not throwing your sorry ass out of this whole scheme. But I swear if you keep asking me about that stupid fucking duffel bag you're carrying, I'm going to rip it from your hairy-knuckled hands and knock you across your head in with it. \n\nBut of course Dave won't fucking drop it, \"Come on, just take one look and you can...\" Oh my god, will you please stop talking? All day long he has been telling me about the shitload of money he spent at a sex shop several blocks from work and how fucking awesome it would be to use all that crap with Tasha. If you think all that silicone and polyethylene is going to somehow improve fucking a woman with naturally large breasts, then please feel free to take your toys and go home.\n\n\"Dave! Stick to the plan! Whatever sex toys you have in there, we don't need them. The plan is working, so don't complicate it and fuck it all up.\" Last night was great, and Tasha believed the whole Dr. Cooper shtick. In fact, she was so worried about having a relapse with her body getting clenched that she begged both of us to come over again. So what we need to do is solidify the scheme for now before we start fucking around with it. \n\n\"John, hear me out...\" Holy shit, we are almost at Tasha's door, you fucking moron.\n\n\"Albert! My name is Albert! And that is exactly why I don't want you fucking things up with your... whatever is in that bag. How about you remember my fake name and THEN we'll try using your little goodies there. Ok?\" This is exactly why I regret bringing Dave into this. One moment of weakness yesterday and now I have to deal with all this shit. \n\n\"But we explained to her why I call you John, so there's no need...\" Take a deep breath, try to relax. Breathe. Breathe. I need to find some fucking inner peace before I fucking crack his head open. All I want is simply to con a large-breasted woman into sucking my cock repeatedly without listening to a bunch of whining. I mean really, is that too much to ask?\n\n\"We got lucky, Dave, so shut up and let it go.\" Ok I admit, Dave pulled out some amazing bullshit last night, but I don't want that to go to his head and him getting the idea that he can do and say anything he wants now. Last thing I need is an-overweight loose cannon unleashed in all this. \"Stick to the plan for now, and in a few days, we can think about how to use whatever it is you've got there. Got it?\"\n\n\"Fine.\" Yeah yeah, pout all you want, Dave. I knock on the door and try to ignore the scowl on Dave's face. A few seconds later, Tasha opens the door looking as lovely as ever. And by that, I mean her massive tits were being held in place by a thin purple-lace bra that barely concealed her nipples. As many times as I have convinced this unnaturally dim-witted woman to wear little to no clothing, I never ever get tired of seeing her luscious body. \"Hello there! Thank you so much for coming.\" Oh, it is I who should thank you in advance for my cumming.\n\nDave pipes in, \"Happy to be of service, miss!\" I don't like this. What little I know of Dave is that when he wants something, he really bitches and moans about it until he gets what he wants. Or fired or slapped in the face or thrown out, which from the stories he tells seems to be by far the most typical ending. And now that I see the hand holding his duffel bag twitching and making the bag rock back and forth, I realize this shithead is not going to stop.\n\n\"What do you have in the bag?\" Shit, that's what he wanted. I see that big goofy smile slide across his face.\n\n\"Actually,\" he begins with a self-righteous tone that only takes three syllables for me to find irritating, \"as it happens....\"\n\n\"Nothing!! Nothing we need tonight!!\" I know, I barked that statement a little loud and a little fast, and both Tasha and Dave look at me with a WTF stare on their faces. Ok, calm down. Breathe. Breathe. \"What I mean is, we like to be prepared for anything, but our normal regimen of therapeutic exercises should suffice for tonight.\" \n\n\"But we do have some other treatment options, if you're interested.\" Dave, I swear you need to fucking let this go.\n\n\"Dr. Cooper, I think it's best if we just do our routine therapy tonight.\"\n\n\"I think we should let the patient decide.\" Are you fucking shitting me here?\n\n\"I thought we already agreed on the treatment plan.\"\n\n\"Maybe we should change it.\"\n\n\"Maybe we shouldn't.\"\n\n\"Maybe we ought to consider changing the plan for a better experience.\"\n\n\"Maybe you ought to leave before I change your face.\"\n\n\"Maybe you should come over here and try to make me.\"\n\n\"Um, doctors?\"\n\n\"Don't think that I won't!\"\n\n\"I'd like to see you try!\"\n\n\"Um, are we still talking about my therapy?\" Tasha quietly says. Dave and I give each other a look that says \"there's an almost-naked gorgeous woman with large breasts standing in the room waiting for the two of us to give her some intensive therapeutic exercises that involve us putting our cocks repeatedly into her mouth and pussy, so let's save this until later,\" y'know, that kind of look. Breathe. And I focus on the source of inner peace within me. At least I will, right after I knock Dave's teeth out of his stupid, fucking skull.\n\n\"I apologize,\" I say as I walk towards Tasha, \"sometimes Dr. Cooper and I disagree on certain minute aspects in devising our therapeutic design. Thank you for your patience, now let's start our intensive therapeutic exercises.\" And by that, I mean fuck that amazingly stunning body of yours continuously until we're all too exhausted to stand. \n\n\"So,\" Tasha says nervously, \"I was talking to one of my neighbors about your therapy,\" crap, this can't be good, \"and she said that it sounded like you all were just having sex with me.\" Yeah, no shit. \"So... I mean, I don't want to stop these exercises exactly, I just... I mean, I guess I don't really understand how all this works.\" Ugh, what would work is if you would stop asking all these questions so that I don't have to rack my brain coming up with more lame excuses.\n\n\"She's crazy, don't listen to her! Let's just do this!\" God Dave, you are as sensitive as a cinder block, and with about as much personality as one too. I try to give him an evil-eye stare that will get him to shut up, but he's too busy trying to figure out how to use his thick thumbs on the tiny buttons on his shirt to get it off.\n\n\"I understand, these exercises do get very intimate.\" I tenderly grab her shoulders and give her my best \"I'm sensitive to your needs\" gaze, which is hard to do and not keep looking at her huge tits. \"To the uninitiated, these sessions can appear to resemble sexual intercourse. But remember, the goal here is not sexual arousal, the purpose is to achieve muscular tightening and a release of negative energy that will substantially help your body achieve its maximum peak effectiveness.\" Wait, maximum peak? As opposed to a minimum peak? What the fuck does that mean? Never mind, you're on a roll. \"Remember, if at any time you're not comfortable with the level of personal contact, we can always do something less intense.\" But please don't take me up on that offer.\n\n\"No, I'm just being silly. Thanks for listening.\" She stares back at me with the most beautiful look of innocent trust and a smile that exudes nothing but the purest of warmth and reliance in me as a caring and decent human being. God, I want to shove my cock down her throat as far as possible.\n\n\"Absolutely, I want you to feel at ease.\" I take off my clothes as I'm talking, and I see Dave pulling his shirt off his shaggy back. Good Lord, without his shirt he looks like a gorilla with glasses.\n\nAnd then Tasha removed her bra and panties and laughed, \"Ok, so where do you want me?\" Dave and I looked at each other, and I swear at that moment I had no idea what it was we were fighting about. I'm sure it was something meaningful and that needed resolution, but watching her crawl on all fours between the two us, naked and ready to be fucked, made me forget about anything else.\n\n\"This is a great position, just hold still!\" Dave didn't waste any time positioning himself behind her and shoving his cock into her. That's just great, how about a little foreplay to get her moist and ready, asswipe. Tasha made a little grunt like she was uncomfortable, but she spread her legs and let him push deeper inside her.\n\nMeanwhile I walked over and stood in front of her with my stiffened dick jutting out of my body like it was saluting. She giggled, opened her mouth wide, and sucked on the tip of my penis. I could feel her tongue against the bottom of my cock as her mouth slowly slid down my shaft. At the moment, I can't remember what exercise I'm supposed to be pretending to do. And at the moment, feeling her mouth sucking hard on my cock, I don't really care..\n\nShe bobbed her head back and forth for several minutes, gradually coating my entire dick with her saliva. When she paused for a moment to look up and smile at me, a hanging trail of spittle stretched between her lips and my cock, and I thanked whatever gods might have been involved in making this entire situation possible. Of course, any gods that would be involved in this are probably some pretty fucking sick gods, but that's ok with me.\n\nDave was thrusting himself as hard as he could into her, ramming his pudgy, hairy torso into her so hard that the skin on her buttocks and tits were shaking with each impact. I could hear her yelping every time he crashed into her, and she reached out and grabbed my butt in order to steady her head that was still sucking on my grateful dick.\n\nHe was going so fast now that her breasts were thrashing from side to side and back and forth. His fingers were digging into her hips and his face was contorted into a face of animalistic lust, savagely forcing himself into her harder and faster. He continued fucking her with a violent frenzy that would have come across as mentally unstable if he hadn't... no, I take that back, he really did look mentally unstable. \n\nI can't describe it accurately, but the way he closes his eyes and purses his lips makes his face look like it bunches up to half its size. I could see the veins in his hands popping out from the powerful grip he had on her pelvis as he slammed her body on top of his cock with a ferocity I don't normally see outside of Animal Planet copulation footage that should only be aired late at night.\n\nHoly crap, he was shoving his entire weight into her crotch, and I didn't know how much punishment her pussy would be able to take. But I looked down at her face, and she seemed to be smiling, as much as anyone can smile with a penis stuffed in her mouth, so she must not have minded too much was Dave was doing. Of course, I'd like to believe having my cock in her mouth was a thrill to her as well, but why split hairs now?\n\nDave let out a loud groan and then he stopped moving. And I don't mean he slowed down, I mean he just stopped cold, kneeling behind her. I couldn't tell if his dick was still in her or not, but his face was so blank and spent that I thought he might start drooling at any second. Of course, that's the exact look I usually find him in when I go to his cubicle. Ugh, why am I thinking about work right now? How about we focus on the woman who has your dick in her mouth, ok?\n\nTasha gave a moan in appreciation and then concentrated on me. She deep-throated me until my groin was knocking against her forehead. She has this way of making my cock feel these intense sensations, a sort of intense tingling that makes your nerves electric with extra sensitivity, a miraculous way of matching the suction of her mouth with the throbbing of my cock. But all of this really means it wasn't long until my erupting jism filled her mouth and dripped onto her swaying breasts. I'm almost tempted to describe it as mind-blowing, but it sure as fuck wasn't my mind she was blowing right then.\n\nShe stood up and wiped off some drops of cum off her lips and asked, \"What do you need me to do now?\" Dave still had that distant, vacant look on his face so of course it's up to me to figure everything out as usual.\n\n\"Just kneel down here and turn your back to me so that I can do some more stretching exercises with your groin.\" And by that, I mean kneeling in front of me so that I can slowly insert my fingers into that wet pussy of yours to finger fuck you. \n\nIt didn't take long for her to start grinding with my fingers with her wide pelvis, which made her massive tits shake from side to side. Dave suddenly came out of whatever voodoo trance he was in and stared awestruck at her chest. He immediately got in front of her and started massaging her chest. Of course, to me it looks like he's clawing at her tits like a drunk wildebeest on crack. Wait, do wildebeests have claws? Didn't they have paws? No, that's right, wildebeests are like gnus, so it'd be more like hoofing... Jesus, I have my fingers in the pussy of a beautiful woman and all I can do is mentally play Trivial Pursuit at the Zoo. \n\nThe point of that was I could feel her wince when he was pulling on her tender nipples, so I think we were both glad when he plopped his face into her chest and crammed as much breast-flesh as he could in that stubbly, joweled mouth of his. I could feel her relax as he gnawed on her nipples, and her pussy was getting even more wet, if that was possible.\n\nSo Dave sucked on her tits while I finger fucked her from behind. I swear, I have never seen Dave as happy as he was burying his face in all 48 amazing inches of her colossal tits. And she smiled when he pushed her breasts apart and licked the insides of those phenomenal mammaries. I heard her moaning, \"yeeees\" as we continued.\n\nMeanwhile I was pretty focused on keeping her tight pussy as wet as possible by repeatedly penetrating her with my fingers. I tried not to think about how my fingers were becoming coated with Dave's cum, instead thinking about her vaginal walls had become so swollen that even as wet as she was, it was hard to push myself inside her. As she kept cooing, \"Yes! Yes!\" I used using my thumb to play with the nub of her clit because, you know, I'm a generous and thoughtful kind of guy.\n\nHer body began trembling, and I wasn't sure if it was from my finger-fucking or Dave's tit-sucking, but neither one of us stopped. \"YES!\" she gasped, as the two of us continued at her, \"YES! YES!\" She threw her head back as her body shuddered, \"UNGH! YES! UNGH! YES!\" \n\nI looked down and saw Dave sucking hard her tits as he pulled his head back a little and made her breast flesh stretch. \"YES! YES!\" My fingers were covered with wetness and cum, and I kept shoving myself into her over and over, \"UNGH! UNGH! YES! YES!\" \n\nWhen I felt her body relax with exhaustion, I relented with my fingers and put my hands on her hips to steady her. Dave kept sucking on her tits and I could see him digging his teeth into her nipples that had to be sore by now, but she put her hand on his head and pressed his head deep into her soft, pillowy chest.\n\nI could feel my hand starting to cramp up, so I slowed down. She took it as a sign that the exercise was over, so we all ended up slumping down onto the bed. There we were, all three of us, lying on the bed as a mass of tired arms and legs interwoven into each other and only the sounds of our panting filled the room. Well, that and I could hear Dave nose letting out a weird buzzy tone every time he breathed in. I focused on my own breathing and I felt a sense of peace wash over me. And by that, I mean I was too fucking tired from shoving my cock in her mouth to move. \"Very good therapy session,\" I said to Tasha just to finally break the silence. \n\n\"I agree.\" Tasha agreed. Right, of course she agreed, she just said she agreed. My brain always seems to have trouble functioning after I ejaculate. She turned her head to Dave, \"So what's in the bag?\" \n\nShit, why the fuck would you bring that up now? We were having a nice moment of post-orgasm contentment, and you have to ask about the fucking bag? Before I can say anything, Dave gets up on one elbow and says with delight, \"It's some equipment for a super-duper ultimate-radical therapy session that would unquestionably make sure you will never have any relapses.\" The fact that he actually introduced the phrase super-duper into this ridiculous scheme is something I may never forgive him for.\n\n\"Really? Can I see?\" she said excitedly. Yeah, you sound as giddy as a little girl on Christmas morning, but I guarantee you there isn't anything in that bag that even the Grinch would have touched with a ten-foot pole. Breathe. Just breathe.\n\nDave reached down and pulled the duffel bag onto the bed and unzipped it. The bag was crammed full of handcuffs, blindfolds, nipple clamps, ball gags, and several other items I had no intention of asking him about. Holy shit, Dave, it looks like a cheap-ass bondage store had vomited its entire \"no one will buy this crap\" inventory inside that bag of yours. \n\nTasha had started off with an excited look on her face, but as soon as she saw what was in the bag, her face morphed into a look of shock. \"What, um, do you have in there, Dr. Cooper?\" See, that's exactly what I was afraid of. We had a nice little scheme going on here, and now Dave and his bag of sex toys is going to derail everything.\n\nDave starts yammering away, \"These are some devices that we have found have a positive impact on the female musculoskeletal system.\" I see I'm not the only one who has been practicing his bullshit. \"I know some of this looks, I don't know, weird to you maybe.\" No, what it looks like is some sex store bomb exploded and left behind painful sadomasochist shit that no remotely decent human being would even think of going near let alone have shoved inside any orifice of their body. \"But we have had some good results with these items.\"\n\n\"No, it's not weird, I guess.\" Tasha hesitated, \"I just... I wasn't expecting this, that's all.\" Tasha doesn't sound convinced to me. God damn you Dave, I told you not to drag that stupid fucking bag out and now you're going to fuck everything up. My breathing is becoming more and more animated, and whatever inner peace I had going for me was being converted into a seething hatred for my coworker, which happens to inner peace sometimes. At least for me it does. Look, I never claimed to be a fucking Buddhist, ok?\n\nI put my hand on Tasha's shoulder, \"We already have a pretty intense exercise routine, I think maybe we should hold off on this until we've made more progress with our standard plan.\" God, I hope she isn't freaking out looking at all these sex devices. Some of those devices are making even me a little nauseous, and I'm not the one whose orifices are going to be violated with them. At least I hope not.\n\n\"Actually,\" Tasha says with a deep breath and an embarrassed smile, \"I wouldn't mind trying out some of this... if it'll help me.\" I see the leering smirk creeping on Dave's face and I give him a look that says he better back the fuck off of this. I take a breath so that I can explain why we're not going to use them tonight.\n\nBut Dave interrupts with, \"Oh it absolutely will! I guarantee it!\" You are a fucking asshole, Dave. You have gone over the edge into a sexualized crazy quicksand that is going to suck us all down. Ok, I'm not sure how sexualized quicksand can get, there has to be a better metaphor but I never think well after orgasms. That's why I let fucking Dave here to begin with.",
        "Before I could even sit up, though, Tasha put on the blindfold and ball gag with a merry grin and then let Dave handcuff her hands behind her back. Dave asked her if he could put on the nipple clamps, but with the ball gag muffling her answer, he assumed she said yes and clamped them on to her erect nipples. She yelped for a second, but seemed to get used to it. I mean, as much as anyone can get used to having tiny jagged-teeth metal clothespins agonizingly pinching one's nipples. The long, tiny chain between the clamps swung between her lovely breasts, which I have to admit if I were a tiny chain is where I'd like to hang too.\n\nLook, I know what a morally bankrupt individual I am, and I have no fucking business getting all ethical and superior to anyone. Even so this whole endeavor is making me fucking apprehensive. I mean, lying to her about being some bra salesman was one thing, conning her into fucking us is godawful. But tying her up in these bondage apparatuses? That seemed too careless and could potentially fuck up the scam. Oh yeah, and it's godawful to her too, sure, whatever, I guess. I'm mostly worried that this whole thing is an unnecessary risk to the scheme. I mean, she's already agreed to let us fuck her most any way we want, what the fuck do we need all these exotic gadgets for?\n\nBut oh my god, you should have seen her. Handcuffed and blindfolded, she was completely helpless and vulnerable. And that made her even more unbelievably hot. That she would put such immense trust and faith in us made me question the morality of what we were doing and whether we should turn back from this scheme and be honest with her about what we doing and... ok, that's not true in the slightest. The truth is that I was thinking was how awesome it would be to fuck her all bound up like that.\n\nDave must have been thinking the same thing, because he helped ease her down on the bed so that she was lying with her back on the bed and her hands handcuffed behind her. With her still blindfolded and gagged, Dave is holding on to her nipple clamps like a leash. \"Try to relax,\" Dave says to her, \"we're going to start with a groin exercise that should also do some work on your chest as well.\"\n\nNext thing I know, Dave is pushing her legs apart and cramming his stumpy wanker in her. And he is going to town, just fucking her sadistically rough. Her breasts are flopping wildly and her hair suddenly looks like it hasn't been combed in a year. \n\nBut it was the muffled noises she was making that was getting to me. They weren't screams so much as uncomfortable grunts that were getting higher and higher in pitch. I couldn't tell if she was in pain, in fear for her life, or what, but for me hearing those quiet grunts of hers were one of the worst things I've ever listened to. And I say this as someone who has listened to entire albums of Taylor Swift, please don't ask why.\n\nDave was so turned on by the whole thing that he only fucked her for a couple of minutes. He abruptly stopped pulled his little stump out of her at the last minute, holding his dick, and feverishly jacking himself off. Then little spurts of green cum shot out of his dick and landed all over her stomach and tits. \n\nAs he stood there dazed and spent, I went over to her, and tried to take off the ball gag. Shit, this was too much. She had been gagged the entire time he was fucking her, and she was probably trying to scream at him to stop. I just stood there the whole time like a dumbfuck and watched it all happen without lifting a single cum-covered finger to help her. And now that her neighbor is convincing her that we're just fucking with her, literally and figuratively, she's going press charges for all the shit we've pulled on her tonight. Hell, maybe the last month. Crap, I should've at least taken a few bondage pictures of her to take with me when I have to become a fugitive.\n\nI finally got that damnable ball out from under her teeth and freed from her mouth. \"Are you ok?\" is the only thing I could think to ask her right now. Of course she's not ok. She put her sweet, innocent, angelic trust in us and because of that got tied up and fucked ruthlessly. Why would she be ok with that? \n\nShe screamed at the top of her lungs, and as you can imagine she had a huge set of lungs, \"THAT WAS FANTASTIC!!!\" She was breathing so hard that the chains attached the nipple clamps draped across her sweaty torso were in constant motion. Holy shit, did I say she was a sweet, innocent angel? What I meant is that she was apparently a slutty sex-devil. She had this ridiculous grin on her face like this was the best exercise we had ever done with her. Of course, when she said, \"This was the best exercise ever!\" that was a big clue to me.\n\n\"You didn't mind this exercise?\" Jesus, I hope I didn't sound as incredulous as it sounded in my head. Try to act like a professional... whatever it is I'm professional at.\n\n\"No, that was soooo intense! I could really feel it in my muscles!\" She said, still breathing heavily. \"Can you put the... what do you call that... what was in my mouth?\"\n\n\"Uh... this is... um, you mean... are you referring to the oral stabilizer?\" Dave give me a questioning look, like he's wondering if that's the best I can do. I think I'm doing pretty good for this huge fucking curveball being thrown at me, so back the fuck off, you prick.\n\n\"Yeah, put the oral stabilizer back on me,\" she says excitedly. \"Can we try doing the Pumpinass exercise this time?\" With that, she rolled over and got up on her knees, which wasn't easy with her hands still handcuffed behind her, so that we could fuck her from behind. With her arms shackled, she couldn't hold herself up, so her shoulders were pressed against the bed. Well, they would have been pressed against the bed, but her gigantic tits were preventing her shoulders from quite touching the bed.\n\nSo I did as she asked and put the oral stabili... I mean, ball gag back on her. And then I started the therap... I mean, I was ready to fuck her awesome pussy... I mean, hoochie... no no no, I meant pussy. Good God, I can't keep track of all this shit.\n\nThere she was, kneeling in front of me with her hands shackled behind her back, blindfolded and gagged, ready for me to fuck her from behind. This is one of those moments in life when you wonder if the path that you're on is the one you should be on. Are you the person you want to be? Are you the kind of person you can look at yourself in the mirror and say that you like? Do you want to be the person who does nothing while listening to someone shrieking, not knowing if it was in pain or not? Is this really what you want to be doing? Do you really want to be an asshole liar who is interested only in your own sexual gratification? Looking down at her dripping wet pussy nestled down with that perfect ass, I think the answer is pretty fucking obvious.\n\nI grabbed her hips and thrust my cock in her as hard as I could. Again and again, I pummeled her body as my guttural growls of lust were almost lost amongst her muffled screams of pleasure. I shoved myself into as hard as I could, so much so that I wondered if maybe I was hurting her. But I could feel her spreading her thighs further so that I could go as deep into her as I wanted.\n\nHarder and harder, faster and faster, I kept going. I honestly lost all sense of time and had no idea how long I pounded her body, glistening with sweat. I can't remember much of that particular moment, because it was a haze of pure bliss. By the time I had ejaculated every drop of sweet, sweet cum into her waiting vagina, I had discovered a transcendent joy that even the most devout Buddhist would never achieve in this mortal sphere, it was that fucking peaceful.\n\nNext, Dave rolled her over to fuck her tits. He sat on her stomach and held her two enormous breasts together as tight as he could as he slid his cock in her cleavage. By the point, she had been sweating so much that he didn't even need to spread any oil around. She was still handcuffed and gagged, so it was hard to tell what she thought about it all, but the deep groans she let out sure sounded like she was enjoying it too.\n\nHer breasts were so sweaty, however, that he had trouble holding them tight enough, so I actually had to help hold her tits for him. The soft skin of her enormous chest was sweaty and slimy so I really had to dig my fingers deep into her flesh in order to hold those massive jugs of hers still. I will say that of all the bizarre experiences I have had in my life, holding a pair of large breasts so that someone else could fuck said large breasts is hands down in my top ten list of strange events.\n\nIt took several minutes, but Dave had finally reached his climax and cum spewed all over her chest and face. Some of it made it to my forearm, which I will tell you was not appreciated on my part. But I have to be honest, holding her tits all that time somehow made it worth it.\n\nNext I sat on the bed and helped maneuver her so she was sitting on top of me and could lower herself on top of my cock. The tip of my penis could sense how wet and sticky her pussy was, and she softly gyrated her hips around and let my cock penetrate her. Since her hands were shackled behind her back, she had to tighten the muscles of her pussy around my throbbing cock. \n\nI couldn't really see her face behind the blindfold and ball gag, but I think she was cooing in pleasure. Or maybe she was gurgling. No, I think cooing is right. She slid up and down a few times, I guess to make sure that she was in a good position. But after a minute, she started bouncing up and down on top of my cock, grunting every time she came down on me. She was slamming herself down on top of me so vigorously that her tits would slap me to the point of giving me a concussion. Like I'm going to object.\n\nShe kept humping me, faster and faster. I couldn't hear her with the gag on, and her hands were cuffed behind her back, so I couldn't tell what she was feeling. But her breathing became more and more intense as my cock exploded with jism inside her. She kept going for another minute, slamming down on me again and again, each thrust more brutal than the one before, until finally her entire body shuddered and jerked. I could feel her body relax and all the negative energy was just pouring out of her. No wait, that's just my cum pouring out of her pussy.\n\nI have to say it was a good thing she was blindfolded, though, because at that point Dave tried to bring out some dildos and silk whips, so I wrestled him to the ground to pry that crap out of his hands. I'm not saying I'm against using those things in general, but Jesus, hadn't we done enough for one night? It was getting late and believe it or not I do have to go back to work tomorrow. I'd say the same for Dave if he actually did any work.\n\nAnyway, I figured we had all had enough at this point, although I'm sure Dave would completely disagree with me. But I don't care, we'd done enough, he had his little fun, and it was time to call it a night. \"I think that's enough for one session,\" I told her. \"Let me get these off of you.\"\n\nDave tried to hold me back several times, but somehow I managed to take all the cuffs and blindfolds and everything off of her, even with him hanging on my shoulders and arms. She said, \"I really enjoyed our session tonight.\" My god, she's practically beaming. I had no idea she was into all this bondage shit. \"Can the two of you come back over tomorrow night and do it again?\"\n\n\"We'd be delighted to!\" Dave exclaimed before I could say anything. Jesus, now HE'S the one beaming. Everyone around here is fucking beaming everywhere. So what's up with me? Why aren't I beaming? It's not like I'm some puritanical saint or anything, so why do I act like I have something shoved up my ass about all of this? What's wrong with me?\n\n\"You can leave your duffel bag here if you want\" Tash said, trying to be helpful. \"You know, so you don't have to carry it back and forth.\" Dave nodded his head up and down. And what I mean is that his head looked like a bobblehead on speed. The way he was staring at her chest, I think he would have given her the keys to his car right then and there. Wait, his car is a piece of shit. His liver, yeah that's a better metaphor. \"Thank you again! I'll see you tomorrow!\" she smiled as she shut the door behind us.\n\nDave started dancing in the hallway so I had to shove him into the elevator before anyone else saw us. Of course, there was a young woman in there already, and she rolled her eyes and watched us contemptuously all the way to the lobby.\n\nIn the parking lot, Dave started in on his jig again. \"Didn't I tell you? Did I not fucking tell you how awesome that would be?\" And now he's pretending to spike a football. Or is he hitting a carnival bell tower game with a huge hammer? No actually, he's just pointing at the ground. What the fuck kind of dance is he doing? It's like Baryshnikov and MC Hammer had some mutant kid that was dancing like a fucking freak.\n\nI take a deep breath and say, \"It's over.\"\n\nDave stops and looks at me incredulously. \"What? What are you talking about? That was great!\"\n\n\"I told you not to get that fucking bag out and you did it anyway.\" Yeah, don't think I'm letting that go. You're unreliable and a loose cannon, and it's time to cut you off.\n\n\"But she's the one who asked me about it. You can't just do that! That's not for you to decide!\"\n\n\"No, it's over. That was fucking reckless and foolish and you're going to ruin everything! Look, I let you come over twice already, and that's two more times than anyone else at work let you do anything. I've been a friend, ok? You got laid... I don't even want to know how many times. But come on, enough is enough. I can't take the risk anymore. Period.\"\n\n\"But... she didn't mind... I... you...\" Oh my god, is he blubbering? Is a grown man actually crying like a big bawling baby because I won't let him fuck the woman with big tits anymore? Wait, on second thought that actually makes total sense to me.\n\nDon't back down now, stand firm. \"Don't you dare think about coming back over here, or I swear to God I will kick your ass. Do you get me?\" I stared at him as though I were Clint Eastwood, Chuck Norris, and Steven Segal all in one.... Holy shit, I'm getting old, every example of exaggerated manhood that I can think of is a member of AARP now. I can't come up with any more modern examples? Jesus, I need to go see some movies. Hold on, don't lose focus.\n\n\"Yeah... I get you.\" He wiped his face and slowly shuffled back to his car. Before he got in, he called out, \"Wait, what about my bag?\" \n\nChrist, I forgot about that stupid fucking bag. \"I'll get it for you tomorrow.\"\n\n\"No you won't,\" he looks at me angrily. Well, the way a chipmunk might look at you angrily. \"You'll use it with her.\"\n\n\"Dave, in case you didn't notice, I didn't want that bag in there. I said I'll get it for you and I will.\" \n\n\"Sure you will.\" He got down into his car dejectedly and I could hear his piece of shit car playing crappy Top 20 hip hop as he drove away, leaving a cloud of smoke behind him. I got into my car and started it up as well. I take a few breaths and look for a source of inner peace inside me, but all I can think about is how my exhausted cock feels like every molecule of cum has been squeezed out of it. I turn on the radio and listen to another shitty Taylor Swift song as I drive down the road.\n\nI know I did the right thing with Dave, I had to kick him out. And I feel bad. Not about kicking him out, I feel bad knowing that I'm going to have to listen to his whiny shit for the next month begging me to change my mind. Oh, and to get that stupid duffel bag back to him. I know I'll get that fucking bag of god knows what back to him, of course I will. \n\nEventually."
    ],
    "authorname": "bobrobertson",
    "tags": [
        "breasts",
        "tits",
        "bondage",
        "lingerie"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-bra-salesman-ch-05"
}