{
    "title": "The Designer Pt. 02 Ch. 18",
    "pages": [
        "Author's Note\n\nThank you for continuing to read, vote and comment. The main story takes place in the Past and explores the addition of Jenn to the family, will their dynamic change dynamic? The Present story line follows our familiar family and their oldest child, Zac as he discovers his powers. The family business is explored more.\n\nI hope you enjoy this chapter.\n\n*****\n\nPast: Jeremiah\n\nI was resting between Jenn, Carmen and Lexi when I heard Alyssa pull the RV's door open. I blinked and tried to focus, I felt something was wrong, shouldn't I have heard Alyssa's thoughts before she was so close? As she came in, I rose up a bit worried.\n\n\"Jeremiah?\" she called, \"are you done?\"\n\nThen my mind plugged back in, or she opened up the connection, because I was flooded with her thoughts. Thoughts of concern, arousal, and a little bit of impatience. I was a bit embarrassed, when I looked at my watch and saw that it was after noon.\n\n\"Back here,\" I called, as Jenn stirred next to me.\n\nLexi and Carmen slipped off the bed, and they blew me a kiss.\n\n\"Gotta start fixing lunch, Papi,\" Carmen said as she led Lexi into the main cabin. Alyssa slipped in after they passed, and sat on the edge of the bed. She smiled at Jenn, and combed her hair back, then leaned and kissed me tenderly.\n\n\"I had to turn you off,\" she confessed, \"Trying to talk with my mother, while feeling what you were doing to each other was troublesome.\"\n\n\"I'm sorry,\" I said, \"I might have...\"\n\n\"Don't be,\" she smiled and then kissed Jenn, \"You two needed the time, alone. To connect. It looks like you did?\"\n\n\"Yeah,\" I said and blushed a bit, my cock twitched a bit at the sight. I had to concentrate on my own self-control, or I'd never get out of bed.\n\n\"Yes, we did,\" Jenn said and stretched to kiss me again promisingly, \"I needed it, I can feel when I'm getting on edge. It's not as frantic as when you found me, but it always under the surface. Jeremiah was very good to me.\"\n\n\"He is good to all of us,\" Alyssa smiled, then asked Jenn, \"We have to make sure he is rested enough to care for us too. Are you up to that challenge?\"\n\n\"I'm up for anything,\" Jenn said, \"I need to figure out school though, I'm pretty sure I'm fucked for my summer classes.\"\n\nAlyssa nodded, and added another folder to her mental notes. She seemed to have something planned for everyone. Between her and Carmen, our family ran a tight ship. I understood what Alyssa was saying; if I tried to manage everything, and please all of my lovers, I'd be run down quickly. By taking over many of the detailed tasks, the family worked better, and no one was over taxed. It made me appreciate all my loves even more.\n\n\"Well, first things first,\" Alyssa said, \"Get dressed, then join us for lunch, Kelly and I can fill you in on what's going on here. Then we can discuss what we need to do to get you back home Jenn.\"\n\n\"Oh,\" she sighed with a questioning tone, \"Where is home, exactly?\"\n\nAlyssa smiled, \"Get dressed, and come to lunch, we'll tell you all the details. I'm glad you've taken the edge off, you look marvelous.\"\n\nAlyssa slipped out, and Jenn looked around and found her clothes from the previous day. I pushed a thought to Alyssa that we needed to get her clothes and supplies, she echoed that it was already on the list. I found a new pair of shorts and a baseball style tee-shirt. I laced up my sneakers, then we joined the other four around our expanded dining area.\n\nWith a nod to Alyssa, Kelly started, \"I borrowed Rebekah's phone to call my mother. I told her where we were and that we were safe. She wasn't happy that we were still at the compound, but she came around when I told her that we'd chased the Priesthood away.\"\n\nI opened my mouth to say something, but she put up a finger, \"I didn't tell her about the deaths, she didn't need to know the details. Anyway, I started looking around the house while I was talking to her.\"\n\n\"And...\" I managed to say quickly between her short pauses, trying to keep her on track.\n\n\"Well, to put it shortly, this place has nice bones.\" Kelly said, then continued in a stream of words,\" The location, it turns out is excellent, close to skiing in the winter, and nice places during the summer. My mother is doing more research, but I think we can turn this into another Bed & Breakfast.\"\n\n\"What does Rebekah think about that?\" I asked, looking over at Alyssa.\n\n\"Well, at first she was a bit taken aback,\" Kelly said, \"They've lived in a little bubble for so long, she didn't know what B&B meant. I hung up with my mother, and explained the concept. She thought for a while, then brought it back up later. They don't have much income coming in, they'll need some help getting things going. But they are happy to have guests. She said the other families could help out with preparing dinners and doing the maintenance. She's going to talk and spread the word.\"\n\n\"Interesting,\" I said, then turned to Alyssa, \"What's your take?\"\n\n\"I'd love for it to happen,\" she said, \"I never knew I had a mother, so being in contact with her regularly would be a nice thing. I know you have the resources to help make it a success. Between Kelly's family and you, this could be a good business opportunity.\"\n\nShe paused, and I waited for the next sentence.\n\n\"If we can be sure the influence of the Priesthood stays away,\" she finished, then tacked on, \"Making this work, means none of the old business. Rebekah thinks she can clear the books of the corrupt organizations. Deacon had her keeping all the books. It might cause some ruffled feathers in Nevada though.\"\n\n\"We can figure that out,\" I said, not having any idea how. \n\nStill it was an intriguing proposition. To redeem this place and make it part of our new family, and under our protection seemed like the right thing to do. It might be a good base for taking care of others that had gotten into the sex trade, like Jenn, and wanted a way out. I was interested, and thankful for the opportunity to help Rebekah and the other families remaining.\n\n\"What do we need to do before we leave?\" I asked.\n\n\"Nothing,\" Alyssa said, \"Kelly called her mother back, and introduced her to Rebekah. They chatted for a while. Betsy agreed to run point on this, and has some contacts in Missoula that can help get things started. Funding is an issue, but she didn't think it would be a problem. She doesn't even know the resources you have available.\" \n\n\"So we can leave whenever we want to?\" I asked, and looked around.\n\n\"Yes,\" Alyssa said, \"Rebekah has our contact information, and can call Betsy if she needs anything. In about a week, if everything works out, Betsy can have a full-time contractor onsite that can oversee construction. He's a close friend, so he can also be available to help. There is nothing keeping us here.\"\n\n\"Okay, then where to?\" I asked, and looked around, the table.\n\nJenn was looking around, confused by everything we'd just talked about. I chuckled to myself, even being plugged into our mental web, the background just was missing. \n\n\"Jenn,\" I said, and she looked up at me, \"I think we need to get you upto date with our family and our business.\"\n\nAlyssa took the lead, and started explaining things. I sat back and observed. The other girls chimed in with their perspectives. Soon Jenn's face brightened as she understood where everyone fit. She nodded when Kelly told her about our house project and repurposing a college apartment house to a Bed & Breakfast. She listened attentively to each of the others tell how they fit into our family and our start-up business. I realized listening to them talk, how serious they all had taken to the challenge of starting a Bed & Breakfast. Their ability to self-manage things amazed me. \n\nThen Jenn looked at me, and bashfully asked, \"Where do I fit into all of that?\"\n\n\"Where do you want to fit?\" I parried, \"We don't want to pull you into something that might be too much for you. What are you worried about?\"\n\n\"Well first off,\" Jenn said, \"This past couple of weeks has been ruinous to my classes at college. Getting hospitalized after you met Kelly put a damper on my grades for first term. One of the reasons I hooked up with Michael, or Carl, or whatever... was he could distract me from how messed up my school life had become.\"\n\n\"I can help you through that,\" Alyssa said, \"Do you want to stay at your school?\"\n\n\"No,\" Jenn said flatly, \"Even before this all happened, I wasn't happy there. Like Lexi, I came from the foster system. I don't really answer to a mother or a father. I was making okay grades, but I think I need a fresh start.\"\n\n\"So,\" Kelly asked, a bit surprised, \"You're quitting school?\" \n\n\"Yeah,\" Jenn said, \"At least for a while. I need to figure out what I want to do. What I want most is to stay with you guys. I don't know how to do that, though.\"\n\n\"You stay with us,\" I said, \"It's pretty simple. We have to drive back the way we came, We can stop by and pick up anything you need from your dorm room. Where is the rest of your stuff?\"\n\n\"That's pretty much it,\" Jenn said, her face brightening, \"My clothes and books, and things in my dorm. I've learned to travel light. Are you sure you want to bring me along? Sounds like you have your hands full, a wedding in a little over two weeks?\"\n\nI looked around, and the four other girls nodded, \"You are one of us,\" I said, \"I don't know how, really. It just happened, just like everyone else here. We're connected. It would hurt to separate from you now. Like it or not, you're attached to us.\"\n\n\"I think I like it,\" she smiled, \"For as much as I thought I liked what the shit head was selling, in the back of my mind it always felt wrong. I was in a bad place. Since I've been with you all, that feeling hasn't entered my mind once. I can't explain it, but I feel whole...\"\n\nShe smiled and her eyes filled a bit with tears. Over on her side of the cabin, Lexi leaned over and hugged her, and Carmen kissed her forehead. On our side, Kelly and Alyssa leaned into me and we just pushed as much love as we could across the table. After a moment, Kelly leaned towards Jenn.\n\n\"Jenn,\" she said, softly, \"I remember talking a lot with you, when I lived in the dorms. How you listened to me go on and on about my dream wedding. I was a bit naive back then, I had no idea you were attracted to me. My eyes have opened to many new thoughts and feelings. My friendship with you has changed, and I love you as much as I love my other sisters. I want you to be a bridesmaid, will you do me the honor?\"\n\nJenn just started crying at that, nodding, and pushing her way past Lexi to hug Kelly tightly, \"Of course, oh yes!!\"\n\nI smiled at the thought, then started doing the math. That was now four bridesmaids, and ... I didn't have any groomsman. Alyssa and Kelly pushed some comforting thoughts as I stewed over the problem. Jerry would be a natural fit, as would Ron. The other two, I'd have to check with my other friends from my team at school. I could find two, but were they in town over the summer. The small civil ceremony that I had originally planned for Alyssa and me had morphed into a large production. I didn't even know who to invite. The four girls sent humorous thoughts my way.\n\n\"Don't worry, Papi,\" Carmen said, \"We'll help you out.\"\n\n\"Mom's already invited a ton of people,\" Kelly said, \"She's talked with Uncle Tommy and he got a list together for your family friends. You worry about some silly things, Love.\"\n\n\"So you're really going to marry, Jeremiah?\" Jenn asked, \"and all of us will be right at your side?\"\n\nKelly nodded, \"I know it's weird, but I wouldn't want it any other way.\"\n\n\"What I'm saying and committing to Kelly,\" I said, reminding them, \"I'm committing to each of you. As long as everyone is happy with it.\"\n\nIn the back of my mind, I tried to sequester a private thought, \"Wasn't this all a bit fast, four months ago I knew none of these women. Now, I'm committing myself to a lifelong relationship, formally to one, and echoing that same commitment to four others.\"\n\nAlyssa leaned close to me, whispering, \"You're leaking, lover,\" she smiled and kissed my cheek, \"We'll figure it out. We always do.\"\n\n\"I'll admit,\" I confessed loud enough for everyone to hear, \"I have my worries. I'm as new to this as all of you. I feel responsible for all of you. Sometimes I think too much inside my own mind, when I should be talking out loud to all of you. I'll need all of you to continue to talk with me about your troubles too.\"\n\nThey all nodded, understanding. Our mental matrix was helpful for many things, but it wasn't the same as working an issue out by talking about it. We needed to continue to do that to be healthy, even while being connected emotionally. \n\n\"Okay,\" I said, \"Is there anything else we need to talk about?\"\n\nThe girls looked at each other, then back to me. Each one quietly shook their head, but Carmen spoke first.\n\n\"The RV park back in Missoula is a good first start,\" Carmen said, \"We will need to dump tanks again. They have a pool, and I don't know about you, but I'd love to have a nice swim.\"\n\nAlyssa and Kelly nodded at each of the comments, then looked at me with nothing to add.\n\n\"Okay,\" I said, \"Let's go say a formal goodbye to Rebekah and head back to Missoula.\"\n\nIt didn't take long to say good bye. Although Rebekah appeared completely different than when we met her, she was ready to start the next chapter. She welcomed our assistance, and assured me that she'd be in contact with Betsy. I gave her Uncle Thomas' number too, if she had any thing she needed to call him directly. I made a mental note to give Thomas a call when we stopped to camp.\n\nWithin thirty minutes we were pulling out of the compound, past the still smoldering remains of the meeting hall. I wondered what this place would look like in a year. We cruised down the country road, and then through the small town of Pinebluff, headed north to Missoula.\n\nPresent: Jeremiah\n\n\"Dad!?\" came Zac's voice, \"Beth's parents are here, they want to talk with you and Mom.\"\n\nIt took a moment for the words to register fully in our post-coital bliss. Then one by one we all hurriedly sat up and slid off the bed. Each heading to find their discarded clothes. The only one with the proper clothes to wear was Jenn, the rest of us had dressed in the dressing room. We couldn't just saunter out in our selected fetish wear. Carmen and Lexi didn't have anything to wear except for collars.\n\nAlyssa pushed a thought, as I was pulling up my leather shorts. I finished the chore, trying not to make my slightly engorged cock look obscene through the thin leather.\n\n\"Hey, uh, Zac?\" I called through the doors, \"We'll need a minute, can you take Beth's parents up and we'll meet them in the back in a few minutes.\"\n\n\"Duh, Dad,\" he called, \"They aren't down here, Beth's with them up on the deck by the pool.\"\n\nI opened the door and slid through the opening. Zac didn't need to see his mother, and the other girls in their fetish wear either. He looked me up and down, lifted a brow, then didn't mention my appearance. I was covered with a sheen of sweat, my leather shorts bulged from a not quite completely flaccid penis. He shook his head and looked at me.\n\n\"I don't want to know,\" he said, \"I knew you were all here, because your cars were all present. I told Beth's parents you were probably down in the gym. So I came down alone. You probably should take a quick shower, pop.\"\n\nI nodded and grinned, \"You're probably right,\" I said, \"How did the conversation with Beth's parents go? Are they still being difficult?\"\n\n\"They are not as angry,\" he offered, \"but they wanted to meet my parents and have a face to face. I thought it would be a good time. I tried calling and texting, but you didn't answer.\"\n\n\"My phone's in the locker room,\" I said, \"Sorry, about that. You go on up and offer them some snacks. Mom and I will be along shortly.\"\n\nI watched him leave the room, then knocked on the door to give the all clear signal. Carmen's head popped out, looking around the gym, then she and Lexi hurried to the locker room in only their collars. Alyssa and Kelly were almost dressed, and followed along, showing a lot of lovely flesh. Jenn popped out last, and raised up on her toes to kiss me.\n\n\"I'll show myself out, Jeremiah,\" she said with a smile, \"I feel so much better. I promise I won't be so long next time.\"\n\nI hugged her tightly, then said, \"I need to do a better job too, I should've checked on you before you got so bad. Forgive me?\"\n\n\"Of course,\" she smiled and kissed me again, fully and warmly, \"We're still connected.\"\n\nShe left with a spring in her step, and I was glad we had the time to help her out. I slipped into the locker room and shed my shorts, stepping into the shower near Kelly. The shower area was completely open, with no stalls, just a collection of spray heads, and half wall of glass. All of us could shower at the same time, and we did that now. Lexi and Carmen showered quickly, then redressed in some exercise clothes. \n\n\"What's the gameplan?\" Kelly asked, \"I didn't think we'd be talking to them so soon.\"\n\n\"We'll have to play it by ear,\" I said, \"We've done it before with unannounced guests.\"\n\n\"I'll be right behind you two,\" Alyssa said, shampooing her hair, \"I need to get this out of my hair, or it won't look right.\"\n\nI blushed as I realized what she was washing out, and smiled at the remembrance of the final act of our family orgy. I washed Kelly's back and then turned and she did the same for me. In a few moments we were out and toweling dry. We put on some sportswear and Kelly pulled her hair back into a damp pony tail, and we headed up the steps.\n\n\"I must look horrible,\" she said, \"No time for makeup, or drying my hair.\"\n\nI chuckled, \"You look incredible as always, \" sometimes she forgot her own supernatural ability and how alluring it made her, \"Remember you are a sex angel.\"\n\nShe gave me a dark look, \"Even sex angels have their required rituals.\"\n\nI decided it was better to just agree with her, \"I'm sure they'll understand given the nature of their drop-in visit.\"\n\nI opened the door and let Kelly lead the way onto the patio. Beth was sitting next to her mother, with Zac beside Beth. They all rose as Kelly stepped closer to the table they were sitting around. Lexi and Carmen had brought out some snacks and a pitcher of iced tea, and had excused themselves. \n\n\"Hello,\" Kelly greeted brightly, \"I'm sorry to keep you waiting, we were down in our gym working out, I hope you haven't had to wait long.\"\n\n\"Not long at all,\" said Beth's father smiling brightly, \"I'm Brad, Brad Bentley, Elizabeth's my daughter.\"\n\nHe paused taking Kelly's offered hand, and smiling at her. Then got elbowed in the gut by his wife, before introducing her.\n\n\"And this is my wife, Janice,\"\n\n\"I'm Kelly,\" Kelly said, \"and this is my husband Jeremiah.\"\n\nIt was Janice turn to take a moment as I took her hand and raised it to my lips, \"A pleasure Janice,\" then shaking Brad's arm firmly looking him in the eye, \"Brad, welcome to my home.\"\n\n\"Quite a place you have here,\" Brad said, \"Thank you for the refreshments.\"\n\n\"Thank you,\" I said, \"I've worked pretty hard to be able to enjoy a nice place to relax with my family when I'm not working. And sometimes I end up working while I'm at home. Isn't that the way it usually is?\"\n\nBrad nodded, and sat back down. I was used to people feeling a bit envious of my wealth. It was one of the reasons I hesitated moving to such a large mansion. It served a few purposes, beyond just allowing the five of us to live together without too many raised eyebrows. \n\n\"Well,\" Janice said a bit shortly, as she caught Brad looking at Kelly again, \"It's not a social call. We are both a bit upset by the behavior of your son.\"\n\n\"Of course,\" I said, \"We have our concerns too. Though they are both old enough to make adult decisions, they might have rushed into something without weighing all the consequences.\"",
        "I looked at Brad seriously. I was a bit ticked off that an ad-hoc overnighter had left Beth seemingly homeless. That was their problem to fix, and I scanned their curves to find out what had them so upset. \n\n\"We both believe,\" Brad said, looking over at his wife for her approval, \"That the consequences here should be rather steep. Not only did Beth sneak out, but she stayed the night with your son. Apparently without your knowledge. That is a bit troubling to me, to be honest, Jeremiah.\"\n\n\"Which part,\" I asked, \"that she snuck out without telling you, or that I allow my son freedom to make choices.\"\n\nI felt Alyssa's thoughts enter my mind, \"Not helpful, J. Don't escalate things.\"\n\nAlyssa came through the doors, all smiles. Brad stood up, politely, but Janice had had enough of formality and stayed fuming in her seat. \n\n\"I'm Alyssa,\" she said shaking offering her hand to Brad, while Janice steamed at his reaction to another stunning beauty, \"I'm Jeremiah's business partner.\"\n\n\"You.. You live here too?\" Janice stammered as Alyssa sat down on my other side, next to Brad and across from Janice.\n\n\"Yes,\" Alyssa said simply. \"This is a huge house, and it has ample apartments for several adults. Jeremiah and I work closely in our practice, it makes things easier to be near.\"\n\n\"And you're okay with this?\" Janice asked turning to Kelly.\n\nKelly smiled, \"Of course, Why shouldn't I be? Alyssa is as close to family as anyone. We've lived together since I was in college.\"\n\nThe conversation was helpful, because it gave me time to scan their curves, while not having to engage in a tete-a-tete with the pair. They were both worried, naturally about their daughter, that wasn't a surprise. They were also filled with guilt over a feeling they had grown distant from her in the past few years. That was also natural and to be expected, I'd seen it with many of my clients. It's something all parents had to deal with as their children transitioned to adulthood. Mostly just normal fear.\n\nAlyssa smiled and tried to change the subject, \"Tell us how the two of you met?\"\n\n\"Us?\" asked Janice, \"I'm not sure that has anything to do with what your son has influenced Beth to do.\"\n\nI saw the sparks of the conflict with Alyssa's question. Clearly she was following a thread she had discovered while talking with them. \n\n\"Let's all agree,\" Alyssa parried, \"That Beth and Zac are adults and make choices. One of them didn't overly influence the other.\"\n\n\"That's true, Mom,\" Beth piped in, \"I knew what I was doing, I knew what I wanted.\"\n\nJanice's face turned increasingly red, and I honed in on her issue. Alyssa concentrated a moment, then pushed a thought to me, \"Janice was a bit slutty in college, not that there's anything wrong with that.\"\n\n\"Beth!\" Janice replied, anger welling up in her voice, \"Please, we are talking here.\"\n\n\"Yes,\" Beth stood her ground, leaning towards her mother, \"Talking about me. I am part of this discussion. I'm tired of you treating me like a child!\"\n\nZac watched fascinated, looking from me to Alyssa as we carefully listened and scanned. His look was more a confirmation as I watched Janice's moral curve spark with guilt and shame at her own past, and projecting her past onto her daughter's actions. Brad was a bit different than his wife. I could tell he was here to support her, but he also held his daughter in high regard. He could tell she was in love with Zac. His conflict wasn't apparent, so I ignored him and concentrated on Janice.\n\nIt was time to treat the root cause. Janice and Beth fumed at each other, both too angry to speak. I made some adjustments, just untying the knot of conflicts in Janice's moral curve. Then I cleared my voice to get the conversation back.\n\n\"I think I can confess that I made a lot of rash decisions when I was young,\" I started, and Janice looked at me oddly as I continued to tune her. \"Some of them were hasty, and I didn't think them through. Some of the consequences of those actions have stuck with me. I don't regret them, I learned from them. Can we all admit that's part of being an adult. Learning from our experiences?\"\n\nFraming the argument in such a way focused the attention on me, allowing both Beth and Janice to not personalize the statement and become defensive. They both calmed down, and Janice took a sip of tea.\n\n\"I just worry,\" Janice said, \"that one poor decision will lead to another.\"\n\n\"Well,\" I chuckled, \"That's part of being an adult too, is it not?\"\n\nJanice actually smiled, and then looked at Brad with a fondness she hadn't shown since we'd arrived on the patio. I could sense her connecting her past behaviors to meeting Brad, and how her relationship with men, and sex, changed as she fell in love with him.\n\n\"That is true,\" Janice admitted, looking at Brad, \"I made a string of hasty choices when I was younger. But one in particular changed my life for the better.\"\n\nBrad smiled and took Janice's hand. He lifted it to his lips and kissed it gently.\n\n\"Changed my life for the better too,\" Brad said, \"We fell in love, and then we had this lovely child.\"\n\nHe turned to Beth, and continued, \"Beth, sweetheart, I'm sorry about our over-reaction this morning. Your mother and I love you so much, we only want the best for you.\"\n\nBeth's countenance softened as she replied to her father, \"I know Dad, I know you and Mom love me. I need you to trust me when I say that Zac is the best thing for me. I feel it in my core. I'm sorry for being rash and leaving without telling you. That was wrong of me, please forgive me.\"\n\nThe three of them stood and hugged each other. They smiled through tears and kissed each other's cheeks. When they sat back down, Brad held Janice's hand, and she leaned against his shoulder.\n\nKelly smiled, and I felt her push a little of her light around the table, then said, \"We love Zac as much as you love Beth. We adore Beth, and are glad that she and Zac have grown closer. We want to be around to help guide them, along with you. We don't want anything to come between family.\"\n\nJanice smiled for the first time at Kelly, thoughts of jealousy and resentment evaporated after she connected with how much she loved her husband, and how much he loved her, \"Thank you, Kelly. I suppose we'll being seeing more of each other.\"\n\n\"Of course,\" Kelly said, \"I look forward to it.\"\n\nWith that we all relaxed, and started talking more naturally. Lexi and Carmen brought out lunch, then joined us. Janice and Brad showed some curiosity at the fact I lived with four beautiful women, but they totally believed our story that it was the best thing for our combined businesses. Looking around they couldn't argue with the success we had. It was a story we'd told many times over the years, not many people seemed to take issue with it, once I explained it to them.\n\nPast: Jeremiah \n\nWe headed out of the compound mid afternoon. The drive to the RV park we'd left the previous day was only about an hours drive. We were all tired, the excitement of the day at the compound still had us a bit on edge. My morning with Jenn had taken a physical toll on both of us. Kelly had found her way next to me and cuddled into my side. Alyssa's head was on my other shoulder. Carmen drove alone, while Lexi and Jenn leaned against each other, Jenn napping quietly. \n\n\"We have about two weeks before we need to be back,\" Alyssa said, \"That will give us four days in town before the wedding.\"\n\nKelly stretched and yawned, nodding, \"That should be good. My dress will be ready. We'll need to get Jenn fitted, but the other three bridesmaids dresses should be done. The guys can get fitted for their suits. We'll still need to find two more.\"\n\n\"One should be Uncle Tommy,\" I said, \"He is really more like my father than anything, but he's also my closest friend. I'd like for him to be my best man.\"\n\nAlyssa smiled and squeezed my thigh with her hand, \"I like that,\" she said, \"He can escort me.\"\n\n\"Jerry can escort Jenn,\" Kelly reasoned aloud, \"Ron would have his hands full with Carmen, that leaves Lexi without an escort.\"\n\n\"Do I have to stand up in front?\" Lexi asked looking at us, \"I mean I know I'm part of the family, but there isn't anyone I want to stand next to except for Jeremiah. No one else would seem right. I can't fake a smile very well. I think everyone would see through me.\"\n\nKelly and Alyssa looked at each other, then back at Lexi, a bit concerned.\n\n\"Wow Lex,\" Kelly said a bit concerned, \"Are you feeling left out, I really don't want to make you feel separated from us?\"\n\n\"No, it's not that at all,\" Lexi said, then looked at me, \"I'm just in love with Jeremiah. Like the rest of you,\" she said then looked at Kelly, \"I know the ceremony means a lot to you Kelly. I don't want to ruin that for you. I just don't want to be up front. Is there another place for me?\"\n\n\"What about flower girl-slash-ring bearer?\" Alyssa offered, \"You wouldn't have to be up front, but you would still be a vital part of the ceremony. It wouldn't be right to me, if you weren't a part of this. I know it's all for show. It's our family though, you are a big part of that.\"\n\n\"Can I weave flowers in my hair?\" Lexi grinned, \"I could like that, I think.\"\n\n\"That's a good idea,\" Kelly agreed, \"I actually love that idea, are you cool with it, Lex?\"\n\n\"Sure,\" Lexi said smiling, \"I promise I won't steal your ring.\"\n\n\"Rings,\" I said, \"Something to add to the list, for the four days we're home before the wedding.\"\n\nCarmen pulled off the freeway, and headed towards the RV park. I slipped up to the passenger seat to help arrange for our spot. They didn't have any vacant spots away from the rest of the people. It was now a weekend, and people were out in droves camping and enjoying the summer weather. We took the last C-class spot that was close to the campsite recreation building. There was a pool area with a jacuzzi, a few parents with small children were enjoying the pool.\n\n\"Oh, can we go swimming?\" Kelly asked, \"I brought an extra suit that Jenn could borrow.\"\n\n\"Only one?\" I asked turning back with a smile.\n\n\"Well, okay she can have first choice,\" Kelly smirked, \"I have a few to select from.\"\n\n\"Good,\" Jenn said, then hefted her breasts in her hands, and comparing them to Kelly's, \"They should fit nicely. I don't think any of my clothes back home are going to fit me.\"\n\nWhile I had shrunk her breasts from the obscenely large orbs that Samuel had given her, they were still at least a cup size larger than her natural breasts. She wanted them to be fuller, and as sensitive as her tattoos were, I had to keep them more robust. \n\n\"We should have time, after dinner.\" I said.\n\nCarmen shutdown the engine, and started setting up the cruiser for camping mode. As she did she looked up at me, and blushed a bit. \n\n\"Papi,\" she asked, \"is it okay if we order pizzas? My mind is still swimming and I hadn't thought of what to make for dinner.\"\n\n\"Huh,\" I shrugged, \"I guess so, let me go check with the manager.\"\n\nSomehow that got translated into, \"Let's all go check with the manager,\" which was fine, I didn't know what to order. A few minutes later, we had four large pizzas ordered along with some beer to be delivered in the next hour. The attendant assured us it would be okay to eat in the pool area. \n\nWe all went back into the camper. After stripping naked, we managed to put on swimsuits with only limited fondling. It appeared that my strengthening of self-control was going to work. Though with all the naked women in my camper, I admit I did become aroused. My arousal was noticed, and they became aroused. Luckily the water was shockingly cold when I cannonballed into the pool. They girls slid in a bit more carefully, but their nipples stiffened under their bikinis. \n\nThe pool area wasn't anything fancy. The main pool was a rectangular hole in the ground, it shared the patio with a jacuzzi hot tub, that was large enough to fit several couples. There was a concrete patio with a pebbled tile trim around the edges of the pools. Faded lawn chairs and lounges, with a couple of patio tables with umbrellas completed the picture. \n\nThe day was warm, and the main pool water was cold. It hadn't really gotten hot this far north, so I could see why the pool area wasn't full of other bathers. After the six of us started floating, and splashing, the parents started coaxing the young children out of the pool, getting them dried off for their dinner at their campers or tents.\n\nSoon we had the pool deck to ourselves. I floated on my back. Carmen and Lexi were talking on the edge of the pool near the shallow end, their feet dangling in the cool water. Kelly and Jenn were catching up, I enjoyed seeing them both smile as they renewed their friendship. Alyssa floated near, then slipped her arms under mine and pulled herself close.\n\n\"What are you thinking about, love?\" she asked softly in my ear as we drifted. \n\nWe slowly turned in a tight orbit, as our bodies floated in the middle of the deep end. Her breasts pressed against my back. I enjoyed the feel of her body close to mine.\n\n\"Nothing pressing,\" I said, \"I feel like we can finally relax a bit. Things have been so hectic.\"\n\n\"Yeah,\" she agreed, \"It's nice to not have to be anywhere, or have anything to do.\"\n\n\"Do you think we can put off going to Pullman,\" I asked just weighing options, \"I mean if Jenn's classes are all tanked, she can just drop all of her classes.\" \n\n\"Well it's Saturday today,\" she said, thinking through the steps, \"There's nobody to talk to until Monday. We can stay here until then, I guess. Why?\"\n\n\"Oh, I wanted to see about going up to a lake in northern Idaho,\" I said, \"I remember my mother taking me there when I was a teenager. She said it was close to some old friends. Uncle Tommy came with us, we rented a house near the lake for a few weeks. It was a nice time for relaxing.\"\n\n\"Sounds like fun,\" Alyssa said, \"We can hang out here tomorrow, and regroup and make plans. If we don't go to Pullman though, we'll have to go shopping for clothes for Jenn.\"\n\n\"Surely,\" I said, \"Missoula has a mall.\"\n\nThe pizza delivery guy showed up, and Carmen retrieved the pizza, while I got out of the pool and settled the bill. The six of us sat around one of the picnic tables and polished off the four large pizzas, and each had a beer or two. Kelly was concerned about me buying alcohol for minors, but she relaxed when I convinced her the drinking age in Montana was eighteen. \n\nThe girls all ate happily, and we discussed what we would shop for at the mall. Kelly said she'd help Jenn with a new wardrobe. Lexi and Carmen wanted to look for some supplies for the RV, since we'd been on the road for a bit. I wasn't sure if they wanted other supplies, but I trusted they knew what they needed. Alyssa and I would wander about, I wanted to look at some electronics, and she wanted to check out the book store.\n\nBy the time we'd finished eating and discussing, the pool area was filling back up with mostly adults, and the sun was setting. The air was getting a bit chilly, and while the hot water jacuzzi looked large enough for the six of us, we decided to go to sleep early. We were all tired from the stress and activities of the past few days.\n\nWe walked across the gravel parking lot, I'm sure the girls had their fair share of looks from the other men in the pool area, and maybe some jabs in the gut from their female companions. I knew I was a lucky man to be the last person to enter our large camper. The girls pulled the drapes and then started undressing. \n\nKelly warmed us up with a little pulse of her power, and we paired up. Six people divided a lot easier than five. Carmen had Jenn by the hair and was kissing her deeply on one of the front sofas. Lexi had grabbed a hold of Kelly's hand and dragged her into the back room. That left me and Alyssa, who looked at me hungrily. \n\nI pushed her into the sofa opposite Carmen and Jenn, and knelt in the aisle in front of her. She squealed and lifted her heels to the cushion and slumped her body, shifting her firm bottom to the edge of the sofa. I untied the sides of her bikini, which was different from her usual conservative one piece suit. She was growing more confident in her body, and had enjoyed showing off. I teased her, kissing from her heel to her inner thigh, then hovering over her sex before starting at the heel of her other foot.\n\nI heard Jenn moan from the other sofa, and felt the heat of Carmen's body as she slipped next to mine. I looked up and saw that Jenn was watching Alyssa, as Carmen was grinding her mouth into Jenn's bare cunt. Alyssa was cupping her breasts, her fingers pulling at her nipples, her eyes blazing into Jenn's. I dove in, and enjoyed the taste of Alyssa's warm folds, coating my tongue with her arousal. \n\nThe heat of the moment spiked as Kelly's aura started to bloom, I heard her encouraging Lexi, in between her moans of passion. My erection grew, but I wanted to get Alyssa off once before I started using my cock. As tired as I was after dinner, I wasn't sure how long I would last. \n\nI lifted my hand to Alyssa folds and wormed a finger into her tight opening. It slid in easily, and she ground her hips into my lapping tongue. I lapped at the bright silver piercing, and she grunted, her hand pushing into the back of my head. I added a second finger and slowly finger fucked her as she encouraged me with her moans.\n\nI pulled my head from her clit to look around, while my fingers continued to drill into Alyssa's well lubricated passage. Jenn was on her back, her head lifting up between Carmen's brown thighs. She'd buck her head back to moan and encourage her latina lover, then dive back in which made Carmen toss her head and groan. \n\nFired up by the scene, I turned back and slipped a third finger into Alyssa cunt, pressing in deep as I sucked at the silver ball of her clit ring. I pulled out the third finger and smeared the copious juice over her tight anus. Then I lowered my mouth to lick around the tight ring as I pressed my finger against the muscle. She groaned and shifted forward as my digit slipped inside. My tongue flicked at her ring as I pushed and pulled my fingers in and out of both her openings.\n\n\"Oh fuck,\" Alyssa said, \"Don't stop, fucking don't fucking stop.\"\n\nShe lifted her bottom off the edge of the sofa, her feet spread wide on the rim of the seat. I fingered her in rapid motions, my tongue lapping at her clit. I sucked at her lips between licks and enjoyed a steady stream of her arousal, drinking from her tap. My free hand gripped my cock, I was hard and ready. \n\n\"Cum for me,\" I growled as I worked at her sex and ass, \"Give it to me.\"\n\nShe gripped my short hair in both hands as she grunted then screamed. My face pushed into her sex as her spending flowed around my fingers. I lapped as much of the gushing flood as I could as she ground her hips, seeking to continue her orgasm. When her fingers relaxed, I stood up.\n\n\"On your knees,\" I said, stroking my hard shaft.\n\nShe flipped around, and I looked over my shoulder at Jenn and Carmen. They were sitting side by side, watching me. Their fingers in each other's crotch, leaning their heads together. As I placed my hand on Alyssa's bottom, Lexi and Kelly slipped past me and flopped next to Jenn and Carmen. Lexi pulled Jenn into a deep kiss, while Kelly lowered her mouth to Carmen's breast.\n\nAlyssa looked back at me, her mane of dark brown hair still damp from the pool, and wet from her efforts. I pulled my foreskin back, and pressed my thick head into her still trembling opening. She pushed back and pressed her hand to the curtain of the window to hold herself. I groaned at the feeling of her cunt enveloping my shaft. Grinding when my thighs pressed into her bottom. Her fingers curled into the material of the curtain, and I started hammering into her hard and fast. \n\nI felt Kelly's aura bloom as I concentrated on Alyssa. I reached forward and gripped the hair at the back of her head. Pressing her against the window. Her hand slipped up pulling the curtain off the rod, her cheek pressed flat against the window pane. Flood lights from the pool across the way brightened her face in the dimmer light of the cabin. I held her under me, and kept hammering away. Feeling her cunt convulse as her body was wracked with another orgasm.",
        "\"Fuck,\" she moaned, her eyes rolling back, \" yess.. fuck make me cum, fuck me hard. yes.\"\n\nI redoubled my efforts her words firing into the lizard part of my brain. I pulled out and tapped her bottom, indicating she should flip over. She rolled to the side, and I moved with her. I grabbed her at the knees and spread her open. I squatted slightly, then with a thrust of my hips slammed back into her. I pressed her knees back until she was doubled over into a ball. I leaned into her, my thrusts hitting her compressed body hard. Watching her body shake with each pounding thrust.\n\nI grunted, then growled, trying to prolong this time, but my peak was racing towards me. I felt a hand cup my swaying balls, and pull gently from behind. That tripped me off, and I slammed in deep, erupting deep in Alyssa's spasming cunt. I blinked my eyes, looking out the window that was opened when Alyssa tore the curtain off the wall. \n\nThe pool area was lit, and couples were making out on some of the lawn furniture. The jacuzzi seemed filled with topless women. One was bent over facing our camper her male companion was fucking her hard. The whole pool area looked like a sex party. \n\nI stepped back a bit, then my cock was enveloped by Lexi's mouth. I looked down and gripped her mussed red hair in my hand. She groaned at the feel of my control, and sucked at my erection. She nursed at the head pulling the remnants of my orgasm. I felt Kelly's arua fire up again, and my cock pulsed in response. \n\nI slumped on the sofa opposite Alyssa, who was watching dazed as Lexi slipped between my legs and swallowed my cock. Kelly slipped over to Alyssa and kissed her deeply. Jenn leaned into me, and pressed her lips to mine. I caught sight of Carmen moving past me, and when I was able to look past Jenn, Carmen was between Alyssa's thighs cleaning my cum from her cunt.\n\nJenn had raised to her knees and I pulled her in for another kiss. Then she stepped up onto the cushion, and straddled my body. I pulled at her hips and pushed my face into her fragrant pussy. She moaned and gripped my head. I explored her folds, my hands gripping her ass cheeks and holding her close while I licked and sucks. \n\nThe suction on my cock dissipated, then I felt Lexi's hips press between my thighs. I couldn't see, but I felt her bottom dance along the the firmness of my shaft, so I spread my thighs. Her small hand gripped the root of my cock, and then I felt my head burrow into her tight snatch. Her hips drew back and then ground down as she fucked my cock.\n\nMy tongue drove deep into Jenn's cunt, curling to press against the roof of her tight tunnel. My fingers gripped and pulled at her ass. She squatted, her thighs widening as my fingers slipped between her firm cheeks, pulling them apart. I pressed a finger into her tight anus, and felt her grunt approval. My mouth was fully engaged in her flowing cunt, tongue curling to pull her juices into my mouth. My nose nuzzled between her folds and she ground her hips, pressing her clit ring against my protuberance. \n\nI heard Carmen growl, \"Fuck, that's it Lexi, lick Momma's cunt.\"\n\nI knew Lexi was still fucking me. My mind's eye put together the picture, Lexi was leaning over and diving for Carmen's cunt. I listened as best I could to the others, with my head between the fragrant heaven of Jenn's groin. I pulled back for a moment to look across the aisle. Carmen's head was pressed between Alyssa's thighs. Alyssa was half twisted, lying on the opposite sofa, her hips turned, one leg on the floor, the other bent on the sofa. Alyssa rested on her back, her head obscured by one of Kelly's bronze thighs. Kelly's hands were gripping Alyssa's breast as she moaned encouragement.\n\nI blinked my eyes, and flicked back through the glass to the pool area. More people were engaged, no longer just making out. They were in pairs, or trios. Bodies pressing together. I couldn't hear any sounds, but could make out women with their mouth open, their bodies trembling in lust. Kelly's aura fired up more, as she ground into Alyssa's face. \n\nI felt Lexi slam her hips into my cock, thrusting back into me. I gripped Jenn's ass and thrust my tongue back inside her tight channel, determined to make her cum. My fingertip, pressed into her ass, and her hips danced. She wanted to feel more of both my tongue and my finger and ground her hips to get more of both. Lexi's body slammed then froze with my cock deep inside. I could feel her orgasm race through her inner flesh, muscles milking my shaft. \n\nLexi grunted then slipped forward, slipping off my cock. Her mouth was glued to Carmen's cunt, her nose tickling her ass. Her mouth slipped up and tongued the dark rose. Lexi lifted a finger to Carmen's cunt and drove it deep inside. I growled, as I tasted Jenn's trembling flow, needing more.\n\nI lifted her up, as I stood. My strong arms twisting her around. I pressed her down, her chest pressing into the cushions at Alyssa's feet. I gripped her ass and spanked it hard, and her head tossed back with a fiery glaze of lust in her eyes.\n\n\"Pull your ass apart,\" I gruffly commanded, and she gripped her cheeks and exposed her ass and cunt. \n\nI spat between her cheeks, then again into my palm. My fingers spread the gob of saliva into her flesh, pressing into her muscle. I spread the gob from my palm over my head, then pressed the tip against her lubricated anus. She groaned and pushed her hips back. I pressed my hand into her back, holding her against the cushion. Then I thrust, hard into her ass. The sudden intrusion made her yelp in pain, then groan and press her cheeks into the cushion. Her tattoo glowed dark, and I spanked her flesh as I drove in and out of her tight channel.\n\nAlyssa's body was bucking under Carmen's talented tongue. Kelly had screamed out an orgasm and was on the floor between the sofas trying to catch her breath. Fingers of one hand gripping her rigid nipples, while the other soothed her engorged cunt. Alyssa was panting, her hand gripping Carmen's dark hair, her hips driving hard into her lapping face. \n\nI roared as I continued to ream Jenn's ass. My hands slapping and clawing at her flesh in a frenzy of lust. My slaps and scratches leaving red marks on her flesh. She bucked at my hard use of her body. Grinding her clit into the edge of the seat. I held her trapped between my thrusting shaft and the firm seat. My hand gripped her amber hair, soaked with sweat into the cushion. I went wild with lust, using her hard.\n\nJenn came with a scream, then her hands were pushing me away. I growled and turned, Lexi had swiveled and was kissing Kelly on the floor of the cabin. Carmen still knelt at the edge of the sofa, kissing Alyssa who had swiveled around and was licking her own spending from Carmen's cheek. I gripped my shaft and cupped my hands between Carmen's thighs.\n\nShe groaned and spread wider. I pushed two fingers in her cunt, then spread her spendings and Lexi's spit over her ass, then lined up and slammed home deep. She screamed at the sudden intrusion, and Alyssa looked up at me with a flicker of alarm.\n\nCarmen grunted then, and pressed her ass back, \"Oh fuck yes, Papi, take this slut's ass, it's yours. Fucking use me.\"\n\nI gripped her firm brown ass and plowed deeper. I was caught in a cycle of frantic lust, I couldn't fuck hard enough. The warm glow of the small cabin pulsed. I lost track of what and who was where and concentrated on my own pleasure fucking the tight hole in front of me. I grunted and shouted, then came with a flood. My balls pulsing as the poured their hot load into Carmen's ass. Then I slumped back, my hand gripping my cock. It pulsed, firm and alive.\n\nI needed more, I couldn't get enough. I looked wildly around the room.\n\nThe cold slap of reality hit when Kelly's aura collapsed. I sunk to my knees, panting. Worn out. I looked to the side where Kelly lie on her back in the center aisle. Alyssa was looking back at me, while pressing the brown stone into Kelly's chest. The room spun as the haze of lust evaporated. Carmen and Jenn were both breathing in gasps from their orgasms, still bent over the sofa. Lexi rolled on to her back, her red hair damp with perspiration and tangled with Kelly's blonde mane.\n\nI looked around, catching my breath. Somehow we'd lost control. This was more intense than anything we'd ever done. The need and lust that I had felt was all consuming. Kelly looked confused, then reached and held Alyssa's hand, keeping the stone touching her flesh. Alyssa looked at me, then we both looked out the window. \n\nThe couples across the way in the pool area were prone. Their naked bodies lying and piled against each other. Their features showing both shock and sexual satisfaction. As we started to slowly move, rising from sofas and floor, the people in the pool area did likewise, and started to find their cast off swimsuits.\n\nKelly grabbed the pendant, and sat up to put it around her neck. I stood and watched the pool area. Alyssa switched off the inside light, leaving us only illuminated by the lights around the pool. Lexi turned and got to her knees, then helped Kelly to stand. They passed me and headed to the bedroom. Followed by Carmen and Jenn. Alyssa came and stood next to me, and we put the pieces together.\n\nWe'd need to make some adjustments. \n\nI was tired to my bones, and I grabbed the edge of the sofa and pulled. It swiveled and lay flat, making a bed. I lifted the edge and pulled a blanket from the compartment below. Alyssa grabbed on as well, and we made a nest of our bodies and blankets and curled into each other. \n\nWe fell asleep quickly, and slept deeply. I was exhausted, sleep was dreamless as my body recovered.\n\nPresent: Kelly\n\nMonday morning is always a bit of a let down. The sun streaming through our window seemed lower than it should be, because the alarm was beeping on the bedside. Lexi quieted it, then headed to her room to suit up for her run. Carmen slipped out after her, following her into Lexi's room, then slipping out after Lexi swatted at her in fun. She smiled and winked at me as she headed to dress for her workout, then to make us breakfast. Alyssa was curled into Jeremiah's side opposite of me. \n\nI watched her sleep, and smiled. I kissed Jeremiah's cheek softly. My family was so special. We loved each other with no jealousy, and with respect for each other. I slipped out and headed to the shower. I was washing my hair when Aly and Jeremiah joined me. Jeremiah and I washed Alyssa together, I washed her hair, and J scrubbed her back. His erection swelled as she pressed her ass into him, but we had enough self control to keep our actions to just play. \n\nSoon I was in my dressing room, alone. Picking out an outfit, and fixing my make up. Jeremiah always said I didn't need any, but I liked to make small adjustments to my appearances. Jeremiah's power might help with other maintenance areas but eye makeup was meant to change from day to day.\n\nWe rejoined around the table, listening to everyone's plans for the day. I had an appointment first thing at our office. Alyssa had some couples lined up for me. I'd ride with Jeremiah and Alyssa, no sense to take multiple cars. Carmen had a new class starting in the afternoon at her dance studio. Her side project after taking care of our needs was teaching dance classes to young children from grade school to high school. She was excited for the new group.\n\nLexi slipped in, sweaty from her run. She'd join us at the office in a little bit. Her schedule was a bit more fluid as she was always training for some race, or triathlon. She needed to swim a mile at the gym first. Our pool was large, but she preferred the lap pool, and the solitude of the inside pool area. \n\nI took a moment while I ate to reflect on Sunday afternoon. The talk with Beth's parents went very well. Beth and Zac agreed that sleep overs would need to be for special occasions, while they finished their senior year of high school. All of us worried that it was more infatuation than love, despite Alyssa claiming their love was real. I trusted her, but I also wanted what was best for our son.\n\nNaomi rushed up to Alyssa and hugged her dressed for her day in preschool The four of us went to Jeremiah's car, and I sat in front while Alyssa sat with Naomi. They shared some special mother daughter time. I held Jeremiah's hand, while I recalled how blessed we'd been by that surprise addition to our family. \n\nAlyssa's pregnancy wasn't planned. We figured it had more to do with halfling physiology. Most halflings, according to Alyssa only had one child. Each of us planned a weekend alone with Jeremiah. While we all enjoyed being together, we also came to understand that we deserved his focused attention too. He tried to make sure to give us all equal attention, but despite that he was a halfling, he was only one man.\n\nThey spent their weekend at the coast. It rained all weekend, so they stayed inside, and \"read,\" at least that was what they claimed. I was pretty sure they fucked all the way through the weekend. They could be passionate lovers, even without my sex angel powers. \n\nNine months later, almost to the day, we gathered in Alyssa's hospital suite and welcomed little Naomi into the world. We are all unsure if she would have special angel powers, but we loved having another baby to care for, at the time Zac was a typical new teenager. I was glad he grew out of that quickly.\n\nWe parked, while Alyssa took Naomi into her school. This morning she was a bit quieter, almost five years old, she was naturally curious. Alyssa came back to the car, with her brow furrowed in a bit of concentration.\n\n\"Is Naomi feeling okay?\" I asked, \"she was quiet, she's not getting sick is she?\"\n\n\"She's fine,\" Alyssa said, \"More than fine, really. She seems to have awakened much earlier than any of us.\"\n\n\"Really,\" I asked a bit shocked, \"Yes, she is very curious, had a nice conversation on the way here, her mind is amazing.\"\n\n\"I didn't feel anything,\" I commented, slightly confused.\n\n\"Well, she's not in our mesh,\" Alyssa explained, \"She's like an outsider. You didn't feel me exploring Beth's parents yesterday. I have to purposefully share things with you when I talk with outsiders.\"\n\n\"Oh,\" I said, understanding.\n\nWe'd discovered a good way to discuss how Alyssa's powers worked. I knew she hadn't talked with outsiders. It was more of a communication with thoughts and emotions. We used the word talk as a shorthand. Within our mesh, we also learned we could check in and out of the communication, even Lex and Carmen. We didn't normally, finding our shared mind more comfortable. But I knew each of us liked to have some quiet time too. Things always seemed to evolve.\n\n\"Jeremiah?\" Alyssa asked, \"Do you know where the plate is?\"\n\n\"The plate? ... Oh,\" Jeremiah thought, \"I think it is in the safe at work, why?\"\n\n\"I think we need to make Naomi a necklace,\" Alyssa said, \"Probably both your stone and mine, just to be safe.\"\n\n\"Really?\" Jeremiah asked, a bit concerned.\n\n\"Yeah,\" Alyssa said, and backfilled us with some thoughts as she continued, \"She is young, and she thinks everyone is like her. Leah mentioned that she felt troubled by Naomi's thoughts. I don't want there to be trouble at school with her teachers and friends.\"\n\n\"I'll get it out today,\" Jeremiah said, \"I'll take the stones to the jewelers, and make something nice for her.\"\n\n\"Thank you lover,\" she said, \"I appreciate it.\"\n\nWe pulled into our office building. The sign, \"Jeremiah Jackson & Associates Professional Counseling, LLC,\" was understated along with other names in the five story office building. One wouldn't know by looking that beyond the small office on the main floor, we also rented the top two floors for special counseling services. The top floor being a set of four bedrooms, with a control room in the center. The floor under being mostly storage, and a safety buffer.\n\nThe office was open, our receptionist welcomed us and gave us each a folder with our schedules. I slipped into my office and opened up the folder as I sat at my desk. It was just after 9, and our appointments didn't usually start until the afternoon. Most mornings I spent checking the accounts and orders for our network of Bed & Breakfasts. My mother had handed over all of her holdings to me, and I managed the properties remotely. Each Bed & Breakfast was run by one of our employees, but I managed all the accounts.\n\nToday, though, was different, a nine-thirty appointment for a couple that was having some intimacy issues. I checked the computerized calendar, and saw they hadn't arrived yet. I reviewed their file, and recalled their initial interview. They were in love, but had some intimacy issues. They were making progress with counseling. Alyssa was the psychiatrist, she made the calls. I was more a therapist. Alyssa had made notes that through counseling, they were working on communication while engaged in intimacy. \n\nThis was actually quite common, according to Alyssa. People often slipped into a slightly different persona while being intimate with a trusted partner. Cultural taboos were strange, and injected themselves differently person to person. One partners thrill at dirty language might be uncomfortable for the other partner. Counseling was the first step, and many couples started to understand the dynamic simply with frank discussions with Alyssa. \n\nJeremiah was called in if there were some significant conflicts. My services served as a safe place to practice, in the rooms along the top floor. Alyssa would meet with the couple afterwards to talk through the interaction. We didn't film or record anything, but I was always observing. I had learned I could tune my aura well, to provide assistance. \n\nThe couple, a James and Jodi, had different kinks. James had a tendency to pursue rougher interactions. While Jodi enjoyed the physicality, she was often fearful in the midst of intimacy. Alyssa made notes that nothing appeared out of the ordinary in counseling. Jeremiah saw no immediate conflicts in his session. We needed to observe them in situ to be able to assess their issues and prescribe a treatment.\n\nI smiled, that meant I wouldn't be in the control room alone. While I had much better control of my powers than when I was younger, my power was stronger if I was aroused. Masturbation was helpful, but having a partner in the control room made it always nicer. Either Lexi, or Carmen, often stopped by to help me, if Jeremiah or Alyssa were otherwise occupied.\n\nI carried their folder with me to the private elevator near Jeremiah's office. Alyssa joined me, then Jeremiah came out holding the bronze plate. \n\n\"That's explains why you dropped offline,\" Alyssa smiled, and kissed his cheek, \"Thank you for finding it so quickly.\"\n\nI felt a moment of vacuum as she touched him, and remembered how the plate would terminate any of our powers at a touch. The dark navy-blue stone glowed as Jeremiah twirled the plate in his fingers.\n\n\"It was right where I thought it was,\" Jeremiah said, \"I'll take it down to the jewelers after this session.\"\n\nWe all filed into the small elevator, and knowing that I'd be using my powers soon, Alyssa pulled me close and kissed the back of my neck. \n\n\"I was looking forward to this session with you,\" she said lowly, \"I love how your powers can help others.\"\n\nI smiled and leaned into her, letting my powers flow as we rode up. I looked over at Jeremiah, and he smiled back, completely unaware of my aura. Then he blinked as Alyssa started to fall under my sway, and slipped the plate into his pocket releasing it from his fingers. The effect of my aura was almost instantaneous as his pants tented under the arousal in the elevator.\n\n\"Dial it back a bit, love\" Alyssa said breathless, \"We need to be attentive to our clients.\"\n\nI backed down a bit, my powers strangely acute this morning. Maybe Zac's awakening had added to my effect. The elevator opened into the central control room. The clients would arrive via the normal elevator, escorted by our receptionist. We had gone over the protocol with them their last visit. They were instructed to treat this morning like a special getaway at a hotel. Their room was prepped to appear like a standard hotel room.",
        "The control room had a one-way glass window that faced each of the rooms. Desks were arranged in front of each window with three chairs for each desk. In the center of the room was a large square ottoman about 6 foot square. I took a seat in front of the desk facing the room. I was in charge of this session, mostly to add a bit of arousal to the couple that might be feeling nervous knowing they may be observed. Alyssa and Jeremiah were there mostly to observe. I sat down and started setting up the lighting in the room, and checking the audio connections. \n\nWhile I did that, Jeremiah and Alyssa moved to the sofa. They started kissing and lightly petting, my elevator arousal had them both a bit amorous. They were content to kiss and and touch each other through their clothes, I enjoyed the pulse of energy that came from their arousal. I licked my lips dampening them, as my breath quickened slightly. I savored the taste of their heavy petting. \n\nThe door to the room opened and our clients walked in, and Jeremiah and Alyssa stopped making out and slid into the chairs next to me. The woman was a tall brunette, her long tresses loose around her shoulders. Her legs clad in black stockings and a form fitting black pencil skirt. She turned towards her husband as he entered the room behind her. He was a large man, taller and stockier than her thin form. His shoulder muscles rippled under his black form fitting shirt, grey trousers were fitted well and clung to his well muscled ass. His flesh was dark, probably from a hispanic or middle-eastern heritage. They were a striking couple. \n\nThe women leaned into her husband, lifting lightly on her toes, the heel of her shoe raised from the ground as she kissed him passionately. They clearly had chemistry and I felt their arousal flow through the room. I echoed their passion with my powers and their embrace tightened. Then the man grabbed a handful of hair and tugged her head up, dropping his mouth to her collarbone and kissing and sucking under her jaw.\n\nShe groaned as his kiss hit a sweet spot, her body arching and offering herself to his use. I heard his growl of arousal through the speakers, and her panting response. He pulled her head, then twisted her around. She looked over her shoulder at him, her eyes dark with lust.\n\n\"Strip and kneel,\" he commanded darkly, standing over her.\n\nShe looked up and nervously reached behind her to unzip her dress, I could tell his demeanor put her on edge, I recalled her comments in the background notes. He enjoyed control, and she had a hard time making the transition. She wasn't quick enough to strip and he stalked towards her, then gripped the back of the dress, and tore it at the seam.\n\nShe drew back from him, clutching the remains of her dress to her chest, her red bra showing against her blushed flesh. Her eyes sparked with anger as she looked at him darkly.\n\n\"What am I supposed to wear home, now, asshole,\" she swore at him, then her eyes widened as he followed after her and shoved her onto the bed.\n\n\"Well this is a bit different,\" said Jeremiah, who knew his way around a rough scene, but this was rapidly becoming a borderline rape fantasy.\n\nThe man crawled up on the bed gripping the black dress, and pulling it away from his now frightened wife's hands. The delicate fabric ripped and she was now bare and exposed to us in matching red lace panties, bra and garter that held up her thigh high stockings. She curled up trying to crawl away from him, as he tossed the dress behind him,\n\nI tried to find some control, pushing some arousal trying to offset his off the chart aggression. His head twisted towards the mirror and he sniffed through his nose as if trying to place a scent. His eyes glowed red and smirk came across his lips. He grinned ferally at the mirror and I drew back. \n\n\"I can feel you,\" he growled as his wife cowered on the bed behind him, \"I feel your stench succubus bitch, stop hiding and show yourself.\"\n\nI growled and hissed, my fangs pushing through my gums as I responded to the threat. I pushed out my power and sucked in the fear and arousal. My claws lengthened as I faced the demon in the other room. \n\nHe suddenly slumped to the ground, and I cursed aloud as a cold plate pressed into my flesh. I wheeled around trying to claw at the offensive metal. I hissed at the male form that was pressed close, then hugging me. I tried to claw at him, but his hands held mine firm. \n\n\"Kelly,\" Jeremiah commanded, and I blinked returning to myself, \"Kelly calm down.\"\n\nI exhaled and felt my fangs retract, my claws retreating. I looked wildly at the male form holding me. I blinked then recognized my husband, looking at me with concern. I looked around for Alyssa, but she had moved to the other room, and was checking on the frightened woman crying on the bed. \n\n\"Are you back,\" Jeremiah said, pressing the brass jeweled plate to my flesh, \"Alyssa knocked him out, but you weren't responding. You morphed, like ...\"\n\n\"I'm okay,\" I breathed, still trying to put the pieces together, \"Who is that guy.\"\n\n\"Hold this, and wait here,\" Jeremiah commanded, \"I'm going to find out.\" \n\nHe opened a closet and grabbed some lengths of bondage rope, we kept a supply in the control room for some of the more kinky clients. He then went into the room with Alyssa and started to bind the man's wrists and ankles. Alyssa was holding the woman, who was crying into her shoulder. \n\n\"What the hell just happened?\" I thought to myself.\n\n*****\n\nAuthor's Note:\n\nThank you for reading, commenting and voting. I hope you enjoyed this chapter of the story. \n\nEditing props go out to mgenette again, who helps me use the right words correctly. His help and encouragement have been invaluable. Any remaining errors are totally my fault.\n\nThere is more to come, the family has more challenges to meet, and obstacles to overcome. Ancient adversaries may be right around the corner.\n\nI hope you enjoyed this chapter, thanks for reading!"
    ],
    "authorname": "HankDolworth",
    "tags": [
        "male dominance",
        "female submission",
        "supernatural",
        "succubus",
        "telepathy",
        "anal",
        "oral"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-designer-pt-02-ch-18"
}