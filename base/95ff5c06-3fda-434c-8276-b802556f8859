{
    "title": "Girl Interrupted",
    "pages": [
        "Olivia watched the time tick by, the gag in her mouth was making her drool. She couldn't wait until the ice finally melted and she would be able to get at the key, unlock herself and masturbate to orgasm. After her last boyfriend she'd started getting into some kinkier stuff after reading online about it, and although she didn't have anyone to try any of it with her, she found that self-bondage was almost as much fun. Right now, her roommate was out for the evening and so she had the time to handcuff herself with the key in a block of ice, and then as soon as it had melted, she would play with herself. At the moment there were vibrators stuffed into her ass and her pussy, but they were on low... she was leaking pussy juices as she waited for her release and the great orgasm would that would follow.\n\nClosing her eyes, she imagined that she had a malicious lover who was torturing her sexually like this... keeping her pussy vibrating and alert without giving her completion. After this he would whip her tits and pussy, put on her nipple clamps and fuck her ass while turning the vibrator in her pussy up all the way... the thought of all of it made her writhe on the bed in lust.\n\n\"Olivia?\" Her eyes flew open in a panic... worse than her roommate, that was her ex-boyfriend's voice, \"Olivia, I came to get my jersey. I know I said you could keep it, but I just need it for the week...\" his voice trailed off as he opened her bedroom door to see his girlfriend, naked and restrained with toys buzzing in both her holes, struggling to get out of handcuffs. Absolutely shocked, Doug just stared at her. The Olivia he knew had been a bit of a prude, she hadn't liked to give head, she certainly didn't do anal, and she definitely didn't do anything like this. \n\nHer entire body was stretched out, a thin sheen of sweat covering it, with her ankles and wrists restrained at each end of the bed. As she writhed, her breasts bouncing, trying to reach the ice which hadn't melted completely, her breasts jiggled enticingly. Stepping forward, Doug examined the whole elaborate set up as she struggled and screamed at him from behind the gag; he ignored her muffled cries as he realized exactly what she'd done. \n\nGrinning at her, he took the ice out of reach of her fingers, \"It's not going to be melted yet for awhile anyway.\" he told her. \n\nLooking around, he found the box on the side of the bed that was filled with her toys, raising his eyebrows he whistled at the extensive collection. Smiling, he turned back to her and started to get undressed, she screamed at him from behind her gag... ok so she thought this would be more fun with another person of course, but she didn't mean it to be her ex boyfriend! They'd broken up because she'd seen him kissing another girl at one of the frat parties, and drunk or not she wasn't going to stand for that. And now he was going to take advantage of her.\n\nDoug smiled down at her, \"You might not want it now, but you're going to be begging for it soon...\" she screamed at him some more as he reached down and picked up one of the whips, \"I never figured you to be this kinky Olivia... guess you never really know a person as well as though think you do!\"\n\nAnd with that he brought the whip down on her right tit. Shrieking with pain now, he'd hit her much harder than she'd ever hit herself, Olivia began to writhe in painful pleasure as he rained blows down on her tits. He had good aim, hitting her swollen nipples often. Slowly the blows moved down her stomach and onto her mound, then onto her inner thighs and occasionally slapping wetly against her pussy. Smiling still, he dropped the whip and got between her legs, examining the toys that were imbedded in her body. \n\nTurning up the one in her ass a little, he started to pump the one in her pussy in and out of her body, without increasing the vibration. Olivia wanted to cry as the sensations spread through her, in some ways she did want to beg him to get her off, she wanted him to play with her helpless body... anything if she could just cum. In fact, right now, she'd suck him off happily if he'd just let her cum. \n\nInstead he pressed the vibrator slowly back into her, looking up at her face, \"If you're good, I'll let you cum sooner than later,\" he told her, \"I'm going to undo your leg restraints, but only because I want to reposition you... if you're bad, you'll regret it!\" he waggled a finger at her mockingly.\n\nTaking each ankle, he locked them back into place at the headboard, so that she was almost bent in half, her legs spread wide on either side of her body. Now her pussy was split completely open and the vibrators were pressing into the most interesting places in her body... this was a position she could never have put herself in on her own. Doug seemed to be the most curious about the vibrator in her ass, probably because she'd never let him put so much as a finger there before. This new position gave him a wonderful view, and he started to pump it in and out of her... her body protested, she never actually moved it around inside of her. The bumps and ridges on it rubbed against her insides and she wriggled as much as she was able to.\n\nGrinning at her, Doug pulled clamps from her box of toys, there were three and they were all connected by a chain. Putting his mouth to her right nipple, he sucked on it until it was completely hard before attaching the clamp. Then he tightened it until she was screaming again; when he repeated the process on her left nipple she felt tears sparking in her eyes as the sharp jolts of pain that were spreading from her poor squashed nipples. Her hips bucked when he started to suck on her clit, tickling it with his tongue and bringing her to the brink of orgasm... and then he tightened the clit on it and tears streamed down her face as he tightened it almost unbearably. Pulling back to admire his handiwork, he reached down and picked up a paddle.\n\nSteadily, he began spanking her with it, turning her ass a bright pink as she yelped and whimpered behind the gag. Every time her body jerked it would cause the clamps to pull on each other because of the chain, and she was jolted with a fresh bolt of agony from her squashed organs. \n\nFinally he stopped. Then he pulled the vibrator from her ass and started undoing his pants. Olivia felt a fresh bolt of fear course through her, he was much bigger than the very small vibrator she'd been using, and that was the biggest thing she'd ever had in her ass. He grinned as she started struggling a little, and turned up the vibration of the vibrator in her pussy. While she jerked in pleasure, he lined up the tip of his dick with her asshole, pressing in. With every inch that he buried himself, he turned up the vibrator in her pussy a little more; he could actually feel the vibrations through the walls of her body. It felt fantastic, especially as her tight ass engulfed him. \n\nThen he began taking turns between turning up the vibrator and tugging on the chain connecting the clamps, making her twitch in alternating pain and pleasure. When the vibrator was at its highest intensity, he plunged the last few inches of his dick home, making her shriek in combined pain and pleasure. Her whole body felt like it was swamped with sensation, the two extremes intermingling until she couldn't tell which was which. Roughly he started fucking her ass, spearing her with his dick and stretching her obscenely with every thrust. Her breasts bounced wildly, pulling on the chain so that her clit ached and the vibrator inside her pulsed and was pressed forward with every thrust. When she started to cum the vibrator was even more intense against the sensitive walls of her pussy, and her clit swelled up in its confines, making her shriek with renewed pain as her orgasm flowed over her. \n\nDoug pulled the gag off of her so he could listen to her shriek her orgasm in a dying voice, her throat was sore and dry from all the yelling she'd been doing behind the gag. With a final brutal thrust he spilled his cum into her ass, sighing in completion as her hole gripped him even tighter. \n\nLeaning down, he kissed her tear-stained face before replacing the gag in her protesting mouth. He didn't fasten it tightly, but she couldn't spit it out either. \n\n\"You know,\" he whispered in her ear, \"Chrissy kissed me, but you didn't stick around long enough to watch me push her off and call her a slut... wish you had. And I wish I'd known you like it like this! Invite me over to play with toys any time you want.\"\n\nPopping his dick out of her ass, he grabbed a small butt-plug from her box and fit it into her ass, it would keep his cum in her until she took it out. Leaving the vibrator in her on high, he took off the clamps from her tits and nipples, the renewed pain and intense pleasure in pussy made her cum again. When she finally stopped, Doug was gone and the melted key was right next to her fingers. As she undid her restraints her body collapsed onto the bed, completely exhausted and fulfilled.\n\nLater that night, she would dig out his phone number again. "
    ],
    "authorname": "Goldeniangel",
    "tags": [],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/girl-interrupted"
}