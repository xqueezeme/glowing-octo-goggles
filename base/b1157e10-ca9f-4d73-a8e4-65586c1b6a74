{
    "title": "Just Supposed to be a Summer Job",
    "pages": [
        "I was honored to be asked to participate in \"Wine and Old Lace.\" I've never done historical or romance before, so this was quite a challenge. I hope I've earned another ask sometime in the future.\n\nIt was just supposed to be a summer job, a way to put some money in Stevie Tanner's pocket to take to his freshman year of college in the fall. His best friend, Ronnie Bailey, had persuaded his uncle, who worked at a resort in the Catskills, to get Ronnie and him onto a crew for the summer. They would do gardening, lawn work and maintenance work during the day, and hang out and drink beer in their cabin at night.\n\nThe cabins were sparse and cramped, four guys to each with a pair of bunk beds, a television and a small bathroom, but the pay was better than anything they could find on Long Island, where they lived. And the money would come in handy for living expenses, Stevie at the University of Iowa in Ames, IA, Ronnie at the University of Vermont in Burlington, VT. Stevie was going to be a CPA, Ronnie was going to be a veterinarian.\n\nIt was tough physical work, but both boys were in good physical condition, high school athletes having just graduated. At night, they would mostly hang out in someone's room, eating pizza and drinking beer, and mostly stayed away from the paying customers, as Ronnie's uncle had instructed them. The entertainers -- dancers and singers -- didn't follow that rule much, but nobody seemed to mind them hanging around because for the most part they were pretty good looking kids, both the guys and girls. Occasionally, you'd see one of the entertainers pair off with a teenage child of one of the guests, and sometimes, you'd see one of them pair off with one of the guests -- a definite no-no, both were told, although sometimes it didn't seem the rule applied to the entertainers. Neither boy really paid too much attention to that in the first few weeks as they got into a routine.\n\nMost people came up to the resort for a week's stay, coming in late Sunday and leaving the next Saturday morning. Some of the more well-heeled stayed for two weeks straight, and by the second week had at least learned some of the staffers' names -- at least the ones in the dining hall and the service rooms. Nobody worried about learning the names of the maintenance crew, the boys quickly learned.\n\nOne warm evening, the boys drifted over to one of the gazebos where a handful of men were playing cards. Several of the wives were standing in the general area talking back and forth, when one of the men, the one everyone kept calling \"Figs,\" looked up from his hand, turned to his wife and told her she was giving him an ulcer hanging over his shoulder. His eyes scanned those gathered about, and falling on Stevie, called him over to the table.\n\n\"Hey, kid. Yeah, you with the hair ... c'mere. Escort my wife over to the dining hall, get her some ice cream, get some for yourself, and show her around the grounds. She's killing my luck hanging back there. I'm down $37 already.\"\n\nHe pulled a $20 bill out of a wad for two ice creams that were only going to cost maybe $1.50. He looked Stevie straight in the eyes, so remembering what he had been taught, the young man looked straight back at the older man. The older chuckled when Stevie took the bill and walked out of the gazebo trailing the man's wife.\n\n\"God-damned kid's a walking hairball. What do they call that, an Afro?\" Figs commented as the two walked off.\n\n\"Figs\" was in fact Charlie Bonafiglio, a fairly high-ranked member of the Lucchese crime family. He most often went by \"Figs\" or \"Charlie Figs.\" Anyone not living under a rock in the New York area knew who Charlie Figs was. Stevie took the request seriously.\n\nWhen the pair exited the gazebo, Stevie got his first good look at Mrs. Charlie Figs. She had auburn hair down to her shoulders, the bluest eyes he'd ever seen and was built like a 45-year-old Sophia Loren.\n\n\"Didn't your mother ever tell you it was not polite to stare at a lady?\" she asked in a sarcastic tone.\n\n\"S-s-s-orry,\" Stevie stammered.\n\nStevie thoroughly enjoyed playing tour guide for Mrs. Bonafiglio -- \"Call me Angela,\" she instructed him, and by the time the pair returned to the gazebo, she had her hand around his upper arm. While she didn't make a big deal of it, she removed her hand from Stevie's arm as they ascended the steps of the gazebo.\n\nStevie reached into his pocket and dug out Charlie Figs' change for the ice cream.\n\n\"That's yours, kid,\" Charlie said as he looked at the money Stevie was trying to hand to him. \"Thanks for getting her out of my hair for a bit, and thanks for watching over her.\"\n\nStevie's eyes got big as he put the money back into his pocket. He had worked for two years at his father's butcher shop in Brooklyn and had never been tipped more than $1 before.\n\n\"Holy shit. An $18 tip just for showing her around,\" he thought to himself. \"That's almost a day's pay.\"\n\nThe next day while he was mowing around the cottages, Stevie received word that Charlie Figs wanted to see him. Stevie asked his boss if he could take off for a few minutes to see Mr. Bonafiglio, and upon hearing Charlie Figs' name, the boss told Stevie to take all the time Mr. Bonafiglio needed.\n\nAngela answered when Stevie knocked on the door of the Bonafiglios' cottage. She let Stevie in, then excused herself and left the cottage.\n\nIt was a hot and humid day, and Stevie was sweaty from mowing. His curly brown hair had reacted to the humidity and had tightened up into a wide, long Afro, and reached down to the top of his shoulders. Charlie's hair was cut short and he had a Brylcreem wave in the front. He didn't understand boys wearing hair long like a girl. He looked hard at Stevie.\n\n\"I can't figure you out, kid. You're either a light-skinned ni ... black kid ... or a dark-skinned ki ... Jewboy wannabe with a perm.\"\n\nStevie was silently glad that Charlie at least felt guilty enough not to use the coarser descriptions of his ethnicity. Not that he hadn't heard both words hurled at him before.\n\n\"Would it make a difference if I'm either ... or both?\" Stevie asked in a clear, confident voice. \"The only thing I will tell you is that I'm no wannabe. This ain't a perm. Gets tighter and shorter or looser and longer depending upon the weather. Always been like this.\n\n\"You wanted to see me?\"\n\n\"Yeah, kid I did. I got something to ask you, and to quote you kids, it's pretty heavy. But whatever you answer, this conversation stays right here between us. If it ever gets out any further, one of us is going to suffer some broken ribs and a busted face, maybe something worse. You catch my drift?\"\n\n\"Yes, sir.\"\n\n\"My wife and I have sort of an interesting relationship. From time to time, I let her ... have some dates with other men, if you catch my drift. It makes up for the occasional ... relationship I have with other women. But she only does it with my knowledge and approval ... and it's done very hush-hush. You understand ... the busted face thing, right.\"\n\nAlthough he tried to remain expressionless, Stevie's eyes widened. The reaction wasn't lost on Charlie.\n\n\"So how it's going to work is you're going to meet her at the gazebo at 9 each night, and then go off for a walk. Just make sure you're out of the cottage by 11, because I should be heading over by then ... and I don't want to see you sneaking away.\n\n\"And you'd better clean up real good before you see my Angela.\n\n\"And one more thing, kid. You treat her like a lady, or they'll eventually be finding pieces of you all over these mountains. Got it?\"\n\nStevie just nodded his head. His mouth was so dry he couldn't talk.\n\nCharlie nodded back and dismissed Stevie with a backhand wave. Stevie didn't waste any time leaving the cottage.\n\nStevie was glad for the noise of the mower. His mind was going in 80 directions at once, and the sound seemed to help him focus.\n\n\"Holy shit! Charlie Figs' wife and me! Damn, I was hoping to at least live to see my twenties,\" the young man thought to himself. \"What if I can't do a good enough job?\"\n\nStevie had only had sex about a half-dozen times with three different girls, and while he thought he did OK, none of them was near as experienced as Mrs. Charlie Figs. And two of the times the sex had been rushed, in the backseat of his cramped 1960 Pontiac Tempest. He remembered what his father had told him when he gave Stevie the \"birds and bees\" talk. \"Take your time. It's not a race. And always try to please your partner.\"\n\nThe afternoon passed quickly. Stevie met up with Ronnie at the maintenance shack, and they walked over to the dining hall to get their employees' meal. Ronnie asked about the evening's plans, but Stevie told him that he had to take a shower and do an errand for Charlie Figs.\n\n\"Think you can get another $18 tip out of him again?\" Ronnie inquired.\n\n\"Don't I wish!\" Stevie replied.\n\nStevie was at the gazebo five minutes early. He was fidgety and sweating as he caught Charlie's eye. Charlie nodded, and Angela, who was sitting in the chair a few feet behind Charlie, got up and walked over to the young man. She put her arm around his, and the pair slowly wound their way to the cottage rented by the Bonafiglios.\n\nMost of the housing at the resort was just cabins, but there were a group of cottages for those that wanted a little more room and comfort. A few of the cottages, like the Bonafiglios', even had air conditioning.\n\nAngela Bonafiglio was wearing a demure blue sundress, not like the rather risqu\u00e9 sundresses worn by many of the younger women and teenagers at the resort, which had thin straps and lower cut backs and showed off quite a bit of bare shoulders. But Angela was about 45 and the wife of an important man, so dressing like that was not an option for someone of her station.\n\nThe material of the dress was a little thin, and Stevie noted that Angela's nipples stiffened as they entered the air-conditioned cottage. When he looked up at Angela's face, she was watching him eye her 36C tits, and her lips twisted into a crooked smile.\n\n\"I'm assuming you've done this before, haven't you, kid?\" Angela said as she continued to smile.\n\n\"Yes, ma'am, a few times,\" Stevie answered quietly.\n\n\"It's Angela, kid. None of that ma'am shit with me,\" she giggled.\n\n\"Yes, ma'am ... I mean Angela.\"\n\nAngela slowly walked to the kitchen, and poured herself a shot of J&amp;B scotch over three ice cubes. She held up the glass, shook it slightly, and looked at Stevie.\n\n\"Yes, ma'am ... er ... Angela, that would be nice.\"\n\nAngela repeated the pouring.\n\nAngela motioned for Stevie to sit on the sofa, and she sat down next to him, turned at an angle to him. He watched as her breasts jiggled under the top of her dress, and she again caught him looking.\n\n\"Are you a boob man, Stevie?\" she asked directly.\n\nStevie flamed red and dropped his eyes to the drink in his hand.\n\n\"Stand up, kid. We've only got two hours, so let's get this show on the road.\"\n\nThey both stood up and Angela stepped into Stevie's space. She put her arms around him, with her hands on his back. She rubbed his back up and down, then leaned in for a soft kiss. Stevie kissed back, and then put his arms around Angela, with his hands resting on the top of her firm ass. For the briefest of seconds, he thought that Angela was probably about the same age as his mother, but that thought quickly disappeared as she leaned in for a more physical, longer kiss. Stevie could feel his cock coming to life, and so could Angela as it was pressed up against her stomach.\n\n\"Why don't you do the honors and unbutton me?\" Angela said.\n\nEver the obedient child, Stevie did as he was told, looking for all the world like a kid at Christmas, Angela thought. Once she was naked, she started to return the favor, and when she got Stevie's underwear off, she found his 6 inches of man meat hard at attention. She leaned over and gave the head a soft kiss. The kid's knees buckled slightly.\n\nAngela led the kid to the bedroom and pushed Stevie down on the bed. She straddled his hips and sank down on him cowgirl. He started to buck but Angela put her hands flat down on his chest and didn't move. He got the hint and stopped. Angela then slowly started to rock back and forth, grinding her clit up against his cock. Stevie remained almost motionless, letting Angela lead the way. In truth, he had never done cowgirl before and had his dick in that deep into a woman. Actually, he thought to himself, he had never fucked a woman before: the others had been mere girls.\n\nAngela started breathing heavier. She leaned over and gave Stevie the most passionate kiss of his young life. As she leaned back, he took her boobs in his hands, then gently thumbed her nipples.\n\nAngela moaned, then her eyes flickered, she stiffened, and started bucking wildly. Stevie felt her juices cascading down his pole and onto his stomach. He'd never made a woman, or a girl for that matter, orgasm before. He joined her moments later in the biggest orgasm of his life.\n\nAngela didn't climb off as Stevie's pole started wilting. She laid still on his chest for a few seconds, then slowly started to use her pussy muscles to squeeze the young man's softening erection back to full hard. It only took about two minutes and Stevie was back hard as a rock. Angela smiled inwardly, thinking to herself, \"This old lady's still got it!\"\n\nAngela rolled the two of them over to missionary without letting Stevie's cock leave her pussy. With \"the easy one\" out of the way, she knew the kid would be good for a long, slow fuck, and she dictated the pace from underneath. The pair would occasionally lean in for some sensual kissing while they were fucking, and Stevie was working up a good sweat on top. His long hair was now falling down in ringlets about Angela's face, tickling her and being a new sensation. She had never had sex with anyone before whose hair was about as long as hers.\n\nAfter about 20 minutes, Angela kicked Stevie into a higher gear, and the added speed gave her what she was seeking, a second big orgasm. Angela's orgasm underneath him kicked Stevie off soon afterward, and the pair laid on the bed breathing heavily, each lost in their own thoughts.\n\nStevie left the Bonafiglios' at about 10:30, being very mindful of the time. He practically whistled all the way back to his cabin. Ronnie and two of the other maintenance workers were kicked back watching the 12-inch Hitachi black and white television.\n\n\"Well, you certainly seem chipper,\" Ronnie said as Stevie entered.\n\nStevie badly wanted to brag to his friends about his night with Angela, but he knew better than to say anything incriminating.\n\n\"Just keeping Mrs. Bonafiglio company and eating some ice cream while Charlie Figs played cards,\" he said blandly. If any of the others had seen the smile spread across Stevie's face, they might have had some questions.\n\nStevie again met up with Angela at the gazebo where the men were again playing cards the next night. Charlie actually stopped playing for a bit to acknowledge Stevie, which made the 18-year-old feel somewhat important. He and Angela then headed back to her cottage.\n\nOnce safely ensconced inside the cottage, Angela directed Stevie to again sit on the sofa while she poured each of them a scotch over ice. As she handed Stevie his drink, she noticed the young man fidgeting with nervous energy, and was pleased that she still had what it took to entice a young man.\n\n\"Last night was good, Stevie, but have you ever eaten pussy before?\" Angela queried.\n\nStevie's mouth dropped open. He had read enough Playboys to know what Angela was referring to, but had never yet had the chance to try it with a girl ... or a woman.\n\n\"No, ma'am ... I mean, Angela. But if you tell me how, I can try my best!\" Stevie blurted out.\n\n\"That's a good boy,\" Angela said in an almost motherly tone as she caught herself.\n\nAngela had Stevie remove her clothes. She could see Stevie's erection growing. She then slowly stripped him. Sitting next to him on the sofa, Angela slowly spread her legs as Stevie watched. She gently took his face in her hands and guided it to her pussy. She could see Stevie take a small sniff and wrinkle his nose. Even though she had douched earlier in the day, she knew that the smell of pussy wasn't always the most pleasant.\n\n\"Stick out your tongue and run it along my opening,\" she said gently.\n\nStevie followed her order and was rewarded with a small squeal and a slight jump from Angela. The taste, he decided, was better than the smell, and he leaned back in for another lick, going in a little deeper. This time Angela gave out a throaty moan, and in that moment, Stevie was hooked. He started licking like he was devouring an ice cream cone, and Angela started writhing and moaning like a woman possessed. Her moans made his hard-on grow stronger and pushed him to keep up a frenzied pace. About a half-minute later, Angela could stand no more, tensed up her whole body, then started to thrust her pussy against Stevie's face full force, almost knocking him off the sofa as she shrieked. At that moment, her only lucid thought was that she was glad she had the air conditioning on and the windows and doors closed.\n\nThirty seconds later, Angela finally finished, and Stevie's face was awash in her juices.\n\n\"Wow!\" was all he said. \"Wow. Wow. Wow!\"\n\nSteve waited until Angela showed some sign of life before resuming his tonguing. Now that he had an idea of what worked, he experimented with a few other movements and spots. Angela seemed to be enjoying it all, and when Stevie finally found her swollen clitoris, Angela was pretty sure the world exploded into fireworks, puppy dogs, and rainbows as she went from a squeal to a shriek.\n\n\"Damn boy. You sure you never did this before? That was fantastic! Now slide up here and give me that cock.\"\n\nStevie indeed slid up on Angela and gave her his cock. She reached her head up and gave him a big, sensuous kiss on his lips, then slowly started to lick her juices off of his face. Stevie enjoyed her ministrations as he concentrated on keeping the pace which Angela set.\n\nThe Bonafiglios' two-week vacation went very quickly, Stevie thought to himself as he walked over to the nightly card game a few minutes before 9 on the final Friday that Charlie and Angela were to be there. Some of the families were busy with the talent show that was being done in the recreation hall, but Charlie and his card buddies were in their usual spots in the gazebo with their drinks and cards. Stevie caught Charlie's eye as he took Angela by the arm, and Figs gave him the usual nod.\n\nAs it had been from the first night on, the pair had another night of fantastic sex. When it was time for Stevie to leave, Angela took his face in her hands and told him he was a wonderful lover, and that any woman would be glad to have a husband as attentive in bed as Stevie.\n\n\"You don't have to take shit from any girl ever, Stevie. You're a wonderful guy and a wonderful lover, and any girl who can't see that is not worth you.\"\n\nThe pair embraced, and Stevie walked off. Somehow the rest of the summer went on.\n\nIowa City, Iowa, was about as far from Long Island as humanly possible, Stevie thought as he got off the airplane to start his freshman year in college. He and his father had previously been at the school for a visit in May, and at that time he was so impressed he signed up to attend, but in the cold light of a sweltering Iowa August, maybe it hadn't been the best decision of his life, Stevie thought to himself.\n\nA cab took him to the dormitory, and when he arrived, another freshman, his roommate, was already there. Gary Butkus, an architecture major, came from the western part of Iowa, Council Bluffs. Since neither was going to school with a buddy, the school had decided to make the two freshmen roommates. Stevie came in lugging two big suitcases, which had pretty much all of his clothes and a few worldly possessions inside. Gary was sitting on his bed, fiddling with a clock-radio. He offered Stevie a cold can of Miller, and Stevie immediately knew that he and Gary would get along.",
        "Freshman classes seemed easy to Stevie, who as the No. 7 graduate in a class of 630 students, was at Iowa on a half-scholarship. Math was Stevie's strong suit, and there weren't many math equations in high school that he couldn't figure out in his head. That always drove his high school teachers crazy, because on tests and homework assignments he would turn in his answers without accompanying \"work.\"\n\n\"You have to always show your work, so if you miss a problem we can review with you where you made the mistake,\" the teachers would say. \"You might still be able to get partial credit if you show your work.\"\n\n\"I don't want partial credit. If it's right, score it. If it's wrong, mark it wrong. I made the mistake; mark it wrong. I'll live with it,\" Stevie would complain back.\n\nThe social aspect of college was a little tougher for Stevie. With his darker skin and long, curly hair, the Iowans in the crowd didn't know what to make of him. They assumed since he had long hair, he was a hippy and was probably on drugs. Many of the other kids at the school were from the rich suburbs of Chicago, who pretty much looked down on anyone who didn't look like them and act like them.\n\nStevie and Gary bonded with the pair of roommates right across the hall from them. Rich Nowinsky was a tall, strapping kid from Philadelphia, who spent the first three days in Iowa City drunk on his ass because Iowa was an 18 state for drinking age, and Pennsylvania was a 19 state. Andy Mayhew, his roommate, was from downstate Illinois, and his father worked in a GM plant, so he had the blue-collar vibe working. The two sets of roommates bonded so well and were together so much that the other guys on the floor started calling them \"El Quattro,\" Spanish for \"The Four.\" Rich was the nominal leader of the group, so he got to be called, \"Uno.\" Andy was \"Dos,\" Gary was \"Tres) and Stevie was \"Cinquo.\" Since the group was called \"El Quattro,\" none of its members could have that as their name, so they skipped that and went to five. All of the other floor members thought that was hysterical.\n\nStevie was solidly built if a little on the slight side, and his darker skin and deep brown eyes gave him somewhat of a swarthy look that many girls throughout his high school years had liked. The same held true for college, and Stevie could usually find a date when he wanted one. He was in no hurry to go exclusive with any girl. For their part, the college girls seemed a little more \"worldly\" than the girls had in high school, so getting them into his bed wasn't a problem. His roommate in particular noted that Stevie didn't seem to lack for pussy, and occasionally made sure that others knew as well.\n\n\"Is it the hair or the skintone?\" Gary would sort of ask no one in particular when El Quattro was hanging out in one of their rooms. If there were others in the room, they would usually sit quietly until the banter among the four friends assured them it was all in jest.\n\nDespite not being that outgoing, Stevie was fast gaining a reputation on campus as a good sex partner. Although his manhood was just an average six inches, his willingness to eat pussy and his talent at doing so made him almost a marked man. He remembered Angela's advice.\n\nIn high school on Long Island, Stevie had mostly dated white girls, simply because they were in the overwhelmingly majority of the female population. But he encountered mostly black girls when he helped out at his father's butcher shop in Brooklyn on Saturdays while in high school, and had dated several of them as well. Skin color wasn't much of an issue when it came to dating for Stevie, but he was perceptive enough to note that it was an issue to some people, particularly to some of the parents of the girls he dated. Stevie's father advised his son to be as respectful to a girl's parents as he would his own, and things would usually turn out for the better.\n\n\"It's not the color here that counts,\" Stevie remembered his father saying as he pointed to his face. \"It's the color here,\" he said, pointing to his chest. \"Everybody's heart is the same color.\"\n\nStevie and his father, Marty, could talk about almost anything while he was growing up. Marty made it a point to encourage Stevie to ask questions of him and his wife, Naomi, on any number of subjects. \"The only stupid question,\" he would say, \"is the one that didn't get asked. That's the one that gets you into trouble.\"\n\nThe discussion of race came up every now and then. New York City had 8 million people, and there was every race, creed, color, and religion on display on a daily basis. Marty never shied away from any question that was asked of him on the issue, except he didn't volunteer information on one issue -- and his child never asked: Stevie's exact race. Stevie's birth certificate said he was Caucasian and that both of his parents were Caucasian. But while Stevie's mother had a slight olive complexion reflecting her Sephardic Jewish heritage, his father had pale skin reflecting his Russian Jewish heritage. And while Marty was stocky by nature and only about 5-7, Stevie grew to a height of 6 feet and had more the build of a runner than a football player. When they were together, it was easy to tell they weren't biological father and son, and sometimes, particularly when Stevie was younger, some rude fool would opine just that, before Marty would stop the offender with a look and, sometimes, with a hand to the throat.\n\n\"Birth certificate says he's mine and I say he's mine. Good enough for me, so it's good enough for you,\" he'd say to the loudmouth.\n\nOf course kids being kids, Stevie heard all the insults at one time or another, both because of race and because of religion. He rarely responded to them, and only had to use his fists a few times to keep the taunting to a minimum.\n\nStevie anticipated more trouble in Iowa than he faced in New York. After all, New York was a metropolis with people of all types, but Iowa was the sticks. Probably hadn't ever seen anyone who looked like Stevie that wasn't a scholarship athlete, and wouldn't know what a Jew was if Jesus Christ himself came back to earth.\n\nIt wasn't until spring of his freshman year that Stevie first ran into any measurable racism. The four friends were at spring dance on campus and were hanging out by a back wall of the rec center when Stevie spotted Amanda Fishbaugh on the dance floor with a guy. Stevie was in two classes with Amanda and thought she was beautiful: caramel-colored skin, about 5-3, with big boobs and an ass that was begging to be fondled in her skin-tight jeans. She appeared to be just friendly with the guy she was dancing with, and when the song ended Stevie made his move and asked Amanda if she would dance with him.\n\n\"Get the fuck away from me, wannabe,\" she yelled at him. \"My daddy would beat my ass if he caught me even dancing with a white boy.\"\n\n\"Got a pink tongue,\" Stevie replied right back.\n\nAmanda didn't expect that for an answer, and raised an eyebrow.\n\n\"So I've heard, white boy, and I'm told you know what to do with it, too. Are you offering?\"\n\n\"Are you accepting? What would your daddy say?\"\n\n\"I guess if you make me scream loud enough, I wouldn't even be able to hear him in my head, now would I?\"\n\n\"Score another one for Angela Bonafiglio,\" Stevie thought to himself as she escorted the delectable Ms. Fishbaugh back to his dorm room.\n\n\"Guess I'm bunking in with you guys again,\" Gary said to Rich and Andy. \"This guy is killing me.\"\n\nAngela had told Stevie that the Bonafiglios would be back in the Catskills for two weeks the next year, so Stevie called the resort to get his summer job back. Although Ronnie wasn't coming back, his uncle was more than glad to get a good summer worker back, and he even gave Stevie a promotion to chief of one of the crews. That put Stevie up to $2.75 an hour, not bad money for a kid in 1970.\n\nAngela noticed immediately that Stevie seemed a lot more confident this year, probably as a result of the experienced he gained with her last year followed by a year away at college. He had also filled out some and seemed to have more stamina in bed. For his part, Stevie knew that what he brought to the table this year was a lot better than last year, and he did his best to show Angela how much he appreciated her.\n\nAt one point in the proceedings on their first night back together in a year, Stevie went from sucking on Angela's nipples to climbing down to below her, where he lifted her ass with both hands and then slowly impaled the woman with his rock-hard dick. Five minutes later <br >Angela's body stiffened and then shuddered with a long, deep orgasm, which she accentuated with a guttural growl. Stevie kept pumping while she finished her orgasm, then he removed his cock and put his mouth into Angela's sex. She exploded for a second time about a minute later, grabbing Stevie's long, curly hair with both hands. Stevie found the hair-pulling a bit painful, but he realized that Angela had no idea in the world what she was doing. A minute later, she stopped almost mid-spasm, having passed out from sheer enjoyment. Stevie removed his face from her vagina and just watched as Angela slowly came out of her stupor.\n\n\"Holy shit, young man, where the hell did you learn that?\" Angela shrieked in joy.\n\n\"You taught me some, but some of it is me just paying attention to what my partner wants,\" Stevie grinned. \"We math geeks tend to spend a lot of time thinking about things. I do that for a lot more than just math.\"\n\nStevie's ability to slow down and think things through also came in handy when he was fucking Angela -- or making love to her. He seemingly could last as long as he needed to make Angela come multiple times on his cock.\n\n\"Between your dick and your tongue, the girl that gets you to put a ring on her finger will be the luckiest lady in the land,\" Angela said on their last session of the vacation.\n\nStevie just smiled at the compliment with Angela's juices dripping off of his face.\n\nPrimarily because of Angela, Stevie returned to the Catskills for the next two summers as well. While he was getting more than his share of pussy at Iowa during the college year, he regarded Angela as right up there with the best, and told her so before leaving her for the last time as her lover.\n\nAngela blushed crimson, wondering if the kid was just being his usual polite self.\n\n\"I truly mean it, Angela,\" Stevie said, anticipating her look. \"I can't see how Charlie could ever step out on a goddess like you. I know I wouldn't.\"\n\n\"As you've learned, kid, there's sex and love, and sometimes the two don't intersect. I know he loves me, and I love him. You know I don't love you, and you don't love me. But damn, kid, you do turn me inside out sexually, and if we had met in another lifetime, I'd never turn you loose.\"\n\n++++++++++\n\nThe last school year was moving toward graduation for the friends when Stevie got a phone call that was to change his life forever. His mother called to tell him his father died of a heart attack in his butcher shop just an hour previous. Stevie told his mother he would be on a plane home the next day, then sat down on his bed and wept for the first time since he was 6 years old and some neighborhood toughs had called him several racial slurs. Finding Stevie crying in his room that night, Marty had told his son that giving in to the taunts of others was a weakness, and the ability to ignore stupidity was the mark of a truly strong man. He also taught Stevie a few self-defense moves that he had learned while growing up.\n\n\"Just because you're strong doesn't mean you shouldn't be ready to defend yourself,\" he admonished Stevie.\n\nStevie thought of nothing else but his father on the three-hour jet ride into LaGuardia Airport. Growing up, Stevie had thought his father was nearly invincible, with chiseled good looks and a solid 190 pounds packed on his 5-foot-7-inch frame. Thanks to years of carrying beef halves and whole hogs, Marty had the biceps of a champion weightlifter, and the shoulders and chest to go with that. Stevie was always on the thinner side with a lot less muscle, so not only was he colored differently than his father, he was even a different body type. Still, Stevie didn't realize there was something off with this picture until he was about 13, about the time many boys start playing school sports and start hitting the weight room. Still, he never mentioned his doubts to either parent.\n\nWith no other family in the area, Stevie's mom opted for a small funeral for Marty, and he was buried the next day in a traditional Jewish ceremony. Stevie himself covered almost the entire casket with dirt, not letting too many others throw more than a shovelful of dirt, as is tradition. The physical nature of the task kept Stevie's mind busy.\n\nStevie and his mother, Naomi, ate a small dinner that night, mostly sitting in silence at the kitchen table. Naomi studied her son fretfully, finally making a decision.\n\n\"How come you never asked your father or me if we were your real parents?\" Naomi began. \"You're not stupid, Stevie. You had to know something was not quite right. You had to know that you weren't your father's son.\"\n\n\"But that's just it, Mom. I was his real son,\" Stevie said. \"I might not have been his biological son, but oh, yeah, I was his real son. And he was my real dad. And if I would have asked the question, I would have broken that man's heart. And I could never do that to him. He knew I knew. But it didn't matter to him, so it didn't matter to me either. He's the only father I ever needed.\"\n\nNaomi was crying softly at this point. Stevie had tears in his eyes.\n\n\"Do you have any idea how tall that man was?\" Naomi finally asked after a gap of about a minute.\n\n\"Five-7, maybe 5-7-1/2,\" Stevie finally answered.\n\n\"Not even close,\" Naomi answered as she stopped crying. \"As far as I was concerned, that man wasn't an inch under 10 feet tall!\n\n\"I was three months pregnant when your father and I got married. We had been friends, but nothing more, since the eighth grade, and toward the end of our senior year in high school I started dating a black guy in secret. Several of my friends knew about it, but I didn't dare date him openly -- it was 1951 -- and that just wasn't done. My parents certainly didn't know. He wasn't Jewish, he wasn't white. And then when I got pregnant ... Almost all of my friends left me, my parents were devastated ... and then he left me, too, said I shouldn't have been stupid enough to get knocked up and he wasn't going to take care of it.\n\n\"I'm not sure how your father found out. But he came to me and told me he would stand up with me and marry me and take care of me and my child -- our child -- forever. He only asked that he be listed as the father on the birth certificate, and that we never talk about it until you had questions. Then we would tell you the truth. But you never asked. He knew your knew. You knew he knew, but you two were an unstoppable force.\n\n\"And that man loved both of us with every ounce of energy he had. And his love was infectious. I saw it in his face every time I looked at him. I even tried to give him children that were his biologically, but it was not be. You were destined to be his child -- his only child.\"\n\nA phone call interrupted the two.\n\n\"Who could that be now?\" Naomi wondered aloud as Stevie got up from the table and answered the phone hanging on the wall.\n\n\"Tanner's\" Stevie said into the mouthpiece of the black phone.\n\nWhile Naomi looked on, Stevie stood stock still, with only his facial muscles moving, as he listened intently to whoever was calling. She knew this couldn't be good.\n\n\"Yes, sir,\" Stevie finally answered, and quietly hung up the phone.\n\nStevie knew that his mother had nothing to do with his father's butcher shop. The store had closed for the funeral, but Stevie knew that the three workers his father employed had families to look after. He assumed his mother would close the store permanently and continue working for the local school system administration to help supplement what Marty's meager insurance policy would pay.\n\n\"Who was it, Stevie? What did they want?\"\n\n\"I have a job interview tomorrow with one of Big Paul Castellano's guys. I'm pretty sure they are going to take over Dad's shop. How deep was he in, Mom?\"\n\n\"We never really discussed specifics, dear, but I know he owed Ranbar Packing a good amount. Just give him the store and walk away, Stevie. You remember what your father always said about the Mafia.\n\n\"Yeah, don't fuck with those guys, Stevie,\" he'd always say. \"And don't ever joke with those guys. They take a joke the wrong way and it's going to get ugly fast.\"\n\nStevie had met several of Big Paul's guys when he had worked summers for his father when he was in high school. Several times during those years, Marty took a couple of bags of meat to a house owned by Mike Marsico, and met for several hours. Although Stevie was invited to go inside the house with his father, Marty insisted his son stay in the car. Stevie always kept a book in the door pocket to read.\n\n\"I don't need them getting too familiar with you, and vice-versa,\" Marty would say.\n\nStevie drove over to his father's shop the next morning for his meeting. When he pulled up his car in front of the store in Bedford Stuyvesant, a familiar face was among the four to greet him. Charlie Bonafiglio greeted Stevie like an uncle, throwing a big arm over the young man and introducing him to Carl Cosentino, Big Tony Lupelli, and Sal Costa. The five went inside the store and locked the door behind them. While Marty had always warned Stevie that the Mafia could be vicious, they were usually good family men, so Stevie was hopeful that he was going to walk out of the meeting without getting hurt. That part was apparently Sal's forte, and for most of the meeting he was standing by the door while Stevie talked to the other three.\n\nCosentino was the numbers guy, because he got right down to it with Stevie. Marty was in $40K deep, and had put up his house as collateral for the debt. Stevie was shocked at the number and tried to keep his face as bland as possible, but his mathematical genius immediately started running numbers to try to figure a workable payoff. Lupelli then started talking about options, but Charlie put his hands up like he was signaling a stop. All talking ceased. He turned to Stevie.\n\n\"How about we do this, kid?\" he said as he wrapped one of his big arms around Stevie's shoulders. \"We take the store, you come to work for me for a few years and Mommy keeps the house, nobody touches nobody. I'll even pay you good so you can help pay off that big nut.\"\n\nCosentino and Lupelli started to protest before Charlie raised his hands again.\n\n\"The kid didn't have anything to do with it. He's good people. I'll talk to Big Paul personally and get this worked out. Besides, if I let Sally here rough the kid up, then I'm not getting any from Angela for a month. She likes the kid, too, and she'd be busting my chops for the rest of my life if the kid got hurt.\n\n\"We got a deal, kid?\"\n\nStevie didn't realize it, but he had been holding his breath for about a minute. He finally took a big suck of air and nodded his head as Charlie, Cosentino, and Lupelli all had a good laugh. Charlie stuck his hand out and Stevie shook it, knowing that to both of them, that handshake was better than any contract.\n\n\"I have about six weeks to go before I graduate,\" Stevie said to Charlie. \"I can join you then.\"\n\nAs everyone was heading to the door, Charlie took Stevie's arm and held him back, out of earshot of the other three. He then leaned in close and very quietly said, \"And this doesn't include any time with Angela. That thing that you guys did in the summers is done. Got my drift?\"\n\n\"Yes, sir, completely.\"\n\nIn truth, Stevie was hoping to work for one of the big accounting firms in the Midwest. He had interviewed at three, and thought his chances of getting a job offer at two were pretty good. But he wasn't about to turn down the opportunity to work for a Mob lieutenant, especially when it meant he wasn't going to have the shit kicked out of him ... or worse.",
        "Like many Mafia lieutenants, Charlie Figs owned several small legit businesses. It was an easy way to move money around, particularly the illegal money. Technically, Stevie's job was to be a combination of accountant and money launderer, but as a newly-minted CPA with a high level of intelligence, Stevie knew that he could \"clean\" Charlie's money simply by playing within the rules. It might take a little more effort on his part, but Stevie figured it would one day come in handy for both Charlie and him.\n\n++++++++++\n\nStevie was coming out of Santangelo's Deli when he literally ran into the future Mrs. Tanner. After getting his hot veal and peppers hero and a celery soda for lunch one sunny day, Stevie was going to walk to a near-by park and eat lunch. He wasn't watching the door as he pushed it open and stepped through, bumping into a pair of beautiful women who had stopped walking when the door opened. Stevie had just grazed the shorter of the two, and with the grace of the former athlete he was, he pulled up to a short stop and then jumped backward, apologizing as he did so.\n\n\"Damn hippy, get a haircut,\" said the taller of the two, who stood there with a benevolent smile as Stevie looked up.\n\nTraci Rizzi was a year younger than Stevie but was two grades behind in school because Stevie had skipped sixth grade. The pair were an item for about a year from the fall of Stevie's junior year until the fall of his senior year. The break-up had hit Stevie hard, but that was eight years ago now. The few times they had seen each other since then they both made an effort to be civil to each other.\n\nTraci had cut her long light brown hair to shoulder length and she had gained a few pounds, but otherwise she looked pretty good, Stevie thought to himself. Her light blue eyes twinkled as he looked at her, and she did that scrunchie-face thing she used to do with her nose when she would tease him, which made the few freckles on the bridge of her nose more noticeable. Stevie smiled back at the sight of her before remembering that the other woman was with her.\n\n\"I'm sorry ... miss ... I didn't mean to almost knock you over. I was anticipating getting to the famous Santangelo's veal and pepper hero.\"\n\n\"This is my friend, Jennifer Sorrentino. Jennifer, this is Stevie Tanner. Yes, that Stevie, the one I dated for about a year in high school.\"\n\nFor the first time, Stevie took a good look at the other woman. She had long dark brown hair and deep brown eyes. As it was a warm summer day, she was wearing a short dress, and Stevie took a long, slow look up what he came to think were the \"greatest legs to ever stride the earth.\" She was only about 5-2, but she was wearing heels that had to be 4 inches, and those legs were olive and somewhat muscular and oh, so close to him.\n\n\"Jesus, Stevie, wipe the drool off your chin!\" Traci exclaimed as Stevie came back to the real world with a sheepish look on his face.\n\nStevie went back inside the deli with the women and waited for them to order their food. Once they got served, the three headed over to the park. Stevie and Traci caught up while Jennifer was mostly silent and ate her meatball hero. Stevie tried not to be too obvious as he ogled Jennifer's legs.\n\nTraci surprised Stevie when she told him she was still single. She thought the next guy she dated steady after Stevie was Mr. Right, but while they were in college Traci caught him cheating with her former best friend. She hadn't had a serious relationship since then. Stevie pretended to be sad for his former girlfriend, but deep in his heart he knew he wasn't because Traci had broken up with him to date that next guy, and he savored the break-up as a revenge of sorts.\n\nHe and Traci only had sex twice while they were dating, and Stevie didn't think that was very memorable -- for either one of them. But that was before Angela Bonafiglio taught Stevie some of the ways of the world, he thought to himself.\n\n\"Betcha I can make her scream now,\" went through Stevie's brain.\n\nWhen the three had finished and it was time to go back to work, Traci insisted on writing her phone number on Stevie's hand so he could call her for a date. Stevie was somewhat surprised that Traci would want to date him again, since she all but told him he she preferred the more aggressive types like Mr. Right when she broke up with Stevie. Stevie thought about asking Jennifer to write her phone number on his other hand, but figured that would piss off Traci and perhaps lead to a scene that he didn't want to play out in front of Jennifer. He would bide his time on that one, he thought.\n\nStevie figured he would have one date with Traci and then move on to Jennifer, but Traci had other ideas -- especially after Stevie brought her off a half-dozen times with his fingers before one final time on his cock when they went back to Stevie's apartment after their date.\n\n\"Wow, that's not the Stevie I remember,\" Traci gushed as they were laying side by side on Stevie's bed.\n\nStevie was pretty pleased with himself as he lay in bed listening to Traci start to breath rhythmically before falling asleep.\n\n\"I betcha old John Dunning didn't get that much out of her in the four years they were together,\" Stevie thought.\n\nIt wasn't until their fifth date, however, that Stevie used the rest of the lessons taught by Angela. He started by licking a naked Traci from her collarbone to her boobs, then down her flat stomach. He stopped just above her clitoris and moved down to the end of the bed with his face in between Traci's now-twitching legs. He leaned in and softly blew on her puffy labia twice, watching the moisture flow as he did so. He then used the flat of his tongue to lick her slowly all along the entrance to her pussy before flicking her clit with his tongue once forward and once backward. At that moment, Traci's ragged breathing stopped and she abruptly squeezed Stevie's head between her thighs while she spasmed out an intense orgasm while shrieking unintelligibly. Despite not being able to get any oxygen as Traci had cut off his air supply, Stevie went into high speed lick mode and just continued until Traci finished her orgasm about 30 seconds later.\n\nWhen she finally released her grip on his head with her thighs, Stevie lifted his head and was greeted with the sight of Traci passed out on the bed, and a look on her face that appeared to be a combination of bliss and surprise. Stevie stayed right where he was, breathing heavily, until Traci came to about a minute later. She looked down at him with glassy eyes, and half-mumbled, \"Will you marry me?\"\n\nStevie never did get around to asking Jennifer out on a date. A year later, he and Traci were married.\n\nThings were also moving along nicely in Stevie's professional life. Things were going well so well in Charlie Figs' ventures that Stevie was having a tough time juggling everything within Charlie's legal enterprises of an olive oil important company and one for molasses, so he had started looking around for another venture for Charlie Figs. And one day while sitting in a fairly new Arby's restaurant in a town on Long Island, the answer was so clear that Stevie smacked his hand down on the table and yelled out \"Yes!\" to no one in particular. While the staff looked at Stevie like he had blown a gasket, Stevie took a pad out of his pocket and started furiously scribbling notes. He emptied his half-eaten tray into the garbage and practically jumped behind the wheel of his prized 1969 Mustang Mach 1.\n\nStevie walked into the offices of CAB Importing and immediately knocked on Charlie's door. He didn't wait for an answer and started to pull his notes out of his pocket while talking about his plan.\n\n\"Slow down, Dark Jew,\" Charlie said calling Stevie by the nickname that Charlie -- and only Charlie -- sometimes called him affectionately. \"What the hell are you babbling about?\"\n\nIn the course of the next two hours, Stevie laid out his plan for Charlie to start a construction company -- a completely legit construction company that would focus on building fast food restaurants and bank branches all over Long Island. The island, Stevie noted, was growing quickly out toward Montauk Point, and fast food restaurants were starting to pop up all over the place as a real meal choice, not just a trend. Somebody had to build these restaurants. As for the banks, well Stevie figured that not only would the population have to eat, but they'd also have to bank, and Stevie had noticed a trend with bank branches starting to pop up as well. Between the two, there would be a lot of work for a lot of firms -- particularly one who specialized in those two types of buildings. Jump in quickly, but build them high quality for a solid price. And with his ahem -- \"connections\" in the community, it would be highly unlikely that too many companies would want to challenge Charlie's -- and none of them would dare try any lowball tactics.\n\nAnd with all the various moving parts of the construction trade, it would also be easier for Stevie to do his main job, he added.\n\n\"Kid, I don't know anything about construction. Several of the other guys already have companies ...\"\n\n\"But none of those are completely legit ... or about as completely as you are going to make this one,\" Stevie interrupted. \"And I've got two guys I can bring in who can run this for you. <br >They will both answer to me ... and I answer to you.\"\n\nStevie's \"guys\" came from his Iowa connections. His old college roommate, Gary Butkus, had been working for a firm doing design and architecture, and Stevie was sure that he'd come on board for a sizable raise over what he was currently being paid. The other guy was a construction superintendent for a firm in Iowa called Kirk Gross. When you wanted a bank built in northeastern Iowa, you called Kirk Gross; the man they relied upon for the best jobs was a stocky Norwegian immigrant named Dean Sahlstrom. He was a master builder and a natural leader of men, and his crew very often finished a job both under budget and ahead of schedule. Stevie had gotten to know Dean well in the year he dated Dean's daughter, Cheryl, at the University of Iowa.\n\nDean wasn't particularly fond of the younger man's long hair, but during several deep discussions with Stevie he found Stevie to be anything but the drug-crazed hippy he assumed, and had actually started thinking he might like this young man for a son-in-law. But then his daughter suddenly announced she was dumping Stevie for some rich kid from the Chicago suburbs, and Stevie no longer was part of the picture.\n\nThe breakup stung Stevie badly, but that was in the past, and Stevie knew he had to have Dean to make this work. For his part, the older man was pleased that Stevie had considered him that highly, and when Stevie made him an offer that was half over what he was currently being paid, the older man was on a plane to New York. And for an added bonus, he was bringing with him his top assistant.\n\n++++++++++\n\nAngela Bonafiglio's Christmas parties were almost legendary. She would cater them in to the big house she and Charlie owned in Roslyn, and her guest list not only included a lot of crew guys, but also a lot of people from the New York City social scene, including several politicians, actors, and singers. The food was top notch, a four-piece string group played in the home's expansive den, and people mingled merrily about with top-notch drinks in their hands. Stevie had been attending the parties since he first went to work for Charlie, and Traci had been with him for the last two.\n\nAn hour into the party, Stevie and Traci had drifted off into different parts of the house and were both mingling with the various guests. Stevie, having just gotten himself a plate of food, was headed toward a spot in the dining room when he spotted Traci in a small group of people that included Sal Costa in the home's parlor. Traci had her left hand wrapped around Sal's upper right arm from the inside, and while in conversation with the group, she would occasionally lean in to Sal and apparently whisper something in his ear. The two would then share a smile.\n\nStevie decided he didn't need to sit down to munch his food and stayed just outside the parlor watching this little scene play out. He knew that Sal's position in Charlie's organization was as muscle primarily, and that Charlie trusted him as much as he trusted Stevie. For his part, Stevie had as little to do with Sal as possible, considering him a necessary evil, but not one he wanted to get to know closely. At 6-2, 220 pounds, Sal was a pretty good physical specimen and usually thought he was the best looking man in the room ... and acted that way. He seemed to have no trouble finding women, and when he went out there was always a \"9\" or a \"10\" on his arm.\n\nWhile Sal and Traci had met before since Sal and Stevie both worked for the same man, Stevie had never before noticed Traci even talking to him, let alone looking extremely comfortable laughing and joking with him in a group. He considered walking over to join the group when he saw Sal pull a pack of Kent's out of his jacket pocket, light one up and then casually place the cigarette up to Traci's lips. She closed her lips around the smoke without missing a beat as Sal got out a second cigarette and lit one for himself. The familiarity of the gesture wasn't lost on Stevie.\n\nThe familiarity of the brand also wasn't lost on Stevie. While Traci didn't smoke heavily, her preferred brand was Salem, yet Stevie remembered seeing several crushed out Kents in ash trays at his house from time to time. Some had Traci's lipstick on them, some didn't. Stevie always assumed the Kents without lipstick on them were from one of Traci's friends who didn't wear lipstick -- one of Traci's women friends. Stevie suddenly felt his stomach knot up. He put his plate of food down half uneaten.\n\nStevie kept his distance from his wife the rest of the night, but made sure she was just within his vision regardless of where she went. For the most part, she stuck with Sal like he was her husband, occasionally wandering away to get something to eat or drink or to talk for a minute or two with another friend. She never went looking for Stevie the rest of the night.\n\nTraci happily chattered away on the car ride home as if nothing was different in her life. Stevie was almost completely silent, but Traci didn't seem to notice that. His mind was going in several directions at the same time as he made plans to find out if what he was seeing was just paranoia on his part or a real concern.\n\nStevie could have used any number of Charlie's associates to track Traci, but for something this personal and delicate, he used a highly-rated agency run by a former police officer. The agency didn't waste any time, and in two weeks the agent assigned to Traci told Stevie in a meeting at his construction company office that she had met with Sal Costa on consecutive Wednesday afternoons at Stevie's house. Stevie had let the agent plant a couple of spy cameras in the house and some \"bugs,\" so he was able to get some grainy shots of the couple having sex in the master bedroom, along with audio of the event. From the look of the photos and the sound of the bugs, it was clear in Stevie's mind that the two were very familiar with each other, meaning that the affair had been ongoing for some time.\n\n\"It looks like Mr. Costa takes a long lunch on Wednesdays,\" the investigator noted.\n\n\"What a schmuck I am!\" Stevie said to the investigator. \"I never even had a clue. We have sex three, four times a week, and I would have bet the mortgage that her life revolved around me. We were even talking about having kids in the next few years!\"\n\nAll the investigator could do was apologize for being the messenger. He thanked Stevie for handing him a check and then beat a hasty retreat from the room.\n\nOnce the investigator was gone, Stevie allowed the rage that was building to wash over him.\n\n\"Son of a bitch! Stupid motherfucking son of a bitch! How could you have been so fucking blind?\" Stevie yelled to himself.\n\nThe yelling alerted Gary, who was in the next office, and he came running into Stevie's office with his fists balled and ready for whomever Stevie was getting ready to fight with. When he didn't see anybody else in the room, he turned with a concerned look at his friend, never having seen the usually collected Stevie this out of control.\n\n\"What's going on, Stevie? Who needs their ass kicked?\"\n\nDespite being 6-1, Gary was 145 pounds dripping wet, and probably couldn't beat Stevie's mother in a fistfight, Stevie had often thought to himself. Despite that, when it came to a friend, Gary would be the second man into a fight to have Stevie's back, with Rich Nowinsky from back in his college days always first. That kind of loyalty brought a smile to Stevie's face, and then as he thought further about the old days and Rich, the smile gradually became a smirk, and the mad blush that had covered Stevie's face and neck quickly faded.\n\n\"You know what, Gary? You're a fucking genius!\" Stevie cried out in triumph as he looked at his wary friend.\n\n\"We need to take a short road trip to Iowa City one of these coming weekends. Get the old gang together.\"\n\nGary had seen that look on Stevie's face before. Stevie was working on something in his mind, something big. Gary knew he'd tell him soon enough. He turned and went back to his own office, shaking his head.\n\nStevie knew he couldn't get direct revenge on Sal Costa because Sal was an integral part of Charlie's crew, and crew members were not supposed to fight. But crew members also weren't supposed to fuck with another crew member's wife either, Stevie thought.\n\nStevie called over to Stuart Klein, a good friend who also happened to be a divorce attorney, and got an appointment for the next afternoon. After hanging up the phone, he put his head down on his desk and cried for the first time since his father died.\n\nOnce he was done feeling sorry for himself, Stevie also set up an appointment with his physician to be tested for venereal diseases. Sal had a history of sleeping around, and had picked up a bug at least twice since Steve went to work for Charlie Figs. Stevie was embarrassed to have to tell Dr. Crain's nurse what he needed, but he realized it was time to put away his pride and deal with necessity. He also knew he had to stay away from his wife sexually for a couple of weeks.\n\nStevie directed his attorney to have papers drawn on the grounds of infidelity. He told the lawyer to offer her one-third of the marital assets, and she could keep the house if she could make the mortgage payments. He offered to pay her alimony for five years.\n\n\"Fuck the cheating bitch!\" Stevie told his attorney, \"And fuck that bastard, too!\"\n\nStevie promised the attorney a handsome bonus if the papers could be ready to be served by the next Wednesday's fuckfest. He explained the plan to the attorney, who looked at Stevie and shuddered.\n\n\"Man, you've been working for the crew way too long,\" he said.\n\nWhile Stevie and Gary Butkus watched through binoculars from down the street on the next Wednesday, Sal Costa pulled his brand new '81 Ford Thunderbird into Stevie's driveway. He got out of the car, went to the front door and walked in simply by turning the doorknob. Apparently, both he and Traci felt pretty confident that Stevie was being a good worker bee, and wouldn't see the car in his driveway, and she felt confident enough to leave the door unlocked as well.\n\nStevie looked sideways at Gary staring at the house through his binoculars, his mouth slightly gaped open in what Stevie guessed was shock.\n\n\"Arrogant bastard, isn't he? And who the fuck buys a brand new T-Bird in shit stain brown?\" Stevie inquired.\n\nThat apparently broke Gary out of his reverie. He grinned back at Stevie.\n",
        "\"How much of a head start were you thinking of giving Romeo and Juliet?\" he asked.\n\n\"I figure about half an hour should be right,\" Stevie replied.\n\nThe third member of this little party, process server Gilbert Harrison, sat quietly in the back seat of Stevie's Ford LTD listening to the two men in the front.\n\nAt the 30-minute mark, the three men headed by foot over to Stevie's house. Stevie went to the front door and turned the handle. It was still unlocked. The trio walked in silently. The house was quiet as Stevie started ascending the stairs to the master bedroom -- where he and Traci had sworn eternal love to each other dozens of times while they were making sensuous love -- or having a rip-roaring fuck session. Stevie noted how the house felt so different right now.\n\nHalfway up the stairs, Stevie heard the noises: flesh slapping flesh, Traci making small moaning noises, Sal grunting in response. They hadn't even closed the bedroom door, Stevie thought to himself as he stood in the doorway and watched for a moment. Laying on top with his back to the door, Sal couldn't see Stevie pull out his Sig Sauer P220, and Traci, lying underneath, couldn't see Stevie either. But they both heard the roar of the gun as Stevie fired one bullet through the framed wedding photograph of Stevie and Traci that hung right above their bed. Both occupants reflexively ducked for cover and stopped their movements, although Sal hadn't dismounted.\n\n\"Damned drywallers are going to be all over my ass when I ask them to fix that for me,\" Stevie calmly said to the pair as they turned to see Stevie in the doorway.\n\nTraci gave a loud shriek and tried to hide further under Sal, whose look of fear was turning to smugness as he realized it was Stevie in the doorway.\n\n\"I'd wipe that smirk off your face damned quick if you don't want the next bullet to be in your head,\" Stevie yelled at Sal. \"I've been carrying a gun since I was a kid working for my dad in Bed-Stuy, and I know how to use it!\"\n\nSal's face lost the smirk and became blank. Traci figured that was her cue to be stupid.\n\n\"It's not what it looks like, Stevie,\" Traci cried out.\n\nStevie pointed the gun at his wife. She immediately shut up.\n\n\"Gary, could you come in here for a second,\" Stevie called out behind him.\n\nTraci tried to shrivel up smaller when Gary entered the room.\n\n\"What does this look like to you, Gary?\" Stevie asked his friend.\n\n\"It looks like two scumbags fucking around on your bed, Stevie,\" Gary answered.\n\n\"Then apparently it's exactly what it looks like, Traci,\" Stevie said.\n\nStevie looked behind him again.\n\n\"Mr. Harrison, if you would.\"\n\nThe process server entered the room, walked over to the bed and handed Traci the manila envelope.\n\n\"Mrs. Tanner, you've been served.\"\n\nThe pair had disentangled at this point. Sal started to rise from the side of the bed.\n\n\"Uh, uh, Sally. You reach for your piece and I'll blow both of your kneecaps to hell.\"\n\nGary went over to Sal's clothes and got the .38 that Sal always carried.\n\n\"You'd better thank Charlie Figs that you're still alive,\" Stevie said as the process server and Gary left the room. Still with his gun drawn, Stevie went into his closet, pulled out a suitcase and loaded it with some clothes and essentials.\n\nCharlie was in his office at the construction company when Stevie and Gary got back. As usual, the door was open, so Stevie walked in and laid Sal's .38 on Charlie's desk.\n\n\"Why are you carrying Sal's gun?\" a surprised Charlie inquired.\n\n\"Because I took it from him so he wouldn't shoot me after I caught him fucking Traci in my house today, Charlie. I had my own drawn on him at the time, but he got the Charlie Figs' discount and I didn't blow his fucking brains out!\" Stevie started to shout. \"He was fucking her in my bed, that piece of shit! Tell that piece of shit I hope he has a nice life with the slut, because since he broke it, he bought it!\"\n\nJust as Stevie reached his own office, his office phone rang.\n\n\"Stevie, don't hang up, it's me,\" Traci said in a jumble of words. \"Look, I know I screwed up, but can't we talk about this? It was just sex, really. He doesn't mean anything to me. I love you, and I don't want a divorce!\"\n\n\"Wow, the old 'it was just sex' excuse. I would have thought that if you really loved me, the least you could have done was come up with something better than a lame excuse. Get a lawyer, and have him call Stu Klein.\n\n\"In our bed, Traci? Really?\"\n\nTraci was still talking when Stevie hung up the phone.\n\nUnlike some people who become less productive under emotional pressure, Stevie actually was able to focus better. He had recently read the Martin Gosch and Richard Hammer book, \"The Last Testament of Lucky Luciano,\" which detailed the former Mafia kingpin's monetary struggles in his last years, and he wondered if Charlie Figs wouldn't have the same difficulties in his later years. Stevie thought he could do better for his friend and boss.\n\nIn the seven months it took for his divorce to go through, Stevie studied up on the various investment strategies espoused by the day's top moneymakers. He settled on the model used by the financial services firm Edward D. Jones, with a conservative invest and hold strategy, and then set out to teach himself about investing and what to look for in firms. He differed from the Jones method of using funds, however, and invested directly into companies. After his first couple of investments paid off in good returns, Stevie went to Charlie Figs, showed him the success he had, and offered to invest for Charlie Figs, with a small percentage coming off the top.\n\n\"I guess if I trusted you to treat my wife good all those years ago, I can trust you with my money now,\" Charlie said.\n\nSix months after his divorce was finalized, Stevie and Gary took a three-day weekend trip to Des Moines, IA, where they me up with the other half of El Quattro, Rich and Andy. The weekend was planned several months in advance, as was the private meeting in Andy's office between Stevie and Rich on Friday afternoon. Andy was a junior partner in a law firm in Des Moines, and minutes after the four friends met in Andy's office, he and Gary took a lunch break at a restaurant near the firm, leaving Stevie and Rich to talk alone. Andy had already checked to make sure there were no bugs in his office, but Rich, a field agent for the FBI, did his own check before the two friends began to talk quietly.\n\nWhenever Rich had visited Stevie and Gary, he claimed to be a businessman from Philadelphia. In reality, he had been working as a field agent for the FBI since shortly after he graduated from Iowa, but for practical purposes it was decided that no one else but Gary among Stevie's work and personal friends needed to know about that. It probably wouldn't have looked too good for either man if Rich's true employment was known, but Rich and Stevie had long ago decided that their occupations were not going to stand in the way of their friendship.\n\n\"I need a small favor, Rich,\" Stevie began. \"I need the bureau to pull Sal Costa in for some questions about Lufthansa.\"\n\nRich raised an eyebrow. The Lufthansa heist over three years ago at John F. Kennedy International Airport in New York had netted the thieves almost $6 million in cash and jewelry, making it the largest cash robbery committed on American soil. The FBI had not made any significant headway on the case, even though agents were sure that Lucchese crime family associate Jimmy Burke was reputed to be the mastermind. But none of the money showed up anywhere, although several bodies of supposed \"players\" had shown up.\n\n\"Is this what I think it is, Stevie?\" Rich said. \"Isn't Costa the jerkwad who Traci was fucking?\"\n\n\"Fucking her right in my own bed, Rich. I never mentioned that before, did I? And I'm sure Gary wouldn't have mentioned it either when you two talked. I'm not going to ask Jimmy Burke for any favors ... but I won't lose a minute's sleep if nature and/or Jimmy's paranoia takes its natural course. We good?\"\n\nRich was quiet for about 30 seconds, and his eyes searched the ceiling for a bit before he finally returned Stevie's gaze.\n\n\"Sometimes the herd has to be thinned,\" he responded.\n\nThe two friends shook hands, then left the office and headed to the restaurant to join Andy and Gary.\n\nTwo weeks later, a pair of FBI field agents from New York arrested Sal Costa at the house he shared with his new wife, the former Traci Tanner, on suspicion that he was involved in the Lufthansa heist. As he was being led out of his house, he told Traci to call Charlie Figs. Traci did as she was told, and a lawyer was at FBI headquarters soon after Sal got there.\n\nThe FBI was getting nowhere with Sal because, in truth, he didn't have anything to do with the heist, but in questioning him he admitted to occasionally hanging out with one Henry Hill, a known associate of Jimmy Burke and someone who had shown up on police radars soon after the heist. Henry and Sal had occasionally caroused the bars together, a fact that several bartenders in the city soon corroborated.\n\nSal was turned loose several hours later, and FBI agents began to check out his alibi for that night and some of the nightspots he was known to hit. Charlie Figs was not amused with the attention being paid to one of his guys.\n\n\"God damn it, Sally! How many times did I warn you to stay away from that cocksucker Hill. He's a weasly fucker, and I knew sooner or later the cops were going to be fucking with him,\" Charlie told Sal in a late-night meeting at his olive oil company. Charlie never met with Sal at the construction company because Stevie insisted that Sal hanging around wasn't good for business ... and this was well before Sal and Traci became an item.\n\nA month later when Sal didn't show up for work one morning, Charlie Figs sent a couple of guys over to his house. There they found a bound, gagged, and blindfolded Traci, but no sign of Sal. His decomposing body turned up two weeks later in a ditch along the Wantagh Parkway. Stevie showed absolutely no emotion when Charlie Figs told his crew, Figs noted to himself. Charlie also noted that Stevie didn't show up for the viewing nor the funeral.\n\n++++++++++\n\nStevie had gone out fishing for fluke off a party boat at the Captree Boat Basin and got back in at 2. He had gotten his share of fish on the trip, and decided to hit his favorite diner, Mario's, for a late lunch before going home. He usually stopped at Mario's a couple of times a week for breakfast before work and was familiar with most of the staff there, but since he hardly went in on the weekend, there were a few faces around the diner he didn't recognize as he took a seat at the counter. One of those faces belonged to a girl of about 10 with darker skin and a mop of brown curls who was wearing an apron and approached him with a pot of coffee and an empty cup in her hand.\n\n\"Coffee mister?\" she asked.\n\n\"Sure, sweetie,\" Stevie answered.\n\nThe diner's owner, Mario Sorrentino, was walking past just then, and as a semi-regular, Stevie knew Mario enjoyed bantering with his customers.\n\n\"Hey, cheapskate, you think you can hire them at half-salary because they're half-sized?\" Stevie inquired of Mario, who looked to be somewhere in his mid-50s.\n\n\"A man's got to cut costs where he can with cheap customers like you,\" he blustered back to Stevie.\n\nBoth men and several of the customers in the area who heard the exchange chuckled.\n\n\"Seriously, though, Stevie, this is my granddaughter, Annalise. She's nine. She comes with her mother on Saturdays when I need the help.\n\nAlthough he tried not to show it on his face, Stevie was surprised that the munchkin was Mario's granddaughter. Her skin tone just about matched Stevie's, and the two had similar type hair. Mario always struck Stevie as an old-school type of person, and while Mario had never shown any prejudice to him, having a mixed race family didn't seem to fit with what he knew of Mario, who was awfully proud of roots that went back many generations to Sicily in Italy.\n\nJust then a woman he guessed to be Mario's daughter came up to the counter to take Stevie's order. As Stevie turned back to the waitress, he caught a glimpse of her legs in the shortish waitress uniform Mario's staff wore.\n\n\"The greatest legs to ever stride the earth,\" Stevie thought to himself as he lifted his eyes from her legs to her face. He sort of recognized the face and took another look at the legs before the light bulb of recognition came upon him.\n\n\"You're one of Traci's friends. I met you a few years back, didn't I?\" Stevie stammered out.\n\n\"Oh yeah, I remember that now. That was when you two got back together. I'm Jennifer Sorrentino,\" the dark-haired beauty with big brown eyes said. \"Actually, the day we met you, she was supposed to introduce you to me, but she got so carried away with you that she never turned you over to me, and then when she wrote her number on your hand, I knew I wasn't going to get a chance. And then you two started going out again, and got married ...\"\n\n\"...And now divorced about a year,\" I interjected.\n\n\"Oh, I'm sorry to hear that,\" Jennifer said, but not really looking too sorry, Stevie thought. \"We kind of drifted apart a bit, she with her life and me with mine.\"\n\n\"And that's part of your life,\" Stevie said as glanced at Annalise. \"Any more parts running around here?\"\n\n\"No, it's just Annalise and me. Has been since she was born. I made a stupid mistake, and baby daddy wasn't hanging around to help me out.\"\n\n\"Hey, I'm not paying you to socialize. Take a quick trip around to see if anybody needs anything,\" Mario called over.\n\nPromising Stevie to be back, Jennifer left to take care of customers. Stevie turned to Mario, who was now standing by the register, and in fluent Italian asked Mario why he didn't tell him he had a beautiful daughter.\n\n\"Because none of you bums are good enough for her,\" Mario replied back in Italian.\n\n\"But I'm the vice president of the most successful construction company on Long Island,\" Stevie responded back, keeping the conversation in Italian. \"Can't I at least take her out on a date?\"\n\n\"One date, if she even gives you the time of day,\" Mario harrumphed.\n\n\"What were you two muttering about in Italian?\" Jennifer asked as she gave Stevie's coffee a warmover.\n\n\"Handsome single guy here asked Grandpa if he could take you out,\" Annalise interjected from a few feet away.\n\nJennifer blushed deeply, then got a surprised look on her face.\n\n\"Who taught you Italian?\" she asked Annalise.\n\n\"Grandpa did. Said it's always good to know things about your heritage.\"\n\n\"Don't tell me he taught you, too,\" Jennifer said to Stevie.\n\n\"No, I picked it up at work. A lot of the guys who work with me are of Italian decent, and they learned it at home growing up. I figured I'd better learn some if I didn't want those Bozos talking behind my back. I've also picked up some Spanish along the way, and from home I learned a little Yiddish.\"\n\n\"Are you really a black Jew, like Sammy Davis, Jr.?\" Annalise asked wide-eyed.\n\n\"Except he converted to Judaism. I was born Jewish,\" Stevie answered. \"and I guess to be totally accurate, I'm only half-black.\"\n\n\"So am I,\" Annalise said happily.\n\n\"Actually, you two look more alike than you and your mother,\" said another semi-regular, Mike, as he was passing by on the way to the cash register.\n\nJennifer blushed again, then went off to tend to some more customers.\n\nStevie never did order lunch, but when he left the diner a half-hour later he did have Jennifer's phone number written down on his hand, and an acceptance for a date the next Friday night.\n\nStevie had asked Jennifer out to Borrelli's a good Italian restaurant in East Meadow. When he showed up at her door on Friday night, Annalise answered and let him in. As he stepped inside the small house, a goddess in a \"little black dress\" strode into the room. Stevie was instantly overwhelmed, eyeing Jennifer from head to toe, particularly stopping for a long look at her magnificent, olive-skinned legs.\n\n\"Now I really remember you!\" Jennifer exclaimed. \"I remember you staring at my legs and Traci being pissed off.\"\n\nJennifer and Stevie had a good time and ate a great meal. Jennifer agreed to let Stevie take her and Annalise to a Yankees game the next Saturday. When he left her at the door, Stevie hesitated, trying to decide if he would seek out a good-night kiss. Jennifer could see the wheels spinning in Stevie's head, so she made the decision for him, leaning in and giving him a soft but loving kiss on the lips. Stevie left a happy man.\n\nStevie hit Mario's for breakfast on Tuesday morning. He expected Mario to at least be his usual wise-ass self, maybe give Stevie some shit for dating his daughter, but the older man was almost cold to Stevie throughout his time in the diner. As he was paying his bill and leaving, Mario came over and asked if he could meet with Stevie in his office. Stevie felt like he was 15 years old again as he followed Mario to his small office in the back.\n\n\"Look, Stevie, I know you and I like you, and everybody says you're a good guy, but I feel it's only right to warn you: you and Jennifer are adults, and understand life ebbs and flows. My granddaughter is a little girl, however, and doesn't understand life's subtleties. So if you break that little girl's heart, Stevie, I swear to you by all that is holy that I will make you pay -- even if you work for a bigshot like Charlie Bonafiglio. You got that ...\"\n\nMario started to choke up, and Stevie was wondering what he was going to do if Mario started to cry.\n\n\"It hasn't been easy for her, being the only bi-racial kid in her class. Sometimes another kid will get mouthy, usually reflecting the stupidity of his or her parents ... but Annalise is still just a little girl. So she's very sensitive, and doesn't have a lot of close friends. She hangs out a lot with Marianne and I ...\"\n\n\"Mario, if there's anyone in the world who gets it, it's me. At least I was lucky enough to have my father.\"\n\nMario took a deep breath, then exhaled.\n\n\"Hey, I've got work to do, get out of here, you hippy. And have a good time. You do know the kid's a Mets fan, right?\"\n\n\"Damn, I wish I'd have known that before I asked them out. Jennifer didn't tell me her daughter had a defective baseball gene ... just like her old man!\"\n\n\"Fuck you!\" Mario threw at Stevie in Italian. \"Get the fuck out of my office.\"\n\nStevie thought both girls looked wonderful when he picked them up late Saturday morning for the trip to Yankee Stadium. Jennifer was wearing Daisy Duke shorts to show off what she knew was her best asset, those incredible toned legs, although her 36C boobs and tight ass certainly were nothing to sneeze at. Annalise had on what appeared to be a brand new Mets cap, probably a gift from Mario. That would look really great in the construction company's box seats on the first base side of the field near the home dugout, Stevie thought to himself as he chuckled.\n\nThe Yankees beat the Orioles, 4-3, getting two runs in the bottom of the ninth. As the second Yankee touched home for the winning run, an excited Jennifer leaned over and planted a kiss full on Stevie's mouth. As the kiss ended, he looked down to see Annalise give him a happy thumbs-up. He wondered if that was for the thrilling win or for the thrilling kiss.\n\nBy the time the game ended, Stevie had bought both girls new Yankee caps. Annalise wore hers perched on top of her Mets cap. Stevie sat in between the two girls for the game, teaching Annalise how to score.\n\nJennifer worked for a school corporation. She still helped her father on some Saturdays, and usually took Annalise with her on those days. Mario liked the fact that a third generation was learning the business from the ground up.\n\nStevie took out both Jennifer and Annalise on the next two Saturday nights. On the second night, the three spent an evening at Adventurer's Inn, a small amusement park in Farmingdale. Jennifer got to see Stevie's childish side, especially when they rode the bumper cars. She noted that her normally reserved daughter didn't seem to be holding anything back with Stevie, as she had with most of the other men she had dated when they were around the child.",
        "\"Penny for your thoughts, Beautiful,\" Stevie said when he looked up from what he was doing and caught her staring at Annalise and him.\n\nFor his part, Stevie was surprised at how easily the child accepted him. He thought his coloring -- very much the same as Annalise's -- must be a comfort to the child.\n\nWhen the trio got back to Jennifer's small house, Jennifer invited Stevie in for coffee and cake. At 10, she sent Annalise to bed.\n\n\"I would say that now that the adults are alone ... but I saw you this evening at the park and I'm not sure you're really an adult,\" Jennifer giggled. \"But seriously, Stevie, if you want to have something going with me, you've got to deal directly with me, not try to get at me through my daughter.\"\n\nStevie looked up with both shock and pain on his face. Now that he thought about it, he was spending a lot of his time with Annalise.\n\n\"Whoa. Is that what you think? That I'd suck up to you by being nice to your kid? What if I was to tell you that I'm actually sucking up to the kid by being nice to her old, broken down mother. That kid's mom has to be what, 32 years old ... and God, for those wrinkles. I figure if I play my cards just right, I might someday get to hang out with the neatest 9-year-old I've ever met. That kids' grandparents must be amazing people how they've raised such a great kid!\"\n\nJennifer was blushing deeply now, looking half-angry, half-surprised herself. Stevie knew she wasn't feeling very proud of herself at the moment, and decided to let the moment linger by not saying anything.\n\n\"All right, I'm sorry I mistook your intentions with Annalise,\" Jennifer finally gushed. \"You are a different one, Mr. Tanner. I'll give you that.\"\n\n\"Actually, Miss Sorrentino, I am something of an enigma. Most people see me as some kind of biracial hippy who's looking for his next joint, when in reality I'm a math whiz with a sports addiction who also happens to be a really, really nice guy. Seriously, little kids and animals absolutely love me, and who should know better?\"\n\nStevie then gave Jennifer his best cheesy grin. Jennifer walked over from the chair she had been sitting on to the sofa on which Stevie sat. She gave a little nudge with her hip to the arm he had draped across his leg. Stevie moved the arm and Jennifer made herself at home sitting sideways on his lap. Stevie knew she could feel his hard dick through his shorts.\n\nFive minutes later the pair was in Jennifer's bed, trying hard to keep their moaning and laughter down to avoid waking Annalise. That plan was barely working when Stevie laid the flat of his tongue on Jennifer's opening and gave a long, slow lick upward. Jennifer gave a piercing shriek, then tried to impale herself with Stevie's face. Stevie took a big drag of air into his lungs just before Jennifer's pussy came smashing in and she locked her wonderful legs around his head, face fucking him powerfully and yelling gibberish at the same time. Stevie continued to drive forward, and the two practically melded together until Jennifer finally stopped writhing in pleasure.\n\nWith Jennifer apparently passed out or dazed, Stevie had a chance to listen to see if they had woken Annalise. He didn't hear anything, so he just laid with his head across her right thigh until she gained some semblance of composure.\n\n\"Oh my God, Stevie! What was that? Did we wake Annalise?\" Jennifer rapid-fired at him.\n\n\"Oh, did I forget to mention that I'm also pretty good with my tongue?\" Stevie asked mischievously. \"And, no, despite the fact that you probably woke up half the neighborhood, somehow your daughter is still asleep, I think. Actually, I'm too embarrassed to go into her room and check.\"\n\nJennifer got up, put on a robe, and went to check on the child. She was smiling warmly as she came back. Stevie was halfway dressed.\n\n\"Relax, she's out cold,\" Jennifer said.\n\nStevie continued dressing as Jennifer looked at him with concern.\n\n\"What just happened here? Did I do something wrong?\" Jennifer queried haltingly.\n\n\"Nope. You did everything just right, even to the part where you got up and checked on Annalise. I hope her security always comes first in your mind,\" Stevie answered.\n\n\"Then why aren't you staying?\"\n\n\"Because the mood is gone -- the magic, and once the spell has been broken, there's no sense trying to get it back. I've seen this before ... yes, I can make you orgasm for half the night and it will feel good physically, but it won't even be in the ballpark with what we just had, both physically and mentally. So let's just leave this experience on its high plain, and sometime in the future I promise to do this again ... and much more,\" Stevie related.\n\n\"But I didn't even get you ...\"\n\n\"It's OK, Babe. If I have my way, there's going to be plenty more chances for a long, long time.\"\n\nStevie gave Jennifer a soft kiss on the lips. He let himself out of the house.\n\nThe very next weekend Jennifer got her parents to babysit Annalise for all of Saturday night, and Stevie rewarded her with the best night to sex she'd ever had. Stevie counted 17 orgasms over the three hours they played. At one point, Stevie was gently inhaling her clit with his tongue when Jennifer went from a low growl to a sharp shriek, followed by a lot of out of control spasming. Stevie quickly looked up, then saw Jennifer's eyes roll back into her head, and she came to an abrupt halt -- passed out completely. Stevie chuckled to himself, because this wasn't the first time he had ever made a partner pass out. He listened carefully to hear she was breathing, then he laid with his head on her thigh until she woke up groggy.\n\n\"Welcome back, Beautiful,\" Stevie said.\n\n\"Seriously, Stevie? Seriously?\" was all she could mumble.\n\nStevie was completely hooked by both Jennifer and Annalise by the time Christmas rolled around, but one incident in particular sealed the deal in his mind. Annalise was in her school's Christmas play, with both Jennifer and Stevie in attendance. After the play, as the parents were greeting the children and eating Christmas cookies and drinking milk in the school cafeteria, Annalise was talking to several other little girls, when one of them asked Annalise who Stevie was. Stevie was close enough to hear the exchange, although at that moment he knew Annalise couldn't see him.\n\n\"That's my dad,\" she said casually. \"At least I'm hoping he'll take the job.\"\n\nA lump formed in Stevie's throat and he was surprised when a tear rolled down his left cheek.\n\n\"Dad,\" Stevie whispered to himself. \"Dad. Dad. Daddy. D-a-a-a-d-d-d. Oh yeah. Dad.\"\n\nChristmas Eve was spent at Mario and Marianne's house. Christmas morning was spent at Stevie's. Jennifer and Annalise had decorated the house for Stevie, because he was Jewish, and the only time the house had ever been decorated was when Traci had done it while the two were married. Stevie left the girls instructions that he wanted the house festive, and had given them a good budget.\n\nThe morning was spent with much happiness and laughter as everyone opened their gifts slowly so the others could see. When everyone had finished opening their presents, Stevie asked everyone to remain in the living room while he went into his bedroom and came out with one final wrapped gift for Annalise. The child grabbed it and smiling brightly, tore into the gold and red wrapping paper. It turned out to be a bright Christmas-type sweater, with the words \"Daddy's girl\" written in script across the front.\n\nThe child at first looked shocked, then started to openly weep as she threw herself across the room and into Stevie's waiting arms.\n\n\"I knew you were the one the first time I saw you in the diner,\" she cried.\n\n\"Wait. We have to make this official first,\" Stevie said as he pulled something out from behind his back. He handed a ring box to Jennifer. \"You'd make me the happiest man on the planet if you would be my wife and let me be Annalise's father.\"\n\nAnnalise inherited two more grandmothers and a grandfather when Jennifer said yes. Stevie's mother, of course, was a given, but he hadn't realized until plans were being made that he was the closest thing Charlie and Angela had to a son, and they were about as thrilled over the upcoming wedding as his mother. Of course Stevie made sure that they were given a special place in the wedding, and neither Jennifer nor Annalise objected.\n\nStevie noticed, however, that in all of this euphoria, one thing seemed a little off between Jennifer and himself, and after letting it sit for a couple of weeks, he decided he needed to find out what was going on. Stevie wanted no secrets and nothing held back going into this union.\n\nOne Sunday afternoon when Annalise was outside of the house playing with some of the kids in Stevie's neighborhood, Stevie asked the question that no man really ever wants to ask his woman.\n\n\"Do we need to talk?\" he said huskily as his throat seemed to dry up in an instant. \"Something's been bothering you for a bit, and nothing is ever going to get resolved if we don't communicate with each other. Nothing gets left on the table, Babe, nothing. And I mean that forever. Nothing ever gets left on the table between us.\"\n\nJennifer blushed deeply, and Stevie sensed his world could unravel in a heartbeat. Jennifer stammered, started, stopped.\n\n\"This might seem totally stupid to you,\" she said, \"but I sense that there's something between you and Angela. Sometimes when she watches you, she gets a look in her eyes that more than a mother figure should have, and sometimes when she talks to you she puts her hands on you in kind of a familiar way. I haven't said anything to anybody else yet, but I have to know, did you two ever have something going, and am I going to have to watch over you for the rest of my life?\"\n\nStevie looked up in shock. He thought he and Angela had done a great job of leaving their past together in the past.\n\n\"A gentleman doesn't talk about such things under normal circumstances, but I guess these aren't normal circumstances,\" Stevie answered. \"Yes, with Charlie's knowledge and permission, Angela and I engaged in a physical affair for two weeks for each of the four years I worked at the resort in the Catskills, back in the summers when I was in college. It was strictly a physical relationship, and none of us has ever brought it up again. It ended completely after my last summer there, as was the plan. Not a living soul outside of this room knows a thing about it, and I just violated my agreement by telling you, so unless you want to have a short, quick marriage to a dead man walking, this never gets brought up again. Got it?\"\n\n\"That probably explains some of your skill in the bedroom, doesn't it? She was a good teacher, wasn't she?\" Jennifer kidded with a little sing-song to her voice.\n\n\"I'd like to think she was an excellent teacher and I tried to be an excellent student. But that's as far as this conversation ever goes. DO NOT SEND HER ANY KIND OF A THANK YOU!\"\n\n\"Even Gary doesn't know about this. I'm serious, Jennifer.\"\n\n\"Well then considering how much I owe that woman, I won't do anything that might get either of you in trouble.\"\n\n++++++++++\n\nA few weeks later, Stevie got the phone call he was expecting. Jimmy Burke invited Stevie to a midday walk in Central Park. The pair had a few things to discuss, Jimmy said. It had been almost a year since Sal Costa was found murdered. The police still had no idea who was involved. But Stevie knew Jimmy was smart enough to collect on what was at least partially a huge favor, albeit one that had never been asked.\n\nAlthough the two men had never met, they greeted each other like old friends with a big hug. It was a sign of respect for both of them.\n\n\"I like the way you do things,\" Jimmy told the younger man. \"You set that up really sweet, and let me make the decision. You knew I probably wasn't going to trust that mope, Costa, to get his nose into my business, but if nothing happened it was still no harm, no foul. But Charlie Figs had nothing but good things to say about you, so ...\"\n\nStevie looked sideways at the older man. This man was probably every bit the IQ equal of Stevie, he thought.\n\n\"Thank you,\" was all he said, sticking out his hand for a firm handshake.\n\n\"Now let's discuss some personal business,\" Burke said. \"Like I said, Figs says you're aces, and he's been telling me about your investment company, so to speak. Well, I've got a friend in Canada who owes me some money, and I think I'd like you to handle that for me. He'll send you a certified check each month, and you do what you do, minus your 'commission' of course. Just set me up like you've got yourself and everybody else set up ... nice and legit, so Uncle Sam can get his cut and everything will always be good.\"\n\nBy this time, Stevie was managing money for about three dozen associates, in addition to his other duties.\n\n\"How about we dispense with the 'commission'? Call it a wash for 'other considerations?'\"\n\nJimmy stuck out his big paw. Stevie put his hand firmly into Jimmy's.\n\nAs it turned out, Jimmy's friend from Canada, Izzy Rodriguez, sent a certified check for $34,321 to Stevie at the construction company every month. Although first puzzled by the odd amount, Stevie set things up right for Jimmy, and those checks continued to come in until Jimmy Burke died in prison in 1996.\n\n++++++++++\n\nThe Tanner household grew by one on March 2, 1987, with the birth of Mickey Charles Tanner. Babies are named after dead relatives by Jewish tradition, and Stevie always knew that someday he would honor his father. But since the baby wasn't Jewish, Stevie felt he could also honor the other person in his life that he had turned to for advice and wisdom on many occasions after his father died -- Charlie Bonafiglio. Charlie cried when Stevie told him the baby was going to be named partially after him.\n\nAnnalise looked pensive when Stevie dropped her off at his in-laws on the way to taking Jennifer to the hospital to give birth to the baby. Just before he knocked on the door, the child, now 12 and starting to bud into young womanhood, looked deeply into Stevie's eyes and spoke.\n\n\"I'll understand if you don't have as much time for me with a baby around -- your real child -- as you used to have. It's OK, Dad, I get it,\" she said.\n\n\"No, Baby, you apparently don't get it,\" Stevie answered as he swept her into a big hug. \"You are every bit my real child as your brother's going to be. I will rearrange my time a bit, but you are always going to be 'Daddy's girl,' whether or not you want to be ... and I'm guessing in just a few years, you might be regretting this conversation.\"\n\nAnnalise blushed, knowing full well that Stevie was talking about her getting a boyfriend some day.\n\n\"Oh, Daddy!\" she said as she hugged Stevie back hard. \"You'd better get going. You don't want to have the baby in the car.\"\n\n++++++++++\n\n\"The greatest legs to ever stride the earth,\" Stevie said as Jennifer came into the kitchen after getting back from her Saturday morning exercise class.\n\nJennifer was wearing a workout outfit that was maybe just a touch too tight, with the shorts being a touch too short as well, Stevie thought to himself.\n\n\"God, those legs are still fantastic. I'll be she turns the heads of those 20-something guys,\" Stevie thought to himself.\n\nA year younger than Stevie, Jennifer was now 58. She and Stevie were just a few months shy of hitting their 25th anniversary, and Stevie had to admit she was still a gorgeous woman. And because of that, Stevie made sure he was a regular in the gym, too. Not that he was overly worried, but Stevie didn't see the need to give Jennifer any reasons to look elsewhere. And he still bore some scars from his first marriage, the way she still bore scars from the relationship that gave her Annalise.\n\nJennifer smiled at Stevie and reached into the refrigerator for a cold bottle of water. She took a sip after twisting the cap off and looked sideways at Stevie, who was reading the morning newspaper.\n\n\"You wouldn't mind if I did a little girls' night out thing with several of the girls from the gym, would you?\" she asked Stevie.\n\nStevie was a little nonplussed by the request. Since the kids had left home, the weekends were for doing things together, particularly the evenings. The pair usually went out to a restaurant and sometimes a show or a movie, or just entertained at home. But since this was the first time she had made this request, Stevie acquiesced, and tried not to show he was hurt.\n\nJennifer got home at about 10 in the evening to find Stevie watching a movie in his recliner. He watched her carefully but couldn't discern that anything out of the ordinary had occurred, except for the fact the felt guilty for even thinking that something might happen. When Jennifer came up to him for a quick hello kiss, Stevie took a deep breath before giving his wife a gentle peck on the lips. She didn't smell from another man's cologne or cigarettes, he noted to himself.\n\nTwo weeks later Jennifer again asked to do a girls' night out, and this time Stevie let on that he was a little annoyed by what he thought was a lack of consideration. Jennifer noted the consternation on his face as he told her she could go.\n\nJennifer came home at about 11 this time, but Stevie wasn't in his chair. He had gone out to one of his favorite quiet spots, The Aurora, and was downing shots of rye with Gary.\n\n\"I'm not sure, but I think I've got a problem, Gar,\" Stevie told Gary soon after they met at the bar. \"I think she might be running around on me, but I haven't caught her with any foreign smells on her or anything like that. But all of a sudden she's doing 'girls' nights out'. I don't like this.\"\n\n\"Why don't you talk to her first, before you do anything,\" Gary said. \"Maybe there's something going on that you two can talk through. You have been married a long time, you know.\"\n\n\"I was kind of hoping you'd say that. I was hoping that there wasn't something going on that Melody might have known about and mentioned to you.\"\n\nMelody and Gary had been married for 30 years, and they talked about everything. So if she had mentioned something to Gary, Stevie was sure his longtime friend would have said something to him.\n\nStevie went home at about midnight. Jennifer was already in bed asleep when Stevie got there. This night marked the second Saturday night in the last three that they didn't have sex, a gap that had not happened in about two years, Stevie noted. Although were pair were in their late 50s, they had been having a sexual renaissance of sorts for the last couple of years since they became empty-nesters. An everyday pill for Stevie and some lube for Jennifer, and they could be good for at least an hour of bed-rocking sex at least twice a week. But now it had been over a week, and the only time in recent years that had happened was when one or both of the kids had been home with their families.\n\nA subcontractor not showing up ready to work on Wednesday morning had Gary in a snit, and in the process of calming Gary, Stevie knocked over his full mug of coffee, putting 16 ounces of java on the cherry wood desk and a nice blotch on his dress pants. Once Gary was calm, Stevie jumped in his car for the 15-minute ride home to change into a dry pair of pants.\n\nStevie didn't recognize the car in his driveway this time, but the feeling of d\u00e9j\u00e0 vu was nonetheless strong. Jennifer should have been at her job in the local hospital's administrative services, not home in the middle of the day. He had seen this movie before, and it didn't have a happy ending. Stevie started to breathe heavy as he got out of the car, pulled his pistol and entered through the garage door. He didn't hear anything as he walked through the kitchen, then he heard voices coming from the living room.\n\nJennifer's visitor screamed when she saw Stevie with his pistol out as he entered the living room. Up until that point, Stevie thought the visitor was a man.",
        "\"What the hell are you doing here?\" Jennifer yelled. \"Six months worth of planning down the drain!\"\n\nThen it clicked for Jennifer.\n\n\"You bastard! You thought I was pulling a Traci on you, didn't you?\"\n\n\"I-I-I,\" Stevie stammered, unable to say more.\n\n\"Get out! Get out! How dare you!\"\n\nStevie was crimson, still trying to form words, but he headed up to the bedroom to get a dry pair of pants. He hit the ground running once he got down the stairs, and got back in his car and headed back to work.\n\nStevie headed straight into Gary's office when he got back to work.\n\n\"She's planning a goddamned surprise anniversary party for me!\" he shouted to Gary. \"I saw a strange car in the driveway, thought I caught her in the act like I did Traci, even pulled my goddamned gun. And it turned out to be the caterer. Thought the woman was going to come unglued.\n\n\"Then Jen accused me of not trusting her because of Traci and threw me out!\"\n\n\"All because of a goddamned anniversary party!\"\n\n\"Calm down, Hairball,\" Gary said, calling his friend by his longtime nickname for him. \"I'm sure once she realizes what went down, she'll be OK, but I'm not sure that caterer woman will ever work for you again. She probably shit a brick right there on your sofa, man!\"\n\nThe visual of what Gary said made Stevie break into a smile, and he plopped into a chair in front of Gary's desk. Gary went to the mini bar that was in his closet and poured Stevie a shot of Old Granddad. Stevie took the shot appreciatively and sipped the amber liquid.\n\n\"I'll call Mel and see if she is gutsy enough to get in the middle of this for you,\" Gary said.\n\nStevie was pretty worthless the rest of the day at work, and at about 4 in the afternoon he told Gary he was going over to the Cozy Tavern to drown his sorrow and get something to eat before heading home to get some clothes and things so he could find a motel to stay in for the night. A little after 5, Gary showed up and ordered a Jack on the rocks.\n\n\"Mel says Jen's madder than a wet hen,\" Gary said using one of his favorite Iowa sayings. \"She's pretty sure you were spying on her, trying to catch her with another man. Says there can't be much love there if there is no trust.\"\n\n\"Ah, holy shit, Gar. How could my life go from just about perfect to shit in one day, just because I spilled some coffee on myself?\"\n\nStevie knew he needed heavy-duty help. When he got settled in at a near-by motel, he called Jennifer's mother, Marianne. Marianne had always been very good to Stevie in all the years, and Stevie knew that Jennifer would listen to Marianne no matter how mad she was at him.\n\nStevie knew that Jennifer would have called her mother almost first thing after she threw Stevie out of the house. He knew that Marianne was probably going to be hostile at first, but she would at least listen to his side of the story.\n\nMarianne answered the telephone on the first ring. Stevie thought she might have been sitting in the kitchen just waiting for it to ring.\n\n\"Wow, Stevie, would you have shot her if it had been a man sitting on the sofa with her?\" Marianne asked when Stevie timidly said hello.\n\n\"It's not like that Mom. I went home to get some clean pants because I spilled coffee on myself ... and when I got there, there was a strange car parked in my driveway. I've never told you this before, but that's exactly how it happened with Traci all those years ago. So what was I supposed to think. My heart was breaking ... I wasn't thinking straight. I pulled my gun, expecting the scene to be the same.\n\n\"And you can't blame me for even thinking that. Did she tell you she's been going out on Saturday nights with the girls and getting home who knows when. Put two and two together and you see what I'm thinking, don't you?\"\n\n\"Oh my God,\" Marianne blurted out. \"I forgot she said she was checking out food for the party on Saturday nights with some of her friends. Ooh, that probably didn't sit well with you in the first place ...\"\n\n\"No, it didn't ... and she was being very secretive ... so now you see?\"\n\n\"Son, you get yourself over here right now. I'll call my addle-brained child and she'll meet you here. We'll get this worked out right now, before one of you does something you'll both regret.\"\n\nMario met Stevie at the door when he got there. Despite the advancing years, Mario still had a good head of gray hair, and his wit was still sharp.\n\n\"Well, I'm glad you didn't shoot her, but my damn fool daughter sure left herself open to be drilled,\" he told Stevie as he handed him a shot of Old Overholt and led him into the family room.\n\nJennifer got to her parents house a few minutes later, and looked nervous as Marianne led her into the den.\n\nStevie raised his hands in a surrender of sorts, and a tearful Jennifer ran halfway across the room before launching herself into Stevie's strong arms.\n\n\"I'm so sorry for everything,\" she cried into his neck. \"I never expected you home in a million years this morning and never even gave a consideration as to what the situation looked like to you. And then you put that together with my going out on Saturday nights dressed up and everything ... hell, I probably would have shot me under those circumstances!\"\n\n\"Well, then I'm glad I'm the one with the gun and not you,\" Stevie responded back.\n\nJennifer explained to Stevie about the anniversary party and taste-testing foods with the girls at those Saturday night get-togethers. It had never dawned on her that Stevie might get the wrong impression if he put two and two together.\n\n\"That had to look like it was happening to you all over again. I'm so sorry. I should have known better than to try and put one over on you, even if it was for a good cause,\" Jennifer said.\n\nJennifer's face then took on a stricken look.\n\n\"But you have to play along. Everyone knows it's a surprise anniversary party and has been working real hard not to say anything to you. So you've got to be totally surprised when this goes down, Mister. I better see an Academy-award winning performance, or everyone's going to be crushed.\"\n\n\"Color me unbelievably surprised,\" Steve said. \"But tell me one thing. Do any of the El Quattros know about this?\"\n\n\"Those blabbermouths? Are you kidding? If we would have told any of them you would have known in five minutes flat. You guys are so loyal to each other and so tight it's sickening.\"\n\n\"I had to ask. Gary didn't seem to know a thing about this, and he surely wouldn't have been able to hold out on me.\"\n\n\"Mel couldn't risk telling him then, but he knows now that you do. She's sworn him to secrecy for everybody else, under penalty of no sex for the next six months. She knows her man and what works.\"\n\nStevie did everything but faint when he and Jennifer walked in to the Galaxie Lounge and was greeted with shouts of \"Happy anniversary!\" Jennifer later admitted to him that she almost fell for the act it was so good.\n\nJennifer wore a floor-length dress with a high side split revealing a lot of left leg. When she walked out of their bedroom after getting dressed, Stevie looked his wife up and down, and broke into a leering grin.\n\n\"The greatest legs to ever stride the earth,\" he said out loud as she approached.\n\n\"I thought you might like this,\" Jennifer said.\n\nThe band Jennifer hired for the evening played a lot of oldies, and Stevie and Jen were on the dance floor a lot. Stevie had learned to dance while dating between his two marriages, noting that there was nothing more pathetic than sitting at the bar drinking while the good-looking women were dancing. So Stevie had taken a few lessons. All Jennifer ever knew was that her handsome husband on the dance floor made her the envy of many a woman at any event that had dancing.\n\nJennifer told Stevie that she needed a break when the band went into \"I Think We're Alone Now,\" by Tommy James and the Shondells, but Stevie reached out and grabbed his wife by the wrist. As other couples danced all around them, Stevie reached into his pocket and pulled out a small leather bag with a drawstring and handed it to Jennifer. Jennifer slowly opened the bag to find a 2-inch solid gold heart on a brocade gold chain, with Stevie's name etched across the front in script, preceded and followed by what she would later learn were a pair of flawless one-carat diamonds. Jennifer stood mesmerized, so Stevie leaned in, took the pendant and put the chain over her head and around her neck.\n\n\"You've always had my heart. I just wanted to give you this as a reminder.\"\n\nThey kissed like they were the only ones on the dance floor.\n\nGary and Melody danced by at that point, and Melody saw the pendant around Jennifer's neck.\n\n\"Nice touch, Hairball,\" she said to Stevie.\n\n++++++++++\n\nDeath of a relative or close friend very often makes one reflective, and Stevie was no exception. Six months before, he had given the eulogy at Charlie Bonafiglio's funeral, now he was going to do the same at Angela Bonafiglio's. As he sat at his desk in the president's office at CAB Construction, Stevie, now 60, thought back on what he considered to be a great life and a rewarding career, and how much a part of that the Bonafiglios were. What made Charlie Figs choose him that night to accompany Angela to buy ice cream? He never had the nerve to ask Charlie. But that singular moment was the starting point for almost everything else that happened in Stevie's life. Stevie chuckled to himself at the absurdity of it all. It would make a great story to tell someday, but he knew he never could. Besides, nobody would ever believe it. It was just supposed to have been a summer job ... "
    ],
    "authorname": "Hooked1957",
    "tags": [
        "summer",
        "wine and old lace",
        "wine and old lace story"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/just-supposed-to-be-a-summer-job"
}