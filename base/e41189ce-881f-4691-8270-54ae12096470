{
    "title": "Naughty and Nice Ch. 03",
    "pages": [
        "\"I know I'm a wicked girl. You may have to tie me up and punish me sometime to give me what I deserve.\" \n\nMy cock swelled with a rush of hot blood. I gently kissed the top of her head. \"I would be happy to help you confess and relieve the burden of your wickedness, Lauren. Give me a week or two to set up the appropriate experience.\" \n\nI must have said the right thing. Lauren jumped up, pulled off her panties, and kneeled over me to pull off my boxers and get my cock into her mouth. After a good warm-up, she climbed on top and settled her soaking pussy over me, then engulfed me in one stroke. She rode me with passion and used her fingers to bring herself off. Her passion and orgasm fueled my own, and I came hard, again blown away by Lauren's sensuality. \n\nWe made out afterward with tender kisses, my cock still secure in her depths. Soon, she turned us on the couch, stretched her legs behind her, and dozed on top of me. Usually we both dozed after making love, but her latest confession swirled in my mind. \n\nLauren and I had now been dating a few months, and I was loving what I found in her. By her words and actions, she was feeling the same way. Part of that was us sharing more of ourselves with the other. First, Lauren had confessed that she was \"wired a little differently,\" meaning that she wanted me to spend a lot of time pleasuring her ass. I had earned her trust by using that knowledge wisely, and revealing to her that she could return the favor. \n\nOver the course of time, she had also revealed that she was intimate and a bit submissive. She had gone to wearing little when we were alone together, and she often now lounged in only panties. I suspected that those might go as well at some point. She liked my hands touching her, and I discovered that she really liked my arm around her, my hand closed over a breast. \n\nOccasionally she would lie across my lap, and I would caress her ass while she told me little stories from her life. These moments were very intimate and warm, and I suspected that they tied into some deep-seated part of Lauren's psyche. Sometimes they turned sexual, but sometimes not, and often I would continue stroking her ass while she drifted off, all tingly and snug. I knew that we were communicating at some deep levels during these sessions, and that we were binding each to the other.  \n\nDuring one of those occasions, Lauren asked me to talk about my sister and brushing her hair. \n\n\"At some point, it was clear that I had learned the basics, and Julie just wanted to enjoy having her hair brushed. She often showered in the evening, so I would be drying and brushing it before we went to bed. We talked about a lot of things during these sessions, including how girls were wired and what they liked. And about how having their hair brushed made some girls really hot. She never said so directly, but I suspected that Julie was one of those girls. One time, she told me not to stop. I brushed for a long while, and I could feel her purring under me.\" \n\n\"'Thank you so much,' she finally said. Then she said something I couldn't believe. 'You got me all worked up. I'm going to go to bed and relieve the tension.' I paused, stunned. Then I surprised myself. 'Me too,' I admitted, excited and horny as hell. We both went to bed, and it was incredibly intimate to know what she was doing in the next room. I could hear her moans, and I let her hear mine. I came incredibly hard.\" \n\n\"I'll bet,\" Lauren answered, her hips grinding into my lap. \"What were you thinking about?\" \n\n\"Not making love to my sister. The walls are too high for that. But knowing that she was masturbating next door-I imagined what that would be like.\" \n\n\"I'll bet she would have let you watch if you had asked.\" \n\n\"I think you're right, but that would have led me down a slippery slope, knowing my dirty little mind. And my sister's.\" \n\n\"Well the good news is that you can say and do anything you want with your dirty little girlfriend. Like right now. Imagine it was Julie here. What would you do?\" \n\nWithout a word, I tugged Lauren's panties off, coaxed her legs apart, and slid my fingers down to frame her soaking pussy. I found her breast with my other hand, and I worked Lauren through a couple of quaking orgasms. \n\nLauren got up, worked my boxers off, and gave me a fantastic blowjob. I saw stars when I erupted in her throat, and she stayed locked around my shaft, sucking it all down. \n\nLauren climbed into my lap, and kissed me deeply. Pulling back, she looked into my dazed eyes. \n\n\"I think that's exactly what would have happened.\" \n\nI didn't know what to say, but my deep blush told her everything. \n\n\"That's why I'm a wicked girlfriend. And I'm so happy that you play along.\" \n\nSo we had shared a lot with each other. \n\nBut to have Lauren ask to be restrained and punished; that was new. I knew where I would do it: my basement workout area. I had installed a mirror on one wall, there was a weight bench, and I had a pull up bar bolted to the joists above. I had considered adding another mirror on the corner wall to better judge my training form. Better get the mirror going I thought. I also had an old futon couch down there, and I thought that I should get it made up so Lauren had a place to rest after her \"punishment.\" \n\nI resolved to do some reading about submission, knowing that this would be a tricky area to navigate. Lauren was pretty self-confident in her professional life-she had a lot of responsibility at work and made a lot of decisions. In her romantic life with me, she could play either role of assertive or submissive, but she tended toward submissive. This seemed like some sort of yin/yang balance with her work persona. As she came to trust me more, she was giving that submissive side full expression. \n\nBut she also had high expectations. She was very intelligent, and she kept me on my toes in our relationship. I had done a good job satisfying her sexually so far, so she would expect something special this time, too. At the same time, the stakes were higher in this little game we had started. I had a feeling that the outcome would shape our future relationship and define how far we opened up with each other. \n\nOver the course of the next week, I spent some time at the home improvement store and down in the basement. I recruited a friend to help, and he teased me about wanting to admire myself while I worked out. Little did he know what I would be admiring. He helped me upgrade the lighting and put down an epoxy coating on the floor. The other preparations were private. I made up the bed and cleaned everything up-I wanted Lauren to be comfortable with the setting. I also bolted a bracket onto an old sawhorse I had to hold a vibrator and allow me to easily adjust the height. I spent some red-faced time at an adult store asking about wrist and ankle restraints. The female salesperson was very understanding and asked what I was trying to do and what level of experience my partner had. She helped me find the right equipment and steered me to a book rack where she handed me a volume. \n\n\"As you're learning, there is a lot of work involved for the dominant partner. Your lucky little submissive is just going to waltz in and have you do your utmost to give her everything she wants. A lot of people don't understand the role inversion that really goes on here. Who is really in control? Who is working to please the other? I want you to read this because it looks like you really care for this lucky lady. You want this to go well for both of you.\" \n\nI thanked her profusely and went home to complete the preparations. I read the book and confirmed some of my intuition. Lauren would appreciate the preparation of the room, and the clean, well-lit theme would fit what she was looking for. Anticipation was also a big part of the experience, so I made sure that everything was visible. If this went well, I figured I'd be buying some more toys and laying them out for future sessions. \n\nThe book recommended that I have a plan with various options and off-ramps depending on her reactions. I was going to keep this light and fun. I didn't see Lauren wanting any type of degradation. She just wanted to continue exploring her sexual, and possibly submissive, side. The book also recommended that I discuss safe words in advance, so the mood could be right on the actual day. I brought up the subject during dinner at her place. \n\n\"OK, Lauren, I'm about done getting things set up for your naughty-girl punishment.\" \n\n\"Oh, you are?\" \n\n\"Yes, and I wanted to discuss safety and safe words.\" \n\n\"Doing your homework I see.\" \n\n\"Always, with you involved. Now, let's talk about safe words. We want to have two: one to tell me to ease off a little, and the other to tell me to stop completely, release you, and end the show. Both of them not something we would say in the heat of passion or in the role play. But they should be easy to remember.\" \n\nLauren chose her words. \"Refinance\" to ease off and \"Bankruptcy\" to stop completely. We both owned our homes and joked about it-who hasn't? We would both remember. \n\n\"Good choices. Now, one additional safety bulletin. In case I pass out from pleasure while enjoying your body, you will have a way to get help. I'll explain it when we get there.\" \n\n\"Oh, my, you've put some thought into this, haven't you?\" \n\n\"I want to keep enjoying that naughty little body of yours, Lauren.\" \n\n\"And I want you to keep enjoying it. Now, when do we do this?\" \n\nWe agreed on next Saturday afternoon. Lauren was turned on by the idea, and thanked me for setting everything up. She took the lead and made intimate love to me that night, keeping her lips close as she rode me. She was letting me know that she definitely wanted me to keep the game going. \n\nSaturday finally arrived. I went out with other friends Friday evening, giving Lauren time with her friends and letting her build the anticipation while she slept alone. \n\nThe doorbell rang at precisely 12:00 noon, and I opened it to find Lauren in a white blouse and tartan skirt with matching socks and flat black shoes. Just the schoolgirl theme I had asked for. \n\n\"Good afternoon, Miss Daniels. Please come in.\" \n\n\"Thank you, Mister Thompson.\" \n\nLauren stepped past as I held the door, then she turned and waited. \n\n\"Miss Daniels, I prefer not to spend a long time lecturing. We both know why you are here. You've been a very wicked girl, and you need to be punished. I will ensure that you fully admit and confront your shameful thoughts, and we will deal with them together. Any questions?\" \n\n\"No, Mister Thompson.\" \n\n\"Excellent. This will take a while, so I want to make sure you have a chance to go to the restroom before we begin.\" \n\n\"I made sure to do that before I left, Mister Thompson.\" \n\n\"Good. At least you're a smart girl. Follow me, please.\" \n\nI led Lauren to the entrance to my basement. She knew about it, but hadn't been down. \n\n\"Please watch your step, Miss Daniels.\" I took her arm to guide her down. \n\n\"Yes, Mister Thompson.\" \n\nI watched the anticipation in her face as she descended. Her eyes got wide when she saw the mirrors, the sawhorse with the vibrator attached, and then the wrist restraints hanging from the bar. I led her further into the room. \n\n\"I don't know what you expected, but we find that the consequences should fit the deed. So shameful thoughts need a shameful punishment. Now don't worry, no one will hear anything, and we'll keep this private between us. You do understand that, Miss Daniels? Completely, and exclusively, private?\" \n\n\"Yes, Mister Thompson, I understand.\" \n\n\"Excellent. The punishment is much worse for careless girls who talk nonsense outside. You seem like a smart girl, so I don't expect any problems. Now, let's get started. For this special kind of confession and punishment, we will need to have no barriers between me and your wicked body. That includes your arms, so we tie them out of the way so you don't have to worry about any false sense of modesty. I already know you're beyond that, so we can get the untruths out of the way and focus on your wickedness. Do you understand all of that, Miss Daniels? Play it back to me, so I can ensure that you fully comprehend.\" \n\n\"Yes, Mister Thompson. I should take off everything, so we can both see my reactions, then I will stand with my arms tied up under the bar. I won't waste time with any false, good-girl pretensions.\" \n\n\"That was excellent, Miss Daniels. You are a very smart girl, indeed. Although it takes a smart one to be as wicked as you are. In any case, I expect to make outstanding progress today. We can get started when you are ready. Please use the chair.\" \n\nLauren sat in the chair, and started untying her shoes. I stood with my arms folded and watched her. She neatly folded everything and placed it over the back of the chair, then she rose and faced me, gloriously naked. \n\n\"Well Miss Daniels, you certainly have a body for very wicked thoughts. Please move under the bar and raise your arms.\" \n\n\"Yes, Mister Thompson.\" \n\nI inserted each arm into a wrist cuff and tied them gently but firmly. \n\n\"Will that be comfortable for a while, Miss Daniels? We don't want any embarrassing marks or bruises where people can see them.\" \n\nI saw Lauren's nostrils flare at the \"where people can see them\" remark. \n\n\"Yes, Mister Thompson.\" \n\n\"Now your secret safe words? Tell them to me.\" \n\n\"Refinance and Bankruptcy, Mister Thompson.\" \n\n\"Such grown up words, Miss Daniels. Maybe that fit grown up wickedness? In any case, I don't expect to hear them again. Now, one last precaution. See that box near your foot? If you kick it over, you'll find a phone inside. Touch the one-button to speed dial your friend; I believe her name is Amanda?\" \n\nLauren's eyes shot wide. \"Amanda?\" \n\n\"She is your friend, is she not?\" \n\n\"Yes, but...\" \n\n\"None of that, Miss Daniels. If the problem is serious enough, Amanda can deal with it. Of course, she will see you like this, and she may have to undergo a little training to make sure she keeps your secrets. But we are not unreasonable here. Your safety and lifelong well-being are of course our primary concern. Now, with that settled, we can continue. I'll complete the preparations by restraining your ankles. We don't want you accidentally hurting yourself or someone else.\" \n\nI pulled over two 25 pound weights with a chain passing through the openings. I fastened the attached restraint to an ankle. \n\n\"Now it might be difficult, but a spirited girl like yourself can drag this over to make a call if necessary. Let's get the other foot restrained.\" \n\nLauren held still while I fastened the other foot. I stood up to admire my handiwork. \n\n\"Miss Daniels, I'm going to be frank. You are a very wicked girl. You came down here, stripped naked, and got willingly into position to get tied up. Usually I get at least a little bit of resistance. It's almost like you want this.\" \n\nI stepped forward and turned to look her directly in the face. \n\n\"In cases like yours, I have to take special measures to fully understand the depth of your problem. It's not enough to talk-I need you to fully experience a man's body to gauge your wickedness. From the state of your very erect nipples, it appears that you understand. Am I clear, Miss Daniels?\" \n\n\"Yes, Mister Thompson, very clear. You'll have to fuck me so you can see what a bad girl I am.\" \n\n\"Precisely, Miss Daniels. I'm happy to see you use common speech. There is no need to falsely act like a lady down here. I expect you to fully confess your wickedness, using direct and clear language. You can act like a lady later. For now, I already know who you are.\" \n\nI moved in close. \n\n\"Let's start with those lips.\" \n\nI kissed, and Lauren kissed back eagerly, moaning into my mouth. I explored the contours of her lips, and she molded them to mine. I pulled back to a whimper of disappointment. \n\n\"Lips of a worldly temptress, Miss Daniels. I'm sure they are familiar with all of a man's body. Am I right?\" \n\n\"Yes, Mister Thompson.\" \n\n\"And when you have excited him with those lips, do you take his seed into your hot little mouth and swallow it down?\" \n\n\"Yes, Mister Thompson.\" \n\n\"Do you have to be asked?\" \n\n\"No, Mister Thompson, I like to please a man that way.\" \n\n\"Just what I expected. Now, let's move down. What about these ripe young breasts? Are they sensitive?\" \n\n\"Yes, Mister Thompson, they are very sensitive.\" \n\n\"And how do you know that?\" \n\n\"Uh, I've touched them myself, and I let my boyfriend touch them and kiss them.\" \n\n\"How often?\" \n\n\"All the time.\" \n\n\"It's what I expected. And this feels really good?\" \n\n\"Fantastic, Mister Thompson, especially when my boyfriend does it. I can't get enough.\" \n\n\"A wicked body leads to a wicked mind, Miss Daniels. I need to see for myself.\" \n\nI reached out and cupped her breast. Lauren pushed it into my hand. \n\n\"Very firm and shaped nicely. It's no wonder your boyfriend can't keep his hands off them. And these nipples, they are made for naughty thoughts. Diamond hard.\" \n\nI explored the engorged nipple for a while, then leaned down to take it into my mouth. Lauren moaned. I kissed and sucked until she was twisting from her restraints. \n\n\"I can feel your devilish body heating up, Miss Daniels.\" \n\nI moved behind her and cupped my hands under her breasts. \n\n\"Look at yourself in the mirror, Miss Daniels. Look at your body, hungry for a man's touch. Look at these heaving breasts. Even here for your punishment, you can't get enough. You're a very wicked girl. It's going to take many sessions to get everything exposed and confessed. Do you agree?\" \n\n\"Yes, Mister Thompson, I am a very bad girl, and it will take many times to find all the forms of my wickedness.\" \n\n\"I am gratified to see you at least admitting the full nature of your problem. That is the first step toward addressing it.\" \n\nI kissed down her neck. She sensuously twisted her head, moaning her pleasure. \n\n\"Just what I feared. Your neck is sensitive. In fact, your whole body appears sensitive. Is there anywhere I can touch that doesn't make you pant with desire?\" \n\n\"No, Mister Thompson. That's the problem. I can't help it.\" \n\n\"You'll just have to try harder, Miss Daniels. At least your punishment can reduce some of your guilt, so you can focus on addressing your wickedness. Now let's move lower. Just by looking in the mirror, we can both see that you are a shameful mess. Look at those swollen pussy lips. And you are soaked. Your scent is filling the room with your base desires, and no man is safe around that.\" \n\nI trailed my hands down to the tops of her legs, rubbing lightly but not yet touching her pussy. \n\n\"Tell me about this pussy, Miss Daniels. What are all the shameful things that have happened here? Tell me in order, starting when you first had naughty thoughts.\" \n\n\"Every event, Mister Thompson?\" Her voice was incredulous. \n\n\"No, Miss Daniels, we'd likely be here all night. Just the progression, and how frequently each act occurs.\" \n\n\"Thank you, Mister Thompson. It all started when I was a little girl. I had a lot of stuffed animals in my room, and I was riding my pony and dreaming of doing it for real like I read in my books. Suddenly, I got this really warm feeling between my legs. I settled a little harder, and the feeling got very pleasant. I rode with that feeling for a while. After that time, I rode my pony a lot.\" \n\n\"My body was changing, Mister Thompson, and strange desires were emerging. I tried riding my pillow in bed, and it felt really good with just pajamas. One day I took the pajama bottoms off, and it felt even better. So of course I eventually took my panties off too, and it felt fantastic. I was rubbing along, feeling better and better, and suddenly I was carried away by this intense, throbbing, burst of pleasure. I felt like I had discovered this precious secret that no one else knew about. After that, I did it all the time. As my breasts developed, I discovered that they felt really good, too. I started using my hands on them, and reached down to play with my pussy as well. What a discovery that was. I didn't know what it was, but I found this one spot that gave pleasure like nothing in this world.\" ",
        "\"I see. And how often did you give yourself this forbidden pleasure?\" \n\nHer face got red. \"Almost every day, Mister Thompson. Sometimes more than once.\" \n\n\"Miss Daniels! That is scandalous! Are you still doing that?\" \n\n\"Yes.\" \n\n\"We need to understand this 'more than once' comment. What is the most times in one day?\" \n\nShe looked down, and the blush crept to her neck. This was more than the role play-she was struggling to tell me. Her voice got small. \"Around ten. It's hard to count after a while.\" \n\n\"Ten!? Miss Daniels, I didn't even know that was possible. You are beyond anyone I've ever known.\" \n\n\"I know, Mister Thompson. I deserve to be punished for my wicked ways.\" \n\n\"I'm glad to see that you understand that. Let's continue.\" \n\nI chose my words carefully for this next discussion. I didn't want to pry too deeply into Lauren's past this first time. Knowing her, she would give me a hint if and when she wanted to tell me. \n\n\"It's time to get to your boyfriend. What liberties have you given him with your naughty pussy?\" \n\n\"Everything, Mister Thompson. He's touched it-it feels so much better than when I do it. He's kissed it, and that is out of this world. Then he's been inside with his cock, and I love how it opens up and tingles all my deep places. I've even played with myself while he fucked me, and I cum really hard every time.\" \n\n\"The way you tell that, Miss Daniels, you don't seem ashamed at all.\" \n\n\"Oh I'm not, Mister Thompson. Not with him. He is fantastic.\" \n\n\"Fantastically lucky...er, uh, I mean if he is as wicked as you are.\" \n\nA small smile played about Lauren's lips. \"Oh, he is, Mister Thompson.\" \n\n\"No wonder, with a wicked girlfriend like yourself tempting him. That is why you must be punished. Now, let's see just how naughty this pussy is. Look into the mirror, Miss Daniels, and watch your reactions.\" \n\nI brought my hands together between her legs. Lauren shuddered when I touched her soaking outer lips. \n\n\"See, Miss Daniels, your wicked body craves this. A man touches your pussy, and you moan and shudder through it, urging him on. Look at you twisting in your restraints, trying to get more. Your juices are running down your legs. Some serious punishment is warranted.\" \n\nLauren just moaned as I fingered her. I ran a finger inside, and she heaved forward, her breasts straining. \n\n\"Just as I expected. You're trying to hump my hand.\" I pulled out to a whimper and moved my hand behind her. \"Have you let your boyfriend take you from behind, like an animal?\" \n\n\"Yes, Mister Thompson.\" \n\n\"I'm afraid to ask how you liked it.\" \n\n\"It's out of this world, Mister Thompson. He pounds me hard in that position.\" \n\n\"And I suppose the slapping sounds from your rutting are bouncing off the walls?\" \n\n\"Oh, yes. I cum really hard from a good, hard fuck.\" \n\nI cupped her ass and let a finger massage her pussy. \n\n\"I suppose your boyfriend fingers you like this, where he can look at all your treasures?\" \n\n\"Yes, Mister Thompson. He is an ass man.\" \n\n\"An ass man you say? Miss Daniels, I'm afraid to ask, but we must get everything out. Do you let him play with your ass?\" \n\nLauren hesitated, and another blush crept down her neck. \"Yes, Mister Thompson.\" \n\n\"Is this for his pleasure, or yours?\" \n\n\"Both of us, Mister Thompson.\" \n\n\"I see. Does he play with anything beside his hands?\" \n\n\"Yes, Mister Thompson,\" Lauren said in a low voice. \n\n\"Well, out with it, Miss Daniels. What else goes on back here that we need to discuss?\" \n\n\"He kisses me back there sometimes.\" \n\n\"Miss Daniels! That is scandalous! And you enjoy that?\" \n\n\"Immensely, Mister Thompson.\" \n\nI traced my finger over her anus. Lauren shuddered. \n\n\"Anything else?\" \n\n\"Yes, Mister Thompson. I...I put my fingers and toys back there sometimes.\" \n\n\"Why am I not surprised. This is when you masturbate?\" \n\n\"Yes. I give myself powerful orgasms that way.\" \n\n\"Of course. Now, I usually never ask this question, because it would offend the sensibilities of even the most naughty of our girls. But in this case, I think it is warranted. Have you let your boyfriend take your final virginity back here?\" \n\nLauren hung her head. \"Yes, Mister Thompson. Many times.\" \n\n\"Miss Daniels. I don't even know what to say. I assumed I would have to fuck your pussy to understand the depths of your depravity, but now I'm sure you can tell me what I have to do.\" \n\n\"You'll have to spank me, Mister Thompson, then you'll have to fuck my ass while spanking me some more.\" \n\nHoly shit! Did I just hear Lauren say that? My cock about ripped out of my pants at this admission. I fought to stay in role. \n\n\"And that's exactly what I'm doing to do, Miss Daniels. And it's high time to get started. If there's anything else to confess, we can save that for the next time. You've earned a very serious punishment. Let's lower these wrist restraints so your body will be in the proper position.\" \n\nI lengthened the restraints and guided Lauren's shoulders down. She bent forward, her ass sticking out nicely. \n\n\"All right, young lady, I'm going to start out slowly so you have time to think about your misdeeds. I don't want you blubbering and bawling right off the bat.\" \n\n\"Yes, Mister Thompson. I won't bawl.\" \n\n\"Trying to be tough, Miss Daniels? No reason to boast until we're finished. Let's see how you do.\" \n\nI pulled back and gave her a first swat. The slap of hand to ass reflected off the walls with a satisfying crack. \n\n\"Oh, fuck!\" spilled out of Lauren's mouth. A shudder ran through her body. \n\n\"Such language, Miss Daniels.\" I gave her another swat. Lauren grunted again, and spread her legs as far as the chains would allow. \n\n\"Offering me all of your ass? I'm gratified to see that you understand the need for maximum punishment.\" \n\nI swatted a few more times. Lauren was hanging from her wrists, bending over as far as possible. Her breasts were tight and pebbled, and her nipples jutted down harder than I had ever seen them. A deep flush encircled her neck, attesting to her arousal. Wow. Each time I thought I had seen Lauren at her most passionate, she surprised me by going even deeper. \n\nI swatted a little harder. \n\n\"Oh, God, yes!\" Lauren moaned. \n\n\"Miss Daniels, please stay focused on your misdeeds, not your wicked body.\" \n\n\"Yes, Mister Thompson. I think that a good stiff punishment will help.\" \n\nLauren was certainly egging me on. I marvelled at this new aspect of my girlfriend. I gave her some harder swats, and started alternating cheeks. Lauren moaned and hiked her ass up as far as she could in her restrained position. She was loving this. \n\nI stepped behind her. \n\n\"Miss Daniels, look at yourself. You are wantonly bent over, thrusting your ass out to meet my hand. Your pussy is a soaking mess. I'm afraid that this punishment is not working to mend your ways. But I must reach you somehow. Fortunately, I have one more trick to try.\" \n\nI stepped over and pulled the sawhorse with the vibrator over in front of Lauren. Her eyes got wide. I adjusted the height just a little too low and moved it so the vibrator touched her leg. I put my hands on her waist and maneuvered her, but there was no way to get her pussy on the vibrator. Lauren moaned her frustration. \n\n\"Now, Miss Daniels, your job is to convince me that you fully understand your wickedness and that you intend to do something about it. Then you can tell me how you want this vibrator adjusted.\" \n\nI turned the vibrator on and gave her some medium swats that she could take for a while. Lauren twisted and bucked in her restraints, trying to see if she could find a way to prove me wrong. She could drop her knees and go lower, but that moved her hips away from the vibrator. She tried everything while I reddened her ass. Finally, she went limp and hung her head. I stopped. \n\n\"Mister Thompson?\" she said in a small voice. \n\n\"Yes, Miss Daniels?\" \n\n\"I know I'm a very naughty girl, and my body betrays me at every turn. I tried, I really tried to be proud and resist, but my body won't let me. So now I'm begging you, Mister Thompson. I will give you anything. Please, please move that vibrator and let me cum. You can keep spanking me. It's useless to claim I don't like it. I love it. But I desperately need to cum.\" \n\n\"Miss Daniels, I knew that we would eventually come to understand one another. This is my condition. Only you truly know the depths of your wickedness. So only you can know the depths of your shame. When you are feeling wicked, you must come find me and beg for release from your base desires. As you say, your body betrays you, and we will both know if you are shirking your responsibility. Do you accept this condition, and what it means?\" \n\n\"Yes, Mister Thompson. Knowing me, I will be finding you often.\" \n\n\"Excellent, Miss Daniels. I'm glad you understand. Now where would you like this vibrator?\" \n\n\"Right on my naughty little pussy, Mister Thompson. And please, keep spanking me until I cum.\" \n\n\"Of course, Miss Daniels.\" I adjusted the height of the vibrator and pushed it straight at her quivering snatch. \n\n\"Oh, God, finally!\" \n\nI started swatting her again. Lauren started humping the vibrator and making guttural moans deep in her throat. She was way beyond self-consciousness at this point, and had shut down everything but the animal pleasure centers in her brain. \n\nAfter a few minutes, her body went rigid, and then she threw her head back and screamed. I jumped at the intensity of it, but keep spanking her ass while she worked through a whole-body, whole soul orgasm that twisted her into knots. I was thankful we were in the basement, because the neighbors would call the cops at the screams and hoarse cries that were filling the room. After a while, they transitioned to whimpers, and Lauren moved her hips back from the vibrator. I shut it off, and reached behind her to lightly stroke and soothe her abused pussy. \n\nEventually, Lauren came back to earth. She hung limp from her bonds, just breathing. I gave her space. Finally, she raised her head. \n\n\"Thank you, Mister Thompson, thank you. That was exactly what I needed. Give me a moment, and then we can get to the second part of my punishment.\" \n\n\"You're welcome, Miss Daniels. I'm glad you appreciate how this can help you deal with your special needs.\" I was transitioning my language slightly, moving from an authority figure role to something a little closer to a co-conspirator. \n\nI slid my hands over her back and legs, massaging the muscles to keep them from getting stiff. She sighed her contentment, stretching her body under my touch. When she started twisting into my palms, I brought a hand down to cup a breast. The nipple jutted into my fingers. \n\n\"You are a perfectly wicked girl, Miss Daniels. Your body never fails to respond. Let's play with that luscious ass.\" \n\nI slid a hand to caress her ass while I kept up the massage of her breast. I kept my touch light, and explored the smooth skin of each ass cheek. After a while, my fingers ventured between her cheeks, and then I brushed her pucker. Lauren moaned as I exploited her weakness. \n\n\"Now I see why your boyfriend is always playing with your ass, Miss Daniels. He can do anything he wants to your naughty body, and you can't resist it.\" \n\n\"I know, Mister Thompson. I'm helpless in his hands.\" \n\n\"Don't worry, Miss Daniels. We'll help you make up for your wicked ways. I'll get undressed and work to understand what makes your ass so naughty.\" \n\nI undressed beside her, seeing Lauren's hungry eyes watch every move in the mirror. She was way turned on, and I could tell she couldn't wait to have me deep in her ass, fucking the daylights out of her. \n\nNow naked, I got the lube and coated a finger. I placed it at Lauren's anus and slowly worked it in. She let out a series of low moans and twisted her ass sexily to encourage my finger inward. When I bottomed out, I reached around and again palmed her tight breast with my other hand. I let her enjoy this new stimulation, then I withdrew my finger to a whimper and coated two with lube. I replaced them at her anus and let her open up and wiggle her hips to take me inside. \n\nLauren twisted, and pushed, and groaned to draw my fingers inside. Once I was seated, I pumped slowly while I rolled her stiff nipple between my fingers. \n\n\"Oh, God!\" she moaned. Lauren was lost in a sea of sensation. I slowly added a twisting motion to my fingers, and she purred her assent. As I felt her anus relax, I twisted more and more, until I had a writhing Lauren panting to the reaming of her asshole. \n\n\"Get your cock in me, Mister Thompson, and punish me like I deserve.\" \n\n\"It will be my pleasure, Miss Daniels.\" I withdrew my fingers, wiped off my hands with a towel I kept handy, and moved the sawhorse so the vibrator was at her pussy again. \"If I see you fully acknowledging your wickedness, I might be convinced to turn this on again.\" \n\nLauren uttered a low, sexy moan. I had a feeling she'd be doing everything possible to convince me to flip the switch. \n\nI lubed up my straining cock and got behind her. I placed it at her anus, and Lauren wiggled her hips and slowly pushed back. My cock slowly opened her up. She paused when I hit her inner ring, relaxed, then pushed me past. We both moaned as I descended into her fiery depths. Lauren kept up the sexy wiggle of her hips, driving my cock bit by bit just the way she liked it. Finally, her ass pushed into my groin-I was in to the hilt. Lauren gently rocked forward and pushed back to a lusty sigh. I knew how much she enjoyed this, and I gave her time to savor my cock in her sensitive back entrance. After a bit, she picked up the pace. \n\n\"Spank my ass, Mister Thompson,\" Lauren said in a throaty voice. \n\nI pulled back and gave her ass a medium swat. Her body convulsed. \n\n\"Oh, Fuck!\" \n\nHer voice was pure lust. Emboldened, I swatted again and started meeting her thrusts with my hips, driving my cock deeper into her. \n\n\"Yes!\" \n\nI started swatting in time to fucking her ass, and then suddenly my orgasm rushed to claim me. The long tension of the role play, Lauren's matchless eroticism, and her incredible ass combined to hurl me over the edge. I pulled her tight and howled as I emptied blast after blast into her clutching bowels. The sense of release and relief was palpable. Damn, did it feel good. \n\nLauren stayed with me the whole time, keeping her ass pressed deep into my hips to amplify the pleasure. When I could think again, I spoke. \n\n\"Miss Daniels, you were incredible. I can see that you are committed to understanding and atoning for your wicked ways.\" \n\nI reached under her and flipped on the vibrator. Lauren spread her legs and mashed the vibrator into her pussy lips. \n\n\"Keep punishing me, Mister Thompson,\" she said between gritted teeth. \"I can take it.\" \n\nMy cock hardened again to see my girlfriend so deep into lust. I pulled back and then pushed forward, driving my hips into her ass and putting pressure on the vibrator mashing into her pussy. I reached back and gave her another swat. She moaned her appreciation. \n\nI got into a rhythm. Lauren was in another world, with deep, guttural noises coming out of her throat. It was clear that she didn't care that I saw her at her most naked, vulnerable, and passionate state, stripped of all barriers to her darkest erotic desires. Tied up, her ass full of cock, her butt getting smacked, and her loving it. \n\nSoon, her body went rigid, and I felt her ass tighten in anticipation. A few more strokes, and she screamed to the bottom of her soul as her ass clamped wildly around my shaft. I stood in awe to watch my girlfriend give everything to the dark passion whirling through her body. Her limbs jerked in the restraints while the orgasm continued to consume her. Choked sobs tore from her throat. Finally, she came down and pushed away from the vibrator. \n\n\"Give me a moment to recover, Mister Thompson, and then you can complete my punishment.\" \n\nThat's my girl, I thought to myself. Lauren never ceased to amaze me with her multi-orgasmic abilities. She was always eager for another round. I let her rest, then I felt the first sexy wiggle of her hips. Soon she started sliding along my cock, then I felt her settle her pussy over the vibrator. \n\n\"I'm such a dirty girl. Make me pay.\" \n\nMy cock jolted at this admission. On its own, my hand drew back and cracked over her ass. Then I pulled back and plunged into her back channel, slamming her pussy lips into the vibrator. \n\n\"YES!\" \n\nLauren wanted a hard fuck, so I gave it to her. I kept my aim true so I didn't hurt her, but I reamed her ass harder than I ever had before. My spanks also increased to the maximum level I thought she could take. \n\nLauren peaked quickly from all the stimulation, and her passion drew me right along with her. I was rock hard, my brain short-circuited with the erotic current pulsing out from my girlfriend. My balls tightened up in anticipation. \n\nLauren tensed up again, hanging on the edge. On more swat, and another primal scream filled the room. It was joined by a roar as her clenching ass ripped my orgasm out of me and I emptied again into her bowels. We pressed tight together and twitched into each other while wave after wave crashed through us. \n\nFinally, I relaxed back so Lauren could move her abused pussy off the vibrator. She did with a long sigh, but kept her hips pressed deep into mine. I caressed her back while we enjoyed the afterglow. When I felt her hips relax, I slowly pulled my cock free of her ass, both of us twitching when her sphincter closed over the retreating head. \n\nLauren let out a long sigh and hung limp from her restraints. \n\n\"That was exactly what I needed, Mister Thompson.\" \n\nI summoned enough brain cells to continue the role play. \n\n\"I am very pleased to see us understand each other, Miss Daniels. I look forward to our future training sessions.\" \n\n\"So do I, Mister Thompson.\" \n\n\"Excellent.\" \n\nI reached down and released her ankles, then let her lean against me while I unfastened the wrist restraints. I put an arm around her to support her slumping body when the last wrist came free. I guided her to the futon and gently lowered her to the sheets. I got in with her, and we tenderly kissed, returning to our normal relationship as boyfriend and girlfriend. \n\nLauren pulled back, and her eyes crinkled in mirth. \n\n\"My butt stings, Bryan.\" \n\nI laughed. \"Too much?\" \n\n\"Oh no, you gave me exactly what I wanted. But now that the hormones are wearing off, I'm paying the price.\" \n\nWe both laughed. We kissed some more, then pulled back to look into each other's eyes. \n\n\"You've utterly ruined me, Lauren.\" \n\n\"How so?\" \n\n\"No woman will ever compare again.\" \n\nA big smile came over her face. \n\n\"Fantastic.\" \n\n*** To be continued in Part 4 *** \n\nAs authors, one of the greatest rewards is getting comments on our work-it's what drives us to write more. How did this story make you feel? What does it make you think of? How did it affect you? Please take a moment to vote and offer comments, or click the link to send me personal feedback\u2014I'll even respond! It means a lot. \n\nSpecial thanks to DawnJ and Famille Emmell for their editorial assistance and encouragement!"
    ],
    "authorname": "Antonio_y_Cleopatra",
    "tags": [
        "anal",
        "romance",
        "friends",
        "playful",
        "spanking",
        "tied up",
        "bondage",
        "schoolgirl"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/naughty-and-nice-ch-03"
}