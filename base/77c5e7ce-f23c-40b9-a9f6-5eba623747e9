{
    "title": "Sholan Alliance Ch. 04",
    "pages": [
        "I am editing this series due to some typo's, spelling errors, and mixed up dialogue. Once I am done I am going to repost them and that should clear up the chapter order. That was an epic fail on my part but should be cleared up shortly.\n\nI also had a volunteer editor, Captain Siren, review the first chapter in the Silver Moon series and she made some very good suggestions. With her help I am going to be revising all the chapters to remove some glaring inconsistencies. They will be posted as we smooth each chapter out.\n\nThe last thing I have to say is that there are only a few detailed sex scenes in this series as with my other stories. I find, this is a personal opinion, that having a sex scene in every chapter of a story gets boring after a while. I have come across some very good stories that keep getting broken up by one sex scene after another. That makes it hard for me to follow the plot line. \n\n*\n\nNow that he had been up checked they had quickly packed the clothing they needed. He was thankful that the bed in the captain's cabin was large enough for the two of them. Billy had replaced the original for a larger more comfortable bed since he did occasionally have a female share it with him. Loading the ship took the rest of the day to make sure they had everything they needed including a number of supplies from Satasha's ship.\n\nThey were finally done and though he wasn't comfortable with Sally coming with Satasha had explained why she needed to. \"Jenna, Sandi, thank you for all of your help and once we are gone if you get questioned be honest about everything except Satasha. I will deal with that when I come back.\" He gave both a good hug and stepped aside and let Satasha give them a hug.\n\nSatasha gave both a good hug and just for good measure a good kiss. \"When I make it back one of these days I might have Yilly take out that cute Ensign and you can cook me a meal and we can have a bit of fun.\" She looked over her shoulder at Billy. \"I know for a fact that Yilly likes robbing the cradle... Must be the taste of young flesh.\"\n\nBilly turned beet red and growled something about a kitty skin rug for his stateroom. \"Let's get going. I don't want to give the space corps any reason to delay us or have some engineer arriving to pick my brain and try to figure out the equations.\"\n\nSally didn't let him off that easy. \"So just how old are you Satasha? From your comment you are much younger than my father.\"\n\nSatasha grinned at Billy's discomfort. \"I would be about 28 years old by your years.\" Everyone stared at Billy and then started laughing.\n\nHe growled again. \"Anyone not onboard in about 5 seconds gets left behind.\" He turned and stomped up the ramp into the Ship. The two coming with were still snickering when they walked aboard and he drew in the ramp and closed the door. He stalked towards the command center and took the captain's chair. \"Sally navigation for now and Satasha engineering.\"\n\nThey ran a number of checks and he finally slid the roof of the slip open and typed in some commands and the Ship engaged the n-space engines and lifted out of the cradle. The nose lifted up and headed for the sky. He was taking it easy on the lift off to give the engines a test and to keep from drawing attention from the take off. Lift offs from the surface were rare enough since it was usually small ships that were personally owned by wealthy idiots.\n\nAs they were leaving he passed the 3C space station and was signaled. \"Damn. He activated the voice only mode. \"Hey Mack got the old girl back in shape and doing a test run to Atlas. How's tricks for you?\" \n\n\"Good to see but what happened to your video?\" Mack checked and his side was working fine.\n\n\"Damn it I forgot about this. I have a loose connection, give me a moment.\" He waved for Satasha to leave the bridge which she did very quickly. Once she was gone and the door was closed he thumped the console and then activated the video. \"A good thump usually does it but I was busy enough with the other repairs I completely forgot about it. I would love to stay and talk but I need to skedaddle and try and make up the money loss I had from the down check.\"\n\nMack laughed and then noticed Sally. \"Hey Sally how are you doing? I see you took after your Mother which is a good thing. If you had taken after your father I woulda felt bad for you.\" He winked at Billy when he said that.\n\n\"Mack you are too old for her so no making passes at my not so little daughter or I might have to challenge you to a duel.\" He was grinning as he said it. \"Besides she is way too smart for the likes of you.\"\n\nSally snickered. \"But Pappa since you like younger women maybe I like older guys.\" He turned and glared at her and she laughed.\n\n\"I will talk to you later Mack and ignore the silly girl in back. There was a cute young ensign who was checking me out and invited me to dinner during the up check.\" He scowled at Sally. \"Well I will talk to you someday and have a good one.\" He turned the view screen off and accelerated away from the station.\n\n~~~\n\nHe did the diagnostics and tests that he had promised and even did a couple of micro jumps that went wonderfully. He pausing near the edge of the solar system and stood down the engines other than the power plant for life support. Billy hurried through the upgrades and had Satasha follow behind to verify the connections and do a diagnostic on them.\n\nOnce they were done he grinned and rebooted the systems with the new software. \"Now we get to see if I am the mad genius everyone calls me.\" He fired up the n-space engines and surged forward fast than the old tub normally could and the moment they reached his estimated speed needed he turned on the hyper drive and Billy damn near shit a brick when the changeover was almost instantaneous and his instruments stopped reading. \"Drat, I need to recalibrate some of the instruments and sensors.\" He slowed the ship down till they started reading again and he was grinning like it was going out of style.\n\n~~~\n\nIn the solar system there were a number of ships close enough to get fairly quick readings on Billy's ship. The sensor techs who were watching almost lost it with the power signature for the n-space engines. When he went to hyper their sensors went off the scale. All of them sent copies of the recordings to their respective governments. \n\nThe various governments almost freaked out since very few ships could match the power signature. That was unless they were a combat vessel and this didn't read as one. It took some time for all the governments to identify the ship and who it belonged to. Once that was happened calls started going back and forth. The idea of the American Principality having that level of technology scared the daylights out of them.\n\n~~~\n\nOn the Combat vessel they detected the ship powering down and were wondering if they had somehow been detected. Just to be on the safe side they went to general quarters though they didn't run out any weapons since that could be detected. \"Keep an eye on that Ship and let me know if she does anything different. By different I mean anything like turning back changing directions, hell if you hear a fart from it I want to know.\" He had just been ready to go off watch but with this he was going to get something to eat and a quick shower and change of uniform.\n\nThe commander was back on the bridge within an hour. So far the ship hadn't done anything but maintain station keeping and was giving off very low power readings. Eventually he started rotating crew to get something to eat and a few hours sleep. Once the ship was gone he would go back to what he had been doing. In a few days he planned on moving slowly into the depth of the system and try to contact the missing scout ship.\n\nRight as he was getting ready to take his turn the scan tech turned and informed him that the hyper drive was powering up as well as the n-space engines. \"Vartra's bones look at those power readings.\" He routed the data to the commander's chair. They were below what the Sholan's could generate but from a Ship of her size they were almost shocking. As he was scanning the ship jumped forward and vanished into hyper space. \"Sir I have never seen readings like this before. They do not match any readings from any of the ships we have been scanning.\"\n\nThe commander was already sitting up and leaning forward. \"Follow it and send a message to the Mother Ship that we have encountered a foreign ship and are going to see where it is going.\" They moved out of the radiation field around Saturn and started towards the entry point. \n\n\"Commander just reminding you that if we jump this close we will be detected even if they can't see past the stealth.\" The navigator was programming in an estimated course for the Ship and once in hyper and they got a fix on it they would adjust as needed.\n\n\"Understood but we don't have a choice. That could be some sort of emissary to this world from the enemies. The signature isn't the same but is closer than any we have detected. Program the course and jump as soon as possible.\"\n\n~~~\n\nAs Billy whooped at what the modifications had done the other two were staring at him. \"Genius you said Sally? I think you were aiming just a bit low on the scale. This is pretty close to what some of our ships can do. With upgraded scanners and shields if he pushed her she would definitely run as fast as some of our fast passenger ships. Part of it is the ridiculous engine this thing has but some of it was the mods your father made to the engines.\" Satasha's eyes were almost round as she was talking.\n\n\"Sally leave the cabin please. Tasha is going to program in the course needed and you don't need that information. I can't leave since I have to approve it but I am not going to look.\" Sally nodded and left the cabin. \"Tasha punch in the course we need as best you can. If needed we might be able to detect her trail and find her that way.\" He turned his screen off and once the accept indicator flashed he pressed the touch screen and after a few moments the Ship altered course and he set the auto systems. \n\nHe hated using them but as a one man crew he had to have down time and the chances of encountering something in hyper space was so slim it wasn't funny. \n\n~~~\n\n\"Well let's go get something to eat. Secure from GQ and return to normal rotation. Note an order to inform me even in a sleep cycle of what the ship is doing.\" The commander left the bridge after turning it over to one of the other crew members.\n\n~~~\n\n\"I am going to get something to eat and then to bed. Since this is crewed only by me normally I have an extensive control station in my suite.\" He headed to the galley and almost kissed Sally since she had started cooking something. \"Hun you might just get a cabin upgrade for this.\" He grinned since she was already in the nicest cabin other than his.\n\nSally snorted and finished cooking and served everyone and fell on her bowl of stew like she was starving as well. Now this type of cooking he could do since it was mostly packaged food and he usually purchased some of the best unless he had passengers and depending on what type they were he would go down a notch or three.\n\nSatasha had originally estimated 3 or more weeks to reach the Mother Ship but at the speed they were doing she lowered that to 2 weeks or less. Billy was doing constant diagnostic checks on everything but it kept coming back clean. One part he was worried about he might have to redesign when he had a chance. It was a power circuit and it was showing a tiny bit of overheating and power loss. He kept a very close check on that item in particular.\n\n~~~\n\nWhen the Sholan ship entered hyper space the other ship was already a goodly distance away and they were initially able to only follow it by its hyper wake. Eventually they caught up to it and stayed right at the edge of their sensors and they were pretty sure that the other ship hadn't detected them yet. The Navigator was keeping a close eye on the ship and after a few hours he was frowning. Due to the commanders orders he opened a link to his cabin. \"Commander I have been tracking the other vessel and it appears to be headed to one of the rendezvous point with the Mother Ship.\"\n\nThe commander growled since it was the middle of his sleep cycle. After putting on his uniform he stalked to the bridge and over to the navigation console. It was in 3-D mode and it showed the estimated position of the Mother Ship and the other nearby ships. The one they were following did look like it was headed in that direction. He scratched his chin. \"Very carefully scan the ship and see what sort of weapons it might have. Send a message to the Mother Ship requesting orders on how to proceed. Contact me when you get a reply.\" He left the bridge and rolled back into bed.\n\nThe reply didn't take that long and informed him to gather as much sensor data on the ship and simply follow it as they were. There were a few more orders that he had rather expected. He informed the bridge to inform each watch of the new orders till everyone knew about them.\n\n~~~\n\nThey had been underway for just under 2 weeks when he got a massive return from the forward sensors. He dropped out of hyper immediately. Once in N-space he shut down the hyper drive and powered down the n-space engines to station keeping mode. Right as he was doing that two ships decloaked in front and one dropped out of hyper behind them. A broad spectrum transmission was detected and he opened both the audio and video channels.\n\n\"Alien vessel keep your engines where they are now and drop your shields or we will be forced to fire on you.\" It took a few moments for the video conversion to kick in and when it did he found himself face to face with a Sholan in a black suit and what looked like a helmet attached to the chair he was in.\n\nBilly had been practicing his Sholan with Satasha and had a reply ready. \"This is Captain Billy Madlax of the star ship Sandi. I am dropping my shields now and as requested my engines will remain at the power levels they are currently at.\" He checked a few readouts and then looked back at the male. \"I do have weapons onboard but they are inside their hatches and locked down. I am here to return a missing Sholan to you. Lt. Verzilon crashed on the planet I come from near my house. We couldn't repair her ship but was able to repair mine. Here she is if you wish to verify what I have had to say.\" He moved out of the command chair and Satasha sat down.\n\nThe Sholan on the other ship was more than startled when the alien started speaking Sholan. It was a little difficult to understand but he did understand the message and raised an eyebrow. He was about to demand her presence when she settled in the seat the other climbed out of. \"Identify yourself.\"\n\nShe sat there in her command suit and sat up straight. She had nothing to be ashamed of. \"This is Lt. Satasha Verzilon commander and only crew aboard the SSS Tail Chaser. My authentication code is...\" She reeled off a long string of numbers and letters. \"While approaching the solar system Captain Madlax is from my navigation molycirc fried. I set course for the system knowing that I had sent, or so I though, the location of the planet. I was simply going to keep in a station keeping orbit and acquire data. As I was approaching the planet my n-space engines started malfunctioning and I was forced to land. I still had shields and they were up. During the descent I lost all power when another molycirc block malfunctioned.\"\n\nThe commander who had been talking to her listened and then contemplated on what she had just said. \"Why did you contact the aliens?\" That was one item she might be held accountable for.\n\n\"The contact was unintentional. Capt. Madlax was on the porch of his house and since I was on emergency power I directed all available power to the shielding while diagnostic ran to see if I could do repairs. Since the use of the sensor suite would have used up power I chose to open a hatch to find out where I had landed. I didn't know where I was because I was knocked unconscious during the landing. When I opened the hatch and looked around I discovered that I was close to a house and a large building. I do have my personal recordings of that time.\"\n\nThe commander slowly nodded his head. \"Are you capable of sending the data over?\" If she could he would forward it to the Ship for review.\n\n\"I am sorry but our technologies are too different. Yilly tried to come up with a conversion so data could be transferred when and if we made it to the Mother Ship but the software is vastly different. If he had more time he might have been able to but we decided it was more important to get me back to the Mother Ship.\" She looked at Billy and he nodded. \"Yilly is willing to have one of the ships dock with his ship and show you around and at that point I can give you the data. Aboard there are a total of three of us. Yilly, his daughter Sally, and myself. Sally is an empath but has no training since they don't believe in psychic talents on their planet. I think Yilly might have some talent as well.\"\n\nThat got the commanders attention. \"Interesting and we will have to see. Illuminate the docking ring and we will see if we can actually dock. I will bring on two of my warriors and we will inspect.\"\n\nBilly nudged her out of the seat and sat down. He tapped some controls and the ring was illuminated. \"I am also shutting down the bridge. I do come in peace to return Satasha to her people and for no other reason. You can ask her later but I did not contact my authorities at all and as of now to the best of my knowledge there are a total of four of us that know of her existence.\" He added a code that would lock the controls down unless it was entered by him. \"I will be at the ring and my daughter will remain here to ensure we have ongoing comms.\" He stood and walked out of the bridge and down to the docking ring.\n\nAs he arrived he felt a slight bump and then the hiss of air being sucked out of the locking ring on the tube. There was a slight hum as well but he didn't bother asking. Billy's daughter contacted him and informed him that they had a solid seal.\n\n\"Opening outer doors.\" He punched in a command and the external doors opened and once the three Sholan's entered he shut the hatch, made sure the pressure was equal and then opened the inner door. \"Welcome aboard the Sandi and as you see Satasha is with me and you can check and make sure she is who she says she is.\"\n\nOne Sholan pulled out a scanner and ran it over both of them while she handed a data crystal over. \"Sir she is armed with a standard stunner. I do not detect any electronic signatures of a weapon on him though he does have something in his shirt pocket.\"\n\nBilly blinked for a moment. \"Oh sorry, those are my VR glasses. I am going to slowly take them out and show you.\" He reached into the pocket and pulled them out and put them on and then put them back in the pocket. \"I figured we can start at the front of the ship and work our way back. I have six berthing rooms, a decent cargo space and the engines. As we move towards the back I will show you the weapons and that they are locked down.\"\n\nThe commander nodded and the one warrior was scanning the entire time. Billy showed them the bridge and his daughter nodded at them though she spoke no Sholan at the moment. After that he showed them the staterooms and when he opened his door he could tell that they scented her in there. \"Why is her scent in your room?\" His voice was harsh and demanding.\n\nThey had discussed this and decided to be honest about it. \"Because she is my companion and yes she willingly became my companion and yes I know what that means.\" His voice was calm and collected as he spoke. \"We care a great deal for each other which is why we became companions. Mind you that didn't stop her from keeping any classified data from me. I didn't ask and she didn't talk about it.\"",
        "She wrapped an arm around him as a sign of affection. \"He is telling the truth and I am willing to have a truthsayer scan me while I am being debriefed. As you noticed I am armed and he isn't. That alone should say something. Now let's continue the inspection since I would like to get aboard the Mother Ship as soon as possible. They continued down the Ship till they reached the gunners station. There was one on each side. He explained what they were and what weapons the ship carried.\n\nEventually they reached the engine room and he had to grin at the muffled oath the commander made. \"Yes I know the engine seems oversized, well on your terms, for a ship of this size but it was designed for both fast supply runs and as a tug for damaged ships.\" He patted the engines again. \"That is half the reason I picked her up. Before I made modifications to the engines she could already pick up her skirts and hustle. After the mods she went like a bat out of hell.\" He stroked the engine and then finished the inspection.\n\nThe commander consulted with the tech running the scanner and after looking at the readings he turned back to them. \"I am satisfied that your ship does not pose a danger to the Mother Ship. We are going to place a tractor beam on you and tow you to the Mother Ship. It might take longer than using your engines but we have to take precautions.\"\n\nBilly shrugged. \"Do what you have to do. I am going to bring up my n-space shields for protection against meteorites and such. They will be on a low power setting which I am sure your weapons are more than capable of penetrating if deemed necessary.\"\n\nThe commander nodded. \"That is acceptable but drop them once we are within 100 Kerlons of the Ship.\"\n\nBilly nodded at him and escorted the three to the lock and the commander informed him that one of the warriors would remain behind. That was sort of annoying. \"Commander I have shown you that we are not a threat and I do not appreciate having such orders dictated to me on my Ship. I have brought back a crew member, not informed my authorities, and allowed you to inspect my entire ship including the recycling section. I do not want an armed soldier aboard my ship.\" His voice was hard when he said that.\n\nThe commander contemplated the expression on Billy's face and had a feeling that if he pushed Billy would go into hyper drive in an instant and from the readings they had gotten she would be a bitch to catch. He finally conceided. \"Fine but if there is any change in your ships status I will command it to be fired on.\"\n\nBilly sighed since he rather hated the military urge to shoot first and ask questions later. \"I will have someone in contact with your ship at all times. Sally doesn't understand Sholan but Satasha has a translation device that she can use well enough to get one of us up there to see what you need.\" They both nodded and the three left his Ship. Once they were gone he growled slightly. \"Uppity bastard thinking he could leave an armed soldier aboard and not have me complain.\"\n\nHe went forward and informed Sally of what was going to happen. Billy unlocked the controls and powered the shields up to the lowest safe setting. \"Sally we are going to have a three section watch and here is Tasha's translator. We are going to go and crash. Wake me in four hours and I will take over for six.\" They walked back to the stateroom and he stretched. \"I hope this doesn't get you in trouble. The companion thing I mean.\"\n\nShe shrugged. \"I don't know and don't care. I offered and you accepted and that is what matters.\" She wrapped her arms around him and fell asleep.\n\n~~~\n\nGetting to the ship didn't take that long and they were tractored into a landing bay and as he expected there was a reasonable escort. As the ramp was sliding down he hugged Satasha and gave her a good kiss and licked her nose. \"I hope to see you again before whatever happens happens.\" He turned and opened the airlock and the three of them walked out. Satasha and Billy were side by side and Sally behind.\n\nOne of the men waiting was obviously of a high rank. Billy stepped forward and ignored the warriors tensing. \"Sir I am returning Lt. Satasha Verzilon to you in good health and as a way to say we don't want a fight.\" He looked at Satasha and then back at the officer. \"I would like to request that whatever quarters my daughter and I end up in that Satasha be assigned to as well. This is not only because she is somewhat familiar with my species but also because she is my companion.\" He stepped back and ignored the murmuring.\n\nThe officer flicked an ear and the warriors stilled. \"I will see what I can do. Right now she needs to go to medical and then debriefing. The two of you are going to go to medical as well to try and ensure you aren't carrying anything that might infect us. These four warriors will escort you to medical. This is to ensure that you don't do anything and also to ensure you are not interfered with.\" Four warriors stepped forward.\n\nBilly nodded. \"I understand the need to be supervised.\" He turned and looked at the warriors. \"Shall we get started?\" Sally was standing close to him and he wrapped an arm around her and gave her a light squeeze.\n\nThe senior warrior gave them a brief look though his eyes did linger a bit longer on Sally. \"This way please.\" Two of the warriors were in front and two in back. They ended up taking several elevators and hallways to get to medical.\n\nAs they were heading there Billy tried to memorize the route but the Ship was just too bloody large and he sighed. When he sighed the senior warrior asked if everything was okay. \"Just starting to get a bit of a headache. It has been stressful for the last few weeks and this Ship is bloody huge and it makes my fingers itch. I am resisting the urge to pull something apart and see how it works.\" He gave the warrior a wry grin when he said that.\n\n\"That would not be a good idea for you to do. Are you an engineer or repair tech?\" He had been told to get as much information he could.\n\n\"Actually I was a member of the Naval design and development board when I was in the Navy. New ship technology makes my fingers itch.\" He stared at the control panel and resisted the urge to do anything.\n\nSally grinned at the warrior. \"My father is classified as genius level in engineering. You should see what he did when it came to the hyper tubes and engines.\" She shouldn't have mentioned it and Billy winced.\n\nThe warrior raised an eyebrow. \"What did you do?\" He wasn't any sort of tech but was curious.\n\nBilly sighed and looked at Sally. \"Thanks for that and let me have your VR glasses.\" He pulled his out and put them on and handed Sally's over. Once the warrior put it on Billy pulled up some of the VR boards. \"Mind you when Satasha originally landed and looked at my ship she asked why I didn't just re-crystallize the tubes. That sort of kick started my brain. This equation is used to describe the parts of the tube that have de-crystallized which feeds into this equation which creates a profile of how the tubes are to be heated and feeds into...\"\n\nThe warrior shook his head and took the glasses off and handed them to Sally. \"Now I have a stinking headache. Thanks for that.\" This was definitely getting mentioned when he was debriefed.\n\nBilly couldn't help but grin. \"You are very welcome and I am sure medical will have something for the headache.\" One or two of the other Sholans snickered for a brief moment. \"Anyways once I had those equations done I just sort of kept going and worked out some modifications for the engine that was supposed to improve the warp efficiency by about 20%. I missed that by a bit and ended up with 30% or a bit more. I think I forgot to take into account the size of the hyper engines.\"\n\nThe warrior almost glared at him. \"Do me a favor and stop talking about this since it is making my headache even worse.\" The worst part was the man had a down home sort of feel and look to him.\n\nSally had been listening to the translator and snickered. Without thinking she reached over and patted his shoulder. \"My Pappa tends to give lots of people headaches when he starts talking gibberish about electronics and ship design.\" Her hand rested on his arm for just a moment longer before she pulled it back. \"You have really nice fur and I like the color.\"\n\nBilly rolled his eyes at her. \"Leave the warrior alone. He is doing his job and on duty. Wait till you have gotten the Sholan language transfer and then maybe you can flirt.\" The warriors face was a conflict of reactions. It was obvious that he appreciated the compliment but also was trying to be professional. Next to him Satasha was trying to keep a straight face as well.\n\nThankfully the elevator stopped and it was a short walk down to the medical section. When they entered there was an older Sholan female inside. \"I was rather startled when they called and informed me that there were a new alien species coming up. Good afternoon to you Lt. Verzilon. Why don't we get started with you since you will take less time. Strip and go lay down on the scanner please.\"\n\nSatasha didn't even blink when she was told to strip and opened the pressure strip on her uniform and pealed it off and neatly folded it and then lay down. \"To the best of my knowledge I am in fine shape doctor and haven't been sick at all while on Earth.\"\n\nBilly noticed the two warriors giving her a casual look and at first he wanted to take a swing and then he grinned. \"I do have a good looking companion don't I? I am sorry she had to crash land but on the flip side of the coin I wouldn't have met her.\"\n\nThe two warriors that came inside blinked and gave him a slight smile back. \"She is a good looking female and you are a lucky man. I hope when I get a companion that she is as attractive.\" It was the senior warrior and he was giving Billy a speculative look.\n\n\"Yes we are sexually compatible and we have greatly enjoyed each other's company. Best woman I have met since my wife died almost 25 years ago.\" He had to glance away for a moment. \"By wife I mean something like a life mate.\"\n\nThe other warrior spoke. \"You have my sympathy sir. My Mother lost her bond mate in a flyer accident.\"\n\nBilly sighed at him. \"I did get two lovely and intelligent daughters though.\" He reached up and stroked Sally's hair. \"This is my oldest girl and almost as smart as her father in her field of choice.\"\n\nShe lightly punched him. \"As smart even if you gave us an inferiority complex while we were growing up.\" Sally leaned into the hug and stroking and gave the senior warrior a tentative smile. \"Do you have any siblings?\"\n\n\"Yilly it is your turn on the table. I told the doctor to make sure that you don't end up any more than medium rare.\" Her voice was casual when she said it and Billy almost choked. \"Hopefully we will be assigned a two person room and I will be able to be with you.\" She came over and gave him a kiss and licked his nose which he returned as well.\n\nShe walked out the door and the other two warriors followed her. Billy watched her leave and there was worry and concern in his eyes. \"I hope the debriefing goes smoothly for her. She really did do her best not to give away any sort of secrets about anything.\" Yes he had ended up living on her ship but he didn't go anywhere other than the living area and bedroom.\n\nHe turned and walked over to the scanner and didn't wait for the doctor to tell him he needed to strip. He was already unbuttoning his shirt when he noticed his daughter watching and he frowned and made the turn around motion and she snickered. He finished stripped down and could feel the warriors examining him. He hopped up on the scanner when the doctor told him to and lay back. He felt the cushion adjust and warm up. \"Oh yes, just like Tasha's bed. Now this is a technology I would pilfer.\"\n\nThe warrior gave him a slight growl when he said that and watched the doctor close the cover. He turned to Sally and gave her a smile though he was careful not to show his teeth. \"So what degree did you go into?\"\n\nSally grinned as her father snorted. \"Zenobiology and zenopalentology. I just finished my master's degree and was getting ready to work on my doctorate when Satasha sort of short circuited my schooling though studying her. Depending what happens I might be able to start my doctorate paper on you and your society.\"\n\nThe warrior rolled his eyes. \"Great we have an egghead engineer and a zenobiolgist aboard the ship. We might just have to lock you up to ensure that you don't gather to much information simply by watching.\" He sighed. \"Darn and I was going to invite you to dinner when you are allowed out of the security quarters. That might not be safe for my poor widdle brain.\"\n\n\"No dating my daughter before you receive parental permission. Sally when a Sholan invites you to dinner there is an expectation of sharing a bed after you eat and maybe some dancing.\" He didn't really have room to speak but he was going to keep an eye on anyone male or female who might take a fancy to her.\n\nSally was about to speak when the warrior did. \"I understand sir. I have a daughter from a previous bonding contract and though she is young I keep debating on getting a pulser to keep at home for when she comes into her first season.\"\n\nSally frowned. \"Pappa I am an adult and can make my own decisions. If you want to have a discussion with me about my sex life and who I have and haven't seen we can do that later.\"\n\nThe doctor shook her head. \"Now if all of you will shut up and let me work I would appreciate it. It makes it hard to scan him if he is talking.\" Everyone shut up though Billy was thinking evil thoughts at the moment. It was going to be hard enough for him to lose Tasha and he didn't want the same to happen to her. A bit of dalliance would be acceptable but he really didn't want her to get attached to anyone.\n\n\"Okay I am done with you for the moment though after I go through what the scans show I will probably have both of you come back for some further tests.\" Before he got up she attached a sampling unit to his forearm and pulled out a couple of small vials and tucked them into a pocket. \"That was blood, serum, some antibodies and a small DNA sample.\"\n\nShe waved him off the table and he stood and quickly dressed. \"Okay Sally your turn.\" He walked over to the chair she had been in and just to annoy her he turned it around. He waited for her to realize it and she frowned and told him to turn around. He smirked and did that. When he did he noticed the warriors watching closely and he cleared his throat and they twitched.\n\nThe senior warrior lowered his ears briefly. \"Just making sure there isn't any threat against the doctor. We kept an eye on you as well.\" Good god that sounded lame but he was very curious as to what differences there were. \"Is she pregnant and if so how far along?\"\n\nSally almost choked on that question but Billy answered. \"She isn't as far as I know. Our females develop breasts when they start becoming adults. It is a process that takes five to seven years depending on a number of factors. They also develop hair in their armpits and groin. Some girls and women shave or use a depilatory in one or both areas. As you can see we are relatively furless compared to you. We do have hair on other parts of our bodies but for the females it is normally very light and fine.\" \n\nBilly noticed that the warrior's eyes flicked between him and Sally and he sighed. \"Sally don't dally to much or I might spank you.\" He sort of figured that she was taking her time stripping and was probably facing the males while she did. His guess was pretty good when they coughed slightly and he could hear the sound of the mattress being laid down on and the cover coming down.\n\n\"So what is your name and rank?\" He asked the warrior. \"Also what age are you? I recently realized that I had never asked Satasha her age and she was younger than I thought.\" He had to shake his head and sigh. \"I felt really stupid at that moment.\"\n\n\"I am senior warrior Vangie Ashkeron and I am 34 years old.\" He knew this was to see if the man might accept him as appropriate to see his daughter. As I mentioned I do have a daughter who is almost 15 and will shortly be entering her first cycle.\" He wanted to impress this man since he did find his daughter interesting.\n\nBilly didn't even think when he converted that to human ages. \"That makes you approximately 38 human years old and your daughter 18 or so.\" He stroked his short beard for a moment. \"So what do you mean by saying she is entering her first cycle? To a human female it is a sign of becoming sexually mature and happens on a monthly basis unless they are on birth control.\" He didn't bother saying it was mandatory once they started their cycles.\n\nVangie thought about it for a moment so he could describe it as best possible so he would understand. \"Um, with our females they aren't considered sexually mature till they come into their first cycle or heat. Before then they don't have any interest in any sort of sexual activity. You can tell that the child is becoming a woman by her loosing the dark banding of childhood and her scent starts to change so she smells like an adult. During their first cycle they tend to find an older male and sort of hunt them down. Parents watch for this and keep an eye on who she might be interested in and decide if he is good enough for their daughter.\"\n\nBilly had to blink at that since it sounded so different. He knew that normally by now Sally would be yelling at him but she was learning about the Sholans and their home lives. \"How interesting. That is totally different than how humans deal with it.\" He contemplated the male and gave a small nod. \"I do feel that you are a bit old for her but I don't have much room to speak. If and when we are given leave to wander the Ship and after she has the Sholan language transfer I will strongly consider allowing you to at least visit her. I do expect you to respect her wishes in all ways.\"\n\nVangie actually looked startled when Billy tentatively gave him permission to at least visit his daughter and let a pleased smile cross his face. \"I understand sir and feel the same way about my daughter. I just wish I could be there but her Mother is a very good Mother and will ensure that all goes well.\"\n\nBilly grinned at him. \"Be ready for questions on everything from home life to politics. She is almost as bad as I am when there is information nibbling at my brain.\" \n\nSally sort of made an odd noise and he could feel her thinking bad thoughts at him. Right about then the doctor told her to get dressed and Billy told her to make it snappy and she grumbled at him. She did hurry though and Billy stood up.\n\n\"Now what? I assume we are going to the security wing and assigned a room. After that either something to eat and a debriefing. When they talk to Sally I want to be in the room simply to ensure there isn't any pressure placed on her to say something that didn't happen.\"\n\nVangie frowned. \"We wouldn't use such techniques unless we had a valid reason. In your case there will be a truthsayer in the room and she will probably get the language implant before she is debriefed. If you will follow me I will show you to your rooms.\" He turned and walked out the door. The second warrior followed behind them.\n\nIt didn't take as long to get to the security wing than it had to medical. Billy wasn't sure if it was because the first time they had used a long route to confuse them or simply because the ship was so bloody large. Eventually they arrived and Vangie pressed his palm against the door and it opened. \"The door is going to be locked while you are in here.\"\n\n\"There are two bedrooms, one on either side of the small sitting room. The shower section is connected to both rooms behind the living section. Do you have any idea what you can eat?\"",
        "Billy nodded and rattled off some of the dishes Satasha had made for them and a general quantity they would need. \"I am also familiar with how to use the basic fundamentals of the living quarters. I moved into the scout ship about a month ago and Satasha made sure I knew how to use all the features in the living room and bedroom.\"\n\nVangie nodded. \"I am not sure when they will do the debriefing but I will see about getting some food up here for you.\" He closed the door and went to order something for them to eat. He also dumped his recording crystal data into the system for the command to review what had been said.\n\n~~~\n\nBilly sighed and after looking around decided the couch looked reasonably comfortable and walked over and after testing it laid down. \"Wake me when the food arrives. I am tired and getting at least some sleep before whatever happens happens.\" Moments later to the disgust of his daughter he fell asleep.\n\nShe had been aboard the scout ship as well and there was a drink dispenser though it looked very basic. Sally dialed up a c'shar and wandered into one of the rooms and checked it out and it was fairly basic as well. The bathroom was divided into the actual bathroom with a partition that could be closed and the shower section. The shower section sort of bothered her since it was open and could be accessed from either end.\n\nWith a sigh she finished the drink and tossed the cup in the recycler and settled back in a chair and leaned back and fell asleep herself. She was a light sleeper herself and wasn't worried about the doors being opened without waking her.\n\nHow long they were asleep she wasn't sure when the door opened. On the other side was a different warrior as well as someone with a large tray of food. She stood up and waved towards the built in table. \"Pappa wake up food is here.\" When he didn't respond she ran her fingernail up his foot which definitely woke him.\n\nHe jerked away from her and almost fell on the floor. \"Damn girl don't do that or you might get spanked.\" Billy hated having his foot tickled even though it was a very good way to wake him. Satasha had learned that the hard way when she ran a claw up his foot. He had impaled his foot on her claw and limped for several days as a side effect.\n\nBilly stood up and stretched. \"Thank you for the food.\" He told the one Sholan and then looked at the warrior. \"Do you have any idea when we might be debriefed?\" That was not something he was looking forward to.\n\n\"It will start tomorrow morning. Tonight after you eat one of the telepaths is going to come down and make sure your language implant is correct and to give your child the language.\" He stepped back in the hall with the other Sholan. \"Press the button above the palm reader when you are done eating please.\" The door closed and Billy walked over to the table and settled down.\n\nSally followed suit and started eating. \"What was the language transfer like?\" She was sort of concerned since Satasha had indicated that she had some talent.\n\nBilly contemplated her question for a few minutes. \"Well to be honest it made my brain itch which was a very odd feeling. It didn't hurt or anything like that but I did worry about having Satasha fiddling with my brain. I like it the way it is and didn't want any changes.\" He continued eating till done.\n\nSally sort of tossed that around in her mind while she was eating and then smiled. \"Oh goody, that means I can actually talk to the Sholans and know what they are talking about. I can also ask questions and get to know them and how they are both similar and not similar to us.\" She looked happy with that idea.\n\nBilly snorted at her. \"What you really mean is you want to be able to flirt with the males so don't pull that dissertation flag out and wave it around.\" She definitely seemed interested in the senior warrior and it didn't really bother him other than not wanting her to be hurt.\n\nHe stood up as Sally smirked at him. Billy hit the button he had been told to and moved back to the table and sipped on the c'shar. \"I wonder if I could get some of the instant coffee from the ship. This stuff is boring. Give me a good cup of battery acid any day of the week over this.\"\n\nBefore Sally could say anything the door opened and the same warrior was there along with an older Sholan. She had some gray in her hair and he wondered how old she was but banished that thought from his mind. \"Good evening or whatever time it is here. Since you have purple on your tabard I assume you are the telepath that is going to implant the language?\"\n\nShe nodded and gave him a polite smile. \"I am and if you don't mind I am going to check your implanted language first since you are pronouncing some of the words oddly and some of the grammar is off a bit as well.\" She slowly moved towards him and smiled a bit more. \"As you did with Lt. Verzilon simply relax and let me into your mind.\"\n\nBilly sighed. \"Probably some of it is a carryover on how I normally speak but do what you need.\" He rested his arms on the table and took a deep slow breath and did his best to relax as she placed her hands on his temples and started working.\n\nHe felt her make a few changes and adjustments to what Satasha had done and by the time she was done he was rubbing his temples. \"God that makes my brain itch. Now I am going to have to deal with that for the next hour or so.\" He looked a bit twitchy at the moment.\n\n\"You have some sort of talent that is causing that reaction. I will have to look into it since it is not a talent I am familiar with.\" She frowned slightly when she said that. They primarily looked for telepaths to the point they excluded what they considered minor talents.\n\nShe moved around the table and looked at his daughter and gave her another gentle smile. \"I have been informed you have an empathic talent which is good but you need training. Right now I am simply going to implant the language and we will evaluate you later and see what training you need. Relax like your father did and this will be done reasonably quickly.\"\n\nShe placed her fingers on Sally's temples and gently worked her way to the section of the brain she needed and started giving her the language. It was a bit harder than her father since she did have some very basic shields. Eventually she was done. \"If you have a headache contact medical and they might have something you can take. If not then talk to the warrior and get an escort to your ship for a pain killer. Right now the best thing you could do is go to sleep and let everything settle in.\"\n\nMoments later she left the suite and Sally was looking sort of confused and Billy didn't blame her. \"Go lay down sweetie and try to sleep. If that doesn't work let me know and we will do as suggested and contact medical.\"\n\nBilly helped her up since she seemed a bit wobbly and to the room she was going to be using. He made sure she was comfortable before he left the room. Since all they had was the cloths they had on Billy hit the button to get the warriors attention.\n\nThe door opened and the male looked in and then at Billy. \"What do you need?\" His tone was rather brusque since he was not all that pleased with having to guard and help the aliens. Rumor had it that they might have some sort of contact with the enemy.\n\nBilly managed not to frown or growl back at the male. \"I would like to see about getting an escort to my ship so I can get some clean cloths, maybe a medical kit, and some toiletries.\" The last thing he wanted to do was to offend whoever debriefed him with smelly clothes.\n\nThe warrior nodded at the request. \"I will check and see. I will let you know what their decision is.\" He closed the door and then Billy growled.\n\nSince there wasn't anything to do at the moment he pulled out his VR glasses and started reviewing his modification to the ship to see what might have provided more power than expected. Since he was fiddling with his equations he decided to redesign the hyper engines themselves. It was to give him something to do as much as anything else. \n\nIt was about two hours later when the warrior opened the door to find him apparently writing in the air. He knew what the man was doing but it still looked odd watching him. Curiosity got the better of him and he had to ask. \"What are you doing? I understand you are using some VR glasses but what are you working on?\"\n\nBilly hit the save button and then waved a hand and the screens he had open vanished. He finally pulled the glasses off and looked at the warrior. \"I am working on redesigning the engine on my ship to take advantage of the modifications I have already made. I would show you the math and designs but for some reason every time I do it seems to give people headaches.\" He shrugged as if to say he didn't know why.\n\nThe warrior spoke. \"You have received approve for your request and two warriors will be here shortly to escort you to your Ship.\" He stepped back and closed the door.\n\nBilly put the glasses back on and continued with what he was working on till the warriors showed up. The trip to the ship and back didn't take all that much time. Most of it was packing up several days of clothing for the two of them. He felt really guilty for going through his daughters things to find some clothing but he had to do it. Billy also grabbed one of the medical kits after showing the warriors what was in it. The last thing he grabbed was a canister of instant coffee.\n\nEventually they made it back to the secure room and after walking in he quietly checked on Sally and she was asleep. He set her bag inside her room and closed the door. He grabbed his stuff and walked into his room. He really had no idea what time it was but he was tired and a bit grumpy. He understood their being careful with them but the attitude of some of the warriors was irritating him.\n\nBilly stripped down and lay down in the bed but was having a hard time getting to sleep. He had gotten used to having Satasha in bed with him. Eventually he did fall into a sort of sleep. In his dreams he kept seeing her being taken away for associating with him and being locked up. It definitely wasn't a comfortable sleep.\n\nApproval had finally come down for Satasha to stay with the two. They had taken into consideration that they were companions. More importantly it was because she was familiar with them. They also hoped that they might talk and see if what they said to each other matched up with what the debriefing had revealed.\n\nSatasha nodded at the warrior and walked into the room when the door was opened. She checked the two rooms to see which Billy was in. Once she figured that out she set a small bag of clothing down next to his and quietly pulled her uniform off and slid into bed next to him. She had really been hoping the request would be approved and was rather startled when it was.\n\nShe had noticed him sort of tossing and turning while she was getting ready for bed. Satasha had a feeling that it was because she wasn't there. Once she crawled in bed she curled up next to him and wrapped an arm around him. \"Good night Yilly. I hope you sleep better now that I am here.\" She lightly licked his nose before starting to fall asleep herself.\n\nBilly felt her crawl into bed and woke somewhat. He gave her a kiss before returning the lick. It still seemed a bit odd to do that but it was a sign of affection with the Sholans. \"Night love and now that you are here I will sleep better.\" He curled up close to her and was quickly asleep.\n\nThe next morning Billy woke and enjoyed the feel of her soft hair against his skin. He had really gotten used to the feel of her fur as they were curled up. Billy also had gotten very used to having someone in his bed and it really helped him sleep. \"Morning love and I am going to use the bathroom and then grab a shower.\"\n\nSatasha rolled on her back and had a good stretch before standing up. She pulled him close and simply held him for a few minutes. She felt Billy rest his head on her shoulder and she started purring. \"It feels so good to be in your arms again Yilly. Also just so you know I have been ordered to not discuss the debriefing with you.\"\n\nHe shrugged. \"I rather expected that and I am honestly a bit surprised they let you come down before we were debriefed. On to the shower and hopefully breakfast will be here when we are done.\" Billy grabbed some clean cloths and his shower kit before walking into the bathroom area. After taking care of business he stripped his shorts off and turned the shower on and adjusted it to the temp that both liked. When he stepped into the shower he tilted his head back and let the water flow through his hair and down his back.\n\nSatasha followed him and once she had used the bathroom joined him and let out a groan of pleasure. \"This feels really good and is relaxing my muscles.\" She felt like she had knots in her back and shoulders from stress.\n\n\"Tell me about it. Make you a deal, tonight assuming they allow you in again I will trade massages with you.\" His back was pretty tense as well but in his case it was worry about what was going to happen to him and Sally. He had no idea of what sort of training Sally might need or how long it would take. For all he knew they might be held here for a while as the Sholans sent a contact team to earth.\n\nAs they were talking Sally walked in and blushed slightly. \"Sorry, I didn't hear the water running through the door. I am going to use the bathroom and take a shower when you are done.\" She had found the bag and had a clean set of cloths in her hand.\n\nSatasha smiled at her. \"Go ahead and hop in the shower there is plenty of room and we, Sholans that is, tend towards communal bathing since it is much easier to get clean.\" As she was talking Billy was working shampoo into her hair and started working with her hair.\n\n\"Um, maybe, it feels a bit weird to take a shower while my father is in here.\" She gave a sort of shrug when she said that. If it had been only Satasha she wouldn't have minded and would have jumped in and showered with her. At the college she had gone to the showers were sort of communal as well so she was used to showering with females.\n\nBilly shrugged as well. \"It is up to you but it feels really good getting your back washed and since Satasha's hands are a bit rough it feels really good. I promise not to look if you do hop in.\" He felt a bit odd about that idea as well but Satasha did do communal showers and it was normal for them.\n\nShe considered it and finally decided she might as well join them. Satasha would be between the two and that she could deal with. She stripped down and climbed in and the next shower head turned on and she started getting her hair wet. As she was doing that she felt hands in her hair and for a moment almost freaked out before she realized it was Satasha.\n\n\"Relax Sally and try and enjoy getting some attention paid to you.\" She carefully soaped down her hair and then rinsed it out before putting conditioner in it and pinning it up. Next she got some of the body wash they used and started on her back and shoulders. She gave her a light massage since she felt tense and then worked her way down her back. \"I am sure you will want to clean your private areas but I will get the back of your legs for you.\"\n\nSally had to admit that it really did feel good having her hair done since Satasha had lightly massaged her scalp as well. When Satasha started working on her hair she had to groan slightly since it felt good. \"Okay maybe I could get used to this. It will teach me how to help you get clean so if I do get to see the warrior I am interested in if we do a shower I will do it correctly.\" She said part of that just to tease her father.\n\nBilly had been working soap into Satasha's back when Sally said that and in revenge he reached around Satasha and thumped her on the back of her head. \"Your father doesn't need to know details like that or he might get revenge by talking about the first time or two I showered with Tasha.\"\n\nThis time it was Satasha who turned and smacked Billy. \"No telling secrets and things like that. Both of you behave or I will have to separate you.\"\n\nBoth laughed at her and her reaction. Eventually they were done and when they came into the living area breakfast was on the table. \"Smells edible though it isn't something I have had before.\" There was something that looked sort of like scrambled eggs, toast, some sort of meat, and some fruit drink. It was edible but not something he would eat daily since the taste was a bit off.\n\nOnce they were done the door opened and there were two warriors and they stepped in. \"Mr. Madlax if you will come with us we will take you to the debriefing room.\" The other warrior did much the same with Satasha. \"We will debrief your daughter once you have been debriefed or to a certain extent and yes you can sit in with as long as you remain quiet.\"\n\nBilly nodded. \"Sally give me your glasses since I will probably need them.\" He took them from her and turned to the warrior. \"Let's go and get my brain picked over or whatever you are going to do with it.\"\n\nThe warrior had to smile slightly at that. \"I promise we will put it back together the way we got it.\" He was obviously teasing and when Billy grinned the warrior smiled even more. \"I am glad you have a sense of humor sir. It will make the day go by better than if you were grumpy.\"\n\nHe led Billy out of the room and down the hall. They didn't go very far to get to the briefing room. He watched Satasha being led into the one next to the one he was led into. Once inside he found several Sholans in there. He was waved to a fairly comfortable chair.\n\n\"I am Commander Z'shon, this is truthsayer G'Houl, and engineer Lt. H'Zalon. We are here to debrief you on how you met Lt. Verzilon and what if anything she might have told you that might be considered classified or might impact on your civilization. Once we have that done or at certain points the engineer is going to want to see the equations you worked up. This is to ensure that Lt. Verzilon didn't just give them to you. Do you understand everything I said?\" He wanted to make sure that the alien did understand what he was saying as well as checking his Sholan language implant.\n\nBilly nodded. \"I understand and from what Tasha told me there would be a truthsayer in the room which I assume is you since you have purple on your robes.\" He nodded towards G'Houl and got a nod back.\n\n\"I need to touch your forehead to create a link with you since you are an alien. If you were Sholan I could just create the bond without having to touch you.\" He leaned over and pressed a finger between Billy's eyes and just above his nose. It took a bit of time before he sat down. \"I now have the link and can only sense your surface thoughts and if what you say is true or true to the best of your knowledge.\"\n\nOnce Billy nodded the officer got started. \"Please tell me how you first met Lt. Verzilon and what happened in the first few days.\"\n\n\"Well I was hung over from a night on the town and was sitting outside...\" Billy went on to describe his reaction and the next few days. The Lt. had a number of questions till they got to the part with the re-crystallization of the warp tubes. At that point the engineer stepped in so to speak.\n\n\"I would like to see the equations you in theory worked out so I can compare them to ours.\" When Billy pulled out the VR glasses and handed them over the engineer to put on which he did.\n\nOnce he linked the glasses together he waved a hand and a number of VR screens appeared. \"Well she did mention or I should say asked why I didn't just re-crystallize the tubes. She didn't give me any further information on how the process worked. What I ended up with was...\" He explained how the equations worked and the process he had used to re-crystallize the tubes. \"While I was at it some potential design changes to the hyper engines occurred to me and...\" He described both the hardware, firmware, and software changes he had made.",
        "\"I have to admit I hadn't expected to get as much of a boost as I did but I forgot that I have an oversized engine in my Ship. I am going to have to upgrade the sensors and displays to get full use of the engines. Last night I was sort of bored and started working on a completely new design for the engines...\" He pulled those screens up and ran through the details.\n\nBy the time he was done the engineer was rubbing his forehead. \"You lost me partway through and now I have a headache.\" He turned to the Commander. \"Sir as far as I can tell these are original work and to be honest they are way above my knowledge level. Some of the things he was talking about shows that he has one hell of a grasp of hyper drive engines as well as ship designs. I would like to borrow him for a few days to talk to and maybe get some of the Naval Design team on the line as well.\"\n\nThe truthsayer was rubbing his forehead as well. \"Thanks for the headache Yilly.\" He grumbled.\n\nBilly sighed. \"I seem to be giving everyone a headache when I try and explain what I did and how it works. I can't help it since when my brain really gets engaged all sorts of things sort of fall out.\" Actually he found it rather amusing but he had a warped sense of humor.\n\n\"Now onto your relationship with Lt. Verzilon, tell me how it developed and what drew the two of each other.\" The commander asked.\n\nBilly tilted his chair back and stopped to think about it. \"Granted she was on earth for only a short time but what drew me is she is a wonderful woman and one hell of an officer. It grew from a mutual respect to an attraction and then I took her as my companion.\" He contemplated the officer. \"Now as far as our relationship in bed all I will say is that we are compatible and nothing else. On that I will stand firm. What we do in bed is between consenting adults and nobody else's business.\"\n\nThe commander was about to speak when the telepath interrupted. \"Sir he is firmly against saying anything further about intimate subjects. The only way we could get further information would be from Lt. Verzilon or from a deep mind scan. That is against our ethics and if you requested one it would be turned down. He has done nothing wrong and that is reserved for the worst criminals.\"\n\nThe commander narrowed his eyes as he contemplated Billy. His expression was showing he wasn't pleased with the answer but could tell by the way Billy was holding himself they weren't going to get any further information on that subject. \"Fine, at this point the debriefing is completed. I am going to be reviewing the recording to see if there are any further questions we might have.\"\n\n\"Bring his daughter in so we can debrief her and as requested you can stay as long as you remain silent.\" The commander didn't really approve of that but it had been approved by the higher ups. From what he understood she was an adult by their standards but he had been ordered to comply with reasonable requests.\n\nSally was brought in a few moments later and Billy gave her a smile but remained silent. She looked around and almost grinned. One man, she assumed he was an engineer, was rubbing his forehead and another male looked slightly disgruntled. \"Pappa did you break out your designs and equations again? You are going to drive everyone nuts if you keep doing that.\" She settled down in a chair and shook her head at Billy's slight grin.\n\n\"Okay, what do you want to know? Just so you know I didn't spend nearly as much time with Satasha as Billy did since my degree isn't in engineering.\" She settled down and looked relaxed.\n\n\"Pardon the touch but I need to create a link with you to sense what you are saying is the truth, or the truth as you know it.\" G'Houl leaned over and touched her forehead and moments later sat down. \"I have the link so start the debriefing. Don't make it to long since I am starting to get tired from dealing with alien minds.\"\n\nThe commander looked at the tablet in his hands and started asking questions. They were fairly similar to the ones he had asked Billy with the exception of the engineering questions. \"One last question for you and this is for medical. You indicated an interest in one of the warriors. To help us understand the attraction would you please answer?\" He glanced at Billy and then back to her.\n\n\"Well normally I would say I don't kiss and tell but there isn't much too really say. I liked the color of his fur and liked the way he felt when I touched him. He was friendly though he was doing his duty as an escort and from what I could tell he seemed to like my body.\" She shrugged. \"I have to admit I would love to talk with him about his family and things like that. Part of it is I am assuming that you will eventually contact Earth. It will help me towards my PHD in zenobiology and zenopalentology as well.\" She wasn't going to say or admit that she really was rather curious what it would be like to be with him.\n\nThe commander made some notes and looked back at them. \"You will be escorted back to your quarters and since it is dinner time some food will be brought to you. I will see you in the morning most likely.\" The door opened and the warrior gestured for them to leave and took them back to the rooms.\n\nBilly was by now feeling rather grumpy and one of his solutions was to think which is exactly what he did. He pulled out the VR glasses and started working on the redesign again. He was still working on it when dinner arrived which he ignored. \n\nSally could tell he was in a bad mood and finally asked what the problem was. \"Pappa I haven't seen you this irritable in a long time. What happened that made you this grumpy?\"\n\nBilly growled slightly. \"The exalted commander was pushing for details on Tasha's and my intimate life. He didn't like me telling him that it was none of his business and I have a feeling it is going to come up again. I am also feeling a bit ticked that we are essentially locked in a cell. I repaired my ship, ensured that Tasha stayed healthy and was given country hospitality and finally brought her back.\" He was still growling as he kept speaking. \"I can understand being cautious and all that but I feel like we are being treated as prisoners. They might be feeding us decently and accepting some of my requests but we are still prisoners.\"\n\nHe pretty much ignored dinner since he was feeling so angry and kept working on the designs. There was no way he was going to try them with his ship since her engines were already massive. He didn't think the hull could handle the stress if the redesign ended up as powerful as he expected. Billy would pick up another mothballed Ship and use that as his test bed. If it did work he could patent this as well and sell the rights to produce the engine and that would rake in some serious dough.\n\nIt was about an hour later when Satasha walked in to find Billy scribbling in air and looking rather grumpy. She walked over to him and pulled him into a good hug and gave him a good passionate kiss. \"I think Mr. Grumpy needs some attention.\" She started to nip his lips and then worked along his jaw till she reached his neck and tucked her nose in his pulse point and inhaled. By the time she did that she could feel him starting to relax.\n\nBilly didn't really appreciate the hug till she started nipping and nibbling and it felt very good. Since she was wearing a tabard he slid his hands between the material and her back and started stroking her fur. \"Sorry love but one of the individuals debriefing me was trying to get intimate details of our relationship. I pretty much told him to go hang since we are both consenting adults and what we did in bed or the shower was none of his business.\"\n\nSatasha grunted slightly. \"They asked me to and I said pretty much the same thing. I also told them to go hang. That was when they tried the 'for medical purposes only' bit. I told them that medically I checked out fine and that was good enough.\" She gave him a warm smile and kissed him again. This time she slid her tongue in his mouth and he returned the favor.\n\nSally looked sort of disgruntled. \"Take it to the bedroom if you are going to start making out. I don't have anyone to talk to and or get to know better.\" She sounded jealous of them since she really wanted the warrior to come and talk to her.\n\nBilly laughed at her comment. \"Yes ma'am, we will take it down a notch.\" He saved what he had been doing and put the glasses away. \"I am going to see if I can go to the Ship and download the data as well as print it out.\" He grinned. \"I managed to give the engineer and the telepath a headache when I started explaining the equation and software dealing with the hyper tubes. Then I started on the changes to the engine I had made. They want to call home and get a senior engineer to talk to me.\" That was one of the reasons he wanted to make the printout. It could be scanned in with the Sholan version of the VR glasses.\n\nOnce there he could use their tech and computers to check the equations and design changes. Now that Satasha was there he decided he had done enough for the day. It would take a while to complete the design but if he could use the Sholan computers that would help greatly. Billy didn't have a problem using their tech for his purposes. The only thing that bothered him was how they might handle the changes he was making. If they found that some of it might be of use he wanted compensation for it.\n\nThey moved over to the couch and for some odd reason he ended up in Satasha's lap and he leaned into the hug. Right about then the door opened and Vangie was standing there. \"May I enter? I have permission to talk to your daughter about our culture. There are some things I can't answer though.\"\n\nBilly waved him in and the door closed. Thankfully there were two couches in the room and Sally was on the other one. The warrior's fur was sort of a dusty gray which was fairly attractive on him. \"Welcome Vangie and it is nice to see someone who will talk to us. Have a seat and relax. If you want something to drink Sally can get it for you.\"\n\nVangie settled down on the other couch and it was obvious he was sort of nervous. \"No thanks on the drink and I am sure you already know that what is said in here is recorded.\" He felt rather bad about that since it was almost an invasion of privacy but he could understand the reasoning behind it.\n\nWhat he hadn't expected was for Sally to plop down in his lap and lean against him. \"Your fur is just so soft and I love the color as well.\" She could tell that Vangie wasn't really sure what to do. \"If you want to wrap your arms around me I would like it. Relax and we can cuddle as we talk. I could use a good hug and your arms around me.\"\n\nHe carefully wrapped his arms around her and after looking at Satasha and Billy he decided that as long as he didn't touch certain places he would be fine. \"I like the feel of you leaning against me and you fit my lap perfectly.\" He tucked her head against his neck and sort of under his chin. \"So what would you like to talk about?\"\n\nSally sighed in contentment as he cuddled her closer to him. She lightly rubbed her face against his fur and closed her eyes and relaxed. \"Honestly I am more than content to just cuddle and talk about whatever. I am not in the mood to try and dissect you and your culture. Tell me about your family and your childhood. We can swap stories.\" She looked at Billy and gave him a frown. \"No telling any of your stories. This is just between Vangie and I.\"\n\nBilly snickered and leaned a bit more into Satasha's arms. \"Didn't really plan to since I am having fun cuddling with my companion and whispering in her ear.\" He lightly nipped one ear and Satasha pretended to hiss at him and he snickered. \"You shouldn't hiss at your companion silly cat.\"\n\nVangie and Sally talked for quite a while and Billy started getting tired. \"I think it is time for me to go to bed. Coming Tasha?\" He stood up and offered her a hand which she took and walked into their room. \"Don't stay up to late you two.\"\n\nSally looked really startled when he said that and led Satasha into their room. \"We won't Pappa and I hope you sleep well.\" \n\nOnce in the room Billy sighed as he stripped his clothing off and stuck the shirt, socks, and underwear in a bag he had brought just for that. Sally had a bag as well. \"Sometimes being a father is a pain in the butt. She is an adult and has the right to choose who she will see and possibly have sex or form a relationship with. I don't want her being hurt the way we will be when we are eventually separated.\" By now she had stripped down as well and he pulled her into his arms and pulled her head down for a good kiss.\n\nHe took his time kissing her and nibbling on her lips. \"I don't know if they have video as well as audio surveillance in here but if they do they will see the affection we have. I am not planning on sex since they can go to hell before they get any sort of video like that.\" That was a definite growl when he said it.\n\nShe leaned into the hug and returned the kiss and really enjoyed it. Last night they didn't get in much cuddling since Billy had been asleep when she came in. Tonight she was planning on getting some definite cuddling in as well as a surprise for Billy. \"I can agree with that though we could keep the sheet over us but still that would bother me as well.\"\n\nShe let him go and went over to her ship suit and pulled out a package and came back over. \"I have a surprise for you Yilly.\" She had a very shy look on her face when she handed the bag over. It was heavier than the one he had given her.\n\nHe looked surprised but took the bag and opened it and pulled out a beautiful necklace that looked like it was gold interlinked with platinum. At the front of it was a small medallion that had an image of him and her kissing. \"Oh wow, this is lovely and thank you Tasha. I love it. Would you help put it on?\" He handed it to her and lifted his pony tail out of the way.\n\nShe took it and was pleased that he liked it and wrapped it around his neck and secured it. The medallion hung about 2 inches below his neck line. She adjusted it slightly and stroked it. \"Normally when Sholan's get bonded they trade bracelets but in this case since that won't happen now this is to remind you of our love. It is what you said when you gave me the necklace and I am returning the gesture.\"\n\nBilly took her hand and led her over to the bed and crawled in with her and wrapped his arms around her and pulled her close and started stroking her fur. His eyes were closed and he looked very content with the world at the moment. \"I keep finding that every day I am feeling more drawn to you. I know we can't have children but god I would love to take a bonding contract out with you. If you wanted children I am sure we could find someone that both of us could agree on. That is assuming that wouldn't be a problem.\"\n\nShe started purring as he was stroking her fur. She loved the feel of how he did it and in return she was stroking his back and sides. When he mentioned the bonding contract she almost melted into him and gave him a slow deep kiss. \"I would love to be able to do that as well. Not sure about the children bit as of yet since I am still pretty young. I would have to go to one of the priests of Vartra and ask. I think it would be okay since we couldn't have children.\" She wished there was a way she could have one with him but doubted it would be possible.\n\nThey cuddled for a while longer and that included the occasional tickle and for good measure Billy snagged her tail and played with it which got him growled at. He snickered and finally rolled over so she was spooning around him. He draped his arm around hers and laced their fingers together. \"Love you lady and see you in the morning.\"\n\nShe licked his neck and lightly nipped it. \"You say the sweetest things Yilly. Love you to you silly man and stop giving people headaches.\" Satasha snickered when she said that.\n\n***\n\nThank you for reading this and I hope you enjoyed it. Please don't forget to vote and leave a comment."
    ],
    "authorname": "maxd01",
    "tags": [
        "feline aliens",
        "space travel"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/sholan-alliance-ch-04"
}