{
    "title": "Amanda and Me Ch. 07",
    "pages": [
        "This story contains sex between a transsexual top and a male bottom. If you do not like stories where a man gets fucked by a transsexual please stop reading.\n\n____________________________________\n\nI was naked and alone in Amanda's bed when I awoke. Soft morning light filtered through the blinds as I slowly sat up and rubbed the sleep from my eyes. Wincing from a slight hangover I glanced over at the clock and then quickly around the empty room. My clothes from the night before were neatly folded and stacked next to the bed but I saw no sign of Amanda. Or Kim for that matter.\n\nI swung my legs over the side of the bed and stood up in three slow, deliberate movements. Walking over to my clothes I slipped on my underwear and pants. As I picked up my shirt I heard muted laughter from the other room so I quickly put it on and then ran a hand through my messy hair. Walking over to the bedroom door I opened it and stepped out into the living room.\n\n\"Good morning sleepy head!\"\n\nI looked up to see Amanda and Kim sitting together at the kitchen table. They were both smiling, at my disheveled appearance no doubt, as I slowly emerged from Amanda's room.\n\n\"Good morning,\" I said sleepily as I made my way over to the table. I leaned down and gave Amanda a kiss and then sat in the empty chair next to her.\n\nAmanda turned to me and asked, \"How are you feeling this morning baby?\"\n\n\"Good. Last night was... really fun but I think I might have had a little too much to drink.\"\n\nAmanda and Kim both laughed.\n\n\"I know what you mean,\" Kim said as she stood up from the table. She was wearing tight pink running shorts and a black sports bra. \"That's why I need to go run off some of those calories right now.\" Looking back over her shoulder as she headed for her room she added, \"Have fun on your hike today!\"\n\nHike? Oh yeah, I had promised Amanda we would go hiking today. As my brain slowly began working again I noticed that Amanda was wearing khaki cargo shorts and a white, mesh t-shirt.\n\nAmanda looked me over and smiled. \"Your overnight bag is my room. Why don't you go get dressed for hiking and I'll make us some breakfast. Sound good?\"\n\n\"Sounds good,\" I echoed and then headed back to her room.\n\nMy overnight bag was on the floor next to the bed and I quickly changed into the shorts and t-shirt that I had brought with me for hiking. After a quick stop to use the bathroom I rejoined Amanda in the kitchen. As she scrambled some eggs I sat at the counter and slowly sipped the orange juice she offered me. I was still struggling to wake up but Amanda did most of the talking while she finished making breakfast.\n\nWe ate quickly and then Amanda grabbed a small backpack she had already packed and we headed out. I knew that it would take an hour or more to get there so once we got out of the city I settled in and just enjoyed the scenery. For miles we drove through rolling green hills with a beautiful blue sky overhead. I rarely got out of the city and it felt great to be surrounded by such greenery.\n\nAmanda leaned over and put her hand on my leg. \"Looks like someone is feeling better.\"\n\nI turned and smiled at her. \"I am now. What about you? You seem to be feeling pretty chipper this morning.\"\n\n\"Yeah, Kimmy and I had been talking for almost an hour by the time you got up.\"\n\n\"Did you have a hangover?\"\n\n\"Not really. Kim said she had a headache but she planned to run it off this morning.\"\n\n\"I guess I got the worst of it then,\" I said with a slight chuckle.\n\n\"Yep, you really suck at playing 'I Never,'\" Amanda said with a sly smile. A few seconds later she couldn't help laughing out loud.\n\n\"Ha ha, very funny,\" I said with a smile. \"You and Kim really enjoyed making me drink by using our sexual history against me.\"\n\n\"You loved it,\" Amanda said as she squeezed my leg playfully. \"Besides, it led to even more new sexual experiences that I can use against you next time we play that game.\"\n\nI laughed out loud at that one. Amanda was certainly right that I enjoyed myself playing 'I Never' with her and her friends. And she was also right that it led to even more fun afterwards. I still couldn't believe that I had had a threesome with Amanda and Kim. Two beautiful transsexuals had taken turns fucking me and then they had cum on my face together. How did I get so lucky?\n\nWe settled into a comfortable silence as the scenery began to change. Trees began to pepper the landscape and mountains appeared ahead. It wasn't long before Amanda exited the freeway and we began driving down a small two lane road. Trees closed in around us and after a half an hour or so Amanda slowed down and began looking for markers. Rounding a bend we saw four or five cars parked around a sign marked \"Trailhead.\"\n\nAmanda parked and we both got out of the car. Taking a breath of fresh, cool air I sighed and looked over at Amanda who seemed to be doing the same thing. Reaching back into the car she grabbed the backpack and then came around the car towards me. Stepping in for a hug she leaned forward and brought her lips to mine. It was a soft kiss, gentle and light and then she asked, \"You ready?\"\n\n\"Yep, let's do it.\"\n\nAmanda led the way down the small, sunny trail and I followed. I had forgotten how quiet nature could be without cars or planes or people. Our feet on the soft ground were the only sounds as we walked through the brush beneath large, overhanging trees. At first I focused on the green landscape but after a while I found myself drawn to watching Amanda walk in front of me.\n\n\"What are doing back there?\" Amanda asked after we had been walking in silence for a few minutes.\n\n\"Just admiring the view,\" I replied as I watched her butt bounce up and down in front of me as she walked.\n\nAmanda giggled and gave her ass a little wiggle as she continued walking. Looking back over her shoulder she said, \"Thanks for going hiking with me today. I've been dying to go for months but I haven't had the chance.\"\n\n\"It's my pleasure,\" I said earnestly. \"I almost never get out and breathe fresh air like this.\"\n\n\"Good, I was hoping you wouldn't be too hung over today to enjoy it.\"\n\n\"Not at all. I'm just glad to have the opportunity to spend time with you up here,\" I added with a smile.\n\nWe hiked for almost two hours, stopping every fifteen or twenty minutes to drink some of the water Amanda had brought or to look at the amazing views. Over that time we talked about everything from past hiking trips to funny stories with friends to how often we saw our families. Our conversations were so effortless and engrossing that by the time I saw the waterfall come into view I did a double take and I had to check my watch.\n\nThe waterfall was about forty feet high with a small stream of water falling down. As we got closer the sound of the water hitting the rocks below became louder and we had to talk over it to be heard. A man and a woman sat on a rock close to the falls and said hello to us as we approached. I stood next to Amanda watching the water crash down for a few minutes and then we walked over to a large rock nearby.\n\nWe sat down and Amanda opened the backpack that we had alternated carrying. She took out two sandwiches and some snacks and laid them out between us. It was a small but welcome lunch she had packed and we ate while chatting over the sound of the waterfall. After eating we relaxed and continued talking for a few minutes before deciding to head back.\n\nAmanda grabbed the now mostly empty backpack and led the way down. After walking for about ten or fifteen minutes we were in the middle of a conversation about the merits of showering before bed versus showering in the morning when suddenly Amanda stopped walking without warning. I almost ran into her before I managed to halt my momentum. I looked around questioningly.\n\n\"What is it?\" I asked.\n\n\"I'm looking for something,\" Amanda answered distractingly as she studied the rocks on the side of the trail.\n\nThere were a number of large rocks lining the right side of the trail with smaller rocks scattered in between. Amanda began to slowly walk down the trail, looking over the rocks into the bushes behind them. I followed her in silence as I tried to figure out what she was searching for. Finally she seemed to find something because she moved forward and slipped between two large rocks.\n\n\"Are you coming?\" She asked with a smile as she looked back over her shoulder.\n\n\"Of course,\" I answered as Amanda stepped through.\n\nI followed her lead by squeezing my larger frame between the rocks. The foliage on the other side was much thicker and I had to put my hands up to avoid getting hit with branches. Amanda was walking away from me down a small, partially obscured trail lined by small rocks. I wasn't sure how she found this trail or how she even knew about it but I shrugged my shoulders and moved forward.\n\nI followed Amanda for a few minutes through more densely populated terrain until we came across a small clearing. It was a small space with no trees, just a patch of wild grass on the ground in front of a cliff with a large drop. I looked out to see a beautiful view of the valley below and the tree-covered mountains surrounding us. Amanda and I stood there for a few minutes just admiring the vista.\n\nWithout a word Amanda took a small, thin blanket from her backpack and spread it on the grass in the middle of the clearing. Taking off the backpack she sat down and motioned for me to join her. As I took a seat next to her I raised my arm and put it around her shoulders. Even though it was a warm day she snuggled close to me and laid her head on my shoulder as we relaxed and continued enjoying the silence and the view.\n\n\"So did Kim tell you about this place?\" I asked after a few minutes.\n\n\"Actually no,\" Amanda answered. \"After Kim told me about the hike I googled it to see if there was anything else people recommended seeing up here. Someone had mentioned this spot.\"\n\n\"It's beautiful,\" I said as I studied the landscape.\n\n\"Yes it is,\" Amanda said.\n\nShe lifted her head from my shoulder and placed her fingers on my chin. Turning my face towards her she kissed me softly on the lips. Our kiss was tender at first but as the seconds passed with our lips touching I felt the mood change. My body immediately began to respond by leaning more into her and she in turn pressed back against me. The warmth of the day must have gotten into us because before I knew it I was opening my mouth to allow Amanda's tongue in.\n\nAs our passion intensified and our tongues danced I put my hand on Amanda's bare thigh and slowly slid it up. As soon as I felt the hem of her shorts I felt my way over until I could feel her soft cock through the fabric. I began to trace circles over it which seemed to have an immediate effect on her. She grabbed the back of my head and shoved her tongue further into my mouth, pulling me closer to her as she did so.\n\nAs I felt Amanda's cock begin to harden under my hand I felt my own cock begin to strain against the confines of my shorts. Amanda's tongue continued its assault on my mouth as she reached over and grabbed the bottom of my shirt. Breaking our kiss she lifted my shirt up and over my head in one quick motion. Once I was shirtless Amanda ran her hands over my bare chest while making a sexy \"Mmm\" sound in her throat.\n\nLetting her hands travel down over my stomach, Amanda let them rest on the button of my shorts. \"Want to stand up so I can take these off?\" she asked with lust in her voice.\n\nI stopped rubbing Amanda's cock and practically shot up from my sitting position. Once I got my feet under me I looked down and watched as Amanda got up on her knees and undid the button and zipper on my shorts. Opening them up and sliding them down to the blanket she placed her hands on my hard cock that was making an obscene tent in my underwear.\n\n\"Someone's happy to see me,\" she said with a smile as she began rubbing my cock through my boxers.\n\nAmanda kissed my underwear covered cock and then stretched the waistband out to get it over my erection. After I stepped out of my shorts and underwear Amanda leaned back in and began to cover my cock with kisses. Up and down the shaft she kissed, making sure to pay extra attention to the head of my cock. Just when I thought I couldn't take it anymore Amanda aimed my cock directly at her mouth and inhaling the entire thing in one smooth motion.\n\nI moaned as her wet, warm mouth enveloped my cock. Amanda began slowly, sliding her mouth up and down the length of my seven inch cock before gradually picking up the pace. She looked up and made eye contact with me as her tongue snaked out across the bottom of my shaft. I even noticed that she had fished her own large cock out of her shorts and was stroking it while she sucked me. Closing my eyes I threw my head back and just enjoyed the feelings of pleasure Amanda was giving me.\n\nAfter a few seconds I opened my eyes and looked out over the landscape. Suddenly a thought occurred to me: If anyone was down there they could easily look up through the trees and see me completely naked getting a blowjob. I suddenly got nervous as I looked back down at Amanda sucking my dick. I slowly started bending my knees and she let my cock slide from her mouth.\n\n\"Is everything ok?\" she asked.\n\n\"Yeah,\" I said as I went to my knees in front of her. With a quick glance out at the valley I said, \"I just realized that anyone can look up here and see us fooling around.\"\n\nAmanda laughed at my prudishness and rolled her eyes. \"So what? So someone gets a free show, what's wrong with that?\"\n\n\"I don't know... I just-\"\n\n\"Well I don't mind,\" Amanda said as she stood up in front of me.\n\nHer hands immediately went to the button of her shorts and so she could undo it and slide them down. Her panties quickly followed and in no time her rock hard eight inch cock pointed directly at my face. At the sight of her bare member I licked my lips and leaned forward. Quickly taking her smooth cock in my mouth I pushed forward and opened my mouth as wide as it would go. Her cock was a natural fit.\n\nAs I slid my mouth up and down her shaft Amanda began removing her shirt and bra, baring herself to the world. I looked up past her small, round breasts to see her smiling down at me. I reached up and began to play with her hard nipples as I continued blowing her. The loud moan that escaped her lips told me I was doing well so I increased the pace and volume of my sucking as the sound echoed through the clearing.\n\nAfter a minute or so Amanda stepped back so that her cock fell from my mouth. I looked up in confusion but before I could say anything she pulled me to my feet. Standing naked together in the middle of the clearing Amanda put her mouth back on mine and kissed me passionately. I returned her enthusiasm with plenty of my own and I forgot about the world around us as we made out.\n\nI felt our hard cocks touching so I reached down and began to stroke them together. At the same time Amanda reached around and grabbed my ass. After a few seconds of squeezing my cheeks she moved her hands over and began to finger my ass. The feeling of first one finger, then two fingers penetrating me made my cock even harder as I continued rubbing it against Amanda's hard member.\n\nAfter only a few more seconds of Amanda fingering me I was more than ready. Breaking our kiss I started to turn around. As Amanda's fingers slipped from my ass she quickly helped me turn and then pulled me back into her. With her naked body against my back she began kissing my neck. I moaned at the feeling of her mouth on me and her hard cock pressed against my butt cheek. Kissing along my collarbone she kept kissing down my back as she gently pushed my upper body forward. In no time she was on her knees behind me.\n\nI bent over awkwardly as Amanda spread my cheeks. Even though I knew what was coming I jumped slightly when I felt her tongue touch my hole. I moaned as she rimmed me and I felt waves of pleasure wash over me. At the same time I heard Amanda open a bottle of lotion and then the sounds of Amanda stroking her lubricated cock became audible. As much as I loved how her tongue felt on my hole I suddenly needed her cock in there.\n\n\"Fuck me baby!\" I said louder and with more force than I intended.\n\nAmanda quickly took her tongue from my ass and stood up. \"I thought you'd never ask,\" she said with a smile in her voice.\n\nGrabbing me by the hip with one hand she used the other hand to line her cock up with my hole. As she pushed forward I felt the head of her cock slowly begin to stretch me out. Since I had been fucked by two cocks less than twelve hours earlier it didn't take much pressure before the head of Amanda's cock slipped into my ass. We both let out a low moan as Amanda kept pushing into me until her hips made contact with mine.\n\nWith her cock completely in my ass Amanda gave me a second to adjust. I loved the feeling of her pulsating cock filling me completely and as soon as I pushed back into her she knew I was ready to go. Pulling her cock back in a smooth, controlled motion Amanda began fucking me with long, steady strokes. Every time she fully pushed into me I moaned at the feeling of ecstasy her large cock was giving me.\n\nAmanda began to pound me harder. With her hands gripping my hips she pulled me back with every one of her forward strokes. The sounds of our sex filled my ears as I reached back and gripped Amanda's ass. I helped pull her body towards me as she continued fucking me in the standing position. After a minute or so in that position I wanted to bend over but without something to grab onto it was a little awkward. Looking up I saw a tree on the edge of the clearing.\n\nOn Amanda's next in stroke I held onto her ass so she couldn't pull back out. Turning my head so I could look back at her I nodded towards the tree, \"Do you mind if we go over to that tree? I want to be able to bend over.\"\n\n\"Sure,\" she said with a smile. As I started to walk forward Amanda tightened her grip on my hips so that I was pulled back into her. \"Hold on cutie. We can walk over together.\"\n\nWith her cock buried deep in my ass Amanda and I took a step forward together. I laughed as we moved slowly toward the tree one small step at a time. It reminded me of a three-legged race except instead of having Amanda's leg attached to mine her hard cock was attached to the inside of my ass instead. But just like the race our movements required cooperation between us in order to get where we wanted to go.\n\nWhen we got to the tree I reached out and grabbed onto a sturdy branch. Bending over at the waist I looked back and gave Amanda a smile as she quickly began fucking me again. The tree I was holding onto was closer to the edge of the cliff but not so close that I worried about our safety. I arched my back and began rocking my ass back into Amanda as she thrust forward and we built up a nice rhythm.\n\nWe were both moaning heavily after a few minutes. Taking a glance back over my shoulder I noticed that Amanda was looking out over the valley as she hammered away at my backside.\n\n\"Is it still a good view?\" I asked between breaths.\n\n\"It's way better now!\" Amanda answered with a laugh.\n\nTurning and looking out I realized that she was right, the view was much better now that Amanda's cock was in my ass. It was amazing to feel the warm breeze all around my naked body as Amanda leaned forward over me. Her hard nipples rubbed against my back as I removed one hand from the tree and reached back to stroke my hard cock. As her balls slapped against mine with every forward thrust I moaned.\n\nWe had been fucking in that position for a minute or two more when suddenly a sound echoed from the valley below. We stopped in mid-thrust as we heard it again.\n\n\"WOOOOOOHOOOOOO!\"\n\n\"That's not for us right?\" I asked Amanda worriedly over my shoulder.",
        "\"I think it is,\" Amanda said with a smile.\n\nI was going to suggest we stop if someone was watching us but before I could say anything Amanda started fucking me again. Shifting her body she put one hand on my back and began to wave the other around like she was swinging an invisible lasso. With exaggerated movements she acted like she was a cowboy riding my ass. I was a little embarrassed but I couldn't help but laugh out loud at Amanda's shenanigans.\n\nSeconds later another call came from the same male voice in the trees below.\n\n\"OOOOOOOHHH YEAAAAAHHHH!\"\n\nOk, now I was embarrassed. I didn't know who was down there or how well he could see us. I didn't know if he could tell that it was the guy bent over getting fucked and I didn't want to take the chance that some homophobic guy might try to come find us. With that in mind I stepped forward so that Amanda's cock slipped from my ass.\n\nTurning around I said, \"I'm sorry to ruin all your fun but is it ok if we lay down on the blanket now?\"\n\nAmanda smiled. \"Of course it is baby.\"\n\nI gave her a quick kiss and then walked past her towards the spread out blanket. Without really thinking about what I was doing I immediately laid down on my back with my feet pointed towards Amanda. Bending my legs I brought my knees up to my chest and then spread them. I didn't realize the position I was in until I glanced up and saw the look on Amanda's face as she walked towards me.\n\n\"Now that's heaven!\" She said with a giddy laugh as she looked down at my exposed hole.\n\nI started to let go of my legs but at a pleading look from Amanda I pulled them back up. She went to her knees on the blanket and scooted towards me. Lining her cock up with my hole she slid back into me in one smooth push. I moaned with pleasure as Amanda once again filled me completely. My legs instinctively wrapped around her lower back as I pulled her further into me.\n\nAmanda brought her mouth down on mine as she once again began fucking me. I swirled my tongue with hers and pulled her down on top of me so that I could feel her breasts against my chest. Instead of penetrating me with long strokes that left space between us Amanda began to grind her cock into me with force. She rocked back and forth on top of me, forcing her cock as deep as it would go.\n\nThe way Amanda was fucking me was a huge turn on. My hard cock was pressed between our sweaty bodies and was being stimulated with every movement. I hadn't touched my cock since we lay down but with the position we were in I felt like I could cum any second. Amanda's breathing told me she was getting close too so I hugged her tighter to me with both my arms and legs and squeezed my ass as tight as I could.\n\nI felt myself pass the point of no return seconds before Amanda moaned that she was cumming. As I felt Amanda's cock spasm deep in my ass I also came. I groaned as cum poured out of my cock between us, covering both of our stomachs. Meanwhile I savored the feeling of Amanda filling my ass with her cum. For every drop of cum I spilled between us it seemed like Amanda was doing her best to replace it with her own seed deep inside me.\n\nAmanda collapsed on top of me. I kept hugging her to me as I felt her spent cock begin to slowly soften inside me. As I looked up at the sky I thought about happy Amanda made me. I loved how sexually aggressive she was without disrespecting me. She never made me feel like I was less of a man just because she was the one fucking me. I wasn't her \"bitch,\" I was her equal partner in sex.\n\nAfter laying there together for a minute or two we finally got up. After putting our clothes back on we packed up the backpack and headed back towards the main trail. We had been walking for a few minutes when I felt a tickle in my ass. It was only when I felt a wet trail begin to form down the inside of my leg that I realized that Amanda's cum was leaking out of me. I smiled as I kept walking.\n\nBack at the main trail we turned and headed down the mountain. We had only been walking for a minute or two when we saw a man and a woman coming up the path toward us. Amanda and I both said hello as they passed and although we kept walking I could hear them talking to each other in low voices even after we got a little ways away. Then the guy spoke up behind us.\n\n\"Hey, so was that you guys that we saw putting on a show earlier?\"\n\nAmanda and I both stopped and turned around. They were about twenty feet away from us and I didn't know whether to admit it was us or not.\n\n\"Yep, that was us,\" Amanda said.\n\nThe couple smiled at each other and then turned back to us. The guy said, \"That was really hot!\"\n\nAmanda smiled at them. \"Thank you. I'm glad you enjoyed it.\"\n\nThe guy hesitated for a second and then said, \"We were curious about something. Is it ok if I ask you a question?\" At a nod from Amanda he asked, \"Were you using a strap-on?\"\n\nI looked over at Amanda to see how much she wanted to tell them about herself. She took about ten seconds to look them up and down before answering lightly, \"Nope, not a strap-on.\" After a small dramatic pause she continued, \"It's real.\"\n\nThe girl answered this time. \"That's even hotter! I wish I had a cock so I could fuck him sometimes,\" She said with a nod towards the guy. Looking around she added, \"We have been hiking up here a few times but we have never found that place you guys were doing it. How do you get there?\"\n\n\"Oh you just have to know where to look,\" Amanda replied. She pointed up the trail and said, \"About a hundred yards up you will see a number of large rocks on the left hand side. Behind them is a trail of small rocks that lead through the brush. Just follow that small trail and you'll find it.\"\n\n\"Great, thanks!\" They both replied as they turned and started heading up the trail. The guy called back over his shoulder, \"Look up when you get to the creek and maybe you can watch us put on a show.\" The girl laughed and playfully hit him on the arm as they kept walking.\n\nAmanda and I turned and headed down the mountain. About twenty minutes later we came to small, winding creek that was easy to step over. Amanda and I stopped and looked up to clearly see the couple having sex in the same spot where we had been. They were a good distance away but close enough so that I could see the woman's large breasts. She was bent over just as I had been while her guy fucked her from behind. We watched for a few seconds before moving on.\n\nWe got back to the trailhead about an hour later. Before walking over to Amanda's car she asked me if I needed to pee before we drove home. I did so I told her I would go do that before the long drive back.\n\nI walked back into the trees for about thirty yards before I stopped and looked around. The coast was clear so I unzipped my shorts and began to relieve myself against the nearest tree. When I was done I turned around to head back only to see Amanda about fifteen yards away squatting next to a bush with her shorts and panties around her ankles. She was also peeing.\n\n\"Umm, mind giving me a minute?\" Amanda asked with a smirk as I stood frozen in my tracks.\n\n\"Uh, yeah, of course,\" I said with embarrassment as I quickly looked away and then headed back towards the car.\n\nA minute later Amanda emerged from the trees and we climbed into her car. As she started driving back towards the highway she asked me, \"So you like watching girls pee huh?\"\n\nI was taken aback. \"No!\" I quickly scrambled for an explanation. \"No, I mean, I just turned around and you were there. I didn't expect you to be there and I didn't know...\" I trailed off as I looked over to see Amanda smiling broadly at me. \"Oh I get it,\" I said. \"Ha ha, very funny.\"\n\nAmanda laughed. \"It's so fun to embarrass you.\"\n\nEven though I knew she was just teasing me I couldn't help but try to explain myself. \"I just didn't expect you to be squatting like that. I mean, I stood up to pee so I thought...\"\n\n\"Nope, I don't pee like that. Once I transitioned it didn't feel natural to stand up anymore. In fact, it never felt natural for me but when I was a kid sometimes it was unavoidable. But now that I live as a woman I don't have to worry about it.\"\n\nI nodded. That made sense. And the more I thought about it the more I realized that I actually knew very little about what it was like to be trans. Amanda and I talked all the time about our likes and dislikes and hobbies but rarely had we discussed the specifics of her being transsexual. I was clearly mistaken about how she would feel about peeing in the woods and that made me realize that I was probably wrong about a lot of things.\n\n\"So how many other faux pas have I made when it comes to trans issues?\"\n\nAmanda laughed lightly. \"Not that many. You did refer to me as a 'Shemale' the night we met though.\"\n\n\"I did? That's bad right?\"\n\nAmanda gave me a look. \"It's derogatory. But I didn't hold it against you because it was clear that like most straight guys you only knew about transsexuals from porn.\"\n\n\"Well, I'm sorry anyway,\" I said sincerely. \"I should have known better.\"\n\nAmanda waved my concerns away. \"Oh, don't worry about it. You are a kind, sensitive guy and I know that any mistake you make is out of ignorance, not malice.\"\n\nI was glad Amanda understood and wouldn't hold any of my honest mistakes against me. I smiled at her and for the rest of the ride back to her apartment we talked about the politics of being trans. I didn't realize how little I knew about it and I was glad we discussed it before I accidentally disclosed her status to someone she didn't want to know or made another similar misstep. Amanda was very patient with me and was more than happy to answer all my questions.\n\nIt was early evening by the time we got back to Amanda's apartment. When we walked in the door Kim was sitting on the couch watching TV. Turning towards us she asked, \"Hey guys, how was the hike?\"\n\n\"Great!\" Amanda answered. \"And we were able to find a secret trail that led to a clearing with an amazing view.\"\n\nKim smiled. \"Nice!\"\n\n\"Yeah, the view over his back was fantastic!\" Amanda said with a smile as she mimed fucking me from behind.\n\nKim cracked up and then Amanda did too. I couldn't help but laugh as they high-fived sarcastically.\n\n\"Can I take a shower?\" I asked with an eye roll.\n\n\"Sure, let me get you a towel,\" Amanda answered as she walked towards the cupboard. Grabbing a pair of towels she followed me into the bathroom and set them down on the counter. As I began to take my shirt off Amanda said, \"Oh, and if you need to clean anything else out there is an enema kit under the sink.\" With a wink she walked out and closed the door behind her.\n\nI looked under the sink and sure enough there was an enema kit very similar to the one I had at home. Taking off my shorts and underwear I filled it up with water and proceeded to clean myself out. Once I was done with that I hopped in the shower and let the clean, warm water wash away all the dirt, sweat and cum caked on me from the hike.\n\nAfter showering I dressed and then entered the living room where Amanda and Kim were talking. They were discussing what we should eat for dinner and they seemed to have narrowed it down to two different takeout places nearby. Since I was the tie breaking vote they each pitched their preferred option to me and let me decide. Although Amanda's choice sounded good, Kim's choice of Chinese food sounded better.\n\nKim called in our order and when she hung up I offered to walk the three blocks to pick it up. I said I could do it while Amanda took a shower.\n\n\"But you don't know where the restaurant is,\" Amanda protested.\n\n\"I think I know how to use Google maps,\" I said sarcastically.\n\n\"It's just that the restaurant is hard to find even if you have the address, smartass,\" Amanda said with a smile.\n\n\"I'll go with him,\" Kim suggested, \"That way you can jump in the shower now and the food will be here when you get done.\"\n\nAmanda smiled. \"Sounds good,\" she said as she walked into the bathroom and shut the door behind her.\n\nKim grabbed her keys and the two of us headed out the door. Since Kim was with me I didn't need directions and I let her lead as we began walking. We hadn't been walking very far when Kim turned to me and said, \"So I talked to Amanda about it this morning but I was just curious...\" A small smile played across her lips. \"Did you have fun last night?\"\n\nI laughed. \"Of course! Last night was amazing! What about you?\"\n\nShe smiled at my enthusiasm. \"It was just what I needed actually,\" she said as we crossed the street. \"I had been so frustrated lately but last night really released the sexual pressure. Do you know what I mean?\"\n\n\"I do.\"\n\nShe smiled at me. \"So thanks for letting me fuck you last night.\" Slipping her arm under mine she added, \"And don't worry, I'm not looking to move in on Amanda's territory or anything. You guys are perfect for each other.\"\n\nI smiled and thought about her last comment as we walked the remaining blocks to the Chinese restaurant. It felt good to hear someone else say it because it certainly felt like Amanda and I were perfect for each other. We were so alike in a lot of ways but even our differences felt like a good fit. She was so outgoing and adventurous and that brought me out of my shell and opened my eyes to a whole new world of sexual possibilities.\n\nKim slowed down as we neared an abandoned storefront and then turned down a small alley. Following behind her I quickly realized that Amanda was right about how hard the restaurant was to find. I probably would have walked by the alley ten times had Kim not been with me. After passing a few dark storefronts Kim came upon an unmarked door with light shining through. Opening the door we walked in.\n\nThe line at the counter was about eight people deep. How was it possible that so many people knew about this place when it was so hard to find? Standing in line next to Kim we talked about what her favorite dishes were while the line steadily moved forward. As the guy a few customers in front of us received his food and turned around I instantly recognized him. In fact, I had just seen him a few days before.\n\n\"Chris?\"\n\nHe looked up at me in surprise. \"Oh hey man, how's it going? I didn't know you knew about this place.\"\n\n\"I didn't until today. We just came to pick up some takeout,\" I said as I motioned towards Kim.\n\nChris looked over at Kim and smiled. \"When you said that the girl you were dating was gorgeous I was a little skeptical but clearly I was wrong to be.\" Chris gave me a poke in the ribs and then said to Kim. \"Hi, I'm Chris. I've heard so much about you.\"\n\nOh no, he thought Kim was Amanda. I was about to correct him when Kim extended her hand. \"It's nice to meet you too, I'm Kim. Unfortunately the one you heard all about is my roommate Amanda.\"\n\nI made an apologetic face as Chris glanced over at me. He turned back to Kim. \"I'm so sorry. I had just assumed-\"\n\n\"Don't be sorry,\" Kim said with a smile. \"It's always nice to get a compliment.\"\n\nChris seemed momentarily flustered but recovered to ask me if I knew how my fantasy football team was doing that day.\n\n\"Not really. Amanda and I went hiking all day and we just got back. I'll have to check when I get home.\"\n\n\"Last I checked it was not looking good for you,\" Chris said with a smile. \"You got killed in the early games.\"\n\nI didn't really care that much but since Chris took it seriously I feigned interest. \"I guess I'll have to look at the waiver wire this week and see what I can do.\"\n\n\"I guess so. Hey, are you around for lunch tomorrow? We should catch up.\"\n\n\"Yeah, that would be fun. Just text me in the morning and we can set it up.\"\n\n\"Sounds good,\" Chris replied. \"Alright, well I'm going to take off but it was good seeing you,\" he said to me before turning to Kim. \"And it was nice to meet you.\"\n\n\"Likewise,\" Kim said as she waved goodbye.\n\n\"Can I help you?\" Asked the lady behind the counter in a heavy Chinese accent.\n\nTurning back around Kim told her the name of our order and checked the contents of the bag she received while I handed over my credit card. Even though Kim tried to protest my paying for the entire meal I quickly completed my transaction and we headed back towards her apartment.\n\nWe had only gone a block or so before Kim spoke up. \"So is your friend Chris single?\"\n\nI laughed. I had a feeling she might be thinking that way after I saw the way she smiled at him. \"Yep.\"\n\n\"Ok, so be honest. Is he a good guy?\"\n\n\"Yes he is,\" I said as we crossed the street. \"He is definitely a good guy.\"\n\n\"Do you think he would be interested in a girl like me?\"\n\n\"Umm, I don't know. But like I said he is a good guy so I would trust him to be honest and courteous about things if he wasn't.\" I smiled at her. \"Want to find out?\"\n\nKim smiled back.\n\nAmanda was sitting on the couch with a towel wrapped around her wet hair when we entered the apartment. \"About time,\" she said with mock exaggeration. \"I'm starving.\"\n\nKim set the food down on the table while Amanda grabbed some plates. When Kim opened the bag it took only seconds before the three of us dug in. They were right about the food too, it was excellent. I didn't eat Chinese takeout that often but it really hit the spot after hiking all day. When we were done Amanda did a quick cleanup and then we all retired to the couch.\n\nWith Kim in control of the remote Amanda lay back against me as we all watched TV together. We mostly ended up watching trashy reality shows and making fun of the people on them. After an hour or so I started to feel really tired. I guess my usual lack of physical exercise was catching up with me after being active for a day. In no time I felt myself nodding off.\n\nWhen I woke up the TV was off and Kim was gone. Amanda was still lying against me and like me she had fallen asleep. I glanced over at the clock and then slowly began to sit up. Waking Amanda up I suggested we head to her room and she agreed. We were both exhausted as we each used the bathroom and got ready for bed.\n\nAmanda was still in the bathroom when I stripped down and climbed into her bed. It had become second nature to sleep naked next to Amanda so I hadn't even realized I did it until I was under the covers. Seconds later Amanda came in and shut the door behind her. Turning off the lights I heard her strip down and climb into bed next to me. Sliding over she pressed her naked body against mine and kissed me on the cheek.\n\n\"I had a great day with you today,\" she whispered to me in the dark.\n\n\"Aww, so did I,\" I replied tiredly. \"You planned such a great hike for us.\"\n\n\"I'm glad you had fun,\" she said as she nuzzled closer to me.\n\nLifting up on my shoulder she rolled me over on my side and spooned me from behind. Reaching up and holding her arms around me I was drifting off to sleep when I heard her sniffing my neck.\n\n\"Do I smell bad?\" I asked with sleep thick in my voice.\n\n\"You smell great,\" she whispered in my ear. \"You have a unique smell that drives me crazy.\"\n\nAs Amanda put her nose to my neck and inhaled my scent I started to feel movement against my butt.\n\n\"I guess not every part of you is tired,\" I said with a sleepy laugh as I wiggled my butt against her cock.\n\n\"I'm sorry baby. I just can't help it when I'm this close to you!\"\n\nI was flattered that she wanted me so bad. Smiling to myself I reached back and gently stroked her cock. Her soft breathing against my skin increased which began to turn me on too. I was still really tired but suddenly I wanted to feel her inside me. I wasn't sure I had enough energy for sex but I managed to stay in the same position and reach the bedside table. I squirted a little bit of lotion into my hand.\n\nWithout either of us moving I reached back and started playing with Amanda's cock again. It quickly became fully hard in my hand as I coated it with lotion. Bending my legs so that my ass was sticking out more I lined her cock up with my hole and pushed back against it. Amanda kept her arms wrapped around me as her cock slowly slid into me one inch at a time.",
        "Amanda made love to me. It was an unhurried, sleepy kind of sex as she held me tight and slowly slid her cock in and out of me. The only sound was our steady breathing as she lazily fucked me. With my eyes closed and my body relaxed I let the feeling of her body against me and her cock inside me sweep me away. I floated between sleep and awake as feelings of contentment and pleasure washed over me.\n\nI don't know how long it lasted. It could have been an hour but it was probably closer to a few minutes. My loose state of consciousness gradually became aware of Amanda's increased breathing. Her arms tightened around me as she ever so slowly increased the pace of her penetration. With her mouth on my neck I felt every twitch of her face as she neared orgasm.\n\nSeconds later Amanda pushed her cock into me as deep as it would go and then stopped moving. She let out a low, quiet moan as I felt her cock convulse inside me. Her cum flooded into me giving me a warmth that I felt through my entire body. With her warm body against me and her warm seed inside of me I felt myself slipping towards dreamland. I had happiness in my heart and her cock still inside me when I fell asleep.\n\nI wasn't even awake to feel Amanda kiss my neck or hear her sweetly whisper \"Goodnight baby\" in my ear."
    ],
    "authorname": "Tallnhard1",
    "tags": [
        "transsexual",
        "blow job",
        "anal",
        "roommate",
        "hiking",
        "chinese takeout",
        "creampie"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/amanda-and-me-ch-07"
}