{
    "title": "Rose Ch. 68-74",
    "pages": [
        "Rose's POV\n\nThings had slowed down quite a bit since the assassination attempt on the President. We did what the other Packs did; laid low and made sure we stayed safe. Most of us had spent time in the basement, watching the news coverage and wondering if we would be found out. Starting a war between the major Mexican drug cartels by hacking and attacking so the others would be blamed? No one would ever say we didn't have balls.\n\nI was up before Gunny, worming my way out of his strong arms as I moved slowly to the shower. Last night had been another night of Gunny Loving, and my body was feeling the effects. My lady parts were tender as I walked, and my legs felt like I had done a hard workout earlier.\n\nWell, it worked out, and he was hard. My GOD, that man could love me.\n\nI ran the hot water into the large jacuzzi tub, needing to get myself clean and ease my sore muscles before going down to see everyone. I did my business and brushed my teeth before it was full; I lowered myself into the warm water, then turned on the jets. I heard the door open, and Gunny was there smiling at me.\n\nHe grabbed a washcloth and my body wash. \"Can I help you out? You're not supposed to be in there for more than ten minutes, or I'd join you.\"\n\nI smiled at him as I grabbed a towel and placed it behind my head. \"Go ahead, you need to pamper me a little after last night.\"\n\nHe smirked as he took my arm and started to scrub it. \"You weren't complaining...\"\n\n\"I could barely string thoughts together!\" He put that down and took the other arm as I closed my eyes.\n\n\"You've been off lately, I can tell something is bothering you.\" My arms went back into the water and he picked up the far leg. \"Are you planning to tell me?\"\n\n\"I don't have to tell you everything, Gunny.\"\n\nHe stopped the cloth for a moment. \"If it is bothering you, I want to know. Stress isn't good for the babies, and I don't want secrets between us.\"\n\nI just laughed. \"Secrets? You've kept secrets from me from the beginning.\" He looked at me funny. \"That night the two businessmen tried to rape me... what did you do with them?\"\n\nHis grip on my calf tightened, his eyes shifted slightly. He hated the idea of someone trying to hurt me. \"I didn't tell you because you were FBI, Rose. I didn't want to put you in position to have knowledge of a crime.\"\n\n\"Well, I'm not FBI anymore. If you want my secrets, tell me yours first.\"\n\nHe finished the leg and picked up the other. \"Both guys were knocked when I left the room, so I carried them down and put them in the back of their rental car. I drove them both to a park that has a reputation for anonymous gay hookups. At gunpoint, I made one of them drink a roofie; the taller guy had more doses in his jacket. The other guy, I made him give his friend a blowjob while he hung from his tie, I had tied the end to a tree branch. He came and he went, if you know what I mean.\" I looked at him in shock. \"Erotic asphyxiation is what his death would be blamed on. The other guy I knocked out, then tossed him off a rock face; he landed headfirst. With the other dude's semen in his mouth and on his clothing, it was written off by the cops as an accidental death and suicide. It was kept low-key by the police and the families, and now it's forgotten.\"\n\nMy jaw took a few seconds to close again. \"Wow.\" I thought back to waking up in that room, handcuffed and helpless. \"They didn't suffer enough, though.\"\n\n\"True, but I had to get back to you. Now, your turn.\"\n\nI laid my head back. \"Kelsey Stillwater came to talk to Ella and I a few days ago, she was coming into her heat.\"\n\n\"And she wanted me to father her child?\" My jaw dropped open again, what the hell? Did they talk? \"No one said anything, I kind of expected it.\" He let my leg down and pulled me forward so he could get my back. \"You haven't spent much time around the born cats, have you.\"\n\n\"No, I've left that to Tom and others,\" I said as he moved to my front.\n\n\"She probably told you why then.\"\n\n\"Yes, she says her cat wants the strongest male as the father.\" I moaned lowly as he cleaned my breasts and moved lower.\n\n\"It's how she is wired. They don't have mates, they have partners; it is normal for them to seek out the strongest male, and for that male to mate with multiple females.\"\n\nMy eyes flashed, and my hand grabbed his balls. \"Not THIS male, or we'll be doing a gender reassignment with my claws,\" I said with a growl.\n\n\"Of course not,\" he said as he carefully moved my hand away. \"But you've probably noticed, we aren't normal cats.\" He finished with my front and back as I lifted my butt off the bottom, then he pulled the plug and turned the jets off. \"Ten minutes, you know.\"\n\n\"What do you mean, not normal?\"\n\n\"We act more like wolves in the matter of mates, not panthers. I don't know why, I suspect it is something Ker had that she passed to us. All of the panthers in our Pack trace back to hers, either directly or through Ella and Al.\" He helped me up. \"You told her no.\"\n\nI nodded. \"I couldn't stand the thought of you having children with anyone but me.\"\n\n\"I wouldn't even consider it unless you asked me, and then only for a relative who couldn't conceive otherwise. It would be too weird with Kelsey being around this Pack. That's why you asked Joe?\"\n\n\"Yes, he agreed, but it hasn't taken so far. Joe has a day or so more of whacking off every four hours, or as you probably call it, a bachelor weekend.\"\n\nHe wasn't surprised. \"It's tough for them, there is so much inbreeding in some of the cat populations that fertility is a real struggle for them. Luna wouldn't give them a mate that wasn't a good match genetically. I'm hoping that born cats have mates, they may not recognize them as easily, or their lifestyle means they rarely find them.\" My stomach rumbled, he laughed and kissed it, rubbing his hands over the slight bump. \"Come on, let's feed those babies.\"\n\nI finished drying off as he went into the shower, my thoughts going a mile a minute. I dressed quickly and went downstairs.\n\nMabel and Patricia had prepared the breakfast this morning, it was sausage or ham omelets and pancakes. I prepared a plate, again thankful to be past the morning sickness phase, and joined a dozen others at the table. I smiled as Charlotte came into the room, her hair up in a ponytail. \"Morning baby, how are you?\"\n\n\"Bored,\" she said. \"Josh went to bed at seven last night and still hasn't texted me to say he's awake, we're in lockdown AGAIN, and I haven't been to school in weeks. I never thought I'd miss school, but I miss the friends I made there.\"\n\n\"I know, honey. Things will calm down.\" I looked over at Jane Spencer, who had the same expression on her face. \"Carl is still sleeping?\"\n\n\"No, he's down in the room now, he volunteered to stay on nights for now. He said they need someone monitoring things around the clock, and with Enrique gone, he and Josh need to alternate. They are going to trade off at nine, and then he'll go right to bed and sleep for eleven hours.\" Charlotte sat down beside her, she took a piece of bacon off her plate and offered up a toast. \"To the computer widows!\" They tapped bacon then ate it.\n\n\"I want to hit the stores today,\" Charlotte told me. \"We've already done this week's homework, and we need to find paint and shelving for our new rooms.\" The Guns and Roses Pack members had met earlier to figure out who would be staying where after the Belden Pack left for Panama. The converted stables that were now bunkhouses for the youth would go, instead there were a dozen bedrooms in the basement for the children. The adults would take bedrooms upstairs; the post-bombing remodel and addition left room for two offices and ten bedrooms there. The Alpha and Beta rooms and offices were in the new addition, while the remainder were in the original home.\n\n\"You're not the only one needing stuff,\" Gunny said as he loaded his plate with food. \"We need to talk about what we are going to do with all the cat shifters that are gathering by our territory, plus we still have the people we rescued and the family members that were being blackmailed into doing the Cartel's bidding. They have nothing, and since we don't know how long they will be here, they need clothes and supplies. I've got a list, and some of the stray cats want to go.\"\n\n\"You should make two trips,\" Craig said as he entered the room. \"More people will want to go to the Mall than Lowe's, and you'll need more drivers and security people for that.\"\n\n\"I need to go too,\" I said. \"With the quadruplets I will be showing a lot faster than normal, I need to buy some maternity clothes. I mean, I'd borrow some from Ella, but she's ALWAYS USING THEM.\"\n\nEveryone laughed as Ella took a bow. \"Not ALL the time, Rose, sometimes I wear my normal jeans for a month before I start to show again!\"\n\nIt took two more hours to get everything arranged, and by the time we left, it looked like a Presidential motorcade. Gunny and I were in the lead vehicle with Charlotte, Jane, and two cats who were considering joining the Pack. They were staying with other newly-arrived cat shifters at a house we had just purchased a few miles away. Keisha Jackson was a tall, slender black woman from Alabama who had a runner's build. She was friendly and was wearing a colorful African-styled dress. Minka Petersen was from northern Minnesota, she was a tiny girl, not even five feet tall, and weighed maybe ninety pounds; she looked like a gymnast, all tight muscles. \"So, what kind of cats are you,\" I asked, my nose not experienced enough to know.\n\n\"I'm a Canadian Lynx,\" Minka said. \"I need some light clothes, this heat is not what I am used to.\"\n\n\"And I'm a cheetah,\" Keisha said.\n\n\"What brings you to our Pack?\"\n\n\"Safety,\" Keisha said, and then Minka quickly added, \"Finding other cats.\"\n\n\"That's a problem?\"\n\n\"Yes,\" Keisha said, \"There aren't many of my kind left, wild or were type. I've given up on finding a sperm donor of my kind, I'm hoping to find a related species- mountain lion or panther- who can donate.\"\n\nOh shit, here we go again. \"Are you looking for a heat partner or...\"\n\n\"I'm gay,\" she said. \"Although, I'd love to find a mate. The Goddess knows it's tough having a heat every two weeks or so. Cheetahs ovulate year-round, it only stops while pregnant or breast feeding. A mate would at least take the edge off.\"\n\nOh my LORD, I would DIE if that was our way. A couple times a year is quite enough bleeding, I figure. \"I'll introduce you to Kelsey when we get back, she's a mountain lion, and she's gay as well. I can't imagine what it must feel like for you, so few others to start with; your mate must be one of a kind.\" She smiled and looked out the window, we were a few miles away from the mall.\n\n\"I'm hoping to find a Lynx male farther away than a cousin,\" Minka said. \"I couldn't imagine mating one of your kind, I'm like a third of your size. The baby would probably kill me,\" she said. \"It's going to be interesting.\"\n\n\"Life is always interesting in this Pack,\" I said, \"and don't blame me, I just got here a while ago.\"\n\nWe spent about three hours at the mall, and another hour in the food court. I was craving Butter Brickle ice cream with caramel and whipped cream, so Gunny, Keisha, Minka and I were relaxing in the food court. Gunny's arm strength was being tested today by the bags of clothes and accessories we kept piling onto him; he refused to leave us to take things to the car, so it just kept building. Of course, his poor pregnant-with-four-babies mate was too tired for carrying all that stuff!\n\nOh, you better believe I was milking this for everything it was worth, because in a few months I'd look like a beached whale, then I'd have a year as a milking machine.\n\nI looked over at Keisha, she was starting to sweat. \"What's going on?\"\n\n\"Dammit,\" she said, \"This wasn't supposed to start until tomorrow.\"\n\n\"What?\"\n\n\"My heat.\" Fuck. We didn't have much time to get her isolated before she started attracting every feline in the area. \"I have to leave, find something remote.\"\n\n\"Come on,\" I told everyone. I linked the rest of our Pack members. \"Gunny and I are taking Keisha and Minka home, anyone else who is ready can come along.\"\n\nThe rest of the groups checked in, they were all still shopping so we decided to just leave. Charlotte and Jane had already found another ride home. \"Let's get her out to the car, at least then we can limit the spread of her scent.\" We walked out of the mall, loading everything up and getting in. Gunny turned up the air conditioning as Keisha continued to sweat and we pulled onto the highway.\n\nHer scent was getting stronger, and it was starting to affect Gunny as we got closer to home. As we entered the winding canyon road, we had to open the windows. As soon as we did, I saw Keisha's eyes turn black. Gunny was at a stop sign, he turned around when he heard the door opening. In a flash, Keisha was out the door and had shifted into her cheetah form.\n\n\"Holy shit, she's fast,\" I said. Panthers were quick, not fast; we didn't chase our prey, we were ambush predators. Our bodies were too big and muscled for that. Keisha was long, lean and insanely quick. Gunny accelerated after her, but even the big V-8 engine couldn't catch her. \"Guys, Keisha is coming in fast, she's friendly... and I think she scented her mate,\" I sent to the guards. The gates barely started to open before she was through them, her claws digging for purchase on the driveway.\n\nBy the time we pulled into the garage, it was all over. Keisha had shifted on the way through the door and followed the scent downstairs. She pounded on the door, to no avail; it was heavily reinforced and had an electronic lock. Gunny ran down and opened the door for her, and she ran to the cell containing Kelsey. \"MINE,\" she said as she gazed at her mate, who was in the tail end of her heat.\n\n\"MINE,\" Kelsey said, rushing to the door. Gunny opened it and they rushed together, biting each other at nearly the same time. The contrast between the two women was striking; one blond and heavily muscled, the other black and lean, but both were strong cats.\n\nI arrived just as they were moving the action to the bed. \"Come on, stud,\" I told Gunny as I pulled him away. \"Let's get our stuff put away.\" We moved back to the door, just as Joe came down the stairs holding a cup.\n\n\"What's going on, there's another cat in there,\" he said as he took a whiff.\n\n\"Yeah, you might not want to go in there just yet, they just marked each other.\" I wasn't sure if he would be safe, new mates could be volatile.\n\nI shouldn't have worried. \"JOE, DAMMIT, GET THAT BABY FORMULA IN HERE AND GRAB THE TURKEY BASTER,\" Kelsey yelled. \"Her heat is just starting, you've got three more days of this now.\"\n\nCh. 69\n\nCamp David\n\nPresident Hank Kemper's POV\n\nThe one thing Tammy and I agreed on after all this, was that I was done.\n\nWe were not over the assassination attempt yet. Physically, the cut had healed, leaving a bright new scar on my forehead. Mentally was a different thing, and that was why I hadn't returned to the White House yet. Officially, we were still evaluating and updating security to deal with the new threats.\n\nUnofficially, we didn't feel safe there. The reports from the FBI and BATFE on the drones scared the hell out of me. These things were the perfect smart weapon; able to be released a distance away, fly autonomously, then hover until facial recognition identified the target. The manufacturer of the drones had come forward, cooperating completely with the investigation. His briefing of their capabilities was truly frightening. They could be released in swarms, working together against dozens, even hundreds at a time. They could be programmed to recognize uniforms, weapons and vehicles to take out military or law enforcement guards. Finally, they could be programmed to \"clear the way,\" with some exploding to break through windows or barricades.\n\nIt all depended on how they were programmed.\n\nThe FBI investigators had traced the purchases and the money used for them, and we had identified and tracked the people who had ordered and picked it up. The trails led back to the Zetas, the ones in custody linked by banking records and phone calls to other Cartel agents. So far, none had given up who they worked for. The Zetas ran a tight ship; it was well known that they could reach anywhere and extract a horrible revenge on those who crossed them.\n\nEven the Camp David area was changing. Camouflage netting and specially-made mesh, with thin wires reinforcing the grid, were now hung above and around the cabins and the offices. It was low tech, but it would hamper the facial recognition and hopefully foul propellers of drones as they went through.\n\nMy Secretary of State was having trouble with Mexico as the Cartel war spilled over into the streets there. Public opinion had turned against us. The people hurt by the war were still furious at our military strike, and a wave of nationalism rose up against further cooperation. The Mexican President was forced to step down to quell the rising anger. The American flag, and my effigy, were being burned in huge protests.\n\nThey blamed American drug use for the deaths, and they were right.\n\nThe scandal surrounding this was unprecedented; my Administration had been deeply compromised by the Cartels, along with so many in law enforcement. Congress was investigating, the Press was breathlessly covering each new breaking story, and no one knew who to trust.\n\nI didn't do it, I didn't know about it, but I sure as hell was responsible for my Administration.\n\nI was already working on my letter of resignation.\n\nI had to head back this morning, I needed to inform a few people and prepare to address the nation. I shook the hands of those who had supported me over this difficult time, then loaded into the armored SUV for the short drive to Thurmont. We arrived at the elementary school field that we used for visits, where Marine One was waiting. I held Tammy's hand as we turned and waved goodbye to the assembled staff, and I saluted the Marine by the stairs as we climbed the stairs into the helicopter.\n\nI settled in to the chair, my wife next to me, and the usual people along. My Secret Service agent today was Daniel Kaffee, and Colonel Nathaniel Jessup had the nuclear 'football' codes. The pilots and crew rounded out the group, the rest of my team would ride back in vehicles.\n\nThe crew chief handed out the headsets, they used active noise cancelling to reduce the noise of the helicopter and had a microphone, so we could talk to each other. I liked to listen to the pilots, so I turned mine to the cockpit channel. I held Tammy's hand as we took off, and I looked out the small window as we left the woods and mountains behind. I saw the Cobra attack helicopters form up on each side as we climbed towards cruising altitude, following the mountains south, and then all hell broke loose.\n\n\"BREAK RIGHT BREAK RIGHT\" I heard over the headset, just before the helicopter banked hard. The engines were screaming, and I could hear the pings of bullets hitting us. The engines were straining, then one of the Cobras was firing back. The Gatling gun sounded like an angry bee as it tore into the target below.\n\n\"MISSILE MISSILE BREAK RIGHT\" came just before the next hard turn, but we were too slow. The explosion ripped into us, tearing a huge hole in the left side. We started to spin counterclockwise, forcing me against the undamaged side. \"MAYDAY MAYDAY MARINE ONE GOING DOWN,\" I heard as we descended rapidly. As the helicopter spun, I could see the trees and the mountain getting closer, and one thing went through my mind.\n\nThis was going to hurt.\n\nThurmont Pack Grounds\n\nMaryland\n\nLisa (Giovanni) Nichols POV\n\nI was pushing my wolf forward, letting her have her fun as I led a half-dozen women of my new Pack on a run. I was still learning the territory, but things were getting better each day; the Pack had accepted me quickly. I was still learning all the duties of my new position, but with Ross's help, and multiple calls each day to Patricia, I was figuring it out. I was glad she was so organized, since she was performing the duties of the Alpha female while her brother was mateless.",
        "We were working our way along the trail on the eastern side of the Pack grounds, well inside the boundary fencing that kept the area clear of humans. We were moving uphill along a small creek, single file, when I heard the two helicopters approaching us. I stopped and looked up, and recognizing the Cobra attack helicopters heading towards Camp David. \"The President must be leaving,\" I sent.\n\n\"Yeah, it happens every time,\" Laurie sent back. \"I'm glad we don't have to hide anymore, it's so nice now that things are out in the open. Did you ever ride in Air Force One?\"\n\n\"A few times, you can't fly commercial after that, though. It ruins you. I've never been on Marine One, I wasn't important enough.\" We continued our run towards the north, when we heard three helicopters coming our way. \"Come on, let's get to the ledge, we should get a good view of my old boss,\" I said.\n\n\"No shifting though, right?\" Melanie teased. I could just imagine the reaction if the pilots were flashed by a half-dozen naked and totally hot women. They were Marines, after all.\n\n\"No shifting.\" We ran to the edge, where the rocks broke through the tree line and gave us a good view. The helicopters were a few hundred feet above our level as they turned towards Washington, DC.\n\nWhen the machine gun opened up, all of us were shocked. I could see the tracers heading up towards the Presidential helicopter, the red trails working their way in. The helicopter turned hard, almost on its side as it turned away from it. One of the Cobras went into a dive, its gun raining hellfire down on the ground. The machine gun stopped firing, just as two missiles streaked into the sky.\n\n\"NO!!!\" I watched helplessly as the rockets sped towards the helicopter. The pilot released flares and turned hard again, but there wasn't enough time. One slammed into the side, the explosion ripping into the body like it was a coke can. The helicopter started to smoke, and the tail began to swing.\n\nMarine One was out of control and was going to crash behind us.\n\nI turned to chase after it as it spun towards the hard ground, the others behind me. \"MARINE ONE IS GOING DOWN, NORTH EAST CORNER OF THE TERRITORY, GET HELP UP HERE!\" I was running hard, the big helicopter crashed heavily into the trees and into the ground. We were at the scene thirty seconds later, and it was already burning.\n\n\"GET THEM OUT NOW,\" I sent as I raced to the fuselage. Shifting, I jumped though the hole in the side. I found the President in the corner, he was covered in blood. I unbuckled his belt, picked him up, and raced back out, ignoring the flames and the pain from the hot and twisted metal I was stepping over. The other girls were picking up and dragging the others out. We moved them away from the burning wreckage, finding a small spot of grass to set them down.\n\nI laid the President down and turned to go inside. \"Don't,\" Melanie said as she ran back. \"They're all dead.\"\n\nMy heart sank, only five people were here with us. \"Tammy? The First Lady?\"\n\n\"She's gone, so are the two pilots.\" I looked down, one of the Marines in full dress uniform was sitting up, his leg broken above the knee. The others were unconscious. We made them comfortable, raising their legs to stave off shock as we waited for supplies and medical help.\n\n\"Lisa,\" I heard the whisper from below me.\n\n\"Mr. President, don't try to move,\" I said. I ripped part of his shirt free, folding it before using it to press around the wound on his stomach. He was bleeding, I could hear his heartbeat starting to weaken.\n\n\"Lisa... change me. I'm dying.\"\n\n\"Are you sure?\"\n\n\"Do it, please.\"\n\nI had Melanie hold pressure on the wound while I shifted into my wolf. Moving forward, I bit his forearm, making sure to put extra slobber into the bite. Shifting back, I moved by his head. \"You need to relax and stay calm, sir. If you are angry or panic, your wolf will come out fighting.\"\n\nHe closed his eyes, trying to relax despite the pain. I could hear the Cobra circling, and more helicopters were inbound. We covered the wounded with our bodies, shielding them from the rotor wash, as one started to hover. A man was lowered by winch into the clearing, he unhooked and ran over to us as a stretcher was being readied. He ran to us, making a beeline for the President. \"Sir, we've got you,\" he said as he took off his backpack. Opening it up, he reached in and grabbed a battle dressing, placing it over the soaked portion of shirt. He then grabbed a bag of blood, cleaning his hand with alcohol before inserting the needle. \"Hold this, please,\" he said as he handed me the bag.\n\nHe examined the President quickly, as a second paramedic arrived with the rescue stretcher. \"He's got to go now,\" the first man said.\n\n\"Check the others, I'll help him,\" I told the second man. We carefully lifted the President and strapped him in, then I took one end as the first paramedic took the front. We moved quickly to the helicopter, hooking up the stretcher to the winch cable and steadying it with a rope as it was raised up.\n\n\"Thanks for you help,\" he said as it disappeared into the helicopter.\n\n\"I need to go with,\" I told him. \"I'm a werewolf, the Alpha, and I had to bite him to save his life. He's going to change, and I have to be there for it.\"\n\nHe looked at me, his face going from shock to horror to understanding in just a few seconds. \"Come on,\" he said as the cable was lowered down again. He clipped his harness on, then gestured me to him. \"Hang on tight,\" he said. I wrapped my legs around him, my arms around the cable, and we were pulled up.\n\nAs soon as we were being raised, the helicopter started to pull away. The men continued working on the President as I found a seat, one of the crewmen tossed me a spare flight suit that I put on. The flight to the hospital in Frederick took less than ten minutes, and a crowd was waiting as we arrived.\n\nThe President was rushed off into surgery, and I followed with the Paramedics. Secret Service agents and police were everywhere, and I only got through because one of the agents recognized me. \"Bob, I've got to talk to the doctors. This isn't going to be normal for them. I'm a werewolf, and I bit him. He's going to change.\"\n\nHis face turned ashen as he realized what it meant. He called over the radio for the floor to be evacuated except essential personnel; they started moving everyone out. \"What do I need to know?\"\n\n\"The change will accelerate his healing, and the change could come fast given the amount of adrenaline in his system from the crash,\" I said as we reached the surgical floor. As soon as the elevator doors opened, people started to run for it. I moved into the hall, searching for the commotion, and watched as people bailed out of a room. Secret Service agents were pointing their weapons inside, completely terrified.\n\nA bloodcurdling growl came from the room, right before a big black wolf ran through the door.\n\nCh. 70\n\nMay (Six plus months after last chapter, and after events of My Mystery Mate)\n\nRose's POV\n\n\"Oh God! Harder! Harder! Ooooooh... GOD I'M ALMOST THERE! Harder! PLEASE! Oh GOD!!\"\n\n\"SAY IT!\"\n\n\"NOOOOO OH GOD!!\"\n\n\"You're not coming until I hear it from you.\"\n\n\"NO PLEASE DON'T STOP!!! NO!!!!!'\n\n\"Say it then.\"\n\n\"I CAN'T BABY I CAN'T!\"\n\nI knocked loudly on Charlotte's door. \"Just TELL HIM your ass belongs to him now so the rest of us can get some sleep!\"\n\n\"MOM!!! Oh GAWD!\"\n\nI laughed, the rooms were supposed to be soundproofed, but new mates were loud. I should know, it was only last year that Gunny and I were keeping HER up all night. I hung a gift bag on her door, in it was a ball gag and some anal lube. I chuckled to myself as I walked down the stairs to the kitchen, imagining her reaction when she saw it. I was sleep deprived, and I needed water and a snack.\n\nI ate an apple, then poured myself a tall glass and drank it down before going back upstairs to the nursery. Set next to our room, the four babies were sleeping side by side. The identical triplets, Angela, April and Allison, were still asleep, while brother Bruce was awake. He was watching the mobile spin above him, little rabbits and mice spinning around as he reached for them. They were all dressed in onesies, and my life since their birth four weeks ago had been hectic.\n\n\"Hi baby, come to Momma.\" He giggled as I picked him up, bringing him with me over to the changing table for a diaper change. I was an expert by now, I could literally do it in my sleep, then I took him to my padded rocking chair. One of my favorite presents from my baby shower, the gliding motion and wide, pillowed arms helped me feed two at a time. My breasts were sore and full, and as I unbuttoned my top, I pulled him close. He immediately latched on and started to pull hard.\n\nI relaxed as he fed, pausing after a few minutes to burp him. He was a strong boy, regaining his birth weight after a few days and already a half pound above his four-pound, one-ounce birth weight. He was almost done when the girls woke, crying, and in moments the whole room was full of noise from them.\n\n\"Here, I'll take him,\" Gunny said. He put Bruce back in the crib for now, as I took Allison and he took April for their changes. Once they were clean, I sat down, and he placed them where they could both feed while he changed Angela. He sat on the papasan chair next to me with the two while I took care of the girls I had.\n\n\"I'm kind of jealous of them,\" he said as I burped Allison. \"You have the epic huge mounds, and you won't let me touch them because they get all the nipple time.\"\n\n\"You're such a guy,\" I said as I winced, Allison latching on again. \"They are always sore, and I feel like a milking cow. It's hard to feel beautiful with these basketballs up top.\"\n\n\"You're amazing,\" he said. \"I never dreamed life could be like this.\" He had Bruce dropping off to sleep now, his little hands gripping his shirt. Bruce was named after one of his previous sniper team partners, who had been killed by a mortar attack in his Iraq mess hall. He was stroking Angela's back to calm her down while she waited her turn at the breakfast bar.\n\n\"I think I scared the hell out of Charlotte, she's not planning to get pregnant right away now.\"\n\n\"Not for lack of opportunity,\" Gunny snorted. \"Those two are as bad as we were.\"\n\nI laughed. \"Not as kinky yet, but they are still young. Just wait until they can mate in animal form.\" I leaned back, thinking of how much our lives had changed since Gunny pushed his way into my heart. \"Only two days until she can change.\" She had just turned eighteen, meaning she could be claimed by Josh and they could start a sexual relationship finally, but she had to wait for her finals to be done at school before being turned. She needed the four-day weekend for her change, and graduation was right before we left for the Gila Pack for their big Memorial Day get-together.\n\n\"Has she decided panther or wolf?\"\n\n\"Not yet, but Ella and I are lobbying hard. I think seeing the difference in childbirth and the cubs faster development is a big selling point, plus we are better looking,\" I said. \"Still, Josh is a wolf and I'm sure he wants to be the one to change her.\"\n\n\"Yeah, if I was Josh I'd feel the same way.\"\n\nI handed him Allison, and he burped her and settled her on his lap before handing me Angela. We'd developed a system, and soon he had fallen asleep with the four tucked in to his side on the big chair. I moved to the bed and fell asleep immediately.\n\nI woke all too soon to the sound of crying babies, but I didn't get up. Taking a sniff, I could tell Larissa was here, and soon she undid my top and tucked the girls in for their morning feed. Gunny was not in bed, so after the first two were done, I sat up to burp them. \"Good morning, Larissa.\" She had been a lifesaver, stepping in as a nanny while we struggled with the demands of the four babies.\n\n\"Good morning, Alpha. How was the night?\"\n\n\"Too short,\" I said. \"Gunny is wishing he was in combat again, he says he got more sleep then.\"\n\nShe laughed. \"Mom says it will get better. Just wait until they sleep through the night in a few months.\" We swapped out the babies as she put the two who were done into the basket. \"I'll take these two down while you finish up.\"\n\nI watched her go, smiling a bit as I heard the girls begging to be able to hold them. I was just burping Bruce when Charlotte knocked and came in. \"How are my little brother and sister,\" she asked, her voice breaking slightly as she tried to talk softly.\n\nI noticed she was walking a little carefully, and her eyes betrayed her fatigue. \"Did you get any sleep last night?\"\n\nHer face turned red. \"You know the answer to that, Mom.\" She got a goofy look on her face. \"We just... finally, we can, and we just can't stop,\" she said.\n\n\"Just wait until your change, when you can fully bond it gets even better,\" I said. I was so happy for my girl, she was happy and had her whole life ahead of her, and Josh was a good man. I handed her the babies, then got up and changed as she left with them.\n\nBy the time I got down to the dining room, all the babies were being entertained by Pack members at the table or in the living room. They were happy babies when clean and full, and there was no shortage of arms in our big family to hold them.\n\nThe house was still big for our small pack, since most people had left for the island late last year. Alpha Ella, Craig, Mitchell and Darryl (7, wolves), daughter Emmanuel (4, wolf), fraternal twins Renee (2, panther) and Gary (wolf), and now triplets Marjorie, Mabel and Melissa (4 months, all panthers) gave her the big family she wanted.\n\nThe woman was crazy, she was looking forward to her next pregnancy already.\n\nAl and Marge, plus Carl and Mabel, stayed with their Alpha pair. I missed their cooking and their helpful presence.\n\nCraig's sister Olivia and her mate Mark built their own island house nearby, with former wolf (now panther) twins Tony and Tina, daughters Elanor and Elizabeth (5) and son Alex (2), all wolves.\n\nJacob and Melanie Weinberg (wolves) and daughter Chance (5) built a home near the docks, where Jacob was in charge of the fishing boats and water transportation.\n\nJerry and Mary Peters, Justin (13) and Lawrence (11) built a house up the hill from the beach next to the Pack school they were building.\n\nElders Mark Miller and Lois Albertson stayed in the main house, where they could help with repairs and child care.\n\nNot everyone they expected left. John and Teri Johnson (23), the only survivors of the Rochester pack, decided to stay because they preferred to stay in the States. The Spencers, John, Angela, Josh and Jane, all stayed because \"the Island has crappy internet,\" as Josh said. Jane and Charlotte were also best friends, and they didn't want to be apart after they both mated.\n\nThe Albertsons didn't want to leave the States with their oldest getting to college age. Grandma Lois, parents Zach and Laurie, and children Lars (22), Logan (20), Larissa (19), Lance (16) and Linda (14) were all living in the neighborhood with us.\n\nSome of the cats who had showed up had become full members as well. Minka Peterson, the lynx from Minnesota, was first to be added. She was soon joined by another dozen cats from all over the country and even the world, including Tatiana Dubronov, a Siberian Tiger whose family escaped Communism during the Russian Revolution. For those who didn't feel comfortable joining, we had an Affiliation status. These cats were allowed to purchase adjoining properties and had permission to run on some of our private lands but could not enter the residential areas without permission. This was becoming a popular option as word got out.\n\nTom Harris (panther) decided to stay with his mate Daniella (cougar), mother to Kelsey Stillwater who also stayed with her mate Keisha (cheetah). Shelley and her mate Lars had taken a house down the street, and Tom and Kelsey moved into the houses on each side of them. They shared a common backyard with a trampoline park, where their triplets Sharon, Sara and Sally (10) were always playing. All three had been changed to mountain lions by Daniella, while Shelly was now a panther like Lars.\n\nJoe had gotten them both pregnant, and we had given them adjoining houses where the mountains met the wide-open desert, so both had room to run. Tom had purchased the ranch, which added dozens of square miles to the Pack land holdings along the edge of Federal lands. We were all curious as to whether the babies would be wolves or cats; so far, all the female offspring had been cats, the males all wolves. Even so, they shared some characteristics of the non-dominant species. Ella didn't know, nor did anyone else, so we would have to wait.\n\nI have to admit, it had been a little interesting when we traveled up to Colorado for Joe and Linda's trial. The babies were only two weeks old, but traveled easily, since they slept all the time. I brought Larissa and Charlotte on the trip to help with them, and by pumping milk at the trial, I was able to watch most of it. I had been nervous the whole time; Linda was Ella's friend, the one who had changed her, and in a way the mother of all Panthers in both Packs.\n\n*Flashback*\n\nThe group of us sat in the back of the room, shocked at the ending of the trial. We were trying to talk to Linda, but she was still in the custody of the Council pending sentencing. When it was pronounced, we all let go a relieved breath, that she would live.\n\nAs things calmed down, Joe and Linda stood with their Pack in the front of the room. People lined up around the room, waiting to congratulate them. When we got to the front, Ella took the lead, introducing her mate Craig, then Gunny and I as Alphas of the new Pack. We chatted briefly about being a Panther and Alpha, then moved on after extending them an invitation to visit when things calmed down.\n\nWe turned to wait for Keisha and Kelsey, knowing the fireworks were about to start. \"Hello, I'm Kelsey Stillwater, of the Guns and Roses pack,\" she said as she shook Linda's hand. \"Hello again Joe,\" she said as her other hand rubbed her swollen belly.\n\n\"You know Joe?\"\n\n\"Of course I know my baby daddy.\" The temperature in the room dropped to freezing as Linda dropped her hand and turned to her mate. I started cracking up, I was expecting her head to do one of those Exorcist turns or something. \"And Keisha got knocked up by him too, first try!\"\n\nJoe immediately dropped to his knees, his eyes pleading. \"Honey, it's all right, I was only trying to help...\"\n\n\"HELP? HELP THEM WHAT? GET LAID?\" I could see she was fighting back a shift, her claws were coming out and her eyes were starting to glow.\n\n\"Kelsey and I are mates, Alpha,\" Keisha finally said. \"Joe volunteered to help us have babies. He jacked off into a cup, every four hours, for a week. He never touched us, we used a turkey baster,\" she said. Linda calmed down as Joe hugged her legs, pulling his head into her belly. \"It was very kind of him to agree to help us, both our species have trouble conceiving. He has strong sperm,\" she finished.\n\n\"That is mine and only mine now,\" she said with a growl as Joe frantically nodded his agreement. She pulled him up to his feet. \"I know it was before you met me, and I'm not mad. I'm happy my mate was willing to help them out,\" she said. \"Is he going to be involved in their lives?\"\n\n\"We are leaving that up to him, and now you,\" Kelsey said. \"We will not prevent him from seeing them if he wants to be known as their father, and we are not asking for any child support from him.\"\n\n\"We need to talk,\" she said to Joe as he hugged her tight.\n\n*End flashback*\n\n\"Alpha Rose, can we swim now?\" I looked down at Lynn, she had run down the stairs ahead of her parents to ask. Joe and Linda walked into the room and went over to get plates at the side table.",
        "\"What did your mommy say?\"\n\n\"She said we haz to eat, but I want to swim!\" The young girl loved to swim, in human or cat form. They had to practically drag her out of the pool last night, after they arrived in time for dinner. They were staying with us for a week, until we all went to the Gila Pack for the big Memorial Day get-together. \"Mommies are always right, you should remember that,\" I said. \"Do you want to sit next to me? You can hold one of the babies if you stay still,\" I said.\n\n\"OKAY!\" She sat down, and I was passed Allison. I talked her through holding the small baby, and she kept her attention until her parents sat down and put the plate in front of her.\n\n\"Can I hold her for a bit,\" Linda asked. \"No swimming until you finish your plate,\" she said.\n\nShe reached for Allison and held her expertly while she tucked into her eggs. \"Thanks again for inviting us, this place is amazing,\" she said. \"I love the landscaping you've added.\" She looked out at the back, where the pool and rockwork had been improved. Tall poles around the outside supported retractable awnings for shade during hotter days, and portions of dead trees had been reinforced and set into concrete posts. These gave the many cats in our Pack spots to climb, play and nap, or just keep an eye on the kids. The huge outdoor pool and waterfall were not as practical in the Colorado mountains.\n\n\"It's been fun, and all the cats love it. Did you try the Challenge Log yet?\" The log was in three parts, stretching between two of the newly installed cat trees. The end were fixed branches, allowing cats to climb easily towards the other side. When it got over the deep part of the pool, there was a foot-thick log section set on ball bearings. If you were careful, you could move across it without falling off, but what was really fun was trying to knock others off. It was kind of like log-rolling for cats, with claws instead of shoes.\n\n\"Not yet, but it was a blast to watch,\" she said. We sometimes had tournaments on weekends because we liked it so much. \"I think we need to build a pool like this for our Pack, but I think we'll do it inside.\"\n\n\"Maybe we can work something out with movable walls or something to make it all-season,\" Joe said. \"We have the money to do it.\"\n\nCharlotte looked across the table at the Nightmare Pack Alphas. \"Alphas, if you had the choice, would you rather be a panther or a wolf?\"\n\nLinda knew she was being turned soon, so the question didn't bother her. \"Unlike Ella, I haven't been both, but each one has its good and bad. I love being able to climb, to swim, and from what I have seen, childbirth is much easier. Panther kitts can shift at birth as you know, and that plus being able to give birth in panther form is a real advantage if you plan a big family.\"\n\n\"On the other hand, the wolf is fast and can run for hours. There's nothing like being on a Pack run, or the feel of the Pack on a hunt together. Cats hunt in a completely different way, more solitary,\" Joe added.\n\n\"It is personality as well. I think cats are natural loners, they will tolerate being around others but appreciate solitude. Wolves are naturally social, they always want to be together, having physical contact and doing things together. They are naturals at Pack rankings, while cats can struggle with fitting in. You know, dogs have masters and cats have support staffs.\" Linda laughed a little. \"Since turning is best done during sex, wouldn't that be a little weird having your Mom bite you instead of Josh?\"\n\nShe flushed and looked down, embarrassed. \"His wolf is having trouble holding back, if it wasn't for Alpha command he would have done it already.\"\n\n\"That's natural, he's your mate. Unless you have your heart set on being a panther, I wouldn't take the honor of turning you from him. It's a memory you'll have forever,\" she finished.\n\nWe finished breakfast and I looked around. \"I think I'm going to go cat and lay around with my babies before it gets too hot,\" I said. Plenty of people joined me as I walked out back to the pool. Pulling off my sun dress, I waited until the girls undressed my babies and set them on a blanket before I shifted into my cat. As the babies saw me, they shifted into their fuzzy little kittens and ran towards me, their comically big paws dragging the ground. I led the four to the water; the girls were all spotted, while Bruce had the jet black solid coloration. Laying down in a few inches of water, the babies started to climb around my legs and onto my neck.\n\nIt didn't take long before the whole Pack was out there along with our guests. I watched the older kids playing volleyball as the younger ones played with the fountains and slides in our end, watched carefully by a dozen adults. I watched Gunny leap up onto one of the artificial trees, moving out on a thick branch over me. In moments, he was asleep, his four legs hanging down around the branch.\n\n\"You sleep, I'll watch over the little ones,\" Linda told me as she walked naked to the edge of the pool. I nodded my head and then she shifted, as my eyes closed I saw her panther move into the shallow water behind me.\n\nLife was perfect.\n\nCh. 71\n\nFrederick Memorial Hospital, Western Maryland\n\nPresident Hank Kemper's POV\n\nSix Months Previous\n\nI opened my eyes, the lights blinding them. People were touching me, yelling, and the pain. The pain in my head was beyond anything I had experienced.\n\nI heard a loud pop, like a gunshot, then more and more as my body tried to withstand the pain that was racing through it. Everything hurt, nothing was right, and a voice in my head was screaming at me to get up. The noises finally stopped, the pain abated, and I opened my eyes as people screamed and ran out of the room.\n\nI looked up, everything seemed different; my vision was sharper, but colors less vivid. I looked down at my paws, then up... wait a minute, PAWS? I tried to sit up, but something was wrong, my arms didn't work, and I felt myself rolling off the bed and crashing to the floor. Pain ripped through me again, my ribs on fire. \"GET UP!\" The voice was insistent, so I tried to, but I couldn't make it happen. \"Relax and let me do it,\" the voice said. \"Just trust me.\"\n\nI pushed back the pain and the thoughts and just stopped trying to think. My body started to respond, I got up on four legs and steadied myself. I could see my reflection in the stainless-steel cabinet doors, I was a huge wolf, my shoulders were above countertop height. I was black with a streak of white running between my eyes back over my head, another white patch on my chest, and white patches on my front paws. \"Who are you,\" I asked the voice.\n\n\"I'm your wolf, I'm with you always now,\" the voice said.\n\nI thought back, remembering the attack, the crash. \"We... where is Tammy?\" I panicked, looking around I knew that if I was here, she might be too. I tried to yell for her, but what came out instead was a frightening growl. I willed my legs to move, slowly for the first step but then I was moving faster, crashing through the swinging doors.\n\nThe hallway was chaos. I looked around for Tammy, growling loudly, as people ran for the exits. I looked at Robert, one of my leading Secret Service agents; he had his gun drawn, pointed towards me, and his face showed shock and fear. He was looking behind me and finding nothing. \"Mr. President,\" he said shakily.\n\n\"Back off him slowly and evacuate this hallway,\" a female voice said.\n\nI looked over at her. \"Lisa is here, she is Alpha, you are safe,\" the voice said in my head. I looked past her for Tammy, then made a break for the doors. Instead of moving out of the way like everyone else, Lisa jumped on my back as I went past, her arms around my neck. We crashed to the ground as she wrapped her legs around my stomach. I struggled to get free, trying to get my claws to her arms, but she was as strong as I was, and she knew what she was doing.\n\n\"Hank, she's gone.\" I stilled. \"Tammy died in the crash, she was dead when I pulled you out, there was nothing I could do. I'm sorry.\" I heard what she said, and it took a moment to wrap my head around it. My Tammy, my wife and love, was gone. The grief hit me like a wave, knocking the energy out of me. I relaxed in her arms, raising my head I let out a mournful howl to the now-empty hall. \"I need you to shift back, to be human again. You're the President, your wife wasn't the only one killed. You have to be strong, the man in a crisis we all know. Think of yourself as a human, think of your hands, of standing on your feet, and let your wolf go back.\"\n\n\"Trust her,\" my wolf said. I thought about fingers and toes, and a moment later I was lying on the floor next to her, naked and sobbing.\n\n\"ROBERT, come in now, only your agents,\" Lisa yelled down the corridor. Robert burst through, two other agents right behind him. They saw me crying into Lisa's arms and lowered their firearms. \"Guard the doors, no one gets in. Someone grab him some clothes,\" she said.\n\n\"Archer is safe, Archer is safe,\" Robert said into his communicator. \"Guard the doors, and send in a doctor and some clothes.\" He looked at Lisa. \"He's all right?\"\n\n\"His wolf integrated with him, he's not an immediate danger, but he's going to need to come with me. He needs to be with Pack, to learn what it means to be a wolf with us. If you take him back to DC, he could shift and lose the control he has.\" Robert nodded and walked off to arrange things.\n\nA doctor came through the door, nervously looking at me. \"Mr. President? May I examine you?\"\n\nLisa helped me stand, and I took the athletic shorts that were handed to me and pulled them on. I looked at my stomach, it was covered with blood but no open wound. \"I think I need a shower first,\" I said. He did a quick examination, shocked at how healed I was, then agreed I could go to a normal exam room instead of the surgical ward. The agents had cleared the hallway and elevator, and we walked out onto a different floor as he led me to the private exam room. He told Lisa to wait outside, but Robert and I overruled him. My wolf needed her, hell I needed her with me. I felt like I was an inch away from breakdown.\n\nThe exam showed that my stomach wound had been completely healed by the change, and my suspected concussion wasn't there. I wasn't even bruised. An hour later, against his advice to stay for observation, my staff had arrived and I needed to get to work. \"Take him to Camp David again,\" Lisa said. \"My pack adjoins it, we can help him through this while you keep him protected.\"\n\n\"Not until I see my wife,\" I said. A few phone calls were made, then I was escorted to the morgue. A half-dozen body bags were on the tables, and the staffer nervously led me to one.\n\n\"Mr. President, it's not pretty,\" she warned me. \"The fire...\"\n\n\"I've seen the dead before,\" I said, thinking back to my tours in Iraq. \"I need to see her.\" She zipped down the bag, and the scent of burning flesh assaulted my sensitive nose. She had been badly burned, and her neck gaped open from the wound that killed her. I leaned forward, kissing her forehead, as my wolf sat back. \"Not mate,\" he told me. \"She was a good woman, a good mother,\" I told him back. I stood up and allowed her to zip it up. I learned the names of the others who were killed, some I knew well, others I didn't. As we walked out, I grabbed my Chief of Staff. \"I want to speak to their next of kin after they have been informed,\" I said. \"Gather the Staff, have them meet me at Camp David. I need to go out and let people see I survived,\" I said. The Secret Service didn't like it, but they agreed to have me do a quick press conference in the hospital conference room with a few select reporters. Quick didn't happen.\n\n\"Ladies and Gentlemen, the President of the United States.\"\n\nI walked into the room and stood at head, staring at the half-dozen cameras that had been allowed in. Gesturing for the reporters to sit, I stood there in my hospital-issue scrubs, my face resolute. \"My fellow Americans, today another attempt was made to topple our Government and end my life. Thanks to the brave pilots of Marine One, the Secret Service and the members of a nearby Werewolf Pack, my life was saved, and they have my eternal gratitude.\" I stepped back for a moment as Lisa blushed and the press applauded. \"The attack was not without losses. Six Americans, including my wife and first lady Tammy, were killed. Their death will not deter us, it will drive us to remove these Cartels from the face of the earth. No longer will a gang of criminals be able to influence the workings of a State. I am declaring a national day of mourning Friday, Federal offices will be closed, and we will see my wife laid to rest. Thank you, and may God Bless the United States of America.\"\n\nI walked out, escorted quickly to the waiting motorcade. Security was incredibly tight, roads had been shut down, I was put into a backup limousine without the Presidential seal and flags, and we had a strong military and law enforcement escort. It was more like a parade than a motorcade, with helicopters and jets overhead. I made it clear Lisa was to be at my side, for my safety and theirs. \"What now, Alpha?\"\n\nLisa took my hand. \"We need a few days to give you a werewolf boot camp- how to shift, work with your wolf, use your new senses, and how Packs work. We can do it around your other commitments, but it will take longer.\"\n\n\"My wolf is restless, he wants out,\" I said. \"He's furious at the attack, at the loss of my friends and my wife. He wants their blood on his teeth, and it's scaring me a little.\"\n\n\"It's to be expected,\" she said. \"What did your wolf say about her?\"\n\n\"She wasn't my mate,\" I said with a sigh. \"There's someone else out there for me. I'm not ready for that.\"\n\n\"You may not find her quickly. Don't worry about that, it will happen, or it won't. Robert, what do we need to do to get my mate and a few other wolves onto the grounds? Unless you'd let us take him to our territory.\"\n\nRobert laughed. \"My bosses are a little risk-averse right now, anything short of wrapping him in bubble wrap and putting him in a high-security facility is not acceptable now. Give me the names and I'll see what I can do.\"\n\nI wrote down a few names and gave them to him. We were all on our phones until we arrived at Camp David again, and we were escorted straight to the Situation Room. \"What do we know of the attack,\" I asked my Homeland Security chief.\n\n\"It's definitely Cartel-sourced,\" he said. \"One of the attackers is a known Zeta, the others are from Honduras. The missiles were Stingers, identified as being sold to the Mexican military in 1998. The machine gun was mounted on a stand in the back of a full-size pickup that had been reported stolen three days ago. It was also from the Mexican armory.\"\n\n\"Options?\" I looked at the Chairman of the Joint Chiefs and my CIA director.\n\n\"Limited, sir,\" the General said. \"We have assets, but not targets. Our ships and aircraft have been banned from Mexican territory, and our military was expelled from the country. Give us a target and permission, and we will hit it, but right now we don't have anything.\"\n\nThe CIA Director nodded. \"We know that the Operations Chief of the Zetas, Colonel Trevino Morales, survived our initial attacks. He's smart and he's paranoid; always on the move, never sleeping in the same bed twice. We think he's mobilized his headquarters, using the vast jungle of Tamaulipas to hide from our satellites and drones. The area he is holed up in is completely controlled by his Cartel, police and military have been neutralized. Even before our drones were banned from their airspace, we had difficulty there.\"\n\n\"Ground assets?\"\n\n\"All have been killed. We stopped sending teams in after three were lost. The only one who's had any success in those conditions is Black Ker.\" He explained a little about her, that she was a panther shifter with experience as a thief and an assassin. \"I can try and make contact. She's not a US asset, so there would be deniability.\"\n\n\"If she is caught, you would be outed as employing a known criminal assassin to operate in a foreign state,\" my Secretary of State added. \"After the last attacks, this would ruin us for decades in the region.\"\n\n\"What we need,\" I said, \"Is someone with the experience to go down there and take him out, without ties to our government, and for their own reasons.\"\n\n\"I may know someone, but don't say anything,\" I heard in my head. \"It's the Pack bond, you bonded with me in the hospital so we can speak to each other using our minds. Finish the meeting and we'll talk.\" I spent another hour with them, going over the limited options we had, then I left for my quarters.\n\nLisa followed me in. \"What do you know,\" I said.\n\n\"Look, this whole thing started with a plot by the Zetas to spring a war between the Government and the Werewolves. You are treating this like you are the only player. The Packs have assets you don't know about, and it's better that you don't. Just get me the usual.\"\n\n\"A Presidential pardon and look the other way on some monetary transactions?\"\n\nShe laughed. \"Not to sound like a broken record, but yeah. Sign it and leave the names blank, we'll hold it for when we need it.\"\n\nAn hour later I signed the forms and handed them to her. \"Thanks for not killing me with that drone, by the way.\" Her face dropped, there was a brief flash of recognition before she gained control again.\n\n\"Mr. President, I had nothing to...\"\n\n\"Don't lie to me, Lisa. I understand what you did and why. It was genius, really. The FBI was shocked that a loose wire kept the charge from detonating, but I figured out you did it on purpose. In the end, we both had the same enemy.\"\n\n\"We do, Mr. President. If you'll excuse me, I need to get back to my Pack. Our Lead Beta, Ron Washington, just arrived and will help you with anything you need until I can get back to you. It might be a few days, so my mate, Alpha Ross, will direct your transition help.\"\n\n\"You'll have everything you need, Lisa. Just kill this bastard.\"\n\nGuns and Roses Pack House\n\nSix Months Ago, Day after Assassination Attempt\n\nGunny's POV\n\n\"Lisa, what a surprise. I didn't know you were coming.\" I opened the gate and gave her a quick hug. \"Are you here to check on Patricia?\" Her mate's sister Patricia was still here, as we were waiting for an Alpha Council trial on his involvement with the Zetas and the attacks on the Packs.\n\n\"Actually, I'm here to see you and Rose,\" she replied as we walked towards the house. \"Josh too. This isn't a social call, I've got to fly back to DC soon.\"\n\nI sent to the two over the bond to meet me in the command center downstairs. We had been watching the coverage of the assassination attempt on the President and knew Lisa had changed him to save his life. I opened the door for her and stopped in the kitchen to grab some snacks and drinks, since this sounded like it would be a while.\n\n\"Hi Lisa!\" Patricia came rushing in from the pool area, hugging Lisa and scenting the familiar smell of her Pack and brother on her clothing. \"What a surprise!\"\n\n\"And I'm not here,\" she said quietly. \"Come on, let's get started.\" Patricia started to follow, and I shook my head no at her. Josh was already in the room with Rose, so I locked the door behind me and activated the anti-eavesdropping features. I wasn't sure how it worked, but Josh said it disrupted attempts to monitor the room from outside.\n\nShe sat at the table as I pulled Rose into my lap, my hands automatically going over her pregnant belly. \"What's going on, Lisa?\"\n\n\"The President knows we were behind the drone attack,\" she started. My mouth dropped open, along with the others. We had done everything possible to insulate ourselves from that and the expected investigation, which was going to be intense.",
        "\"How?\" Rose looked at Josh. \"What did we miss?\"\n\n\"He had a suspicion that the dud was intentional, and when he dropped the bomb on me that he knew I did it, my reaction sealed it.\" She leaned forward on the table. \"He's not saying anything, he thanked me for sparing him and told me he understood why we did it. In the end, he said we have a common enemy and with his administration compromised it was a genius move.\"\n\n\"So no immediate danger? We don't have to leave for the Island?\" We had an evacuation plan for the Pack, including false US and Panamanian passports, if things went south.\n\n\"No, but we have a bigger problem.\" She detailed what she knew about the attempt, that it was the Zetas and their current leader, Trevino Morales. She \"The CIA and military don't have assets; he's smart and doesn't stay in one place, making it very difficult to get a drone strike or air attack. Given the lack of relationship between us and Mexico right now, the State Department is hesitant to send anyone related to them. They can't have any fingerprints on getting this guy.\"\n\n\"So, he wants us to take him out.\" She nodded as I pulled Rose closer. \"With no support, coordination or involvement with the Government so they can maintain deniability.\"\n\nRose shivered a little. \"If we get caught, it could expose us, the Packs, as agents in this war. We could get dragged in. If the Gulf and Pacific cartels figure out we were behind the attacks on their assets, on setting them up for a war with the Zetas, they'll hit back hard.\"\n\n\"We can't get caught then.\" I moved Rose to her chair and stood up, going to the display screen we had. Josh changed it to a map of Mexico, and Lisa showed where Trevino was operating from. All jungle, just like I liked it.\n\n\"He's paranoid, powerful and travels with a small group of guards and tech people. Three vehicles, one of which is a mobile command center. Satellite communications so he can direct his people from anywhere. This area is huge, it's a needle in a haystack.\"\n\n\"He uses satellite phones and internet, right?\" Josh was sitting back. \"Can the government triangulate transmissions?\"\n\n\"Yes, but we think he only uses them while moving, or he sends the command truck away from where he is staying. The CIA has been using this information to track him, somewhat, in this area for the last month.\"\n\nThe plan was coming together in my mind. \"So if you hacked that, or it was just provided to us, our team could move across country to where they bed down for the night and attack.\"\n\n\"Hacking is fine, we can't rely on the CIA after what they did to Al and Ella. I trust them as much as I trust gas station burritos,\" I said.\n\n\"As much as emails from Nigerian princes?\" Josh added with a smile.\n\n\"Or a drink handed to me by Bill Cosby,\" Rose laughed with us.\n\n\"Or financial advice from Bernie Madoff,\" Lisa said as we all laughed. \"So, we have to do this, the question is who and how.\"\n\n\"Ella has done this kind of operation before, so has Al,\" Rose said.\n\n\"Yeah, that isn't happening. No way we send any pregnant female into harm's way. Al is former CIA, if he's caught there is no way they don't tie it back to the President.\" Rose was pissed as she looked at me. \"Don't even think about it. I need you back here to run the Pack, and I need to know you are safe.\"\n\n\"You're going?\"\n\n\"It makes sense. I'll take Lars, both of us have a lot of experience in ops like this. We can move in cat form, avoiding the roads, and we can stay there as long as we need to.\"\n\nLisa looked a little hesitant. \"Two people isn't enough, you should have at least three if you're going to try to surprise them at night.\"\n\nI thought about who could be added, it had to be a cat, one who could speak Spanish and knew how Cartels worked. \"I'll bring Charlie into this as well.\"\n\n\"That's dangerous, if the Zetas catch him they will kill him, slowly and painfully.\"\n\n\"True, but he's motivated, and it would be believable that he would do this because of what they did to his family. Lars and I would be easier to trace back, but we are both retired and cats now, easier to leave a trail that we are mercenaries in the employ of one of the other Cartels. Josh can even transfer money into our accounts from theirs to make it hold up.\"\n\n\"I hate to admit you are right, and I don't like you going off without me, but I can't risk our babies either,\" Rose said. \"Let's bring him in here.\"\n\n\"Patricia too,\" I said. \"They are new mates, she won't leave him, and we could use someone on the outside for logistics. She speaks Spanish fluently.\"\n\nTen minutes later, we had sanitized the command center of everything except the information on Travis, and I opened the door to them. \"Come on in,\" I said. Rose laid down the situation over ten minutes; the plan was for the four of us to travel to Panama, then up into Mexico on Panamanian passports.\n\n\"We would be in cat form most of the time, but we would have packs with explosives, rifles, trackers and satellite phones,\" I said. \"We spread out over the territory, waiting to see them, and moving to any recent sightings that Josh can text us. Once we locate him, the three of us close in and do a coordinated attack to take him and his command team out for good.\"\n\n\"There's one thing, though. In order for the team to function well, you need a Pack bond to communicate. Patricia, Charlie, you'll have to join our Pack until this is over.\"\n\nThey talked together for a few minutes before agreeing, and I performed the ceremony to accept them into our Pack. \"Welcome, and thank you,\" I told them both.\n\n\"I needed a beach honeymoon,\" Patricia responded.\n\n\"We'll go back to the island afterwards,\" I said. \"This has to be done or none of us will be safe.\" We left the room to get packed, there was no time to waste.\n\nTwo Weeks Later\n\nI moved through the jungle in the darkness, towards the large tree that I was using to overwatch the roads just outside Jamauve. Josh had told us that Trevino's signal came from the valley late yesterday, and so Patricia had driven us close enough we could get out and monitor. We didn't have enough people to cover every exit from the valley, so we guessed the east end.\n\nPatricia wasn't one to stay back in the hotel. She hid our vehicle off a jungle path and went wolf, covering one of the roads herself. For the last eight days, we had been chasing after Trevino's group, always a step behind. I got to the big tree, my small bag in my teeth, and leaped up to climb.\n\nI hooked the strap on a branch, then laid down in a spot with good visibility. I was stuffed, having taken down a small boar earlier in the night to eat, then drank my fill at a creek. By staying in cat form, I could eat every third day or so and be fine. \"I'm in place,\" I sent to Lars.\n\n\"I'll be set up in ten,\" Lars replied.\n\n\"In place,\" Charlie replied. Patricia was out of my range, so Charlie relayed her readiness. We used the Pack bond, avoiding use of any electronics that might be tracked. The Zetas were tech savvy, and we didn't want anyone knowing we were here. Josh could send us messages, but it was one way unless we absolutely had to respond.\n\nThe hours passed slowly until the sun started to rise behind me, casting the valley into shadows. My ears perked up at the sound of engines; most had been normal traffic, but these were powerful and close together. I looked down, seeing three SUV's speeding up the winding highway towards me. \"Possible contact, three black SUV's moving my way quickly on 126, headed east to Joya Verde.\"\n\n\"Can you deploy a tracker,\" Lars responded.\n\n\"On my way.\" I grabbed the bag in my teeth as I went by and climbed out of the tree, running down the hill towards the roadway. I'd picked a spot where the road switched back, giving me a spot where I couldn't be seen from those approaching. Two minutes later I was shifted by the side of the road, digging in my bag for one of Josh's toys.\n\nThe tracker had GPS technology, and was a small black box with a powerful rare-earth magnet attached. It was lightweight and had a twenty-mile range, transmitting only once every fifteen minutes so it wouldn't be detected easily. I gathered some sticks, placing them in the center of the road with the tracker, magnet side up, on top. I shifted back to cat form, grabbing the bag as I reached the ditch. I bounded back up the hill, finding a tree where I could get a good look at the people inside the vehicles.\n\nThe cars were moving fast, in tight formation, and I got a decent look as they passed. I could see rifles in the hands of the guards in the first car, and despite the heavy tinting of the window, I verified Trevino was there. \"Target verified, move to rally points and pick me up on the way through,\" I said. \"Tracker is attached.\" The vehicles hadn't even slowed down over the branch, and it had attached itself to the first car.\n\nIt took almost two hours before our rental car stopped by the side of the road, so I could jump in. I quickly pulled on shorts and a shirt. \"Everything working?\"\n\n\"Perfectly,\" Patricia said. \"They stopped about fifteen miles ahead, three miles north of the main road. They haven't moved for the past three transmissions.\" She was working the laptop computer in the passenger seat as Lars sat next to me in the back. She showed me the topographical map around the target. \"This farmhouse is the only structure in the area.\"\n\n\"Pull over for a minute, Charlie.\" We all huddled around the map. \"Let Lars and I out here,\" I pointed at a sharp turn in the road near the turnoff, \"then Charlie here. You hide the car and cover the road here, ready to come pick us up hot if things go south at this location.\" I pointed to a spot on an adjacent road, about a mile east of the farmhouse.\n\n\"What's the plan?\"\n\n\"We move in cat form to spots on three sides of the house. Once it gets dark, Lars will take the charges and rig each of the vehicles, bombs set with motion sensors in case they make a run for it. We wait until after they turn in, sneak in and take out the sentries, then attack the house from these spots. If they escape, we let them get to the vehicles and that takes them out.\"\n\n\"Simple and effective,\" Lars said. \"Cat or human? No prisoners, right?\"\n\n\"They don't deserve to live, and we don't want any forced turns, so kill them. We go cat for the sentries, then use suppressed pistols for the rest. If we can capture any intelligence, we do it. We torch the place then run overland to the rally point and get the hell out of here.\"\n\nIt was now approaching midnight, and we had been in place for almost twelve hours. I liked the scout part of the job a lot better in cat form, I was more comfortable, and it was easy to get up in the trees and blend in. The three vehicles contained twelve people; six were guards, of which two were outside the house on patrol at all times and one remained just inside the front door. Trevino was in an upstairs room with two deputies and two tech guys, they had turned the bedroom into a command post. The last person was a young woman, evidently his mistress.\n\nWe waited until Trevino and his woman were asleep, and the others were downstairs. Lars moved to the edge of the clearing, timing his run for when the outside guards were not looking at the vehicles. He moved between them, setting the charges underneath the driver's seat and arming each. He snuck back out when I told him it was clear.\n\nWe needed to take the sentries out quietly, and we waited until they had only ten minutes left before they would be relieved. The guards were ex-military, but they had become complacent; their patrols were always the same, and their replacements always came out the front door. The three of us moved into position, and Lars and Charlie each took a man out on my signal. Both attacked from behind, their big jaws crushing their throats before breaking their necks and dragging them into the trees.\n\nI shifted and waited by the front steps until the replacement guards came out, with the other two poised to go in. Lars had moved onto the roof just above the balcony on Trevino's room, while Lars was poised by the back door where the other staff members were. All of us had our silenced pistols in hand. When the door opened, I was ready. \"Unleash hell on my mark,\" I said. \"Standby... GO!\"\n\nI put two rounds into the back of each sentry's heads, then sprinted up the stairs and through the front door. I could hear the shouts as the other two broke in, but I was busy myself. I took out three in the front room, meeting Charlie as he came out of the back bedroom. He nodded and we both rushed upstairs, just in case Lars needed help.\n\nHe didn't. \"All clear, grabbing what we can,\" I sent to Patricia.\n\nWe quickly verified the count of people, then set about collecting. Lars and I took the house, while Charlie went to the vehicles. We grabbed three laptops and four cellphones, plus two satellite phones. We removed all their batteries and put them in a carry bag. We also found coded notebooks and a phone list. It took us thirty minutes to clear the house, by which time Charlie was bringing the dead guards back into the front room. \"Car bombs are on a five-minute timer, and the vehicles are set to burn,\" he said as he handed me a petrol container.\n\n\"Lars, take the bag and head out. Charlie, set the upstairs ablaze then come down here.\" We both stripped and gave Lars our clothes before he left. I went around the main floor, spilling gasoline on the floor in the other rooms until Charlie raced down. I followed him out the door, tossing the rest of the can onto the floor, then tossed a lighter in.\n\nThe fires in the night sky backlit our escape as we raced through the night together. A day later, we were back home and Josh and Carl were cracking the codes.\n\nLisa gave most of the data to the President; the books and laptops had a complete list of Cartel associates, safe houses and assets. He used it over the next few weeks to deal a killing blow to the Zeta Cartel.\n\nLisa returned to her Pack along with Charlie and Patricia two weeks later. The Alpha Council trial was short; given that he was under duress and had provided so much help to our Packs, they agreed he was not to be punished. He became the first feline member of the Thurmont Pack.\n\nAnd Josh? Well, he cracked the banking codes and 'liberated' another couple of billion dollars from the Cartel accounts.\n\nJust another day at the office.\n\nCh. 72\n\nWhite House, Two Weeks Later\n\nPresident Kemper's POV\n\nI had a massive headache, and my wolf wasn't helping. \"We need to run, to be with our Pack,\" he said.\n\nI had been working non-stop since the last assassination attempt, and I was out of energy. The crash-course in being a werewolf we did back at Camp David had helped a little, helping me to get past the initial rage of the attack and the loss of my wife. Eight hours working with Alphas Ross and Lisa weren't enough to settle me in, though, and my wolf didn't like being this far from others. I got up from the Oval Office, telling my secretary I was done for the day. My Chief of Staff walked with me to my private quarters. \"Mike, clear my calendar for this weekend,\" I said. \"I need to go to Camp David again.\"\n\n\"The Secret Service won't be happy about that,\" he said.\n\n\"That's their problem. Mark is enough personal security when I'm with the Pack, they can secure the Pack borders and observe.\" Mark, the lead Secret Service agent who had pulled me out of the Rose Garden following the drone attack, had been with me when I visited the Thurmont Pack to thank the eight women who had pulled survivors out of Marine One. I'd barely gotten out of the limousine when I heard a high-pitched growl. Two agents shoved me back inside as a young woman rushed forward, tackling Mark to the ground and kissing the hell out of him. It turned out Melanie, one of the eight, found her mate in him. It took a few minutes to clear things up, get the limousine to turn around and go back, and get Melanie uncuffed before we could truly relax again. Mark was changed that night, becoming the first Werewolf Secret Service agent since the war started almost seven years ago.\n\nSince I was a wolf, they had asked for volunteers to be turned, and two more had stepped up, a single woman and single man. Ross had turned them last week, but they were still training in their wolf forms. \"I need to run, Mike, my wolf is restless and I'm having trouble keeping my temper in check.\"\n\n\"It's not like there isn't everything else in the world to deal with. You should have taken a leave of absence after the crash, no one would have thought badly of it after losing your wife.\" He and several other staffers had pressed me to step aside voluntarily, invoking Article Three of the 25<sup>th</sup> Amendment, and allowing the Vice President to discharge my duties until I notified Congress I was able to resume them.\n\n\"People die in wars, Mike. It wasn't the first time I had to set my own grief aside and get the job done.\" I mourned the loss of my wife at her funeral, then I showed up in the Oval Office the next morning. I had a war to fight, and until it was done, I wasn't relaxing. \"At least now the Zetas are gone.\"\n\n\"Do you know what you want to say to the joint session of Congress tomorrow night?\" I had requested the address this morning, and the networks had cleared their Tuesday night schedules for me.\n\n\"Have the speechwriters work in segments. We need to show them the Zeta threat is gone, reassure our allies, thank the brave people who won this war, and talk about how we have rid our government of its infestation. Have multiple options for each ready by noon, and I'll work with the staff to weave them together after lunch.\" We stopped outside the door to my residence, I nodded to the Secret Service agent as he opened the door. \"Now, I've got to get some sleep or I'm going to look like shit tomorrow night.\"\n\n\"Goodnight, Mr. President.\"\n\n\"Goodnight, Mike.\" I turned to the agent. \"Please have the senior agent stop by in ten minutes, I'm taking a quick shower,\" I said. He was talking into his microphone as I walked in.\n\nMy valet, was waiting for me and took my jacket. \"I'm heading for the shower, Jeremiah. Can you have the kitchen send up a piece of that apple pie, and pour me a Bailey's?\"\n\n\"Yes Mr. President. Take your time, sir.\"\n\nI went into the shower, quickly taking care of things and getting out. One advantage of an Academy education, I could get ready for most anything in ten minutes. When I walked out in my robe, Theo was waiting for me. \"You wanted to see me, Mr. President?\"\n\n\"Yes.\" I had made my decision already, I just hadn't told anyone. \"Make plans to take me to Camp David two hours after the speech ends. Plan for at least three days.\"\n\n\"Are you going to the Pack, sir?\"\n\n\"Yes. Send an agent to arrange things with them in person, I don't want word getting out. No one is to know of this except my detail and those involved in my protection, not my staff, not Congress. I don't want anyone to figure out what is going on until I'm in the air.\"\n\n\"Good idea, sir, I will make it happen.\"\n\n\"Thanks, Theo. I appreciate your work, I know I don't make it easy.\"\n\n\"It's an honor to serve you, sir. The men and their families know that, even more now.\" I had not been able to make it to the funerals of those killed in the crash, but I made sure to meet privately with their families and let them know how I felt. \"Goodnight, sir.\"\n\nWednesday, Eight PM\n\nJoint Session of Congress\n\n\"MR. SPEAKER, THE PRESIDENT OF THE UNITED STATES.\"\n\nI walked in to a rousing ovation, my first time in front of the Legislative and Judicial Branches since the second attempt on my life. Even the opposition party was welcoming; it was amazing what a little war could do. I shook hands as I walked in, finally making it to the podium. The Vice President, Speaker of the House and Senate Majority Leader sat in the chairs behind me, the Supreme Court justices and Congress in front behind the banks of cameras.",
        "I started the speech on a feel-good note, praising the bipartisanship and the way the American people rallied behind us after the assassination attempts. The biggest praise of the night came when I introduced the men and women who were with me on Marine One, or their spouses or parents if they didn't make it. \"The skill and courage of the pilots, in guiding the helicopter to a clearing despite severe damage, is in the finest traditions of the Marine Corps and military aviation. I was proud to present their wives the Distinguished Flying Cross and Purple Heart for their actions in combat.\" The chamber rose to thank them.\n\n\"I also thank the people on the ground, the werewolves of the Thurmont Pack, who responded to our crash and saved me and others from certain death.\" The second ovation was muted, and a number of members didn't rise. There were still those in government who didn't like or trust werewolves, and by extension, me.\n\nI spent the next half hour laying out the other major points of my speech; the utter destruction of the Zeta Cartel, olive branches to Mexico and other states upset at our actions in their territories. \"We can never forget that our country, through its addiction and use of the drugs they supplied, gave them the money and power they used against us. As such, I am tonight calling for a massive increase in drug treatment and addiction recovery; no more should a person who wants to be clean, not receive the support they need to become clean and regain their life,\" I said to loud applause.\n\n\"And change we must, for the events of the past months can never be repeated. No President should have to be in a position where their Cabinet, their Law Enforcement agencies and their Judiciary cannot be trusted to carry out their Constitutional responsibilities. When faced with so much evidence of Cartel compromise, I had no choice but to use the US Marshal's Service and Secret Service to investigate and arrest hundreds of people in the Justice Department and Federal judiciary. Not a day has passed where new revelations have not come out, or new arrests are made. The confidence of the American people in our Government has been shaken, with good reason. I am happy to report that we have completed arrests of all people we have direct evidence of Cartel involvement, and we have honest prosecutors working to deliver justice.\" I paused and took a drink at the applause.\n\nThe teleprompter had one message, I had another. I pulled the three by five index card out of my pocket along with a pair of letters, one of which I handed to the Speaker and Majority Leader. \"There is a plaque on my desk that Harry Truman used, that said, 'The Buck Stops Here.' In my military career, it was the same. The Commanding Officer is responsible for their unit, in good performance or bad. It is a responsibility that cannot be shirked, nor will I.\" I could see the gasps and shocked faces as they figured out where this was going. \"I did not know, I did everything I could to rectify it, but it happened on MY watch and I am ultimately responsible. Therefore, as required by the 25<sup>th</sup> Amendment to the United States Constitution, Article One, I am resigning as President of the United States effective immediately. I have just delivered my letter of resignation to the gentlemen behind me, and I request that the Chief Justice of the United States swear in the Vice President as the next President of the United States immediately. Thank you, and may God Bless the United States of America.\"\n\nNow THAT is a mic drop.\n\nI walked offstage to a shocked Congress and America, the Secret Service agents forming around me. \"Get to the choppah,\" I said in my best Arnold Schwarzenegger voice.\n\n\"Yes sir, Mr. President.\"\n\nFriday of Memorial Day Weekend\n\nPrivate Airfield, Gila Pack Territory\n\nRose's POV\n\n\"I sure am glad we spent the money on this airstrip,\" Renee said as she held one of her triplets, breastfeeding while we waited.\n\n\"It's not like we don't have money, and it didn't cost near as much as the private jets in this hangar,\" I teased. We didn't care, it was all a rounding error considering all the Cartel money we had liberated. \"I'm just jealous your hangar is bigger than mine.\"\n\n\"About time I had something that was bigger,\" she said under her breath before we both busted out laughing.\n\n\"Bigger isn't always better,\" Charlotte said softly as she played with my quadruplets. \"Thank God the change gave me faster recovery rates, I felt like an overcooked noodle down there until the change.\" Her silver-gray wolf was laying on its side, Josh's wolf next to her, as the rambunctious cats played between them. She had agonized over the decision between panther and wolf, but went canine, because she wanted Josh to do the turn. Jane Spencer had changed Carl as well, and both had moved into the houses next to us now that graduation had happened. The two couples hadn't come outside for the last three days, doing what new mates do, unless it was to run and mate in animal form. I was just glad they weren't sharing a wall with my bedroom anymore.\n\n\"There's the plane,\" Gunny said, his sharp eyes picking it out first. The plane from the Thurmont Pack banked into its final approach, and a few minutes later was taxiing into the big hangar. It shut down and the pilots lowered the stairs, and our friends and allies started coming out.\n\nFirst out were the Alphas, Ross and Lisa. Behind them was the former President, Hank Kemper, his Secret Service escort Mark and his mate Melanie. Then came Charlie and Patricia Stillwater; Charlie had taken over as Beta for the Pack, since Ron Washington had moved to Colorado to be with his daughter in the Nightmare Pack. We lined up in rank order, welcoming them to New Mexico for the Gila Pack's big get-together.\n\nWe were still working through these, with the previous gathering over Spring Break at our Pack. Our expanded pool, complete with waterslides, a swim-up bar and a lazy river, got a real workout along with the outdoor kitchens. It had been a great success, over three hundred attended for an epic week of partying and Packs. We were looking forward to the Fourth of July at the Johnson Pack, which I had briefly visited last year.\n\nWhen all the luggage was loaded up, Robert and Renee got the group's attention. \"I know it's been a long trip, but it is a good thirty-minute run in wolf form back to the Pack House, or we can drive,\" Robert said.\n\n\"I could use a run,\" Hank said.\n\n\"I can take the babies back in the car,\" I said.\n\n\"I'll go with you,\" Ella said. \"Even in cat form, it seems like my tits are scraping the ground sometimes.\" We laughed and started to load them up.\n\nIn the end, the wolves gathered around Robert and took off, while we cats took the vehicles. \"Lazy bunch of felines,\" Charlotte teased.\n\n\"Ambush predators,\" I said.\n\nOf course, no get-together would be complete without a mating or two, and we didn't have to wait long. We had brought almost everyone from our Pack, including the associated cats. Minka, the tiny Lynx from Minnesota, found her mate in a Johnson Pack warrior.\n\nAnd Hank Kemper found his mate in Tatiana Dubronov, and it was hilarious. They were running into the compound when Hank's wolf froze, causing him to get run over and rolled by a couple wolves behind him. When he got up, he made a beeline for the Siberian Tiger who was resting in the shade of a tree. She didn't recognize the bond, she reacted to the wolf jumping at her and batted him into the tree. He was knocked out cold, his chest sliced open by her claws, until she leapt at him and got his neck in her teeth. The smell hit her mid-bite, and Hank now has one HUGE mating scar.\n\nI pushed the big stroller past, headed for our rooms, as I wondered what would happen next.\n\nCh. 73\n\nIsla San Jose, Panama\n\nChristmas Vacation\n\nRose's POV\n\n\"Wow, they've really made some changes since we first came here,\" I said as I looked out the window of our private jet. \"That road wasn't there.\" I could see a new road that wound through the jungle now, circling the entire island and connecting all the little villages and beaches.\n\n\"They've added a lot of guest housing,\" Gunny said as he looked where I was pointing. \"Ella said they have six new clusters scattered around the island, each with private beaches. I guess we won't be staying in tents like last year.\"\n\n\"Not like Ella would ever let a heavily pregnant woman stay in a tent.\" I looked across at my four little angels, strapped in their travel seats and sleeping. Now nine months old, the three girls and one boy were my pride and joy. Gunny's big hand reached over, covering my belly which was barely showing the bump. Twins this time, thank Luna, but still too early to tell if they were boys or girls. So far, the matings between cats and wolves had yielded a few interesting things. One was that the females were cats while the males were wolves. The other, helpful thing was that all could shift at birth, while pure wolves didn't shift until they were about three years old. Being able to deliver babies and feed them in panther form was a big advantage I had over my daughter.\n\n\"So where are we staying this time,\" Charlotte asked from behind me. This Christmas would be different for her, their first as a fully mated couple, and at six months pregnant she was swollen with triplets. She and Jane Spencer were both having honeymoon babies, but Jane was having a son while Charlotte was having three boys. I don't know if it was the water or the genes, but our Pack was gaining babies at a rapid rate. Even Ella was impressed.\n\n\"The Alphas and Betas are staying at the main house, as we have some talks and other things to do along with our vacation. The single wolves and cats are being sent to the villages on the north, along with the younger mated couples without kids. The lower ranking families are in the village just a half mile east of the main houses.\"\n\n\"So, we are with you, then.\" She nodded, it was fine with her. I loved having her around, and Josh didn't care, as long as Charlotte was happy. They were a great couple, and pregnancy wasn't going to keep her from getting her education. Josh was loaded with Presidential-declared legal cash, just like our Packs. We all employed staff, local humans or feline associates, to help with our homes and landscaping. Our Pack house was now fairly empty, but the neighborhood was all Pack except the Johansen's. Tim and Crystal were a stubborn old human couple who refused offers of double what their home was worth, so they now were getting used to the new security and the, um, more relaxed attitude towards nudity that came with being around a Pack.\n\n\"Yes, we are going to work together on our charity efforts, so it made sense for the five Packs to have their leadership stay together in the main house.\" After the war ended, the remaining Packs received reparations, but the financial disparities remained huge. The Guns and Roses Pack was easily the richest, with the Gila and El Paso packs not far behind, but they had good leadership. The Johnson and Thurmont packs didn't reap the financial rewards from the Cartel war, but they had been run well. Too many Alphas blew their windfall, leaving little for normal Pack members. Now that there were more matings and it was easier to change Packs, many of these Alphas were finding their Packs fading into nothingness. Derek and Amanda Johnson were attempting to help with this problem by creating a summer program for future Pack leaders, bringing them to their Pack for an eight-week intensive course for future Alphas and Betas aged 16 to 21. The classes were taught by experienced Alphas and Betas, and members of the Elders and Alpha Council. The fact that matings had occurred was just a bonus; the courses were open internationally and to all Were species.\n\n\"Where is Renee building her Mate Loss Recovery Center?\" Jane was looking out the window as we lined up for landing.\n\n\"North end of the island, they have an isolated compound and village, no distractions. Only one road in and out, nobody within a couple miles,\" I pointed. \"I hope she can make a real difference when this opens.\" There had been some success stories in saving survivors. Alpha Renee and Beta Joe were the best known, but we had to improve on the current 90% loss rate of mates left. Renee had presented the idea at Wolfstock over the summer, and this island was the best way to get it done. Ella had jumped at the chance to make it a reality.\n\n\"Craig and Ella are taking a real risk making this an open Pack land, welcoming so many people, and without restrictions as to their original Pack or Packless state,\" Gunny said. \"They have more wolves and cats working for their Pack on this island than they have people in their Pack. In the old days, Alphas would never allow that. Way too dangerous.\"\n\n\"They had to, their plans for this island would never work without it,\" Josh said. \"They've given hundreds of people jobs here, along with a chance to find mates and Packs.\" He absently rubbed Charlotte's belly. \"I can't imagine any Alpha being stupid enough to take advantage of them. Not only is their pack strong and well run, but they have friends everywhere.\"\n\n\"Well, all that building is coming to fruition. We get to be the first to stay at some of these villages, the first All-Were resort and meeting center in the world,\" I said. \"When I talked to Ella last week, she said they were booked through May. Newly mated couples, families, all the way to entire Packs coming to enjoy some sun and fun. It's genius, really, and with the improvements to the airfield it makes it easy for people to come and go.\" The runway was now paved, and a fuel farm and two large hangars could store private or charter planes. This meant that direct flights were possible, and no more puddle-jumpers from the mainland. The pier nearby had been extended to take barge traffic, allowing the villas to be prefabricated in shops, shipped over, then placed on foundations and assembled on the island. I could see the windmills and the large solar panel farms and battery rooms near each of the outposts, Ella said each were fully independent with diesel generator backups.\n\nWe touched down softly, and the babies woke as the engines reversed. I couldn't do anything yet, not until we stopped, but at least they didn't cry the whole way down. I looked out the window to the hangers, seeing that our Pack members had joined the welcoming committee in the hanger. Our flight was the last to leave home, the others had flown down over the past few days and gotten settled in already. The unmated and associated cats were first, giving them the most time to be with the others. We taxied into the hangar, parking next to three other planes, and as we stopped we were finally able to unbuckle the babies and comfort them in their car seats. Gunny, Charlotte and Josh each took one for me as we readied our exit.\n\nWhen the pilot lowered the stairway, the heat and humidity, plus the smells of the island, hit us like a brick. The island was so different than the desert home of ours, so many smells. Gunny and I led the way down the stairs as the crew worked to transfer our luggage to the waiting Jeeps. Ella couldn't wait, she broke from the line and rushed to embrace me. \"Rose! How I've missed you!\"\n\nI gave her a hug, she was looking at my belly bump while I was checking hers. \"Not pregnant yet?\"\n\n\"Not for lack of trying,\" she laughed. \"I think I'm losing my touch, someone else is hogging the baby fairy!\" She moved to hug Charlotte and Jane and we slowly moved to the rest of the group. The Johnson, El Paso and Gila leadership were all here. Babies were removed from their carriers and passed around, stories were traded, and friendships rekindled. It took us twenty minutes just to get the greetings done, there were so many people we hadn't seen in since Thanksgiving or longer, plus our own Pack members updating us on things.\n\nA Jeep pulled up, and a striking dark-haired woman jumped out, followed by her hulking mate and their three-year-old daughter. \"LINDA!\" We moved towards each other, as fast as her pregnant belly allowed. No longer Black Ker, she was now the Nightmare Pack Alpha Female along with Joe and their daughter Lynn.\n\n\"By Luna, Rose, it's so great to see you again! I'm sorry, we've been VERY busy.\" Joe came up and gave me a hug after I bent down and kissed Lynn, and she kissed Allison's head.\n\n\"Don't worry about it, you had a big challenge. I'm just glad to have you here.\" Linda, in a way, was the \"mother\" of all the panther shifters in this big grouping, having been the first. A chance mating between her wolf father and panther mother gave her enough wolf characteristics that she could function as a leader in a Pack, and she passed that on to us.\n\n\"Alpha Joe, you are looking happy,\" I said.\n\n\"Because I am, Rose. I love my life now.\" It hadn't been easy, after the trial their little Nightmare Pack had taken over the Telluride Pack in Colorado. With hundreds of members and almost all their senior leadership gone, they had rebuilt the pack in the past eight months until it was respected again. It was now one of only four packs with feline Were in senior leadership, which offended some traditionalist Packs. We didn't care, obviously, and our Packs were stronger for it.\n\n\"Shouldn't we be moving to the main house sometime,\" Gunny asked Craig.\n\n\"We're waiting for another plane, no point in moving right now,\" he said. \"In fact, they're on approach now.\" We calmed the babies as the plane landed and pulled into the open spot in the hangar, and our big group moved over. The door opened, and a Secret Service man came out first, then former President Hank Kemper emerged followed by the Thurmont Pack Alphas and Betas.\n\nI was excited, I'd never met the former President. We quickly formed a reception line, babies in arms, starting with the host Alphas. \"Did you know he was coming here?\"\n\n\"I didn't even know Ross and Lisa were coming,\" Gunny said. \"It's a hell of a surprise, though. I wonder if there is more to it than a social call?\" Hank had been in and out of public life since his shocking resignation as the President. He had spent a lot of time learning how to be a wolf and finding his mate Tatiana had thrown him for a loop. \"That mating scar didn't fade a bit, did it?\" The man's neck looked like a jigsaw puzzle of scars.\n\n\"He got her good, too,\" I said. Pretty soon we were shaking his hand. \"Congratulations, Mr. President, Alpha Tatiana,\" I said as I took in her baby bump. \"How far along are you?\"\n\n\"Four months,\" she replied with a smile. \"Twins, that's why I'm showing. I just can't believe it, I had thought it was too late for me to find love and have children.\"\n\n\"I guess he bowled you over at the right time then!\"\n\n\"A little heads up would have saved some trouble,\" she said. \"Can I introduce my stepson, Scott? Scott, this is Gunny Rodriguez and his mate Rose, they are Alphas of the Pack in Santa Fe.\"\n\nI shook the young man's hand, he tall and muscled like his father, his hair cut short, but out of his Air Force Academy uniform. I scented something feline.... I may have been a little forward. \"Tatiana bit me two days ago; I wanted to take the change, they offered me wolf or tiger, and I picked Siberian Tiger, of course.\"\n\nI was a little shocked. \"Why tiger?\"\n\n\"Cat-like reflexes for flying, plus they look cool,\" I said. \"I can't wait to shake out my fur and do some hunting while I'm here.\"\n\n\"The pig hunt is going to be EPIC,\" Craig said as he overheard it. \"They got a little out of control in the time we were gone. Who wants to run to the house instead of driving? It's about five miles through the jungle.\" There were a bunch of shouts, and soon a mixed group of wolves and cats had shifted.",
        "We collected their clothing in one of the Jeeps and secured the baby carriers in the back. Gunny helped me climb in and before we set off. \"You didn't want to run?\"\n\n\"I'm old enough I don't have to prove anything.\" I snorted, he was still ripped and could outrun teenagers. \"Plus, I didn't want to be apart from you and our babies.\"\n\nIt was a few hours later before we were settled in the room, the babies were all fed, and we had our naps. I hadn't had a break, no sooner had I worked off the baby weight when Gunny knocked me up again. I could hear the screams and yells from outside as we walked towards the doors; Gunny opened them up and I trotted through, the babies running around and under me. There was a section of beach that had been fenced off for the young ones to play in, and I took them there. \"Oh wow, they are SO cute!\" The women supervising the area gushed over them as they picked them up and sniffed them. \"It's so nice to see a panther kitt this small and cute,\" she said.\n\n\"We'll be around,\" Gunny said as I rubbed against his leg. There was so much to see and do; a bunch of younger ones were in the water, swimming and boogie boarding in the gentle surf. Others were playing volleyball in the white sand, or laying out in the tropical sun. Dinner smelled amazing, there were five whole pigs being slow roasted over coals, plus some large fish were being baked. Gunny shifted, and we spent a little time getting to know the others in our animal form.\n\nI checked back on our babies, the ladies had fed them and they were playing with the other young ones. \"I feel like we shouldn't be wasting this time, love.\"\n\n\"Feel like sneaking out for a bit?\" I rubbed against his shoulder before taking off for the trees, running for the trail leading away from the house. \"Do you even know where you are going?\"\n\n\"Nope. Does it really matter when you're sneaking away for a quickie?\" I kept running until I couldn't hear the people at the beach, the whole time thinking about my mate chasing me down. He must have figured we were far enough away, because he jumped ahead of me and forced me to stop. Normally, he would have tripped me, but not while pregnant. He circled me as I stood, there, his tongue grooming my face and neck before he moved farther back. I shifted my tail aside as he sniffed my sex, which was swelling in anticipation. He licked out, slowly tasting me as his rough tongue split my folds. I squirmed in pleasure, dropping my chest to the ground.\n\nHe kept at it until I came powerfully around his tongue. I looked back dreamily, seeing him aroused and ready. He climbed onto my back, moving forward until I could feel him at my entrance, and with a single powerful stroke he seated himself deep inside me.\n\nI roared my pleasure to the jungle as my body adjusted to the invasion. We were both too excited for it to last, he started to move inside me, his front legs holding me in place. I pushed back into him as he pounded me, mewling and groaning as he brought me quickly to another strong orgasm. He didn't stop bringing me pleasure until my eyes rolled back. With a loud roar, he slammed forward again, bringing me to the highest peak yet as dots filled my vision, then it all went black.\n\nI woke up and it was dark, and Gunny was gone. I lifted my head up and smelled, he hadn't been gone long. I moved into the bushes, relieving my full bladder and enjoying the ache that came from a good, hard screw. He trotted back up a few minutes later, a boar piglet in his mouth. He dropped it at my feet before licking my face.\n\nIt always came down to the babies, I thought. He would make sure I ate well. I used a claw to rip open the belly, then reached in and gobbled down the vitamin-rich liver. He let me take the best pieces before he started in as well. We only needed a few minutes to reduce the small animal to bones. \"Ready to head back, love?\"\n\n\"We should, the babies are going to need us.\"\n\n\"They're sleeping at the beach, playing with the bigger kids really wore them out. Charlotte is keeping an eye on them.\"\n\n\"I like fresh killed, but I have to try that roast boar,\" I said. We moved together through the jungle, finding the path again and making our way to the beach. We used the outdoor shower to clean off the blood, then shifted back. We were going to take advantage of the remote location, staying nude as much as possible.\n\n\"Welcome back, you young lovers,\" Ella teased as we entered the beach and checked on our sleeping babies. One disadvantage of being around werecats, they could tell by the smell that you were feeling well. \"You weren't the only ones sneaking off.\"\n\n\"I'm just sorry I slept through dinner,\" I said.\n\n\"Nonsense, there is plenty left. Go get a couple plates and sit down, Hank says he needs to talk to us.\" I didn't need another invitation, I went over to the outdoor kitchen where the last big boar was still over the coals. We were served a feast; thick slices of boar covered in their famous tropical fruit sauce, salad, rice and fish tacos. We sat down at a big picnic table and were brought glasses and lemonade. Gunny refused to drink in front of me, so he left the beer alone.\n\nWe were soon joined by Ross and Lisa (Thurmont), Craig and Ella (Island), Robert and Renee (Gila), Derek and Amanda (Johnson), Jesus and Maria (El Paso) and Hank and Tatiana. They had all visited the ice cream bar and had big banana splits or milkshakes. Ella had my back, she brought me my favorite- vanilla ice cream over a brownie, slathered in hot fudge and whipped cream. Gunny was on his own!\n\n\"Thank you for meeting with us,\" Hank said. \"I have a favor to ask of you.\"\n\n\"Anything you need if we can give it,\" I said. \"We owe you a lot.\"\n\n\"Dangerous, but it isn't that much. Tatiana and I can't stay with the Thurmont pack anymore.\"\n\n\"His training is complete, he's mated, and they are both Alphas,\" Ross said. \"It is time he starts his own Pack, before his influence disrupts my Pack more than it has already.\"\n\nI had long suspected he was an Alpha, ever since Lisa told me he didn't immediately submit to her in the hospital hallway.\n\n\"I don't know of any Packs needing Alphas right now, although there are a few I'd like to see replaced,\" Renee said.\n\n\"I want to start a new Pack, not split an existing Pack. I'd like it to be like what the Guns and Roses and Belden Packs are doing; be welcoming to were of all kinds, but especially humans. In talks with other Packs, there are lots of humans out there that have requested the change, that would make good Pack members, but existing Packs are reluctant to change them,\" Hank said.\n\n\"Unless you have a mate who is already Pack, only a handful have been turned and joined,\" Tatiana said. \"We feel that for our kind to regain numbers and influence after the losses during the war, we need to be more open-minded about changes.\"\n\n\"Nearby Packs won't like that,\" Jesus said. \"They'll see you as a threat to them. Almost all Packs are gaining members only by picking up stragglers from other Packs, plus the recent baby boom.\"\n\n\"And that is why I need your help. First off, the Alpha Council is going to need to approve the start of a new Pack with us as Alphas. I am hoping you all will support me in that.\" Ella and Renee both nodded, Ella was part of the regional Alpha council for the southwest, while Renee served on the national council. Both had been elected over the past summer, Ella's choice was unanimous while Renee only had one dissenting vote.\n\n\"I would be proud to welcome you as Alpha,\" Renee said. \"Whatever help we can give you, financial or otherwise, is at your disposal.\"\n\n\"Thank you. We need a territory, and I don't want to step on any toes. We've researched the potential locations, and our preferred location is the Brainerd Lakes area in Minnesota. Craig and Ella, that land is yours by Pack law and birthright, so I need to know if you will allow it.\"\n\nI wasn't up on everything that happened in the war, and Ella saw that. \"The Brainerd Pack is Craig's former Pack. I killed his parents in retaliation for what he did, giving up the location of the Johnson Pack House at the beginning of the war. The airstrike took out over half the Pack.\" She looked at her mate, talking to him over the bond briefly. \"We are happy here and have no plans to return to the frozen North,\" she said. \"The territory is yours if you want it, I would be happy to see it under strong leadership again.\"\n\n\"Thank you,\" he said. \"I would hope that our new Pack could join the alliance you have created with the others at this table, we don't want to lose the friends we've made.\"\n\nI snorted. \"All right, but you're going to have to pick a holiday to host at. Most of the major ones are already taken.\"\n\n\"We'll figure something out, it may be a while before we have enough built to be able to host anything. The buildings were razed, the lands sold. Plus, I don't have any Pack members yet.\"\n\n\"Not for long,\" Gunny said. \"As soon as Minka finds out a mixed Pack is starting in Minnesota, you'll have Pack members.\" We all laughed, the tiny Lynx loved the cold and snow.\n\n\"Look for resort or campground property, something with a good chunk of lakeshore but a lot of attached land,\" I said. \"Taxes are pretty high; a cash offer might find you with enough to have a good start. Buy some farms or wooded land surrounding it, quietly, before anyone figures out a Pack is moving in. Once you have it all in hand, we can petition to have it declared Pack land and take it off the property tax rolls.\" They nodded, thinking about it. \"Just don't set up shop in Minnesota until you have it all set. A former President moving in is a big thing.\"\n\n\"I have some undeveloped land, about a thousand acres, that was not seized during the war because its ownership was hidden. You can use that or work out a trade for other land that works better for you,\" Craig said. \"It's time for a Pack to live there again.\"\n\nI finished my plate and started on my ice cream as Gunny ran to get some for himself. \"Anything else you want to discuss? I have a couple billion sitting around after the last rounds of the Cartel wars, we want to put it to use to help the Packs without direct payouts that can be diverted to the leadership.\"\n\n\"Then you need to invest in institutions, not Packs,\" Tatiana said. \"Look at what Ella is doing here with counseling widows, or what Derek is doing with leadership training. Create something that all the Packs need, then provide it free or at reduced cost.\"\n\n\"Medical care,\" Renee said. \"Many Packs do not have doctors, or facilities that can handle serious injuries. Even if they did, they don't own the helicopters and crews to get the injured to the hospital quickly from remote sites.\"\n\n\"That would take dozens of locations,\" Gunny said.\n\n\"Even better. Go by region, work with the Pack with the best facilities as a start. Work out financial support to upgrade their hospitals and add a helicopter and ambulance support- but only if they agree to serve all the Packs in their region. You don't have to do everything,\" Renee said.\n\n\"And more than that,\" Robert added, \"You could fund scholarships for those in Packs without adequate medical care to send their people to medical school, nursing school, even dentistry. In return, they have to agree to serve nearby Packs on a regular and emergency basis.\"\n\n\"Or cut out the middleman, if I find doctors and nurses who want to make the change, I'll do that, then rotate them to other Packs to fill the immediate needs. Who knows, they might find their mates that way,\" Hank said.\n\n\"You know, we need more than just doctors,\" Renee said. \"We have a whole generation like me that lost their teen years to the war, no school, no college. If we want packs to become self-sufficient, they need to be able to get good jobs in society. Plus, we need people in construction trades. Most Alphas are hesitant to bring humans in, at least unless they can be directly supervised by Pack members. Apprenticeships, vocational school, we need to close the education gap.\"\n\nI thought about it. \"There's enough we could fund a big push up front, then have an endowment that would continue to fund scholarships well into the future,\" I said. \"Josh said the accounts are earning a half million a day in interest while we figure out what to do with it all. It's an embarrassment of riches, thanks to Josh and his hacking skills.\"\n\n\"We don't want our Pack to become slack or entitled just because we have money,\" Gunny said. \"Money's just a tool, it's what you do with it that is important.\" I squeezed his hand, he expressed that perfectly. We had spent a lot of money on land, homes and things like airplanes, but everyone in our Pack still patrolled, cleaned, prepared food or cared for the children. No free lunches.\n\n\"One reason we haven't done much is because we don't want other Packs to know what we have,\" I said. \"As far as they know, the war was between the Zetas and the Cartel and we had no involvement in it. It needs to stay that way.\"\n\n\"Set up a charitable foundation and endow it anonymously,\" Robert said. \"Appoint a Board of Directors to administer it and hire staff to handle the details. No one needs to know how much money you have or where the money is coming from. Hell, you could accept donations, I'm sure there are some Packs and people who would contribute.\"\n\nI tapped the now-empty plate with my spoon as I thought it over. \"You know, that's a great idea. The Luna College Fund.\" There were smiles all around.\n\nI heard the sound of a yipping pup and tiny running feet. Looking down just before they arrived, I reached for my babies at my feet. I picked them up, kissing them and handing them off. The other children of the Alphas poured in, some in human, most in animal form. The meeting broke up so we could put them all to bed.\n\nThere would be plenty of time to talk tomorrow.\n\nCh. 74\n\nChristmas Eve Dinner\n\n\"My God, this is horrible.\" I looked at Gunny after I opened the bag Josh had given us for the party tonight. Renee had convinced Ella to implement her Pack's tradition of \"Gaming, Grazing and Shaming\" in the afternoon. This tradition was built around a Pack in Montana, where winds and snows kept the festivities inside.\n\nThe Games part was easily translated, as it was about friendly competitions between Pack members. We had a few hundred people on the island, so there were plenty of different games. The kids played Halo 10, Madden 2024 or Mario Kart 14 on the big screens in the game room. There was a mixed-team 2-man volleyball tournament on the beach, along with a surfing competition on the beach by the singles. We had friendly sparring matches in human and animal form, races from a hundred meters to a circuit of the island, and a race to the top of the volcanic mountain at the center of the island.\n\nGunny and I had won the wife-carrying competition, barely edging out Minka and Sam at the finish line. It almost wasn't fair, she's a tiny thing he barely noticed, but Gunny wasn't going to be denied. We won a trophy and a case of steaks.\n\nThe grazing part was also easy; the kitchens in the main house and the other villages had been opened, and the families had brought or prepared appetizers or desserts to compete for best overall in different categories. The Alphas were the judges, so we would be doing this when we went downstairs. I'd been smelling the baking all day and I couldn't wait.\n\nThe final was the shaming. Despite the tropical heat, we were having an Ugly Christmas Sweater contest, with shorts or flip flops under it. We'd left it up to Josh and Charlotte to order something over the Internet for us, rather than picking ourselves, and now we were paying the price. I picked up one of the matching sweaters. \"You get the butt,\" I said.\n\n\"I don't know, with my chest being so much bigger it would look funny if the back was rounder.\"\n\n\"Your chest isn't bigger, Rico. Not with the titty fairy still here. Plus, YOU are the one who said we could trust our kids to do this for us.\"\n\nHe grabbed the sweatshirt from me and held it up. \"It's a good thing he's a computer whiz because he sucks at fashion.\"\n\n\"It was probably Charlotte's pick. It IS an ugly Christmas sweater contest, I'm pretty sure we won't get fined and shamed with these two. We might even win.\"\n\n\"Yeah, but I'm not sure if it would be worth it.\" The sweaters showed a reindeer, head on my sweater, back end on his, with explosive diarrhea and upchuck of tinsel, presents and ornaments. It was truly ugly.\n\nI laughed as we worked together to dress the kids, they had T-shirts that made them look like Santa's elves. They were going to go into the nursery with the other young ones; that place was like a dog park, they just ran and ran until they collapsed in a corner and fell asleep in a pile. We had it so easy as parents, with all the help we only had to make sure they got fed and put in bed at night. Everything else the ladies at the nursery took care of.\n\nWe walked down the stairs, marveling at the decorations in the big room, covered porch and beach. Christmas had a tropical feeling, with lights in the palm trees complementing the Tiki lamps. I saw Craig and Ella just outside the door, so we walked over to say hi. I had to say, she wasn't making the competition easy.\n\n\"How, uh, fitting,\" I said as I looked at the stuffed animal shark sticking out the front, Santa mostly eaten with his legs sticking out. Craig wasn't much better...he must like Christmas Vacation.\n\nShe laughed. \"Yeah, and I made it lighter in weight. I had to do something memorable, have you seen what Renee has on yet?\" She pointed over to her best friend and fellow Alpha, who was watching her kids play.\n\n\"No, but I'm heading that way.\" I was afraid, very afraid. I figured she HAD to be the winner with that sweater. \"Oh... My.... GAWD! That's just WRONG!\"\n\nShe laughed at me as she turned around, the snowmen on each breast having huge carrots poking out from her nipples. She looked like a deviant stripper.\n\n\"I had to set the standard,\" she said. \"I've had this for nine months, just waiting for the right time to bust it out.\" We both laughed as she turned, you could poke an eye out with those things. \"Just be glad I'm one of the judges, so I'm not in the contest.\"\n\nWilliam and Melody walked up with their matched set. \"I see we weren't the only ones to coordinate,\" Melody said, \"but I can't compete with you two.\" They wore matching Griswald Christmas sweaters.\n\n\"Oh my, your baby is SOOOO cute!\" I moved over to look at their month-old daughter, her skin a milk chocolate color and her eyes matched Melody's. She was wearing a baby outfit that was particularly fitting, one that said 'Baby's First Christmas Sweater Party.'\n\n\"Thanks. I'm hoping to win the under two division.\" We brought our babies over and checked them in, then headed back towards the house.\n\nThe party went on for hours, and it was a blast. We ate way too much, laughed so hard my stomach hurt, and made it to the finals of the sweater contest. The female winner, Alpha Linda Miller, won in a runaway with a sweater that was a veritable explosion of bad taste. It looked like the Pink Panther surrounded in tinsel crime scene tape and lights. The male winner? Carl Smith. It takes a special kind of crazy to wear a suit that looked like bad wrapping paper to a tropical party, and that hacker could pull it off.\n\nAfter the awards were presented, our hosts Craig and Ella had champagne and sparkling cider glasses handed out for a toast. Ella stood on a chair and raised her glass. \"My friends and family, thank you all for coming. These gatherings are so important, not just to me, but to all of our Packs. I remember when I was a little girl and we would visit my aunt and uncle, Doug and Remi, every Christmas. Back in the days before Facebook, cell phones and private jets, this was the one time each year we would all see each other. It was how we built strong ties, ties that carried us through the dark days of the war to where we are now.\" She paused and gathered herself, but tears were starting to leak down. \"The last time we had an Ugly Christmas Sweater contest, we had two Packs and over five hundred members. Today, we are about half that, with members of six Packs represented. It was an inconceivable loss, one we will take decades to recover from.\" She raised her glass. \"To those who didn't make it,\" she said.",
        "After we took a drink, Craig helped her down then stood on the chair himself. \"A little over a year ago, the war ended, and we started working together. We changed laws, defeated not just one but TWO cartels, and ended a threat that would have thrown us back into war again. We have emerged stronger, our Packs growing, our alliances and Packs the model for the new age. Thank you, and may Luna continue to bless us as we return to our homes.\" We all toasted that, then people started to head back home. The young ones moved their party to their compound, where the loud music and dancing wouldn't bother the \"old folks and Alphas\" or something.\n\nWe collected our sleeping babies and went back upstairs, sleeping deeply in the tropical breezes.\n\nThe next morning, we gathered for a Pack run. Another tradition of Christmas from before the war, it helped to build stronger bonds and was just plain fun. The cat shifters, most of us who detested distance running, volunteered to escort the young ones on a much shorter tour. The wolf shifters, led by Alpha Craig, would take the group on a long run around the island.\n\nWe had a dozen cats, surrounding the group of little ones, as Craig howled to start the hunt. The wolves tore off along the wide trail, their howls and barks leaving us far behind as we set off at a slow pace. The kids were so cute, they hopped more than ran, and their feet were so big they would stumble in the brush. Most hadn't been in the jungle before, so every smell was investigated, every leaf checked, every tree sniffed and sometimes marked by the young males. We kept a ring around them, making sure none get lost as we made our way towards the spring-fed creek.\n\nI rubbed up against Ella's panther as I moved to join Gunny, who was scouting the trail ahead of us. She rubbed her head on my shoulder as I passed, letting me know that she would watch my children. I raced ahead, playfully jumping on Gunny's back as I reached him. He stumbled, then twisted his body to make me slide off. We play wrestled until he had me pinned, which gave my cat all kinds of other thoughts we couldn't act on now.\n\nI could hear the roars of the cats and howls of the younger wolves as they made their way back from their shortened run. I raised my nose, scenting them just before I heard them.\n\nBoars. Rampaging boars. Led by a huge sow that went over five hundred pounds, the group included a dozen or so very dangerous animals with sharp teeth and long tusks.\n\nThey were charging away from the other group, heading almost right towards us from our front right. The group appeared in the trees, maybe thirty of them, running hard. I roared a warning, causing them to shift away from me, but it sent them towards the house and... \"THE CHILDREN!\" I yelled through the link as Gunny and I ran hard after them. \"PROTECT THE CHILDREN!\"\n\nI could hear the roars and snarls from up ahead, mixing with the grunts of the boars. Gunny was just ahead of me as we broke through into a small clearing. It was a worst-case scenario; the panicked pigs had charged right into the group of cat shifters, and they were out for blood. I could see one panther and three boars on the ground, and more were fighting. The big sow was trying to attack a Siberian Tiger, who was leading her away from the others. A male tiger was blocking her return.\n\nGunny ran straight for the biggest one, as she was the biggest threat. He leaped onto her back from twenty feet away, his claws digging deep as he clamped down on the fat neck. She grunted, trying to get her tusks around to his chest. The tigers took advantage of the distraction and went for her neck and legs.\n\nI saw a brown-colored pig moving towards the babies, who had all been gathered in the brush by Minka, Keisha and Kendra. Leaping on its back, I pulled it to the ground and ripped its throat out. I felt a sharp pain in my side and was knocked onto my back. The boar charged me, just to be knocked off by Al. Together we got it to the ground and killed it.\n\nThen it was silent.\n\nI collapsed onto the ground, the blood gushing out of my side. \"The babies,\" I sent to Gunny before I blacked out.\n\nGunny's POV\n\nI raised my head, frantically searching for Rose. I had felt her pain as if it was my own, it knocked me to the ground. Shifting, I ran over to where she lay, blood spraying out of her side. \"ROSE!\" He eyes rolled back and she passed out.\n\n\"MOVE ASIDE,\" Minka said as he knelt next to me. She shifted a finger into a razor-sharp claw, opening the wound until he could get her small hand in. She moved it around until she smiled. \"Got it. Pick her up, we've got to get her back home NOW.\"\n\nI lifted her into my arms, Minka laying naked on top of her with her hand still inside. \"Bring the injured back, the children when they are ready,\" I sent to Kelsey and Keisha. I started to run, praying to Luna that she wouldn't be taken from me.\n\nDoc Jennings and her nurse were waiting for us as we arrived. Julia had me bring Rose into the operating room and set her down. \"How long have you been holding the artery?\"\n\n\"Five hundred twenty-two seconds,\" Minka said.\n\n\"All right, keep hold until I'm ready.\" She got a large-bore IV in and started pushing whole blood, then a second with an IV. Her clamp ready, lights focused on the wound, and told Minka to remove her hand.\n\nBlood sprayed into the room for a few seconds until she got the clamp over the artery. Working quickly, she found the other end of the severed tube and clamped it. She suctioned out the wound, then used sutures to sew them together. It took a few minutes to finish the delicate stitching before she was able to remove the clamps and restart flow.\n\nI let out a deep breath, the monitors showed a good pulse. She took another fifteen minutes to stich her up before she allowed me to move her to a bed. \"She'll be out for a few hours.\"\n\n\"The babies?\"\n\n\"They are fine, we're monitoring them, but they aren't in distress. The wound wasn't near them and you kept her from losing too much blood. You should go clean up and go to your children,\" she said as she pulled off the soiled surgical garments.\n\nI walked out of the room to the hallway, where Minka and the other cats were waiting. I pulled the small girl into a hug. \"She'll recover, thanks to you,\" I said as I let the tears go. I looked up. \"Who else got hurt?\"\n\n\"Olivia Harris, her leg was bitten pretty good, but she's already back in her room. The rest was cuts and bruises,\" Doc Terry said.\n\n\"Thank Luna,\" I said. \"The children?\"\n\n\"All fine, just scared. We took them back to the beach, they're being watched and fed,\" Kelsey said. \"The rest of the Pack will be here soon. Craig knows about the attack, they are going to sweep this end of the island and make sure there aren't more nearby.\"\n\n\"Make sure they butcher and bring back those pigs, that sow alone will feed us for a few days,\" I said. \"By Luna, she was huge. Nice job on the takedown, Tatiana. You too, Scott.\" The young man was still shaking a little. I expected he didn't think his first kill would take place under such circumstances. \"You did what your training and instincts directed, and you survived. The adrenaline will burn off soon. Just focus on your breathing.\"\n\nHe nodded, and I gripped his shoulder as I walked out. I had to see my babies.\n\nI ran to the play area, opening the fence, and laid down while they clambered over me and I hugged them tight.\n\nAll I cared about, all I needed, was on this island right now."
    ],
    "authorname": "partwolf",
    "tags": [
        "werewolf",
        "werecat",
        "panther",
        "wolf",
        "pack",
        "mates"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/rose-ch-68-74"
}