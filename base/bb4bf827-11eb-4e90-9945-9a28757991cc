{
    "title": "Leave Me Breathless",
    "pages": [
        "Hey folks, I know the past two weeks have been a murder fest, but sometimes fictitious people have to die. I promise you that there will be no fictitious deaths in this story, so those of you who can't stand it when imaginary people die are safe. I did borrow the results of the car accident from one of my favorite classic LW stories. Those of you who've been around the block a time or two will probably recognize it. Thanks as usual to Mikothebaby for editing this story despite the fact that she's very busy right now and also undergoing a family issue. Thanks also to my beautiful wife for driving me crazy playing this song over and over again until I had to write a story about it. So I included her in the story. For those of you who don't know it AlleyKat's real name is Helen. And thanks most of all to all of you who come here every week and read these things. \n\n* * * * * *\n\nMy name is Melinda Carson. My friends, for some reason, just call me Linda. My daddy calls me Kit and he's...Hold on for a second, I have to do something. \n\n\"Shut the hell up Mother. If you don't stop that God damned crying right now, I'll have the ushers walk you out of here. This is a happy occasion. Didn't you notice that everyone here is smiling?\" I hissed at the woman sitting only a few inches away from where I'm standing.\n\n\"But this shouldn't be happening,\" she whines through her tears. She looks at me for sympathy and finds none.\n\n\"Mother, everyone in town is here and having a great time. You, more than anyone else in town, are responsible for this and the party that's going to come next. So suck it up and try to enjoy it,\" I hiss again. Luckily for me, my voice isn't carrying very far. I just smile and wave to the two or three people who notice our exchange. Everyone else has their eyes riveted to the back of the church.\n\nAnyway, as I was about to say, my daddy is the only person who can get away with calling me Kit. Shit, I've lost my train of thought. I have no idea of what I was about to tell you. Okay, I guess the story is over. \n\nNo, you're not getting off that easily, but since I don't remember where I was, we should probably start at the beginning.\n\nAbout one year ago I was walking into my house after school. I had to decide on an outfit to wear to my school's harvest festival dance. The harvest festival was a big deal because it was the only outdoor dinner and dance we had. We live in California and our weather is moderate. We don't get the wild storms that they get during the fall along the coast and we don't get the mudslides they get near the mountains. We're lucky enough that in October and November, the temperatures are still mild enough to have an outdoor dance.\n\nThe evening air is a bit chilly, but a light jacket or wrap is sufficient. I needed just the right outfit. Although I'm not a cheerleader, I'm pretty popular, so I have to make a good impression. I don't have to worry about finding a date or impressing anyone because I'd had the same boyfriend since my sophomore year. With him being a PK, that's preacher's kid, he's pretty moral. We concentrate more on having fun than having sex. My goal, drummed into me by my mom since I was old enough to understand her, was that I should go to the altar a virgin, but have my husband wake up tired and sore the day after the wedding. I intended to do more than that. I was going to have Dean wake up scared.\n\nPart of the reason for my popularity is my brains. I've made the national honor society every year of high school and except for my freshman year, I've had a 4.0. During my freshman year, I got a C in gym. I'd never been very athletic. That year, as usual, my dad came to my rescue. During the summer, he started me running with him every morning. When I went back to school, all of those stupid things I had to do for an A became very easy.\n\nAfter we ran, Dad and I worked on the machines in his home gym. Without my knowledge, my body changed over that summer. I got a lot stronger but I also slimmed down in some key areas as well. I think it was the bench presses, but my boobs got bigger over the summer. My skinny legs and butt not only got bigger but got a better shape as well. And the changes weren't only cosmetic. I was much stronger and much more coordinated. The first day in gym was a day that I dreaded. It was the day when they did the assessments. The assessments were designed to see where you placed on a national scale for fitness. It was based on how many pushups, sit-ups and chin ups you could do. There was also a rope climb and finally the mile run. It usually took our first week of school to get everyone through the assessment.\n\nMy freshman year, I'd done terrible. And when the assessment was done again the last week of school, I needed to show significant improvement in fitness and I hadn't. So they gave me a \"C.\"\n\nMy dad had looked at my report card and hadn't said a word. He just hugged me and told me he was proud of me. I thought that he'd have been a bit upset but he clearly wasn't.\n\nWhen we started running together, he'd just proposed it as a fun way for us to spend more time together. And being a daddy's girl, I was all for it. He was very subtle. We slowly increased our distance and the length of our runs. We talked as we ran and we laughed and joked. I could tell my daddy anything.\n\nWhen he started talking about us going on vacation at the end of a run one day, I followed him into the gym, and it just seemed natural to start doing curls with him. In fact, it took me a while to realize that he'd planned it. There was already a dumb bell with very light weights on it next to his heavier one. Before I knew it, I was doing a whole workout with him and we'd go out for, or just have breakfast together before we started our day. He didn't make it seem like a big deal. It's not like I was ever over weight, I was just out of shape and he gently nudged me into becoming more fit.\n\nThe first thing I noticed when I returned to school after that summer, was that there were a lot of people, both male and female, staring at me in my gym-wear.\n\n\"What the hell happened to you over the summer?\" asked Becky Thatcher. Becky's been my best friend since birth and lives around the corner from me. Since both of my parent's work, as did hers, we met in daycare.\n\n\"Did you like take supermodel classes or something?\" she asked. \"Did you get implants?\"\n\n\"Nope,\" I smiled.\n\n\"What the hell did you do?\" she asked.\n\n\"I just hung out with my dad,\" I said. \"I did get my hair streaked and highlighted though, maybe that's it.\"\n\nThe previous year I'd been able to do eight girl type pushups and twenty sit-ups. I'd nearly vomited afterward. I continued talking to Becky during my turn. I knocked out twenty five pushups and noticed that everyone was staring at me as I moved to the next station to do my sit-ups.\n\nThe gym teacher ran over to me and asked me who I was. Even Becky was staring at me.\n\n\"Linda, you did twenty five pushups,\" she said incredulously.\n\n\"I should have shut up while I was doing them,\" I said. \"I probably could have done more. I wasn't really paying attention.\"\n\n\"Linda, you did boys pushups,\" she said. \"Except for the jocks and some cheerleaders, no one was even close to what you did.\"\n\nBefore the time ran out, the teacher told me to stop doing sit-ups. \"You only needed to do fifty to max out the scale,\" he said.\n\nThe previous year I hadn't been able to do one chin up. I had to do what they called, \"the hang.\"\n\nIn the hang, you pull yourself up and you hang there with your chin above the bar for as long as you can. They'd had to lift me into position because I couldn't pull myself up. I was only able to hang for about two seconds.\n\nThis year, I went right after Big Mill. Millburn Drysdale, Big Mill, was the center of our football team. Big Mill weighed over two hundred pounds in high school. Because of all of that weight, it was difficult for him to pull himself up. But he was as strong as an ox and grunted out eleven chin-ups.\n\nI jumped up on the bar and did twelve. When my feet hit the floor, a gasp went through the gym. My dad had me doing multiple sets of chin-ups with a weight belt around my waist. Our reward system got me a donut or a treat every time I beat my previous best. The second and third sets were the tough ones. I was used to doing eight chin-ups with twenty five pounds strapped to my waist. Doing only one set of twelve with no additional weight was hardly a challenge.\n\nThat was the end of the first day in gym class. Everyone was already talking about me. Boys who never paid me any attention before were buzzing around us. Becky loved the attention. We still sat at the table with the same people we always did. I already knew what I wanted to do with my life so being around smart people was a good thing. I like to think that I never changed throughout high school. But my sophomore year, the way other people saw me changed. It was still that way last year in my senior year.\n\nAs I said, I was trying to find the perfect outfit and I was home early. My English teacher was sick and they had no substitute. Since English was my last class, they let us out early. As I walked through the house, I heard the sounds of moaning coming from my parent's bedroom. I didn't think about it. I was eighteen years old. I knew what sex was although I'd never done it. I knew that it was healthy for my parents to do it and I didn't fault them for it.\n\nI knocked on their door and told them that when they were done, I needed some help with something. My mom always gave me advice on fashion. Dad always gave me a guy's opinion on how I looked.\n\n\"Dad, where's the Mustang?\" I asked. My dad never went anywhere without that car. And he never put it in the shop without whining to me about how much he was going to miss it.\n\nSuddenly my memory jumped its track. I remembered hearing my mother's voice moaning but not my dad's. I pushed the door open and anger ripped through me. I saw my mother hurriedly trying to get her clothes on and the principal of my high school pulling his pants up.\n\n\"You fucking whore,\" I screamed at my mother. \"And you Mr. Eddington, my father is going to kick your ass. When this all comes out you'll be looking for a new job.\"\n\nI slammed the door closed and ran out of the house. Before I'd gone a block, my phone started ringing. I looked at the display and saw that it was my mother. I pressed the button to answer the call and then immediately hung up on her. I went to Becky's house. I hung out with Becky that afternoon and stayed with her until I was sure that my dad was home.\n\nAs I walked up the driveway, I saw his Mustang. The big chromed exhaust pipes, chrome rims and racing stripes made the car look far more evil than it was. I guess we all see things differently. My dad looked at the car and saw beauty. I looked at it and it just looked angry, with vanes and scoops and wings. And the sound it made. That car was fucking loud. But to my dad, the sound of those pipes was like music.\n\nI used my key and walked in the door. My mother immediately looked nervous as soon as I stepped inside the door.\n\n\"Hey Kit,\" said my dad smiling. He came over and hugged me like he always did. My dad squeezes me so hard that I can feel the love oozing out of him.\n\n\"Are you okay, kitten?\" he asked.\n\n\"It's been a rough day, Dad,\" I began. \"You know how you go through life thinking that you can count on some people and they just turn out to be full of it?\" My mom blanched at my words.\n\n\"Melinda, can I...\" she began. I snapped my head around and glared at her. My dad didn't notice the exchange.\n\n\"Dad, there are some things that we need to talk about,\" I said.\n\n\"Sure, Kit,\" he said. \"Do you want to wait until after dinner or should we do it now?\"\n\n\"After dinner is fine Daddy,\" I said. My dad had a way of always keeping things in perspective. No matter what the problem was he made me feel safe and secure. Other people felt that way about him too. My dad was an automotive engineer. He solved problems for a living. He just had a way of looking at things from a different angle.\n\n\"Great,\" he said. \"I want to put my tuner on the car. I think I'm going to dial down the horsepower and throttle response a bit. My gas mileage was never great but it really sucks right now.\"\n\n\"You go and play with your car, Honey,\" said my mom. \"Melinda and I will get dinner on the table.\" She grabbed my arm and pulled me into the kitchen after kissing my dad. Just seeing her put her lips on him made me sick after what I'd seen.\n\n\"Melinda, Honey...\" she began.\n\n\"I know you're supposed to be my mother, but take your fucking hands off of me, right now,\" I hissed. \"Don't ever touch me again.\"\n\n\"Melinda, you have to let me explain this,\" she said.\n\n\"Explain what?\" I spat. \"For my entire life you've been giving me nothing but bullshit. You and daddy have been like on and off switches. Daddy has always told me that I can do anything I put my mind to. If I want to be on the student council, he'd say, \"Go for it.\" You told me that a lot of people ran but they only pick six so the odds weren't good. You told me I shouldn't run for home coming queen because they always give it to a cheerleader. Daddy gave me a necklace that said I was his homecoming queen before the election even started. When I won, he asked me if I'd ever had any doubt. You were shocked. You've never believed in me Mother.\"\n\n\"You've constantly told me everything not to do. You've filled my head with everything I can't do or shouldn't do. Melinda, your skirt is too short. Melinda, nice girls don't do that. Melinda, people will think you're a slut if you wear that. When I decided to go into pre-law in college because I decided that I want to be a prosecutor and help to bring criminals who hurt other people to justice, what did you tell me? You said, Melinda, that's not something a girl should do. It just seems like all you've ever wanted to do is to piss on my dreams, Mother.\"\n\n\"Watch your language, young lady,\" she said. \"I'm still your...\"\n\n\"My what?\" I asked. \"Are you still my shining example of what a woman should be? I don't think you are unless what everyone woman should be is a cheating whore. Daddy deserves someone who loves him and is faithful to him. Oh wait, isn't that the same bullshit you've been giving me since I was old enough to think about boys? If you can't walk the walk, maybe you shouldn't talk the talk.\"\n\n\"But Melinda, I love your father. This was only a slip. I made one mistake. I'm human baby. Please give me one chance. It will never happen again,\" she whined.\n\n\"Mother, mistakes happen on a spur of the moment or while you're drunk. This was premeditated and has probably happened before. You don't accidentally bring a man home and screw him in my father's bed. It's also someone you work with every day. He's also married and has small children at home. You ruined two families because you can't keep your legs closed.\"\n\n\"Melinda, I'm sorry,\" she said. \"Please don't do this. It would hurt your father and tear our family apart for nothing. You just said it. Why ruin two families to punish me? Do you want to see your father hurt?\"\n\n\"Pick up that God damned phone and call the asshole and tell him that as of right now, you quit. Find another job somewhere else if you have to, but if you go back to the school for any reason, I'll tell Daddy immediately. Give me your cell phone, if that asshole calls you, I'll be the one answering. And Mother, I'll be checking the phone records for the house as soon as the bills come in from now on. If you call him even one time, you know what will happen. And from now on don't talk to me, period. As far as I'm concerned, you died today. I'm an orphan. I want you to convince my daddy to sleep in the guest room tonight and don't have sex with him.\n\nTomorrow, I want you to get a new bed and burn that one. Tell him it had frame rot or bedbugs or something. I don't care what but you'd better make it happen.\"\n\n\"But Melinda, your father will notice if we don't act the same way we always have. And this is your senior year. A lot of things are about to happen to you. There are going to be cases where you'll need a woman's opinion or advice. I know you're a daddy's girl, you always have been, but you need a mom too,\" she said.\n\n\"I'll find someone, I can trust and look up to, to fill the role,\" I hissed. \"Remember what I said.\"\n\nI turned and left the kitchen. I went and got her purse and handed it to her. \"Melinda, can't I call him on my phone?\" she asked.\n\n\"No, because I'll have your phone; hand it over,\" I said. She gave me her sleek iPhone.\n\n\"I should make you call him at home,\" I said. \"That way his wife would probably answer the phone and you'd have to ask her if you could speak to him. You'd have to listen to the sounds of his kids playing in the background. Maybe that would make you realize just how nasty a bitch you are.\"\n\n\"Melinda, do you have to use that kind of language?\" she asked in a whining tone.\n\n\"Yes I do, Theresa,\" I said. \"You once told me that being a lady, isn't just knowing how to curtsy and use the right fork. Being a lady means doing, acting and speaking in the correct manner for the situation. Do you remember that?\" She nodded her head.\n\n\"Well, when I'm with a person who has no morals and no class and has the nerve to cheat on someone who loves her very deeply, this is the language that fits the situation. Besides, you and I won't be talking much from now on. And once I go away to college next fall, we'll only have to see each other when I'm home visiting my dad. I have one more request for you, MOM,\" I said. She looked at me pleadingly.\n\n\"This is for the future. From now on whenever there's a big event in my life, I want you to manage to be sick, injured or just unavailable. That means I don't want you at my graduation. I don't want you at my college graduation either. I don't want you at my wedding and if I ever have kids, I expect you not to be there. Are we clear?\" I asked. She nodded. \"Call him.\"\n\nShe picked up the house phone and dialed Eddington's number. \"I have to quit my job,\" she said. \"As of right now, you need another secretary. I won't be back at all. Have someone pack my personal things and send them to me. That someone is not to be you. Mail my last check or direct deposit it. Don't call me again or Melinda will tell my husband and your family. Goodbye.\"\n\n\"Well done Theresa,\" I said. \"Did it hurt?\"\n\n\"Did what hurt?\" she asked.\n\n\"Telling your lover you could no longer see him?\" I asked. \"Does it tug at your heartstrings? Do you feel that empty feeling in the pit of your stomach?\"\n\n\"No, Melinda,\" she said sadly. \"I don't love Russell. I only love your father. Russell was just...\"\n\n\"Shut up, whore,\" I spat. \"If you loved my Daddy, you wouldn't...\"\n\n\"Melinda, you're very young right now,\" she said. \"Someday you'll understand that...\"\n\n\"I hope I never understand anything the way you see it,\" I said acidly. \"I will never understand how a woman who is married to a man who loves her totally can cheat on him with a man like Mr. Eddington. Do you even know half of the rumors about him? I mean you're clearly stupid, but are you THAT stupid? Mother, you're nowhere near the first woman or even the first woman in our school he's played around with. You're just the latest. I'll bet you he finds someone else to play with in under a week. While you're here at home playing with your pussy, thinking about him, he'll have found another sucker.\"\n\nI put her phone into my pocket and walked out of the room. I went into the garage to see my dad. He had the hood up on his Mustang and had his tuner connected to the port on his engine. His new tuner could wirelessly send information to his iPad. Men were like little boys with their toys. As they grew older, the toys just got more complicated and more expensive.",
        "There were three of our neighbors all gathered around with their heads under the hood of Daddy's car too. As I stepped up and watched him, he saw me and smiled.\n\n\"Is dinner ready?\" he asked.\n\n\"No Daddy, \"I said. \"Take your time.\" As much as a full grown man can be innocent, my daddy was. He seemed to be happy. He loved his life. As he joked and talked with our neighbors, I felt like such an asshole for even thinking about taking that happiness away from him. He worked so damned hard to give us a nice life. Mom had only started working a couple of years ago, when I became old enough to look after myself. She had no secretarial skills and became a volunteer at my high school. They'd eventually started paying her as she took on more responsibility, finally becoming Eddington's secretary.\n\nI decided then, not for my mom or for Eddington, but for my dad's happiness, not to say anything. I wasn't sure that I wasn't making a mistake but it seemed like the right call at the time.\n\nWhen I got to school the next day, it started out great. Midway through my first class I was called to the principal's office. My great day started going to hell.\n\nI opened the door to Eddington's office. There was no secretary because my mom had quit.\n\n\"Come in and close the door, Melinda,\" he said.\n\n\"I'd rather leave it open,\" I told him.\n\n\"Well, can you just pull it shut,\" he said. \"What we need to talk about needs to remain confidential.\"\n\n\"You and I have nothing to talk about,\" I said.\n\n\"Melinda, what about your future,\" he said. \"The colleges that you've applied to are still going to be interested in your grades. If your GPA happened to drop suddenly, you might lose a few of your choices.\"\n\n\"How would that happen, Mr. Eddington?\" I asked.\n\n\"Some of your teachers might suddenly start to look at your work more critically,\" he said smiling.\n\n\"I suppose that you have some possible solution to that problem worked out, right?\" I said. He nodded.\n\n\"Melinda, what happened between your mother and I was unfortunate, but it doesn't have to ruin your career or anything else. We can just...\" I turned around and slammed the door to his office so loud they probably heard it in the gym.\n\nHis eyes got huge. \"Who the fuck, are you supposed to be...?\" I yelled. \"Are you Darth Vader? Is this some warning that the Death star is coming into position to blow my home world to smithereens?\"\n\n\"Look Dick-less, this is the twenty-first century. No one falls for those dime store theatrics anymore. Is that how you got between my mother's legs? I'm not as stupid as she must be. I've had a four point GPA every year that I've been here except for my freshman year. Do you know how I got my grades? I busted my ass. No one gave me anything. If my grades did just start to suffer, I'd go to my teachers with a copy of my papers and ask for a review. They'd have to show me where my papers were wrong and examples of everyone who got them right. The second thing is that most of my teachers like me more than they like you so they wouldn't go along with your crap. The third thing is that you just made an even bigger fool of yourself, because of this...\" I pulled my new iPhone out of my pocket and played back his threat for him. His eyes got even bigger and he slumped in his chair.\n\n\"So now I have evidence of you trying to coerce me into being quiet or you'll try to convince teachers to mess around with my grades. I believe that is illegal isn't it?\" He nodded his head.\n\n\"So, it's not bad enough that you've been some kind of cut-rate Casanova around here for the past few years, now you're stooping to blackmailing children to cover up your affairs. Which one are you the most afraid of Russell?\" I asked.\n\n\"That's Mr. Eddington to you Melinda,\" he whined.\n\n\"Mr. is a title or a term of respect,\" I spat. \"I have none for you Russell. I hold your shitty little life and career in my hands. And you know what the stupidest thing about this is?\" He shook his head.\n\n\"Before you interrupted my science class, I had already agreed with my mother NOT to tell my dad or your wife about this. So which one are you the most afraid of? Are you more afraid of my dad kicking your ass or losing your career? You think about it, I'm going back to class.\"\n\nI walked out into the hall still seething and bumped into my favorite teacher, Ms. Abra.\n\n\"Are you okay Melinda?\" she asked. And everything became clear as I looked into her eyes.\n\nMs. Abra was a near legend in our school. All of the boys and all of the men drooled over her. I remember more than once seeing a guy walk down the hall and get a glimpse of her and then end up walking into a wall or a door.\n\nAbout half of the girls in the school hated her. It was simply unfair. You have all of these young women on the verge of adulthood, like fruit on the vine that is just becoming ripe. Most of them realize then that they've hit the point in their lifetime when they're at their best. Time and gravity are their best friends. Then they run into a woman like Ms. Abra who makes them look like awkward, coltish, little boys.\n\nAnd when you take a good look at her, your feelings of despair become even deeper. One of the things that most girls learn very early is that we're all different. We all have things about us that are noteworthy. We learn to play up our strong points and to downplay our weaknesses. So if you're a girl who's a butter-face, you know to wear sexier clothing to play up your body and downplay your face. You might also grow your hair longer and have it styled playfully to cover one odd eye or the other.\n\nIf you have no boobs, you probably have a nice ass or gorgeous legs, so you don't wear a bra, and you wear shorter skirts to play up what you have. If you don't have much ass or legs, it's no problem. You wear low cut tops, and show off the girls.\n\nIf you're the skinny model type with no butt, no chest and no legs, then you highlight your face. The point is that God gives us all something. The trick is to discover what you were given and do something with it.\n\nThen along comes Ms. Abra to ruin it all. Let's start at the top. The woman is simply unfair. She has what I call reactive hair. Her hair is a light brown naturally. She told me that when she was growing up, they used to call it mousy brown, because it was so understated and mousy. The women who had it didn't stand out. It was neither a rich, sexy, dark brown that could be called smoldering, nor was it even vaguely blonde.\n\nIn Ms. Abra's case, her hair reacts to the sun. If there's a lot of sun, it only takes a few days and some of her hair starts turning a lighter shade. It looks amazing. Everyone always thinks that her hair has been highlighted. If she wears a pony tail or styles her hair so that some of it isn't exposed to the sun, then those areas seem to darken and before you know it she has two or three very natural hues blended into her hair. Half of the women I know spend a lot of money trying to get a look that she doesn't even think about. Her hair comes down nearly to her waist and it flits around like the wings of a butterfly.\n\nAnd all that hair does is to draw attention to her face. Her face is as beautiful as the rest of her. She has the bluest eyes. When she talks about math, the worst thing you can do is to look at her. I've heard a lot of the boys say that they were looking at her and just fell into a trance. Her eyes are so blue that you just forget where you are. I wish that she had a huge honker of a nose but her nose is so tiny that it's like a decoration on her face.\n\nAnd she does the stupidest thing. She has what she considers a flaw. She has a bunch of tiny nearly symmetrical patches of freckles across her nose. She covers them up with very light make-up because she hates them. Then when we have an outdoor activity and she doesn't wear the make-up, all of the guys see the freckles and fall even more in love with her.\n\nI absolutely hate her mouth. At this point in history, we seem to be enthralled with lips. There are women all over the world getting collagen injections to make their lips fatter and fuller. Then there are women who were simply born with huge lips.\n\nMs. Abra has a tiny mouth. But it's shaped in that perfect Cupid's bow form that makes it look like her lips are bigger than they are. Her teeth are also really white and she smiles often. Her smiles are fleeting though, so if something happens that makes her smile in class, the entire room seems to get warmer.\n\nIf her head and face are outstanding, her body is scary. All of the pieces simply shouldn't add up to the whole. She doesn't have huge boobs, but it doesn't matter. In fact, last year we had a pool party for the senior class. I forgot my swimsuit and Ms. Abra told me that since she was only a chaperone, I could borrow hers. She said it made more sense for the students to have fun than for the staff. I was sure that I wouldn't be able to fill her top. Then I noticed that it was only a 34 C top. At 18 last year I wore a 36C top. Her boobs aren't big at all. But her ribcage and torso are so tiny that her average sized boobs look big on her.\n\nHer waist is also tiny. It's like 23 inches which makes her butt look bigger than it is and she runs every day like my dad does so her legs are scary.\n\nMs. Abra does have a few quirks. The woman teaches math and science. She walks around all day long in a lab coat covering up her body. She also wears very long skirts and blouses that button up to the neck. She also wears those dorky safety glasses all the time, like she forgets that she's wearing them. It's like she simply doesn't realize how pretty she is.\n\nThe worst thing about her is that she is simply the nicest person you'd ever want to meet. She spends extra time with all of her students and really tries to make sure that we understand how useful math and science are for our future careers.\n\nI think she has a soft spot for the nerdy, unassuming types though. You often see her stand there smiling at one of those socially inept, yet very smart guys, but she doesn't take any crap from the guys on the team. She has benched them academically more times than anyone wants to remember.\n\nWhen the coach comes storming into her lab, pissed because one of his players has dropped his average in her class to the point that he is on probation and can't play, she refuses to give him any opportunity that she wouldn't give anyone else.\n\nWhile we're talking about the coach, he put the full court press on Ms. Abra a couple of years ago. He was rebuffed strongly. She let him know that she was not interested in him in any way shape or form. She went as far as taking her name off of the list to chaperone any extra-curricular event that he worked on.\n\nSeveral other teachers have taken their shots at her too. She simply doesn't seem to want to date anyone. The coach started telling everyone that he knew when she wasn't interested in him that she was a lesbian.\n\nMy mom once told me that she'd heard from one of the other science teachers that Ms. Abra had actually been married once. Abra was her married name. Her maiden name was Troy. Her husband had been her childhood sweetheart. He went into the military and was killed in a training accident. The worst thing about it was that he didn't even get to actually serve his country although everyone who enlists makes us proud. To her, it just seemed like the world's biggest waste of a life that her husband was killed practicing a logistics procedure.\n\nHe'd actually wanted to work for the same company her father did and he'd felt that getting experience in helping the military transport equipment and resources around the globe would be valuable experience. He also assured her that all he was doing was basically shipping and receiving. He was and would remain as far from the bombs and bullets as possible.\n\nA soldier who was unfamiliar with driving a forklift backed into a rack of cases of heavy shells. The entire shelf collapsed. The cases were so heavy that they bent the safety cage that protected the forklift operator. He escaped serious injury, but her husband was crushed beneath literally tons of metal.\n\n\"Are you okay Melinda?\" she asked, seeing me storming out of Eddington's office.\n\n\"Yes ma'am. I'm fine,\" I said. \"He gets on my nerves though.\"\n\n\"Trust me,\" she smiled, exposing those too white teeth. \"I know the feeling. I never expected to see you coming out of the principal's office though. I hope you're not in trouble.\"\n\n\"No ma'am,\" I said. \"But now that you mention it, I could use some advice. You know some female wisdom from one generation to the other about fashion and style.\"\n\n\"So you need me to find someone to give you fashion advice?\" she said. \"Well, I suppose we could ask Sandy. You know Mrs. D'alaqua? She knows all about Paris fashions and that type of thing. She also watches all of those TV shows about style and models.\"\n\nSee what I mean. The woman has no idea how pretty she is. She wanted to help me out by asking another woman who wasn't nearly as pretty as she was.\n\n\"Ms. Abra,\" I said. \"I wanted some advice from you.\"\n\n\"Me?\" she smiled. \"But you're way prettier than I am. I wouldn't know what to even begin to tell you. Now if you needed help with math, which you never have, then...\"\n\n\"You're the perfect person to help me,\" I said.\n\n\"Well, okay,\" she smiled. \"I'll do what I can, but you have to help me too.\"\n\n\"What do you need ma'am?\" I asked.\n\n\"The freshman and sophomore classes are not signing up for the nature hike,\" she frowned. \"I guess they don't see science as being very exciting. They tend to want to do everything on a computer. To them, running around in the woods isn't very much fun. Melinda, you're very popular and maybe if you let people know that you were coming, I'd have more volunteers,\" she said shyly.\n\nGod that woman was crazy. All she had to do was take off that lab coat and those ridiculous glasses and make an announcement and every guy in the school would show up. If the guys showed up, the girls would too. The problem was that the newer students hadn't learned how hot she was yet.\n\n\"Not only will I tell people,\" I said. \"I'll be there. Is it okay if I bring a friend?\"\n\n\"Of course,\" she said smiling. \"The more the merrier. I need as many people tramping through the woods bringing me specimens as possible.\"\n\nI went back to class that day and when I got home after school, had to deal with my mother again.\n\n\"Hello Honey,\" she said smiling. I looked at her like she was crazy. I was eighteen years old and she greeted me at the door with a plate of milk and cookies.\n\n\"Hello Theresa,\" I said acidly. \"I thought that it was understood that we wouldn't be speaking to each other.\"\n\n\"Melinda, that's silly,\" she said. \"We're family. They pulled you out of my womb. You're a part of me. So we have to at least make an effort to get along.\"\n\n\"Theresa, have you ever heard the expression, \"You can't go home again?\" I asked. She nodded her head in confusion.\n\n\"What does that have to do with us?\" she asked.\n\n\"Well, you know how people are born in a certain neighborhood and grow up there and then later on they become famous and move away. When they come back for a visit later, everything in the neighborhood has changed. All of the things they thought were great are either ruined or were never that great to begin with?\" I smiled.\n\n\"I still don't understand what that...\" she began.\n\n\"Theresa, you said it yourself. I was pulled out of your womb, but after what I saw you letting into it yesterday, I'd never go back there. For all of my life you gave me a set of rules that I needed to follow. But you don't follow them yourself. There is nothing more I can learn from you. I no longer respect you so there's no point in us talking.\"\n\n\"But Melinda, we're not just a group of people who work in an office together or a sports team, we're a family. We have to forgive each other when we make mistakes,\" she said.\n\n\"If you don't like my solution, we can always just tell Daddy and let him decide whether or not he wants to forgive you,\" I said. \"My opinion is that you cheated on a man who loves you so much that he does everything he can to make your life better. What has Eddington ever done for you besides cram himself between your legs? When you're all sick and bloated, is he the one who sits by your bed rubbing your forehead? Is he the one who's supported you for all of these years? What exactly has he done for you that's enough for you to betray your husband?\" I asked.\n\n\"Nothing...\" she said.\n\n\"So, if we do this your way,\" I said. \"And I tell Daddy what you've done, not only will I STILL not speak to you, but you'll lose your husband as well as your daughter, right?\"\n\nShe nodded her head.\n\n\"Theresa, just quit while you're behind,\" I said.\n\n\"I can't believe the little girl I raised is so unforgiving,\" she said. Her voice broke and tears ran down her eyes.\n\n\"Theresa, shut off the waterworks,\" I said. \"You said it yourself yesterday. I'm my daddy's girl. I did go easy on you. If you'd been anyone else; if the person who hurt my dad had been someone that I didn't like, I'd have fucked them up. You got off easy. If you don't screw up again you can stay married to him. Unless, of course, someone else finds out what you did. But if I catch you again, even with someone else; it wouldn't be pretty.\"\n\nI stayed in my room until my dad came home, then I went downstairs and had dinner with him. Daddy relaxed for a while after he got done with dinner and then I asked him if he wanted to go out for a walk or a light jog. Just as we were getting ready to leave, my mother asked if we wanted her to come along.\n\n\"You don't like to run,\" I said, smiling at her.\n\n\"I can ride along on your old bike,\" she smiled. \"That way we could all be together.\"\n\n\"My bike has a flat,\" I said. \"But if you really want to hear me talk about school activities and getting Daddy to come to some of them; it's fine. Maybe since you're going to be there we can talk about yesterday too.\"\n\n\"Well, if the bike has a flat, there's no way for me to come with you guys,\" she said suddenly. \"My ass is too fat for me to be out running.\"\n\n\"I love your ass, Honey,\" said my dad. He kissed her and I wanted to throw up. My mom was smiling at me after he kissed her and patted her on her ass. I guess she wanted to claim it as a victory of some kind.\n\nAs my dad went up to change into running gear, she smiled at me. \"See, Melinda, he hasn't been hurt. He still loves me just as much and whether you believe it or not; I still love him too. I would never hurt him. He's the man I intend to spend the rest of my life with. All I wanted was a little bit of excitement.\"\n\n\"It's going to be really exciting when he divorces your cheating ass,\" I said while smiling at her. She just shook her head and went in to clean the kitchen.\n\nAs Daddy and I ran, we talked. He told me about some problems they were having at work and what he wanted to do to his Mustang. I told him about the harvest festival dinner dance and also about the science expedition for Ms. Abra. I told him how much we needed samples and how we had hardly anyone going. I twisted his arm a little bit and he agreed to accompany me. When he told me he'd get mom to come along too, I told him that I'd already asked her and that she had other plans.\n\nSo when Saturday came along, Daddy and I got up early and grabbed breakfast on the road. We were still eating it when Ms. Abra pulled up in her car. She had one of those new Pontiac re-issues of the classic GTO. The car had come out a few years ago and hadn't really been the hit that GM expected. It looked too much like the G6 and G8. And although the performance was great, it didn't look anywhere near what the muscle heads wanted to see.\n\nMy dad immediately jumped out of his Mustang and walked a slow circle around the car. He looked at everything. He looked at the wheels and the brakes and the twin exhaust pipes and then sat back and looked at the body lines. Ms. Abra got out of her car and came over and sat with me.",
        "\"That's my dad,\" I said. \"He's a car guy.\"\n\n\"I noticed,\" she said.\n\n\"Daddy, come and meet my teacher,\" I yelled. \"You don't have to worry. Your car has a lot more horsepower and whatever else you're trying to figure out.\"\n\nJust as I called him over, a van with a lot of guys in it pulled up. Coach Kleatz and some of the guys from the team got out of it and started looking around.\n\n\"Hi,\" said my dad shyly. He stuck out his hand. \"I'm Jim Carson. I'm Kit's Dad.\"\n\n\"Helena,\" she said. She shook his hand warmly and looked into his eyes. My dad looked away. I noticed that she'd tried to hold onto his hand a fraction of a second longer than she should have. It wasn't much but it was a start.\n\n\"Can I ask you...\" my dad began, before Coach Kleatz came running over.\n\n\"Hey babe,\" he said. \"I made a bunch of my guys come out to help out with your little problem.\"\n\nMore and more cars were pulling up and kids were getting out of them. A few had their parents or younger siblings in tow.\n\n\"Well, I don't see how they're going to help by throwing a football around,\" she said. \"And if they don't want to be here then they shouldn't be. I need water and soil samples. I also need to know exactly where they came from. I need leaves and plant samples as well. If they mess things up, I'll have to start all over again.\"\n\n\"They'll do fine babe,\" he said. \"And you and I can go out and hunt for stuff together.\"\n\n\"I'll see you later, Helena,\" said my dad.\n\n\"Helena, huh?\" said Coach Kleatz. \"Well Helena, let's get started.\"\n\n\"My name is Ms. Abra, Coach,\" she said. \"I don't enjoy being called babe and we are not on a first name basis. I actually don't understand why you showed up today. So I'd really appreciate it if you could supervise your boys to keep them from trampling the vegetation while we're here. The idea is to study nature not destroy it.\"\n\nThe coach turned red in the face. He looked as if he was about to explode when one of his guys stage whispered, \"Ooooh...Frozen,\" in the background.\n\n\"Lesbian,\" coughed Coach Kleatz. He looked up at me and smiled when he noticed that I was still standing there. Then he coughed again to try to cover his first cough. I shook my head and wandered after Ms. Abra.\n\nThe morning and early afternoon were very busy. I naturally teamed with my dad and we ran all over the woods finding whatever we were asked to come up with. Ms. Abra was very excited and often asked us where we got a particular sample and followed us back so she could see it for herself. The interesting thing was that as I saw her and my dad together, I could see that given half a chance they'd click.\n\nThe funny thing was that they were almost never alone together. There were all kinds of mothers there with their sons or daughters who kept trying to talk to my dad. At the same time, there were lots of men trying to get close to Ms Abra.\n\nFinally, by late afternoon, the school's bus driver arrived in a van to carry all of the samples back to the school and Ms. Abra thanked everyone and called a halt. She told us that the day had been a rousing success and that the school's science program thanked us all. Everyone got into their cars and left. I was ready to go too. I had some major thinking to do. During the morning, I'd seen Russell Eddington show up. But he hadn't stayed long. I think that when he saw me and my dad, he'd left. I'd also seen my mother's car. I wasn't sure if she'd been there to see Eddington or to see what I was up to, but she'd driven past and kept going. It may have been a coincidence.\n\nI had several problems to work out and at the same time, I was starving.\n\n\"Jim,\" said Ms. Abra, just as we were getting into the car. \"First, I want to thank you for coming. You and Melinda were my star lab assistants today. And second, just before everyone got here you were about to ask me something, weren't you?\" My dad looked at her shyly and she smiled.\n\nSuddenly, I wasn't as hungry. Things might not be as bad as I thought after all.\n\nCome on Dad, ask her to come and eat with us, I thought.\n\n\"It's kind of personal,\" said my dad shyly.\n\n\"Jim, you spent a Saturday digging through mud for me,\" she said. \"So ask me.\"\n\n\"Could you uhm...show me...\"he began. My mind exploded. I was sure that my dad was more mature than this. I knew lots of guys who were always running around yelling \"Show me your tits.\"\n\nI kind of thought my dad was above that, but shit my mom sure wasn't.\n\nMs Abra's eyes narrowed too, but my dad continued headlong into disaster.\n\n\"I'd really like to see...\" he continued.\"...the motor in that GTO. It's supposed to be a 5.7 Liter v8. It's the same motor they had in the corvette that year. I'm curious why it only put out 350 horsepower. What year is it? Because the 04's were 350 horses but the 06's put out 400. While both of those are very respectable, you'd think with that much displacement you'd get more out of that engine. I mean my Mustang is only a 5.0 Liter and it's cranking 462 ponies without forced air and...\"\n\n\"I have no idea what you're talking about,\" she laughed. \"But you can look at it all you want.\" She was still smiling at him and shaking her head, as she got into the car and opened the hood. Dad raised it and put the prop in place and started staring at whatever it is that guys look at under there. Ms. Abra got out of the car and went to stand next to him.\n\nUnfortunately, Coach Kleatz came storming off of the bus and over to the car too. \"What's wrong with you car, Ba...uh...Hel...Ms. Abra?\" he asked angrily.\n\n\"Nothing,\" she said. \"Don't you have someplace to be?\"\n\n\"Nah, I'm solo tonight,\" he said. \"So what are we looking at? That's the motor isn't it? I can see what's wrong with it from here. You need to have the carburetor rebuilt. Maybe we can get away with just cleaning it. I think we have some starter fluid on the bus.\"\n\n\"Uhm there isn't a carburetor on this engine,\" said my dad. \"It's fuel injection.\"\n\n\"Exactly,\" said Coach Kleatz. \"I was going to put the starter fluid into the injection thingy. Well, I'll let you guys carry on. If you can't get it fixed, give me a call. You still have my number right?\"\n\n\"Yeah I've got your number,\" said Ms. Abra sarcastically. She turned back to staring at the engine with my dad as \"Frozen again,\" echoed from the bus amidst a round of laughter.\n\n\"Dad, food,\" I said a few minutes later. We said goodbye to Ms. Abra and headed for home.\n\nWhen we got home, since it was a Saturday, Mom hadn't made dinner. She looked at us hesitantly as we came in. She went to Dad and hugged him and then looked at me. I kept my face neutral.\n\n\"Melinda, it's Saturday, Honey. Don't you have a date or something?\" she asked.\n\n\"Mom, you know that Dean and I went out last night,\" I said. \"And we'll probably do something tomorrow afternoon, but Saturday night he has to help his dad clean the church. Remember, I used to help too, just so I could be near Dean, but his mother got on my nerves. Why is it always the mothers that cause the problems?\"\n\nMy mom instantly went on the defensive. \"I wasn't trying to be a problem, Honey,\" she said. \"I just wondered if you were doing anything. You're a pretty girl. You should be out enjoying life. This is your last year of high school. Next year, you'll have to buckle down and hit the books if you want to get into a good law school. You work really hard and I want you to get to go out and play hard too.\"\n\n\"Mom, life isn't about playing all of the time. I had a great time bonding with my daddy today. It was really fun and we got to help one of my teachers out too. Like you said, next year I'll be off to college so I want to spend as much time with dad as I can. Besides, wasn't it you who's always told me that family comes first? And it was also you who told me that you have to do that Tammy Wynette thing sometimes and stand by your man. I know that it sucks that Dean is stuck helping out in the church. Neither one of us is really religious, but his parents are suckers for that stuff. He doesn't want to disrespect them so we go along with it. Since I'm in a committed relationship with him, I have to go along with the program. Remember, you taught me to put my relationship first.\" She paled visibly as I spat her own bullshit back at her.\n\n\"I love the way you put it, Mom,\" I said. \"The girls who play around with a lot of guys usually end up without one of their own.\" She looked as if someone had punched her in the stomach.\n\n\"Well, I didn't make dinner,\" she said changing the subject. \"I thought that if you were going out, that maybe your dad and I would just get a pizza and a pay per view and see what happens.\n\n\"That sounds fine,\" I said. I linked arms with my dad and pulled him out of the kitchen. \"I'll order the pizza, Dad. You turn on the big screen and find us a movie. Please don't get one of those sappy love stories that end tragically when one of the lovers dies or cheats.\" When I said, \"cheats,\" my mother's gulp was heard all over the kitchen.\n\nAs my dad went to the door a short time later to get the pizza from the delivery guy, he ended up talking about his Mustang with him. My mother took that opportunity to speak again.\n\n\"It would have been nice for you to let me have an evening alone with your dad,\" she whined. \"How am I supposed to make things up with him if you won't ever leave us alone?\"\n\n\"Three things,\" I said acidly. \"You need to get yourself checked for STD's before you even dream of touching him again. Number two; I saw you driving past the park at the same time your lover did or shortly thereafter. If I find out that you spoke to him, all bets are off. And three; I thought that we weren't supposed to fucking talk to each other.\" Just as I finished my last sentence, Daddy set the pizza down in front of us.\n\n\"I'll get drinks for us all,\" he said. Mom and I were both smiling and nodding our heads. She even reached over and patted me gently on the shoulder. I'm sure my daddy never noticed anything. He was pretty easy going unless someone threatened his family or talked about his car.\n\nAs soon as he left for the kitchen, we were at each other's throats again. \"Bitch, if you ever touch me again, you'll be divorced before you can pull your hand away,\" I snapped.\n\n\"Melinda, you have to give me a chance to make this up. I'm not your enemy. I know that you and your dad have decided that you're going to be a lawyer, but you're treating me like I'm a criminal. Even criminals are innocent until proven guilty,\" she said.\n\n\"Mother, you had an agreement, let's call it a contract, with dad. Part of that agreement called for you to be faithful to him, didn't it?\" I asked.\n\n\"But...\" she sputtered.\n\n\"No buts,\" I said. \"Didn't it call for fidelity and trust?\"\n\n\"Yes,\" she said.\n\n\"You broke it,\" I said. \"We don't need any evidence because I was there. I caught you red assed, red faced and red handed. Is that not true as well?\"\n\n\"Yes,\" she spat. \"But can't I make restitution for what I did. When someone steals something they give it back and say they're sorry and then they move forward.\"\n\n\"Mother, you're either out of your fucking mind or you're stuck living life as a three year old,\" I said. \"When someone robs a bank, even if they give the money back, they go to jail. In this case, how can you make restitution? Have you invented some way to un-fuck Russell Eddington? Or are you just planning on screwing daddy twice as much to make up for what you did with Eddington. Neither of those options makes up for you sharing yourself with someone other than your husband. And neither of those scenarios makes up for the fact that he will probably never be able to trust you again. I'm being far nicer to you than you deserve. I should have told daddy everything. You'd have been back living with Grandma right now. And Mom, you won't end up with the house. I know that most people think that the house goes to the woman. Daddy paid the mortgage himself, you aren't even listed on it. And in most cases, the house actually goes to the parent with the kid. Since I'll be in college soon, with Daddy paying for it, I might add, a judge would consider me as still living in the house until I graduate. Make no mistake about it Theresa; I'm well above the age where any judge would ask my opinion. And there is no doubt which parent I'd choose to live with.\" I smiled at her.\n\n\"So I see you living with Grandma and you do understand that she'll be really pissed at you when she finds out why you got divorced. Daddy would probably waive child support and your half of my college expenses since you can't afford them even if you did go back to fucking Eddington. I forgot you can't do that because in the three days that you've been gone, he's already gotten himself a younger, cuter secretary. And I'm sure that if he's not fucking her by now, he soon will be.\"\n\n\"So that leaves you at thirty eight years old with no skills other than the ones you might have on your back; living in your mom's basement with debts piling up. I'm sure Daddy won't let me get put out of school for you not paying your share. And he probably won't hold you up for your child support. Your lawyer would probably make a deal. Daddy doesn't have to pay you alimony in exchange for you not having to pay child support and him paying for all of my college expenses. Does that sound fair to you?\"\n\n\"No,\" she said loudly. \"I'd be broke. I don't have any skills. I left college to have a baby who no longer appreciates me. I made one mistake. Why do I have to lose my house, my family, my marriage and my daughter for one mistake?\"\n\n\"Mother, forgetting to add bleach is a mistake. Fucking another man in my daddy's bed is a felony,\" I said. My features were drawn and tight. Acid dripped from my words as I spoke to her. \"As far as I'm concerned, Daddy is...\"\n\nI stopped talking as he walked into the room carrying a tray. He sat a tall fluted glass of white wine in front of Mom. There was also a bottle of Wild Cherry Pepsi in front of me and a Dos Equis Amber for himself. He sat down on the couch with himself on the far end, Mom in the middle and me on the opposite end.\n\nI got up to grab the cable remote and when I came back to the couch I leaned over and hugged my mother. It shocked the hell out of her after the conversation we'd just had. Then I squeezed in between them and put my feet up on the coffee table as we settled in to watch the movie.\n\nI spent the morning Sunday thinking about my problem. It struck me as strange that an eighteen year old girl who was still a virgin had to try to teach her nearly forty year old mother a lesson about morals. For all of my life, my dad had protected me and this time I had to protect him. I'd seen enough of my friends go through having their parents split up to know that it was usually the parent who was cheated on that caught the worst of it. When Danielle's father cheated on her mom with his secretary, they got a divorce. Her mother got the house and a nice check every month, but she became withdrawn and depressed. She started drinking and just became a different woman. It also affected Danielle. Her mother's sense of self-worth and confidence were destroyed.\n\nMeanwhile, her father ended up marrying the secretary. He got her pregnant, started his own new family with a woman half his age and moved on with his life. Somehow, the money he had to pay Danielle's mother wasn't nearly enough for the pain he'd caused her. She would also only get the alimony for five years. It seemed like such a waste. She was trapped in that house full of tarnished memories, wondering what she'd done wrong. She was too depressed to either move on in her life or even try to get a job. Maybe that was why I was so angry at my mother. I didn't want to see my dad go through that. If their marriage was going to end, I had to make sure he landed on his feet.\n\nMy attempt at getting him together with Ms. Abra had been a bust. My dad hadn't even noticed how hot she was. Shit, he'd barely been able to ask her to look at her frigging car's motor. And Ms. Abra hadn't been any help either. I could tell she'd been interested in my dad, but she was too shy to make any kind of move on him either. That just outlined one of the problems I have with the bible. If the meek did inherit the earth, they wouldn't know what to do with it and someone else would take it away from them.\n\nI needed to find someone who was a bit more aggressive for my dad. My mom didn't realize it but none of things that we were talking about really mattered. I was just stringing her along until I was ready to jettison her. Did I feel guilty about lying to her? Of course not. I felt the same level of guilt about that as she'd felt about screwing my principal in her own house. She hadn't felt guilty or even thought that anything was wrong with what she'd done until she got caught.\n\nI realized then that I'd already figured out who the perfect person for my daddy was. Danielle's mom would be perfect for him. She wasn't as cute as Ms. Abra, but who was? Mrs. Kinney was still slimmer and built better than my mom and she was nice looking too. Or she would be if I could get her to put on some make-up and cover up the bags under her eyes. She could help Daddy get over Mom and Daddy could help her get over her divorce and feel like a woman again. I don't know why I didn't think about it first.\n\nMonday at school was hectic. Mr. Eddington avoided me. I tried to go to his office to tell him that I'd seen him at the park on Saturday, but it seemed like every time I saw him, he ducked away. I did see him go out to lunch with his new secretary though.\n\nAt lunch time, I ran into Ms. Abra. I think she was looking for me.\n\n\"Hi Melinda,\" she said. \"So what was the favor you needed from me?\"\n\n\"I just wanted you to help me pick out an outfit for the Harvest Festival Dance,\" I said.\n\n\"I'd be glad to,\" she smiled. \"But I told you that...\"\n\nI knew right where she was going. \"Ms. Abra, you're beautiful,\" I said. \"You are probably the sexiest woman I've ever seen. Guys go nuts over you instantly...\" Before I could even finish my thought she said something under her breath that stopped me in my tracks.\n\n\"I'd rather have your help than... please forgive me for saying this because I'm sure she's your friend...but, some fat art teacher who thinks she's America's Next Top Model,\" I said.\n\nWe looked at each other strangely. \"I'm so sorry,\" she said. \"I didn't mean to say that out loud. I didn't mean it to come out that way.\"\n\n\"I didn't mean to say what I said about your friend,\" I said.\n\n\"We need to talk,\" I said. \"Can you drive me home after school? You can come to my house and look at my choices for my outfit and then maybe we could grab a bite and talk about what you said. I promise that what we talk about won't go any further than the two of us.\" She looked nervous but she nodded her head and walked away.\n\nI was so excited that I felt like I was going to pee on myself. When I'd told her how attractive she was, she'd whispered, \"Too bad your father doesn't think so.\"\n\nAfter that conversation I was almost too excited to sit still for the rest of my classes. I found my concentration lapsing and I constantly watched the clock. Finally, three thirty came and I gathered my books and practically ran all the way to Ms. Abra's lab. She had her usual gang of students waiting to talk to her about something, most of whom were guys who just wanted to look at her.\n\nI did notice that after the outing Saturday, she had a lot more freshman and sophomore admirers so we'd been successful in more than gathering specimens. That forced me to think about a few things. \n\nThe first was that I didn't think I'd want to be that pretty. It would probably get to be a pain in the ass. All kinds of guys that you had no interest in, constantly hanging around, trying to get you to notice them.",
        "That made me think about Saturday and the coldness she'd displayed to the coach. I think it made me understand her more. She'd been very polite with most of the male volunteers, but also guarded. She'd kept her face neutral and avoided smiling too much. But with the coach, it was as if she took every possible opportunity to push him away.\n\nThen I remembered that the coach had taken every opportunity to act as if there was some type of relationship between them. He'd called her babe. And then he'd tried to call her by her first name. She'd pointedly nixed both of those attempts.\n\nI realized then that things for her were probably worse than I'd ever imagined. But on the other hand, I'd apparently missed her interest in my dad. She'd told him her first name and when we were ready to leave, she'd called him back. She'd also allowed him to ask her a personal question, although my dad's idea of what's personal is silly.\n\nThen she'd stood next to him as close as possible without actually touching him while he ogled her car engine. I also remembered the smile on her face as they stood there. That had, of course, made the coach come over and make a fool of himself yet again.\n\nRemembering that sequence of events made me think seriously about trying to push her into something with my dad. I have to admit that while my dad isn't a wimp, he's also not very aggressive. With every Tom, Dick and Harry in the area going goo-goo eyed over her at first sight, what would a relationship between them mean for my dad?\n\n\"Melinda, are you okay?\" asked Ms. Abra. I looked up and realized that we were alone in the room. I'd been locked into my thoughts so deeply that I hadn't realized that she'd gotten rid of all of her students and was waiting for me.\n\n\"Sorry Ma'am,\" I said. \"I was just thinking.\"\n\n\"You do a lot of that don't you?\" she smiled. \"That's probably what makes you such a good student.\"\n\nWe got into her car and I decided to test her. As we pulled away from the parking lot she'd gunned her engine and the car took off with a spray of gravel behind us.\n\n\"Not bad,\" I said. She looked at me.\n\n\"Your car has some power, but it's smooth too. My dad couldn't have done that without everyone in the neighborhood diving away from the road. I could probably drive this car,\" I said.\n\n\"You don't drive you Dad's car?\" she asked. I'd been analyzing both her voice and everything she did as I brought it up. Her hands had gripped the wheel tighter and there was far more tension in her legs. There was also the fact that I had spoken about cars in general. She'd been the one to bring up my dad's Mustang.\n\n\"Well, he's let me drive it,\" I said. \"I'm the only person that he's ever let drive it. But that car scares the shit out of me. Sorry, that was an unfortunate choice of words, but it was true. My dad treats that car like it's his other child... But that thing is brutal. If the traction control isn't on, forget about it. It burns rubber every time it takes off. His previous Mustang was a manual transmission. The clutch was so tight I had trouble getting it into gear. This one is an automatic. My dad must have like race car driver reflexes because that car does like thirty five without even putting your foot on the gas.\"\n\n\"I don't know how my dad controls it on residential streets. And on the freeway, every time you look at the speedometer it scares you. I've only been driving for a little over a year so I don't drive fast. I took it on the freeway once and I guess I thought I was going about sixty. Our family car shakes a little bit when you go faster than sixty five. I noticed that I was passing cars like they were standing still and I looked at the speed-o and realized that I was doing ninety and the car was rock solid. It was actually purring. That pony likes to run.\"\n\nBy that time, we were at the house so she pulled into the driveway behind my mom's car. I opened the door and we went up to my room. I pulled out my chosen outfits and she looked at them all before commenting.\n\n\"They're all nice outfits,\" she began. \"But I think what will really make the difference is the person in them. Melinda, you can pull any one of these off and probably be one of the best dressed women at the dance. I'd eliminate these two though, unless you have something you can use as a wrap. Even when the weather is warm during the day, it gets really chilly at night during the dance.\"\n\nThe sound of our voices must have carried because my mom looked into the room and then came in.\n\n\"Hello,\" she said. \"I didn't know that you were home Melinda. Or that you had company. Ms. Abra, it's good to see you.\"\n\n\"Hi Theresa,\" said Ms. Abra. \"Call me Helena. I just realized that I haven't seen you in about a week. Are you on vacation?\"\n\n\"No,\" said my mother looking at me. \"I quit. Can I get you something to eat or drink?\"\n\n\"No thank you, Theresa. We're going to go out and grab something. I hadn't heard that you were quitting. Normally, we have a party when someone leaves. The decision must have been very sudden. I don't think anyone knows about it yet. But then again, I'm not really sure that I could have worked with Russell for nearly as long as you did. The man makes my skin crawl. He's worse than Coach Kleatz. Every time I stand there in front of him, I feel like he's trying to imagine what I'd look like without my clothes. You'd have to have rocks in your head, or just be a real slut to be with someone like that. I don't envy his wife.\"\n\nMy mother looked nervous. \"Well, you two have fun,\" she said and went back to whatever she'd been doing.\n\nI tried on both outfits and we agreed that the navy blue dress was the better choice. After that, I changed back into my clothes and we headed for Wendy's. As we sat down over burgers, she popped her first question.\n\n\"Melinda, if your mom is home, why didn't you just have her look at outfits with you?\" she asked.\n\n\"We'll get to that later,\" I said. \"Can we talk about the important stuff first?\"\n\n\"Okay.\" She smiled, looking at me with amusement on her face. \"Melinda, you're going to be a great prosecutor. You have a way of cutting to the heart of things.\" I nodded.\n\n\"I'm really not trying to be hurtful or insulting ma'am but this is important to me. So please forgive me if I step on your toes, okay?\" I said. She was still looking amused.\n\n\"You like my dad, don't you?\" I asked.\n\nSuddenly, she was choking on her fries. She took a long gulp of her soda and then looked at me wide eyed.\n\n\"Of course not,\" she sputtered. \"I'm not a home wrecker. Your dad is a married man.\"\n\nI just stared at her. She nervously nibbled at her fries. \"No one will ever know what we discuss here,\" I said, continuing to stare at her.\n\n\"Melinda, I'm thirty three years old,\" she began. \"I've only been in love one time. It ended tragically and I've been on the shelf ever since then. It's not that I didn't want to move on, I just didn't. A few years ago, I went back to my home town and looked at my husband's relatives. I guess I was becoming lonely and I figured that maybe an apple from the same family tree might work where nothing else has. He has three brothers.\"\n\n\"The oldest is a drunken, wife abuser. The youngest, who's five years younger than me is a crack addict. And the middle one, who went into the military with my husband, is in jail. For a while, I wondered what my life would have been like when he came back from his military service. Would he have turned out like his brothers, or was he a one of a kind man?\"\n\n\"I guess I'll never know. My sister in law tells me that Robert, that's the oldest brother, was an angel for the first five years of their marriage. As he got older, she said he changed and became more like their father. She never expected it the first time he punched her. She told me to hang onto my good memories but I get the impression that she thinks he'd have changed too.\"\n\n\"I've wanted to move on, but I react to most men the way you react to a tree. I'm not stupid, Melinda. I know that I'm attractive but then you are too. Can't you tell by the way a guy looks at you if he really likes you or he just wants something to have sex with?\"\n\nI nodded and she was right.\n\n\"I've spent my entire life trying to get past my looks,\" she said. \"I had to work twice as hard as everyone else to prove I was interested in science. In college, no one wanted me in their groups for group assignments because they assumed I was an airhead.\"\n\n\"The only guy who ever looked past it, I ended up marrying. Melinda, he was funny and shy and he danced to the beat of a different drummer. Do you know what the first thing he ever said to me was?\"\n\nI shook my head.\n\n\"I was in the library with my head stuck in a book. He came over and sat down. He started writing a term paper. His paper was supposed to be typed but he was writing it. I found out later on that he always did things the way he wanted no matter what. He was a terrible typist, but he had great handwriting.\"\n\n\"Anyway, we'd gotten to the point where we were spending a lot of time glancing at each other. Finally he just stared at me and spoke.\n\n\"God you're ugly,\" he said, with the biggest smile on his face. \"Want to have lunch?\"\n\n\"If I'm so ugly why would you want to be seen with me?\" I asked.\n\n\"My dad told me not to ever fall in love with a pretty woman,\" he said. \"And since I want to marry you more than anything I've ever wanted in life, you have to be ugly so I'm not breaking my promise to my dad.\"\n\n\"He constantly surprised me,\" she said. \"All the way to the end. And no one has affected me that way since he died until I met your dad. He's such a walking contrast. He's very handsome, but instead of being arrogant, he's shy. He's clearly confident but unlike the other fathers who were there Saturday, he didn't stand around with the other guys talking about golf. He spent the entire day running through the woods with his daughter. You could see the joy on his face when you guys found a different type of leaf or insect.\"\n\n\"It seemed like every God damned guy there kept coming over to me like I was supposed to fall down and worship them because they came over and used some cheesy line on me. I guess I'm supposed to be desperate because I'm a widow.\" She sighed and nibbled her fries again.\n\n\"Melinda, I think I am desperate. My biological clock is ticking as loud as hell. But I only intend to be married one more time in life. When I find a mate, it's till death do us part. So it has to be the right guy. And since you said this is just between us and I trust you; Yes, I really like your dad. But you have nothing to worry about. I'm not the kind of woman who goes after married men. Besides he's more interested in my car than he is in me. The whole time that we were talking, I was afraid to breathe. I've never felt like that before in my life. I was just...breathless. I wanted to touch him so badly, but I didn't dare.\"\n\nShe looked kind of sad as she ate more of her burger. But as sad as she looked, she also seemed to be more relaxed. It was like being able to tell someone about this had taken a lot of pressure off of her shoulders.\n\n\"I'll help you,\" I said as she kept her head down chewing her burger. She stopped chewing and choked again. I had to stop talking while she ate before I killed her.\n\n\"Melinda, he's married and your mother...\"\n\n\"Is cheating on him,\" I spat loudly. \"My mother was fucking Russell Eddington in my Dad's bed when I caught them. She doesn't deserve him. I won't have him hurt for anyone. They're getting a divorce. That's why she had to quit her God damned job. I can't stand her. That's why I don't ask her for advice on anything.\"\n\n\"And my dad will be heartbroken when he finds out. The best way for me to do this is to find someone who's better for him. Someone who can help him through the pain he's going to have when he finds out and then help him to move on.\"\n\n\"You're perfect for that ma'am. And the reason that he hasn't noticed you is that he really thinks he's being faithful to a woman who's worthy of him. As pretty as you are, my dad is simply not a cheater. We just have to get you guys together a few times.\"\n\nI got home feeling better than I had since this whole thing had started. I felt like pulling out a cigar and saying, \"I love it when a plan comes together.\"\n\nI guess that's why I was surprised when the wheels started to fall off of my brilliant plan.\n\n\"Melinda, what the hell are you playing at?\" asked my mother angrily. \"You're right, I saw you at the park Saturday. I was afraid that you'd tell your dad. I saw you introduce him to Math and Science Barbie. Then you actually brought that bitch into my house. If you needed help picking out your clothes, that's supposed to be my job. I'm your mother.\"\n\n\"Did you know that she's a lesbian?\" she asked. I started laughing loudly.\n\n\"She's not a lesbian,\" I laughed. \"You probably heard that from Eddington didn't you?\"\n\n\"Nope, she's not a lesbian. She's just picky about her men. She thinks that she's got more class than to be the kind of woman who'll spread her legs for any horn-dog that comes along. Besides Theresa, I was doing this for you.\"\n\n\"What do you mean?\" she asked curiously. I knew I had her. This wasn't what I'd planned but it would probably work.\n\n\"Remember our conversation about you making things up to daddy?\" I asked. She nodded excitedly. \"The only way to even things out is for Daddy to have sex with someone else too. Then things will be even and we can get back to being a family. I'm tired of all of this anger Mother. I miss you.\"\n\n\"So if your father has sex with her a few times, this whole thing ends and you'll never tell him?\" she asked. \"And you'll forgive me too.\"\n\n\"That was the plan,\" I said. \"But it won't work. Daddy didn't even look at her twice. He was more interested in her car than he was HER.\"\n\n\"I'll help you,\" she said. \"No one knows your father better than I do. We just have to throw them together in enough situations where they actually have to touch each other. Then, when we're ready to lower the boom, we need to get your dad drunk. Let me think about it for a little while as I make dinner. We can do this.\" She had a big smile and held her hand up for me to high five her.\n\n\"God, she's stupid,\" I thought as she left the room.\n\nThe next day in school, I told Ms. Abra or Helena as I called her, since we were partners in crime, the new developments.\n\nI also told her my mom's first idea to get the two of them together. We were supposed to have a party that doubled as a practice dance for the harvest festival dance. It was mostly so the younger students could learn to dance before the big festival. Most kids were great at dance club style dancing, but had little experience with partner dancing of the type that would be done at the harvest festival. I got Helena to sign up as a chaperone and told her I'd work on getting my dad to do it too.\n\nOnce there, I'd manipulate them into dancing with each other and we'd all be one step closer to getting the two of them together. The funniest thing was that my mom had been the one who came up with the idea. It was almost like the cheating bitch was cutting her own throat.\n\nAs the night of the practice dance got closer, I noticed that my mom got more and more excited. I was still barely talking to her, but I did talk to her about the plan. She had some interesting ideas about what to do after the practice dance.\n\nAnyway, the night of the practice dance there was magic in the air. I allowed my mom to stick a flower in my hair as I waited for Dean to pick me up. Both Dad and I were shocked that Mom wasn't coming. Actually, I was pissed and pulled her off to the side. I'd actually thought it would be cool to have her there and make her watch as Dad danced with Helena. I wanted to enjoy seeing her squirm as she watched a woman who was younger than her, better built than her and prettier than her, did her God damnedest to arouse my dad, right in front of her.\n\nBoth Helena and I agreed that my mom simply didn't love my dad. For all of her claims that she did, she'd struck out. The first strike was her infidelity. If she loved him, she wouldn't have cheated on him. Strike two was her refusal to come clean when she was caught. The final strike was the fact that not only was she willing to let him have sex with another woman; she was willing to help with the planning and execution of the act. She had no business with my dad. If she loved him as much as she claimed, she should have been in tears at the thought of him having sex with someone else.\n\nI glared at her in the kitchen with dad upstairs and Dean waiting in the living room.\n\n\"Why aren't you coming?\" I asked. \"Get your ass upstairs and get dressed NOW!\"\n\n\"Melinda, you don't want me there,\" she said. \"Think about it Honey. You're the one with the analytical mind. You know how shy your father is. There's no way he'd dance with Helena if I'm there. He'd look at it as an insult to me. And secondly, you're going to have to convince him that Helena is lonely and upset because no one else will dance with her. Other than that, he won't go near her no matter how beautiful she is.\"\n\nI had to admit that the bitch was right. I hadn't given any thought to how to get him to dance with her. What I didn't understand was that my mother had out witted me. Shit, I was only eighteen. I couldn't keep up with all of the factors. And she was one sneaky bitch.\n\nAs Dean and I drove to the dance, he tried to make conversation. My mind was on other things though. There were so many things that could go wrong. I reached out and held Dean's hand. He was so lucky. His easy going personality reminded me of my dad. That was one of the reasons why I loved him so much. Dean had the same ability to commit to a cause or an idea or a person that my dad had.\n\nBut unlike my dad, Dean would never have to worry about the woman he loves cheating on him. Except for the fact that the parking lot was filling up after dark, the school didn't look any different. We'd stopped off at Dean's house so his dad could take pictures of us while his mom chewed her cud. Okay, I take that back. It was insulting to imply that his mom was a cow. As a matter of fact, I want to apologize to any cows who are insulted by my callous comparison.\n\nAs we made our way to the door I heard a powerful rumble of an engine and smiled.\n\n\"Wow, that must be your dad's Mustang,\" said Dean. I laughed and shook my head.\n\n\"No Honey, that's not my dad,\" I said. A few seconds later we heard an even lower, even louder rumble and the driver gunned his engine as he drove into the parking lot.\n\n\"Now that's my Dad's Mustang,\" I said.\n\nThe two cars pulled up together and actually parked near Dean's Toyota. I'm sure most people saw it as a coincidence to see the GTO and my Dad's Mustang GT pull up at the same time and park next to each other, but to me it was more of an omen. I saw it as a sign from the powers that be that they had not only authorized but blessed this union.\n\nI watched as Ms. Abra looked across her car at my dad. My dad fumbled with his keys. From nowhere, Coach Kleatz ran up to Helena's car and tried to open the door for her. Since the door was locked he tried again and then again. She rolled down her window and asked him what he was doing.\n\n\"I'm just opening your door babe,\" he smiled. \"I'm trying to be a God damned gentleman here. I figured that since we're going to spend a lot of the evening rubbing bellies and if we're lucky a lot of the night after that, we may as well start out on a good note.\"\n\n\"We aren't starting out on any kind of note,\" she said icily. \"We're not even starting out on the same song. Your comment about rubbing bellies was inappropriate for the workplace. I could easily start a sexual harassment case against you if...\"\n\n\"Hi Helena,\" said my dad. \"I hate to disturb you, but I was hoping you could show me where the gym is.\"",
        "\"Aren't you the football coach?\" he asked Coach Kleatz. He stuck out his hand to shake. \"I've heard that the team is looking good. People are saying that you guys might even win a game this year.\"\n\nThe locks on Helena's car popped open and she stepped out of the car. It was as if every head in the parking lot snapped around at the same time. Helena was wearing an off white sheath dress that molded itself to her curves. Around her neck was a strand of pearls and her hair, like mine, had a big flower tucked into one side.\n\nShe looked into my dad's eyes and said, \"Hi Jim. I'd love to show you around. In fact, they like it when the chaperones work in teams. That way, if we see anything bad going on, especially hanky-panky, one of us can handle the girl and the other, gets the boy. Just let me get my purse.\"\n\nShe leaned back into the car and grabbed an expensive looking, off white, leather clutch.\n\nShe took my Dad's arm and they walked into the building together. I grabbed Dean's hand and dragged him off behind them. I had to see what happened next.\n\nI noticed a lot of people looking at them both as they walked in. Helena may as well have had a target painted on her. Most of the women there immediately hated her. She set all new paradigms as soon as she stepped into the building. Her effect was especially pronounced among the women.\n\nMost of the staff and volunteer mothers had seemingly agreed that the differences between them and the nubile young students was simply the age difference. They'd accepted that once they reached a certain age, they'd grown out of that hot and sexy look. It wasn't that they weren't attractive; they were simply attractive in a different way.\n\nThen along came Helena and everything changed. She was at least as sexy and as slim as any of the students and as old as most of the mothers at the same time. She turned all of their compromises and rules on their ear.\n\nAnd she and my dad looked like they belonged together. I was proud of the way my dad had stepped in to help her out with the coach, who was still trailing behind them angrily.\n\n\"Okay, we're here and you're safe,\" smiled my dad. I got a bad feeling as he turned to walk away.\n\n\"Jim,\" she said softly. \"Where are you going?\"\n\n\"Uhm, I just wanted to get you away from the guy who was pestering you,\" he said. \"I'm going to go and check on Kit.\"\n\nShe took his arm again. \"You rescued me, so now you're stuck with me. Besides, you've done a great job with Melinda. It's time to let her have some space. She's a smart, independent woman. I think it's us who needs some TLC.\" My dad looked confused but he sat down at a table with her.\n\nThen what I thought was another wheel coming off of my plan happened. We all heard the sound of a car revving its engine coming from my Dad's jacket.\n\nHe smiled and pulled out his iPhone. Helena looked across from me and I shrugged my shoulders.\n\n\"Oh hi Honey,\" he said. \"Are you feeling better?\" Then he laughed and he listened and got quiet.\n\nI was sure he was going to go running home to her, check and checkmate. The bitch had beaten me. But at least I'd gotten him to notice Helena.\n\nHe gestured for me to come over near him.\n\n\"I'm in trouble,\" he said. \"Your mom says that Helena is depressed because only jerks ask Helena out. I've seen that coach, Honey. He's an asshole. Your mom says I should dance with her. How the hell am I supposed to do that?\"\n\n\"You'll do fine Tiger,\" I said. \"Just be yourself. After all you're only asking her to dance, not to marry you.\"\n\nFor some reason the DJ wasn't fully set up yet, but he put a song on and lots of people headed for the dance floor. Dean and I went out and danced and as he swirled me around the floor I couldn't help but keep watch on our table.\n\nAs Dean and I returned to the table a man came over and asked Helena if she'd like to dance.\n\n\"I'd love to,\" she said cheerfully. \"But I've already promised all of my dances to someone. He hasn't asked me yet though.\"\n\n\"He must be an idiot,\" said the man.\n\nBefore Helena could say anything, the DJ put on another song.\n\nAll we heard was a warbling female voice with a beautiful Irish lilt to it.\n\nThe daylight's fading slowly\n\nThe time with you is standing still\n\nI'm waiting for you only\n\nThe slightest touch and I feel weak\n\n\"Come on Jim, they're playing our song,\" said Helena.\n\n\"We have a song?\" asked my dad.\n\nAs they went out onto the dance floor, I listened to the song. When the singer got to the chorus, I couldn't help but giggle a bit. Helena was definitely on her game.\n\nSo go on, go on\n\nCome on leave me breathless\n\nTempt me, tease me\n\n'Till I can't deny this\n\nLoving feeling\n\nLet me long for your kiss\n\nGo on, go on\n\nCome on leave me breathless\n\nThey danced and although my dad seemed confused at first, he had a smile on his face. I realized then that things were going to be alright.\n\nAs I watched Helena, I knew that he was in good hands. She'd started out dancing very formally with him. But she very slowly, yet deliberately, pulled him in. When they weren't dancing together, they sat at the table and laughed and talked. Helena was in heaven. She practically glowed. There were men all over the place trying to catch her eye but she kept both of them firmly on my dad. She caught me watching her and silently mouthed, \"Breathless,\" to me. \n\nEven though my poor daddy didn't realize it, he was having a nearly perfect first date. We'd only been there for about three hours when the fantasy came to an end. Someone must have spiked the punch, because Coach Kleatz was angry and drunk. He headed towards our table and Helena.\n\nHelena was talking and leaning towards my dad. The hulking form of Coach Kleatz loomed over them. He stood there glowering as they laughed.\n\n\"Helena, get up and dance with me,\" he demanded. \"This guy has monopolized you the whole God damned night.\"\n\n\"You've got it wrong Mr. Kleatz,\" she said. \"I've been monopolizing him. Do you have any idea of how many women wanted to dance with him? And he's turned them all down.\"\n\nAs anger flashed across the face of the coach, my dad stood up and put himself between Helena and the coach.\n\n\"Look buddy,\" gushed the coach. \"I know it's rough and I feel for you. But just because Eddington is screwing your wife, it doesn't mean that you get to move in on my woman, and I...\"\n\nMy dad's fist rocketed into the coach's face so quickly that the coach never saw it coming. The punch was so hard that it lifted the coach off of his feet and knocked him on his ass out cold. Confusion, anger and pain all competed for a spot on my dad's face. He looked around him in total confusion.\n\nI had no idea what to say or do. This had never been considered in my plans. I never considered that anyone but me would ever tell my dad about what was going on. Unexpectedly though, a jealous, drunken asshole had ruined everything.\n\nJust when I thought that there was no possible way for things to get any worse, the bottom dropped out. Three police officers pushed their way through the crowd and came after my dad.\n\nHe held his hands out so they could cuff him and they just looked at him.\n\n\"Sir, are you James Carson?\" asked the first officer. My dad nodded his head. I could tell he was still in shock.\n\n\"Sir, we need you to come with us, please,\" said the officer.\n\n\"Do I have to wait until we get to the station to call my lawyer?\" asked my dad. The cops looked at him like he was crazy.\n\n\"Sir, no one cares about you knocking that drunk out,\" said the officer. \"This is a private party. It's up to security to handle fights on the premises. Unless we're called, we don't care. We came to get you because your wife has been involved in an accident.\"\n\n\"Did she fall?\" asked my dad.\n\n\"She was involved in a car accident,\" said the officer. \"She was not the driver. The man with her has uhm...very serious injuries too.\"\n\n\"We'll follow you there, Jim,\" said Helena. I was glad that she'd taken over because I was still in shock and feeling so bad for my daddy.\n\nEverything I'd planned, all of my schemes had been designed and intended to make sure that he endured as little pain as possible. It had all blown up in my face.\n\nDean and Helena pulled me out of the school with everyone staring at us. Helena threw me her keys and told me to follow her. She got into my Dad's car and took off after the police. The tires chirped very loudly but she soon got it under control. I followed her as she'd asked and Dean was behind me.\n\nThe thing I wondered the most was how the hell my mother ended up in a car accident. She was supposed to be staying home.\n\nThe three of us went into the waiting area near the emergency room. We were directed to a waiting room on the third floor that was near the operating rooms. That bothered me. And as analytical as my mind is, it made me question myself. Here I was waiting for my mom to come out of surgery and my only concerns were for my father and how this would affect my plans for him.\n\nDean was, of course, very supportive as usual. The thing that shocked me the most was Helena. I guess I expected her to be a neutral bystander or at most a concerned friend. But she was clearly upset and we didn't know yet what was going on. I hugged her and told her that things were going to be fine.\n\nAs we sat down, I noticed a woman and two small children come into the room. The woman said, \"Hello,\" to Helena and sat down on the other side of the room.\n\nHelena barely acknowledged the woman's presence. She kept her eyes locked on the door.\n\nAs I sat there, I ran all possible permutations of the events through my mind and saw how their possible outcomes might affect what I had to do. The nightmare scenario for me would be if somehow this accident drew my mom and dad back together. I could see them having tear-filled conversations by her bedside and him agreeing to forgive her if she just got better. Then she'd tell him that I knew about it all along. That could ruin my relationship with the person I loved most. This whole thing, despite my careful planning, had developed into the worst shit-storm imaginable.\n\nThe door to the surgery suites and the hallway between them swung open. A doctor came out followed by my dad. Before I even realized that the door was open, Helena was on her feet and moving towards Dad. She wrapped her arms around him and he put one of his arms around her waist while continuing to speak to the doctor.\n\nThe thing I noticed the most was the look on his face. My dad was trying to hold it together but he was clearly very angry. I got up to move closer to them so I could hear what they were talking about. As I got closer, I heard parts of the conversation.\n\nI heard the doctor say. \"...Head slammed into the center console beneath the airbag.\"\n\nI also heard, \"...Will probably need reconstructive surgery if she pulls through.\"\n\nAnother one I heard only part of, \"...Can't figure out why her head was down there.\"\n\nThen I heard, \"...Jaw slammed shut and bit it clean off.\" That last one filled in the pictures for me. I'm probably a monster because I turned on my heel and ran out of the waiting room. I found the nearest rest room on the floor and made sure it was empty. Then I just exploded in laughter. It took me a good five minutes of hysterical laughter before I could put a serious expression back on my face. I was just remembering when I'd called him, \"Dick-less,\" during our argument in his office.\n\nWhen I went back into the waiting room, I heard a mild argument going on.\n\n\"I'm telling you right now that if you do this your way, you're going to go through life with a lot of regrets.\" My dad was standing up and Helena was holding his hand and telling him to sit back down.\n\n\"But I don't care,\" he said. \"She's covered under my health plan. I don't want to be here anymore. I don't want to talk to her. I just want her out of my life.\"\n\nShe pulled him back down into the chair next to her and he didn't resist. \"Honey, I know you don't want to talk to her and that's why I want you to. If you truly want her out of your life...well that's really not going to happen. It can't,\" she said. He turned and looked at her and she hugged him.\n\n\"If you walk out of this hospital and plan on never seeing her again or speaking to her again, it still won't work. Maybe you can find a way to let your lawyers handle everything so you never have to say another word to her. Either you'll get the house or she will and the two of you will never see each other ever again, just like in one of those internet divorce stories, right?\"\n\nHe nodded his head.\n\n\"It won't work, Jim,\" she said. I noticed that my dad was calming down as she spoke. I also noticed that the woman on the other side of the room was listening to every word she spoke as well.\n\n\"This is the real world and when two people have been together for a long time they forge connections. The most important of those connections is that you have a beautiful daughter together and she has a lot of events in her life that the two of you will probably at least run into each other at.\n\n\"Are you telling me that you won't go to Melinda's wedding because her mother will be there? Or are you telling me that you're so cruel a person that you'd refuse to allow the woman who gave birth to her the privilege of seeing her only daughter's wedding?\" My dad stuck his lip out and folded his arms across his chest.\n\nHelen just looked at him and took his hand back, locking it inside of hers. \"I wasn't done holding that hand yet,\" she said.\n\n\"No matter how you feel about her, there's another problem,\" she began again. \"Even if you do lock her out of your life and avoid her there's the concept of resolution. Shrinks like to call it closure. I don't like that term because when you're dealing with people and emotions, nothing really ever closes. Five or ten years from now, even when you've resolved everything, there will still be fifty or sixty questions you just don't know the answers to. But for your own sake, so you don't go through the rest of our life doubting yourself, you have to talk to her.\"\n\nShit, I thought. I'd been worried about Helena not being aggressive enough and about my dad being equally wimpy. Now events had moved so quickly that I was gone for five minutes and I no longer knew what the hell was going on. Helena was talking about the rest of their life as if it was a foregone conclusion that they were going to spend it together. And my dad wasn't arguing with her. This was exactly what I'd wanted to happen, but the sequence of events was nowhere near what I'd planned.\n\nI guess I shouldn't be upset because all I wanted was to get my dad away from my cheating mom. I wanted to set him up with someone who would love him and be worthy of his love and it looks like he's going to end up with the right woman. I just need to make sure all of the pieces fall into place...\n\nOn second thought, I'm done meddling. Let's let the universe sort this out. Life seems to have a way of making things right in the end.\n\n\"Now, you're too nervous and too keyed up,\" said Helena. \"Stop drinking coffee, as a matter of fact, I want you to go out and just take a nice long drive to calm down. Then come back here to me and we'll wait this out together. You said she was going to be in surgery for about another hour, right. She'll have to be in recovery for at least that. So you take some time. But you don't get to just blow this off. I want you back here in an hour.\"\n\n\"But what about...?\" he began.\n\n\"Melinda and I are here,\" she said. \"We can fill out any forms or do anything else that needs to be done.\" I smiled at him as he looked at me. He came over and gave me one of his huge hugs. I went over and sat down next to Helena.\n\n\"Go drive dad,\" I said. \"Helena is right. Driving your car always relaxes you.\"\n\nAs my dad headed for the door, the woman across the room reached out and grabbed his sleeve. \"I'm really sorry for your pain,\" she said sadly. My dad nodded his head. I don't think he even noticed what the woman had said to him. It was then that I recognized her. She was Russell Eddington's wife.\n\nHelena started talking as soon as I sat down. \"Melinda, I thought you were the grand schemer,\" she said. \"But your mother has you beat. She out maneuvered us all. She fooled your dad into thinking that she was sick so she wasn't at the dance. She told you that if she was there that your dad would be too shy to dance with me, right?\" I nodded, trying to figure out where she was going.\n\n\"The phone call that your dad got, when we got to the dance, was her,\" said Helena.\n\n\"I know that much,\" I said. \"I was glad that she called because it was her that got my dad to dance with you.\"\n\n\"Don't be,\" said Helena. \"She called him to make sure that both you and he were at the dance, so she could sneak off to fuck Russell. Apparently, they were going to a motel this time, because you caught them at your house last time. She didn't know what time you were going to be home and she didn't want to take the chance of getting caught again. From what the doctor said, and the police report that they filed at the scene, your mom was performing oral sex on Russell while they drove to the motel.\"\n\n\"Apparently, he lost control of the car or he just wasn't watching the road and they slammed into a tree. The airbags worked perfectly and Russell has only one injury, but it's a big one. Okay... it's probably a small one,\" she laughed. \"She apparently bit his you know what off. He also lost a lot of blood.\"\n\n\"Your mom, on the other hand, has one side of her face caved in. She has a lot of damage to those same facial muscles and a possible concussion. The force of the accident caused her jaw to snap shut so severely that it split her mandible. She also lost six of her teeth. Since she was leaning sideways she broke several ribs on one side and forced her shoulder out of the socket. She also severely twisted her spinal column. They say that it's a wonder that she didn't sever her spinal cord. They also say that it's going to take some time but they expect for her to walk again, someday.\"\n\n\"I can't believe that fucking bitch was going to cheat on him again,\" I said. \"Helena, Daddy was right. We just don't need her in our lives.\"\n\n\"Maybe they can't help it,\" said the woman across the room.\n\n\"I don't understand you, ma'am,\" I said. \"But then, I don't understand your husband either. You're a beautiful woman and you two have two adorable little girls. You're a lot more attractive than my mother is. Why the hell would he cheat on you with her?\" \n\n\"Your mother isn't the only one,\" she said. \"But she'll probably be the last one. Helena, he never cheated with you, did he?\"\n\n\"Of course not,\" said Helena, as if she'd been asked if she'd eat dog poop.\n\n\"But he tried didn't he?\" asked his wife. Helena nodded her head.\n\n\"Russell would try to screw a snake if he could get it to hold still long enough to get his dick into it. The only good thing about him is that he's a good provider. My girls and I need that financial security. My plan was to wait until my girls were old enough to understand the situation and then divorce him. That may all be thrown up into the air now. I'm pretty sure that your dad is going to name Russell in his divorce case. I'm also sure that when that happens your mom will sue him for something. And I'm sure he's going to lose his job over this. I might need to just go ahead and try to get my piece of the pie before he's totally broke. I'm sorry for how all of this affects your family young lady, \"she said.\n\nEven as she said it, a light bulb went on in my head.\n\nA short time later my dad came back. Dean called his parents and told them that he was on his way home. He hugged me and gave me a quick kiss and then said goodbye to everyone. My dad sat down next to me in the space that Dean had been in. I got up and sat down on the other side of him pushing him over next to Helena who immediately claimed his hand again.",
        "We sat there talking about anything other than the accident. For a long time we talked. I eventually dozed off to sleep. When I woke up, a nurse was tapping me on the shoulder. I'd fallen asleep with my head on my dad's shoulder. He was asleep with his head back and Helena was in the same position I was, only on the other shoulder. She also had her arm wrapped around his as if she had no intention of letting go of him. It seemed strange that I don't remember my mother ever holding on to him that tightly. Maybe if she had, the side of her face wouldn't be caved in.\n\n\"She's out of recovery now,\" said the nurse. \"Can you wake your mother and father and tell them that she's awake but she can only have visitors for a few moments and you'd better move quickly, because with the amount of pain killers they gave her, she'll be asleep soon.\"\n\nI shook my dad and Helena awake, thinking about how the nurse had called them, \"My mother and father.\" It actually felt right. \n\nWe took the elevator up to the fifth floor. The nurse there told us that we could go in one at a time and stay for about five minutes. My dad headed for the door. And Helena grabbed his arm and yanked him back.\n\n\"Jim, don't go in there angry. She's just come out of surgery so she's in a lot of pain already. This is not the time to just unload on her. Just go in and say hi. Can you do that for me?\" He balled up his fists and finally opened them and nodded his head. Helena was amazing.\n\nMy dad went into the room. He was gone for about fifteen seconds and came right back. I went in then. One side of her face was completely enclosed in a bandage. She had tubes that delivered medication going to one arm. Her shoulder on the other side was in a sling and they had her in some kind of frame that kept her spine straight and made sure she didn't roll over during the night.\n\nThere was some kind of metal Halo attached to her head that ran from the top to the bottom and prevented her from opening her mouth. I guess she'd need that until her jaw healed.\n\nHer eyes moved with me as I walked around the room. \"Hi Mommy,\" I said. \"How do you feel?\" A sound that was halfway between a grunt and a whine came out of her mouth. \n\n\"I told you if you cheated on him again that bad things would happen to you. But you didn't listen, so you deserve what you got. And what you're getting is a divorce. Mom, since we're the only ones in the room, I'm going to let you in on a little secret. I was never going to let this slide. That was my plan all along. Ever since I first caught you, I started looking for someone to take care of Dad when I go off to college. Helena is perfect for him. I appreciate the help you gave me in getting them together. It looks like she can take it from here.\"\n\nHer eyes got bigger and it looked like she was trying to say something but the metal circle prevented her jaw from moving. It looked like just attempting to move it caused her pain though.\n\n\"You should be grateful to her though. If it wasn't for her, he wouldn't have even come in here to see you,\" I said. She was looking at me angrily. \"Mom, don't be upset with me. This wasn't my doing. Although I wish I'd thought of it. Dad knows about you and Eddington, but it wasn't me who told him.\"\n\n\"He found out about it just before the police came to get us. Guess what, it wasn't the police either. It was Coach Kleatz. The Coach was pissed about Daddy and Helena. He got drunk and told Daddy that he shouldn't be trying to hog all of the time with Helena because Eddington was screwing you. Daddy knocked him out. He knocked him on his ass in front of the whole school including the guys on his team.\"\n\n\"That got me to wondering. How exactly would the coach have known that you were doing Eddington? The coach and the principal aren't exactly friends. You did the coach too didn't you Mom?\"\n\nI looked in her eyes and she couldn't face me. I just shook my head. \"What are you doing Mom? Are you trying to set yourself up as some kind of specialty whore, who reserves herself for scumbags?\"\n\n\"Well, I guess my five minutes are up. I probably won't be coming by to see you very often. So see ya.\"\n\nWhen I got back outside, Dad took my hand. \"Thanks for everything Helena,\" he said. \"I don't think I could have done this without you. I've thought a lot about what you said and it makes sense, but I'm just not sure I can do that. The whole talking to her thing; I'm not sure I could pull it off. Even now when she's not in the room, I feel like strangling her. And that asshole Eddington....\" He took a deep breath to calm down.\n\n\"Anyway, I'm sorry if my problems ruined your evening. Come on Kit. Let's go home,\" he said. \"Did you drive my car here?\"\n\n\"Helena did,\" I said. \"I drove her car. Remember, she handed you your keys.\"\n\n\"Have you still got my keys, Melinda?\" asked Helena. I nodded. \"Okay we'll see you at the house.\" My dad's mouth dropped open but he'd been listening to her all evening, so he just went along with it.\n\nWhen we got to the house, I just went up and changed and went to bed. I could hear the two of them talking even as I fell asleep. When I woke the next morning, I showered and went down to grab something to eat. My dad was asleep and purring on the couch. I heard movement in the kitchen. I went in and Helena was standing in front of the stove. She had two frying pans going. In one she was frying bacon. In the other she was making pancakes.\n\nWhat amazed me the most was what she was wearing. She had on my dad's U of M sweatshirt and nothing else. I was sure she was wearing underwear but, I wouldn't have bet on it.\n\n\"I borrowed a couple of things from you,\" she said. \"I didn't want to wake you.\"\n\n\"I can't fit any of your mom's things.\" That solved the underwear question.\n\n\"Why didn't you borrow some jeans or a skirt?\" I asked. She arched her eyebrow and I got it. She wanted my dad to see her in some of the things he loved most.\n\n\"We were up talking all night,\" she said. \"He's really upset. The two of us are going to have to help him through this. Melinda, I told him all about ME last night. I think that he's a bit upset with me.\"\n\n\"Why would he be upset with you?\" I asked.\n\n\"Because I need to be honest with him,\" she said. \"I don't want any secrets between us. So I had to let him know that I wasn't just at the dance for the hell of it. I had to go ahead and tell him that I've been pretty much stalking him since I first met him at the specimen hunt in the woods. I guess that made him see me as something like your mother. I think he really believes that I'd go after a married man. The only way for me to let him know that I'm really not that bad would have been to let him know who told me that he was probably available. And I couldn't do that without ratting you out.\"\n\nIf I hadn't been sure of her belonging with my dad, it was that statement that convinced me. She not only belonged with my dad, she belonged with us. \"Don't worry, Helena,\" I said. \"We'll all come clean after breakfast.\" She nodded her head and held up the fork that she'd been turning the bacon with and the spatula that she'd been doing the pancakes with. I took the fork. I'm terrible at making pancakes.\n\nAfter breakfast, Helena borrowed a pair of my sweat pants. Naturally she picked the blue ones and they matched daddy's sweatshirt that she refused to surrender. She packed a lunch and with Daddy arguing and complaining the whole way, took us out of the house for a picnic.\n\nWe ended up back in the woods in the same place that we'd had the specimen hunt. The three of us talked the whole time and I admitted everything. Helena also admitted to my dad that she had the hots for him. The saddest part was seeing that my dad was still angry, but that he simply hadn't gotten over what my mom had done. There were several times when he told Helena how pretty she was and even said \"I'd be crazy about you if I wasn't...\" we all knew what he meant.\n\nHelena asked me why Dean wasn't there and I reminded her that it was Sunday and that he'd have to be in church until at least early afternoon. When we left the park and headed home, we got a call from the hospital. Mom was awake and badly wanted to see my dad. He gave the nurse, Grandma's phone number and we went home. We stopped off at Helena's apartment, because she needed clothes.\n\n\"How long are you staying?\" my dad asked. She arched that eyebrow again. We watched movies and relaxed for the rest of the day. Dean joined us after he got out of church. We sat there and watched movies and talked and laughed and ate. I did notice that Helena was never more than a few inches away from my dad.\n\nThe next day, we all went back to the real world. I had assignments to turn in and a test to take. The whole day people kept looking at me. The guys on the team kept walking up to me and yelling or laughing. \n\n\"Pow,\" they said. They were throwing pretend punches too.\n\nI didn't find out what was going on until almost lunch time. No one knew what had actually gone on at the dance. Not many people heard what coach Kleatz had said to my dad, but everyone saw the results. The strange thing was that no one realized it until this morning but Coach Kleatz was in the hospital too. When he'd landed on his ass, he'd broken his coccyx.\n\nThe assistant coach was holding practice. Near the end of the day we were all called into the auditorium for an assembly. The assistant principal explained to us that Principal Eddington had been involved in an accident over the weekend and would be hospitalized for the near future. She told us that we would continue to work as if he were still here because that's what he'd have wanted. She told us to keep him in our prayers, which made me glad that I didn't pray.\n\nOne person did ask how long he'd be gone. And she told us that she didn't know but that he would be back as soon as possible. Another person asked the extent of his injuries. That set me to laughing. I didn't say it but the thought that went through my mind was that the extent of his injuries was about six inches.\n\nI got home and looked through the refrigerator. I had cooked dinner once or twice before so I decided that I would make dinner. I had plenty of time because Daddy wouldn't get home from work for at least another ninety minutes. I was really surprised when I heard a car pull up.\n\nI was even more surprised to hear someone knock on the door. I opened it and there stood Helena. I just moved out of the way and she came in.\n\nShe went into the kitchen and looked around. \"What are you making,\" she asked.\n\n\"Burgers,\" I smiled. \"I'll get them ready and let daddy grill them when he gets back from his run.\"\n\n\"He runs?\" she asked. I just nodded. \"Okay, what are we making for sides?\" she asked.\n\nI shrugged my shoulders. \"How about a nice big salad?\" she asked. \"We'll mix in some of everything we can find and if you don't like something, you just don't put it on your plate.\"\n\n\"That's a good idea,\" I said. She got out a big bowl and we chopped up vegetables and onions and mushrooms.\n\n\"Do you think he'd mind if I ran with him?\" she asked.\n\n\"I think he'd love it,\" I said. And she did. When my dad got home she was waiting for him in workout clothes and I'm sure he noticed how great she looked. They came home and took showers and we all had dinner together. During dinner, we talked and we avoided the gorilla in the room. Helena mentioned that her car was making a funny sound and she lost power sometimes. After dinner, Daddy pulled her car into the garage and went to work on it. Helena pulled out her reading glasses and started checking her papers in the garage near him.\n\nMy grandmother called and asked if she could come over. Dad told her that she was always welcome. When she got there, Helena went upstairs and took a long bath. My grandmother wanted to know why Dad hadn't been at the hospital Sunday or that day. She looked at me and asked me if my dad had prevented me from visiting my mother.\n\nApparently Mom hadn't told her mother anything. \"I know she was in an accident, Jim, and she wrecked a car. But it isn't even your car. Why are you so angry at her?\"\n\nAs my dad explained the situation and the details of the accident to my grandmother, she almost passed out. She apologized to my dad and he explained that he was making sure that she got the best care possible, but he was still too angry and too hurt to go and visit her. My grandmother left after that and still looked shaken as she got into her car and drove away.\n\nA week later, we all attended the Harvest festival dance together, me with Dean, of course, and Dad with Helena. If I'd thought that she'd looked spectacular at the practice dance, it was nothing compared to the actual dance.\n\nThe biggest difference was the way they were treated. Everyone simply knew they were a couple. Not one guy came over to ask her to dance. I think there were two reasons for that. The first was because she never let go of my dad the whole night. She even held his hand while they ate. And the second was because people were still talking about what happened to the coach. I heard a couple of the guys say, \"Dude if you ask her to dance, that guy will knock you out.\"\n\nIt was a perfect evening. It allowed Helena to come out of her shell and really show people how friendly, charming and funny she could be. She didn't have to worry about guys hitting on her constantly, with my dad there. And her smile and the light in her eyes tripled. Of course, most of the time she was smiling at him, but that was the way it should be.\n\nEven after the dance was history, she had simply changed. She no longer needed to hide behind the lab coats and dorky safety glasses, so there were a lot more guys crashing into walls. But every night, she was home waiting for my dad and sometimes she even drove out to the plant he worked at, as if she couldn't wait for them to be together again.\n\nThat was the way that things went for the next few weeks. Both dad and Helena told me that they'd take me to the hospital if I wanted to go. Dad also told me that if I wanted to go alone that I was more than welcome to use either Mom's car or the jeep that Dad drove during the winter.\n\nAs far as Helena went, the two of them were almost never apart. They were only away from each other when they were at work and of course, while they slept. Their romance, if you could call it that, was strictly high school level. I don't think I ever saw them kiss. I knew how Helena felt about my dad but I wasn't sure how he felt about her until one night he got home and she wasn't there. He didn't ask me anything so I decided not to tell him. He looked all over the house and then looked outside. He still didn't say anything so I didn't volunteer any information.\n\nI did however secretly take a video of him looking all over the house and him repeatedly looking out of the window.\n\nWhen she finally showed up, he pretended that everything was fine. \"Oh hi,\" he said, and headed out to the garage. Helena looked at me strangely.\n\n\"What did I do?\" she asked. I told her.\n\n\"Why didn't you tell him we had parent/teacher conferences today?\" she asked.\n\n\"Because it's time,\" I said.\n\n\"Time for what?\" she asked.\n\n\"Helena, my dad is in limbo. It's time for him to re-enter the world. He doesn't even think about Mom. She's been in the hospital for over a month and we've never gone to see her.\"\n\n\"I'll take you to see her if you want,\" said Helena.\n\n\"Hell no,\" I said. \"I don't want to see her.\"\n\n\"Maybe he doesn't either,\" she said. Even as I watched the expression on her face as she said it, I knew that her hackles were up and she was getting ready to fight for my dad.\"\n\n\"Calm down Helena, but we both know that he needs to start some kind of divorce proceedings or something. He can't just forget about her and hope she'll go away. She's been emailing me daily and I'm sure she's emailing him too. As soon as she can talk, she'll probably start calling. And then, there's you two,\" I said.\n\n\"What about us?\" she asked. Her cheeks turned red and she blushed even as she said it.\n\n\"Helena, he really likes you, a lot,\" I said. \"Do you know that?\"\n\n\"Well, I more than like him,\" she said.\n\n\"Exactly,\" I told her. \"But he's afraid to admit that he feels the same way about you.\"\n\n\"How do we know he does?\" she asked. \"Maybe he just thinks of me as a family friend.\" I showed her the video I'd just taken of him wandering around the house looking in every room and checking the window every few seconds.\n\n\"What was he looking for?\" she asked smiling.\n\n\"You, Helena,\" I smiled. \"He won't admit it. But he missed you something awful. So it's time for him to stop pretending and move on with his life.\"\n\n\"Hold that thought,\" she said. \"It IS time.\" I watched as she went through the kitchen and out the connecting door into the garage. My dad was leaning over his car doing something. I have no idea what he does with that car all of the time. I think he talks to it. But she tapped him on the shoulder and he straightened up. She wrapped her arms around him and pulled his face down to hers and kissed him. At first, he just stood there but then his arms went around her as well and he started kissing her back. Watching the two of them made me wish that I wasn't such a good girl and that Dean and I hadn't taken that chastity pledge. I got weak in the knees just watching them.\n\nPrincipal Eddington returned to school the next day. And the coach came in the following week. The coach walked bent over and very slowly. Eddington never left his office. He had a new secretary too. It was his wife. She smiled at me every time I passed her in the halls. She asked about Mom and I had to tell her that I hadn't seen her.\n\nShe asked me how my dad was doing and I think she really cared. After all, she'd been through what he was going through herself, so she knew how painful it was. I think they were all waiting to see what my dad was going to do. Even Eddington himself asked me about my dad. I had to tell him that it would be at least another week before Mom could get the metal brace off of her face and try to talk. Her back was less painful and she'd begun to regain the feeling in her legs. The bruises had gone down on her face but her cheek bones on the right side of her face had been crushed and she was definitely going to have to have reconstructive surgery. I'd learned all of that from my grandmother who called often and asked us to visit my mom.\n\nIt just seemed like everything was waiting for my dad's decision and his plan of action. Eddington knew that if my dad mentioned him in the divorce, his career would be over. My mom would probably try to sue him and successful or not, just the mention of what had gone on between them would damage his career even further.\n\nCoach Kleatz was afraid of me and stayed as far as he could away from Helena. He acted as if my dad would come out of the woodwork and hit him again. He did write Helena a letter apologizing to her for his behavior and promising to leave her alone. I think the biggest problem for him was that he'd always been in his mind the tough guy around the school. And a lot of his players were still laughing at him behind his back.\n\nHelena and my dad were in a holding pattern too. She practically lived with us, but they didn't sleep together. They may as well have because there were so many nights that I'd get up to get a drink and find them asleep on the couch together, still fully dressed but clutching each other as if their lives depended on it.\n\nFinally the tension ended. I picked up the phone without thinking about it and heard my mother's voice. \"Hello Melinda, is your father available?\" After my shock wore off, I handed the phone to him.\n\nEven as he answered the phone, his back straightened out and his entire manner changed. He said a couple of words and then hung the phone up.",
        "Helena grabbed his hand and he smiled nervously. \"I guess there's no point in putting this off anymore. Let the battle begin.\"\n\nHe went to see her the next day. From what he told me later, and what I learned from Grandma, when he walked into the room she'd been sitting up straight in her bed. She's lost some weight and had make-up on her face to reduce the effects of the bruising and the disfiguration. She went on the aggressive, as usual, only to find out that it wouldn't work anymore.\n\n\"James, I'm saddened that you couldn't manage to come and see me one time until now,\" she said. \"How are we supposed to fix our marriage if we don't talk? I realize that I made a huge mistake and it will take us a great deal of time to get over it. In fact, I don't think that we can get over it alone. I have a therapist here in the hospital. She does do some family therapy. I think that the next time you come over, perhaps you should bring Melinda and we should have a session with her.\"\n\nMy dad didn't say a word. He just put a stack of papers down on her bed near her. She looked at the papers and started crying. \"No,\" she said. \"We're not doing this. We need to talk about it.\"\n\n\"Okay, Theresa talk,\" he said. \"Talk to me about why you did this to us. Talk to me about how our daughter found you and that asshole, in our bed, in our house. Talk to me about how an eighteen year old girl had to try to save her father from getting his heart broken and then had to put all of the pieces back together when I found out anyway. Talk to me about how that asinine coach knew about what you were doing with Eddington. Talk to me about how Melinda caught you and you swore you'd stop but yet again you started up with him. Talk to me about how a grown woman would give that asshole a blow job while he was driving her around. Go ahead...Talk.\"\n\n\"Jim, I'm sorry,\" she whined. \"We have to get by this. I'll never do it again. I swear it.\"\n\n\"You told Melinda that same thing,\" he said. \"I guess there's nothing left to talk about. Get a lawyer Theresa.\"\n\nThe very next day my mom was served with her official divorce papers in her hospital room. According to my Grandma, who was there, a woman who looked like a college girl came into the room. She was chewing gum and carrying a file folder. \"Theresa Carson?\" she asked. My mom expected it and just held out her hand. That began the fight. Over the next few weeks, they fought. They sent charges back and forth.\n\nMy mom refused to agree to the divorce and even mounted counter charges. She claimed that dad had moved his own lover into the house, which was technically true. Helena felt awful about it. The day after the accusation came down; she went back to her apartment for the first time in months. My dad went and got her and brought her back to the house. He told her that she belonged with us and nowhere else.\n\nThe battle raged for weeks. I finally couldn't take it anymore. I asked my dad when his next meeting with Mom and her lawyers was. He told me the very next day. I went and saw Mom that evening. I explained to her that she'd lost Dad. There was simply no way he'd ever take her back. The best thing possible for her would be if they could at least be civil.\n\nThings had gone so far back and forth that Dad had taken back his original settlement offer. He now offered her nothing. He basically just wanted to say, \"Fuck you. Get out of my house.\" Dad wanted the house, full custody of me and for Mom to never bother him again. He refused to pay her for ruining his life. He was also going after Eddington for everything he could.\n\nI invited Mr. Eddington and his wife to the meeting. I sat there at a long table with Dad and Helena on one end. Mom and her lawyers were on the other and Mr. Eddington and his wife along one side.\n\nI gave them my plan. My plan called for Mr. Eddington to pay Mom alimony for four years and re-hire her as his secretary. That way, Mom could go back to college and pick up some skills so when the alimony ran out she'd be able to support herself. Dad got the house, Mom got to keep her car and she took over the lease of Helena's apartment. In exchange for this, Dad agreed not to sue or mention Mr. Eddington in the divorce and Mom didn't try to bring about her fraudulent sexual harassment case.\n\n\"I could go for that,\" said Eddington. His wife looked relieved. She smiled at me and told me I was going to be a great lawyer someday. It was a good deal for the Eddingtons. Paying my mom for four years would be expensive, but not nearly as expensive as either one of the lawsuits my parents would have brought. He also got to keep his job. Neither my dad nor my mom looked convinced.\n\n\"It just doesn't seem right,\" said my dad. \"It's like they got to destroy my life and my family for free. Theresa just gets to walk away without any problems and no penalty. And he gets to just walk away and keep his career.\"\n\n\"I won't agree to this at all,\" said my mother. \"I'm not giving up my family. I admit that I was wrong but I was coerced. Eddington was in charge. He was a person in authority. I had no choice. If I hadn't gone along with it, I could have lost my job. I'm too old to start over. I want my life and my family back.\"\n\n\"Shut up Mother,\" I snapped. \"You need to accept this deal so we can all move on. Mr. Eddington may have been your boss, but you're forgetting that I was the one who caught you and if I testify what I heard and saw, your case goes down the tubes. You're also forgetting the fact that in the accident, you no longer worked for Mr. Eddington, so there was no coercing anyone.\"\n\n\"There are two other things you need to consider. The first is that all it would take is a word from me to have Daddy take you off of his health care account. Without that, you'd never come up with the money you need to get your face fixed. You'd have to go through the rest of your life looking like a Picasso.\"\n\n\"And finally Mother, you didn't give your family away, you threw us away. We just weren't as important to you as what you were doing with Mr. Eddington, so you don't deserve us. If you push this too far, it probably won't even be possible for you to someday become friends again. Do the right thing, Mom. End some of Dad's pain. Let him go.\"\n\nI turned to my father. \"Dad, you're right, of course. You're the one who got hurt here. I see that. So I only have two things to tell you because even though you were right about your points, you have to look beyond this. Both Mom and Mr. Eddington ARE paying for what they did. It probably isn't enough, but they ARE paying.\"\n\n\"Mr. Eddington had uhm...a vital part of his anatomy taken away from him. From what I understand, it is not going to be easy for him. The reattachment surgery was unsuccessful and they're going to try to build him one from scratch like they do with transgendered people. So that's one way he's paying. He'll also have to pay Mom alimony so you don't have to.\"\n\n\"Isn't it enough what he'll have to go through? Or does his family have to pay too? His children deserve to be taken care of, Dad. They're victims too. If you ruin his career, you're also ruining the lives of two innocent children who haven't hurt you. He isn't going to have an easy time even if you do this. His wife can't stand the shit out of him. She'll make his life hell. And having to work with Mom every day while she blames him for losing us; won't be easy either.\"\n\n\"Mom is paying too, Dad. She's losing the man she claims to love and her daughter too. She's losing her home and most of her friends. Even the job that Mr. Eddington is giving her is only temporary. She's going to have to get her shit together and start her life all over. Life isn't easy for older unmarried women.\"\n\nMy mom started crying then.\n\n\"And if you look at it Daddy, this will be better for you in two ways too. You're getting rid of a woman that you were never going to be able to trust again. You're getting rid of a woman who cheated on you, more than once. You get to move on with your life and you never have to see her again. We both do. And in exchange for that, you get the sweetest, most beautiful, most wonderful woman, I know to share your life.\"\n\nMy dad smiled and hugged Helena.\n\n\"Why are you hugging her? I was talking about me,\" I smirked.\n\n\"Very funny, Kit,\" said Helena. My dad nodded his head.\n\n\"Okay I'm in,\" he said.\n\nI looked at my mom. She nodded her head then lowered it and started to cry again. The lawyers agreed to write it up just as I said it. The idea of having one of the cheaters pay the other alimony was unusual but both sides were sure that they could make it work. If a judge wouldn't agree to it as written, Mr. Eddington would simply send the alimony payments to Dad, who would then pass it on to Mom.\n\nThree days later, they met up again to sign the documents. My mom had my grandma there with her. My dad had Helena and me. And Mr. Eddington was alone.\n\nAfter the documents were signed my mom tearfully reached for my dad. She asked him for a last kiss and Helena said, \"No!\"\n\nIt was probably about a week later that Helena came to me for a favor.\n\nShe handed me some money and the keys to her car and asked me to take Becky and Dean to the movies.\n\nI guess I'm not the sharpest knife in the drawer because I didn't get it at first. Then suddenly I understood that she wanted some alone time with my dad. I giggled and looked at her.\n\n\"You don't have to send me away,\" I said. \"Is this something special? Are you guys experimenting already? What do you two usually do?\"\n\n\"We haven't actually...\"\n\n\"Oh my God,\" I said. \"I'm outta here. I had no idea that you two hadn't...\"\n\nThings must have gone really well because the next morning both of them were smiling from ear to ear.\n\nA few months later and here we are at the church. I'm standing here serving as both the maid of honor and giving the bride away. Shit, why shouldn't I give her away, it was me who introduced them and put them together?\n\nThe problem is that my mom just won't shut up. I'm not sure why they invited her. Maybe they wanted to rub it in her face. Maybe she just crashed the wedding. But we had to get this wedding done this week. Next week I'm heading off to college and I'm not sure how much longer Helena will fit into her wedding dress. The doctor says she may be having twins.\n\nA few moments later the priest asks the question at the end of the wedding vows.\n\n\"Does anyone here know of any reason that this man and woman should not be wed?\"\n\nI've moved back to stand next to my mother. As she takes a breath to speak I lean over and whisper sweetly into her ear.\n\n\"Mother, if you open your mouth, I'll slap the shit out of you, right here in this church.\"\n\nOkay, this is the part where I say, \"And they all lived happily ever after.\"\n\nThe end."
    ],
    "authorname": "StangStar06",
    "tags": [
        "cheating",
        "romance",
        "mustang"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/leave-me-breathless"
}