{
    "title": "Tears of the Fallen Ch. 19",
    "pages": [
        " Here is the next chapter. Thank you for the wonderful supportive comments #hugs\n\nEnjoy \n\n*\n\n\"Well that was unexpected.\" Rhianna grinned up at Caleb, who returned her rapt gaze though there was a hint of thoughtfulness in his golden brown eyes.\n\nThey were gathered downstairs in Andrei's office at the Dive, the Romanov twins lounging on the sofa with speculative expressions on their faces. Rhianna had told Caleb of the earlier altercation when he'd arrived to pick her up. He had immediately summoned the twins to the club and ordered Pietro to have someone tend the bar and meet them downstairs.\n\nPietro wasn't looking too happy at being scrutinised so closely, his body language tense and a deep scowl pulling at the scar on his cheek. \n\n\"Yes, it is a very interesting development,\" Caleb agreed, his gaze peering off into the distance for a moment as he considered the implications of what had happened.\n\n\"If you're going to discuss me don't you think you should clue me in,\" Pietro grumbled, his irritation ratcheting up a notch. He didn't want to be the centre of attention and he especially didn't like some of the glances Alexei was shooting in his direction. His friend was clearly unhappy with what had happened between him and his daughter. Pietro was sure Alexei would have something to say about that very soon.\n\nIt came sooner than he anticipated though, as it was the blond vampire who answered him. \"You've taken my daughter's blood,\" Alexei growled, an undefined emotion in his eyes. \"There has been some speculation that V\u00e2rcolac blood could heal your scars, however that doesn't appear to be the case.\"\n\n\"Alexei...\" Pietro wasn't quite sure what he was going to say to his friend, he just knew he would have to come up with something good. He was surprised when he was cut off.\n\n\"That conversation is for another place and time.\" Alexei's tone held a note of finality that his friend was wise enough not to challenge. He was right anyway. They would have that conversation at a later date.\n\nPietro turned back to Rhianna and Caleb, raising an eyebrow in query.\n\n\"It would appear that while V\u00e2rcolac blood can't heal your scars, it has significantly boosted your recovery time from the aftereffects of your ordeal,\" Rhianna explained. \"From that little display, I would hazard a guess that you're back to full strength.\"\n\nAs her words sank in, Pietro replayed the fight, remembering the table where the vampire had landed. He'd thrown the other male clear across the room and with such force it had shattered the thick wood into splinters! No wonder the room had responded instantly when he had warned them. Before Europe, he had been strong but now...he was stronger than he had once been.\n\nHe had wondered at why he had felt so strong...if it could have had something to do with Cassia's blood, but the realisation still stunned him. He could feel the raw power of his increased strength flowing through his veins. It made his heart pound hard and a feeling of dizziness assault him, but he dampened the weakness down, his beast preening at the enhanced abilities he now had. \n\nCassia's blood had not only nourished him, it had made him stronger. He was staggered at the knowledge and didn't know what it could mean for him. He just knew that right now, he didn't feel half the failure he once had. He would analyse what else he was feeling later.\n\n\"I'm stronger.\" It didn't cross his mind to withhold the information. These were his oldest friends; this was his Queen and King. They had a right to know because it could help combat the threat from Europe.\n\n\"Did Cassia bite you?\"\n\n\"Caleb!\" Alexei's growl was fierce.\n\n\"I'm sorry, Alexei, we're not trying to make this more difficult for you than it already is, but we need to know.\" Annie's expression was sympathetic as she reached across and placed a hand gently on the Ancient's arm. \"Caleb's question is a good one though possibly could have been broached with a little more tact.\"\n\nHer mate grinned, his expression unrepentant, and it was hard not to laugh at his smugness. He was enjoying watching Alexei's discomfort, as was Andrei.\n\n\"Karma's a bitch, isn't it?\" Andrei laughed, mischief dancing in his eyes as he teased his twin.\n\n\"Keep it up,\" his brother answered, cold, hard menace in each word.\n\n\"No she didn't,\" Pietro interjected, before the Romanov twins could devolve into one of their rare, but vicious fights. It was bad enough dealing with Andrei after his dalliance with Cassia, but Alexei too? He could understand his friend's need to protect his daughter. Alexei didn't need his nose rubbed in the fact his best friend had slept with her.\n\n\"So the infected vampire just needs to drink V\u00e2rcolac blood to enhance healing,\" Caleb said, tapping a long finger against his lips. \"Do you think there would be some merit in testing their blood against the live sample of the toxin? Possibly we could discover the antidote or an inoculation that would protect vampires from being infected?\"\n\nAndrei and Alexei both bristled, disbelief crossing their faces. \"You want to experiment with our children's blood?\" Andrei drawled softly, the small smile playing at his lips a blatant warning sign.\n\nRhianna placed a hand on her mate's arm when he went to speak, her gaze firmly fixed on Andrei. It halted whatever response he was about to give, his eyes searching her expression for a moment before he inclined his head.\n\nShe gave him a warm smile, glancing quickly at him before turning back to the others. \"Andrei, you know in your heart that the V\u00e2rcolac, Rayne included, would be the first to offer samples of their blood to try to protect those they love. It would be no imposition to them and they would come to no harm from it. We would never allow any harm to come to them.\"\n\n\"It still doesn't mean we have to be happy about our children being used as guinea pigs, Annie,\" Alexei retorted, making it clear he shared his brother's views. \"Pietro's recovery occurred naturally. Cassia chose to nourish him with her blood. This...this...experimentation isn't natural.\"\n\nLavender eyes flared brightly, the air around them burning hot for the briefest of moments before it cooled down again. The male vampires mopped at their brows with the exception of Caleb, who stood behind his mate with his hands resting on her shoulders. \n\n\"We use the tools that fit the job,\" Anakatrine, Queen of Vampires, announced, leaning into the strong body behind her. \"We have not suffered for countless millennia to get to this point just to have petty egos and overprotective fathers get in the way. Your love for your families do you credit, however our people are in danger. Your children are our future. No harm will come to them from any actions we may take this day.\"\n\n\"I hate it when she does that,\" Alexei grumbled, his anger waning as he watched Rhianna blink slowly once, and then turn her head to look up at Caleb.\n\n\"It is rather disconcerting when you're not expecting it,\" she smiled ruefully.\n\n\"This is something we need to talk to Rafe and Mallen about, possibly Cassia too,\" Caleb announced, his hard stare focusing on the Romanov twins ensuring they weren't going to continue to be stupid. When he saw they were thinking with their heads as opposed to their hearts, he relaxed his tense stance, gathering Rhianna close. \"We'll head over there right now. Rayne and Gard are due to check in soon too if they haven't already. It might be best if you two stay here.\"\n\n\"Fuck that, it's my daughter that's involved. Andrei can keep an eye on things here. I'm heading back to the pack with you.\" Alexei didn't wait for approval from them, he spun on his heel and headed out the office, using the back entrance to leave the club.\n\n\"Can I watch when you and my brother have your chat?\" Andrei laughed, merriment dancing in his eyes as Pietro watched his friend depart.\n\n\"Bite me!\" the bartender growled, nodding to Caleb and Annie, and heading back upstairs to his bar. He'd had enough of talk about healing and Cassia. He was roiling inside, a fury so dark that he hoped that no one decided to test him again until he had it firmly under control. \n\nSomething about the thought of Cassia's blood being given to others infuriated him. It made no sense, seeing as he'd cut off all ties with the wolf. It didn't stop his loathing though or dampen the need to rip something or someone apart with his bare hands...\n\n*****\n\nCaleb pulled up outside their home and turned off the car engine. For a moment he just sat there, listening to the silence, and then he turned his head to look at the woman at his side.\n\nRhianna's eyes were closed, her face relaxed in sleep. It had been a particularly long day for both of them though he oddly felt wide-awake. Staring at his beautiful mate, he was loath to wake her up, so he slid soundlessly from the car, moving around to the passenger side. She stirred a little when he scooped her out of the car, and then she settled against his wide chest.\n\nHe was often staggered by the trust she had in him. She always had, even when there had been times he'd given her reason to doubt him. He had always thought he had appreciated just what she brought to his life, but it had only been when they were apart that he had realised just how lost he would be without her. \n\nHis Annie was all that was good about him. She was the lighter side of his soul that often tempered the darkness. He couldn't love her any more than he did. She was the reason his heart beat, the single most important thing in his life.\n\n\"You think too much,\" she murmured sleepily, rubbing her cheek against his chest as he carried her into the house.\n\n\"Have you taken up mind reading, oh wise one,\" he chuckled, kicking the door closed behind them and heading up the ornate staircase to their room.\n\n\"Don't need to. Your heart picks up a beat when you're thinking deeply about something. I can hear it thudding in my ear.\"\n\nCaleb dropped a kiss on top of her head, gently laying her down on their bed. \"I can't keep any secrets from you, can I?\" he laughed, his golden brown eyes glowing with love as he stared down at her.\n\n\"Would you want to?\" Her lavender eyes fluttered open sleepily, a hint of curiousness shining in their depths.\n\nHis hand reached out to brush her tangled curls from her cheek, lingering there to touch the softness of her skin. \"No, I do not wish to have any secrets from you, my love.\"\n\nFor a long moment she peered up at him and then she smiled, tangling her fingers in his hair. \"Right answer,\" she laughed, pulling his head down until their lips were mere inches apart. \"That deserves some kind of reward. What do you think would be a suitable one?\"\n\n\"You are such a wench at times, my heart. There is only ever one reward that I ever want from you.\" It was hard not to laugh at the smug expression on her exquisite face, and he settled on kissing her soundly to forestall any further conversation.\n\nKissing his woman was always like the very first time. It didn't matter how many times he sipped at the sweetness of her lips, he drank as if he were starved. Love, lust, and passion, collided in an instant spark between them, need clawing at his gut to be satisfied.\n\nEverything about his Annie filled him with an unquenchable thirst and he knew he would never tire of laying with her like this. \"I love you,\" he breathed into her mouth, kissing her answering words as they escaped her lips. \"You are my reason for being, my sweet Annie. You are the very air that I breathe. Tell me it will always be this way. Being apart from you almost crushed me. I was so afraid you wouldn't come home.\"\n\nShe moved quickly, pushing him back as she sat up, climbing astride him, and wrapping her arms around his neck. Resting her forehead against his, her serious lavender eyes demanded his full attention. \"There is nowhere else I would rather be, Caleb. Home is wherever you are and I will always come home to you. Please don't ever doubt that. Nothing will ever take my love from you.\"\n\n\"Annie...\" The wealth of love that travelled their mate bond enhanced her words; filling his heart with so much affection that the very last of his concern that he would lose her melted away in an instant. Capturing her mouth once more, he kissed her hard and bore her back against the bed, his hands peeling her clothes adeptly from her body.\n\nHe wanted to be gentle, he wanted to take his time, but his need to join with his beautiful mate was more than he could stand. Sliding deep inside her velvet warmth, Caleb rocked his hips slowly, sliding in and out of her body to the slow thudding of their heartbeats.\n\n\"Loving you like this is a moment of perfection, Annie. Nothing transcends being with you, nothing is more perfect than making love to you.\"\n\nA soft moan escaped her, her hips rising to meet his downward thrusts. \"I don't ever want you to stop loving me like this, Caleb. I want to spend eternity with you; joined together, feeling our hearts beat in tandem. I love you, my beautiful vampire, now and forever.\"\n\nThey danced together in the ancient rhythm of love, Caleb's lips travelled every inch of her soft skin with a feather light touch. He tempted and teased his love with long, slow caresses, inciting her passion, slowly building her up to that perfect moment of union that was just outside her reach.\n\nHow he loved every moment with her. He teased her mercilessly until she demanded more, and then he picked up the tempo, taking her with long, hard, deep strokes until her body arched up and she cried out her pleasure. Her body rippled around his, and it was enough to shatter his self-control and send him tumbling over the edge. \n\n\"Annie!\" Her name was ripped from his throat as his own pleasure peaked, and he was soaring on a wave of ecstasy so intense his entire body shook with the effort it took to hold himself up. \n\nHis Annie was trembling when he finally came down from the heady heights they had soared, and he soothed her brow with tiny kisses. With a final tasting of her trembling lips, Caleb lay on his side behind her, spooning her body against his, stroking a hand over the curve of her hip as their breathing began to calm down.\n\n\"I love you, Annie.\" Snuggling his face into the side of her neck, Caleb closed his eyes and allowed sleep to claim him.\n\nRhianna lay in the protection of her mate's embrace, listening to the gentle rhythm of his heartbeat that told her he had fallen asleep. She was sleepy too, but something was keeping her awake; something that teased at her subconscious mind.\n\nBeing careful not to wake Caleb, she raised herself up on one elbow, letting her eyes wander around the bedroom slowly; trying to find what it was that was nagging at her brain. Her gaze flitted over her dressing table, alighting on the old leather-bound book that was resting where she had left it.\n\nMasking Lavender, the second book Anakatrine had selected from her library, a book that hadn't been examined as thoroughly as the other because it hadn't appeared to be as crucial. She had read some of it, and been stunned at what it contained. The knowledge within belonged only to those of royal blood, and Rhianna hadn't translated it to English just in case it fell into the wrong hands. \n\nCaleb hadn't asked to read the book, he appeared to have completely forgotten about it. The only other person who could have read the text was Gard and she had no idea if he had even seen it let alone read it. Was she the only one to know what it contained? Should she mention it to her mate?\n\nCaleb had said he would never keep a secret from her. If she didn't tell him what she'd learned would that mean she was keeping a secret from him? The knowledge within the book couldn't truly relate to them, could it? They weren't really Anakatrine and Callain, they were but vessels for their spirits.\n\nNo, now was not the time to be diverted by things that would likely never come to pass. There was so much else at stake at the moment, and they needed all their attention to be focused squarely on Europe where the real danger lay. \n\nLying back down, Rhianna snuggled into Caleb's chest, sighing with pleasure as he gathered her close in his sleep. \"I love you, Caleb,\" she whispered, closing her eyes and allowing her tired mind to finally drift off to sleep.\n\n*****\n\n\"Mallen...oh my goodness...it works.\" The words whispered out of Cassia's mouth but everyone in the lab heard her, all heads turning to look at the blond wolf who was staring down a microscope.\n\n\"Let me see.\" Mallen strode across the lab, his expression hopeful as she stepped aside to let him view the results. \"Your lymphocytes are working.\" The words breathed out quietly, hushed awe filling the room. \"Your B-cells are creating antibodies to the toxin.\"\n\nMallen looked up again, a wide grin crossing his face as excitement filled him. \"I don't know why you thought of using a sample of your bone marrow as opposed to just your blood, Cassia, but it's worked.\"\n\nRelief like nothing she'd ever experienced before flooded through Cassia. The first attempt at just using her blood hadn't achieved the desired results and they'd all been bitterly disappointed. She'd had Mallen extract a little bone marrow and retested. That was where antibodies were made, and it seemed the logical choice. To find it had worked...Cassia was so overcome that tears flowed freely down her cheeks.\n\nShe couldn't account for how Pietro had become stronger though. He had only taken blood from her, not any bone marrow. Was it a mate thing? Would she ever know the answer to that? For the moment, she didn't care. They had finally found something that could counteract the toxin in Amort. It would take a while to harvest enough bone marrow from the V\u00e2rcolac to make sufficient antidote, but they would soon be able to inoculate every vampire against the poison. \n\n\"We have to tell Rafe,\" Cassia announced, laughing through the tears still streaming down her face.\n\nThe doctor smiled at her, his grin as big as Cassia's. \"You do it, honey. It was your idea and you've worked your butt off to get here. We'll start working on a suspension to deliver the antidote.\"\n\nGiving him a quick hug, Cassia ran out of the lab, slamming through the front door of the Alpha's home and nearly knocking Lacey over as she was coming downstairs.\n\n\"Oh, I'm sorry, Lacey!\" Cassia was immediately contrite, placing steadying arms out to ensure her Alpha didn't crash to floor. \"Is Rafe awake? I need to speak to him urgently.\"\n\n\"He's eating breakfast, I believe.\" Lacey laughed at the exuberant expression on the younger woman's face. She didn't ask any questions, merely escorted her into the dining room where her mate was tucking into bacon and eggs.\n\nRafe glanced up with a raised eyebrow as they entered, quietly placing his fork and knife down beside his plate.\n\n\"We did it,\" Cassia announced with the biggest smile. \"We have an antidote, Rafe!\"\n\n\"You're certain?\" Rafe rose from his seat to stride over to them. \n\nCassia nodded, trying to regain her composure and not giggle like a schoolgirl. \"The V\u00e2rcolac have antibodies in their bone marrow. We harvested a little of mine and tested it against the toxin. My B-cells immediately began multiplying to attack the poison. The process was still ongoing when I left, but Mallen agrees that it is a viable antidote. If any other vampires become infected as badly as Pietro, we can use our antibodies directly to cure them.\"\n\n\"Cassia, that's fantastic news!\" Rafe gathered her up in a warm hug, grinning at Lacey who had started to cry. \"Come here,\" he growled softly, pulling his mate into a group hug.\n\n\"Oh Rafe...Annie and Caleb will be so happy.\" Lacey fought to stop crying, relief in every word. \n\n\"Mallen is currently synthesising a suspension we can use to create a vaccination too, so that we can effectively inoculate the entire vampire race here,\" Cassia continued, stepping back and smiling as she looked at her Alphas. \"In theory...that will mean that even if they are infected by Amort, their own bodies should be able to fight the poison.\"",
        "\"You have made us so proud, Cassia,\" Rafe said, a burst of love and pride flowing down his Alpha bond with the blond wolf, bringing happy tears to her eyes.\n\n\"It was a group effort,\" she answered and felt another burst of deep pride, this time from both the Alphas.\n\nLacey extricated herself from Rafe's arms, gathering the younger woman close. \"You are an amazing young woman, Cassia Romanov, and we are so blessed to have you in our pack. You have given up much to help, not only the vampires, but also to protect your pack. It is time you now did something for yourself. Go and claim your mate, honey. Don't take No for an answer either. It's  your time now. We can handle everything else.\"\n\n\"I agree.\" Rafe smiled down at her, reaching out a hand to ruffle her curls affectionately. \"If you need any pointers, I suggest you ask your Aunt Loretta. She had the most difficult time convincing your Uncle Andrei that he was her mate.\"\n\nNow that she had finally done what she'd set out to do, Cassia could now look to her own future. Getting through to Pietro probably wasn't going to be that easy, but she had the blessing of her Alphas as well as her parents.\n\n\"That might be a good idea,\" she answered with a half-smile tugging at her lips. \n\nHeading back out into the compound, Cassia turned in the direction of her own house first. She wanted to pack a light travelling bag before she had a chat with Loretta. Her aunt had said she could talk to her if she needed to, and this seemed like as good a time as ever. Pietro de la Rios was about to be in for a big shock if he thought he could get rid of her that easily. Cassia wasn't coming back to the pack until she had her vampire in tow.\n\nHer parents were out when she got home and there was no sign of her sister. Cassia threw some clothes into a backpack, as she waited for her call to her mother to connect.\n\n\"Hi, sweetheart, is everything okay?\"\n\nShe smiled at the distracted quality in her mother's voice. Whatever she was doing, it had most of her attention.\n\n\"We found an antidote, Mom. We can cure any more vampires who are infected as long as we get to them in time.\"\n\n\"Cassia, that's fantastic! Oh honey, your father and I are so proud of you. I presume Rafe knows?\" \n\nThere was so much love and pride in her mother's voice that it brought happy tears to her eyes. \"Yes, I'm just back from speaking to him and Lacey. I wanted to let you know not to worry when you came home and find me out. I'm going to go see Pietro and I may stay with him for a little while.\"\n\nThere was a long pause before her mother exhaled softly. \"I'll let your father know and I will make sure he stays out of your hair until you and Pietro have had time to sort things out. Cass...there won't be a repeat of the last time, will there?\"\n\nAlthough she tried to hide her worry, Cassia could hear it in every word her mother said. She wished she were with her mom so she could give her a reassuring hug. \"Mom, I will be fine, really I will. I was just caught off-guard the last time. Now I know how difficult it will be to convince Pietro he's my mate, I'm prepared for him to put up a bit of a fight.\" \n\n\"If you need us, you know where we are, honey. We will always be here for you, no matter what. Now, go get that mate of yours and shake some sense into him. You should stop by your Aunt Loretta's before you head over there. She could give you some helpful tips on how to get through Pietro's thick skull.\"\n\nCassia burst out laughing, shaking her head. \"You're the second person to suggest that. I was intending to anyway. Okay, I'd better get going so I'll give you a call later tonight, Mom.\"\n\n\"Take care, honey.\"\n\nShe was still smiling as she threw her backpack over her shoulder and headed downstairs, locking up behind her, and heading over to her aunt's house...\n\n*****\n\n\"Are you sure?\" Cassia stared at Loretta with a doubtful expression, trying not to smile at the pure devilment shining in her aunt's eyes.\n\n\"Believe me, honey, Pietro was way too helpful back then when I had the same problem with your uncle. Oh, he feigned innocence and stuck to it, but I have no doubt whatsoever that he was completely aware of what he was doing at the time. The phrase poetic justice comes to mind.\"\n\n\"What mischief are you getting up to now, woman?\" Andrei entered the kitchen and swooped down for a quick kiss from his mate before turning to his bemused-looking niece.\n\n\"I was just giving Cass some advice on how to get Pietro's attention.\" \n\nHe turned to look back at Loretta before throwing his head back and laughing. \"Yes, that would be poetic justice,\" he echoed his mate's statement that he'd walked in on. \"You have my wholehearted approval, niece.\"\n\nCassia wasn't so sure she liked how eager her aunt and uncle were for her to publicly humiliate her mate. One part of her could see the humorous side of possibly doing so, but the other part was concerned that Pietro had been through more than enough already. His ego may not be able to withstand any more humiliation.\n\n\"I'll bear it in mind,\" she sighed giving them a quick hug. \"I'm going to head over to the Dive just now to try to speak to him.\"\n\n\"Do you want me to go with you?\" Andrei asked, his earlier amusement vanishing in an instant, and his expression turning serious.\n\n\"No offence, Andrei, but that would be like taking my dad with me. Actually, now I come to think about it, it would probably be worse.\" Cassia hugged him again to take any perceived insult from her comment. Not that her uncle was the least insulted. Instead, he gave her one of his warm smiles that he reserved for those family members that he treasured.\n\n\"You have a point, sweetheart,\" he conceded.\n\n\"You shouldn't look so damned proud of that fact,\" his mate interjected, though she was laughing as she said it.\n\n\"Thanks for the advice,\" Cassia called over her shoulder as she headed out of the house. Now that she had made up her mind that she was going to beard the lion in his den, she wanted to get over to the Dive before her courage failed her. Her wolf was anxious to be with their mate and so was the woman. Climbing into one of the pack Jeeps, Cassia fired up the engine and headed into town.\n\n*****\n\nFox hit the disconnect button on his phone and slid it into his back pocket. His Alpha wanted him home on the next flight available, and he wasn't best pleased about that. His wolf had been antsy for days now, ever since he had bumped into the blonde wolf and her vampire companion. \n\nCassia; yes that was her name. Cassia what? Who was she and why had his wolf sat up and been so interested in the woman? He didn't think it was the mating instinct kicking in though he could be wrong. What he'd learned about the wolves here was that their mating instinct was an instantaneous thing as opposed to a more gradual thing among his kind in Europe. Surely if it was the mating pull Cassia would have known instantly and tried to claim him?\n\nIt was disconcerting how he couldn't get her off his mind though, and he didn't like it. He had been sent over here by his Alpha to track down the non-aligned Weres that had been crossing the Atlantic Ocean. His mission was to try to determine what they were up to, and what, if anything, their actions may mean for the European packs. \n\nThere was far too much uncertainty among the supernatural races in Europe at the moment. The vampires were up to something. This was evident in the way their attention had turned away from trying to exterminate the Were population there. Something was focusing them stateside, and there were rumours of Ancient vampires being on European soil for the first time in centuries. Add in the strange behaviour of the lone wolves crossing the Ocean, and there was enough strangeness happening to concern most of the covens as well as the few integrated packs that still managed to reside as a unit.\n\nHe didn't have time to be diverted by a wolf, no matter how beautiful she was. He didn't have any of the answers that he'd hoped to find either, so he wasn't happy about being summoned home. He couldn't refuse his Alpha though. If she said they had to come home then they had to. Muttering a curse, he spun on his heel and threaded his way back towards the motel they taken up residence at.\n\nHe'd barely taken a handful of steps when a scent wafted towards him on the breeze and he froze on the spot. He had only scented it once before, but his wolf new instantly who it was. His head turned to the left, catching a glimpse of blonde curls vanishing into one of the nearby nightclubs - Cassia. His feet were moving before he could register what he was doing, moving towards a place called The Dive and the woman that he couldn't get out of his head...\n\n*****\n\n\"We're closed!\" Pietro barked out, as the front door opened, not deigning to turn from stocking the shelves with bottles of alcohol.\n\n\"I said we're closed!\" He roared again, spinning around when it became apparent whoever it was wasn't leaving. His mouth dropped open, and he blinked in surprise when he saw who his visitor was. How the hell could he not have scented her? It was only as he thought it that he realised that she must have masked her scent as she entered.\n\nClosing his mouth and swallowing hard, he greedy gaze roamed over Cassia's exquisite face, drinking in each feature like a starving man. Had it really only been a day or so since he had last seen her? It felt like a lifetime, and he didn't like the way his hands felt so clammy and his heart raced just at the sight of her. She looked good...better than good. She looked perfect. There were some tell-tale signs of strain around her mouth, but apart from that she looked well.\n\n\"What are you doing here, Cassia?\" The words barked out more aggressively than he intended, and he had to force himself not to cross over to her when she flinched noticeably. He truly didn't want to hurt her, not even when he couldn't shake the feelings of betrayal seeing her brought back to the surface.\n\n\"We found an antidote to the poison. I wanted to let you know that, so you wouldn't be worried about being infected again.\"\n\nPietro inhaled deeply, a shiver of relief coursing through his body. She had done it? His beautiful wolf had finally found a cure to Amort? Pride as well as relief threatened to overwhelm him, and it was all he could do to remain standing where he was. He wanted to hold her close, to tell her how proud he was of her, and yet, he couldn't bring himself to take that first step.\n\n\"Congratulations, Cassia. I know how hard you worked to find the cure. I didn't lose faith that you would succeed eventually.\" He swallowed again, turning away because he couldn't bear to see the uncertainty in her eyes. \"You didn't have to come all the way out here to tell me. Andrei or Alexei could have let me know.\"\n\n\"I wanted to see you.\" Cassia hesitated, took a deep breath and continued.\" I needed to see you, Pietro...I know you're angry with me. I understand why you feel betrayed that I sided with the pack against you. It wasn't like that, not the way you think it was.\"\n\n\"It doesn't matter...\"\n\n\"It does and you know it.\" The vehemence in her voice was surprising considering she had barely been speaking above a loud whisper before. \n\nHe could feel Cassia moving towards him, and he kept his back to her, continuing to restock the bar. He didn't want her to be here. He didn't want to see the evidence of what his rejection was doing to her. Why couldn't she just leave? Then she wouldn't hurt so much and neither would he.\n\nPietro held himself tense, afraid she would touch him, and he would lose all control. To do so now would only hurt them both all the more later. He couldn't forgive Thereasa. He couldn't return to the pack, and Cassia couldn't be apart from her people. That day had proven that more than anything else ever could.\n\n\"Hurting Thereasa...knowing that you had hurt Liam and all those you love in the pack, that would have killed you, Pietro. You say you don't understand what a pack is and yet you run with your own. Alexei, Andrei, Demetri, Caleb, Mac...Annie, Mara, Loretta, Cedar...the list goes on and on. They are your pack. You may not be a wolf, but what you feel for them is just as intense as what I feel for my pack. Can't you see that?\"\n\nSpinning around, he pinned her with his mismatched gaze, denial blazing from their depths. \"It's different and you know it. Cassia...don't do this. I cannot be part of your world any longer. I have only hatred in my heart and the desire for revenge. That won't change, not until Thereasa is dead. This is who I am. This is what I am. You have to see that and understand that there is nothing but heartache for you if you continue down this path.\"\n\nHis words brought tears to Cassia's eyes, which poured down her cheeks. Inhaling sharply Pietro wanted to scream at the universe. It wasn't fair that he'd been placed in such a position. He should never have touched Cassia. He had known at the time that it was wrong, and yet, he had taken what he wanted. Now he was hurting the one person who had done the most to help him since the fiasco of Europe. \n\n\"I'm sorry, Ni\u00f1a. I never meant for you to be hurt by our time together. One day you will find your mate and what we shared will be but a distant memory...hold onto that fact.\"\n\nWas he listening to what he was saying? Trying to hold back sobs, Cassia stared at her vampire as if he'd just grown two heads. The idiot had no idea! He had no inkling that the reason she was fighting so hard for him was because he was her mate. Of all the stubborn, idiotic males she could have fallen for she had to pick the one with a skull as thick as a brick wall. She opened her mouth to tell him when a new scent suddenly appeared, causing both their heads to turn in the direction of the doorway.\n\nFox's wolf growled the instant Cassia turned around to face them. Her cheeks were wet with tears, her expression so full of anguish his beast reared up, glaring at the vampire behind her. What had he done to her? Why was she crying?\n\n\"Fox?\"\n\n\"Who the fuck are you?\"\n\nThey both spoke at the same time, Cassia clearly remembering him from before, the vampire adopting an aggressive stance.\n\n\"What did you do to her?\" His response came out directed at the vampire, his body automatically adopting a fighting stance. Where he was from vampires had only one use for wolves, and that was to see them dead on the spot. They were only two wolves and this vampire was older than most he'd come across, but that didn't mean they couldn't go down fighting. It didn't cross his mind to wonder at why he was willing to die to defend Cassia. It was purely instinctual. It was his job to protect his people and he would do so against this vampire no matter what the cost.\n\nCassia saw the other wolf about to spring a split second before he did. Her shocked brain couldn't understand what was happening, but she moved as Fox did, placing herself in front of Pietro. \n\n\"Stop!\"\n\n\"Get out of the way, Cassia!\" She was suddenly spinning away in the opposite direction, picked up and thrown over the bar by Pietro as his talons came out and he surged forward towards the threat.\n\n\"No! Stop! What are you doing?!\"\n\nFox shifted, a huge black wolf replacing his human body as he barrelled into the feral vampire. They crashed backwards, spinning into tables with a resounding thud. \n\nPietro kicked out as he rolled, his feet tossing the wolf clear across the room as he sprang agilely upwards, flowing like a black shadow towards his prey. \n\n\"Pietro! Fox! Stop it this instant!\" Cassia had no idea what the hell was happening. She just knew that the two males were fighting for no good reason. She had to stop it before it escalated any further, and she didn't know how to. What they hell was wrong with them? They didn't even know each other. Why the hell were they fighting? \n\nThey couldn't be fighting over her...could they? The instant the thought materialised she knew it was the truth. Fox must have seen her come inside and come to investigate. She could only guess at what he had envisioned was happening when he entered. He was a wolf and a European one at that. To him, all vampires were the enemy. He must have thought Pietro was hurting her in some way, and he was trying to protect her.\n\nOh, for the love of all that was holy! How could she be surrounded by such idiotic males? Fox's wolf was circling Pietro, trying to find a weak area to attack. Her vampire was matching his movements, seeking his own best point of attack. There was so much hate and pain in Pietro's soul, Cassia wasn't sure if he would be able to see that this was just a misunderstanding. If he bit Fox...he would kill the wolf instantly.\n\nFox sprang; his wide jaw sinking into Pietro's left shoulder as they crashed to the ground. He howled and released the other male as sharp talons sliced into his sides. He knew he had made a fatal mistake the instant he did. His throat was now bared to the dripping incisors of the vampire. All it would take was one bite...the bite the vampire was moving forward to inflict...\n\nIce! Freezing cold sugared water and ice...it drenched them both, shocking them out of the feral grip they were caught up in. Fox shifted back to human form, groaning and spluttering as he rolled away from the vampire, clutching at his injured side. His infuriated gaze swung upwards to see the blonde wolf standing above them, an ice bucket in hand.\n\nPietro coughed and pulled himself upright, wiping the sticky substance from his face. His eyes met Cassia's and for a moment he could only stare at her in surprise. Oh no...she did not just pull Loretta's shit on him! Did she really think she would get away with her aunt's antics? His name wasn't Andrei, and this fight wasn't about a wolf claiming her mate. If she thought he was going to put up with this kind of humiliation, especially in front of a strange wolf...\n\n\"Now that I have both of your attention would one of you kindly like to explain to me why you're in the process of not only trying to wreck this bar but also kill each other?\"\n\n\"Cassia...\" Pietro growled, and she held up a hand to halt him.\n\n\"On second thoughts, I don't want to hear what you have to say right at this moment, Pietro de la Rios. You've caused enough trouble today.\" Cassia knelt down beside Fox to check his injured side.\n\nThe wolf batted at her hands, his gaze still fixated on Pietro. \"I am fine.\"\n\n\"You're bleeding onto the floor and I'm a medic. So be quiet and let me look at your injury.\" She waved towards her pack, which she had left close to the door when she'd arrived earlier. \"Pietro, bring me my pack. I have a medicine case in it.\"\n\nThe vampire opened his mouth to say something, and then closed it again, stomping over to the pack and placing it gently beside her. He was clearly still incensed, but made an effort not to break any of the delicate things tucked inside.\n\n\"Hold still...this may hurt.\" Cassia cleaned out Fox's wound, relieved to see that it wasn't too bad. His enhanced healing abilities would have it mending within a couple of days. She could have given him some of her blood to speed up the healing time, but she wanted him to have a reminder of what an idiot he was.\n\n\"I thought he was hurting you,\" Fox said through gritted teeth, as he allowed her to minister to him.\n\n\"Pietro would never hurt me,\" she answered intent on cleaning him up. \"My dad and uncle are his two best friends. He may have a bit of a thick skull and say stupid things, but I don't hold that against him.\"\n\n\"I am still here,\" Pietro growled.\n\n\"Oh, I know. I can feel you breathing down my neck,\" she replied with a weary sigh. \"Why don't you start clearing up some of the mess you made? I don't need your assistance here.\"\n\n\"He's the wolf from before, isn't he? What's he doing here? Why the fuck did he come into my place and attack me? What the fuck is there between you two?\" Pietro knew he sounded petulant, but he couldn't stand to see Cassia's hands touching the other male. Now that the cloud of rage was lifting, he was as perplexed as she was about what the hell had just happened, and why the European wolf had felt the need to protect Cassia.",
        "\"Is he your mate?\" The words whispered out, a dull ache filling him as he watched her hands still and her body stiffen. Dear God, was he right? Had he almost just killed Cassia's mate? The thought of another's hand touching her sent a black rage throughout his soul, and yet, he was the one pushing her away, telling her to find her mate.\n\n\"You are the stupidest, most obstinate, mule-headed male I have ever come across, Pietro de la Rios,\" Cassia spluttered, rising so quickly he stepped back in surprise. With her hands planted on her hips, she looked utterly adorable as her eyes spit fire at him. \n\n\"No, Fox is not my mate, you silly vampire! YOU are!\"\n\nHis chest hurt and his head spun. Had she just said...? Surely he had misheard her. It couldn't be true...she couldn't have just said that he was her mate. Could she? The pain in his chest was like being on fire, and it took him a moment to realise why. He couldn't breathe! Cassia was glaring at him, totally convinced that they were mates, and the thought took all the breath from his body.\n\n\"Breathe, Pietro.\"\n\n\"No,\" he hissed out, shaking his head in denial. \"I'm not your mate. I can't be.\" Pain flickered across her face but he was caught up in the memory of the last day in the pack compound, of how he had rejected her, of the mournful howl of the wolf...\"No!\" Spinning on his heels, Pietro fled, running as far and as fast as he could from the truth.\n\n\"Well...that wasn't quite the reaction I was hoping for,\" Cassia sighed, trying to swallow down the deep misery that overwhelmed her as Pietro rejected her once again.\n\nRising to his feet, Fox stared after the departed vampire, his thoughts in chaos. The wolf was the mate of a vampire? He'd heard all about the mixed matings and V\u00e2rcolac, but seeing it up close and personal was mind-blowing.\n\n\"You don't seem very surprised despite your words,\" he remarked, turning to look back at her.\n\n\"Oh, I'm not. This is the second time that he's run from me, but I'm nothing if not dogmatic. He'll have to come back sooner or later, and I will be waiting for him when he does.\" Cassia busied her shaking hands by cleaning as much of the mess Fox had made bleeding onto the floor. \"I don't need your protection, Fox, though I do understand that it's in your genes, and you couldn't help yourself trying to rescue me.\" \n\nHe watched her for a long moment, and then turned towards the door once more. \"I can see that now,\" he said with a rueful smile. \"There is something about you Cassia...I can't quite put my finger on it, but from my wolf's interest, I thought for a moment that possibly you might have been my mate. I can see now that I was wrong.\"\n\nHis bemused tone earned him a small smile as she straightened up wiping her hands with a sterile cloth. Cassia ran her eyes slowly up and down him before her smile widened. \"Well, you are a fine specimen, Fox. I'm sure you must have a bevy of beauties eager to share your bed, even more so now.\"\n\nHis head tilted to the left, confusion dancing across his handsome face. \"How so?\"\n\n\"When you get home you can tell them all about how you fought with one of the most deadly vampires, and lived to tell the tale...because you did. Only the Ancients and Mac are more deadly than Pietro. You're lucky to survive the encounter.\"\n\nHer words sent a shiver down his spine, as he realised just how close he'd come to dying. He couldn't afford to place himself in jeopardy when his Alpha needed him so badly. He had to get out of there before the vampire came back to finish the job. He was needed back home.\n\n\"Best of luck to you, Cassia. I hope you win your mate.\"\n\nHer smile was both hopeful and sad. \"Me too.\" She watched him head towards the door before she called out, \"Uhm...Fox!\" When he turned to give her a quizzical glance, she nodded her head downwards. \"You might draw a few stares if you leave like that.\"\n\nHe looked down and groaned out aloud. \"Fuck!\" He'd shifted to wolf form and now he was buck naked. That Cassia wasn't bothered told him that she must be used to it with her pack.\n\n\"Wait there, I'll see if something of Pietro's will fit you. You look about the same size.\" She disappeared upstairs, returning quickly with a black pair of jogging bottoms and T-shirt.\n\n\"Won't the vampire mind?\"\n\n\"He can live with it,\" she snorted, humour dancing in her eyes as she watched him pull the clothes on. \"Serves him right for being an idiot.\"\n\nWalking to the door with him, she paused at the entrance as he walked outside. \"\"What are you really doing here, Fox? What brings wolves like you to our shores?\"\n\nHe stiffened, turning his head to look back at her. \"Wolves like what?\" Her arched eyebrow told him she wasn't fooled by his mock-innocence, and he made a mental note to never underestimate this feisty wolf should their paths ever cross again.\n\n\"You know what I mean. I can tell a soldier when I see one; I've trained in that position myself to protect my pack.\"\n\nHe was struck by the urge to tell her everything, but knew that he couldn't do that. He would be betraying his Alpha if he said too much, and he would die before he ever did that. \"It's not me you should be watching out for, Cassia. It's the wolves you don't see.\"\n\n\"Fox! What do you mean by that?\"\n\nHe kept walking, resisting the urge to look back at the woman who so intrigued him even though he wasn't her mate. Something told him that he would meet Cassia again one day, and that when he did, his life would never be the same.\n\nCassia watched Fox leave, wondering at his cryptic comment. She would have to tell Rafe about it. The secretive wolf had clearly wanted to alert her to something, but for whatever reason, couldn't tell her outright what it was. The wolves she didn't see...intriguing.\n\nHeading back inside she stared at the wrecked bar and then grabbed her backpack. She would wait for Pietro in his apartment upstairs. If he thought she would just give up on her mate he was in for a very rude shock. Smiling, she headed upstairs into her vampire's lair to await his return.\n\nTo be continued..."
    ],
    "authorname": "JazCullen",
    "tags": [
        "vampires",
        "werewolves",
        "mating",
        "love",
        "hybrids",
        "paranormal romance"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/tears-of-the-fallen-ch-19"
}