{
    "title": "Billie Jean",
    "pages": [
        "Author's note: This is a long and crazy one so be warned. I wanted to kick off the summer with something fun and hopefully this is it. There are a few people I wanted to thank because without them you wouldn't be reading this story. First the real life Helena Martinez, who claims to have read every one of my stories and dared me to write a story about this song. I'd also like to thank the two best writers I know DQS1 and Rehnquist for letting me borrow their toys, and I hope they aren't upset with what I've done to them because just using them was a dream come true for me. Lastly I'd like to welcome my new editor MikotheBaby to the party. She did a great job of prying my fingers loose from the comma key. Anything you don't like about it was my fault, she just made my gibberish legible. Okay Harry in Va here it is rip me a new one. \n\n* * * * * * * * * * * * * * *\n\nMy name is Alexander Blake. As I wind my Cobalt blue Shelby GT 500 KR Mustang through the crowded streets of L.A. I can't help but feel a sense of D\u00e9j\u00e0 Vu. You know that eerie feeling that you've been here before. \n\nI guess it only makes sense seeing as how almost exactly one year ago I was doing the exact same thing. I was on my way to a charity dinner honoring me as the top man in the advertising industry. It was one of those stupid honors that were designed to let the other ad men know who had brought in the most money over the past 12 months. \n\nAdvertising is a truly weird business. We don't make anything or own anything, but without us the general public has no idea of who does do those things. Take my hopped up Mustang here. Do you think it would matter how great this car is if no one knew they made them or had heard of it? I think not.\n\nNo matter how many pencil protector wearing engineering geeks it took to design and build this beast, it would all be for nothing if some smart marketing wiz hadn't come up with a way to sell it. It also takes a genius to decide which market to sell the product to and how to approach it.\n\nAny way, this year just like last year, I brought in more advertising dollars for my company than any other ad man in the world or at least in the industrialized nations. I guess that's where my sense of D\u00e9j\u00e0 Vu came from.\n\nThe funny thing about it though is that even though I feel like I've done this before and I have, nothing is the same this year as it was a year ago. The Shelby I was driving last year is at home in the garage. Last year I worked for a different company or at least a company with a different name and I was married to...Shit, I may as well tell you the whole story and let you see why I feel so weird. Sherman, crank up the way back machine. Set it for one year ago today....\n\nOkay, last year my name was still Alexander Blake and as mentioned I was on my way to a charity event to honor me as the top man in advertising and make an absolute shit load of money for some charity that I had no interest in.\n\nI'm sure the charity did great work for the homeless whales environmental disease cure or whatever it was. In my mind the big thing was that I was on top of my game. I had the world on a string and didn't give a shit who knew it. In fact I wanted everyone to know it.\n\nI was again guiding a ridiculously powerful Shelby Mustang through the crowded streets near the convention center, with my lovely wife at my side.\n\nMary Beth, my wife of 6 years was 28, like me. Where I was California born and bred, she was New England royalty. It wouldn't have surprised me if she turned out to be related by marriage to the Kennedys. She had that Bostonian accent with its odd sounding vowels and clipped delivery. If someone had modernized Kathryn Hepburn, they'd have Mary Beth, at least on the surface.\n\nI can't say that Mary Beth was ravishingly beautiful, but she was pretty and healthy and she had that All-American girl glow. Kind of like the Governator's wife Maria Shriver. She was the perfect wife for a top ad exec, attractive, but not overly so. Classy, sophisticated, well read, she was all of those things. But none of those are the reason I married her. I married her because I loved her like there was no tomorrow and I thought she felt the same about me.\n\nOf course the fact that she could suck a golf ball through a garden hose and loved doing it didn't hurt. In public or around people, Mary Beth gave the impression that she was some kind of perfectly poised Ice Queen. Alone or out of the public's eye she was probably the biggest sex fiend I knew.\n\nIt was normal for me to come home to find her naked and bent over the back of my sofa as the first sight that greeted me when I walked in the door. There was nothing off the table for Mary Beth when it came to sex. I remember times when she'd come into my office in the middle of a meeting and tell the clients and my colleagues that she needed to borrow me for a few minutes. I'd be worried thinking that some dire emergency had arisen, only to have her pull me into my secretary's office for a quickie. \"I just wanted you to understand what's really important,\" she'd said to me as she scooped up a finger's worth of my sperm that had leaked from her vagina and licked it off of her fingers. Then she kissed me goodbye and told me to come home straight after work.\n\nNeedless to say, I loved her back and our life together was never boring. \n\nBesides being way under forty, my personal style also separated me from a lot of the top guys in the industry. I didn't wear suits unless I was going to an occasion that required it. I had never owned a black foreign sedan and never intended to do so. And I simply hated fucking golf with a passion. I preferred casual more modern clothing, Muscle cars and extreme sports.\n\nI was the bad boy of the ad world. Of course having the might of one of the world's biggest ad agencies behind me hadn't hurt me, but I had worked my way up through the trenches on my own.\n\nWhen I started at McMillan Worth, it was as an unpaid (yep I worked for fucking free) intern during my college days. I started out running down to the corner store as a gopher to some of the ad execs. And now I dictated policy to the ad execs from a corner office.\n\nMary Beth was particularly stunning that night in a long tight black Vera Wang dress with a diamond choker as her only adornment. It was a simple, but classic look that she managed to make effortless. Of course I knew that she'd been in make up for three hours to look like she was barely wearing any make-up. And having her hair styled to appear she'd just thrown it up and pinned it, cost us more than some people made in a month. But it was all worth it, this was my night.\n\nHundreds of flashbulbs went off as we surrendered my Stang to the valet. Mary Beth and I exchanged a chaste kiss for the reporters. I smiled as I remembered why the front of my raw silk pants was ever so slightly stained. She'd just had me pull over less than two blocks from here to give me a sloppy blow job, only moments before we got here.\n\nAs we stepped into the cavernous room, another round of flashbulbs exploded in our eyes. This time we were greeted by cheers and applause as we were introduced to the waiting crowd. The ceremony hadn't started yet but the party was in full swing. There were throngs of rich and or famous people there. Politicians, athletes, actors, musicians, the entire human zoo was represented and they were all here to honor me.\n\nA bit later the ceremony began and they started out by acknowledging the works of some lesser honorees. There were awards for commercials, ad campaigns, product placement and other things. When my award was announced and the truly staggering amount of dinero I had procured for McMillan Worth, there was near stunned silence in the room. Even one of my ex college buddies and greatest competitors, Caesar Anthony's jaw dropped as he heard the amount of money I'd raised for the firm.\n\nAfter that, the night moved onwards. They announced how much money the dinner had raised for the charity and then people returned to eating, drinking, dancing, socializing and networking. I'm sure that my earning power was a topic of discussion. I was also sure that taking me down was being discussed with equal fervor.\n\nI was, to quote a line from a movie about a sinking ship, \"The king of the world.\" But little did I realize, my ship was about to sink as well.\n\nAs I looked over the crowd of well heeled men and women, they all seemed to blend into startling similarity. The men all wore tuxes, and except for cufflinks or some other minor personalizing trim all looked the same. The majority of the women all wore some version of the famous little black dress. Only the name of the designer differentiated them. Maybe their hairstyles were different too, but I couldn't tell. I was dutifully dancing with several of the assembled ladies in an effort to be polite, when I saw her.\n\nShe had long unbound blonde hair that cascaded down around her shoulders as opposed to an up-do. Her hair covered one side of her face completely, so that only one eye was visible. The style was reminiscent of Veronica Lake and was extremely arousing. Among all of those rich and beautiful women there, she stood out. She was more like a beauty queen from a movie scene. As she slowly made her way across the floor towards me, I noticed the way her red dress cut through the crowd that was dressed mostly in black.\n\nWatching her as she approached me was like seeing a fireball cut through the darkness of space.\n\nShe actually bowed in front of me as the music started. I looked at Mary Beth and she just shrugged her shoulders and nodded. Of course at least fifty photographers took pictures of us as we started to dance. She danced extremely well and I suppose we looked good together. We didn't actually talk, until just before the dance ended.\n\nThen with at least ten microphones near us she said the one fucking line that started all of that hell for me. She said that I was the one. Her voice was so soft at first that I didn't hear her. But apparently all of the microphones picked it up well.\n\nShe said I was the one, who would dance on the floor in the round. When she said that, my heart clutched. I hadn't heard that term in over six years. It was before I'd met Mary Beth, back in my days as a carefree single guy. It referred to a practice of mate swapping that we did back then. A bunch of couples would all form a circle, hence the term, \"the round.\" Anyway, we'd dance for one hour, in a very dimly lit room, changing partners constantly. Whoever you were dancing with when the lights came on, you went home and had sex with. Most of the couples involved didn't survive.\n\nIt was a great thing for a young single guy like me. I'd meet some girl that I didn't really care that much about, take her to the party and let the chips fall where they may. Most of the time, I went home with someone completely different than I'd gone with. \n\nNaturally I'd given things like that up long before I met Mary Beth. Dancing in the round was not conducive to stable relationships. Anyway back to the party.\n\nThe reporters, sensing a story were swarming around us like stink on shit. They were there as the whole thing collapsed. She told me her name was Billie Jean and she caused a scene.\n\nThen every head turned to see what was going on. Mary Beth came over to stand beside me like a good wife. She knew the drill. Some gold digger looking for money or publicity showed up at a big event to cause a scandal. Half of the guys there took one look at her and dreamed of being the one themselves. Billie Jean was really fucking hot. \n\nThe problem was that try as I might, I simply couldn't remember her. Not only did I not remember fucking her, which I have to admit, was a crime. I couldn't remember ever meeting her or ever hearing of a Billie Jean.\n\nBefore I knew what was going on, before I could even hear the rest of her bullshit. My people whisked me and Mary Beth out of there. I really have to give Mary Beth credit. She was cool and professional. She smiled and posed for the cameras, even as they tried to turn my life to shit. If pride goeth before a fall, I was headed for a hell of a tumble. \n\nAs we left the hall I could see two things and neither of them boded well for me. The first was that Billie Jean was literally surrounded by reporters and microphones. For an evening that had started out all about me, it had ended up being all about some woman I was sure I'd never met before now.\n\nThe second thing was that Mary Beth was studying me intensely as if she'd never seen me before either. I could tell that my fit and status as her spouse was being carefully weighed and measured on a number of levels. Before that, I'd have told anyone who asked that Mary Beth and I were eternal. Or that we'd spend the rest of our lives together regardless of any circumstance. \n\nWe managed to slip out the back door and into my Mustang without being seen. As we roared off into the night only the deep throaty growl of my Magnaflow exhaust system gave evidence of our passing. \n\nInside the car Mary Beth was excited as usual. She quickly reached for my pants and for the first time ever, I pushed her hands away. \n\n\"Ooh teasing me huh?\" she said. \"I swear, even after all of this time. You can still surprise me. So what was all of that shit back at the party about?\"\n\nI really wasn't in the mood to talk right now, but I loved MB with all my heart, so I answered her questions. \n\n\"You were there MB, you saw her,\" I said. \"She's some chick from my past that crawled out of the woodwork and claimed we had sex. Honestly, I don't get her point. If every person I had sex with came out and admitted it. There would probably be a long ass list. And we wouldn't get to you until the end. You'd be the last one in line, but definitely the best.\"\n\n\"You flatterer \" she smiled. \"You don't have to try to charm me to get some pussy. It's all yours, whenever you want it. I think you should just chalk this one up though as a publicity stunt that didn't quite go the way you wanted it to.\"\n\n\"MB, this wasn't one of mine,\" I said. \"This was real.\"\n\n\"Well then it makes perfect sense all of a sudden,\" she said. \"She's some unemployed actress who remembered that you once fucked her. When she found out that you were being honored at a big charity event, she decided to crash it and steal your limelight to generate some publicity of her own. It'll probably do wonders for her career.\"\n\nShe was silent for a few moments and then continued. \"Realistically I thought that you'd planned it. It is after all brilliant. I don't know why we never thought of it ourselves,\" she said.\n\nI looked at her skeptically. \"Why would I want this?\" I asked. \n\n\"Think about it Blake,\" she said. \"Our next logical step is to separate you from the firm. Instead of people hearing about you as McMillan Worth's Blake Alexander, we want them to simply think Blake Alexander. It's the first step in you becoming famous on your own instead of as just an employee of some giant ad company.\"\n\n\"That way if it takes them too long to offer you a partnership and try to avoid giving you a titled partnership, we'll just walk and start up on our own.\" She seemed awfully confident. \n\nWhen we got home it was business as usual. The necklace that I'd paid a ridiculous amount of money for was dropped casually on a table. The dress was on the floor at the bottom of the staircase, and Mary Beth was walking slowly up the stairs with only her thigh high stockings and panties on. She hadn't even worn a bra that night, not that she really needed one. The closing of our door was the signal for the previously perfectly coiffed paragon of class and dignity to resume her chosen role as my personal slut.\n\nShe settled down on our massive bed and spread her legs. \"You didn't eat much at the party,\" she smirked. \"I don't think you should go to bed hungry. So come on over here and eat some of this.\" Her hips lifted off of the bed in anticipation. I knelt before my carnal goddess and did what she hated most. A lot of women want their men to be gentle and careful, when they eat them. Not Mary Beth, \"RRRR...quit fucking teasing me and get to it,\" she snapped. I blew a gentle gust of air at her shaved bare vagina and was met with an icy glare. Just as she got ready to chastise me again, I caught her off guard and roughly swiped at her sensitive area from anus to clit as hard as I could in one swift stroke.\n\n\"EEEEEEE,\" she screamed. Her head jerked backwards and her legs flew even further apart. \"Ohhh! fuck that was good.\" I swabbed her deck with my tongue as if I was trying to rub the skin off of it. She jerked and grimaced as if she was being tortured and screamed like a dying cat. Within seconds her eyes were rolling back in her head and she was gushing her juices all over me. \n\n\"Get your fucking clothes off, already,\" she snapped. \"No that's okay; I can't wait that long, just do me.\"\n\nI shook my head, in disbelief. Even after being together for six years, I was still shocked by exactly how slutty Mary Beth could be. Less than twenty minutes ago she'd appeared to be a woman who wouldn't say shit if she had a mouth full of it. Now in the privacy of our home, she could teach drunken sailors how to swear. I pulled my pants down around my ankles and grabbed her off the bed. I turned her around and slammed myself home in her tight hairless pussy. None of that romantic rubbing and easing my way in for her, she was already sopping wet and she liked it rough so that's what I gave her.\n\nThe first brutal stroke found me bottomed out inside her and her trying to get her legs even further apart, so I could get deeper. \"Harder, baby. Slam me,\" she said. I was already fucking her so hard that if she got pregnant our kid would be born with a black eye, but she wanted it harder so I obliged her.\n\nI grabbed her by her slim waist and pulled her onto me harder with each stroke. She pushed her ass against me increasingly harder also. It was more like we were fighting than fucking. I was getting closer with each stroke and Mary Beth knew it. \"Don't you dare fucking cum,\" she said. She pulled herself off of me and turned to look at me. \"Do my ass,\" she said. She was out of her mind. She was slurring her words together, and she had the biggest smile.\n\n\"Who was I to turn down the love of my life? I pulled her cheeks apart and started to lick her anus for lubrication. \"Just put it in me,\" she screamed. \"Force your dick into my shitter, now!\" So again I complied. She pushed against me as I pushed into her. It was so tight I thought my dick was going to break. Finally I got the head in and she started oohing and screaming, \"yes.\"\n\nAfter a while we got the whole thing in and she started sawing against me again. It was so tight and I was already close.\" It didn't matter. I reached under her and rubbed her clit. Mary Beth started slamming her ass into me again.\n\nMary Beth doesn't have a large fleshy ass so her pelvic bones slamming against me were not the most comfortable thing, but it was brief thankfully. She started jerking involuntarily, and I grabbed her around her waist and drive myself home one more time. I came like a fire hose. Semen erupted from the end of my dick and blasted her insides. She reacted from the warmth of the fluid more than the volume. She ripped herself free of me and turned around quickly taking my shrinking member into her mouth and slurping greedily. Her tongue circled the head of my shaft and even probed the hole in the end of it for the last few drops. A few errant drops had escaped and landed on the bed. She scooped them up and swallowed them as well.\n\n\"Oh baby, that was so good,\" she crooned. \"Just the way, I like it.\"\n\nWe fell back on the bed wrapped around each other and slept the sleep of the damned, while the world around us started to fall apart.",
        "The next morning I woke up and unwrapped Mary Beth's arms from me. I showered and stumbled into my Mustang. Fortunately it was a Saturday, so it really didn't matter that it was nearly 10 a.m. when I got on the road. I noticed a few people staring at me as I went into my favorite Dunkin Donuts for coffee. I was sure it was the car. How did Michael Keaton say it in that Batman movie? \"Chicks dig the car.\" \n\nAs I pulled into the parking lot behind our building, there was a group of reporters gathered. I figured that one of our advertising clients was making their shoes with slave labor in some third world country again. Or someone we represented has destroyed some tree in the rain forest. While I'm sure they were tragic, they were neither my job nor my concern. \n\nI was working on landing a huge new client. They owned several hundred hotels all over Europe. Their advertising budget alone was worth over 10 million dollars a year. If I could land them, I'd already be one of the top five in terms of sales for next year already. \n\nI'd been doing conference calls and video conferencing with them for the past few days. They were open to my advances but their responses were lukewarm at best. I was avoiding the inevitable trip to Europe to meet with them until I could arrange to take Mary Beth with me.\n\nAs I stepped into my office, things got weird. Normally the office would be deserted on a Saturday. But the few people that were there would greet me. I guess I expected some type of congratulations for the award I won last night. There was nothing. I did notice a few people staring at me and talking, but not much else. \n\nMy longtime secretary Myra grabbed me by my arm and yanked me into the office. \"What the he'll were you thinking?\" she asked.\n\n\"Well, I was thinking that I'd have coffee and call our new French client to see how the deal is going,\" I replied.\n\nMyra looked at me as if I'd arrived at work on a short yellow bus instead of a $70,000 Mustang.\n\n\"Not that, you idiot,\" she said. \"I may not like your wife much. She seems too uptight for you. It's like she has a stick permanently up her ass. But you married her. How could you cheat on her?\"\n\n\"Myra what the hell have you been smoking?\" I asked her.\n\n\"Didn't you read the paper this morning?\" she asked. \"What about this Billie Jean thing?\" She looked at me closely. It was as if she expected me to confess to some terrible crime. But I was as cool as a cucumber. I just shrugged my shoulders.\n\n\"Blake, aren't you going to say something? It's not every day that your lover comes out of the woodwork and...\" I had to stop her before she got too wound up with this, so I interrupted her.\n\n\"Billie Jean is not my lover,\" I told her. \"To tell you the truth, last night was the first time I ever saw her.\"\n\nMyra was still looking at me, intensely. Finally she nodded her head.\n\n\"I believe you,\" she said. \"I've known you long enough to be able to look into your purple peepers and tell when you're being truthful.\" I laughed a bit. Because of a weird genetic melding in my family's gene pool, some of the kids were born with red eyes. My uncle Stanley had them. He wore brown colored contacts to disguise them. The trait was supposedly dominant. But my mother's side of the family all had very deep brown eyes. When you matched her with my father it got messy. I guess I should have been born with red eyes but when you mixed my mom's brown with the red I'd been born with very striking purple eyes. From a distance they looked brownish. But anyone who got close to me could see their purple shade. \n\nMy purple eyes were one of the reasons that I'd been so successful with women throughout my life. I really like to think that the fact that I'm a nice guy didn't hurt either. \n\nMyra held up a copy of the morning paper. The headline read, \"Blake's in trouble!\" The article went on to give the usual background crap I'd become used to. I was described alternately as both an advertising genius and a ruthless business man. It talked about the award last night, some of the highlights of my career and all of my failures and setbacks. Then it talked about last night's fiasco.\n\nA second article had the banner headline, \"Who is Billie Jean?\" I didn't read more than the first two lines of that one before I discovered that Billie Jean was talking to everyone she could. She was scheduled to appear on television, radio and many more magazine and newspaper articles. Apparently my nightmare was just beginning.\n\nI called my lawyer, Montgomery Burns. He was a ruthless old bastard. I wanted him to jump on this whole Billie Jean thing and find out what she wanted and what it would take to get rid of her. Barring that I wanted him to start the proceedings to sue her for Libel. \n\nI called home to see if my blushing bride was awake yet. She eerily answered the phone and yelled for our maid to bring her some \"fucking,\" coffee.\n\n\"Mary Beth, you probably won't want to read the papers this morning,\" I warned her. \"They're all full of the Billie Jean shit.\"\n\n\"Oh my God, you're kidding,\" she laughed. \"It must be a really slow news day. Why else would they be interested in some woman you slept with back in college?\"\n\n\"Mary Beth, would you please listen to me,\" I said seriously. \"I don't remember that woman. I don't remember having sex with her period. I don't even remember talking to her or seeing her.\"\n\n\"You were probably bombed out of your mind,\" she said. \n\n\"I don't think I've ever been so drunk that I couldn't remember having sex with someone,\" I said seriously. Mary Beth in the way that people who have been together for a long time can, sensed that my mood had shifted. \n\n\"Blake, don't worry about this. It's nothing. I believe you. I'm on your side no matter what. For better and for worse, remember? I love you, stupid,\" she started making little kissing noises over the phone. I started laughing and felt better instantly. Naturally she wasn't done sticking it to me though. \"Blake did you notice the way every guy in the place couldn't take their eyes off of that Heifer's Tata's though? I think I'm going to have to insist on breast implants for my birthday. I think I'll move up to like a quadruple Z cup,\" she laughed.\n\n\"Oh yeah, I can see it now,\" I laughed. \"We'll have to get you a wheelbarrow to carry them around in.\"\n\n\"And I'll terrify our kids when they breast feed,\" she said.\n\n\"What kids?\" I asked. \"How are we going to have any kids?\"\n\n\"We can have kids any time we want,\" she said. \"I come from damn good breeding stock. All I have to do is stop taking my pill and I'll start spitting out little Alexander's like there's no limit.\"\n\n\"I don't see it,\" I said.\n\n\"Why not?\" she smirked. I could already imagine her at home on our huge bed completely naked with her head tilted to the side. It was the way she always reacted when someone told her she couldn't do something. \n\n\"Well,\" I said, with mock seriousness. \"In order for us to procreate...You do understand the term procreation don't you? I'm not being too technical here am I.\"\n\n\"I know what procreation is, you idiot,\" she said.\n\n\"Well, in order for us to procreate, I'd have to shoot my stuff into your Hoo hah,\" I said. Mary Beth erupted with laughter. \n\n\"I thought this was a serious technical talk,\" she said. \"You and I have more sex than anyone I know. And you can shoot your stuff anywhere you want, but your stuff is my stuff. No one else gets a fucking drop of it. Especially not Billie Jean.\" she was still laughing as she hung up the phone.\n\nFor the rest of the weekend, Mary Beth and I just relaxed and enjoyed each other. We took the boat out on Sunday morning and just lazily sailed around the bay. We stopped off at several secluded coves and did what came natural. We even moored just off of an island where we could make out picnickers with our naked eyes. We took off all of our clothes and had sex right in front of them to act out one of Mary Beth's fantasies about having sex in front of other people. The people on the beach did start pointing at our boat, though. \n\nIt was lucky that we did it then because if we'd waited a couple of days, there'd have been reporters all over us.\n\nWhile Mary Beth and I were relaxing Billie Jean had been telling her story. Monday morning it was all over the papers again. As much as I hoped it would die down and go away, the story seemed to have legs. \n\nWhen I went into the office Monday morning I was told to appear at a special meeting of the board of directors. This was what I'd been waiting for. I assumed that they were going to offer me a partnership as a reward for all of my bard work.\n\nWhen I walked into the meeting, it was the same as it always was. A group of old men, who had all, at one time or another been in my shoes. \n\nEach and every one of them had been the company hotshot at some point. Each generation's hotshot had to rewrite the record books until they were so important to the company that they had to be offered a part of it. \n\nFirst I was asked about the new account I was working on. I told them that we hadn't actually landed it yet, but things looked promising. \n\nThen the moment I dreamed of came. I knew that once the discussion of money was over we'd move to discuss me personally. \n\n\"On a more personal note,\" said Arthur Harris. I was trying very hard not to smile. I needed to remain professional and in control. I couldn't let them see how much this would mean to me to become a partner before turning forty. I'd also become the first to make partner before turning thirty.\n\n\"What are we to make of this Billie Jean situation,\" continued Harris. I sucked in a breath, and remained silent for a few ticks.\n\n\"This adverse publicity could possibly affect our bottom line if allowed to run unchecked,\" he said.\n\n\"I guarantee you that it is being handled as we speak,\" I said flatly. I kept my voice as free of emotion as I was able to manage. Inside I was seething. I was beyond pissed but I managed to hold onto my cool.\n\nI returned to my office and sat down behind my spacious desk. What I'd thought was an annoyance was becoming a true problem. It was obvious that Billie Jean would need to be dealt with. The problem was that I didn't know what she wanted or what it would take to get rid of her. I was smart enough to realize that I needed to handle it all through my attorney. Any direct contact between the two of us would simply lend credence to her claims.\n\nMyra burst into the office unannounced and looked at me. \"How did Mary Beth take the latest news?\" she asked.\n\n\"What latest news?\" I asked back. I was so pissed that I could care less. The thing that had me the most upset was the fact that this whole Billie Jean thing might allow those old bastards to delay me getting my partnership for a while longer. \n\n\"Billie Jean claims that your affair with her was four years ago,\" said Myra, looking at me suspiciously.\n\n\"That's pure bullshit,\" I yelled. \"I was out of college and already married to Mary Beth by then.\"\n\nMy outburst caused several heads in the outer office to turn and look towards us. My office had floor to ceiling glass walls. The glass was thick and we couldn't be heard out there but they could certainly see in, and the way I had jumped up and started yelling had attracted some attention.\n\nThe ringing of the phone on my desk snapped both Myra and me out of the impromptu staring contest we were in.\n\n\"Blake Alexander's Office,\" said Myra crisply into the phone. \"He's right here Mr. Burns.\" she handed me the phone. \"Hey, boss I'm on your side. I believe you. Don't shoot the messenger,\" she whispered as she walked out of the office.\n\n\"What took you so God damned long to get back to me,\" I asked.\n\n\"I do occasionally take a vacation,\" laughed Monty Burns. \"Besides, what were my final instructions to you last week before I left?\"\n\n\"Ha ha fucking ha,\" I said, remembering that he'd told me not into get into any trouble while he was gone.\n\n\"Alright so far, all I've had time to do is put a couple of investigators on her. I may cut it down to one though to save some money,\" he said.\n\n\"Since I'm paying for it don't spare any fucking money,\" I snapped. \"Put as many men as you need on the job, I'm not exactly broke.\"\n\n\"I'm not trying to save you any money,\" he snapped right back. \"It's just that I've tried out a new agency, Arturo Rios Investigations. The girl, Sarah Price, that they put on the case is really good. She got back to me in a matter of minutes with more information than my regular guy was able to come up with over 24 hours. I'm thinking of sending her and her husband to Florida to do more research.\"\n\n\"Why are we sending people to fucking Florida? And why does her husband need to go with her?\" I asked.\n\n\"Well, her husband is actually not an investigator but he helps out on some of her cases now and then. But since they just got married she won't go anywhere without him. Arturo warned me about that when he gave me her results. They also may not take the case. According to Arturo, Sarah is the best PI he's ever seen, but she's picky about the cases she takes. Arturo said that once she met her husband Chris, there are just some things and some types of cases she simply won't take. They make enough money from her husband's job as an engineer or auto marketing guy to live comfortably so they do the investigations things on a pick and choose basis,\" he said.\n\n\"Okay your super spy girl has weird quirks,\" I said. \"Why do they need to go to Florida?\"\n\n\"Because Billie Jean lives in Florida,\" he said. \"If we're going to find out anything about her, that's where we need to have boots on the ground. There's some really funny shit going on here. Like Sarah found out that Billie Jean has no fucking money. The bitch has like twelve dollars in her checking account and no savings account. So how the fuck did she manage to fly all the way to California and get dolled up like she did for your party? Obviously she has help and there's something going on. If we want to find out the who's and the what's we need people in Florida.\"\n\n\"Okay send them already,\" I said.\n\n\"We can't,\" he said. \"I already told you, she's picky about the cases she takes. She wants to meet you first.\"\n\nAn hour later I was headed out of town to a quiet little restaurant just outside of L.A. There was very little traffic and I was listening to the Eagles' One of these Nights CD as I drove. By now you've probably realized a lot about my personality so you know what I did when a car flew by me. His fucking exhaust system was as loud as mine and the exhaust note was so sweet, that I couldn't believe it.\n\nAs I looked up to see what it was, I wasn't shocked. It was another Mustang. It was a GT but the car was nowhere near stock. Whoever the guy was he was making tracks. Nobody went past me, Mustang or not, so I shifted up a gear and put the pedal on the floor. My Shelby woke up and as the supercharger started to whine I was narrowing the gap. There were curves up ahead and I was sure that my car's handling package would allow me to easily over take him.\n\nUnfortunately, the bastard hugged the corners like his car was on rails. That car was definitely not stock. As we came out of the last corner, I quickly shifted and stomped the pedal. Five hundred and fifty horses quickly nosed their way towards the front. I pulled ahead of him. But it was very gradual. He was smiling from ear to ear and gave me the thumbs up sign as I passed. I really wish I had friends like that guy. He was a class act. And obviously we shared a liking for the pony cars.\n\nI slowly pulled away from him but I wasn't leaving him in the dust like I expected to. Just so you know it, this experience was why I bought the newer Shelby GT 500 KR, this year. The GT 500 that I was driving last year only had five hundred and fifty horses. The new KRs put out almost eight hundred horsepower.\n\nBefore too long and luckily before any cops saw me it was time for me to leave the freeway. I checked my GPS and saw that the restaurant I was going to was only a couple of blocks away from the freeway exit.\n\nI pulled into the parking lot and was under whelmed. This wasn't the type of place I was used to. It was a small out of the way Mexican place, very understated and very authentic in its decor.\n\nI walked in and noticed that there was no hostess by the door. A fat woman in a greasy apron waved at me from behind the bar and told me to sit wherever I liked. There were a few seedy looking characters scattered around so I decided to sit at a table near the window along the side of the restaurant where I could watch my car.\n\nAfter I'd been sitting there for a few minutes a couple came in. She looked around and examined everyone in the restaurant before her eyes settled on me. She also never let go of his hand. She was tall for a woman with a lot of honey blond hair. She was fit and trim with larger than average breasts that told me from the way they moved under her light sweater that they were real. Her well rounded yet trim ass perched on top of long thin legs. She was a hell of a package. \n\nThe best part was her face. If she'd put any time at all into make-up or styling she'd be beautiful. Hell she already was beautiful but she didn't have so much as lipstick on and in California, raw bare naked beauty just didn't stand a chance. Out here even the maids and the waitresses wore more facial enhancement than this woman did.\n\nThe man with her was tall and well built. He was muscular without being hulking. He also moved like nothing I'd ever seen before. Maybe it was some kind of martial arts training or something. His disposition and the open and easy way that he smiled, worried me. He looked like he was lost. He was just too fucking friendly. The wolves out here would tear him apart. He could probably handle himself in a fight, but the con men would eat him for lunch without ever lifting a finger.\n\nShe was obviously the brains here. He wasn't an idiot or anything, he was probably very book smart, but she had the street smarts. At any rate you could tell by the way they fiercely held each other's hands that they were a team. There was also something very familiar about him. Maybe he was an actor or something that I had worked with.\n\nSurprisingly enough she looked at me and then led them over to my table. \"Mr. Alexander?\" she asked as she stood in front of me.\n\n\"Hey,\" he said. \"We Roy Orbisoned you on the way here, didn't we?\"\n\n\"You what?\" I asked smiling. \"His easy going disposition was infectious. I liked the guy already.\n\n\"Roy Orbison, we blew by you,\" he said excitedly. \"I knew I couldn't beat your Shelby. You've got a supercharger and my car has no power adders. It's naturally aspirated so that gave you a big advantage. I just wanted to see how long it would take for you to crush us.\"\n\n\"There's no way your car is stock,\" I said shocked. If it was I'd spent way too fucking much money, for way too little bump in performance.\n\n\"It's been tweaked,\" he smiled at me nodding.\n\n\"Mr. Alexander, we haven't much time and I've several questions for you,\" she said pulling me back to earth. \"May we sit down?\"\n\n\"Of course, please do,\" I said. I called the fat woman over and got a Corona for myself. I asked Sarah what she'd like and got her a glass of white wine. Her husband looked over the drink menu and eyed my beer.\n\n\"I don't often drink beer,\" he started, bringing a smile to my lips. \n\n\"But when I do, \"I said joining him. \"I drin...\"\n\n\"Bring him a Pepsi, he's driving,\" snapped Sarah, killing our fun.\n\n\"Hey that was one of my best advertising campaigns,\" I said.\n\n\"Mr. Alexander, let's get to it,\" said Sarah all business. \"What's the truth about this thing with this woman Billie Jean?\"\n\n\"The truth is too the best of my memory, I've never met her before I saw her the other night at my party. I don't know what she wants or why she wants it from me. I've never cheated on my wife once, since we got married. I was wild before I met Mary Beth but once we got together I've been faithful ever since,\" I said. The whole time that I was talking Sarah Price was looking into my eyes.",
        "Her husband was looking outside of the bar. \"Chris,\" I said, snapping his head towards me.\n\n\"Take it for a spin. The clutch takes a little bit of getting used to. You need a heavy foot to shift it.\" Without a word he plucked the keys out of my hand and was gone.\n\n\"You do realize that he's going to want one now,\" she said looking at me with a pained expression on her face. \"We're supposed to be putting money away for a bigger house in a better suburb, so we can have some property around us to start raising our kids and you have to go and give him the keys to a car that costs nearly three times as much and only goes maybe twenty or thirty miles an hour faster.\"\n\nHer expression said it all. \"Billie Jean, as Mr. Burns already told you, has no money. We really can't figure out any motivation for her attack on you, but it seems as if she's slowly rolling out more information a little bit at a time. I have a friend who works in Florida. He's digging up things as we speak. I also have found out in the past few hours that she's filed some type of suit against you that originates in Florida. We don't know what type of suit it is though. We're sure this whole thing will come down to money. My goal is to give you and Mr. Burns enough information to give you a heads up on the whole thing and possibly to give you ammunition for your fight against her if necessary.\"\n\n\"So you're taking my case?\" I asked. She nodded her head.\n\n\"Two reasons,\" she said. \"The first is that I'm almost a human lie detector. I believe you when you say that you've never cheated on your wife. I really believe that there are some men out there who are faithful. In fact I married one. You were telling me the truth and every time I look at her I get the feeling that she's hiding something. I don't trust her.\"\n\n\"What's the second reason?\" I asked her. \"Him,\" she said, pointing at her husband as he rejoined us, smiling wide enough to light up the whole room. \"He said we should take your case. We'll be in touch.\" Chris threw me back my keys and gave me the thumbs up sign.\n\nI went back to work and tried to concentrate on my career and my clients. Mary Beth was still trying to fuck me to death every night. She also assured me that she believed me too. But Billie Jean seemed to be everywhere. TV, Radio and print, all of the media seemed to be eager for every tidbit she put out.\n\nBurns had finally decided that we needed to meet. He still wanted to keep me out of it, but he wanted to meet with her. Thus far she hadn't asked for anything. Mary Beth though claiming she believed me had begun asking me questions. She asked more and more of them as the week went by.\n\nShe even got out my old college yearbooks and spent a lot of time looking through them trying to see if Billie Jean appeared in any of the pictures. When I pointed out to her that Billie Jean was at least a couple of years younger than us, she gave up the yearbook search.\n\n\"Blake, I hate myself for asking you this,\" she said. \"I'm giving you a one-time get out of jail free card. Tell me the truth. Have you ever had an affair since we've been together? With Billie Jean or anyone else?\" \n\nI was shocked. My mouth dropped open and words refused to form or come out. I think more than anything else, I was hurt. People were always trying to find out who the hell was under the Lone Ranger's mask, but Tonto never tried. Mary Beth was supposed to be my Tonto. She was my rock. She was the person I wanted to grow old and live out my life with. Everything I did was for her or for us. Her faith in me was one of the biggest sources of my seemingly unshakeable confidence.\n\nWithout saying a word, I gathered up a pair of pajamas and my shaving kit and moved down the hall into the guest room. A few minutes after I lay down I heard her twist the knob but I'd locked the door. She called me a few times, but I didn't answer.\n\nThe next morning I had just gotten to sleep after tossing and turning all night. It seemed like just as I closed my eyes the loud buzzing of my cell phone woke me up.\n\n\"It's a paternity suit,\" said a voice from the phone as soon as I pushed the button to connect the call.\n\n\"Whuh?\" I said. \"Who the fuck is this? Do you know what time it is? I just got to sleep.\"\n\n\"Mr. Alexander, this is Sarah Price. I'm sorry to call you so early. It's just after nine a.m. here. I forgot about the time difference. But I wanted to give you a heads up. So you could plan your strategy. The way I figure it. I've given you a few hours of lead time, but that's all,\" she said.\n\n\"Sarah what are you telling me? I'm not sure I understand you. Say it all again, now that I'm awake.\" I told her.\n\n\"Billie Jean claims that you are the father of her child,\" said Sarah. \"She's filed a paternity suit through the Florida Attorney General's Child Support Enforcement Bureau. You wanted to know what she's up to and after. It looks like she wants two things. The first is to ruin your reputation and your life. And the second is to suck out a shit load of money from you.\"\n\n\"You can tell that the money is only a part of it. If it was only the money, she could have come to you quietly, under the radar and told you about the child and asked for you to pay child support or even asked for cash settlement outright to keep quiet. She did this publicly and dramatically because she wanted to pull you down. Either she or someone she's working with has a big fucking grudge against you. Can you think of anyone who hates you badly enough to want to do this to you?\" she asked.\n\n\"Not off the top of my head,\" I said. My brain was still only half functioning.\n\n\"Well I'm looking further into it. I'm trying to cross reference and check out every person she's known to associate with over the past five years. She's scheduled to go on TV and blab all of this soon. She also claims to have proof, so be careful,\" Sarah said before she hung up.\n\nI had to admit, Sarah was good. The other investigators that Burns had put on the case and the ones that McMillan Worth had hired had all come up empty so far. Thanks to Sarah at least I wouldn't be surprised when the news papers came out or the TV shows hit today.\n\nAs I headed for my morning shower, I realized that last night had been the first time that I can remember that Mary Beth and I slept apart.\n\nIn the space of a week I'd gone from controlling the media on behalf of my clients and their products, to hiding from them on my own behalf.\n\nJust as the sun came up and far before anyone was out on the streets I snuck into my office. I actually got there before Myra did for a change.\n\nWhen she walked in at eight, she was surprised to find the lights already on and me already in the office.\n\n\"Myra, sit down,\" I told her. \"Over the next couple of days things are going to get worse.\"\n\n\"Oh Boy,\" she said. \"How much worse can it get?\"\n\n\"Billie Jean is doing all of this as part of a paternity suit,\" I said.\n\n\"Why didn't she just ask you for the money,\" asked Myra.\n\n\"I don't know. My investigator thinks that she also wants to ruin my reputation,\" I said. \"I'm telling you this because I don't want you to have to find out by reading it in the papers tomorrow. Apparently she's going to be on TV today.\"\n\n\"How is Mary Beth taking it?\" she asked.\n\n\"I guess I should call her and tell her,\" I said.\n\n\"Why haven't you told her already?\" she asked.\n\n\"I'm not sure Mary Beth believes me anymore,\" I said sadly. \"I guess there's just too much of this too soon.\"\n\nI did call Mary Beth to try and give her the news too. Her cell went straight to voice mail, so I left her a message. I was glad it happened that way, because I still wasn't ready to talk to her. The fact that someone I loved so deeply and so completely didn't believe me was devastating. I realized then that I had to take a closer look at my friends.\n\nBillie Jean appeared on A.M. California. It was a popular morning news magazine type show. She had changed her appearance. Instead of the glamorous beauty queen persona she'd shown at the party she was trying the poor mistreated girl role.\n\nI watched as she theatrically wiped a tear from her eye. The hosts of the show were trying to comfort her as she choked out her tale of woe. She claimed that she'd been at a party barely four years ago. The party had been in Florida. Some of my old college friends had arranged it and we had danced on the floor in the round. It was pure bullshit. I hadn't done the swapping partners thing since long before I'd met Mary Beth. \n\nShe told them that she'd been instantly in love with me and that was the only reason she'd had sex with me. She also told them that I'd led her to believe that we had a future. She said she woke up the next morning and I was gone. She had no contact information and no way to get in touch with me. Then she dropped the big bombshell. She claimed that she'd discovered a few weeks later that she was pregnant, and I was the only person who could possibly be the father.\n\nWith no way to contact me, she'd raised our child alone. She'd struggled and took whatever jobs she could get just to make ends meet. Then finally a few weeks ago she'd seen a picture of me in a magazine. She'd borrowed every cent she could for a cheap flight out here. She'd tried several times to contact me, but claimed that she couldn't get through to me. She was crying, the hosts of the show, though they were supposed to be unbiased were trying to vilify me and of it was up to the studio audience I'd probably have been both castrated and tarred and feathered.\n\nAs Myra and I were watching the Billie Jean circus on TV, Burns called me.\n\n\"I've got a meeting scheduled for tomorrow with her,\" he said. \"Hopefully after that I can figure out what it'll take to get her to just go the fuck away.\"\n\n\"I want to be at the meeting,\" I snapped. A few minutes later Mary Beth called me. Her sister, who I couldn't stand had shown up at my house early this morning and told her about the show. Mary Beth had apparently heard all about it. When I told her about the meeting, she insisted on being there as well. She was also very suspicious about how I'd known this was going to happen.\n\nLater that morning I was summoned before the partners for another wonderful meeting.\n\nArthur Harris was all over me as soon as I walked in the door. \"I thought that you were going to take care of this embarrassing situation of yours before it affected the company,\" he said.\n\n\"I am working on it Arthur,\" I snapped. \"The problem is unlike the affairs that you've had this woman seems to want more than just money. There's of course the added problem that unlike you, people know who I am, so when something happens to me, it's news. And lastly there's the fact that unlike you, I'm innocent.\"\n\nFor a second he was shocked; first by the fact that I had called his old ass by his first name and secondly because all of my points against him were true.\n\n\"Your innocence or guilt in this matter is irrelevant,\" he hissed. \"The bottom line is the main thing. Some of our agents are reporting that they're having a more difficult time selling our ad campaigns. Some of our clients are watching this and waiting to see which side wins before they continue to do business with us. Once again, I'm asking you to handle your uhm...affairs.\"\n\nWhen I got home that evening, I was hoping I could talk to Mary Beth. Us not being together was killing me. It wasn't going to happen though. Before I even shut off my engine her sister Tina was out in front of my house trying to pull my door open. I unlocked the door, pushing her away from my car.\n\n\"Be careful, Tina,\" I snapped. \"This car costs more than three years of your alimony payments.\"\n\n\"You cheating asshole,\" she snapped. \"You finally got caught. I knew you would.\"\n\n\"You mean you hoped I would, don't you Tina?\" I snapped. \"Come on you were hoping that I would cheat on Mary Beth so she'd divorce me and you and I could get together. Some kind of a birds of a feather thing.\" She was seething. She was so angry and so red I thought she would explode.\n\n\"The difference between us though is that I didn't cheat. And my people are going to prove it,\" I said.\n\nMary Beth came out then, wondering what we were yelling about. I went into the house, walking right by her and back into the guest room.\n\nThe next morning I knocked on the door to our room and told her that I'd left the address to Burns' office on the table. I also told her that Tina couldn't come to the meeting.\n\n\"Blake, why are you sleeping in the guest room?\" she asked. \"I really miss you. It's tearing me apart not having you next to me. Tina says that you're acting guilty.\"\n\n\"Thanks MB,\" I said. \"It's good to know that the woman I love believes me and is behind me.\" My sarcasm was lost on her. \"Maybe you should have Tina sleep in here with you.\"\n\nI drove to the office alone. When I got there Burns was there along with another man who was one of his associates. \n\nMary Beth got there about 10 minutes after I did. I could tell by looking at her that she hadn't really taken the time to put on the show that she normally would have. She'd swept her hair back into a pony tail and thrown on some relatively casual clothes compared to what she normally wore in public. Maybe she was as upset about this whole thing as I was, but more than likely it was simply because she thought that the meeting would be a semi private affair.\n\nFinally with a great deal of fanfare and a bunch of reporters trailing after her, Billie Jean arrived. She made a big deal of wiping a tear from her eye as she saw me. Then she smirked as she looked at Mary Beth. \"No wonder he wanted me,\" she said. Then added for the benefit of the reporters, \"She's built like a skinny teenager.\"\n\nBurns started the meeting out by simply asking her what she wanted. She told him and it sounded as if she'd rehearsed the speech many times, that what she wanted was for our son to have the benefits that he'd been denied for so long. She wanted for him to be raised in the lifestyle that he was entitled to. And she wanted to make a point that big shots can't go around loving and leaving innocent young girls.\n\nThen she recounted the whole fantasy that she'd spouted on the TV show. Mary Beth started asking her questions.\n\nThat's my baby, I thought. Maybe Mary Beth was back on my side. She asked Billie Jean a lot of tough questions. Like how long were we together that night. And what kind of proof did she have that the child was mine. Billie Jean was unruffled though by Mary Beth's questioning.\n\nShe told my baby we danced til three. Then she looked at me, and showed a photo of a baby crying. His eyes looked like mine. It was a very high resolution photograph, and very clear. The boy did look a lot like me, too much in fact. The purple eye coloring was extremely damning. Even I was shocked.\n\nMary Beth got up from the table and ran out of the office. She was clearly upset. Billie Jean's nearly hysterical laughter followed her as she ran away. \n\n\"I'll be in touch,\" smirked Billie Jean as she too left the meeting. I saw her in front of the office playing up to the reporters as I snuck out the back like a God damned criminal. There was an itching in my brain though.\n\nAgain I drove to the office, but this time I was too late to avoid the crowd of reporters who greeted me.\n\n\"What do you think about you lover's claim that she's raising your child alone and nearly destitute?\" asked a reporter as I got out of my car.\n\n\"Billie Jean, is not my lover,\" I said. \"She's just a girl who claims that I am the one. But the kid is not my son.\" I really wasn't sure if I was trying to convince them or myself.\n\nLuckily building security held them off as I got on the elevator and went to my office. I spoke to Claude Gascon in Paris about the hotel deal. He wanted me to come over there and actually look at their operation and see a couple of their buildings. The deal was going nowhere so I finally agreed. I told him I'd have my people coordinate with his and we'd work out dates. Perhaps this would be a good time for Mary Beth and me to get away for awhile. \n\nBurns called me and told me that we needed to go to Florida to file our counter claim or at least answer the claim that I was the father of Billie Jean's son. I told him that we could leave later that afternoon. I would arrange for us to take one of McMillan Worth's Jets.\n\nHe said he'd arrange for us to handle our business there as efficiently as possible, so we could get back here to keep things going with as little disruption in my schedule as possible.\n\nMyra came into the office and told me that the office gossip was now split forty/forty. A lot of the associates and the people who worked with me on a daily basis believed me. Though the evidence was damning they knew me and were on my side. The secretaries and a lot of the other workers there were sure I was guilty. The remaining twenty percent didn't care one way or another.\n\nI sat there thinking about my life. It had been less than two weeks since I first met Billie Jean and she was systematically tearing up a life that had taken me years to build. Again I thought about my wild and misspent youth. I really was kind of wild back then, but it was all in fun. People always told me, \"Be careful what you do. Don't go around breaking young girls' hearts.\"\n\nAnd it wasn't just people who gave me that advice. Mama always told me, \"Be careful who you love. Be careful what you do. Or the lie becomes the truth.\" And God damn it that was what was happening here. Slowly but surely all of that bitch's lies were becoming the truth. Fewer and fewer people believed me. I was still sure even after seeing that fucking kid that I had never set eyes on Billie Jean before the night of my party. The funny thing was that as soon as I'd seen the picture of the child, I'd felt a connection between us. Not necessarily with Billie Jean but with me and the boy. I didn't know how to explain it but it was there.\n\nI tried to call Mary Beth, but somehow got Tina instead. \"Why are you answering my wife's phone?\" I snapped.\n\n\"Because she's so busy crying over what you did, that she can barely do anything,\" said Tina, snarkily.\n\n\"Could you please put MB on the phone?\" I asked.\n\n\"I'll see if she wants to talk to you.\" There was a big clunk. She'd obviously dropped the phone.\n\n\"Sorry, I dropped the phone,\" she said. \"I hope it didn't hurt your ears.\"\n\n\"You probably dropped the phone about as quickly as you drop your panties when sailors are in town, just give the phone to MB,\" I snapped.\n\n\"Hello,\" said Mary Beth. Her voice sounded as if all of her strength and life had been drained out of her.\n\n\"I have to go to Florida,\" I said quickly. \"Would you like to come?\"\n\n\"Why are you going to Florida?\" she asked flatly. Just hearing how dead her voice sounded made me want to kill Billie Jean and whoever else was behind this.\n\n\"Billie Jean's Paternity suit originates from there. I could probably phone this in, but I want to appear there in person. It will let everyone know first that I'm taking this seriously and second that I'm not hiding from it,\" I said.\n\n\"Blake, you're going to have to do this one without me,\" she said. \"I really can't take anymore of this. That baby looks just like you. He even has those freaky eyes of yours. God damn it I gave you a chance to come clean about this and you fucking lied to me. I don't know if I'll ever be able to trust you again. Maybe someday we'll come close to what we had, but it's going to take time and it's going to be hard. You're going to have to go to Florida without me Blake.\" She said all of this with the same flat tone to her voice. There were no highs and lows in her delivery, it was emotionless. I was shocked.\n\n\"Thanks for believing in me,\" I said quietly. I hung up the phone. I punched in another number and waited for it to ring.",
        "\"Hey Sarah,\" I said. \"Thanks for the warning. It was good to know what was going to happen before it did for a change.\"\n\n\"That's what you pay me for,\" she said cheerfully. \"How are things on your end?\"\n\n\"Well fifty percent of the people I work with think I did it. The one that kills me though is that this may end up destroying my marriage. Mary Beth thinks I'm lying to her. She doesn't believe me and it's killing her. We've been sleeping apart for almost a week. That's the first time that's happened to us. And after I prove that I'm innocent, it won't matter. Billie Jean is going to pay for this,\" I said.\n\n\"Anyway Sarah, I'm coming to you. I'll be there before midnight your time. What I need from you is a file on all of the significant players in the Florida State Attorney's office. I'd like to have some heads up on them before I face them tomorrow. I know it's short notice but I'd appreciate anything you come up with,\" I told her.\n\n\"Okay, I'll have the files at your hotel by midnight,\" She said as she hung up the phone.\n\nAs soon as I hung up, my phone rang again.\n\n\"Who were you talking to, one of your whores?\" said Tina's acidic voice. \"Listen, I just called to make you an offer. Actually it's two offers. Mary Beth doesn't want to go with you to Florida. So I thought that I'd go with you. That way when we get back I could tell her that you only handled business on the trip.\"\n\n\"Why the fuck would I want to take you with me?\" I asked. I was totally confused. Tina surely understood that I hated the shit out of her.\n\n\"Look, moron, with me there my sister will know that you weren't screwing around behind her back. Plus when we get back maybe I'll try to convince her to forgive you,\" she snapped.\n\n\"Tina you never do anything, for nothing,\" I said. \"What do you get out of this?\"\n\n\"Well Mary Beth told me that you two haven't had sex in about 4 nights, so you must be kind of hard up, if you get my meaning.\"\n\n\"Tina, I'll never be that hard up,\" I said hanging up the phone.\n\nMyra stepped into my office at that point. \"Everything's arranged, hotel, car, the whole nine yards. I even know you well enough to make a contingency plan for when you call me,\" she said smiling.\n\nI didn't have any idea what she was talking about, so I let it slide.\n\nI rode to the airport with Burns. There was no way that I'd leave my Shelby in long term parking. Actually I should have realized that there was plenty of room in the area around the hangar where McMillan Worth's jets were stored to park my car.\n\nAs we got into the winged aluminum tube that would fly us across the country in a matter of hours, I thought back on my life. By the time the jet took off I was deep into my thoughts. Actually when I'd seen the pictures of the child that Billie Jean claimed was mine, I'd realized what was going on here.I also realized that proving it would be difficult if it was even possible at all. \n\nSeveral hours later we arrived in Florida. Even though the temperature was a close match to what we'd left in California, it felt hotter. This wasn't dry warm air; this was far more humid, wet towel sticking to your skin swamp air.\n\nIn California the temperature and the warn breezes caress your skin and make you feel good. That's why all of the people walk around smiling. This felt more like the temperature and the air clamped you in a fist. \n\nThe women here were to be truthful, no less beautiful and certainly at least as well endowed as the ones in Cali. The interesting thing though, was that they seemed to be more natural. \n\nAs we walked out of the hangar that connected with the main airport terminal, my head was snapping left and right. Shit, I was a happily married man. If the women here affected me like this, I'd hate to be a single guy here.\n\nAs we left the terminal I saw a limo driver with a sign that had Burns' name on it. It was a big Mercedes stretch limo. My face dropped immediately. Then I decided that Myra needed a raise. As we walked towards the car that I was dreading getting into, my transportation arrived.\n\nBack in the sixties when Ford had just released the Mustang, They made a deal with Carroll Shelby to produce some special edition cars for the Mustang line. One of the most sought after was the Shelby GT-H. These cars were sold to the Hertz rent a car company and could be rented by anyone with the money to rent a car. Lots of guys who wanted to get into racing on the cheap would rent those beasts that were faster and more powerful than the stock Mustangs of the day and take to them their local drag strips.\n\nIn 2006 Ford and Shelby had built the 06 Shelby GT-H as a tribute to those cars. And yep, you could still rent one from Hertz. All of a sudden Myra's cryptic message made sense. She was probably sure that after I'd driven the car, I'd want it. That woman really did deserve a raise.\n\nI followed the limo to the hotel. I checked into my room and before my ass hit the surface of the couch my phone rang. Inwardly I was pissed then I realized that thought it was 10 o'clock here it was only 7pm back in LA. It was of course crazy Tina.\n\nI pushed the button to record the call and before I could say anything, she just started talking.\n\n\"By the time this night is over, you'll wish you had taken me with you. Your life is never going to be the same. You think Billie Jean hurt you. Wait until you see what I'm going to take from you. You should have given me what I wanted.\" And then she started hysterically laughing. I hung up the phone. Tina was certifiable. When this Billie Jean thing was over and life got back to normal, I needed to have a long talk with Mary Beth about distancing ourselves from her sister.\n\nMy phone rang again. I was torn between letting it go to voice mail and just cursing Tina out until I noticed the 904 area code. The call was from here in Jacksonville.\n\n\"Hello,\" I said tentatively.\n\n\"Mr. Alexander, this is Sarah Price. Can you meet us in Mr. Burns' suite I have the information you needed and I'd like us to discuss our course of action,\" she said.\n\n\"I'll be right over, Sarah,\" I said. The woman was certainly worth whatever I was paying her. She'd promised me a file by midnight and she'd cut two hours off of that.\n\nMonty's suite looked much like mine did. Unlike the hotels in Cali where they tended to use different designer's for every suite to create a different mood every time you stayed in place, here it looked like they went with what they liked and used the same pieces or very similar ones in every room.\n\nThere were four large wing backed chairs around a small conference table in the sitting room of his suite. His bed appeared to be the same one I had as well. Not just the frame and the mattress, even the linen and spread seemed to be the same. It made me wonder how the maids didn't get lost or confused.\n\n\"Okay, let's get started,\" said Sarah. I was amazed. This was the longest I'd ever seen her go without glancing at her husband. Nope it's over; she just locked eyes with him again and smiled.\n\n\"I've narrowed this down to all of the players and sub players involved to make this simpler,\" she said.\n\n\"Darryl Martin,\" she said showing us a picture. \"Don't worry about him. He's toast we won't be dealing with him. He's the attorney for the state who was assigned your case. He's not very good, which would have been great for us.\"\n\nI raised my hand, like a school kid and she looked at me and smiled. I don't know how Chris could handle being around her all the time. With all of that long honey blond hair and those huge green eyes aimed in my direction, I was getting aroused. Today she was wearing those little rectangular glasses like an extremely sexy librarian. \"This is your meeting, Mr. Alexander,\" she said. \"You don't have to raise your hand.\"\n\n\"Why won't we be dealing with Mr. Martin if he's the attorney assigned to the case?\" I asked. \"And if he's not important why do we have his picture?\"\n\n\"I wanted to show you the entire situation we're dealing with,\" she said. \"You pay us for all of the facts so that's what I'm giving you. The real deal is that with your celebrity status and the importance of your case, I was expecting the Florida State attorney's office to go bigger. I just wasn't expecting them to go this big.\"\n\nShe flipped up another picture. Even seeing him in a photo filled me with dread. She didn't need to introduce him to us at all.\n\n\"Before we get into who we will be dealing with let's look at the why.\" She pulled out another picture; this one was of a woman. The photo was a full body shot of a woman in a business skirt suit. Her long curly jet black hair was the kind that most men would die to wrap their fingers in while they were...\n\nThe woman was incredibly busty, that much was obvious even in the photos. The fact that she was covered from neck to knees only seemed to enhance her appeal, not to mute it. She had a slim waist and a rounded ass that her skirt couldn't conceal. Her legs were thick but so well shaped that it seemed natural. The woman looked like that pornstar Angelina Castro. She had the same zest for life or so it appeared in the photo. Her eyes drew me in, they were the most expressive brown eyes I'd ever seen. \n\n\"This is Helena Martinez,\" said Sarah. \"She's the social worker assigned to the case. Her only concern is the child. If paternity is established she's the one who will determine, except for the amount of your obligation, everything else. She is exceptional in her job. If we can get her on our side, or at least not working against us, it would be very good.\"\n\nI looked at Sarah, thinking that maybe just this once, she'd made a mistake. She shook her head at me as if she was psychic. Then she showed us another picture, this time another woman. The hair was different but there was a resemblance. If the first woman had been busty this one was even more so. I wondered how she could stand up.\n\n\"This is Myra Martinez,\" said Sarah. \"She's the PA for the Florida State Attorney. She's the aunt of the previously mentioned Helena. I'm sure you guys have all noticed the family resemblance.\" Sarah smirked as she said this.\n\n\"Maybe it's something in the water,\" said Chris. Sarah slapped him gently on his head and began speaking again.\n\n\"Anyway, Helena puts in a phone call to her aunt, who probably called in a favor from her boss and now we'll be facing William Maitland,\" she said. \"He's a far better attorney. He's probably the best lawyer on this side of the country including all of the fancy guys in New York. Our only advantage here is that he usually handles Criminal cases, like homicides etc. You've all seen him in the papers and on TV. They call him the Angel of death.\"\n\n\"Oh great,\" I said. \"From what I've heard that guy never loses. I'm going to the chair for something I didn't do.\" Everyone laughed.\n\n\"Be serious Mr. Alexander,\" said Sarah. \"Maitland is a very good attorney, but from our research, I can tell you that no matter what kind of case he's involved in, all he wants is the truth. Again if we can get him on our side, it will make things a lot easier for us. So we have to be straight and up front with him. Please look over the file on him I've prepared for you and the others too. We're having a meeting with him first thing in the morning, at the courthouse. Be professional and be polite. You're a charmer, make him like you.\"\n\n\"Okay, I'll do my best, but how do I do that?\" I asked. \n\n\"Just be honest,\" she said. \"Maitland is like me, he can smell a lie from a mile away.\"\n\n\"Oh, I forgot to tell you, he probably doesn't know he's handling the case yet?\" she said.\n\nI looked at her strangely. \"Sarah, why doesn't he know?\" Then I had another thought. \"If he hasn't been assigned the case yet and he doesn't know, then why do you know?\" I asked.\n\n\"Because that's what I do,\" she said. She handed me more files and pictures including another incredibly beautiful woman with an outstanding rack of her own. \"That's Maitland's ex wife Debbie,\" said Sarah.\n\n\"There has to be something in the water,\" said Chris.\n\n\"Do I need to start drinking the Florida water, Chris?\" asked Sarah.\n\n\"Nope you're perfect,\" he said smiling at her sheepishly.\n\nThen we all left and headed for our own respective rooms. I studied each picture and the files associated with them. I did it the same way I look at a client's product line, looking for weaknesses and products that are a drain on the company. Sometimes they're great products that only need a different target audience or a different pricing structure. Sometimes they're simply deadwood. I will admit that I spent a lot of time looking at the picture of Helena Martinez. She was incredible.\n\nVery early the next morning, we all got up and headed out. Sarah had decided that the best way for us to handle our meeting with Maitland would be to catch him on his way into his office. \n\nSarah and Chris greeted me warmly as we headed for the parking lot. \n\n\"I'll bet you miss your car,\" said Chris. \"Rental cars suck.\"\n\nI nodded my agreement. \"The one I have isn't so bad,\" I said. As we neared the parking lot I pouted out the GT-H to him and his eyes got bigger.\n\n\"Oh my God, that's nice,\" he said.\n\n\"Mr. Alexander, do you really have to?\" asked Sarah exasperatedly.\n\n\"I'll bet I can beat that one,\" said Chris. \"But I want one anyway. Honey, this one is way closer to our price range,\" he whined.\n\n\"Rrrrrrrrrr,\" growled Sarah.\n\nWe drove over to the municipal complex that housed the court room and all of the office buildings for the county's legal teams.\n\nWe waited in a small cafe on the first floor that our target was known to frequent.\n\n# # # # # # # # # # #\n\nMy name is Bill Maitland. I'm an Assistant State Attorney in the Jacksonville State Attorney's Office. Unofficially I'm the chief prosecutor which means that I get most of the juiciest and most important cases. Because of my success in high profile cases I'm viewed as the number one guy under the Big Man, State Attorney Austin Edwards. Austin is a friend and sometimes mentor figure to me, though we've bumped heads a time or two.\n\nI had just parked my Escalade and headed to pick up my coffee of choice from the cafe across the street from my office when I noticed something different. \n\nTwo obviously not stock Muscle cars, both Mustangs were parked very close to my normal parking spot. As I stepped into the cafe, a tall pretty woman with long honey blond hair moved into step with me. \"Good Morning Mr. Maitland,\" she said. I abruptly stopped and looked at her. She held out her hand for me to shake and I simply looked at it. \n\nOut of the corner of my eye I noticed that several of the early morning patrons had already stopped their morning rituals to watch. The price of notoriety is that people are always watching me. \n\nThe easiest way to end the stares was to pretend that everything was normal and nothing was going on.\n\n\"I'm Sarah Price,\" she said. \"You're not scheduled to be in court for a few hours so is it possible that you could sit down and talk with my boss for a few minutes?\"\n\n\"Miss...\"I began.\n\n\"Price,\" she supplied. \"And actually it's Mrs. Harris, but I use my maiden name for business.\"\n\nWhoever she's married to is one lucky bastard, I thought. She was very pretty. At first glance I thought she was one of those up and coming, fresh out of school attorneys that some of the bigwigs hired. That way they could develop their own legal talent while they were still affordable. Later on in their careers when they were no longer cheap, you could use the \"But I gave you your first job when you got out of law school,\" line on them. \n\nShe was as I said tall. Her body was thin but curvy in the right places. Not in the same class as my wife Debbie. God, why did I still sometimes make that mistake even in my own mind and especially after all of the water that had passed under that bridge. My ex wife Debbie, who'd dumped me for a younger guy with a bigger dick. No, Sarah was no match for either Debbie or the current woman I was hoping to start something with, Myra Martinez. \n\nBut Sarah had a youthful vigor and a spark that neither of them could match and her legs were incredible.\n\n\"Mr. Maitland you're going to meet my boss one way or another anyway,\" she said. \"We'd like it if our meetings weren't adversarial, so why not have a brief sit down before the hostilities begin?\"\n\n\"Who's your boss?\" I asked. \n\n\"Blake Alexander,\" she replied.\n\nI'd heard of him. Who hadn't? Recently he'd been all over the newspapers. He was one of those California guys who had everything going for him and wanted more. He wasn't my type. The guy had everything, a great career, a beautiful if boring looking wife and more money than he could ever spend.\n\nRecently, one of his former lovers had crawled out from under a rock somewhere and started making trouble for him. It was the same with all of these guys, his first line of defense was to claim he didn't know her. One of the local papers even had a banner headline using a quote from him. It read, \"Billie Jean is not my lover.\" Yeah, sure. Why didn't he just pay the woman and get on with his life?\n\nStill there was something interesting about Sarah if not necessarily her boss. \"Lead the way, Ms. Price,\" I said.\n\nShe turned and started walking towards a booth in the rear of the cafe. I was suddenly glad I had manners. Sarah's rear view was a symphony of syncopated muscle movements and twitches that would drive any man to the brink of sanity. I was sure she'd thrown in just a little extra sash, in her sashay for my benefit.\n\nThree men awaited us at the table she pointed to. One of them Monty Burns I remember from Law School. He'd been a couple of classes ahead of me but was a competent attorney. After graduating he'd headed out to the land of fruits and nuts to do entertainment law.\n\nIn the middle sat Blake Alexander. I recognized him from his pictures and TV. The boyish charm and good looks were even more intense in real life. I really wanted to hate him. \n\nThe third guy at the table could have been related to Alexander. He was roughly the same age, but cut from a slightly different cloth. His hair was darker, his eyes weren't that peculiar purple color that Alexander's were, but they had the same kind of appeal. \n\n\"The Angel of Death in person,\" smiled Alexander, extending his hand to me.\n\n\"And they call you Alexander the Great, don't they?\" I asked. We both smiled. \n\n\"It's funny,\" he said. \"A bunch of people who don't know us, or what we stand for, give us names that the public takes to more readily than they do the ones our parents gave us.\"\n\nI nodded.\n\n\"All you've ever tried to do was to bring out the truth and make sure that the guilty got what they deserved,\" he said. \"In my case all I'm trying to do is to advertise my client's products to the best of my ability. I don't conquer people or places. Despite our differences I think we're lot more alike than most people would ever believe.\"\n\nGod Damn it, I thought. I was going to like this bastard.\n\n\"Both of us are men who give our careers almost too much of our lives and attention until they put our families in danger,\" he said. The bastard had certainly done his homework.\n\n\"In fact this whole fiasco is putting so much pressure on my marriage that I'm not sure it will survive, Mr. Maitland,\" he said, looking me straight in the eye. Despite his slick way talking, I was sure he was being very straight with me. But I had run into people who were simply such good liars that they never even blinked, when telling lies in church. I'd imagine in his business, advertising you'd have to be a good liar to sell useless products to the public and make them believe they needed them.\n\n\"I still don't understand why I'm here, Mr. Alexander,\" I said.\n\n\"You're going to be assigned my case,\" he said. \"I know that normally you handle criminal cases, but I guess my case is high profile enough that I merit the best.\" He smiled ruefully.",
        "\"In any case,\" he began again. \"There are a few things I want you to know. First off, in the words of Bill Clinton, I did not have sex with that woman. I never saw Billie Jean until she walk into that awards ceremony. I'm not expecting you to give me any favors, but I wanted you to know that I did not do this. I love my wife more than I can ever say. This whole situation has driven a wedge between us and it gets worse every day.\"\n\n\"If I'm proven guilty in this case I will pay whatever the law requires and more, I have no problem doing that, but I really did not do this. I will cooperate with your investigation fully. Anything you need, you'll have. And to start with...Chris,\" he said. \n\nThe other young man at the table produced a brief case and brought it to me. The briefcase was full of files and records. There was a sheet on top with a list of account numbers and passwords.\n\n\"What is all of this?\" I asked.\n\n\"All of my phone records for every phone used by anyone in my employ for the past two years,\" he said. \"There are also banking records. There are a couple of documents that give you the right to search through any of my personal and corporate accounts online...\" I looked at him.\n\n\"We assumed that if we gave you the phone records you'd think they were doctored. So assuming that you thought they might be doctored, having access to the accounts means that you can go in and without a court order, simply look through the phone company's servers for any information you need,\" he said. \"We're trying to be completely transparent with you.\"\n\nI looked puzzled. Alexander was unlike any other suspect I'd gone against.\n\n\"Also I'll be staying in Florida for probably another day. I'd like it if you could, once you find out that you have the case, arrange for my DNA to be taken and processed.\"\n\nI nodded at him. I was taken aback. He was volunteering his DNA. \"What makes you so sure that I'm going to be assigned your case?\" I asked.\n\n\"Quite simple, Mr. Maitland,\" he said smiling. \"I'm the best there is at what I do. You're the best there is at what you do. And I truly believe that Sarah is the best there is at what she does. Sarah's information says that you will be. I believe her. Now after the investigation goes forward, I'm expecting the first DNA test to prove that Billie Jean's child is more than likely mine.\" Everyone at the table gasped when he said that. The test will be inconclusive though, but it will prove the theory I've been working with for the past few days.\"\n\n\"What theory is that?\" I asked.\n\n\"I'm not ready to reveal that yet,\" he said. \"But when this all comes out and I'm exonerated, I'll expect you to pursue the true villains here with the same zeal that the press has hounded me with.\" He smiled and got up extending his hand again and I took it. \"We'll be in touch,\" he said. Then he and his people left. I was shaken by the whole thing. Did I at his age have anywhere near that amount of poise or cunning? Probably not.\n\n# # # # # # # # # # #\n\n\"Helena Martinez tried for the fourth time that morning to adjust the ancient fan in her small office so it would direct a stream of moderately cooler air towards her desk. \n\nShe really wished that she could simply take off all of her clothes and run around naked. She laughed at the image. What she really wished was that her job would allow her to be as daring in her dress as her aunt was and still maintain a sense of professionalism.\n\nHer aunt had been cursed or blessed, depending on your viewpoint even more than Helena had. But her aunt had the status of her employer's office to keep the wolves at bay.\n\nIf she came to work in a blouse or shirt that showed even part of her cleavage, all of the years of striving to be recognized for her skill and dedication to the job would be over. The worst part during Florida's brutal summers was that she couldn't even wear a sleeveless shirt because then the men just tried to look at her boobs from the side of the shirt through the arm holes.\n\nAs it was now she was very proud of being the very best case worker in her department. All of her clients called her Miss Martinez and a very few of them called her Helena, if they were good and doing what they were supposed to be. But if they missed a payment or mistreated their kids in any way shape or form. Both her name and her temper got shorter and then they just called her Hell, cause that's what she gave them.\n\nIn frustration she just turned the fan off. She'd noticed that the motor on the back of the fan was about to overheat. It was putting more warm air out than the amount of cooler air the blades were producing.\n\nAs she turned the fan off it fell off of her desk. She bent over to make sure the fan wasn't damaged.\n\nAs she bent over, the movement causing her ass to stick straight up, she saw him out of the corner of her eye. He seemed to be shaking his head. She imagined what he was thinking and erupted, before she gave it a second thought.\n\n\"Get the hell out of my office. What are you some kind of peeping Tom. If you'd get off your lazy ass and get a job, you could pay for internet service and see all of the pictures of bent over women you want. Maybe you could even make your child support payments on time and we wouldn't have to have these meetings set up,\" she screamed, as she straightened up.\n\n\"Wow,\" he said smiling. \"That probably scares them off doesn't it?\"\n\nHelena looked at him for a second. There was something familiar about him, but she'd never seen him before.\n\n\"Maybe we should start again,\" he said. He held out his hand for her to shake in a professional manner. \"I'm not one of your cases yet,\" he said. \"His clothes were certainly better than anything the people she dealt with could afford. There was also just something different about him. She really found herself wanting to like him.\n\n\"Who are you?\" she asked in a tone that was just slightly less gruff. \"Do you have an appointment?\"\n\n\"Nope,\" he smiled. \"But I figured that since we're going to be spending a lot time together, I should drop in to meet you before you sick your dogs on me.\"\n\nOh shit, she thought. He was definitely a smooth one. He was probably one of those guys who charmed your panties off, left you pregnant and was shocked when you tracked him down to make him pay for the child he left behind.\n\n\"If you don't have an appointment, why are you here?\" she asked. She could play his little game too. \"Shouldn't you be hiding somewhere, hoping we don't track you down and force you to deal with your responsibility?\"\n\n\"Nope,\" he said again. God damn it, he had this way of making her think that he wasn't a bad guy.\n\n\"How about if we try this a different way?\" he said. \"I've already spoken to the prosecutor who'll be handling my case. I've volunteered to give my DNA as soon as possible and I'd like to have you go over my records and tell me exactly how much I'll have to pay, possibly.\"\n\nThat certainly was different, thought Helena. He hadn't yet been proven the father, but he was already here. Instead of hiding and trying to avoid this, he's coming in and volunteering. Maybe he'd be one of the rare good ones.\n\n\"What's your name?\" she asked smiling. She may as well try and get things off on a good foot.\n\n\"Blake Alexander, \"he smiled back.\n\nHelena could only stand there staring at him. This man had enough money and influences to have kept this case out of court for many years. Probably until the woman accusing him couldn't afford the delays and just settled out of court for what would amount to a pittance to him. But here he was, showing up and volunteering his DNA and his records. Something was funny.\n\nShe brushed her hands over her clothes to straighten them out without appearing to do so and looked at him. Without realizing that she did it she also licked her lips and smiled a tiny bit brighter as well.\n\n\"Would you like me to have my secretary bring you some coffee or something,\" she said. \"I need to find the file and go over the information we have. I'm not sure who'll be litigating your case or even if litigation will be necessary.\"\n\n\"Your secretary isn't out there, that's why I just walked in,\" he smiled. \"And litigation will definitely be necessary because,\" he shrugged his shoulders. \"Miss Martinez, I know that you're not going to believe me, almost no one does, but I'm not the father. I'm very sure that you've heard that, thousands of times in your line of work. You don't know me and you have no reason to believe me. So let's just make this as pleasant as possible for both of us.\"\n\nAs she looked at him she noticed that a little bit of the boyish charm and swagger had worn away. He looked as if he'd been slightly worn down around the edges by all of the pressure of being under the spotlight. The vulnerability actually enhanced his attractiveness even more. Inspite of herself, Helena could feel something for this man already. It didn't make sense. And her track record with men was dismal.\n\n\"Mr. Alexander, you said something interesting. You said the prosecutor assigned to your case...\"she began. \n\n\"Yes, Miss Martinez, it would appear that your Aunt was able to get the case assigned to Bill Maitland,\" he said.\n\n\"Well both Mr. Maitland and I would need to speak to the mother first, before we could go into the specifics of the case. All we really have right now is the complaint she signed...\"\n\n\"She's in California still, doing the talk show circuit and trying to trash my good name,\" he said.\n\n\"I just wanted to come in and hand over my records so the investigation can proceed and all of our dealings with one another can be pleasant or at least as straight forward as possible,\" he continued.\n\n\"I'd like to return home sometime within the next day or so, would it be possible for you and Mr. Maitland to arrange for them to swab my cheek and get my sample sent out to the lab?\" he asked.\n\n\"I'll see what I can do,\" she said. As he started to leave, she stopped him. \"I can see that this is pretty hard on you, Mr. Alexander...\"\n\n\"Please, call me Blake,\" he said. \n\n\"Blake, why didn't you just pay her or arrange something when she first told you? You wouldn't have had to go through all of this.\"\n\n\"Miss Martinez, I was never given the chance to do that. I found out about the child the same way you did. I read about it in the paper. I was never once contacted or told about it before then. I gave Mr. Maitland all of my phone records to prove that. In fact, I never actually met Billie Jean before my awards dinner. All of the things she's saying on TV and in the print media about how she tried to contact me for months are simply not true.\"\n\nAs he walked away, Helena was surprised. In the five years that she'd been doing her job, she'd heard hundreds of ridiculous and farfetched things. She'd gotten to the point where she'd thought that she was a fairly good judge of character. She really believed this one. She dialed her Aunt's phone to get Maitland's number.\n\n# # # # #\n\nBy the time we got back on the plane the next day Helena Martinez and Bill Maitland had arranged and received my sample. Both were beyond courteous in our dealings. \n\nBoth were also trying to arrange to speak with Billie Jean. Helena was trying to find out as much as she could about the whereabouts and disposition of my supposed son. After all, if I was going to have to pay for support for him, I'd be entitled to see him and have a say in his life and living arrangements. Both Maitland and Martinez expressed their concerns about certain aspects of the way that Billie Jean was handling things.\n\nI had given Sarah the assignment of finding out as much as she could about the child and his whereabouts. As good as the Florida Attorney's office was and I was sure they had their own investigators, Sarah was simply, better.\n\nNone of that mattered, within hours we were back in California and my life had gotten worse. Before the plane landed, there were already reporters waiting for me.\n\n\"Have you seen the latest headlines?\" I was asked.\n\n\"Did you fly to Florida for a secret tryst with your lover?\" another asked.\n\n\"Who was the mystery woman you met with in Florida?\" someone asked.\n\n\"What about your divorce?\" someone asked. That caught me by surprise, and outraged me. I instantly put two and two together and came up with three. I assumed that they thought that I wanted to divorce Mary Beth for Billie Jean.\n\n\"That won't ever happen,\" I said, breaking the rule of common sense and engaging in an impromptu talk with a person who would only take my words and twist them into the most salacious form possible in order to sell a few papers.\n\n\"I love Mary Beth far too much to ever leave her for anyone,\" I said firmly. There was a round of laughter after that. I got into my Shelby and headed for the office. Once I got there I noticed that the usual rounds of good natured joking that usually accompanied my return from a trip were absent. The majority of the associates and my co-workers wouldn't meet my eyes.\n\nMyra hustled me into the office and closed the door behind us. She handed me a stack of newspapers. The headline on the first one was hilarious. \"Alexander the Great vs. the Angel of Death.\" The accompanying article told about how my crime was so bad that I'd probably be the first person to get the electric chair for fathering a child.\n\nThe next paper was nearly as bad and as untrue, \"Alexander sneaks off to Florida to make secret deal behind Billie Jean's back.\"\n\nAnother paper didn't even try to get any facts. They just made something up, \"Alexander goes to Florida for yet another woman.\" There was a picture of myself and Helena. I wondered how she'd take the publicity. I hoped that she wouldn't think that I'd caused it.\n\nThe one that hurt me the most was a local paper. The headline printed in it struck a dagger in my heart. \"Mary Beth files for divorce against cheating spouse.\" It wasn't me divorcing her over Billie Jean; Mary Beth had simply come to the end of her rope. According to the article she was seeking a divorce from me citing irreconcilable differences. In the article she said that things between us had been bad for a long time. Billie Jean wasn't the cause of the divorce, just the final insult. I was hurt beyond belief. We had in fact been very happy until Billie Jean stuck her nose into our life. At least I'd thought we were. I wondered why MB had said that.\n\nI collapsed into my chair. I really wanted to start crying right then and there. I grabbed my cell phone and called MB. I hoped more than anything that the article in the paper wasn't true.\n\nMyra handed me a stack of phone messages. One stuck out more than anything else, a message from my old college rival. He'd struck out on his own and started his own advertising firm. For a small potatoes outfit they weren't bad. Of course he wasn't in our league but he was good. He probably just wanted to take this chance to strike while I was down and twist the knife a bit. \n\nIt was funny. We'd always been rivals, but friendly ones. I'd even sent a few clients that couldn't afford us his way over the past few years. I guess that Cyndi Lauper had it right. Money changes everything. I declined to return any of the calls.\n\nThe phone on my desk started ringing then. It hadn't gone through Myra's line; it had come straight to my direct line.\n\nThe partners wanted to see me. What else could go wrong?\n\nAs I walked through the offices most of the associates ignored me. A few, maybe three or four out of the tenth of so advertising reps waved at me or gave me the thumbs up sign. Three guys and one woman. I made note of who they were. In a few months when this was all over and I was back on top, I'd remember them. I was sure that I was going to have to explain my usage of the company jet for my trip to Florida. Or the fact that I hadn't given them any further information on the status of the French hotel deal. As soon as I spoke to the partners, I'd have to call Gascon and arrange something to make it look like the deal was proceeding as expected.\n\nI stepped into the office that I'd been in thousands of times over the past few years. The climate was different. It was like being in Africa among a herd of Zebras. There's a certain kind of tension in the air that lets the Zebras know when a predator is about to strike and all of the Zebras take off. It felt like that in the office. Generally when I address these old men it's been from a position of strength. There have been times when certain partners didn't agree with or simply did not like something I'd planned, but I was usually able to garner enough support based on my track record or the amount of money I'd made for the firm.\n\nThis time there were no friendly faces in the meeting. Arthur Harris was absolutely gloating. I knew before he'd even begun to speak, that I wasn't Alexander the great today. I wasn't even Alexander the not so good. I was Napoleon at Waterloo. To put it simply, I was fucked. The decision had already been made. \n\n\"Blake,\" began Harris, in a tone that was dripping with fake concern, which only served to cover the sarcasm and the genuine malice he really intended. \"You've made a lot of money for the firm, over the years. But all of this publicity is causing us to lose clients. So we'd like you to take a leave of absence until this whole thing blows over.\"\n\n\"Of course we'll keep you on the books as a consultant so you'll still draw fifty percent of your current salary. Two million dollars a year should keep you in Mustangs,\" he smiled. \"And you can devote most of your time to taking care of this. These headlines simply aren't good for business and this will enable the firm to distance itself from you and all of the negativity.\"\n\nOf course the papers would only say that I had left the firm indefinitely, which the average person would interpret as meaning I'd been fired. They'd assume that the firm was trying to put it nicely to make sure that there was no wrongful termination suit. Since this wasn't about my work or the quality of my work, I'd have a darn good chance of winning a suit, like that. The two million was a payoff to prevent the suit as well.\n\n\"Of course as soon...\"he began.\n\n\"Arthur, shut the fuck up,\" I said. \"I've begun to see that things aren't the way I've always thought they were. You spend your life working your ass off to improve things and provide for people you think will be loyal to you. But at the first sign of trouble, they abandon you.\"\n\nI looked around the table and surprisingly none of the old men would meet my eyes. \"Out of all of you sanctimonious old bitches, I actually have the most respect for you, Arthur. You and I have never seen eye to eye on most things. At least you have a reason for wanting to see me gone. The rest of you are just...Pfah. I don't have words for you. To save you the trouble of going through all of this bullshit, I quit.\"\n\nAnd I walked out of the room.\n\nI walked straight out of the building, got into my car and drove away. \n\nWhen I got home, feeling worse than I'd ever felt in my life, I just wanted to forget about the entire day. More than anything I just wanted to sit down and talk this whole thing out with my wife. I was sure that if I could just explain to her what was going on or what I thought was going on she'd at least give me a chance to fix it somehow. \n\nThat was when I found her note on the kitchen table. She'd gone away with her sister for a few days. We could talk about the best way to handle the divorce when she got back. She didn't even tell me when she would be back.\n\nLess than a month ago I'd been Blake Alexander, and I had the world on a string. I had a great job, a great life and I was married to the woman of my dreams. Now I was unemployed, my life was in the toilet, my wife had abandoned me. The string seemed to have wrapped itself around my throat and was choking the shit out of me.",
        "That night I sat alone in my house getting drunk as hell. I was wallowing in self pity. I'd lost it all, my cushy job, having everybody like me and even my wife. That was the toughest pill of all to swallow. I'd done everything for that woman. I'd even put up with all of her weird ass relatives and all the skeletons in their fucking closet. The first time things don't look good, she bails on me.\n\nThat was really it. Mary Beth had always been about appearances. In public she was the perfect arm candy wife. In private, she was an absolute whore. God I loved her. God I missed her. God I couldn't stand that bitch for doing this to me. What had she done to me...I'd forgotten. I must have really been drunk if I couldn't remember what she'd done to me. Well anyway, it didn't matter, I had the power of liquor and I didn't need her anymore. I was thinking clearly for the first time since the last time I was this drunk. Then the phone rang. I answered it.\n\n\"Who does this be being?\" I asked. Surprisingly he didn't understand me.\n\n\"Uhm, Blake, is that you?\" he asked. Of course with my absolute clarity of mind brought about by my new mental powers, I totally understood everything.\n\n\"Are you drunk?\" he asked. \"That doesn't seem like the Alexander I know.\"\n\n\"Caesar, is that you?\" I slurred. \"Seize the fucking day Caesar. It is day isn't it? I don't know about the fucking part. Except that Billie Jean pretty well fucked up all of the fucking. She chased Mary Beth off. Anyway you can have it all now.\"\n\n\"You're drunk aren't you?\" he asked.\n\n\"Yes, I am.\" I said. \"And you should be too.\"\n\n\"That bitch really did a number on you didn't she?\" he asked. \"We all warned you,\" he said.\n\n\"I know,\" I laughed. \"People always told me, be careful what you do don't go around...making dumb girls fart. Someone also told me, be careful who you love. Be careful where you toot, or your thighs will fill with poot, hey, hey.\"\n\n\"Damn Caesar, that was good. I should write a song,\" I said laughing.\n\n\"Uhm, Blake, I wanted to talk to you,\" he said. \"So I'll call you in the morning.\" Then he hung up.\n\nSeveral hours and a lot of drinks later, my phone rang. \n\n\"What?\" I said.\n\n\"Blake, are you drunk?\" asked a voice. Then I heard laughter. \"Your life is all fucked up now isn't it? I told you what would happen. You've lost everything, even my stupid sister. I warned you. But it's not over. Wait until you see what happens tonight.\" Then she hung up and I passed out.\n\nThe next day I woke up. I know that sounds crazy, but I was lucky to wake up at all. I could have died from alcohol poisoning from the amount of liquor I'd put away. The phone rang and it sounded as if it was the loudest thing in the world. I quickly turned it off.\n\nMy head was fuzzy, so fuzzy that I could barely think. I did remember that Mary Beth had left me. I threw up all over the tile of my kitchen floor. Why had I been sleeping on the floor in the kitchen?\n\nThe sound of my cleaning lady coming into the kitchen also focused me. She came in and smiled at me. Then she either saw or smelled the vomit and made a very ugly face.\n\n\"It's okay Mr. Alexander, I'll clean it up,\" she said. I got up and went upstairs to take a shower. I noticed that most of Mary Beth's clothes and jewelry were still there. Her clothes were everything to her. She was planning on coming back. I'd have to tell Burns to find out who she'd hired as an attorney and arrange for Mary Beth's things to be taken somewhere.\n\nIf she wanted out of the marriage, that was fine with me. I didn't blame her. I guess I was more hurt than anything else. It just goes to show you how little we know the people we love. I'd always thought that MB and I were forever. But the first spot of trouble and she goes running. I guess it didn't do her image any good to see in the papers that her husband had gotten some girl pregnant, even if it wasn't true.\n\nI'd always thought that MB would stick with me through thick and thin. I guess it's good I found out now, that it wasn't the case. I got to my feet and slowly made my way up the stairs. I hadn't been this drunk since college. What did I do back then?\n\nI took a long cold shower which focused my brain a little bit. Then I threw on some running shorts. I stopped off in my kitchen after that and drank a half a glass of orange juice and a handful of tiny twisted pretzels with cheese on them. I ate a couple of slices of my favorite Canadian Maple turkey and threw on my running shoes. It had been a while since I went out for a run. There usually just wasn't time for it while I was working so much.\n\nThe first few steps were the worst. My lungs burned and my head ached. After that I got into an easy rhythm and it was as if I'd never stopped running. Sure my pace wasn't as fast as I used to run, but this was about thinking and getting clear, not speed or distance. \n\nAs I ran I took stock of my life. The main thing that most people worry about is survival. In real world terms, that meant having a place to live and food to eat. Those are the true necessities. For a man once those have been solved, the next things are a reason to be and someone or something to share it with. \n\nSuddenly I started smiling. I had enough money that I never had to work again unless I just wanted to. Food and shelter were a given. My house was in my name and paid for. Even in a divorce it would be difficult for Mary Beth to get the house. I could start moving money around instantly to cover myself in the divorce. Getting another job wouldn't be difficult once the Billie Jean thing died down. There'd be lots of companies that would be willing to give me a chance as soon as I cleared this shit up.\n\nAnd as for Mary Beth, if I couldn't count on her when the going got rough, as bad as I felt right now, did I really need her? I was sure that when all of this was over she'd come crawling back to me. But I wasn't so sure I wanted her back.\n\nWhen I got back from the run, my maid's car was gone. Mary Beth's car was in the driveway though. I quickly opened up the door. I was sure she'd be bent over the couch waiting for me. That was the way we always made up. Make up sex was the best. \n\nI stealthily opened the door and my heart almost popped out of my chest. Mary Beth was naked as a jaybird and bent over my three thousand dollar sofa alright. Only some guy I'd never seen before was pumping his dick in and out of her like there was no tomorrow. I watched for a few seconds before anyone was aware that I was there.\n\nThe weirdest thing about the scene was that the guy was doing his best to fuck the shit out of her, but MB was just lying there taking it. It just didn't seem like her at all. Then I noticed Tina sitting in a chair just watching them, as calmly as if she was watching it on TV.\n\nI stepped into the room and grabbed the guy with both of my hands around his throat. I yanked him backwards out of my wife. Unlike what you read on the internet there was no popping sound as his dick came free. There was only the barest possible shattering sound as my already broken heart disintegrated even further.\n\nThe guy was slightly bigger than me but it didn't make a difference. He was already off balance from being pulled backwards out of MB. I slammed him down onto the hardwood floor and pistoned my fist into him several times. I hit him in the face and the stomach. Then I dragged him out the door and left him naked from the waist down in my driveway.\n\nI turned to face Mary Beth and her sister. \"Get the fuck out of my house,\" I said calmly. Tina sat there smiling. Mary Beth was shocked. The expression on her face let me know that this wasn't what she'd expected.\n\n\"Blake this isn't your house, it's ours,\" she said. \"I live here too.\"\n\n\"Show me your name anywhere on the fucking mortgage, or anything else,\" I snapped.\n\n\"You filed for a fucking divorce. When we get to court, if a judge rules it, you might get the house. That is if I don't have my lawyers keep us out of court for 5 or 6 years, in the meantime I'll be living here without you. That is also only if I don't burn this fucking place to the ground before you move back in. More than likely in a divorce we'd have a fifty/fifty split of the assets and I'd make sure you didn't have enough money to buy me out of the place. Now go.\"\n\n\"Blake I don't really want a divorce. Tina said that if I filed, the reporters would find out about it and then leave me alone. I just felt so bad about you lying to me about this whole thing. Tina said that the only way for us to get even would be if I did something too. So we went out and I did some really bad things. And I'm sorry Blake, but it still didn't feel right,\" she said. \"After I wrote you that note I knew it was wrong. I didn't really want to be away from from you. I love you too much for that. But Tina was right, I had to do something to let you know the pain that I was feeling. So I figured that letting that guy fuck me would hurt you, like you and Billie Jean hurt me. It didn't mean anything and he wasn't even any good. It was...\"\n\n\"Mary Beth get the fuck out of my house and take your piece of shit sister with you,\" I snapped.\n\n\"Blake if I leave, I'm not coming back,\" she said. \"Everyone knows how you've humiliated me in public with this whole fucking Billie Jean thing. If you'd just admitted it from the beginning and gave the little bitch some money it would be all over by now. But day after fucking day, I'm humiliated over and over again because of you. You should be kissing my ass to get me back.\"\n\nI just started laughing. \"Thanks MB,\" I said. \"Last night I got so drunk I couldn't see. Not because I lost my fucking job or anything like that but because I was so upset about losing you. Now I see that I haven't lost shit. And don't worry about coming back. I'm sure our security system has footage of what you were doing with your boy toy. I'll use that when I counter-file for the divorce. We had a great marriage or so I thought. But once again I was wrong. I thought you were the person I wanted to see eternity with. I'm glad I found out that I was wrong so early in life and don't have to waste anymore of my time on you. Boy are you going to feel stupid when this is over, now go.\"\n\nI went back upstairs for another shower. But this time I felt good about it. I realized then that I'd truly hit bottom so there was no way for things to get any worse. I was down as far as I could possibly go. The only way left for me to go was up. I even smiled at Tina as I flashed my middle finger at her on my way up the stairs. \n\nWhen I came back down the stairs after taking another longer, slower shower and changing into more comfortable clothing, I was ready for a more reasonable talk with Mary Beth. I'd listen to whatever she had to say but Tina had to go. Luckily as I looked around the house I discovered that both of them had already left.\n\nMy head was clearer and surprisingly I felt good. I know that it seems like I was in denial or shock. Some would think that I was running on adrenalin after all of the shocks I'd recently suffered. And maybe that was a part of it. I remember once when I'd been marketing a book by a famous psychologist that he'd written about divorces and infidelity. He seemed to think that if you could quickly just walk away from your spouse, then you had never really loved them in the first place. For years I'd believed him. But right then I wanted to sit down and talk with him about updating his theory.\n\nI had loved Mary Beth for as long as I'd known her. But her actions had destroyed it. \n\nWalking in and catching her drunk and fucking some guy was just the tip of the ice berg. Her lack of faith in me had been the real deal breaker. As I thought about it, her not believing me wasn't even the worst of it. I remembered back a little over three weeks ago when this all started. She'd offered me a get out of jail card, if I confessed. That told me something even worse about all of this. She'd been willing to forgive and forget, me cheating on her. What she couldn't get past was simply her reputation being damaged by the negative publicity. \n\nSo the woman I loved above all else, was vain above all else. Maybe she was right about all of this, we did have irreconcilable differences. Had the shoe been on the other foot, I'd have reacted totally different. I wouldn't have cared a whit, if every newspaper in the world thought she was a whore. I'd have proudly gone everywhere with her on my arm. But if she had actually cheated on me, that would have killed me. So what did she do? She went out and cheated on me. Game over we were done.\n\nI was just trying to figure out how to explain all of that to her, when I realized that it might be best to give it a day or two before trying to contact her. We'd both probably said things that could have been said better. I was sure that the two of us were done, but I really wanted an amicable divorce.\n\nNow I had to figure out what to do with myself. I decided to do one of my very favorite thinking activities. I went out to the garage and got out all of my car cleaning and detailing products. Back when I had a job I couldn't afford the time necessary to wash my car myself. I liked doing it but it just took too long to do it right.\n\nSince I was a bum, I had all of the time in the world. It was early afternoon and I rinsed the car down to loosen all of the accumulated surface dirt. That was all it took to jog my memory. As I looked at the car it started me to thinking about the other Mustang. Myra had arranged for me to buy that car if I wanted it and I did. That got me to thinking about Myra. I pulled out my cell phone and called her.\n\n\"It's about time you called me,\" she snapped. \"I can't take any more of this.\"\n\n\"Can't take any more of what?\" I asked.\n\n\"Being out of work and sitting at home,\" she said. \"My husband is at work and my kids are driving me crazy.\"\n\n\"Myra, you aren't out of work. There are probably 5 or 6 of the associates alone who'd want you. And if you didn't want to work for them there's always the pool,\" I said. \"I'm the one who's out of work,\" I said. \"Not you.\"\n\n\"There were more than ten who wanted me,\" she said. \"But you kind of get used to working for the best. It took me too long to train you to how I like my boss to work.\"\n\n\"Ha, ha,\" I said. \"When I first picked you, you couldn't even sharpen a pencil.\" We spent a few minutes laughing and reminiscing about things we'd done over the past few years.\n\n\"Blake, seriously,\" she said. \"What did you think about Anthony's offer?\"\n\n\"What offer?\" I asked. As I said it I remembered talking to him the previous evening, but I couldn't remember a word of the conversation. \"Oh, shit,\" I said. \"He called me while I was drunk and depressed. I probably made a fool of myself. Well I guess that's off the table whatever it was.\"\n\n\"He wanted you to come to work for him,\" she said.\n\n\"Myra I love you, but you're deranged. I made more money last year in salary than his agency brought in. He can't afford me,\" I said. \"But you know what,\" I said, thinking about it. \"Maybe I should start my own agency. Myra, you're on vacation for the next couple of days, until I get some things straightened out. Be ready to go back to work. We'll negotiate your new salary and responsibilities as soon as we get a chance.\"\n\nWhy not? Why couldn't I start my own agency? Just as I was starting to consider how I'd go about it, my phone rang. \n\n\"Mr. Alexander, I have some information for you,\" said Sarah. \"I've found out where she lives, but still no sign of where the baby is. She has a boyfriend. A guy named believe it or not Carmen San Diego. I have no known address for him either. I believe she has someone looking after the child while she's been in Cali. Mr. Maitland has been trying to find out things about her too, may I share our information with him as well?\"\n\n\"Yes Sarah, please do that. And share it with Miss Martinez as well, \"I said \"Although in her case you might not want to mention that I asked you to. I'd imagine she'd pretty pissed at me for the articles in the paper.\"\n\nAfter the call from Sarah, I started imagining what the logo for my new agency would look like. I saw two crossed A's. Alexander Advertising. I was just rotating the image in my mind when the phone rang again.\n\n\"Damn it, Blake, I can't keep up with you,\" said Burns. \"As soon as we get off the fucking plane, I'm bombarded with questions about your divorce and who's getting what. Then this morning, before I can even call you to ask you how you'd like to proceed Mary Beth calls me, crying. Not her lawyer, Mary Beth herself. In all of the years I've known the two of you I've never heard her cry. The woman is usually as composed as a beauty queen. But she was bawling her fucking eyes out. I told her that I shouldn't be speaking to her that it's unethical. She should have her lawyer call me. She told me that she wants to stop the divorce proceedings immediately and that she'd made a terrible mistake. How am I supposed to tell the fucking reporters that there isn't going to be a divorce? Should I just tell them that the whole thing was from someone being misquoted?\"\n\n\"Monty, who do you work for?\" I asked. \n\n\"You Blake,\" he said. \n\n\"Have I asked you to stop the divorce?\" I asked.\n\n\"Well, uhm, no,\" he said. \"But I...\"\n\n\"No buts, Monty, get back to work,\" I said and hung up.\n\nJust as I was about to dip my microfiber towel in my bucket of Turtle wax car wash solution, a car pulled up in my driveway.\n\nCaesar Anthony got out of it.\n\n\"You look better than you sounded on the phone last night,\" he said.\n\n\"I still feel like shit, Seize, but I'm going to take it one day at a time,\" I said.\n\n\"Same old Blake,\" he said.\n\n\"Nope,\" I said. \"This is a totally new, far more driven Blake, standing in front of you. I'm like a guy in a bar fight. While I've been sitting here drinking on my stool, not bothering a soul, some asshole comes up and sucker punched me. That's really what Billie Jean did, she sucker punched me. I didn't know what was going on and my whole world just went to shit. There was nothing I could do about it but absorb the punches and let everyone get their shots in. Lately the punches have kept coming but I've suddenly got my guard up. I've taken some steps both here and in Florida to get that guard up and I'm defending myself against those punches now.\" I took up a boxing stance and held my hands up in front of me so he could see them.\n\n\"So Seize, if you've come here to gloat or to take your shot at kicking me while I'm down, get on with it but remember, I won't be down forever. Long before anyone expects it, I'll be on my way back up. And this time I'll aim even higher.\"\n\n\"You know,\" he said. \"Last night I understood it. You were upset about the whole Billie Jean thing. Then on top of that, your wife files for a divorce while you're out of town. But maybe you should take a look at yourself too, Blake. All through college you and I competed with each other. Sometimes it was tooth and nail. But it was always in my mind, a friendly competition, based on mutual respect.\"\n\nHe paused and looked at me. \"We competed because we both wanted to be the best, but we never cheated. And we never kicked each other when we were down. Something else I remember about you Blake. You always had class. Remember when you broke up with that cheerleader...Sue Anne something or other? I started dating her about a week after you two broke up. I never knew it but she was just trying to use me to get back with you. When you ran into us, you didn't whine or act like a little bitch or try to get macho. You came over shook my hand and wished us well.\"\n\nI smiled remembering what he was talking about.\n\n\"Then in our sophomore year, Mandy Grayson dumped me,\" he said. \"That bitch put me through hell. I knew she was trying to go after you, but you didn't give her the time of day. I'd been trying to get myself ready so I could handle the situation in as classy a way as you had, but I didn't think I could, I was still too hurt. I still remember you coming over to me and telling me, that the true measure of a man isn't the respect he gets from his friends, but the respect he gets from his opponents. And you respected me too much to go after Mandy when A she wasn't worthy of me anyway and B there were plenty of other women around.\""
    ],
    "authorname": "StangStar06",
    "tags": [
        "cheating",
        "mustangs",
        "romance"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/billie-jean"
}