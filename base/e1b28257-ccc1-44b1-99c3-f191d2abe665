{
    "title": "Roleplay Online",
    "pages": [
        "Two things in advance for the better understanding of this \"guide\":\n\nIC = In Character, the content of the message following this \"opening\" is part of the ongoing story, all statements are made by the fictional character and NOT by the player.\n\nOOC = Out Of Character , the part of the message following this intro has nothing to do with the on going story but is a remark or comment of the player and NOT his fictional role. This usually opens a comment of being away for a while, coming back, asking for e-mail, giving hints and tips ... just about all that is NOT part of the plot.\n\n<center>Role Playing no manual but experiences and hints from a dedicated player.</center>\n\n\u201cHello, I am a role play addict\u201d \u2013 that could be my introduction to the role players anonymous...\n\nI have been participating in all sorts of role-plays, different people, different settings and different contents (and ratings) ... and I always found not all of them were equally intriguing. And I started to wonder why... here some of my personal realizations. \n\nIn short (and no particular order): \n\n\u00b7Characters: To participate in any action, you need to be there for more than one post. To be there you have to create your personal character. \n\n\u00b7Taking influence: When playing remember that all participants have equal rights (unless agreed upon differently) in influencing the development of the story. It is absolutely BAD style to play others\u2019 characters!\n\n\u00b7Interaction and plot line development: Give the other party involved a chance for choice!\n\n\u00b7Entering into a thread Introduce your character.\n\n\u00b7Ending a post in an active thread: Give your fellow players something to work on, invite their reaction.\n\n\u00b7Leaving a thread for an extended period or for good Write your character out of the action.\n\n\u00b7Anything else?  Role-playing is for fun! And a little humor in the posts as well as in the general approach never hurts!\n\n<hr>\n\nThe long version:\n\n<center>The \u201crole play\u201d is called \u201crole play\u201d because the player plays a role!</center>\n\nUhmmm \u2013 yeah, well, go figure!\n\nIt sounds like a completely strange thing to say but ... this holds the essentials of good role-playing. I do take on a role, I am thinking, performing, doing, and saying things along the story according to the adopted personality I chose for this role. This means I am not just continuing to write a story from a third person point of view, but I become part of the story, I am being one of the participants in the action. \n\nPicture yourself being an actor in a stand-up show. You only can act for yourself, you do not know what the others will do, what their responses would be to your actions. This is exactly what role-playing is \u2013 become a fantasy person in a fantasy setting, ready to interact with the fellow participants via the written word.\n\n<center>Basic thoughts and RP-Etiquette:</center>\n\nCharacters: To participate in any action, you need to be there for more than one post. To be there you have to create your personal character. \n\nNow we all know about our real life insufficiencies, but please, do not go now and create a fantasy character that is PERFECT! You will soon enough find out that people do not want to play with a too perfect character, since they always will be stuck in an inferior role. And just as much as you want to be a hero in your fantasy world, everybody else does. \n\nLittle example from a Sword & Magic \u2013 RP: A new player created a sorcerer character, and gave it unbeatable powers. All threads involving him would end shortly with some post saying that his powers were unbeatable and thus he defeated whoever was his opponent. It did not take long and nobody replied to his posts anymore \u2013 it was no fun because nobody likes to know from the beginning that they can only be the losers...\n\nFor practical purpose that means: design your character at least slightly realistic. Of course it can be different from who and what you are IRL, but according to the environment the story is set in, give it a few likeable insufficiencies, even if it is only that your character is being ticklish or allergic to broccoli.\n\nTaking influence: When playing remember that all participants have equal rights (unless agreed upon differently) in influencing the development of the story. \n\nThis means that just because you want the plot to go in a distinct direction does not necessarily mean it will happen. It is up to you to now with intelligence and creativity \u2013 just as you would in real life \u2013 to influence the scene accordingly.\n\nIt is absolutely BAD style to play others\u2019 characters!\n\nWhat I mean is to take decisions and act for others. I am not talking about little reactions you just need to assume to get on with your story, and some patterns of behavior can be taken for given by the development of a character and a story, but I seriously would warn to take too many liberties with your fellow players. \n\nI more than once was rather pissed off to return to a thread and see that someone had made my character act in a way that was strictly against the whole personality I had set up, e.g. I was playing a mighty bad girl and held the leader of the good guys captive in my castle (we had worked out some really nice plot line of how he could free himself without me going against my bad wicked nature). the next thing I read is that another player had \u201c...sneaked into the castle (which was protected by numerous magic spells, reason for why I had been able to take a captive at all) past the guards. (Needless to mention my guards at that time were a monster army) I then took the captain of the guards captive, forced him to lead me to the witch\u2019s quarters. Quivering with fear from this unknown stranger she threw herself at my feet and sobbing begged for mercy. I then went to release the Commander. The witch surrenders herself, her castle and her army.\u201d\n\nUhhmmm \u2013 I guess it is easy to picture I was \u201cnot amused\u201d about this! \n\nWhat I am trying to say: act for yourself only \u2013 speak for yourself only! At least as major things are concerned. There is nothing wrong with letting someone nod in agreement or say a few words as long as they don\u2019t influence the decisions, actions and character of the other party.\n\nInteraction and plot line development:  Give the other party involved a chance for choice!\n\nOf course we all want people to react the way we would like them to, to get on with our own plans. But as much as you have to accept that people sometimes make choices or show reactions that you do not like or did not anticipate in real life, you have to live with it when role playing.\n\nYou can drop as many hints as you want, letting your fellow players know what the direction is you have in mind for the game, but it is advisable to give the other party you are interacting with a choice....\n\nE.g. \u201cI was looking at her \u2013 scanning her face for any even tiny sign that would betray her thoughts. But as much as I was hoping she would accept my offer (hint hint ... so my partner will know what I would WANT to be the next step) all I could do now was wait for her to declare her will and intentions.\u201d\n\nHad I wanted my fellow player do NOT accept my offer it could have been something like: \u201cI was looking at her \u2013 scanning her face for any even tiny sign that would betray her thoughts. But although I was convinced she would never accept my offer, all I could do now was wait for her to declare her will and intentions.\u201d\n\nEntering into a thread Introduce your character.\n\nPicture yourself in a pitch-dark room \u2013 you know there are other people there and you are supposed to solve some task together in there. What would you want the others to tell you about them? What do they need to know about you to judge your abilities, motivations and possible contribution to the task you have to solve?\n\nThis is about what I would say you should supply as far as character information goes in a first RP post when joining a thread.\n\nEnding a post in an active thread:  Give your fellow players something to work on, invite their reaction.\n\nA good ending of a post (as far as I am concerned) is one that asks for re-action by another person/persons. This makes it so much easier for the follow-up writer to find a start for his/her next post.\n\nE.g. \u201c... It was time to leave. I had sent him a note saying I would be waiting for him in the stables at midnight \u2013 and as I crossed the courtyard in the shadows, looking around for any possible pursuers, I heard the church bells chime. With held breath I silently opened the stable doors \u2013 anxious to see if he had come to flee with me as he had promised.\u201d It should become obvious that I expect someone to meet me at the stables, so this calls for some response action.\n\nI would find it more difficult to reply to a post ending like e.g. \u201c... It was time to leave and as I crossed the courtyard in the shadows I heard the church bells chime midnight. I entered the stables.\u201d So what do I expect to happen? Of course the general story will provide some possible actions, but as I said, it is much easier for the next person if there is something to \u201cwork on\u201d.\n\nOr \u201c She entered the bar and approached the table in the far corner, wondering what the night would hold in store for her. After she had been served her drink, she pulled out her cigarettes and instead of lighting it on second thought she let her lighter discretely slide back into her purse, turning to the table next to her asking in her most seductive voice:\u201d Excuse me...\u201d \u201c\n\nAs opposed to: \u201c She entered the bar and approached the table in the far corner, wondering what the night would hold in store for her. After she had been served her drink, she pulled out her cigarettes and lit one, waiting for anything to happen\u201d\n\nAs things are \u2013 in real life and when role playing \u2013 she might have to wait for a while if not taking the first step herself. And don\u2019t be afraid of rejection *s* - although it might happen it rarely does when RP-ing, and if it does, well \u2013 it has nothing to do with you personally!\n\nLeaving a thread for an extended period or for good Write your character out of the action.\n\nLive is a bitch and even for addicts like me sometimes my on-line time due to outside influences becomes suddenly limited to an extend that makes it impossible to maintain any regular RP-ing. In that case it is good style to let your character leave, take a business trip, go on a crusade, and if really desperate let him/her die. \n\nIt is annoying to all of a sudden find yourself stuck in the middle of an RP with a central character \u201csleeping\u201d. If it is an essential character that can\u2019t be gotten rid of easily, please be polite enough to mail one of your fellow players or OOC-post and ask him/her to take over your role or manipulate as needed till it is possible to write you out of the story.\n\nAnything else?  Well \u2013 yes. there is. \n\nRole-playing lives from the contribution of many people \u2013 and I found it annoying when everybody started a new thread instead of responding/participating in the ones that were already there. What I mean to say is that no ongoing action will develop with a new thread popping up every other day.\n\nRole-playing lives from the scenes created in the players\u2019 minds. If you start a new thread describe the setting a little, so people know where they are, what they can expect before joining. Freedom and liberty are great \u2013 but you need some frame set to avoid chaos.\n\nRole-playing lives from the colors and depths each player gives his/her character. Little mentioning of looks, feelings, and thoughts makes it much easier to \u201cunderstand\u201d a role and handle it accordingly. Even more than in real live, your fellow players only know as much about your character as you tell them \u2013 how could they treat you right if they do not know who you are and what you want?\n\nRole-playing lives from the will to accept the others and not be annoyed each time things don\u2019t go the way we want.\n\nRole playing lives from accepting each other in the roles we are playing which may not have to do anything with our real personality. \n\nRole-playing lives from the goodwill of all parties involved. It means to accept little flaws in the posts of your fellow players as much as a certain degree of effort for your own posts (consistency with the story line and a minimum amount of grammar and spelling). This means too that the rules for the according RP community are law!\n\nRole-playing lives from the creativity and the readiness to accept the challenge. I like to compare it to \u201ccreative chess\u201d \u2013 you always find yourself on a new board, with new figures \u2013 and no matter how much you think in advance about your next move \u2013 it might be thrown over board with the move of one of the co-players.\n\nRole-playing is for fun! And a little humor in the posts as well as in the general approach never hurts! \n\nI am curious to see what I have forgotten or where others have a different opinion. Please feel free to share so maybe we can work out the \"ultimate RP manual\" in the end!\n\nThanks, \nHecate"
    ],
    "authorname": "Hecate",
    "tags": [
        "bells chime",
        "give party",
        "church bells",
        "night hold",
        "extended period",
        "makes easier",
        "equal rights",
        "entered bar",
        "accept offer",
        "role playing"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/roleplay-online"
}