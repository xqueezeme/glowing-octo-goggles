{
    "title": "Breast Man Chronicles Ch. 02",
    "pages": [
        "If you don't like condom use, you may not like this story. Generally, I don't either, but it fits the context of the tale. \n\nAs always, comments and votes are appreciated.\n\nTC 5 \n\n*\n\nAs a salesman, I often give my customers a little gift as thanks for their business, loyalty, etc., and quite often I send some form of floral bouquet. For years now, I've used the shop in the building next to my apartment, a little shop that simply says, \"Florie The Florist\". In fact, it's essentially a one person operation, and that person is Florie. Because I am a frequent customer, Florie tries to give me a break on my purchases, and I often go in just before closing time, taking things she has left over and wants to clear out. It works out great for both of us, and over the years we've become quite friendly. Florie is a 30 something strawberry blonde, although her hair is always on top of her head in a tight bun. I've suspected she would be good looking if she ever wore anything besides a sweat shirt and baggy jeans and did something with her hair.\n\nOne Friday evening I was in a hurry because it was past her closing time, and I was relieved to find the door still unlocked when I got the shop. When I walked in the place was deserted, as usual for that hour, but I found Florie sitting on the floor, surrounded by a circle of wholesale flower boxes and piles of flowers. She didn't appear to notice I was even there, and had a very unhappy look on her face. She was muttering, swearing under her breath. \n\nI walked over near her to see what on earth she was doing, and she finally glanced up, saying \"Sorry Dave, I've got a real mess here, give me a few minutes, ok?\" I said, \"Sure,\" and continued to watch, trying to figure out what she was doing. But she was wearing her usual three size too large sweat shirt with an oversized neck, and I suddenly realized that each time she leaned forward over the flowers the neck gaped, giving me a perfect view of her braless breasts! When I realized that Florie actually had breasts, and exceptional ones at that, I must have sucked in my breath, because she looked up at me again. And she saw what I was looking at. \n\nShe slapped her hand against her chest over the shirt. \"Dave! Oh my God you're looking down my shirt!\" the look on her face said she was about to cry.\n\n\"Yes I was, Florie,\" I said with a little smile, \"and enjoying it very much, you have beautiful breasts!\"\n\nHer look turned more to anger. \"Dammit! I'm having a terrible day, and now someone I thought was my friend is making fun of me. I really don't need this or appreciate it!\"\n\n\"Florie!\" I replied, trying to keep a smile and lightness in my voice, \"The last thing I would do is make fun of you! I always suspected that beneath the baggy clothes you are very good looking, and this is the first time in the years I've known you that I have been able to see for sure. You would be lovely if you allowed yourself to be! Now, what is this mess?\"\n\nNow the look changed to shock. \"I'm not lovely, I'm just Florie! I don't have time to be anything else! And the wholesaler sent me 12 boxes of flowers that are half rotten. I'm trying to see what I can salvage.\" She held up a flower stem and I could see a little brown on the edges of some of the blossoms. \n\nMy newly formed opinion of Florie didn't change, but I suddenly felt bad for her as I saw the problem. Being a very small business, she probably didn't have much clout with the big wholesalers. I thought for a moment, and realized I might be able to help. I was going to send out 15 bouquets to clients at the beginning of the week, but why not now?\n\n\"Florie, I'll make you a deal. If you can make up 15 bouquets from what's left here and get them sent out tomorrow I'll pay you enough that you can still make a profit from them.\" \n\nShe looked up unhappily again. \"I can make up the bouquets and send them out, but I doubt they will even pay for the flowers unless I charge you more than usual.\" \n\n\"Well I told you we would make a deal. The other half is, you have to go to dinner with me tonight.\"\n\nNow the shock was back. In spades. \"I don't go out. And the last thing I need is some fancy restaurant after wading through this all day. Nobody's hard up enough to want to go out with me!\"\n\n\"I told you, I think you could be lovely, and I'll bet, somewhere you have an outfit that will make you look that way. And it doesn't have to be anyplace fancy; I'll take you anywhere you like, as long as it's not fast food. Now let me help you pick up here and I'll give you an hour to get ready. Deal?\" I knew that she lived in an apartment in back of the shop, so that should be more than enough time.\n\nTo my amazement, she actually forgot about the shirt and let go, giving me another glimpse and confirming my earlier assessment. And I finally got a smile. \"If you're foolish enough to want to, I'll go. I can't afford to give up a deal like that. And I'm starving! But are you going to look at me like that all night?\"\n\nI laughed. She had finally realized my gaze had not shifted. But she was brave enough or interested enough to deal with it now. \"Absolutely! Why would I not want to look at someone so intriguing? And sexy!\"\n\n\"Oh my God!\" She said with total exasperation. \"I'm wearing an overcoat! And I'm not going to take it off!\" Since it was about 80 outside, I guessed she would not make good on that threat. And I noticed the hand had never gone back, and she was allowing me to look as much as I liked now. \n\nI gave her a hand up and we cleaned up the flowers, chucked the bad ones and refrigerated the good ones. She looked at me sort of questioningly and said, \"Changed your mind yet?\"\n\nI silently walked over to her, thinking it was odd she would be so reluctant, and took her hand. Softly, I said, \"No Florie, I was never more serious, and I'm very anxious to go out with you.\" And I leaned forward and gave her a very soft kiss on the cheek. I swear she blushed!\n\n\"All right,\" she said, \"I'll see what I can find to wear, and if I don't chicken out I'll see you in an hour. I'll turn the lights out, but just come in the front door and knock on my apartment. You know where it is.\"\n\nWith a big smile I said, \"I can't wait!\" and gave her another little kiss. But this time, I actually got a little smile in return. \n\nAn hour later I tentatively walked into the dark store and followed the crack of light to her door. When I knocked, I heard a little groan as she got up from somewhere, but it was still several seconds before the lock clicked and the door opened. When it did, she was still smoothing her skirt, and had that worried look on her face, but when she saw my broad smile she finally smiled back. \"Come on in a second,\" she said and stepped back into the light.\n\nBut I just stood there. And stared. I couldn't believe it was Florie! Her hair was down, all two glorious, strawberry blonde feet of it, now nice and shiny after obviously having been shampooed and conditioned. And although she had no other make-up, she had a pale shade of lipstick on that actually almost matched her hair! She had a black pleated skirt, just below her knees, which gave me a good look at her slim, toned legs. She was also wearing a rather sheer, short-sleeved white blouse with pleats down the front. \n\nThe only thing that marred the outfit was a gray vest, which seemed out of place and obviously eliminated any chance for the view I had been treated to earlier. At least, I didn't see any overcoat. Even though she was fairly short, perhaps 5' 5\", she was wearing relatively low-heeled shoes. I guessed she couldn't walk in high heels or just didn't have any. But my eyes kept coming back to her beautiful hair. I couldn't imagine why she kept it hidden. \n\nWhen I finally remembered to step in the door the smell of flowers washed over me, even though I had just walked through a flower store! There were flowers everywhere, some potted, most in vases, probably leftovers. Florie really did like flowers! \"Ok,\" I said, \"it's your choice, where are we going?\" \n\nI was surprised when she giggled, \"All right, you passed the test, you're not allergic to flowers, or you would be dying by now! I like beer! I don't drink it very often but I like it, and I'm going to need a little reinforcement if I'm going to spend some time with you. How about the tavern at 6th and Allen Street? I hear they have a good menu, although I've never been there.\"\n\nWow, this was starting out great! I was actually going to go out with, I now realized, really a beautiful woman, and from what I knew, her choice was excellent. And at least, it wasn't a tea house! I almost felt underdressed in my golf shirt and slacks. \n\n\"Florie, I'm mad at you!\" She was reaching for her little black purse, but she whirled around and looked at me, seemingly almost ready to cry. \"You are gorgeous! Why on earth have you been hiding yourself from me and everyone else all these years?\"\n\nThe scowl changed to a smile in mid-air, as she realized what I'd said. But she replied, \"Oh Dave, that's sweet, but no one ever said that about me. Or thought it.\"\n\n\"Dammit Florie, that's because you dress like a linebacker. I'll bet you would even spark a little more interest in your business if you dressed like this! I can't wait to be seen in public with you! I love to make people jealous!\"\n\nThat finally broke down the resistance. She took my hand and squeezed it. \"You actually mean it, don't you? I just hope you have good taste Dave. But I must admit, it makes me feel the best I've been in years.\" And she broke into a broad smile and giggled. \n\n\"Wait and see,\" I said. I took the opportunity to give her a hug and another kiss on the cheek. She smelled good. Like flowers. \n\nWhen we left the store, there was a cab waiting by the curb, as usual, so I decided to take it. When I asked the driver if he was free he just grunted and got out of the car. Then he opened the rear door, and, looking right at Florie, gave her a big smile and said, \"Good evening, Miss.\" After I got in he closed the door in silence. And the routine was repeated at the restaurant when he said, \"Have a nice evening ma'am.\" He did manage to tell me the fare and thank me for the tip. \n\nFlorie looked at me. \"I told you so!\" I chuckled. \n\nIn the restaurant, the hostess greeted us, and as she seated us at a quiet back booth she said, \"Enjoy yourself, folks.\" Then she added, \"Miss, you have the most beautiful hair!\"\n\nI heard a little gasp before Florie shyly turned to her and managed to say, \"Oh, thank you!\"\n\nWhen I looked at her, she was absolutely glowing. \"I don't believe it!\" she almost whispered. And she leaned over and gave me a kiss on the cheek.\n\nI took the opportunity to put a hand behind her shoulder and pull her to me. And I kissed her very lightly. On the lips. And I could feel she was shaking. As she gasped, a look of shock on her face, I smiled and said, \"Thank you for coming with me, honey, it's not often I get to be with someone that draws so much attention.\" That changed her expression to a smile, with a little wonder mixed in.\n\n\"Please,\" she said, \"order us a pitcher of beer. I don't know why, but I'm so nervous!\" \n\nWhen our waiter came I let her choose from the extensive list, and when she did, he said with a big smile, \"Thank you miss, I'll be right back. And I'll bring you some iced glasses.\" He never glanced at me. There was no doubt now. Her smile told me she was having a wonderful time. \n\nWhen he returned he filled the icy glasses and departed with another smile at Florie. She grabbed her glass and chugged down about half of it, before realizing I had raised mine and was not drinking. Finally seeing that I was proposing a toast, she tapped her glass against mine, and I said, \"To my beautiful flower girl!\" I could see her melt.\n\n\"Oh Dave, you really are so sweet, aren't you! What are you doing to me? I feel so good!\"\n\n\"I'm just your escort. The rest is all you, honey!\" I replied with a broad smile. \n\nShe slid over until she was right next to me in the booth, and when I turned to her she put both arms around my shoulders and kissed me. Hard. But her lips were closed tight, and when I opened mine slightly and let the tip of my tongue run along her lips, she gasped and pulled back, a look of surprise on her face. \"Dave, was that your tongue?\" she said with a very questioning look. \n\nI tried to hide my shock as I suddenly realized, she really didn't know how to kiss! I said quietly, \"Wet your lips Florie, and open them just a bit.\" Without giving her a chance to reply I leaned forward and kissed her again, this time pressing my tongue against her lips. After a moment, I felt her relax just a bit, and my tongue slipped between her lips and slid along them. She gasped. Then she moaned. And I felt her entire body start to shake. She was totally unprepared for her reaction to the feeling of my tongue gently invading her mouth. \n\n\"Oh my God,\" she gasped, and stared at me. \"That felt... good! Is it ok to do that?\"\n\nI couldn't help laughing gently, but I said with a smile, \"Well, I think it's wonderful to do that, but you'll have to decide for yourself. But if you liked it, then I'd say it's ok.\"\n\nWithout another word she leaned to me again, and I watched her lick her lips just before they touched mine. It was my turn to be surprised, though, when I felt her tongue press between my lips. Her hands tightened on me and I put my arms lightly around her, not letting her pull back too soon. The soft moan she made into my mouth sounded like the relief of some great aching need. And when I lightly touched the tip of her tongue with mine, she jumped, but didn't try to pull back. I felt her lips press harder against mine, and it was a minute or two before our lips parted again, this time, both of us gasping.\n\nSuddenly, I detected a shadow, and looked up to find the waiter, patiently waiting. Looking right at Florie he said, \"Would you like to order now? I can come back later if you need more time.\" \n\nWe hadn't even looked at the menus, but she neatly said, have you any specials you'd recommend?\n\nHe looked pleased to be asked, and said the chef had a special cut of beef that was excellent. I wasn't sure if she even ate meat, but she lit up, saying, \"That sounds wonderful!\" Then she looked at me and said, \"Would that be ok?\"\n\n\"Of course,\" I chuckled, \"and I'll have it too. It sounds great!\" We settled on salads and side dishes and the waiter happily went on his way. \n\n\"Oh my God,\" she suddenly gasped. \"Was it all right to ask him like that?\" And she grabbed her mug and took another giant swallow. And another, draining her glass. I was about to pour her another, when the waiter suddenly reappeared from somewhere, bringing two more iced mugs and pouring for us. \n\n\"Florie,\" I said, \"come here.\"\n\nShe did as told and slid even closer on the booth bench, bodies touching now. I looked down at her, putting an arm around her, and said with a smile, \"Honey that was more than all right, you did that like a pro! Except, of course, that you never have to ask me if it's ok. But you did something that I liked even better.\"\n\nI turned to her very deliberately and gently wrapped my arms around her. And I stared into her eyes as I very slowly lowered my lips to hers. And she whimpered when our lips locked together, but I felt her hands grab a tight hold of me too. This time, my lips ground on hers, and my tongue didn't stop at her lips, sliding deep into her mouth, searching for hers. It quickly found it, and as they started playing together I could feel her chest heaving against me, and she was moaning into my mouth. The waiter came with our salads and quietly pushed the place settings closer together, but I held her tight, enjoying the feel of her in my arms too much to care. And it didn't feel like she had any intention of letting go. \n\nI realized that like it or not, we really needed to eat our meal. And I wanted her to enjoy it. Reluctantly I loosened my grip on her and lifted my head gently. She just sat there, still holding on, staring up at me. Her eyes looked almost teary, but I was sure it was passion, not sorrow. She finally gasped, in a small voice, \"Do you know what you're doing? Do you know what you're doing to me?\"\n\nI grinned at her and said, gently, \"I'm enjoying the company, and the touch, and the taste and the feel of a very beautiful and intriguing young woman. And I can only hope that you are feeling somewhere near as good as I do right now.\" It was all true. And the fact that I now had a raging hard-on was very much secondary to the excitement of being with such an obviously fresh and innocent girl. \"I think we should try to catch up with our meal,\" I said, turning to the salad. \n\nShe grabbed her mug, and I knew she was about to almost chug it down again. But whatever might happen between us, I didn't want to be able to look back and blame it on alcohol. I said very softly, \"By now you must know you can be comfortable with me honey. You can have all you want, but please just drink it to enjoy it. \n\nShe took a sip and set the glass back down. \"Oh Dave, you have been great and I feel wonderful. And you're right, I'm not as nervous as I was. I'm really having a good time. But when you kiss me I have the strange feeling that you might just devour me whole.\" She giggled. But I shuddered. It was said innocently, but little did she know how close she was to being right. \n\nBy the time we finished the salad, the waiter appeared with our meals on his tray. She took heed, and was nursing her beer now, but I noticed her face was a little flushed. I wasn't sure how much was the beer and how much our kisses. But I noticed that every time I glanced at her now, she looked back with a big smile. And I also noticed that her body was still pressed against mine, as close as we could get and still eat our meals. \n\nThe beef smelled wonderful, as good as her flowers, and we were about to dig in, when she said, \"Dave, I'm really warm, do you mind if I take this off? \n\nShe pointed to the vest, and I chuckled, \"Not in the least, let me help you!\" She slipped out of it, and I laid it on the bench next to me. She didn't say a word, but when I looked back at her, I got a sudden shock. The top three buttons of her blouse were unbuttoned, and she clearly had no bra on. I sucked in my breath when I realized her breasts were just as lovely as my first impression, and she obviously heard me as she looked up shyly, her eyes not quite meeting mine. But she had a little smile. \n\n\"I see you're true to your word,\" she said. \n\n\"Florie, I....\"\n\n\"You said you would look at me all night. I just wasn't sure I was going to let you. But Dave, I... I kind of like it. It makes me feel good... pretty... a woman. But... I'm shaking like a leaf!\" She gave a very nervous giggle. \n\nI took her hand. Holding it. Squeezing it. I could feel her whole arm shaking. My other hand ran gently over her sparkling hair, then guided her head to me, as I leaned down and softly kissed her. When our lips parted she exhaled as though she had been holding her breath for minutes. \"Florie, you are beautiful. And I feel so privileged that you are allowing me to enjoy you. \n\nI felt her hand squeeze back against mine, and she raised her head to me for another kiss. \"Thank you, Dave,\" she whispered. \n\nWhen the kiss ended, I said softly to her, \"Let's eat honey. It smells almost as good as you do, and hopefully tastes almost as good too.\" \n\nShe giggled, and we turned to the table. The meal really was delicious, and I managed to keep my eyes off of her enough of the time to eat most of it, but there was no way either of us could finish it all. And our appetites were somewhat less than our desire for each other, at that point. But I noted with pleasure that she was now drinking her beer just enough to wash down the meal, not trying to swallow the mug. I knew I'd won her trust. ",
        "Somewhere during the main course I'd noticed music coming from somewhere in the building. When the waiter came and asked Florie if she wanted dessert, then giving me a quick glance, I asked him what it was. Turned out there was a lounge in the basement, and being Friday night, they had a band. It didn't sound like too wild a group, so I asked Florie if she'd like to dance. \"I don't dance,\" she replied rather definitely.\n\n\"Neither do I!\" I laughed, \"but if they play something fairly slow we can find a dark corner and sway in one place!\" And I added in a conspiratorial whisper, \"And it will give me a chance to feel you in my arms.\"\n\n\"You'd really like that?\" she asked seriously.\n\nThis girl was a hard sell. \"I'd love that. And I'd like it even more if you liked it too.\" I managed to get a smile that grew as we looked at each other. I whispered again. \"If it's not too dark, maybe I could look down your shirt some more!\"\n\n\"Oh my God, you're impossible!\" she giggled. But the smile never left her face. \"Ok, I'll go with you and we can see what's going on, but you have to promise to leave if I don't like it or chicken out.\" \n\nAt that point the waiter returned with my credit card and we sat for a moment, finishing our beers. I really didn't dance much, and a little extra courage couldn't hurt me either. We set our mugs down at the same moment, and when we looked at each other, we both knew what we wanted. Our arms slid around each other simultaneously, and our lips gently met. We enjoyed a long \"friendly\" kiss, not heated or hurried, just delicious. Yes, I made sure her body was pressed tightly against mine, and yes, I felt a renewed tingling in my cock. But mostly I felt my friend Florie, who now felt almost as comfortable being in my arms as I felt holding her. \n\nShe felt so good I really lost some of my ambition to dance, and when our lips finally parted I heard a soft \"Mmmmmmmmm\" from deep in her throat, telling me that she liked it too. \n\nWhen we left the booth I picked up her vest and she reached for it, but I pulled it away, saying, \"Uh uh, I'll hold it for you. Or you might decide to put it on again. But she surprised me when she said shyly, \"No, I like it when you look at me.\" \n\nWhen we entered the lounge there were only five or six couples, two on the dance floor, and the band was playing a sort of soft rock. It was still too fast for our purpose, so I got us a couple of beers and we found a little table for two in a dark corner. \n\nAt least we got to share a couple more kisses while we waited, and Florie was now making sure I was enjoying the view. She had undone another button, and she leaned her head against my shoulder, so that when I looked down I had a completely unfettered view, although the light was very dim. Her breasts were not particularly large, but full and well rounded. And what I could see of her nipples appeared to be very erect, although I assumed that was due, in part, to my eyeballs on them. The more I looked, the more I ached to touch, but I knew being too eager could be the kiss of death. \n\nSince it appeared the music wasn't changing, I went up to the leader between songs, and exchanged a liberal tip for a promise to play a set of nice slow songs. Actually it appeared that the others were happy too, because everyone immediately headed for the floor. I took Florie's hand and we moved a few feet from our table, staying in the shadows. I slid my arms around her, holding her loosely against me, and we smiled at each other as our bodies touched. \n\nShe put her head on my shoulder, and we just swayed together, as promised, enjoying the feel of each other and ignoring everyone else. One or two couples actually danced a little, but most of them looked just about like us. I ran my hands over her shoulders and back, and she wrapped her arms more tightly around me, pulling herself snuggly against me. \n\nWhen I kissed her forehead, she looked up with a smile, and our lips were soon locked together. She had quickly learned to kiss, and now was obviously very fond of it, finding it even harder than I did to break away. She was still experimenting, sometimes with odd results, but we'd just giggle together and give each other a squeeze. \n\nBut such close contact and such pleasant circumstances led to the natural consequence. Though I willed it not to happen, my cock was hard as a rock before the first song was over. I had already decided that although she obviously had a rather repressed background, Florie was a very nice person, as well as a beautiful woman, and I really liked her. In fact, her innocence was part of what made her so appealing, and the last thing I wanted to do was scare her away with anything too overtly sexual. I was amazed that she had accepted my \"breast worship\" so readily, but I realized that was part of what made her feel like a woman with me. \n\nShe'd accepted my eyes in her shirt, and quickly learned to enjoy our kissing, but other than my hands on relatively safe areas such as back and shoulders, our touches had been relatively platonic. I tried very hard to keep her from finding the log now straining my pants, but of course, the inevitable happened. During one of our more risqu\u00e9 dance moves, a little turn around in place, her body pressed directly against it, hard enough that I gasped. She stopped moving and looked up at me. \"What's that?\"\n\nI had no idea how to answer. I had no idea what, if anything would make sense to her. I had no idea what she could accept. I stammered a couple of false starts and finally tried, \"Um that's what happens to a man sometimes when he really enjoys the company and contact of a woman.\"\n\nWe were both standing stone still now, and she stared up at me. \"You mean... you mean I make you like that? That's your... your uh... thing?\" \n\nOh God. No way out now. Sex Ed 101. I gave her a little squeeze, trying very hard not to let it touch her and said, \"Yes Florie, that's my penis, better known as my cock. And it's swollen and hard like that because I'm really enjoying your company and feeling your body against me. I hope you're not offended, but it's really a sign that I like you very much and I'm having a good time with you.\"\n\nI was amazed by what she did next. She reached down and rubbed her palm over it. Her fingers squeezed it gently, measuring its hardness, then ran its length, measuring the size. She looked at me with a serious face. \"I know what it is Dave, and I know what it's for. I just never imagined it would be so big or so hard. Are you a giant or something? I mean how... how could a woman... ever put that inside her?\"\n\nI chuckled and smiled at her. \"I'm not that big baby, and maybe you would be surprised how easy it is.\"\n\nBut my mind was whirling. Based on this conversation there could be no doubt. Florie was a virgin! And a very na\u00efve one, at that! Suddenly a lot of pieces fell into place. No wonder she didn't know how to kiss. Or even really understand relationships. She had no concept of why a man might like a woman. And didn't understand why I might like her. She didn't even understand the reaction of her own body to me. I couldn't imagine what her background had been. In most ways she seemed like a normal person. Likeable, fairly knowledgeable and not really even that shy except when it came to a relationship with a man. \n\nBut she was in my arms and she felt good. And I liked her a lot, maybe even more because of her na\u00efvet\u00e9. We'd see where this went. She raised her head to me again, asking for another kiss, and I noticed that as our lips and bodies ground together, she didn't seem to be bothered in the least by the fact she was pressing against my cock. In fact, I began to guess that was what she was trying to do. I had to give her credit. She was na\u00efve, but she was not timid.\n\nAt the end of our kiss she was smiling again, and when the song ended, she said, \"Can we sit down for a bit?\"\n\nWe settled back into the shadows of our almost forgotten table and Florie picked up her beer and drained it. Pretty clear that she was suddenly nervous again. Then she leaned over to me for another kiss, and I understood when I suddenly felt her hand lightly in my lap. And her fingers started sliding up and down the length of my straining cock. I moaned into her mouth and my hips rocked of their own accord, pushing me against her hand. \n\nShe pulled back, eyes wide, staring at me. \"Did I do that to you?\" When I nodded yes she said, \"Oh Dave, is it alright? I mean, it doesn't hurt or anything does it?\" Her hand was still moving slowly.\n\n\"Oh Florie!\" I half chuckled, half gasped. \"It feels wonderful! But I wonder if you realize what it means. It's called \"arousal\" baby. Sexual arousal. And right now I am very aroused.\"\n\nI decided it was time. I reached for her with one arm, pulling her against me and kissing her hard, pressing my tongue into her mouth and grinding my lips against hers. But my other hand slipped into the open front of her blouse, and my fingers stroked lightly over the wonderful soft skin of the top of her breasts. She moaned into my mouth, and I felt her fingers tighten around my cock. And there was no doubt she was trembling. \n\nAfter a few seconds of stroking, I let my hand slide around her breast, grasping and squeezing gently, carefully avoiding the nipple. Her head pulled back again with those wide eyes. \"OH! DAVE!\" But in the next second her lips clamped onto mine again, grinding even harder, and her hand was no longer stroking me, but grasping me tight and pulling. \n\nI kneaded her slowly, letting my fingers slide lightly over her breast, and we were both moaning into each others mouths and writhing in our chairs. But I felt her jump when a finger finally brushed against her nipple, quite obviously already hard. I captured it very lightly between my fingertips, barely stroking, barely squeezing. She let go of my cock and slid both arms around me, not making a sound except her deep ragged breathing. Then her mouth lifted from mine and she nestled her face into the crease of my neck. From her mouth, just below my ear I heard, very softly and hoarsely, \"Ohmygod, ohmygod, ohmygod, ohmygod,\" over and over and over. \n\nShe had surrendered. To the feelings, to the moment, to me. Then she whispered, \"Oh Dave, I feel that... everywhere!\"\n\nI stopped stroking and gently removed my hand. She lifted her head and I captured her lips for a long, sweet kiss. When it ended I smiled at her and used my finger to wipe the single tear running down her cheek. I whispered softly, \"Honey, now you know what arousal is. Would you like me to take you home?\"\n\n\"Oh Dave, yes please.\" She had to use the restroom, and got it together a little by the time she came back. She'd buttoned a couple of buttons, but she grabbed my arm and leaned against me, refusing to be without my touch. When we went outside, I was about to grab the cab in front of the all night drugstore next door, but she said, \"Dave, would you mind? Wait out here for me, I want to go in the store for a second.\" Of course I volunteered to go with her, but she said, \"Please, just wait here.\"\n\nTrue to her word, she was right back out, tucking a tiny bag in her purse, and we quickly took the cab back to her storefront, wrapped in each others arms the whole way. When we exited the cab she grabbed my hand and pulled me with her, leaving no doubt she expected me to come in. But when we walked into her apartment, once again awash in the flowery aroma, she turned and looked at me, suddenly realizing, I think, what she'd done. The look on her face said, \"What now?\"\n\nI answered by sliding my arms around her and pulling her gently to me, at the same time I pressed my lips to hers and slid the tip of my tongue between them. She moaned and put her arms around me, pulling us tighter together. My hardness, though not my desire, had dissipated somewhat on the trip home, and I ran my hands up and down her back, now letting them slide over the pleasant curve of her ass as our bodies pressed harder. I could feel her trembling just a little, but she was obviously enjoying the embrace. \n\nI guided her to the couch, a bit ancient, as it creaked when we sat down. But of course, it was covered with a gay floral throw. She'd left a light on somewhere in the back, and in that soft light, I smiled at her as I wrapped my arms around her again and pulled her to me. She smiled back, almost glowing, enjoying the moment and relaxing a bit. I leaned forward and slowly covered her face with little kisses, delicately placed. \"Mmmmmmmmm\" told me she enjoyed it. She wiggled a bit, snuggling closer, and I lifted one hand, my fingers stroking her hair, then her cheek, then her neck and ear. She'd stopped shaking, but I felt her shudder with my touches. When my lips kissed under her ear her body arched a bit against me, and she breathed a soft \"Ohhhhhhhhhh\" into my ear. \n\nThe realization suddenly came over me. This woman, seemingly making herself so available to me now, was not only a virgin, she had never been touched! Every hug, every squeeze, every kiss, every brush of my hand was new to her. The thought was intensely arousing, making me shudder, but I could not escape a feeling of responsibility. I did not want to take advantage of her, I wanted to give her what she wanted. And whatever happened between us, I had to do it right. \n\nShe moaned again as I slid my lips over hers and my tongue gently into her mouth. Now her tongue welcomed mine, and they played together as our lips ground. My fingers slowly slid down her neck, then down her throat, until they met the first button of her blouse. I gently undid it, then the next and the next, as our kiss lengthened. We were squirming against each other, both quietly moaning, by the time I undid the last button and pulled the blouse loose from her skirt. Her lips left mine as she gasped, almost in pain with her need, \"Oh Dave, please touch me!\"\n\nI pulled my arms free and slowly folded back her blouse, exposing her breasts, as she trembled, eyes closed. But her eyes flickered open, watching me, when she heard my breath suddenly catch. God, she was beautiful. Her breasts were round and firm, standing out from her chest, hanging just slightly from their weight. Her nipples were dark circles, the tips lighter, almost hard now, appearing reddish pink in the soft light. When I finally remembered to breathe I smiled, and heard her exhale too, a look of relief on her face.\n\nWith one finger, I lightly touched the tip of a rosy nipple, and watched as they both crinkled into rough, rocky hardness almost instantly. I heard a little whimper, and her hand grasped mine and pulled it to her breast. I cupped it in my hand and squeezed gently as I raised my eyes to hers and smiled. \"Florie, you have beautiful, wonderful breasts.\" And my lips found hers, grinding and playing as my hand kneaded and massaged her gently. She leaned back against the couch, shaking again, giving my hands free reign. \n\nI raised my other hand and cupped both her gorgeous breasts, relishing the exquisite smoothness and softness as I palmed them and teased with my fingers. Her eyes were clamped shut, head back against the couch, and she was gasping and moaning continuously. \n\nBut it was my turn to gasp as I felt her hand slide into my lap. It searched and quickly found my cock which was now beyond rock hard, throbbing and demanding to be free. No longer afraid to let her feel my reaction to her, I spread my legs a bit, and she grasped me tightly. I soon realized her hand was squeezing in time with my hands kneading her breasts. My hips began rolling slowly in rhythm with her hand. \n\nI finally allowed myself to capture her stone-hard nipples in my fingers and squeeze lightly. \"Ooooooooooooooooo\", a long drawn out moan of almost painful pleasure forced itself from her lips, and I could feel her body move against mine as her hips started to undulate of their own accord. I gently pulled and squeezed and twisted and stroked and her body was shuddering and moving continuously, her hips sometimes rolling, sometimes bucking, and her back arching, pressing her breasts into my hands. She opened her eyes and stared at me, her hand grasping me tightly. \"Dave, oh God Dave!\" She was breathing deeply, chest heaving, gasping. \"Dave, I feel that down... down there... in... in my... my pussy! God how is that possible? It feels like I'm wet!\"\n\nI hadn't touched her below the waist, except for briefly running my hands over her firm ass. But I slid my hand down her thigh over her skirt, caught the material in my fingers and pulled it up over her leg. Then I slid my fingertips onto the bare skin below the skirt and lightly trailed them up and down her thigh. She shuddered and her arms tightened around me. She buried her face into my chest. I realized that things were happening to her, one after another, that she had never felt before, and didn't know enough to expect. And I knew it sometimes scared her. But I also realized that she was enjoying it all, not once having asked me to stop. \n\nI slid my hand to the inside of her thigh, running it from her knee almost all the way to the top. Once again she was shaking, her breath coming in broken gasps, her arms like a vise around me. Finally, she lifted her head, her eyes pleading, and I knew she needed another kiss just as badly as I did. But I also knew she wanted guidance, wanted to know what was next, where it would all lead. \n\nAs I locked my lips over hers again I squeezed the soft skin of her inner thigh once more, then moved my hand just a bit and let my fingertips slide lightly over the satiny panties covering her pussy. She almost sobbed, but pressed her lips even more tightly against mine, desperately needing the contact and the reassurance of my touch. Her hips bucked, then rolled in time with my lightly stroking fingers, and I was not surprised to feel that she was soaking wet. \n\nI knew I could not, would not go any farther without asking. Without telling her. \"Florie, honey, are you sure you want this? Really want it? If we go any farther I cannot promise that I'll be able to stop. And I know I won't want to. I don't now. But I will if you say so.\"\n\n\"I know Dave, I can feel it too. Thank you for asking.\"\n\nWith a great effort she pushed herself away from me and grabbed her purse at the end of the couch. She reached in, pulled out the little bag from the store and handed it to me. \"If you are about to de-flower a 32 year old virgin, you'll need these.\" and she added with a little giggle that broke the tension, \"As you know by now, anything to do with flowers is very important to me!\" The bag contained a package of condoms, as I suspected. Obviously, she had decided before we ever left the restaurant. \n\nAnd she threw herself against me, arms around my neck and kissed me, hard. \"Dave, take me to bed, please.\"\n\nI shuddered with the sudden realization of what was about to happen. I was given an opportunity few men ever have. I was about to make love to a virgin, not only unspoiled but totally untouched and innocent. Everything we had done till now was new for her, and every touch, every gesture, every kiss, every word, would be new, the only experience she had ever had. I had no idea how this had happened. I only hoped I would be worthy of it. \n\nI slid my arms under her and she held on tight as I carried her gently to the bedroom, her face buried in my chest. I laid her on the bed with a kiss, and she waited patiently, eyes closed, as I stripped off my shirt and pants, then fumbled with her skirt and finally pulled it loose, with her help. I opened the small box of condoms and put one on the night stand by the bed. When she felt me climb on the bed next to her she opened her eyes and smiled at me, seeing my bare chest for the first time. She seemed suddenly very calm. I realized she had made up her mind. She wanted this.",
        "I lay on my side on the bed next to her, my head propped up on one hand. There was absolutely no hurry now. I was admiring her, the sight of her gorgeous breasts still causing my breath to catch in my throat. She was wearing a pair of cream-colored satiny panties with a fancy lace waistband. I was sure they were the best she owned. And I already knew they were soaking wet. I was wearing briefs, and my cock was already swollen again and damp with pre-cum just from looking at her. \n\nShe rolled towards me with a smile, eyes wide open now. She reached out and ran her fingers lightly over my chest, playfully touching the nipples, perhaps comparing to her own. At the same time I put my hand on her stomach, making slow, gentle circles over her skin, and I could feel her shiver. \n\nFinally I rolled towards her, throwing an arm across her body as my lips pressed against hers. She put both arms around me and pulled me against her, a naked breast crushed against my bare chest for the first time. Our lips ground and our tongues played, and my hand found her other breast, cupping, squeezing and kneading it. She arched into my hand in response, and moaned into my mouth. \n\nMy cock was rock hard now, and pressed against her thigh. I felt her hand slip over the cotton of my briefs and close around it, then slide slowly up and down. It was my turn to moan into her mouth, and my hips involuntarily rolled, pressing it into her hand. But then she amazed me. \"Please take your underwear off, Dave. I want to feel it. I want to see it.\"\n\nI sat up and quickly slipped the briefs off, then moved up the bed a bit more so she could reach better, and lay down again. This time she pushed herself up, quickly reaching over and grasping my cock, holding it in her hand. She squeezed gently then pulled a little, every motion earning a sigh or gasp of pleasure from me. When she realized it was her touch that caused my reaction she started sliding her fist slowly up and down the length of it, and I groaned and rolled onto my back, eyes closed and gasping. Everything she did was natural, what she wanted, or she felt or sensed that I liked or needed. And yet, it was perfect. \n\nAs I rolled back she moved forward, sitting up and watching as her hand slid over my aching hard cock. She was admiring her handiwork, now totally aware that she was causing my reaction. Perhaps she could feel it throbbing. I know I could. But she whispered to me, \"Oh God Dave, it's so hard. And it's so big! I don't know if I... \"\n\nBetween my gasps and moans, and the bucking of my hips I managed to reply, \"Don't worry, honey, it will be fine. You'll see.\"\n\nShe gave me an impish grin, and said. \"I'm just glad he seems to like me as much as I do him. He's beautiful!\" I was contemplating her personalizing of my cock when she suddenly leaned over and kissed the tip, getting some of the unexpected precum on her lips. I gasped and jumped as she licked her lips clean and giggled, \"Now I know what your taste like! And she leaned over and kissed again, this time giving the tip a little lick, as I moaned and grabbed balls of sheet in my hands. \n\nSuddenly she got a worried expression on her face. \"Oh Dave, is that all right? Do you mind? I hope I didn't hurt you. Do people... is it ok to do that?\"\n\nHer hand was still stroking me slowly, now lubricated by the precum running from my tip, and it took me a minute to regain my composure enough to respond. \"Florie... that's more than all right... it's wonderful! And yes... people... do it... all the time.\" I added, hopefully, \"In fact, if you want... you can put it in your mouth.\"\n\nShe gave me a blank stare for a moment. \"Really? You mean that?\" Her now slippery hand seem to tighten a little as she stroked. \n\nI gasped back, \"Yes, honey, not everyone... you don't have to... but it's nice... if you want to try.\"\n\nShe slid her hand to the base of my cock, staring at it for a moment, gauging it's size perhaps, then slowly leaned over as I held my breath. And she kissed me again. But this time her tongue made little circles around the tender head of my cock, and I groaned, slamming my head back on the bed. But my eyes opened again when I felt her lips very gently slide down over the tip. She had the head of my cock in her mouth, her lips very lightly surrounding its base, and he eyes were locked on mine. I smiled at the erotic sight of Florie, bending over me almost naked, beautiful breasts swaying as she moved. She slid a little further, but her lips were dry, and didn't slide easily.\n\n\"Get it wet!\" I gasped. \n\nShe lifted her head for a moment, then covered the tip again, but this time I could see saliva running from her lips. And when she pressed she slid easily down my shaft, so easily it surprised her. She ended up with my cock deep in her mouth and I groaned, my hips rolling and pushing me in even deeper. I felt her lips tighten around me, and suddenly the tip of her tongue lightly brushed my shaft as I moaned and writhed on the bed. And the next moment her tongue was sliding up and down, washing me with slippery wetness. \n\nShe slowly drew her lips up my shaft to the head, and then slowly down again. I started rolling my hips in time with her strokes, and soon she was giving me a wonderful blow job, perhaps not even knowing that's what it was. Somehow, knowing she had never done this before and was doing it just because I said she could, made the sensations twice as vivid. Soon I was moaning, legs kicking on the bed, and my cock was throbbing and tingling. I knew I couldn't take much more, and pleaded, \"Florie, oh God, you have to stop!\"\n\nShe lifted her head in surprise. \"I thought you liked it, and I did too. Is something wrong?\" \n\nOh my God. \"Florie, no! That was wonderful! The trouble is it's too good. A few more seconds and you would have made me cum!\"\n\nI put out my arms to her and she crawled up to me, pressing her body against mine as my arms pulled her tight against me. But she whispered in my ear, \"What does \"cum\" mean, Dave?\"\n\nOh my God. I thought a second. \"Have an orgasm, honey. Release my semen, or cum. It's called \"cumming\". You would have had a mouthful.\"\n\nShe gasped. \"Is that bad? I mean, would it hurt me?\"\n\nI couldn't help a little laugh. And then I gave her a long deep kiss, our bodies grinding against each other. I had rolled towards her, and my very hard cock was rubbing against her pussy, over her panties. I could feel her hips gently rolling as she pressed against me.\n\nThen I said, \"No baby, it's not necessarily bad at all. It would feel wonderful to me. And you are amazing! But you would have to decide whether or not you like the taste. And whether you want to swallow or spit it out. It's a little stronger than what you tasted before.\"\n\n\"If you would have liked it, why did you stop me?\" \n\n\"Florie, it feels terrific. The trouble is, it takes me a while to recover. I can't just do it over and over. And right now, I want to save myself for you.\"\n\nShe kissed me again, then said, \"Dave, that's very sweet!\"\n\n\"Florie, if you knew how aroused you make me, how badly I want you, you might think it's selfish.\"\n\nWith that, holding her tightly in my arms, I rolled her onto her back again, leaning over her. I ran my finger over her face, tracing her lips and chin, then kissed her nose. I suddenly realized that this was probably the strangest encounter with a woman that I had ever had. But it was fun! And unbelievably erotic!\n\nAs I covered her lips with mine again I ran my hand over her body, brushing her breasts and sliding all the way down to the front of her thighs, letting my fingertips tease and my palms caress. She moaned quietly into my mouth, and her body started to squirm, her hips moving gently, one foot, then the other sliding up and down over the sheet. \n\nI lifted my lips from hers and started kissing down her chin, then up the side of her neck. When I let her feel my hot breath on her ear, then kissed sucked and licked her earlobe she gasped and shuddered. As I nuzzled into her neck beneath her long flowing hair, I grasped a breast, squeezing and kneading again, and she moaned, her body arching on the bed. I kissed and licked and nibbled my way back down her neck, then along her jawbone, and down her throat, and my fingertips found her hard rough nipple and lightly stroked it. She gasped out a breathless, \"Oh God!\"\n\nI moved down a bit and cupped both her breasts in my hands, holding them as I kissed my way down from her throat and down the valley between them, my cheeks rubbing against the soft skin. Her body was in constant motion, and every breath contained a soft sigh or moan. I ran my tongue along the crease at the bottom of one full breast, feeling the incredible smoothness, and slowly kissed my way up the under curve. \n\nWhen my lips reached the edge of her nipple my tongue made a wet circle around it, barely brushing the dark skin. I knew she was holding her breath as my lips finally descended over the swollen red tip, my wet tongue gently swirling against it as my lips closed around it. She cried out hoarsely, and her back arched, pressing her breast deeper into my mouth. I sucked her even deeper and my tongue swirled round and round the tip, flicking, teasing and grinding. \n\nAs my mouth held one breast captive my hand held the other, my fingertips lightly squeezing, pulling and rolling the hard tip. Her breath was coming in short gasps, almost sobs, as her body writhed on the bed, her hips constantly pumping, her back arching with every touch of my tongue and squeeze of my lips. She was very quiet, but under her breath kept moaning, \"Ohhhhhh ohhhhhhhh, ohh God, ohhhhhhhh, oh Dave, God, ohhhhhh.\" Her hands were both on my head, gently holding me to her breast, urging me not to stop, to take more and more. \n\nI slid my other hand down over her body, both of us knowing where it would stop. When I felt her mound under her smooth wet panties my palm cupped her, and my fingers squeezed lightly. She moaned loudly, her hips bucking hard, pushing her against my hand. \"Ohhhhhhhhhhhhh Dave, yessssssss, oh God yesssssssss!\" \n\nMy lips sucked hard on her captive nipple as my fingertips lightly stroked up and down over her panties, teasing the swollen lips beneath. She was so wet my fingertips became slippery. Finally she gasped a hoarse whisper, \"Dave, touch me, oh God, take them off!\" I pushed up from her, my lips reluctant to give up that wonderful breast, and slipped off the bed. \n\nMoving to the bottom, I reached over, grasping the panties, sliding them slowly down as she lifted her ass, then her legs for me. It was my turn to gasp as I realized she had a full, untrimmed bush of hair, a beautiful light red, just a bit darker than her head. I climbed back onto the bed, grasping first one ankle, then the other, and lifted both legs until they rested against my shoulders. \n\nShe opened her eyes and watched as I kissed her toes, feet and ankles, and she gasped with each new touch. When I began running my hands up and down the outsides of her calves as I kissed and licked my way up the inside, she moaned, and her head went back on the pillow, eyes closed. When I reached her knees I moved a bit closer to her and brushed my cheeks against the soft smooth skin of her inner thighs. Her body was moving constantly, her breath catching with every touch of my lips and tongue, and her hips rolled slowly. As I neared the top of her thighs I noticed she had her hands over her breasts, the nipples trapped between her fingers, and she whimpered, \"Touch me, oh please, touch me!\" I lowered her legs from my shoulders, pushing them wide, out to the sides. \n\nReaching up, I ran a hand through her curly red hair, letting my fingers tangle in it. My mouth followed, kissing slowly down through her forest from the top, the crisp curls tickling my nose, my hot breath where no breath had ever been. When I reached the top of the slit between her swollen lips I ran my tongue lightly down the middle, tasting her as she gasped. Her head popped up, eyes open, and she said hoarsely, \"Oh my God, Dave, you...\" and she left it unsaid, but I realized she never expected me to touch her with my mouth. I smiled up at her and pressed my tongue deeper, lapping up the juices that were spilling from her. \n\nHer head went back and she moaned, but her hips lifted from the bed and pressed her pussy into my face. I slid both hands under her cheeks, holding her up as I buried my face deeply into her. My tongue dipped into the entrance to her cunt, finding it full of nectar, which I greedily lapped up. She was almost howling now, with a long drawn out moan, her hands thrashing at her sides. As I kissed and licked, her hips were rolling, pumping, and her breathing now bordered on little sobs. I lifted my head and said softly, \"Florie, are you ready, and are you sure?\" She was beyond speaking now, but she nodded her head up and down emphatically, several times. \n\nI took the time necessary to reach to the nightstand and find the condom, quickly rolling it onto my cock, now so hard and wanting that the head was a dark purple, and I realized the dulling effect of the condom might be my only hope of completing the task. I moved up between her thighs and ran my hands over her body, and when I knelt in position I leaned over her and gave her a tender kiss. \"Florie, you are so beautiful. Trust me and be brave, and soon it will be wonderful. You'll see.\"\n\nHer juices were already running from her, dripping onto the bed, and I slid my cock over her pussy, teasing her clit and getting the condom as wet as possible. She was lying still now, eyes closed, though still gasping at my touch, and when I put a hand on her hip I could feel she was trembling. My other hand gently pressed the tip of my cock against her, and when it found her entrance she sucked in her breath. As I expected, when I pushed she was very tight and she moaned, but her hips lifted to me as she pulled her knees up, feet flat on the sheet. She was so wet I slid slowly but easily into her tightness, watching her face and listening to her ragged breathing. When the head of my cock was well inside her I stopped a moment. \"Open your eyes, Florie. There will never be another first time.\"\n\nHer eyes popped open and when she lifted her head she saw us coupled, at last. \"Oh God!\" she gasped, and as her eyes closed and her head went back her hips lifted hard, taking more of me all at once. She moaned and I renewed my grip on her hips and pushed, feeling her exquisite tightness as I entered deeper. When I looked down and saw my cock, part way in her pussy and about to slide beneath that beautiful red bush, the erotic sight made me shudder and it took a moment to regain control. But when I pushed again I hardly moved, and she gave a little cry, eyes suddenly open and staring. \n\n\"Florie, I...\"\n\nShe cut me off. \"I know, Dave... it's ok.\"\n\nMy fingers tightened on her hips and I slid back a bit, then pushed forward, hard! This time her cry was loud and shrill, as if stung by a bee, and I felt her suddenly contract, so tight I bit my lip and held on, gasping. But she was breathing deeply, chest heaving, and when she relaxed I pushed again, hindered only by her virginal tightness. And my body pressed against hers. We were joined. \n\nWhen she realized, her eyes opened again and she looked at me, gasping \"Ohmygod, ohmygod, ohmygod!\"\n\nShe was clenched tight around me and I remained still, until she suddenly gave a long loud sigh. I felt her release me, and at the same time her fists let go of the sheet. And she looked up at me, with a little smile. \"It hurt,\" she said, \"but it's better now. And you feel good!\" \n\n\"So do you,\" I whispered, and pulled slowly back, then in again. \n\nI let go of her hips and leaned forward, my hands pressing on the sheet at her sides as I smiled down at her, watching her face as she was fucked for the very first time. She closed her eyes and breathed deeply, but in a few moments I felt her hips join me, rolling in time with my long slow strokes. Even with the condom, she was so tight that my cock was quickly throbbing with desire as I carefully increased the speed and power of my thrusts. \n\nShe began moaning softly, and her hips were moving freely now, matching my pace and sometimes asking for more. I watched as she covered her breasts with her hands and fingered the nipples, squeezing, stroking, pulling, getting used to new sensations. When she opened her eyes and saw me watching her she smiled, knowing how I liked her breasts, and pulled a little harder, just for me. But she quickly realized it felt good, and did it again and again! I began slapping lightly against her, drops of sweat forming on my forehead, and pushed myself back up, grasping her hips again. \n\nShe grunted when I suddenly began ramming harder into her, the slapping now loud enough to fill the room and the shock enough to start the bed creaking. But her passion obviously more than met mine, and she dug her heels into the mattress and pressed her hands against the sheet as she lifted her hips, meeting my thrusts and driving me in deeper and deeper. She was open now and dripping wet, her juices flowing each time I pulled back. Her face had a strained look from the effort, but she as she gasped she began a little chant, \"Oh, oh, yes, yes, yes, oh God Dave yes, yes, oh yes!\n\nBut when her sounds changed to gasps and moans, interspersed with little cries, I knew she was nearing the edge, even though she probably didn't realize it or know what was happening to her. And my cock was telling me it was unwilling to wait much longer. I started pounding against her, ramming my cock towards her core, and her eyes opened for a moment, a questioning look on her face. But suddenly her eyes closed again, and she started loud and high-pitched cries, \"Oh! Oh! Oh! Oh! OHHHHHHHHHHH!\" Her ass lifted from the bed until I rammed my cock into her a final time and drove her back down onto the mattress, my breath catching in my throat. \n\nAnd she screamed! Her back arched and her eyes opened, a look of total wonder in them. When I felt her suddenly clamp down hard around me I surrendered, and I rapidly filled the condom with spurt after spurt of my cum as my hips bucked hard against her. I held on to her tightly as she writhed and bucked, until she slumped back on the bed, her feet slowly moving up and down on the sheet. But the sounds that she was making had changed from cries and moans to soft delicious sighs - of pleasure and satisfaction!\n\nWhen my hands loosened their grip she looked at me and whispered, \"Come here Dave, I need you. Please.\"\n\nI carefully slid out of her, making sure I didn't lose the condom, and pulled it off before I crawled up next to her. When my body touched hers she wrapped her arms around me, pulling me against her and crushing her lips against mine. She put everything she'd learned into that kiss, and we both moaned and rolled together on the bed, celebrating. When her grip finally loosened she sighed, \"Oh Dave!\" and buried her face into my chest. I held her against me and our bodies quickly relaxed. With the late hour, the beer, and the tension and excitement of our amazing day now gone, we were asleep almost at once. \n\nAs I slowly awoke, I became aware of her soft body, still surrounded by my arms, and her warm breath burning a hole in my chest. She hadn't moved. And oh God, she felt good. I lifted one hand from her and ran it gently over her hair, while the other slid slowly down her back, admiring its smoothness. She awoke with a start, and gasped a sudden \"OH!\", totally unused to the feeling of being held or touched. But she relaxed, and without moving, kissed my chest. \n\nI gave her a squeeze and kissed her forehead. She looked up at me and whispered, \"I don't believe this! I can't believe any of it! But oh damn, I feel so good!\"\n\nI tightened my arms around her and she snuggled against me, enjoying my touch as much as I enjoyed hers. She whispered, \"You know, I've never woken up with a man before, I've never even been held by a man before, unless you count my father.\"",
        "\"I hope you know how happy I am to be your first!\" I said.\n\n\"I hope you know how happy I am that you are! But Dave, I've dreamed of this. I wasn't sure what it was I wanted, but I needed it. Sometimes my body was on fire, and I found out I could relieve the feeling by touching myself. But it never really went away, and I felt guilty for doing it. I wasn't even sure if it had to do with wanting a man, wanting sex. But it scared me. Men scared me. You scared me. But you were so honest. If you had turned away or apologized when I caught you looking this never would have happened. And I would have been mad at you forever.\"\n\nAnd she pushed herself up till we were face to face in the dim light. She ran her hand over my cheek, then put her hand behind my head and pulled me to her. And gave me the most wonderful, delicious kiss! I don't think she needed a lesson to do that. It was a thank you, from the heart. \n\nI slipped my arms around her and held her softly as she cuddled against me. I could not deny I felt something for her. I knew there was a story behind her life and how we had reached this point together, but it didn't matter much right at that moment. I whispered to her, \"Florie, you aren't a virgin any more. I hope you have no regrets.\"\n\nHer head popped up and she leaned back, staring into my eyes. \"Dave! This has been the best night of my life! And that was the most wonderful moment of my life! I may not have known much, but I knew I was a virgin long after most ever other woman my age, and every month and every year that went by, I felt worse about it. But I had no clue. No one ever looked at me, let alone paid any attention or asked me out. I assumed there was something that made me terribly undesirable. And I certainly wasn't going to out to bars and look for someone to do the deed! I'd have been too afraid that no one would accept the offer!\"\n\n\"But Dave, you were wonderful, unbelievable! You were gentle and considerate, took your time and didn't push, even offered to ignore your needs if they didn't match my own. And you made it fun. And easy! You led me through it. I can't imagine that anyone could have been better!\" and she giggled. \"I just hope you have no regrets.\"\n\nIt was my turn. \"Florie! You just gave me the greatest privilege any man can have with a woman. You can only do it once in a lifetime! And you chose me! With no indecision or reluctance. No complaints or accusations about the discomfort. And now, no remorse! And best of all, you are a beautiful desirable young woman that gave herself willingly to me. How could it have been better for me?\"\n\nShe giggled. \"Well, I suppose I could have paid the bill. And you still owe me for the flowers!\"\n\nSpontaneously, I reached down and smacked her on the bottom, and she squealed. But then she stuck her tongue out at me. And I did it again. \"You meanie!\" she yelled, and put her hand on my shoulder and pushed me hard, onto my back. Then she jumped up and straddled my waist, grabbing my hands and pinning them up over my head. Of course I could have pulled loose in an instant, but this was playtime! \n\nShe leaned down and kissed me, hard, jamming her tongue into my mouth and grinding her lips on mine. But what made it even better was her breasts grinding into my chest at the same time. Obviously she realized it too, because she shuddered and lifted her head, only to see the expression on my face as I gazed at her breasts swinging beneath her. She hiked herself up a bit and leaned over again, mashing one of her breasts into my face as I opened my mouth to suck in the nipple. \n\nShe gasped and pulled up again, then began teasing me, running her nipple over my lips and then pulling away as I tried to capture it. It was too much for me and I pulled my hands free and wrapped my arms around her, pulling her down hard and forcing her breast deep into my mouth. She wiggled and moaned and pretended to struggle to get away as my lips and tongue had their way with her, lips kneading and sucking, tongue swirling and grinding on the tip. I captured the hard bud gently in my teeth and loosened my grip, challenging her to pull away from me. When she tried she stretched the nipple and suddenly found the feeling was intense, but it felt good and didn't hurt, and she tried even harder. \n\nBut I tightened my arms and pulled her down again, this time opening wide and sucking as much of her breast as I could into my mouth. She gasped and moaned as my lips kneaded and squeezed and my tongue swirled over her smooth skin and tender nipple. Finally she surrendered and between moans gasped out, Oh God, oh yeahhhhhh. Oh Davy, that's so good!\"\n\nHer pussy was pressed against my chest, her legs spread wide, and I could feel her warm slippery wetness spreading over me as she wiggled and squirmed. Meanwhile my hard cock was standing at attention behind her, the feeling of her soft beautiful body playfully rubbing and squirming against me, driving me beyond arousal. \n\nI loosened my grip on her again and started running my hands up and down her back and over her smooth round ass. She moaned and sat up a little, her smile matching mine. I put my hands on her firm cheeks and tugged, whispering, \"Come up here baby.\"\n\nShe didn't know what I wanted, but slid up until she had her knees almost under my armpits, and her pussy was just a few inches from my face. But when I slowly pulled, sliding her up even closer, she began to get the idea. And when she was just and inch or so from my chin I suddenly raised my head and flicked my tongue out, touching her glistening pussy lips. \"OH!\" she exclaimed and jumped visibly. \"Oh my God baby!\" \n\nI pulled her the last inch to me and slowly ran my tongue the length of her slit, and I could feel her body shuddering and shaking. I tasted her sweet wetness as she moaned and grabbed my head with both hands. She was suddenly gasping, chest heaving, and she lifted up and lowered her pussy directly onto my mouth. \"She gasped, \"If you really want to devour me, I'll help you!\" \n\nI was in heaven as I rubbed my face into her beautiful red curls, while my tongue slid inside her, swirling as I drank the creamy juices flowing from her open cunt. At first she was timid, not knowing what to do or how to react, but the raw passion and lust quickly overcame her and she ground against my face, feeding me as my lips and tongue ravaged her cunt and pussy. Her hands had a tight grip on my head, pulling me even tighter against her so that I had to struggle to breathe. \n\nI slid my tongue up the slit between her wet, swollen lips and found the tiny nub peeking out from the hood of her clit and started gentle circles against it with my tongue's tip. She jumped again when I touched it, as my hands digging into her sweet ass cheeks held her against me, then she began to gasp and moan continually when she could not escape the intense sensation. As the little bud swelled larger I sucked on it, my tongue massaging it as my lips held it captive. She suddenly moved her hands from my hair and grabbed the headboard, using it for balance and to grind herself down on my face even harder. \n\nShe was gasping, almost sobbing with the intensity of the sensation she had never known before, and she was sporadically gasping out disconnected words, simple reflections of what she was feeling. \"Oh God!... Damn, damn, damn... Oh God Davy!... Ohhhhhhhhhhh... Davy I... Ohhhhhhhh FUCK!\"\n\nIf my mouth were not jammed against her dripping, squirming pussy I might have laughed, because I had never heard that word from her before, didn't even know if she knew it. But it was a major turn-on, showing me the strength of her passion as her body gyrated, shuddered and shook. \n\nHer little cries got louder, and her breath was coming in ragged gasps, punctuated by her moans and incoherent phrases. I felt her hips start to push faster, and her entire body was in motion. I glanced up and saw that she had pulled her hands from the headboard and had the tips of both nipples in her fingers. When I rammed my tongue back into her cunt she bucked against me, fucking my mouth, and her creamy juices were flowing down my chin. I kissed, nipped and licked my way back to her clit and sucked it in again, this time grinding my tongue against the hard swollen bud. \n\nSuddenly she grabbed my head again and rammed herself against my face, grinding hard. And she squealed as an orgasm suddenly shot through her, forcing her hips to thrust back and forth like a piston as she came, her cum covering my face before it dripped onto my chest. She was gasping, moaning, crying all at once, unable to control her reactions. I had no chance of breathing she had me buried so deeply in her pussy, and held my breath, hoping to wait it out. \n\nAt the last moment she realized she had a vice grip on my head and suddenly let go, pushing back at the same time. My chest was heaving, between her weight on me and my long lack of breath, but I raised my cum-covered face to her and smiled, happy that I was able to give her what might have been the second real orgasm of her life. She slid off of me and fell onto the bed at my side, gasping out, \"Oh baby, my God, what did you do to me?\"\n\nShe took my face gently in both hands and kissed me hard, ignoring the remnants of her cum still covering me. I put my arms around her and held her, softly running my hands over her as I enjoyed the kiss. When she calmed down she was sighing and moaning softly, little aftershocks still going though her body. But when she snuggled against me, she felt my cock, still swollen and stiff, press against her. \"Oh my God Dave, I forgot about you!\" she gasped. \n\nShe pushed up away from me and turned, reaching out and grasping my shaft and giving it a squeeze. \"Damn! He gets so big and hard, how does that fit inside of me?\" she whispered, as she started to slide her hand up and down. \n\nI giggled, gave her a smile and said, \"Very nicely! Don't you agree?\"\n\nShe leaned over and kissed the tip. \"Oh yes! He felt wonderful! I just never realized I could...\" She was about to cover it with her mouth when she suddenly looked up and said, \"Is it all right? Do you mind?\"\n\nThis time I laughed and said, \"Oh Florie! That's one of the most wonderful things you can do for me. Believe me, it's more than all right any time you want! Remember, this pleasure definitely goes both ways, and one of the best parts is being able to please each other.\"\n\n\"Mmmmmmm,\" she sighed, as her lips covered the tip, and I gasped as I felt her tongue swirling around. My hips lifted in response, and when I pushed in a little farther she quickly got the message. Her head started moving slowly up and down, taking me a little deeper each time as she got my shaft wetter and wetter. I was gasping and sighing, loving the sensations as she tightened her lips and pressed me in all the way to the back of her mouth. When she started to move a little faster, head bobbing up and down I began to shudder, my hips rolling harder and starting to fuck her mouth. She slid her lips off me long enough to giggle, \"You REALLY like this, don't you!\" \n\n\"Uhhuh,\" I gasped with a big smile, \"Would you like to try it a little different way?\"\n\n\"Of course, baby!\"\n\n\"Get off the bed and kneel on the carpet honey. And remember if you don't like this, you don't have to do it.\"\n\nShe quickly did as told, and I followed her, standing and running my hands through her beautiful hair, then grasping my hard cock and rubbing the tip lightly along her lips. Her eyes smiled up at me as she opened her mouth and sucked me in. I held her head with both hands as I gently slid my cock into her mouth until I felt it touch the back, then started to slowly fuck her lips. She tightened them around me and I could see her cheeks suck in each time my cock slid into her mouth. As I started to thrust faster and harder, my hips rolling, she put her hands around my thighs and started pulling me in. \n\nHer mouth was full of saliva and my shaft was dripping wet as we found a steady rhythm and rocked together. Both of us were watching my wet and shiny swollen shaft slide in and out of her lips. My cock was throbbing and my legs were shaking from the sheer pleasure. Suddenly I felt her hands tighten on my thighs, and when I thrust into her mouth she held me deep inside. Then she pushed forward, trying to take the last few inches of my cock. I felt the tip slip into her throat and slide almost all the way down, but almost at once, she gagged and had to quickly pull back, gasping. \n\n\"Davy, does that feel good to you when you slide down my throat?\" she asked, looking serious.\n\n\"Not good, wonderful!\" I laughed, \"but I don't want it to hurt you honey.\"\n\n\"Baby, I love having your cock in my mouth, and if you like it too, I want to make it as good as I can for you.\"\n\nImmediately she swallowed my cock again, and when it reached her throat, pressed forward hard. We both gasped as her lips suddenly were surrounded by my pubic hair as they pressed against my groin. She held on for a few seconds, her eyes wide, and I could feel her throat contracting around me. But then she pushed back hard, coughing and sputtering as my cock slipped from her lips. \"Oh God baby, that makes me gag so bad, but I love having all of you in me!\" she gasped.\n\n\"No more than I do Florie! Tell you what, you can practice any time you want.\"\n\n\"Dave, right now I feel so... so hot for you that it might be pretty often.\"\n\nI laughed, \"Sounds good to me, and what you feel is usually referred to as \"being horny\". And I'm not surprised after all the years you've gone without.\"\n\nWith that she slipped her lips over my cock again and slowly slid down. She moved more slowly now, long strokes, enjoying the feeling of my cock in her mouth, watching the expression on my face and listening to the gasps and moans she was eliciting from me. Before long she was drooling from the corners of her mouth. \n\nSuddenly she pulled back and rammed down on me again, taking me in her throat once more. But this time I grabbed her head and held her there for a few seconds, until I could see she really needed to come up for air. \"Oh my God! She gasped. \"Honey I must be weird, but I love it when your make me take your cock like that. And I think it even feels better!\"\n\nI reached down and pulled her up to me, kissing her wet drooly face. My cock was throbbing so hard, I only wanted one thing now. \"Florie, I love it when you do that, it feels wonderful, but right now I have a better idea. I climbed back on the bed and put my arms out to her. She quickly joined me and I wrapped her tight, running my hands up and down her body. I whispered in her ear, \"Honey, I want you, now!\" and kissed her hard and deep, ramming my tongue into her mouth. She ground against me and I knew she felt the same thing. \n\nI whispered to her, \"It's your turn now, and time to learn!\" and reached to the night stand for another condom. She took it out of the foil packet and stared at it. \n\n\"What... what do I do with it...? I mean, how...?\"\n\n\"You unroll it onto me honey, the little bubble pointing up. But there's two ways you can do it. Place it over my cock and push it down the sides with your fingers or...\"\n\n\"Or what?\" she said, wide-eyed.\n\n\"Put the little bubble in you mouth and suck the condom against your mouth. Then put it over my cock head and push it down with your lips!\" I laughed at the shocked expression on her face, but when she realized I wasn't kidding she giggled, \"Oh! I like that that one much better!\"\n\nShe put her hand on my chest and pushed me down on the bed. Then she slipped in between my legs, and suddenly discovered... my balls! She tentatively put her hand under them and lifted gently, squeezing lightly. She smiled and bent to kiss them, first one side, then the other. And when she lifted her head again she continued to fondle them with one hand as she put the condom to her lips with the other, doing just as instructed. Then she bent over again, grasping my cock as she pressed the rubber against my tip. And slowly she pushed down, the condom unrolling as my sheathed cock filled her mouth. When she got as far as she could go she used her fingers to push it down the last little bit, then sat up triumphantly. \"How's that?\" she said with a big smile. \n\n\"Oh God baby, that was wonderful! You're wonderful!\" I was shaking at the feeling of the condom sliding over me in her mouth and the erotic sight of her doing it. \n\nI was hoping she wouldn't be sore this time, but figured we better not do anything fancy, and put my arms out to her. She fell into them and I kissed her long and hard, my hands running over her body. Then I rolled over on top of her and smiled down as I took both breasts in my hands, massaging them as she gasped. I caught the tips in my fingers and teased, and in a few moments she gasped out, \"Oh Davy, please... please... FUCK me now! I want you inside of me!\"\n\nKneeling between her legs I ran my hands up and down her thighs, outsides, then tops, and finally the soft smooth sensitive insides. She bent her knees, spread her legs and lay gasping and moaning, looking up at me. I ran my thumbs up and down the creases of her legs, then lightly stroked her already-swollen and open lips with my fingertips. She was already soaking wet, and her hips began to lift, rolling slowly. Slipping a hand between her legs I slipped the tip of one finger into her tight wetness and she gasped, eyes wide, staring at me. Slowly I pushed it in till my hand pressed against her lips, then started slowly stroking in and out. \n\nShe moaned, eyes closed, head back as I gently finger fucked her, little by little moving harder and faster. \"Oh God Davy, that feels so good!\" she gasped, her hips moving in time with my hand. \n\nShe was so wet her creamy juice was running over my hand and I decided to try a second finger. She groaned as I slipped it inside her, but her hips lifted hard, forcing it deeper. Stroking slower again, I gently used my other hand to lightly rub her clit. She jumped and gasped when I touched her, but soon was lifting her pussy, trying to take my fingers deeper and press against my other hand, all at the same time. She was breathing deeply, gasping, moaning and sighing, and I could feel her body shuddering. I knew she would cum for me if I continued, but my own need was too great, and I pulled my hand away, then pushed her legs wide. \n\nShe stared up at me and begged, \"Please Davy, please fuck me now! I want to watch you put it in me!\" As I grasped my cock, she lifted her head and watched as I pressed the tip against her. When she felt it touch her she lifted her hips and gasped. \"OH\" as she forced the tip inside herself. I loved how she was becoming bolder and had learned what she liked and wanted, as it increased both her pleasure and mine. I suspected it wouldn't be long before she made up for all those years she'd missed. \n\nI leaned forward over her, thrusting with my hips and slowly sliding deeper and deeper. She was so wet my cock inside its sheath slid easily, even though she was incredibly tight. This time there was no impediment, and after pulling back once or twice, I was soon buried in her. She had closed her eyes, her hands little balls at her sides, but as she felt my body press against hers she looked up at me and we smiled at each other. Her chest was heaving, giving away her excitement and nervousness, but I felt her hips lift impatiently.\n\nI giggled, \"Ok baby, me too!\" and straightened up, putting my hands on her hips. I pulled back slowly, but as soon as I pressed again her hips matched mine, pushing until she had all of me again. Moving together, our pace rapidly quickened, and soon our bodies were lightly slapping against each other. Her head was back, eyes closed, and she was gasping, but she continually whispered, \"Oh God, baby, that's good, oh yessssssss, do it! Oh baby, oh Dave!\" and the smile on her face left no doubt. ",
        "As I moved a little faster and harder I whispered back, \"Come on baby, stay with me, oh my God, you're amazing!\"\n\nOur bodies were slapping hard, wet and loud, as we challenged each other. Her juices were flowing continually, dripping down over her ass onto the sheets, and she had opened up just enough to feel wonderful, still providing plenty of pressure against the condom. If it had not been for that, this might have been the best sex of my life, not because of what we were doing, but because we were enjoying each other so much. I hoped we could do something about that soon. \n\nShe began to moan and cry, and her hips were lifting harder with every thrust. Realizing she was close I leaned over her again and began to ram my cock into her hard, deep and fast. Her body was shaking with every impact and soon the bed followed suit, tapping against the wall. We were both gasping for breath, and I had sweat running from my forehead to my chin and dripping on her, leaving shiny trails over her breasts. She grasped both nipples with wet fingers and began pulling and twisting. Her hips were now sporadically bucking, and her feet were sliding back and forth over sheets as her little cries became louder and higher pitched. \n\nI gasped out to her, \"Come on baby, give it to me, cum for me Florie!\" And I started slamming my cock into her with long hard strokes pounding her into the mattress with each one. I put my hands down at her sides, leaning on them for support, and she grabbed my arms, using them for leverage as she continued to pump her hips, her body writhing on the bed. Suddenly she gave a loud squeal, followed by a series of short, breathless high pitched squeaks and finally a guttural scream. I felt her cunt clamp down on me as her body heaved with a monumental orgasm, her cum flowing out around my cock as I kept it buried in her. I was shuddering, but managed to hold back, and when the waves turned to ripples in her body I started stroking slowly and gently again. \n\nHer eyes opened and she smiled at me, whispering, \"Oh Davy, that was soooooooo good, oh baby!\" Her hips started rocking with me again but in a moment she said, \"Davy, can I be on top this time?\"\n\nI giggled, not having known she even realized she could do that, but said, \"Of course, honey, I'd love that!\"\n\nWithout pulling back I laid down on her, slipping my arms under her and then rolling till she was on top. She gave me a long grinding kiss, her breasts crushed against me, then put her hands on my chest, knees at my sides, and pushed herself up, settling back on my cock. She leaned slowly forward, then back again and gasped, \"Oh God, that feels good!\"\n\nI whispered, \"Yes you do, honey.\"\n\nShe began rocking slowly, getting used to it, and once I had to help her put my cock back in. Soon she was moving faster, moaning softly with every stroke. She was moving easily, eyes closed, taking deep gasping breaths. I watched, first my throbbing-hard cock sliding in and out of her, then her beautiful breasts, swaying back and forth over me. I reached up and took them both in my hands, palming them, and she gasped. I just held them, not moving or squeezing, but her motion caused the nipples to grind against my palms. She opened her eyes and looked at me, \"Ohhhhhhh, baby! Damn, that feels sooo good!\" and she gave a long moan of pleasure. \n\nHer breathing deepened and she started rocking faster, slapping down against my body harder. I could feel her wetness, more with every stroke, and the wet sounds slowly got louder and came more quickly. I began kneading her breasts and her head went back as she was moaning and sighing with every thrust. Pulling my knees up behind her, I started rolling my hips, thrusting in time with her, and she grunted as our bodies met, now slapping hard together. I could feel her shuddering, and a sheen of sweat formed on her face. \n\nI whispered to her between my own gasps for breath, \"Come on Florie, fuck me hard, I want to watch you cum for me!\"\n\nShe seemed to take that as permission or guidance, perhaps, and started ramming herself down on me, her body rocking hard and fast, sweat now streaming down her cheeks. I matched her pace, slamming my cock into her as she came back against me, pounding against her ass. Even with the condom my cock was on fire, and I was shuddering, moaning with the pleasure she was giving me. I moved my fingertips to her nipples, squeezing, then pulling and twisting. Her eyes opened wide, staring at me. Between clenched teeth she gasped, \"Oh my God!\"\n\nShe almost lost control, slamming and pounding down against me, her moans now loud cries punctuating every thrust. Suddenly she sat straight up, slapping down onto me, a look of amazement or awe in her eyes. In a hoarse, high voice she squealed, \"Oh my God! Daveeeeeeeeey, oh my God!!!\" And she screamed. \n\nI felt a hot flood of her cum pour over me around my cock, and when she contracted around me with a vise grip I shuddered and gasped a sudden loud \"OHHHhhhhhhh\". MY hips bucked with such force I lifted her with them and began spurting, thrusting, filling the condom once more. She ground herself against me, her cunt contracting against my shaft over and over, and she was shaking and sobbing. Her arms refused to hold her, and she collapsed onto my chest.\n\nI was still shaking from my own amazing orgasm, but I wrapped my arms around her, squeezing tight as I kissed her forehead, licking the little drops of sweat from her. She was moaning quietly, \"Baby, baby, baby,\" over and over again. \n\nShe pulled herself up over me, my cock, now soft in its plastic, cum-filled sheath, sliding from her. Wrapping both arms tightly around my neck, she locked her lips on mine for a long passionate but tender kiss. Then she nestled her head against my shoulder and whispered in my ear, \"Oh Davy, I don't believe this! If I ever had an orgasm before it was when I touched myself to relieve the need, the pressure. But it was nothing like what has been happening with you. NOTHING! I had no idea it could be like this, that ANYTHING could be like this!\" She kissed me softly on the neck, and it sounded like she was purring. \n\nFinally, she slid off of me, to my side. I reached down and finally removed the filled condom, then turned to her for another long kiss. It was the middle of the night, 4 AM, and we both soon became drowsy again, sharing more little kisses as we both drifted off to sleep. \n\nWhen I woke again pale light was coming in the window. 7 AM. She still had one arm thrown across my chest and was breathing softly into my ear. When I gently kissed her shoulder, she stirred. She mumbled into my ear, \"Davy,\" confirming that it was me, that I was there. \"Mmmmmmmmmm\" she sighed as I ran a hand lightly over her body, and her hand tightened against my side. \n\nLazily she crawled up onto my chest and smiled down at me before she lowered her head for a kiss. It started gently, our lips pressing lightly and moving slowly. Soon our tongue tips were playing behind her lips, saying good morning. I put both arms around her and squeezed her to me tightly, one of her breasts crushed against my chest.\n\n\"Davy, can you feel me shaking?\" she whispered in between kisses. I'm so excited. This is the first day of my life I've ever woken up with a man in my bed, holding me. And oh my God, it feels sooo good! YOU feel so good!\" As I felt her warm body against me and her soft, smooth skin under my hands as they slid over her, I could only moan with satisfaction in reply. \n\nI covered her with little kisses, loving the feeling of her body moving against mine. But I thought of another way to feel that, too. I whispered in her ear, \"Florie, would you like to take a shower. With me?\" She was silent and still for a moment, and I knew she was considering it, picturing it. \n\n\"Oh my God!\" she said suddenly and got up from the bed, grabbing my hand and pulling me with her. When we reached the bathroom she started the shower and turned to me as I took her in my arms. Our lips locked and she pressed her body against me and squirmed as we waited for the water to warm. When steam came from the door I picked her up and lifted her into the tub, never taking my hands from her as I followed. She got the water just right and pressed against me again, grinding her wet, slippery body against mine as it poured over us. God she felt wonderful as my hands slid over her and our bodies slid against each other as our tongues played. When she moaned into my mouth I answered her, letting her know it felt just as good to me. \n\nI slipped a hand between us and found a slippery breast, my hand squeezing and sliding as my fingertips teased the wet nipple. When her mouth slipped from mine she gasped, \"Oh my God, Davy, oh my God, I love it, I love it! She arched her breast into my hand and her entire body ground against me. \n\nBut a moment later I felt her hand grasp my cock and squeeze tight, then start to slide up and down the length of its wet hardness. My hand moved faster and harder, kneading and teasing her breast, and her fingers on my cock responded. We moaned and gasped into each others mouths, our tongues fighting a battle deep in hers. I could feel that her legs were shaking, but then I realized, mine were too. \n\nShe pulled her head back from me and gave me a big smile, then wordlessly, started to kiss her way down my body, from my chin, to my throat to my chest. She played with my nipples for a moment, then moved on, her lips and tongue sliding slowly down my stomach and detouring into my belly button as I gasped and shivered. She knelt on the rubber pad, and looked up at me, a glowing smile on her face as she grasped my cock in both hands. \n\nShe held it at the base with one hand and used the other to stroke me slowly, her hand squeezing tightly. Leaning forward, she licked the tip, swirling her tongue around it as I jumped and gasped and moaned. Slowly her lips slid over the head, then locked behind it, and she sucked hard, as her tongue continued its sweet torture. I was shuddering as I put my hands on her head and gently urged her to take more of me, and immediately her lips started sliding down my shaft. She bobbed in and out easily for a few moments, her tight lips feeling wonderful, and my cock started to tingle and throb. \n\nBut then, she grasped my thighs with both hands, as she pushed hard, and I felt my cock slide into her throat. I was careful not to force her, but her eyes were looking up at me as she held still, my cock almost all the way in. When she finally pulled back she was gasping, her mouth drooling, but she looked up and said, over the rush of the water, \"Baby, please, help me, make me take it, I want to feel all of you inside of me.\" \n\nShe bobbed back and forth again, but when I felt her hands tighten against my thighs I pulled gently against her head, not stopping till her lips were nestled against my body. I was gasping at the sheer pleasure, and I could feel her throat contracting, trying to swallow me, but her eyes showed only a smile, and when I lessened the pressure of my hands she did not try to pull back until she had to have a breath. \"Oh God Florie,\" I gasped, \"that's so amazing, it feels so fucking good!\" She lunged forward again, and my hands didn't even have time to react, as she took all of me in one gulp, swallowing me whole. \n\nShe was making little slurping sounds, her saliva dripping from her mouth around my cock, but she started bobbing her head back and forth, fucking my cock with short fast strokes. When she pulled back again, gasping for breath, she took my cock in one hand, rubbing it slowly as she stared at it, admiring it. I was shuddering, legs shaking, cock tingling with one delicious sensation after another. I had never felt anything like it, and I knew I wouldn't be able to withstand much more. \n\nShe leaned forward again, slowly this time, and I watched, amazed at the sight, as my cock slid through her lips inch by inch, and I could feel her throat swallowing me. When her lips pressed against me she closed her eyes and pushed hard, taking the last millimeter, and I could feel her chin, pressing against my balls. Her tongue was swirling around my shaft, stroking, teasing, and I began to worry that my legs might not hold me. When she slid back again I brushed over her wet hair with my hand and gasped, \"Florie, I can't take much more, you better...\"\n\nBefore I finished she lunged forward again, this time taking me hard and fast, and when her lips touched me she started bobbing back and forth with hard strokes the length of my cock. I groaned and gasped, my hands tightening over her head, and suddenly my body surrendered, unable to fight any longer. With I loud moan, then a growl, my hips bucked against her lips and I began to cum directly down her throat. I felt her jump and took my hands away as my cum continued to spurt with every shaky thrust of my hips. But she pulled back only far enough to capture my cum in her mouth, and in moments it was full, cum dribbling from her lips. She grasped my shaft in her fist, and held me until I finally got control and when the torrent had ended she squeezed hard, running her hand slowly up and down until she had milked the last drop from me. \n\nWhen she finally allowed me to slide from her lips she looked up at me with shining eyes, and almost in unison we gasped, \"Oh my God, oh my God, oh my God!\"\n\nMy legs were still shaking, and I was afraid to try and pull her up, so I knelt down in front of her, put my arms around her neck and pulled her to me. She put her arms around my shoulders and we leaned forward till our foreheads touched, both motionless under the hot flood, the only sounds the hiss and splatter of the water. \n\nI was so thoroughly satisfied I didn't want to move, but the tub got hard under our knees, and I forced myself to stand again, giving her my hands so she could pull herself up to me. I wrapped my arms around her and said softly, \"Florie, you are just amazing!\"\n\n\"And you,\" she giggled, \"are delicious!\"\n\nI gave her a little swat and she wiggled her ass, grinding herself against my flaccid cock. Thinking we could be more comfortable elsewhere, I shut off the water and reached out for a couple of towels. After we toweled off I helped her dry her hair a bit, and gave her a hand out of the tub. \n\nI scooped her up in my arms and headed for the bedroom, intending to take her straight to the bed. But it was broad daylight now, and her room well lit, and I suddenly noticed two things. The walls were a giant mural of a flower garden, clumps of different flowers in profusion, painted around a stone wall and a white picket fence. I stopped in my tracks, amazed at the detail and accuracy of the painting. She had her arms around my neck, clinging to me, and she said softly, \"It took me a year, I have a lot of time in the evenings.\" \n\nThe second thing I noticed was in the corner, her closet door. It had a giant, full length and width mirror on it! On the floor in front was an exercise mat, and she said, \"That's where I work out a little. But sometimes I just laid there and wondered why no one wanted me.\"\n\nI set her on her feet on the mat, facing the mirror and stood behind her, wrapping one arm tightly below her breasts and one arm across her stomach, pulling her back against me. Her small body was outlined by mine, except for her hips. \"Watch,\" I whispered as I began to kiss, lick and nip across the back of her neck and her shoulders, loving it when she gasped and squirmed in my grasp. \n\nI slid my hand up and captured her breast, squeezing and kneading, listening to her soft moans. When my fingertips found her nipple and started stroking, squeezing, pulling and twisting, her back arched to my hand and her head came back. She pushed hard against my body and my marauding mouth, gasping and moaning softly, \"Oh God, oh my God, oh my God, oh Davyyyyyyyy!\"\n\n\"What do you think now? Does anyone want you?\" I whispered in her ear.\n\nShe only whimpered in reply, but she was writhing in my hands, her ass pressed back hard against me. I wasn't surprised when I felt my cock stir slightly, being massaged by her soft sweet cheeks, and I knew she could feel it too. \n\nMy other hand slid down over her beautiful furry red pelt, then covered her pussy, my fingers cupping it and squeezing as I pulled her back against me. I pressed my hips forward, grinding against her, my rapidly hardening cock pressing into the crease of her ass. Her chest was heaving and she was gasping and she shut her eyes. But I whispered, \"No Florie, keep them open, look.\"\n\nMy fingertips began stroking her lips, and she moaned and gasped, her hips now rolling, pressing forward against my hand, then back against my hard cock, which slid up and down the crease between her cheeks as she moved. My other hand pulled harder on her swollen nipple, and she shuddered and whimpered with every touch. \"Look Florie, that beautiful sexual animal in my arms is you. The woman that is driving me crazy with desire every time I touch her or even see her is you! You are as desirable as any woman I've ever known!\"\n\nAnd I ravaged her neck and shoulders with my mouth, kissing and licking, allowing myself to mark her as she gave no resistance, even pressing against my lips and moaning, her entire body gyrating in my arms. Somehow I wanted her to be able to see my desire, give her proof of what she made me feel. \n\nShe was trembling, shaking so hard I realized she was having trouble standing, but I tightened my arms around her, holding her as I slipped two fingers inside her. With a loud cry her hips bucked forward, taking them to the hilt in one thrust. Her eyes closed and squeezed tight. But they opened again when I began thrusting my fingers into her dripping cunt, as she was unable to resist the erotic sight in front of her. Each stroke brought a little cry from her, and her hips were bucking, even in my vise-like grip. The sounds of our gasps and moans and deep ragged breathing filled the corner of the room. \n\nWhen I moved even faster, my fingers pistoning in and out of her, she gasped and then let out a long, loud wail, \"Ooooooooooooooo DAVYYYYYYYYYYYYYYYYYYY!! Suddenly her hips rammed against my hand and if I hadn't held her she would have fallen, as her creamy cum poured out over my fingers and hand. Her entire body was out of control, writhing in my grip, little cries following one another, over and over. I spun her around and mashed my body against hers, my lips claiming hers as they ground hard against each other. Her chest was still heaving, and she finally pulled back, a look of total disbelief in her eyes. \n\nMy legs were shaking too, but I picked her up and lunged for the bed, and she squealed when I almost threw her into the middle of it. I grabbed a condom from the nightstand, tore it open and pushed it on, almost in one motion, before climbing onto the bed after her. I grabbed both her ankles and pushed her legs back over her head as I knelt and leaned forward, and we both watched as my straining cock found her entrance, and I pushed, hard! She let out a cry as I pushed myself all the way into her with one long stroke, and I groaned as I felt her incredible tightness. I was so aroused that I almost came at once when I felt her contract and clamp down even harder on me. \n\nI managed to control myself enough to slide slowly in and out of her a few times, until I felt her relax, then immediately began ramming my cock into her hard and deep, her body bouncing helplessly with every thrust. I hardly heard her screaming \"Oh my god oh my God\" over and over as I pounded into her. But I felt her hips churning wildly underneath me as she started ramming herself against me, meeting my savage thrusts. That pushed me beyond all reason, and I pounded even harder, the loud slap of our bodies echoing from the next room and the bed whacking hard against the wall. ",
        "When she screamed and clamped around me I exploded into the condom without warning, my hips continuing to pump until I was drained. Only then did I realize what I had just done, and my heart broke when I realized she was sobbing, crying almost hysterically. Sure I must have hurt her, I fell onto the bed, grabbing her into my arms and pulling her against me, crying, \"NO NO NO, oh baby, ohmygod, noooooooo, noooooooooo!\"\n\nBut between gasps and sobs she managed to whisper hoarsely, \"Davy, Davy, its ok! I'm ok baby, nothing's wrong!\"\n\nI was running my fingers through her still-damp hair, stroking her face and kissing her everywhere, whispering, \"Oh baby, I'm sorry, I'm so sorry!\" still distraught that I had been so rough with her. \n\nWhen her chest stopped heaving and she caught her breath she took my head in both hands and kissed me - hard - grinding her lips against mine. Then she pulled back and looked me right in the eyes. \"Davy, baby, everything is fine, you didn't do anything wrong. I'm not hurt. I was just scared. But not of you. Of me. Of us! I never knew, never believed that I could arouse anyone that much! Or, oh my God baby, that I could be aroused like that! I felt it just like you! And Davy,\" she said, in a soft, almost whimpering voice, \"In the last moments before we came, I felt totally possessed. YOU OWNED ME! I was a willing prisoner in your grasp. You could have done ANYTHING with me. But what really scared me was... I LOVED IT! I WANTED IT! \n\nWe lay still for a moment, my fingers softly trailing over her skin, then she giggled, \"If you made me stand in front of that mirror one more minute I just don't know what would have happened!\" And in a while, I might be sore!\"\n\nWith a big sigh of relief I tightened my arms around her and kissed her again, this time a long, lingering kiss, our lips, tongues and bodies all in motion. I understood what she had said. I had never felt that level of raw passion before either. It was intensely erotic, arousing, exciting. But I felt I had been totally out of control. It WAS scary. Then I realized, my soft cock was still wearing the condom. At least, I was not TOTALLY out of control!\n\nWe snuggled together for a while, both relieved that everything was all right, Florie stretched and gave me a little kiss, then said, \"I don't want to leave our bed, but I have to open the shop from 9 to 1. And I have to send out your bouquets!\" She giggled. \n\nIt was 8:30, and after a long tender kiss we both got up. I found my clothes and Florie started to put her hair up in a bun, but I told her, \"No way! And when she dug out a baggy sweatshirt I told her I was going to burn it! She found a nice businesslike blouse and a pair of black slacks. And a bra. \n\nBut when she was dressed, I suddenly felt a twinge of jealousy. She looked wonderful, and I wasn't sure I wanted anyone else to see her. But I realized, I had opened up a new life for her, one she deserved. And I already had her trust, her gratitude, her affection, and her desire, and I was the only one she'd ever known. I had no reason to worry. I already had her, she was mine. The ball was in my court. And I shuddered as my mind and my body together instantly told me I had to make the most of it. I wanted her. \n\nI had made a pot of coffee and we shared a cup before she had to open the shop. I told her I would have to go get my customer list for the delivery addresses for the flowers and run a few errands, but I'd be back before long. We stood, and I took her in my arms for a long last kiss, both of us breathing hard, hands running over each other. She whispered, \"Hurry back, Davy, I'm going to miss you. But more than anything, please be here after the last customer leaves!\"\n\nI whispered back, \"Florie, I plan on snapping the lock behind us!\" "
    ],
    "authorname": "Tomcatfive",
    "tags": [
        "female virgin",
        "her first time",
        "untouched",
        "deep throat",
        "shower",
        "condom",
        "innocent"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/breast-man-chronicles-ch-02"
}