{
    "title": "How to Orally Pleasure a Man",
    "pages": [
        "This is a bit stream of consciousness and so it's not organized at all but I think you'll love reading it anyway. \n\nMost important rule of a blowjob is Wetness wetness wetness. \n\nOk?\n\nWetness is very important. \n\nWatch some videos online and see all the available different techniques. \n\nThere's hundreds of them. \n\nThey all work. \n\nEveryone's different so don't worry about which techniques may or may not work. Try as many as you like in each session you are intimate. \n\nHere are some favorites:\n\nWith cock in mouth getting sucked up and down or keeping cock bottomed out in your throat, do this - both hands are scratching balls and scrotum and below (taint), in the middle and on both sides - this feels AWESOME!!\n\nJust make sure area is nice and super wet. You can lick it or spit on it or apply it to your hand and then to the area. Spit lube cream lotion oil, whatever you have, remember there is no wrong lubricant and there is no wrong way.\n\nSome guys want your fingertip or a knuckle or the whole finger or a toy in their butt and some don't. It's a very sensitive area so definitely explore and check reactions. Both you and he may be pleasantly surprised. \n\nCaress thighs and the whole general area or run fingernails on the skin - oooh shiver :-)\n\nScratch balls all around especially on the sides at the seams where legs meet. \n\nAll up and down the sides and then the front of the sack. \n\nThey may even like it when you pinch some scrotum skin and pull it outwards a little bit and / or just rub it between your fingertips a little roughly or twist it.\n\nThen tiny little bites all over the scrotum to make him feel fantastic. \n\nAll around the anus with licks sucking-kisses nibbles is oh so damn good. \n\nIf he's amenable, some gentle prostate massage is usually welcome. Some guys want it hard and fast. \n\nGive them what's they want.\n\nSo yeah, the whole damn area from asshole to perineum to scrotum to balls to base of cock to shaft to head/frenulum should be wet and stroked scratched kissed licked nibbled on bitten chewed upon sucked pulled pushed twisted pinched slurped and be snacked upon.\n\nThere should be some moaning on your side too so they can tell you are enjoying doing this for them. \n\nYou making the right noises drives men wild and many times makes the whole session last a lot less longer.\n\nUse your throat - take it in till his cockhead hits your throat and use your throat to squeeze that head and just contract around it if you can. \n\nAlternatively do short strokes making the head hit your throat as that may make him cum. \n\nWhen sucking, sometimes go all the way down and all the way up instead of just doing short sucks halfway or just sucking the head.\n\nIt's great.\n\nSometime with full strokes, once he is all the way in, stay down there for a bit feeling his full cock in your mouth. \n\nSome advanced gifted women can actually stick out their tongue there and lick balls while his cock is all the way in. Try it.\n\nIt's frickin' amazing!!\n\nWhen using your hands, use a lot of lube or oil or spit and milk the cock with one hand or with both hands. \n\nEither going up or going down, but not both, usually slowly and sensuously. Try different pressures.\n\nIt's absolutely delightful to men.\n\nTry one hand at the base of the cock in a V shape (two fingers) or encircling (thumb and finger)- this is usually very nice and stabilizing and also feels good as the other hand slowly milks.\n\nSometimes one hand on top as a roof just putting pressure on the cockhead as the other milks feels just heavenly. \n\nSometimes try this: make a cage of one hand with four fingers down and use it up and down hitting cockhead with the palm. Up and down at a slow to medium speed. Then as you go along, try speeding up and see his reaction. Many guys cum from just this. \n\nSometimes just use one hand or twist and play with the head and frenulum with one hand while the other hand strokes shaft and balls. \n\nWhile sucking his cock, take a break and jerk off the cock now and then.\n\nUse different speeds. \n\nUse one hand then the other. \n\nUse different grips regular and then overhand or backwards (thumb down). \n\nDo it while sitting on top of him facing him jerking his cock in front of you towards his face.\n\nOr same position but with his cock behind you and you reaching behind with your hands masturbating him while you watch his face and talk dirty. \n\nOr sit on top Facing away from him with cock in front of you jerking it towards his feet. Or same position but with his cock behind you and you stroking him as you talk about how good it would feel inside you. You can then turn around and look at him as you talk and stroke him. It will drive him wild.\n\nOr sitting behind him encircling him with your arms jacking his hard cock and making him spray his seed all over. One hand can stroke cock while the other caresses stomach or pubes or just play with the balls.\n\nOr laying down in front of him on your stomach worshipping that cock. \n\nOr on your knees sucking that dick for all its worth. \n\nRemember, these are all options available to you as you play and pleasure each other. \n\nSuck it slow Or suck it fast, a little bit or all the way up and down.\n\nSome like to add a twist by turning your mouth on the way up or on the way down or both. \n\nTwist with your hand or your mouth. \n\nAll these options and techniques are good. \n\nSee how he responds and adjust. \n\nSometime surprise him and do what you want. That's very exciting to a man. Just be so damn hungry for it that you don't care what he is doing what he wants what he prefers - it's all about you and your voracious desire.\n\nOther times, serve him - literally do what he wants and make him feel like a king.\n\nSometimes go very very sloooow or choose the opposite and jackhammer it very fast. These two can be used within seconds of each other or you can do only one thing the whole session. Tease him. That's usually very helpful.\n\nWhen getting close to orgasm put into turbo mode until he comes, if he likes that. Or take him to the edge and slow or stop until you're sure he won't come and then start again. \n\nAnyway, if you choose to, when you decide to end it, to put him out of his misery, to stop the beautiful torture, start the last time and then don't stop, until he blows.\n\nPlease TALK DIRTY\n\nMost Guys LOVE that.\n\nWhen he starts to cum, keep doing whatever you are doing and keep going unless he asks you to stop or slow down or let go (very rare). \n\nAlso, swallow every last drop. Men appreciate this attention to detail. \n\nMilk it / suck it / stroke it / push out slowly using hands from balls to head for a minute afterwards as well, unless too sensitive, because there's usually a few more drops in there that you absolutely want. \n\nLet it all come out and take it on the tip of your tongue. \n\nIt's just beautiful. \n\nLook at him, smile big, (maybe naughty, maybe innocently) and thank him. \n\nHe will love it.\n\nDon't try to kiss him unless he is into that. Some guys like it but most guys don't. \n\nAfterwards, you both can cuddle if both like that.\n\nIf he wants it, please bring him some food and drink or let him rest sleep relax etc. \n\nThe after effects are best with no stress no talk no nothing.\n\nJust savor each other and what you have shared. It's so powerful and intimate when there are no distractions.\n\nNow remember, either he will be energized or he will be totally drained and relaxed. \n\nBoth are fine. It happens. Accept whatever it is.\n\nBy the way, this ejaculate sweet or salty or bitter or sour white creamy cum is highly nutritious and has a lot of healing life force energy. \n\nDon't ever waste this energy. \n\nAlways swallow.\n\nIt will only help you in myriad ways.\n\n:-)\n\nThe above essay is all first hand experience that I've had. \n\nThis is how I like to get a blow job / hand job and I usually come screaming and then I laugh for a good twenty seconds or more because it was so fucking great!!\n\nI'm very lucky and I feel extremely grateful.\n\nThank you, all you beautiful amazing giving talented sexy caring sharing ladies. \n\nHappy new year."
    ],
    "authorname": "Intelligentfunguy",
    "tags": [
        "oral",
        "balls",
        "blowjob",
        "suck",
        "blow",
        "sucking cock",
        "jerk",
        "suck dick",
        "swallow",
        "cum"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-orally-pleasure-a-man"
}