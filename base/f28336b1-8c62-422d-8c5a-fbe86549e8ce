{
    "title": "The Designer Pt. 02 Ch. 09",
    "pages": [
        "Author's Note: Thank you for reading and voting. I read every comment and your feedback encourages me to continue this tale. I planned this chapter to be much shorter, but the characters again had other plans. Beware of some character development as Kelly and Alyssa discover more of their powers. Don't worry, we meet back up with Jeremiah, Carmen and Lexi at the end. \n\nThis chapter is told mostly from Alyssa's perspective, and then shifts through different characters at the end. I've added names in the headers to help with the changes. I hope you enjoy! \n\n*****\n\nPast: Alyssa\n\nI enjoyed my shower with Carmen, we were both still buzzing from the jolt of Kelly's power. We were content to just cleanse each other and discuss the day. She was like an open book to me, as she talked about her plans for RV shopping with Lexi and Jeremiah, I also sensed her plans for introducing Jeremiah to more of the dominant-submissive kink that she and Lexi craved.\n\n\"Be careful with, Jeremiah,\" I said, \"I think he'll enjoy your plans, but he's very sensitive about pushing limits, and forcing himself onto others.\"\n\n\"I know, sister,\" Carmen said, \"I have a long plan to bring him along, and Lexi will be patient... or at least she'd better be, or I'll whip her ass...\"\n\nCarmen laughed a low rumble, then shut off the water, and reached for our towels. She tossed one over her damp shoulder and then turned me around, and wrapped a towel around my hair to help it dry, then with the other towel, she dried me off slowly. Her sensuous service to me felt wonderful in the afterglow of our tryst with Kelly. \n\n\"Thank you, Carmen,\" I said, \"You really are a good service slut.\"\n\nCarmen's eyes widened as she grinned at me, \"Mistress, you know me well, and I enjoy being at your service.\"\n\n\"You don't have to call me that, Carmen,\" I said, slightly uncomfortable, I didn't want to assume more power than any of my other sisters, \"We're all equals.\"\n\n\"Excuse me,\" Carmen said quickly, \"That's bullshit. Our family needs structure and hierarchy, we all have our natural strengths and spots. We all serve each other. We can't all be equal, we need J to lead, and you and Kelly are natural tops.\"\n\nI thought about what she'd said. I'd researched enough about BDSM to understand her terms, and was acquiring a growing fascination with the sub-culture. The prevailing literature had sado-masochism listed as a mental disorder, but was being challenged by newer studies that showed an increasing plurality in darker sexual fantasies and preferences. \n\nAs much as Lexi had a preference for the kinky side, I worried that it might become something she would start to obsess over. Jeremiah's clumsy first uses of his power might require some additional adjustments if she became overwhelmed in her pursuit. Carmen's experience in sexual play added a different voice to my concerns. She knew people in BDSM relationships, and she was well adjusted in her own mind regarding this need.\n\n\"It's a natural order, Alyssa,\" Carmen said softly, searching my eyes as I got lost in my thoughts. \"You will see it if you look.\"\n\n\"I trust you, Carmen,\" I said, \"I'd never given it much thought. You are a steady presence in our family. I listen to you and value your views.\"\n\nIf I had been wearing my glasses, I'd have pushed them up my nose. Carmen saw through my words, and licked my cheek, then kissed it.\n\n\"Thank you Doctor,\" she said with a tease in her voice, dropping the timbre to mimic Jeremiah's voice.\n\nShe strode out of the shower and into her closet, still damp from the shower. I slipped into my closet and picked out a comfortable skirt, and sandals. If Kelly had her way, which she often did, we'd be trying on dresses all day. Carmen waltzed out of her closet, her t-shirt stretched across her bosom, and naked below the waist. \n\n\"Um, pants, Carmen,\" I said with a snicker, \"you forgot pants.\"\n\nShe snorted and tossed her duffle bag of sex toys on the bed, then bending over she dug through the collection and pulled out two rubber plugs.\n\n\"I need a favor,\" she said, tossing one in my direction, and digging back through the bag and finding a tub of lube.\n\nI instinctively caught the plug and looked at it. It was molded from heavy rubber and had a weight to it. The base was broad then narrowed to a thin section, then bloomed into the shape of a cone. \n\n\"Um, sure...\" I said walking in her direction. \n\nShe held out the lube and then turned and put her hands on the mattress, pushing her round firm ass in my direction.\n\n\"Put some of that, on that,\" she said pointing at the tube, then the plug in my hand, \"And then press it in here,\" she pulled one of her ass cheeks open and pointed at her sphincter.\n\n\"Oh!,\" I said, understanding, \"I read about this. You want me to put in a butt plug.\"\n\nCarmen shook her head, and leaned forward her chest compressing as she leaned into the mattress. Both of her arms reached back and spread her firm ass cheeks apart, giving me a clear view of the target area. I applied a good dollop of the lube, which seemed excessively cold. I spread it over the tip and along the cone, letting my fingers warm the slick jelly. I pointed the tip into the center of Carmen's muscle, and pressed steadily. \n\nCarmen let out an indulgent moan as I watched her ring-muscle open, the plug plunging into her tight opening. The plug wasn't excessively large, but it took a firm press for it to fully slide into her anus. When the plug reached the base of the cone, her muscles contracted along the bottom, and sealed the plug in place, leaving a black knob. She groaned and purred into the mattress as she let go of her ass and slowly rose. The black knob only slightly showing as she stood and went to find some jeans.\n\n\"Won't that be uncomfortable?\" I asked.\n\n\"That's the point,\" Carmen said, \"I don't care how much it hurts, if I'm going to make Lexi wear one all day, I'm going to wear one too.\"\n\n\"I think thee doth protest too much,\" I said with a smile, heading upstairs to meet Kelly.\n\n\"I'm not protesting at all!!\" Carmen called after me.\n\nKelly was waiting for me at the top of the stairs, \"What is Carmen protesting?\" she asked innocently.\n\n\"Nothing, it's just Carmen\" I said, smiling, \"Are you ready?\"\n\n\"Yes!\" She smiled buzzing with excitement, \"I know I just saw her last night, but I miss my Mommy.\"\n\n\"Mommy?\" I said with a laugh, \"Kelly you're almost 19!\"\n\nKelly blushed and cracked a big grin at me, but stayed silent. \n\nWe got in and she turned on the radio and started singing to a tune. She drove a bit fast, totally comfortable behind the wheel, and started towards the interstate. Her mother's house was about 90 minutes away, and her bubbly personality made the trip go by fast.\n\nKelly was a joy to be with, even if she was a sex demon. I could understand why Carmen could never stay mad at her. She had a natural charm to go along with her natural beauty. To add supernatural allure to the combination seemed unfair to plain girls like myself. Kelly never flaunted it, the way some girls often do, she included me in her thoughts, talking about weddings, and music. She didn't slip back into thinking about this morning, unlike Jeremiah, she didn't obsess over things that had already happened.\n\nTime flew, and before I realized it, she was turning into her parent's drive, and bouncing out of the car to hug her mother who had appeared at the door as soon as we drove up.\n\n\"Hello Alyssa,\" Betsy said, brushing my cheek with a kiss as we hugged. \n\nBetsy was dressed flawlessly, her makeup understated but perfectly applied. I could see where Kelly had gotten her beauty from. The professional business suit, cut to show off her legs, and a blouse that plunged to the top of her cleavage, showing off an odd brown stoned pendant that hung right at the top of her decolletage. \n\n\"I'm so glad you came,\" she said warmly, squeezing my hand until I lifted my eyes to hers. 'Did she realize I was checking her out?\" I wondered as I tried to discern her gaze.\n\n\"I'm happy to spend any time with Kelly,\" I said truthfully, \"Getting to know you better is also high on my to-do list. I never knew my mother well, and well you...\"\n\n\"Yes,\" she smiled brightly, \"I want to learn more about one of the women that stole my daughter's heart!\"\n\nHer words were a bit confusing, mixed with her bright smile. Did she know we were lovers, as well as sisters? I didn't know much about the fundamentalist Mormon plural marriage vows, but I was pretty sure that female-female sex was still a taboo. I tried to scan her thoughts, a slip, since I didn't want to become dependant on my powers to read people. \n\nShe was a blank, I could read nothing from her. I was confused, I was sure I was able to last night, helping Jeremiah heal their turmoil over Kelly's two shocking revelations. She smiled enigmatically as my face shifted from confusion to concentration.\n\n\"Let's get inside,\" she said, slipping her arm inside the crook of my elbow. \"I want to show Kelly some ideas for the wedding, and you have a box of my mother's things to look through.\"\n\nKelly slipped from her mother's grasp and scurried towards the living room, sitting down with a squeal as she opened up the binder her mother had left there. It was a huge 3-ring binder with clippings and pages from magazines glued to various pages. I had a passing thought that certainly someone would write a computer program to simplify such things. Kelly didn't mind the mess, and was instantly captivated.\n\nBetsy pulled me down the hall into her study, where she pointed to a low sofa, and a box full of diaries, about twelve in all. The box also had photo albums, magazines, maps, and other keepsakes from a bygone era. \n\n\"Her diaries start up in the mid-sixties,\" Betsy said, \"She'd left the cult about ten years earlier. The stories are a bit hard to believe, I'm not sure if I believe every word. My mother had a constant weariness to her, like she was beset by demons.\"\n\nBetsy paused, looking at the books, letting that word linger in the air, before turning back to look up at me, \"I couldn't make sense of them,\" she smiled, \"Perhaps you'll have better luck.\"\n\nShe turned to go back to the living room, then turned and looked me square in the eye. \"You're welcome here, Alyssa,\" she said softly, \"I think you will help Kelly as she grows up and becomes a mother.\"\n\nWith that, she left, and I sat down and started reading the first of the diaries. The pages were well preserved, the hand writing a bit rudimentary, but very strict. A hand that someone learned in a school, but never developed their own personal touch. I scanned through a few pages, then a few other random books. The books were filled, and the handwriting developed a style as the years went by. The final books though were rougher, as it was clear her hand started to tremble with age. I whistled, to myself, what a treasure to have such a rich thought history of a loved on.\n\n----------\n\n6/3/1965 - Deborah\n\nI suppose I should write these things down. To purge my sins and my guilt over what I have done. I have no regrets, though I know taking a life is wrong. I have questioned if the lives I took were truly human. Looking back, perhaps they were as corrupt as I, or maybe more so. \n\nIf I accept what I am, who they say I am, then I am already damned. If I dwell on my actions, I'm doubly damned. So I can only look to the light, and hope by writing down my sins, I can purge them and somehow be happy. Live my life for me, and not for any man. Teach my daughter, and hope her fate is better than mine.\n\nSo. The beginning. The awakening, my coming of age and my horrible sin. \n\nI think I need to explain first, what surrounded me. The order had changed after the war. I was a young girl, not quite a teen when peace had come. But I knew enough that our soldiers had left, and died on the beaches in the Pacific, the deserts of Africa, or the cities in Europe. In our small community, we had a dozen widows, and twice as many fatherless children. \n\nMy father had been too old to fight. He was a bitter old man, twice the age of my mother, who doted on him. She was his second wife, his first dying of influenza in the early thirties. I was their first child, a female. His shame of me only grew worse as I grew older. Why wasn't I a male? He had no heir, I was his last, and only child.\n\nHis hate for me simmered as the war drew to a close. Twelve widows meant twelve husbandless wives. The collected elders, most of them were decent, but a few were corrupt. The corrupt, of course, took advantage of the decent, and an edict was made. Widows could be remarried, plural marriages were legal. The sect had always accepted plural marriages as a word of revelation, from their so-called God. But this was different. No discernment, no word of knowledge. The twelve widows were allotted to the heads of the lines, and that was that. \n\nMy father, since he was advanced in age, took one of the older widows, and her young infant son, Jediah. She was a third of his age, ten years younger than my mother. She took her place in his bedroom, and my mother was put out, sharing a room with me. She never complained, her dedication to that old fool was steadfast. No seed was planted in the fertile soil, and soon my father's wrath was again felt by my backside.\n\nI took his hatred in stride. Part of me thought I deserved it, not being male. But as I grew into puberty, I blossomed. My appearance became more comely, my breasts grew and my waist shrunk. My eyes and smile could make even the sternest of men smile. My father's hatred dried up when I looked at him and smiled. He was shocked, and talked with the other elders. \n\nHis line of Baraqiel (his temple name, no one used it in public, to keep true origin of our lines obscured) had largely been associated with the muscle of the sect. They were powerful men, used to getting their way, and if not forcing their way. My father's treatment of me before I grew into womanhood is testament to that. But the lore of the line is that ancient females of the line were powerful seductresses. They called me 'little succubi,' which I didn't understand at the time.\n\nThe elders though confirmed that I had the true blood of the Baraqiel, and I would have an old school ordination as the Baraqiel priestess.\n\nThe didn't know that I had plans for that day. I started to understand what succubi meant, and I waited, biding my time for that day to approach.\n\n------------\n\n\n\nI closed the book, looking for a scrap of paper to hold my place, the pages too precious to dog-ear. I found a photo in the box, a picture of a beautiful blonde woman in the mid-60s, mid-thirties with a voluptuous body that had the familiar allure of Kelly and Betsy. I used the photo to save my place, and wandered back towards the living room.\n\nThe morning's activities still had me aroused, the story of Kelly's grandmother coming of age, confirming our theories of her power. Thinking about her power, and then drifting to think about Carmen, and Lexi, and how Jeremiah would be dealing with their needs. I focused on him for a moment, and with a jolt sudden feeling of lust washed through my flesh. Flicking between my distant lovers I inhaled slowly as I felt a dark power well up, almost feeding on their lust. My nipples hardened in need, and I felt my insides melt. I blinked and returned my focus to my location. Seeing Kelly there, I pushed a thought, a strong suggestion, 'seduce your mother.'\n\nKelly's back stiffened as she received my telepathic message, and with a nod of acceptance, she inhaled slowly. Then I lost my breath, as she pushed her powers out hard, her body pulsing, a light with an inner fire, her flesh glowing. I was awestruck, and my cunt instantly leaked. I looked towards her mother,a feeling a feral grin of lust cross my features. I felt a dark lust overwhelm me, I wanted to possess her, and feed from her emotions.\n\nBetsy sat unaffected by Kelly's glowing aura of sexual energy, and sensing my look she turned and saw me, her face darkening in a frown and an odd recognition. \n\nShe turned back to look at her daughter, who was breathing heavily as my suggestion had kicked off some hidden taboo, a secret desire. Kelly was beginning to ramp up the arousal in the room. I could almost taste the sensation, and licked my lips. I gathered the skirt of my dress in my hands to pull it over my head as I approached the pair.\n\nBetsy, however, still sat calmly, and reached gently to grip Kelly's arm, \"Kelly, stop that right now...\"\n\nAs quickly as Kelly's sexual power bloomed igniting the room, Betsy's touch doused the flame. Kelly slumped back, powerless as her mother held her arm. She looked at her daughter with concern. Betsy then turned to me, her eyebrow raised. I almost screeched in pain as the sexual energy was sucked out of the room. The absence of the energy that I fed upon was palpable. My hands opened, letting my skirt fall back down. I looked as Betsy, my features a mix of frustration, confusion and a dark need I'd never felt before.\n\n\"Alyssa,\" she said quietly, \"Come here, we need to talk.\"\n\nI obeyed instantly, which only added to my confusion. I stepped around the sofa and sat down. Feelings of guilt, shame, arousal, hunger, need, and anger clouded my thoughts. Sitting next to Betsy a semblance of clarity returned, and I reviewed my actions. I couldn't really understand what had prompted me to push that thought to Kelly. I knew I'd felt Jeremiah's lust from a distance, but the thought was unlike me. It felt foreign, and evil, and dark, like something had infected me.\n\n\"I'm so sorry, Betsy,\" I said, lifting my eyes to her, \"I don't know what came over me.\"\n\n\"I do,\" she said, and reached out her hand to grab mine. \n\nI felt a soothing ripple shoot from her being, not from her hand, but from the center of her body. I looked down and the plain brown stone was glowing with a web of golden tendrils. I felt it's power purge my soul of the infectious, evil thoughts. I quieted again, and looked up at her speechless.\n\n\"We are all fallen,\" Betsy said, taking a deep breath, \"Did you not think my mother would have taught me to protect myself?\"\n\n\"Protect from who?\" I asked, confused, \"I don't understand.\"\n\n\"The dark ones, the spirits, the craven,\" Betsy said, using words that surprised me given her whole persona was typical powerful white female executive. \"They hover over my mother's journals like a cloud. I should have expected this, I'm sorry.\"\n\nI felt confusion crease my eyes, as I looked at Betsy. Fallen. Spirits. Craven. Words that struck a chord in my inner being. I felt a mix of revulsion and a attraction. I began to have a theory.\n\n\"Are we of that lineage?\" I asked, trying to understand, what her words meant.\n\n\"Baraqiel, is my line,\" Betsy said, shaking her, and then nodded to Kelly, \"Our line, we are the last two that I know of. But, we are not spirit. We are daughters of the Grigori, the Watchers, fallen angels, halflings. We are not like the dark spirits like you just felt, they can take no physical form. They can only influence flesh with emotions, trying to influence their wills. Drawing them into the darkness.\"\n\nShe closed her eyes, and the glow in the amulet faded, and when she looked up again, she smiled at me, like everything was normal, \"That is if you believe all the ancient mumbo-jumbo.\"\n\nI sat for a moment, stunned. The dark thoughts had fed off my emotional state, and influenced my action in such a perverse manner. I rubbed a hand to my temple, as my thoughts and emotions returned to normal, soothing a dull throb in my head. I looked back up at Betsy, her eyes full of concern, but calm, as she waited for me to respond.\n\n\"With what I've seen the past few months,\" I said, \"I don't know what to believe. I'm not religious at all, I don't believe in a god, other than the universe we've come from.\"",
        "\"Of course there is a God,\" Betsy said, \"but you'll come to your own understanding in time. My mother was sure that God hated her, hated beings like her. With her father, and the cultic teachings of the Priesthood, it would be a surprise if she didn't feel that way.\"\n\nKelly blinked, listening attentively to her mother, but confusion rolling through her eyes as she listened to her mother speak.\n\n\"Kelly you've obviously been using your power,\" she said, trying to help her understand \"I have the same power, though I have only used a few times. My mother protected me from the evil of the Priesthood and the dark spirits that had corrupted their leaders. It cost her deeply, maybe even her soul.\" \n\nBecky quieted and lifted her eyes up for a brief moment before lowering to look back to me, \"My mother trained me not to use it for selfish reasons, and I have found no reason to use my powers. Bob loves me for who I am, not because of the power I possess.\"\n\nKelly and I nodded to indicate we'd heard her, and understood her. Then Kelly flushed as a blush of shame and guilt crossed her features and she leaned in and hugged her mother tightly. \n\n\"Kelly,\" Betsy said with a smile, \"Do not be ashamed. Please dear, it is who you are, it is part of you. I only want you to understand it, and use it well.\"\n\nKelly nodded but leaned into her mother, crying quietly. I could sense her emotions as she started to understand how her power had bloomed. She thought of Jeremiah, and their first time, how she had felt. How his power had triggered her own, and in turned had influenced Lexi and Carmen. She couldn't express her feelings, but I was able to sense her turmoil, and pushed some calming thoughts in her direction.\n\n\"Alyssa, how do you understand your power?\" Betsy asked, shifting her attention to me, as she consoled her daughter.\n\n\"I can read thoughts, I can push suggestions.\" I said confidently, \"The better my connection the easier it is to suggest and the stronger the suggestion. I'm afraid Kelly has been one of my test subjects. Well all of us, Jeremiah and I communicate through thoughts regularly. I can also read and influence Lexi and Carmen.\"\n\n\"Only sexually?\" Betsy asked, and I quickly drew back, feeling like it was an accusation. \n\n\"Oh stop, dear,\" Betsy said squeezing my hand, \"We're all adults here. I love sex, and after Jeremiah's adjustments, I've been able to use my powers a tiny bit to draw Bob closer to me. I only asked, to see if you'd expanded testing into other areas.\"\n\n\"Well, I haven't had a lot of opportunity for controlled testing,\" I said, thinking the best way to test was scientifically, and her including Jeremiah suddenly was confusing to me. I kept chewing on that thought as she continued her questioning.\n\n\"Do you know your line?\" Betsy asked, \" I saw your face flash in recognition of Baraqiel.\"\n\n\"Penemue,\" I said, \"and Jeremiah is a Yeqon.\"\n\n\"Of course,\" Betsy said, \"I knew that of Jeremiah, he has his grandfather's power, but not his corrupt thoughts.\"\n\n\"You knew his grandfather?\" I asked taken aback by her familiarity.\n\n\"Me? no... My mother knew his wickedness well, it's documented in her diaries.\" Betsy explained, \"Be careful what you share with Jeremiah, there are some very dark tales there. He needs to know them, but with care. His father, it seems broke the corrupt cycle his grandfather embraced.\"\n\n\"Wait,\" I said, finally collecting my thoughts about Jeremiah's first meeting of Betsy and Bob, \"This amulet you're wearing, it protects you?\"\n\nBetsy nodded, \"Yes, but it also limits my own power. No power, angelic, spirit, or halfling, can affect me, or what I am touching. However, I can't project or use my powers while I wear it. So it is helpful. I often wear it when I want to be sure I won't be tempted by the dark spirits. Often, I need to wear it to read my mother's books.\"\n\n\"Why didn't you wear it when you met us the first time?\" I asked, \"I'm sure, with your knowledge of ... this ... you suspected that Kelly had changed, her life shifted so abruptly.\"\n\n\"I had it with me, in my purse.\" Betsy said, then sighed, \"I wanted to trust my daughter, I didn't want her to be corrupted. But I had a feeling from her calls, that whomever had influenced her wasn't like the Priesthood. She kept talking about this Jeremiah, after she'd regained contact with me. I didn't know what Jeremiah was, but I felt that he was the only person that could change me, I wanted him to fix me.\"\n\n\"Fix you how?\" I asked, honestly, I was missing something.\n\n\"My mother's hatred of everything that came with being a halfling. Her rejection of her powers. She used them to escape the darkness, but ... \" Betsy stalled, as if unwilling to explain more about her mother. \n\nFinally after a long pause, she explained, \"She was bitter, angry and spiteful, especially when she was younger. She taught me how to hate, how to fight and how to always be on guard. It was tiring, and I didn't want to fight my own daughter. Surrender was the only way through... and I surrendered to Jeremiah.\"\n\n\"And last night...\" I asked, leading her to continue.\n\n\"Jeremiah is a special boy,\" she stated with confidence and a quiet respect, \"He treated both Bob and I so well. I had so much hatred in me, that Bob... Without Kelly near us, Bob was pulling away from me. Jeremiah recognized my struggle, and smoothed it out. He let me feel love and to love again. For that I trusted him a second time.\"\n\n\"So you knew all along,\" I said quietly.\n\n\"No,\" Betsy said, \"Not the details, not about the pregnancy, not about the union of you five. That I understood better last night. I wouldn't have wished it for my baby girl,\" she struggled for a moment, then hugged Kelly tightly, rubbing her back, \"But I know my girl is powerful, and I know she'll be a great wife, sister and mother.\"\n\n\"I want you to know,\" I said, feeling like I needed to confirm her feelings, \"Jeremiah is the most caring man I've ever met. He made a mistake, out of ignorance, he didn't know his powers existed, he never knew his father. Once he realized what he'd done, he was tortured by guilt. He was determined to make things right.\"\n\n\"How did you come to know Jeremiah?\" she asked, wanting to know more.\n\n\"We'd been friends since freshmen year,\" I answered,\" He knew I was a lesbian, and it didn't scare him away. He was always a loyal friend. I hated to see him feel so guilty about what he had done to Kelly and Lexi.\"\n\n\"What did he do exactly?\" Betsy asked, curiously. I stiffened, unsure if I should tell her the whole story, and she saw my feelings, \"It's done Alyssa, I accept that Kelly, as much as she is still the daughter I raised. She is not the same girl that left for college last fall. I'm sure college changed you too.\"\n\nI nodded and looked at Kelly, checking to see if she was okay with me telling her story. She nodded and rested against her mother's side. I looked back at Betsy and took in a deep breath.\n\n\"When they first met, he lowered her morality curve, and limited her self-control. Basically making her seek satisfaction in anything pleasurable.\" I said, trying to coach my terms in clinical terms, not wanting to say...\n\n\"He made them into sluts.\" Betsy said.\n\n\"Yeah,\" I replied, \"well, I don't this that was his intention. I think he was drunk, a bit horny, and Kelly was available. He wanted to console her, she was sad.\"\n\n\"I didn't like him at first,\" Kelly said quietly, \"He seemed like any other college jerk, and I had just broken up with my boyfriend... funny, I can't even remember his name... \" she shook her head as if casting off a bad thought, \"But after we kissed, I felt an instant attachment to Jeremiah. Then this glow erupted out of me, and ... well.. we had sex.\"\n\n\"You awakened,\" Betsy said softly, rubbing her daughter's shoulder. \"I should have told you, so at least you'd know what it was. I was hoping that you wouldn't be like me. I hoped you could be just normal.\"\n\nWe ended up tell the whole tale, Kelly unabashedly telling her mother of her first time with Jeremiah. How they both seduced Lexi and Carmen. How she felt hungry for sex, and more sex. I explained what Jeremiah had told me, about how he understood their morality curves, and how he changed them. I explained about our test to discover how his power worked, and how Jeremiah fixed me, enabling me to fully love him. We switched back and forth telling about our meeting at the hotel to fix Kelly and Lexi. How Carmen helped care for them. How Jeremiah healed Carmen's heart. How we found our connection. Everything. To Betsy's credit she took it all in stride.\n\n\"It could have been much, much, worse,\" Betsy said, \"Jeremiah was reckless but his heart was in the right place.\"\n\n\"Mom,\" Kelly said, \"I'm worried about my friend Jenn.\"\n\n\"Oh, why?\" Betsy asked. \n\nKelly carefully told the story, \"Well, one day while Carmen was in class, Jenn stopped by for a visit. Lexi and I seduced her, and ... \"\n\n\"She had too much?\" Betsy asked.\n\n'Yes,\" Kelly nodded, \"Carmen came back and had to drag us away from her. She was limp, unconscious. I didn't know about my powers, then, ... did I? Well this morning, Oh Mommy, I'm scared.\"\n\nWhile Betsy quieted and comforted her daughter. I explained what happened this morning, and what I knew of Jenn's situation. \n\n\"It sounds like it might have been your influence.\" Betsy said, \"It's mostly harmless in short doses, overwhelms the nervous system with serotonin. Mostly people find it incredibly pleasurable, mostly no long term effects. How has she been since then.\"\n\n\"That's the thing,\" Kelly said wiping a tear, \"In the excitement of moving, I didn't see her again before we left. Her emails sound different. She talks about sex all the time. Found a boyfriend, and talks about moving with him to Nevada. It just doesn't sound like her.\"\n\n\"Oh dear, sounds like she's addicted.\" Betsy paled, \"This talk of a new boyfriend and northern Nevada... that sounds like old school Priesthood influence. Does she have family close?\"\n\n\"No, she's an orphan, like Lexi.\" Kelly said, suddenly more concerned for her friend.\n\n\"You need to get to her, as quickly as you can,\" Betsy said, \"Jeremiah can fix her, and Alyssa can help.\"\n\n\"Well, Jeremiah is buying the RV today,\" I said, \"We should be able to leave soon, we can stop by the school on the way to Montana.\"\n\n\"She can't leave until after summer semester,\" Kelly said, \"but she's sounds like she's mostly blowing off the classes she's taking.\" Kelly started biting the tips of her fingers, under the nails, and I pushed a thought for her to stop. She did and just leaned into her mother.\n\n\"It will be alright, sweetie,\" Betsy crooned. We all sat in silence allowing Kelly to work through her feelings, and sadness. Betsy finally shifted and rose walking out of the room.\n\n\"Kelly,\" she said coming back in, \"Would you do me the honor of wearing my wedding dress when you marry Jeremiah?\"\n\nShe held a Bohemian style dress from the early seventies with embroidered detail on the lace. The top was liked a halter, shoulderless, and was heavily embroidered, the bodice was stunning as the beading drew the eyes to the narrow waist. There were layers of tulle & a net underskirt which made it look fuller. Kelly marveled, standing up and putting it to her chest, modeling it.\n\n\"Oh mother, of course,\" she cried, \"It's perfect! Thank you!\"\n\nKelly started to go in the backroom and try on the dress, when Betsy took her arm, \"Dear, let Alyssa try on the dress.\"\n\n\"What, why me?\" I asked standing tentatively, confused because my thin frame was so different from Kelly's curvaceous body.\n\n\"So she can see what it looks like on her, of course,\" Betsy said, holding the dress out to me.\n\n\"This is weird,\" I thought to myself, as Kelly looked on wide-eyed. I decided to go along with what Betsy wanted, and plastered a smile on my face, and said, \"Okay...\"\n\nI grabbed the dress and went into the study where I was reading the diaries, shutting the door behind me. I looked at the dress, it was great condition for it's age. The beading was precise and I carefully laid it on top of the box of books. I pulled my skirt off my shoulders and stood in just my bra and panties, and then lifted the dress up and pulled it down. It didn't fit, I was too slim compared to Kelly's more generous curves. My smaller breasts left the bodice gaping, almost falling down if I didn't hold it up with my hands. \n\nI sighed, frustrated, the whole thing made me feel undesirable. My coltish frame was better suited behind a library desk, or in a lab somewhere. Me, in a wedding dress? Well that was one reason I gave Jeremiah his ring back. I never liked being the center of attention, and was self-conscious of my body. I could never pull off such a role as blushing bride. It was better that Kelly would be marrying Jeremiah, she would make the better looking bride.\n\nFeeling self-conscious and defeated, I walked back into the room. Betsy saw me and lifted the brown stone pendant from her neck, and placed it on the coffee table. I looked at her curiously, not sure what to expect any more.\n\n\"Oh, that is perfect,\" Betsy said as I pulled at the gaping bodice, confusion welled up at me at her words. Perfect was not a word I was expecting from anyone.\n\n\"Now, Alyssa, I want you to look at Kelly,\" Betsy said taking my hand.\n\nKelly stood up, with the same quizzical look that I'm sure my face was showing. She faced me, and looked at me. Her eyes betraying what I already knew, the dress looked horrible on me. I sighed and looked over at Betsy.\n\n\"Wouldn't it be better if Kelly wore this and looked in a mirror?\" I asked as I felt Betsy's hand start to glow.\n\n\"Just a little bit of power, just to jump start you,\" Betsy said ominously, then continued in a low even tone, \"I want you to look at Kelly, and like you pushed your thoughts earlier towards her, pull her appearance into you.\"\n\nI did a double-take from looking at Kelly to Betsy. \n\n\"What?\" I asked shifting my eyes between the pair.\n\n\"You are Penemue, beyond what you've discovered your line has other abilities,\" Betsy explained, \"At least I think it does, you're the first halfling I've known besides mother. Try to pull Kelly's appearance into you.\"\n\nI looked back at Kelly and took a moment to admire her lovely figure, full breasts, slim waist, trim abdomen, long legs... I tugged at them, using a bit of the glow of power that Betsy fed me, then feeling my own power pulse, I inhaled deeply. \n\nSuddenly my view shifted, Kelly and Betsy grew taller, and grew fuzzy. I noticed the dress tightening around my small breasts as Kelly's eyes widened. She stared and I didn't know what was the matter. I whipped my head to look behind me, and noticed a halo of blonde hair flowing blurrily past my eyes. I dropped my gaze, and my arms were blurry, the dress was blurry. I looked up and squinted as I looked at blurry Betsy and back to blurry Kelly.\n\n\"Oh,\" Betsy said, \"this might help.\" She reached up and took off my glasses. \n\nThings snapped into focus, and I saw Kelly smiling in amazement. I looked down and my skin had a bronze tone to it, my fingers and hands were shapely. My breasts spilled out perfectly from the bodice of the gown, and it suddenly fit snugly, ... no... perfectly.\n\n\"Breathe dear,\" Betsy said. \n\nI hadn't realized I was holding my breath and I exhaled, expecting everything to shift back. I realized that I was looking eye to eye with Kelly instead of being a few inches taller. I lifted my suddenly perfect hand to my hair and tugged a blonde lock in front of my eyes. I dropped it with a start then lifted both hands to cup my suddenly full breasts.\n\n\"What...?\" I was speechless, why had Kelly read my thoughts, and spoken what I was thinking.\n\nI hurried down to the bathroom, I turned on the light and leaned on the counter staring into the mirror at... Kelly.\n\n\"The fuck!?\" Kelly's voice came out as I moved my lips, her lips.\n\nI walked back out, and looked at Kelly and her mother as she watched me.\n\n\"I thought you could,\" Betsy said, \"but seeing it is more amazing that reading about it.\"\n\n\"I did this?\" I asked again hearing Kelly say the words but her mouth was closed.\n\nBetsy nodded, \"You can take on any shape you see, and hold that look indefinitely. \n\n\"Can I change back to me?\" I said panickedly in Kelly's soprano, \"I like me...\"\n\n\"Push yourself back out,\" Betsy said, holding my hand.\n\nI thought and pushed and exhaled and felt the dress deflate as the ground fell away. The room was blurry again, but more familiar type of blur, matching the world when I took off my glasses. I looked at Betsy and pulled inhaling, and suddenly the dress fit again, only differently.\n\n\"Oh dear,\" Betsy said looking at a reflection of herself in her old wedding dress, \"it still fits!\"\n\n\"Shiit...\". I breathed looking at her response. The word sounding even more profane in her cultured tone expelling from my lips. \n\nI pushed and exhaled, and then looked back at Kelly and pulled inhaling. Kelly started laughing as my body felt like it went through a roller coaster of elevation at the quick changes I'd made. Then Kelly leaned into me and hugged me. \n\n\"Oh Alyssa,\" she said, \"it is amazing, you... are me.\"\n\n\"Well, no,\" I said, in her voice, \"I'm still me, only looking like you. Well and talking like you.\"\n\nI pushed back from her with a smile as I accepted what I'd thought was impossible. I turned around and modeled the dress. The twirl was executed better in my head, I stumbled a bit, my center of gravity had shifted, but I made it, then struck a pose.\n\n\"How do I look as a bride?\" I asked with a cute Kelly sounding giggle.\n\n\"I look beautiful,\" Kelly said using her own mouth, \"and you are beautiful too!! The real you I mean.\"\n\nSuddenly I had to know. I pushed out, snapping back into Aly-form. I tugged the dress carefully off me, then pulled off my bra and pulled down my panties.\n\n\"I'm not sure that's necessary,\" Betsy said.\n\n\"We're all adults here,\" I said with a smile, looking at Kelly and pulling her into me.\n\nI looked at Kelly as she smiled, \"Perfect!\"\n\nI lifted my hands and felt my breasts, the nipples were Kelly's, I was well familiar with suckling them, and the feeling of touching them sent a jolt of arousal through my body. I lowered my hand and ducked my head down, combing my perfect fingers through my soft blonde muff. A touch sent a shiver through my nerves. \n\nNaked and aroused, I looked at Betsy, \"Do I have her powers too?\"\n\n\"No dear,\" she said, deadpan, as I touched myself intimately, \"just her nervous system.\"\n\nI was suddenly a bit more jealous of Kelly, as I felt how her body responded to stimulus. Kelly's own power started to pulse as she watched me. Betsy reached and grabbed her pendant, then grabbed hold of Kelly's hand.\n\n\"We don't need to let this get out of control.\" Betsy said with a smile, \"You two have plenty of time to experiment when I'm not present.\"\n\nI expected to snap back into my normal form when Betsy put the pendant back on.\n\n\"Why am I still here?\" I asked, \"I thought touching the stone would stop our powers.\"\n\n\"It's a Baraqiel stone,\" Betsy said, \"It only limits our powers, not yours.\"\n\nI tried to assume Becky's form, forgetting that I was naked, but wanting to test. I couldn't change, her body was unavailable to me. I exhaled and pushed my own body back. I tried to shift back to Kelly, but with Betsy holding her hand, I couldn't shift back. Betsy handed me back my glasses and I slipped them back over my ears, pressing them up my nose.\n\n\"Fascinating,\" I said, lowering down to pick up my panties and bra and redressing, \"So it is keyed to your line's powers, what about Jeremiah and I?\"\n\n\"There are other stones,\" Betsy said, \"this one my mother ripped from the high-priest's breastplate, right after she killed him.\"\n\n\"What?\" I said stunned.\n\n\"It's all in mother's diaries,\" Betsy said, \"She told me it was cathartic to write down all her sins. I suggest you study them closely. Learn from her mistakes, and help my daugher and Jeremiah.\"",
        "She grabbed my hand in her free hand, \"You, Alyssa, can help them, with your telepathy.\" She looked back and forther between me and Kelly, \"You each hold a key piece to the puzzle, if you're going to defeat the Priesthood...\"\n\nSuddenly I was afraid, I didn't sign up to be in a superpowered squad of half-angels. I didn't want to fight evil spirits, demons. I felt incredibly over my head. I felt Betsy put her arms around me. \n\n\"I know it's all overwhelming, dear,\" Betsy said, \"I've been troubled since we ate dinner at the restaurant, the night we met.\" She drew back looking up slightly to capture my eyes, \"It's clear to me, that there is something larger than all of us at work, even using our mistakes to bring you three, ... no, the five of you together.\"\n\n\"Lexi and Carmen aren't like us,\" I said, \"Nothing I've ever felt from them is like I feel from Jeremiah or Kelly.\"\n\n'That doesn't mean they aren't important,\" she said, \"They are part of you, you are all entwined and entangled. It's more than just your physical attractions and connections. Your souls are meshed. You feel it, that pendant you all share tells me you already know that.\"\n\n\"Mom's right,\" Kelly said, \"I've felt that connection from the moment I met each of you, a harmony that feels ... whole.\"\n\nI nodded and hugged them both, kissing their cheeks, \"I never imagined, anything like this...\"\n\nBetsy took the Baraqiel stone pendant and pushed it into Kelly's hand, \"This is yours now, it will protect you, any of you, from angelic powers and ward off the dark spirits.\" She looked at me, as she spoke, \"My mother's diaries, are dark. This can help you ward off their insidious lies. I wish i has a stone for each of you, I fear you'll need it.\"\n\nI understood with her words, and feeling her thoughts, that we'd finished the explorations of our powers. Mother and daughter held hands and returned to their sofa. I went back to the study to retrieve my skirt, pulling it over my familiar form. Smiling as I realized that Kelly was right, I was beautiful, just different from her beauty. My flesh shone, a different light than Kelly's but it seemed more radiant. I shook my head and walked back to join the girls.\n\nWe talked more details, planned a schedule of events for the wedding, talked about the Bed & Breakfast remodel. Things shifted back to normal, as I filed the incredible events of the day into the back of my mind. As we left, Betsy to meet Bob for dinner, and Kelly and I to return home, I carried the box of books and keepsakes to Kelly's car, settling it into the trunk. I slipped into the passenger seat and looked over at Kelly as Betsy's car slipped out of the driveway.\n\n\"Ready to go home?\" I asked pulling her image onto my body, the seat belt tightening around my bosom.\n\nKelly laughed as she looked at me, my dress tight against her full breasts, \"Yes, though you look better as you in that dress.\"\n\nI pushed myself back out, and giggled. Kelly turned on the radio and we headed back home. The road home was interesting, still a bit surprised by the other facet to my powers, I wanted to experiment. While Kelly drove and sang, I watched the passengers in other cars. I slipped through a series of other shapes and sizes, making sure their sizes near mine. I knew Kelly didn't want to see a fat trucker wearing my slim dress.\n\nShe laughed as I flipped my shape, shrinking into a young teenage girl, then her slightly older and more muscular brother. My voice and feeling shifted as I assumed different forms. The young mother felt bone tired as she tried to console her crying baby, I felt like I just wanted to sleep. My joints ached as I tried on the grandmother kindly reminding her husband to stay in his lane, I felt her tremor of panic as his car slid closer to ours.\n\nThe darkness concealed my fun, the only illumination the dashboard lights made it impossible to see my body change in the flashes of time the other cars were beside us. Kelly was my only audience and she would laugh, or groan. The only limit to my powers was the outfit I was wearing, I wondered if I could pull that over me too. I practiced with a young college aged boy, in jeans and a plaid button up. Kelly flinched as suddenly it wasn't a new shape in my dress, but a whole different person.\n\n\"Aly?\" she asked the young man.\n\n\"Yep,\" he said in a deeper voice, then giggled, which sounded really weird in a deep baritone. \n\nI switched back, half expecting to be naked, but my dress was exactly like I left it. It was like I pulled on two forms over myself and what I was wearing. But size wasn't a problem. That fat trucker filled Kelly's passenger seat shifting the chassis as his bulk weighed it down. The waif thin waitress driving home in her polyester uniform reminded me why I liked natural fibers.\n\nAbout ten miles from home I grew bored, and stayed in my form for the home stretch.\n\n\"Worn out?\" Kelly asked.\n\n\"Not really,\" I said, \"It doesn't drain me, in fact the opposite, I feel charged.\"\n\n\"Same with me,\" she said, \"When I project, the buzz stays with me, I feel energized and powerful. I just wish there was more than sex demon. Don't get me wrong it is amazing, but limited use as a superpower.\"\n\n\"You know what a sucky super power is?\" I asked, \"Super flatulence.\"\n\n\"Gross!\" Kelly laughed, and the mood lightened. \n\nShe pulled into the driveway, and stopped the car, \"How should we tell them,\" Kelly asked me.\n\nI pulled her shape over me, \"I think we should just show them,\" her voice replied.\n\n\"Your evil,\" Kelly smiled, getting out of the car.\n\n\"Fallen angels are misunderstood,\" I said with her lilt in my voice, slipping out and joining arms as we entered the front door.\n\nI probably should have scanned the house first.\n\nPresent: Jeremiah\n\nCarmen and Lexi returned from the sex shop, with two bags of things, slipping into the car with mischievous grins, \"Take us home, Master!\" the exclaimed in unison.\n\nI pulled out, and headed back home, \"Why do I think that my hands will be full when I get home?\" I asked.\n\n\"Drive us home, Master,\" Carmen said, \"You won't be disappointed.\"\n\nThe drive went quickly as my brain slipped through several possibilities. I wondered if I could even have a fourth erection, but the tightness in my jeans soon made that thought moot. I slipped into the empty driveway and the girls raced out of the car.\n\n\"Meet us in the living room, Master,\" Carmen called as she entered the house.\n\nI slipped inside the door, and figured I would be overdressed if I remained clothed. Stripping down I tossed my clothes in a pile by the door, noticing a stream of clothes lining the path to Kelly's office. As I pulled on my stiffening erection, the door opened and Lexi came out, naked. Well except for the leather collar around her neck and two leather cuffs fastened around her wrists. Behind her Carmen wore a similar collar, but her body was masked by Lexi's lithe form. \n\nLexi walked towards me, knelt, and looked up at me, shifting her arms behind her back. My eyes watched her as she looked up at me and leaned closer rubbing her cheek against my cock, her mouth opening and sucking in the head. I groaned at the feel of her warm wet mouth. My eyes flicked back up to look at Carmen, and did a double take, Carmen had grown a penis.\n\nWell no, it was a strap-on. Though a lifelike dildo hung between her legs, it was of a similar skin tone, as she gripped the base and stroked it slowly, looking at Lexi sucking my cock with humid eyes.\n\n\"What's that for?\" I asked, my hand combing through Lexi's hair and gripping a handful of her amber locks, tugging her roughly until her nose buried in my pubic hair. I could feel her moan against my flesh, and her purr of arousal in her mind.\n\n\"That one,\" Carmen said, pointing at Lexi, \"Wants to be double penetrated... If you'll allow it, Master.\"\n\nI groaned at the thought, and looked at Carmen with a lustful glare. I held Lexi's head still and rolled my hips slowly fucking her mouth, then pulled her head back, \"Is that right, my slut? Maybe you should beg for it?\"\n\nShe looked up at me, her body trembling with desire and pent up lust, \"Please Master, fill both of my holes, fuck my cunt, fuck my ass... Use me for you pleasure, Master.\" \n\nHer pleading made my cock twitch in front of her, and her irises dilated at the sight. Carmen walked up behind her and gripped her head, lowering her mouth to her sisters panting lips and kissing her deeply. The looking up at me as Lexi panted below her.\n\n\"Master, I am at your disposal, use me as you wish.\" She purred, her hand still stroking her cock, pressing it into her cunt and grinding her hand into her core.\n\nI paused, then realizing they were patiently waiting for me to command them, I stepped back. \n\n\"On your back right here, right now, slut.\" I said looking at Carmen, and she slipped to her back lying with her head towards the door, her breast full and enticing. \n\n\"Mount her slut,\" I commanded Lexi, tugging her head and then pushing her towards Carmen's supine form.\n\nLexi crawled over to Carmen her pale freckled skin a tantalizing contrast to Carmen's brown flesh. Carmen held her strap-on dildo, stroking sexily. Lexi slid forward, spreading her thighs astride Carmen's hips. \n\nI knelt down behind Lexi, kneeling between Carmen's knees. I placed my hand under Lexi's sex, pushing my fingers into her aroused flesh, feeling her copious arousal coat my fingers. My thumb tapped the base of the still present ass plug. I gripped my cock,and guided it into Lexi's opening, feeling her heat, the feel of her tight pussy tighter from the rubber plug in her ass.\n\n\"Ohh.. fuck!\" was all she could say as my hot cock slid into her cunt. I groaned as my thrust coated my cock with her slippery arousal. Spreading her cheeks apart I gripped the base of the plug and slowly tugged, twisting back and forth to unseat the invading cone. She groaned and shifted her hips, chasing the plug as it slowly pulled from her ass.\n\n\"Hold still,\" I said swatting her ass hard enough to leave a reddening hand print. \n\nThe bite of pain in her buttocks only made her purr, but she stilled her hips to my command. I kept my hips pressed deep, my rigid member deep in her cunt. I could feel the plug retract along my shaft until it the base pulled free and the plug slid out. Her ass gaped open, inviting me to slide my thumb into her ass, saving my place.\n\nI drew back my hips, drawing my cock free as my hand kept her hips steady, \"Slide your cock in, now,\" I commanded Carmen.\n\nCarmen had been stroking her fake cock, grinding the base of the harness into her aroused flesh. She'd lifted her other arm up to pull Lexi's chest down, mashing their breasts together as I had removed the plug. At my command, she slid her hand to the head of the rubber dildo, and reached down to rub the tip along Lexi's hot wet cunt. Finding the opening, she lifted her hips, and Lexi curled her hips down. \n\nLexi groaned as I watched the fake cock cleave into her crease, until it was in her completely. She ground her hips to get as much in her as possible, the pressure causing Carmen to purr as she felt the base press into her sensitive clitoris. I stroked my cock, testing the lubrication of Lexi's hyper-aroused fluids, then spat into my hand, spreading the slick saliva over my engorged crown. I pressed the now slick tip under my invading thumb, pulling it out as I pressed my hips forward and pushed the purple head of my cock into her tight asshole.\n\n\"Ohhh fuck.. yes.. unghhh, fuck! mnnhh, oh please yes...fill this slut's ass...,\" She groaned as my shaft disappeared slowly inside her ass.\n\nCarmen started rolling her hips, and I felt her oddly firm plastic dong slide against my invading cock. The tightness of her passage was increased by the two invading columns, one of hot flesh and one of cooler rubber. I groaned and reached forward grabbing a handful of Lexi's red mane and pulled her head back. I then started to fuck her ass with longer strokes, finding a beat that matched Carmen's rolling thrusts.\n\n\"Oh fuck, so fucking tight.\" I moaned, \"You like getting your ass reamed, little slut?\"\n\nJust then the door swung wide, as Lexi cried out in a deep moan of lust, \"Yes! Master, fuck my ass!\"\n\nI froze as I saw Kelly standing beside ... Kelly, and both of their eyes widened. \n\nLexi was pushing her hips back and also froze at the odd sight of two blonde goddesses at our entry.\n\nCarmen seeing the look on my face, craned her neck backwards to see the upside image of two identical women mouth agape at our lustful tryst.\n\n\"The fuck?\" Carmen said.\n\n\"Jeremiah!\" cried the Kelly on the right, \"What...\" \n\nShe was scanning the scene, the black leather collars that Lexi and Carmen caught her gaze. Then her hand followed Lexi's neck as her head was pulled back by my fistful of hair. She gasped slightly the shock of our scene. Her emotions flicked between revulsion, shock, disgust, an odd flavor or arousal that was flavored with shame. I was momentarily confused as these emotions were something Kelly never had associated with sex. \n\nThen the Kelly on the left smiled, then turned to her twin and lifted off an odd pendant, whose brownstone was starting to glow gold.\n\n\"We can take this off I think,\" Kelly said to Kelly and suddenly the temperature of the room bloomed, the lust we'd felt just before the door opened, doubled and kept rising. My hips drew back and slammed forward. Right Kelly began to glow, and Left Kelly dropped the pendant then started undressing. Right Kelly mirrored her twin.\n\nI was caught in a mist of confusion only fueled by my accelerating lust.\n\nPast: Kelly\n\nMy thoughts were still swimming from the events of the day. The drive up had been so fun. My mother's house had been a mess of emotions, and strangeness. I still was a bit unsettled that my mother had known about the potential for my new found abilities and had stayed silent about that for all of my life. I never was allowed to touch grandmother's things, I barely remembered my grandmother. My life had be so twisted and canted in the last six months, sometimes I was overcome by the joy of my four heart mates, and other times, a flash of confusion and dizziness as my mind tried to fit things into place.\n\nThe drive home had been strange. I loved being with Aly, we were both so comfortable with each other. She was naturally curious about her new shape-shifting ability that she was a like a child with a new toy. I had lost track of how many times she took a new form. At first it was hilarious as each new form was slid inside her skirt, the different ways that looked still made me giggle inside. Then it turned even more strange, as suddenly I was driving with brand new people beside me. The illusion of her shape shifting was strange, it seemed even each person's aroma arrived with the new forms. The big sweaty trucker's smell almost had me rolling down the window.\n\nSo I was happy to be home, to drive up to my house, and be ready to get comfortable with my four hearts. I grabbed Alyssa's arm, or was it my arm, and giggled as we walked to the door. The giggle even chimed a harmony as her laugh mingled with mine. Opening the door, our gasps at the scene in front of us were also a strange echo.\n\nLexi's head was craned back, eyes wide, mouth open a thick black leather collar tight against her pale neck. She was moaning in a lustful pant. Jeremiah had just driven his hip forward, so her body almost jumped at us as the door opened. His eyes half lidded with lust and aggression opened wide as he caught sight of us. Carmen was busy sucking on Lexi's firm nipple and was unaware until the pair above her went still. Then she craned her neck back and looked at us.\n\nI felt an array of emotions, shock, disgust, curiosity, shame, captivation. Should I look away, should we go away. I felt almost numb, which was also strange. For the last few months any sexual display, from a chaste kiss between two lovers to a lustful moan from one of my lovers would have my brain buzzing with excitement. Why was I feeling nothing as I watched, my loves frozen in a moment of lustful passion. A moment of panic welled up within me, then jealousy - so foreign as I was normally fine with my family sharing our passion for each other. Even Lexi's new strange fascination with pain usually had my thoughts abuzz with sexual lust.\n\nI felt nothing, and it worried me.\n\nThen I looked and saw myself, or Aly (still so strange!) lean over and lift my mother's pendant from around my neck. As soon as the stone left my flesh, it started to glow as my power awakened. As it glowed my supernatural arousal started to bloom as I fed on the latent sexual energy that permeated the room. The sudden torrent of sexual energy coursed through my nerves made my nipples harden and cunt gush. I exhaled, my brain buzzing, I couldn't hear what Alyssa had said when she removed the necklace.\n\nI tore my dress over my head and stripped naked quickly. The sexual need in the room amplified and the three lovers suddenly were at their peaks, and fucking with abandon. I realized that Carmen, whom I thought was just lying under Lexi while Jeremiah fucked her, was rolling her hips while sparks of lust coursed through her with each roll of her hips. I could sense Lexi's double pleasure from the coursing friction in her cunt and ass. \n\n\"I want that,\" I thought to myself. \n\nMy fingers came in contact with my clitoris, sliding down to spread my lips apart. My twin must have sensed my need, as she shimmered for a second, leaving a blur of Alyssa's form before Jeremiah was beside me, naked and his cock jutting out from his pelvis completely erect. \n\n\"Oh fuck,\" I said as I felt his strong hand push my shoulders forward, while his other hand grabbed my hip, pulling me to him.\n\nPast: Alyssa\n\nThe pendant needed to be removed, I knew it, and when it was off, the flash of arousal that followed took my breath away. I felt the heated passion of the threesome before us as they resumed their double fucking of the delectable Lexi who started to scream as her crest rose rapidly. I looked over at Kelly and felt my nipples (or hers) stiffen and cunt become molten in an instant. The rapid onset of sexual need made my body shiver. \n\nI looked over at Kelly, and felt her arousal soar. Her initial human reaction to the unexpected scene before us had her confused, but now with the pendant removed it freed her ability to feel the sexual energy. Her need became palpable. My own need mirrored her. \n\n\"I need a cock in me,\" I felt her thoughts.\n\nKnowing Jeremiah was previously occupied, I looked at him and suddenly I was him, instantly. I felt powerful, and also completely naked. His strength flowed through me, the odd feeling of an erect appendage brushing against Kelly's thigh almost buckled my knees. I knew I had to be inside her. \n\nI grabbed her hip, turning her body. My other hand pushed her shoulders down, bending her over. She moaned and rolled her ass back, her knees bending as I reached down and gripped my hard hot cock. So strange to touch it, but it felt so good, I stroked it once, then placed the glans against Kelly's flowing cunt. I closed my eyes as the feel of her hot cunt surrounded my sensitive cock. It felt like sex turned inside out, and I was instantly hooked on the feeling.\n\nI grabbed both of Kelly's hips and fucked her in a frenzy. My deep moans echoing and mirroring Jeremiah's grunts of need opposite me. I looked in his eyes as I reamed Lexi's ass, and rolled my eyes back as I felt his orgasm flow through his thoughts. His peak was pulled into the room by Kelly's power, and it bloomed in a shimmer of light as Jeremiah shot his load of cum deep in Lexi's bowels. \n\nLexi's eyes flared as the feel of hot semen in her ass, and the bloom of Kelly's power set her off. She ground down into Carmen, tripping the dark writhing body on the bottom to arch her back and quiver as she too shouted her release. The three bodies in front of us watched us fuck, their eyes wide, as their bodies were frozen in the midst of their super-powered orgasm.",
        "I pressed Kelly down, and she slid slowly to her knees. I fucked her slowly as we moved. I couldn't get enough of the feeling of my cock moving through her tight cunt as she crawled forward and kissed Lexi. Jeremiah jerked as he thrusted again deep into Lexi. She pushed into Kelly who rocked back into me, pressing her ass into my thighs. I reciprocated, and hammered my thighs forward, bucking into Kelly, who then pressed into the shaking red-head's mouth and the chain reaction flowed into Jeremiah.\n\nI looked into Jeremiah's eyes and just went wild, fucking Kelly with abandon. She took each of my thrusts, slamming her ass back at me. Lexi had squirmed forward and slid to the side, overcome, curling into a fetal position as her limbs shook from full-body orgasmic tremors. \n\nKelly leaned down and kissed Carmen, before looking up and seeing Jeremiah's pulsing cock, a drop of his seed dripping from the tip. She crawled over Carmen, her breasts pressing into the brown latina's tits as she reached and grab Jeremiah's cock in one hand, and Carmen's fake dick in the other. \n\nI kneed forward to keep contact, as Kelly snaked over Carmen's flesh. One of her hands stroked Carmen's fake dick pressing the base into Carmen's sex. Her mouth opened and sucked in Jeremiah's cum-dripping crown, her cheeks hollowing as she pushed her head forward, filling her mouth with the same cock that was sliding in and out of her cunt. She purred and the ripples of sexual energy she was putting off were overwhelming.\n\nI looked up into Jeremiah's eyes and smiled. His eyes were filled with shock, awe, confusion. With the feel of Kelly's mouth on his cock, he no longer cared if it made sense that he was looking at himself fucking his bride to be. I winked at him as I started to hammer Kelly harder and harder. He gripped her head, and stopped her movement, and then reciprocated, fucking her mouth with hard strokes. Wet sounds filled the room as we both fed our lustful urges into the sexual being between us.\n\nI groaned as I felt lips on my balls. A tongue licking at the base, then the suction of lips sucking one of my full testicles into a warm mouth. The senses that flowed through my body were amazing. Kelly's power suddenly erupted as I slammed deep into her. Jeremiah had thrust his hips forward and froze, as he grunted pouring another load of semen down Kelly's throat. I felt my balls tighten, the lips surrounding one pulling free and I thrust my hips forward holding myself deep in her. The feeling of hot semen shooting through my pulsing shaft made my eyes roll back. My throat let loose a deep shout of lust as I felt my first male orgasm course through my nerves.\n\nWe froze there for untold seconds, the three of us shaking in our orgasmic bliss. Then Jeremiah and I both slipped back onto our haunches. Kelly leaned forward and pulled Carmen's cock aside and dove into her cunt, filling her mouth with Carmen's tasty muff. Carmen grunted, her need palpable as she was trapped on her back through the ordeal. She looked at Jeremiah as her mouth opened.\n\n\"Oh fuck, Kelly, yess!! lick my cunt.\" She shouted. \n\nCarmen craned her neck back and saw me, only she saw me as Jeremiah, sitting and slowly pulling on my cum slicked shaft. A look of confusion passed over her eyes, then she shrieked as her nervous system overloaded as she came. I couldn't stop myself, slipping forward and pressing my sensitive cockhead between her open lips. She closed her eyes at the taste, and simply nursed on my offering, sucking down the remnants of my cum. Her body bucked from her orgasm. The feel of the suction pressure on my over-sensitive glans made my hips buck and tremble, but I couldn't back away, frozen and unable to move in the overwhelming moment.\n\nI felt the glow of sexual vibrations start to ebb, and Kelly lifted her head and looked back at me. She continued to look at me, as she twisted to face me, sitting beside Carmen who was trembling, eyes closed as aftershocks course through her nerves. I smiled back, realizing Kelly was in control, and had been the whole time. Letting her power sustain us and not overwhelm all of us. I was proud of her in that moment. I shifted and looked at Jeremiah, who's features were clouded with shock and confusion.\n\nI exhaled and pushed my form to the front. Suddenly I was kneeling at Carmen's head, back in my simple dress. The remnants of sexual energy in the room overwhelmed my senses. Even though I'd just climaxed as Jeremiah, the overheated sexual aura from Kelly overloaded my senses and I shot through peak arousal in an instant. My orgasm shook through me as my body arched and legs flayed out, my limbs all trembling as my body was overwhelmed by orgasm. I stopped breathing and simply froze.\n\nKelly's eyes went wide as my body stiffened then convulsed like I was in a seizure. She scrambled beside me with a look of concern in her eyes. I finally gasped, in taking a huge breath, then shook my head.\n\n\"I'm fine...\" I managed, \"Oh fuck.. I'm fine fine.. shit.. damn..\"\n\nMy words just tumbled as my brain functions returned. The four others calmed as I settled into the bliss of afterglow. We were all silent for a few long minutes. Each other looking at each other as wonder and curiosity filled their thoughts in the absence of Kelly's sexual aura.\n\n\"So,\" Carmen finally said, \"When did this happen?\n\n*****\n\nAuthor's Note: Thank you for reading. Your comments and votes continue to encourage me. Thank you. Editing thanks to mgenette, who provided the description for the wedding dress. Everything else is my fault, including any grammar or word choices that made it into this edition. This story all takes place in the main past timeline. The far past and future lines still exist and I'll return to them next chapter."
    ],
    "authorname": "HankDolworth",
    "tags": [
        "supernatual",
        "female succubus",
        "shapeshifter",
        "double-penetration",
        "strap-on",
        "ffm",
        "female submission",
        "male dominance"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-designer-pt-02-ch-09"
}