{
    "title": "TT Spalding - PI",
    "pages": [
        "The second case for TT, and again, just for fun.\n\nTT Spalding- PI \u2013 The Partridge Case\n\nMaggie reminded me that I had a 3 pm appointment with a Mr. Henry Partridge today so I pulled out my trusty log book to review the client. What I had written there was in my own style and brought a picture of him to mind.\n\nWhen Henry Partridge came into my office, I knew something was up. He was a tall, heavy set man with a balding head and a swarthy complexion. His hands were big: big and gnarled, showing a lifetime of hard work. The same could be said of his face. The face of money well earned. There was also the look of a man who had seen his share of hard times and bad breaks. It was the face of success over adversity. That showed in the beer belly that flowed over the edge of my desk when he leaned across it to snarl at me.\n\nDamn! I loved this shit. I read it again and just loved the way the words rang out. This was one of the things I loved about my job. I kept a record of every visit and every client in this little tome. I was transported back in time to Sam Spade again. He was my hero, and the inspiration for my becoming a PI. Licensed right here in Richmond, Va. Maybe I would write a novel one day. Yeah, sure!\n\nHenry was a client: the one that I told Maggie about last week. He thought his wife of 24 years was cheating on him and he wanted me to prove it for him. It was strange though. It seemed to me that he loved his wife very much, and he talked about her as though she was a saint and he was the sinner. I got the impression he thought she was forced into cheating by his own actions. I wanted to get to the bottom of that little scenario and asked for another meeting with him. He was due in today at 3 sharp and I hoped to get what I needed. Since I had already agreed to help him, this was more of a fact finding mission than curiosity. Sure it was. \n\nMaggie buzzed me right at 3 sharp to tell me Henry was waiting. I told her to send him in and, as a thought, asked her to join us. She knocked a few seconds later and opened the door, ushering in Mr. Partridge. He looked exactly the same as I motioned for him to sit in the torture chair. You know the one. Maggie moved around to one side and took the more comfortable chair there. She crossed her legs with a smirk while I watched her. Damn she had nice legs!\n\n\"Thanks for coming in again Mr. Partridge. There were some things I wanted to go over with you. Oh, by the way, this is my wife, Maggie. She doubles as a secretary and keeps me honest. I get a lot of female clients, you know.\"\n\nI was trying to keep it light and loosen up our Mr. Partridge but it wasn't working. He just sat there like a slightly balding mafia hit man and stared at me. Well, what the hell. I'd just try again.\n\n\"You brought the information I asked for last time?\" I asked. I had asked him for all of the credit card info, the bank account numbers and her cell phone number. I also needed the home phone number, her SS number and any schedules she kept as to meetings, work, and the like. All stuff I could use to track her comings and goings. \n\n\"It's all here\" he said as he handed Maggie a very large manila envelope. Seems he took me seriously and brought everything that could possibly be used. \n\nShe took it with a smile.\n\n\"Thank you Mr. Partridge. We'll give you a receipt today before you leave and a copy of our license and bond to assure you. We will keep all information strictly confidential.\" \n\nIt seemed that Maggie's smile and voice were more suitable to Mr. Partridge since he gave her a huge smile. He actually blushed a little when she smiled at him in return. Well, what have we here?\n\n\"Tell me Henry, may I call you Henry? Why do you think your wife is cheating on you? What has she done to give you this idea?\"\n\nMaggie had gone right to work. She was quick on the uptake and saw the response she got from him so she decided to ask the initial questions. I was content and sat back to watch a pro work. And pro she was. She always made me feel like the employee and her the boss. She was my pride and joy! \n\n\"Connie, my wife, has always been very shy. She never did go out much and she was a great mother to our children. We have four, you know. I have one son who is a dentist and another son who is doing his residency in the hospital here in town. The other two, both girls, are still in college. They want to teach, both of them. They're great kids and it's all because of Connie. She did a great job. It was really special for us since neither of us ever finished High School. So you see?\"\n\nHenry seemed to be lost in a memory for a while as Maggie tossed me a look. It said, get some coffee or something before this guy goes to sleep. Maggie was not very sentimental when it came to kids. She never wanted any. So, neither did I. \n\n\"Anyway, where was I? Oh, yeah, Well, I own my own company. We do preparation work. You know, we clear and grade the land for new homes or buildings. We get it ready for the construction crews to start. A lot of those big yellow bulldozers and front loaders and the like you see are mine. I make a good living but it takes a lot of money to put the kids through college. Not that I minded you know, but it takes a lot. Having two in college at one time means a $50,000 a year bill for me. That meant I had to work a lot of hours to get the money. I was working fifty to sixty hours a week and still am. That makes for a lot of alone time for Connie now that the kids are all out of the house.\" \n\nHe paused to take a drink of the diet Pepsi I brought in from the cooler behind Maggie's desk. He took a deep breath and continued.\n\n\"Connie and I always had a good sex life.\"\n\nHere, he glanced at me and then back to Maggie. I could see the flush spread over his face and down his neck. It was almost funny to see a grown Mafia type sitting here in my office, embarrassed to death to be talking about sex with his wife. It was a riot but sort of sad too, since it was now very clear that this man loved his wife.\n\n\"I'm sorry to be talking about this but it's important. We made love you know. Not that kinky stuff these kids do nowadays. We made real love. Twice a week, sometimes more. I thought Connie liked what we did but maybe I was wrong.\"\n\nHe stopped to take another drink of the Pepsi and I saw him casually wipe away a tear when he thought we didn't notice. I saw Maggie and damn if there wasn't a tear there too! My Maggie, the hopeless romantic! I thought this was worth a ribbing or two before my better judgment kicked in. More likely, this could lead to some hot sex later if I played my cards right.\n\n\"Has your love life changed recently Mr. Partridge? Is there something different that you noticed? Anything at all?\"\n\n\"Yes, it's very different. She has wanted to have more sex lately and when we do have sex, it's really hot. I mean, you know, ah, very, sort of more, intense. She wants to try different things now and she wants me to be more, ah, 'aggressive' is the word she uses. I mean, I don't know where this is coming from but it is certainly different.\"\n\nThis really did him in. He had spilled his guts and it had cost him a great deal. It was clear that this bull of a man was embarrassed by all of this and he was just barely managing to hold it together to tell us this. He must have thought it was important so he did it. I think that's what he always did. He did what was necessary. \n\nI glanced at Maggie to see that she was still watering at the eyes. She had been devastated by the hurt in this man's soul. I decided that I should take it from here.\n\n\"Mr. Partridge. What you have described to us is a classic case of the changes we see with cheating spouses.\"\n\nI watched the pain spread over his face with this announcement so I hastened to try to give him some hope.\n\n\"But, it is could also be a sign that she's just doing some soul searching and trying to decide how she wants the rest of your lives to be. Remember, she lost her children now and she feels totally alone. You may be surprised at what we find.\" \n\nAs I hoped, some light came back into his eyes. Maggie stood up and held out her hand to our client.\n\n\"Come on Mr. Partridge. Let's get you back to work and you let us take it from here. Don't worry. We'll find the truth for you.\"\n\nMickey Spillane would have been proud. \n\nAfter he left, Maggie and I discussed the case. We listed all of the signs of a possible affair: the change in behavior, the change in their sex life, his observation of her actions, and not much else. If she was having an affair, she was leaving very few clues, and the changed sex life was too much of a clich\u00e9. Still, we had to operate on the theory that she was having an affair and then either prove it or disprove it. That's how we operated.\n\nI called Bruno Morelli this time since Polly took the last case. Polly was a better snoop, knowing a lot more about electronics, but Bruno was a brute force man. He was good at watching, waiting and then acting. He would watch until he established a pattern of behavior, he would wait to confirm what he suspected and then he would act by getting the evidence. We had never failed with Bruno. His method produced irrefutable evidence in several court cases. He and Polly were good friends and never minded sharing the cases. \n\nWhen we gave everything to Bruno, he listened to the tape of our conversation with Mr. Partridge and just shrugged his shoulders. \n\n\"Doesn't sound like much to me. I'll watch the Missus, see if she is meeting anyone and then I'll get the goods if there are any to get. How much time do I have?\"\n\n\"You have a week to start and then another week if you see something. OK?\"\n\n\"You got it boss. I'll start first thing tomorrow. Anything happens, it'll start after he goes to work.\"\n\nSo, the case was active. We were in business.\n\nFriday afternoon, exactly one week later to the hour, Bruno walked in the door to my office with a grin on his face. I was not surprised. He generally worked this way: nothing while he was in the field and then, \"Hi, Boss\".\n\n\"OK Bruno, what've you got?\"\n\n\"Well, there is definitely something funny going on. I spent the whole week outside her place and I watched this guy go in three times: Monday, Wednesday and today. Just like clockwork. He got there at 1:15 each day and left at 4:20 or thereabouts each day. Same guy, same time and same place. Awfully funny and awfully stupid for a cheater.\"\n\n\"Who is this guy? You must have done something besides just sit on your ass outside the house. You're too good at patterns to just let them go by without doing something. What'd you do?\"<BR><BR>\n\n\"Hah! You know me too well. I ran the plate on his car and found out who he is. His name is William Price. Lives here in town on the upper north side. Good neighborhood. Not married and lives alone. At least, that's what it says on the lease for his apartment.\"\n\n\"OK, so we know who he is. What does he do for a living? Did you find that out?\"\n\n\"Of course. That's what you pay me the big bucks for. He works for the city as an inspector for building permits. He travels all over but never misses his time with the Mrs.\"\n\n\"So, any idea of what's going on in there?\"\n\n\"That's what I wanted to talk to you about. You want me to get pictures?\"\n\nI considered. I had told Mr. Partridge the cost and we had agreed on the initial $500 only. I needed to call him and ask him. So, while Bruno waited, I called him at work.\n\n\"Hello, Mr. Partridge, it's TT Spalding. Yeah, it's me. Listen, do you know a man by the name of, . . . William Price?\"\n\n\"No? OK. Well, listen Mr. Partridge. Huh? OK, Henry. We have proof that Mr. Price is visiting your home in the afternoons but we don't know what's going on inside.\"\n\n\"Well, we don't like to assume anything Henry. What I'd like to do is get you the proof in pictures and do the report for you so you'll have everything you need if you want to do something about it.\"\n\n\"Yeah, we can but it will cost as we discussed. Right, the 3 grand. You're OK with that?\"\n\n\"OK. Yeah, goodbye.\"\n\nI turned to Bruno and gave him the thumbs up. He had the go ahead to go after pictures. He smiled, thinking of the $800 he would earn and left. I knew it was in good hands. As I said, Bruno was a real mechanic when it came to stuff like this. More focused and less emotional than Polly, but just as good. \n\nI told Maggie later that evening about what Bruno had found and she just shook her head back and forth. I knew what she was thinking. Why would this bitch cheat on such a good man. I agreed but I wasn't ready to throw in the towel just yet. We had only what Bruno saw. Nothing more. Yet!\n\nAfter this week, Maggie and I both had the urge to make quiet passionate love with each other. We went to bed Friday night, made love gently and sweetly and fell asleep in each other's arms.\n\nWe both woke up Saturday morning horney as hell. I awoke to the wonderful feelings of a warm, soft mouth on my morning hard on. I had to admit, waking this way was much better than the alternative. Maggie noted me awake and smiled up at me as she continued to work me into a frenzy. When my hips started to move frantically, trying to shove myself down her throat, she pulled away and quickly crawled up my body until she was face to face with me. \n\n\"No you don't big boy. I want that thing inside me now. You do right by your woman, you hear? Right this very minute!\"\n\nSmiling, I felt her hand move down to my erection and guide it into her warm wet crevice. The one between her legs this time. \n\nHer mouth was great and she was very talented but this was more like it. This allowed me to look at her wonderful body, her tits hanging within reach, her face showing her pleasure and her hips moving up and down as I watched. This had to be what it was like in paradise. This was what it was all about. Sex with the woman you loved. Nothing better. In my line of work, I knew that for a fact. I told her exactly that and she rewarded me by moving faster and presenting her tits for my feeling pleasure. So I did: I felt her tits and gave myself great pleasure.\n\nMaggie was now ready to explode so I grabbed her hips as she placed her hands on my shoulders to steady herself. I watched as she rose up and then slammed back down, her tits swinging wondrously. God, what a vision! I helped her establish a rhythm and closed my eyes to better enjoy. She was moving now faster and faster and driving down as far as she could and then grinding onto my groin. I pulled her tighter on each stroke and felt her muscles begin to grip tightly. She let out a deep groan, sort of like a sound of pleasurable agony, and then she shuddered and slammed down one last time. As I felt her walls grab and squeeze, I came with a mighty splash inside her. She let out a high pitched squeal and I knew she had come as well. \n\nFor several wonderful minutes, we just held each other and gloried in our passion. I wanted nothing more out of life than this. I was content. Maggie groaned as she moved away to roll onto her back.\n\n\"Don't you ever cheat on me, you hear? If you do, I'll cut off your balls and make you eat them for dinner. I swear\" \n\n\"Not to worry sweet one. I have all I want. You are more than I had any reason to hope for. I love you to death!\"\n\n\"Good!\"\n\nWe spent the weekend with each other and it was great. Sam Spade would understand what I was feeling. He knew a good woman when he saw one.\n\nMonday was a down day for us as we finished up some corporate stuff with reports and charts and graphs. Most of it was corporate intrigue that meant that we told them who was stealing from them and who was getting the information. It was very simple in most cases since most industrial thieves were just poor slobs trying to make an extra buck or two. Fortunately, it allowed us to do the same. Maggie and I worked most of the morning and were almost done when Henry came into the office.\n\n\"Henry! What are you doing here? We don't have the pictures yet. Should be done in a day or so but not now.\"\n\n\"Just wanted to pay you up front. That's how I do business and seems to me you folks have the goods anyway. I'll just give you a cashier's check for the $3000. OK?\"\n\n\"Sure, that's fine but you don't have to pay us now. Remember, you can decide if you're satisfied before paying the full amount.\"\n\n\"I understand. I'd just feel better doing it this way.\"\n\nWell, I took the check and filed it away for later. In the meantime, Maggie was talking to Henry sort of quiet and I could tell he was close to breaking down. I moved over to where they were and just listened. Henry was talking.\n\n\"No, you can't blame her. See, I worked so many hours and I left her alone so many times that she had to do something. I guess she wanted more but I was either not there or too tired most of the time. No, it's not her fault.\"\n\n\"Now Henry, you listen to me! You were working so very hard just to make sure you could give your children all you could. She knows that. She wouldn't hold you responsible for not being there when you did it all just for her and for them. No woman can blame her man for working to put food on the table and to put their children through school. That's your responsibility. Don't you dare try to excuse her behavior!\"\n\n\"But what do I do? I love her so much but I don't think I can share her love. I know I can't forgive her for this. I have to let her go, but it'll kill me.\"\n\n\"Before you do anything, consider all you two have been through together. Can you forget that? Can you live with her, knowing what you do or can you let her out of your life? These are questions you have to ask yourself.\"\n\nHenry was almost in tears, but he listened and he considered. He was a good man who had been dealt a hard blow. But he was a survivor and he would survive. That much I knew. However, I still had my doubts and I expressed them.\n\n\"Henry, I want you to go home and remember this. Right now, we suspect but we don't know. Until my man comes back with proof, remember she's innocent until proved guilty. And another thing. The reality of the pictures may be worse than you can imagine. You have to be sure you want to see them when the time comes.\"\n\nCorny but effective. I would have to put that in my trusty log. Mickey, watch out. \n\nWednesday Bruno called and said he was done. Wanted to come in first thing in the morning to put it together. I agreed but asked if he could give me a hint. He laughed and said mystery was my bag so I could just wait and wonder.\n\nBy the time Bruno was finished the next day, it was close to quitting time so I called Maggie in and locked the doors. We wanted to hear this and we both were too tense to wait any longer. It was unusual but we found we all liked Henry. The big, mean looking, balding, pot bellied, mafia look alike was a pussy cat. In our business we saw cheaters, thieves, liars, two timing SOBs and their like. We rarely saw a Henry, and we all wanted him to come out a winner. With fingers crossed, I gave Bruno the go ahead.\n\n\"OK, folks. Here goes. Our Connie Partridge is a very pretty woman who works out for an hour a day in the little home gym that she and Henry set up in one of the spare rooms. Connie is a babe. She looks very good in her capri's and workout shorts. But I digress.\"\n\nBruno was just being Bruno. He loved people and what made them tick. This was right on the money for him. Maggie and I both understood him so we patiently waited.\n\n\"OK, her visitor, Billy Boy Price, is a very smart man. He is the office manager for the city planning board and he is the guy that gives the certificate of occupancy to people wanting to move into their new home. It's a good job and he gets out a lot. That gives him the opportunity to make his three times a week visits to our Connie.\"\n\n\"Now, what goes on in that house when Billy Boy stops by you might ask. Well so did I but I was surprised by the answer. Now, I'm going to surprise and delight you with a couple of pictures. One for you lady boss, and one for you Mr. boss.\"",
        "Bruno handed Maggie and I each an 8x10 glossy of Bill Price and Connie Partridge together in the living room of 1126 Landing Place Lane, the home of our Henry and Connie Partridge. As I studied the picture I began to laugh, followed immediately by Maggie. We laughed so hard we had tears coming out of our eyes in buckets. I couldn't help it, I laughed until I was almost sick. I had never been happier in my life. When we began to slow down, he gave each of us a small note with something written on it. I read it and began laughing again, only this time harder if that was possible. \n\nMaggie recovered first and went over to Bruno and gave him a big wet kiss. I watched in satisfied pleasure as Bruno's eyes flew wide open. Ah, Maggie could kiss a mad bull into submission without breathing hard. God, I loved that woman. But I think I've said that before.\n\nMaggie went immediately to the phone and called Henry. He was still at work and she told him to stop in before going home. She had something he had to see. No hint or clue from my Maggie. She wanted to tell him this in person. So did I.\n\nThe three of us were waiting for Henry when he came through the door. I almost blurted it out right then when I saw his face. He looked sadder than an unhappy bloodhound. If looks told the tale, he believed his world was coming to an end. I was glad I wasn't the one responsible for making him look like that. Hell, I decided to put him out of his misery.\n\n\"Henry, this is Bruno Morelli. He is one of my top investigators and he was assigned to your case. I'm going to let Bruno give you a verbal report right away. The finished report will be done tomorrow and you'll have everything we have then but no use making you wait. We'll also give you back the information you gave us. That will conclude our business.\"\n\nI turned to Bruno with a solemn look on my face and told him to go ahead and give a 'verbal report' to our client. Bruno returned my solemn look with one of his own, almost causing me to crack up right then. I turned and sat before I burst out laughing. \n\n\"Mr. Partridge, I can tell you that your wife, Mrs. Constance Partridge, has been seeing a man by the name of William Price three times a week from 1:30 pm to 4:20 pm give or take a few minutes. This has been occurring for just over three weeks as of last Friday. He visits on Monday, Wednesday, and Friday.\"\n\n\"Are there any questions so far?\" Bruno waited to see if Henry was going to ask but it appeared not.\n\n\"Well then, the purpose of the visits is clear in these pictures I have. Please look at them before I give you the conclusion.\"\n\nWith that, he handed three pictures to Henry, similar to the ones he gave Maggie and me. Henry looked at the first one, then the second and finally the third. I watched his haggard face begin to relax and then the smile began. By the time he had understood the significance of the pictures, we were almost beside ourselves. One last thing to do.\n\nAs Henry looked up at Bruno, Bruno very solemnly gave him the clincher.\n\n\"I have some further information about Mr. William Price. Mr. Price is lovingly referred to as Billy Boy Price. He is the son of a woman your wife knows. He is gay and is currently cohabitating with another male friend named Clyde Post. So. In conclusion, your wife has been meeting three times a week with a gay male friend who is helping her complete the requirements for her GED. She is going to complete the course this very week and she is hoping to surprise you this coming Friday with a small party at your home.\"\n\nAt that we all burst out laughing as we watched Henry. He was sitting there with the pictures forgotten in his hands grinning like a moron. He was absolutely beaming! His wife, his love, was not cheating on him! \n\nBruno had spoken to Bill Price. Billy boy told him she was doing this as a gift of love. She wanted to get her GED so she could get a job and make some money so Henry didn't have to work so many hours. Billy was helping her to complete the requirements laid out by the state and he promised to help her find a good job, maybe one with the city. \n\n\"This is all true? This is what she was doing all along? You're sure? Please, are you sure?\"\n\n\"Positive Henry. Absolutely positive. Congratulations: your wife loves you and she is completely faithful to you. Go home, Henry. Go home to your loving wife and enjoy her.\" \n\nWhen Mickey Spillane wrote Mike Hammer, he was more concerned with the bad guys and I loved his novels like I loved my wife. But damn! Wasn't it fun to see the good guy win one once in a while?\n\nHenry left, I gave Bruno a check for $900 instead of the $800 he normally got because I was so damn glad it worked out as it did and Maggie and I locked up for the night. We had done well: case solved, husband and wife still together, money in our pocket and love in our hearts. We went home to enjoy our own life.\n\n<H2>Epilog</H2>\n\nThat night as we lay sated and relaxed in each other's arms after another bout of loving sex, Maggie asked me if it was time to think about a vacation. I considered but finally told her I thought it would have to wait. We had another client.\n\n\"What's this one about or should I ask?\"\n\n\"You can ask me anything my dear wife so long as you don't care if I answer. Anyway, this guy came in yesterday morning when you were running some errands. He just found out his wife is seeing someone but he's not sure who. Seems she, . . . , well, I'll just let you meet him and draw your own conclusions. I don't want to influence you. Might have to use both Polly and Bruno on that one.\"\n\n\"You and your hunches. Goodnight lover.\"\n\nTo be Continued... "
    ],
    "authorname": "thecelt",
    "tags": [
        "cheating wife",
        "happy ending"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/tt-spalding-pi"
}