{
    "title": "The Way You Say My Name Ch. 04",
    "pages": [
        "All the euphoria from lunch evaporated in the split second it took Dillon to get from the school to his car, only to be replaced by raw fear. He peeled out of the parking lot, not caring that his tires squealed or that half the school probably heard it. He had to get to Jamie. He was out there, in the cold, alone, and grieving for his best friend.\n\nDillon drove like a maniac, taking the most direct route to Jamie\u2019s house. He found Jamie about a block from school, walking in what Dillon could only describe later as a trance. He pulled over and rolled down the window. \u201cJames?\u201d\n\nJamie turned to look at him, his eyes glassy and dazed. \u201cDillon?\u201d\n\n\u201cYeah, James, it\u2019s me.\u201d\n\nJamie shook his head, as if he was trying to clear it. \u201cYou heard about Ben?\u201d\n\nFor the second time that day, Dillon put his car in park and got out to go to Jamie, this time approaching him with a delicate care he hadn\u2019t known he even possessed. The last thing he wanted to do was frighten him and make it worse. The blank look on Jamie\u2019s face scared the daylights out of him, but he did his best to keep the worry from showing.\n\n\u201cI heard.\u201d He took Jamie\u2019s hand and led him, unresisting, to the car. \u201cLet me take you home, baby. You shouldn\u2019t be out here by yourself.\u201d He helped Jamie into the passenger seat and buckled him in. Closing the door, he whipped out his cell phone and removed the card Brandon Nash had given him from his pocket. Home. He\u2019d try the home number first. He just prayed to God someone was there who could help.\n\nWhen Nathan Nash picked up on the second ring, Dillon wanted to weep with relief. \u201cHello?\u201d\n\n\u201cDr. Nash?\u201d\n\n\u201cYes?\u201d\n\n\u201cDr. Nash, it\u2019s Dillon Carver. I need your help.\u201d\n\n\u201cDillon? What\u2019s the matter, kiddo? Are you okay? Is Megan?\u201d The concern in Nate\u2019s voice was almost Dillon\u2019s undoing, but he knew he had to stay strong for Jamie.\n\n\u201cMegan and I are both fine, but Jamie isn\u2019t doing so hot. To be honest, Doc, I\u2019m scared to death here.\u201d\n\n\u201cJamie? You mean James Walker?\u201d The light must have dawned, because Nate said. \u201cOh my God. He was dating Ben Lewis, wasn\u2019t he? Then he knows?\u201d\n\n\u201cAbout Ben\u2019s death? Yes, sir. They weren\u2019t dating, but they were close. And the whole school knows. Principal Morgan announced it right before sixth period.\u201d\n\nNate swore. \u201cBrandon is gonna have kittens over that one. How did Morgan find out, anyway? Brandon\u2019s still out at the scene, and I know for a fact he hasn\u2019t made a press release.\u201d\n\n\u201cI don\u2019t know. I missed the announcement, but, according to Megan, he didn\u2019t give any details. Morgan just basically said, \u2018Ben\u2019s dead,\u2019 and that was it.\u201d \n\nNate swore again, this time using a more colorful word that seemed out of place coming from the staid doctor. \u201cWhat\u2019s done is done, but I feel damn sorry for Morgan when Bran finds out.\u201d He blew out a deep breath. \u201cSo, what\u2019s going on with James?\u201d\n\nDillon looked towards the car, where Jamie was sitting, stock still in the same position Dillon had left him in. \u201cI\u2019m not sure, Doc. I found him on Harp Street, about a block from school. His eyes are glassy, and he seems really confused. It\u2019s almost like he\u2019s not even in there.\u201d\n\n\u201cIt sounds like he\u2019s in shock. Where are you now?\u201d\n\n\u201cStill on Harp Street. I called you as soon as I got him in the car. I was gonna take him on home, but I wasn\u2019t sure if he needed to go to the hospital or not.\u201d\n\n\u201cUsually, if the shock is fairly mild, the patient does better in his own home. Where does Jamie live?\u201d\n\n\u201c2238 Lambert Lane. He lives with his aunt. She\u2019s probably not home, though. She usually keeps busy during the day.\u201d A thought occurred to him. \u201cShould I try to get in touch with her?\u201d\n\nNate said, \u201cGo ahead and get him home. I\u2019ll meet you there, and then I\u2019ll call her myself after I\u2019ve checked him over. That way I can explain what\u2019s going on, hopefully without scaring her to death.\u201d\n\n\u201cOkay, Doc. I\u2019m headed there, now. And Doc? Thanks.\u201d\n\n\u201cI\u2019m glad to help, Dillon. You go take care of James, and I\u2019ll see you in a few.\u201d\n\nDillon disconnected and returned to the car. Even when Dillon got in and closed the door behind him, Jamie didn\u2019t stir. With one eye on Jamie and the other on the road, Dillon drove the rest of the way to Sadie\u2019s house.\n\nHe pulled into the driveway and turned to Jamie. \u201cJames? We\u2019re at your house. Do you have your keys?\u201d\n\nWith the same blank stare on his face, Jamie reached into his pocket and handed over the keys, but made no move to get out of the car. Dillon ended up having to lead him into the house.\n\nOnce inside, Dillon said, \u201cCome on. Let\u2019s get you upstairs and into bed.\u201d Jamie just stood there, not saying a word. Dillon got behind him, and, putting his hands on the slight curve at Jamie\u2019s hip, guided him up the stairs \n\nJamie\u2019s room was located on the far side of the upstairs hall. Unlike the rest of the house with its Victorian wallpaper and heavy furnishings, Jamie\u2019s room was pure Jamie. The walls were painted a deep burgundy, and the drapes and coverings for the queen-size cherry bed were a warm shade of green. The rest of the furniture, which included a dresser, a table, a couple of chairs, and a computer desk, were finished in the same cherry tones as the bed. But instead of the posters and pin-ups most teenage boys had scattered across the walls, Jamie\u2019s room was decorated with magnificent architectural sketches he\u2019d drawn himself and Aunt Sadie had framed. He was gonna make a heck of an architect one of these days. Dillon only hoped Jamie would allow him to be there to share in his success.\n\nDillon moved Jamie to the edge of his bed. \u201cJames? I\u2019m gonna undress you now so that you\u2019ll be more comfortable, okay?\u201d\n\nWhen Jamie didn\u2019t say anything, Dillon took the silence as agreement and grabbed Jamie\u2019s long-sleeved t-shirt, pulling it over his head. It wasn\u2019t until Dillon started removing the t-shirt he wore underneath that Jamie started whimpering.\n\n\u201cJames?\u201d\n\nJamie\u2019s voice was ragged, laced with upset, \u201cPlease, don\u2019t. I can\u2019t . . . I don\u2019t--\u201d\n\n\u201cShh.\u201d Dillon rubbed his hands up and down Jamie\u2019s arms. \u201cIt\u2019s nothing like that, I swear. I just want to make you comfortable so you can rest until Dr. Nash gets here.\u201d\n\nSomething in Dillon\u2019s voice must have reassured him, because he allowed Dillon to strip him down to his boxers without further protest. The sight of Jamie\u2019s near-naked body, well-toned without being overly muscular, had Dillon fighting a losing battle with his rapidly hardening penis. He willed it to go down, mentally cursing at it, calling it names. Damn. That was the last thing Jamie needed to see.\n\nThankfully, Jamie wasn\u2019t paying attention, and Dillon was able to get him under the covers without incident. Jamie curled up into a ball, closing his eyes and burrowing under the blankets. Dillon stared at him for a full five minutes, his heart aching for the pain Jamie must have been going through. Eventually he left, pulling the door to and going downstairs to wait for Nate.\n\nHe didn\u2019t have to wait long. He\u2019d just reached the front hall downstairs when he heard the doorbell. Without even checking to see who it was, he turned the knob, letting Nate in with a weary sigh.\n\n\u201cDr. Nash, you have no idea how glad I am to see you.\u201d\n\nNate placed his medical bag on the floor and closed the door behind him. \u201cHow many times do I have to tell you, Dillon? My name is Nathan or Nate. No more of this Dr. Nash stuff.\u201d Then he did something that surprised the heck out of Dillon. He wrapped both arms around him and pulled him into a crushing hug.\n\nWhat surprised Dillon even more was how good it felt. Neither of his parents were touchy-feely folks. His mother was moderately affectionate, but his father rarely ever did more than pat him on the back, and the older he got, the less often that happened. Dillon found himself returning the hug tenfold.\n\n\u201cIt\u2019s gonna be okay, kid. I promise.\u201d Pulling back, Nate said, \u201cWhere\u2019s James now?\u201d\n\n\u201cUpstairs, in his room. I thought he might rest better in bed.\u201d\n\n\u201cGood thinking. Which room is his?\u201d\n\n\u201cLast one at the back of the upstairs hall, to the right.\u201d\n\nNate nodded. \u201cI\u2019m going to go up and examine him.\u201d He reached down and picked up his bag. \u201cWhy don\u2019t you see if you can find a phone number for his aunt while I check him over?\u201d\n\n\u201cI will.\u201d Phone number? Shit. He smacked his forehead. \u201cI\u2019ve got to call my boss. He\u2019s gonna wonder where I am.\u201d\n\n\u201cGo ahead. I\u2019ll come back downstairs as soon I\u2019m done.\u201d \n\nDillon waited until Nate was on his way upstairs and then pulled his cell phone back out. Dialing the number from memory, Dillon waited for someone to pick up.\n\n\u201cSavings Central Drugs. How can I help you today?\u201d\n\n\u201cCarl? It\u2019s Dillon. Is the boss around?\u201d\n\nDillon wasn\u2019t surprised by Carl\u2019s next question, considering they went to the same school, though Carl was only a sophomore. \u201cHey Dillon. Did you hear about Ben Lewis?\u201d\n\n\u201cYeah.\u201d\n\n\u201cOh wow. I bet it was a drug deal gone bad. Everyone knew Lewis was a user. Either that, or a suicide. Oh, or a gay love triangle. Bet James Walker found him with another guy and offed his ass.\u201d\n\nDillon gritted his teeth. \u201cCarl, could I please speak to Mr. Pembroke?\u201d\n\n\u201cWhat? Oh, sure Dillon. Just a sec while I get him.\u201d Dillon was stuck listening to a lame rendition of a Garth Brooks song while he waited for what seemed like an eternity. He\u2019d just about decided to hang up and try again when Jim Pembroke picked up.\n\n\u201cDillon? Carl said you needed to speak with me. Sorry it took so long, son. I was in the back taking inventory.\u201d\n\n\u201cNo problem, Mr. P. I was calling to tell you that I\u2019m not gonna make it in. I know it\u2019s short notice, and I swear I\u2019ll make up the time.\u201d\n\n\u201cNonsense. You\u2019re the best worker I\u2019ve got. You\u2019ve come in above and beyond what was asked of you. In fact, I think this is the first time you\u2019ve ever called in to tell me you weren\u2019t coming.\u201d Pembroke paused. \u201cI hate to pry, Dillon, but is everything all right?\u201d\n\n\u201cI think it will be soon, sir. I just need time to get a couple of things sorted out. If that\u2019s okay?\u201d\n\nThe warmth in Mr. Pembroke\u2019s voice was reassurance itself. \u201cYou just take care of business, and I\u2019ll see you as soon as you can make it back in.\u201d\n\n\u201cThanks Mr. P. See you soon.\u201d\n\nAfter hanging up, Dillon searched around for some idea of where Sadie might be. He\u2019d just abandoned his efforts when the front door opened and Sadie came barreling inside. She spotted Dillon immediately.\n\n\u201cDillon Carver. What are you doing in my house? And whose Buick is that in the driveway?\u201d She looked around the living room, then marched down the hall to the kitchen. Coming back into the living room proper, she said, \u201cWhere on earth is Jamie, and what in the blue blazes is going on?\u201d\n\nDillon was saved from having to answer by Nate, who came back downstairs at exactly the right time. \u201cI think maybe I can clear that up, ma\u2019am.\u201d Nate walked into the living room and motioned towards one of the richly upholstered sofas. \u201cDo you mind if we sit down to discuss this, Miss Banks?\u201d\n\nSadie put her hand to her chest. \u201cDr. Nash, what are you doing here? Oh, lord. Is it Jamie? Is he all right?\u201d\n\nNate took her elbow and led her to the sofa, joining her there and gesturing for Dillon to take one of the wingback chairs. When all were seated, Nate said, \u201cMiss Banks, James has suffered a mild shock. Dillon found him wandering out on Harp Street, dazed and confused. He picked him up and brought him here after calling me to come and check him over. I gave James a brief examination, and it\u2019s my feeling that the shock is only temporary. I can write him a prescription for a mild sedative, if you\u2019d like, but in all honesty, I prefer to let these things run their course, especially given the nature of the situation. If you\u2019d like a second opinion, however, I\u2019ll understand completely.\u201d\n\nSadie shook her head. \u201cThat won\u2019t be necessary. I know your reputation, and I feel comfortable enough to go with you on this. But, Dr. Nash--\u201d\n\n\u201cPlease, call me Nathan.\u201d\n\n\u201cOnly if you\u2019ll call me Sadie. Now, as I was saying, I appreciate you coming and looking Jamie over, but if someone doesn\u2019t tell me exactly why my nephew is in shock, and just what in the bloody hell is going on, I swear before the Lord Jesus Almighty I will pull out my Grandmother Bank\u2019s cast-iron skillet and lay open every last one of your thick skulls.\u201d\n\n \n\nDillon could tell that Nate was doing his best not to crack-up. \u201cYou\u2019re absolutely right, Miss Sadie, and I\u2019m sorry for not explaining earlier. This afternoon, Brandon got a call about a suspicious death. Since today was his day off, the call came through to the house. I\u2019d just finished up a shift at Chicago General, so I was at home when the call came in. I can\u2019t give you any of the details, mainly because what little I know hasn\u2019t been released yet. Since it seems that Principal Morgan jumped the gun and made the infamous \u2018announcement\u2019 over the loud speaker at school, I think it\u2019s safe for me to tell you that the victim was Ben Lewis.\u201d\n\nSadie pressed her knuckles to her breastbone. \u201cBen Lewis is dead? No wonder Jamie\u2019s in shock, Lord love him. He must have heard that idiot Morgan\u2019s little speech.\u201d She sighed. \u201cAre you sure he\u2019s going to be all right? Can I see him?\u201d \n\n\u201cHe was resting when I left, but of course you can see him anytime you like. As for whether or not he\u2019ll be all right, my belief is that he\u2019ll start to come out of it soon. If we don\u2019t see an improvement over the next four to five hours, I recommend that we take him on into Chicago to have him examined more thoroughly than I can do here.\u201d He stood up. \u201cNow, if you\u2019ll excuse me, I\u2019m going to go call Brandon and let him know where I am and what\u2019s going on. If Jamie\u2019s initial shock wears off the way I think it will, I\u2019d like to have Brandon talk to him directly and explain exactly what happened.\u201d\n\nSadie nodded. \u201cThat sounds reasonable to me. I\u2019ll let him rest until the sheriff gets here. Oh, did you need to use the phone in the kitchen?\u201d\n\n\u201cNo, ma\u2019am. I have my cell with me.\u201d Nate pulled it out of his pocket. \u201cI\u2019ll just take my bag back out to the car and place that call.\u201d It wasn\u2019t until after he left that Dillon realized he was alone. With Sadie.\n\nThe minute Nate was gone, she did her version of a verbal pounce. \u201cWhile I appreciate you bringing Jamie home, Dillon, given the dubious nature of your recent relationship--namely the fact that you threw my nephew away like a piece of trash two years ago--I think perhaps it\u2019s time for you to go.\u201d\n\nThe metallic taste of raw panic rose into Dillon\u2019s throat. He\u2019d just re-established a slight connection with Jamie, tenuous at best, but enough to have him hoping. He couldn\u2019t lose it now. Clearing his throat, he said, \u201cMiss Banks, please don\u2019t send me away. I promise not to cause Jamie any pain, but I . . . I need to be here.\u201d\n\nSadie\u2019s hawk\u2019s eyes narrowed on Dillon\u2019s face. \u201cAnd why is that?\u201d\n\nDillon\u2019s voice was choked with emotion, but he kept his eyes locked with Sadie\u2019s. \u201cBecause I\u2019m gay, and I\u2019m in love with him.\u201d\n\nInstead of the stunned silence he expected to come from his announcement, Sadie nodded and said, \u201cThought so.\u201d\n\nDillon felt like he\u2019d been whapped with a brick. \u201cYou knew?\u201d\n\nSadie shrugged. \u201cJust because I never married doesn\u2019t mean I don\u2019t know what love looks like, nor does it mean I couldn\u2019t see the way you and Jamie smiled at each other when you thought I wasn\u2019t looking. And it didn\u2019t take an act of genius to realize why the two of you spent so much time up in Jamie\u2019s room. Didn\u2019t take me long to put together the reasons why you broke off all ties with him, either. You were afraid your parents would find out, weren\u2019t you?\u201d\n\n\u201cYes, ma\u2019am.\u201d He got up and paced the length of the room. \u201cI got scared and ruined everything.\u201d\n\nSadie leaned back into the soft cushions of the sofa and smoothed her fingers over the skirt of her dress. \u201cAnd what about now, Dillon? Aren\u2019t you still scared? You and I both know your parents have been nothing if not vocal in their opposition of homosexuals.\u201d\n\nDillon turned back to face her, his voice stronger this time. \u201cI am scared. I won\u2019t lie about it. I know that my folks will toss me out, and I also know that I\u2019ll be basically on my own. I\u2019m scared of their reaction, scared of the future, and scared of having to face it all. But I intend to tell them--and everyone else--all the same.\u201d\n\n\u201cIf you\u2019re so frightened, then why come out at all?\u201d\n\nDillon came back to sit beside her on the couch. \u201cBecause, as scared as I am of what\u2019s gonna happen to me once I come out, I\u2019m that much more terrified of living without James for another minute, much less the rest of my life.\u201d\n\nSadie reached out and ruffled his hair the way she had when he and Jamie were kids. \u201cYou know you\u2019re going to have your work cut out for you, don\u2019t you?\u201d\n\n\u201cYes, ma\u2019am.\u201d\n\n\u201cWell, for what it\u2019s worth, you have my support.\u201d\n\nThe front door opened and Nate came back in before Dillon had a chance to tell her how much that meant to him. The look on Nate\u2019s face was grim as he removed his coat.\n\n\u201cBrandon\u2019s on his way here. I\u2019ll let him explain everything.\u201d He hung his coat on the hall tree and tucked his gloves into the pocket. \u201cI\u2019m not sure how much of what he has to say will help James, but we can always hope. I\u2019m going to check him over one more time before Bran gets here.\u201d\n\nSadie and Dillon both nodded. Dillon longed to go upstairs with Nate, but forced himself to wait, instead. He prayed that whatever the sheriff had to say would give Jamie some peace, but the gnawing in his gut told him otherwise.\n\n      #\n\nJamie fought his way through a fog of whispers and stirrings. He kept the truth about Ben at bay by pushing at it with a blank wall, a wall of carefully crafted ignorance. He could hear someone talking to him, but in the fuzzy blankness, it didn\u2019t matter. Here, in this place, Ben was still alive because Jamie said it was so.\n\nGradually, though, the fuzzy comfort began to ebb. The reality of someone in his room, prodding at him, urging him back, proved to be too much. He didn\u2019t want to go. He fought and struggled, but in the end, he was no match for the hypnotic pull of consciousness. He opened his eyes to see Nate Nash standing over him.\n\n\u201cHow are you feeling, kid?\u201d\n\nGood question. He wished to God he knew how he was supposed to feel. Be nice if someone would just tell him how to feel and be done with it. Instead of saying all that out loud, his only response was a feeble shrug. He hoped his non-response would prompt the doctor to leave.\n\nNate more than matched him with persistence, though, and he showed no signs of giving up or going away. He sat down on the side of the bed. \u201cDo you hurt anywhere, James? Any nausea or dizziness?\u201d\n\nJamie\u2019s reply was little more than a soft grumble. \u201cNo. I just wanna go back to sleep.\u201d\n\nNate\u2019s eyes were filled with sympathy. \u201cI know you do, but I need you to stay with me for a few minutes. Can you do that?\u201d\n\nHe didn\u2019t want to. He wanted to yell, to tell the doctor with the kind words and soothing tones to get out, to leave him alone. But being raised by Sadie Banks marked a person with good manners for life. He heard his own voice betray him by saying yes.\n\nNate said, \u201cGood. Brandon will be here in a few minutes, and I think he\u2019ll want to talk to you.\u201d\n\nJamie\u2019s voice sounded small, fragile. \u201cAbout Ben?\u201d\n\nNate reached forward and smoothed Jamie\u2019s hair away from his brow. \u201cYes, James. About Ben.\u201d\n\nJamie backed away from the touch, as far as he could without unwrapping the layer of covers he had banded around him. Nate backed off, but didn\u2019t move from his post on the edge of the bed. \u201cI know you\u2019re hurting, James, but you have people who care about you, who understand what you\u2019re going through. Let us help.\u201d\n\nJamie\u2019s initial shock was slowly being replaced by anger. How dare this guy come into his room and start claiming he knew how Jamie felt? Manners be damned. Jamie sat up.",
        "\u201cYou don\u2019t know how I feel.\u201d\n\nIf Nate was surprised by the venom in Jamie\u2019s voice, he hid the reaction well. \u201cI know it seems that way to you right now, James, but I swear, I do know what you\u2019re going through.\u201d\n\nThat did it. \u201cOh yeah? Did you lose your best friend?\u201d Jamie was all but snarling.\n\nNate\u2019s reply was basic, matter-of-fact. \u201cYes.\u201d\n\nNothing dampens the fires of anger better than being proved wrong smack in the middle of a boiling rage. Jamie looked down at the covers. \u201cOh. Sorry.\u201d\n\nNate actually smiled. \u201cIt\u2019s okay, James. I was angry when I lost my Amy, too. Perfectly natural reaction.\u201d\n\nAmy? That name sounded familiar. Then it hit him. \u201cWasn\u2019t that the lady doctor who was killed in an explosion?\u201d\n\nNate\u2019s eyes took on a far-away gleam as he nodded. \u201cThat was her. Dr. Amy Vaughn. She and I came here together from Georgia to open a medical practice. I won\u2019t re-hash all the details, but the explosion which cost Amy her life was actually meant for me. I was a complete basket case after she died. It took me nearly a month just to function like a normal human being again.\u201d\n\n\u201cHow long were you guys friends?\u201d\n\n\u201cAlmost twenty-years.\u201d\n\nJamie felt shame overtake him. \u201cDamn. I\u2019m such a prick. You lost your best friend of twenty-years, and here I am making you relive it when I barely knew Ben a tenth of the time you and she were together.\u201d\n\nNate reached for Jamie\u2019s hand, and this time, Jamie didn\u2019t pull away. \u201cTwo years or twenty, it doesn\u2019t matter. It still hurts to lose someone you care about. Every thing you\u2019re feeling right now is perfectly natural. Don\u2019t be surprised if you have a wide range of emotions to deal with over the coming days and weeks.\u201d\n\nJamie sighed. \u201cWhen does it stop hurting so bad?\u201d\n\nNate squeezed his hand. \u201cI don\u2019t think the sense of loss ever goes away completely, but it does get easier to handle. I wish I could give you a time table, but it\u2019s different for everybody.\u201d\n\nA knock on the door stopped further conversation. Nate looked to Jamie. \u201cI imagine that\u2019s Brandon. Are you ready for this?\u201d\n\nHe wasn\u2019t, but that didn\u2019t keep him from nodding in agreement. Nate called out, \u201cCome in,\u201d and Brandon Nash entered the room.\n\nNate crossed over to where he stood and greeted him with a bracing hug and a peck on the cheek. \u201cHow\u2019d it go?\u201d\n\nBrandon draped his right arm around Nate\u2019s waist. \u201cWe won\u2019t know anything more for a few days, not until the coroner\u2019s report comes in.\u201d He glanced towards the bed. \u201cIs he ready for this?\u201d\n\nA spark of anger returned. Jamie sat up straighter on the bed \u201cYou don\u2019t have to talk around me like I\u2019m not here.\u201d\n\nBrandon grinned. \u201cSorry about that. According to Nate, that\u2019s a bad habit of mine.\u201d  \n\nJamie hunched one shoulder. \u201cS\u2019okay.\u201d\n\n\u201cSo, are you ready to hear this?\u201d\n\nJamie leaned back against the pillows. \u201cNo, but I want to hear it, anyway.\u201d\n\nBrandon nodded and dragged one of the chairs closer. Straddling it backwards, as was his favorite position, he waited for Nate to resume his seat on the edge of the bed, then said, \u201cI\u2019m only gonna be able to tell you part of it, because this is an ongoing investigation, but I\u2019ll do my best to tell you all I can.\u201d\n\n\u201cOkay.\u201d\n\n\u201cJust after breakfast this morning, I got a call about an accident out on Tully Road. The body of a young man was found, fully clothed, lying on the side of the road not far from a black, older model Firebird.\u201d\n\n\u201cBen.\u201d \n\n\u201cYes. We\u2019ll have to wait for the autopsy before we declare an exact cause of death, but all preliminary reports indicate he was the victim of a hit-and-run.\u201d\n\nJamie clutched the blankets tighter. \u201cHe was murdered? You\u2019ve got to launch an investigation, call in the F.B.I., whatever it is you do. You\u2019ve got to put out an A.P.B. on the killer\u2019s car. You\u2019ve--\u201d\n\n\u201cHold it.\u201d Brandon put up both hands to stop Jamie\u2019s tirade. \u201cDo all you kids O.D. on T.V. crime dramas?\u201d Under his breath, he said, \u201cWhen I get my hands on that idiot Morgan, I\u2019m gonna rip his ass a new one for making that damn announcement.\u201d He turned back to Jamie. \u201cIn the first place, nothing found at the scene indicates that Ben Lewis was murdered.\u201d\n\n\u201cBut you said--\u201d\n\n\u201cWhat I said,\u201d Brandon spoke slowly, much like one would speak to an unruly five-year-old, \u201cwas that Ben was the victim of a hit-and-run. Yes, it\u2019s a crime to hit someone and leave the scene of an accident. When I find the person who did it, you can bet your last buck that I\u2019ll see his ass prosecuted. I\u2019ve got my men searching for the car even as we speak. But that doesn\u2019t mean that it was a case of intentional homicide.\u201d\n\nJamie\u2019s blank look more than conveyed his lack of understanding. Nate stepped in. \u201cWhat he means, James, is that Ben\u2019s death was probably unintentional, and the guy who hit him ran scared and left the scene. Tully Road hosts a string of beer joints a mile long, literally. More than likely, the guy was drunk, didn\u2019t see Ben standing there, hit him, and then panicked.\u201d\n\n\u201cWhy would Ben be out of his car in the first place?\u201d\n\nBrandon leaned his arms on the back of his chair, resting his chin on his forearm. \u201cI can answer that. Ben\u2019s front tire on the driver\u2019s side was flat. Since his car was pointing back in the direction of the Reed City limits, he\u2019d have been facing traffic while trying to change it. We found a disassembled jack and a tire iron not far from the body. Most likely, he\u2019d just gotten them out of the trunk and was headed back to the front of the car when he was hit.\u201d\n\nJamie wasn\u2019t sure what to say. He appreciated the sheriff\u2019s honesty, and he was glad to know what happened, but that didn\u2019t take away the loss. If anything, knowing that Ben\u2019s death was probably the act of some drunken asshole made it worse. His death was meaningless, just one more statistic on some nameless tally somewhere.\n\nNate cleared his throat. \u201cDo you have any questions for us, James?\u201d\n\n\u201cJust one. Did he,\u201d his voice cracked. \u201cDid he suffer?\u201d\n\nBrandon shook his head. \u201cI can\u2019t say for sure, not until the report comes back, but I honestly don\u2019t think so. Going by his injuries, I\u2019d say death came quick, if not instantly.\u201d\n\nJamie went back to picking fuzz balls from the blankets. \u201cThanks.\u201d He took a deep breath. \u201cIf you don\u2019t mind, I think I\u2019d like to be alone right now.\u201d \n\nNate stood up, and Brandon did the same. \u201cWe understand, James. I\u2019m gonna leave a prescription for a mild sedative with your aunt, just in case you need it. And I\u2019ll make sure she has all our numbers. You can call us anytime, for any reason. Also, if you\u2019re okay with it, I\u2019ll come back tomorrow to check on you, just to make sure you\u2019re all right.\u201d\n\nJamie nodded and lay back down, burrowing beneath the covers again, his eyes already closing. Brandon gave him an awkward pat on the shoulder before leaving, but Jamie barely felt it. He sank back into the merciful darkness and was asleep before they even left the room.\n\nHow long he actually slept, Jamie had no idea, but the first face he saw when he woke up was Dillon\u2019s. He was sitting in the bedside chair, doing his homework. The minute Jamie stirred, though, Dillon was at his side, his books and papers scattering across the floor in his haste.\n\nHis green eyes sparkled in the dim light from Jamie\u2019s bedside lamp as he leaned over to better see him. \u201cHey, you\u2019re awake.\u201d\n\n\u201cYeah. What time is it?\u201d\n\nDillon checked his watch. \u201cEight-thirty.\u201d\n\nJamie sat up, wiping the sleep from his eyes. He turned to Dillon. \u201cI thought you had to work tonight?\u201d\n\nDillon eased down on the bed beside him, tucking one leg under his body. He was careful not to touch him, but they were close enough that Jamie could feel the heat coming from Dillon\u2019s body. \u201cI told my boss I wouldn\u2019t be in this evening.\u201d\n\n\u201cWhy?\u201d\n\nDillon shrugged, but Jamie noticed he was starting to look a little bit wary. \u201cI thought you might need me, and I wanted to be here in case you did.\u201d\n\nFor the first time since waking, Jamie gave Dillon a good looking-over. His hair was mussed, and his eyes were bleary, He looked tired, and the worry he was feeling was plain to see. For some reason, the sight of Dillon angered Jamie. So he\u2019d been worried? So what? Jamie had just lost his best friend, the one person who was there for him when his life fell apart. No, when Dillon ripped it apart. For the first time since learning of Ben\u2019s death, Jamie felt warm--hot, even--as two years of pain and an afternoon\u2019s worth of grief mingled and came spewing to the surface.\n\n\u201cYou thought I might need you?\u201d Jamie was all but snarling, his sudden outburst startling Dillon so much that he jumped off the bed as if he\u2019d been shocked. \u201cThat\u2019s funny. You thought I might need you. What, like I needed you two years ago? Like I needed you to touch me instead of using me like some blow-up doll to get your rocks off?\u201d He came out from beneath the covers and stood, oblivious to the fact that he was wearing only his thin, cotton boxers. \u201cYou know what, Dillon? I didn\u2019t need you. Know why? Because I had Ben. When you fucked me over and tossed me away, he stepped up. He was there for me. You think now that he\u2019s gone you can just slide in and take his place?\u201d\n\nDillon took a step back. \u201cNo, that\u2019s not what I think. I told you, I want us to be friends again.\u201d\n\nJamie kept advancing. \u201cUh-huh. Like we were friends two years ago? What\u2019s the saying? Friends with benefits? Someone to watch movies with, go to ballgames together. Oh, and lets not forget, someone to bend over and take it up the ass whenever you\u2019re feeling froggy.\u201d\n\nDillon swallowed, his eyes misting. \u201cI know what I did to you, James. I\u2019ve lived with the guilt and shame of it until it feels like I\u2019ve never been without it. There\u2019s nothing you can say to me or about me that I haven\u2019t said to myself.\u201d\n\nJamie was so close that he was practically in Dillon\u2019s face. \u201cOh, yeah? Well, how about this? Get out. Get out of my house and out of my life.\u201d\n\nDillon\u2019s spoke softly, but his voice was strong. \u201cYou don\u2018t mean that.\u201d\n\nBy now, Jamie was full-on yelling. \u201cThe hell I don\u2019t. You threw me away two years ago, and now it\u2019s my turn. My turn to hurt you, to make you feel like you\u2019re bleeding internally, deep down where nobody can fix it. Like Ben probably bled.\u201d The tears came, damn them, but he blinked them away. He had to finish this, had to wound Dillon the way he\u2019d been wounded. \u201cYou wanted Ben dead so he\u2019d be out of the way. For all I know you hit him yourself, then left him to die on the side of the road like some dog.\u201d No amount of blinking was gonna stop the tears this time, but Jamie ignored the flow of water down his cheeks. \u201cI hate you, more than I\u2019ve ever hated anybody. You took him. You took Ben. Oh, God, he\u2019s gone.\u201d It was too much. Jamie\u2019s knees gave way beneath him.\n\nTwo strong arms caught him before he hit the floor. Dillon scooped him up, cradling him to his chest as Jamie sobbed through the pain, the misery. He felt himself being carried back to the bed. He thought he should probably protest, but he didn\u2019t have it in him.\n\nDillon laid him in the middle of the bed. As Jamie watched through the sheen of tears in a strange mix of fear and fascination, Dillon pulled his shirt over his head. Jamie heard his shoes fall against the hard wood flooring as he toed them off, along with his socks. He made quick work of shedding his jeans, but the disrobing ended there, leaving him clad only in a pair of tight gray boxer-briefs. His body was even more defined, even more beautiful, than Jamie remembered. The anger began to fade as Dillon slid under the covers and gathered Jamie against his chest and into his arms.\n\nJamie shuddered from the contact, causing Dillon to pull the \n\ncovers tighter around them, the hard muscles of his chest bunching beneath Jamie\u2019s cheek as he moved. \u201cYou warm enough?\u201d\n\n\u201cYeah.\u201d Only after he said it did Jamie realize that his sobs had stopped.\n\nUsing one corner of the blanket, Dillon wiped Jamie\u2019s eyes and cheeks. Jamie felt like he should say something, but he wasn\u2019t sure what. \u201cDillon--\u201d\n\n\u201cDon\u2019t try to talk right now. Just rest.\u201d\n\nHe shouldn\u2019t have been tired, but he was. Still, as crazy as it seemed after ordering Dillon out of his house not ten minutes earlier, there was one fear he had to cast aside before he could go to sleep again. \u201cYou won\u2019t . . .leave, will you?\u201d\n\nHe could feel the soft rumbling against his ear as Dillon chuckled. \u201cI think it\u2019s a safe bet that you aren\u2019t gonna get rid of me anytime soon.\u201d\n\nJamie closed his eyes and pressed his cheek against Dillon\u2019s bare, heated skin. \u201cDillon?\u201d\n\n\u201cYeah?\u201d\n\n\u201cI don\u2019t hate you.\u201d\n\nDillon ran his fingers through Jamie\u2019s hair, brushing against his scalp and making Jamie tingle down to his toes. \u201cI\u2019m glad you don\u2019t, James. Now rest. I promise I\u2019m not going anywhere.\u201d\n\nJamie nodded and then allowed the sound of Dillon\u2019s heartbeat to lull him to sleep.\n\n      #\n\nDillon woke with a start to find Jamie\u2019s left leg draped over both of his. He took a minute to savor the feeling of Jamie\u2019s body wrapped around him before he looked down at his watch. Damn. Eleven o\u2019clock. He was gonna catch hell for this one. \n\nTaking care not to wake Jamie, he disentangled himself and then sat up, rolling Jamie onto his other side. He couldn\u2019t help but smile over the way Jamie grumbled in his sleep and then scooted back over to find the warmest spot. He allowed himself only a minute to enjoy the sight of watching the man he loved sleep before reaching down and picking up his jeans, retrieving his cell phone from the right front pocket. Dillon punched in the number, watching the whole time to make certain he wasn\u2019t disturbing James. Other than the rhythmic rise and fall of his breathing, Jamie didn\u2019t make a sound.\n\nHis mother picked up almost on the first ring. \u201cHello?\u201d\n\n\u201cHey, Mom. It\u2019s me.\u201d\n\n\u201cDillon, where are you? Do you have any idea what time it is? You were supposed to be home two hours ago.\u201d\n\n\u201cYes, ma\u2019am. I do know that, but something came up.\u201d\n\n\u201cIt had better be a matter of life and death, young man, to justify staying out to all hours like this.\u201d\n\nWell put. \u201cActually, it was. Ben Lewis\u2019s body was found today. I\u2019m sure you heard about it at school.\u201d\n\n\u201cYes, I did. Most unfortunate, but not surprising considering the lifestyle he chose. Those people usually come to a bad end.\u201d\n\nThat again. Dillon was a stone\u2019s throw away from telling her that he was one of those people, but he stopped short. Tonight was about Jamie, not him. There\u2019d be time enough for true confessions later. Gritting his teeth, he said, \u201cRegardless of whether or not he was gay, the guy\u2019s dead, Mom.\u201d\n\n\u201cAs I said, Dillon, that\u2019s unfortunate, but I don\u2019t see what that has to do with you? I mean, you and Ben Lewis were hardly friends. The two of you did your level best to tear each other apart at the dance. I talked to Principal Morgan today. He said the only reason he didn\u2019t expel the both of you is because Sheriff Nash hauled you downtown. He figured that was punishment enough. You\u2019re lucky.\u201d\n\nDillon loved his mother--he really did--but sometimes she could be so dense it set his teeth on edge. \u201cI\u2019m sure Ben will really appreciate not being expelled now that he\u2019s dead. Must be a huge load off his mind.\u201d\n\nAngela Carver\u2019s voice took on that acid tone that Dillon so hated. \u201cYour sarcasm is not appreciated, son. And you have yet to tell me what Ben Lewis\u2019s death has to do with the reason you didn\u2019t come home.\u201d\n\nHis next words would be the beginning of the end, but Dillon wasn\u2019t backing down. \u201cJames Walker was Ben\u2019s best friend. He was devastated by what happened. I found him out on the road after Principal Moron\u2019s announcement, wandering around in shock. I brought him home, and that\u2019s where I am now.\u201d\n\n\u201cI thought your father and I made it clear that we don\u2019t approve of your friendship with that boy.\u201d\n\n\u201cThat boy was the best friend I ever had. If I\u2019m lucky, he will be again.\u201d That and a thousand things more.\n\n\u201cDillon, I\u2019m not sure what\u2019s gotten into you tonight, but we\u2019ll discuss this when you get home. I expect you here within the next fifteen minutes.\u201d\n\n\u201cNo.\u201d\n\n\u201cI beg your pardon?\u201d\n\nDillon was shaking, but he kept his voice steady. \u201cI\u2019m not coming home tonight, Mom. I promised James I wouldn\u2019t leave him, and I\u2019m not going to.\u201d\n\nThe ice in his mother\u2019s voice made Dillon feel ill. \u201cI don\u2019t recall giving you a choice.\u201d\n\nHe was already in it up to his eyeballs. Might as well finish himself off. \u201cYou may not have given me a choice, Mom, but I made one just the same.\u201d\n\n\u201cSo I see. Your father and I are going to discuss this, Dillon. I expect you to be at home tomorrow when I get in. Principal Morgan has called a teachers meeting directly after school thanks to this nasty business with Lewis, but it shouldn\u2019t take more than an hour. I\u2019ll ask your father to come home early, and the three of us are going to have a long talk about your attitude and your association with James Walker. That\u2019s not a request.\u201d\n\n\u201cYes, ma\u2019am.\u201d\n\nHis mother hung up without saying goodbye, but Dillon didn\u2019t care. It wasn\u2019t like she was gonna be talking to him for much longer, anyway. \n\nA soft voice broke him out of his revere. \u201cI guess I got you in a world of shit with your folks, huh?\u201d\n\nDillon looked down into Jamie\u2019s face. He was glad neither of them had thought to turn the lamp off before they fell asleep. In the muted light, Jamie looked so achingly perfect that Dillon had to fight with himself not to lean down and kiss him. Instead he said, \u201cYou big faker. How long have you been awake?\u201d\n\n\u201cLong enough to know that your mother is mad as hell.\u201d\n\n\u201cSo, what else is new?\u201d\n\nJamie sat up, the sheet falling away from his waist, exposing his flat stomach and making Dillon itch to trace the slight indentation of Jamie\u2019s belly with his tongue. It took him a minute to realize Jamie was speaking to him. \u201cStill, I hate being the one to cause problems for you and your family.\u201d\n\n\u201cIt\u2019s not your fault they\u2019re bigots, James. I think it\u2019s sorta like poetic justice that two of the biggest homophobes in Reed got stuck with a gay son. Talk about a karmic bite to the ass.\u201d\n\nJamie laughed, the first time Dillon had heard that sound since lunch. \u201cI guess so. I never really though about it like that.\u201d\n\n\u201cLet\u2019s not even worry about it right now.\u201d Dillon slouched down a bit so he could see Jamie\u2019s face. \u201cHow are you feeling?\u201d\n\n\u201cI don\u2019t know. I don\u2019t think it\u2019s really hit me yet, you know?\u201d\n\n\u201cI guess that\u2019s normal. Probably take a few days to sink in.\u201d\n\n\u201cYeah.\u201d He lowered his eyes. \u201cI\u2019m sorry for all that stuff I said to you. I didn\u2019t mean it. I know you didn\u2019t have anything to do with Ben\u2019s death.\u201d\n\nDillon gave a slight tug to the hair and the nape of Jamie\u2019s neck, forcing his head up. \u201cYou have nothing to be sorry for. It was no secret that Lewis and I weren\u2019t overly fond of each other.\u201d His voice turned husky. \u201cI am glad you don\u2019t hate me, though.\u201d\n\nJamie blushed, then went for the subject change. \u201cI did rest better that last time. Thanks for . . .um, you know.\u201d\n\n\u201cStripping down and getting into bed with you?\u201d Jamie nodded and tried to hide his eyes again, but Dillon wouldn\u2019t let him. He turned enough so that they were facing and put one hand on Jamie\u2019s neck, just below his chin. \u201cIt was my pleasure, believe me, but it wasn\u2019t exactly an original idea.\u201d\n\nJamie scrunched his eyebrows together. \u201cWhat do you mean?\u201d\n\n\u201cDid Dr. Nash--I mean Nate--tell you about losing his friend Amy?\u201d\n\n\u201cYeah.\u201d\n\n\u201cWell, just before he left, Nate told me that he had a breakdown after Amy died. When he finally let himself cry it out, Brandon did the same thing with him that I did with you.\u201d\n\n\u201cWell, I\u2019m glad he told you about it, because it worked.\u201d  \n\nDillon moved his fingers back and forth over Jamie\u2019s throat. \u201cThank God it did. It hurt me so bad to see you suffering like that.\u201d He moved closer, so that his leg was practically on top of Jamie\u2019s. He lowered his head. \u201cI wanted so much to make the hurting stop.\u201d",
        "Jamie lifted his chin and closed his eyes. Dipping down, Dillon could almost taste him. His own eyes fluttered shut. They were almost touching, when the door flew open.\n\nSadie stood in the doorway, wearing pink pajamas and a long, fuzzy white robe. She hid a grin as the two of them scrambled to opposite sides of the bed. \u201cYou\u2019re awake. Thank heavens. I was starting to worry. Are you feeling better, then, Jamie?\u201d Her tone was even, just as if she found her nephew in bed with a half-naked man everyday. \n\n\u201cA little.\u201d He looked at Dillon from the corner of his eye. \u201cDillon helped me through the worst of it, I think. For tonight anyway. Dr. Nash said grieving is a process, but I think I\u2019m at least on my way.\u201d\n\n\u201cI\u2019m glad to hear that.\u201d She gave Dillon a knowing smile. \u201cI assume you\u2019re spending the night?\u201d\n\nIt was Dillon\u2019s turn to blush. \u201cYes, ma\u2019am. Um, that is, if it\u2019s all right.\u201d\n\n\u201cOf course. Though, perhaps it would be better if you passed the remainder of the night in the guestroom.\u201d An order, not a suggestion. She might be open minded, but even that had its limits.\n\n\u201cYes, ma\u2019am.\u201d Dillon started to get out of bed, but remembered he was wearing only his underwear. \u201cUh, Miss Banks?\u201d\n\nSadie laughed. \u201cI\u2019ll just make certain the guestroom bed has fresh sheets.\u201d\n\nAs soon as she left, Dillon scrambled into his jeans. The rest of his things he gathered into his arms to take with him. He was all loaded up and on his way to the door when Jamie said, \u201cDillon?\u201d\n\n\u201cYeah?\u201d\n\n\u201cSweet dreams.\u201d\n\nDillon smiled down at him. \u201cYou too.\u201d He knew Jamie\u2019s would be anything but sweet, right now, anyway. But someday soon, he hoped they would be. And maybe, if he was lucky, those dreams would include him.\n\n      #\n\nDillon parked his car in the usual space. Shutting off the ignition, he turned to Jamie. \u201cYou sure you want to do this? Your aunt said she\u2019d write you an excuse so you could stay home today.\u201d\n\nJamie zipped his coat and donned his gloves. \u201cSo I can do what, sit at home all day and think about Ben? About how much I\u2019m going to miss him? I\u2019m better off here.\u201d His voice dropped so low that Dillon could barely hear him. \u201cI\u2019m better off with you.\u201d\n\n\nDillon reached over and squeezed his hand. \u201cOkay, then. Meet me back here for lunch?\u201d\n\n\u201cHow about meeting me at the lockers, instead? It\u2019s too damn cold out here.\u201d\n\nDillon laughed and got out of the car. \u201cI\u2019ll see you then.\u201d\n\nIf days went any slower, Dillon had never seen one. Besides a myriad of cracks about the fact that he was wearing the same clothes he wore yesterday, Dillon\u2019s school day started with a thirty minute period of mourning for Ben Lewis led by none other than Dan Morgan himself. The auditorium was filled to the brim with crying girls (most of whom had no idea who Ben Lewis even was) and a passel of laughing jocks who saw this as a prime opportunity to perfect the fine art of the spitball. Dillon did his best to catch a glimpse of Jamie, but the throng of pseudo-grievers made it impossible. Megan sat beside him through most of the assembly, rolling her eyes every time Morgan started in about the \u201cbrevity of life\u201d and the \u201cutmost importance of living each day to its fullest.\u201d A few times, Dillon was certain he\u2019d laugh out loud. Once Megan even stepped on his foot to keep that from happening. The mark of a true friend. The one bright side during the whole assembly was that he didn\u2019t see his mother either. Time enough for the crucifixion after school.\n\nThe three remaining classes before lunch weren\u2019t much better. Lots of talk about Ben from people who wouldn\u2019t have spit on him if his guts were on fire. Not while he was alive, anyway. Seems that sudden death made a guy downright popular.\n\nWhen the fourth period bell rang, Dillon was ready. He had vivid fantasies of kidnapping Jamie and keeping him for the rest of the day, the two of them shutting out the whole world. Unfortunately, Ashton Barnes and Chad Minton put a stop to that.\n\nThey were waiting for Dillon at his locker. Ash and Chad made quite a contrast. Ash was tall and slender, whereas Chad tended towards to the short, chunky side. Ash\u2019s hair was a rich black, cut fairly short and shot through with auburn lights which made his brown eyes seem even darker. Chad was a blue-eyed blond with a buzz cut. Ash was old money, and Chad was no money. Even so, Dillon could count on one hand the times he\u2019d seen one without the other. Hell, they even went out on the weekends screwing girls together: Ash and his girl in the front seat of his BMW, Chad and his girlfriend du jour in the back. Now that was devotion.\n\nDillon was hoping Jamie would come so he\u2019d have an excuse to leave, but he saw no sign of it. Hell, he\u2019d hoped to squeeze in as much time with Jamie as possible, but it looked like he was gonna have to make small talk with Barnes and Minton, instead. He motioned Chad, who was leaning against Dillon\u2019s locker, out of the way, and fumbled with the lock. \u201cWhat\u2019s up?\u201d It wasn\u2019t until after he said it, that Dillon noticed how angry Ash looked.\n\nAsh stood with his fists balled, his feet braced, and his spine rigid. \u201cI heard some rumors about you, Carver. I was \n\nhoping you might clear \u2018em up for me.\u201d\n\nDillon threw his books inside and slammed the locker door. Out of the corner of his eye, he saw Megan and a several others gathering in the hall. An audience. Well, wasn\u2019t that just heaven on a stick.\n\nDillon leaned one shoulder against the metal door, keeping his voice calm and his posture relaxed. \u201cRumors, huh? You don\u2019t say.\u201d\n\n\u201cThat\u2019s right. Word has it you spent the night at James Walker\u2019s house last night. Considering those are the same clothes you had on yesterday, I\u2019m guessing it\u2019s true.\u201d Ash was doing all the talking, but Chad stood beside him, bobbing his head in agreement every time Ash spoke. He reminded Dillon of those little flocked-plastic dogs people put on the dashes of their cars.\n\nDillon was the poster boy for who-gives-a-damn, but inside he was seething. Damned if he\u2019d let it show, though. As calmly as if he were discussing the cafeteria\u2019s mystery meat special, Dillon said, \u201cI\u2019d be glad to clear that little rumor up for you, Barnes, but seeing as how it\u2019s none of your business, I don\u2019t think I will.\u201d\n\nAsh stepped closer. \u201cI\u2019m making it my business, Carver. Word\u2019s out that you and Ben Lewis were fighting over James that night at the dance. I also heard that you had lunch with him yesterday.\u201d\n\nDillon crossed his arms over his chest. \u201cWhat are you, Barnes? The friendship police? I wasn\u2019t aware that having lunch with a friend or spending the night with a buddy was a crime.\u201d\n\nAsh wasn\u2019t giving up. \u201cYeah? Well, the way I hear it, you and Walker are a lot more than friends. What\u2019s up, Carver? You fagging out on us?\u201d\n\nOh, this was just great. Ash was the one who called him about the planned gay bashing at the dance. What was with this homophobic jock routine? Well, to hell with him. Dillon wasn\u2019t going to play his little games. In as clear a voice as he could muster, he said, \u201cNo, Barnes, I\u2019m not fagging out on you.\u201d\n\nHe heard a noise behind him and turned to see Jamie, his face pale and stricken. Dillon had been about to clarify his last statement, but Jamie didn\u2019t know that. He though Dillon was going to deny him yet again. The spark of anger Dillon had seen last night was now a blazing inferno.  \n\nJamie threw his books on the floor and faced Dillon, not caring that he was six inches shorter and about forty pounds lighter, or that half the school was watching him. He looked so small and so cute, that Dillon would have laughed over the whole damn thing if it weren\u2019t for the look of pain in Jamie\u2019s beautiful eyes.\n\n\u201cSo much for coming out, huh, Dillon? Tell me something. Exactly when weren\u2019t you \u2018fagging out\u2019? Was it when I was on my knees sucking your cock that you weren\u2019t a fag? Or were you just a straight boy in disguise all those times you fucked me?\u201d\n\nThat was it. The whole city of Reed could watch for all he cared, but Dillon was gonna show Jamie how he felt about him once and for all. \u201cI never fucked you.\u201d\n\nDillon could see the tears forming in Jamie\u2019s eyes. He started to speak, but Dillon put up his hand. \u201cNot yet. You\u2019ve had your say. It\u2019s my turn now.\u201d He turned his back on Barnes and all the rest, using his body to force Jamie backwards until he was up against the lockers, with Dillon in his face. Putting one hand on each side of Jamie\u2019s head so he couldn\u2019t get away, Dillon spoke, his voice loud enough for everyone within twenty feet to hear, his eyes only for Jamie.\n\n\u201cWhat I was about to say when you walked up, James, was that I wasn\u2019t \u2018fagging out\u2019 because that implies that I just woke up one morning and became gay. How can I \u2018fag out\u2019 when I\u2019ve known for sure that I was gay for over six years?\u201d\n\nThe gasps and whispers behind him following that little announcement reminded Dillon of something you\u2019d hear in a cheesy movie. If they thought that was a shocker, the illustrious student body of Plunkett High hadn\u2019t seen anything, yet.\n\n\u201cAnd as far as the other part goes, I stand by what I said. I never fucked you, James.\u201d Jamie tried to protest, but again Dillon cut him off. \u201cI was a selfish bastard. I got off on you without ever giving anything back, and for that I\u2019m more sorry that you\u2019ll ever know. Even as lowdown and rotten as I was, though, I never once fucked you. Every time I slid into you, every time you took me into that sweet, tight body of yours, it was making love.\u201d Then Dillon lowered his head and covered Jamie\u2019s mouth with his own. \n\n    {To Be Continued} "
    ],
    "authorname": "wavyscribe",
    "tags": [
        "principal morgan",
        "car dillon",
        "feeling jamie",
        "ben dead",
        "head dillon",
        "dillon voice",
        "dillon good",
        "jamie hair",
        "car place",
        "huh dillon"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/the-way-you-say-my-name-ch-04"
}