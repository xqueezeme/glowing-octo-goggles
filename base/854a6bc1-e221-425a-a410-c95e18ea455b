{
    "title": "Best Wife Ever",
    "pages": [
        "After writing \"Cheryl's Lament,\" I felt the need to write something a bit different, if for no other reason than to engage in a bit of \"soul-cleansing.\" So this is not my typical fare. This is a story about a real \"loving wife,\" so if you're looking for a scorched-earth BTB, this isn't it. Maybe next time...\n\nElements of this story are based on actual events and people. No, I won't say which ones. I'll let you speculate.\n\nMany thanks to those who offered comments and constructive criticism on my previous stories. For those who want to say this or that would never happen, remember this is my universe, a place where nearly anything can, and often does, happen. At least on paper... \n\nPlease refer to my profile for more on my personal policy regarding comments, feedback, follows, etc. (And yes, I DO moderate comments) And please remember, this is a work of fiction, not a docu-drama...\n\nI guess at some point, every man who's ever been happily married, even for a short time, likes to think his is the \"best wife ever.\" I really can say that, however. For 50 years, I was happily married to Wendy, and yes, she really was the best wife a man could ever want.\n\nI say \"was\" because she's no longer among the living. A little less than a year ago, she was diagnosed with a rare non-Hodgkin's form of lymphoma, just the latest in a long line of medical issues that plagued her throughout her life.\n\nThey found that she had pockets of infection throughout her abdomen, mostly around her large intestine, and the doctor said she would need to undergo surgery in order to survive the rest of her chemo. It would be risky, but if all went well, the doctor said, she would be able to continue her chemo and recover from the cancer.\n\nBut all didn't go as planned. The infection had spread farther than they first realized, and they had to do much more than remove some of her large intestine. They did everything they could, but she never survived the operation.\n\nI was devastated when they gave me the news, but we both knew going into this that there was a chance she might not make it. We also knew there was no chance of her surviving without the surgery. So we decided to give it a shot.\n\nI had just returned to our home from the funeral -- a sad affair, but one well attended, as everyone who knew her loved her dearly. I sat in my recliner and pulled out our photo album, thinking about the life we shared.\n\nIt may sound strange, but I met Wendy before I met my first wife, Marcy. It was 1967 and I had just been assigned to my unit at Marine Corps Base Camp Pendleton, in southern California. My MOS, or occupational specialty, was 0311, Infantry. One of the guys in my unit set me up with a blind date so I decided to go -- after all, it sure beat the hell out of sitting on base.\n\nMy buddy, Tony, had originally set me up with Wendy's friend, Pat. It turned out, however, that Tony and Pat got along pretty well, so he ended up with her while Wendy and I got to know each other. I was instantly struck by her long blonde hair and pretty face. She had the biggest blue eyes I had ever seen and a smile that could launch a fleet of ships. I had always been a leg man, so her small breasts didn't bother me at all. In fact, I thought they fit her 5-foot 3-inch frame perfectly. But her legs... Oh my God, those legs were, as the kids today might say, to die for.\n\nTo say I was smitten would be the understatement of the year. We spent the evening getting to know each other and found we had a lot in common. Both of us were in the service, but where I was in the Marines, she was in the Navy, and worked at the Naval Hospital in Balboa as a corpsman -- the Navy's version of a medic. We both liked the same music, the same movies, and had lots of other interests in common as well.\n\nBefore the night was over, I knew that I was going to marry this woman. We dated for a few months but slowly drifted apart. She told me that she was worried we were getting too close, so we quit seeing each other on a regular basis. I was heartbroken at first, but eventually met Marcy, the girl who would become my first wife.\n\nWas that ever a mistake! At first, Marcy was kind and sweet and fun to be with, but it seemed the moment we got married, the mask came off and I found myself waking up next to the Shrew From Hell. We weren't even married a whole year before I caught her in bed with some guy she went to high school with.\n\nMy unit was in the field, undergoing training, and we were scheduled to be gone for a full week, but we wrapped it up a day early. I was looking forward to getting home to surprise Marcy, but I was the one who got surprised.\n\nI could hear them the instant I walked into the small apartment we shared off base. I went into the bedroom to see some skinny, long-haired, scraggly-looking maggot between her legs pounding for all he was worth. I was filled with rage and proceeded to kick his ass all over the apartment before tossing him out the door.\n\nMarcy cringed under the covers as I came back into the bedroom for her.\n\n\"Please, Jeff, don't hit me,\" she begged. I shook my head. I was raised never to hit a woman, and I wasn't about to now, even though I felt like putting my fist through her cheating face. I pulled down a couple of suitcases and tossed them on the bed.\n\n\"Get out,\" I told her. \"Just pack your fucking trash and get the fuck out. NOW!\" She packed her stuff while I grabbed a beer and waited. When she finished, she came out into the living room, where I sat.\n\n\"I'm sorry,\" she said. I never said a word, but pointed at the door. She called her parents, and they came to pick her up. Her father was also a Marine and I told him what I walked into. He shook his head.\n\n\"I'm sorry, Jeff,\" he said. \"I thought we raised her better than that.\" They took her away and I never saw her again, thankfully. The next day, I filed for divorce. I was surprised that she agreed to my terms and our marriage became yet another statistic.\n\nA couple months after I filed for divorce, my unit was deployed to Vietnam, just in time for the February 1969 Tet offensive. I'd like to say I beat them all back with the jawbone of an ass, but I can't. Truth be told, I was the one who got beaten. An enemy bullet tore through my upper left leg and another hit me in the abdomen.\n\nThey managed to save my leg, but told me I would be in physical therapy for some time. I also ended up going through several surgeries to fix the damage to my gut. Eventually, I was shipped stateside and ended up at Balboa Naval Hospital.\n\nA day after I arrived, I woke up to find Wendy standing over me. At first, I thought I had died and gone to heaven. I'll never forget her first words to me.\n\n\"What are you doing in my hospital, Jeff Hammond?\" she asked with a smile. \"Is this a ploy to get me to go out with you or something?\"\n\n\"Can't blame a guy for trying,\" I said. I looked and saw she had two chevrons on her white uniform, making her a Petty Officer, Second Class. \"I see you made Second Class,\" I said. She nodded her head.\n\n\"Yup,\" she said. \"And if I'm not mistaken, that means I outrank you, Corporal.\" I smiled.\n\n\"For now,\" I said. I noticed she didn't have a wedding band and a big part of me was glad. \"How are things with you? Have you met someone yet?\"\n\n\"Nope,\" she said. \"I guess you kinda ruined me for anyone else,\" she said with a smile. \"Now, Corporal, you need to get your rest. I hear they're going to start your physical therapy before too long.\"\n\n\"Will I see you again?\" I asked. She gave me a sly smile before answering.\n\n\"You'd better believe it, Marine,\" she said. \"I'm going to be watching you like a hawk.\" I couldn't help myself and flashed a big shit-eating grin. That was the best news I had heard in a long time. She looked around for a moment, then slyly kissed me on the cheek. \"Take care of yourself,\" she said. \"I'll check on you later.\"\n\nShe kept her word and came by about the time my dinner was brought into my room. Her shift had just ended, she said, and she wanted to see me before she left for home. We sat and talked as we both picked at the dinner on my tray. After she asked, I told her about my failed marriage to Marcy. She listened in silence, then took my head in her hands.\n\n\"She was a fool and an idiot,\" she said. \"You deserve much better than that.\" We talked until she was told that visiting hours were over. I stopped her before she left the room.\n\n\"You know, I thought about you an awful lot over there in 'Nam,\" I said. She looked at me for a moment, sadness on her face.\n\n\"I've thought about you almost non-stop since our last date,\" she said. \"Maybe if I hadn't pushed you away,\" she began, before her eyes filled with tears. Wiping her eyes, she ran out of the room. What was that all about, I wondered. Surely she didn't blame herself for me being wounded?\n\nI saw a lot of her for the next six months. She came by my room at least twice a day to check up on me -- even on the days she was off-duty. Many was the time she would take outside in a wheelchair so I could enjoy a smoke. We spent hours talking about one thing or another. When she was off-duty, she would wear her shorts, knowing how much I enjoyed looking at her legs.\n\nAs time went on, I knew I was in love with her and there was no denying it. I could tell she felt the same way, but something was holding her back. I decided to press the issue. One day, while we were outside, I told her how I felt. Tears filled her eyes as she spoke.\n\n\"Oh, Jeff, I love you, too,\" she said.\n\n\"Then let's get married,\" I said. She looked down for a moment before saying anything.\n\n\"But, you don't understand,\" she said.\n\n\"What?\" I asked. \"Is there someone else?\" She shook her head.\n\n\"No, there never has been,\" she told me.\n\n\"I don't understand,\" I said.\n\n\"I can't have children,\" she said. She explained that she was diagnosed with Turner Syndrome, a condition I later learned affects about 1 in 2,000 women born in the United States. This explained her relatively short stature and, she said, affected her ovaries, meaning she could never conceive a child. Worse yet, she said, there's no cure.\n\nI could tell this bothered her, but I reassured her that my love for her wasn't based on any ability to have children. She cried as I held her tight.\n\n\"But you deserve a complete woman, someone who can give you children,\" she said. I held her face in my hands and looked her in the eyes.\n\n\"You ARE a complete woman,\" I said. \"When the time comes, we can adopt,\" I told her. \"There's lots of kids out there who needs a good mother. Hey, look at me. I was adopted, and I turned out alright.\" She smiled.\n\n\"Seriously?\" she asked. \"You were adopted?\"\n\n\"Yeah,\" I said. \"My birth parents were killed in a car accident when I was just six. My aunt and uncle took me in and adopted me as their own.\"\n\n\"You mean, you'd let us adopt a child?\" she asked.\n\n\"Maybe two children,\" I said. \"Who knows?\" She smiled as she wrapped her arms around my neck.\n\n\"I love you, Jeff Hammond,\" she said.\n\n\"I love you too, Wendy,\" I said. \"Now, will you marry me?\"\n\n\"Hell yes,\" she said, smothering my face with kisses. \"I'll be the best wife a man could ever want.\" After a few minutes of intense tongue-wrestling, I looked her in the eyes.\n\n\"Just curious, is this why you didn't want to date me before?\" I asked. She looked at me, tears in her eyes.\n\n\"Yeah,\" she said quietly. \"I was afraid you'd hate me if you knew the truth.\"\n\n\"I could never hate you,\" I told her. \"The truth is, I loved you the moment I first laid eyes on you.\"\n\n\"Really?\" she asked.\n\n\"Really,\" I said. \"In fact, I knew then we would get married.\" She wrapped her arms around me and kissed me some more.\n\n\"I felt the same thing myself,\" she said. \"I was just too scared at the time. By the way, you should also know that I'm still a virgin.\" That shocked me. I figured a woman who looked as good as her would have men banging her door down. Excuse me, that should've been \"hatch.\" She was Navy, after all...\n\n\"Seriously?\" I asked. She nodded her head.\n\n\"Yup,\" she said. \"I promised my parents before they died that I would save myself for my husband. And that's exactly what I did.\"\n\n\"Wow,\" I said. \"Are you upset that I'm not a virgin?\"\n\n\"No, silly,\" she said. \"You'll just have to promise to go easy on me on our wedding night.\" I smiled at her before answering.\n\n\"I promise,\" I said.\n\nI finally got to the point where the service felt I could get around okay, so long as I used a cane and didn't put too much weight or pressure on my damaged left leg. I lost a few pieces from my abdomen, but the scars had healed and there was no other damage.\n\nIn its infinite wisdom, the Marine Corps determined that since I was medically unfit to serve in combat, I would be given a medical discharge under honorable conditions, which meant I would receive a small stipend every month.\n\nWendy and I discussed it and she offered to let me stay in her apartment since her latest room mate left, having been transferred to another duty station. Not wanting to be away from her for even a day, I accepted. Besides, we were set to be married in January 1970, which was just a few months away.\n\nSo I moved in with her and stayed in the second bedroom, the one her former room mate had used. Wendy was adamant that we were not to sleep together until we were married. It was hard, as I longed so much to make love to her, but I respected her wishes.\n\nThings were tight -- after all, I wasn't getting anywhere near what I used to make -- but Wendy proved to be quite well organized and she somehow managed to make it work. All she asked from me was a little bit to help cover the utilities. I was more than happy to do that for her.\n\nI contacted my folks in Wichita Falls, Texas, and gave them the news. They were thrilled to hear that Wendy and I were going to be married and promised to come out. Dad suggested that I needed a new truck, since my old one had a manual transmission. I told him I couldn't afford the payments for a new one, but he wouldn't hear any argument.\n\n\"Call it a wedding present,\" he said. \"We'll use it to bring all your stuff out and we'll fly back.\" He also suggested I call the local bank where I had a savings account and arranged to have some of those funds transferred to California.\n\nWhen I was married to Marcy, we had an account with the credit union on base, but closed the account and divided it up when we divorced. I opened a new account with a civilian bank in town, using my half of the money, and still had funds sitting there, since that's where my checks had been deposited. In the grand scheme of things, it wasn't much, but with the cash I had sitting in Texas, it would certainly help get us over the hump.\n\nI knew I couldn't stay in Wendy's apartment all day doing nothing and wanted -- no, NEEDED -- something that paid actual money. Wendy, however, said I should use the time to check out the local colleges and get my degree, using my GI Bill. Since I didn't have a car, she let me use hers, provided I took her to work and picked her up. Fortunately, her car was an automatic.\n\nI checked out the local colleges and after discussing it with Wendy, decided to go for an engineering degree. Classes would begin about three weeks after our wedding, so that worked perfectly. I made the arrangements with the VA, filed the necessary paperwork, and it was a done deal.\n\nWe got married in a small ceremony in a chapel close to where Wendy worked. Many of her colleagues came out to wish us well, as did my parents, who fell in love with Wendy. My dad had arranged for us to stay at a nice hotel in Las Vegas for our honeymoon, so after the wedding, we were off.\n\nI'd like to say that we screwed like rabbits on our wedding night, but we didn't. There was no doubt in my mind that first night that Wendy was a virgin -- that was something new for me, but I certainly didn't complain. I also learned that the key to sex with Wendy was foreplay and oral stimulation -- lots of it. And I was certainly up to the task.\n\nIt also helped that her doctor had put her on hormones. It was slow going at first, and I had to learn to be patient, but it was certainly worth it. Once she got warmed up and started lubricating, it was \"Katy bar the door.\"\n\nShe surprised me when she attempted to give me a blowjob. She had never done it before, and it showed. Not that I complained, mind you. What she lacked in experience, she more than made up for in enthusiasm. She promised that she would get better at it -- and did she ever!\n\nWendy discovered -- much to my delight -- that she preferred to be on top. That way, she could control how much she could take at one time. I enjoyed it for several reasons -- the first being that my left leg was still a bit weak and couldn't take very much weight for any length of time. The second being that I loved watching her petite frame bounce naked on my stiff dick. And I could play with her B-cup breasts as she rode me.\n\nWe enjoyed our time in Vegas, and came back happy and ready to start our new lives together. The first four years weren't easy, as money was fairly tight, but Wendy was able to make every dollar stretch and we always made it from month to month. She re-enlisted in late 1970 for four more years to give me time to finish college. In her mind, it was an investment in both of our lives.\n\nShe also turned the old guest room into an office where I could study in relative peace and quiet. Somehow, she scraped up enough money to buy an old desk and some bookshelves from a local thrift store. Then, she had them delivered to the apartment and refinished them so they matched. When she finished, they looked like she had spent a small fortune. I still have that desk and those bookcases, and they look as good now as when she first got them.\n\nMany evenings, as I sat and studied in my \"office,\" Wendy would entertain us both by playing her piano or her violin. I loved listening to her play, and would sometimes pull out my grandfather's old guitar or my mountain dulcimer and play along with her. We were never really that good, but we had fun anyway, and the musical breaks often turned into foreplay, which inevitably turned into romantic interludes in the master bedroom.\n\nDuring those early years, we made sure to save enough money to go out on a date at least twice a month. It was during one of those outings that I got a glimpse at another side of my wife. I always thought that Wendy was the most beautiful girl around. Apparently, I learned, so did a few other men, some of whom worked at the same hospital she did. One of them happened to be at a club Wendy and I sometimes liked to frequent.\n\nWith my leg in the shape it was, I wasn't able to dance for very long at any one time, and even then, all I could do were slow dances. Forget that hopping around stuff -- it just wasn't going to happen. Wendy, on the other hand, liked to dance fast, and was often asked to dance by other guys in the club. She always asked my permission first, and I usually let her after giving the fellow asking her the once over.\n\nI also kept an eye on what he was doing as they danced. I trusted Wendy, but I didn't trust some of the guys who asked her on the dance floor. One night, this guy came to our table and started chatting my wife up without so much as a \"by your leave\" to me. Wendy recognized the slight and introduced him to me, letting him know I was her husband.\n\n\"Good to meet you,\" he said nervously as he shook my hand. \"So, you mind if I have a dance with your wife?\" I looked at Wendy and could tell she wanted to dance, so I nodded my head. As they danced, I saw him try to reach for her several times, but she backed away from him.\n\nI took a sip of my beer and that's when I heard the commotion from the dance floor. I looked up and saw him on the floor, looking up at her. She stood over him, furious. The others around them stopped to watch what transpired between them. I grabbed my cane and headed over to them.",
        "\"Don't you ever touch me like that again, you hear me, asshole?\" she yelled. I knew she had a temper, but I had never seen her so angry before.\n\n\"You bitch,\" he growled. \"I'll get you for this.\" I got to them and put the end of my cane on his Adam's apple and pushed him back down, none too gently.\n\n\"If I was you, I'd stay right where you are, Hoss,\" I told him. \"Trust me, you don't want to piss her off any worse than you already have. And you DAMN sure don't want to piss me off.\"\n\n\"Maybe you'd better put a leash on that woman, cuck,\" he said. Cuck? What the fuck is going on here, I asked myself. I would definitely have to have a talk with my wife. I pushed harder on the cane.\n\n\"Maybe you'd best keep your fucking paws off my wife,\" I told him. \"Otherwise, I may just have to cut your balls off with a dull butter knife.\" His face paled, but he said nothing. I turned to Wendy, who was still red-faced. \"Are you okay?\" I asked her.\n\n\"I'm okay now,\" she said. I nodded my head.\n\n\"Maybe we'd better get going,\" I said.\n\n\"Yes, let's get out of here,\" she said in response. We went back to the table and grabbed our things, then headed for the car.\n\n\"What was that all about?\" I asked her when we got in the car.\n\n\"I'm sorry,\" she said. \"He works at the hospital. I dated him a couple times before we got together and I guess he thought that gave him a right to move in on me.\"\n\n\"What happened out there on the dance floor?\" I asked.\n\n\"He put his hand on my ass, so I kneed him in the balls,\" she said. \"It's a move I learned from an old Master Chief years ago.\"\n\n\"Well, it was a good move, kneeing him in the balls,\" I said. \"What did he mean by calling me a cuck, by the way?\"\n\n\"He's an asshole who thinks he's God's gift to women,\" she said. \"That's the way he talks to any man who's with a woman he wants. I've never cheated on you, and I never will. Surely, you know that.\"\n\n\"Okay,\" I said. \"Case closed. Good move, by the way.\" The truth is, I knew she was right. I remember seeing him around the hospital and saw the way he interacted with other women. I was frankly surprised he hadn't gotten his ass kicked for the way he came on to the married nurses. I also knew Wendy's reputation at the hospital. If there was ever a straight-shooter, she was it.\n\n\"I like the way you handled that cane, putting it on his throat like that. Would you really have cut his balls off?\" she asked. I laughed.\n\n\"You really don't want to know, do you?\" I asked. It was her turn to laugh.\n\n\"Not really,\" she said. \"But it's good to know you're there to defend me. Now, please take me home and make love to me.\"\n\n\"Yes, ma'am,\" I said, heading for the house.\n\nI graduated with my bachelor's degree in 1974 and Wendy was there to cheer me on when I got my diploma. I got a job with a local aerospace company and still work there, but I intend to retire very soon. Let me tell you, it felt so good to finally contribute something to our finances. Wendy had always been so supportive of me that I wanted to do something special for her, especially since her birthday was coming up.\n\nSo I took the sign-on bonus I received, along with the rest of the savings I had in Texas and booked a five-day reservation in Hawaii. Her eyes opened wide when I showed her the tickets. She took leave from work and off we went.\n\nOn the flight over, she surprised me when she leaned over and whispered in my ear, \"When we get to the hotel, I'm going to suck your cock until you come in my mouth.\" Then she took my hand and placed it under her sundress. I was shocked to find she had no panties on. \"I'm completely naked under my dress,\" she whispered.\n\nI felt my manhood rising and she deftly guided one of my fingers inside her. I could hear her moaning as I slowly fingered her, right there on the airplane.\n\n\"I'm about ready to fuck your brains out,\" she said as I felt her out even more. True to her word, she wasted no time slipping her dress off when we got to our room. She looked so gorgeous standing there in front of the window, naked. She guided me to the bed, undressed me, then took me fully in her mouth and gave me a mind-blowing blowjob. She had definitely gotten much better at this over the years.\n\n\"I'm about to cum,\" I told her, halfway expecting her to stop as she usually did. But she didn't and kept on until I exploded in her mouth. She shocked me even further by swallowing every drop and licking me clean. She took a drink of water to rinse out her mouth, then climbed on top of me, having made me hard yet again with her mouth.\n\n\"I'm just getting started with you, Mr. Hammond,\" she said in a sultry voice that held lots of promise. Soon, she hovered over my face and pressed her wet sex against my mouth. I didn't hesitate and commenced to lick and suck her pussy like there was no tomorrow. Soon, she was bucking against my face, holding my head against her as she moaned through her orgasm.\n\nShe worked her way back down my body and was soon riding my hard cock for all it was worth. I had never seen her this excited before and was loving it. She grabbed her breasts as she rode me, tweaking her nipples.\n\n\"Fuck me,\" she moaned. \"Keep fucking me, my husband, don't ever stop.\" Who was I to argue? She kept riding me, even as I ejaculated inside her. She slowed down for a bit, but only long enough to lean down and kiss me deeply as she gyrated her hips.\n\n\"This feels so fucking good,\" she whispered in my ear as she slowly moved her hips up and down, taking me deep inside her. I couldn't remember her being so excited before and I was determined to savor it as long as possible.\n\nThis went on for what seemed like forever. After we were both spent, she rolled off of me and laid on the bed, her legs spread wide. Her fingers spread her lower lips open and I could see cum dripping out of her. She wasn't done surprising me just yet, and scooped out a bit of cum and brought it to her mouth. She moaned as she licked her fingers clean.\n\nWho was this woman and what did she do with my wife, I asked myself. Who cares, I thought, answering my own question. Whatever happened, I was enjoying this little show she was putting on. After a bit, she giggled like a naughty girl and looked at me with mischief in her eyes.\n\n\"Watch this,\" she said. She got off the bed and stood in front of the window, completely naked. We were several floors up, so I didn't know how many people could see her. As I watched, she put one bare foot on the sill and began masturbating as she looked out the window. I couldn't help myself and walked behind her, taking her breasts in my hands from behind. As I kissed her neck, I massaged her breasts softly, the way I knew she liked. She leaned back into me, moaning as she fingered herself.\n\nI could feel my cock start to get hard yet again, and pressed myself into her. She started moving her ass back into me, which made me even harder. With a little giggle, she reached down and guided my hard cock inside her wet pussy from the back, right there in front of the window.\n\nShe had always been a bit of an exhibitionist, flashing just a bit of her legs and giving me a \"nip slip\" from time to time, but she had never been this wild before, and to be honest, I was loving it.\n\n\"Fuck me, baby,\" she said. \"Right here, in front of God and everybody. Fuck me nice and slow. I want everyone to see your big cock inside my pussy. Show the world how a real man fucks his woman.\" As I slowly moved in her, she massaged her clit and soon, we both exploded in orgasm yet again, which was a good thing, since my leg was starting to ache.\n\nExcept for dinner, we stayed naked and made love to each other for most of the night, finally falling asleep in each other's arms early in the morning. We enjoyed the rest of the week and even made love on a secluded beach in broad daylight.\n\nEventually, all good things must come to an end, and this vacation had to as well. We flew back home, rested and rejuvenated. We hated leaving Hawaii, though, and promised we would do it again someday.\n\nLater that year, Wendy decided to go into the Naval Reserves when her enlistment ended. By then, she had been promoted to Petty Officer First Class and didn't want to see her eight years go to waste. She had been offered a job at Scripps Memorial Hospital, so she took it.\n\nSix months later, we decided it was time to buy a house, so we found one we both liked -- a two-story, four bedroom house that had everything we both wanted. The stairs were something of a challenge for me, but since Wendy loved the place so much, I decided that would be a minor inconvenience.\n\nIt was about six months after that we started talking about adopting a child. We made inquiries and spoke with several agencies that introduced us to the process and showed us photos of children waiting for adoption. It was so difficult seeing these children waiting for someone to take them in. We instantly fell in love with a set of 8-month-old twins, Michael and Michelle, who were currently in a foster home along with several other children.\n\nWe started the process and jumped through all the hoops, and finally became the official parents of Michael and Michelle, two lovely children who stole our hearts the day we first met them. Wendy was scared at first, but she took right to her new role as mother. As for me, I was over-the-top happy. I had two beautiful children and a happy wife -- what was there not to be happy about?\n\nOh sure, we had to adjust our lives to accommodate the children, but then again, so does every new parent. We had to adjust our schedule a bit to accommodate the children, and we didn't want them in day care. So we looked at our budget and found that we could afford a part-time nanny to stay with them when we had to be at work.\n\nOne day I came home to find Wendy in our bedroom, crying.\n\n\"What's wrong, sweetie?\" I asked.\n\n\"The kids called me 'momma,'\" she said.\n\n\"That's a good thing, isn't it?\" I asked. She nodded her head as she cried on my shoulder.\n\n\"Yes, it is,\" she said. \"I just never thought I would ever hear anyone call me that.\" Tears crept down my cheek as I held her. I knew how much this meant to her.\n\nMichael grew to be quite the athlete and started playing sports early on. I thoroughly enjoyed taking him to Little League and watching him play. We all went to see him play, then would go out for pizza or a burger afterward.\n\nMichelle followed in Wendy's footsteps and wanted to play piano. So we paid for lessons and attended her recitals. I loved listening to the two of them play duets on Wendy's piano, which sat prominently in the living room.\n\nMichael decided he wanted to play guitar, so we bought one for him and paid for lessons. About the same time, Wendy decided I needed to broaden my musical horizons and gave me a nice Gibson banjo, knowing how much I enjoyed bluegrass. I started taking lessons, and loved playing the thing. Within a year or so, I found I was able to actually play a halfway decent tune on it. By then, we had formed an informal family band, and often jammed together in the living room.\n\nI'll never forget the time Michael and I played \"Dueling Banjos\" together at a neighborhood picnic. By the time we were done, everyone was stomping their feet and clapping as we played. When we finished, Michael and I gave each other a \"high-five\" as everyone gave us a standing ovation. What I didn't know was that Wendy had caught it all on video.\n\nLife went on with all of its ups and downs. Things were great for us, overall, and we had our minor disagreements, like any other family, but we always got through them.\n\nIn 1986, Wendy was diagnosed with thyroid cancer. She assured me that it was a very common and treatable condition, but I was still worried and wondered if it was connected to her Turner Syndrome. She got through it okay, just as she promised, but she now had to take pills every day for her thyroid.\n\nFour years later, Saddam Hussein invaded Kuwait, and Wendy, along with several others in her reserve unit, were called into active duty and assigned to the USNS Mercy, a hospital ship based in San Diego. By then, she had just been promoted to Senior Chief Petty Officer. Having served in combat, I was naturally concerned for her well-being, and of course, the children were scared as well, but she put our minds at ease, telling us that hers was not a combat role, and that it was considered a war crime to attack a hospital ship.\n\nIt was a tearful departure that day in August 1990 when the kids and I took her to the ship. After giving us all kisses and hugs, she promised to stay in touch as often as she could. The children and I had tears in our eyes as we watched her sail off to war.\n\nShe kept her promise and called at every opportunity. We exchanged letters at least three times a week and she called us from the ship about twice a month to let us know she was okay. The holiday season, though, was the worse part of the whole ordeal. The kids and I missed her so damn much, but we got through it.\n\nShe called on Thanksgiving and Christmas, and the kids and I even played a Christmas song for her as she listened. But it just wasn't the same without her there.\n\nWe finally got word in the middle of March 1991 that the ship would be leaving the area of operations and would return to Oakland in April. We all jumped for joy at the news. When the time came, the kids and I drove to Oakland to pick her up.\n\nWe smothered her with hugs and kisses when she got off the ship and I could tell she was happy to be back home. I don't know if the kids noticed, but I saw something different about her. Having been through combat, I thought that maybe she was just experiencing a bit of fatigue from what she had experienced. But after a couple weeks, I knew there was something else going on.\n\nShe seemed to be tired all the time, and struggled just to get through the day. Little tasks wiped her out and I found her catching her breath more than once. I finally convinced her to see a doctor and took the day off to be with her.\n\nAfter examining her, the doctor recommended she see a cardiologist. It only took him 30 seconds of listening to her heart through a stethoscope to tell us she needed surgery, right then and there.\n\nIt turned out that what other doctors simply wrote off as a \"heart murmur\" over the years was much worse. The valve on her aorta wasn't working and had to be replaced. They ended up giving her a mechanical valve, which the doctor said would probably last longer than she would. They also put her on coumadin, a medication to keep her blood thin.\n\nShe was much better after that, but it was a bit strange to hear her valve clicking at night when nothing else was moving in the house.\n\nA couple months later, she started experiencing some of the symptoms of menopause, which we both knew was probably due to the Turner Syndrome. Her joints ached all the time, and she experienced a number of wild mood swings. She could be happy and care-free one moment, then start crying for no reason whatsoever. A moment later, she would be angry at the world over essentially nothing. Of course, her libido practically disappeared, as did our sex life.\n\nHer doctor did what he could, but eventually suggested she have a hysterectomy. She agreed to the procedure and had it done, spending five days in the hospital. She improved considerably afterward, but things were never quite the same.\n\nOur love for each other never decreased, but our sex life basically disappeared. We tried a few times, but she found the actual penetration too painful, even with creams and lubes. We satisfied each other as best we could orally, but there was still something missing.\n\nLife went on, and the children graduated from high school in 1993. Michael got an appointment to the Naval Academy at Annapolis and Michelle got accepted to UCLA, and hoped to one day become a doctor. Wendy and I tearfully bid them farewell as they moved forward with their lives. Then our lives as \"empty-nesters\" set in.\n\nWe discussed selling the house and moving into something smaller, but dismissed that idea after looking at the rising cost of housing. Not only that, we had a lot of happy memories in the house where we lived and raised the kids and, we reasoned, the day could come that we'd be entertaining grandchildren. So we stayed where we were and moved ahead.\n\nA couple years later, Wendy realized she had enough points to retire from the Navy Reserves, so she did. She stayed on at Scripps and buried herself in her work.\n\nOne night, Wendy turned to me and uttered the words no married man ever wants to hear: \"We need to talk.\"\n\n\"What's the matter?\" I asked.\n\n\"Before you say anything, I want you to please hear me out, completely,\" she said.\n\n\"Okay,\" I said, getting nervous. Was she going to ask me for a divorce? I had no idea what was going through her head.\n\n\"Promise me you won't get mad or anything, okay?\" she asked. I was actually getting a bit peeved by now, but I held my tongue.\n\n\"Just talk to me, Wendy,\" I said. \"What's going on?\"\n\n\"I know the last few years have been hard,\" she said. \"It's been hard on both of us. And I know it's been a long time since we've been able to do anything, you know, in bed. I don't blame you, not at all. It's me. It's all my fault.\"\n\n\"No, it's not your fault that you had to undergo surgery,\" I said.\n\n\"But I can't satisfy you anymore,\" she said tearfully. \"And it's not right for you to have to go without sex because I can't do it anymore.\"\n\n\"What are you suggesting?\" I asked.\n\n\"Maybe you should find another woman and have sex with her,\" she said.\n\n\"What?\" I asked. \"Do you want a divorce or something?\"\n\n\"Oh, heaven's no,\" she said. \"I love you with all my heart. I just want you to be happy, and if having sex with another woman is what it takes, then I'm prepared to let you do it.\"\n\n\"You want me to cheat on you?\" I asked, shocked that she would even suggest such a thing, especially after what I went through with Marcy. She shook her head.\n\n\"No, I don't,\" she said. \"It wouldn't be cheating, anyway. Not really. You'd have my permission and you wouldn't be sneaking around on me. Besides, it's just sex.\" It was my turn to shake my head.\n\n\"No, dear,\" I said. \"I'm not going to do it. With or without your permission. I took a vow to you in front of God and witnesses to love, honor and cherish you in good times and bad, through sickness and health. On top of that, I promised to forsake all others until death do us part. I'm not breaking those vows.\"\n\n\"But I can't satisfy you any more,\" she said, tears falling down her face. \"It's not fair. You deserve to be happy.\"\n\n\"But I am happy,\" I told her. \"Every minute I get to spend with you makes me happy.\"\n\n\"How can you be happy with me?\" she asked, crying. \"I can't possibly make you happy anymore. I'm a failure. I'm scarred and ugly. I don't know how you can even stand to look at me.\" She broke down, sobbing. I knew her \"zipper\" made her feel less attractive, but I never made mention of it. I held her close to me and rocked her as she cried on my shoulder.\n\n\"You're not a failure,\" I told her. \"And you're certainly not ugly. You're the most beautiful woman I've ever known, and I'll be happy to compare scars with you. I don't ever want to hear you say that again. You've made me the happiest man in the world and you raised two wonderful children. All while working and serving your country. You're the best wife and mother any man could ever hope for. Don't ever tell me that you're a failure, because you're not. Believe me, I know plenty of women who couldn't hold a candle to you.\"\n\n\"I'm sorry,\" she cried. \"I just want you to be happy. You deserve that.\"\n\n\"And you do make me happy,\" I told her. \"Listen, let's make an appointment with the doctor and see what can be done, okay?\"\n\n\"I don't want to see another doctor,\" she said. \"And I'm tired of taking pills.\" I could relate to that.",
        "\"I understand,\" I told her. \"But it won't hurt to find out. Please, call the doctor tomorrow and make the appointment. Promise me.\" She nodded her head.\n\n\"Okay,\" she said. \"I will.\"\n\nShe called the next day and made an appointment for later that week. I took a comp day off and went with her. The doctor and I both listened as she explained what was going on. He took notes as she talked and waited for her to finish. Then he consulted her chart before speaking.\n\n\"I see you were on hormones before your hysterectomy,\" he said. \"Are you still taking those?\" Wendy shook her head.\n\n\"They took me off of them and said I wouldn't need them anymore,\" she said. He nodded his head.\n\n\"I see it's also been a while since we've checked your thyroid,\" he said. \"Let's get some blood work done and see what we're dealing with first. Given your history, I also want to check your glucose level. My office will be in touch in a day or two and we'll go from there, okay?\"\n\n\"Okay,\" she said. After the doctor left, a nurse came into the room and took a few vials of blood. We left and went home after stopping for a quick bite to eat.\n\nA couple days later, the doctor's office called. Some of her levels were off, including her thyroid, so the doctor called in a new prescription. He also found her glucose levels were elevated and determined that she was diabetic, but not so bad that she required medication. His plan was to see if it could be managed through diet. That didn't surprise me.\n\nI had started reading up on Turner Syndrome on the Internet and a number of sites suggested that diabetes was fairly common among women with the condition. I also made note of the symptoms that were listed and found that Wendy had displayed a number of them over the years.\n\nThe doctor also prescribed a new hormone therapy and set her up to visit his dietitian. He also asked her to come back in 30 days for a follow-up. I picked up her new meds and scheduled another day off to visit the dietitian with her. I planned to go on the diet with her, partly to give her support, but also because I wanted to avoid diabetes myself.\n\nIt took a few days before we saw results from her new regimen, but it was worth it. Wendy's mood improved considerably and she was almost back to her old self. About a week after the new diet and prescriptions, Wendy met me in the bedroom wearing nothing but a smile. It had been a while since I had seen this.\n\n\"You wanna play?\" she asked, striking a sexy pose. I took her in my arms and gave her a kiss.\n\n\"Always,\" I said. I started to undress, but she stopped me.\n\n\"Let me take care of that,\" she said as she began unbuttoning my shirt. After she had my shirt off, she took off my belt and unzipped my trousers. She pulled them down with my boxers and knelt in front of me. She gave me a sultry smile as she took my growing manhood in her hands. \"This looks delicious,\" she said before taking me in her mouth.\n\nI groaned as she sucked me to completion. After swallowing my first load, she sat me on the bed, took my shoes and socks off and pulled my trousers off, tossing them on a chair. Then she laid me back on the bed and climbed over me, taking my cock in her hands. After she got me hard for the second time, she positioned herself over me and gently settled herself down, impaling herself on my hard prick.\n\nWe both moaned in pleasure and I let her take as much as she felt comfortable with. She felt so tight and wet and it took all my willpower to keep from pounding up into her. I didn't want to hurt her, after all, and this was the most we had done in a very long time.\n\nShe leaned over me as she slowly fucked herself on top of me and looked me in the eye.\n\n\"This feels so damn good,\" she said. \"I've missed this so much.\"\n\n\"Me too,\" I said. \"You feel so hot and tight. Don't ever stop doing this.\"\n\n\"I won't,\" she said. \"In fact, I may just chain you to the bed and stay just like this, naked for the rest of my life.\"\n\n\"Works for me,\" I said. After a few more minutes, I exploded inside her and her orgasm hit at the same time. I felt like I could go on for much longer, and started moving under her, but I saw her face grimace just a bit.\n\n\"I'm sorry, babe, but I'm starting to get a bit sore,\" she said, rolling off of me.\n\n\"That's alright,\" I said, holding her close to me. \"No need to apologize.\" She took my cock in her hands and looked me in the eye.\n\n\"I'm so glad you didn't take me up on my stupid offer,\" she said.\n\n\"So am I,\" I told her.\n\n\"You have my permission to kick my ass if I ever mention that again,\" she added.\n\n\"I may just take you up on that,\" I said. She laughed as she gripped my cock.\n\n\"This cock is mine,\" she said. \"All mine. And no one else can have it, ever.\"\n\n\"Damn straight,\" I told her.\n\n\"I love you so much,\" she said, before giving me a deep kiss.\n\n\"I love you more,\" I said in response after we kissed. It felt so good to have the old Wendy back. Our sex life improved quite a bit. We weren't nearly as active as we were when we first married, but it was still very satisfying.\n\nIn 1997, Michelle got her bachelor's degree and prepared for the next stage in her education. After we watched her receive her diploma, the three of us went to Annapolis to watch Michael graduate from the Naval Academy as a newly-commissioned ensign.\n\nAfter the ceremony, he introduced a number of his classmates to us, many of whom thanked Wendy and I for our service. We accepted their gratitude and congratulated them on their achievements. Afterward, I asked Michael what he would be doing.\n\n\"I'm going for jets,\" he said.\n\n\"You're going to be a pilot?\" I asked him.\n\n\"I'm going to be a Naval aviator,\" he told me with pride.\n\nAfter we celebrated our children's graduations, we came home and Michelle stayed with us for the summer until she had to back to school. She still had four years of medical school plus her residency before her education was complete.\n\nOver the next 20 years, Wendy dealt with one medical problem after another. She began to develop cataracts, and ended up going through lens replacement surgeries. In 2005, doctors found an aneurysm on her aorta, so she went through yet another heart surgery to replace that. While there, the doctor discovered he would have to replace her mechanical valve, so he put in a pig valve, which he said should last for the rest of her life.\n\nShe ended up dealing with one niggling medical problem after another over the next 15 years. At one point, they found a lump in one of her breasts and did a biopsy. Fortunately, it wasn't breast cancer. Doctors fretted over her liver, then her kidneys, and at one point, they were concerned that she was having heart failure. Thankfully, we had good insurance which covered all this stuff, otherwise we would have been bankrupt.\n\nI remember reading that a lot of this could possibly be traced to her Turner Syndrome, which, from what I saw, could decrease her life by as much as 13 years. At this point, I was grateful that she was still alive and I savored every minute with her I could. By that time, I really wasn't all that concerned about sex, or lack thereof. Just having her in my arms was good enough.\n\nShe finally retired from Scripps and spent a few quiet years at home. By that time, both of the children had married. Michael had just been promoted to Commander, and was in charge of a fighter squadron assigned to an aircraft carrier. He married a lovely girl he met in Maryland and they now had two children.\n\nMichelle finished her residency and decided to join the Navy to serve as a doctor after she became licensed. By now, she was a Lt. Commander and was stationed at Balboa Naval Hospital, the same facility where Wendy spent much of her career. She had also married, but caught her husband cheating on her with a nurse and gave him the heave-ho with a well-deserved kick to the balls. After her divorce, she began dating another doctor, but there wasn't anything serious between them.\n\nThen it happened. For some time, Wendy had been having difficulty breathing or swallowing her food. It got to the point that the only way she could sleep was if her head was elevated. One night in October 2019, she woke me up, frantic. I could tell she was having a hard time breathing and tried to get her to calm down. Nothing worked and I could tell that she was truly suffering. So I called 911.\n\nThe ambulance was there in short order and they took her to the emergency room. I followed behind and ran in as they wheeled her into the exam room. They checked her out as I took care of the paperwork. I had been through this many times, so I felt like an old hand at this by now.\n\nAfter waiting for what seemed like forever, a doctor came out to inform me that they had found a mass in the back of her throat that prevented her from breathing properly. They took a sample of the mass to determine what it was and had her on a machine that would allow her to breathe. I asked if I could see her, but they said she was sedated at the moment.\n\nSo I waited. And waited. And waited some more. I drank one cup of bad coffee after another as I sat waiting for someone to tell me something. I drank so much coffee I had to use the head several times. I even dozed off for a while as I waited for them to tell me what was going on.\n\nEventually, the doctor came out and pulled me into a small conference room where we could speak in private. That's when he informed me that the mass appeared to be cancerous, and they were prepping her for emergency surgery to remove the mass so she could breathe. He also informed me they were still analyzing it to determine whether or not the tumor was malignant. The surgery could take quite some time, he said, so he suggested I go home and give the nurse my cell number so I could be informed when they were finished.\n\nI followed his advise and headed home after leaving my cell number. I was exhausted, but anxious. When I got home, I called in to work to let them know what was going on and my supervisor told me to take whatever time I needed. I collapsed on the couch and slept fitfully until the chime on my phone woke me several hours later.\n\nWhen I got to the hospital, I was taken to the recovery area and asked to wait until they had her room prepared. While I was waiting, a doctor came out and gave me the news that they had confirmed the cancer. Although it was a fairly aggressive cancer, they were certain it could be treated through chemotherapy. I signed all the appropriate papers to start her treatment and went to visit her.\n\nMy heart broke as I saw her in that hospital bed. She looked haggard and worn, but put on a brave face. I held her hand in mine and kissed her cheek.\n\n\"Did the doctor talk to you yet?\" I asked. She nodded her head. \"Are you going to be okay?\"\n\n\"Yeah,\" she said weakly. \"I'm just worried about you.\"\n\n\"I'll be fine, dear,\" I said. \"I'm right here. I'm not going anywhere.\" We sat there holding hands until she finally drifted off to sleep. I kissed her on the forehead and went home after the doctor said they were going to keep her for a few days to get her set up for chemo.\n\nMy supervisor understood the situation and told me to take whatever time I needed. I had a lot of vacation, sick and comp time saved up, so I took it and made the necessary changes in the house so she wouldn't have to navigate the stairs in her weakened condition.\n\nThe next three months were rough. Fortunately, the kids came out for the holidays and Jennifer, Michael's wife, cooked the holiday meals with Michelle's help. By this time, Michael was a Captain in the Navy, and commanded a carrier air group. He took enough leave so they could spend Thanksgiving and Christmas with us. Wendy and I spent as much time as we could with the grandkids.\n\nIt was just after Christmas when the doctors discovered her infections. They immediately stopped the chemo until they had settled on a plan of action. You know the rest.\n\nThe children were an absolute Godsend. They helped me arrange the funeral and deal with Wendy's final arrangements. We all cried on each other's shoulders during this time.\n\nIt was two months after the funeral when I finally decided to tackle the last of Wendy's things. By then, almost everything else had either been given away as she wished or donated to Goodwill. With everyone locked down due to this damn coronavirus thing, I figured this was just as good a time as any to get to it.\n\nI went into the bedroom and looked at the large hope chest that ran the width of our bed. I had made it for her 45 years ago when we first moved into the house, using the table saw and router she had given to me as a housewarming present. Until now, I had never opened the thing so I had no idea what she kept in it.\n\nI remember asking her what she used it for, and she would simply give me a sweet smile and say it was a place for her best memories. Whatever that meant. I figured she kept some knick-knacks or things that had been handed down to her over the years.\n\nWhen I opened the chest, a part of me felt like I was invading her privacy. I looked inside, wondering what I would find. There was an envelope sitting on top addressed to me. I set that aside for a moment and went through what she had placed in the chest.\n\nI found several notebooks and opened them up. Wendy had kept every picture the children and grandchildren had ever drawn, and had inserted them neatly into sheet protectors. On top of that, she had kept every card, letter and note she had ever received from us. There were several bundles of letters and cards from the three of us and I found that she had kept every note I had given her over the years. She even kept locks of hair from the children that she had collected over the years.\n\nI also found a stack of videos she had made of the family, including a tape of the barbecue where Michael and I played \"Dueling Banjos.\" I decided I would make copies of them for the kids.\n\nI opened the letter and pulled out a handwritten note. I could tell this was fairly recent, as her handwriting wasn't as neat as it used to be.\n\n\"My Darling Jeff,\" it began.\n\n\"I don't know if I'm going to survive this operation or not, so I wanted to get this off my chest while I still can. Over the last 50 years, you have made me the happiest woman on earth, and I only hope and pray that I have made you happy as well.\n\n\"Please don't cry for me. I've made my peace with God and I'm prepared to meet my Maker with a clear conscience. In the 50 years we've been together, you're the only man I have ever been with and I know you've been faithful as well.\n\n\"I also know that you still have needs, so please find someone who will make you happy in your old age. Just promise that you'll remember me from time to time, okay? I'll be here in Heaven waiting for the day when we're reunited.\n\n\"Forever your loving wife, Wendy,\" the note said in conclusion. Tears ran down my face as I read that note three times, knowing it would be the last note from her I would ever read. I put the note back in the envelope and replaced it in the chest, along with her memories.\n\nI closed the chest and decided to keep it closed and locked from that time forward. I looked up at the ceiling, wondering if she could see me.\n\n\"I love you, Wendy,\" I whispered into the room. \"And I always will. You were the best wife ever and no one could ever replace you.\"\n\n...\n\nNotes:\n\nTurner Syndrome is a very real condition that affects about 1 in 2,000 women. Symptoms vary from person to person, but all of the women affected by it are unable to conceive. There is no cure for the condition, but if diagnosed early enough, the symptoms can be treated, and many women are able to live fairly normal lives.\n\nThe USNS Mercy actually was deployed during the 1990 Gulf War during the dates in the story. I'm not certain if there were any female corpsmen assigned to it at the time, so I exercised a bit of artistic license there.\n\nAnd now, back to the madness..."
    ],
    "authorname": "saddletramp1956",
    "tags": [
        "best",
        "cancer",
        "exhibitionist",
        "turner syndrome",
        "wife"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/best-wife-ever"
}