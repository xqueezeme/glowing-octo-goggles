{
    "title": "Fantasy Man Ch. 08",
    "pages": [
        "Sorry for the wait and thank you for taking the time to read this chapter of Fantasy Man. :) \n\n---------\n\nZack sighed as he closed the bathroom door. He was anxious for Terri to come home and it was making him jittery. He smiled as he thought of the months that he had spent with Terri at his side. \n\nZack hadn't realized how different she was until he thought of her as his own. She was more independent than most of the women he had dated in the past. At first, it irked him that she didn't need him as much as he thought she should, but after some introspection, he realized that he liked the way she stood up for herself and her opinions. He liked the fact that she refused to let him wait on her hand and foot sometimes. She wasn't a delicate flower, despite the fact that he still called her Buttercup, she was a rock. She was strong and her feelings for him only made her that much stronger. Terri was willing to stand up to him when she thought he was wrong and she wasn't afraid to let him know just what was on her mind. \n\nThe corner of Zack's mouth lifted in an attempt to smile. She was a pistol alright and if he didn't already know that, he might have been surprised at her enthusiasm in the bedroom. The smile that was threatening finally spread across his face. \n\nDuring the next few weeks that had passed after the night he pampered Terri into being his girlfriend, Zack had been thorough in his slow seduction. He wanted Terri to be out of her mind with lust before he took her and made her his. Every chance he got, he teased her with his body and his words. Terri, for her part, may have been frustrated, but she hung with him and beat him at his own game. \n\nThe day that he arrived home from the office and she was clad in only a skimpy green lace thing, he lost. She barely got the hello out of her mouth before he scooped her up and took her to the bedroom. \n\nThe night they shared was amazing. All the built up passion and longing made for an explosive coupling. Zack's smile continued to spread as he thought about how he had laid Terri down gently, taking in the sight of all the flesh that she was exposing. He couldn't wait for more to be revealed. While he was kissing her into oblivion, he slowly lifted up her teddy. When he broke away from the kiss, panting as hard as Terri was, he took in the sight of her body, her feminine curves, the way her lacy panties hugged her rounded hips. It was near perfection. He could feel something inside of him pulling, urging him to go faster, to plunge himself into her depths. It was all he could do not to rip the panties clear off her body.\n\nThe soft moans that escaped from her lips were a siren song and he could feel himself being entangled in Terri's spell. His lips traveled over the soft skin that covered her breasts, taking time to stop at each nipple and give it the proper attention it deserved. He had been waiting to latch onto her dark chocolate hued nipples for so long. Zack could remember dreaming about them at least once each night. It was an obsession and one that he looked forward to indulging himself in. \n\nFrom her tits, he moved down her body, his tongue teasing and licking as he traveled to his primary objective. When he reached the line of the green lace, he grabbed the edge in his teeth and pulled it down. Zack remembered the look on Terri's face as she watched him drag her panties down to her ankles. He slipped them off and tossed them over his shoulder, making a mental note to find them and keep them as a memento. \n\nThe whole way down her legs, Zack had his eyes fixed on Terri's treasure. Her pussy gleamed in its wetness. It was a beautiful combination of brown and pinks and Zack couldn't wait to feast. He ate Terri out for countless minutes. Time faded and he only cared about how many times he made her come. Her screams, combined with her hands pulling his hair, made Zack as hard as a rock. He loved the way she showed her appreciation of his ministrations, especially when she closed his head in between her legs, throwing her head back in ecstasy. Zack stopped when she was reduced to a mindless, blabbering heap of pleasure. \n\nZack stood and stripped until he wore nothing but a cocky grin. He moved up her body, her legs spread in invitation. \"Terri, baby, are you sure?\" \n\nTerri's eyes came into focus and she growled, \"Zack, if you don't get in me, I will strangle you. If I wasn't sure, I wouldn't have been wearing next to nothing when you got home.\" \n\nZack laughed. It was time to make this Buttercup his. Zack remembered the moment his cock brushed up against Terri's pussy. The warm wetness that covered it, the way her lips spread as he slid into her inch by inch, the look on Terri's face when she realized that he still had more to give her, the cute little 'o' Terri's mouth formed as he plowed into her repeatedly, hard and steady. Oh, it was quite a night. He made her scream in octaves that he had never heard before. It was an amazing experience. And he relived it almost every night. He had definitely laid claim to her body and he was steadily working on her heart. \n\nZack chuckled to himself as he looked down at the huge tent in his pants. At least he wasn't at work. But, he would definitely have to do something about it before going to his parents' house. \n\nTonight was a big night. The relationship that he had with Terri had grown over the months that they spent together and he was happier than he had been in a long while. He had decorated his office with pictures of Terri and just looking at her smiling face made his day brighter. After dating her for over ten months, you would think that he would have brought her home to meet his parents before then, but for some reason the thought scared him. \n\nTerri was the first woman that hadn't met his parents within the first few weeks that he was dating them, but then again, he was living at home when he dated all those other girls. Terri was the first woman that he would actually have to bring home to meet his parents. She claimed that she didn't mind not going over to their house with him when he went for the occasional dinner and it was true that most times, she had a ton of homework to catch up on or she was working late. But, Zack knew that she was just as nervous about it as he was. Now, there were no excuses to be made on either side. \n\nHe had his father to blame for this. Yep, he would blame his father for getting him to take the next step in his relationship with Terri, not that it was a bad thing. In fact, it was just what they needed to help strengthen their bond and it would be helpful in Zack's quest to win Terri's heart. He needed to convince her that he was extremely serious about her. She was his now, but he wanted her to be his forever. Zack laughed to himself. First, he was nervous to take her home and now he was plotting to keep her for the rest of his life? Oh, how things change quickly. As he finished getting ready, Zack thought about his encounter with his father earlier that week. \n\nZack had been sitting in his office when his father walked in. Apparently, Zack's secretary had chosen to go on break before notifying him that his father was barging in.\n\n'Of course, when Dad comes in, I have to be doing something sappy.' Zack frowned momentarily. He had been staring at a picture of Terri, which usually sat on his desk, but when his father entered the room, it was in his hands. It was one of his favorite pictures of her. Terri was on a swing, her hair was trailing behind her as she was swinging forward and she had a smile of pure joy on her face. That smile always made Zack's heart beat just a bit faster. \n\n\"Sir, to what do I owe this...visit?\" Zack asked, placing the picture back on his desk. He looked up at his father, who was trying to hide his smile behind a stern look. \n\n\"Zack, do you know that when you first started working here, I was afraid that you'd never grow up? Never mature into the businessman that I needed you to be in order to take over this company. You would come in late, party all night, bring all sorts of women home...You weren't taking life seriously. Your mother was very worried about you. So, I introduced you to Amanda. I thought that if you two were together then you would think more about the future, more about this business.\" Zack's father paused and a slight smile appeared on his face. \n\n\"Then you move out of the house, claiming that you wanted more space. You break up with Amanda, leaving me to pick up the pieces of the merger that rested on your union. I thought about being furious with you...briefly. But, when I realized that you had begun to take this job more seriously, that you were actually being responsible and carrying your weight, well, I couldn't be mad. Over time, pictures start showing up on your desk, you come to work humming, and on time, no less, but when you show up to the house for dinner, you come alone. While you're there, you look at the clock so many times, I worry that you'll get whiplash.\" Another pause and Zack knew exactly what was coming. \n\n\"I said all that to say this. Your mother expects you at dinner on Friday...and she expects you to bring your lady friend as well. We want to meet the woman that has turned you from a no-good slacker into a man that can be trusted. Your older brother will be there, along with Karen, so be on your best behavior and don't be late. I'd hate to see your mother work herself into a tizzy about you not showing up and you know how she gets.\" \n\nZack watched his father rise from the corner of the desk that he had perched on while talking to him. \"I'll have to talk to Terri to see if she's off.\" \n\nZack's father's eyebrow rose in question. \n\n\"Terri works a lot to cover her school expenses on top of rent and utilities. She won't let me pay for anything past my share of the bills, except for dinner and a movie when I take her out.\" Zack could feel his bottom lip protrude in the beginnings of a pout. He really wanted Terri to let him take care of everything sometimes. He often had to remind himself that if she did let him do everything for her, she wouldn't be Terri...she'd be Amanda and he had already established that he didn't want that kind of woman in his life. He'd just have to suck it up and enjoy the strong woman that had captured his heart. \n\n\"An independent woman. I like that.\" Zack's father made his way towards the door. \"Just make sure you call by Wednesday to let us know either way or your mother will have your head when you come alone.\" \n\nThe image of his mother serving him for dinner briefly flashed through his head, before he shook it and cleared his thoughts. Zack raised his hand to wave, but by then his father had already left the office. Zack smiled. It wasn't going to be easy to live up to that man, but Zack sure would try. \n\nIt had taken some convincing, but Terri finally agreed to switch shifts with someone so she could be home in plenty of time to get ready for dinner. Zack called his mother and she was elated that she would finally get to meet the woman that made Zack so happy. So, there he was on Friday, in the bathroom, making sure that he looked presentable for his parents. \n\nHe was eagerly awaiting Terri's arrival because she had yet to show him what she was going to wear. She knew that he would be more critical than usual, so she was going to wait until there was no way that he could make her change her selection. Not that he would have. His Buttercup was beautiful in everything that she wore. He was sure that whatever she picked it would look great on her, even if she showed up in a sackcloth dress. Zack just chalked it all up to nerves and let her do what she felt she needed to in order to make a good impression. After all, she was his and not matter what, he was going to keep her by his side. Nothing his family could say would sway him on that. \n\nZack retreated to the couch in the living room and waited for Terri to arrive. He had cleaned the bathroom and taken care of everything he needed to so that Terri could come home and have the bathroom all to herself. Whenever they shared the bathroom, he always ended up sneaking into the shower with her and taking her against the wall. She didn't complain...well, not until afterwards when she realized that she was going to be late for whatever. This way, he wouldn't be tempted and his mother wouldn't try to kill him when they were late for dinner. \n\nThe phone rang and Zack eyed it warily. He hoped it wasn't Terri calling to say that she was running late or that she wasn't coming because of work. His mom would have his entire hide hung up over the fireplace if that happened. \n\nHe picked up the phone and answered, \"Hello?\" \n\n\"Zachary, darling,\" his mother replied. \n\n\"Hey, mom, what's going on?\" \n\n\"Well, I thought you should know that we have a few unexpected guests for dinner tonight.\" \n\nZack raised an eyebrow. \"How unexpected?\" \n\n\"Well, let's just say that they invited themselves when they heard that you were coming to dinner and you were bringing a friend. Sometimes, I wonder about your father and his...\" Zack could hear the annoyance in his mother's voice. \n\n\"Let me guess who it is...Amanda and her father?\" Zack cut off his mother before she could get on a roll. He knew from experience that once she got started on his father or his friends, it could be hours before she would let it go. \n\n\"Lucky guess, dear.\" Zack heard his mom heave a heavy sigh before she continued. \"I know it's a bother, but I just wanted to give you and Terri a heads up. I'd hate for her to be caught by surprise. It will be uncomfortable enough as it is. I wish I could just toss them out on their asses, but you know your father, always a stickler for decorum. Plus, he has that merger that he's working on, which is probably why they felt as if they could come over unannounced and get away with it. Anyway, I still expect you two here on time. I look forward to seeing the woman who has captured your interest...and your heart.\" Zack could feel the smile spreading across his face. His mother was the very picture of a lady when she was out in public, but when she was at home, she wasn't afraid to be herself and let loose. Zack knew that if she could, his mom would toss those two out and she would probably try to sic the dogs on them as well. Then he thought about how uncomfortable the night was going to get and wished that she would get rid of the two. \n\n\"How'd you know?\" His mother had to be psychic or something. He hadn't talked to her about how he felt about Terri, and yet she knew. \n\n\"Zachary, I'm your mother. Of course I know. It was a little obvious though when your father came home talking about how your desk was cluttered with pictures of some beautiful girl and that you can't take your eyes off them when you're at your desk, supposedly working.\" Zack could hear the smile in his mother's voice.\n\n\"I guess you're right. She has gotten to me, but I don't know what I'm going to do about it.\" \n\n\"Hrpm. You're going to bring her to dinner and let the rest of your family meet her. That's what you're going to do about it.\"\n\n\"The rest of my family and Amanda's too.\" It was Zack's turn to sigh then. The night just got a little more complicated than he originally planned, he just hoped Terri wouldn't freak out about it. \"Alright, mom. We'll be there, but make sure that Amanda is kept on her leash. I'd hate for Terri to show her what a real woman is made of.\" \n\nZack listened to his mother's musical laugh. \"I'll certainly try, although it might be a show worth watching.\"\n\n\"Love you, mom.\" \n\n\"Love you too, dearest.\" \n\nTerri found herself doing a balancing act as she tried to open the apartment door. She had hidden her outfit for the night over at Arthur's, partly because she didn't want Zack to make a big deal about it and partly because she needed Cathy's opinion on the ensemble. After they met the first time, they became fast friends and Terri was once again thrilled that Arthur had chosen someone that she could get along with. Arthur hadn't told her yet, but she had a sneaking suspicion that he was in love with Cathy. Terri just hoped that Arthur wouldn't let her get away, at least not without seeing where the relationship could really go. \n\nTerri smiled. All those months ago, it was Terri who was getting relationship advice from Arthur, now she was the one dispensing it. And, the best things was, she barely had to say anything. Because Arthur was so good at reading her faces and knowing what she was thinking, he almost always caught her silent 'Tell her already' look. \n\nTerri had finally gotten the door open and walked in to see Zack fidgeting on the couch. He was so cute when he was nervous. His hair was already messy and she could tell that he had been continuously sliding his fingers through it. But, then again, she loved the way he looked when his hair was all over the place. Bedhead became him. The forest green button down shirt he was wearing was one of her favorites and he was wearing the slacks that hugged his behind just right. Those pants made her salivate every time he walked past her. Yum. \n\nTerri calmed herself down, knowing that it wasn't the right time to rip his clothes off, but after they got back home...it was on. Terri walked over to Zack and placed a kiss on his forehead. He tilted his head up and she gladly placed her lips on his, kissing him softly before straightening up and walking back towards their room. \n\nZack followed her. \"How was your day, baby?\" \n\nTerri made a noncommittal noise and continued to rifle through her closet, looking for her black pumps. She felt Zack come up behind her, rubbing his hard cock against her behind. She smiled to herself in the knowledge that a little thing like bending over could get Zack's engines going. She used that tactic a lot when she was in the mood for Zack to attack her. Terri gave him a look that clearly told him what he was in for later and then returned to looking for her shoes. \n\nShe felt Zack move away and was slightly surprised by the sense of disappointment that welled up inside of her. Now was not the time for sex, it was time for her to meet Zack's parents, his brother and his wife. \n\n\"My mom called a little while ago.\" \n\nTerri stood up and turned to look at Zack. \"Oh yeah? What for?\" \n\nZack's face showed a mixture of regret and annoyance. \"My ex, Amanda, and her father will be at dinner tonight. Apparently, they invited themselves and because my dad is still trying to work this merger, my mom couldn't ask them to leave.\" \n\nTerri's face twisted into a frown. \"Your ex? The one that you were dating before me?\"\n\n\"That's the one. I guess she wants to see who I'm with now.\" Zack ran his hand through his hair again. \"I'm sorry, Buttercup. I wish it didn't have to be this way.\" \n\nTerri shrugged. \"It's ok. I just hope she won't be too disappointed when she sees that you've upgraded to the super deluxe model.\" \n\nZack laughed and shook his head. \"Well, go ahead and get ready. I'm dying to see what you're wearing tonight.\" \n\nTerri pointed to the bed and Zack turned to look. Terri had chosen a long, flowing, cerulean blue dress with a small black sweater to wear over her arms because the dress was sleeveless. The corner of Zack's mouth lifted into a smile. Terri was going to look stunning. \"I'll leave you to it then. You've got an hour, Buttercup. Don't make me come in here after you.\" Zack left Terri to get ready with a wink. \n\n~~~\n\nTerri struggled to keep herself composed as they pulled up to the house. It was just a big and intimidating as she remembered, although it was definitely not as ominous the last time she was there. With a deep breath, Terri stepped out of the car and grabbed a hold of Zack's arm. At least she had him for support. They ascended the steps and Zack knocked before opening the door. \"We're here!\" He yelled out, knowing that everyone probably already realized that they were. ",
        "Zack's mother appeared from a room that was off to the side of the massive foyer that they stood in. Terri smiled and took in the woman that gave birth to the best thing that had happened to her in a long time. His mother was a tall woman, standing about 5'9\", with long blond hair falling to the middle of her back and sparkling blue eyes. Her smile reminded Terri of Zack's, accompanied by the same crinkles that formed at the corners of her eyes. \n\nZack's father was the next to emerge. He, too, was tall, being around 6'3\" or 6'4\", Terri guessed that his father was responsible for Zack's height and his good looks. The man was put together right and Terri was oh so glad that his son was too. \n\n\"Terri, I would like you to meet my parents, Melinda and Fred Smith. Mom, dad, this is Terri Hunter.\" Zack felt a strange swell of pride and he couldn't tell if it was because of his parents or because of Terri. It didn't matter, he was so glad that Terri was finally meeting his folks that he couldn't stop smiling. \n\n\"It's a pleasure to meet you, Mr. and Mrs. Smith.\" Terri said, feeling more at ease than she thought she could be in this situation. \n\nMelinda's smile had yet to dim as she gathered up Terri in a hug. \"I'm so happy to meet you! I've wanted to meet you for some time now.\" \n\nTerri was surprised, but she took it in stride and returned the embrace before breaking away to shake Zack's father's hand. \n\n\"Terri.\" His voice was gruff, but she could see that he was pleased. She gave him her best strong shake. Handshakes were important in the business world and told you a lot about a person. Terri wanted Fred to know that she was just as strong as Zack, but in her own way. \n\nThe couple was ushered into the dining room, where everyone was taking their seat. Zack's brother, William, had just sat, but stood up again to shake Terri's hand as she was introduced. William's wife, Karen, greeted Terri with a nod. Mr. Garvey and his daughter, Amanda, offered Terri polite smiles, but said nothing in the way of greeting. \n\n'Pompous asshole. I bet he's here to get Amanda back in Zack's good graces,' Terri thought to herself. She tried to keep her face from expressing her dislike for the pair, but she could feel herself flinch and hoped that no one noticed. \n\nZack slid his arm around her in a show of support and leaned down to whisper in her ear, \"If looks could kill, my sweet, we would be on our way to heaven right now.\" \n\nTerri giggled and took the seat that Zack pulled out for her before he sat down at her side. Dinner was brought out promptly and conversation began to pick up. Terri fielded the questions directed at her with ease and an air of confidence. She was going to show these people that she belonged in their world, with Zack, for as long as they were together. Not that she was as cool and confident as she seemed. She felt like a nervous wreck on the inside, but she wasn't going to let it stop her from impressing Zack's parents. \n\nTerri watched as Amanda seethed all through dinner. She wondered if Amanda was going to have a mental breakdown sometime that night and mentally made a list of things that she could do in the event of a mental lapse. Terri laughed to herself as she formulated plan A, which was to knock the bitch out. There needed not be a plan B, because plan A was going to be enough. \n\n\"Terri, tell us how you met Zack,\" William asked. \n\n\"Well, I delivered his pizza. That was when we first met. Then we met up again, quite by chance, at my second job. He came in over the next few weeks and we became good friends.\" \n\n\"You work two jobs?\" \n\n\"Well, I work two now. When I met Zack, I was actually working three jobs. I worked on campus, at the pizza parlor and at a small coffee shop.\" \n\nWilliam nodded as he listened to her answer. \"So, Zack walked in and you two hit it off. Then what happened?\" \n\nZack smiled and took over. \"Her bastard of an ex boyfriend was harassing her and she called me over to protect her. I willingly went and when I found out that she had a two bedroom apartment and no roommate, I jumped at the chance to get out of the house and out on my own. From there, things just started to happen.\" \n\nMelinda smiled at Zack before turning to Terri. She thought it prudent to change the subject, seeing as Amanda's father looked as if he was about to have a heart attack right there at the table. \n\n\"So, Terri, what are you planning to do after you graduate?\" The question posed by Melinda shook Terri out of her daydream about pounding Amanda's face into the ground. No, she wasn't jealous much. \n\n\"Well, I've been interested in psychology for a long while, but it takes at least a PhD to do anything really meaningful in the field of psychology. So, it looks like I am in for another five to six years of schooling, but when all is said and done, I want to open my own practice.\" \n\nFred nodded, glancing over at Melinda to gage her reaction to the answer. Melinda gave a slight nod to show her approval before she continued. \n\n\"What about children? Do you plan on having any?\" Melinda asked. \n\nTerri looked at Melinda, startled at the question. Zack nearly spit his food across the table. He couldn't believe his mom would ask her something like that at the table. Where was the tact that a hostess was supposed to exhibit? But, then again, Zack supposed, this was the first time he brought someone home that he was serious about. He hadn't really thought about it, but the idea of having kids with Terri was not as scary as he thought it would be. In fact, he wouldn't mind her having at least three of his kids. Zack's mind began to wander, trying to figure out what their children would look like. He hoped they would inherit a lot of their mother's wonderful features. \n\n\"Well...I would love to have kids in the future, but probably not until after I finish my PhD,\" Terri replied. \n\n\"Hmm...about 7 years from now. That's not that bad. You're still young and there's much in the world to experience,\" Melinda remarked before slicing more of the grilled chicken that sat on her plate. \n\nTerri smirked at Amanda's look of incredulity. Terri's look when the question was first asked might have echoed Amanda's if she hadn't prepared herself for such off the wall questions. She was sure that her own mother would have said the same thing if Zack was over her house. It was always about finding someone to settle down with and start raising a family, never mind the fact that she and Zack had only been officially dating for around 6 months. Although, Terri had to admit, Zack was pretty close to what she looked for in a guy that she would want to settle down with. With a little more training, he could be exactly what she was looking for. \n\nThe rest of dinner went well and the group retired to the sitting room for after dinner cocktails. Terri abstained from drinking, just to keep a cool head about her. There was no telling what might come up and she wanted her brain to be ready to handle anything. Standing in the corner for the moment, taking a break from the conversations, she toyed with the straw in her soda, swirling the contents and watching the carbonation bubbles burst. \n\n\"So, Terri, when did you start fucking Zack? Did you do it as soon as he moved in or did you wait a couple of nights?\" \n\nTerri looked up from her drink, her eyes falling on the form of Amanda. She stood in front of her, her blond hair curled into ringlets that framed her heart-shaped face. Her blue eyes were narrowed and the smirk that accompanied the question made Terri want to smack the silly bitch. But, she wasn't there for Amanda. She was there for Zack, to meet his family and share in their night. She wasn't going to let Amanda goad her into looking foolish. \n\nTerri laughed. \"No. Because he was a friend, I respected him as he respected me. And you know what, even though I never really met you, I respected you enough not to even consider anything with Zack until you were completely out of the picture.\"\n\nAmanda's sickeningly sweet smile was enough to let Terri know that something was up and she probably wasn't going to like it. \n\n\"It's interesting that you say that you consider him a friend. Here I was, thinking that you only saw him as your sugar daddy or your own personal wallet. We all know that you're nothing but a two-bit golddigger, here for Zack's money. But, let me tell you honey, we see through that fa\u00e7ade of yours and soon Zack will come to his senses and return to the person he really belongs with.\"\n\nTerri could feel her blood pressure rising. \"And that would be you?\"\n\n\"Well...yes. It's definitely not you. You're just the whore that Zack chose to experiment with. I bet he's always wanted to sleep with a black girl, just to see what it's like. Many guys do. But, you're just the flavor of the month. After he's done trying you out, you're going to be put out on your sorry money grubbing ass.\" \n\nTerri could feel it coming. She could feel the 'neck rolling, finger in your face, about to beat a bitch down' Terri trying to emerge. If she had been anywhere else, she would have already told Amanda off. Hell, if she were only outside the house, she would have already taken off her earrings and shoes and told that bitch to prepare herself for the ass-whooping of a lifetime. But, because she was here in Zack's parents' house, she would handle herself accordingly. But it was hard. It was sooo hard not to give in and let Amanda have what was coming. \n\nTerri plastered a fake smile on her face and excused herself to the bathroom. Once inside, she carefully splashed water on her face, trying to cool off and calm down. She wanted to make a good impression on Zack's parents, so she came up with a game plan on how to keep her calm in the face of Amanda. Once she was sure she could make it without placing her foot in Amanda's flat ass, she returned to the sitting room. \n\nAll eyes were on her, but she just smiled and walked over to Zack, taking her place at his side as he spoke to his brother. Soon after, Amanda walked over and stood on Zack's other side, her body coming dangerously close to pressing against Zack's. \n\nTerri shook her head. Apparently, Amanda had a death wish. Zack looked at Amanda briefly before moving closer to Terri and creating some distance between them. The night progressed without another hitch. Terri was never again alone, so Amanda didn't have another chance to corner her and say things that would only rile her up more. When the evening was over, Terri was glad. She had a good time, but she knew it would have been better if Amanda wasn't there. Terri just shrugged it off and chalked it up to desperation. They left the house, with both of them promising to come to another dinner in the future. \n\nThey walked to the car, arm in arm. As Zack held the car door open for Terri, he smiled at her and said, \"Terri, I...I'm so glad that you came tonight.\" \n\nTerri returned his smile. \"I'm glad I came too. Your family is fantastic. I love your mom, she is so funny.\" \n\nZack chuckled. \"You don't know the half of it.\" \n\nTerri slid into the seat and breathed a sigh of relief. It was over and she only felt murderous a few times that night. All in all, it was positive and hopefully she made a good impression on Zack's family. After all, if all went well, they would be her in-laws. \n\nTerri chuckled before looking over at Zack, who was starting up the car. He was a beautiful, amazing, and wonderful man. She was so lucky to have him and she would have to be a fool to let him go without a fight. Luckily, she was no fool. She was going to hold on to Zack for as long as she could. \n\nZack smiled back at his Buttercup. But, as his eyes raked over her generous breasts and up to her full lips, his smile morphed into one that could only be classified as devilish. Oh, the things he was going to do to his Buttercup when he got her home. \n\n\"Babe, I think you deserve a present for putting up with my family and Amanda.\" \n\nTerri recognized the fire in his eyes as the lust that he always felt for her, tempered with something else. \"A present?\" \n\nHis deep chuckle caused her pussy to clench and become wet. \"Yes, Buttercup. A present...for you...as soon as we get home.\" "
    ],
    "authorname": "angelicsounds",
    "tags": [
        "interracial romance",
        "drama",
        "interracial drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/fantasy-man-ch-08"
}