{
    "title": "Bifrost Ch. 02",
    "pages": [
        "All rights reserved. No portion of this book may be reproduced in any form without permission from the publisher, except as permitted by U.S. copyright law. For permissions contact author through profile. \n\nThank you for the feedback on the previous installation, continued feedback is appreciated. \n\n*****\n\nKirk escorted Aztrit back to her chambers. When they reached her door, they both stood frozen in its shadow. The torches flickering on either side were the only noise permeating the hallway. Suddenly, they couldn't find the words.\n\nShe truly had nothing to say. They had acted on impulse, cultivating the connection between them. It had happened so fast, she hadn't had time to think about how confused she would feel afterwards. But, she knew even if she had been given hours to think about it, she wouldn't have rejected his touch. He was so impressive to her. Since the moment they had met she was stimulated by him, visually, in combat, and now physically. His pale hands making private paths around her brown body was a fantasy that he had made true for her. The callouses from wielding his axe made his touch unbearably pleasurable. Her face was still burning with the afterglow of their playful encounter. The fearless warrior in her was severely lost. She was afraid of what it would mean if she fully accepted him as her lover. She doubted she would be strong enough to pull away, and take him for Valhalla. Aztrit was not one to be shy about indulging in the pleasures of the flesh. Nor was she virginous. But she was finding it hard to maintain her confidence in his presence. A fact that could play to be fatal to her task.\n\n\"Doors do not open by themselves Valkyrie.\" Kirk said quietly behind her. He had watched her grapple with what they had done for several minutes while she toyed with her hands. He couldn't explain why he had needed her so detrimentally in that moment either. It had started exactly when he had seen her, whispering over his men in the great hall. Her hair had been obscuring most of her face, only letting him see her slim, upturned, brown nose and her long fanned eyelashes. He had recognized her out of her Valkyrie Armour, and was convinced she was there to take them. But as she had looked up and he saw the brilliant shade of gold her iris was, he hesitated attacking her. Every moment since, he had tried to harbour his distrust, but he failed every time their eyes connected. He could see the fearlessness in her soul, and she brimmed with intelligence and beauty. He was still awestruck that she continuously gave the breath from her body to help others, no matter how it pained her. He imagined it pained her more to watch others suffer. He had missed her when she was gone. They had met so briefly, but she seeped into his thoughts throughout each day. Seeing Eric hold her hand in his had been infuriating. But deep inside, he was proud to hear from her own lips that Kirk himself was doing particularly well keeping her entertained. He had wanted to kiss her deeply in front of his cousin, just to ensure he knew the Aztrit was available to Kirk, and no one else, even though he had always made an effort to keep his affairs private. \n\n\"Forgive me, Lord Verdulke. Doors are an entirely new concept for me.\" She looked up over her shoulder and lifted her brows, sarcasm dripping from her full lips.\n\n\"Oh, aye? Has the arthritis in your hands kept you from learning?\" He laughed at his own joke, and felt her elbow collide with his ribs. He doubled over in pain and coughed profusely. \n\nShe gasped and apologized repeatedly, \"I'm sorry Kirk, I didn't mean to hit you so hard.\" She placed a hand on his back and bent over to try to apologize to his downturned face. \"I'm so sorry.\" \n\nHe lifted his silver eyes to hers and straightened his back with a smile, \"Can I have a kiss to heal it Valkyrie?\" She had no time to be angry at his deception. He backed her into the closed door and lifted her chin as he laid his lips against hers. \n\nShe didn't fight him as he lifted her. She wrapped her legs around his waist as he pressed her back harder against the sturdy wood. She wasn't used to being so submissive. Away from him, she was a goddess, fighting in gruesome wars, and leading legions of her warrior sisters. But in his arms, she wasn't an immortal, she was a woman drowning in desire. She ran her hands through his hair as she enjoyed the thickness of his lips. She licked his bottom lip and sucked it gently between her teeth. His hard length pressed into her. She threw her head back, giving him access to her neck. He placed kisses on her collarbone and listened to the small noises she made in response. She tightened her hold on his shoulders to let him reach around her to the brass door knob. \n\nTheir lips pressed together again as he carried her over the threshold and closed the door behind him. They kissed hungrily as he made his way over to the bed and laid her in it. He looked at her with her hair fanned across the thick quilt, and her eyes hooded. Her dress had risen and only slightly covered her womanhood. He was eager to have her take everything he could give. But as he thought about how beautiful she was, he slowed his movements to undress himself. Whether or not he wanted to have sex with her was not what was keeping him from devouring her. He didn't want to rush the blessing that would be her in bed with him. He didn't want their relationship to be centered around what they could do for each other physically. He really enjoyed her presence, and her mind. No one had been as willing to challenge him as she had. He put his hands on either side of her and hovered over her face. He focused his steel eyes on her and breathed deeply. \"I can't control myself around you Aztrit.\" He gripped the blanket tighter. \n\nShe sat up and took in the confusion rimming his eyes. She understood. They had been trying to get to know each other throughout the day, but she had missed his intoxicating presence while she had been away. The distance had put the opposite effect on their companionship that she had hoped for. Everytime they asked questions about each other, they ended up being intimate. Her soul resonated with everything he told her. His love for his country, his tales of battle, his loyalty to his clan, and the loneliness that came from leading others. Maybe they were both just eager to have someone who seemed to understand them, before they had even revealed anything to each other. She too had been fighting harder against her emotions today. In hopes of keeping how disappointed Odin would be, in mind. But it was proving to be harder on them both to fight against their attraction. They would have short spurts of intimacy, and then retract, remembering that their relationship was supposed to be a professional one. It was a time for honesty. \n\nShe placed a hand on his chest and felt the gentle beating of his heart underneath his skin. \"I feel different from how I felt three days ago. I'm sorry I disrespected you and your household. I just, needed to breath. To try to understand this odd pull I'm beginning to feel towards you. It's so strong.\" \n\nHe was surprised to hear her say she felt it too. \"It's like a stone in my chest. Whenever I'm around you the weight becomes heavier.\" He touched his forehead to hers and kissed her gently. \"I'm still trying to understand how I got a Valkyrie to join me in bed.\" \n\n\"I have low standards, and a weakness for men who know how to swing an axe.\" He laughed as she joked. \"When you started swinging, I was actually impressed with your power. You can fathom that after so many centuries it takes a great deal to impress me over combat. I was hoping to keep what I was from you, but seeing that I had no weapons and a handsome warrior trying to kill me, I figured you would come to understand what I was. Although I'm positive, you might not have fought me if you had seen my Valkyrie form.\" \n\n\"I saw you on the field at Haverslhab.\" She pulled back as he said this. Humans could not see her form unless she willingly let them. And she never allowed that to happen. \n\n\"What did you see?\" She let him go as she questioned him. Again she was left questioning his lineage. She wondered what else he could see. And if he wasn't pure, it would explain why he was more capable fighting her than other humans had been. \n\nSensing they were going to begin talking instead, he backed away and brought the chair from the desk to the edge of the bed where she sat. \"We were riding away quickly, so I only caught glimpses. But I saw something tall with large black feathered wing stretching from green and gold armour. One second, the bodies were there, the next blue flames engulfed them and they disappeared. I wasn't sure what I saw. Until you came inside the great hall. I saw you praying and I recognized your face from the field. But I wasn't really sure it was you until we fought. From the moment you summoned your blade, I knew you were Valkyrie.\"\n\n\"So you saw someone praying and decided to attack them?\" She said with playfulness to her tone. \n\nHe shrugged and continued, \"Valkyrie aren't exactly something I have experience fighting. If I was wrong, the axe wouldn't have hit you, I aimed it to your left. I guess I was just lucky to be right about my assumptions.\" \n\n\"I was trying to help your men, why would you want to hurt me?\" She felt herself getting defensive. It was the way he made her sound like a beast with no soul.\n\n\"I just didn't know what to expect. You're not exactly a friendly fairytale creature, and you came to my home uninvited the same day you stole the souls of a fraction of my men and set their bodies on fire. What would you have done?'' He knew it was beginning to sound harsh as it crossed from his lips. But he didn't want to lie. \n\nShe scoffed, \"Stole? Every man is an offering to Odin on the field. You all decided to fight willingly and all of your men died honourably. I am not the one who murdered them, so how am I the disgusting creature in this reality of yours?\" \n\n\"I didn't call you a disgusting creature. Don't put words into my mouth that I never spoke.\" He knew she had just been doing what she was made to do, but apart of him was angry seeing his men burn. \n\n\"I treated the men you led, with the utmost respect. The eternal flames of Asgard were a blessing of devotion for their acts of bravery. Never would I forget the value their lives held. I came here to help you, not to be scorned for taking my role to the God's seriously. I am not an unfeeling thing that can't comprehend the importance of life.\" \n\n\"Aztrit I never said-\" \n\n\"You implied that I defiled them. That I was the one who tore them from this world, but I was not the one who took their lives. It's unfair for you to treat me like I did.\" \n\n\"How could I ever have known what you were here for before we got a chance to speak?\" \n\n\"You didn't bother to ask! You attacked me, remember? You never gave me a chance to tell you before you tried to kill me. That's always how it is with you humans. You fight before you even attempt to understand what you're doing. You're never happy unless someone dies from your efforts.\" She couldn't help her shouting. She was feeling more vulnerable and attacked by his words than she had ever been. \"You never care who you hurt along the way. You're greedy, selfish creatures that can't see beyond their feeble lives.\" \n\nHe stood and glared at her. So now she was attacking his character? How could he ever not care about the loss he felt everyday thinking of people who were no longer with him because of pointless wars? \"You could never understand the loss I've felt. Immortal things like you have never cared about us unless we had something to offer. You won't ever be able to appreciate the world around you because you'll outlive it. Some of us have a finite amount of time to correct the mistakes our ancestors made while we try not to make our own.\" \n\nShe slid off the bed and stood returning his icy glare. Who was he to belittle her? Decades from now, he would be nothing more than decaying bones, and she would live on. Why should she waste her time debating whether or not to do what her father wished, if Kirk had already decided she was a beast? \"I should thank you Lord Verdulke, you have no idea how easy you've made this appointment for me. If you want someone to warm your bed, take one of the common whores who serve you. I'll be your healer and nothing more, I'll be the cold withering beast you know me to be and take whoever I feel worthy to serve Odin in Valhalla. And after I'm through, I hope you enjoy your short pointless life.\" She was seething. Why had he pretended he saw her as more than what she did? What was the point of making her feel so connected to him so quickly if he still saw her as a monster? She felt foolish for coming so close to giving herself to him. \n\nKirk balled his fists with anger. He knew she couldn't have been as loving and open as she let on. Underneath her attractive exterior she was still a thief. Exactly as he saw her the very first time, inhuman and beastial. He was glad she was saying these things now. This way he never had to restrain himself around her. He would always remember that she saw him as nothing more than a parasite. \"If your God's still find it necessary to meddle in things they have no business in, you can meet us in Vertan a week and a half from now. But, I truly hope Odin will rethink the involvement of the Valkyrie.\" \n\nShe watched him as he left. He slammed the heavy door behind him not once looking back. She couldn't fathom how she had questioned her loyalty to her father for Kirk. She would do exactly as her father wished when it came time. Never would she question it again. With a gust of light and wind she too left. The fire went out from the force of her exit, leaving the room cold and void of the passion that had given it life. \n\n***\n\nThe morning Kirk was due to begin his travels to Vertan, he awoke far too early. He sat up quickly in his bed and looked around frantically. His only company was the waving fireplace warming the cold stone hearth. He felt the light sheen of sweat on his scarred chest. He lingered over the dip in the middle and passed the skin along where the cut Aztrit had gifted him should have been. His hair hung over his eyes as he lowered his head. He regretted how that night went so deeply. The pain in his chest accompanied with the pull sunken in his body reminded him constantly of his unsavory words. He had thought to apologize later that same night, but when he had re-entered the room, she and the fire, were both gone. Each day he had waited for her to return, knowing all the while she had no reason to. He had told her not to return, that he didn't need her help. He was ashamed with how he treated her. He knew it was the warrior in both of them becoming defensive, instead of the lovers they had quickly become. He didn't expect her to be waiting for him in Vertan, but he was hoping she would be. \n\nAztrit hadn't slept in days. After her argument with Kirk she had returned to her home in Asgard and devoted herself to watching her sisters. She knew her Valkyrie would be able to function independently without her presence, but keeping herself busy was preferable to thinking about the mess she had made with her words. She had felt incredibly foolish when she left. She knew her defensiveness came from a place of insecurity. She wasn't happy only having battle to look forward too. War captivated her everyday, and to have let her warrior execute what had been growing with Lord Verdulke was behaviour she was ashamed of.\n\n\"Aztrit, are you listening?\" A soft voice spoke to her, shaking her from the hold her heart had on her mind. \n\nShe looked to her sister in arms Dahlia. Her Dark hair wisped passionately under her silver helmet. Her face was long and slender, graced with two emerald colored eyes that bore through your soul. She was much taller than her, and Aztrit often wondered if Dahlia would be more fighting to be Odin's daughter than she would. She had tried not to resent how unique she was in Asgard, but it was hard to be looked down on for the nature of her heritage. She was dark, and only half of a god. Dahlia was a pure spirit, not a god, but her purity made it easier for her to be accepted. \n\n\"I'm sorry Dahlia, please continue.\" Aztrit shook her head. Focusing on the matters in Valhalla was proving to be more difficult than she had expected. The walls surrounding it were taking damage every night, and the Valkyries on guard couldn't explain it. So tonight she had stood watch to determine what the cause of the problem was. \n\nDahlia loved Aztrit as a sister and a leader. Never had she been afraid serving under her, and she never expected to be lead by anyone else. The respect all of the Valkyries held for her was the most that they had given any leader, even Odin himself. Aztrit was always focused, staying leagues ahead of any adversity they could come across. But lately, she had been distant and distracted. She took her responsibilities seriously, and her sister was beginning to worry her. She knew she had been visiting Midgard before she returned, but Dahlia could not get her to confide in her what had happened while she was there. \"Your watch is over. I'll take over for you and check on our sisters inside the hall. You should go get some rest, unless you want to talk to me about what happened on Midgard.\" \n\nAztrit listened to the waterfalls falling off of the surface of Valhalla. To be a place so plagued with death, it was one of the most serene places in Asgard. The large white walls surrounding the brimstone hall, and the golden tree atop it stood proudly on the floating plateau. Animals and spirits alike roamed its low green hillsides and bathed in the ponds scattered through the lush green fields. Being here would usually quiet her mind, and help her navigate any problems she had come across. But not even the beauty of her home could sift through the emotional pain that was beginning to rack through her. She had joked at first about the intensity of her attraction to Kirk, but she was learning quickly that ignoring the pull in her stomach was faulty. She had never felt worse, and they had only argued once. Imaging how upset with her he would be if he found out how she had been deceiving him was surely to be leaps and bounds more painful than she was experiencing now. \n\n\"Who is he?\" \n\nAztrit looked up at her beaming friend in shock. \"Excuse me?\" Why had she ever expected Dahlia to leave her alone to her thoughts. If her blade wasn't swinging, her mouth was running. \"Don't do this Dahlia. You know I don't have someone.\" \n\nDahlia dipped her slender feet into the crystal water in the pond they sat next to. She spoke up as the water from the bottomless water fell effortlessly over the side of the world. \"You've been out of it for almost two weeks. The first time you come back with a glow and you smile more than I've seen you smile in eons. And the second time you come home you sulk endlessly and you can't even focus on standing watch. I give you permission to end me if I'm wrong that it's a man.\" \n\n\"Do you want to die now or later?\" Aztrit rolled her eyes and shifted to her casual clothing. \"Leave it alone Dahl.\" \n\n\"You've never hidden things from me. Don't start now Aztrit.\" Dahlia pleaded with her. Even if it didn't make her feel better to talk about it, she could at least confide in her and feel supported. \"He must be quiet the hero if you wont tell me about him.\" \n\n\"How do you know he's a hero?\" Aztrit forced it out not believing her own half lie.\n\n\"Because that's all we favour. We're surrounded by them everyday. We watch them develop on the fields and grow attached to their valour. If he isn't a hero, he wouldn't impress you. All your other affairs have been heroes. But never have I seen you this lost over one.\" ",
        "What was the point of keeping her feelings from Dahlia? Because she knew her sister would tell her that she was wrong for what she had done. She would force Dahlia to be confused over her disloyalty to her father, and pity her falling in love with someone she was supposed to kill. She wouldn't tell her that. \"He could've beaten me in battle Dahlia. You should have seen his form. He's the largest human I've ever seen. And never have I experienced immersive pleasure like he gave to me.\" She had thought about his touch everyday. But she was disappointed he saw her to be a murderer, and nothing else. When she inevitably had to see him again, she knew she would not apologize. Odin still wanted lord Verdulke, and her personal feelings were proving to be just as strong as her loyalty. \n\nDahlia swooned at the description of Aztrit's hero. She seemed so taken with him. She could tell their love was new, and troubled. Before Dahlia could question her further, they both heard rhythmic humming in their heads. The songs of battle were coursing through their veins, letting them know offerings to Valhalla awaited. \n\nAztrit responded to the humming first. She opened her palms and summoned a new Valkyrie. Tihala was new to their sisterhood, and needed the experience of battle more than her other sisters. Tihala kneeled in her armour in front of Aztrit. Her red hair covered her face as she bowed. Her silver helmet hung tightly to her slender head and her staff jutted upwards towards the sky. \"Tihala.\" Aztrit spoke lowly in greeting and lifted the girls brown eyes to her own gold. \"Do not be afraid of the battle you will see. Your focus is the skill of the warriors and nothing else. Remember to keep your form hidden, you would be an unwelcome distraction. Come directly to Dahlia when you're done. Remember your prayers, those men deserve to have their heroism celebrated.\" \n\nTihala said nothing, only giving her nod of understanding. She stretched out her pale black wings and let the wind overtake her. As soon as she left, Aztrit felt continuous ringing in her ears. She looked to Dahlia as she tried to decipher what the voice resounding in her head was saying, but seeing Dahlia look unfazed confirmed she was the only one hearing it. After another listen, she realized it was Kirk. And he was calling her name. \"I have to go Dahlia. If anything happens to the wall again, come find me on Midgard.\" She bade her goodbye and parted. \n\nKirk lifted Eric over his shoulder while his men shouted and fought. The dark forest was proving to be difficult terrain to fight the Elicit warriors that had ambushed them. Eric was the first to be felled by an arrow from the thick tree lines. And they had miles to go before they would reach another clearing. He leaned his cousin against the twisted tree, trying to be mindful of the arrow protruding from his heaving chest. Even in the face of death, Eric looked unafraid. He coughed here and there, but he was showing no signs of fearing the death that was rising like bile in his throat. \n\nEric locked hands with Kirk. He pulled him close and tried to comfort him. He knew he was dying. But he was more disappointed that he couldn't continue the fight that was nearing for Karth than he was that his life was coming to a close. Eric closed his eyes briefly and said a prayer for his brothers. Hoping that they would not come to the same fate. \"Go and fight Kirk, they need your assistance more than I need you to be beside me as I die.\" He didn't want to be selfish with his cousin's presence. The men fighting needed him more than Eric did. \n\n\"You're not going to die Eric. Just stay with me.\" Kirk looked around the trees and into their foliage. He had called twice, where was she? Was she so petty that she wouldn't come when he needed her most? Kirk heard the wind whip behind him. He turned to see her in her disguise. She looked around for a second until her eyes connected with his. He could see her reflect the worry he was displaying. \n\nAztrit hurried to the base of the tree and kneeled next to Kirk. She was upset that he had called after the things he had said to her, but now was not the time to fight with him over it. \"What's happening here?\" She asked as she placed a hand on Eric's confused face. She leaned closer to him and held his green gaze. She sung to him through her eyes, soothing his vibrating soul. It was beginning to split from his body. She felt Tihala land behind her and turned her face to her sister. \"Not this one Tihala, keep scouting. Take only your chosen that die immediately. Come to me when you've finished. No one else.\" \n\nTihala, looked over at the man staring at her. It was her turn to feed into the confusion. She was sure her guards were up. \"I think the human can see me General.\" His silver eyes looked away and back to the man dying against the tree. \n\n\"I know Tihala. Don't fear, you're doing well. Now do as I ask, quickly.\" She turned back to Eric, thankful that his eyes had been closed after she soothed him. She held onto his stiff flesh beside the arrow and pulled it from his heart. Blood seeped from his pale chest and his breathing started to slow. If she didn't heal him soon, she would not be able to bring him back from his place of rest. This was the battle she had sent Tihala to. She gathered that the Grothen warriors had been ambushed on their way to Vertan. Hadn't Kirk realized that it was the perfect place for Elicit to hide in hopes of coming across the caravan? Maybe he hadn't expected them to know when he would be coming. \n\n\"They were waiting for you Kirk. Anyone who's planned an attack could tell you they would be. Why did you continue?\" She shook her head as she began to pray. The trees swayed form the force of the space warping around them. His wound was so deep, and the arrow had been poisoned. Healing Eric was going to take much out of her. \n\nHe eyed her as she swayed. Her throat looked as if it was collapsing in on itself from the energy she was emitting. \"If you cared about this land the way I do, you would know that the dark woods are the only way into Vertan from Karth. Traveling from Bulari and upward would have added weeks to our trip.\" He stood and drew his axe as he heard movement in the trees around them. It was time he joined his men. \"Stay with him until I get back.\" He palmed his axe and gripped his shield as he rushed into the tree line. \n\nAztrit pressed harder into Eric's chest. She could feel his energy slowly coming back. She stopped praying and focused on lifting the toxins from his heart. She gasped for air as she finished. Eric would live. And she was hoping he wouldn't remember how she had appeared before him. She rolled the tension from her neck as the shouting in the distance stopped. She helped Eric onto his side as he breathed deeply, still unconscious. She was not afraid for Kirk's safety. He wasn't fated to die. But she was worried Tihala wouldn't understand Aztrit aiding his men. And saving their souls instead of collecting them for Valhalla. Her suspicions of Kirk were growing. He had seen Tihala just as he had seen her. \n\nTihala landed in front of Aztrit's human form. She towered over her this way, finding it hard to believe her general was the tiny person before her. Nevertheless, she kneeled. \"I have collected 43 men for Valhalla My Lady.\" It was her highest number yet. She had been unsure of who to watch from the trees, but just as Aztrit told her, she knew who was worthy the moment she saw them fight. \n\nAztrit nodded and stood to face her. \"Odin would surely be pleased Tihala.\" She could see the girl was proud of her feat. But she was sad that she seemed to enjoy the display so much. \"You can tell no one that I was here. You may tell them of your victory, but only my father and I know what my business is here on Midgard. Do you understand?\" \n\n\"Of course General. It is my honour to serve the daughter of Odin.\" She bowed deeper and let her body disappear. \n\nAztrit's ears perked up as she heard rustling in the trees around her. She made a movement behind her back and summoned her bow and arrow. She nocked the onyx weapon and pointed towards the tree line behind her. When she saw familiar silver eyes emerge, she dropped the point slowly. Kirk's riding tunic was torn and his neck had a small cut bleeding slightly from the side. They looked on in silence for what seemed like eternity. She was angry, but she was happy to see him. She broke his gaze and began looking after Eric again. \n\nKirk stood silently behind her as she tended to Eric. under different circumstances, perhaps he would've apologised for what transpired. But tonight was beginning to be more intriguing than he had anticipated. He knew the attack was coming, but they had no way of knowing exactly when The Elicit would strike. Now, she had come, and he overhears that not only is she the daughter of Odin, but she had made this about collecting more souls instead of answering his call for help. \"How many of my men did you take for your father, tonight Valkyrie?\" \n\nThis time, when he called her this, she could tell it didn't come from a place of affection. Was he realizing what her placement on Midgard might truly mean? Her heart felt heavy as she realised she might never see that side of Kirk again. \"A thank you would suffice Lord Verdulke. I did just come here to aid you and your men. Eric is only alive because I healed him.\" She adjusted Eric again as his breathing became shallow. She stood and faced him. \"I feel sorry for those around you if you show your thanks by displaying spite.\" \n\n\"Why would I thank you for stealing more lives from people that I care about? And now I've come to find you're Odin's daughter?\" He stepped closer and pulled his brows together in frustration. He knew he should be grateful she healed Eric, but did that make up for the others she stole? What else was she hiding from him?\n\n\"You keep punishing me for things I have no control over. I have never stolen anyone's soul. I usher them to wherever they're destined to go. We celebrate heroes in Valhalla. They drink and sing and live everyday blissfully. I've done nothing but aid you and you treat me like I know nothing but murder! I came when you needed me. What else do you want from me Kirk?\" She came down here as soon as she had heard him calling for her. She had helped him as he had asked, and now he was attacking her? After the things they had said to each other, she still came. She couldn't be angry anymore. She was too overwhelmed with sadness. \n\nKirk's heart clenched as her honey eyes pleaded with him. There was nothing else he could ask from her. He realized that they had both hurt each other, yet he was pushing harder against her than she was him. She didn't expect to be forgiven, she just wanted to be treated as if she had feelings. She looked so beautiful with the moonlight laying across her face. She looked tired. Her dress looked to be made out of crushed red velvet, so dark it looked like blood. It fell off her shoulders, exposing them to the night air. True to style, one brown leg protruded through a slit in the side. She wore matching sandals that laced all the way past her knee. Her hair was still loosely curled and she only wore gold in her ears. \n\nShe watched him as his eyes softened, but still, he said nothing. His pink lips hovering so close to hers, and his chest rising and falling with his breath in front of her, was making her body warm. Just being near him was lifting her spirits. She could feel the pull inside of her pulsating, begging her to act on her feelings. But she would not. She would tell him where she stood, and then it was up to him whether or not he would be open to seeing her as more than he pictured. \"I thought about you everyday Kirk. I thought about how much I wanted to give myself to you, I even made myself comfortable with how fast it happened. I said those things from a place of hurt and I want you to know I didn't mean them. But you hurt me deeply, and I dont think it's fair for you to hate me for something you've convinced yourself that I am. I won't apologize for your misconceptions.\"\n\nHe looked down on her for only a few more seconds before he grunted in dismissal. She stepped out of his way as he brushed past her to aid Eric in standing as he woke. She shook her hopes away and stepped further behind a nearby tree, obscuring their view of her. She felt the air on her hot face and breathed deeply. She closed her eyes and whispered in the wind, \"Sleipnir's blessing.\" She stepped back and opened her eyes. There stood her dark horse in all of her beauty. She was Sleipnir's daughter, proud and strong. Her long black mane was almost lost in the night. Fora leaned her muzzle to Aztrit's face and nudged her neck. She was much bigger than Midgard horses, but she acted much like a puppy around her master. \"It has been long Fora, I'm so sorry.\" Aztrit rubbed her long nose and led her through the trees to where Kirk and his men had gathered. \n\nKirk, eyed her as she climbed her massive black mare. She was a proud rider, her shoulders perfectly square and her back upright. She greeted the men as she rode through them and congratulated their victory. They made swift eye contact as she passed. He felt as though he should have said something, but thinking better of it, he motioned his own steed on. \n\nAs the caravan began to move on, Aztrit and Fora picked up their pace. She could tell her horse had missed stretching her legs on Midgard, the air was rich for her. She held tighter to her reigns as they galloped, she knew they were moving ahead of the caravan, but she felt distance would be beneficial. They couldn't argue anymore if they weren't near each other. \n\nThey didn't stop until midday the next day. They picked a clearing near a lake at the base of the Rasfir mountains. A geographical marker that let them know they were half a days ride from Vertan. Aztrit dismounted Fora and led her to the watering hole. Many of the men gathered on the opposite side of the pond to break and rest before they continued. No one really acknowledged her presence, but they did oogle at Fora's size. Kirk and Eric arrived next, dismounting their horses and resting them near their men. She watched as Kirk and Eric argued fiercely while unloading their horses. They kept casting glances over at her, until Eric threw up his hands in resignation and began walking over towards her. She leaned closer to Fora and whispered up to her, \"You'll like him, he's very charismatic.\" Eric's color looked better than it did last night. His long blonde hair was tied back again and his shirt attached itself closely to his well worked chest. If she wasn't so picky, she would have no qualms taking him as a lover. But unfortunately her heart was tied up with the sulking figure across the pond. \n\n\"Good afternoon Aztrit.\" He bowed swiftly and threw a glance back at Kirk. \"We didn't get a chance to speak after you joined us last night. Kirk tells me you helped our injured.\" \n\n\"I did. Although I'm not sure gratitude is a trait your lord possesses.\" She huffed and rolled her eyes at his stare. \n\n\"Aye, Kirk is unpleasant when it comes to giving thanks. Our caretakers used to make him repeat his thanks to get him more acclimated, but that only taught him how to get things for himself.'' Eric smiled as she laughed at his words. He drank her in while she was distracted with her horse. Her body was tantalizing in the velvet she draped herself in and he couldn't help picturing her beneath him with those velvet strings laced up to her thighs. He stepped closer to her back and reached out to touch Fora's muzzle. \"Who's this?\" He asked before Fora neighed and bared her teeth to him, making him back up. \n\nAztrit laughed at Fora's reaction. Women no matter the species always knew when to aid each other from unwanted attention. Aztrit stroked her to calm her down again. \"This is Fora, and she quiet picky with who she lets touch her.\" \n\n\"She's very big. Her gallop is wonderful as well. Her parents must have been breathtaking.\" \n\nAztrit nodded in agreement. He had no idea. Suddenly Fora's nose rose in the air and she broke from her hold. She called out to her, but Fora had already broken into a gallop and circled to the otherside of the lake. She slowed quickly in front of Kirk who had been feeding his own horse. Aztrit and Eric watched in astonishment as Fora nudged Kirk for some of the food he had in his palm. She even let him stroke her mane as she ate out of his hand. Aztrit ran quickly to where her horse had gone to rest. As his eyes focused on her she nodded to him, \"I apologize Lord Verdulke, Fora is not usually so forward.\" \n\nHe nodded back to her. \"Fora.\" He said as he continued to stroke the war horse he had turned into a docile pet. \"She is a beauty, Valkyrie. You ride her well.\" He looked at Odin's daughter shooting angry faces to her mare. Everything about the woman in front of him was attractive. Her wind blown tresses, her love for her animal, and most of all her composure. While she was fierce and often combative, she had a docile element to her. But only if you touched her just right. Aztrit and Fora had more in common then they both knew. \"Aztrit, I... had time to think last night.\" \n\nShe looked back to him and tried to hide her look of hopefulness. \"Did you?\" Fora finished her food and placed a heavy kiss on Kirk, making him smile while he wiped his face with his sleeve. \n\n\"Aye, I did.\" He said through his upturned lips. \n\nShe could die everytime he smiled as he looked into her eyes. His silver irises lit up like the stars in the night sky. She felt her chest becoming heavy and her legs began to ache. \"What did you think about My Lord?\" \n\nHe knew when she said this to him, she was mocking the power he had. But he didn't mind. It helped him to imagine how it would sound passing from her parted lips as she rode him. \"I am glad you decided to ride with us. Who knew a lady of your age could sit on a horse so well?\" \n\nShe laughed and turned back to her horse. She knew that was all the apology she would get, but she wasn't bothered by it. Truthfully, she was beginning to wish they could pretend it had never happened. \"Kirk,\" She tried her best to convey her own apology through her eyes. \"I'm happy I came along as well.\" \n\n***\n\nIt was nightfall when they pressed on. This time Aztrit hung back as they rode, accompanying Kirk at the end of their line, they were devoted to learning more about each other's lives. \n\n\"So, Odin is your father?\" He wasn't sure it was true when he had heard it from the other Valkyrie. Aztrit looked nothing like how Odin was described. \n\n\"There's absolutely no resemblance if that's what you're curious about. I got my looks from my mother, although I never knew her. I was told she died giving birth to me. Bearing a child by a God was too much for her body.\" She wasn't sad saying it, She had never known her mother. But she did feel a sense of longing for her. \"What about your parents?\"\n\nKirk thought about his answer before he spoke. \"My father raised me alone. My mother was unfit for parenting.\" \n\n\"I'm sorry to hear that. Although Eric told me you weren't prone to seeking attention when you were young.\" \n\n\"Aye? And what else did Eric tell you about me?\" He smiled and watched her body shift as she rode.\n\n\"That even then you didn't respect authority. Something along the lines of, you taught yourself to get whatever you wanted without asking for it.\" She flashed him a grin as she said the last part, hoping it would spark desire in him.\n\nHe returned her sultry words. \"That is something I tend to do. I don't like to leave pretty things unclaimed. I'm very serious about taking what I want.\" \n\nShe mimicked his words, \"Oh, aye?\" She was beginning to wish desperately that they would arrive soon. This time, when they began to be intimate, she wouldn't ruin it with her words. She needed to see if he would be just as passionate and dominating in bed. If their time in the garden was any evidence, she knew it would be euphoric. ",
        "\"Aye Valkyrie.\" He needed to distract himself quickly. He could only think about holding her by her hips and driving into her tight heat. He had thought about how she felt in the garden, while she was away. It would be much sweeter to bury his cock in her instead of his fingers. He had been so bitter while she was gone, even the air felt cleaner while she was near. He heard screeching and looked up into the night sky. Geese were beginning to pass overhead. \"How good are you with a bow and arrow?\" \n\nShe looked at what was in his line of sight and smiled. \"Much better than you could ever be.\" She nocked an arrow and let it fly. The first soared and hit the goose directly above him. The next three happened quickly as she nocked and let go in a rapid fire motion. \n\nKirk called for the caravan to halt and pulled a bow and arrows from the side of his horse. He was impressed with her aim, and she was quick. But he knew he could do better. He nocked four arrows and aimed them high. As he took a deep breath, he released and watched as they arched in the air and hit four targets. He got off his horse and retrieved all eight geese, tied them up and got back on. \"I should've warned you that I was the superior shot, Aztrit.\" \n\nShe returned his smile and moved Fora on, \"I was moving when I hit my targets. And let's not forget who's the superior warrior. Unless you want another gash.\" \n\n\"That's only if I let you get close to me again. But if you promise to heal me the way you did the first time, I accept.\" Before she could respond he rode to the front and out of sight. \n\nNot long after, they rode into another clearing. She looked around, not seeing Kirk, She dismounted and pulled soap from her satchel. She could tell they were only an hour outside of Vertan, and she didn't want to meet the king dirty from riding for two days. She walked back the way they had come for a couple of minutes. She had spotted a pond where she could bath in private. As the sun came through the mountains to the east, she recognized where she was. It was the pond of the rising sun. Every morning as the mist would roll off the water and into the sparse tree line, the sun would reflect off the water like a mirror, making it look as if the sun was emerging from the water line instead of the Horizon. The pink and red hues danced across the body of water and reflected luxuriously into the sky. \n\nShe stepped out of her dress and placed her feet into the warm water. The springs form the mountain filled the tub halfway. The warmth was welcoming. After she had washed herself She waded to the deeper side of the pond and swam to the edge of the grass. She held onto the long plants and let her body float gently upright. She closed her eyes and relished the warm sun on her back. She thought about their short ride. She hadn't expected him to open back up to her,but she knew she had Fora to thank for it. No one could be angry around such beautiful animals. She was glad they were giving each other another chance, the pull inside her rejoiced when he smiled at her. She couldn't wait to feel his touch again when they got to Vertan. She knew, they probably wouldn't share a bed. But she could only hope they would have a chance before the war became more serious. \n\nShe hadn't realized how deep in thought she was until familiar hands gripped her waist and pulled her close. Her heart stopped beating in her chest. He pressed her further into the ring of the pond and wrapped his arms around her body. He leaned down and whispered in her ear, \"You shouldn't bath so openly Valkyrie.\" His words made her spine tingle. He was just as naked as she was, but he could touch the bottom of the pond. \n\n\"Or maybe I should find a better spot where perverse men won't find me.\" She heard him chuckle and blow his warm breath in her ear. He ran his hand up her front and palmed one of her breasts, just as he had in the garden. He gave it a gentle squeeze as he pressed his stiff member into her rear. She hadn't expected him to be here,but her body was excited that he was. She had longed for him to touch her again.\n\n\"I've thought so much about you Aztrit.\" The weight in his chest was getting heavier every second, he didn't know how much longer he could stand not being inside of her. \n\nShe turned to face him and opened her legs, and wrapped them around his waist so he could nestle in between her thighs. The sun illuminated the water dripping from his dark hair onto his skin. She placed her hands on his scarred chest and ran them over a wound going vertically down his torso. She wished she could have been there to heal every injury. He shivered under her touch and pressed himself harder against her. His eyes openly displayed his desire for her. He dipped his head to kiss her wet lips. As they shared their pressure, he pried her lips open with his tongue. She enjoyed letting him lead, never had she given someone else control over her own pleasure. \n\nShe took one hand and wrapped it around his length as he tasted her mouth. He groaned harshly against her lips. He was so thick she couldn't reach her hand all the way around him. She rubbed his swollen head gently and gave extra attention to the underneath, savouring his ridges. She followed by pumping him in full, slow motions. He held onto the ridge and held up her body with his own. She continued stroking him as he began kissing her neck. His tongue against her collarbone made her squirm against him. She had wanted to enjoy his body before they dove in, but she didn't know if she could keep herself from him any longer. \n\nThe water from his hair rolled down her stiff nipples in the open mountain air. He took one into his mouth and rolled it with his tongue. He had missed her delicious peaks. They had been taunting him in his dreams. Her hands dug into his back as she moaned from the feel of his mouth. He was too excited. If he heard her moan again, he knew he might lose his composure and take her before he could get her to beg for it. But as she rolled her hips harder against him she cried out, \"Please Kirk, I can't wait anymore.\" \n\nHe smiled against her and lifted to look into her eyes. \"You're ready to give yourself to me?\" \n\nHis smile spurred her on more. His beautiful smirk made her ache deeply. \"Please, take me Kirk.\" \n\nHe didn't wait for her to finish her plea. Her amber eyes begging him was enough to convince him. He positioned himself at her slick entrance and pushed in. They moaned in unison as he bottomed out. He held her hips still and began thrusting slowly inside of her. \n\nShe bit her lip trying to keep herself quiet. He was stretching her and the pain was feeling more pleasurable than she had imagined. She opened her hips wider and accepted more of him. His warm, wet body pressed against her while he thrusted was making her body sing. Each stroke made her feel as if he was savouring how tightly her walls gripped him. She looked up at his face to find him focused on her. He deepened his strokes, loving the faces she made as she panted. She was close to coming to him already. She could feel it building in her thighs. But she prayed she could hold out, she wanted to feel this euphoria for as long as she could. \"Kirk, please. Don't let me come.\" She held on tighter feeling it build inside her. He pulled out quickly as she requested. If she came around him, he would surely lose himself right with her. \n\nHe spun her around until her back was against his and lifted her leg in the warm water. He placed himself inside her again. He stilled himself. She was even tighter than before this way. Her wet core was already lapping at his thickness for his cream. \"Kirk!\" She cried out as he entered, he was thicker from this angle. This time he began fucking her fast, enjoying the way her ass bounced against his hips. He suckled her neck as he laid claim to her body, unable to slow himself from enjoying the sweet area between her thighs. He had finally gotten to take his Valkyrie. His fierce warrior goddess was begging for him now, letting him know how he dominated her body. \n\nHis cock was so hard it hurt entering her. She was much better than he had imagined, and the satisfaction he felt from his aching chest added to the pleasure he was receiving from her. He had wanted to enjoy their first time, but he could only feel the raging need he had for her. \n\nShe held onto the grass as he pounded into her. He was hitting right where she couldn't stand it. She could feel her pleasure building again. The water added to her excitement, enveloping her body as gentle waves hit her from their love making. He reached up and grasped the ends of her wet curls, forcing her to take him deeper. Her eyes bore tears as she screamed from his efforts. Her thighs were on fire as she came to him. She couldn't stop her cries. Her body felt like it was exploding around him, and every thrust he gave her as she came prolonged her orgasm. She sung his name in a long low note and let her body ride the waves hitting her deeply. The pull in her stomach fluttered away as she came down. Nothing could ever feel as good as what he had done to her. \n\nHe bellowed as she gripped and suckled him, the electricity he felt from her wet snatch was more than he had ever hoped for her. He thrust quickly a few more times as his name passed her lips for the final time, and emptied himself inside of her. He held onto her body tightly as he leaned on her. They both breathed heavily pressed together as they basked in the pleasure they had received. He kissed her shoulders and took her earlobe in between his teeth. \"My beautiful Valkyrie.\" He whispered to her as he removed himself. He turned her face to him and kissed her swollen lips. The bliss between them was unlike any peacefulness they had ever known. They sat this way, trading kisses for much longer, not willing to end the moment they had finally consummated their affections."
    ],
    "authorname": "Irian",
    "tags": [
        "black woman",
        "white man",
        "mythology",
        "interracial novella",
        "interracial",
        "love",
        "romance",
        "romantic"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/bifrost-ch-02"
}