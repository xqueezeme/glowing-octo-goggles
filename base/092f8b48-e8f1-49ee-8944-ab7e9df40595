{
    "title": "The Shack: An Unstoppable Man",
    "pages": [
        "This is one of the \"Tales from the Shack.\" It is in LW in order to keep the series together, but in the case of \"Needles & Delaney\" there is a very strong LW element to it anyway. We really appreciate the Admin allowing us to keep these tales together in the same category. This is the fourth in the \"Needles and Delaney\" series, and while it pretty much stands on its own, I strongly recommend reading \"An Angry Man,\" \"An Unreasonable Man\" and \"An Implacable Man\" if you hadn't already read them, I think they are lot more fun that way. Thanks to Chasten, SleeperyJim, and Bebop03 for the beta reads and editing. The assistance they provided was absolutely invaluable, not just in grammar corrections, though those were, as usual, rampant, but in plot points and other critical aspects. There are others who prefer not to be named; you know who you are; you are very much appreciated. This is the fiftieth story we've posted here - and it seems appropriate to make it a Needles & Delaney story.\n\nThe Shack: An Unstoppable Man\n\n*****\n\nUnexpected\n\n*****\n\n\"No Fucking Way!\"\n\nDelaney glared, eyes flashing, hands curled into claws. \n\nThe two suit-clad lawyers looked nervously towards the door to the conference room, wondering if they could reach it in time. I suspected the secretary in the outer office had her hand on the security alarm. \n\nNot a bad idea, all in all. \n\nI carefully put my hand in front of Delaney while Sheree edged closer to her on the other side.\n\n\"Miss Dawes...\" I wasn't sure just what the hell the shorter lawyer thought he could say at that moment that might be a good idea, but I was sure the effect was going to be like throwing a can of gasoline on a bonfire. \n\nApparently, so did Sheree. She cut him off with a wave of her hand. \"Mr. Holden, I'm thinkin' y'all might want to give us a moment alone here.\"\n\nHe looked like he wanted to say more, but one more glance at Delaney was enough to convince him otherwise, and he headed out of the conference room with his partner in tow.\n\nDelaney looked back and forth between us. \"I don't want it. Any of it. Tell them to take it back.\" She almost snarled it.\n\nTara looked up from the stack of papers. \"You can't make that decision right now.\"\n\n\"Bullshit. I've made up my mind. I don't fucking want it.\" \n\nHolding up a page, Tara shook her head. \"No, I mean legally, you don't get to decide it until you're thirty-five.\"\n\nI looked at her. \"What?\"\n\n\"The money is in a trust, and it is going to be held there for the next twenty years. It isn't actually yours to make a decision about until your thirty-fifth birthday.\"\n\nSheree tilted her head at Tara. \"That's kind of odd.\"\n\n\"It's more common than you think. Some people do it to prevent their kids from blowing through their fortune before they're mature enough to handle it.\" \n\n\"I can see that. Half them celebrity kids and heiresses in the news end up in rehab over and over before they're even twenty. Or worse.\" Sheree nodded thoughtfully. \"Guess there's somethin' to learn stocking all those celebrity gossip magazines after all.\"\n\nDelaney gripped the table edge, trying to make herself calm down. \"I don't care. I don't want it. I saw what it did to Calloway, and the kids at the school Mother made me go to. Fuck that. It turned them into monsters. It did the same thing to Mother.\" She spit that last with more than a little venom.\n\nTara gave a sad sigh, and Sheree touched Delaney's hand gently. \"It won't do that to you. I can tell.\"\n\nFace softening a fraction, Delaney looked at her. \"I don't want to take the chance. I'll work for my money. They can give all that money to a charity. We don't even know how much money it is. I won't miss it.\"\n\nThe exact amount of money was hard to figure out, since the will only listed various accounts, and those were under the control of the trust. But it might be almost a million dollars.\n\n\"They can't do anything with it except invest it, and even then, there are all kinds of stipulations designed to protect the trust. Calloway understood money.\"\n\n\"Why the hell would he do this?\"\n\nTara shook her head. \"There's no real explanation, just a will naming Delaney and the usual contingencies. There are probably a half dozen others, but those look like the normal stuff. The trust will pay out for any educational opportunities she wants to pursue and includes what amounts to the best gold-plated health insurance policy I've ever seen. No deductible, no cap and it covers everything. Including dental.\" \n\nSheree shook her head. \"There has to be a reason.\"\n\nHolden stuck his head back in the room, then came in cautiously. \"I have one more item; it's a card to be handed to Miss Dawes directly.\"\n\nDelaney stuck her hand out in annoyance, then looked at the note card he'd given her. Shaking her head, she handed it to me.\n\nAn expensive linen note card with her name on the outside in very fancy script. On the inside was one word. A name.\n\n\"Darwin.\" I pushed it over to Sheree, then looked at Delaney. \"Definitely Calloway.\"\n\nWhen Delaney had asked Calloway why he'd tried to kill her, he'd insisted that it had been about survival of the fittest. Darwin. The man had tried to kill her because he thought that she might be his granddaughter, and he didn't believe she was worthy of his name. Delaney was, to say the least, a bit offended by that. Not so much the attempted murder, I think she was starting to get used to that, but because Calloway and his son both decided she wasn't \"good enough.\" The same reason Charlotte's now-deceased husband had tried to have her killed. She'd outlived all three of them, along with several others who'd gotten caught up in their plans, so \"good enough\" was pretty damn arguable at this point. \n\nApparently, Calloway had decided that the argument had ended in Delaney's favor.\n\n*****\n\nWe walked out of the law office into the sunlight, Delaney trudging reluctantly toward the car, head down. I wasn't quite sure what she was grumbling, but I was pretty sure it wasn't a fond eulogy for Calloway. \n\nThis meeting hadn't hit us completely out of the blue. We hadn't expected to be directly impacted, but Sheree had seen Calloway's death in an internet society column. She'd started reading the articles to try to keep an eye on Charlotte. \n\nCharli had been acting...odd. Tara and Tiffany had noticed that Charlotte was suddenly involving herself in a whirlwind of social activities, everything from attending every imaginable charity event to thousand-dollar-a-plate political fundraisers \u2014 for both parties.\n\nCharlotte had started pressuring Tiffany and Tara to bring Delaney with them for their weekly \"tea\" at the country club. Delaney was, to put it as delicately as she could, \"Not fucking interested.\" She pointed out that she could get a large tea at McDonald's for a dollar pretty much any time she wanted and not have to deal with Charlotte.\n\nIf it had been anyone else, I might have thought trying to meet with Delaney was an attempt at reconciliation, but since it was Charlotte, I had to assume it was some kind of underhanded scheme. \n\nCalloway's passing was something of a relief. We hadn't been sure if the asshole would try something in revenge for his son's death. When we started getting notices from his law firm requesting Delaney and her guardians meet with their representatives to determine the disposition of \"substantial assets,\" it had caught us off balance. \n\nWe'd managed to put it off while Delaney was in \"Summer Camp\" - six weeks in Texas this time. She'd come back in even better spirits than the last time. She'd never been good with people and had trouble making friends, but it seemed Mac and Tess were somehow different. They'd bonded tightly while camping, racing everything from trucks to motorcycles and spending time on shooting ranges. \n\nStill, when Delaney had come back, we'd had to agree to a meeting. On the bright side, it sounded like there was at least some time before Delaney would have to deal with it.\n\nI figured we could head home. There'd been enough surprises for the day.\n\n*****\n\n\"Pregnant?\"\n\n\"Pregnant.\" My daughter, Tiffany, smiled weakly, holding her fianc\u00e9's hand. Eric looked more than a bit uncomfortable.\n\nDelaney looked at her half-sister guardedly. \"Are you sure?\"\n\n\"I'm sure.\" Tiffany nodded seriously. Given that she was an ER physician, I didn't figure she was making a mistake. Eric was a doctor as well, so I had a pretty good feeling they had a handle on the situation. He shifted a little uneasily.\n\nSheree had Tiffany wrapped in a hug before I could finish processing everything. \"Congratulations! You are going to be an amazing mom.\"\n\nTiffany nodded, obviously relieved that someone immediately saw it as good news. \"We were already planning to have kids anyway, so we're just moving the timeline up a little.\"\n\nDelaney followed Sheree's lead and went in for a hug as soon as she could. \"This is awesome!\"\n\n\"Wow.\" I reached out and held her hand, trying my best just to smile and not burst out laughing. \"That really is great news.\"\n\nTiffany eyed me warily. \"Are you sure?\"\n\n\"Oh yeah. I am.\" I had to look down to avoid cracking up.\n\nSheree studied them with narrowed eyes. \"That's not all though, is it?\"\n\nTiffany shook her head. \"I'm glad you weren't around when I was a teenager; I'd never have gotten away with anything.\"\n\nSheree just gave her a saintly smile and arched one eyebrow.\n\nTiffany took a deep breath. \"We're getting married. As soon as possible. I don't want to waddle up the aisle. We'll elope if we have to.\"\n\nI shook my head. \"No, you tell us what and how, we'll make it happen.\"\n\nWith a tear running down one cheek, Tiffany smiled from ear to ear. \"This was easier than I thought.\" Her face dropped. \"Now I have to tell Mom.\"\n\nI swear Sheree started glowing. \"You told us first.\"\n\nShe nodded. \"Well, Tara kind of knew, but she doesn't count.\"\n\nI chuckled. \"Well, if Charlotte gives you any shit, you remind her that you and Tara were awful big for seven-month babies.\"\n\nTiffany laughed. \"I was wondering about that. I can read birth certificates and marriage licenses too.\"\n\nEric leaned towards me. \"Mr Dawes, I, um...\"\n\nI cut him off with a hand wave. \"Don't apologize. This is great news, not bad news.\"\n\nDelaney smirked. \"Dibs on babysitting.\"\n\n\"Thank you; I'm sure that will help a lot.\" Eric said it earnestly, apparently blissfully unaware that leaving a baby in Delaney's charge would be roughly the same as letting a completely feral overprotective wolfpack do it. Although wolves were more sociable. The baby would be fine, but the countryside might never recover.\n\nTiffany, however, was a bit more familiar with Delaney. She looked at her intently. \"As long as you don't do anything crazy.\"\n\n\"Crazy?\" Delaney gave her best innocent look, which wasn't all that convincing at the best of times. \"I'll teach the baby to walk and talk and drive; we'll go get tacos and...\"\n\nTiffany shook her head. \"Let's wait a couple years on the driving and taco stuff, okay?\"\n\nDelaney shrugged, still trying \u2014 and failing \u2014 to look innocent.\n\nWe talked for another half hour before they headed out.\n\nAs they pulled away from the cabin, Sheree watched me out of the corner of her eye. \"Les?\"\n\n\"Yes?\"\n\n\"I'm glad you're happy about the baby. I can see it, but...?\" She studied me more. \"Why're you grinnin' like a fool?\"\n\n\"Tiffany's having a baby.\" I stifled a snicker.\n\n\"Yeah, I kinda got the news there.\" She eyed me with suspicion.\n\n\"That's a grandbaby.\"\n\n\"I know that...Oh, Dear God.\"\n\n\"How do you think Grandma-ma Charlotte is going to feel about that?\" I doubled over laughing until tears were coming out of my eyes.\n\n\"Lester Dawes!\"\n\nIt would have been a lot more convincing if Sheree hadn't started laughing too.\n\n*****\n\nJust Another Day\n\n*****\n\n\"Y'all open?\" \n\nI finished taking the lug off the wheel and looked over at the salvage yard gate where a tall, awkwardly lanky man stood. He tugged his old frayed Army field jacket a little straighter. It was faded to the point of almost turning grey. \"Yeah. What can I do for you?\"\n\nHe rubbed the grey-shot stubble along his jaw. \"I'm wonderin' if you could let me pick and pull some parts. A guy I know restores cars, and he'll pay me to hunt some stuff down for him. I pay ya for the parts; he pays me for parts and time.\"\n\n\"Not a lot of money in that.\"\n\n\"It's enough. I got my VA disability, and this just gets me a little extra beer money under the table.\" He pulled a couple of tattered pieces of loose-leaf paper covered with scrawled lists of parts from a jacket pocket.\n\n\"Come on in. I have to get you a waiver to sign. We don't really do pick and pull, but what the hell.\"\n\nHe limped through the gate, his left leg dragging oddly. \"Thanks. I appreciate it.\"\n\n\"When were you in?\"\n\n\"Been out almost fifteen years. I was an Eighty-Eight Mike in the Army. A truck driver.\" He gestured at his left leg. \"Hit a wash out and rolled it. That was all she wrote.\" He grinned ruefully. \"Shit happens.\"\n\n\"Yeah, it does. I was a medic.\"\n\n\"Really? Thought 'bout doin' that, but my test scores weren't high enough.\"\n\nWe went up into the trailer office, and I managed to find a pick and pull waiver for him to sign. Tara had dropped by a couple months ago, seen my piles of paperwork, given me a scowl that could have been fatal to small animals, and promptly made a project of organizing them to death. She'd also printed off stacks of legal forms for everything from hazardous waste to environmental impact statements to safety waivers for visitors. Delaney had found the whole process hilarious right up until Tara had shifted over to her homeschool desk and done the same thing.\n\nWe'd spent the better part of the last month scrambling to figure out where Tara had put everything. Which, embarrassingly, nearly always turned out to be a file folder clearly marked with whatever we were looking for.\n\nHe scrawled his name and handed it back to me. I glanced at it. \"William Aleshire?\"\n\n\"That's me; I just go by Billy though, Doc.\" I half-smiled at the familiar military nickname for a medic.\n\nDelaney walked up cautiously, a tire iron balanced on one skinny shoulder. \"What's up?\"\n\nBilly snorted. Then laughed out loud with one of those snorting laughs you can't help comparing to a donkey. \n\n\"What's so fucking funny?\" Delaney scowled at him.\n\n\"Sorry, you said, 'What's up' to Doc here. You know, 'What's up, Doc?' Like Bugs Bunny always says.\"\n\nDelaney looked at me. \"A concussion. You're looking for a medical form because he gave himself a concussion, aren't you?\"\n\nBilly shook his head. \"Damn, she's funny.\"\n\nRolling her eyes, Delaney shifted her attention to me. \"I got the set of wheels off that '61 Catalina, but it only had three caps. They're stacked and ready to go.\"\n\n\"You got any '91 Accords out there?\" Billy looked right at Delaney.\n\nShe nodded. \"Why?\"\n\n\"I'm fixin' to pull some parts for a guy.\"\n\n\"Seriously? Jesus, a full fucking tank of gas doubles the value of those things.\" Delaney's face twisted in distaste.\n\nBill looked over at me, and I shrugged. \"She's got a point. They're not bad cars, but they aren't worth much. One of the most common cars ever made.\"\n\n\"Well, ol' boy wants some parts for them, so they're worth something to me. Money's money, ya know? I think he's building street racers, some kinda nostalgia thing.\"\n\n\"Fair enough.\" I pointed back to the stacks. \"Try the third row, should be a couple on level ground about halfway down.\"\n\n\"There's four there, right in a row. One is blue; you can't miss it.\" Delaney pulled a candy bar out of one of her coverall pockets and took a bite. \"You bring tools?\"\n\nBilly gave a goofy gap-tooth grin. \"Got a whole trunk full of them.\"\n\n\"Good. I don't loan my tools.\" She popped open the toolbox on the back of the rollback.\n\n\"Spoken like a real mechanic.\" Billy nodded sagely.\n\nI looked at the time. \"We close at five sharp today. So be done by 4:30.\"\n\n\"No problem, Doc. That's a good hour. I'm just scoutin' today. Don't want to mess up family time.\"\n\nDelaney grunted as she pulled out a breaker bar. \"Weird family time. We help out at the free clinic.\"\n\n\"Still doing the Doc thing, huh?\" \n\nI nodded. \"Just helping out a little.\"\n\nHonestly, Sheree convincing me to help the clinic had turned out to be more than a little cathartic, and Delaney was always ready to hop into her black skull-and-crossbones-covered scrubs to help. Tiffany had found a way to make Delaney a formally listed volunteer in the hospital network. She was surprised when Delaney promptly handed over her CPR card and First Aid certification. Kurt and Katie had arranged for a rather interesting array of training at the \"Summer Camp\" in Texas; the girls seemed to have certifications in everything from junior marksmanship to weather spotting. \n\nBilly looked over at Delaney. \"You don't like it?\"\n\n\"I didn't say that. It's kinda cool.\" She suddenly grinned. \"Last week, this homeless guy had a massive infection in his arm, and we opened it up. It went off like a volcano. Spewed shit everywhere. It was nasty.\"\n\n\"You get to help do that?\" \n\nI shrugged. \"I think she's supposed to just help with admin stuff and some minor cleaning, but we're always shorthanded, and she sucks at typing.\"\n\nDelaney stuck her tongue out at me. \n\n\"We just have to ask the patients if it's okay if she helps. Never been a problem.\"\n\nHe gave that same goofy grin. \"Well, yer keepin' yer hand in and havin' some excitement, anyway.\"\n\nI shrugged. \"Mostly sore throats, a sprained ankle or two and maybe on a really exciting night, a broken finger.\"\n\n*****\n\nFour Hours Later\n\n*****\n\n\"We're out!\"\n\nI didn't bother to argue that. Pamela, the LPN at the clinic, accounted for every cotton swab, alcohol wipe and paper towel. If there had been another dose of naloxone in the clinic, she'd have known, which left us short by... I watched a guy drag another strung-out girl through the door, then glanced at the bodies draped over every flat surface... short by way too many.\n\nPamela held her phone up. \"9-1-1 lines are still down, and all the sheriff and fire department desk phones are busy.\"\n\nOne of the first things you learn in the Army is that nothing ever goes wrong alone. There is nearly always a string of failures lined up to make things worse. No police, no ambulances, out of naloxone, and running out of time, with overdoses still pouring through the door. \"Delaney!\"\n\nShe looked up from where she'd just finished dragging another overdose case, a guy with stringy hair and a face tattoo, and rolling him on to his side; several months of hauling tires let her make it look easy. \n\n\"We need more Narcan. Everything we can get. Sheriff's office has a locker full; they ordered them through us. Take Sally. Get them to send police and EMS here. We need all the help we can get.\"\n\nI'd barely finished the sentence before she snagged my keys to my bright yellow '79 Mustang Cobra, aka \"Sally,\" off the desk and was hopping over the bodies strewn on the floor, then sliding sideways through the door to avoid yet another incoming overdose case being carried in.\n\nKeeping patients alive for the next twenty minutes took all the attention and focus I had, but I was certain Delaney would get what we needed if it was at all possible. \n\nOf course, somewhere in the back of my head, I knew there would be consequences for letting Delaney completely off the leash like that.\n\nAbout an eternity later, when the front door and windows of the clinic lit up with police lights, and the hoarse call of sirens blasts filled the air, instead of relief, the word \"consequences\" jumped to the front of my mind.\n\nDelaney slammed wide-eyed through the front door at full speed, dragging a black tactical equipment bag and looking over her shoulder.",
        "She thrust the bag at Pamela. \"Take it! Quick!\"\n\nPamela staggered back with the bag, and that word - \"consequences\" - lit up in huge neon letters as Delaney turned back to the door, dropped to her knees and clasped her hands behind her head.\n\nI figured that had to a bad fucking sign if there ever was one.\n\nTwo state troopers burst through the door, guns drawn. They brought up short as they saw their prey waiting docilely. Then, to their credit, both officers froze and slowly lowered their weapons as they realized they'd walked into a scene from a zombie apocalypse.\n\n\"Do you have Narcan training?\" It'd been a long time, but I barked it out in that special tone senior NCOs in militaries all over the world adopt. Nobody ever formally trains you on it, but every senior NCO figures it out.\n\nThe smaller trooper straightened up at the tone. Probably a former Soldier or Marine; he was young enough for it to be pretty recent. \"Yes, sir.\"\n\n\"Then start helping. Pamela, point cases out in triage order. We need to handle this and get them shipped off to County ASAP before the Narcan wears off on the first few cases, or we're going to have a shitload of dead bodies on our hands.\" \n\nI looked at my youthful ward, who was carefully keeping her face as neutral as possible. \"Delaney, I don't think they're going to shoot you right now. Get a couple doses and get over here. Maybe they can find time to shoot you later.\"\n\nDelaney stood up slowly and warily, but as the troopers holstered their weapons, she relaxed. The smaller trooper started calling for reinforcements over his radio.\n\nTwo more troopers and three deputies showed up within a few minutes, and then the ambulances started rolling in. It still took almost an hour and a half to get everything under complete control and see the last of the patients loaded into an ambulance.\n\nI stood in front of the clinic, watching the last of the ambulances leave and looked over the row of police cars. Delaney walked tiredly out and stood next to me. \"That was cool.\"\n\n\"We did some good today. Maybe we balanced out some karma.\"\n\nShe smiled in a very self-satisfied way, and we stood there for a moment.\n\nThere was something missing. \"Delaney?\"\n\n\"Yeah?\"\n\n\"Where's my car?\" I didn't even look down at her. \n\n\"Oh. Yeah.\" Her voice deflated just a bit.\n\n\"Yeah, what?\"\n\n\"It's at the sheriff's.\"\n\n\"Does this have anything to do with why I see three deputies but four cruisers?\"\n\n\"Sally doesn't have lights and a siren.\" She made it sound completely reasonable.\n\n\"I know that.\"\n\n\"And I kinda figured they'd already have a BOLO out on Sally after I blew through the state trooper's speed trap on the way to the department.\" \n\n\"So your answer was to steal a cruiser.\"\n\nShe shrugged, and we watched the sheriff's gold Tahoe slide up to the clinic. He got out and started toward us but was intercepted by his deputies and the troopers immediately. We just stood and watched as he occasionally shot us glances.\n\n\"What do you suppose they're talking about?\" Delaney managed to keep a straight face.\n\n\"You never know. Could be talking about the football game last night. Maybe.\"\n\n\"It's not football season, is it?\"\n\n\"Nope.\"\n\nShe sighed. \"If I go to jail, I should immediately beat up the biggest baddest prisoner, right?\"\n\n\"Well, yeah, that's one way to establish dominance, but you won't have to. Most of the time, the other inmates can smell the crazy ones and stay away from them.\"\n\n\"Soooo, I should act crazy?\"\n\n\"Just be yourself, Cupcake. Be yourself.\"\n\nI could see the sheriff shake his head and give a long-suffering sigh before walking over. He looked down at Delaney. \"The troopers are currently disinclined to pursue the speeding, reckless driving, and a half dozen other almost-certainly justified charges. Their watch commander feels that it would probably reflect badly on their department when the whole story came out. And they are frankly uncertain as to whether their radar guns were properly calibrated due to the improbably high speeds recorded thereon.\"\n\nDelaney gave a disturbingly wide smile. \n\nHe shook his head again. \"There is the matter of the sudden disappearance of one of my cruisers that we should probably discuss, along with the 'appropriation without authorization' of several doses of a prescription drug. And the replacement of an expensive security lock.\"\n\nDelaney screwed her nose up. \"It couldn't be that expensive; the bolt cutter sliced right through it.\"\n\n\"How did you get in?\"\n\n\"Through the motor pool door. Your guys never lock it. Nobody would buzz me in at the front door.\"\n\nHe nodded. \"They were all dealing with the 9-1-1 system going down. The county should have never bought into that service.\" \n\nOne corner of Delaney's mouth lifted. \"I left Sally so you would know it was me.\"\n\n\"I figured that, since you left it in my parking place and put the keys and bolt cutter in the middle of my desk.\" He closed his eyes. \"Jesus, I need to retire; she's starting to make sense.\"\n\nDelaney tried unsuccessfully to keep her face straight, but she did manage not to say anything.\n\nHe looked at me. \"How close was it?\"\n\n\"Too damn close. There are a couple I'm still not sure will make it.\"\n\n\"Any idea what it was?\"\n\n\"Best guess? Something laced with a lot of fentanyl. Most of the victims were obviously experienced users, so it had to hit hard out of the blue.\"\n\nDelaney held up a cellophane bag tied shut with a rubber band. \"I found this on the floor.\"\n\nI stared at her. \"And you were going to tell me this...when?\"\n\nShe shrugged. \"I wanted to make sure I didn't need to use it in jail to trade for packs of smokes.\"\n\n\"You don't smoke.\"\n\n\"I watch TV. Cigarettes and tater tots are cash money in the joint.\"\n\n\"Nobody calls it 'the joint' anymore...\"\n\n\"Can you two stop...for just a moment?\" The sheriff closed his eyes for a second. He was probably praying. \"Give me that...\"\n\n\"No.\" I held my hand up. \"She has gloves on. You don't.\" I pulled an extra pair of gloves out of my scrubs pocket and handed them to him.\n\n\"Fucking fentanyl.\" The sheriff pulled on the gloves and took the baggie. \"Looks like synthetic THC. There's been a rash of this shit loaded with fentanyl all along the coast. Did you know any of the victims?\"\n\nI shook my head. \"No.\"\n\n\"One of the guys that brought a couple victims in said something about a rave at Teddy's - wherever that is.\" Delaney gestured helplessly.\n\nThe sheriff keyed his radio. \"Dispatch. Get two cars over to Theodore Martin State Park. Check Party Canyon. Send whatever EMS you can round up, just in case. Inform state police. The overdose cases may have originated at a rave there.\"\n\nHe pulled my keys out of his pocket. \"Just drop the cruiser off and take your car. You drive, not her.\" \n\n*****\n\nThe Right Thing\n\n*****\n\n\"You're not pissed, are you?\" Delaney strapped herself into her seat.\n\n\"What'd I tell you to do?\"\n\n\"Get all the Narcan I could and get all the help I could round up.\" She fell silent.\n\n\"You did exactly what I told you to do.\" I cranked Sally's engine up. \"If I don't tell you how to do things, I expect you to do the best you can. We were just minutes from losing some of them when you showed up. If you'd have tried to explain yourself or waited for them to get in touch with the sheriff, we might have lost them.\"\n\nShe leaned back in her seat. \"So I did the right thing.\"\n\n\"You did 'a' right thing. There may have been better options, but you chose one that worked. The sheriff isn't grumbling about it because he's damn glad he doesn't have to call some families to tell them one of their kids died. At least not yet. We'll see what they find at the park.\"\n\n\"It was really cool. The cruiser doesn't handle like Sally, but the lights and sirens made up for it.\"\n\n\"I'll bet. Did you have to skim the state trooper's car? I know that wasn't an accident.\"\n\nShe grinned. \"I had to get their attention to make sure they'd follow me.\" She paused, looking a little disappointed. \"I also flipped them off and yelled 'try and catch me, wankers,' but they were too busy freaking out over me buzzing them up to even notice.\"\n\n\"You actually called them 'wankers'?\" I shook my head. \"No more British movies for you.\" \n\nShe snickered, but before she could reply, my cell phone buzzed.\n\n\"Sheree?\"\n\n\"Les, I'm over at the hospital. My cousin...Shelly...\" She took a breath. \"She OD'd. She's recovering, but it was really close.\"\n\n\"We're on the way, babe.\"\n\nSheree had been trying to help Shelly out from under her addictions most of her adult life. We'd seen her temporarily \"clean up\" then relapse over and over. To Sheree it was a family duty, one she couldn't just quit. \n\nBesides, they'd grown up together, and Sheree would never be able to abandon her. Sheree didn't give up on people.\n\nIt didn't take that long to reach the hospital, and we found Sheree standing outside the waiting room for the emergency room.\n\nShe strode over as soon as she saw us. \"There's no seats in the waiting room.\"\n\n\"Do you know what happened?\"\n\nShe shrugged. \"It doesn't make any sense; she just got off work and headed home; the next thing I know, I'm getting a call from the hospital. She's been clean for a while, and she was due to take a drug test soon.\" \n\n\"Who found her?\"\n\n\"That's the strange part. She was in the hospital already; they said she was in line at the information desk.\"\n\n\"Didn't you say she OD'd a couple years ago? Maybe she was there because she thought she was overdosing.\"\n\n\"Yes, she drove herself to the emergency room the last time.\" Sheree paused. \"She knows where the emergency room is...if she thought she was overdosing, she'd have gone there.\"\n\n\"So why was she in line at the information desk?\n\n\"I don't know, and she's probably not going to wake up for a while.\"\n\n\"Did they say what she overdosed on? We had a bunch of overdoses at the clinic. Probably fentanyl.\"\n\nShe glanced back at the waiting room. \"They haven't told me anything. Gotta lot of people in there talkin' about a party goin' really bad, was that it?\"\n\n\"Probably, the sheriff thinks it was a rave party at Theodore Martin State Park.\"\n\n\"Shelly never liked the rave thing much. She went to one and got about three days of migraines from it, never did it again.\" I could see Sheree was trying to keep her equilibrium. Shelly had completed her court-directed rehab and seemed to have cleaned up. Sheree closed her eyes for a second, suddenly looking tired. \"Dammit, Les. I thought she was done with that...shit.\"\n\nI put an arm around her shoulders, and Delaney moved up on her other side. I could sense Delaney's annoyance at Shelly over putting Sheree through all this, but she tried to help. \"Maybe they made a mistake, and maybe it was something else.\"\n\nI started to shake my head but stopped. Delaney was trying to help, and maybe a temporary denial would give Sheree time to catch her breath. \"Maybe, we can find out when she recovers.\"\n\nSheree gave me a sideways look. She knew better, but she also knew what Delaney was trying to do. She gave a terse smile. \"We'll do that.\"\n\nDelaney sat on one of the wide window sills and stared out the window. She slumped a bit, the rush from the emergency at the clinic draining away. There'd been a detached feeling with all of that. None of the overdoses had been people we knew well. We'd recognized a couple from around town but didn't really know them.\n\nShelly was a problem, though. Sheree saw it too. \"How many did you get in the clinic?\"\n\n\"Twenty. We were lucky. We ran out of everything. Delaney stole a police car.\"\n\nDelaney perked up and snickered. Sheree gave her a mock suspicious look. \"Okay, this I gotta hear.\"\n\nTwenty minutes later, just as Delaney finished up her tale, the sheriff walked out of the emergency room. He just walked over and sat on the window sill, leaning his head back against the glass. \n\n\"All yours look like they'll make it. I don't know about the two we found at Party Canyon yet.\" He looked over at Sheree. \"Shelly's going to be fine, but she's seriously upset. She swears she's clean, swears she hasn't used in almost a year, not even weed.\"\n\n\"She's been testing clean, but if she's not, she goes in for six months. Judge is all out of patience with her.\" Sheree stared at the floor.\n\n\"This isn't really her crowd.\" He shifted. \"I haven't gotten an answer about who was selling. Some skinny blond guy at the Canyon. Nobody seems to remember his name.\"\n\nSheree's lips tightened. \"I'll ask Shelly.\"\n\n\"Not tonight. She's being admitted for observation.\" He sat up. \"Be better to ask when you're less pissed off at her. They'll let you stick your head in, but just leave it be for tonight.\" He got up. \"I'll walk you back before they take her on up. They probably won't let you in otherwise.\"\n\nBy the time Sheree came back, she had to shake us awake.\n\nShe was silent all the way back to the cabin, staring out the passenger window. We'd opted to leave her car there until morning. None of us thought it was a good idea for her to be driving alone stressed out.\n\nBy the time we lay down, it was pretty clear she wanted to talk. She didn't wait for me to ask. \"Shelly says she didn't take anything.\" \n\n\"She always says that.\"\n\n\"Yeah, but this time...\" She shrugged.\n\n\"Really?\"\n\nShe sighed, long and slow. \"It's something in her voice.\"\n\n\"Drug addicts are pretty good liars, even to themselves.\" Especially to themselves, if I remembered right.\n\n\"It wasn't that way. She wasn't being 'honest' like every other time. She was...\" Sheree paused. \"Confused. She was confused.\"\n\nThat didn't sound like Shelly. If anything, she was good at fake self-confidence and earnestness. \"That's odd.\"\n\n\"I'm going back in the morning. I told her I'd pick her up.\"\n\n\"We'll drop you off; your car's there.\"\n\n\"Yeah. I was gonna ask if you could do that. I'm so damn mad at her.\"\n\n\"If the judge gets the hospital report and sees a drug-positive result, you won't have to deal with her much for a very long time.\"\n\nShe fell silent for a long time. \"Is there any way she could have...you know, accidentally taken it?\"\n\n\"You think there's a chance somebody drugged her?\"\n\n\"I don't know. We didn't get to talk too much about what happened, and I was kinda, well, pissed off at her.\"\n\n\"Doesn't sound like she had much time between leaving work and showing up at the hospital. Hard to hit a party and get drugged.\"\n\nI felt Sheree tense up. \"The party was at Theodore Martin Park? She couldn't have made it there and still got to the hospital. It's just too damn far.\" She settled back against me. \"I'm gonna just have to ask her what happened.\"\n\n*****\n\nTacos and Dresses\n\n*****\n\n\"Tacos.\"\n\nDelaney gave me a hard stare. \"That's my line.\"\n\n\"You turning down tacos?\" I turned the rollback toward the interstate.\n\n\"I didn't say that.\" She paused. \"Why?\"\n\n\"Maybe I just feel like tacos.\"\n\n\"Or...?\"\n\n\"Or maybe we need to talk to Mooky.\"\n\nShe gave a disgruntled scowl. \"Mooky wouldn't have anything to do with that shit.\"\n\n\"I know. But he might know who would. People almost died.\"\n\n\"He'd hate that.\"\n\nShe was right; Mooky grew weed because he liked weed. But he also saw it as a near-magical natural medicine.\n\nHe was also expecting us.\n\nWe'd just gotten out of the rollback when we saw him; he was striding across the parking lot dead at us. \n\nHe thrust a large bag at Delaney. \"Dude. Twenty tacos. No charge.\" He pushed a large Coke into her hand and handed me another.\n\nDelaney blinked. \n\nHe shook his head, his lips pressed tightly together. \"I know about the overdoses. The girl with all the cross tattoos is my cousin, Alexandria.\"\n\nI remembered her. \"She'll be okay; she wasn't as bad as some of the others.\"\n\n\"It's an...abomination.\" He looked off into the distance, clenching his fists. \"I told her to stay away from that... It's toxic, man.\" He looked up at me. \"Do you know what they make that shit out of? Rat poison. Some of it is made with real rat poison!\"\n\n\"It was laced with fentanyl.\"\n\nHis shoulders sagged. \"That sucks.\"\n\n\"She say who was selling it?\"\n\n\"Alex didn't know him. Some skinny blond dude with a stringy goatee. He just showed up and was selling cheap.\" \n\n\"She didn't know his name?\"\n\nHe shook his head. \"Nooo... it was just some dude.\"\n\n\"You don't have any idea who it might be?\"\n\n\"I grow prime stuff. I don't want anything to do with those...chemists.\" I could see the revulsion in his face. \"That shit's unnatural.\" He bit his lower lip for a moment. \"You want me to ask around?\"\n\n\"Maybe just listen to some rumors and see what you hear. Don't ask anyone directly.\"\n\nHe nodded. \"I can do that. This is bad. Bad for everyone.\"\n\nDelaney echoed his nod seriously. \"Don't let it harsh your calm, dude.\"\n\nHe blew out a breath. \"Dude.\"\n\nAs we pulled out, Delaney started digging a taco out of the bag. I glanced at her. \"Harsh your calm?\"\n\n\"Everybody says learning another language is important.\" \n\n\"Stoner isn't a language.\"\n\nShe held up a taco. \"Duuuuude.\"\n\nI scowled at her. \n\n*****\n\nSheree was at the yard when we pulled in; even as I parked the rollback I could see she was obviously in an oddly dark mood. Delaney ran the paperwork into the office while I headed over to Sheree.\n\nShe scowled as I walked up. \"Shelly still swears she didn't use anything. She says there's a mistake somewhere.\"\n\nI told her what we'd learned from Mooky. \n\nShe set her jaw stubbornly. \"I wanna talk to this stringy-goatee guy. I want to know if Shelly was buyin' from him.\"\n\n\"We'll keep asking around.\"\n\n\"I will too.\" She gave a pensive frown. \"I just want to know if Shelly is tellin' the truth. She's just seemed so much...better lately, ya know?\"\n\n\"We'll figure it out.\" \n\nSheree nodded, then sighed as Delaney came down out of the trailer. \"Now comes the hard part.\"\n\nDelaney eyed us suspiciously, then the light dawned, and horror crossed over her face. \"Shit.\"\n\nShe glanced at the gate, her only escape route. I shook my head. \"You agreed to this.\"\n\nSinking to sit on the last step, she slumped forward, her face in her hands. 'Oh, God. I forgot.\"\n\n\"Denial isn't just a river in Egypt, you know.\"\n\nShe raised her face to the sky, and I was pretty sure she was praying for a lightning strike to save her. \"You cheated; you asked when I was full of Thai food. I'd never have agreed to this otherwise.\"\n\nSheree chuckled. We all knew that Delaney had only agreed to it because Sheree was taking her.\n\nDelaney stood up and looked at Sheree. \"I'll go change. Jeans and a T-shirt, okay?\"\n\n\"Wear yer sandals. It'll make it a lot easier and faster if you do.\"\n\nDelaney trudged back inside the trailer, dragging each foot up to the next step as if she were on her way to her own hanging. We all kept a few changes of clothes at the salvage yard trailer, it just made sense.\n\nSheree shot me a wink. \"She'll have fun, I promise. There's a new brick oven pizza place over by the shops, so I can keep her motivated.\"\n\n\"Make sure you have fun, too.\" \n\n\"I always have a good time with her.\" She looked up at the trailer with one of those sad-happy looks that women can give, then smiled a little self-consciously. \"Besides, I hear it's really good pizza. You get yerself something to eat for supper, okay?\"\n\n\"I'll grab something. I'd come along with you two, but, you know, I'd rather smash my head against a brick wall.\"\n\nSheree giggled. \"I know, and you an' her would just feed off each other, and we'd never find a her a dress and shoes.\" She glanced around. \"This is gonna to be tough on her.\"\n\n\"Dealing with Charlotte is a lot to ask.\"\n\n\"That woman's got herself a knack. She's pushed awful hard for this. And she's set it up in a way that will make Delaney feel helpless.\"\n\n\"I have an idea that might help.\" \n\nShe saw my grin and gave me a sly look. \"Help or make things worse?\"",
        "\"Well, one or the other.\" \n\nBy the time I finished explaining, Sheree was smiling from ear to ear. \"She is a lot like you. I think that might work.\"\n\n*****\n\nTea Parties and Consequences\n\n*****\n\n\"Wooo-Eeee, now that's a sweet ride!\" Billy stopped following me to peer through the open roller door at Delaney's project car. \n\nWe were headed to the office to figure up the parts he'd pulled for his employer.\n\nDelaney stuck her head out from under the car, annoyance fighting with pride for a moment, but pride won. \"Damn thing's a lot of work.\"\n\n\"She's a '58 Fury, right? Really rare, if I remember right.\"\n\nDelaney gave a smug smile. \"Yeah, I looked it up. They only made about fifty-three hundred or so. There are a lot more of the Belvederes and Savoys, so some of the parts aren't as hard to get as you'd think.\"\n\n\"Got her painted up like Christine. Damn, I remember that movie.\" He grimaced. \"Scared the pure shit outta me. I had nightmares that one a these cars was gonna hunt me down and kill me someday.\" He studied it for a moment longer. \"You do all this yourself?\"\n\nDelaney nodded and relaxed a little. \"Mostly. I have to pay people to re-chrome and do the paint, but I did all the mechanical work.\" She frowned. \"And Needles got me the engine, traded a wrecked Porsche for it, but I'm working it off. Kinda pissed me off; I wanted to buy it myself.\"\n\nThe engine's source was still a bit of a sore spot for her, but the Golden Commando 350 engines didn't come up on the market often enough for me to risk passing it up. Even so, she'd had to put in a huge amount of work rebuilding the engine.\n\nBilly pursed his lips. \"That's fair. That's sorta how you'd a got it anyways, right? Work for the money, then buy it?\"\n\n\"I guess.\" Delaney shrugged.\n\n\"You just got the engine first, and now yer paying off, like buyin' a car on payments. People do it all the time.\"\n\nShe thought on it a bit. \"Yeah, I guess it is.\" She glanced at me with a little bit of embarrassment. \"I hadn't thought of it like that.\"\n\nI kept my mouth shut, but Billy had just earned himself a discount. I could explain that to Delaney all I wanted, but coming from someone else, it was just easier to accept.\n\nBilly squatted down and looked over the grill. \"Damn. Hell on wheels.\" \n\nDelaney gave a very satisfied smile.\n\nBilly and I headed on up to the office. \"She's a good kid, Doc. Really smart.\"\n\n\"She is, a helluva lot smarter than she thinks she is.\"\n\n\"Ain't that the way of it, Doc.\"\n\nWe settled up, he paid with grimy twenties, as usual. \"Catch ya' later, Doc.\"\n\nAs he headed out, I looked at the time. Before I could even call out to Delaney, she was trudging up to the office, face grim. \n\n\"I thought you forgot.\"\n\nShe shook her head. \"I wish.\"\n\n\"Tara will be by to pick you up in about forty minutes.\"\n\nHer head dropped. \"I'm going to get cleaned up.\" \n\n\"The bathroom window is too small to escape through, you know.\"\n\n\"Maybe Tara will forget to lock the car doors.\"\n\n\"Good luck with that. I think she's starting to understand you.\"\n\n\"Sucks.\" She stopped. \"What do you think Mother would do if I ordered a peanut butter and jelly sandwich?\"\n\n\"She'd probably tell everyone you've become a socially conscious vegan.\"\n\n\"Ugh.\" She winced, then plodded down the hall.\n\nTara arrived before Delaney was done and came on in, a little self-consciously smoothing her expensive dress. \"She try to sneak out yet?\"\n\n\"Nope. Be sure to lock the doors on your car.\"\n\n\"They automatically lock as soon as I roll.\" Tara made a brave attempt to keep a straight face. \"This probably won't be so bad.\" \n\nI snickered. Tara tried not to, but in a few seconds, her face was buried in her hands. \"I can't believe I managed to say that out loud.\"\n\nWe were still laughing when Delaney walked out, glaring at us. \n\nI pulled myself together quickly and pretended to look her over. \"That works. I think Sheree did a good job picking that out.\"\n\nTara caught my serious tone and nodded. \"She did. It looks good on you.\"\n\nDelaney took a deep breath. \"Yeah. I'm okay with this.\" She paused. \"I'll have to wear my work boots with it. I forgot the shoes.\"\n\nI didn't laugh. Sheree had warned me. I shook my head. \"They wouldn't really go with that dress.\" \n\nI reached over and pulled her pumps off the counter. \"Sheree dropped these off while you were working on your car. You accidentally left them at the cabin.\"\n\nA very uncomfortable look settled on Delaney's face; she knew as well as I did that it was no accident, but I didn't let her get going. I pulled a small purse off the counter and held it up. \"I asked her to pick this up.\"\n\nDelaney curled her lip. \"I don't need a purse.\"\n\nI shrugged. \"Up to you.\" I popped open the purse. \"But where else would you hide the Stun gun?\"\n\nThe crackle of the Stun gun made Tara jump, but Delaney's eyes lit up. \"Really?\"\n\n\"Just figured if you can't have steel toes, maybe a million volts would make you a little more comfortable.\"\n\nDelaney looked her new toy over and stepped almost absentmindedly into her pumps. \"It's fully charged, right?\"\n\n\"Yep.\"\n\nDelaney grinned. \"Cool!\"\n\nI caught Tara as they started out the door. \"Just a second. I need you to check the prospectus on a possible expansion.\"\n\nShe nodded, catching my expression. Delaney shrugged and headed on down, still looking over her new toy. \"See you in the car.\"\n\nI waited a second. Tara looked at me. \"A Stun gun?\"\n\n\"You want to get her into that place, in a dress, with Charlotte; she needs something to hold on to.\"\n\n\"You make it sound like...\" She stopped. \"Shit.\"\n\nI nodded. \"She's tough as they come, but Sheree is right; Delaney's work clothes, tools and boots are her armor. She feels vulnerable without them. She's got serious trust issues.\"\n\n\"She needs therapy.\"\n\n\"What she needs is to go a whole goddamn year without someone trying to kill her. She's not paranoid. She's being realistic. Like it or not, she sees Charlotte as part of all that shit, so her trust level is pretty low.\" \n\n\"I'll keep an eye on her.\"\n\n\"You should probably keep an eye on Charlotte.\"\n\nTara's mouth set in a grim line. \"I do that all the time.\"\n\n*****\n\nWhen I got back to the cabin, Sheree was already there.\n\n\"Did'ya give Delaney her shoes?\"\n\n\"That, and her new Stun gun.\"\n\nShe nodded. \"That help?\"\n\n\"Just like we figured it would.\"\n\n\"It was your idea. I just thought it was a good one. She has a hard time dealing with Charlotte...\"\n\n\"That's tough on both of us.\"\n\nShe smiled a genuinely sympathetic smile. \"I know.\"\n\n\"How's Shelly?\"\n\n\"She's sticking to her story. Says she wasn't using nothing.\"\n\n\"They test her?\"\n\n\"They treated her with Narcan, but they didn't test her. Nurse says can't nobody get her medical records, so she'll be okay for now. I just had her lawyer tell the judge she was hospitalized, so she's got some time.\" Sheree stared through the wall for a few heartbeats. \"Dunno if I'm doing her any good or just makin' things worse.\"\n\n\"You still think she's telling the truth?\"\n\n\"I know it doesn't make any sense, but it just feels different this time.\" She frowned.\n\nI didn't have an answer to that. We talked about the wedding and fixed dinner while we waited for Delaney to get back.\n\n*****\n\nDelaney walked in the door wordlessly, leaving it hanging open and went straight to the refrigerator. She poured herself a tall glass of tea. Tiffany and Tara walked into the cabin, somewhere between \"tense\" and \"brace for impact.\" \n\nSheree gave me a side glance and decided to pitch in. \"How did it go, baby?\"\n\nDelaney downed the tea in one long drink and poured another. \"The tea there sucked. And Mother is turning into a fucking fish.\"\n\n\"A fish?\"\n\n\"Her lips are all, like, HUGE.\" Delaney pursed her lips in a mockery of a fish. Or maybe a duck.\n\nTiffany suppressed a smile. \"She may have had lip injections.\"\n\n\"She looks like a cartoon fish. A FROZEN cartoon fish, because her face...\" Holding her eyes wide open, Delaney waved her hands frantically in front of her face. \"It...doesn't...move.\"\n\n\"Botox.\" Tiffany and Sheree exchanged amused glances. \n\nTara held up a hand in supplication. \"Mother has had some...work done.\"\n\n\"Some work done?\" Delaney gulped the second glass of tea. \"She's a major construction zone. They had to get state permits for that!\" \n\n\"A tummy tuck, some liposuction...implants.\" Tiffany glanced at Sheree involuntarily at the word implants. \n\nSheree managed to keep a straight look on her face and still radiate smug satisfaction without saying a single word.\n\n\"Implants? What did they plant, cantaloupes? I mean, damn...\" Delaney ranted on.\n\nTiffany sat on one of the barstools. \"Maybe they're not as...proportional as they probably should have been...\"\n\n\"Two silicone olives on a toothpick.\" Tara looked annoyed at the thought. \"It's malpractice.\"\n\n\"If she feels better with a little more 'up top,' we can't hardly criticize her for that. As long as she's doin' it for herself.\" Sheree said it so smoothly and reasonably that the implied pity for Charlotte barely registered.\n\n\"Easy for you to say.\" Tara chuckled. \"You're the illustration for what women want to get with those but never do.\"\n\nI watched the corner of Sheree's mouth twitch as she stifled a smile. \"Either way, Charlotte's choices are hers to make.\"\n\nTara shrugged. \"At least we know what this is all about. She wants 'a say' in Tiffany's wedding. She wants this to be the social event of the year.\"\n\n\"You should see her guest list.\" Tiffany shook her head. \"She wants to invite nearly 300 people, mostly people Eric and I don't even know.\"\n\n\"A lot of politicians and some people from the firm.\" Tara almost sneered her distaste. \"She should know better. She really doesn't want me in a fucking room with those assholes.\"\n\nDelaney blinked and stared at her. Tara and Tiffany never used foul language, and the venom in Tara's voice was blistering. \n\nTiffany grabbed Tara's hand. \"I know. I get the last say on this, and I'm not going to let her invite any of them, okay?\"\n\nTara nodded stiffly, directing her glare at the floor. \"Fuck them.\"\n\nDelaney shot me a questioning look. She might not have been exactly reading on-level, but her survival instincts were state of the art. I gave her a short head shake to warn her off.\n\n\"Besides, I'm not going to let Mom try to bankrupt Dad with three hundred five-star meals.\"\n\nI snorted. \"You invite who you want; we'll make it happen.\" \n\n\"Dad, she wants to invite the governor and half the legislature. She even invited Judge Knowlton.\"\n\n\"That's an interesting choice. He managed to put me in jail to help Stein, but Stein tried to kill Charlotte. Wonder if she thought that through?\"\n\nTara nodded slowly. \"That is pretty weird. I mean, he does have a lot of political pull, but you'd think mother would have some hard feelings about it.\"\n\n\"He must have something she wants.\" Tiffany looked down at the floor, thinking. \"Either way, she's wanting way too much.\"\n\n\"It's okay. We'll figure it out, there's some money put aside for this that your mother missed in the divorce, and I added to it over the years.\"\n\nTara pulled herself out of her reverie and looked at me suspiciously. \"It looked like they did a pretty good job of looting you from what I saw in the divorce papers.\"\n\n\"When we found out we were having twins and that you were both girls, Charlotte made some joke about how expensive the weddings would be. So when I set up your education savings accounts, I also set up a wedding account for each of you. They're technically in your name; I couldn't pull anything out of them, and we'd both signed the paperwork. That's probably why Charlotte's lawyer didn't argue about them. When you graduated, and Charlotte closed out the education accounts, the allotments from my retired pay automatically went into the wedding accounts.\"\n\nThey both looked at me as if I'd suddenly started speaking Greek, then shot looks at each other. Tara cocked her head. \"You paid for the education accounts?\"\n\n\"Since before you were born. I was getting jump pay, then HALO pay, dive pay, and I was usually getting either imminent danger pay or hostile fire pay, so we could put back more than most. It was with MNC Investments.\" \n\nTara's face tightened. \"That complete...\"\n\n\"...asshole.\" A grim-faced Tiffany finished her sentence without missing a beat. I hadn't seen them do that since before the divorce.\n\n\"Charles said that was a high school graduation gift from him and Mother.\" Tara was trying to keep herself calm. Her hatred of Charles was probably deeper than mine, if not as long-running. She'd only found out about his plans for her at the end, but she'd taken it hard. \n\nSheree glanced at me before taking Tara's hand. \"The important part is that you got the money for your schooling, right?\"\n\nTiffany shifted her gaze to me, then guiltily at the floor. \"But we thought...God...\" \n\nI could feel the waves of shame and guilt off of both girls. Jesus. Charlotte really did have an endless ability to fuck up my relationship with my daughters. \"Sheree's right. You got the money for college, that's what's important. That was the reason for it.\"\n\nTara grimaced. \"Charles was a...\" She shook her head, at a loss for words.\n\n\"Shitweasel.\" Delaney sat up. \"A complete fucking shitweasel.\"\n\n\"I think I was going to say 'piece of work' or something like that, but you're right, he was a shitweasel.\" Tara twisted her hands together before looking over at Delaney. \n\nA smile picked at the corner of Tiffany's mouth. \"A real shitweasel.\"\n\nAll three of them looked at each other with a kind of shared smile. For once, I could see all three of them as real sisters.\n\n\"You two should probably leave that kind of language to me. I have the knack for it.\" Delaney leaned forward and grinned broadly.\n\nTara and Tiffany gave her weak, matching smiles. \n\n\"Hold on.\" I got up and walked over to the massive built-in that served as a combination china cabinet and work desk. It took me a minute, but I found the portfolios and gave them to Tara and Tiffany. \"Here. You'll have to call the finance company to get the current total.\"\n\nTiffany looked in the portfolio and pulled out the last statement, and blinked. \"You never stopped putting money in...\"\n\nI shrugged. \"It's out of my Army retirement pay. Half of anything I stopped paying in would have gone to Charlotte. Couldn't have that.\"\n\nShe smiled softly and didn't even pretend to believe me. \"Sure. So what are you going to do when we close these?\"\n\nTara had been reading through the packet quietly. \"We shouldn't close these; this is a good reliable firm. But you should stop...\" She stopped and looked at something, then eyed me suspiciously. \"You've already thought of that, didn't you?\"\n\nTiffany looked over at her. \"What do you mean?\"\n\n\"The contribution dropped. If you added ours together, then split it three ways... He made another account.\" She looked over at Delaney then at me.\n\nI nodded. \"Seemed fair.\"\n\nTiffany looked it over. \"You did it about two weeks after she came to live with you.\" \n\nI saw Delaney catch her breath and choke back a response. \n\n\"Hey, I gotta keep Charlotte from getting the money, right?\"\n\nDelaney flushed and looked down. Sheree just gave me the same warm look she'd given me when I'd first told her about setting up an account for Delaney. \n\n\"Those accounts will get you started, but I have some other assets to cover this. This will drive Charlotte crazy.\"\n\n*****\n\nOn Being Downrange\n\n*****\n\nDelaney dragged the surplus artillery round transport tube out of the hide and pulled it out to the side with the others we'd selected, taking a second to brush the dirt off her face. Which, of course, just smeared it. \"That's ten of the fifteen good ones.\" \n\nShe popped the latches on the final tube and slid the last Steyr AUG out so I could look it over and run it through a function check. Things go wrong in storage, no matter how careful you are. The assault rifle looked fine though. \n\nDelaney checked each one over as well, for practice, and in case I missed anything.\n\nAfter we put them back in the hide, I slid the heavy cover back on. We took a couple of minutes to make sure it was invisible to the naked eye. \"That's all we'll need.\" \n\nWe'd recovered eighteen of the AUGs from the wreckage of Jason Bradly Calloway, Esquire and his security team. Three of the weapons would need some repair to be functional again, but the others were pretty much in near-perfect condition. I'd mostly decided to take them to prevent the FBI and BATF from taking an interest in his death; the fewer federal agencies looking into our little problem, the better off we were.\n\nWeapons are worth money, though; sometimes a lot of money. Well made, Austrian-engineered military-grade fully automatic weapons in near pristine condition are worth ridiculous amounts of money if you can find a way to sell them. \n\nIt turns out that some fourteen-year-old girls have contacts in the black market weapons arena. Technically, they were my contacts first, but Delaney had the secure email. It was pretty simple to figure out what to do. Kurt and Katie at K2 Security - Delaney's \"summer camp\" - walked a lot of grey areas and had the contacts to find buyers and sell the weapons, and we had the huge advantage of knowing we could trust each other. After a series of extremely cautious, very-carefully worded emails over Delaney's encrypted email account, Kurt agreed to facilitate a sale for us. They'd also apparently weighed in on our side with whoever was buying since our end was a lot higher than I'd expected. \n\nThe black market for full-auto weapons is always a little unpredictable, and as an outsider, I'd expected to get gouged hard. I figured a final price of thirty thousand for each of the weapons would be reasonable, but I'd thought we'd probably clear around ten thousand dollars per if we were lucky. \n\nKurt and Katie had managed to get us twenty-five thousand per weapon, and I had a suspicion Katie did it to avoid alienating Delaney and her friends. I was pretty sure she was setting the stage to get the \"Camp Mayhem Girls\" lined up for future employment. Shipping and payment were simple. The next of our usual shipments of beater cars to K2, supplies for their driving courses, would have hides built into them. Payment would be handed over by the truck driver before he left. \n\nDelaney snickered. \"Mother is going to be in shock when you just pay the caterer with a suitcase full of cash.\" Even Charlotte's extravagant \"needs\" for Tiffany's wedding couldn't keep pace with the black-market weapons money.\n\n\"I was thinking of using a blood-soaked duffle bag.\"\n\n\"Oooh. I like that. Or maybe we can get a box like the case in Pulp Fiction.\"\n\n\"I doubt Charlotte would get the joke.\" I shook my head and closed up the bed of the truck.\n\n\"What about the box in Seven. Could we get one of those?\"\n\n\"The box with his wife's head in it? Way too tempting.\"\n\nDelaney choked down a barking laugh. \"Oh yeah. That'd be bad. Really don't need to be giving you ideas.\"\n\n\"Wait, when did you see Seven?\"\n\n\"Ummmm...summer camp?\"\n\n\"I probably need to talk to Kurt about what he's letting you guys watch.\"\n\nShe scrunched her nose in surprise. \"Really?\"\n\n\"Yeah. Too much violence in some of those...\" I couldn't do it; I started laughing.\n\nDelaney snorted. \"Oh yeah. I could start having nightmares because Brad Pitt pretends to freak out about a box...\" She had to sit down and catch her breath. \"Jesus. Katie only lets us watch the stuff cut for broadcast anyway. I never even got to see the head in the box.\"\n\n\"They never show it. Everybody thinks they saw it. They'll swear on a stack of bibles that they saw it, but they never show it in the movie.\"\n\nShe blinked. \"Seriously?\"",
        "I nodded. \"It's a trick; what people make up in their heads is more effective than anything they can put on screen.\"\n\n\"That's crazy.\"\n\nA glimmer on the ground caught my eye, and I bent down to look at it. A spent 9mm shell. Then four more. \"Delaney? Have you been doing anything down here?\"\n\nShe walked over, looking puzzled. \"I haven't been down here in the hollows since we put the hides in.\"\n\nI held up one of the casings. \"Maybe they washed out of the ground when it rained last week.\"\n\nShe took it out of my hand and studied it. \"Kurt has us do a bunch of shooting, but I don't have anything to even use here.\"\n\nI didn't even bother wondering if she was telling the truth. Delaney was obnoxious, disrespectful and had a whole stack of issues. She might not tell me everything, but she'd never deliberately lied to me. If she'd have been up to anything down here, she'd have owned it and dared me to call her on it.\n\n\"So what's up with Tara?\"\n\nI thought about it for a second. \"Chuck had plans for Tara. Ugly ones. He didn't think of her as his daughter either.\"\n\nDelaney's eyes widened as she realized what I meant. \"Shit.\" \n\n\"He died way too easy.\"\n\nShe suddenly slumped a bit. \"What the hell is wrong with people?\"\n\n*****\n\nBilly dragged a box load of parts up to the steps of the office. \"Hey, Doc. I'm gonna head back over to get a couple more pieces. Been a pretty good day.\"\n\nI glanced over the box. Over the last several days, Billy had been meticulous about recording every last piece on the forms. I gave him a pretty good break on most of the prices. He wasn't making a helluva lot of money on this, and most of the parts he was picking were low-value parts that Delaney and I probably wouldn't have bothered with. \n\nDelaney pushed another tire up onto one of the stacks next to the car crusher. I made a mental note to give Stan over at Interstate Tire Recycling a call to make an early pickup. We didn't make much money off of the tires, but that's the secret to running a salvage yard. Lots of little income streams can make you a better-than-average living. Tire recovery, battery core charges, and recycled fluids coupled with the high-value parts Delaney and I salvaged made for a pretty steady income. \n\nBilly passed Delaney, laughing like a wheezing donkey at some comment she'd made, when something spanged off the engine block hoist near the front gate. \n\nI was already diving down the steps before fully registering the accompanying sounds from the road near the gate.\n\nA stuttering storm of gunfire erupted into the yard.\n\nI fixed on Delaney; there was no way I could reach her quickly, but it didn't matter. She'd bolted instantly with no hesitation at all, racing low and fast for the wall of tires. \n\nBilly was closer to the wall, and he paused to make sure she was over before following her to safety, even grabbing her hand to speed her along.\n\nI dove under the wrecker, low crawling to the other side where I was at least concealed from the shooters. I pulled the door open and slithered up into the cab. I yanked the 1911 and spare magazine from under the dash, thumbing the safety off the gun before I dropped back out of the wrecker.\n\nEven as I moved around the back of the wrecker, I knew I was too damn late to do anything. \n\nThe shots died abruptly, and an engine clattered and choked out a rough snarl that faded rapidly as a car tore off.\n\nBy the time I reached the road, it was long gone, with only spent cartridges marking where it'd been. I tucked the .45 into the back of my belt.\n\nA few seconds later, Delaney and Billy cautiously came up beside me, looking carefully down the road in both directions.\n\n\"Two handguns.\" Billy stopped and rubbed his nose. \"Just blasting off shots.\"\n\n\"High-capacity magazines. Probably around thirty shots all told.\" I pointed at two of the casings. \"A forty and a nine.\"\n\nHe studied the brass. \"Seems like somebody don't like you much, Doc.\" \n\nDelaney snorted and shook her head. \"That's a long fucking list.\"\n\nThe sheriff's SUV slid around the corner and parked, followed by one of his deputies. He warily assessed the whole area as he walked up. \"You have something to tell me, Needles?\"\n\n\"Somebody did a driveby, a couple handguns, emptied their magazines and bolted. We didn't get a look, didn't have a chance to shoot back.\"\n\nHe looked at Billy, who shook his head. \"Hell, Boss, I was too busy keeping my ass down to even try to look.\"\n\nThe sheriff blew out a breath. \"Shit. You two into anything?\"\n\n\"Not a damn thing.\" \n\nHe glanced a Billy. \"You?\"\n\nBilly shrugged and held his driver's license out to the sheriff. \"Billy Aleshire. I'm just here to pick up some parts. I don't hardly know nobody 'round here. Got myself an ex-wife in California who probably wouldn't cry if I bought the farm, but I'm thinkin' that's probably normal.\" He gave a toothy hapless smile.\n\nI pointed at the shell casings scattered on the road. \"Well, you have those. And I do have the camera on the gate. It might have picked up something.\"\n\nA good fifteen minutes later, the sheriff had the brass bagged up, and we went over the camera video together.\n\nBilly stared at the screen. \"Damn cool set up, Doc. Looks like ya got the whole yard covered.\"\n\n\"It's been helpful. But it isn't set up to look out the front gate.\"\n\nThe sheriff nodded. \"That's an '05 Honda Civic, but the plates are dirt-covered, probably on purpose. Couple skinny white guys, maybe meth heads, but with those hats, that's all I'm getting. Just a bad angle.\" He stopped for a second and stared at me. \"Meth heads? Maybe they sell other drugs too.\"\n\n\"We might have asked around about who was selling the shit at the rave, but we were just dropping some feelers.\"\n\nHe rubbed the bridge of his nose. \"Just asking?\"\n\nBilly held his hands up. \"Sheriff, less'n you need me, I need ta get goin', gotta get those parts to my buddy so I can get some beer money afore the weekend.\" \n\nThe sheriff waved him off. \"Wrong place, wrong time. Just leave a name and number with the deputy outside.\"\n\n\"Sure thing, Boss. I just gotta pay Doc here for...\"\n\nI held up a hand, thinking about how he'd made sure Delaney was in the clear. \"Don't worry about paying for the parts; we're good.\"\n\n\"You sure 'bout that, Doc?\"\n\nI nodded. \"Been a long day. I can spare the parts this time.\"\n\n\"Thanks, Doc.\"\n\nAfter Billy left, I looked back at the sheriff. \"Seriously, we were just asking.\" \n\nI held a hand up to forestall his argument. \"Sheree believes Shelly, and she thinks that if they figure out who was doing the pushing, they can figure out how she got dosed.\"\n\nHe grimaced. \"You buying that?\"\n\n\"Normally, no... addicts, ya know? But Sheree's pretty damn good at knowing if someone is lying to her.\"\n\nDelaney gave a frustrated groan. \"She freaking reads minds. She knows if I even think of not telling the whole truth.\"\n\n\"Maybe they heard you were asking around and decided to send a message.\" He eyed us laconically. \"No. Just no.\"\n\n\"No what?\" Delaney tried to look innocent but, as usual, completely failed to pull it off.\n\nHe gave her the look an exasperated parent gives a three-year-old. \"I know you two. Now that they've given you an excuse, you'll start folding, spindling, and mutilating your way through drug pushers until you figure out who was brainless enough to draw your attention.\"\n\nDelaney frowned. \"Needles will have to do the spindling, I don't know what that even is.\"\n\nI rolled my eyes at her. \"I've seen the way you do laundry, Buttercup. You're not exactly clear on the whole folding concept either.\"\n\nShe shrugged. \"I've got the mutilate thing down, though.\"\n\n\"Jesus. No.\" The sheriff pointed at me. \"Just...no.\"\n\nI held my hands up in surrender. \"Got it. We will not fold, spindle or mutilate the harmless little poison pushers.\"\n\nDelaney cocked her head at him. \"Can we at least tear the tags off their mattresses?\" \n\n\"That doesn't actually apply to...\" He shook his head. \"You know what? No. You're not allowed to tear off mattress tags either. You two would somehow spark a global war or something.\"\n\nDelaney grimaced. \"Global war sounds good to me. Tiffany and Tara said they're going to start coming over next week to do more wedding planning. Ugh.\"\n\nThe sheriff grinned. \"If I ever get to arrest you; I'm going to personally ask the judge to give you community service. I'll get him to make you work for the County Christmas Fair Parade planning council.\"\n\n\"You wouldn't dare.\"\n\n\"Little Miss Mistletoe toddler beauty contest planning, dresses, tap dancing... you could even be a contest judge.\"\n\n\"I hate you.\"\n\n*****\n\nWedding Plans\n\n*****\n\nSheree was still feeling guilty a week later. \"I'm still thinkin' that shooting mighta been my fault, Les. All my askin' around about things, trying to find out if Shelly is telling the truth. Probably asked a lot more people than you. Maybe fifty, sixty people. Get all kinda people at the Quick Mart.\"\n\nI chuckled. \"Even pushers need a slushie once in a while.\"\n\nShe gave a sad crooked smile. \"I'm sorry.\"\n\nI shook my head. \"Don't be. Hell, it may not have anything to do with anything. It looked like a lot of the shots went into the sign, so they probably weren't even really trying.\"\n\nShe didn't look convinced, but before we could talk about it further, Tiffany and Tara showed up, dragging a whole case of papers and material swatches with them.\n\nI listened idly, finishing my tea as they went over food choices.\n\nTara held up a card. \"For the gluten-free and vegan options, we can use this same wild mushroom risotto.\"\n\nDelaney winced with pain. \"Is that even food?\"\n\n\"Not everyone wants a hamburger, you know.\" Tara gave a smirk.\n\n\"Technically, Delaney's a taco-tarian. She lives entirely on tacos.\" I stretched and settled back in the chair. This was way more fun than I'd expected.\n\nDelaney made a face at me. \"I eat hot dogs too.\"\n\n\"And Thai food, and curry and African peanut soup and, pretty much anything that can't eat you first.\" I looked over at Tara and Tiffany. \"Delaney's definition of food is anything slower than her that isn't actually poisonous. Well, at least not lethally poisonous.\"\n\nSheree laughed softly. \"Behave, Les.\" She smiled at Tiffany. \"I know everyone is supposed to choose their order ahead, but I'd have a few extra of each on hand. People just don't think about what it means when they change their minds.\"\n\nTiffany nodded. \"We need to figure that out.\"\n\n\"The caterer probably has a formula for what you can expect.\" Sheree put on her reading glasses to look over a paper. \"You said you needed Delaney's dress size, right?\"\n\nDelaney suddenly looked horrified. \"Oh my God, you're gonna make me be the flower girl.\"\n\n\"No, you're not going to be the flower girl.\" Tiffany gave her a conciliatory smile. \n\nDelaney relaxed. \"Thank...\"\n\n\"You have to be one of my bridesmaids.\"\n\nThe sound Delaney made was somewhere between a stifled scream and a shriek of outright terror. \"Seriously?\"\n\nTiffany practically glowed. \"It's perfect. Tara has to be my maid of honor. Lynn, Camille, La'ketha and you will be the bridesmaids.\"\n\nDelaney closed her eyes in pain. \"Maybe flower girl wouldn't be too bad...\"\n\n\"Eric's niece, Kami, is six. She'll do that.\"\n\nDelaney put her face in her hands. Tiffany didn't even seem to notice. \"We'll all go together to get fitted. I'm thinking of A-line V-neck asymmetrical princess dresses in shades of blue, trimmed in champagne.\"\n\nSheree nodded sagely. \"That would be beautiful.\"\n\nI blinked. \"I think that's my signal to leave. I didn't understand any of that.\"\n\n\"Save me. Take me with you...\" Delaney reached out weakly. \n\nI looked at her. \"If it gets too bad, close your eyes and try to think of carburetors.\"\n\nTiffany giggled musically. \"Dad, you have to wear a tux.\" \n\n\"I can do that.\"\n\nDelaney narrowed her eyes and glared at me, hissing. \"I hope it's one of those stupid penguin-looking things with the big swooping tails and a giant top hat.\"\n\nTara shook her head. \"Sorry. They're the regular kind. Bow ties and cummerbunds. No hats.\"\n\n\"Eric got a say in that.\" Tiffany nodded to me. \"Mom said you should wear your medals and badges and stuff on your tux. She says you have a lot of them.\"\n\n\"I know where they are, but that's up to you, not her.\"\n\nTiffany smiled blindingly. \"I'd like it if you did.\"\n\nSheree cocked her head to one side. \"I'd like to see that too, Les.\" She raised one eyebrow. \"I bet you look awful good in a tux with all those medals.\" She made a throaty growl.\n\nDelaney winced dramatically. \"Ugh! Too much. Must. Leave. Now.\" \n\n\"Nope.\" Tara laughed, then pointed right at Delaney. \"As a sister and a bridesmaid, you're stuck with this. Dad can leave if he wants.\" She took a breath and looked at Sheree. \"We'd rather you stayed to help. Mother isn't doing us much good; she wants to make it the social event of the season, but she isn't much for practical advice.\"\n\nTiffany sat up straighter. \"Besides, you're going to be part of this too.\"\n\nSheree held her hand up. \"I'm not really...\"\n\n\"As far as we're concerned, you are. You sit right next to Dad and Mother in the front row.\" Tiffany set her jaw.\n\nI watched a rush of emotions flash across Sheree's face, finally settling on a lopsided smile. \"I don't know what to say.\"\n\n\"You belong there.\" Tiffany said it with enough determination that I strongly suspected it had been a point of \"discussion\" with Charlotte.\n\nTara gave her a sardonic smirk. \"Besides, that puts you next to Dad, where you can keep him from throttling her when she says something stupid.\"\n\n\"Definitely time to leave.\" I stood up and gave Delaney a sad look. \"We'll have tacos tomorrow... if you survive.\"\n\n\"I hate you.\"\n\n*****\n\nAnother One of Those Days\n\n*****\n\nDelaney managed to survive the wedding planning session, even if she was obviously a bit worse for the wear. She only answered in grunts until mid-morning when I reminded her we were having tacos for lunch, then I at least got two-word answers.\n\nMooky looked around the place before he handed us our order. \"A guy who was at the rave knows a guy who heard the name Caleb tossed around. I know it isn't much...\"\n\n\"It's more than we knew.\" I thought about the sheriff's warning. \"Back off, though, I think somebody is taking this seriously. Somebody did a drive-by last week, fired some shots into the yard.\"\n\n\"I heard there was some kind of shooting thing that happened in town, but I didn't know what.\" He stared at me with wide eyes. \"Dude...you're not going to...like, you know...go on a rampage, are you?\"\n\n\"Just be careful. Sheriff wants us to let up.\"\n\nDelaney made a sour face. \"We aren't even allowed to tear off mattress tags.\"\n\nMooky blinked, even more confused than usual. \"What does that even mean?\"\n\n\"It means he's going to be looking over our shoulder, and we have to stop doing anything.\"\n\n\"For now,\" Delaney smirked.\n\n\"For now.\" I agreed.\n\n\"So what are you going to do?\"\n\n\"It means we're going to go pick up a wrecked bus and take it to the yard. You just keep your head down.\"\n\nHe nodded. \n\n*****\n\nTwo hours later, loaded up with a half-crushed school bus, I started to push past a slow-moving Cadillac.\n\nDelaney peered down into the Caddy. \"Ten miles under the speed limit. I'm not even sure she can see over the dash. And her glasses are like a foot thick.\"\n\n\"We'll just ease on ahead of her, so she doesn't have to worry about us.\"\n\nDelaney gave me a sidelong glance. \"She probably shouldn't be driving.\"\n\n\"Everybody gets older. The alternative really sucks.\"\n\nShe slid all the way back into her seat. \"Yeah, I guess.\"\n\n\"Getting older is tough.\" I glanced in the mirror and saw a Chrysler 300 coming up. \"At least she can still get around.\"\n\nI could see that sink in. She shifted and gave a slight frown. \"Yeah. Mooky said he goes up to Friendship Village because the people there can't really go anywhere.\" \n\nShe shrugged. \"Let her drive.\" \n\nAs we passed the Sunday driver, the Chrysler crowded behind us followed, then slipped into the right lane to push past impatiently. \n\nDelaney glanced in the mirror. \"What a dick.\"\n\n\"Screw it; he can sweep for cops ahead of us.\" \n\nIt was only luck that I glanced over to see an arm out the window, holding a large revolver.\n\n\"Get down. Gun. Gun. Gun!\" I hunched down myself.\n\nThe shots spawned insanely loud clangs, a giant steel bell that rang in a tight, rapid rhythm as Delaney curled up into a tight ball.\n\nI pushed right as fast as I could risk with the load, hoping to catch him and shove him off the road into the fields. \n\nThe metallic clanging suddenly stopped. That was six rounds. I started to reach for my 1911 behind Delaney's seat. He'd have to switch guns or reload. One-handed. While driving. Even with a speed loader a revolver would be a bitch to reload that way.\n\nThe Chrysler was suddenly past us as I tried to push him off the road. The rollback just wasn't agile enough to pull it off. Blue and white strobes lit up behind us as a state trooper closed up. \n\nWe watched the big Chrysler power off into the distance. \n\n\"What the fuck was he shooting?\" Delaney looked at me wide-eyed.\n\n\"A magnum of some kind, probably a .357.\"\n\n\"It sounded like a damn cannon.\"\n\n\"Pretty much. Basically a light rifle round in a handgun.\" I waited for the trooper to go after the M300, but he stayed on us instead.\n\n\"Holy fuck.\" She took a few deep breaths. \"He fired six shots, right?\"\n\n\"Nearly all of the magnums are revolvers, and they usually only carry five or six rounds.\"\n\n\"Thank God. Shit.\" She shook her head and studied the door.\n\nI let the rollback slow to a stop and watched the state trooper in the mirror as he called us in. After a longer wait than usual, he came on up. \"Anyone hit?\"\n\n\"No...I...\"\n\n\"License and registration, sir.\"\n\nI could hear the bureaucracy in his voice. I handed them over. \"I have a handgun behind the passenger seat. I have a permit for it.\"\n\n\"Then let's go ahead and exit the vehicle, please.\"\n\nAfter the awkward dance of getting us both out of the truck and away from the gun, he finished looking over the papers, including my permit. \"Why the gun?\"\n\n\"Repos don't always go well.\"\n\nHe looked up at the passenger door. \"Apparently not.\"\n\n\"We haven't done a repo in a long time.\"\n\nHe looked at Delaney. \"You have any ID?\"\n\nShe gave him a decidedly annoyed look. \"I have a receipt from Casa del Taco Grande.\"\n\n\"That's not really an ID.\"\n\n\"Call them; they'll know who I am, trust me.\" I caught her eye, and she sighed. \"I do have my learner's permit.\" She handed it over. No point in buying too much trouble.\n\nHe grunted, and we all turned to stare at the door for a long moment. I didn't like the way the bullets were patterned. They weren't random or too tightly grouped. The holes were spaced in a way that should have hit anyone in the passenger seat. \n\nThe trooper pulled a pen out and tapped it into one of the holes, coming up short against the boiler plate armor. \"What's this door made of?\"\n\n\"We heard about a repo man getting killed in a drive-by after a pickup, so I mounted one-inch boiler plate in the doors. Pain in the ass to do it.\"\n\nHe didn't look like he was quite buying that, but he let it slide. \"You get a look at the driver?\"\n\n\"Just saw an arm and the gun in the mirror. Big silver revolver. The driver did the shooting.\"\n\nHe looked at Delaney. \"Did you get a look at the shooter?\"\n\nShe made a 'snerk' sound. \"Really?\" She looked up at the sky. \"Why the fuck didn't I think of that? It'd be a fucking awesome idea to stick my head up and bat my eyelashes at some asshole shooting at me with a FUCKING CANNON from SIX FEET AWAY. Jesus, what the hell was I thinking?\" She smacked the side of her head.\n\nI nodded in agreement. \"That does sound a little obvious, doesn't it?\"",
        "\"Yah think?\" She turned to the trooper. \"So, what the fuck did you stop us for? You should be chasing the guy doing the shooting.\" Delaney shook her head slowly in contempt.\n\n\"I needed to see if anyone was hurt. I radioed the car in.\"\n\nShe gave an exasperated breath. \"Well, at least he'll get a good eight hours of sleep and a healthy breakfast before anyone starts looking.\"\n\nThe trooper looked at Delaney with a jaundiced eye. \"You know, you may not be under arrest, but you still do have the right to remain silent. How about exercising that right for me?\"\n\nDelaney and I looked at each other and broke out laughing.\n\nEven as we laughed, I felt the ice water running though me. I couldn't help thinking that if we hadn't been too lazy to remove the boiler plate in the door, Delaney would have been dead. \n\nThe trooper's radio pinged, and he had a quiet, terse conversation with the other end before turning towards us. \"Hope you didn't have any plans today.\"\n\n*****\n\nAgents and Interviews\n\n*****\n\nDelaney glared straight at the plainclothes State Police Senior Special Agent. After two hours of bureaucratic bullshit, she was getting more than a little testy. I would have probably been more annoyed myself, but I had the amusement of watching the agent trying to figure out how to deal with Delaney. \n\nSome of his training had been specific to dealing with minors, and I had to choke down laughter every time he tried to appeal to her as if she was a normal teenage girl.\n\nHe was one of those clean, button-up types \u2014 one of those quarterback and prom-king types that seem to pop up in high-level law enforcement. The exact kind of guy that instantly grated on Delaney's nerves. He smiled in what I think he meant to be a friendly manner but just managed to look condescending. \"Just relax. We'll keep you safe.\"\n\nDelaney's face twitched, then settled, and I was impressed with her self-control. For just about two seconds. \"Safe?\" She snorted. \"Safe? With you idiots? Seriously? Holy shit. I should just throw myself off the nearest roof.\"\n\nHe looked over at me. \"Do you think you could...\"\n\nI echoed her snort and shook my head. \"No...no. Keep going. You're doing great. Really. I think she's warming up to you.\" I gave him what I hoped was an encouraging two thumbs up.\n\nThe door popped open, and Tara walked in, gripping her briefcase like a weapon.\n\nThe agent looked up. \"I'm afraid you can't be...\"\n\n\"Tara Dawes. I'm here as Mister and Miss Dawes' attorney.\"\n\nHe blinked as she handed him her card. \"I'm Senior Special Agent Benjamin Stratton.\" He glanced at the card. \"Miss...Dawes?\"\n\nShe gave a terse smile. \"Yes, we're related, and yes, it is perfectly legal.\"\n\n\"Normally, victims don't need attorneys present.\"\n\n\"Nothing about these two is normal.\" Tara glanced at me, then Delaney.\n\nHe looked at her card. \"Lodestone? We had a briefing on your organization. High-powered charity that fights human trafficking, right? What are you doing here?\"\n\n\"That's my day job. This has nothing to do with that. The card is just so you have my contact information. These two are eternally ongoing pro-bono.\"\n\n\"We've been at this for two hours and my patience is starting to wear a little thin. They aren't exactly cooperative.\" \n\nTara choked out a laugh and shook her head. \"Only two hours? They haven't even gotten started. Just wait.\" She looked over at me with a raised eyebrow, an unspoken question.\n\n\"We've told him everything we know. We just don't know shit. 2008 Chrysler M300 in dark blue. No plates that I could see. Revolver. Magnum. I'm guessing a .357, but they should have the slugs by now. Six shots into Delaney's door from about four feet away. That's it. No matter how many times they ask, that's it. Maybe if they rolled up the shooter instead of the victims, we'd know a fuck-load more.\"\n\nStratton sighed. \"I'm more interested in why.\"\n\n\"If your people had the sense to go after the fucker, maybe we'd know why.\" Delaney outright sneered at him.\n\nHis mouth tightened into a grim line. \"I should probably separate these two...\"\n\nTara cut him off and held up an open hand. \"Don't. Just don't go down that road. She has to have a guardian present. Besides, the last time a special agent separated these two, Delaney broke his nose, stole his car and crushed it in a car crusher. I think it took her less than fifteen minutes. If you keep them together, she kind of behaves.\" She gave Delaney a withering stare that had absolutely no impact. \"Kind of.\"\n\nThe special agent stopped and slowly looked us over with dawning suspicion. \"Wait. These two are part of Stein's fucking mess?\"\n\n\"Not anymore.\" I looked him dead in the eye. \"Stein doesn't have a mess anymore.\" \n\nDelaney cocked her head to one side. \"Last time I saw him, he was pretty fucking dead. Big fucking chunk of his brain was blown out.\"\n\nI watched as he thought it through. \"That explains why you had boilerplate armor in the doors.\"\n\n\"We're kind of cautious these days.\"\n\n\"You think this shooting is related to Stein?\"\n\n\"If it is, I don't know how.\"\n\nHe held a tablet up and looked at it. \"I never really bought into that whole 'Stein lost it and became obsessed with a kid' story. He was a jerk, but he wasn't nuts. I could see him doing shit for money though...\" \n\nHe fell silent for a moment and scanned whatever was on his tablet.\n\nDelaney's smile twitched darkly. She suddenly stood up and began checking her pockets frantically. \n\nI watched her for a second. Asking was a bad idea, but not asking would probably be worse. \"What the fuck are you are doing?\"\n\nShe looked up at me. \"You have any Preparation H? I'm all out. It's supposed to shrink assholes, right?\" She gestured at the Special Agent. \"Make Benjy here disappear.\"\n\n\"It doesn't work that way...\" I shook my head. \n\nTara looked like a migraine was starting to get a grip on her.\n\nThe agent leaned back, and I could see him recalculating. Delaney's deliberate jibe hadn't shifted him off target at all. I wondered if we were underestimating him. \"Maybe I should put you in protective custody until we find out what's going on. Just for a few days.\"\n\nTara closed her eyes and touched her forehead. \"I can't even begin to tell you what a stupid idea that is.\"\n\nI raised an eyebrow at her. \"Twenty bucks says wherever they try to hold Thugbunny will be burnt to the ground inside fifteen hours.\"\n\nShe rolled her eyes. \"And you'll be sitting outside, waiting to pick her up.\"\n\nI held my hands up. \"Hey, somebody has to; she doesn't have a license yet. You can't let kids run wild. That's just bad parenting.\"\n\nAnnoyed, the agent studied his tablet for a moment. \"State keeps a file on everyone who ends up in jail. Lester Dawes, retired master sergeant, US Army, Special Forces, 18 Delta. That's a medic, isn't it?\"\n\nI nodded.\n\n\"That's a lot of medals. And a lot of blank spaces in your official records.\"\n\n\"Bureaucrats. You know how it is; they lose everything.\" \n\nHe gave me a jaundiced look. \"A lot of those blank spaces are near the end of your career. I think the term is 'redacted,' isn't it?\"\n\nI sighed. \"You really don't want to go there.\"\n\n\"I don't?\"\n\n\"You don't. It has nothing to do with this.\"\n\n\"If you worked with us, this would be a lot easier.\"\n\n\"If I knew anything else, I'd tell you. Maybe. Delaney's right; you guys haven't exactly inspired confidence.\"\n\nThe agent scowled. \"None of you...\" He looked at Tara. \"None of you seem to be taking this very seriously. You need to focus.\"\n\nI leaned forward. \"Oh, we're focused. Believe me. We're focused.\"\n\nDelaney smiled, showing way too many teeth. \"Oh yeah. We may be the short-bus kids, but we're focused as fuck.\"\n\nHe looked between us for a long moment, and I could see him fitting more pieces together. \"Fuck.\"\n\nTara nodded grimly. \"Only word for it.\"\n\n*****\n\nBy the time we got home, explained what happened, got cleaned up and fixed a late dinner, Delaney's anger and adrenaline rush had worn off, and she fell asleep on the couch.\n\nSheree watched her for a moment. \"I'll stop askin' questions. It's not worth it, and Shelly's probably lying anyway, even if I thought she wasn't.\"\n\n\"Did she ever tell you why she was at the hospital?\"\n\n\"She said she was bringin' Lucy's purse to her.\"\n\n\"Was Lucy one of the overdose cases?\"\n\nShe shook her head. \"No, Lucy had an operation, a back thing, but while she was in, her boyfriend ran off to California with a new girl. Shelly said she went to pick up Lucy's purse because she needed her Medicare card. That's why she was in line at the desk.\"\n\nI paused, thinking about it. \"Lucy an addict?\"\n\n\"She is.\"\n\n\"She still in the hospital?\"\n\n\"Yeah, she is.\"\n\n\"Call the sheriff in the morning. Fentanyl works through skin contact. If Shelly reached into Lucy's purse and she had an open bag in there, Shelly could have touched it and gotten enough to overdose. Especially if she's being honest about how long it's been since she's used.\"\n\nThere was a slight, hopeful sound in Sheree's voice. \"You really think so?\"\n\n\"It's possible, but you'll need the sheriff to find it if you want it to swing with the judge.\"\n\n\"Shelly will be pissed if I dime Lucy out... but maybe it will keep her out of jail.\"\n\n\"That should count for something.\"\n\nSheree gave a resigned sigh. \"That might work.\" She obviously didn't think Shelly would see it that way. \"You still shipping the cars out tomorrow?\"\n\n\"If everything goes well. The driver's a special K2 courier this time.\"\n\n\"I'd think so.\" She smiled. \"Pretty expensive cars this time.\"\n\n\"Everything is sealed up and ready to go. Anything at all goes wrong; the driver just doesn't show. We can trust Kurt.\"\n\n\"We already do. Letting Delaney go out there takes a lot more trust than shipping a few...cars.\"\n\n\"It does.\" I thought for a moment. \"I need to talk to Kurt, find out for sure what his plans are.\"\n\nSheree nodded. \n\n*****\n\nPay the Man\n\n*****\n\nThe truck driver glanced over the beater cars we'd loaded up. \"Good enough for me. Kurt says you wouldn't short him.\"\n\n\"It's generally known to be unhealthy to rip off Kurt.\"\n\nShe gave a soft sardonic laugh. \"That's funny. The usual payment will go to your bank.\" She pulled out two oil-stained Army green canvas tool bags. \"The extra. Five thousand per block. Used bills. You need to count the money?\"\n\n\"I trust him.\"\n\n\"Yeah. Besides, Kurt said it'd be a bad idea to rip you off.\" She looked over to where Delaney was perched on her bumper, watching intently. \"He said that means either one of you.\"\n\nDelaney frowned. \"Kurt's taking all the fun out of things.\"\n\nThe driver chuckled. \"He wanted me to ask if you're interested in some part-time work. Just occasional stuff.\"\n\nI shook my head. \"I've got my hands full.\"\n\n\"He said it'd be legal...\"\n\nDelaney choked out a laugh. \"Yeah, 'cause that's what we worry about.\"\n\nI cut her off. \"Tell him I said thanks, but I'm taking a pass on it.\"\n\n\"For now, right? I'll let him know. He figured you'd say that, but there's a secure cell phone in the first bag. Just hit the K2 icon if you change your mind.\" She pulled a cooler out of her truck and handed it to Delaney. \"Katie sent this for you; she's worried you can't get it here.\"\n\nDelaney opened the cooler, and her eyes lit with religious fervor. \"She sent carne asada and smoked brisket!\" She continued to dig deeper into the cooler.\n\nThe truck driver raised an eyebrow at me. I gave a helpless gesture. \"It's a bribe.\" \n\n\"And it's working! Steak!\" Delaney popped back up holding a packet of vacuum-packed inch-thick steaks.\n\nBy the time the driver pulled out, Delaney had repacked the food and was watching it more intently than the money. I had no doubt the driver was going to relate the entire thing to Katie word for word. \n\nDelaney interrupted my thoughts. \"Tomorrow, we're eating the carne asada!\"\n\n\"You need to put all that in the freezer in the office until we head home. \n\nShe gave a short, serious nod. \"I'm not taking chances with any of this.\"\n\nBy the time she bounced back down the stairs, shooting watchful looks back towards her treasure, I had the rollback pulled around and started prepping it.\n\nDelaney sprang up onto the back of the rollback easily. She'd had to climb up slowly at first, but now she did it with the ease of a pirate climbing the rigging. \n\nOr a Soldier mounting up.\n\nIt suddenly dawned on me that the driver might have meant Delaney when she asked about occasional work.\n\nI really needed to talk to Kurt.\n\nEven as I reflected on that, my own cell phone rang. Charlotte didn't even bother to say \"hello\" when I picked up her call. \"Lester. I just wanted to remind you to dig out your old medals and polish them up.\" \n\n\"I already pulled them out, Charli. They're gold plated; they don't need to be polished.\"\n\nShe gave an annoyed sigh and paused for just a second. \"Oh, yes, the event planner needs a retainer. Today.\" \n\nI glared at the phone. \"And you were going to tell me this when?\"\n\n\"Don't embarrass me; the man has an office at the Plaza. Deluca Events. Just pay him, Lester.\"\n\n\"How much?\"\n\n\"I'm sure you can afford it.\" I could hear the smug attitude in her voice. Before I could answer, she hung up.\n\nA grease-covered Delaney looked up from the back of the rollback, where she'd been listening while coiling chain into toolboxes. She grinned. \"We going to go pay him?\"\n\nI'd thought of being nice about it to save Charlotte some grief, but the hell with that. \"Yeah. Let's do that. Right now.\"\n\nFifty minutes later, we parked the wrecker directly in front of the Plaza entrance and clomped into the office of Marcus DeLuca, Event Consultant. \n\nThe secretary - no doubt an aspiring model, bone-thin and artificial - glanced at us dismissively, noting the greasy coveralls and crew caps with disdain. \"All deliveries are through the Plaza receiving office.\" \n\nShe went right back doing whatever it was she had been doing on her computer when we arrived.\n\nI leaned over her desk. \"We're here to see Marcus DeLuca about the Davidson-Dawes wedding.\"\n\n\"Mr. DeLuca is not available at the moment.\" She didn't even look up.\n\nI grimaced over at Delaney. \"You'd think they'd want their money, wouldn't you?\"\n\nShe shrugged. \"Maybe it's a charity.\" \n\nShe looked around, then frowned. \"Doesn't really look like one. Wait...don't most charities give away cookies and coffee and stuff?\" \n\nShe leaned over the desk. \"You have any cookies back there, do you?\" She eyed the skinny secretary. \"Probably not, huh?\"\n\nThe secretary gave us a cool look and buzzed the intercom. \"Mr. DeLuca, you have...visitors...related to the Davidson-Dawes wedding.\"\n\nA short moment later, a tall thin older man in a pale grey silk suit and lavender tie walked smoothly out to the secretary's desk, a plastic smile on his face. I had to give him points for poise; he didn't even blink, just read my name patch. \"Mr. Dawes? Charlotte informed me that you have the fiduciary responsibility for this event.\"\n\nDelaney looked at me with disbelief. \"Really? What the hell does that...?\"\n\n\"He means I have the money.\"\n\n\"Oh...\" She rolled her eyes. \"Why didn't he just...never mind.\"\n\nI shook my head and turned toward him. \"What's the damage?\"\n\n\"I hate to be so crude, but I am afraid the retainer is five thousand dollars. If you need time to arrange for financing...\"\n\n\"Delaney, pay the man.\"\n\nShe thumped the stained green canvas tool bag onto the secretary's desk and unzipped it. \"Five grand, right?\"\n\n\"Right.\" I nodded to her.\n\nShe pulled out one of the Chinese-newspaper-wrapped bundles and dropped it on the desk. \"Five thou.\"\n\nMarcus DeLuca did blink that time, then raised one eyebrow. I held my hand up. \"Count it; we won't be insulted.\"\n\nHe carefully picked it up and hefted the block of cash slowly, studying it. \"This feels correct.\"\n\nDelaney pulled three more blocks out, one at a time and lined them up on the desk, locking her eyes on his. \"We really want Tiffany's wedding to be perfect.\"\n\nAn oddly calm smile crept onto his features. \"I believe we can make that happen. May I assume you do not wish to burden Mrs. Morris with any financial details?\"\n\n\"You assume right. When you need more, and I am sure you will, you call us direct.\" I handed him my business card.\n\nHe nodded slowly. \"I've worked with...discreet customers before. We handled the Anzorov wedding.\"\n\nI glanced down at Delaney. \"Chechen Mafia.\"\n\nShe curled her lip in disdain. \"Those pussies?\" \n\nI looked at Marcus. \"Teenagers. They're hard to impress.\"\n\n\"Impressed? They leave survivors who can testify. That's amateur shit there.\" Delaney gave an exasperated sigh.\n\n\"See what I mean.\" I gave him a slight shrug.\n\nHe gave a hint of a real smile. \"I wasn't always a wedding planner, Mr. Dawes. I was born in Algeria, a Pied-Noir. I recognize your type, if not you. I also recognize this particular packaging.\" \n\nHe touched one of the blocks of cash. \"I doubt the young lady is exaggerating. Rest assured, Tiffany's wedding will be flawless.\" His smile broadened, and he gave Delaney a nod. \"As will yours when you choose to get married.\"\n\nDelaney's eyes widened in horror. \"That will be a long fucking way off.\" \n\n\"Then I will make sure that Tiffany's event is perfect so that you'll remember me when that time comes, Miss Dawes.\" He gave her a slight, very formal bow.\n\nShe blinked and tilted her head slightly, then nodded once. Very serious. \"I'm sure I will, Mr. DeLuca.\"\n\n*****\n\nSheree listened to our tale with amusement. \"Sounds like I should keep this Mr. DeLuca's number on hand, ya know?\"\n\nWincing, Delaney groaned. \"That'll be, like, a hundred years.\"\n\n\"I can wait.\" Sheree gave a patient smile. \n\nDelaney shook her head, rolled her eyes and slouched back into her chair.\n\nI chuckled. \"We put the rest of the money and the cell phone in the safe deposit box.\"\n\nSheree nodded. She'd never really gotten over being a little disconcerted that I'd insisted she be on the access list to the safe deposit box. \"So long as it's safe. Don't forget. Delaney has to be at the Learning Center by nine o'clock tomorrow. And don't forget her project.\" \n\n\"I did too much work on that.\" Delaney grinned. She had done a diorama of Celtic warriors and had spent way too much time attached little severed head trophies to their chariots.\n\nSheree chuckled lifting a box of ribbons and other decorations up to the table. \"I know Delaney would rather help get all this wedding stuff figured out, but...\"\n\n\"Ugh!\" Delaney groaned from where she was lying across the back of the couch. \"Flowers. And ribbons...Besides...\"\n\n\"Besides, there's the pizza at the Learning Center.\" I shot a glance at her.\n\n\"...There is the pizza.\" She touched her heart while doing her best to flutter her eyelashes, not exactly her best skill. \n\n\"You know, that's cheap cafeteria pizza you could get in any school.\"\n\n\"It's amazing.\"\n\nSheree laughed softly, and I gave up the argument. Delaney's idea of fine cuisine didn't usually have French names, unless you counted French fries.\n\n\"No time to pick anything on the way to the Learning Center or on the way back. We'll take Sally out and run her for a bit.\"\n\nDelaney grinned. She knew what that meant.\n\n*****\n\nAnother Fine Day\n\n*****\n\n\"Are we taking Eagle Pass?\" Delaney gave an expectant and somewhat vicious smile. She loved the hairpin turns and was looking forward to the day I'd let her take Sally down the twisting unimproved rock road with its sheer drops and complete lack of guardrails.\n\n\"Why not?\" I pushed Sally harder. We were on the back roads, and I knew there were never any cops, and damn little traffic.\n\nDelaney grinned.\n\nShe was almost good enough. I worried more about her willingness to take chances than her actual driving skill. Delaney drove better than most of the pros I'd seen; she had amazing reflexes, and a natural rapport with the machines. Maybe because of that, she was always willing to push them, and the odds, just a little bit more. And sometimes that just isn't a good plan. Gravity is a cold and unforgiving bitch, and until I was convinced Delaney had that in the front of her head where it belonged, she wasn't going to fly Eagle Pass. ",
        "She wasn't pushing it though, some part of her at least seemed to sense that she wasn't quite ready. Besides, she was in a pretty good mood.\n\nThe Learning Center had a way of doing that to her. It had taken a long time, but she had really warmed to the staff, who managed to be both helpful, and probably more importantly, not condescending. They'd been really impressed with her bloody little diorama, which had really thrilled her. \n\nOr maybe it was that cheap pizza and the ice cream she got to eat for lunch. \n\nProbably the pizza.\n\nSomething in the rear-view mirror caught my attention. The something was moving up, and moving up fast.\n\nI studied the rapidly growing red dot for a moment, then glanced at the speedometer. Over 90 miles per hour, and the red car was gaining on us like we were parked.\n\n\"We have a problem.\"\n\nDelaney shifted her eyes to look into her mirror instantly. \"Holy shit. How fast are they going?\"\n\n\"Way faster than we can.\"\n\nI hit the first turn to the pass, vaguely hoping they'd go on by. \n\nThey didn't; I caught the predatory outline of a red late-model widebody Charger as it turned to follow us. \n\nDelaney's voice was cold and measured as she studied the mirrors. \"All windows just went down. I'm pretty sure I can see rifle barrels out of both rear windows.\"\n\nHer eyesight was better than mine, and she didn't have to split her attention to keep us on the road.\n\nI glanced into the mirror for a moment. \"Damnit. Air scoop is wider than standard. It's a Hellcat engine.\"\n\nDelaney made a sour face. \"Shit. I was hoping I was wrong about that.\"\n\n\"Yeah.\" Even with the Coyote 5.0 engine I'd put in her, Sally was way out of her league. I started to push her through the turns, and the Charger followed smoothly. \n\nTwo faint shots sounded from the Charger; not hits, but I had a feeling they were way too damn close given the speed and the turns.\n\nThere was no way Sally could outrun the Charger. That Hellcat engine was insanely powerful, and the fucking driver clearly had his head in the game. He was obviously a pro. I was the better driver, and with all her suspension upgrades, Sally was flat-out better on the curves, so I was gaining on the turns. I knew the road better too, but I was losing too much ground every goddamn time we hit a straightaway.\n\nWorse yet, hitting a moving car from a moving car is damn hard, but the gunman hanging out the window knew what the hell he was doing. Sooner or later, he would figure out that I had run-flat tires on Sally and switch to riddling us instead. Delaney sat in near-stony silence, looking at her mirrors to track where they were.\n\n\"We can't lose them, can we?\"\n\n\"Not a fucking chance.\"\n\nWe were just about out of the turns, and then we'd be running the long gravel straightaway that led to the narrow bridge over Eagle River valley. I checked the 1911 under the dash, thumbing the safety off. It was a slim chance, but if I let them disable the car, we'd have no chance at all. Four guys, apparently pros, at least two that had long guns against a single .45 and whatever rocks Delaney could scoop up wasn't likely to be even remotely survivable on our end.\n\nDelaney saw me ready the .45 and narrowed her eyes. \"You're about to do something crazy, aren't you?\"\n\n\"Oh yeah.\" I nodded and tried to push ahead further as we hit the last series of hairpin turns, dropping down to the valley. I needed some space to do this, and I had to get it in the turns where I still had the advantage. \"Hang on, sugar. This is going to be really stupid.\"\n\nI hit the flats with Sally floored, but I dumped speed and downshifted as we closed with the narrow bridge, then smashed the clutch and yanked the handbrake. I gave the wheel a twitch to break traction with the road, then pulled hard left. Sally spun until she was ass-end toward the bridge. I could hear the blast of the Hellcat engine as the Charger howled out of the turns off the mountain. Just as I dropped the handbrake and jammed Sally into reverse. Delaney snarled, \"Fuck!\" and laid her seat all the way back. She was making herself less of a target for the gunman in the rapidly approaching monster. I almost smiled at that. We were probably both about to get killed, but damn if I wasn't proud as hell of her for staying frosty.\n\nI needed more fucking hands. I snatched up the 1911 and switched it to my left hand, juggling the steering wheel.\n\nOff-hand shooting sucks, but it was better than nothing. I levelled the gun out the window and placed the shots as accurately as I could. The gunman pulled himself tight against the car when he saw what I was doing, but he was still holding it together and began to adjust his aim. A round snapped through the middle of our windshield. \n\nI pushed the gas to the floor, accelerating as fast as possible in reverse to lessen the impact of the crash when they caught up. He'd put on too much speed, and wouldn't be able to stop in time. If they rammed us, it'd probably disable both cars and maybe, just maybe, the wrecks would block the bridge and I could hold them long enough for Delaney to get into the tree line on the other side of the river. It sucked, but...\n\nDelaney suddenly sat up, twisting the release on her harness and dragging something across her lap. I didn't have a hand free to push her back down, and for a bizarre moment, I thought she was trying to climb out the window. A fraction of a second later, she was kneeling on the seat and leaning out the window, slamming an AUG down on top of the mirror and bracing the barrel grip against the mirror to stabilize the gun. The AUG's insanely loud chatter overwhelmed the roar of both engines for a second. The first two armor-piercing rounds hit a little low, into the engine block, but as the Charger closed to within less than a half dozen yards, the rest of the magazine seemed to go right through the lower half of the windshield, mostly through the driver's side.\n\nI'm sure there were a few misses in the storm of armor-piecing rounds. There had to have been. But the driver must have been hit more than a few times, and probably everyone in the car had; the Charger veered out of control, jumped off the road, shot past us and flew almost gracefully off the edge of the cliff. It rather ungracefully slammed into the rock on the other side before dropping the seventy-five feet down into the deep river.\n\nI let Sally slow to a stop as we reached the other end of the bridge.\n\nDelaney melted back into her seat; the empty AUG pointing straight up. She stared blankly ahead, fighting to catch her breath. \"Fu...fuck 'em if they can't take a joke...right?\" There was just a little bit of kid in her voice, a pleading, almost desperate sound.\n\nI put my arm over her shoulders as best I could with the console between us. \"Fuck 'em.\"\n\nDelaney suddenly yanked free and tore at her collar. \"Fuckfuckfuckfuck.\"\n\nI looked frantically for blood just as she pulled her hand out of her collar and threw a shell casing down on the floorboard. \"Fuck. That burned.\"\n\nShe yanked her collar down, and I could see the hot brass burn on her neck. \n\nWe sat there for a long moment. \"You learn that from video games?\"\n\nShe nodded shakily. \"And...you know, summer camp. Kurt said that since all us girls are small, we should stabilize long guns against something whenever we can. Especially on full auto.\"\n\n\"Good advice. Obviously.\" I really, really needed to talk to Kurt and find out just what the fuck was going on in Texas. I saw movement at the other end of the valley.\n\nDelaney squinted. \"Is that...?\"\n\n\"Yeah. Another Charger.\" \n\nNo way that was a coincidence. Delaney leaned back and started feeling around the floorboard while I dropped the magazine from the 1911 and slammed another home. She sat up, holding up another mag for the AUG and fumbled to replace the empty. \n\nJust as I heard the decisive click of the AUG magazine locking in, the distant driver calmly and slowly turned the flat black car around and headed back up the hairpins.\n\n\"Fuck. There are more of these assholes?\"\n\nI nodded. \"Looks like it. But there aren't as many as there were a few minutes ago.\"\n\nDelaney suddenly trembled, shoved her door open and leaned out, hurling her breakfast onto the shoulder of the road.\n\nShe sat bent over, shaking, for a couple minutes, then sat up, wiped her mouth with her bandana, closed the door and stared blankly out the windshield. \"I think I need a soda.\"\n\n\"And maybe a hot dog?\" We needed to check on Sheree and make sure she knew what happened. \n\nShe brightened, although it was obviously forced. \"Hot dogs.\" We both knew what we were doing, steadying ourselves and getting our nerves back to as close to normal as we could.\n\n\"Sure, we can pick some up and see Sheree. Let's put Sally up and get the rollback first, though, okay?\"\n\nShe looked up at the bullet holes in the windshield and nodded. \"Yeah. I have no idea how we would explain this shit to the sheriff.\"\n\n\"How the fuck can we explain it when we haven't got a clue what is going on.\"\n\nI turned Sally back around, and Delaney pulled her seat upright, staring forward unblinking, the AUG across her lap.\n\nI glanced over at her. \"Let's go ahead and put that thing back out of sight, okay? We don't want to give any state troopers we pass a stroke. Just put it where you can reach it if you have to.\"\n\nShe finally blinked. \"Oh. Yeah.\" She pushed it back onto the floorboard behind me, then covered it back up with her book bag. \"I know I shouldn't have taken it out of the hide, but...I just...I don't know...I just woke up with a really bad feeling this morning. I didn't want you to think I was...freaking out for no reason.\"\n\nI thought about it for a moment. \"Yeah, well. Next time, let me know you put an illegal full-auto weapon in the car I'm driving. But I'm damn glad you brought it.\"\n\nShe nodded a bit manically. \"Me too...\" Her face fell. \"Ugh. We're gonna have to put it in the car crusher, aren't we?\"\n\n\"Yep. And my .45. Just in case. If anyone happens to pull some dead bodies out of the river and finds one of our bullets, we don't need to have the matching weapon lying around.\"\n\nShe looked back at the AUG. \"Thirty thousand dollars, right?\"\n\nI nodded.\n\n\"Shit. I really like it too.\"\n\n\"What do you think bail would run on a homicide charge? Way over thirty grand. It did the job. It's a tool. It did what you needed it to do. Besides, we have a few more.\" I paused. \"Maybe, with the way things are going, we need to put good hides on the floor behind the seats, and maybe in the rollback and the wrecker. Maybe we'll keep a couple legal folding-stock long guns of some kind in the hides. You know, just in case.\"\n\nDelaney looked at me suspiciously, then gave a sinister smile. \"You're going to let 'Little Miss Mayhem' play with guns?\"\n\n\"Jesus, not if you keep smiling like that. That's just fucking creepy.\" I snorted. \n\n*****\n\n\"Do you think it has something to do with the drug pushers?\" Sheree kept one eye on the front door to the Quickmart as we ate.\n\n\"I dunno. Feels wrong. Those cars are sixty-five thousand or more apiece. I suspect that's more than these low-level gangs ever move. And these guys were real pros. Real good.\"\n\nSheree gave Delaney a wicked smile. \"Just not good enough, huh, baby?\"\n\nWhatever Sheree thought about it, she'd long ago decided that anything that had to be done to protect Delaney was acceptable. Far beyond that, she was making it clear to Delaney that she'd done the right thing.\n\nDelaney finished the last of her third hot dog. She'd replaced her breakfast and then some. Her nerves had evened out. \"Nope. Not near...\" She stopped staring at the table. \"I think, maybe, they were older too.\"\n\nSheree looked at me. \"Well?\"\n\nI shook my head. \"I don't know. I was too busy trying to drive and shoot to get a good look. But, yeah, maybe.\"\n\nDelaney stared at her plate. \"I couldn't see the driver or the others on your side, but the guy shooting on my side...he was like, you know, your age.\"\n\nI chuckled. \"Ancient.\"\n\nDelaney nodded sagely. \n\n*****\n\nTwo days later, I watched Delaney wince as the compactor bit down on the rusted out hulk. \"This sucks.\"\n\n\"Better than prison, right?\"\n\nShe nodded, still watching the compacter reduce the last car to a block. We'd carefully ground out the serial numbers and disassembled the .45 and the AUG, scattering the metal parts into five separate cars before crushing them. There was no point in being careless, even if I was close to a hundred percent sure nobody was likely to look. I'd already put a new .45 in the rollback. \n\nShe sighed. \"I should have told you about the AUG. I can't even figure out why I did it or what I was thinking.\"\n\n\"Your instinct was right, even if you couldn't explain it. Just remember to tell me next time, okay?\" I glanced over at her. \n\nDelaney looked up at me. \"How could I do that? Know something without knowing it?\" \n\n\"You knew something was wrong, you saw or heard something, or maybe you just put things together in the back of your brain without knowing it. You've got good instincts; trust them. If it looks like an ambush or feels like a trap, go with your gut.\"\n\nI suspected that I knew exactly what was going on. Delaney was young, and if not \"book smart,\" she was clever and adaptable. So many people had tried to kill Delaney that she'd simply changed to her \"new normal.\" She'd been hunted enough that the wariness had settled into a background rhythm, a survival mechanism that simply ran all the time, watching everything. It wasn't perfect, couldn't ever be perfect, but watchfulness wasn't something she did any longer.\n\nIt was something she was. \n\nShe had the same reflexes as an animal that had been hunted and trapped but managed to get away. Delaney would constantly be looking for hunters, always shying away from traps. \n\nWe watched the process finish, and the giant maw of the crusher slowly opened up and locked. Delaney suddenly looked up at me. \"That reminds me, I'm hungry.\"\n\n\"You're always hungry. We just had breakfast.\"\n\n\"That was hours ago.\"\n\nI looked at my watch. \"It was an hour and fifteen minutes ago.\"\n\nShe leaned over and looked at my watch. \"Your watch has to be broken.\"\n\n\"We'll do the pickups first, then feed you before you starve to death.\"\n\nDelaney nodded earnestly. \"I could, you know.\"\n\n\"I'll try to make sure you survive; I've had enough excitement lately.\"\n\n*****\n\nNapalm Burrito Overdrive\n\n*****\n\n\"Tacos.\"\n\nI looked over at Delaney. \"Do you ever choose anything else?\"\n\n\"Well, we could go get Thai food.\"\n\n\"Not without Sheree. She'd never forgive us. Besides, we're practically in the Taco Grande parking lot already.\"\n\nDelaney looked thoughtful. \"Maybe we could all run up to get some Thai food on Sheree's birthday. We haven't done that in months.\" She looked down. \"She loves Thai food.\"\n\n\"You ready for her birthday?\"\n\nDelaney gave an uncharacteristically gentle smile. \"Yeah. I got everything all ready.\"\n\nShe'd refused to tell me just what she was planning, but she'd cleared out the \"swear jars\" a few weeks earlier. I'd settled on buying Sheree a nice purse, since she'd mentioned that the lining in hers was starting to tear. I had no idea what kind or how to pick one, so I just gave Tiffany cash and asked her to find one that Sheree would really like. She was thrilled to help and started talking a blue streak about it, finally telling me she needed to pick up two purses and two wallets so that Sheree would have the right purses. Apparently, according to Tiffany, she'd need one for every day and another one for going out. With matching wallets. I'd just given Tiffany more money; this purse thing was a whole language I didn't speak.\n\n\"I'm thinking of getting an El Diablo combo.\" Delaney stretched and patted what little belly she had. Her stomach rumbled in either hunger or protest at the thought of the oversized half-jalapeno, half-beef burrito with the obligatory crunchy taco.\n\n\"Extra Diablo?\"\n\nShe grinned. \"Do they make 'em any other way?\"\n\n\"That sounds good. May do that myself.\"\n\nI pulled into the Taco Grande lot and parked the rollback behind the store so it wouldn't block out ten economy car parking places. We were just late enough that the lunch rush had died off, but I wanted to be considerate. Or at least not get my tires slashed.\n\nDelaney clomped happily up the walk toward the side door.\n\nThe kid at the register made Mooky look like a damn brain surgeon. It took four tries to get the order straight. Mooky gave a half-wave from where he was working in the back. He cast a meaningful; glance toward a corner of the dining area where I could see the sheriff sitting at a table with one of his deputies; he lifted his soda in recognition but kept eating, - probably chuckling over the cashier's unintentional comedy routine. Of course, he wasn't on the wrong end of it. The deputy must have been new, and I didn't recognize him at all.\n\nAs we headed out the door towards the rollback, Delaney was ahead of me, looking in the bag. \"I got eight packets of Napalm sauce. That should be enough, right?\"\n\n\"I think so.\"\n\nShe damn near ran over Billy as he was coming up to the door. He blinked and grinned at us. \"Hey, Doc. Delaney. Y'all gettin' some grub?\"\n\nDelaney gave a wolfish smile. \"El Diablo combos.\"\n\nHe laughed. \"That's the good stuff right there. Get yerself a coupla packets a' that Napalm...\"\n\n\"Hey, Billy!\" A dark-haired guy called from the parking lot. \"Get me a...\"\n\nBilly's face shifted; he suddenly looking older and grimly unhappy. \"Goddammit, Marco.\" He said it softly, almost sadly. \n\nI blinked as I looked at the guy in the parking lot. I didn't recognize him. But I did recognize the car - a flat-black wide-body Charger. \n\nBut it was too damn late. Billy snatched Delaney with lightning speed and pulled her into a chokehold, backing toward the parking lot rapidly. Her soda and the bag fell under her feet. \"Stay back, Doc. I'll break her neck. Swear to God.\" \n\nWithout looking back, he yelled. \"Fire it up, Marco. We gotta go! Now!\"\n\nI tossed my soda into the bushes by the door and followed, keeping far enough back not to pressure him. \n\nWe were almost halfway to the Charger, moving through the parked cars slowly. Delaney was hanging limp, hands dangling.\n\n\"Didn't want it to be this way, Doc, but it was gonna have'ta happen one way or the other.\"\n\n\"Look, Billy...\"\n\nDelaney suddenly twisted, tucking her chin into his elbow and digging it in, making sure she could breathe. She brought her heavy work boot up and raked it down his shin before slamming it onto the top of his foot with every ounce of strength she had - a classic rear choke-hold counter. \n\n\"Shit!\" Billy started to react, but it was too late; mostly because Delaney's left hand came out of her cargo pocket with the Stun gun and slammed it into his thigh with a nasty crackle.\n\n\"FUCK!\" Billy fell backwards as his leg gave out, and Delaney tore loose, bolting toward me, reaching out. I caught her hand and spun to sling her rolling under a pickup truck. \"Go! Go! Go!\"\n\nI turned back to Billy. He was scrambling towards the Charger, already shaking off the Stun gun. \"Marco. Cover me!\"\n\nThe driver spun back out of his seat and started to level a remarkably familiar large revolver at me. \n\nI dropped, but there was no chance to flatten myself completely to the ground before several cracking gunshots slammed out in rapid succession. \n\nI saw Marco spin and fall to the ground, the revolver flying out of his hand. The sheriff was moving out through the other door of Taco Grande in a tactical walk, still tracking the gunman with his own gun. His deputy was coming out behind him, ready to back him up.\n\nBilly took two bounding steps and dove easily over the hood of a compact, coming up at the rear of the Charger, snatching up the revolver smoothly. "
    ],
    "authorname": "Todd172",
    "tags": [
        "shack",
        "needles",
        "delaney",
        "violent",
        "action",
        "adventure",
        "thriller",
        "sheree",
        "mooky"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-shack-an-unstoppable-man"
}