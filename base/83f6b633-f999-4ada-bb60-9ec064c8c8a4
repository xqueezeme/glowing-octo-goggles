{
    "title": "Dr. Chloe Burrell, Sex Researcher",
    "pages": [
        "Chloe Burrell, Ph.D., was acutely aware of the irony of her situation. At 34, single (divorced after two years of marriage to the guy she'd lived with for three years before that), and attractive enough to be dating frequently, she was without a boyfriend, dateless for six weeks running, AND she was a \"sex researcher\" at a large Midwestern university.\n\nHow unfair was that? Five-seven, sandy brown shoulder-length hair, pretty face with expressive brown eyes, good figure\u2014and Chloe hadn't had sex in months. Making the situation even more ridiculous was the fact that the only make-time-for-myself activity she prioritized into her crammed-full professor/researcher life was her workouts. Taking to heart the findings about the benefits of exercise applying to the brain as well as the body, Chloe did not skip her regular workouts, and her trim figure in a bikini would turn any man's head if only she had time to go to the beach.\n\nOr to a party. Or on a weekend out of town to relax.\n\nCircumstances had conspired against her, she thought as she walked to her car after another day of doing several hours of research and working on a journal article she was co-authoring with a professor at a university in the next state. Getting ahead in the cutthroat world of academic ladder-climbing and peer-reviewed publishing meant long hours and a nose-to-the-grindstone approach to life. As a woman, she was suspect in the eyes of the reigning cadre of academe's gray-haired old boys' club who wondered when she would \"take time off\" to have a baby or three. Chloe faced the female equivalent of the \"black tax\" that her African-American colleagues faced: Work twice as hard to be considered just as good.\n\nTossing her satchel onto the passenger's seat and climbing behind the wheel, she turned down the volume on the radio before starting her car. The drive to the townhome she shared with her cat among the accumulated detritus of an academic career and a dissolved marriage was one more in the string of daily duties that sucked away opportunities to meet interesting men.\n\nTime for dating? Yeah, right. Meeting eligible men in her field of research at conferences, professional organizations, and the like? Fat chance (with \"fat\" being the operative word, Chloe once thought, given the physical condition of many of the men who showed up at such gatherings). Dalliances with grad students? The double standard meant the male profs could probably ride out any repercussions, but that wouldn't be the case for the lone woman professor among the graduate neuroscience faculty at her university.\n\nExiting the faculty parking lot, Chloe drove around the edge of campus toward the interstate loop. Trees were shedding their red- and yellow-hued foliage under a coffin-lid sky as a cold breeze blew swirls of fallen leaves across the road in front of her. A couple of guys were stubbornly clinging to the last hint of the season before unremitting cold set in and were jogging in shorts and hooded pullovers on the sidewalk next to the road. She looked at the gray cotton fabric stretched snugly across their butts as they ran beside her car. The view made the slow crawl bearable as the traffic moved at a pace matching that of the joggers.\n\nBoth the guys had nice, firm glutes. The sight was hypnotic as Chloe daydreamed about how the curves of their strong asscheeks might feel against her cupped palms if she were standing behind them as they paused to catch their breath.\n\nIt had been way too long since she had curled up to doze or to talk, happy and content, with a pair of masculine arms wrapped around her. It had also been far too long since she had gripped a man's naked butt, pulling him deeper inside her pussy as he pumped his hard cock inside her.\n\nShe missed both things desperately.\n\nAn impatient honk behind her snapped her back to reality, and she noted that the two college men had rounded the corner and disappeared. She accelerated to rejoin the normal flow of traffic.\n\nAt least her job meant Chloe had learned about a couple of excellent female masturbation techniques and gadgets in the last few years. They had come in handy on multiple occasions (and for multiple orgasms) since she learned about them either because she had been charged with finding appropriate \"exogenous female sexual arousal intensifiers\" for the lab's major grant project two years ago, or because the research subjects whom she interviewed described their techniques, accouterments, and fantasies to her as part of the data gathering she had to do for some of the research studies.\n\nAnd, as usual, that line of thought (and maybe the two muscular male backsides she had watched running on the sidewalk now two blocks behind her) prompted contemplation of a category of fantasy to which Chloe had recently been introduced in the course of her research: Fucking a man in the ass with a strap-on dildo.\n\nDriving to her townhome through the cold sprinkle which had just started and which presaged the coming winter, Chloe thought yet again about Georgia, the subject who had come in for her screening interview on Monday a week ago as the first step in the two days' worth of time she would be paid by the lab for the research study. Georgia was a tall brunette who had been recruited to the study from an ad run in the university's student newspaper: \"College-aged women wanted for sexuality research. Two days required. No major illnesses within the last six months. Sexually active. Pay for participants.\"\n\nChloe was the researcher who interviewed the women about their sex habits.\n\n\"Yeah, I masturbate pretty frequently,\" Georgia had told her that Monday as Chloe collected baseline data. \"I seem to need it pretty regularly, you know?\"\n\nChloe hadn't looked up from her clipboard but murmured a noncommital, \"Uh-huh.\" Georgia could have said, \"Frig my clit,\" or \"Play with my pussy,\" or any other description that meant \"masturbate,\" and Chloe's reaction would not have changed. Part of her job meant listening to research subjects talk in the most natural way when they answered the researcher's questions. In fact, the subjects were encouraged to do this because it lessened the chances of any reticence in sharing information.\n\nThis research subject didn't seem to have any trouble communicating in the vernacular about her activities and fantasies.\n\n\"Don't get me wrong,\" Georgia continued, \"I love a good, hard dick on a buffed guy, and I like the emotional connection even more\u2014when you can actually find a guy who will connect with you between your ears and not just between the sheets. But you've got a better chance of finding a five-carat diamond in a bag of M&Ms than you have of finding a guy like that\u2014at least at this university. So I make do between one-night stands and a casual boyfriend every now and then.\"\n\nNothing Chloe hadn't heard many times before from the women who participated in these studies.\n\n\"Are you as satisfied from your masturbation as from sexual intercourse?\" Chloe asked, moving to the next question on the form.\n\n\"Emotionally? Of course not. Physically? I haven't found a guy yet who could hold a candle to what I can do to myself.\"\n\nChloe shifted in her chair.\n\nGeorgia continued as she reached behind her head to readjust the elastic band at the base of her pony tail. \"Part of it is that only you know how to do to yourself exactly what feels the best, but I'd be willing to train a guy to do it, if he was interested.\" Georgia laughed, then sighed. \"But college guys willing to learn? With the female-to-male ratio here at 60/40?\" She made a \"pffft\" sound that needed no elaboration. \"The guys know the competition favors their wants, and that usually means just getting their rocks off, not spending time making the girl happy. They don't have to do it because there's always another girl who won't ask for it.\" \n\nChloe knew the statistics and the consequences. There had been an article and several editorials about it in the student newspaper with headings like, \"Why guys can afford to be jerks,\" and \"Where are the decent men?\"\n\n\"So the guys here figure it's not worth the investment to learn how to do a girl really well orally,\" Georgia concluded, shrugging. \"No, give me my favorite vibrator for my pussy, the little pocket rocket vibe I rub across my clit at the same time, and turn me loose to come like no guy ever makes happen.\"\n\n\"So I can put down that you are 'moreso' physically satisfied from masturbation than from intercourse with a male?\"\n\n\"So far,\" Georgia answered simply.\n\n\"When you return tomorrow, can you bring your favorite toys?\" Chloe asked in a purely clinical manner. \"This study attempts neurological calibration of female sexual response. You'll be lying down underneath a scanning machine when you masturbate and climax so we can get readings on your brain activity during orgasm.\"\n\n\"Cool!\" said Georgia enthusiastically.\n\nThe following day Georgia showed up carrying a backpack which held her laptop, her chemistry text, and her vibrators. Chloe had Georgia lie down (toys in hand) on the altar-like platform extending from underneath the massive scanning machinery, then explained why the research was such a challenge. \"Excess motion of your head is bad for the readings,\" she said as she drew a white blanket on top of Georgia, who was wearing one of the lab's garments designed for comfort in the cool environment required by the scanning machinery. The garment was drawn up so that she was nude from the waist down except for heavy white cotton socks. \"I know it's tough to think about not moving your head when you're about to come, but that's what we're stuck with because of this machine.\"\n\n\"I'll see what I can do,\" Georgia said with a smile as she thumbed on the pocket rocket vibe to make sure the battery she'd put in before crawling up onto the platform padding was ready to go. \"I've given myself some orgasms in places and at times when I had to be quiet and not draw the attention of the people around me, so maybe I'll be a good test subject for you, Dr. Burrell.\"\n\nChloe didn't let Georgia see the little smile that played itself across her lips as she adjusted settings on the instrument panel.\n\nCo-eds in the twenty-first century were WAY more comfortable talking about, and engaging in, all manner of sexual activity than were college women during Chloe's undergraduate years way back in the stodgy old 90s (at least today's college women seemed to be like that compared to the very small number of studious females with whom Chloe studied in her pre-med courses).\n\n\"I hate to ask this, Georgia,\" Chloe said, reappearing into the co-ed's line of sight after stepping away from the instrument panel, \"but can you show me what you're going to do with your hands and arms when you masturbate? If there's excess shoulder motion, we'll have to figure a way around that.\"\n\n\"No problem,\" Georgia answered.\n\nChloe was past being surprised at the ease with which today's college women handled sex. She rolled the blanked up over Georgia's tummy and watched as the girl eased the vibrator, glistening with a coating of lube, inside her vagina.\n\n\"I move this around to get the rounded vibrating part up against my G-spot,\" Georgia said, squirming her legs open a bit and seating the vibrator to her satisfaction. \"But once it's in place, it doesn't take a lot of motion\u2014I just hold it up against the right spot on the front wall of my pussy, and I let the hum of the vibrations do the work.\"\n\n\"Okay,\" Chloe answered, truly happy from a researcher-clinician-check-this-off-the-experimental-protocols viewpoint. Georgia's technique would minimize motion underneath the scanner.\n\n\"Then, I don't have to do a lot with this little vibe, either,\" Georgia said, holding the lipstick tube-sized toy almost like a pencil and directing the tip against her clit, which Chloe noticed had already distended. The girl's clitoris also glistened with a coating of lube, something readily apparent given Georgia's denuded pudendum. \n\n(\"For the guys who will go down on you,\" Georgia had told Chloe, \"I've found that a smooth, hair-free pussy does seem to encourage them to spend a bit more 'quality time' there.\" The co-ed had, in answering the questions Chloe asked as part of the screening determinations, shared in explicit detail her blow-job techniques and why she liked giving head as part of her own arousal. But Georgia was quick to say that she fully expected to receive as well as to give oral sex. \"I better not have to ask for it,\" was Georgia's no-nonsense addendum to her explanation about why cunnilingus was such a big part of a satisfying sexual encounter. \"If I give a blow job and then they don't take a dive, well, things don't go nearly as well from that point on.\")\n\nGeorgia positioned the two vibrators to her satisfaction, and Chloe rolled the blanket back down in place. \"Hold that thought, Georgia,\" she laughed as she exited the scanner area in order to control things from a protected space nearby. Quickly checking that all arrangements were still go, she started the process that would result in the functional magnetic resonance images of Georgia's brain during arousal, climax, and post-orgasmic return to Planet Earth. \n\n\"Okay, Georgia,\" Chloe said into the microphone, \"do your thing.\"\n\n\"It's about time,\" answered the college student. \"I wasn't going to last much longer like this if I couldn't turn on my toys and start to enjoy myself.\"\n\nAn eye on the array of read-outs, Chloe monitored things, noting neurophysiological indicators and how they changed as Georgia began her climb up the excitatory curve of female sexual arousal. In a surprisingly short time, the co-ed was already on the pre-orgasmic precipice.\n\nThis was always a fascinating part for Chloe\u2014watching the signs that linked with arousal and climax. Each subject was different. For some, it took forever to plunge over the edge, and some never made it. (\"Just like 'shy bladder' among men at a row of urinals,\" Chloe once told a grad class, explaining that the clinical aspects of an experiment prevented some women from reaching orgasm in the laboratory.) Georgia, though, was blasting through each stage faster than any woman who had ever been in the lab. She may be in the category of subjects defined in sexual research literature as aroused by the thought of having sex (with oneself or a partner) in public and/or under the watchful eyes of clinicians, Chloe thought.\n\n\"Remember to keep your head still,\" Chloe cautioned into the mic.\n\nThen, there it was. The incontrovertible evidence of the female orgasm as displayed in real-time fashion for a few brief seconds (or, in Georgia's case, an amazingly long series of seconds). The near shut-down of cognitive activity in specific regions of the brain was neurological proof of a climax.\n\nGeorgia had experienced probably the most intense orgasm Chloe had ever witnessed. The data would be incredibly valuable simply because there was so much of it, so much evidence of brain function cessation in multiple areas for so long.\n\nShe must be completely blissed out, Chloe thought. That kind of orgasm would be powerfully addicting.\n\nWhen the signs appeared that the refractory period had finally tailed off, Chloe stepped into the scanner room and approached the platform cautiously.\n\n\"Georgia?\"\n\nThe girl stirred slightly.\n\n\"That was a good one, huh?\"\n\n\"Mmmm,\" was the only response as Chloe manipulated the instrument panel so that the platform slid silently out from under the casing which housed that part of the university's fMRI machine.\n\nGeorgia opened her eyes dreamily and looked at Chloe. \"It was good, but it wasn't one of my best.\"\n\nChloe found this hard to believe, but she didn't say anything as she helped Georgia off the platform. Carefully holding open the plastic bag into which the co-ed dropped her toys so she could take them back home with her, Chloe said, \"The readings I got told me clearly that you just had one heck of an orgasm, Georgia. And you're saying that you've had some that have been even MORE intense?\"\n\nGeorgia answered from behind the screen which had been set up for subjects to dress and undress. A touch of female pride in her voice, the co-ed said, \"Oh, yeah. This place doesn't really allow me to get comfortable, to dive into a favorite fantasy or watch a hot video, you know?\" Georgia emerged from behind the screen and sat down on a straight-backed chair up against the wall to lace up her tennis shoes. \"But when I'm really ready to focus, well, it's somethin' else.\"\n\nIntrigued, Chloe sat on the edge of the platform where Georgia had a few minutes earlier been lying, and laid her clip board and notes next to her. An even more intense orgasm would produce even more data, maybe something worthy of a journal article. \"So what's different when you do that?\"\n\nGeorgia fidgeted on the chair for a second before answering. \"Well, it's not really that different in terms of what I do.\"\n\nCould that possibly be a blush of embarrassment creeping up onto Georgia's face? This girl who had no hesitancies about describing in exhaustive detail her fellatio technique, why she liked cunnilingus, how she had surreptitiously masturbated in public places? Chloe was now even more intrigued.\n\n\"Then there's something else that's different? I mean, are you saying that you can have these even more spectacular orgasms by doing the same things you did just then, but that you'd be thinking of something different?\"\n\nYes, those pretty cheeks were reddening on Georgia's face. \"Yeah. A different fantasy or watching a video of that fantasy.\"\n\nGeorgia made no move to get up and leave. Chloe knew the girl was aware that the day's experiment was over, that the only thing left was to collect her pay on the way out of the psychology complex's research building. \n\nTaking in a breath and stiff-arming the platform in order to slide back a little\u2014and thereby sending the message that she was ready to listen if Georgia was ready to talk\u2014Chloe didn't say anything. But she did look at Georgia, raise her eyebrows and cock her head slightly. \"Well?\" didn't have to come out of her mouth for the girl to know which of the two of them would make the next comment on the topic of better orgasms based on a private fantasy.\n\nLeaning against the chair back and crossing her feet at the ankles as she stretched her long legs out to full length, Georgia placed her hands in her lap and spoke without making eye contact.\n\n\"I don't know why this is, Dr. Burrell, but what gets me hotter than anything is thinking about a certain way a woman has sex with a man, or seeing it happen on a video.\"\n\nSilence hung in the air. Chloe realized this co-ed who had during all the previous exchanges in the experimental interviews and protocols been such a nothing-shocks-me libertine was now embarrassed about admitting to something that turned her on. \"It's okay, Georgia. I'm a researcher, and I have to tell you that I am interested in how you achieve such orgasms. This research is all about discovering things that we can use to eventually help patients or even just normal people looking for ways to work out problems in their sex lives.\"\n\n\"Okay,\" the girl answered, drawing in a big breath. Poised for a second with lungs full of air, and heightening Chloe's curiosity even more during that brief pause, Georgia finally blurted out the private fantasy that launched such powerful orgasms. \"What makes me come more intensely than anything is when I masturbate and think about fucking some hot guy in his asshole with a strapon dildo while he's bent over nude in front of me with his hard cock hanging down between his legs and he's moaning in pleasure as I really ride him good to bring myself off.\"\n\nIn spite of all her training about experimental subject interactions, about not registering surprise or revulsion or even positive attitudes in reaction to what subjects said or did, Dr. Chloe Burrell's jaw dropped open.",
        "And her pussy immediately moistened.\n\nGeorgia continued as Chloe snapped back into researcher mode\u2014at least in terms of outward appearances. \"Jeez, it is just so hot. I never thought about such a thing until I saw it happen on a video on one of the porntube video sites. It was totally accidental that I stumbled onto it one night when I was bored and surfing for something interesting to look at. But, man, did it ever blow my mind. I mean, it was like hypnotizing to see it, and I got really, really wet even before the short video was over.\" \n\nChloe remained quiet. Processing.\n\n\"God knows why this has such an effect on me, but if I had been thinking about it while I was masturbating just then, I probably would have blacked out when the orgasm hit\u2014that's happened a couple of times. Maybe it's the power trip thing. You know, me being the one to fuck the guy\u2014I mean REALLY fuck the guy. Or maybe it's just because it's so . . . I don't know, so, so . . . erotic. That's the word. Not nasty. Not kinky. Not perverted. For me it's just so damned HOT that I can't imagine anything that could turn me on more.\" Georgia's eyes had defocused while she tried to explain her fascination. Chloe the researcher noted how even talking about this act seemed to send the girl's consciousness to a different place. \n\n\"Being inside a guy, maybe that's what so hot about it,\" Georgia continued. \"I absolutely love to suck off a guy and slide my finger up his ass at the same time because when he comes, I can feel his spasms inside him, gripping and releasing my finger with the contractions of his tight hole matching the contractions that are pumping his cum into my mouth. That is incredibly hot, so the idea of fucking him in his asshole with a strapon as a way to trigger those contractions\u2014and getting myself off at the same time\u2014damn, it just drives me crazy to think about doing that.\"\n\nChloe thought her line of work had inured her to being aroused by subjects' reactions or revelations. She had seen girlfriends or wives leaning over the platform fellating their men to the point of orgasm in order to get readings of the male orgasmic response. She'd shown subjects videos of gay porn from the lab's \"library\" depicting acts that should be anatomically impossible as a way to test for differences in brain readouts between gay and straight men. She had interviewed numerous females about their anal sex practices. She had done two separate studies which searched for differences between orgasms brought on by clitoral masturbation or by anal penetration\u2014and in those studies, women who said they orgasmed from being screwed in the ass would bring their dildos or butt plugs into the lab and then pump into their bottomholes while hooked up to a 24-channel EEG machine.\n\nSo what was anyone ever going to say to Dr. Burrell in the course of research that would arouse her when she thought she had heard and seen it all?\n\nWhat Georgia just said did it.\n\nChloe needed a few seconds to compose herself. She picked up the clip board and feigned at making a mark on the papers. Finally, having tamped down the arousal that came out of the blue when Georgia described her mind-blowing fantasy, Chloe asked, \"And this particular fantasy usually creates the most powerful orgasms for you?\"\n\n\"Not usually,\" Georgia answered, finally looking at Chloe after her fidgeting and descriptions. \"Always. The fantasy ALWAYS brings me to a powerful climax.\"\n\nChloe really did make notes on her clip board this time. \"Can you estimate how many times you've climaxed with this fantasy in, say, the last six months?\"\n\nGeorgia rubbed her palms down the front of her jeans as she sat in the chair, much more relaxed now as she talked about her fantasy. She chewed her lip for a moment, thinking. \"Well, first, it hasn't been six months since I saw that video. It's only been\u2014let me see . . . um\u2014it's been about three months ago when I started. Since then how many times have I gotten off thinking about it? I dunno, maybe . . . 30 times or so?\"\n\nChloe did the math quickly. \"So at least a couple of times a week?\"\n\n\"Yeah. That sounds right.\"\n\n\"Have you masturbated during that period to other fantasies, even though they don't create the intense climaxes you get with that fantasy?\"\n\n\"Oh, sure. I have all the usual fantasies, and I enjoy them a lot. You know, a guy going down on me and licking and sucking my clit while he fingers me, being taken doggy style and rubbing my clit when he fucks me, watching a guy's cock get hard when he's naked in front of me as I strip for him.\" Georgia smiled. \"I like that one a lot.\" She brushed a lock of hair back from her forehead and said, \"But it's on purpose that I DON'T think about screwing a guy with a strapon every time I masturbate. I just couldn't handle that much sexual intensity that often.\"\n\nThis girl was masturbating much more frequently than any other female research subject had ever reported. \"Did you masturbate as much before as you do now? And try to answer based on the times when you weren't with a guy getting sex regularly. It's an assumption by we researchers that sex with a partner on a frequent basis cuts down on the amount of masturbating.\"\n\nGeorgia pulled one leg up underneath her on the chair, settling in for more discussion. \"You know, Dr. Burrell, even if I had a guy in my life right now, and even if we were getting it on regularly, BUT if I weren't plowing his behind at least every now and then, I think I'd still be fantasizing about this and masturbating to the fantasy.\" Pausing to consider her response for a second as she shifted in the chair, the girl then added, \"Maybe I wouldn't fantasize about it so much if I had actually done it with a guy, you know? But I'm betting it would still cause incredible orgasms if I brought myself off while thinking about it.\"\n\nGeorgia's far-away look dissipated, and she looked back at Chloe. \"Oh, yeah . . . about whether I masturbate more since I started thinking about this?\" The girl's embarrassment had at this point faded, and she smiled broadly at Chloe when she said, \"Yeah, I masturbate a lot more now. I think I'm actually addicted to the intense orgasms I get when I think about doing a guy with a strapon, and since I've added those sessions of playing with myself, I also have to admit that I masturbate more often to ANY of the fantasies I have. Sometimes I just close my eyes and picture stuff, you know? But other times, I start things off by looking at pictures of naked guys, especially pictures in which they're completely nude and their dicks are hard\u2014and what's even better in those pictures is when the guys are also looking into the camera, like they're looking right at me and thinking, 'Yeah, here I am, baby, all for you\u2014this is all just for you, and I love knowing you can see every inch of me.' And I like to look at videos of good-looking guys fucking pretty girls, too, as a way to launch into masturbating.\"\n\nChloe continued writing notes about this interview as she asked, \"So it's accurate to say that, for whatever reason, this particular fantasy of guys getting fucked in the ass by women wearing strapons has increased your appetite for sexual arousal and release?\"\n\n(Not only were the subjects encouraged to use their most natural means of expression when talking about their sexuality, the researchers were trained to emulate that type of talk as a way to reinforce the normalcy of how subjects expressed themselves. Chloe had learned to match her subjects' lexicon even though it sometimes meant talking in ways she would never\u2014ever\u2014do in her own life. At least, not to anyone other than a lover in her bedroom.)\n\nGeorgia answered Chloe's question of whether fantasizing about strapon man-fucking had made her hornier. \"Of course, Dr. Burrell,\" she said, standing from the chair in order to tug the legs of her snug jeans downward as she reached for her backpack. \"Of course fantasizing about doing a hot guy with a strapon increases my sexual arousal. Doesn't thinking about it do the same thing for you?\"\n\nThe question surprised Chloe. Another surprise was the blush she felt rising into her own cheeks at the girl's intimation that she had thought about fucking a man with a strapon and had masturbated to the fantasy.\n\nDr. Chloe Burrell wasn't about to admit to Georgia or to anyone, that for the first time in all the instances in which sexual practices had been described to her (and even performed in the lab in front of her), this idea of strapon man-fucking was not only out-of-the-blue new to her, it had instantly gotten her wet and had continued to moisten her pussy during the interview and note-taking in the past few minutes.\n\nChloe was relieved to see Georgia pick up her backpack, indicating that she was ready to go. It would be truly embarrassing as a Ph.D. university faculty member doing a clinical research study if one of her subjects were to catch an unmistakable whiff of the arousal that Chloe was experiencing.\n\nChloe answered the co-ed's question by saying, \"Let's just stick to the information I'm collecting for this research study, okay?\" She looked down at her clip board to hide the embarrassment that must be on her face and which would plainly communicate that the concept of strapon man-fucking had, for whatever reason, turned her on sexually in a powerful and instantaneous way.\n\n\"Sure, Dr. Burrell,\" Georgia answered, shouldering the backpack with a \"Gotcha!\" smile.\n\nThere had been many research studies done on personal differences and preferences that sexually arouse humans, so Chloe wasn't surprised that something in particular was driving this research subject to a strong focus on a certain kind of sexual activity. But the fact that Georgia said the fantasy induced climaxes even MORE intense than what Chloe had just witnessed was almost unbelievable.\n\nChloe's own response to the mention of the subject further intrigued her, both as a research scientist AND as a woman eager to learn more about doing something with a man\u2014to a man\u2014that was making her pussy cream at just the thought.\n\nIt was clear that Georgia must return to the lab, bring her toys, and give herself permission to fantasize about strapping on a dildo and fucking some hot stud until the act triggered off an incredible orgasm. Chloe HAD to see those readings on the fMRI. \n\nShe made the arrangements with Georgia to come back to the lab the following week. Chloe needed time to search for any new studies on topic-specific sexual fantasizing as a means for self-induced orgasm.\n\nSnapping back from the memory of her data gathering the week before with Georgia, Chloe turned off the freeway at her exit ramp and started the labyrinthine route home that would avoid several stop lights which always seemed to last forever after a tough day in the lab.\n\nIt gave her time to think yet again how she could possibly describe Georgia's fantasy if, indeed, the readings she would get during Georgia's orgasm in the lab the next week were what she hoped they would be. Writing up the research article would require some kind of description about what Georgia was thinking about that caused such off-the-chart brain readings. How would Chloe translate what the girl had told her in the lab into academic journal jargon? (\". . . fucking some hot guy in his asshole with a strapon dildo while he's bent over nude in front of me with his hard cock hanging down between his legs and he's moaning in pleasure as I really ride him good to bring myself off\"\u2014Chloe didn't think she would ever forget that description.)\n\n+++Journal of Human Sexuality, 43(4), p. 487: \"The subject reported that she always experienced the same kind of intense orgasmic response as shown in the scans in Figures 2-4 when she masturbates to visions of female-to-male coitus in which the female takes position behind the male, who has presented his naked buttocks to her while in a position allowing her to penetrate his anus with a penis-like appendage positioned and secured at her crotch, thus enabling her to thrust the appendage in and out of his anus in the same manner as a male thrusts his penis in and out of a female during sexual coupling. Fantasizing about this activity, always with the fantasy including both male and female orgasm as a result of the activity, is done in concert with the subject masturbating using vaginal and clitoral exogenous female sexual arousal intensifiers The process reliably produces the subject's intense orgasmic response.\"+++\n\nWould there be some other way to describe strapon man-fucking in an academically acceptable manner?\n\nChloe wished for a different publication that might be more enjoyable to write for:\n\n+++Journal for Women Who Like to Fuck Men in the Ass, 1(1), p. 26: \"The subject reported that she always got mind-blowing climaxes when she fantasized about fucking a guy in the asshole. She described the activities in the fantasy as watching the male strip out of his clothes and seeing his hard cock spring free of his briefs when he slid them down and off. The subject enjoyed this section of the fantasy because she reports pleasure in seeing men naked in front of her, especially men with hard cocks. Brain scan number five (shown below) is time-coded to this part of the fantasy and indicates that telling the naked man to stroke his cock for her and get it really hard created a spike in arousal readings. She then tells the man in her fantasy to bend over for her and spread his buttocks wide apart to show her the place where she will fuck him.\"+++\n\nWasn't gonna happen, but it WOULD be a delightful respite from academic authorship to write for such a journal.\n\nChloe surprised herself at how quickly, after Georgia's initial confession of the subject of her most intense fantasies, that Chloe's own fantasies and comfort with the idea of strapon man-fucking made their way into her personal sexual lexicon.\n\nPulling into her townhome garage, she was happy to be finished with the day's work at the university.\n\nHer drive time daydreaming meant she was more than a little randy, and she sat her satchel on the kitchen table, pulled the cat food from the cupboard to shake some out into the cat's bowl as her pet came galloping from the bedroom to eat, and then Chloe headed straight to the computer in the second bedroom which served as her home office. Sitting down, she clicked on the monitor, pulled up her browser, and googled, \"strapon videos.\"\n\nThe lab owned several pairs of goggle-like video playback glasses that subjects underneath the fMRI machine could wear to watch videos of various kinds of sexual content depending on what the research study's goals were. Chloe had earlier that day decided it would be best for the next experiment with Georgia if the girl were watching a video of her favorite fantasy as she masturbated. That way, the research wouldn't be dependent solely on Georgia's fantasizing skills. Remembering the co-ed's blush when first describing her fantasy, Chloe did not want to jeopardize the chances for getting brain readings that would produce even more data than the last time simply because Georgia still suffered from some traces of embarrassment at masturbating to the fantasy in Chloe's lab. \n\nThe fact that searching for such a video tonight would probably arouse her to the point of masturbation and orgasm was an added bonus.\n\nThe overnight shipping charge that Chloe would pay for an appropriate video would be worth it\u2014she wanted Georgia's orgasm in the lab on Friday to last as long as possible in order to generate the greatest amount of data. Tonight was Monday, so the video would be delivered on Wednesday (if not before\u2014Chloe had once ordered a second copy of a video the lab had been using in a research study and which had been inexplicably lost between one instance of its use and the next, which meant the subjects had to come back later in the week; amazingly, the delivery was in her mailbox the next day even though it was after 7 PM when she ordered it the night before).\n\nWhat a menu of possibilities appeared on the computer screen! Chloe was dumbfounded at how much of this kind of sexual activity was discussed and displayed on the Internet.\n\nCall it the \"bus man's holiday\" syndrome\u2014just as a bus driver usually wasn't motivated to hop in the family car and drive cross-country for a vacation, Chloe the sex researcher usually wasn't motivated to go looking for sexually titillating material away from her work in the lab. Spending so many years in the neuroscientific aspects of human sexuality research meant she, like most people, enjoyed leaving the subject of her work at her job. When\u2014if\u2014she found a man with whom to make an emotional connection and initiate a long-term relationship, she was sure her physical urges would ramp up, but until then, it was the rare occasion that Chloe found herself horny enough to go looking for a fantasy-inducing story or visual. A good session with her vibrator or even just her fingers was almost always enough for her.\n\nThe weekend just past, though, was a rare exception. Chloe had masturbated three different times to images conjured of the things Georgia had described in the lab. Each orgasm was intense, fulfilling, draining, and completely satisfying\u2014at least until after a recovery period. Then, inevitably, she was, again, drawn to the erotic mental images of a nude woman wearing a strapon pumping the dildo protruding from her crotch into the willingly offered asshole of a man bent over in front of her, with both of them panting in sexual excitement as the woman drove herself and her man to orgasm.\n\nSo to this point in her life, Chloe had not done much surfing for anything erotic on the web. She was unaware of the range and amount of material about female-to-male strapon play that was available. The topic hadn't been mentioned before by her research subjects, and except for the one instance when she had to buy a replacement copy of a DVD that had been lost in the lab, she hadn't spent time looking for sex stories or videos because the lab already had quite a collection.. Finding a web site that specialized in \"videos for women who enjoy the delights of strapon man-fucking,\" Chloe scrolled through the descriptions of several DVDs. She lingered on two in particular, both because the actors and actresses portrayed were attractive and because the story descriptions aroused her:\n\n\"Katrina leads Jonathan into a new world\u2014one in which the man is the one who is penetrated during sex. Hired by the college as a tutor in math for the athletic department, she enjoys helping this basketballer learn calculus, but she enjoys training him to take her strapon even more. He is a willing student who brings firms glutes and a seven-inch cock to every tutoring session. You will enjoy seeing Katrina's practiced techniques for spreading Jonathan open to her gaze and to the penetrations of her fingers, tongue, and strapon dildo as he learns the pleasure of submitting his ass and his soul to a woman who knows how to use him for her sexual arousal and enjoyment.\"\n\nThe pictures showed a toned 30-ish, tall woman with one hand on the back of a handsome college-aged guy's head, drawing his face to hers for a kiss. She was dressed in a tweed skirt, white blouse, and sexy ankle-strap shoes, and her other hand was pressed against the bulge in the young stud's pants.\n\nA customer review by \"Anabelle\" rated the video with the highest rating of five stars: \"This was the hottest thing I've ever seen! The actors are all good-looking, and the story is great! The heroine (yes, she IS a heroine in my book!) helps the basketball star discover how much he loves it when a woman plays with his ass and then fucks him there. Great camera work, too\u2014I just love those shots when she opens him up and we get to see his cute little pucker twitch in anticipation of her strapon. Somehow the camera catches that AND his nice, hard cock and snugged-up ball sac all framed perfectly in the scene. And his moans of pleasure when she takes him are so sexy! This video definitely captures all the excitement and eroticism of an experienced woman who loves to fuck men in every way teaching a young guy what a turn-on it is for both of them when he surrenders his asshole to the deep thrusts she gives him with her strapon. If I could give this ten stars, I would!\"",
        "Chloe clicked the \"Add to Shopping Cart\" button. Her other hand dropped to her crotch.\n\nThe other DVD was titled, \"Losing the Bet, Winning the Game,\" and the summary of the story made clear that there really wasn't much of a plot. The female protagonist loses a bet during a raucous \"cougars' night out\" at a male strip club, and her thirty- and forty-something girlfriends set a diabolical task for her as a result: She must provide proof in the form of pictures snapped with a digital camera while she is screwing each of three different guys in the ass with a strapon, and she has to accomplish the feat within 24 hours. Silly and sophomoric as it was, the set-up provided the perfect plot device for moving from one strapon encounter to another.\n\nHowever, the pictures connected to this DVD's story were quite arousing. The woman was tall, slender, and brunette. Though she was obviously older than Georgia, she looked something like the way Georgia might appear in say, fifteen years\u2014perfect for making it easy for the coed to really get lost in the video's fantasy as she masturbated in Chloe's lab. The promotional pictures that went along with the film showed the woman nude except for her strapon as she drilled each of three different guys who all were naked and, when the pictures had them in poses that revealed their cocks, nicely endowed. The men were buffed and handsome, and they all had great asses, which were clearly on display as the woman handled them in the pictures. In one of the shots, she had parted the cheeks of a hunky farmboy-looking stud and was preparing to slide her stiff, fake cock inside him. In another picture, she was standing at the edge of a bed with a different guy on his back in front of her. She had draped his legs over her shoulders and was gripping each thigh, clearly pulling him back onto the strapon dildo she had buried up his butt. He had one arm thrown over his eyes (embarrassed?\u2014for some reason, that made it even hotter). The sexy tableau was completed with the look of pleasure on the woman's face as she leaned back while at the same time pressing her crotch forward against his ass, her strapon obviously buried to the hilt inside him.\n\nBoth pictures included a digital camera placed somewhere close to the woman and available for her use in producing the proof her girlfriends had demanded in payment for losing the bet.\n\nChloe's pussy moistened as she looked at the pictures from this DVD. She clicked on the button to play the trailer:\n\n\"That's right, Lela, three guys. You have to bring us proof in pictures that you've screwed three guys in the ass with your strapon before this time tomorrow. That's what you get for losing the bet,\" said one of the women in the scene as she grabbed the butt of a male dancer who just then ventured close to the table where the women were sitting. The woman being told what her assignment was looked doubtful. One of the other ladies grinned at her and said, \"Don't be such a wimp, Lela. You're gonna enjoy it if you let yourself!\"\n\n(\". . . your strapon . . .\"? thought Chloe. People do this enough these days that middle-aged women talk about \"their strapons\"?)\n\nThe trailer showed the male dancer gyrating in front of their table as the woman who had lost the bet took her turn grabbing his ass. \"Now that you mention it, Donna, this is going to be a memorable 24 hours for me,\" laughed Lela, losing her look of consternation and grinning as she squeezed the naked mounds of male ass flesh that had been presented to her. \"We all know how much fun and how sexy-hot it is to do a guy like that, but . . . THREE guys! In 24 hours!\"\n\n\"Not up to it, Lela?\" teased the other woman in their group.\n\nThe trailer then cut to a scene which showed Lela dialing up a male escort service and saying into her cellphone, \"Yes. I want to use a strapon dildo on you.\" The scene quickly moved to a few seconds of a point-of-view shot as Lela's strapon began to slide into the man's asshole as she held his asscheeks spread apart in front of her. \n\nIn a disappointingly short amount of time the trailer again jumped to another scene. Lela was in a women's locker room and was pulling the farmboy, who looked to be all of eighteen years old, to a long bench between a row of lockers as she said, \"Yes, I said I'd show you my tits and my pussy and that I'd suck your cock, so hurry up and get out of your pants before someone comes in.\" In the next scene of the trailer the guy was naked, lying on his stomach on the bench and scooted enough toward the end of it that his cock and balls were dangling as he stretched his legs out behind him for balance. Lela was crouched between his outstretched legs, nude except for a harness and strapon dildo (which was poking up from her crotch in her position behind the young man) as she finger-fucked him in the ass while he moaned, \"God, what are doing? I can't take it, I can't take . . . oh, god, oh god. You shouldn't be doing that, but it feels so good! Don't stop. Don't stop!\" With the other hand she was stroking his hard cock, and both her palm and his cock were glistening with the lube she had obviously poured from the opened bottle sitting on the floor next to her digital camera.\n\nChloe quickly stopped the trailer. She didn't want to see any part of the third scenario. It would be far more fun to watch Lela's third encounter with no preview of how she would do the guy and what he looked like.\n\nShe squirmed in delight and anticipation at the thought of the DVDs' arrival. She would draw the blinds, pop in a DVD, adjust the volume on her system's crystal clear audio, and lounge nude with her legs spread and her pussy moistening in front of her TV's large screen. Chloe knew she would be forced to stroke her clit as she watched the erotic and sexy scenes of an experienced woman plunging her strapon into a hunky stud eager to surrender himself and his asshole to the pleasures awaiting him as an initiate into a new world of sexual delights.\n\nThe second DVD immediately joined the first one in her shopping cart.\n\nThen, fearing she would be tempted to buy every DVD on the site, Chloe clicked through to check-out. After entering her credit card information, though, she paused before clicking the purchase button. A smile forming on her face, she upped the quantity to two each of the DVDs, recalculated, and confirmed the order.\n\nOne copy of each for the lab, one copy of each for her. \n\nBesides, this wasn't an order that would be showing up on a reimbursement form in the university's Accounting Office. Chloe knew much grief would be avoided by simply purchasing these DVDs and placing the copies for the lab in the appropriate cabinet in the storage room. A change two months ago in Accounting meant that all university audio-visual purchases had to include detailed descriptions of content (copyright compliance issues, the university counsel said), and it was clear to her the instant she read the memo that any future DVD or CD purchases for her research would have to be unreimbursed expenditures.\n\nIt was worth it. She knew that Georgia's masturbatory session on Friday would be far more likely to get the readings Chloe wanted with one of the DVDs amping up the girl's fantasies. But even at twice the price, she still would have purchased \"Losing the Bet, Winning the Game\" and \"Tutoring Samuel\" for her own viewing. The thought of what she would witness on those DVDs meant she could not wait to watch them during her own private screening.\n\nNaked.\n\nPlaying with her pussy.\n\nTugging at one nipple while the fingers of her other hand squeezed and pressed against her throbbing and distended clit.\n\nAnd fantasizing about being the woman on the screen who was ass-fucking a naked man with a strapon dildo.\n\nChloe was beginning to understand exactly why Georgia was having such intense orgasms.\n\nWas this kind of reaction common to every woman presented with this idea? Or was Chloe (and Georgia, for that matter) different from most other women in this regard? Maybe it's just been too long since I've fucked a guy, and ANYTHING on the topic of men and women having sex would arouse me, thought Chloe, but she quickly dismissed that rationale\u2014in the last month she'd listened to fifteen descriptions given by female research subjects who described fantasies to which they liked to masturbate.\n\nAll their descriptions were of sexy situations, but only Georgia's description had the impact it did on Chloe.\n\n\"Am I kinky?\" she wondered.\n\nThen she remembered Georgia's explanation and felt that it applied to her, too: \"Erotic. Not nasty. Not kinky. Not perverted. Just so damned HOT!\" Yeah, that was it. For some crazy reason, this idea of strapping a dildo to her crotch, lubing it up, and using it to penetrate\u2014to push inside of and open up\u2014a man's asshole, was just so damned hot!\n\nWhy?\n\nA shiver ran up Chloe's spine and goose-bumps formed on her forearms and the back of her neck when she had the next thought: What if I find a guy, my special man who's going to love me, marry me, and in addition to the sweet, sexy lovemaking in all the ways I love so much, he also likes to roll over, naked, draw himself up on his knees with his glorious firm ass high in the air and his chest low to the mattress, and ask me to fuck him with a strapon in his ass?\n\nChloe hugged herself tightly and rocked herself through a flood of positive emotions, so intense was the reaction produced by that thought. A lover/husband who might also like to be strapon fucked! Yum!\n\nTuesday evening turned out to be a true disappointment. Even though Chloe knew it was certainly nothing but sheer luck that her prior experience with an overnight order resulted in less-than-24-hour service, she could not help but be disappointed when she got home and found that her order had not yet arrived. Sighing as she walked back inside to feed the cat, she realized it had been a very long time since she had been excited about sex, even if it was only being a voyeur to the action on a DVD.\n\nShe knew that her Wednesday at the university would be deadly dull because the classes she taught were on Tuesday and Thursday mornings this semester. That meant Wednesdays were usually dedicated to lab work, and this particular Wednesday's work would consist of running statistical analyses. It was grunt work that was the heart and soul of academic research.\n\nMore than once on Wednesday Chloe's mind drifted to Georgia's description of the fantasy that gave her the most intense orgasms. Other times Chloe replayed in her head the descriptions and storylines and the parts of the trailers she had allowed herself to view when ordering the videos for Friday's lab experiment with Georgia. A couple of times she was distracted with thoughts of the two guys she'd seen jogging on the way home Monday evening (what would those nice, firm, young butts look like nude?) Even more frequently, she daydreamed about finding a guy that was both the love of her life and an eager partner in strapon play.\n\nBut she knew, given the state of her love life currently, she would have to settle right now for the purely sexual thrills that would be inevitable as she watched and masturbated to the erotic images of Katrina or Lela strapon fucking hot and willing men in the videos she had ordered.\n\nSo when she got home on Wednesday, Chloe didn't even set her satchel down before checking the mailbox on the porch.\n\nThe package was there, and only because she knew the cat would be whining and interrupting her viewing of the videos if she didn't tend to her pet's feeding, she took care of that task. After that, though, she quickly shucked off her clothes and slipped on a mid-thigh length robe, knowing better than to tie the belt around her waist\u2014she would soon have the robe opened to allow unencumbered access to her pussy and her breasts as she laid on her sofa watching Lela and Kartrina push their strapon dildos into the assholes of sexy men who would be squirming and moaning in pleasure as these two fortunate actresses brought themselves to climax from the act of strapon man-fucking.\n\nChloe could not wait to see it.\n\nThat women are capable of multiple orgasms within short spans of time was truly a blessing! Chloe enjoyed two wonderful climaxes watching Katrina tutor Samuel and knew she would masturbate many times in the future to a replay of those scenes\u2014whether mental or actually viewing the DVD.\n\nAnd she congratulated herself mightily for not watching a preview of Lela's third man-fucking. Seeing the entire scenario played out in front of her\u2014with all its nuances, all the lingering camera shots on the guy's tight bottom, muscular body, and handsome face as he was led inexorably toward his deflowering\u2014was over-the-top erotic and gut-clenchingly arousing. Chloe had no idea she could be turned on so completely by watching porn.\n\nCheck that! she thought. Porn\u2014at least everything she had seen before Georgia planted the seed to go looking for what she watching now\u2014had never been this erotic (and Chloe had seen a lot of porn as part of her research). \"Not nasty. Not perverted. EROTIC!\" Georgia's description again came to her mind.\n\nGod, what was going on with her? Why did this cause such an intense reaction? What was it about this act that drove her crazy with lust?\n\nWas it captivation with the allure of engaging the male ass in new, naughty ways? This WAS new to her\u2014the thought of man-fucking had not crossed her mind before.\n\nWhy not?\n\nWas it so powerfully arousing because of the role reversal, the thought of being the one in the coupling who would actually GO INSIDE of the other, penetrating her partner and taking him sexually? \n\nThat WAS a delicious thought! It was more than delicious. It was mouth-watering in a way that told Chloe she had developed an insatiable appetite for it.\n\nWas it both of these things mixed together that was making strapon fucking a man so very, very erotic and stimulating for her? If that was it, would most women get turned on, too?\n\nChloe snapped herself out of sex-researcher mode. She could self-analyze at length some other time. Right now, Lela the bet-loser was toying with her naked prey, her digital camera close by along with her strapon and lube.\n\n\"You'll love this, Miguel,\" Lela was telling a gorgeous Latino male who looked to be in his early forties with touches of gray starting to creep into the hair at his temples. She was behind him, her arms wrapped around his chest, hugging him close to her. Though she was wearing a clingy jersey knit dress that hugged her curves in a swash of pale green accents on shimmering black, he was nude, and his lovely cock was full and hanging heavily, though not yet erect. He had reached his arms behind him to rest his hands on her hips, and she was whispering in his ear.\n\n\"Trust me, baby. I'll go slow and be so tender with you. It's so-o-o-o hot to think about being the one to take your anal virginity, Miguel. I love your firm, tight ass, and I'm so wet just thinking about spreading your asscheeks apart so I can look at you.\"\n\nThe guy's cock was starting to rise. Lela kept up her tortuously sexy descriptions.\n\n\"I know you have a beautiful little asshole, baby. I can't wait to touch it. I'm even going to kiss it, you turn me on so much.\" Her hands slid down his chest and over his rippling abs, one hand dropping down to curl around his now erect dick. \"Have you ever had a woman lick your asshole, Miguel? I'm going to do it to you. You're so sexy. You're going to be a willing virgin for me, aren't you?\"\n\nMiguel's eyes were closed as he listened to Lela tease him with her nasty talk. \"Mmmm, se\u00f1ora magnifica, you are most persuasive in your sexy dress with your breasts pressed into my back and your hand on my cock,\" he said in an accent tinged with the perfect mix of Latin lover and sexual arousal. \"Will you enjoy taking me like this?\"\n\nLela raised up on her tiptoes in order to get even closer to his ear. She nibbled his earlobe and answered in a sexy, throaty whisper, \"I will be so gentle with you, but there will be a time when doing you like this will make me so crazy to come that I know I'll push deep inside you, grab your hips, and just grind against you until I come so hard that I may faint with pleasure.\" She released her grip on his erect cock in order to slide down behind him, pressing her tits into his back and across his buttocks as she did so. Dropping to her knees, she placed her hands on his hips and began brushing her lips lightly across his naked ass, breathing heavily and occasionally extending the tip of her tongue to also barely graze his cheeks as she moved her face over his backside. Pausing to plant a tender, gentle kiss on one asscheek, Lela then reached her hands up his back, stretching her torso up to bring her breasts to his backside, pressing them against his butt. \"I will love taking you like this more than you can imagine, Miguel,\" she said.\n\nMiguel's hardened cock was incontrovertible evidence that he would enjoy it, too.\n\nDropping back down to her knees behind him, Lela placed her hands on his asscheeks and slowly spread him open with the wide-eyed wonder of a kid seeing a kindle of just-born kittens for the first time. \"I'm looking at your cute little pink hole, Miguel. Have you ever shown it to a woman before? Have you ever let her open you up and look at you right . . . here?\" She leaned forward, extended her tongue and formed it into a compact point, and then darted it forward like the quick flick from a snake. She aimed her tease directly onto the center of Miguel's asshole. Leaning back from him to gaze up into his face as he craned his neck around to see what she was doing, she smiled and said again, \"Right . . . here?\"\n\nAgain she teased him with a flick of her tongue against his anus.\n\n\"I do not think it matters, Miss Lela,\" said Miguel, a sense of urgency creeping into his voice as he thrust his backside out to bring it closer to her face as she leaned back. \"You are showing me that it is a pleasurable thing. Perhaps you will do it again?\"\n\n\"Oh, I'm going to do it again, love,\" Lela answered, laying the side of her face against one of his asscheeks as she spoke. \"But I don't know if you'll be able to stand it if I have to keep my tongue there in order to make sure my sexy virgin's hole is nice and wet for me.\" In a voice that could only be described as liquid smoke, she reached between his legs and closed her fingers around his balls as she told him, \"I'm going to take such good care of you, Miguel\u2014you'll see how tender I'm going to be with your cute little asshole. I'll get it nice and wet and relaxed with my tongue, then I'll follow that with gentle caresses of my lubricated finger.\"\n\nMiguel's eyes closed immediately and he threw his head back as he said, \"We shall try this, yes? I can assure you I can take it.\"\n\n\"Are you sure?\" she teased, fondling his balls as she planted another soft, sensuous kiss on his ass. \"You are a virgin this way. That's what you told me. How do you know you can take my nice, hard strapon dildo as I slide it deep inside you?\" Her hand crept up to the shaft of his steel-hard penis now pointed straight to the ceiling with a droplet of pre-cum glistening on the velvety head. \"You're not lying to me, are you, Miguel?\"\n\nLela gathered the droplet of his arousal on the pad of her fingertip and then released his cock. The swirl of liquid on her fingertip reflected the light as she drew her hand away from him. She asked again, \"You seem so sure you'll be able to take it, my love. If you're really a virgin, it must mean that you are desperately eager for me to take your virginity. Is that it?\"\n\nBefore Miguel had a chance to answer, Lela pried his cheeks open with one hand, again exposing his pink anus, and she slid the fingertip coated his pre-cum directly across his starfish. He gasped. Then grabbing his firm globes with both hands in order to open him completely, she extended her tongue and plunged it deep inside him.",
        "\"A mi dios!\" he growled, his cock twitching rapidly.\n\n\"You taste wonderful,\" she said, rocking back on her heels to gaze in satisfaction at the shiny orifice in front of her. \"My little virgin just experienced another first, didn't he?\" she asked, confident in the answer as she stood up and stepped in front of him, wrapping one hand around his erect dick and pulling him behind her, leading him like a puppy to a spot at the side of the sofa.\n\n\"I want to take you with your gorgeous ass up high in the air, Miguel,\" Lela said as she untied the jersey fabric belt around her waist. \"I am very wet thinking about this.\" She pushed him down over the arm of the sofa, tapping lightly on his ass. \"High, my love. Keep this lovely naked butt way up high. That way, I can see how nice and hard you are as your cock and balls put on a sexy show for me between your spread legs.\" She shrugged off her dress. \"Ummmm, that's it. Such a lovely sight.\"\n\nThe camera took the cue and panned back to frame the sight Lela had just described. Miguel was a man in great shape, his body toned, his ass firm and taut. He was also nicely endowed, and his erect cock bobbed beneath him until he reached one hand to the base of his dick and levered it backwards so he could lower himself just enough over the arm of the sofa to rest his abdomen on it yet have his cock and snugged-up balls available to Lela's manipulation in front of the sofa arm. The result was that he did keep his ass up high for her, but he was also offering his genitals to her gaze, her hands, her mouth, or any other means she wanted to employ as a way to use his cock and his balls\u2014as well as his asshole\u2014for her personal arousal.\n\nIt was a stunning display of naked male lust for a good, hard, deep-grinding strapon fucking.\n\nChloe had an orgasm.\n\nIn the video, Lela reached for a bottle of lube on the coffee table, popped the cap and tipped it toward the top of Miguel's ass crack. \"Reach back and spread yourself open for me,\" Lela said in a husky voice. \"Hold yourself wide apart and relax your asshole, lover. I want to watch the lube slide down over the place where I'm going to fuck you.\"\n\nGod! thought Chloe, hugging her knees to her chest as the tremors from her orgasm coursed through her body. I can't stand how sexy this is!\n\nIn spite of an orgasm only moments before and the resulting sensitivity of her clit, Chloe inched her hand back to her crotch, gingerly nudging one finger against the shaft of her clitoris. The visuals before her\u2014Lela stepping into the harness as she cooed to Miguel how hot she was as she readied herself to take his upturned and exposed ass, which was sexily displayed as the glistening lube slid downward onto and over his eager pucker\u2014forced Chloe to reach for another climax. Retracted under its hood, her pleasure nub was still firm, though exquisitely sensitive, and Chloe grasped it lightly through the engorged tunnel of the slick skin covering her hard little shaft. The almost unbearable mixture of tortuously intense sexual arousal mixed with desperation for ecstasy was like nothing she had ever put herself through before. With gasps coming in a short, uneven staccato rhythm as she watched Lela's masterful taking of the third, and final, conquest necessary to satisfy the terms of the bet, Chloe drove herself past every over-sensitized physical sensation as she witnessed the consummation before her on the screen.\n\nLela had squeezed out lube into her palm and was stroking her fake cock as it jutted forward, proud and firm, glistening slick. Miguel had released the grip on his firm glutes that Lela had directed so the lube could roll down the valley between his cheeks and onto his asshole, and now his buttocks were squirming in anticipation. \"Please, Lela, you are a most naughty lady teasing your man like this!\" He arched his back even more, thrusting his ass upwards in a display of pure lust to be opened and penetrated. \"You will do me now, yes?\"\n\nIt was a question, a plea, a mournful begging all in one sentence.\n\nChloe was stroking her clit furiously now, the intensity of her arousal overpowering every physical sensation except a nothing-else-exists-in-the-world need to come. She had pushed two fingers of her other hand inside her sopping pussy, sliding the fingertips against the walls of her silky depths, then pausing to press a fingertip against her G-spot.\n\nThe camera showed Lela advancing toward her desperate male, his hips gyrating in anticipation as he continued his pleas for the sexy woman to take his anal virginity. \"See, mi mujer, I am open for you. See my invitation!\"\n\nLela spread his cheeks wide apart, and Miguel's asshole relaxed, an aperture appearing in the center. The camera caught it in gorgeous, loving detail, every crinkle of his surrender open and available for inspection by both Lela and all who watched the scene in this powerfully erotic film. The viscous lube coating his pink anus did not camouflage or obstruct the evidence that he had, indeed, opened himself to Lela's strapon\u2014the small opening in the center verified his overpowering desire to be penetrated.\n\nChloe's hungry gaze fixed on Miguel's pink, vulnerable opening as she climbed quickly toward the inevitable.\n\n\"You are such a sexy little virgin, Miguel,\" Lela said, pushing her hips slowly forward as she held him open to the camera's focus. \"I am going to slide this strapon dildo deep inside you.\" She positioned the tip of the purple phallus directly over the opening he had surrendered. The tip made contact with the lube that was slowly sinking into the depths of him. \"I can't possibly be slow and gentle with you right now, lover. You've made me too hot and horny for that!\"\n\nLela drove the full length of the shaft in one thrust deep into Miguel's asshole.\n\nChloe saw Lela push her hips against Miguel's flanks, the dildo buried completely inside him as he yelled in lustful surprise, bucking back against her. Her lovely tits jiggled with the motions created when she grabbed onto his powerful shoulders, riding him to her own approaching orgasm.\n\nWhatever came after that, Chloe missed. She had slipped into some kind of oblivion that allowed no sense of where she was, what was to be seen, or what sounds were to be heard.\n\nThe only thing in Chloe's existence at that moment was the most powerful and absolute sexual release she had ever known.\n\nWhen she was able to refocus her senses from near black-out ecstasy to what was happening on the screen, she had missed what must have been an explosive mutual climax by Lela and Miguel.\n\n\"Oh, baby, you did great,\" Lela panted, stretched out on Miguel's back as he lay still bent over the arm of the sofa, her strapon dildo having slipped from his asshole and hanging down between her legs, brushing up against his ball sac. \"You took every inch that I stroked into you, my love.\"\n\nMiguel was shaking his head, as though clearing stars from his eyes. \"You did not tell me, mujer deliciosa, that taking me like that would make me come so hard and so much. You are very, very bad.\"\n\nLela eased up from on top of him and stepped back just enough to once more spread his asscheeks open to her gaze. \"You are the one who is bad, Miguel.\" She leaned down to blow gently against his asshole. \"You lied to me about being a virgin, didn't you?\"\n\nThe camera caught Miguel's smile as he levered up from over the arm of the sofa.\n\nChloe was an absolute basket case, a puddle of spent desire, body wracked with the kind of overwhelming sensation that made her wonder if some cosmic genie had just granted a request to force upon her the most physical pleasure possible. Drunk with the aftereffects, she was barely lucid enough to have a single thought: \n\nGeorgia was right!\n\n***\n\nChloe was excited on Friday morning. Georgia would come to the lab that afternoon, and if things went as Chloe hoped, she would get brain scans of the kind of intense, long-duration female orgasm that would be a gold mine of information to support a noteworthy journal article. The researcher/tenure-track professor in her was giddy at the thought of a research breakthrough.\n\nBeyond doubt, though, she was also excited at the thought of witnessing Georgia's excitement, knowing what the co-ed was watching while masturbating. Having seen some of the crazy-sexy scenarios that well-done strapon man-fucking videos could produce, Chloe now had first-hand experience with the multiple erotic aspects of a woman penetrating the male asshole for her pleasure and his. She had lived through the mind-blowing orgasm that masturbating while watching a hot, nude, prime-time, hunky stud take it in the ass from a sexy woman strapped into a stiff, fake cock could produce. \n\nThat knowledge meant she would have a far better perspective on what was happening during the read-outs on her computer screen as Georgia lay beneath the scanner. No male researcher would ever have that perspective, that intimate knowledge of what was going on in the mind of the research subject.\n\nShe grinned to herself as she began preparations for the afternoon's experiment. Maybe now she should consider herself the same kind of researcher as those intrepid souls who gather anthropological research by living with native tribes, learning their languages, and dressing and acting like them in order to discover from an \"embedded\" perspective what it was like to \"be\" a member of that society in order to learn what and how they think. \n\nGiggling out loud at the thought as she checked through items needed for the afternoon's experiment, Chloe decided that doing anthropological exploration in a society where women donned strapons as part of a regularly occurring religious ceremony would truly be a marvelous research assignment. All manner of detail rushed to her mind at this thought: The women would take the men of the tribe one by one on a symbolic sacrificial altar where the act of screwing them in the ass until intense female orgasm was triggered was deemed a cleansing ritual that purified the men's souls, allowing them to be proficient hunters as well as proficient lovers. The men would approach the altar, reverently presenting their naked genitals for inspection by the women, who would handle their cocks and balls to the point of erection, with glistening pre-cum on the head of their dicks the indication that they were ready for the gods to bless them with the purification their women would provide in the form of a thick phallus stroked repeatedly into their assholes until the act brought the women to resounding orgasms.\n\nLabeling the folders for the data that would be generated this afternoon, Chloe licked her lips unconsciously as her mind drifted to the sight of a lithe, finely muscled young native man of, say, 25 years, spreading his legs as he leaned over the altar, his cock and balls clearly visible and in an evident state of arousal. He would be told to reach back and spread himself open to allow one of the teen-aged and virginal girls of the tribe tasked with uncorking a large urn of lubricant and tipping it at the top of his ass crack to perform her duty. She would step back from the ceremony, and the woman who was about to take the young hunter would press a finger through the lubricant and into the man's asshole, stroking in and out as the women witnessing the ritual chanted in unison to the thrusts of her finger: \"Gods of plenty, bless our tribe with successful hunting and many babies! See our promise made to live in peace and harmony, woman with man, and man with woman!\"\n\nWithdrawing her thoroughly coated finger as evidence that she had completely coated the dark tunnel inside the hunter's ass, the woman would approach the bent-over male, grasping her strapon at the base and running its smooth surface around and over his glistening asshole, crack, and balls to smear the gooey substance all over her fake cock. She would then point the phallus directly at his asshole, nudge it into place, and then drape herself over his back while grabbing onto his hips, all in strict accordance with the ceremonial protocols for the ritual. Then, the globes of her beautiful ass would shimmy with each thrust as she fucked him with utter abandon (as required by the gods) until he cried out in delirium and she had a quaking orgasm.\n\nThe ceremony would conclude as she withdrew her strapon from her tribe's hunter, the side of the altar dripping with the cum he ejaculated as she screwed him in the ass.\n\nThe wide-eyed, virginal teen who had performed her duty with the urn of lubricant would have watched intensely, learning from the woman wearing the strapon, and knowing that she would someday take her turn at the altar behind the muscular flanks of one of the tribe's men.\n\nSnapping back to reality as she noticed she had repetitively created sixteen data folders during her daydream, Chloe shook her head in wonderment.\n\nWhat is happening to me? Why am I obsessing on the thought of women screwing men in the ass with strapons?\n\nShe would return to that native-tribe-religious-ceremony fantasy, she knew.\n\nThe morning crawled by at a snail's pace until Chloe was ready to check out the operation of the goggles Georgia would wear underneath the scanner in order to view either \"Tutoring Samuel\" or \"Losing the Bet, Winning the Game.\" The process was usually one in which she turned on the DVD player, donned the goggles, and watched in disinterest for five seconds or so just to ensure the machinery was all working properly, and then checking a computer read-out against the amount of time she had spent with the video running as shown on the digital display of her stop watch.\n\nThis morning was different. Samuel's education was too arousing to limit to five seconds.\n\n\"Dr. Burrell?\"\n\nChloe almost jumped out of her skin at the light touch on her arm as she leaned against the scanner platform with the goggles and earphones on, stopwatch in hand.\n\nKatrina was plunging her strapon into Samuel's upturned ass as he moaned repeatedly about how good it felt.\n\n\"Dr. Burrell, that replacement ethernet card for the number five computer just came, and the tech resources guy needs your signature.\"\n\nIt was Mandy, one of the lab's research assistants.\n\nGod! Had she heard anything from the headphones Chloe was wearing as she \"checked out\" the system for the afternoon's experiment?\n\n\"What?\" Chloe said, immediately pressing the stop button on the side of the goggle's cumbersome mechanism for keeping the entire contraption properly positioned over the user's eyes. \"What did you say, Mandy?\" she asked, placing the stopwatch on the scanner platform.\n\nThe girl looked closely at her as she laid the goggles-earphones combination next to the stopwatch. \"You know, that ethernet board that got fried yesterday during the server surge?\"\n\n\"Oh, yes. Of course,\" Chloe responded, pushing her hair back into place after the mussing it had taken with her surprised and hasty removal of the goggles and earphones. \"I was checking the time code against the visuals for this afternoon's experiment. Sorry.\"\n\nIt was logical. It was to be expected. Mandy should believe it.\n\n\"I apologize for interrupting your work, but you did ask me to let you know the instant they brought the new board up,\" Mandy said, anxious to let her supervising faculty member know she was just following instructions.\n\nOvercompensating in her relief, Chloe said, \"Thanks, Mandy. You did the right thing, the exact right thing. You know that these time code checks are routine and can be restarted with no problem. Getting this board installed, though, well, that's a high priority.\" She took the paper and pen the girl proffered and signed the work order. \"Please unhook the cables and cords\u2014you know I don't trust anybody but you with our computer set-up\u2014and then let the TR guy take it down to their shop.\" \n\n\"No problem,\" said Mandy as she left the scanner room. \"Sorry again to have disturbed you,\" she said, closing the door behind her.\n\nGood grief! thought Chloe. She felt like a teen-aged girl who, having heard a knock on her bedroom door, hastily stuffed the Playgirl Magazine she'd been looking at and giggling about with her friend on the phone who was looking at the same issue.\n\nDamn! There wasn't any reason to apologize for grown-up sex! An adult woman shouldn't have to feel apologetic or guilty about having sex with an adult man in a way that involved a strapon dildo, his lubricated asshole, and their mutual enjoyment.\n\nBut she did.\n\nMaybe that was part of the appeal . . .\n\nIt would NOT be right, though, for her dean, her research subjects, Mandy, or anyone she came in contact with as part of her work at the university to ever, for even a second, suspect that she was being sexually aroused by any topic in her research. No, that was the ultimate taboo. Grant funding, journal article and book chapter acceptance, speaking invitations to professional conferences\u2014they all depended on her ability to maintain a coolly analytical, this-is-totally-about-scientific-research approach to her work.\n\nBreathing a sigh of relief after pressing the cups of the earphones against her thighs and playing \"Tutoring Samuel\" through the goggles and phones to verify that no sounds escaped that Mandy might have heard, Chloe vowed not to watch anymore strapon man-fucking in the lab for ANY reason, equipment check or no. It was just too easy to get sucked into the fantasy, to forget where she was. From now on, she would check out the time code using the credits of the DVDs, not the scenes that she knew would distract her to the point of becoming lost in the fantasy of being there, of being the woman in the video who was gripping the naked man's hips as she thrust her strapon deep into his asshole, riding him to their mutual, intense sexual satisfaction.\n\nThen, for what?\u2014maybe the hundredth time?\u2014Chloe wondered what it would feel like for real to do this incredibly erotic, naughty, intimate, fantastic thing. Her nipples were erect from watching Samuel take it in the ass and had remained erect during the rush of anxious worry that Mandy might have discovered her enjoying Samuel's penetration. Finally, she gave herself permission to squeeze them lightly through the material of her blouse and bra in an attempt to relieve, at least temporarily, the ache that had so quickly developed after she pressed the play button on the DVD only minutes before.\n\nIt didn't help, and she knew it wouldn't. The pinch only intensified her lust to actually be strapped into a fake cock, a nude man bent over in front of her, his cute, pink pucker exposed as he surrendered himself to the screwing she would give him as she rode him to an inevitable, intense, and completely draining\u2014yet totally satisfying\u2014orgasm.\n\nWhat would it be like? To feel it? To do it? Could she handle the orgasm? If she had come so intensely watching the act, would DOING THE ACT be even more mind-blowing?\n\nWould she ever find a man to do this with her? Oh, how good it had felt that first time she contemplated finding a lover, a mate, who also would play with her like this! Did such men exist? Would she ever meet one?\n\nAnd then a cloud settled over Chloe's mind. She hadn't even had a date in six weeks. How long would it be before the next? What were the odds that her next date would be with a man who would acquiesce and be turned on by surrendering his asshole to her strapon penetrations? Even if she did find such a guy, how long would it take to reach that point with him? Months, at least, probably years. And where, given her current circle of professional acquaintances, grad students, faculty colleagues, and various journal editors or co-researchers (which were just about the only people with whom she interacted, owing to the insanity of her schedule and work load) would she find a potential lover adventurous enough to explore her desire to take his anal virginity?",
        "(Yes, it had to be a virgin if at all possible. The thought of being the first one to do a guy like this, to take him to a place he had never been before, was powerful. Maybe it was her introduction to strapon man-fucking via a video that depicted a confident, experienced woman tutoring a college stud through his deflowering that had done it, but making her first strapon experience one in which she guided her fake cock into the asshole of a guy experiencing the sensation for the first time was almost non-negotiable\u2014\"almost\" because doing ANY guy in the ass with a strapon would be fantastic.)\n\nHer gloom darkened during lunch. She would be around the subject of strapon man-fucking for at least as long as it took to conduct this experiment with Georgia. Then there would be analyzing data, all the while knowing what caused the brain state she was investigating. Then would come the months involved in writing the article, including whatever comments she could devise in stilted academic narrative to describe her research, before submitting it for review. It would be so frustrating!\n\n\"Whoa! Who peed on your dishes?\"\n\nIt was Faye Davenport, a modern languages professor that Chloe knew from the institutional effectiveness committee she had worked on last year. Faye had become a friend, a female connection outside of the department in which Chloe worked. Faye was a junior faculty member, only two years into her appointment and still four years away from going up for tenure. Her irreverent approach to the staid world of academe was a big reason Chloe liked her. Faye was also single, never having married but definitely desirous of a long-term relationship. She had shared that hope with Chloe.\n\n\"Mind if I join you? But if you're really intent on staring a hole through the table in whatever funk that's eating you, I can move to--\"\n\n\"No, no, Faye, please.\" Chloe scooted her tray a bit closer to her, giving Faye a larger space to put down her own tray. \"I admit I must be broadcasting plenty of 'Life Sucks' signals.\"\n\nFaye sighed as she set down her tray and pulled off the paper ribbon that wrapped the napkin and plastic utensils. \"No apologies necessary, Chloe. I've been in exactly the same place lots of times here, and I haven't been here nearly as long as you.\" Dipping her spoon into a styrofoam cup of steaming chili, Faye brushed away a strand of red hair as she blew gently on the concoction to cool it down. \"Research going south?\"\n\nPushing the noodles of her chicken alfredo around on the plate in front of her, Chloe sighed and put down her fork. \"No, and that's the hell of it, Faye.\" She looked at her friend, the noodles in their gooey white sauce cooling on her plate. \"I'm probably going to get great data today that I'm sure will lead to an article that should generate a buzz. It'll probably get me invitations to speak and write about the findings. This is all going to be super.\"\n\nFaye spooned chili into her mouth, savored the spicy stew for a moment, then swallowed as she considered her friend's statement. \"And this is a bad thing?\"\n\n\"Of course not. This is going to be great for me. It's probably going to be the breakthrough research that will ensure tenure.\" Chloe slumped back in her chair.\n\n\"You know, this is definitely weird,\" said Faye, stirring the chili to help it cool down faster. \"Everything you just said should be creating a way different reaction from what I'm seeing. What am I missing?\"\n\nChloe had never gone much into the subject of her research with Faye. Sure, her friend knew Chloe was on the neuroscience faculty, but Chloe seriously doubted that Faye had ever read one of Chloe's articles. The university didn't do a lot of publicity about its neuroscientific \"sex research\" for obvious reasons\u2014it didn't want to attract negative attention to what might be an easy target for people wanting to criticize research spending. Therefore, Faye and the rest of the university's faculty, unless they were in her department, were probably not aware of exactly what it was that went on behind the doors of Chloe's lab.\n\n\"Let's just say that, in spite of the professional rewards coming my way, the personal rewards have been shit.\"\n\nFaye looked at Chloe with instant sympathy. \"Men, right?\"\n\n\"No,\" said Chloe, crossing her arms as she leaned against the back of her chair, \"a decided LACK of men.\"\n\n\"How long?\"\n\n\"Six weeks and counting since a date.\"\n\nFaye put her spoon down. \"You're right. That IS a decided lack.\"\n\nChloe looked at her friend. \"What do you do? You know how it is at this university.\"\n\nFaye pursed her lips into a sly smile. \"Well, during a true dry spell, the batteries and power tools are always handy.\"\n\nThat broke through Chloe's cloudy demeanor, and she laughed.\n\n\"Guess we all have them, huh?\"\n\n\"Sometimes, Chloe, they are ALL we have.\"\n\nThe ice broken, Chloe confessed, \"Yeah, I take that option, but I'm really bummed about the lack of prospects, the weeks and months ahead without a guy to kick back with and try to forget this insane academic rat race. Don't even tell me it might be years. That would make me slit my wrists.\"\n\n\"Chloe, Chloe, don't be so negative,\" Faye said, her voice laced with concern. \"You'll find some guy, I know it. You're attractive, smart, funny. You're not dating only because you haven't taken time to date. I know lots of guys that would like to go out with you.\"\n\n\"That's just it, Faye,\" Chloe replied as her friend spooned up another mouthful of chili. \"Time is what I don't have. I'm close enough to my tenure review that I have to put on the big push, you know? As the only woman in my department, I have to work extra. I can't make one slip. I have to constantly go beyond what any man would have to do to get the same respect. It's stupid in this day and age, but I'm stuck with it. It's enough to make me consider changing careers.\"\n\nAgain, Faye put her spoon down in concern. \"Don't talk crazy, Chloe. You know you're just saying that.\" She reached her hand across the table to grab Chloe's wrist. \"Besides, the rewards are going to be so satisfying. Not only will you get tenure, you'll get the satisfaction of telling all the old farts, 'I told you so!'\"\n\n\"Yeah, I know you're right. It's just that some days the fact that there is absolutely no balance, and no man, in my life really gets to me.\"\n\nChloe did not mention that the intensity of her dissatisfaction at this particular moment had been initiated not just due to the lack of a man; it was that the man she was lacking was, as well, not whispering into her ear how sexy she looked wearing her strapon and how eager he was to open up for her.\n\n\"Look,\" Faye said, \"we're both trying to figure out where the available men are at this university.\" She picked up her bread and smoothed a pat of butter across it. \"When you eliminate the student body, both the grads and the undergrads, that leaves . . . wait . . . let me figure,\" she said, making a funny face as she looked up in mock concentration, \"oh, about NONE!\"\n\nFaye was the perfect antidote for Chloe's mood. She laughed at her friend's estimation of the university dating pool.\n\n\"Makes me sometimes wonder if I'll be able to continue keeping my hands off all my students,\" Faye winked. \"Robert in my French lit class is hot.\"\n\n\"But you won't,\" Chloe said, with a warning look. \"No, but thinking about Robert while I have the vibrator out is not something my review committee will ever find out,\" replied Faye, popping the bread into her mouth and then smiling smugly, exaggerating the effect just to coax a giggle from Chloe.\n\nThe two friends settled into a conversation that lightened Chloe's mood, and she walked back to her lab after lunch feeling much better.\n\nMaybe she'd find a guy soon\u2014somehow\u2014and maybe he'd be an adventurous lover.\n\nIn the meantime, her enthusiasm about the afternoon's experiment was ramping up.\n\nGeorgia arrived on time, and Chloe had prepared everything in advance. When the girl stepped from behind the screened-off changing area wearing the same attire she had donned for her first experience under the scanner, Chloe explained the added part of the day's experiment.\n\n\"It's important that you replicate the conditions that create your best orgasms, Georgia, so I took the liberty of ordering a couple of videos for you if you think watching a video while you masturbate this time will help you relax and focus on your favorite fantasy.\" Chloe watched closely for Georgia's reaction. She was ultra-sensitive to how she interacted with research subjects. Years of experiments had schooled her well in the delicate nature of the human psyche, especially when the research concerned sex.\n\nGeorgia was a trooper, though. \"Great!\" she said, genuine delight in her voice.\n\n\"I have two DVDs, but they're both focused on the kind of sexual activity you described as always creating your most intense orgasms. I hope--\"\n\n\"What are the titles?\" Georgia asked, interrupting in excitement. \"Like I told you last week, Dr. Burrell, it hasn't been that long ago since I found this particular turn-on, but I have to say that it's been hard to find this kind of video that's any good.\" She hopped up on the scanner bed, toys in hand. \"And I have definitely looked.\"\n\n\"Well,\" Chloe said as she helped the girl into position underneath the scanner, \"one is called, 'Losing the Bet, Winning the Game,' and the other is, 'Tutoring Samuel.'\" Chloe pulled the blanket up over Georgia, already knowing the girl's masturbatory technique would not cause excess motion that might compromise the readings.\n\n\"You must have found the same internet site as I have!\" Georgia exclaimed happily. \"I haven't yet ordered, 'Tutoring Samuel,' but the other one is just absolutely, incredibly hot. That scene where Lela has Miguel bent over the sofa, doing him with her strapon, and then in the middle of it he gets so excited that he reaches underneath himself to jack off because he's so hot and bothered\u2014god, that just drives me right over the edge every time I see it.\"\n\nChloe hadn't allowed herself a second viewing of \"Losing the Bet, Winning the Game\" because she knew she wouldn't be able to handle the intensity of the kind of orgasm it gave her the first time so soon after that initial viewing. However, what Georgia had just described\u2014Miguel fisting his cock as Lela fucked him over the arm of the sofa\u2014was something that must have been shown during the immediate aftermath of Chloe's explosive orgasm. She didn't remember that part of the scene.\n\nTonight. Yes, tonight, Chloe would watch Miguel jack off as Lela screwed him with her strapon.\n\n\"So, Georgia, would you like--\"\n\n\"The one I haven't seen yet, Dr. Burrell,\" Georgia said eagerly. The motions underneath the blanket covering the girl as she lay on the platform let Chloe know that Georgia was inserting her vibrator inside her pussy and positioning it to her liking. \"I mean, it's a good one, right? I know it's from the same company that sells the one with Lela and Miguel, so it's going to be good, too, right? Have you seen it?\"\n\nWhat was the proper research-scientist response to that question? Chloe wondered, worried that the wrong answer might make Georgia wonder whether Dr. Burrell's research was for ulterior motives. She decided to fib, at least a little bit.\n\n\"Yes, I have watched it, Georgia. I had to in order to time code the video to the scanner read-outs.\" That was a very safe answer that would instantly eliminate any trace of concern any subject might have had about this experiment. It was partly true, too (though a software program did the coding automatically, Chloe did have to spot check the results). Her answer to Georgia's question, though, lacked the full disclosure of, \"I watched it while stroking my clit, tugging on my hard nipples, and coming when I buried two fingers up my pussy to push against my G-spot as I watched that sexy man's asscheeks being spread apart and his tutor's strapon sliding hard and deep into his opened asshole.\"\n\n\"So, is 'Tutoring Samuel' just as good as the one with Lela and Miguel? Does it have the same kind of action?\"\n\n\"I know you'll like it, Georgia,\" Chloe answered with a smile. \"Samuel is hot, and the woman who tutors him REALLY does a good job of it.\"\n\n\"And to think I'm getting paid for this,\" Georgia mused in wonderment as Chloe fixed the goggles and headphones into place on her subject's head.\n\n\"Remember to try to minimize all motion,\" Chloe reminded the co-ed as she stepped to the control panel to start the computer.\n\nThe results were everything Chloe had hoped for. Georgia rocketed through all stages of arousal in record time in response to the care Chloe had taken to start the video at the part where Kartrina was convincing Samuel to disrobe for her as she stepped into her strapon harness while telling him how good she was going to make him feel. Chloe wanted to see how fast Georgia could reach the intense orgasm she claimed she always had when thinking about or seeing a woman using a strapon on a guy, so anything shown before the inevitable lead-up to the act followed immediately by the act itself would have compromised that aspect of the experiment.\n\nGeorgia was truly the perfect research subject. Whereas Chloe's intense orgasm brought on by seeing Lela take Miguel in \"Losing the Bet, Winning the Game\" carried with it lots of physical jerks and involuntary motions, Georgia reached a true black-out of bliss that lasted for several seconds of almost no motion. That was great for minimizing the artifacts of involuntary motion that would otherwise have sullied the readings. Darkened areas on the scans indicated shut-down of neural activity in multiple areas for the duration of the girl's deeply intense orgasm.\n\nGod, she was right! thought Chloe, her hands shaking with excitement as she ran them through her hair while watching the computer monitors. Georgia had just experienced an orgasm that was even more intense than the one she gave herself the week before in the lab. Fascinated, Chloe's gaze locked on the time read-out at the bottom of the monitor which was displayed right next to the counter showing the size of the file being generated by the readings. As the darkened regions of activity on Georgia's scan lingered on the monitors, the clock's digits climbed steadily upward as the file size grew to at least triple that generated by any other female experiencing orgasm during any experiment Chloe had ever conducted.\n\nAs gigabytes advanced toward terabyte, Chloe started to become concerned. Had Georgia had a seizure? Shit! A stroke?\n\nThe girl stirred. Chloe breathed a huge sigh of relief and saw the darkened areas in the scan flicker back to life. She rushed to the scanner platform, punching the button to slide it out from underneath the maw of the imposing scanner head even before coming to a full stop at the scanner's control panel. Being as gentle, but as quick, as possible in removing the goggles and earphones, Chloe placed the fingertips of one hand on the girl's forehead in order to raise one eyelid with her thumb and check for a reaction to the light in the lab.\n\nGeorgia's eyes rolled forward, and she focused on Chloe's face peering over her. \"I'm okay, Dr. Burrell. Can I please just lie here for a minute?\" she mumbled.\n\n\"Of course,\" Chloe whispered, stepping back from the platform and taking a seat on the straight-backed chair to wait for Georgia's eventual refocus to full consciousness.\n\nHer concern and rush to the scanner had meant Chloe's recordings would not include all the data that would have come with Georgia's return from her intense orgasm to full, wakeful brain function, but Chloe was okay with that\u2014the brain readings would have startled any researcher and prompted similar action.\n\nThe French characterization for an orgasm, la petite mort\u2014the little death\u2014had been spectacularly justified in this experiment.\n\nChloe's interruption in the readings, though, did not take place until Georgia had started to return from her fantastic bliss-out. The data would be uncorrupted before that point, and the powerful description of what had taken place that caused Chloe to rush to the girl's side (yes, even though it would have be written in that stilted, third-person academic jargon) would add immeasurably to the appeal of the article. This would definitely qualify for a top-tier journal, and Chloe would be the researcher who, in the months it would take the article to go through the peer review process (generating buzz as it did so), would be continuing work in this area. During that time she would build a reputation as the pre-eminent authority on la petite mort brought on by female fantasy coupled with self-stimulation.\n\nTake that, you bunch of big-headed, little-dicked, couldn't-get-it-up-with-a-crane horde of male intelligentsia in academe purporting to know all about the female orgasm!\n\n(Okay, she was guessing about penis size and function, but it was just too satisfying not to put her mental exclamation of glee into those terms after all the years of being a second-class citizen in the world of the neuroscience of sexuality.)\n\nWait! \"La petit mort\" was surely a term coined by a man.\n\n\"Burrellian Threshold\" had a much better, far more satisfying ring to it, thought Dr. Chloe Burrell.\n\n***\n\n\"Amante! You are driving me crazy,\" panted Miguel as Lela plowed into his ass with her strapon. The woman was truly practiced in the art of man-fucking, Chloe noticed on her second viewing of this very sexy video, a viewing prompted by Georgia's comment about the part of the scene that Chloe had obviously missed after she crossed the \"Burrellian Threshold\" on her initial viewing of the film. It was hypnotic watching the serpentine motion of Lela's hips and back as she fucked him, her breasts swaying seductively with their hard nipples distended in arousal. \n\n\"Oh, I love hearing you say that, Miguel,\" cooed Lela, increasing her tempo just a bit. \"I love seeing my strapon cock sliding in and out of your asshole, baby. Tell me how much you like it.\"\n\nLela was like a belly dancer behind him, undulating in waves that moved the strapon rhythmically in and out of Miguel's sexy opening.\n\n\"I can not talk now, naughty one,\" Miguel croaked, reaching underneath himself to fist his stiff cock and begin stroking with a tempo that matched Lela's erotic movements. Somehow the camera caught everything\u2014Lela's strapon sliding in and out of Miguel's asshole, her hips moving hypnotically as she fucked him, and his hand wrapped around his shiny, slippery cock, sliding up and down the shaft and head in the same tempo his opened hole was receiving the phallus strapped to her crotch. \n\nThe entrancing bolero built to its climax.\n\nThis was the part, Chloe thought as she increased her ministrations on her exposed, throbbing clit, that Georgia had reported never failed to\u2014 \n\nIt did the same for Chloe, and she crossed the Burrellian Threshold, once again missing Miguel's ejaculation and Lela's orgasm.\n\n***\n\nIt had been two months since the breakthrough with Georgia's strapon-fantasy-induced orgasm in Chloe's lab. In that time, she had replicated the experiment with Georgia, and then with two other women, providing her the groundwork to defend assertions in her article, which had been received favorably\u2014and to her surprise, in a matter of only a week\u2014by the first journal to which she had submitted it. \"An important piece of research,\" the editor had said in the letter, indicating that he would ask his editorial review board members to prioritize the reading of her article so that The Journal of Human Sexuality could publish the article quickly if the peer reviews that came in were as he suspected they would be.\n\nIt was a coup.\n\nBy this time, Chloe had both refined and expanded her research. The expansion was, well, as self-serving as it was scientifically defensible.",
        "Dr. Chloe Burrell, discoverer of the eponymous \"Burrellian Threshold,\" had been curious to find out if there was something unique in the images or sounds or sensations of \"female-to-male penetration during coitus\" that applied only to women. This, of course, meant she would need to do some research with men viewing the same subject matter.\n\nOh, sweet Jesus! Chloe thought the first time the idea came into her head. What if this turned on guys to the same degree? It would be SUCH a shame to have to spend hours and hours gathering data from research subjects, listening to the men describe why\u2014exactly\u2014the act aroused them.\n\nWorried that she would not be able to conduct such research without completely losing all professional decorum, Chloe delayed doing such experiments. My god! What if some great looking man looked at her and told her that the idea of taking it in his asshole from a woman wearing a strapon drove him absolutely crazy with lust?\n\nWhat would she do if THAT happened in her lab?\n\nIn the name of science, she would find out. Chloe fought down her worries and ran the ad soliciting research subjects.\n\nSo far, she was at a very preliminary stage in this aspect of her research. But she was batting a thousand: Both men who had viewed \"Tutoring Samuell\" registered intense arousal responses on her brain scans. One of them denied he was aroused, even feigned disdain at the subject matter.\n\nChloe knew he was lying.\n\nThe other, more honest, said it surprised him to notice his reaction. He said that he would have reported no interest in the act if someone asked him about it. This guy, of course, had never seen it happen, had never been exposed to the concept. But at least he admitted to getting aroused at seeing it happen.\n\nToo bad both those research subjects were undergrad students and therefore off limits in terms of a potential sexual dalliance for about a thousand reasons. Chloe would surely have been able to convince the kid who admitted his fascination and arousal that he needed his own 'tutor,' right?\n\nEven though there was no chance the two experiments thus far conducted with male subjects would lead to her own experience with a strapon and a naked man's eager asshole, the results lifted her spirits enormously. Maybe taking it in the ass from a sexy woman had an appeal for a lot of guys.\n\nWhether they knew it or not.\n\nIf so, finding a lover who would be into it might not be the difficult and protracted process Chloe had feared. Her work would make the subject so easy to bring up. She could show him 'the lab's' DVD in explaining the focus of her research. If his cock got hard as they watched it, well . . ..\n\nThe other intriguing aspect her research had turned up was the variation in the sequence of brain area bliss-out among her female subjects. For some of the women, it seemed that the executive function brain areas with neural routing to the auditory control centers blissed out first, yet for others, it was areas with connections routing into visual control centers. The discovery would further strengthen her notoriety as a researcher studying the Burrellian Threshold, and it would provide a rich vein of ongoing investigation.\n\nWhile her professional life had moved into high gear, bringing with it the satisfactions of an invitation to speak at the next Congress of Human Sexuality and an invitation to author a chapter in an upcoming compendium devoted to the female orgasm, Chloe's personal life remained devoid of an intimate relationship with a man. The only difference was that now she found herself more frequently fending off overtures\u2014usually at the increasing number of conferences her department was offering to send her to\u2014from men that she clearly had no interest in being with. Thankfully, the men in her department at the university were all married (and god bless the wives that somehow put up with them!), so at least she didn't have to deal with advances from the senior neuroscience faculty.\n\nThat was an especially good thing. A rebuffed male ego was capable of destroying a woman's academic career. Chloe had seen this happen.\n\nBut not having to worry about the consequences of telling a senior colleague she did not want to go out with him was no salve for the emptiness of her townhome when she went home each evening. It did nothing to replace a pair of strong, masculine arms enfolding her and drawing her close so the man could nuzzle her hair and tell her how much she meant to him. And it certainly did nothing to better the odds that she would someday slide a strapon dildo deep into some guy's asshole and fuck him to the point of a quaking, soul-splitting orgasm.\n\nChloe remained desperate to experience that, but the urge was also building for the man she would someday take in that fashion to realize that she was his perfect mate, the woman he needed and wanted at his side.\n\nIn the meantime, Chloe added to her DVD collection, all purchased from the same online vendor. Her single foray into another purveyor's library resulted in a turn-off due to the demeaning way the women were using the men, the names they called them as they made them suck their strapons before fucking them. It wasn't her cup of tea, not by a long shot, so she stuck with videos and stories of women who, though sometimes having to convince reluctant partners of the pleasure to be had at the ends of their dildos, screwed men who enjoyed being taken and who were also men comfortable in their maleness and in being protectors and lovers who could make a woman see stars during passionate love-making.\n\nAnd she ordered a harness and dildo. Just in case.\n\nAdvancing to the next stage of her research required somehow trying to separate audio-triggered orgasms from video-triggered orgasms among her subjects, and that meant Chloe had to find audio stories that could be listened to while underneath the scanner. Georgia had remained a loyal subject, providing lots of data generated by the intensity of her orgasms. This meant Chloe was obliged to find audio stories of strapon man-fucking, and that turned out exceedingly difficult to do.\n\nWhile thinking about a solution one day in the lab, Chloe considered writing a story and recording it herself. She knew exactly the kind of scenarios that would push Georgia's buttons, so writing the story would not be difficult. (And putting her own turn-ons down on paper would be enjoyable, Chloe thought, given that Georgia's enthusiasm for fantasizing to thoughts, sights, and the sounds of women bringing themselves off by fucking men with their strapons was just as intense as her own.) However, previous research by others had shown that there was a lessened impact on orgasmic intensity if a sexual fantasy was read to a woman by a woman (unless the listener was same-sex oriented). This meant that Chloe's story would have to be read by a man. Further, it would have to be read in a studio-quality setting so that poor audio would not distract the subjects as they listened (such distractions caused artifacts in the readings).\n\nWhat all this meant is that Chloe was going to have to find some guy to come to the Psychology Building on campus in order to sit before a mic in the little audio studio in the basement and record a story about a woman fucking a man in the ass with a strapon dildo.\n\nGood grief! Her line of work created all manner of embarrassing situations . . .\n\nBut then Chloe stopped that line of thought.\n\nPerhaps \"opportunity\" was a better description of this situation!\n\nThen a second thought: How could she approach a man with this request?\n\n\"Excuse me, but would you consider coming with me to the audio studio in the basement of the Psych Building and recording a pornographic story about a man being taken anally by a woman wearing a strapon dildo?\"\n\nHow well would that work out?\n\nThen she remembered the guy in the evening class to which she had spoken last year at that for-profit college with the Psy.D. degree program. The Psy.D. was a practitioner's degree, a doctorate designed for \"psychologist counselors\" as she had heard one of the senior faculty in her department describe it in none too positive terms. She had been impressed, though, with the college's curriculum, and it had actually been a positive thing for her to speak to the class\u2014she had explained to her dean that she had accepted the invitation in order to be a good colleague to an institution that would benefit from some observations by a university professor on a topic the students were struggling with at the time.\n\nIt was an enjoyable experience, and she was struck by the thoughtful questions from a man in the class who approached her after her talk and the class' dismissal. Knowing that the college's market included a fair degree of career changers, she was not surprised to see this guy\u2014probably mid- to late-thirties\u2014sitting in the chair-desks among the mostly female group of students who looked to be anywhere between mid-twenties and mid-fifties.\n\nWhat was his name? He had mentioned it when he introduced himself, saying he was enrolled because he had always been fascinated by the human mind, and he finally decided that his career as an actuary was never going to provide the fulfillment that he was seeking. He was keeping his day job and going to school at night, hoping to open a practice someday as a psychologist. Chloe's talk about the brain's limbic system as the seat of emotion had intensely interested him.\n\n\"Rick.\" That was it. He had introduced himself as Rick.\n\nWas he wearing a wedding ring? Chloe couldn't remember. She did remember his smile and his pretty brown eyes.\n\nThen it occurred to her why she had thought of him. His accent. It was-- \n\nOh, my! Chloe thought. Rick's voice was similar to Miguel's\u2014similar to that sexy, Latin baritone that was such a turn-on in counterpoint to Lela's throaty entreaties in \"Losing the Bet, Winning the Game.\"\n\nHad her subconscious just served up a memory based on her strong desire to take a man like Lela took Miguel? Even though Rick was not Miguel, was her inner self concocting a role-play substitution based on Chloe's fascination with strapon man-fucking?\n\nDammit! WAS Rick wearing a wedding ring? She had liked him. He was handsome, she recalled. His earnestness in learning more on the subject she had talked about impressed her, as did his easy acceptance of her as an authority on the topic, something he mentioned when he said he appreciated that someone with such a rich research background as hers would come speak to the class. And she liked hearing him talk\u2014that masculine voice with its sexy accent had actually caused her to ask him a question or two, just to prolong their conversation.\n\nHe would be perfect to record what Chloe needed for her research!\n\nNo, he was NOT wearing a ring\u2014she remembered now. She had purposefully taken note of that fact when he turned the pages of the textbook to a diagram in order to ask her a question. Then she remembered looking up into his smile. He must be\u2014what?\u2014about six feet tall? He was dressed casually, she recalled, but it was easy to tell he was in pretty good shape.\n\nWhat happened? Why had she not somehow sent a message, somehow opened the door to a follow-up conversation? She remembered leaving the college thinking about him as she drove home.\n\nShaking her head in disbelief at the missed opportunity and wondering what stupid, inconsequential concern must have prevented her from trying to connect with him (no time? can't be distracted? wait for the guy to make the next move? Shit!), she searched through her email archives for a message with the name of the college in it. The teacher of the class had contacted her to invite her to speak, and the teacher would know Rick, know if he were still at the college.\n\nIt took only a minute to find it. Dr. Talia Shropshire's office phone number was listed as part of her email sig file.\n\nThough the odds were slim that the woman would be in her office at the moment, Chloe punched in the number anyway.\n\n\"Hello? This is Dr. Shropshire.\"\n\nIt was a good omen.\n\n\"Dr. Shropshire, this is Dr. Chloe Burrell. You invited me to speak to your class about a year ago on the limbic system.\"\n\n\"Good to hear from you, Dr. Burrell! Thank you again for coming to our campus. Your presentation was quite helpful for the students.\"\n\n\"It was my pleasure,\" Chloe said, warming to the conversation. The entire experience had, indeed, been quite pleasant, and it was nice to reconnect with it in this manner.\n\n\"What can I do for you?\"\n\n\"Well, Dr. Shropshire, we have some research going on here at the university\u2014mine, actually\u2014and for various reasons related to my research protocols, I need to have an audio recording made by a male with a slight accent.\"\n\nIt was a lie\u2014the accent would not matter. It would, though, explain why Chloe was asking specifically about Rick. Too, given her position on the neuroscience faculty, which Dr. Shropshire obviously knew, the request for an accented audio recording could plausibly be connected to any number of research studies seeking to map brain function.\n\n\"And I remembered from my visit to your class a gentleman named Rick. He spoke with me after class about a couple of things related to my talk. He had an accent as I recall, and I thought that since he's enrolled in your college he might be receptive to this assignment. You can understand that we try not to have our own university students generate material that is used in our research. It simplifies the IRB process in a number of ways.\"\n\nAll of this was true, and Chloe was relieved to explain her reasons to someone who understood such things.\n\n\"Makes complete sense, Dr. Burrell, and I'm sure Ricardo would be interested. He's close to graduating, but he is taking his capstone course this semester. It's our college's policy not to give out information on our students, but I will ask him to contact you if he is interested. I know I have your card somewhere around here, but can you give me your phone number and email address so I can write them down? The capstone class meets this evening, and I can give your contact info to Mr. Torres then.\"\n\nAnother good omen.\n\nChloe began writing the story as soon as she hung up the phone.\n\nThe afternoon from that point on became a voyage of self-discovery for her. The story spilled out on her computer monitor as her fingers flew over the keys, seemingly with a will of their own. The story developed of its own accord, the characters speaking unconscious truths about Chloe's fascination with penetrating the male asshole.\n\nAnd the writing got her very, very wet. So wet, in fact, that she did something she had never done in her entire time as a faculty member at the university.\n\nChloe Burrell locked her office door, drew the blinds on the single window, sat down in the fake leather chair at her desk, and slid her slacks and her panties to her feet as she scrolled back up to the start of her story. She needed desperately to play with her clit and her pussy as she read the story she had just written. Her tale of two lovers, the woman leading the man through the stages that would have him ready and eager to surrender his tight opening, had her squirming in arousal as she had typed, translating into words on her computer monitor the action and characters that were rushing to her mind. Chloe had imprinted the story with her own passion to penetrate a man who would become her perfect mate. \n\nIt was so easy to write the story. The things she had read in the months since Georgia's first admission of her favorite fantasy, especially the advice from women who blogged about the subject in the various online venues which Chloe had trolled for more information about her obsession, meant she was quite prepared to write about how a woman could gently and lovingly guide a man to the point of desperation for her to push deep inside his virgin hole.\n\nNow it would be hot\u2014so very hot\u2014to read her own fantasy. It had made her pussy wet when she wrote it, even though the \"reader\" part of her brain wasn't fully attending to the actions or the words of her characters. Now, though, she could sit back and enjoy the story, knowing that what was to come in the tale would be exactly what HER idea was of ultimate eroticism. Chloe was eager to read about her heroine, Simone, who knew exactly how to bring the man, Trent (and his glorious, firm ass!) inevitably to the state of abandoning any thought in his head except for one (Go inside me, please!) and abandoning all ability to focus on any sensation except the crazysexyhot feeling Simone was creating in his asshole. \n\nYes, this story was written in order to be what Georgia would like to fantasize about as she masturbated under the fMRI machine in Chloe's lab, but it was also devised to be the most erotically persuasive description of the entire process of female-to-male penetration Chloe could produce. In every aspect of the narrative, from the woman's desire to make the man feel great to the care she took with his precious asshole and the lengths she went to caress and pamper him through each stage of his journey to ultimate surrender, Chloe's subconscious magically authored a story that aroused her intensely as the words popped up rapid-fire on her computer screen. It was a given that the story would get Georgia wet, hot, and eager to experience her favorite type of orgasm.\n\nChloe desperately hoped it would also lengthen and harden Rick's cock as he read it. \n\nIf he is a strapon virgin\u2014the default assumption, she reasoned\u2014the story must appeal in a way that would erase any preconceived notion, any reluctance about stereotypical gender roles, and be so hot that Rick would be fascinated and drawn to the idea of exposing and surrendering himself. The story had to be very erotic, make the idea of female penetration of the male anus arousing and seductive for a man, and accomplish these things in a manner that would not scare Rick away from the research.\n\nFrom Chloe.\n\nIt was a tall order, especially since Chloe knew so little of this man (and nothing of his likes or dislikes sexually). Somehow, though, the requirements to turn on Georgia to get what was needed for the experiment in the lab, AND to turn on Rick, to get what Chloe longed for in an experiment in her bedroom, filtered through to her subconscious author. The zone Chloe found herself in as she wrote her tale was as empowering as it was erotic.\n\nIf the story aroused Rick anywhere near as much as it was arousing Chloe, then she would have succeeded in her first attempt as a writer of erotica.\n\nAnd it would be the ultimate irony if her profession, with all the years of self-sacrifice and resulting lack of time to cultivate any personal intimate relationships, was now the thing that had provided her with the opportunity to find BOTH a man she might want to be with AND to coax him quickly toward the idea of surrendering his asshole to her strapon dildo.\n\nWith a mounting sense of anticipation to play reader to the words that had rushed in a torrent from her subconscious, Chloe drew one leg out of the rumpled cotton material at her feet which was her slacks and panties. She wanted to spread her legs wider. Her pussy was already wet. The fake leather would be easy to wipe down with a tissue from the box on her desk. She slid down just a little in the chair, tipping her crotch up a bit so that her entire pussy was easily accessible as she sat before her computer monitor. She could run her fingers completely up and down the entire length of her pussy lips.\n\nShe was at her desk in her office, for god's sake, about to masturbate as she sat naked from the waist down.\n\nWait. Her nipples. She knew it would feel so delicious to pinch and tug on her nipples as she stroked her clit while she read. Chloe unbuttoned her blouse. Today she had worn a favorite bra. It unhooked in the front. She undid the clasp, the cups of the bra falling to her sides, her nipples already hardened, areolae already pimpled in sexual arousal. Shivering briefly with the rush brought on by doing this so-wrong but so-sexy-naughty thing in her office (even with the door locked and the blinds drawn), Dr. Chloe Burrell exposed her breasts, her clit, her pussy to the easy access she had to have to those physiological pleasure triggers. Then she settled languidly back in her chair, mouse with scroll wheel positioned at the edge of the desk, about to dive into her story with the biggest pleasure trigger she possessed: Her mind."
    ],
    "authorname": "escriterra",
    "tags": [
        "strapon",
        "man-fucking",
        "asshole",
        "feeldoe",
        "butt plug",
        "finger fucking",
        "teasing",
        "deep throat",
        "dildo"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/dr-chloe-burrell-sex-researcher"
}