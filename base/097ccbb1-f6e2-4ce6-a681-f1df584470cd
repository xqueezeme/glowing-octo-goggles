{
    "title": "What The Cat Dragged In Ch. 26",
    "pages": [
        "I know this has taken a LONG time...but I hope you enjoy the result. psyche b\n\n26. Circle of Trust\n\nKelly lay mostly on top of Victor. His hands were drifting over her body, sometimes tracing designs with the tips of his claws, sometimes simply exploring her curves with his fingertips. \n\nThey'd tried going back to bed after Jimmy had come and collected their unexpected visitor, but the scent of Kelly's fear from her earlier nightmare was still too thick in the bedroom for Victor to sleep. Kelly couldn't get comfortable anyway. He'd stripped the blankets off the bed and made a spot on the living room floor for the two of them. After they'd settled, a comfortable silence grew between them and stayed.\n\nKelly watched as light crept in slowly, despite the fact that the curtains were all closed. It was gray and ephemeral at first, but it grew brighter in puddles under the windows. Kelly shifted to avoid an errant beam of sunlight. His arm tightened around her for a moment.\n\n\"You sleep?\" His voice was a soft rumble.\n\n\"No.\" Her own voice was as soft as his.\n\n\"Still upset?\" His fingers moved through her hair.\n\n\"No. Just not sleepy.\"\n\nHe shifted so that he could look at her. A little grin quirked the corner of his mouth. \"Son of a bitch, the ape was right.\"\n\nShe smiled a little. \"You thought he wasn't?\"\n\n\"Thought he lied.\"\n\nThere was nothing she could say. If she were honest with herself, she didn't fully trust anyone she'd met at the school, not yet anyway. She brushed her lips over his shoulder lightly, because she could reach it without moving more than her head. \"Hungry?\"\n\n\"Eh.\" His lips found hers, toying between tender teasing and the sharpness of a fang tip.\n\nKelly sighed and pressed closer. She was beginning to get lost in it when the sound of a phone shattered the moment. She could feel tension race through his body.\n\n\"I'll-\"\n\nHe growled and dug his claws into her bottom. The meaning was clear. Kelly stayed put and watched him get up.\n\n\"This better be goddamn good.\" He leaned against the kitchen door frame, his eyes were still on her. For a long moment he was silent.\n\n\"Oh for fuck's sake Jimmy, you know I didn't lay a hand on that kid and I ain't gonna go and defend myself to an old man.\"\n\nHe went silent, listening to whatever was being said on the other end of the line, his jaw was tense, his arms were crossed. One clawed finger tapped his bicep. Kelly reached for his shirt and put it on again. He drew his eyebrows together and looked at her. Kelly pointed toward the bathroom. He nodded. She wasn't sure if it was understanding or permission. Either way, it didn't much matter. She got up and trotted down the hall.\n\nKelly could hear him talking through the bathroom door, but she couldn't make out what he was saying. The tone of disdain in his voice was clear though. If he wanted her to know more, he would tell her when she got back out there. She washed up before going back out again. \n\nHe ended the call and tossed the phone back onto the counter. \"The old man wants to talk about that kid who was here this morning.\"\n\nShe looked at him curiously. \"What's there to talk about?\"\n\n\"Hell if I know. Figured if you wanted to, we'd go. If not, we won't.\"\n\nKelly shrugged with one shoulder and tried not to shiver in the chilly house. \"I'd like to see Cassie. I've been texting with her a little, but I haven't seen her since that first day.\"\n\n\"So we'll go.\" He grasped her arm. \"C'mon, I'm freezing my fucking balls off.\"\n\nShe smiled a little. \"Maybe you shouldn't walk around naked.\"\n\nHe grinned down at her. \"Oh yeah? You're my mate, it's up to you to warm me up.\"\n\nShe looked down at him, half-way hard already. In spite of herself, a blush colored her cheeks. \"I guess I could knit something. Maybe a modified sock.\" \n\nHis eyebrows shot up and then they drew together. A growl rumbled from his chest, his hand tightened around her arm. \"Knit something?\" He gave her a shove toward the sofa. She stumbled, but managed to keep her footing. A rush of nervousness chased down Kelly's spine. Her eyes flickered to his face. His eyes were filled with danger, but a little smile teased the corners of his lips for just a moment. Heat pooled in her lower belly. \n\n\"Think you need a lesson, little girl.\" He pushed her again, harder this time.\n\nKelly stumbled into the sofa this time. \"Victor-\"\n\n\"Still tryin' to tell me what to do?\" He gripped her arm again and turned her, forcing her to kneel on the seat.\n\nShe looked over her shoulder. \"No, I just-\"\n\n\"You what? You figured I'd gone soft and you could get away with anything?\" He grasped her collar and pulled the shirt from her back, his claws trailing burning lines from her left shoulder to her right hip. If she'd tried to hold onto it, he'd have twisted her arm from its socket.\n\nShe couldn't bite back a sharp whimper. Tears came to her eyes. \"That's not what I meant.\" The needy heat grew. Kelly didn't try to understand it, she shifted her knees apart.\n\nA clawed hand dug into her hair, twisting hard enough to bring a sharp cry to her lips. Her back arched downward, her fingers dug into the back of the sofa. He was behind her, over her, pressing against her entrance. Her fingers dug into the couch cushions until her knuckles went white. The dangerous growl still vibrated through his chest, but his thumb stroked over the back of her neck gently. \n\nIt was a fleeting gesture. One that she could easily have thought of as accidental, had she been less familiar with all of his subtleties. The animal was at the surface, but the man was holding it mostly in check. She relaxed under him, even though his hand took up a bruising grip on her shoulder. The way he entered her bordered on brutal, but it filled a hungry need in her. Kelly tilted her hips and fell into the cascade of physical and emotional sensations.\n\n*~*~*~*~*~*\n\nCreed glanced down at the frail. Little tremors chased through her body. She pressed closer against him, as if warding off a chill.\n\nHe'd moved them both back down to the floor when her body had threatened collapse under him. He knew why she was weak. She'd cum at least twice, maybe three times. He couldn't really tell, he'd been too engrossed in fucking her, in letting her pleasure and submission fuel the feral climax that set his senses on fire.\n\nIf he lived another five hundred years he'd never understand her. Sure, she reminded him of the human side of his nature and allowed him to revel in it, but she didn't flinch from the animal. How she knew whether he wanted fight and force, or teasing gentleness was beyond him. When it came right down to it, he didn't give a shit about the mechanism. It was enough that when he reached for her, she reached back.\n\nHis fingertips traced over the long highway of scratches he'd left over her back. In most places he'd managed to keep from cutting her too deeply. Even though he felt only raised trails and narrow scabs, she still flinched from time to time, pressing closer to him. The scent of fresh blood was still lingering in the air too. When he got to her shoulder blade, she whimpered and flinched away.\n\n\"Lemme see.\" His voice was a soft growl next to her ear.\n\nShe moved reluctantly onto her stomach. Blood welled up in the four side-by-side cuts. He moved his tongue over them carefully. She whimpered and he felt tension move through her body. He held her still.\n\n\"Victor-\" \n\n\"I know, you'll heal. Just shut up and hold still.\" He stroked the outside of her hip. \n\nShe caught his hand and gave a soft laugh. \"I was going to say that you're laying on my arm.\"\n\nHe pinched the back of her thigh and swept his tongue over the wounds slowly. \"What the fuck are you doing with your arm in my way anyway?\"\n\nShe looked over her shoulder, a smile playing over her lips. \"Guess I wasn't thinking.\"\n\nHe couldn't help but smile back. \"Fucking right.\" He shifted long enough for her to pull her arm away. \"What do you want for dinner?\" He pushed her head back down to the floor and licked the slowly oozing wounds again. \n\nHer body shook with a short laugh. \"That's what you're thinking about right now?\"\n\n\"What d'you want me to think about? Ponies and glittery rainbows and shit like that?\"\n\nA little giggle was cut short by a whimper when he hit a tender spot. \"I was thinking more along the lines of breakfast. Am I going to have any skin left when you're done?\" She lifted her head and tried to look over her shoulder again.\n\nHe smirked. \"If you're good.\" He pushed her head back down. \"'Sides, I can't help it if I like how you taste. Now, dinner. What do you want?\"\n\n\"We have-\"\n\n\"Not what I asked you.\"\n\nShe was silent for a long moment. He figured he'd let her ask. When she spoke, the words came out slowly, as if the simple act of speaking them was painful to her. \"We can't go anywhere.\"\n\n\"We haven't got to. Conlon's out there and I know Jimmy'll let him in if I persuade him right.\" The wounds stopped bleeding. He let his fingertips trail down from the nape of her neck drawing haphazard patterns over her spine and down to her tailbone.\n\nHer back arched and a shiver coursed through her. \"He's not a messenger.\"\n\n\"He's whatever the fuck I say he is. He's damn lucky he's still breathing at all.\"\n\nShe turned over. He propped himself up on one elbow and looked down at her. \"It wasn't your fault and it wasn't his fault either. Besides, I'm sure you've been keeping him busy.\"\n\nHis eyes narrowed. He struggled to control the growl that rose in his chest. \"Frail-\"\n\nShe curled closer. \"I know he keeps Cody safe. If there's more, I'm not asking what it is.\"\n\nHe pulled her closer. \"Too fucking smart for your own good.\" He waited until she relaxed against him. \"Pizza, seafood, Chinese, or somethin' else?\"\n\nHer fingers traced his stomach, over the outside of his hip and then back up again. It was all he could do not to moan. He had less control over the rush of blood to his cock. \"Well?\"\n\nShe gave a teasing little smile. \"I'm thinking.\" One finger circled his navel. \n\nThe whisper of a touch tested the limits of his control. He couldn't control the low growl that rumbled through his chest. \"You're fucking teasing me.\"\n\n\"No, just thinking. Seafood.\" The little smirk that touched her lips didn't escape him.\n\n\"Shoulda known.\" One hand drifted over her hip. Hungry tension built again, but this time he needed to touch her as much as he needed to fuck her. He pushed her onto her back. \"Gonna have to live on the coast just to keep you in shrimp.\"\n\nShe arched up, begging for his touch without saying a word. \"All the time?\"\n\n\"Don't know about that.\" His claws found one nipple and pinched just hard enough to make her squirm. He couldn't help but grin as he watched her. \"Sure as hell don't wanna move around as much as we have been.\" He tugged her nipple.\n\nShe whimpered. A grin spread over his face as he watched goose bumps ripple outward from that tense little peak. \n\nIt took some time to find her voice. \"I thought you liked that, moving so much.\"\n\nHe grinned at her reaction. \"Used to. Sick of trying to remember where I put you when I want to fuck you.\" His mouth found hers. She moaned under him, her fingers moving over his chest, pulling him closer. It pushed him over the edge. Need coursed through him like a slow moving electric shock that originated from and returned to his groin.\n\nShe shifted under him, spreading her legs even though he could tell she was still sore. He wrapped one hand in her hair and kissed her again. He'd meant for it to be tender, reassuring, but his body couldn't manage that. She pulled him closer anyway. He growled against her mouth and accepted her invitation.\n\n*~*~*~*~*~*\n\nKelly lay on her side with her knees drawn up. Chills coursed through her body from time to time, but she didn't have the energy to search for a blanket. Victor moved behind her, one heavy arm settled over her. The cold abated, but the ache in her lower half was still very much present. Even with her new healing factor, she was certain it would linger for awhile longer. In a strange way, it made the moment more perfect.\n\nA little smile touched her lips.\n\n\"Somethin' funny?\" His voice was a soft rumble.\n\nShe gripped his hand. \"No, just comfortable.\"\n\nHe covered her hand with his. \"Smell bruised.\"\n\nA little shrug. \"So? Doesn't stop me from being content.\"\n\nHis lips found the side of her head. He was silent again but she could feel tension starting to creep in to his body. Not the kind of tension that came before arousal. That started in his stomach and radiated downward. This tension started in his chest and telegraphed through his arm.\n\nShe stroked his thumb, because it was the only thing she could reach without moving. \"What?\"\n\n\"The old man offered to let you finish high school here.\" The words hung there.\n\nA thousand things chased through Kelly's head, but all of them came back to a single fact. \"If you leave me here, right?\"\n\n\"Yeah.\"\n\nShe shook her head. \"I want to finish, but I'm not staying here without you.\"\n\n\"Never said you wanted to finish.\" Surprise registered in his voice.\n\nA little nod. \"I would have been done last year if it weren't for Stan.\"\n\nHe stroked her stomach. \"Never said anything about it.\"\n\nShe relaxed back against him. \"I figured I would once things calmed down and we got somewhere we could stay for a little while.\"\n\nThere was a little smile in his voice. \"S'pose you wanna go to college, too.\" \n\nShe couldn't resist a smile herself. \"I hadn't really thought about that.\"\n\n\"Think about it.\" He nipped the side of her neck. \"After breakfast.\"\n\n*~*~*~*~*~*\n\nKelly sat across from the boy in Professor Xavier's office. He still looked like he wanted to hide in his clothes. She attributed that to the fact that Victor was standing behind her, probably wearing a dangerous glare.\n\n\"Robert, you have something to say.\" The professor prompted.\n\nThe boy dug a crinkled sheet of notebook paper out of his pocket. Kelly could tell that it had been folded and unfolded many times in the past few hours. His head was down, his eyes focused on the page. \"I-\" His voice cracked. He took a deep breath. \"I'm sorry I spied on you. I know it was wrong and that it upset you. I promise I won't do it again. Please accept my apology.\" The words came out in a monotone rush. \n\nKelly glanced up at Victor. His arms were crossed over his chest, the same cold glare still in his eyes. She looked back at the boy. He was starting to squirm in the chair. \n\n\"Why?\" The word was out before she could think about it.\n\nThe boy looked to the professor uncertainly.\n\n\"No.\" Kelly's voice was firm. \"I didn't ask him, I asked you.\"\n\nHe shrugged. \"It was just a dumb idea.\" His eyes were on the edge of the professor's desk.\n\nKelly recognized the deflection. \"Then why can't you look me in the eye when you say it?\" Her voice held no accusation, just curiosity.\n\nHe took a deep breath and squirmed in the chair. He glanced at her, then at Victor and then back at the professor's desk.\n\n\"Do you know why I'm here?\" Kelly asked.\n\nHe shook his head.\n\nThe professor started. \"Kelly, you don't have to-\"\n\nShe looked at him. \"It's not a secret. At least, I don't think it should be.\" She looked back at Robert. \"I was kidnapped and badly hurt. Victor brought me here because I wouldn't have made it to a hospital.\"\n\nHe looked at her with curiosity in his eyes. \"I thought you were just a mutant.\"\n\nShe smiled a little. \"I suppose I don't know what I am now, except lucky.\" Victor put his hand on her shoulder; his thumb stroked the back of her neck.\n\n\"Sounds stupid.\" He looked down at his shoes.\n\n\"Hell, half of what most people do in a day is stupid shit.\" Victor said. The professor shot him a warning glance, but if he noticed, he ignored it. \n\nRobert sat up a little straighter, but he still didn't meet anyone's eyes. \"I wanted to see Sabertooth.\"\n\nKelly had heard the name from M\u00fcller, but she'd done her best to push it out of her mind. \"What?\"\n\n\"You haven't told her?\" The professor tried to look surprised, but the emotion never reached his eyes.\n\nKelly met his gaze. \"It doesn't matter who told me.\" She looked at the boy again. \"What did you mean?\" \n\n\"My friend Tony's little brother was in here a few days ago and he said Sabertooth came in. Everybody said he was a liar, but he swore he was telling the truth. Tony and I figured that if he was here, he was probably in the guest house because that's off limits.\" He shrugged a little. \"Guys started daring each other to go out there.\"\n\n\"And you did.\" Kelly finished.\n\nHe nodded.\n\n\"You got balls, I'll give you that.\" Victor said.\n\nKelly tried, unsuccessfully, to stifle a giggle. The professor shot Victor a withering look.\n\n\"Was that the only time?\" Kelly asked.\n\nHe nodded. \"And I really am sorry. I saw you guys starting to...to kiss and stuff,\" A dark blush stained his cheeks. \"I knew I shouldn't be watching so I went to leave, but I tripped and stumbled into the side of the house.\"\n\n\"You, or anybody else ever do it again, I ain't gonna be so nice.\" Victor said. There was a well-concealed little growl at the end of the statement. Kelly reached up and gripped his hand.\n\n\"I think that'll be all.\" The professor said. He looked at Robert. \"You may return to class.\"\n\nThe boy got up and walked toward the door. He didn't slouch as much as he had before. As Robert was leaving, Logan came in.\n\n*~*~*~*~*~*\n\nAs soon as the door was closed, Creed looked at the old man. \"That the kind of show you expected?\"\n\n\"Show? I'm not certain I know what you mean.\" \n\nIt was bullshit. Everybody knew it. \"Yeah, whatever.\" He walked toward the door. The frail got up and followed uncertainly. Seeing her so hesitant made his chest hurt. He took her hand and ignored the eyes on them. \"You sure you want to stay?\" His voice was softer.\n\nShe gave a little smile. \"I've been under your feet since I woke up. Besides, it's only for a few hours.\" \n\nHe caught the note of uncertainty in her voice, but ignored it. He bumped his forehead against hers. She pushed back, her eyes closed. \"Got your phone?\"\n\n\"Of course.\"\n\n\"Good. You need me, call.\" He glanced over her shoulder at the old man. \"For anything.\"\n\nShe nodded. \"I'll be fine.\" He gripped her hand and forced himself to walk away. \"C'mon Jimmy, wouldn't wanna let me get too far ahead of you. I might have an impure thought between here and the door.\"\n\n*~*~*~*~*~*\n\nKelly turned back to the professor. He was studying her, a slight smile on his face.\n\n\"You're looking much better than the last time I saw you.\"\n\nShe managed a little smile. \"Thanks.\"\n\n\"Classes don't let out for nearly an hour. Would you like to sit?\"\n\nKelly sat in the same chair she'd been in before. She felt much smaller without Victor standing behind her. She wasn't sure what to say, but she didn't want to sit in silence. \"Victor told me about your offer, to let me finish my high school here.\"\n\n\"He told you?\" There was a note of surprise in his voice, this time it flashed through his eyes as well.\n\n\"Of course he did. You didn't think he would?\" She smiled a little. \n\n\"I'll admit, I wasn't certain. Have you had a chance to think about it?\" His eyes sharpened as he asked. Something about it gave him a hungry look. Not as predatory as Stan when he got that look, but she figured the professor had worked at refining it more than Stan had.\n\nHer smile never wavered. \"I appreciate your generosity, but I'm very accustomed to independent study. I don't think I'd be comfortable in a classroom.\"\n\nThe corner of his lip twitched into what might have been a smile, or might have been concealed anger. \"Is that your only concern?\" \n\n\"You know it isn't. Would you like to hear me say it?\"\n\nHe looked down at his desk and then up at her again. \"I understand that you're concerned for your safety and you have every right to be, but others can provide you with that safety.\"",
        "\"You, you mean.\"\n\nA little smile this time. \"It's not such a terrible place and it isn't forever. Hardly any time at all in the context of your lifetime.\"\n\nShe fought the urge to answer quickly. \"I never said it was a terrible place. If things were different I'm sure that I would jump at the chance. It's not just about safety though, it's about where I belong.\"\n\n\"Because he's told you that you're a possession of his.\"\n\nShe shook her head. \"Because I can't imagine being anything other than his. If that sounds like possession to you, then I suppose that's as good a label as any. Frankly, I'm sick of explaining and defending.\"\n\nA warm smile. \"That isn't what I was asking for.\"\n\nShe looked at him flatly. \"Then you'd be the first one.\"\n\n\"Perhaps if you understood our position more fully-\"\n\nShe rolled her eyes. \"God, not another list.\" She crossed her legs. \"Better give me the abbreviated version; I've been looking forward to seeing Cassie all day.\"\n\nA quiver at the corner of his eye. \"My intent is not to shock you-\"\n\n\"Just to change my mind.\"\n\n\"To make you consider all the facts.\"\n\n\"I have to consider all the facts for you to believe I'm thinking 'rationally' about my situation. Of course you don't have to.\"\n\n\"I'm not sure what you mean.\"\n\n\"Seems pretty obvious to me. He's kept his word about everything since he's come here. He showed more restraint this morning than I thought he had in him, considering how upset I was. Let me just point out that it's all this secrecy that led to the whole incident to begin with. You still treat him like a leper, and everyone I've come into contact with takes every opportunity to try and convince me that I don't know what I know.\" Kelly took a deep breath and got her temper back under control. \"So, I understand the generosity of your offer and I appreciate that and offering me a place to recover, but I'm not staying here without Victor.\"\n\nHe watched her for a long moment. Kelly never flinched. His calm smile was back. \"I can see how upset you are, that wasn't my intent.\"\n\nShe nodded. \"I'm certain that you're busy. Is there somewhere else I could wait?\"\n\n\"Please, let me take you on a tour. Even if you are just visiting you should at least be comfortable.\" \n\nA little smile, this one was warmer. \"A mobile debate?\"\n\nHe smiled back. \"No debate at all and no ducking in doorways or behind large pieces of furniture.\" \n\nKelly sighed. She could fight with him until Cassie was out of class, or she could make nice and take a look around the place. She got up. \"Alright. What little I've seen has certainly made me curious.\"\n\n*~*~*~*~*~*\n\nCreed walked down the path back to the cottage. Jimmy was next to him, but he might as well have been a million miles away. Every instinct in his body was telling him to go back for the frail, to take her out of there, pack her in the closest vehicle and drive as far and fast as he could. Course he knew what that would do to her. She wasn't ready for that, even though she'd say she was. Fucking mess.\n\n\"Well?\" Jimmy asked.\n\nCreed glanced over at him. Clearly, his brother was waiting for something.\n\n\"Well what?\"\n\n\"I asked if you still run.\"\n\nCreed smirked a little. \"That a trick question?\"\n\n\"Nope, just curious.\"\n\n\"Fuckin' nosy you mean.\" His smile widened. \"Figured I'd do that while she was up at the big house.\"\n\nJimmy looked away.\n\n\"What? Ain't like I got anything else to do. So far, she ain't taught me how to knit and your boss don't see fit to put any books in that damn place.\"\n\n\"You know you can't-\"\n\nHe stopped and faced the smaller man. \"Jesus Christ Jimmy! I jumped through his fucking hoops, the only thing I haven't done is kiss his wrinkled old ass. I think at least I deserve a few minutes to myself.\"\n\nJimmy crossed his arms and sniffed the air. He looked at Creed and shrugged. \n\nCreed growled. \"What? You fishing for a fucking invitation?\"\n\n\"That so terrible? You used to like it.\"\n\nCreed looked away into the trees. \"You didn't use to hate my fucking guts either.\"\n\nJimmy shrugged. \"Yeah well, you're still an ass but at least you haven't been unbearable.\"\n\n\"You're still a fucking pain in the ass.\" He looked at his brother and then back into the snow-laden trees. \"I ain't gonna slow down for you. You can't keep up, tough shit.\" Creed didn't wait for an answer; he took two long strides, then dropped to all fours and headed into the trees. He didn't look back to see if the runt was following.\n\n*~*~*~*~*~*\n\nKelly walked slowly through the school while Professor Xavier told her a little more about the school and what his students were offered. It wasn't quite the neutral tour he'd promised, but she hadn't really expected that either. At least he'd left the subject of Victor alone. It was enough to keep her smiling and nodding. They finished the tour in a small sunroom. The warm room was a contrast to the snowy scene outside. A bell sounded from somewhere in the building. She looked at the professor.\n\n\"That's the last bell of the day.\" He smiled. \"Cassie will be here in a moment.\" He rolled toward the door. \"You know, you can change your mind about my offer at any time.\"\n\nShe nodded. \"I appreciate that. Am I confined to this room once she gets here?\"\n\nHe smiled a little. \"No, though I thought you might be more comfortable at first if you weren't surrounded by quite so many people. The choice is yours though.\"\n\nCassie appeared at the door a moment later. She dropped her books in a chair and hugged Kelly. Kelly fought the urge to cry, even though she didn't understand where that urge was coming from.\n\n*~*~*~*~*~*\n\nCreed lounged on a stout, low branch of a bare tree next to a small frozen pond. Jimmy sat a short distance away on a large rock. He wasn't sure how far they'd gone, but he knew they'd circled the property at least once. The exertion in the cold air had done him good. Almost as much good as a hunt would have, but he figured he couldn't have everything. The breathing woods, sunshine on his skin and a frail who'd be happy to see him when he got back was pretty damn close to everything anyway. \n\n\"You're quiet.\"\n\n\"Yeah, and?\" He didn't turn his head.\n\n\"Just an observation.\"\n\n\"Thanks. Without it I might not have known.\"\n\n\"She really put up with that mouth of yours?\"\n\nCreed glanced over at his scowling brother. He smirked. \"Hell, half the time she gives it right back to me.\"\n\nJimmy chuckled. \"Glad someone does.\"\n\nCreed looked up at the sky again. For a few minutes silence and winter birdsong filled the space between them. \"Guy who brought me here is coming back later tonight with some stuff. Gonna be a big pain in the ass to get him let in?\"\n\nA different kind of silence grew for a long moment. \"Depends. What do you need so bad?\"\n\nCreed looked at him. \"Jimmy-\"\n\n\"You forget how long I've known you. I ain't just gonna say yes without asking some questions.\"\n\nHe looked away again. \"You want an inventory? Fine. Mostly it's dinner. Figured I'd give the frail an evening off. Beyond that I bought her a coat.\n\nJimmy raised an eyebrow. \"A coat?\" \n\n\"You know, one of those things you put on over your clothes. Keeps you warm. She'll wear my shit and not complain about it but I'm damn sure sick of seeing her like that. Any part of that contraband?\"\n\n\"No.\" Jimmy sounded curious and baffled at the same time. \"Dinner and a coat?\"\n\nCreed rolled his eyes. \"And I suppose you didn't take care of your girl -- whether she was yours or not -- after all that Liberty Island shit went down.\" His brother looked away. Creed sat up and straddled the branch. \"Son of a bitch, you left.\" The surprise registered in his voice. \n\nJimmy turned his face away. \"It wasn't like that! It wasn't just some random-\"\n\n\"Sure, you've always got your reasons. Lemme guess, it had something to do with your deep, dark forgotten past.\"\n\n\"So what if it did?\"\n\n\"Goddamn you're a fucking idiot sometimes.\" \n\nJimmy faced him again, this time he was angry. \"You Dear fuckin' Abby all of sudden?\"\n\n\"No, but I recognize a load of horseshit when I see it.\" He swung his leg over the branch and jumped down. \"You do what you want. Run away, stay here and torture yourself watchin' all the little boys sniff around her, or you can find your balls and do what you've wanted to do all along. Doesn't matter to me one way or the other, I'm just sick of seeing you mooning around like a lovesick cow. I'm going back. You don't wanna come, I know the way.\"\n\n*~*~*~*~*~*\n\nCassie and Kelly stretched out over the comfortable furniture in the sun room. Winter sunshine cast a golden glow over everything in the room. \n\nAs bright and cheery as the sun was, things had been awkward at first. Kelly could tell that Cassie had a lot she wanted to ask, but the other girl wasn't sure where to start. \"You can ask anything you want to know.\"\n\nShe looked at her pink polished nails. \"I shouldn't.\"\n\n\"Why not?\" Kelly was starting to wonder if Professor Xavier just liked secrecy or if he was genetically disposed to it.\n\nCassie shook her head. \"I never thought I'd see you again, I don't want to upset you.\"\n\nKelly took a deep breath. \"I'm not made of glass and I'm sick of secrets. If you want to know something, ask. If I can't tell you because the wound is still too raw, I'll let you know that.\"\n\n\"Did he...kidnap you? Sabertooth I mean.\" Cassie's eyes were wide.\n\n\"Of course not!\" Kelly wasn't shocked by the idea, but she was certain that Victor's prices were well outside of Stan's budget at the time. She kept that bit of information to herself. \"He saved my life.\"\n\nThe look of disbelief on Cassie's face spoke volumes. \n\nKelly told her the whole story, from the time she was packed off in Roland Dawes' old car to her last desperate escape attempt. \"Victor could have left me in the woods, but he didn't. He took me back to his house, fed me, let me rest and heal.\"\n\n\"And you think that was because he cared about you?\" The disbelief was still in her voice.\n\n\"Oh God no. I don't really know why he did it at first. I was a mess, malnourished, beaten up, certainly not much to look at or much of a challenge. Maybe he figured if he gave me enough time I'd be more interesting, or at least put up more of a fight.\"\n\nDisbelief was replaced with shock. \"And that's what got you all excited?\"\n\nKelly laughed. \"Well, not exactly. He was rude and abrasive and intentionally scary ninety-eight percent of the time.\" Kelly drew her feet up under her and watched the light play off a glass bowl on the coffee table. A little smile still on her lips. \"There were other times though. He'd say something and it'd be really funny or unexpected and I'd laugh and he'd give me this look like that was the last thing he ever expected, but he liked it. It was like a little peek behind all the walls. The more I saw, the more I wanted to see.\" She looked at Cassie again. \"I guess there was something he liked about me too.\"\n\nCassie leaned closer. \"With everything I've been told about him I just figured he must have hurt you to get you to stay with him.\"\n\nKelly shook her head. \"I don't know that he would have gone to that kind of trouble. If he were going to use force, I don't think he would have wanted to keep me with him.\" Kelly leaned closer and smiled. \"Enough about me. Tell me more about what you've been up to.\"\n\n*~*~*~*~*~*\n\nCreed's eyes snapped open in the dark room. Something had awakened him, but he was damned if he knew what it was. The frail was curled up against his side. For the first time in days she'd fallen asleep next to him on the sofa and stayed asleep with the sweet scent of her relaxation surrounding them both. If that was the effect that girl had on her, he'd make damn sure they got to see each other as often as possible.\n\nShe shifted against him and murmured something in her sleep. He didn't bother trying to decipher it; he just stroked her back until she was deeply sleeping again, her slim fingers spread over his heart.\n\nCouldn't be as simple as the girl, or the fact that she'd loved the meal or the fact that she practically cried when he gave her the coat. Maybe she was starting to process some of it. Either that or it was pure exhaustion.\n\nA soft beep from somewhere in the house drew his attention. He glanced at the dresser and saw that his cell phone wasn't plugged in. Had to be a message. He sighed and shifted the frail carefully so that he could get up. For a moment, he watched to make sure that she didn't stir, then he went out to find his phone. Another soft beep led him to the kitchen counter. The only missed call was from Conlon. He dialed quickly.\n\n\"What?\" He said, as soon as the phone was answered.\n\n\"Kelly's mother was brought into the ER about four hours ago now. Attempted suicide apparently.\"\n\nCreed leaned back against the counter and closed his eyes. He didn't give a shit about the bitch, but the frail had had just about enough in his estimation. \"Fuck. You sure she tried to off herself?\"\n\n\"Yeah. The nurse I got on Cody is friends with the one who did the intake in the ER. I don't have all the details yet, but what I know so far is that she tried cutting her wrists, but none of the wounds were life-threatening. I figure if she'd had help, the help probably wouldn't have botched it.\"\n\n\"Probably not. That leaves the kid under Stan's care?\"\n\n\"Yeah.\"\n\n\"Can he pull the plug?\" \n\n\"Not from what I understand. Cody's breathing on his own, he's got brain activity. He's got a feeding tube, but he's been making steady progress and the prognosis looks pretty decent for the kind of injuries he's had.\"\n\nCreed's eyes were fixed on the dark hall. \"Bitch gonna be in the psych ward awhile?\"\n\n\"Seventy-two hours at least. Last I heard though, her psychiatrist was making arrangements for her at some private clinic. I don't have the name yet.\"\n\nCreed shook his head. That fucking stunk too, but he didn't have time to worry about it. \"Keep me informed.\" He ended the call and immediately dialed Joe's number.\n\nThe phone rang a long time before Joe finally answered. \"Demmer.\" His voice was guarded and surprisingly alert for two-thirty in the morning.\n\n\"Creed.\"\n\n\"Is Kelly okay? What's wrong?\" His anxiety rose, but he kept his voice down. Probably to avoid waking up the old woman.\n\n\"Frail's fine.\" Creed heard the other man sigh with relief. \"Apparently her mother tried to off herself earlier tonight. You got a lawyer?\"\n\n\"Does Kelly know?\"\n\n\"I only found out ten minutes ago and she ain't gonna find out until tomorrow morning. There's nothing she can do about it. I damn well know she wouldn't want the kid left in Stan's care alone. Figure if you want to or need to make a legal move, this'd be the time.\"\n\n\"I'll have a lawyer tomorrow morning. You or Kelly will keep me up to date?\"\n\n\"She probably will, 'less I get some more information that she doesn't have.\"\n\nCreed said goodbye and ended the call. He went back to the bedroom and found the frail still sound asleep. She'd moved into the spot he'd been laying in. He pulled the blankets back and got in on the other side. She shivered and he felt the goose bumps prickle her skin. He wrapped himself around her and she relaxed again."
    ],
    "authorname": "psyche_b_mused",
    "tags": [
        "rough sex",
        "victor creed"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/what-the-cat-dragged-in-ch-26"
}