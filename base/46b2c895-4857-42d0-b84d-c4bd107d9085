{
    "title": "The Human Condition Ch. 09",
    "pages": [
        "Joe wasn't in the bedroom when I went to look for him after I said goodbye to Sarah. But then, neither were the clothes I'd laid out on the bed, so I wasn't too worried.\n\nI found him in the kitchen scrambling some eggs; there were mushrooms grilling in another pan and fresh sliced tomatoes on the butcher block. The bread was already in the toaster waiting for someone to push down the lever. I did the honors and then went to Joe and leaned over his shoulder and sniffed appreciatively.\n\n\"Are those for me?\" I asked hopefully.\n\nHe snorted. \"As if you didn't already know.\"\n\nWhich was true. I was truly a lousy cook. And if left to my own, I'd probably make do with cold Pop Tarts and a pot of coffee. Ever since I'd known him, Joe had ridden my ass about my eating habits, and eventually he'd figured out the only way to change them was to cook the meals himself.\n\nHe'd already set the table and I went over to it and poured two glasses of grapefruit juice out of the pitcher. Then I sat and anxiously waited for him, like a little kid whose last meal was about two weeks ago.\n\n\"Quit squirming,\" he said without looking around. \"It's almost ready.\"\n\n\"But I'm starving!\" I whined.\n\n\"I'd have thought the 'protein snack' you had earlier would've satisfied your appetite,\" he teased back.\n\n\"Babe, if anything, all it did was whet it for more.\" I gave him my best leer, which just made him laugh.\n\nHe split the eggs onto two plates and added sauted mushrooms and sliced tomatoes to them. Then with a flourish, he popped up the toast and expertly spread marmalade on each slice. He walked over to the table with a plate in each hand and gave one to me. He put the other one in front of his chair, but before he could sit I drew him to me and rested my face on his belly.\n\n\"You spoil me,\" I murmured as I took in his scent, which gave off an aroma better to me than any food known to man.\n\nJoe stroked my hair. \"I think you got that backwards, sweetie.\" He leaned down and kissed the top of my head, then grinned. \"In fact,\" he said, \"I think you're the best little wife a guy could ever hope for.\"\n\nHe looked down at my legs that stuck out from my shorts. They were pretty well muscled, because he insisted on dragging me out to the track to run three times a week, but I was in desperate need of some sun. The dark hair covering them was in stark contrast to the white skin. \n\n\"But Darlin',\" he laughed, \"if you're thinking about that sex change operation again, I would think again - 'cause you just don't have the legs for it.\"\n\nOne of those ugly legs of mine kicked him in the butt as he turned to his chair across from me, but it was just a reflex. This was an old joke of ours - the kind all couples share when they've spent as much time together as we have.\n\nJoe had always kidded me about being his wife. It didn't bother me, and I've been known to refer to him as 'the old ball and chain' a few times myself. \n\nThe truth was, like most gay couples, we didn't really have the kind of relationship where one of us took on the wife role and one the husband. Through the years, we'd just developed a pattern where we chose to do what felt best for us, and didn't worry about that kind of crap. We rarely bothered with titles, either, although the times when we had to describe our relationship to someone, we both seemed to use the word 'partner.'\n\nBut in the truest sense, Joe was my husband and my wife, and I was his. Mind you, we may not have been able to get a piece of paper from the state of Illinois that agreed with that assessment, but it didn't make it any less true. We were a family to each other.\n\nIt had taken us a while to see that though. Joe had always planned on something much different for himself, where I'd never planned on anything at all. Sometimes I think it was a miracle we ever got to where we are now. And Joe? Well Joe was even more confused than I was...\n\nJune 9, 1989\n\nIt was a few days after my folks and Sarah left and I'd just walked into my apartment after slaving at the law firm all day. But I'm exaggerating here a bit. I worked hard, sure, but I also loved it, so it wasn't exactly a sacrifice. That day though, I was beat. My energy levels still weren't up to what they had been, and so I was really looking forward to just vegging out on the couch and maybe calling out for pizza if I couldn't scare anything up out of the fridge.\n\nI'd forgotten I was supposed to go over to Kevin and Saul's for dinner that night. If Saul hadn't called and left a message on my machine, I'd have probably never made it. As it was, I just had time for a quick shower before I was supposed to be there.\n\nI made it - just barely. I knocked on the door of the two-story townhouse they shared and waited. There were voices coming from the apartment and I couldn't help hearing what they were saying.\n\n\"Oh Baby! Yeah! Stick that big rod in me! Yeah! Do it! Do it! Do it!\"\n\nI gulped. Maybe it would have been better if I had gotten Saul's message too late.\n\nBefore I could sneak away, the door opened and Kevin stood in front of me - fully clothed, thank God. \"Hey, you made it,\" he said, grinning from ear to ear.\n\nThe noise from inside the apartment was louder, now that the door was opened. \"Right there! Oh yeah! Harder, do me harder!\"\n\nI felt my face burn with embarrassment.\n\nKevin frowned and turned towards the living room. \"Jesus, Saul,\" he snapped. \"Can you please turn that shit down!\" He waited until the sound decreased until only an occasional moan was heard.\n\n\"Come on in,\" he stepped back to allow me to pass. \"Sorry about that. Saul went shopping today.\"\n\nHe didn't have to say any more. Saul was famous for his huge collection of porno tapes. He also had a gigantic collection of 1950's monster flicks and the world's most complete set of Disco records I'd ever seen; but it was the porn that had made his reputation.\n\nHe had movies from the bootlegs of old Hollywood right up to the new made-for-video numbers. To Saul's constant disappointment, Kevin had never been very impressed with his repertoire. He always argued he'd rather actually have sex than just watch it, and he'd bitch that the space the tapes took up could certainly be put to better use. Of course, most of his bitching was just a way to torment Saul. Kevin had once admitted to me over one too many shots of tequila that some of the tricks Saul had picked up from his little hobby were well worth the price of admission. \n\nThe closet door was open now as we headed into the living room. Saul was sitting cross-legged on the floor and sorting a pile of tapes that lay next to him. It had been a scorcher of a day, and he was wearing shorts and a baggy tee. He had a great body and normally Kevin would've been making some comment about how lucky he was to have such a cute boyfriend, but he just sighed.\n\n\"Christ, what have you done now?\"\n\nSaul swiveled his head and smiled, \"Hey Mikey, how goes it?\" He jumped up and gave me a kiss. \"And you,\" he poked Kevin in the chest, \"quit bein' such a bitch! We have company.\"\n\n\"My point exactly,\" Kevin complained, waving his hands helplessly at the huge pile of tapes on the floor. \"Look at this mess!\"\n\n\"Oh, relax! I'll clean it up, Hon'.\" Saul stood on tiptoe and gave Kevin a kiss on the nose. \"I had to do it, there wasn't anymore room on the L shelf for my new Jack Lofton.\" He closed his eyes and sighed. \"God is that guy hung!\"\n\n\"And this one,\" he said as he pulled out a tape labeled LA Tool and Die. \"This one's unbelievably hot - it's a classic, too, and hard to find. It's part of Joe Gage's Working Man Trilogy, the third one actually. Not as famous as El Paso Wrecking Corp, or a groundbreaker like some of Matt Sterling's classics, but a great flick none the less.\"\n\nI just stared at him open-mouthed. \"I think you're scaring me.\"\n\nHe laughed and handed me the tape. \"You'll see. We'll pop this baby in after dinner.\"\n\nI smiled and shrugged noncommittally. I wasn't really wild about the idea. We'd had movie nights before, the three of us, and it had always ended up with one or all having to go to the bathroom for the Kleenex. But that didn't hold any appeal for me tonight. I was still having some issues about sex, and even something as innocuous as watching Saul stick his hand down his pants was a little nerve-wracking to contemplate.\n\n\"Or maybe not,\" Kevin winked at me. \"Let's see if we can at least pretend that we're grownups here. And not just a bunch a horn-ball gay guys with sex on the brain. In fact, I thought it might be nice if maybe after dinner we went down to the basement and played some pool.\"\n\nThat sounded like a plan to me. Saul had bought Kevin an old pool table for his last birthday, and although the table was pretty beat-up, it still worked - even if they did have to keep a book under one leg to keep the thing level. They'd been breaking it in a lot these last few months.\n\n\"Oh wait,\" Saul said, as he reached down to rummage in his pile of tapes. I couldn't help but notice how his tight shorts rode up on his ass as he bent over. Jesus, I thought to myself, as I dragged my eyes from his butt. Get a grip, Mike! \n\nSaul found the tape he was looking for and stood and triumphantly waved it in the air. \"If you wanna see how to really play pool, you should see this.\"\n\n\"We don't want to see pool, baby - we want to play it!\" Kevin chortled, then shook his head. \"Jesus, what did I ever do to deserve a voyeur for a lover?\"\n\n\"Nothing,\" Saul replied, as he put the tape in the player and turned to him and gave him a bear hug. \"You just got lucky is all.\"\n\nKevin grinned and wrapped his arms around him. \"I guess I did at that.\"\n\nI watched them play tonsil hockey for a minute before clearing my throat. \"Uh, guys,\" I said. \"You want me to take a walk for 20 minutes or so?\"\n\nKevin pulled his lips from Saul's and chuckled. \"Trust me, it wouldn't be for only 20 minutes if we did - but we don't. And, besides, dinner's almost ready. I better go check on it.\" He slapped Saul on his ass and walked out of the room.\n\nSaul's eyes followed him until he was out of sight, then he turned back to me. \"God,\" he sighed. \"It's good to be back home. I really missed that tall bastard, you know?\"\n\nI smiled and tried to ignore the pang I felt when he said that - because of course I knew exactly what he meant, only the tall bastard that I missed wasn't home yet, and I was beginning to wonder if he ever would be. Jesus, I thought. I wish I knew what was going on in that pretty head of Joe's.\n\nThe movie that Saul had popped into the player started, and the title popped on the screen: \"Bigger Than Life.\" I really, really was not in the mood. \n\nHe seemed to sense this and said. \"Lemme fast-forward here to the pool table scene. Really, you gotta see this - it's a hoot!\"\n\nHe started to share some gossip he'd heard about a mutual friend. I was listening, but out of the corner of my eye I kept catching glimpses of round hard butts and lots of sweaty skin. It was... distracting. I'd force myself to concentrate on Saul, but every few minutes I'd realize that I was back to the fast-forward motions of beautiful bodies engaged in sex. And if I could tell they were beautiful even at this speed, then they had to be hot.\n\nFortunately, Saul didn't seem to notice that I was basically ignoring him. He chattered on about one thing and another until Kevin stuck his head in the living room and announced that dinner was ready.\n\nI took a glance around. They had a really nice apartment - cozy, comfortable, and - thanks to Saul's doting Mama - decorated like a real home. When they'd first moved in together, she'd insisted on \"doing\" the whole place. Kevin had wanted to refuse, but even he couldn't stand up to that woman's wheedling, and he finally capitulated. I had to hand it to her, though - she had excellent taste. The rooms were masculine, yet not sterile. I couldn't help but wonder what she thought of the closet, though.\n\nOne of the best things about the place was it had a real dining room where you could stretch out and eat like a grown-up instead of balancing plates in your lap and sitting on the floor, like we had to do at most of my friends' tiny apartments. Even my luxury of a real kitchen table and chairs at my place couldn't compete with the bamboo and glass wonders that sat in Kevin and Saul's eating area. \n\nThere was something else in the dining room, too. I immediately rolled my eyes and groaned, and Saul laughed when he saw me.\n\n\"Hey, we knew you wouldn't bring a date, so we decided to provide one free of charge,\" he said as he clapped me on the back. \"Cause that's just the kind of caring, considerate friends we are.\"\n\nMy \"date,\" as he'd put it, was sitting across the table from what was obviously my chair. It was a life-size wooden mannequin, one of those puppet things with joints and no face, but definitely male. Kevin had picked him up in some trash bin in back of a clothing store one night after the bars had closed. He was promptly christened \"Bruce,\" and he'd been a fixture at parties at their house ever since, although usually he lived at the runaway teen shelter that Kevin ran.\n\nThe kids loved Bruce and they were always posing him and making up stories about his latest sexcapades. Kevin said it was a good outlet and he pretty much let them do whatever they pleased with the dummy. So it wasn't uncommon to walk into the weight room and see Bruce on the treadmill, or to see a couple boys watching TV with Bruce tucked in between them, holding the bowl of popcorn. They even had a wardrobe for him, and he was always dressed for the right occasion. \n\nYou'd have thought that these kids might have been rough or obscene with the wooden boy, but they were surprisingly protective of their mascot, and although they had no problem with the time that one of the kids posed him suggestively over the arm of the couch and pulled his pants down to show his skinny wooden butt, they would've kicked the hell out of anybody who'd tried to actually destroy or deface him.\n\nTonight, Bruce was in his at-home attire of skimpy running shorts and a practice football jersey, which had been cut off at the nipples that someone had so thoughtfully drawn on his torso. I noticed he had acquired a new wig, long and straight and blond, which made him look almost like Pinocchio's wet dream surfer boy. Through the glass table I could see he was complete with running shoes and...\n\nI looked over at where Kevin had just joined Saul. \"What the fuck?\" I sputtered.\n\nThey both started to laugh. \"Isn't it great!\" Kevin said as he pointed.\n\nWhat he was pointing at was another addition since I'd last been there. Bruce had always been sadly lacking in the anatomical department, but now it looked like he might finally be getting his wish to be a real boy. There was a decided bulge at his groin and something suspicious was poking at the hem of the shorts.\n\n\"One of the kids at the shelter likes woodworking,\" Kevin continued. \"He learned a lot from his dad before he got kicked out for getting caught with the neighbor kid.\" He shrugged; the story was too common for him to make any issue of it. \"Anyway, we had all those tools donated last year and this kid volunteered to set up the workshop. He made us this for Bruce.\"\n\nHe walked around to the mannequin and pulled him out of the chair and unceremoniously yanked down his shorts. There in all its glory was a perfectly-proportioned cock and balls, exquisitely carved and detailed enough to tell me that the kid who'd made this was really enthusiastic about his subject matter.\n\n\"It even has a hinge,\" Kevin said, as he grabbed the wooden shaft and cranked it up until a click was heard.\n\n\"Jesus,\" I said, rolling my eyes. \"Wouldn't some new bookshelves have been more practical?\"\n\n\"Aw, I think it was sweet,\" Kevin replied, as he pushed a spring under the balls and the dick collapsed back down. Then he pulled up Bruce's shorts and sat him down in his original seat, and clapped his hands. \"Let's eat!\"\n\nDinner was great. Kevin really liked to cook, and I really liked to eat, so we always got along great over a dinner table. We didn't talk about much of anything until near the end of the meal when Saul suddenly slapped himself and said, \"Shit, I forgot about stopping the tape! Now I'll have to start all over to find that scene.\"\n\nKevin snorted and looked at me. \"You'll have to forgive him. He's got this incredible idea in his head that all sex movies aren't alike.\"\n\n\"They aren't!\" Saul protested. \n\n\"Oh, puh-leeze!\" Kevin snapped, shaking his head. \n\n\"For instance, one of the new ones is a spy flick,\" Saul said to me, ignoring Kevin.\n\nKevin apparently thought two could play at that game and also addressed his next comment to me. \"Which translates to, the main character has a pair of binoculars to watch all his neighbors strip.\" \n\n\"Ha-fucking-ha,\" Saul griped good-naturedly.\n\nI started to laugh, \"Geez, you two sound just like my parents! True, they don't generally bitch about fuck films, but the theory's the same.\"\n\nA timer went off in the kitchen and Kevin jumped to his feet. \"I made chocolate brownies for desert, and there's Haagen-Dazs French vanilla to go with it.\"\n\n\"Yum,\" I said, my mouth watering. Chocolate brownies were my favorite, as Kevin well knew.\n\nHe left the room leaving Saul and me alone together. Saul looked at me and frowned. \"You know, he's wrong.\"\n\n\"About what?\" I asked, perplexed. \n\n\"About the porno! Some of it really is pretty good.\"\n\nI laughed. \"Get a grip, Saul. He's only teasing you to get your goat. And besides, you gotta admit he has a point. I haven't exactly seen any triple-X rated films up for any Academy Awards lately.\"\n\n\"Oh, hell no! I don't mean they have good plots. I just mean they aren't all the same.\"\n\n\"I agree,\" I teased. \"Some fuck standing up, and some laying down\"\n\n\"Aw, shit! You're as bad as Kevin,\" he said, exasperatedly. \"Here, I'll prove it to you.\" He jogged out through the doorway.\n\n\"Saul...\" I started, but he'd already gone into the living room. I sighed and followed meekly.\n\nI knew Saul well, and this sudden obsession about some stupid little thing wasn't exactly a new twist to his personality. Every so often, he'd get one of these ideas up his ass, and there was no diverting him until he'd proved his theory or gotten so far down the bullshit boulevard that even he couldn't figure out what his original point had been. With Saul, it was just easier to stop fighting him and let him have his way until he got it out of his system.\n\nHe'd already popped the tape in the player and was rewinding it back to the beginning. After a few moments, he hit a button and an image popped up on the screen. He was right: it actually had a plot... the stupidest goddamn plot I'd ever heard. There was this spy who had to go out and save the world from the evil mastermind who was trying to destroy the U.S. by kidnapping all the richest men in the country and turning them into mindless boy toys who looked 18 and fucked like bunnies. But he was right; it had a plot, of sorts.\n\nEven worse than the plot, of course, was the acting. You must know what I'm talking about: that flat, toneless voice every porn star on earth seems to have. I was just about to comment about that when Kevin stuck his head in the door and told us to get our asses back to the table.\n\nNo one has to tell me twice to go eat chocolate, so I was back there in a flash and Saul followed a minute later. We turned our attention to eating, and conversation wasn't on the agenda for the next couple of minutes. The only noise was the drone of the bad actors on the movie that Saul had forgotten to stop. With our silence, it seemed even louder then it had when we'd been in the living room.\n\n\"So big boy,\" some robot-like voice suddenly said in the other room. \"Now I know why they say you're called agent double-012.\"",
        "\"And wait till it gets hard,\" another flat voice droned.\n\n\"Oh my God,\" Kevin groaned, and then he looked at me and started to grin. \n\nI couldn't help it. I laughed - first a chuckle, and then a full-fledged belly laugh. After a minute, Kevin joined me, and we both howled until tears rolled down our faces. Saul glared at us and sighed theatrically, but I could tell he was just jerking our chains.\n\n\"Very fucking funny,\" he grumbled. \"Try and introduce a little culture into your lives, and this is the thanks I get!\"\n\nOf course, this just made us laugh harder. He scooped up his last spoonful of ice cream and then stood up and stormed off to the living room. But he winked at me as he left.\n\nKevin took a deep sigh and wiped his eyes. \"Come on - I got an idea.\"\n\n\"What are you up to now?\" I said suspiciously.\n\n\"You'll see. Just follow my lead.\"\n\nIt had turned into one of those goofy nights when things you'd never dream of doing suddenly made perfect sense. I shrugged and figured that it whatever Kevin had planned, it was probably at least going to be good for more laughs. We tiptoed to the door of the living room and stood there quietly, trying not to get Saul's attention. Kevin put his arms around me and I looked at him curiously. \"Trust me,\" he mouthed.\n\n\"Hey, stud!\" Kevin suddenly boomed in his own version of a porn voice. \"Look at that twink on the floor's bubble butt.\" He nudged me and nodded to go for it.\n\nI started to laugh, but he poked me and I managed to get back my poker face. \"Wow, you are right, Lance.\" I said in my best porno-actor voice. Kevin stared at me, but I ignored him as I tried to get into character. \"He sure is one hot dude. Man, I'd really like to fuck that tight ass.\"\n\n\"Then go for it, Dick!\" \n\nI almost lost it again and Kevin tightened his hand on my back as a warning.\n\n\"Plow him with that big blade of yours,\" continued Kevin.\n\n\"Okay, Lance,\" I said cheerfully. \"And while I do, you can suck that juicy cock I see bulging in those tight shorts.\"\n\nNow the moment we'd started speaking, Saul had whipped around to see us. At first he looked shocked, then horrified, but suddenly he grinned a quick evil grin and started on a role of his own.\n\n\"Hey hunks, my name is Will, as in 'Will he or won't he.' And the answer is 'yes,' if that big hard bulge in those jeans is all for me.\" \n\nOkay, I lost it then. Kevin was practically holding me up; as I laughed so hard I almost stopped breathing. He and Saul were made of tougher stuff though. They grinned, but they immediately got back into character. Kevin practically dragged my laughing ass over to the couch where Saul now waited, and then he pushed me towards him.\n\nI landed in a sitting position and Saul sank to his knees and pushed my legs wide open. I immediately stopped laughing and stared at him, totally confused. Kevin leaned over and whispered in my ear. \"Tell him to take it out.\"\n\n\"What? No,\" I protested. I immediately tried to close my legs, but Saul was firmly planted between them.\n\nHe was grinning and licking his lips lewdly, but when he saw the look on my face, his smile faded. He looked behind me to where Kevin was standing, then back at me. When he spoke again it was in his normal voice.\n\n\"It's okay, Mikie. Let me do this for you. Please.\" He leaned up and gave me a quick gentle kiss on the mouth. And then he kissed me again, this time with a little passion and my mouth opened before my brain was even aware it had given its permission.\n\nEven while I responded, part of me was screaming that this was a bad idea. I know the popular thinking is that gay men screw everything they can get their hands on, including their friends. But that isn't true, at least not in my experience. Yes, I had slept with Kevin one night about a year and a half ago, but that had been an exception, not the rule. And I'd felt weird enough about it at the time that it had just made me believe even more that mixing sex and friendship was not the way to go.\n\nOn the other hand, that didn't mean the rest of me wasn't enjoying the hell of this. I was 21 for chrissake, sex was something I'd been used to, a lot. My body was ready for it again, even if my mind wasn't quite sure. And both Saul and Kevin were really attractive guys; even being friends with them hadn't blinded me to that. If I didn't know them already and saw them walking down the street I'd give them a second glance-and a third.\n\nThere was more though, they were right to think I'd been dreading getting back on the horse so to speak. It's one thing to think in theory that you're ready to get on with your life, quite another to actually do something about it. The thought of having the opportunity to test myself with guys who were both experienced and knew the kind of problems I'd been having was very seductive. So if two of my best friends were in the mood to offer, I didn't see how it wouldn't seem downright churlish to say no.\n\nAt any rate the decision seemed to have already been made by my body. Kevin's strong hands massaged my shoulders, and it felt so good that I knew I wasn't going anywhere, at least for the moment. Saul continued to just kiss me, always gentle, even when he finally introduced his tongue into my mouth. After the first few moments, I relaxed and began to kiss him back. Kevin was kneeling behind the couch now, so that his head was level to ours. His hands still stroked my shoulders lightly, and I felt a faint shiver of desire run down my spine.\n\nSaul seemed to sense the change. He moved from my mouth to my neck, nipping softly on the sensitive skin. His hands, which had been resting on my chest, moved down to my waist and started to gather up the material of my tee, bunching it in his hands and pulling it up over my nipples. I tensed and Kevin leaned forward until his mouth was at my ear.\n\n\"Shh,\" he whispered. \"Just relax and let this happen.\"\n\n\"I don't understand. Why are you guys doing this?\" I could barely hear my words over the pounding of my heart.\n\n\"Cause we're your friends and we love you,\" he said simply. \n\n\"But...\"\n\nSaul touched his fingers to my lips to silence me, then looked past me at Kevin and tilted his head to meet my eyes.\n\n\"You need this, Mikie,\" he said. \"It's been too long. We know you've been scared of this, of your first time since...\" He trailed off, but spoke again in a moment. \"But we're your friends, and you don't need to be afraid with us.\"\n\nMy heart hammered in my chest, but I wasn't sure if it was from fear or desire. I shook my head. \"I don't know if I...\"\n\n\"Shh,\" Kevin answered as Saul was back to kissing my neck. \"Whatever happens... happens. Don't worry about it. Let it go.\"\n\nHe gently pushed my shoulders forward and I sat up as Saul pulled my shirt over my head and tossed it casually on the floor behind him. He sat back on his heels and gently ran his hands up and down my chest, caressing my pecs. I shivered, a product of the cool air conditioning, my trepidation, and maybe a little passion.\n\nKevin wasn't taking any chances on me having second thoughts. He placed one hand to my jaw and gently pulled my head around, then he moved until we were face to face and kissed me. I remembered I'd kissed him like this before. It was a good memory of better, more carefree times and I relaxed as I thought about it. Again, Saul sensed my loosening up and he took advantage of it by placing his mouth over a nipple and licked it as he reached down and unbuttoned my jeans.\n\nI sucked in my breath and arched my back. God, it did feel great. And yet part of me was still terrified. Saul spread my pants open and laid his face on my crotch. My limp shaft pulsed once and then lay there. He didn't seem to notice. He rubbed and sniffed and burrowed his nose into my groin. Kevin broke off kissing me and looked down at his lover's head in his lap.\n\n\"You know,\" he whispered to me. \"I think if Saul ever changes his mind about being an anthropologist, he could go to France and get a job sniffing out truffles.\"\n\nSaul raised his head and grinned at me. \"Of course, that could only work if truffles smell like cock.\" He bent down and got back to work.\n\nI laughed a little and relaxed some more. Kevin kissed me once again and soon Saul had managed to completely strip me, and somehow got out of his own clothes when I wasn't looking. When he was through, Kev let me up for air and a good look.\n\nI'd never seen Saul naked, though sometimes, like today, he wore next to nothing. Since he'd undressed me, Saul hadn't touched my dick, but had gone back to work on my naval with a tongue that I soon realized was very talented. I stared down at the top of his head and cast my eyes lower to see what lay below it.\n\nIt was funny, but Saul looked a lot younger nude. He was well built, with broad shoulders; smooth and slightly thin without much discernable musculature, so that the delicate, sharp bones of his shoulder blades jutted out from his back. His spine though, was nestled in a valley created by muscles and swooped down to narrow hips and a great boyish ass that was round and smooth and flexed invitingly whenever he moved. He was dark-skinned and he tanned easily, even this early in the summer. The contrast of his deeply tanned back with the white skin of his ass was startling. As I was staring, he clenched his butt muscles and my cock gave another jolt of interest.\n\n\"Oh, goody,\" he murmured. \"I think somebody is waking up.\"\n\nHe slid down further and wedged a hand between my legs and gently pulled on my balls. I slumped a bit to help him, and Kevin walked around to the front of the couch to watch and, I'm sure, step in where he was needed. I knew that they'd engaged in threesomes before, so I wasn't surprised that they had the moves down so smoothly. I watched as Kevin did an impromptu striptease for my enjoyment and again remembered another night when he treated me to the same show.\n\nSo this time, there were no surprise when he unveiled himself, although it still amazed me that Kevin, who looked almost skinny in clothes, was actually quite developed, with long sinewy muscles that rippled over the tops of his shoulders, abs and his long, straight thighs. He had no hair on his chest or anywhere else for that matter, except for the thick reddish blonde wedge that framed his cock.\n\nThat appendage was more than awake. I swallowed when I saw it and remember how big it had felt between my lips in our first meeting. Another surprise, because it hadn't looked very impressive the first time I'd seen it nestled in its home on that long, slim body. It's amazing how deceiving looks can be. At another time, I might have invited him back into my mouth. I wasn't quite able to take that initiative at this point, so I satisfied myself with a good visual examination instead. It was thick and hard and already gleamed with sticky precum. I licked my lips, but when Kevin, who was watching my every move, moved forward as if to offer, I dropped my eyes. He changed his course and came to my side and knelt beside me and stroked my hair.\n\n\"It's okay, sweet pea,\" he whispered. \"We love you, Mike. We just want to make you happy.\" \n\nSaul raised his head from the inside of my thighs where he'd been torturing the sensitive skin with his tongue, and smacked his lips. \"He's right, Mike. We love you like a brother,\" he grinned. \"Well... maybe if we were brothers in Arkansas, that is.\" Before I had time to retort, he'd lowered his head again and this time he cut straight to the chase and took my entire, half-hard cock into his hot little mouth. I moaned at the feel of a sensation I'd barely let myself think about in such a long time.\n\nKevin, not to be upstaged, went into serious attack mode on my pits; a place I'd once admitted to him was one of my big erogenous zones. He raised my arms above my head and then lowered his head... sucking, tonguing, and licking sloppily until they were damp with spit and red from the scrape of his beard against my skin.\n\nMy head rolled back and I groaned again. I was still a little scared, but I was beginning to hope my fear wasn't going to last long in the game my two friends had set me up for. My cock was filling fast now as Saul swirled his tongue around the head and traced the contours of it. When he plunged it back into his mouth my hips involuntarily helped him and my arms, still raised above my head to give Kevin access, twitched with the need to join the game. When I was fully hard, Saul came off me with a sucking slurp and hooked an arm under each of my legs and, with Kevin's help, he slowly pulled me down onto the thick pile of the carpet.\n\nI was on my back, lying flat out. Saul straddled me and I looked over his front with the same careful scrutiny I'd applied to his back. I decided if he looked like a young boy from the rear, he was certainly all man from the front. Although his back and ass were almost hairless, on this side, Saul looked like a little bear cub. Thick soft hairs swirled around in curly patterns on his groin and only narrowed at his waist where the trail widened again to coat his chest, leaving just his nipples bare of fur.\n\nMy eyes drifted back down and I really looked at his hard cock for the first time. It was straight and brown, almost as dark as the hair that surrounded it. For the first time I reached out to him, running my fingers deeply through his pelt, pulling gently at it, watching as it curled around my fingers. I luxuriated in it for a moment. I'd never been into bears, but with Saul, I could see why some guys were addicted to them. My fingers let go of the silky strands reluctantly and I trailed lightly downward until my hands found the oh-so-stiff pole that rested in a thatch of the wondrous down.\n\nHe sighed and for a moment closed his eyes. When he opened them he looked straight into mine. \"I want you, Mike,\" he growled, \" I want you to fuck me. Do you want that too?\"\n\nGod did I ever. But with a rush, the fear returned. My heart pounded and I felt the back of my neck and forehead dampen with panic sweat. Suddenly, I found I couldn't breathe, and I fought to expand my chest. I fought the emotion; tried to control it as I closed my eyes and gritted my teeth. Dimly I heard Kevin softly speaking, but it took a while for me to be able to concentrate enough to hear his words.\n\n\"Mike, it's okay. Relax, sweetheart - we're all friends here. You don't have to do anything you don't want to. It's okay; you gotta believe me. You're okay.\"\n\nMy breathing, so shallow and erratic, slowly deepened as I let the sound of his voice fill my head. I realized my eyes were clenched shut. I allowed my face to relax and opened my lids. Kevin's worried face hovered directly above my own. He tried to smile when he saw me looking, but he couldn't quite manage it. He reached up to brush the sweat off my brow and I noticed he was shaking almost as bad as I was.\n\n\"You okay?\" he asked.\n\nI nodded.\n\n\"Good. For a minute there, I'd thought we'd lost you.\"\n\nI looked at the concern on his face, then down at Saul, now at my other side, kneeling at my shoulder. He was chewing nervously on his lower lip and looked horror-stricken.\n\n\"Sorry, Mike,\" he whispered, his voice full of tears. \"I didn't mean to push. Like we said before, you don't have to do anything you don't want to.\"\n\nI looked at those two worried faces and I realized something: I had no reason to be frightened here. These were my friends - two of the best people I'd ever known. And they were offering the greatest gift they had to give - themselves. I'd be a fool to reject that. And I had never thought of myself as a fool.\n\n\"You know,\" I said, as I sat up and smiled. \"If you two clowns think you can get me all hot and bothered, and then just back off, you have a real big surprise coming up.\"\n\nKevin searched my face and smiled when he saw something there that he liked.\n\n\"Oh, a real big surprise, eh?\" He turned to the still-concerned Saul and winked. \"Don't worry, baby. It's actually not all that big, as I'm sure you've already noticed.\"\n\nSaul looked shocked for a second, then caught on and started to giggle. It was contagious. We ended up laughing hysterically in a pile of arms and legs. But when that was over, we started the dance again. We'd all gone soft when I'd had my little panic attack, but that didn't take too long to rectify. And this time I wasn't a watcher. I joined in with an enthusiasm I had worried I was no longer capable of.\n\nOh, there were a few times when I'd have to pull back, take a little breather to fight back random bursts of panic. And I'd be lying if I told you the momentary helplessness that three-way sex invariably generates didn't make me nervous as hell. But Kevin and Saul always seemed to sense these times a second before they became overwhelming, and they'd wait until they saw the tenseness in my face disappear until they'd start again.\n\nIt wasn't long at all before I felt the familiar feel of tense muscle, the involuntary spasm that accompanied it, that seemed to happen whenever I'd slipped my a cock into a warm, tight ass. Saul moaned, but in lust, not pain, as he pushed down. Kevin reached out and held him tight around the shoulders murmuring words of love and encouragement.\n\nI realized with a shock that it had almost been a year since I'd been on the giving and not the receiving end of a good fuck, and I was suddenly eager to make up for lost time. I waited impatiently for Saul to adjust, and as soon as his eyes told me he had, I pushed with my hips to begin. Kevin watched us with greedy eyes until he couldn't stand being left out any longer, and he bent down to take his lover's pole in his mouth.\n\nOnce we started, we raced to see who would finish first. We couldn't wait any longer. It was almost a tie, too: Kevin was swallowing the last of Saul's load just as I was losing the first of mine. As I shot off into the tip of a condom, I realized that what had started out as an unbelievable gesture of generosity between friends, had become a special night we'd all keep with us forever. It was a victory for all of us.\n\nWhile I lay there panting, savoring the moment, Saul released me, then knelt in front of Kevin and took him into his mouth. I watched as the two lovers repeated their own well-known moves. As generous as they'd been with me, it was obvious that now was there time for each other. When Kevin finally let go with his own essence, it may have been my hand he gripped, but it was Saul's face he sought out with his eyes.\n\nThere was a moment of silence and then both of them turned to me. They smiled, almost in unison, but I didn't smile back and slowly both of them grew solemn too. When they looked good and unhappy I made my move.\n\n\"There's something I need to say to you two,\" I told them seriously.\n\nI watched as they both geared themselves up for the unpleasantness they believed was about to begin. They'd conned me, and even if the reasons had been pure, they knew I wasn't the type of person that would take being deceived lightly.\n\nKevin sat up and leaned forward, then put his hand affectionately on my shoulder. \"Listen, Mikey, I'm sorry if you're mad about us tricking you into having sex,\" He spoke tiredly, a mix of exhaustion from the sex and depression at my reaction. \"I want you to know that it was all my idea. Saul didn't want to do it. I made him.\"\n\n\"Don't make excuses for me,\" Saul protested. \"I'm a fucking adult and you couldn't have made me do anything if I didn't want to.\"\n\n\"Baby, you know how you were against this...\"\n\n\"Would you two please shut the fuck up, so I can finish here?\" I barked. \"Jesus Christ, you two really are starting to sound like an old whiny couple.\"\n\nThey both grew silent. Saul who'd been doing a great imitation of a fuck bunny for the last hour, actually started to blush from embarrassment. \n\nI cleared my throat. \"I tried to tell you this earlier, but one of you was too busy trying to swallow my cock and the other kept sticking his tongue down my throat every time I opened my mouth, so I couldn't. But I to be sure you know this, so I'm telling you now.\" I looked at both of their serious faces and smiled. \"I love you guys, too.\"",
        "\"Asshole!\" Kevin growled, and threw a couch pillow at me.\n\n\"Jesus Christ, Mikey, you scared the living shit out of us!\" Saul whined, and then he catapulted his body onto my chest and snuggled in.\n\nI wrapped my arms around him, then sighed and only opened my right to invite Kevin to join us. We lay still together for a long time until Saul started to shiver and Kev stretched out a long arm to grab the afghan over the back of the couch. He sat up to spread it over us and as he did he looked into my eyes.\n\n\"You know,\" he said, \"there is something else we haven't tried yet.\"\n\nHe stroked my cheek with fingers that still smelled faintly of Saul's cum. My cock stirred and I considered what I knew he was saying: he was asking me if I wanted to bottom. He knew my history with Cam, and I'd been honest with him about how much I'd enjoyed that. I suppose he thought that would mean I'd be eager to take that role again.\n\nBut I wasn't. The physical injuries had healed; I knew that for a fact. A couple of fingers up my ass had answered all the questions I'd had about that some weeks before. So it wasn't fear of pain that made me hesitate. Some was a holdover from Elliot, but that wasn't all of it either.\n\nWhen I'd given myself to Cam, I really did it more because I thought it was time, not because I thought it was right. I regretted that now, and I didn't want to repeat that mistake. I loved Saul and Kevin, but I wasn't in love with them. The next time I felt somebody's cock in my ass, I wanted it to be with someone I loved as a partner, a lover. I wanted that someone to be Joe. It might never happen and I'd have to reconsider, but at this point I was willing to wait and see if the possibility could ever turn into a reality.\n\nKevin read the answer in my eyes and stilled his hand on my cheek. \"You sure?\"\n\nI nodded. \"But I do appreciate the offer.\"\n\n\"Hey,\" he winked and nodded towards Saul who'd fallen asleep with his head resting on my shoulder. \"We're a full service body shop here. Have to keep the customer satisfied.\"\n\nI stretched out and moaned in contentment. \"I have no complaints.\"\n\nKevin looked at me. \"I just want to make sure you know the offer is always open.\"\n\nI grinned and wagged my finger. \"And some day I may hold you to it. But not right now, okay?\"\n\n\"What are you two whispering about?\" Saul's sleepy voice drifted up from my chest.\n\n\"About what a hot ass you have, and how we both want to fuck it until you can't walk tomorrow,\" Kevin teased.\n\n\"Great, great,\" Saul yawned, \"just don't forget the lube, and try and keep the moaning down so you don't wake me.\"\n\nKevin and I both laughed softly as Saul closed his eyes again. Kevin lay back down beside me and soon all three of us were sleeping, curled up together like puppies, or friends who trusted each other absolutely.\n\nSometime before midnight, Saul woke us and led us into the bedroom where we crawled under the covers of their king-sized bed and held each other. The other two fell back to sleep immediately, but I lay there looking at the moon that shone through the window and washed everything out into shades of gray and silver.\n\nI was thinking of another man who slept under that moon. He would be alone and his pale skin would shine like marble under the cold light. I sent him a private message in that moonlight. I imagined the words traveling up into the sky and down again to glide through his open window and sink into his sleeping form, where they would work their way into his dreams and he would hear the words I meant so much.\n\n\"I love you, Joe. Come home to me.\" \n\nI closed my eyes and slept.\n\n~ ~ ~ ~ ~ ~ \n\nThe next day I got home and started to think about what my next move should be. I hadn't forgotten my promise to Sarah, or to myself for that matter. But I was definitely going to try and make Joe aware of just exactly what my feelings for him were.\n\nI just didn't have a fucking clue how to go about it.\n\nI thought about a phone call, but that seemed too iffy to me. What if I messed it up and made things worse? Confronting him face to face would've been ideal, but even if I'd had the money to fly to Italy, I had no passport, and the whole situation could end up looking like I was stalking him or something. He'd probably take one look at me and run in the opposite direction.\n\nThat left me no choice but to write - something I hated because I'd always sucked at it in school. But at least writing would give me the chance to think about what I wanted to say, and maybe that way I could at least hope I got it right. I sat down and started:\n\nJune 10, 1989\n\nDear Joe,\n\nI think this letter is way overdue. I know you call Beau and get updates on what's happening around here, so I'm not going to get into that now. It's enough to say I've been doing a lot of thinking and examining of who I am and how I really feel about the people that I love. That includes you, man; I think you know that.\n\nThe thing is, when you're in therapy, even when it's for something specific like mine is, you get to a point where you start to examine all aspects of your life, not just the ones that landed you on the couch in the first place. And that includes how I feel about you.\n\nI've thought about it a lot. I've run the last 4 years over and over in my head - every conversation, every look, everything I could remember about the time we've spent together. It has been quite a journey, hasn't it? From the moment you ran into that Chem. Lab, my life has never been the same.\n\nLove. It's a word we all use a lot. We love so many things: we love our car and pizza and the new cassette we just bought. There are a lot of ways we love. There are those special kinds we have for our families, our friends, and all the people who are there for us. You belong in that group for me, and no matter what else happens, your friendship will always be one of the things I feel luckiest about having known.\n\nBut that isn't all of it Joe. Not even close. Because, I don't just love you as a friend. God knows I've tried to pretend that's all it is, even to myself and especially to you. But I don't want to pretend anymore. And what I really want... what I dream about and pray for in the dark, is you as a lover. Because, the truth is, I not only love you, Joe, I'm in love with you. And I'll say that to you forever and for the rest of my life, if you'll let me.\n\nOnly - and I'm not sure how I'm going to tell you this without screwing it up - before I can even think about that, I need to be honest with you about a few things. And that's really important because the truth is I've lied to you since the first day I met you.\n\nSee, I've always been in love with you. That's the real reason I was so reluctant to tell you I was gay, and it's also the reason I've spent so much of our time together being distant. I thought that if you knew that about me, you wouldn't want to be my friend and I couldn't face that. So, I lied.\n\nYou know, when I look back on every thing, I realize that it was always you who stuck his neck out, not me. If it weren't for you, I'd have never even said hi to you after the first week or two out of the hospital. I'd have drifted - no, run away - from the possibility of us ever being friends. Remember that fight last spring when you nailed me for keeping my distance? Shit, you were so right. Every minute I've spent with you has been one where I've been so concerned about protecting myself, I've never even thought about your feelings and what you needed.\n\nEven now, I realize that all this time you've been away, you've sent me letters and called and not once have I ever made the slightest effort to return the favor. I wasn't even smart enough to figure this out for myself. Last week in therapy, I was bitching to Alice that I hadn't heard from you in a while and she asked me if I'd tried to get in touch with you instead. I was stunned. The thought had never even occurred to me. What kind of an asshole does that make me?\n\nAnd my answer to that is the kind that would rather you believe I didn't care rather than run the risk of getting rejected. I think somewhere in the back of my mind I had this nice little scenario cooked up where you'd come back and make all the hard choices and leave me with nothing more to do than just open my arms and welcome you home. How's that for neat and tidy? No need for me to commit, or put my ego on the line. I'd leave that up to you, the same way I've always done.\n\nSure, I figured there was always the risk that you'd feel rejected and not even want to bother, but what the hell.... at least I'd know. It didn't matter that real life doesn't usually include a guarantee of happiness - only the possibility of it - and only if you were really willing to risk everything to get it. No, my attitude was, \"fuck the possibilities, I want proof.\"\n\nBut that isn't real life and that isn't love. Because in the long run, it doesn't matter if you love me as much as I love you or even in the same way. What matters is that I love you enough to trust you to accept me telling you how I feel. And if you can't return those feelings, then that's okay, because at least, for once, I'll have known that I'd taken the initiative.\n\nThis hasn't been an easy letter for me to write, and I imagine you're not finding it any easier to read. Please believe me when I say, I'm not trying to put any pressure on you here, even if might appear that way. Yes, I want you, but not at the cost of your happiness. If you really feel this is wrong, I'll understand. It will break my heart, but I'd rather that then ever run the risk of hurting you.\n\nBut I need you to know how I feel because it would kill me if I thought you were spending one minute worrying about whether or not I wanted this to happen between us. So let me tell you again: I do want you, Joe. More than anything else ever... I want you. And if you think there is even a glimmer of a possibility that you could feel the same way about me someday, I hope you'll remember this letter and know how much I would cherish the opportunity to prove to you that I mean what I say.\n\nSo what do you know, I'm dealing in possibilities after all...\n\nLove Always,\n\nMike \n\nI folded the letter, put in an envelope and walked to the corner and mailed I before I could change my mind. Less than two weeks later, the answer came. My hands shook as I tore open the envelope.\n\nJune 15, 1989\n\nDear Mike,\n\nI got your letter yesterday. I thought that was pretty good considering the distance it had to travel. I wish you didn't feel bad about not writing before. God knows you've had enough on your mind without worrying about me.\n\nOh course, that's part of it, isn't it? Oh Jesus, I wish this wasn't all so hard. Right now, I feel like the worlds greatest fuck up. You give me too much credit, Mike. From your letter you'd think you actually thought I actually had a goddamn clue about what I was doing! I don't. In fact, I think I never did.\n\nOh God, Mike, why can't I figure this out? Why is one part of me so miserable because I can't see your face or hear your voice, and the other so terrified that the thought of going home makes me physically nauseous? I want to be with you, more than you can ever imagine. And the worst is, I feel so damn guilty for not being there when you've been going through all this shit that I can't stand myself. I've never run from anything in my life before, and I can tell you, it's a fucking shock to realize how weak I really am.\n\nYou tell me you love me and I know you believe that, but frankly I don't know how you could. You don't even know me! You don't know how much I've hidden from you, from Betsy, from every person I've ever tried to fool into loving me. You call yourself a liar; well, you're a novice compared to me.\n\nYou've given me a great gift by telling me all of this about yourself. Don't think I don't realize that. And, never, never worry that I would think less of you because of it. Hell, I should be so brave.\n\nBut I'm not, Mike - at least, not brave enough. You've been honest with me, and now it's my turn. See, just because I care about you doesn't mean I'm ready to give up wanting everything else. I've never made it a secret how much I want a family, a home. I don't know if I can give up that dream, not even for you. And I don't think that this is something that can be left to figure out later.\n\nI don't want to feel this way. I'm tired of missing you and I'm tired of being scared of what happens next. But that doesn't mean I'm ready to face it yet either. And honestly, I don't know if I'll ever be. I wish that weren't so, but it is. I know the truth is supposed to \"set you free,\" but I sure as shit feel like all it's done is bind me up into knots I may never be able to untie.\n\nI love you, Mike. \n\nThere - I've finally admitted it. I don't know it that's a good thing or not. I love you, all right... but I just don't know if that's enough. And God help me, I wish that weren't the truth.\n\nLove,\n\nJoe\n\nI read the last paragraph again for the hundredth time and then folded up the sheets, put them back in the nightstand drawer, and wiped my eyes. I'd received Joe's response to my letter a week ago and I really didn't need to look at the letter anymore to know what it said. That didn't stop me, though, and I was pretty sure I'd be rereading it for years to come, whatever the final outcome was.\n\nThe problem was, I had no clue what that outcome was going to be. The first time I'd read the letter, I was sure there was no way he was ever going to choose me; the next time all I could see were the words \"I love you.\" I was back to not sleeping very well, but this time it wasn't nightmares I was afraid of: it was dreams of Joe. They were happy dreams, and you'd think that wouldn't have been so bad, except it was because the minute I woke and realized that he wasn't really here and maybe never would be again, the disappointment was crushing.\n\nI wanted to give him time, I really did, but I was impatient, too. I needed to hear his voice, and I told myself that maybe that would be enough to appease me for a while. I hadn't talked to him since the week he'd left. Maybe I needed to change that.\n\nI bugged Beau until he gave me Josh's phone number. I knew that Joe didn't live with him in his apartment anymore. He hadn't since the first week. But I figured if anybody knew how to get a hold of him, it would be Josh.\n\nI looked at my alarm clock. It was time: 7PM in Rome, still too early for eating in that city, but late enough that Josh would probably be there. I took a deep breath and punched in the phone buttons. Even though I was only calling Josh, the thought that soon I'd be talking to Joe made my heart pound.\n\n\"Prego.\" The voice on the other end of the phone made the heavy pounding in my chest skip a beat. I stared at the phone, unable to speak. \n\n\"Hey,\" said the voice, \"anybody on the line?\" And then the sound muffled momentarily as the person turned and spoke to someone else. \"I think we've got a breather here.\"\n\nI swallowed hard. My mouth was dry, and I desperately wished I'd had the forethought to grab a beer before I'd started this. Despite the whine of the overseas connection, I knew the voice on the line, and it wasn't Josh's. For all that they were almost identical.\n\n\"Joe?\" I finally managed to get out.\n\nThere was a silence and I thought maybe I'd taken too much time to respond and he'd already hung up. Then I heard a whoosh of breath as it was exhaled into the receiver. The relief that came with knowing he was still there made my knees weak and I sat down heavily on the bed.\n\n\"Yeah,\" came the wary reply.\n\n\"Joe, it's... it's Mike.\"\n\n\"I know.\" He didn't exactly sound overjoyed to admit it.\n\n\"I didn't expect to have you answer the phone,\" I babbled. This was not going at all the way I'd hoped. \"Actually, I wasn't expecting you to be there at all. I was calling Josh to...\"\n\n\"Oh, REALLY?\" he snapped. It didn't make sense, but I could swear that Joe sounded pissed. \"Well sorry to disappoint you, but I am here, so I guess you and my brother will just have to set another time to talk behind my back!\"\n\nOh shit - now I understood. \"Joe, wait,\" I protested. \"That isn't what this is.\"\n\n\"Yeah, right,\" he said sarcastically \"I forgot how you and Josh are so close. You've maybe talked to each other like, what... three times in the last four years? Of course, with a friendship that intense, you two would need to stay in touch.\" \n\nI shook my head. \"Aw, Jesus Christ,\" I cried, \"at least give me a chance to explain!\"\n\n\"Explain what, Mike? I think I get it perfectly. You and my brother are cooking up some scheme to get me back there. I wondered why he'd been on my back so much lately, and I just think I figured out why.\"\n\nI started to get angry, but then caught myself and softened my voice. \"You're so wrong, Joe,\" I began, \"and if you'll just stop acting like an asshole and give me a minute and listen...\"\n\n\"Fuck you, Mike!\" he snarled.\n\nThere was another voice now in the background, urgent, pleading and Joe must have pulled his mouth away again from the receiver, because his voice sounded more distant, \"You stay the hell out of this, bro'! In fact, why don't you just get the fuck out of my life all together? I don't know why I even came to you in the first place!\"\n\n\"Joe, Joe!\" I shouted into the phone, trying to draw his attention back to me. \"Why are you acting this way? Shut up before you say something you regret!\"\n\nThere was silence again. When Joe finally spoke, his voice was shaking with emotion. \"I can't... I just can't do this, Mike. Please, don't push me, I can't...\"\n\nThe phone suddenly dropped, and after a moment, another voice was speaking. \"Mike, it's Josh.\"\n\n\"Oh shit, Josh. I'm so sorry, I don't know what just happened... what I said!\"\n\n\"It's not you, really. Don't worry about it. Joe and I were just having a little difference of opinion, and then you called and he decided to use that as an excuse to go a little nuts.\"\n\nReaction was setting in and now I could feel the tears trickle down my face. \"God, what have I done?\" I said in a hoarse whisper.\n\n\"Nothing, trust me.\" Josh's voice was firm, but gentle. \"You didn't do anything wrong, Mike. It's just your timing that sucks. Look, can I call you back? I have to go chase down Mr. Prima Donna. He ran out of here and I need to find him and bitch-slap some sense into him.\" He sighed. \"God, he's such a goddamned drama queen.\"\n\nJosh never had fit my image of what a priest should talk like. Any other time, I might have laughed at him; today, I barely noticed. \"Yeah, fine,\" I said, trying to regain my composure. \"I'd like that. Oh wait - I can't. I have to go to work.\"\n\n\"Hmmm, okay... tomorrow, then. And listen, Mike,\" he said, his voice softening. \"Don't worry. Joe is just... he's really confused right now. He's going to be fine. I promise you that.\"\n\n\"Good,\" I said, but I didn't believe him. \"That's good.\"\n\nWe said our goodbyes and broke the connection. I sat there motionless on the bed. I didn't even hang up the phone, but stared blankly at the receiver in my hand as if I'd never seen one in my life.\n\nI didn't know what the hell to think now. Obviously, Joe was in a lot worse shape then I'd thought, but Josh had acted like he didn't think it was that big a deal. I'd heard enough about Josh from his brother to know that he wasn't the kind of guy who'd say something if he didn't actually believe it, so I had to think he knew what he was talking about.\n\nI forced myself to get up and start getting ready for work. I was going in later than usual because I knew I'd have to be at the office at least until 10PM. We had a big case that had started trial today, and there was bound to be some last-minute research that had to be done after the first witnesses had been called. I'd been bitching because I usually hated staying after hours but now it didn't seem so bad. This night was going to be long enough; I didn't need to spend it all alone.",
        "So it was after midnight when I finally got back to my apartment. The answering machine Cam had gotten me was blinking wildly, but when I checked the 5 messages it showed, only two weren't hang-ups. Fucking telemarketers, I thought as I punched the button and deleted another one.\n\nThe next call wasn't a hang-up; it was my Mom. She was just calling to tell me that my brother Andy had broken his leg trying to get out of his second-story window to escape being grounded. Good, I thought. That ought to slow the little bastard down. I didn't know what his problem was lately, but I knew he was driving my parents crazy, and I didn't think they deserved that. Of course, I'd be predisposed to take their side as Andy and I had never liked each other, and he was the only one of my family who'd thought it necessary to make a fuss over my being gay. Ever since he'd found out, his pet term of endearment for me was 'fucking faggot.' So it was understandable that I wasn't too upset that he was in a little pain now. Maybe it'd do him some good.\n\nThe second call was less satisfying. It was from Josh. He told me he'd forgotten, but he was leaving for a conference tomorrow - or rather, I supposed, today. He had to play slave boy to one of the Vatican dignitaries, so he wasn't sure if he'd be able to get any time away to talk to me. He did say he'd managed to catch up to Joe and had somehow convinced him that my call had been perfectly innocent and not part of some giant conspiracy between Josh and me. He ended by saying he'd try and talk to me as soon as possible, but if I didn't hear from in the next few days, he wanted me to know that he wasn't blowing me off; he was just unavailable.\n\nI had to be content with that, but it wasn't easy. I wasn't very sleepy now, and I puttered around the apartment not sure how I was going to cope with all of this for much longer.\n\nI flipped on my TV but there wasn't anything interesting on. I tried reading, but I couldn't even get past the first couple of pages. I could have cleaned, but I didn't like doing that when I was happy, let alone depressed. I thought about going out for a drink, but figured I wouldn't get there until last call, and most of my friends would already have found their true love for the night and split. I finally decided if there was nothing to do, I might as well do it in bed.\n\nI'd stripped and had just climbed under the covers when the phone rang. Good, I thought. Maybe someone was calling to tell me to get my ass over to some party. Not that I was in a party mood, but I was willing to try anything to stop my thinking about Joe.\n\n\"Make it good,\" I said into the receiver.\n\n\"Mike?\"\n\nI sat up in bed and turned on the light. \"Joe! Is that you?\"\n\n\"Uh, yeah.\" He sounded nervous. \"I hope it's okay that I called.\"\n\n\"Of course it's okay,\" I insisted. \"I was really worried about you.\"\n\nThere was a slight crackle of static in the line. \"I wasn't sure,\" he began. \"I mean I acted like a total asshole yesterday. I can't believe how stupid I was.\"\n\nI didn't say anything. It wasn't like I could disagree with him, after all.\n\n\"Anyway,\" he sighed, \"that's why I called - to apologize.\"\n\n\"Apology accepted,\" I said, too relieved to make him suffer. \"Now, how are you really? Is the weather good? How do you like Italy? Have you played tourist and seen all the sights?\" I know I was acting like an idiot, but I was desperately trying to think of anything to say to him to keep him on the line. I didn't care what we talked about - just the sound of his voice was making me happy.\n\n\"Whoa, slow down!\" he said with a laugh. He was sounding happier, and I started to grin in spite of the nervous sweat that had broken out on the back of my neck. \"I'm fine, really,\" he continued. \"The weather is hot and the sun shines every fucking day. Italy's cool, though, I guess. I've been to the Coliseum and St Peter's, of course, but I really haven't been up much for sightseeing.\"\n\n\"So what have you been doing?\" And then I wanted to kick myself when Joe grew silent.\n\n\"A lot of things. Nothing. Well... thinking, mainly,\" he finally answered.\n\nI chose my next words carefully. \"Do you want to tell me about it?\"\n\nIt took Joe a minute to answer again and when he did his voice was so soft I could barely make out the words. \"More than you could ever imagine, Mike.\" He swallowed. \"Look, could we just not do this now? Could we just pretend for a little while that none of this happened? I mean... I miss the way we used to be - just friends, you know? Couldn't we try that again? Please? I just want us to be friends again.\"\n\nMy heart went out to him. I knew exactly how he was thinking. There were times when I wished the same thing myself. But as appealing as that sounded, it wasn't going to happen.\n\n\"I wish we could Joe,\" I agreed sadly. \"I really do, but I don't see that happening, bud. You really can't turn the clock back.\"\n\n\"Yeah, I know,\" he said.\n\nWe were both silent as the real impact of those words sunk in.\n\n\"Mike?\"\n\n\"Yes?\" I answered.\n\n\"I think I need to go now.\"\n\nMy heart sank. \"If you think that's best.\"\n\n\"I'll call you soon.\" His voice was husky. \"I promise.\"\n\n\"Okay, good.\" I took a deep breath and closed my eyes. \"I love you.\"\n\nHe didn't hear me. He'd already hung up.\n\n# # # # # # # # # #\n\nauthor's note: I know, I know. But I promise this is the last chapter I'll tease you with. Ten, which is almost done, will start the resolution of Book One of The Human Condition. \n\nAs always a big thank you to Marc, the Peckman, for his superb editing. And a special thanks to Nick, Keith and Richard for all the diligent research they did for me on the porno section. It was a dirty job, but you guys were great. \n\nJayne "
    ],
    "authorname": "jfinn",
    "tags": [
        "run risk",
        "started grin",
        "saul kevin",
        "saul",
        "sighed god",
        "friends people",
        "head grinned",
        "human condition",
        "jesus thought",
        "voice line"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/the-human-condition-ch-09"
}