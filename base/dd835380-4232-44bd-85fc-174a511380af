{
    "title": "Futa's Wild Passion Ch. 07",
    "pages": [
        "Futa's Naughty Study Session\n\nI felt like a million bucks as I walked through the college, trailed by my little sister. Allie and I had just had a naughty time in the bathroom. Of course, right before that, I had a naughty time with my new girlfriend Wendy. I had deflowered her while Allie lurked in the stall next to us, masturbating to the sounds of our love-making.\n\nMy sister was my secret lover. My incestuous delight. We couldn't let anyone know, so when Wendy confessed her love for me and wanted to be my girlfriend, I thought it was perfect. I didn't want to hurt her, but if I had a girlfriend, things would be easier.\n\nAnd since I had a cock now, Wendy didn't consider us lesbians. I didn't know what it made us actually. The lesbian dean of my college thought it still meant she was gay for liking my girl-dick while Wendy thought it meant she was actually straight. She was thrilled to now be able to openly express her feelings for me.\n\nIt was so complicated.\n\nI reached the cafeteria and spotted my friends having lunch. Wendy saw me first and squealed. She bounded to her feet and took two steps towards me before she stopped, this flush of embarrassment crossing her nineteen-year-old face. We were the same age. Keeping her blonde hair in an elegant French braid kept her heart-shaped face clear of her hair. She had blue eyes that shone.\n\nI took her hand and then glanced at our friends. Pita was there, of course, my Hispanic friend arching a naughty eyebrow at us. She knew why Wendy had taken me off. Victoria had a speculative look. The brunette also knew my secret. She had blown me with Pita and Wendy in the bathroom before classes.\n\nMy other two friends, Briana and Tina, looked with some surprise at Wendy and I holding hands. Briana had long, black hair and a speculative look on her pale face while Tina shook her head. Her short, brown hair swayed about her face.\n\n\"What is up with you two?\" Tina asked.\n\n\"We're dating,\" I said.\n\nBriana's jaw dropped. Victoria smirk grew. \"I knew you were gay, Wendy.\"\n\nWendy gasped. \"I'm not gay because...\" Then she glanced at me, her eyes wide. \"I mean, should we tell them.\"\n\n\"I'm a futanari,\" I said at the top of my lungs. I heard a few gasps from nearby tables. \"I, eh, came down with Futanari Syndrome yesterday.\"\n\n\"That's the secret that you and Pita have been hinting at!\" Briana gasped.\n\n\"Oh, my god, Jenny!\" gasped Tina. She bounded to her feet. \"Are you okay?\n\n\"I'm great!\" I said, tightening my grip on Wendy's hand. \"I'm a futanari, and so it's not gay. Because I have a...\" My cheeks burned. \"Well, I have one of those.\"\n\n\"A cock!\" a guy shouted from a nearby table.\n\n\"Yes!\" I said with pride. \"It's nothing to be ashamed of. I know you have one, James. Only mine's bigger.\"\n\nJames clamped his jaw shut as sniggers burst around him.\n\nI caught a glimpse of Allie sitting down with her friends. Kathy Greene, the sexually adventurous minx I'd been hearing so much about, leaned over and whispered to my sister. She nodded her head. I hoped Allie wouldn't talk about our incestuous affair. I didn't think she would, but...\n\nShe was an excitable girl.\n\n\"I'm so happy for you both,\" Tina said and then hugged Wendy and me, pulling us so tight. \"Ooh, I'm more than a little jealous that you snagged her up first. A real, live futanari.\"\n\n\"Yeah, I bet Pita must be so disappointed,\" said Briana.\n\n\"Right,\" Tina said, pulling away from us. \"You watch that futanari porn star.\"\n\n\"Oh, well,\" Pita said. \"I mean, Jenny and I are sex friends. I hope that's okay, Wendy? You know, since you two are dating.\" My Hispanic friend gave me a speculative look. She knew I had a secret lover but thought it was my MILF neighbor.\n\n\"It's okay,\" Wendy said as she pulled me to the table to sit down with our friends. \"We, uh, talked and... I understand that futanari have increased libido.\"\n\n\"So I could be your sex friend, too?\" said Tina.\n\n\"Yeah,\" I said, my futa-dick swelling in my panties. \"If Wendy's okay with it.\"\n\n\"Just so long as you remember she's my girlfriend,\" said Wendy a little possessively. \"We're going on a date on Friday.\"\n\n\"Yep,\" I said.\n\n\"And she's coming over to my house to work on a project tonight,\" Pita said. \"And other things.\"\n\n\"Isn't your mom going to be home?\" I pointed out. \"And we need to get the project done.\"\n\nPita's face fell and we all giggled.\n\nThe rest of the lunch hour passed swiftly. I had a feeling that Veronica and Briana also wanted to be sex friends with me. This being a futanari was having a lot of perks. I just hoped I didn't hurt Wendy. Maybe I would develop feelings to match hers, but...\n\nAllie had claimed my heart so fast. It was so hard knowing she was eating lunch only twenty feet away.\n\nThe word that I was a futanari buzzed through the student body. Everywhere I went, people whispered. I felt girls and guys giving me strange looks. Sometimes curious, sometimes disgusted, and sometimes they were inscrutable. Professors welcomed me and told me they supported my decision to come out as a futanari.\n\n\"You're so brave,\" was said a lot to me over the course of the day. Sometimes, random girls would give me friendly hugs, girls I didn't even know, and boys would give me fist pumps or high fives.\n\nOthers just gave me cold shoulders.\n\nThere was no way I could use the girl's locker room for PE, my last class of the day. I took advantage of the offer to use the coach's private room. It was installed a few years ago to cut down on any sort of rumors of inappropriate behavior between students and staff.\n\nOf course, there was a whole group of lesbian professors who did naughty things with students. Dean Washington led them.\n\nMy cock felt so obvious during PE. Everyone seemed to be looking at it, which only made me pop a boner, as boys put it. I was so hard and aching, my gym shorts doing little to hide my arousal. Girls giggled and guy scowled as they realized just how big I was.\n\nI couldn't help it. The girls were looking cute in their shorts, especially Heather. Her butt was bubbly and cute, just molded by the red gym shorts we wore. My cheeks burned. I was so thankful when it was over and I could go to the private room and shower.\n\nIt was such a relief to strip out of my gym wear. I stood naked under the shower in the small room. It had a sink and a toilet with a shower in the corner. The entire floor was tiled and the room was open. You had no privacy, but it was a single use.\n\nI ignored my hardon, fighting the urge to masturbate right here. I didn't have that much time. I was soaping my breasts, rubbing my hands over my round tits, when the door creaked open behind me. I gasped and whirled, covering my tits.\n\nMy cock swung hard before me.\n\nCoach Clarkson stood there, her eyes widening. Her cheeks went red and, for a moment, I thought she was going to enter. She stared at my dick bobbing before me, water dripping off of it. I didn't know what to do.\n\nThen she pulled the door shut. \"Sorry, I forgot you were using it.\"\n\n\"Oh, right,\" I said, trembling. \"I should have locked it.\"\n\nDidn't I? Had she peeked in? Did she want to see my futa-cock? People always gossiped that a female gym coach was a dyke, but I didn't think Coach Clarkson was. She didn't have that look. Of course, neither did Wendy. Still, it must have just been an honest mistake.\n\nBut what if it wasn't...?\n\nFantasies of the coach slipping in and doing things with me beneath the shower spray burned through my mind as I finished washing. It was so hard to pull my panties up and over my girl-dick. I really, really wished I had masturbated.\n\nIf coach Clarkson had caught me...\n\nI was turning into such a pervert.\n\nI headed to meet up with Pita and go home with her. I passed more students telling me, \"You're so brave!\" like I had any control with coming down with Futanari Syndrome. It was just a strange roll of the genetic dice. I came up snake eyes or maybe double sixes.\n\nI guess it depended if I saw being futa as having a glass half empty or half full.\n\nHalf full. I was liking having a futa-dick.\n\n\"There she is!\" Pita grinned when I sauntered up. \"Let's give it up for Jenny! She's so brave!\"\n\nA group of girls, with a few guys, clapped and cheered for me. They ranged from freshman Allie's age to my fellow sophomores up to seniors. I blushed at the attention. It was so sincere, I could see it in the girls' eyes, but it was also so cringy and embarrassing at the same time.\n\nOne guy held up a sign proclaiming, \"Futanari ally!\"\n\nI fought the urge to roll my eyes. I was sure the guys were just there to score on the girls, but I didn't want to be rude. So I smiled and waved to them. I blew a few kisses. More than a few girls had smoldering looks in their eyes.\n\nI might end up with more sex friends then I could handle.\n\n\"Okay, okay,\" Pita said. \"Do I need to turn the hoses on you? Let's go.\"\n\nShe grabbed my hand and we headed to the city bus that would take us to her house. I saw Allie about to board a different bus and waved at her. She flashed me a thumbs up then grabbed her phone and sent a message.\n\nI pulled it out and blushed. It was a shot of her pussy and said, \"I'll be wet and waiting for you to get home.\"\n\nWhen had she taken that pic?\n\n\"Secret message from that MILF of yours?\" asked Pita as I thrust my phone back into my purse, my futa-dick still hard from my coach fantasy.\n\n\"Yeah,\" I said. \"She, uh, sent me a dirty pic.\"\n\n\"You going to tell Wendy about her?\" Pita asked as we climbed into the bus. It had the smell of vinyl from the green seats.\n\n\"Maybe,\" I said as we took ours. \"I want to feel her out. She's okay with some sex friends, but...\"\n\n\"But you already love someone else.\" Pita leaned back. \"That sucks for Wendy. Maybe you shouldn't date her.\"\n\n\"Maybe I'll feel something back,\" I said. \"She gave me her virginity. I couldn't just say no. She's my friend. I do love her, just not that way. Yet.\"\n\nWe discussed my upcoming date with Wendy, debating what I should wear and where we should go. We had things narrowed down when we got off at her stop. We walked down the street to her house, still talking. Pita wanted me to wear a thong, but I just couldn't with my futa-dick.\n\n\"I'll pop out the moment I get hard,\" I said, my cock throbbing at nearly my full girth, the tip peeking out the top of my waistband. I was glad I wasn't tucking.\n\n\"I know,\" Pita said. She darted up to her front door and whirled around on her porch to face me. \"That'd be so hot. Then Wendy could find it while you're in the theater. Give you a little BJ.\"\n\n\"Oh, my god,\" I groaned. \"You got a pervy mind.\"\n\nPita winked at me. She whirled around and opened the door. \"Mom, I'm home. Jenny's with me. She's a futanari now!\"\n\n\"Pita!\" I groaned.\n\n\"She's a what now?\" Mrs. Asis asked. She peeked in from the kitchen wearing an apron over her sweatpants and t-shirt.\n\n\"A futanari,\" said Pita. \"She got that Syndrome yesterday. Wild, right? We'll be studying and working on our project.\"\n\n\"A futanari...\" Mrs. Asis's jaw dropped. She had the same golden-brown skin as her daughter, her curly-brown hair falling around a face dotted with flour. \"You grew a...?\"\n\n\"Yep,\" I said, my cheeks on fire. \"Eh, we got a school project to work on. So, we'll be studying.\"\n\n\"Sure,\" she said, sounding dazed. \"Er, have fun.\"\n\n\"It's a school project for boring biology,\" said Pita, rolling her eyes. \"We have to give some dumb report on ants. It's so stupid.\"\n\nMrs. Asis didn't have a followup.\n\nWe reached Pita's room and shrugged out of our backpacks and dropped our purses on her bed. She had two chairs and we pulled both up at her white desk. It had pink flowers drown around the edges, painted by hand by her father when she was little. We spread out the books and she opened her iPad and docked her keyboard to it.\n\n\"Okay, let's dive into ants,\" she said. \"They use pheromones to communicate. Is that why you turn on every girl at our college?\"\n\n\"What?\" I gasped. \"I don't have pheromones. The doctors didn't mention it.\"\n\n\"It's an urban legend,\" she said. \"Some say futanari turn on every woman they meet.\"\n\n\"I don't do that,\" I muttered. \"You're just a freak into futa-porn and Wendy had a crush on me.\"\n\n\"And Veronica or your secret lover or Dean Washington.\"\n\n\"Veronica just got caught up in the excitement you spawned, my secret lover and I connected on an emotional level and making love was just natural, and Dean Washington is another freak that likes schoolgirls. I'm not the only one she's enjoyed.\"\n\n\"Kinky,\" said Pita, squirming. She glanced down at me. \"You're hard. I could give you a quick BJ so we could work. You know, take care of my sex friend.\"\n\nHer words made me shiver. \"Your mother...\"\n\n\"Is cooking.\" Pita's eyes smoldered. \"What do you say?\"\n\nI nodded my head, needing relief.\n\nPita grinned. She flipped up my skirt, her greedy hands reaching for my panties tented by my cock. The gray fabric stretched to constrain my girth. The tip pulsed with my heartbeat, precum leaking out against my stomach.\n\n\"What a beautiful thing,\" Pita whispered. She stroked her finger up to the tip of my cock.\n\nI groaned as she circled it. Her touch was exquisite. Pleasure shot down my cock to my pussy. My back arched. My breath quickened. This heat rippled through me. My head tossed from side to side. She smeared the precum across my crown.\n\n\"Pita,\" I whimpered. \"Hurry.\"\n\n\"Right,\" she said. She tugged on my panties and leaned over. Her head lowered--\n\nKNOCK! KNOCK!\n\nThe door opened on the heels of those two quick raps. I squeaked and pita bolted upright. My skirt was bunched around my waist as Mrs. Asis bustled in with a tray that held a pitcher of iced tea, lemons floating amid the ice, and two glasses.\n\n\"I thought you girls needed some refreshment,\" she said, a motherly smile on her face. She had wiped off the flour from her cheeks. She came to the desk.\n\nI pushed down my skirt, hoping she wouldn't notice the action. My cheeks burned. I sat so stiffly while Pita burst to her feet and rounded on her mother.\n\n\"\u00a1Mam\u00e1!\" Pita hissed. \"You can't just barge in here!\"\n\n\"I knocked,\" she said. \"And why can't I barge in here. I mean, you're just studying, right.\"\n\n\"Of course,\" Pita said, her voice suddenly tight. \"That's all. We have this project we're working on. It's on... on...\n\n\"Ants,\" I supplied.\n\n\"Yes, ants,\" Pita nodded. \"See, we have books.\"\n\nMrs. Asis set the tray down on the night table beside the desk. \"That's wonderful. And this tea will help. You need to be focused. I find that a nice glass of iced tea helps me focus. I want you two girls to do well. Especially you, Jenny. Don't let Pita's laziness drag you down.\"\n\n\"I'm not lazy, Mom!\"\n\n\"Oh, then you did all your chores over the weekend?\" she asked.\n\n\"I'll get to them,\" Pita muttered. \"Now get out so we can study. Out, out, out!\"\n\n\"Okay, okay, honey,\" Mrs. Asis said. She smiled at me. \"See what I mean.\"\n\nI giggled until Pita shot me a look. Then I clamped my mouth shut.\n\nHer mother strode out and I noticed how the tight skirt she wore swayed about her rear. She had a nice rump. Older women had their charm. My fantasy of my mother and Reverend August danced in my mind. They were both sexy, mature beauties. And so was Mrs. Greene, my professor. Mrs. Asis was a riper version of Pita.\n\n\"She left the door open,\" muttered Pita. She darted to it and closed it. \"Can you believe her?\"\n\n\"Yeah,\" I said. \"So rude.\"\n\n\"Right?\"\n\nShe flounced back to the desk and then glanced at the glasses. \"Thirsty.\"\n\nI nodded.\n\nShe poured us each a glass and we sipped our tea. Neither of us mentioned how close we came to the blowjob. I knew I was a little skittish from our near miss. If Mrs. Asis had caught us... I shivered, knowing she would be furious. Pita wasn't allowed to have boys in her room with the door closed, and if her mother made the connection that we were up to naughty things, I had a feeling I'd be classified as \"male-adjacent\" or something.\n\nI had a cock. Close enough.\n\nWe started putting our presentation together and sipping on the tea. There was a delicious scent in the air. It was a tart musk. My eyes widened as I realized just what it was that I was scenting. I squirmed.\n\nThat was Pita's pussy. My own sweet musk was in the mix, but I was filtering that out. Realizing I was smelling her arousal had my cock aching and throbbing. I shifted in the seat and glanced at my friend. Her golden-brown cheeks were a little flushed.\n\n\"What?\" she asked me.\n\n\"Horny still?\" I asked.\n\n\"God, yes. Are you still hard?\"\n\nI nodded, my dick throbbing and aching. I glanced at the door. As that pressure built and built at the tip of my cock, it was harder and harder to be worried about Mrs. Asis. She'd dropped off the drinks. She thought we were studying. She wouldn't come back.\n\nI swallowed. \"Could you...\"\n\n\"Yep,\" my friend moaned. \"I'd love to. God, I am so wet. Could you finger me while I did it?\"\n\n\"Yes!\"\n\nOur hands dove for each other's crotches. My futa-dick was so hard, her thighs so soft, her fingers so silky. I slid up her legs as she went up mine. We pushed each other's skirts up. I exposed more and more of her golden-brown thighs, my futa-dick throbbing and aching. I shuddered as her hand found my cock while I found her panty-clad pussy.\n\nHer juices had soaked through her underwear. I smiled and rubbed up and down her. I teased her, making her shudder while she squeezed my cock through my panties. My cheeks burned in delight while her cream stained my fingers. I pushed harder, so eager for--\n\nKNOCK! KNOCK!\n\nThe door flew open. \"Now why is this closed?\" Mrs. Asis asked as we ripped our hands from each other's crotch. My shoulders hunched, embarrassment burning across her cheeks. \"You shouldn't have your door closed.\"\n\n\"It's Jenny, Mom,\" Pita said. \"What are you doing?\"\n\n\"My tamales are finished,\" she said and I could smell the spicy delight. I straightened and turned in my chair to see her holding a tray covered in the steaming treats. My mouth watered. My cock was so hard, pressing on my crotch. I must have a huge bulge, but...\n\n\"I love your tamales, Mrs. Asis!\" I gasped.\n\n\"I know,\" she said, smiling. \"When Pita mentioned this morning that you were coming over, I thought I'd make some for you girls.\"\n\n\"Mom!\" hissed Pita. \"We're studying!\"\n\n\"And you can't do that on an empty stomach,\" said Mrs. Asis. She glanced at me and smiled. \"Right, Jenny?\"\n\n\"Right!\" I said, my dick still hard, but my stomach gave a hungry growl. They just smelled so good. She made these spicy ones with seasoned meat in them.\n\nMrs. Asis winked at me as she set down the tray on the edge of the desk. On my side. They were right there. I couldn't help snagging one and gasping as it was still warm. I juggled it from hand to hand like a hot potato.\n\n\"Careful,\" she said. \"Let them cool a few minutes. I know, you just want to eat my treat, but you have to be patient.\"\n\n\"I know,\" I said, shuddering as I noticed how tight her sleeveless blouse was. It molded to her large breasts and had a scooping neckline. They were such succulent and beautiful tits. My futa-dick throbbed even harder than before, my pussy soaked with juices.\n\nMrs. Asis straightened up. \"Okay, study hard. And keep this door open, Pita. You know the rules.\"\n\n\"Jenny's not a boy!\" I gasped.\n\n\"She's a futanari. Which is practically the same. No hanky panky.\"\n\n\"We're just friends,\" I huffed.\n\n\"That's what I told my parents when I was your age. I know all the tricks, mi gatita. Door stays open. Understand.\"\n\n\"Yes, Mam\u00e1,\" Pita muttered.\n\nIt was unfair. I needed that orgasm, but not with the door open. I had to content myself with snacking on the tamales. They were so good. They melted in my mouth. The spicy treat and iced tea were perfect.",
        "If I couldn't get a blowjob, I'd settle for other delights.\n\nPita muttered the entire time, squirming as we worked. Her mother kept drifting down the hallway, not pausing, but just making sure that nothing was happening. Why did Pita have to let her mom know I was a futanari? We could have had some fun before that happened.\n\nWe worked for the next hour and a half on it. I shuddered, biting my lip. The urge to cum surged through me. I had Pita's spicy musk filling my nose and the memory of the lush breasts cupped in Mrs. Asis's tight blouse filling my mind. She was such a sexy MILF. I just wanted to stroke off. I couldn't wait until I got home. It would be so hot and delicious to cum.\n\n\"Oh, my god, we're done,\" Pita said, leaning back. \"You think that's good enough. Why do we have to get a dumb report to the class?\"\n\n\"So we can defend our position,\" I said. \"You know, get some public speaking and debate experience.\"\n\n\"Blegh!\" She swiveled in her seat, glancing at the open door. \"No point in cranking the tunes and getting wild on my bed. I was really, really looking forward to that reward. This sucks.\"\n\n\"What sucks, mi gatita?\" Mrs. Asis asked as she passed us. She paused.\n\n\"Just this assignment,\" Pita muttered. \"We're finally finished.\"\n\n\"Oh, good, you can rake the backyard like you were supposed to over the weekend.\"\n\nPita fixed her mom a hard stare.\n\n\"Do I need to talk to your father when he gets home?\"\n\n\"No,\" muttered Pita. \"I guess you'll be heading home, Jenny.\"\n\n\"Oh, you're not staying for dinner? I'm making chicken fried rice. You're more than welcome to stay.\"\n\n\"Uh, sure,\" I said, staring at that lush MILF.\n\n\"Fine, let's go,\" muttered Pita. \"You can hang out or something.\"\n\n\"Um, let me just use the restroom,\" I said as Mrs. Asis moved off. \"I need to...\"\n\n\"Oh, right,\" Pita said, glancing down. \"It must suck having that monster down your panties. Take care of business.\"\n\n\"Thanks,\" I said, breathing a sigh of relief. \"I'd help you out, but...\"\n\n\"But the S.S. Mom is on the prowl. She's got her sonar up and running. Why did I tell her you're a futa?\"\n\n\"Your mouth always gets you in trouble,\" I said.\n\n\"Mmm, that was what I was hoping.\" She licked her lips which made my cock throb.\n\nI shuddered. \"Go, go, before I ruin my skirt by exploding right here.\"\n\nShe laughed and darted away. I heard her heading downstairs while I slipped out and went into the upstairs bathroom. I closed the door and locked it. The room was decorated mauve and gray, with a fuzzy cover over the toilet seat and decorative soaps shaped as flowers flanking the sink. I wiggled out of my skirt, groaning as I dropped it to the floor.\n\n\"I'm just having too much fun in bathrooms today,\" I muttered as I wiggled out of my panties, freeing my erect cock.\n\nI had been hard for two hours. It was such a relief to take care of things. I didn't sit on the toilet but leaned my rump against the counter. I shuddered as I fisted my cock, pumping my hands up and down my girth. I pictured Mrs. Asis sucking on my dick, my mother watching on. It was so naughty.\n\nIn my fantasy, Pita's mother worked her mouth up and down my cock, matching my stroking rhythm. I closed my eyes, feeling the building pressure at the tip. That need to erupt swelled and swelled with every stroke of my hand. I groaned, my heart pounding so fast and hard.\n\nIt was incredible. My toes flexed and curled. My hips wiggled from side to side.\n\nFootsteps padded down the hallway.\n\nI didn't care. The door was locked. It was fine. I could just masturbate and no one would know. I stroked my cock faster and faster. I felt that wonderful, building release. That need to explode. I imagined my mother urging Mrs. Asis on.\n\n\"Suck my daughter's girl-dick hard. She needs it. Ooh, she's--\"\n\nCLICK!\n\nI gasped as the bathroom doors locked snapped open. I whirled to see Mrs. Asis entering naked, her large tits swaying before her. She held a small rod in her hand, slender and able to fit in the pinhole on the outside door handle.\n\n\"Oh, god, I need this,\" she gasped as she rushed towards me.\n\nBefore I could even react, my friend's mother was on her knees before me and sucking on my girl-dick. She sucked it into her mouth with a hunger that had my pussy clenching. The heat rushed through me. I groaned, my heart pounding in my chest.\n\n\"Mrs. Asis!\" I gasped, staring down at the married woman sliding her mouth up and down my cock.\n\nIt felt incredible to feel that hot mouth around my dick. Her hand stroked the base of my cock while her tongue darted around it. Her breasts swayed beneath her, brushing my knees. Her nipples were hard and fat.\n\nShe sucked with hunger, this wild look in my eyes. I was so shocked. So confused by what was happening. I hadn't noticed any sort of attraction from her. She was just being a mother. Bringing us snacks in that tight blouse and short skirt and...\n\n\"You changed!\" I gasped. \"You were in sweatpants and a t-shirt when I arrived.\"\n\nShe popped her mouth off my cock. \"When Pita said you were a futanari, my desires just surged into overdrive. I know this is wrong, that you're my daughter's friend. I'm married, but... but... \u00a1Madre de Dios! I need to suck on your cock and... and... Lick your pussy!\"\n\nShe dove her head beneath my dick and licked at it.\n\n\"Oh, my god,\" I gasped as she licked and lapped at my twat.\n\nMrs. Asis's tongue fluttered up and down my labia. She parted them, brushing my hymen. She groaned, her hand stroking my cock with fast and furious strokes. I trembled against the bathroom counter. I shuddered, the door wide open, the married MILF consumed with her lust for me. Her wedding ring flashed as she stroked up and down my cock.\n\nThis was incredible. Why did I affect some women so much? My older twin sisters and my mother hadn't been consumed by lust, but others seemed to be. Pita had her futa kink she wanted to enjoy, but Veronica and Wendy had succumbed fast. Allie had surrendered to me while we wrestled.\n\nBut she also had a crush on me. So had Wendy.\n\nWas that how it worked? If they had a crush on me, an attraction already, they were overcome when the found out I was a futa? Did that mean Mrs. Asis had shown some interest in me before? She was married. Straight. Had a daughter.\n\n\"Oh, my god, Mrs. Asis,\" I moaned, her tongue darting through my folds. \"Oh, my god, that's good. Oh, yes, yes, yes!\"\n\nShe licked and lapped at my virgin pussy with such intensity. Her tongue fluttered up and down my folds and brushed my hymen. My breasts jiggled in my blouse and bra. I bit my lip and then pulled off my top, exposing my tits. She moaned into my cunt.\n\n\"Yes, yes, get naked,\" she panted. \"Like me! Ooh, you're so sexy, Jenny! You have this huge cock!\"\n\nI shuddered, reaching behind me and undoing my bra's clasp. In a flash, I had it off, my tits jiggling free as the MILF devoured my cunt. She nibbled on my labia. My eyes squeezed shut, enjoying the pleasure flowing through me as my friend's mom devoured me. She fluttered her tongue up and down my hymen, stroking my pussy lips.\n\nThe pleasure surged to the tip of my dick. I moaned and gasped, the ache incredible. Her left hand stroked me with wild pumps. I tossed my head from side to side. My cunt clenched, the waves of heat surging through me almost drowning me. I sucked in deep breaths. This was an incredible treat to experience.\n\nA hot delight that had me shuddering and groaning and gasping out in rapture.\n\n\"Mrs. Asis!\" I gasped.\n\n\"Oh, you taste so good,\" she panted. \"So sweet.\"\n\nShe pulled her face from my pussy, her lips stained in my cream. Then she darted her head up and sucked my cock back into her mouth. I gasped, my entire body shuddering. My tits heaved. I grabbed the counter's edge with both my hands, gripping on for dear life as she sucked with such hunger on the tip of my dick.\n\nIt was incredible.\n\n\"Yes, yes, yes,\" I moaned, my head tossing back and forth. My fiery hair danced around my shoulders. \"Mrs. Asis, that's good. I'm going to cum. Oh, you're going to make me explode.\"\n\nShe moaned in delight, sucking hard. Her golden-brown cheeks hollowed. Her left hand, darker than my cock, pumped up and down my shaft. Her wedding ring glinted. This was so naughty. She was married and worshiping my cock.\n\nA hot wife blew me.\n\nMy virgin pussy clenched. Juices soaked my bush and then dribbled down my thighs. The ache swelled and swelled. The pressure grew at the tip of my cock. It was an incredible delight to enjoy. A naughty passion that would have me exploding in rapture.\n\nI whimpered and tossed my head back and forth. My breasts jiggled and shook. Her tongue danced around the tip of my cock. That spongy crown teased me. It was a wild delight. I whimpered louder and louder.\n\n\"Oh, Mrs. Asis, yes,\" I moaned. \"I'm going to explode. I'm right on the verge and... Yes!\"\n\nShe ripped her mouth off my dick right as I erupted. The first splash of pearly cum splattered across her face, painting a line from her right cheek to her left, coating her upper lip with my hot spunk. Then she aimed me at her large, brown breasts.\n\n\"Yes, yes, cum on my tits!\" she moaned as I erupted. \"Ooh, I love it when my husband cums on my tits. Yes, yes, coat them.\"\n\nI gasped in shock at those words. My dick splattered her tits. I splattered them in my jizz. This wild lust surged through my body. My pussy convulsed and spasmed. The heat slammed into me as my cock painted her breasts in my spunk. It ran over her heaving orbs.\n\n\"Mrs. Asis!\" I gasped, every eruption slamming pleasure into my mind.\n\nThe cream dribbled across them. It ran over her plump flesh. I loved it. My heart pounded in my chest. My pussy convulsed. The heat washed out of my cunt, mixing with the electricity firing from my futa-dick. I bit my lower lip. She shuddered, stroking my cock and squeezing out all of my cum on her big tits.\n\n\"Oh, yes, that's good,\" she panted as I spurted a final time. \"Ooh, you covered me in your jizz, Jenny.\"\n\n\"I did,\" I said in awe.\n\n\"Do you like the taste of your own jizz?\" she asked, standing up. \"My husband, he does not, but you're partly a girl.\"\n\nI love it,\" I moaned.\n\nShe smiled. \"I always had this fantasy of my lover licking my tits clean.\" She hefted those brown breasts at me. \"Would you?\"\n\nI nodded my head in delight.\n\nI cupped her big tits and leaned down. I fluttered my tongue out and lapped across them. I groaned as I gathered up my salty girl-cum off her large tit. My fingers squeezed into her flesh, massaging my spunk into her skin.\n\nMy tongue darted up higher and higher, licking and lapping and gathering up all of my spunk I had painted on her boob. She shuddered, her hips wiggling from side to side. She cooed in delight as I feasted on her. My tongue flicked out, caressing her, teasing her, loving how she whimpered.\n\nShe made such naughty sounds.\n\n\"Oh, yes, Jenny,\" she purred as my tongue climbed up her soft flesh towards her nipple. \"Ooh, that's it. Lick me clean. This is so hot.\"\n\nHer tongue flicked out, lapping up the cum on her own lips. She shuddered, tasting the same salty delight that I was. My virgin pussy clenched and my dick throbbed hard as I lapped up the jizz on her hard nipple, batting it with my tongue.\n\nThen I sucked on it.\n\nShe gasped, her body quaking. Pleasure burned in her eyes. She shuddered, wiggling her hips from right to left as I flicked my tongue over her nub. I swirled around it, teasing her areola. The taste of my jizz lingered in my mouth.\n\nA wonderful flavor.\n\n\"Oh, yes, yes, you're just such a treat,\" she moaned. \"You know that? Just an utter delight, Jenny. I love it.\"\n\nI loved the feel of her.\n\nI sucked on her fat, hard nipple. It felt incredible in my mouth. Suckling on it felt so relaxing. This was a woman's breast. A mother's nipple. I nursed on it, my pussy clenching and my futa-cock aching. I quivered.\n\nOut of the corner of my eye, I watched a line of jizz running down the soft curve of her other breast.\n\nHungry, I popped my mouth off her nipple and attacked it. I licked up my jizz, savoring the salty flavor. She shuddered and moaned, watching me clean up my own seed from her tit. She bit her lower lip, groaning.\n\n\"That's so hot, Jenny. Ooh, I need your cock in me. I need to have that big dick sliding into my pussy.\"\n\nI popped my mouth away and moaned, \"Yes! That sounds so hot. Let's do that!\"\n\nShe grabbed my shoulders, her fingers biting in tight. Then she grabbed me and pushed me towards the toilet. I set down on the fuzzy cover. It tickled my rump, my cock bobbing before me. Then she mounted me. She sank her weight down while pressing her cum-splattered tits into my face.\n\n\"I really wanted my lover to lick the cum off my tits while I rode his cock,\" she moaned. \"Her cock. \u00a1Mierda! You have a cock, Jenny! That's so hot.\"\n\n\"Uh-huh,\" I moaned, gasping as the MILF's pussy brushed the crown of my cock. This hot pleasure surged through me as she wiggled her hips. She nuzzled that hot and naughty pussy against me. She teased me.\n\nI shuddered as she sank her cunt down my futa-dick.\n\nHer married pussy engulfed my cock. She was hot and juicy. Her soft tits smeared my cum across my face as I groaned. She hugged my head to her breasts while I licked and lapped. Pleasure rippled through me, her hot cunt massaging my clit-dick.\n\nI throbbed inside of her. I twitched and ached. My hands grabbed her ass. I squeezed her rump as she rose up me. She slid her dick up to the top of my cock and then slammed down it. I groaned into her tits, my virgin twat squeezing.\n\n\"Oh, Jenny,\" moaned the MILF. \"Oh, you're so big. You're huge. You're filling up my cunt!\"\n\n\"Uh-huh,\" I moaned, lapping up cum dribbling down the inner slope of her left tit. \"You're wet and tight.\"\n\n\"You're bigger than my husband,\" gasped the MILF. \"Than any of my past lovers. Yes, yes, you're amazing.\"\n\nHer hips swiveled from right to left. She danced around me, stirring me up. This wonderful bliss surged through me. The heat burned around my futa-dick. The pleasure was intense. Incredible. The delight had my cock throbbing and aching.\n\nShe slammed her pussy down my shaft. She worked her cunt up and down my futa-cock faster and harder. She swiveled her hips from side to side. She stirred around me. The pleasure was incredible. A hot ache that made me groan.\n\nShe gripped me with that juicy twat. That wonderful and hot cunt milked me. Every time she rose up, she squeezed about me. Her pussy seemed to suck at my ovaries buried in my virgin depths. They quivered, full of cum wanting to spurt into her hot cunt.\n\n\"Oh, Jenny, yes!\" she moaned. \"I'm going to explode on this dick. It's amazing. I can't believe you became a futanari!\"\n\n\"I know!\" I moaned, pulling my face from her tits. I stared up at her. My cum stained her cheeks. I darted up and licked it, savoring that salty flavor.\n\n\"Mmm, you have cum on your face, too.\" She lapped at my cheek. Her tongue darted around my face, licking up the smears of my jizz that streaked me. Her breasts rubbed into my upper chest, her nipples hard.\n\nThe toilet creaked beneath us as she rode me faster and faster. She worked her pussy up and down my cock. She teased me. Drove me wild. It was an incredible passion. This heat would have me exploding over and over.\n\nHer pussy clenched tight about my cock. She slammed down me. She took my shaft to the hilt again and again. The pressure built and built. Her tongue bathed my face, hot and naughty. I shuddered as she cupped my face and kissed me.\n\nShe thrust jizz into my mouth.\n\nMy hands dug into her rump as we shared my futa-spunk. My virgin pussy clenched. The heat flowing down my dick brought me closer and closer to a boil. The silky friction burned hotter and hotter as our tongues dueled.\n\nShe broke our kiss and moaned, \"Yes, yes, Jenny. Are you going to cum in me?\"\n\n\"I am,\" I whimpered. I loved cumming in girls. In women. Thoughts of birth control flashed through my mind, but... \"I'm going to pump so much futa-jizz in you.\"\n\n\"Yes!\" Mrs. Asis panted and slammed her pussy down my futa-cock. She took me to the hilt. Every inch of her cunt was around me. \"\u00a1Madre de Dios!\"\n\nHer pussy spasmed around my cock. She went wild. The pleasure was intense. Amazing. I gasped and shuddered beneath her. I savored the feel of her cunt spasming and convulsing around me. That delicious pleasure massaged my cock.\n\n\"Mrs. Asis!\" I moaned as she brought me closer and closer to my explosion.\n\n\"Cum in me, Jenny!\" she moaned. \"Let me feel that impossible, amazing clit-dick erupting in me I need it!\"\n\n\"Yes!\" I howled so loud. My voice echoed through the room. I groaned, unable to hear anything but my pleasure. My cum fired into her cunt, the toilet seat creaking beneath me.\n\nBlast after blast of my jizz pumped into her. That wonderful, amazing spunk flooded out of me and into her married pussy. Mrs. Asis gasped, her cunt spasming faster around my cock. She milked me as she threw back her head.\n\nHer pussy sent me hurtling into the stratosphere of rapture. The amazing pleasure burned through my mind. My fingers dug into her rump as I gasped out my bliss. Stars burst across my eyes with the same ferocity as my jizz spurting into her juicy cunt. Waves of bliss washed out of my virgin twat, inundating my mind with ecstasy.\n\n\"Mrs. Asis!\" I moaned, my pleasure hitting that wonderful peak of rapture. I loved cumming. It was the best.\n\n\"Oh, you darling futanari!\" moaned Mrs. Asis. \"\u00a1Mierda! That's good. Mmm, you have a delicious cock.\"\n\nI fired the last blast of my cum into her married pussy. That wonderful blast seared bliss through my mind. I hung at the pinnacle of my orgasm. For one more glorious moment, riding on the waves of bliss washing out of my cunt, I hung there.\n\nThen I descended into panting bliss.\n\nI moaned, leaning back on the toilet. I panted, her tits heaving before me. She squirmed, her cunt rippling about my cock as her orgasm died down. She stared down at me with hot and hungry eyes, her curly, brown hair spilling down to her shoulders.\n\n\"Oh, Jenny, that was--\"\n\n\"\u00a1Que mierda, Mam\u00e1!\" screeched Pita.\n\nMy friend stood in the doorway of the bathroom looking shocked at what she found. Enraged. My stomach rippled. I'd just had sex with my best friend's mother. I felt so terrible. My stomach clenched as I realized I just ruined everything with Pita.\n\nI'd hurt her.\n\nTo be continued..."
    ],
    "authorname": "mypenname3000",
    "tags": [
        "hot wife",
        "cheating",
        "futanari",
        "hermaphrodite",
        "study session"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/futas-wild-passion-ch-07"
}