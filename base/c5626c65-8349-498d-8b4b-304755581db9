{
    "title": "The Chronicles: Three Sisters 02",
    "pages": [
        "A year after my marriage\n\n- \"Lowland ways been creeping into the Uplands.\" said Cenmin. \"Little bit at a time.\"\n\n- \"Yep. Seen it happening.\" said Branhucar. \"Better horses. More swords. More wine -\" He reached for the bottle, and poured most of what remained into his friend's cup. He offered me the dregs, but I knew better than to try to match them, drink for drink.\n\nBacho had a stronger head for alcohol. I just wanted to sit with the two headmen, and listen to their tales and observations. He acted older - and looked it, too, with the full beard he was growing.\n\nMany people knew why had Bacho stopped shaving - it was to cover the scars from his encounter with me. His chin would forever be marked. But his heavy moustaches and thick facial hair helped to conceal them. And no one ever said a word about his beard - me least of all.\n\n- \"Not necessarily better wine, though.\" said Cenmin. I snapped out of my reverie.\n\n- \"Finer cloth. Gemstones. Jewelry made of something other than bone.\" said Branhucar, counting the improvements on his fingertips.\n\n- \"Or a necklace of teeth.\" said Cenmin.\n\n- \"Is it true,\" asked Bacho, \"that your granddam - Payl - had a necklace of foreskins?\"\n\n- \"No, lad.\" said my father. \"That's a myth.\" He winked at Cenmin. \"It was her friend, Meeli DeadEyes - and she collected the whole penis - foreskin and all.\"\n\n- \"That's one thing that hasn't changed.\" said Cenmin, rolling his cup between his fingers. \"Men are just as cruel. Just as ruthless.\"\n\n- \"That may never change.\" agreed my father.\n\nBoth headmen fell silent, revisiting memories that they wouldn't share, tales they would never tell.\n\n- \"Never thought I'd see a real live guslar in the Uplands, though.\" said Cenmin. \"That's a definite improvement.\"\n\n- \"Apparently, they're out of fashion in Hvad town.\" said my father.\n\n- \"How the fuck would you know?\" laughed Cenmin. \"You've never been within a hundred miles o' the place.\"\n\n- \"That tinker told me. The one with the needles, and the brightly coloured thread. Drove a hard bargain, the little bastard - but he told me quite a bit.\"\n\n\"He said that Izumyrian things are all the rage in Hvad town now. Singers, with or without accompaniment. Flutes, a drum, or stringed instruments that are nothing like a gusle.\"\n\nBranhucar leaned forward. He was just getting warmed up. \"Joglari, they call them. Or menestrels. They sing of love more often than valour, or heroism.\"\n\n- \"If that's what the Niskadi value, they can keep it.\" said Cenmin. \"I hope that shit never comes here. Bacho - get us another bottle, will you?\"\n\nThere were other changes in the Uplands. Some were more subtle. Others were obvious. There was the taking of second names, for one. Down at the eastern end of the lake, under the shadow of Myeva, the headman and his family took the name of a famous ancestor as their own: Nadesti.\n\nThey still got nicknames, of course - like Stoneface, for Dengel, the eldest son. But within 20 leagues of the lake, everyone knew the name Nadesti.\n\n***\n\nMeonwe was a wonderful wife. I resisted the temptation for more than a year, but when she became pregnant, I had to ask.\n\n- \"Why did you choose me, Meonwe - over Bacho?\"\n\n- \"Fishing for compliments?\" She laughed. \"It was easy, Veran. You were kind, and I liked your smile, from the very beginning.\"\n\nOur first child - a girl - died before her second birthday, of a sudden fever. But the second, our son Iarn, survived. He took after his paternal grandfather.\n\nAfter that, Meonwe was delivered of a boy - stillborn. We took it all in stride, as best we could. It was just a fact of life - and death. Children died. Far too often ... but that was the way of things.\n\nThree daughters followed: Yevna, dark-haired, like her mother, then Tanguiste, who had my colouring, but Meonwe's fine features, and finally Guenneret - Guenna, as we called her. Our youngest resembled me to an absurd degree.\n\n- \"Your eyes, your hair.\" said Meonwe. \"Same rosy cheeks, same mouth, same nose - poor thing. Not much of me, from the look of her.\"\n\n- \"She'll be smart,\" I promised, \"just like her mother.\"\n\nBacho and Abrelda had a son, a little more than a year before our Iarn. They named him Kestutis. After that, Abrelda bore two more sons, and a daughter, but only the little girl survived.\n\nI often wished that I could been closer with my wife's sister. Abrelda, though, seemed to shy away from me. One day, I began to understood why. That was the first time that I saw a livid bruise on the side of her neck.\n\nSome time later, she had bruises on her forearm. Then a sprained wrist.\n\nLife is hard, in the Uplands, and everyone pitches in to get the work done. Bumps and bruises, and even more serious injuries are common. But Abrelda always seemed to be trying to conceal hers. That, and her increasing shyness - furtiveness, really - told the tale.\n\nMeonwe cautioned me about saying anything.\n\n- \"It's between them, Veran.\" she said. \"Until she asks us for help, no good will come of you putting your foot in it. Abrelda has to make the first move. I'll talk to her.\"\n\nWhatever the sisters said to each other, none of it reached me. Meonwe would no more have betrayed a confidence than I would have. Nothing changed.\n\nCenmin passed away when Iarn was nine. Bacho was acclaimed as the new headman at Bentwood, in his father's place. But the loss of his friend weighed heavily on my father.\n\n- \"It's the end of an era.\" he said.\n\nBranhucar began visibly fading. There didn't seem to be anything wrong with him, physically. More and more, though, he began passing his duties to me. I accepted, on the condition that he spend time with his grandchildren.\n\nMy father agreed. He began training Iarn in the use of bow, axe, and sword. He took Yevna fishing, and taught her to handle a boat. Tanguiste was too small for such pursuits, but she loved to sit at his feet, and listen to his stories.\n\n- \"One more, Granpa.\" she would plead. \"Just one more.\"\n\nGuenna would simply toddle over, and climb into his lap. Branhucar couldn't resist her.\n\nWhen my mother died, in the exceptionally harsh winter of the frozen lake, we were all surprised. Everyone had expected Branhucar to go first. But he lingered on until the fall of that year, and saw the leaves turn.\n\n- \"You'll be fine.\" he said. \"You're a good man, Veran. Folk trust you. They'll follow your lead.\"\n\nBranhucar did not die unattended. Our whole family was around him. No one thought the less of me when I cried at his passing.\n\n***\n\nIarn was 12 years old - almost 13 - when I killed Lanko Nadesti. It was the right thing to do - perhaps the only thing I could do. I tried to consider what my father would have done, in my place. I decided that he would not have let murder go unpunished.\n\nBut I was also well aware that I was possibly committing my young family to a feud with the Nadestis. Iarn was too young to help me - but old enough to be a target. My daughters, my wife ... they were all vulnerable, too. Not for the first time, I wished that my brothers had not gone off in search of fame and fortune with the far-off Duke of Hvad.\n\nOn top of these worries, I found Povilas growing more and more distant. He was almost surly. Did he blame me for his father's murder? Or was he angry that I hadn't let him fight Lanko Nadesti, man to man?\n\n- \"He'll come around.\" said his friend Guithrit Firebush.\n\nA wise person once said that there were three things that could drive a man from his home: a bad roof, a smoking chimney, or a quarrelsome wife. I had none of those. But we did have mosquitoes.\n\nAsphodels grow best in wet, boggy moorlands - and there was a patch of low ground not far from our settlement. After a mild winter, and a wet spring, we suffered torments when swarms of mosquitoes attacked us.\n\nI was burning hay, to kill them - something in the hay is deadly to them - when Bacho came to visit. He didn't say anything, at first. But then, he hadn't walked all this way to remain silent. I was prepared to wait for him.\n\n- \"What are you going to do?\" he asked.\n\n- \"I'll have to fight Dengel - one on one - I suppose.\"\n\nBacho shook his head. \"That's stupid.\" he said. \"Stoneface'll kill you. No offence.\"\n\n- \"You're probably right.\" I was not looking forward to fighting Dengel Nadesti.\n\n- \"Even if you won, you'd have two more Nadestis to deal with. Plus their men. They'll never stop, you know.\"\n\n- \"I know that.\"\n\nWe were both silent, for a time. I had been thinking of little else, since I had killed Lanko. There were six men in Asphodels who would stand by me. The Nadesti brothers and their folk numbered 11 fighters. If we met them head on, many of my friends would die.\n\nIf I stood alone, I would die. And Iarn, for a certainty. The Nadestis wouldn't let him live, to carry the feud into the next generation.\n\n- \"There's another way.\" said Bacho, as he stroked his beard.\n\n- \"I can't think of one.\" I admitted.\n\n- \"What if I stood with you? Me and my people.\"\n\nIt was an incredible offer.\n\n- \"It's not your feud.' I said. \"Why would your men want to fight for us?\"\n\n- \"I'd rather have you for a neighbour, than the Nadestis.\" said Bacho. He was in earnest. \"Your father would have done this for mine.\"\n\nBut would I have done the same for Bacho, if the roles were reversed? I didn't know.\n\n\"Think of it as me fighting with you, instead of for you.\" said Bacho. \"Look at it from where I sit: if the Nadestis kill you, most of your men will bend the knee to them. They'd be fools not to.\"\n\n- \"I suppose.\"\n\n- \"Then what would stop the Nadestis - with even more men - from turning on me? They could control the whole lake.\"\n\nBacho didn't have an over-active imagination. That was precisely what would happen.\n\n- \"You have a plan, then.\" I said.\n\nBacho nodded, slowly, and stroked his beard again. \"Yes, I do.\"\n\n***\n\nI had Guithrit Firebush and Povilas Harelip watching for the approach of the Nadestis. The lads were in sight of each other, so that they could warn one another if anyone tried to sneak up on them.\n\n- \"I want to fight, Father!\" said Iarn, for the seventh time. I had threatened to take his sword away, but he persisted.\n\n\"Kestutis will be there!\" he repeated. Bacho's son - Iarn's cousin - was only a year older, but he was bigger, and stronger.\n\n- \"He'll only be watching.\" I said. \"He won't be involved in any fighting.\"\n\n- \"He says he will!\"\n\nI put my hand on my son's shoulder. \"Iarn, I'm going to tell you the truth. I'm not sure if we're going to win today. If we should lose ...\"\n\n\"The Nadestis will be coming to kill you, son. And they will probably kill your mother and your sisters.\"\n\n\"If I fall in the fight - if we lose - who can I trust to get our family away?\"\n\n- \"Me.\" said Iarn - but he didn't like it.\n\n- \"You're right - I think you're too young to fight. But you're old enough to get the family to safety. You take the boat, and get across the lake. Then you go west. You understand?\"\n\nIarn was a good boy. But he wasn't ready to face a grown man in combat. This was the best solution I could think of to dissuade him. Fortunately, it worked. I had feared to simply command his obedience - far better to appeal to his sense of duty.\n\n- \"There's the signal!\" shouted my man Hedyn. He was a big fellow, but chubby, with two chins and jowls, despite his youth. He was the least experienced of my fighting men.\n\n- \"You're with me, Hedyn.\" I said.\n\nBacho clamped a meaty hand on my shoulder.\n\n- \"Ready?\" he asked.\n\n- \"I know my part. But -- thank you, Bacho.\"\n\n- \"Thank me afterwards.\"\n\nWe waited at the Bend, the unofficial border between the Asphodels and Nadesti territory. Guithrit and Povilas joined us there.\n\n- \"They're comin'.\" said Guithrit. \"Ten of 'em.\"\n\nWe all knew what we had to do. When our foes came marching across the clearing, we stepped out from the trees.\n\n- \"That's far enough, Nadesti!\" I shouted.\n\nDengel Stoneface was in the lead. He glared at me. They came on, another thirty paces. Then they halted. I could see him clearly. He was wearing a studded leather jerkin, with chain mail on his shoulders. If looks could kill, I would already have been dead.\n\n- \"How do we do this, Hammerfist?\" he called. \"Single combat? Or a real fight?\" He fixed his bug eyes on each of my men in turn.\n\n\"There's no need for all of you to die.\" he told them. \"My business is with yon lyin' sack o' shit. You can walk away.\"\n\nMy men were loyal, friends of mine since childhood. But not one of them wanted to stand up to Dengel Stoneface. I couldn't blame them. I didn't want to face him.\n\n- \"We gonna fight? Or just talk?\" said chubby Hedyn.\n\nThat broke the spell. My fellows laughed, and then braced themselves.\n\nThe Nadestis charged.\n\nDengel came straight for me, bellowing \"He's mine! Veran is mine!\"\n\nThat made things easier for me. I didn't have to worry about being stabbed in the back, or the side, by one of his brothers. It did leave my six men facing nine foes ... but not for long.\n\nBacho and the Bentwood men came out of the trees to the south, and raced to our aid.\n\nDengel nearly spitted me on the end of his massive boar-spear. I tried to block it with my sword - I might as well have tried to stop an onrushing bear with my bare hand. Only by leaping to the side did I avoid being killed outright.\n\nStoneface ran straight into me, and shoulder-slammed me to the ground. He pulled back that ridiculous weapon, preparing to plunge it into my chest - but Hedyn stuck his spear into the Nadesti's ribs.\n\nDengel looked down, as if amazed at the effrontery of the chubby fellow who had dared to stab him with a spear. Then he snarled, and backhanded Hedyn across the face with his hand.\n\nThat gave me time, though, to get my feet under me. I didn't hesitate.\n\nI rammed the point of my sword just under Dengel's leather jerkin. The point pierced his lower belly, or his groin - I don't know. But his eyes rolled back in his head, and he dropped his heavy spear.\n\nHe clutched at my shoulders with empty hands, but there was no power left in his grasp. Dengel whispered something - I didn't hear it. He fell to his knees, and toppled over.\n\nThe fight wasn't over. Dengel's' brothers would not run, though four of their followers did. One of my fellows, Putvael, took a sword in the guts. Vidlo got a bad cut on the arm.\n\nBut Bacho and his men decided the day.\n\nAll three Nadesti brothers died there, along with two of their men. Two of their followers were captured, and three escaped. But the power of the Nadestis was broken. My family was safe.\n\n- \"You did it.\" I said, to Bacho. \"You were right.\"\n\n- \"I'm not hardly finished.\" he said.\n\nThat was when somebody struck me in the back of the head, with a club, or some other blunt weapon. That was all I remembered of the battle at the Bend.\n\n***\n\nI woke to find myself sitting down, in the dirt, my hands tied with a studded leather strap - a belt of some kind. There was a three-foot tall post driven into the ground, and I was tied to that. My entire body ached. I didn't realize it at first, but I had been kicked - repeatedly.\n\nThere was a fisherman's hut forty or fifty yards away, and I could see the lake beyond that. We were perhaps a mile from the Bend - where Dengel Nadesti had almost killed me. But we had won - hadn't we?\n\nMy head was swimming. I could see three men piling firewood not twenty feet away. One of them was Povilas, the son of Eguen.\n\n- \"Povilas.\" I croaked - my throat was dry. \"What's going on?\"\n\nYoung Harelip stepped over towards me. He grinned, and then spat full in my face.\n\n- \"You fuckin' let my Da' die.\" he said.\n\nA second figure came to stand before me. It was Guithrit Firebush.\n\nHe kicked me in the stomach - hard.\n\n- \"Easy.\" said a third man. It was Conwoion, one of Bacho's men. Conwoion was a big brute, with long hair, but a neatly trimmed beard.\n\n\"Don't want to spoil 'im - yet.\" he said.\n\n- \"Yer friends is all dead.\" sneered Povilas. \"'Cept for Chubby. He ran away.\"\n\n- \"Shut up, Harelip.\" said Conwoion. \"You talk too much.\"\n\n- \"What's going on?\" I said. I wanted to shout it, but I could barely get sounds to come out of my mouth.\n\n- \"You'll find out soon enough, Hammerfist.\" said big Conwoion. He grinned. \"Then you'll wish you hadn't.\"\n\nI understood a little of the what, but not the why. Povilas and Guithrit had betrayed me. I had broken bread with them, showed them favour ... Firebush's most prized possession was a silver bracelet I had given him. He had always said that he would present it to his future wife.\n\nPovilas apparently believed that his father's death was my fault. Yet I had started a blood-feud when I avenged Eguen. I couldn't figure out how two trusted companions could turn on me like this.\n\nWorst of all, though, was Conwoion. If he dared to do this, then his master was somehow involved.\n\nI had a terrible time of it, prey to my worst fears.\n\nThen I heard a familiar voice.\n\n- \"He's awake? Good.\" said Bacho.\n\nHe arrived with his son, Kestutis - and with my family. Meonwe's hands were bound, and my children were likewise tied up. My wife's cheeks were streaked with tears. Iarn was grinding his teeth in frustration. He had a big bruise on the side of his face.\n\nDark-haired Yevna, now 10 years old, was glaring at her uncle Bacho. Tanguiste, my 8 year-old, looked about her in dismay. And little Guenna, barely 6, was studying my face. She was crying.\n\n- \"Isn't this nice?\" said Bacho. \"The whole family, all gathered together.\"\n\n- \"What are you doing?\" I said. \"What's going on?\"\n\nBacho nodded to his son. Kestutis strode over, and kicked me in the stomach. I couldn't move, or dodge. He knocked the breath out of me - I gasped in pain, sucking air.\n\n- \"That's what will happen, every time you open your mouth.\" said Bacho.\n\nWe had been friends for almost 15 years - but I barely recognized him. His bulk, his size, and the full beard, I knew them well. But the gleam in his eye was entirely foreign to me.\n\n- \"Why?\" I gasped.\n\nKestutis stepped forward, prepared to kick me again, but his father waved him off.\n\n- \"I'll allow the question.\" said Bacho. \"I was going to tell you anyway.\"\n\nHe knelt down before me, and looked into my eyes. Then he raised his hand - and stroked his beard.\n\n- \"See this, Hammerfist?\" he asked. \"It's a reminder. Every day. Many times a day. Of how you wrecked my face, and shamed me forever.\"\n\n\"That's why we're here, you see. To erase that story. To create a new legend.\"\n\nI didn't understand everything that he said. But Bacho had my three daughters tied up, and placed behind me - out of the way, I suppose. Conwoion took charge of Iarn, and trussed him up even more tightly.\n\n- \"Bring that stump.\" said Bacho.\n\nPovilas picked up a thick, heavy log, perhaps two feet high, and a foot and a half in diameter. He placed it next to me, with Guithrit's help. At Bacho's direction, they cut the bonds around my wrists. Then they took hold of my right hand, and put it on top of the stump.\n\nI resisted - but Conwoion kicked me again, and the two strong young men who had once been my friends were able to hold my arm in place.\n\nBacho swung an axe - sideways - and crushed my fingers with the flat of the blade.\n\nMeonwe screamed at the same time as I did. I couldn't hear her, as I was shrieking in pain, but I saw her face. Conwoion laughed in my ear as he pulled my hands behind my back, and re-tied my wrists.\n\nMeonwe might have been protesting, saying something to Bacho. He seized her by the throat, and pointed at our daughters - I don't know what he said, but she subsided.\n\nThen Bacho threw Meonwe on the ground. Meonwe fought back, kicking and trying to squirm out of his grasp.\n\nBacho punched her in the stomach.",
        "- \"If you keep fighting, I'll kill your son.\" he snarled. \"I swear -- I'll gut him myself.\"\n\nMeonwe froze. Bacho raped her, not six feet away from me.\n\nI nearly tore my own arms off, trying to pull my hands free. I screamed at him, to stop, to kill me instead. His son - my nephew, Kestutis - kicked me in the stomach again, and drove the air from my lungs.\n\nBacho turned his head, to grin at me, while he violated my wife - his own wife's sister. This had nothing to do with sexual gratification. It was revenge, and humiliation, and degradation.\n\nHe had never loved Meonwe. If he had, he could never have done this.\n\nI couldn't make a sound, with the breath kicked out of me. But there was nothing wrong with my eyes, or my tear ducts. I cried, and the tears rolled down my cheeks, as I watched the man I had considered a good friend rape my beloved wife.\n\nWhen he had finished, Bacho stood. He came over to me.\n\n- \"You're not done, Veran.\" he said. \"There's more to come.\"\n\n\"But I don't want you to ever forget what just happened.\" He grabbed his beard, and shoved it in my face.\n\n\"You see this?\" he shouted. \"Every fucking day, I have to remember what you did to me. Every fucking day!\"\n\n\"Now you've seen something you'll want to forget.\"\n\n\"Hold him.\"\n\nI couldn't see them - it might have been Guithrit and Povilas, or Conwoion - I couldn't tell. But two men took hold of my head, and held it still.\n\nBacho drew a knife, and held it a few inches away from my left eye.\n\n- \"I'm going to take your eye, Veran.\" he whispered. \"The same way you took my face. But you'll always remember the last thing you saw with this eye.\"\n\n\"Every time I touch this beard, every time I pull a shirt over my head, I'm reminded of what you did to me. Now, you'll learn how that feels. Whenever your missing eye itches, or pains you, you'll remember ... that the last thing you saw with it was me raping your wife.\"\n\nBacho pressed the tip of the knife to my eyeball ... and pushed.\n\nThe pain was indescribable. I must have screamed. I know that I bucked, which only made matters worse. Bacho's knife pierced my eye, but it also gouged my eyebrow, and tore a chunk from my cheek as I thrashed about, in agony.\n\nI know that I screamed until I couldn't scream anymore. My throat was raw, and the left side of my face was a roiling sea of pain.\n\n- \"Do what you want with them.\" said Bacho. \"But he stays alive.\"\n\n- \"As you wish.\" said Conwoion.\n\n- \"I'm next.\" cried Kestutis. My 14-year old nephew was gleeful. Even in the firelight, I could clearly see the lust and cruelty etched on his features.\n\n- \"I'll kill you if you do!\" shouted Iarn. Povilas back-handed my son across the face.\n\nBacho cuffed his own son across the back of the head.\n\n- \"Don't be stupid!\" he snarled. \"That's for men!\"\n\n- \"I'm a man.\" whined Kestutis. His father only had to lift his hand a few inches, and the boy cringed. Bacho took one more lingering look at the scene he had created. Then he left, taking his son with him.\n\nMeonwe lay on the ground, unmoving. Had she fainted?\n\n- \"You heard the man.\" said Conwoion. The big brute decided that it was his turn to rape my wife. But Meonwe surprised him, as she lunged forward and bit his face. She didn't let go, either.\n\nAs he tried to push her off, she only fastened her teeth more solidly. Conwoion bellowed in pain, and instinctively reached for the knife at his belt. Enraged, he stabbed Meonwe.\n\nTears began to stream from my undamaged right eye. It partially blinded me - a blessing, I suppose. But my son had seen it all.\n\n- \"I'll kill you!\" screamed Iarn. \"I'll kill you for that.\"\n\nConwoion lunged to his feet, grabbed Iarn by the hair, and plunged his knife into the defenceless boy's throat. Blood splashed across my lower legs.\n\nJust like that, my wife and my son were killed - mere moments apart.\n\nConwoion stood there, his chest heaving, the madness still in his eyes.\n\nIt was the end of my wife's torment. Who can say? Perhaps Meonwe had planned it that way. My son's life was over, before it had truly begun.\n\nAt that point, I was prepared to die.\n\n- \"You idiot!\" said Guithrit. \"I didn't get my turn.\"\n\nThe madness slowly left Conwoion's eyes. He grunted.\n\n\"What am I supposed to do now?\" grumbled Guithrit.\n\n- \"There's always the daughters.\" said Conwoion.\n\n- \"That's disgustin'.\" said Povilas. \"The oldest is barely 10.\"\n\n- \"Says the sheep-shagger.\" mocked Conwoion.\n\nYevna fainted, and toppled over.\n\nI managed not to move my head, when the big brute mentioned my daughters. But I clenched my fists so hard that I nearly passed out from the wave of pain that rose from my shattered right hand.\n\nOur three tormentors settled down to drink, and to mock me. They found endless amusement in our predicament.\n\nI couldn't explain the treachery of my former friends - Povilas, especially. We had never been other than kind to him. While other people called him 'Harelip', we only ever used his first name. Meonwe, in particular, had treated him like a younger brother. Now Povilas had repaid our generosity, our friendship, with cruelty.\n\n- \"You have anything to say, Hammerfist?\" called out Conwoion. \"One-Eye? One Hand?\"\n\nI had no response.\n\nThere was only one reason that I did not go mad, or say something insulting, in the hopes that these traitors and rapists would lose their tempers, and put me out of my misery.\n\nThat reason was Yevna.\n\nMy eldest daughter had only pretended to faint. She was lying on her side, sprawled directly behind the post they had tied me to. And only a few moments after she had done that, I felt her hot breath on my hands.\n\nYevna's wrist were tied. But her mouth was free, and my daughter was using her teeth, trying to chew through, or at least fray the studded leather belt around my wrists.\n\nI did nothing to draw their attention to me. I let my head fall forward, onto my chest, as if I was overwhelmed by this day of horrors. That was not far from the truth.\n\nBut as Yevna chewed at my bonds, I felt a slight stirring of hope. If I could get loose ... I was also furious with myself. While I witnessed the deaths of my wife and son, I had completely forgotten about my daughters. I couldn't give up. Not yet. I had to think of something - of a way out, for them.\n\nConwoion began to drink heavily. Povilas and Guithrit kept pace with him.\n\n\"Tomorrow we'll fuck all three girls.\" said the brute. \"Bacho won't care. He's not gonna let 'em live, anyway.\"\n\n- \"That's sick.\" said Povilas. \"The littlest one ain't but six.\"\n\n- \"Then you don't have to join in. More for me.\" said Conwoion, with a chuckle.\n\nI would have leapt at him, with one bare hand, if I could have. The urge to smash his face, to bite and kick and rend and rip was insanely powerful.\n\nBut I was tied to a post, with the fingers of my right hand crushed and mangled. I kept my head down, as if I had been beaten and humiliated into submission. My body was probably black and blue, but I was nowhere near giving up ... or giving in.\n\nThere was no way for me to tell if Yevna was making any progress with her teeth, biting and tearing at the leather strap. But if she could get me loose ...\n\nI did nothing to attract attention. I didn't look up, or make eye contact with any of the three men I so badly wanted to kill. I listened to Yevna's harsh breathing, and prayed that no one else could hear it.\n\nThe darkness came -- blessed darkness. They sat around the fire, which would spoil their night-vision. Conwoion, Povilas and Guithrit drank, and two of them teased the third. Then the roles shifted -- but I noted that my two traitorous ex-followers never ganged up on Conwoion.\n\nThey muttered, and cursed, and blathered away, until Conwoion gave Povilas an order.\n\n- \"Check 'em.\" he said.\n\n- \"You check 'em.\" retorted Harelip. \"Why do I have to do it?\"\n\n- \"Check 'em.\" growled the big man.\n\nPovilas grumbled, but rose to his feet. I had no way of knowing if Yevna was aware that he was approaching. I tugged my wrists away from her teeth, and groaned loudly.\n\n- \"He's still alive.\" said Povilas. He kicked me in the ribs, but only half-heartedly. Then he glanced at the girls, who were partly concealed by the shadows.\n\nHe must have believed that they were asleep, or that they had passed out, from fear and exhaustion. After only a cursory look, he shuffled back to the fire.\n\nYevna resumed her work almost immediately.\n\nOur captors kept the fire going, but their conversation began to flag. They continued to drink, but the silences grew longer. Conwoion did most of the talking. Neither Povilas nor Guithrit had had much sleep the night before, as they had been on watch for me.\n\nTime passed, but painfully slowly. I had nothing to do but think. Unfortunately, my thoughts were of Meonwe, and Iarn. I tried to concentrate on how I would kill these three men, if I got the chance.\n\nYevna gasped, and stopped biting, or chewing. Fortunately, the sound did not carry far. Or perhaps our three tormentors were too drunk to hear. I felt Yevna's hot breath on my wrists as she returned to her task. Then I felt wetness on my wrists. Sweat? More probably blood. But was it mine? Or my daughter's?\n\nMy world became very small - very narrow. I looked away from the fire, so as not to spoil the vision of my remaining eye, blurry as it was. I listened, attentively, for any sounds of our enemies stirring. Conwoion snored. Guithrit mumbled, in his sleep.\n\nAnd I tried to gauge whether my daughter was having any success. She continued to bite and tear at my bonds with her little teeth. Whenever she paused, to draw breath, I flexed my wrists, and sought to pull my hands apart. At least, I hoped, my efforts might stretch the leather strap, and make Yevna's task a little easier.\n\nShe did it. Yevna chewed her way through my bonds, like a rat escaping from a poorly-made snare.\n\nI nearly cried out as the blood rushed back to my left hand, and to the mangled fingers of my right hand.\n\nYevna's work was not done. My hand was free, but I was still lashed to the post, and my ankles were bound together.\n\nMy ten year old daughter knelt beside me, so that I could tease and pry at her bonds with the fingers of my good hand. When I finally got her hands loose, Yevna had to wait for the blood to rush back into her wrists. I whispered a few words in her ear.\n\nShe rose, quietly, and fetched me the axe with which Bacho had smashed my hand. I saw her glance at the sleeping form of Povilas, and she hesitated. Yevna may have wanted to use the axe on him.\n\nThankfully, she brought it to me, instead.\n\nOne-handed, I sawed at my bonds with the axe, until my arms were free. It took only a few moments to cut the bonds around my ankles. I rose to my knees, and steeled myself to wait, until I could trust my aching joints and muscles to support me.\n\nI gave the axe back to Yevna, and crawled over to Guithrit, the nearest sleeper. He did not stir when I took his knife. I peeled my tattered shirt over my head, rolled it into a ball, and with my crippled fingers jammed it over the redhead's mouth and nose. Then I stabbed him in the heart, and leaned on the blade.\n\nFirebush died noisily. One arm flailed about, close to the fire, and for a moment he drummed his heels against the ground. But his companions did not wake.\n\nConwoion was next. He was the most dangerous of the three. There was no way that I could fight him, in my weakened condition, if he awoke. So I used the shirt again, and then slit his throat, deep and wide. Only after that did I plunge the blade into his heart, and then gave it a savage twist.\n\nPovilas Harelip slept through it all. I had no compunction about killing him. When I had finished stabbing him, and sat back, Yevna grunted and swung the axe, burying it in his chest.\n\nAs she stood in the circle of firelight, I saw Yevna's face clearly for the first time since she had freed me.\n\nShe was covered in blood - her own. One of her front teeth was missing, and the other had snapped, diagonally, leaving her with naught but a jutting point. Her gums were bleeding, and the blood had run down her chin, to soak the front of her shirt.\n\nAnd her eyes ... I saw in Yevna's eyes a madness that I recognized.\n\nThat helped me to regain my senses. My first thought had been to find where Bacho was sleeping - and to end him. My nephew Kestutis, had to die, as well. My own life was of no value.\n\nBut Tanguiste and Guenna were wide awake, and looking at me.\n\nI could not leave them defenceless. They would die, horribly, if they were found here in the morning. I cut my daughters free, and had Yevna chafe their wrists, while I gathered weapons from our dead foemen. I took Conwoion's sword and dagger, and Guithrit's bow and quiver. Likewise, I appropriated every knife I could find. We kept the axe, as well.\n\nTheir blood-stained clothing could be useful, too. I stripped them naked.\n\nI spared only a glance for the bodies of my wife and son. Meonwe and Iarn were no longer there. There was no time to bury them, or to build a cairn. I couldn't have done it one-handed, in any case. A proper memorial for them would have to wait.\n\nMy daughters needed me more - and much more urgently.\n\nThere was no safety to the east, towards Asphodels or Bentwood, where Bacho was in control. But the west was barred to us, as well - that way lay the home of the Nadestis. The south was open, but there was no cover. We would be easily tracked, and caught. We had to cross the lake. I couldn't risk trying to steal a boat, in our condition - especially when we didn't know where Bacho and his men were. Fumbling about in the dark would be suicidal. It would also be a clear indication of where we had gone.\n\nThe lake wasn't far. I found a fallen tree, light enough to float, but sturdy enough to support a little weight. However, It would not suffice for all of us.\n\nFor some reason, I couldn't think very clearly. It was little Guenna who saved me. Six years old, she was. And after all she had seen - after all she had been through that night, my youngest knew what had to be done.\n\n- \"Papa - take Tanny first. It's not far. She can hold the sword, and cling to the branch. If you use your legs to kick, you can push the branch.\"\n\n\"When you come back for me, I'll hold the bow and the arrows. And Yevna can bring the axe on the third trip - we'll need it.\"\n\nIt was logical, and well worked out. There were only two flaws to Guenneret's plan. First, the water was fucking cold. Numbing. Paralyzing. The only part of my body that wasn't affected was my left eye - because it seemed to be on fire.\n\nThe second problem was the simple fact that I was physically and emotionally exhausted. The freezing cold water sapped my last reserves of energy, and the dagger tucked into my belt seemed to weigh a ton - when it wasn't threatening to stab me in the balls.\n\n- \"I can help!\" said Tanguiste, far too loud. She tried to kick her feet, and paddle with one arm. I had a sudden vision of Conwoion's sword ending up at the bottom of the lake.\n\n- \"No - Tan! Sweetie - no.\" I pleaded. \"Just hang on. Don't lose the sword, but keep hold of the branch. Please.\"\n\nSomehow, we made it to Piran's Point.\n\n\"Stay here, Tanguiste.\" I got out. \"I'll be back.\" There were bears, occasionally, on the Point, but I saw no need to mention them now. \"Keep quiet, and watch for us.\" I wasn't at all sure that I could find the same landing spot, in the dark.\n\nThe thought of Guenna helped me get back to the south shore. She wasn't with me - but there was no way I was going to let my plucky six year-old down. The idea of her hiding, with Yevna, and waiting for me, was all the encouragement I needed.\n\nSomehow, I landed more than fifty yards away from them. But I had grown up on the lake. When I looked back to the north, at the point, I realized at once where I was. It was just a matter of dragging the log through the shadows, with a bit of swimming, until I found my daughters.\n\nI got Guenna positioned on the log, cradling the bow and arrows.\n\n- \"I'll be back, Yevna. As soon as I can.\"\n\n- \"I know.\"\n\nI took a second look at my ten year old daughter. My oldest child, now. Missing and broken teeth, covered in blood, and holding a blood-stained axe like a talisman ... and I was proposing to leave her alone, on a hostile shore.\n\nIt was easier to get Guenna to Piran's Point. She was a lighter burden, for one thing. And she encouraged me.\n\n- \"C'mon, Daddy,\" she whispered. \"Come on.\"\n\nI made it. The point was narrow enough, and Tanguiste saw us coming. She shifted over, and met us. I left Guenna - and another knife - in her care.\n\nThe light was changing, as I swam back across the lake. Dawn was fast approaching. So was the end of my last reserve of strength.\n\nI didn't find Yevna. She found me.\n\nI was slumped over the log, weakly fluttering my legs as I tried to get closer to shore. Yevna pulled my hair, and lifted my face out of the water.\n\n- \"One more trip, Papa.\" she said. \"One more - we can do this.\"\n\nSomehow, Yevna coaxed one more crossing out of me.\n\n\"Kick, Papa - kick! You can sleep when we get there. Kick!\"\n\nI don't remember reaching Piran's Point for the third time.\n\n*****"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "betrayal",
        "combat",
        "dark ages",
        "fantasy",
        "swords"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-chronicles-three-sisters-02"
}