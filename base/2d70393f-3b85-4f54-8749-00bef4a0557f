{
    "title": "Young Blood Ch. 05",
    "pages": [
        "It was a little after ten about a week later. I'd just gotten out of my evening shower and was contemplating whether to spend the next several hours studying or playing the PS2 or going down to have some fun with my friends. At least Larry was at another one of his frat parties, so I could go back to my actual dresser to get changed. I emerged from the bathroom into my dorm room, shut the door behind me, and turned on the light.\n\nThere was Michelle, sitting on my bed, wearing only a pink silk nightie.\n\n\"What are you doing here?\" I said in surprise. \"Aren't you supposed to be with Larry at that frat party?\"\n\n\"Larry's still at the party, having a good time,\" she replied. \"I don't think he even knows I left.\"\n\n\"And you just decided to come back here to wait for him,\" I concluded. \"Wearing that.\"\n\n\"Please,\" she scoffed. \"I came here to wait for you.\"\n\n\"So you came here planning to cheat on him?\"\n\nSlowly, sensuously, she arose from where she sat. \"Larry and I have been history since the moment I saw you again. He just doesn't know it yet.\"\n\nFor a moment, the only sound that could be heard was the light, barely audible sound of her bare feet moving closer to me across the carpet. It wasn't until she was within two feet of me that I bothered to move, which I did by brushing past her towards my closet. \"Oh, this is crazy,\" I said.\n\n\"What's the matter?\"\n\n\"Look, I'm sorry, but you have to remember that you and I are over,\" I said as I began pulling out some clothes. \n\n\"Is there someone else?\"\n\nI stopped everything. What was I going to say to that? Part of me knew I should have said yes. I should have said I was with Alicia. But another part have me wouldn't have felt right about saying that. As long as I continued to do stuff like I did last week, she and I would never be officially an item. Frozen with indecision, I said nothing.\n\nShe took that to mean no.\n\n\"Vincent, the only reason we broke up was because we were going in different directions. We're not anymore. I'm here. You're here. I don't see anything keeping us apart anymore.\"\n\n\"Michelle, I can't ask you to do this. I'm not the same guy you dated in high school. I've changed.\"\n\nHer arms came to rest on either side of my neck. \"Yeah, I've seen. You've learned a new disappearing trick, and probably a few other things I haven't seen yet. You've fallen in with a slightly different crowd, I get that. But you're still Vincent to me. That's all I care about. You're still the guy I loved enough to be my first... you know. I didn't stop loving you when I left; I didn't stop loving you when I met Larry; and I still love you now.\"\n\nHer hands placed themselves on the back of my head and she pulled me to her lips. The logical half of my brain was screaming at me to fight her, to push her away. The other half wanted nothing more than to embrace her to me. Torn between pushing and pulling, my hands essentially just held onto her sides, doing nothing, leaving me pretty much at her mercy. She began throwing her weight on me, and as a result I stumbled backwards, twisting around a bit, and landed in a sitting position on the bed, with her seated on my lap.\n\nI caved.\n\nMy hands moved around to her back and pulled her against me, accepting her tongue as it probed my mouth as my own probed hers. Her hand reached down and pulled apart the folds of my robe, allowing my piece of equipment to rise like the Sears Tower, and as she continued making out with me her hand began stroking it, while my hands slid the straps of her nightie off her shoulders and took hold of her cute little breasts. We didn't keep that up for very long, though. We were eager, and excited, and we wanted this to happen, no matter how much I knew it shouldn't. A slight movement of her hips, and she lowered herself onto the thing she held in her hand.\n\nShe moaned her lovely little moan, and her body began to shiver. That was one of the little things I remembered about her from the one and only time we'd done this before; the way her body tended to shiver when her southern region was stimulated. I found it to be an adorable little quirk. She kissed me again, her lips quivering against mine and her breath coming in the shortest little gasps I'd ever heard. I held her tightly to me, her soft little breasts feeling like a warm cushion against me. She slid away from my lips and began to nibble on my earlobe.\n\n\"I've been waiting for this for so long,\" she whispered into my ear, before a small cry escaped her mouth and I began running kisses along the side of her face, down to\u2014\n\nYeah, I hear you out there going \"Uh-oh, he's gonna bite her!\"\n\nAnd your expectations are not unwarranted. As the little noises of pleasure flowed into my ear, I could smell her blood pumping. It was right in my face; it was not only full of blood, but sexually heated blood; the most tempting kind. I planted light kisses on her neck; I could almost taste it! My lips pulled away from my teeth. My jaws opened. I drew closer to her...\n\nI didn't bite her.\n\nI caught myself at the last possible instant, and in a flash of sanity, shoved her off of me. I ran to gather the clothes I had begun collecting from the closet, while she picked herself up off the floor in utter confusion. \"What's wrong?\"\n\n\"I'm sorry,\" I breathed, throwing on clothes as quickly as I could, \"I just can't do this.\"\n\n\"Vincent, what's the matter? Is it me?\"\n\nBy now was already pretty much fully dressed, and still spouting apologies, much as I had after the time I first bit Alicia. \"I'm sorry, it's not you, I just... I can't stay here!\"\n\nWith that I bolted out the door, down the stairs and out of the dorm building. I ran. I had no idea where I was going; I just ran. I had to get as far away from Michelle as I could. When I finally stopped for a breath, I'd managed to reach the more urban area of the city. I must have been running for twenty minutes.\n\nI looked around me. There were people. People out enjoying the nightlife. Hapless cattle. Whatever my stance on life may have been, my encounter with Michelle just then had stirred something up in me. I had to feed, and now. But that didn't mean I wanted to go back to the school, down to the SVA and ask Nigel for a glass of B+.\n\nI wanted live prey.\n\nI wanted to hunt.\n\nI began prowling the streets, scanning the crowds. There were plenty of people to choose from, but I didn't want to just grab a random stranger. I wanted to pick the right victim, if there is such a thing.\n\nWhat I was looking for ultimately came to me. I was just wandering along when I was spotted by a trashy-looking hooker with light blonde hair and a cigarette in her fingers. \"Hey, junior,\" she said, \"interested in a good time? I'm one of the less expensive girls around here.\" I took one look at her. This pitiful woman, selling her body out to whoever was interested in paying for it. A worthless human being. She'd do perfectly.\n\nI took a quick look around, and when I was sure no one would see, I knocked the cigarette from her hand, grabbed her by the neck and clamped a hand over her mouth. \"I'm very sorry about this,\" I said to her suddenly terrified face. I dragged her over to the alleyway behind us, and when I was certain again that I could continue unobserved, I took hold of her by the head and shoulder and bit into her throat in a flash.\n\nShe was too paralyzed to even scream.\n\nI'm not sure how long I kept this up for; probably just a few minutes. It was really all a blur; all I know was that I loved it. When I finished my meal, I let her drop from my hands and tilted my head back with a big sigh. My God! I'd never felt so alive! At least not since...\n\nNot since the first time I killed someone.\n\nI looked down at her, at the pathetic corpse of a pathetic person who had lived a pathetic life. I struggled for a moment to feel any kind of sympathy for her; I couldn't. All I understood just then was the thrill of the hunt and the joy of the kill, and for just that moment, Tanya's way of thinking began to make sense. Maybe she\u2014\n\n\"Oh my God!\" someone screamed. I spun around. I'd been seen. A thirty-something couple was standing just outside the alley, staring at me. The woman's eyes were the size of golf balls, and her hands were covering her mouth. The man began shouting, \"Somebody call the cops!\" Suddenly all the people walking the street were gathering around, staring at me.\n\nWhat was I going to do?\n\nTo hell with concealment! I acted purely on impulse, not caring how many people saw me. I bared my still bloody teeth and snarled at them all. All of them reeled back in fright. That's right, humans! I'm a big scary monster! That done I turned, flickered up to the fire escape, climbed the wall, hopped to the adjacent rooftop and ran. Looking back on it, that was probably the stupidest thing I could have done in that scenario; nonetheless, it was fun!\n\nI ran along, leaping from rooftop to rooftop, ultimately dropping back down to the street when I was sure the coast was clear. I just stepped off the edge, landed on my feet and walked away. You know, for as long as I've been a vampire, the ability to do that is still as cool as hell!\n\nAnyway, I continued on back to the school, in much less of a hurry this time. I just walked. And that gave me time to think. If nothing else, I understood now that Michelle and I could never happen again. I mean, my logical side had always known that, but now I understood it completely. If I wanted to have any kind of real relationship, it would have to be with Alicia. She was ready and waiting for me, and now I was ready to accept. I'd done enough fooling around; it was time we got serious. So perhaps I should find her and do something about that.\n\nI got back to the school, and for a moment thought about returning to my dorm room to call Alicia, but I didn't want to risk running into Michelle just yet, so I decided to go down and see her in person. I descended to the SVA and went to check Alicia and Elizabeth's room. No one answered when I knocked. Fortunately, Vanessa happened to be returning to her room just then, with her arm hooked under Jonathan's. \"Hey, Vincent! What's going down?\"\n\n\"You seen Alicia around here?\"\n\n\"Last I saw her, she was going for a dip with Elizabeth.\"\n\n\"Oh, great, thanks!\"\n\nI immediately went off in the direction of the pool, and stepped through the doors. I spotted Elizabeth right away. Not that she was doing anything extreme; she's just Elizabeth, and she tends to get noticed. She was just gliding around the water in her black string bikini. Alicia, however, was nowhere to be seen.\n\nWell, at least one person was sure to know where she was.\n\n\"Hey, Elizabeth!\"\n\nHer face brightened in an instant when she saw me. Not that she was dismal or anything before, but she suddenly went from casual to sunny, and waved at me. She bobbed her head down and glided through the water like a penguin, then leaped up out of the pool and wrung the water out of her raven mane. She hopped up to me like a kid hops up to an ice cream truck, and all she said was, \"Hi!\"\n\n\"You seen Alicia?\"\n\nElizabeth looked in the direction of the shower rooms. \"Um, last I saw her she was\u2014\" As if on cue, the doors to the showers opened and Alicia emerged, fully dressed and carrying a small bag, presumably containing swim wear, her hair still a little wet.\n\nElizabeth grinned, obviously as amused as I was by the irony of her timing. \"Hey, Alicia!\"\n\nAlicia smiled and came over to join us, albeit with a little less of Elizabeth's schoolgirl enthusiasm. \"Hi Vincent! What's up?\" For a moment I thought something looked a little different about her... ah well, anyway...\n\nI took a hesitant look towards Elizabeth before speaking. \"Uh, Elizabeth... you think you could maybe... like give us a moment?\"\n\nShe shrugged, still smiling. \"Sure, no problem.\" She turned and walked back in the direction of the pool, sitting down on the edge and dipping her legs in the water. It actually disturbed me how easily she'd complied, but decided against dwelling on it.\n\nAlicia looked at me, clearly curious and certainly worried about what I had in mind. \"What is it?\"\n\n\"Look,\" I said, \"we've just been fooling around with each other for a while, and sure I've had fun with it, but I think now it's time we started to change things.\" I paused a moment. She looked like she didn't know whether to be intrigued or worried. \"I think we should get a little more serious with it now. I mean, you know... I was thinking we could maybe do something tomorrow night, just you and me... like in a date capacity, so to speak.\"\n\nI got the impression from the look in her eyes that she liked that idea. \"You mean it? You're ready for that?\"\n\n\"Absolutely! What do you say?\"\n\nHer answer consisted of a beaming smile on her face, followed by her arms being thrown around my neck and her lips upon my own. When she released me she said, \"Right now I was going to go get started on my homework for Monday, but I now I can't wait for tomorrow! Where did you want to go?\"\n\nI realized suddenly I hadn't stopped to think about that. I managed to quickly find an answer for her by saying, \"How 'bout you wait till tomorrow to find out?\" She smiled again, and headed off the other way with a giggle, waving at me on her way out the door.\n\n\"And I was beginning to think it would never happen!\" Elizabeth practically came out of nowhere, go figure.\n\nI looked at her suspiciously. \"Were you listening to all that?\" She answered me with another of her wicked smiles, and I said, \"Yeah, okay, dumb question.\"\n\n\"So if you're going to start going steady with her, does that mean you and I can't ever...\"\n\n\"Can't ever what? Don't tell me you're suddenly interested in commitment?\"\n\nElizabeth scoffed. \"Heck no! I just meant if this means we're not going to be doing it anymore.\"\n\nI shrugged. \"It probably does.\" She made a pouty face; not an especially genuine one, but I understood what she was thinking. \"Don't worry, you'll get over it. I know I'm not the only guy you\u2014\"\n\n\"Yeah, but you are still my favorite. You're a good friend, Vincent, and a good lover too. You wouldn't be so cruel as to deny a girl one last tumble?\"\n\n\"Hey, slow down now, I am trying to make things work with Alicia\u2014\"\n\n\"Vincent,\" she slowly purred, leaning in closer, \"if you do this for me, I'll help you set up your date tomorrow night. You want it to be special, right? I'll make it into a night she will never forget!\"\n\nBoy, when Elizabeth wants something... \"Where?\"\n\nShe took me by the wrist and hurriedly led me in the direction of the showers. The shower room, by the way, doesn't actually have two separate rooms for guys and girls; just a bunch of individual privacy stalls that have room to get changed and everything in addition to a shower. There were a few showers going, and I worried for a moment that even with these privacy stalls we were sure to be about to attract attention.\n\nBut if that doesn't bother Elizabeth...\n\nThe girl wasted no time. She pulled me with her into one of the stalls and shut the door. In the time it took me to barely begin unfastening my belt, her bikini was already on the floor. Rather than doing what she normally would have done, which would have been to help rip off my clothes, she left me to do that on my own while she went over and turned on the shower. When I gave her a curious look, she responded by saying, \"I need to take a shower after my little dip anyway, I just thought I might as well enjoy it.\"\n\n\"So I suppose this is the part where you ask me to come wash your back, huh?\" I said as the last of my clothes hit the floor.\n\nShe scoffed again. \"Hell with that, just get over here and fuck me!\"\n\nI faced the briefest instant of indecision. I was trying to finally commit myself to Alicia, so what I was about to do here would be cheating, wouldn't it? But as soon as Elizabeth placed her hands on the wall of the shower and thrust her ass out to await me, all my indecision went bye-bye. I'll commit after I'm done with her in here. I stepped into the shower, and slid into her back entrance.\n\n\"Aaahhhh...\" was the instant gratification I got. Elizabeth's eyes rolled back and fluttered shut and she tilted her head back as I began pounding away at her. All at once the reason I loved having a friend like her came rushing back to me, and I quickly found myself realizing that one way or another, this would hardly be the last time she and I did this. I mean hey, Alicia has already proved that she enjoys threesomes every bit as much as I do, hasn't she? I smiled, and pumped in and out of Elizabeth with a song in my heart.\n\n\"Oh, yeah,\" she moaned. \"Oh I love it... Oh, keep fucking me!\" She took hold of her left leg and lifted it from the floor, starting to twist herself sideways. I took the message and placed my hand on her leg, freeing up her hand to be placed on the side of my neck so she could look into my eyes as I continued pounding her. \"Oh you're such a naughty boy! Ooh, you're gonna make me cum!\"\n\nWhich of course I did, very shortly afterwards. And no sooner did her juices start dripping off my balls, then I pulled out of her with a jerk, ready to give her my own present. She understood immediately, and dropped to her knees, opening her mouth and rolling out her tongue. Seconds later, her face was covered in ropy white streaks.\n\nShe smiled and giggled a while, letting the rush of water wash my seed off of her face. \"So,\" I said, \"what was that you were saying about if I did this for you?\"\n\nShe grinned up at me. \"Just leave everything to Elizabeth.\"\n\n***\n\nAs usual, especially for the weekends, I slept in the next day. It was close to three when I woke up, and found the room not entirely empty. Larry sat on his bed. Michelle stood at the far side of the room. And they just seemed to be staring at each other. The first thing I sensed in the room was hostility; there didn't seem to be any kind of sympathy between these to parties. It seemed Michelle was attempting to finalize her break-up with him, and both of them appeared to be fairly pissed off with each other.\n\n\"Boy, if somebody sneezed here, all out war would break out,\" I said suddenly, breaking the silence. Both pairs of eyes immediately turned to me.\n\n\"Well good afternoon, Mr. Anti-sunshine,\" Michelle quipped.\n\n\"Hey, Vince,\" said Larry, \"Michelle and I were just having a little break-up spat.\"\n\n\"That was my supposition.\"\n\nLarry gave me a stupefied look. \"Your what?\"\n\n\"That's what he guessed, stupid,\" said Michelle.\n\nLarry looked at her coldly for a moment, then turned to me. \"Apparently she snuck away from the party without me last night and got X-rated with some other guy on campus.\" I suddenly found myself smiling at the poor lunkhead.\n\n\"You hear yourself?\" Michelle snapped. \"'Apparently!' You didn't even notice I was gone!\" For a moment she just let him stew in the pain of how she had reflected his words at him. Then she added, \"Anyway, I don't think it was all that X-rated, considering somebody cut it a bit short. Wouldn't you agree, Vincent?\"\n\nLarry suddenly started staring at me. \"You mean you walked in and caught her in the act?\" he gasped.\n\nI remained silent for a second or two. \"Not exactly.\"\n\n\"Well then why is she aski\u2014\" The answer hit him like a bus running over a Pinto. He pointed a finger at me, his mouth hanging open in disbelief. \"No!\"\n\n\"By the way, Larry,\" Michelle said, looking at me with a raised eyebrow as she started this sentence, \"Did Vincent ever happen to mention that he and I used to date in high school?\" Of course, this got his stare turned back in her direction. \"Or that he happens to be the guy who made me into a woman?\" she added. He remained fixated on her for a moment longer before slowly adjusting his gaze back toward me.\n\n\"Larry,\" I said rather heavily, keeping my attention on Michelle the whole time, \"why don't you leave the two of us alone for a minute.\" I needed to finalize things with her myself, now that Alicia and I were going to be getting serious.",
        "He took a couple seconds to look back and forth at the two of us before slowly rising up and saying, \"Sure, no problem.\" With that, he stepped out the door and shut it behind him.\n\n\"If you want to talk to me,\" Michelle said, still clearly rather miffed with me, \"you can at least have the decency to get out of that bed. It's fucking almost three 'o clock, for God's sake!\"\n\n\"All right, but not until you close those blinds,\" I replied.\n\nHer shoulders hung and her head tilted to the side. \"What's up with you and those stupid blinds?\" I said nothing, just gave her one of those looks. You know, of the \"don't argue with me, just do it\" variety. She rolled her eyes and said, \"Fine.\" She walked to the window and closed off the deadly light pouring into the room, and I arose from my bed and grabbed my pair of jeans off the floor and began sliding them on.\n\n\"I just want to know one thing,\" she said to me. \"What the hell happened last night? Why did you jump ship in the middle of what we were doing?\"\n\nI sighed. \"I wish I could tell you. Right now, the only thing I need you to understand is that you and I are of the past. I can't allow myself to be tempted to get close to you.\"\n\nShe shrugged in a wide-eyed sort of way that still demanded explanation. \"Why not?\"\n\n\"Look, what I said before still stands, Michelle. I've changed. I've been pulled into a whole different world since we broke up, and if we keep this up I'll end up pulling you into it too.\"\n\n\"Well you seem to be doing more-or-less okay, aside from the part where you're sleeping all day. How do I know getting pulled into this world of yours would be a bad thing?\"\n\n\"It's not as simple as...\" I stopped. I looked away from her eyes, groping for a way to explain the situation without telling her the whole truth. But wait, what if I did? What if I told her what I was, and she expressed interest in joining me? What if she decided she wanted to be turned? No, I couldn't so casually give out that truth on the possibility that the recipient of the information would be intrigued by it. She'd probably freak out instead. Besides, even if I did let her join us there was...\n\nAlicia.\n\n\"There is someone else,\" I said at last.\n\nNow that she understood. Her head rolled back with an angry grunt. \"I knew it,\" she growled.\n\n\"I'm sorry if you're disappointed that I didn't wait for you,\" I said, \"but I've moved on. I've got my own life now, and you're just not a part of it anymore. I'm sorry.\"\n\n\"Fine. I understand,\" she muttered. \"Then I guess this is where I excuse myself from your life.\" And so she marched over to the door and yanked it open. Both of us were expecting there to be someone standing there when she did, but we both thought it was going to be Larry. It was actually someone else entirely, just getting ready to knock on the door when it opened.\n\nIt was Elizabeth.\n\n\"Well how 'bout that,\" Michelle fumed. \"I guess this must be her, isn't it?\"\n\nElizabeth raised an eyebrow. \"Her who?\"\n\n\"She's just a friend,\" I said sullenly to Michelle.\n\n\"Name's Elizabeth,\" she said, extending a hand which Michelle did not take.\n\n\"Well, Elizabeth, I hope you'll make Vincent very happy. Have a nice life, both of you.\" With that she proceeded to storm out as Elizabeth stepped inside.\n\n\"What was that all about?\"\n\n\"Ex-girlfriend, transferred here to see me, wanted to get back together. I said no.\"\n\n\"Oh.\" Elizabeth needed no further explanation.\n\n\"So was there something you wanted to see me about?\"\n\n\"I was hoping you could join me down in the lower levels, so I could show you the preparations I've made. Alicia's still sleeping, at least last time I checked, so you don't need to worry about her.\"\n\nIn walked the big lout with an armful of beer cans. \"Hey, if you two are finished about now, why d\u2014\" He stopped suddenly, seeing Elizabeth where he expected to see Michelle, and instantly turned on his I-laughingly-use-the-word \"charm.\" \"Well, hellllooo!\"\n\nElizabeth looked at me, clearly repulsed. \"Roommate?\"\n\n\"Roommate.\"\n\nThe slob took a few eager steps toward her. \"Hey wassup baby? I'm Larry! And you are?\"\n\n\"Suddenly very eager to be gone from here.\"\n\nLarry took a step back, reeling from that wound. Elizabeth looked at me in a pleading sort of way. \"Just give me a minute to shower and put on some clothes I didn't just sleep in,\" I said. She nodded, and turned and walked out the door.\n\nI was just starting to turn to head for the shower. \"Hey, is it darker in here than it was a minute ago?\" Larry said. I reflexively turned back to him in response, not really thinking anything of it. Then I saw him notice the blinds. \"Oh, hey, weren't those blinds open?\"\n\n\"Larry, don't\u2014\"\n\nBefore I could stop him, Larry had pulled the string. I instantly dove for cover behind my bed as deadly white-hot light came flooding into the room. Now that I look back on it, I probably overreacted a little; considering what time it was, there wasn't all that much sunlight coming into the room anyway, but I guess it's a natural vampire reflex to become panicky in the presence of daylight. Anyway, Larry looked at me with more than a little suspicion. \"Y'okay?\"\n\n\"Close those blinds Larry, now!\" I shouted.\n\n\"Dude, what the fuck\u2014\"\n\n\"CLOSE 'EM!\"\n\nObviously baffled, Larry consented. As soon as the lethal rays were gone, I stood up and sighed. \"Dude, what's up with you, anyway? Out all night, later than even me, mortally afraid of the sun, hangin' out with weird goth chicks, you sure didn't used to do all that.\"\n\nI just looked at him a moment, pondering my answer. I idly imagined for a moment if I were to tell him the truth. It was a comical idea; I knew he'd never believe it\u2014So why not just tell him? Since he's not gonna believe it anyway, no harm, no foul! \"You want to know?\"\n\n\"Yeah.\"\n\n\"You sure?\"\n\n\"Yeah!\"\n\n\"You absolutely sure you want to know?\"\n\n\"Dude, fuckin' spill it!\"\n\n\"I'm a vampire.\"\n\nFor a moment, he just stared at me. Saying nothing. I just looked back at him, waiting for a response. And it finally came in the form of Larry just cracking up laughing. I couldn't hold back a smile, and added, \"That's right, I'm an immortal, bloodsucking creature of the night.\" He laughed some more, of course. Just watching his reaction was actually pretty entertaining.\n\nWhen he finally started to calm down, all he could say to me was, \"Man, you are one crazy motherfucker.\" What made it more amusing was that I actually knew exactly what he was going to say before he did.\n\nThat's when things stopped being so funny.\n\nI turned around again to head for the shower. I had not even taken a step when I suddenly heard the shuffling of blinds and felt a burning pain on my back, and instantly leapt away from the rays that Larry had just allowed back in. \"Goddamn it, Larry, I told you to close those blinds!\"\n\nHe gave me the most incredulous look he was capable of. \"Dude, the joke's over!\"\n\n\"I'm not joking with you Larry, close the goddamn blinds!\"\n\n\"Vince, stop with the stupid vampire game, what's your fuckin' problem?\"\n\nI glared at him, and\u2014I don't know now why I decided to do what I did\u2014thrust my hand into the sunlight. I just held it there, feeling the pain of it starting to burn. My hand trembled as smoke started rising from it; I gritted my teeth in agony, which I think meant my fangs were on full display, and finally yanked my hand back with a grunt when I just couldn't stand it anymore.\n\nI glared again at Larry, who had eyes the size of golf balls. \"I won't ask again, Larry. Close-the-god-damn-blinds!\" Larry obliged me again, and I had a good feeling he wasn't going to open them again.\n\nHe began slowly working his way towards the door. \"Dude, I think you need to go to a fuckin' doctor or something, get that looked at, you know... And then maybe see a dentist, or something\u2014\"\n\nI was not about to let him just walk away from this. In a flash, before his startled eyes, I flickered up to him, grabbed him by the throat and lifted him off the ground. I don't know if I've mentioned this, but one of the little things that happens to you when you become a vampire is that your strength goes up at least five fold. Or maybe it's ten fold, I'm not really sure. Whichever, the result is more-or-less the same: you become a helluva lot stronger. And I seriously doubt I could've lifted Larry off the floor with one hand like that when I was still human.\n\nLarry stared down at me like a scared puppy as I snarled at him, fangs fully exposed. \"Now you listen to me very fucking hard, asshole,\" I growled. \"First of all, when I say I want the blinds closed, that means you had better keep them the fuck closed, because the next time you open them in front of me is going to hurt you a helluva lot more than it is right now. Secondly, what you're seeing right now stays here between me and you, because there are more of us on campus here, and if word starts getting around that somebody knows about us, someone's going to track you down, and I'll leave the rest of that up to your foul little imagination. Do we understand each other?\"\n\nHe gave me a very shaky and frightened nod, and I let him down onto his feet. With that I turned again to head for the shower, but didn't bother taking another step as I noticed him starting to try to creep to the door. \"Where do you think you're going?\" I said ominously.\n\n\"Uh, nowhere,\" he said in a rather panicky voice. I glared at him with a raised eyebrow, and he saw there was no escaping this interrogation. I wanted to know. Defeated, he blurted out, \"Going to find a fucking wooden stake!\"\n\nHe was about to just go bursting out the door, but before he could even finish his first running step I threw a vicious left hook at his right temple that sent him sprawling right flat onto his bed where he belonged, unconscious even before he landed. With any luck, I'd hit him hard enough that he might even forget what just transpired, our at least mistake it for a booze-induced dream.\n\nSo I finally managed to get to my shower, got dressed and headed down to the lower levels. I found Elizabeth waiting for me in the main lobby just inside the entrance to the SVA. \"Hey, what kept you?\" she said.\n\nI shrugged. \"Roommate started asking questions. Let's just leave it at that.\"\n\n\"Fair enough.\" I followed her to her room. When we got to the door, she quietly told me to wait where I was while she stepped inside. As soon as the door closed, I leaned in and pressed my ear to it, straining to hear the dialogue that ensued.\n\n\"Hey there, lazy butt! You might want to think about getting yourself up about now.\"\n\nFor a moment there was silence, followed by a groan and a low voice mumbling, \"What time is it?... Oh. Okay.\" I faintly heard body movement and sheets shuffling, and I think I almost heard a yawn. I'm not sure, but I think I did. \"Guess I'll go hop in the shower now.\"\n\nI heard a door close, and then another door opened, which of course was the one I was listening through. Elizabeth put a finger to her lips and quietly ushered me inside. Once she closed the door behind me, she crept over to her bed and pulled out a case like you might use to transport drinks on a beach trip or something. As I heard the shower start, she opened the case and I saw that it was full of ice, which surrounded a single liquor bottle, which she removed to show me the label.\n\n\"Sang du Coeur?\" I read aloud.\n\n\"It's French,\" she whispered. \"Means heart's blood. I asked Nigel for the most romantic drink he could come up with, and I got this.\"\n\n\"What is it?\"\n\n\"Champagne, basically, with a little bit of O+. Just a little something to treat her to when you get back.\"\n\n\"Yeah,\" I sighed, \"still kind of need to decide where I'm taking her to...\"\n\nElizabeth flashed me one of those wicked smiles of hers. \"Relax, baby, Elizabeth's taken care of everything. I've gotten you a restaurant reservation for 10:30 tonight. Second floor, balcony table, got a beautiful view.\" I'm deliberately avoiding telling you the name of the restaurant; just one of those little details I'm going to leave vague. \"You two are going to go eat and have a good time, and while you're doing that, I'm going to be busy setting up the room for when you get back. You'll come back here, I'll bring you in, she'll gasp and go 'Oh, wow!' and then I'll leave the two of you to your little escapades while I go of to spend the night having some of my own with Vanessa and Rachel and whoever the two of them have managed to ensnare tonight.\" Towards the end of that I began seeing that naughty little look in her eyes that always implies humping is on the horizon.\n\nI smiled back at her. \"Elizabeth, what would I ever do without you?\"\n\n\"Let's just avoid unpleasant thoughts for now,\" she grinned.\n\n***\n\nI returned to my dorm room and spent the rest of my Saturday afternoon focusing on my classes; doing homework, studying for tests, the important kind of bullshit like that. Larry remained unconscious for several more hours; I think it was sometime after seven when he finally came around, and the first thing he said was, \"Dude, Vince, you wouldn't fuckin' believe this weirdass dream I had last night!\" I suppressed the urge to laugh.\n\nUltimately, of course, 10 o'clock came around. I got out the best clothes I had\u2014I think that was the first time I really ever gave much of rat's ass about what my wardrobe looked like\u2014which really weren't all that much. Just a blue silk shirt and a so-so pair of slacks. I decided I looked good enough in them; at any rate, it was as good as it was going to get. I headed out the door.\n\nAnd standing outside was the last person I ever expected to find outside my door. \"Well, well, don't you look yummy tonight!\"\n\nFor a moment I just stared in mute shock. When I finally spoke, the words that came out were, \"Tanya, what the hell are you doing here?\"\n\n\"You know, I really shouldn't have been surprised when I found out you were still living up here, with the humans, but I was. I guess I just didn't realize how truly messed up you are.\"\n\nI scowled at her, fighting hard to keep my fist from rising to knock her face onto the other side of her head. This wasn't the time or place for it. I pushed my aggression down into the pit of my stomach and walked on past her to head for that soda machine. \"Let's save this talk for another time, okay? I've kind of got a date.\"\n\n\"With your precious, button-nosed little human friend?\"\n\nAll at once I wheeled back around and stared at her. \"Have you been spying on me?\" I demanded.\n\n\"You're supposed to be my enemy, remember? It's what I do. You know what they say, 'all's fair in love and war.'\"\n\n\"Let's not go so far as to call this war, Tanya,\" I said, trying to hide the fact that I believed that was exactly what this was.\n\nShe shrugged. \"Fine, I'll leave you alone. I'll let you go on your perverted little date with your tickle-me cute little human\u2014\"\n\n\"I'm going with Alicia, thank you very much!\" Tanya didn't say anything, but I felt comfortable with the look on her face, knowing that in the little swordfight we were having I'd managed to get a good attack in. \n\nI took a step closer and added, \"And about that human girl you're talking about: her name's Michelle, and for your information I've decided to break off any contact with her. And you know why? Because I care about her. You hear me, Tanya? She's a person, and she's important to me, and I don't want to put her in a position where I'm tempted to take away whatever future she might have.\" \n\nI felt a pang of remorse as I said those words, seeing the face of that hooker from last night flash across my eyes. And the young woman with the little dog on the night I changed. It passed; I felt nothing for them. The pangs mostly come from imagining Michelle being in their position.\n\nI kept everything concealed, though. \"Now, if you'll excuse me, Alicia's expecting me.\" Even after the secret entrance closed behind me, I could still hear Tanya's sick laughter following me down.\n\nI headed down and knocked on Alicia's door, and waited a few moments for a girl I knew to appear. The girl who appeared was not one I knew, or so I thought at first. Not only was her hair not up in a ponytail, but the color had... well, not exactly changed, but been fine tuned. The simple dirty blonde had become shimmering, intermingled streaks of brown and gold. And her eyes... My God! Those eyes! Those pale cerulean orbs had almost taken on a kind of sapphire glow. The kind of glow I'd never seen in anyone's eyes before... Except of course for Elizabeth. I wasn't even paying attention to her dress, which I think was blue taffeta or something. All my attention was focused on her beautiful smiling face.\n\n\"Well aren't you going to say something?\" she said at last.\n\n\"Huwayolaugre...\" I managed to say.\n\n\"That would be salivating boy talk for 'you look great,'\" Elizabeth said behind her.\n\n\"Oh,\" Alicia giggled coyly. \"Well then thank you, salivating boy.\"\n\n\"All right kids, you go have fun now,\" Elizabeth beamed. \"Oh, and Vincent?\"\n\n\"Yes?\"\n\nShe took hold of my hand and slapped a handful of money into it. \"Something you're going to need, trust me.\"\n\nI looked at it, then nodded my approval. \"Thanks, Elizabeth.\"\n\n***\n\nNow contrary to what you may have seen in the movies, vampires love a good meal as much as any human, with or without a serving of blood. So with that cleared up, I'm going to say this: the restaurant was great. We had a beautiful view of the bay and the city lights from that balcony; the table was set up perfectly with all the ornate decorations and the candles; and of course, the food was good.\n\nFor a while, though, neither Alicia nor I said anything to each other. I don't think we needed to. I was focused on only one thing: she was beautiful. I mean I'd always known Alicia was genuinely pretty, but before that night I never would have described her as beautiful. It was like something had changed inside of her, and she'd taken on this mesmerizing, otherworldly splendor that I'd only seen in Elizabeth before. And from the look in her eyes, I'd say she knew it.\n\nOf course, she was the one who broke the silence. \"Are you just going to keep ogling me all night, or are we going to actually talk?\" We both started laughing.\n\n\"Well what can I say?\" I said, deciding to tell her exactly what was on my mind. \"When I knocked on your door tonight, I was expecting the simply pretty girl I knew. I wasn't expecting to be greeted by the blinding beauty that's sitting in front of me now!\" She made a coy little smile, and I added, \"I mean what did you do to yourself? Your hair, your eyes...\" I froze in mid-sentence on the word eyes, because those were what I was looking into again, and was again falling under their spell. I finally snapped out of it when she blinked.\n\n\"Well, it has to do with this thing Elizabeth's been teaching me about,\" she said. \"It's called Blood Rose.\" Two words I'd heard before, albeit by eavesdropping from the other side of their door. \"It's about fully awakening the body and mind and attuning your vampire senses to the world around you. You remember that little thing we did at Tanya's party, where we drew blood and put our hands together so we would each feel each other's pleasure in addition to our own?\"\n\n\"Yeah?\"\n\n\"That's a Blood Rose technique. Joining the senses. It's a Zen kind of thing, except specially designed for vampires. Oh, and it's kind of for women only.\"\n\n\"Yeah, Elizabeth mentioned something about that. Why is that, anyway?\"\n\nShe shrugged. \"Hell, beats me!\" she chuckled. \"Elizabeth said something about there being a similar practice for men, just don't ask me to tell you anything about it.\"\n\n\"So, ah, what does all that have to do with the way you look tonight? Cause whatever it is, I'm certainly happy you did it!\"\n\nHer face suddenly took on a very Elizabeth-esque kind of smile. \"I mentally made myself look beautiful,\" she mused. \"I perform these weird rituals every night for five nights, and then meditate every night on how I want to look, and slowly my look starts to change.\"",
        "\"Your kidding! You just think about looking like someone off the cover of Seventeen and boom?\"\n\n\"Well, there's a bit more to it than that,\" she said rather cryptically. \"You're kind of playing a part yourself.\"\n\nNaturally, I raised an eyebrow. \"Come again?\"\n\nShe began looking intently at me. \"Look at my eyes, Vincent. Look.\" She didn't have to tell me twice; it was pretty hard not to look at those eyes anyway. But as I started looking at them then, the world around me began to drift away. There was nothing in the world at all except for her and those two brilliant blue beacons. And all I wanted to do was come to them, to become lost in those eyes, and never find my way out.\n\nThen she blinked. The world came rushing back to me. \"Whoa,\" I gasped. \"What was... whoa!\"\n\n\"It's all in the eyes,\" she mused. \"I'm projecting myself through them, and they're drawing you in.\"\n\nI decided I didn't need any further explanation. \"Well... that's impressive!\"\n\nShe shrugged, the boundless confidences she'd displayed a second ago giving way to the coy and unsure little girl I knew. \"Yeah, I'm still kind of working on it. I'd say Elizabeth's got it pretty much down pat, though.\"\n\nNo kidding, I thought. After all, wasn't that how Elizabeth had ensnared me in her net in the first place? But what I said was, \"Well I think you're getting pretty damn good at it yourself,\" with an impish smile thrown in.\n\n\"Really?\"\n\n\"Let me put it this way: I think you can consider me pretty well... drawn.\" She smiled. Oh, she was so beautiful when she smiled.\n\n***\n\nWe finally returned to her room a little after midnight, just randomly laughing back and forth at each other. I don't even remember what we were laughing at. If I didn't know better, I'd think we were just plain crazy drunk, but we really hadn't had that much to drink. We were just having fun.\n\nAlicia was about to put her key in the door when the door opened without her. There was Elizabeth standing there with, go figure, a smile on her face. \"Hello, come on in,\" she beckoned. And just as Elizabeth predicted, Alicia stepped inside, gasped, and said \"Oh, wow!\" I actually didn't blame her. The room had been decorated all around with flower petals and white silk drapes and scented candles. Set out by Alicia's bed was the bucket of ice with the bottle of Sang du Coeur, accompanied by a pair of wine glasses. Elizabeth hit a button on the remote in her hand, and the music started up.\n\n\"I'll leave the two of you alone now,\" Elizabeth beamed, heading out the door. \"Good night. And I really mean that, you know.\"\n\nAlicia gave me a look that was somewhere between delighted and confused, which I think she was both. \"What's going on here?\"\n\n\"Well, Elizabeth and I did a little planning since last night,\" I told her. \"We had dinner, sure but that doesn't mean the night has to end there.\" I wandered over to the bucket by the bed and removed the bottle from the ice. \"Shall we?\"\n\n\"What is it?\"\n\nI'll leave off the explanation, since you already heard that part. I poured the drinks, we sat down, we clinked glasses and drank. And the drink wasn't that bad, really. Somehow, it really did seem to go with the mood Elizabeth was trying to go along with. But right then, most of my attention was exactly where it was before, on her eyes. Except this time, she was looking back at me with the same kind of look in her eyes as I was giving her. She wasn't reaching out and drawing me in anymore; any magic that happened here was going to happen on its own.\n\nAfter a while, I turned my attention towards the music that was playing. The slow, soft, gentle music that was just perfect for... \"Hey, you uh... want to dance?\" She smiled\u2014I swear, every smile I saw on her that night was at least twice as beautiful as the last\u2014and took my hand. We stood and moved to the center of the room. Her hands linked together behind my neck while mine took hold of the small of her back, and we began moving. Eye-to-eye. Neither of us was looking away. Neither of us could look away. There was nothing but me and her, and that was all I wanted there to be. I didn't even notice when the distance between us had closed to just about nothing until her head came to rest on my shoulder. I leaned my face against her head, and my eyes closed.\n\nAnd I stayed that way. And we kept dancing. We continued to move, lost in oblivion. I thought we were going to stay that way forever, and I didn't care, until I finally felt her head move. I opened my eyes, and saw hers looking at me with a quivering longing. We said nothing. Nothing needed to be said. I leaned forward, and our lips met. Yes, I'd kissed her many times before, but this time was different. The motive behind it was different. Affection, I'd done that. Passion, absolutely. But this was new.\n\nThis was love.\n\nI think my hands took on a life of their own as they began gently sliding the zipper down the back of her dress almost without my consent. At the same time, I felt her hands unbuttoning my shirt, while our lips still remained locked. Once she'd gotten the last button off my shirt and slid it off me, she freed her hands just long enough for me to slide the straps of her dress down off her shoulders. Then she placed them back on my neck.\n\nI realized then that almost on intuition (or maybe not even almost), we'd been adjusting our movements toward the bed, when she lay back on it. I moved my lips down to kiss her neck and her tits as I slowly slid her panties off. For a moment I raised myself up, looking down on her lovely, waiting naked form, and finally dropped my pants and came back down on her.\n\nHad you asked me before that night what the difference was between having sex and making love, I'd have looked at you like you were from another planet and said, \"There's a difference?\" I learned very well that night what the difference was, because this definitely qualified as making love in a way no sex we'd had before ever had. I knelt over her and resumed making out with her as I slowly plowed my way inside. I took everything with the gentlest touch I was capable of, slowly sliding in and out.\n\nAnd so we went on. And on, and on... We changed positions from time to time, rolling around to put her on top, allowing her to sit up vertical, or moving around to go from behind, but our pace never really changed that much. We just went on, taking it slow, savoring every moment to its fullest extent. I don't know how long we kept this up for; it seemed like hours. Hours that neither of us wanted to end. We ultimately came almost simultaneously and fell into each other's embrace.\n\nI woke up the next morning with a warm body in my arms. I look down at her, seeing her still sleeping there. And I loved her. I knew it right then, looking at the beautiful naked girl sleeping in my embrace, I knew I loved her. It was as simple as that. With the back of my fingers I gently stroked the side of her face. Her mouth formed into a smile before her eyes were even open. And even then, she got out a little happy giggle before her eyes opened and looked at me.\n\n\"Hi,\" she whispered.\n\n\"Hi,\" I whispered back. And I kissed her.\n\nA thought entered my mind just then as I held her. \"You know the stories about vampires that say they're supposed to be the living dead, with their bodies as cold as the ground they're buried in?\"\n\n\"Yeah?\"\n\n\"I can't tell you how happy I am right now that that turned out to be a myth.\"\n\nShe smiled wider. \"I know,\" she said, and pressed herself harder against me. \"Can we stay like this forever?\" I didn't say anything to that. I didn't need to. We both knew I felt exactly the same way.\n\nFor a while, I'm not sure how long, the only motion in the room, and the only sound made, was our breathing. Neither of us moved again until the door opened and Elizabeth waltzed in. \"Morning you two love birdies,\" she beamed. \"You have a good time?\"\n\nOur only response was to look at each other and laugh. Then I said, \"What about you, how was your night?\"\n\n\"Well, I could tell you,\" she said, when she suddenly held up a video tape and added, \"but there is a reason Vanessa has a video camera!\"\n\nI looked at her a moment, and then cracked up laughing. \"You little firecracker!\"\n\nShe set the tape down next to the TV and headed in the direction of the bathroom. \"I'm gonna go shower now. Anybody feel up to joining me?\"\n\nWe both laughed with her, but declined. \"I think we're just gonna stay here,\" Alicia said. Elizabeth nodded, and closed the bathroom door behind her. And so we remained, lying there.\n\n***\n\nIt was several hours later when I actually managed to drag myself out of Alicia's bed, get dressed and head back up to my dorm. It was a torturous moment for both of us when I left; even after I opened the door, she came up to me to make out some more, and we both had trouble stopping, but stop we ultimately did. So I went back up to my dorm building, and headed for my dorm room. I was practically skipping along, feeling like a million bucks.\n\nFive steps before reaching my door, I stopped. The blissful mood I was in had vanished in an instant, replaced with an all-consuming dread. I was six feet away from my room. The door was closed. Nonetheless, even from where I was, I could tell something was horribly wrong.\n\nThere's no hiding the smell of fresh human blood from a vampire's nose.\n\nI ran to the door, shoved the key in the lock and swung it open. The room had been ransacked, various items thrown all over the place. And seated on the floor, slumped against his bed, was Larry, his shirt wet with his own blood. I didn't bother checking for a pulse. I could tell from where I was standing that there was no breath coming from him. I stepped up to him, and tilted his head to the side to examine his neck. And there they were. The two telltale marks.\n\nThat was when I noticed the Polaroid in his hand. I carefully bent down to remove the little picture from his fingers, and brought it up to examine it. I took one look and almost flew into a mad panic. It was Tanya, holding a terrified Michelle by the throat, running a tongue up the side of her neck, fangs fully exposed.\n\nI suddenly realized how badly I'd fucked up by telling Tanya that I cared about this girl. Tanya knew she could use Michelle against me. I felt my teeth grinding together and a feral growl escaping my throat, and before I knew what I was doing I'd punched a hole in the wall. I was about to pick up the TV and hurl it across the room, when I saw what was written on the bottom of the Polaroid.\n\n\"Wickman Lecture Hall B14 3:00 (Any later, and she's lunch!)\"\n\nIt was a quarter to 3:00 now. I dropped the Polaroid and bolted out the door, swinging it closed behind me, not stopping to make sure it actually latched shut. I descended down into the tunnels, and I ran.\n\nI think it took me about two minutes to get to where I was going. Given that this was Sunday, of course, there wasn't supposed to be anyone there. But I found the lock on the door had been forced open\u2014clearly by someone with a vampire's strength\u2014which I took full advantage of. The lecture hall was mostly empty, aside from Michelle lying on the desk at the front of the room, her wrists and ankles tied, and a strip of duct tape across her mouth. But no Tanya. I also took full advantage of that.\n\nI ran to the desk where Michelle lay waiting. She began squirming, trying hard to say something, as I came near. It didn't take a genius to see she was genuinely terrified. I stood over her and said, \"Hold still, Michelle, hold still.\" I reached for the strip of tape on her mouth and said, \"This gonna hurt me more than you.\" I quickly yanked it off, eliciting a little squeal of pain from her followed by a rush of words as she sat up.\n\n\"Oh, Vincent, you've gotta get me out of here! I came by your room to see if you wanted to talk some more, and you weren't there, and then this girl showed up, and she killed Larry, and... and... I know you're going to think I'm crazy, but I think she's a... a vampire!\"\n\n\"I know.\"\n\nShe stared at me. \"What do you mean you know?\"\n\n\"Look, let's just get you out of here,\" I said, starting to untie her hands. But no sooner had I begun doing so than her eyes glanced behind me, flared up in terror, and she shouted my name just a nanosecond too late for me to avoid being tackled from behind. I rolled with the blow, and raised myself up in a three-point stance to see Tanya glaring at me. Forgetting, or else not really caring, what Michelle saw, I reacted in the natural way for a vampire to react: I bared my teeth and hissed at her.\n\nMichelle screamed. As if you didn't know she would.\n\nTanya immediately clamped her hand onto Michelle's throat, silencing the terrified girl. \"Vincent, don't you know I put that tape on her mouth for a reason?\"\n\nI rose up on my feet, utterly enraged like I never had been before. \"Tanya,\" I growled, \"you get your goddamn hands off her right now, before I tear your fucking throat out!\"\n\nTanya's wickedly sharp fingernails\u2014no, her claws\u2014hovered threateningly over Michelle's face. \"Do really think you can do that to me before I have time to do so much worse to her?\" Defeated, I could do nothing but hiss at her again.\n\n\"Vincent, you're pathetic. I want you to know that. Why do you keep insisting on fawning over these humans like this?\"\n\n\"I don't have any intention of making that girl part of my life anymore,\" I said to her, still seething. \"I just want her to have her own.\"\n\n\"Yes, her own life,\" Tanya mused. \"Her own short, mortal, human life. You want her to go off on her own, get all old and wrinkly, and then die. Don't you get it, Vincent? Don't you realize what she is?\"\n\n\"She's a human. A living, breathing human being.\"\n\n\"That's right, she's a human. A mortal. Do you understand that concept? One way or another, she's going to die sooner or later. What difference does right now make from fifty years from now?\" Of course, Michelle began struggling to pull away, but she soon realized she was only succeeding in choking herself.\n\n\"She deserves a chance to use the time she has! As short as it might be, she has a life!\"\n\n\"You really care that much about this girl?\" Tanya taunted me, circling around behind the girl she was holding. \"You really want her to live? Well you know she can! She doesn't have to die. She can live as long as she wants!\" I became confused for a moment, until she added \"...Forever.\"\n\nThat was like a hard blow to the gut. \"No!\"\n\n\"Why not? If you really don't want her to die then why not? I don't see what's so hard about this, Vincent. It's simple. We're vampires, she's human. We're immortal, she's not. We live, she dies. That's the way it is. But you can change her position, right here, right now.\"\n\nI stared at her a moment, unsure what to say. Before I could find any words, however, she went a step farther. \"I have to tell you,\" she added, tilting Michelle's head to expose her neck while her hand moved from the throat to the mouth, \"I am getting rather thirsty myself. And you know what? She's looking absolutely luscious!\" With that she ran her tongue along Michelle's neck, just as she had in the photo, and bared her fangs with a grin that was absolutely dripping with malice. \"It's your choice Vincent. Does she live, or does she die?\"\n\nI froze in mute horror. Either I turn Michelle into a vampire right here and now, or Tanya kills her right in front of me. I looked at Michelle, struggling to breathe her giant panicked breaths, her eyes the size of golf balls, her sweat dripping down off her cheeks. What could I do?\n\nFor a moment, all I could feel was hatred. Utter, absolute seething hatred for Tanya. But I realized then that that wasn't going to get Michelle out of this. There was nothing I could do but play Tanya's sick game. Have Michelle die now, or live forever like me.\n\nOn careful comparison, I realized there was only one choice I could make.\n\n\"All right... give her to me.\"\n\nTanya grinned wider, and untied Michelle's feet. She stood her up on the floor, and with one quick shove Michelle was in my arms. At bared my fangs at the girl, who was now too panicked to even scream, and cast a glance at Tanya. She gave me an approving nod.\n\nGee, I thought, that was almost too easy.\n\nI shoved Michelle aside and leapt with a feral growl at where Tanya was standing. Except when I landed, Tanya wasn't standing there anymore. In the time it had taken me to leap, she had flickered over to where I had shoved Michelle, whom she was now holding again. \n\n\"I was so hoping you'd do that,\" she mused in the most sinister way I'd ever heard anyone speak. And with that she took hold of Michelle by the hair and exposed her neck again, baring her fangs, and this time not to just threaten. She was going for the kill.\n\n\"NO!\" For a heartbeat, time seemed to freeze. Even if I flickered, there was no way I'd get to her in time to stop Tanya from sinking her teeth into her.\n\nI didn't need to.\n\nIn a flash, an indistinct figure tackled Tanya from behind. The two shapes crashed into the wooden desk Michelle had been laying on, smashing it. As the movements ceased, I was able to make out a black waterfall of hair and a shimmering pair of golden eyes. Elizabeth looked at me briefly, then turned back on her foe. The two vampire women raised themselves up, snarling at each other like a pair of wild dogs. And thus ensued one of the most outrageous, yet simultaneously scary things I'd ever seen: a vampire catfight. These two women proceeded biting and clawing at each other, getting plenty of blood all over the floor, until Tanya started gaining an edge and punched Elizabeth as hard as she could into the wall.\n\nI had to act quick, as the murderous brunette stepped over to her fallen opponent. I suddenly noticed the smashed desk, and flickered over to it to snatch up a sharp piece of the broken wood. Contrary to popular myth, a wooden stake isn't necessarily what you'd need to do what I was about to do, but it would still do the trick.\n\nTanya stood fuming over Elizabeth, her foot planted on Elizabeth's throat and her clawed hand poised to strike. \"You little bitch!\" was all she had time to say before I plunged the sharp piece of wood through her back.\n\n\"Tanya,\" I said, \"you ever think maybe living forever ain't all it's cracked up to be?\"\n\nAnd then I let her drop.\n\nI extended a hand down to help Elizabeth up, which she accepted. \"You okay?\"\n\n\"I'll live.\"\n\nI inwardly noticed the irony of that response. Yeah, she'll live. She's a vampire.\n\nOn that I turned my attention to Michelle, who'd been watching the whole scenario play out in frozen horror. I began moving towards her. \"Michelle?\" As I drew near, she began to panic, slowly backing away, and then turned and ran up the steps, out the door, and out of my life. Probably wise.\n\n\"Are you okay?\" Elizabeth asked me.\n\nAfter a few seconds' hesitation I managed one word: \"Physically.\"\n\n***\n\nMost of what happened that day got cleaned up without too many humans walking away with any questions. Larry was dealt with in the same way as any student on campus who gets killed by vampires. My dorm room was restored to normal conditions, and under the circumstances, I was able to get off fairly easy for killing Tanya. I was suspended from returning to the SVA for an indefinite period, which all things considered isn't all that bad. Patrick could have done a lot worse.\n\nThe worst of the damage was done to me. I spent the next three days and nights brooding over it. On the night following the incident, Alicia came by to give me some comfort, which she did. I was happy to have her there, I won't deny that. But my mind still continued to churn, and the thoughts I was churning up weren't happy ones.\n\nMichelle had gotten off okay, that was true. It could have been so much worse. But what if something like this happened again? Tanya certainly wouldn't be the only vampire who thought the way she did, and Michelle was hardly the only human I still had ties to. But none of them could be part of my life anymore; they were enemies. Prey. Any contact with them was just asking for trouble. Just asking for death.",
        "That was what my life was all about now, I realized. Death. Once again, I remembered the young lady with the dog, and the hooker on the street. Everything I'd said to Tanya about Michelle held true with them just as much, and yet I'd killed them both. And I'd enjoyed it. I'd taken away the lives they deserved to have, and I'd attempted to justify it by saying I needed to. It was true, I did need to. But I understood now that that was no justification. I was as much a killer as Tanya was. Humans were my enemies. All of them.\n\nBecause I'm not human anymore. I'm a monster. And monsters shouldn't be allowed to live.\n\nI was finally coming to my ultimate decision when Elizabeth knocked on my door at around eleven-thirty on the third night\u2014which as of right now as I write this was about four-and-a-half hours ago. I let her in; I really did want to talk to her.\n\n\"Hi, Elizabeth. What's up?\"\n\n\"I just wanted to see if you were okay.\"\n\nI paused a moment, moving around the room. \"No,\" I said at last, \"I'd say I'm pretty damn far from okay. And I thought you should know I've decided to do something about it.\"\n\nHer head tilted and she looked at me curiously. \"What's that?\"\n\nI looked at her gravely. \"I'm going to climb up on the roof of this building... and I'm going to watch the sunrise.\"\n\nHer eyes flew open. \"No!\" she gasped. \"Vincent, don't be ridiculous!\"\n\n\"I can't keep living like this, Elizabeth. I can't live forever as a predator, knowing that all the people out there, the people with lives, with loved ones, are my prey. I've tried to look around it, but there's no changing the fact that I'm a killer now.\"\n\n\"You don't have to be!\" she protested. \"We have plenty of blood that people have given up voluntarily\u2014\"\n\n\"It's not just the blood! It's the hunter's instinct! It's too strong!\"\n\nShe sighed. \"Look, we can work this out. I mean, if you're talking about the first night you changed, I know it's unfortunate, but it happens\u2014\"\n\n\"I'm also talking about last Friday, Elizabeth. I killed again on Friday night.\" She said nothing. She just stared at me in surprise. \"I went out hunting that night, and I killed someone else. And it felt good when I did. And it was all so that I wouldn't do exactly the same thing to that girl I knew who we saved from Tanya the other night. It didn't matter who I did it to; my body wanted me to do it! And sooner or later, I'm going to do it again, unless I end it now.\"\n\n\"Vincent, no!\" she protested again. \"Vincent, please, it's okay, you're not a monster\u2014\"\n\n\"YES I AM!\" I roared, wheeling around at her. \"That's precisely what I am! That's what you turned me into!\"\n\nThat's when I saw the little sparkle running down Elizabeth's cheek. I knew then that I'd hit the wrong nerve; I never knew I was capable of making Elizabeth cry. Without a word, she turned around and started heading back for the door. I decided not to watch her leave, and turned melancholy to the window.\n\n\"Vincent,\" I heard her say. I turned, and saw she had stopped halfway to the door, but still had her back to me. After a long pause she finished, \"...I'm sorry.\" For a moment that was all. And then she went on, \"I'm sorry I turned you without asking you first. That was very presumptuous of me, I know that now.\" After another brief pause she finally turned to face me. \"But I'm not sorry I turned you.\"\n\nI was beginning to feel a little softer now, and took a few steps towards her. She went on, \"We both know I'm not the kind of girl who likes to commit. But of all the boys I've been with, I don't think any of them have meant as much to me as you do.\"\n\nFeeling almost on the verge of tears myself, I took her into my arms, and felt her return my embrace. \"You're the best friend I've ever had,\" I whispered. \"But you know you're not going to change my mind about this.\"\n\nI heard a sniffle, and she sobbed, \"I know.\"\n\nI released her, and she headed for the door as I sat at my desk to write out what remained of the story you've been reading, which I'd begun earlier that day. Just something to leave behind.\n\nBefore the door opened, I heard her ask, \"What do you want me to tell Alicia?\"\n\nI turned around in my seat; she turned her head to look at me. After a moment's hesitation, I finally said five simple words.\n\n\"Tell her I love her.\"\n\nShe nodded, and walked out the door and closed it behind her. As I picked up my pen and began writing, I heard her slump against the outside of the door and begin crying intensely.\n\nI think she's gone by now. She should be, anyway. And I'm just finishing, too; not long now until sunrise. Once I'm finished here, I'm going to leave it here for someone to find; I don't really care who. Then I'm going to climb up to the roof and wait to see the sun for the last time.\n\nI bet it'll be beautiful.\n\n~~~~~~~~~~~~\n\nWell, it's now four in the afternoon on the next day, and I'm still here. Yes, something did ultimately change my mind, and since you've read this far already, I might as well explain what happened.\n\nI was standing on the roof. Not much time left. I was thinking I'd picked a magnificent way to meet my end; there are worse ways to go than looking into a scene of eternal beauty.\n\nShe read my mind. \"You're probably thinking it's going to be beautiful, aren't you?\" I turned around, and saw Alicia standing there. She shrugged. \"Elizabeth couldn't keep her mouth shut.\"\n\nI chuckled mildly in spite of myself, shaking my head. \"Then I suppose she told you my reasons.\"\n\n\"Yeah.\"\n\n\"Then you know you're not going to get me to come inside.\"\n\n\"Not why I'm here.\"\n\nA bit surprised, I turned my head to look at her as she stepped up beside me. \"I'm not here to give you the whole 'you've got plenty to live for' speech,\" she said. \"And I'm not here to beg you to come inside.\" Her lovely sapphire eyes looked solemnly into mine as she said, \"I'm here because I love you. And if you're going to stand out here and wait to burn, then I'm staying with you.\"\n\nNow it was my turn to protest. \"No! You can't!\"\n\n\"And you can?\" she snapped. I found any other words I might have had cut off in an instant. \"Do you happen to remember Julie, my roommate? The one I killed? I'm just as much a killer as you are, Vincent! I'm a vampire too! I have every bit as much reason to be out here as you do.\"\n\nI didn't know what to say. But she wasn't done yet. \"I'll follow you, whatever you decide to do. If you still insist on staying out here, then we burn together.\" Then came the dramatic pause, before adding, \"All three of us.\"\n\n\"What?\" I began frantically looking around the roof. No one else was there. \"What do you mean, all three of\u2014\"\n\nMy breath caught in my throat as I noticed the way her hands were resting on her belly. I pointed a finger at it, and gasped, \"You mean\u2014\"\n\nHer response was a smile and a nod. \"So like I was saying, I'll stand by whatever you decide. But I am kind of hoping you'll change your mind here, so we can have this little vampire together.\"\n\nI paused a moment; then in a flash, I grabbed her, pulled her to me, and kissed her. I needed no further incentive.\n\nWe found Elizabeth waiting for us in the doorway when we returned inside. She actually looked genuinely surprised. \"Wow, I didn't think you'd actually do it!\"\n\n\"I didn't,\" Alicia said, lightly patting her belly. \"Our baby did.\"\n\nElizabeth's jaw dropped. \"Your\u2014you mean\u2014\" When Alicia smiled and nodded, Elizabeth's eyes flew open wide and she squealed, \"OH MY GOD!\" as she ran to us and threw an arm around each of our necks. \"I love you guys!\"\n\nAlicia and I returned to my dorm room, closing the blinds as tightly as we possibly could, and fell asleep together on my bed; we were tired, and decided to let any sweaty stuff wait until after some rest. I woke up first a little while ago, and decided to finish writing out this part here. But it looks like she's awake and ready for me now. So if you'll excuse me, Alicia and I would really like to be alone for a while.\n\nTHE END \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nI appreciate any feedback I can get; it's the only reward I get for my work.\n\nBe sure to also check out: Blood Rose, a prequel story starring Elizabeth! "
    ],
    "authorname": "icehead",
    "tags": [
        "vampire",
        "succubus",
        "college",
        "incubus",
        "bloodsucker",
        "coed"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/young-blood-ch-05"
}