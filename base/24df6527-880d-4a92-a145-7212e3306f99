{
    "title": "Self-Realization - The Cabin",
    "pages": [
        "Note: This story uses italics to signify written conversations.\n\nFirst, some background information that might explain some peculiar language in the story. I'm from Sweden and I didn't learn English until junior high. Our teacher tried to teach us British English, but we got most of our TV-shows from the US, so our vocabulary and grammar is a bit of a mix between the two. That said, I felt I had to write this story in English and share it here as a \"Thank you\" to all the amazing writers here that have made some long tram rides bearable. A special thanks goes out to \"ChancesAre\" who gave me some valuable advice as well as some English grammar lessons =)\n\nThis story takes place in Sweden and some of the smaller details might be unfamiliar to the international reader, but I'll try to explain them in the story. The story itself is a mix of my fantasies, experiences, and observations during my life. Making up the story in my head kept me awake at night, so I had to write it down. The story is divided into several Chapters, but please start from the first Chapter.\n\nChapter 1\n\nThe snow was really coming down hard and fast, great clumps falling as if angels were having a snowball fight. It might seem like a bit of a clich\u00e9 to start with a description of the weather, but it bears some importance to the story.\n\nThe aforementioned weather was viewed through the standard two-paned window of the cabin I was currently holed up in, licking my wounds after a spectacular breakup. My ex, Sofie, was the love of my life, or so I thought until she slowly drifted away from me into the arms of another man. Was I too complacent in our relationship? Maybe, but that didn't give her the right to take the coward's way out without even trying to talk to me about it.\n\nWe met two years ago, almost to the day, on a ski trip to S\u00e4len (Swedish budget version of Aspen or St Moritz). I immediately fell for her quick wit, blazing red hair and vibrant personality, at least that's what I told her when she asked. Truth be told she had a marvellous body that I spent the next three days admiring from afar. On the fourth day I worked up enough courage, with the help of some beer in the after-ski lodge, to ask if she wanted to go out for a fika sometime (Swedish pastime including coffee and any kind of baked goods). She looked me deep in the eyes and said with a purring voice:\n\n\"I've seen you sneaking peeks at me, and I might be guilty of the same. How about we skip the tedious \"Getting to know each other\" step and just go to your hotel room and fuck like animals?\"\n\nShe'd been sneaking peeks at me. Me? Ok, I'm pretty easy on the eyes. Dark brown hair, brown eyes, 6'1\" and reasonably fit for a 33-year-old IT-manager. One could call me ruggedly handsome but there were certainly other \"Hunkier\" guys around. Not one to pass up an opportunity like that though, I quickly and eloquently responded:\n\n\"Uhm...yeah ok!\"\n\nAfter that trip we were inseparable, for a while at least. I felt so great when I was with her and I really started to live my life again. My work had slowly taken over my life until it was all that I was. With Sofie, I finally woke up from my nightmare of being a corporate drone. It might sound a bit overly dramatic right? I had a job that was fulfilling and paid well, really well, but I was starting to notice a definitive shift in my social life.\n\nI started my IT-career as a helpdesk agent for a large company in Gothenburg. I didn't have any college degree or anything like that, but I was definitely a computer nerd and could run circles around the existing staff when it came to all things computer and application related. It probably helped that I was a punk rocker at heart and still had the arrogance of youth in me, but managers started noticing me. I didn't \"Sit down in the boat\" as one manager said, I didn't conform to their rigid routines and thinking.\n\nWhen I got called into my manager's office, I thought I was going to get fired, but somehow, I got promoted instead. My manager told me that someone normally gets fired for breaking that many routines and rules, but since I reported every infraction, why I did it and why I shouldn't have to do it in the first place, the person getting fired was the stuffy old guy that made the routines to begin with. I was just being an arrogant smartass, but they saw it as a \"Solution oriented free thinker\" and promoted me...I could live with that.\n\nThe promotion inspired me to actually care about my job and I was quickly climbing up the corporate ladder, leaving such things as my punk rock band, my nerdy friends, and my comfortable lifestyle behind. It was replaced with relaxation tapes, cutthroat career games and eating granola bars on the treadmill while listening to corporate tech news. I was slowly dying inside.\n\nMy social life was pretty much hanging out at the cool clubs with the right people for my career. In Sweden we have a saying: \"Lick upwards, kick downwards\", and that was pretty much what I was doing. Even the ski trip was more of the same, but my plans got derailed the first time I laid eyes on Sofie.\n\nAfter I met Sofie, I sort of found myself again. It sounds corny as hell, but when I got home after the trip, the first thing I did was to dig up my old punk vinyl's and play them for hours, screaming along with the lyrics with a shit eating grin on my face. The police eventually showed up and I was close to shouting \"NAZIPUNKS FUCK OFF!\" but I woke up from my revelry enough to give in to their polite demands to lower the volume.\n\nFrom that day, I gradually started to live again, but I unknowingly also started to lose appeal for Sofie. A mutual friend, Anders, later told me that one of the things she was most attracted to about me, was my career and all the things that came with it. I ain't sayin she's a gold digger, but she ain't dealing with no broke...you get the point.\n\nSo, it's kind of ironic, she started me down a path of self-rediscovery, but that path also led away from her. I started losing interest in my job and she started losing interest in me.\n\nIt all culminated when I'd finally had enough and quit my job. I'd like to say that it was one of those \"Falling Down\" scenes, but it was more of a polite meeting where both parties were kind of glad of the outcome. I got a pretty large severance check since I volunteered to sign over all the custom applications, I'd developed for them, so money wouldn't be a problem for a couple of years at least.\n\nI came home with a bottle of champagne to celebrate my newfound freedom, but instead of support and joy from my beloved, I got scorn and ridicule. The illusion faded and I saw the real elitist, power hungry woman for the first time. I really didn't like what I saw. When she said she was having an affair, just to mock me, it was just the icing on the cake. I threw her out that night. I don't know where she went, and I didn't care, I was just numb. I'd like to say that I threw all her stuff out the window while shouting profanities, but instead I just quietly and politely packed her things in cardboard boxes. We're polite in Sweden, very polite.\n\nI didn't fold her clothes though, HAH!\n\nThat night I drowned my sorrows with a six pack of beer and Final Fantasy VII, all the while wondering where all my former friends were. I fell into a hole. I discovered all the services you could order to the door, so I hardly left my apartment. I binge watched all the TV-series I'd been too occupied to watch before, played all the games I'd missed, but my life was empty. I was on the right path before the breakup, I had a plan, but that plan got derailed when she tore my heart out. I'd like to blame her for my inability to get up and do something about my life, but truth be told, I was a bit afraid of the situation I'd put myself in.\n\nOne afternoon in early December, two months after Sofie left, our mutual friend Anders called me. After the normal platitudes he just asked me:\n\n\"How shitty is your life right now Peter?\"\n\nA bit shocked by the question, and that someone actually cared to ask it, I answered truthfully:\n\n\"Not shitty enough by far to end it, but pretty shitty. On a scale from one to elephant dung, I'd say a solid cow pile,\" I responded with a heavy voice.\n\n\"Wow, you really know your shit, pun intended. I've been there man, takes a while to get out of the hole, unless someone helps to dig you out. I'm surprised it took you this long to realize what an utter cunt Sofie is.\"\n\n\"HEY!\" I shouted angrily, reflexes forgetting my situation.\n\n\"Really? You're gonna defend her now?\" he asked incredulously.\n\n\"...No... But you knew her before me, why didn't you warn me?\" I whined.\n\n\"Warn you about what? It's your lives to live as you two choose. I'm your friend, but it's not my responsibility to tell you how to live your life.\"\n\nWell, he had a point. Anders is many things, subtle ain't one of them and that's why I like him, I guess. Zero bullshit. I sighed and gathered myself:\n\n\"Sorry, I'm not used to speaking to a living person.\"\n\nI'd been cooped up in my apartment for a couple of months now and the only people I'd met were delivery persons.\n\n\"No shit Sherlock. How many times have you been outside since the breakup?\"\n\n\"Does the balcony count?\" I asked hesitantly.\n\n\"No, it fucking doesn't, you moron!\"\n\nI heard him grumble something under his breath and sighing:\n\n\"Sorry, it just pains me to see you like this, it's kinda pathetic. You can't let her do this to you.\"\n\n\"Well, it's not just her... I kinda quit my job and now I don't really know what to do. I had some plans, but they all included her...\" I trailed off.\n\n\"Yeah, I know about the job, they've been trying to poach me to fill the vacancy. I'm not touching that job with a ten-foot pole though. I don't know how or what you did there, but it seems like they're starting to realize how truly fucked they are without you. If you went back, they'd welcome you with open arms filled with more money and bonuses,\" he chuckled.\n\n\"Shit...if there's one thing I can take away from this whole ordeal, it's that I don't want that life.\"\n\nAs I said it out loud, my mind went clear for the first time in a long time. I really didn't want to go back.\n\n\"Seems like you learned something then, something stupid, but who am I to criticize,\" he chuckled.\n\n\"Says the man who can't even program his TIVO,\" I said jokingly.\n\n\"Ha-ha, got me there. I actually called to offer you something to get you out of that hole. You know I'm on the board of that outdoor sports association, right? Well, they have several cabins in the forests around Gothenburg. They're mostly used by members practising orienteering, kayaking, terrain running and shit like that. Me, I usually just use them to get away from people and the city for a while. Well, the board made me caretaker for the cabins, so I have all the keys now. How would you like to come out into nature a bit? Get some fresh air and a fresh perspective on things?\"\n\nYou must understand something now about swedes, we love the outdoors, regardless of weather, so my reaction maybe wasn't what he expected:\n\n\"Really? A cabin in the woods? Are you high?\" I asked dryly.\n\n\"I thought you'd love the idea. You're always talking about your time in the boy scouts and the compulsory military training.\"\n\n\"Yeah, but that was in another life,\" I tried explaining.\n\n\"The life you say you are returning to?\" he shot back.\n\n\"Well...got me there, I guess. But I've got nothing to wear,\" I whined pathetically.\n\n\"Wow, that was the lamest excuse I've ever heard. I'll give you a couple of seconds to find your balls and come up with another excuse,\" he said while laughing his head off.\n\n\"...fuck you!\" Yes, eloquent, that's me.\n\n\"You kiss your mama with that mouth? Stop acting like a baby now and take the offer. I really think that it will help you get out of your funk. I promise,\" he pleaded.\n\n\"Ok, I'll go, just to shut you up,\" I said with a smile on my lips. I was touched that he cared, and I was really starting to warm to the idea of sometime in the woods.\n\n\"I'll keep this off the books since you're not a member of the association, but if you go there the weekend after New Year's, there won't be a soul there, I promise.\"\n\n\"Cool, thanks man. I really mean it, thank you Anders. Nice to know I've got at least one friend out there.\" I started to tear up, but thought better of it, Anders would never let me hear the end of it.\n\n\"You've got more friends than you know, if you ever bothered to go outside and look.\"\n\nMaybe he had a point.\n\nWe spoke some more about life, the universe and everything, but hung up when my growling stomach threatened to drown out my voice. Hmm, appetite, that was something I hadn't felt in a while. When there's a black hole in your stomach, threatening to turn you inside out with hunger, there's only one thing that can get the job done, a \"D\u00f6ner Kebab Pizza\" (thin crust pizza with the usual tomato sauce and cheese, topped with thin, grilled shavings from marinated pork neck and a spicy sour cream-based sauce drizzled liberally over the whole pizza. It might sound disgusting to you, but you probably eat baloney, so what do you know about delicacies?)\n\nMy only problem was that the best kebab pizza was at a place that didn't deliver to my door. Terrified by the prospect of going outside, but spurred on by my lust for this ambrosia, I cleaned myself up the best I could in a short amount of time. Shaving was out of the question since my hands were shaking so bad from hunger, but hipsters are the new thing in Sweden, so no one would notice. I grabbed a flannel shirt and some ugly sunglasses just to blend in better. God bless hipsters, making normal people look trendy when they can't be bothered that day.\n\nDecember went by fast now that I had something to look forward to. Christmas was the same awkward family affair it usually was. We didn't get along that well due to my passive aggressive, bitter, slightly alcoholic mother. My father just looked the other way and occupied himself with his record collection. My younger sister was the smart one, she fled the country as soon as she was old enough and was now making a living as a travel and food blogger. So, after choking down some awful meatballs, pickled herring, and lutefisk, I quickly excused myself and fled to my own home.\n\nNew Year's Eve was spent alone on the balcony, testing my new winter clothes, and watching the fireworks over the Gothenburg straits. One could accuse me of being a bit over enthusiastic about the trip to the cabin, and one would probably be correct, but I didn't have much else to focus on. Green Day said it best: \"When masturbation's lost it's fun, you're fucking lonely\". So, I saw the trip as a new project, and I love new projects. I bought all the equipment I needed, made a menu for the weekend, checked the weather forecast, printed out some orienteering maps of the area, downloaded music and movies that would be appropriate for the setting. It was mostly Johnny Cash, slasher movies and Twin Peaks. No romcoms for me on this trip.\n\nThe departure day finally arrived, and I got into my trusty old Volvo V70. My former colleagues teased me about the car, saying I should get a car to match my income and social status. I replied that I didn't need to show my penis size with my car, the one I got is large enough and well used. Wondering whether I was talking about my dick or my car, my colleagues never bugged me about it again. Ol' Betty and I got along just fine. Every time I got into the car, it felt like putting on my favourite slippers.\n\nSo Ol' Betty and I happily slid around on the small forest roads towards the cabin. There was quite a lot of snow on the ground this year and there was more to come according to the weather forecast, but I didn't mind being snowed in. Due to my over enthusiasm, I had enough food and drink with me to last a couple of weeks and the place did have electricity and a phone, so I wasn't worried.\n\nWhen I finally arrived, Anders' qualified guess proved to be correct. There wasn't a single person, car or building for as far as I could see. I couldn't see very far though since I was in a small clearing where the house stood, surrounded by a thick forest of pines and firs. There was a small frozen pond just next to the house as well, probably for bathing in the summer and maybe in the winter as well.\n\nThe house itself was a one storey house with a cellar, about 1200 square feet in size, with a large, roofed porch where you could brush off the snow and dirt before going inside. I found the key that Anders had hidden and went inside. It smelled of wood smoke and old cabin, two of my favourite smells. I noticed that the interior designers probably had taken a very long vacation, about 50 years long, but that comes with the territory when you have an association owned cabin.\n\nThe hallway was more of a corridor that stretched forward. On the right side there was a stairway down to the cellar and on the left side a lot of pegs to hang your clothes and an ancient looking drying cabinet. A couple of steps down the corridor there was an office on the right and the kitchen to the left. Straight ahead was the large common room, complete with a dinner table to the left near the other entrance to the kitchen, a large sofa set to the right, and in the middle, a large open space in front of a fireplace and some large panoramic windows facing the pond.\n\nI stopped to take in the ambience a bit and noticed that it was noticeably warmer in here. I saw some glowing embers in the fireplace and then the bottle of whiskey and note on the mantel. It was from Anders and just said: \"Whiskey doesn't heal a broken heart, but it sure helps.\" Too bad I hate whiskey.\n\nI got settled in pretty quick, fetched all the gear from my car and made myself at home. The common room had two more doors that I didn't notice at first, one on each side, that lead to the sleeping quarters. Four standard bunk beds in each room with some wardrobes and a dresser, nothing to write home about, but good enough for a weekend, I guess. I actually got a bit nostalgic thinking back on my time in the military service.\n\nI explored the rest of the house and found a lot of candles that I spread out around the common room. Who says you have to be a girl to find candles cosy? The cellar was a bit smaller and had a water heater, washer, and dryer in one room, three toilets, a shower room, and a large sauna. We do love our saunas in Sweden, not as much as in Finland, but still. It was turned on, probably by Anders as a gift for me. Maybe later. There was also a door opening out towards the pond, which made sense due to the sauna.\n\nI fixed myself some food and ate it in front of the fireplace where I'd started a small fire. I had to drag a huge high-backed armchair, you know one of those English leather ones, in front of the fireplace, but it was worth it. I also got into my new one-piece, a garment I wouldn't be caught dead in normally, but anything goes in the forest I reasoned.\n\nSo, there I sat, staring out the windows as darkness fell, feeling the darkness falling over my thoughts as well.\n\nChapter 2\n\nThe heavy snow had transformed into a terrible snowstorm while I'd been sitting there nursing my whiskey. I know I said that I hate whiskey, but I decided to follow Anders's advice when the dark thoughts threatened to overwhelm me.\n\nI was sitting there in my one-piece, trying not to choke on the whisky when the front door flew up in an explosion of snow and arctic winds. I quickly scrambled out of the armchair, grabbing a fire poker as I saw three snowmen piling in through the door. Two of them quickly tried to drag the door shut, pulling against the malevolent wind and packed snow. The third just laid there on the floor gasping, covered in snow, with a ludicrously large backpack threatening to crush him. I just stood there, watching their struggles. When they finally managed to close the door and slump to the floor with their backs to it, it dawned on me that they were all female. They noticed me at the same time, and all started laughing their heads off. I failed to see the humour of the situation, until I realized what they must be seeing.",
        "There I was Standing in my blue one-piece, with a whiskey in one hand and a fire poker in the other, trying to look menacing in a faintly martial art-ish stance. No wonder they couldn't contain their glee. I quickly put away the fire poker and nonchalantly leaned against the chair, trying to salvage some of my dignity. I tried to think of something to say to break the ice, something witty like \"Of all the cabins in all the forests in all the world, you walk into mine?\" but my brain chose another path:\n\n<br >\"Uhm...you come here often?\" As soon as I uttered the words, I cursed my brain's betrayal.\n\nThe women, who'd settled down a bit by now, exploded in a new bout of raucous laughter. Discretion being the better part of valour, I quickly fled to my room to change into something more presentable, like a pair of sweatpants and a hoodie. When I came back, they were mostly back to quiet chuckles while trying to extricate themselves from their soggy winter clothes. I tried to salvage some of my dignity by helping the woman on the floor with her large backpack. It was not that large, it just looked that way on her small frame.\n\n\"What are you doing here?\" she asked. \"Sonja promised that there wouldn't be a soul here this weekend.\"\n\n\"Sonja? Anders's wife? I guess they're not that great at communicating then, because he said the same thing to me,\" I explained.\n\nThey'd managed to get out of their thick winter clothes by now and were standing in the hallway in their sweat stained thermal undergarments. They weren't looking very happy, but the situation was reversed now. Now they were the ones looking a bit silly, standing there in their wool socks, splotchy thermal wear, serious faces flushed from the cold, dishevelled hair, hands on their hips in an attempt to intimidate me. So I laughed, for the first time in what seemed like forever. I just couldn't stop laughing, and after a while they caved and started laughing with me.\n\nAfter a while we settled down and dried our tears. I got my first real look at them then. The small woman that I helped with the backpack, was small, not like a little person, but no more than 5' and 110 pounds maybe. She had short, bleached hair in a messy pixie cut, a petite face with a cute button nose and full lips turned up in a charming, crooked smile. Her eyes were large, shockingly ice blue with a mischievous gleam to them. \"Lisa,\" she introduced herself as we shook hands.\n\nNext, I introduced myself to the buxom redhead. I hesitated for a split second as her hair and eye colour reminded me of my ex, but I quickly gathered myself and took in the rest of her. She had a large curly red mane of hair, kind of like Merida in the Disney movie Brave, completely the opposite of my ex's straight hair. Freckled comely face, kind green eyes and a friendly smile completed the picture. The fashion industry would call her \"Plus size\" with her 5'7\" and maybe 150lb, but I'd call her nicely filled out in all the right places. \"Sofia,\" she said while we shook hands. I froze mid shake, looked her in the eyes and exclaimed:\n\n<br >\"Are you kidding me?\"\n\n\"Uhm...no? That's my name. Why?\" she asked with a confused expression.\n\n\"Sorry, not your fault,\" I sighed. \"My ex had red hair, green eyes and was named Sofie. She's the reason I'm holed up here,\" I explained.\n\n\"Well, I'm Sofia with an A, so let's not confuse me with her,\" she said with a large smile.\n\nI let go of her soft hand and turned with a smile to the last woman of the group. I was a bit surprised that we were almost on the same eye level. Being 6'1\" myself, that didn't happen very often with the opposite sex, but I didn't mind at all. Broad shouldered and athletic, but still a very feminine body. Very feminine.\n\nI caught myself running my eyes over her body and I think she noticed as well. Shit! She gave me a shy smile, blushed a bit and introduced herself as Maria. She had straight brown hair in a bob cut, with bangs almost down to her well-maintained eyebrows. It framed her beautiful face perfectly. Sharp, high cheekbones and a sharp jawline hinted at some Mediterranean blood in her ancestry. She had a movie star smile, but what really got me was her beautiful brown eyes, complete with long thick eyelashes. I smiled as well and took a step back from the cluttered and wet hallway.\n\n\"So, I guess we have to share this cabin for the foreseeable future then,\" I said a bit resignedly.\n\n\"I guess so, but don't sound so depressed about it,\" the little blond woman Lisa replied.\n\n\"Yeah, it's big enough for all of us and we'll just take one bunk room each,\" the cheerful redhead Sofia chipped in.\n\n\"I was just looking forward to wallowing in self-pity for a while and sorting some things out in my head.\"\n\n\"We'll leave you alone then until you feel like joining the living,\" the dark beauty Maria said.\n\n\"Thanks,\" I said with some regret. Why the hell would I want to isolate myself with three beautiful women snowed in with me? Your guess is as good as mine.\n\nI suddenly realized that only Lisa had been carrying a backpack.\n\n\"By the way, where are your backpacks?\" I asked Sofia and Maria.\n\n\"Well...it was snowing so much that it was really hard walking here, so we left the backpacks in a plastic sack about a mile back,\" Sofia admitted.\n\n\"You walked here from the main road?\" I asked incredulously. \"That's like four miles, in a snowstorm.\"\n\n\"Well, it wasn't a snowstorm when we started walking, and we thought the short hike would do us good,\" Sofia said defensively.\n\n\"But Lisa was carryi...\" I started.\n\n\"Yeah, but I'm not a delicate little flower like these two weaklings,\" Lisa interrupted with a crooked grin.\n\n\"No, but your stubbornness would have gotten you killed if you'd been alone,\" Maria countered soberly.\n\n\"Whatever. How about we go somewhere warm now, I'm freezing my tits off here.\"\n\nNo sooner than she said it, I was sneaking a discreet peek at them, and her nipples did seem hard enough to cut glass.\n\n\"Yeah, that might be a good idea. You want the warm showers, the sauna or the fireplace?\" I asked\n\n\"How about all three?\" Sofia said with a shiver.\n\n\"Sounds good to me,\" the other two replied.\n\n\"As you so astutely noticed, we've only got one pack between us. You wouldn't happen to have some extra towels maybe?\" Maria asked.\n\n\"We're gonna be hard pressed for dry clothes as well, I guess. At least until we get this drying cabinet going,\" she continued while examining the ancient machine.\n\n\"Well, I have some extra towels, I always pack too much, and there are a lot of blankets in the bunk room wardrobe. If you go down and start with the hot shower and sauna, I'll prepare a nice nest of blankets in front of the fireplace. Just leave your wet clothes outside the shower room door and I'll hang them up in the drying cabinet and then leave the towels outside the door. How does that sound?\" I asked.\n\n\"Sounds like a grand plan,\" Lisa admitted. \"Almost makes up for trying to Kung Fu us with the fire poker earlier.\"\n\nShe slapped my ass, gave me a wink, and then ran laughing down the stairs to the sauna. The other two giggled and followed her down the stairs.\n\nI stood there dumbfounded for a couple of seconds, then shook my head and smiled.\n\n\"This is gonna be interesting,\" I thought to myself.\n\nI busied myself taking the mattresses from the beds I wasn't using in \"My\" bunk room and laid them out in front of the fireplace. I realized that having flammable textiles that close to the fireplace was a bad idea, so I pushed them back a bit. My armchair was still pretty close to the fireplace, but leather isn't that flammable, and I was there first!\n\nI continued to build a nest of all the extra blankets and pillows I could find in the bunk room and managed to accomplish a respectable fort of fluff. Figuring that they'd probably be hungry by now, I made some sandwiches and put the kettle on the stove. It was an old stove, but I figured that the water would come to a boil eventually.\n\nTowels were the tricky bit. I had two bath towels and two hand towels, but I guess they'd have to figure something out by themselves.\n\nStealthy as a moose in a minefield, I gingerly stepped over the mounds of wet clothing and walked down the stairs. The door to the shower room was slightly ajar so I walked quietly so as not to disturb them. I put down the towels right outside the door but couldn't resist the urge to sneak a peek through the door jamb.\n\nThe layout of the shower room was pretty standard, an open double stall and a single stall with a shower curtain for privacy. When I saw all of them bunched together in the double stall, I almost swallowed my tongue in excitement.\n\nThe room was heavy with steam, but I could still clearly see that they were standing close together under the spray, massaging the cold from their limbs. It was a veritable cornucopia of wet naked flesh that got me rock hard in two seconds flat. The more I watched, the more I noticed that the massaging wasn't all about getting warm and I started to hear some moans. Or was my sex starved mind just playing tricks on me?\n\nRight now, Maria and Lisa were sort of sandwiching Sofia between them, so I couldn't see much of their bodies except Maria's toned back, muscular long legs and spectacular ass. It was one of those butts that was just too good to be true. Smooth skin, perfectly perky bubble butt that defied the laws of gravity. \"She must be a volleyball player or a Brazilian model,\" I thought to myself.\n\nMy sweatpants were tenting bad by now and I had to rearrange myself so as not to split a seam. It's not that I have a monster in my pants, more that the pants were well used. With that said, around 8 inches and pretty thick, every woman so far had been quite satisfied with my dick.\n\n\"Ok, my turn to be in the middle, my ass is still cold,\" I heard Lisa complain.\n\n\"Naaw, we can't have that now, can we Maria?\" Sofia responded and started untangling herself from the embrace.\n\nAs she did, I got my first real look at Lisa and Sofia. Lisa was a petite woman in the true sense of the word. She was short and fine limbed, but you could see a very clear muscle definition, even a faint six pack on her flat stomach above a thin landing strip between her legs. She had smallish breasts with very prominent pierced nipples, something that didn't surprise me at all considering her brazen attitude earlier. A tattooed tiger in Japanese style went from the front of her thigh, over the side of the hip and onto her back. I glimpsed a pert apple bottom before she was smushed between Sofia and Maria.\n\n<br >Sofia was almost the opposite of Lisa. She had a voluptuous body, thick in all the right places. Her red mane of hair was matched by a neatly trimmed patch covering her mons. Her butt was the first thing that caught my eye though when they untangled. It was a glorious, luscious, pear shaped, thick ass, with just a hint of jiggle when she moved. One of those asses that would have made her a million bucks if she went into porn. Maria's ass was awesome, but this was epic on a whole new scale.\n\nI subconsciously started stroking my steel rod through the fabric of my pants as she swung around and revealed her large breasts as well. I must admit that bra sizes confuse me. I thought I had a grip on the situation with the A to H sizes, but then my ex explained that modern bra sizes took width, height, and circumference of the chest into the equation. What used to be a C-cup before, could now be an A-cup on a large woman, but an E-cup on a small woman. That said, Sofia definitely had at least a D-cup with the old measurements and they almost hypnotized me with their gentle swaying. She was one stunningly sexy woman.\n\nSofia grabbed onto Maria and crushed Lisa between them. Lisa, being a bit shorter than the other two, suddenly had her head buried in two pairs of boobs. With the water coming from above, she started struggling to get free. They were all laughing, but suddenly Sofia froze, then let out a small moan. Lisa had managed to get her hand in between them and was doing something to Sofia that I couldn't see. Was she fingering her? Or was my oversexed mind making things up again? Shit, what was happening? Who were these girls?\n\nAt that exact moment, the kettle on the stove decided to sing us the song of its people. The girls paused mid-shenanigan and Sofia, who was the only one of them facing the door, looked in my direction. Fast as a horny cobra I jumped, or rather fell, back into the dark corridor outside the shower room. Did she see me? I didn't hear any angry shouts or high-pitched screams, so I guess I was in the clear. I snuck up the stairs again and took care of the kettle, cursing it for its betrayal.\n\nI started hanging up their wet clothes in the drying cabinet while furiously trying to think of disgusting things to make my raging hardon go down, but no amount of snot covered cross country skiers was gonna bring this beast down. I resigned to my fate, took a mug of tea and some sandwiches to my armchair. I put some split oak logs on the fire, for a long burn, and settled down under a blanket in the chair.\n\nThe women must have found the sauna, for I had finished the sandwiches and even had time for a short nap, before I heard them walking up the stairs. For some reason I decided to feign sleep. I guess I felt a bit guilty for spying on them and didn't want to meet their eyes right now, besides, I was still feeling a bit melancholy.\n\nI heard them titter and a little louder I heard Lisa's voice.\n\n\"Wait, I think he's asleep.\"\n\nI peeked through my half-shut eyelids and through the reflection in the large panoramic windows I could see them standing in the room behind me. Maria and Sofia were wearing the bath towels wrapped around their bodies, but Lisa had taken the hand towels and made a loincloth somehow. I made her look like a fierce pixie, I liked it.\n\n\"Did you see in the kitchen? He made us sandwiches,\" Maria exclaimed in a hushed voice.\n\n\"He did?\" Lisa said with hunger in her eyes.\n\n\"Shush little tiger, let's not wake our hero now,\" Sofia admonished her in low tones. \"Let's eat in the kitchen and come back after that.\"\n\n\"Yeah yeah,\" Lisa whispered back. \"Did you see the fucking pillow fort he built us though?\" she whispered, smiling while walking back with the others towards the kitchen.\n\nWhen she turned around, her makeshift loincloth fluttered up and I could see her cute behind for a split second before she turned the corner. Hard again. Fuck.\n\nI must have dozed off again, because the \"Fort of fluff\" was now occupied by the three women. They were nestled under the blankets and had made a cordon of pillows around them. The fire was slowly dying down to embers, but you could still clearly see them in the reflection on the windows. I guess they could see me as well If they bothered to look, but they were deep into a quiet conversation. Sofia and Maria were lying on either side of Lisa who seemed to be a bit upset. The blankets were pulled up to their chins, but you could still hear Lisa's sobbing voice.\n\n\"Why is he doing this? Why can't he just disappear? I don't fucking love him anymore and I haven't for years. Why does he have to ruin every chance of a normal relationship I've had since I dumped him?\"\n\n\"Because he's a psycho, that's why,\" Sofia answered with barely contained rage in her voice.\n\n\"Let's not dwell on this now,\" Maria said while turning Lisa's tear-stricken face towards her.\n\n\"Remember why we're here. To forget, at least for a while, all the wrongs done to us and to just have fun and comfort each other.\"\n\nShe punctuated every other word with soft kisses on Lisa's cheeks and finished her sentence with a slow, sensual kiss on her lips.\n\n\"Holy shit,\" I thought to myself, maybe I hadn't been imagining things earlier?\n\nThe kiss deepened and Sofia started to lightly kiss Lisa's neck from behind. The blankets were slowly moving around so there were definitely more things happening under the blankets. I started to slowly massage my thickening cock under my blanket. I couldn't do much more with my pants still on without them noticing me, something I desperately wanted to avoid now that I had a front row seat to one of my wildest fantasies.\n\nThe kissing went on for a while and the intensity increased, as well as the movements under the blankets. Sofia kissed her way down Lisa's neck and chest and took the blankets with her. She placed soft kisses all around Lisa's left breast, pausing to lightly lick the underside of the breast and then carefully blow on the moist skin. Lisa's nipples hardened immediately, and I could see the barbells piercing them glint in the firelight. Sofia slowly started kissing her breast again, going around the areola but not quite touching it. Lisa made some dissatisfied moans, so Sofia smiled and started darting her tongue out now and again, touching the edge of the areola, but no further.\n\nMaria joined Sofia and started doing the same thing to Lisa's right breast. Lisa, not quite knowing what to do with her arms, started softly stroking her lover's hair and backs.\n\nMeanwhile, Sofia was slowly pulling down the blankets with her foot and gradually, writhing bodies covered in a thin sheen of sweat appeared. My painfully swollen cock lurched when the blankets finally uncovered their legs, and I got a spectacular view of what had been going on under them.\n\nBetween Lisa's spread legs I could see Maria's index and long finger slowly sliding inside her soaked pussy. I attentively studied her pussy while slowly massaging my glans. It had fleshy pink inner lips, now red and engorged with excitement. It almost locked like a puckered mouth sucking on Maria's fingers. At the top of her labia, you could see her clitoris peeking under her pierced (of course) clitoral hood.\n\nLisa was really panting and moaning now, and Sofia had to pause to shush her with her fingers, but Lisa just started sucking on them in her rapturous state. Sofia retracted her fingers to Lisa's disappointment, but was placated when she felt Sofia's hand caressing her down her body towards her loins. Sofia's fingers, slick with saliva, slowly glided over Lisa's almost clean-shaven mons towards her waiting clit. Sofia paused and looked Lisa deep in the eyes with a wicked smile on her lips.\n\n\"Please,\" Lisa whispered with pleading eyes.\n\n\"Please what?\" Sofia whispered back.\n\n\"Please stroke my clit, please!\" she desperately pleaded while looking at Sofia with almost tearful eyes.\n\nSofia smiled and slowly stroked downwards, completing the journey downwards to Lisa's swollen clit. Lisa's petite muscular body tensed up and she threw her head backwards with a sharp inhalation. Maria met Sofia's eyes and gave her a wink and a smile. It must have been a silent signal for something because they both went back to Lisa's breasts and attacked her engorged nipples with reckless abandon, nibbling and sucking like there was no tomorrow.\n\nAt the same time Sofia rubbed Lisa's clit with increasing speed and pressure, pausing only to wet her fingers in Lisa's overflowing pussy. Maria twisted her hand slightly and I could see that she was curling the fingers in Lisa's pussy upwards towards her G-spot. At the same time her ring finger was gliding over Lisa's taint towards her little puckered rosebud.\n\nLisa's reaction was immediate and almost violent. She grabbed both her friends' hair and pressed them against her breasts. Her breath came in ragged short gasps, clearly heading towards a climax.\n\nThe explosion came when Maria finally slipped the tip of her finger inside Lisa's ass. She screamed out her climax with joyous abandon while going rigid as a stick. She had a beautiful smile on her lips and tears running down her cheeks.\n\nAs Lisa started to relax, Maria panicked instead and frantically reached for the blankets. With a shock I noticed that Sofia was looking at me in the reflection with a mischievous grin while pinching her own nipple. A wink was the last thing I saw before they were all covered with the blankets again.",
        "I was really confused and felt like a gigantic douche for intruding on their obviously private lovemaking. Or was it private? Did Sofia pull down the blankets on purpose? The situation was really tense and awkward. The only thing that could be heard was Lisa's hard breathing as she came down from her orgasmic high. I realized that someone had to break the silence, for not even the dead could pretend to sleep through Lisa's climactic howl.\n\nI did the mature thing and pretended to wake up in a confused stupor. I rose, pretending to see the \"Fort of fluff\" manned for the first time, making all the right noises and nonsensical mutterings. I shuffled towards my room with the blanket held in front of me to cover my badly tenting pants. I closed the door behind me and paused. I couldn't hear anything, so I placed my ear to the door and listened.\n\n\"Fuckfuckfuck! Did he see us?\" Maria whispered with panic in her voice.\n\n\"Nah, I checked now and then, and he was knocked out cold and actually drooling.\" Sofia whispered back.\n\n\"Who cares? Just fuck me again!\" Lisa purred groggily.\n\nWhispers turned to kisses and I decided to leave them to their lovemaking and go to bed. Shame softened me and I fell asleep longing for companionship and wondering why Sofia had covered for me.\n\nChapter 3\n\nSomething woke me up some time later, I don't know how much later, but I was a bit groggy so I must have been fast asleep. The room was dark, but the moon was up and shone through the window. It was just enough light to see a figure sneaking towards me, a figure with a large head of hair and some very nice curves. Sofia.\n\nHer movements were fluid and graceful, like a cat on the prowl. When she crossed in front of the window the cold moonlight illuminated her face and body and I was a bit startled. She was completely naked, moonlight playing over her smooth skin, heavy breasts swaying slightly with each step. Her friendly smile and kind eyes were replaced with a hungry look. Her soft features were somehow sharper, more feral. She noticed me looking at her and smiled, the moonlight glinting off her perfect teeth.\n\nI shrank back a bit in my bed and started saying something unintelligible. She hushed me while sneaking the last few feet to my bed. She sat down on the edge of my bed and slowly leaned towards my face as if to whisper something in my ear. I could feel her breast touching, then pressing against my chest, hard nipples felt through my blankets. I could feel her hot breath on my ear as she whispered:\n\n\"My silence has a price.\"\n\nShe nibbled on my earlobe and my whole body shuddered. She pulled back, smiling, and started to get into my bed and under my blankets. I was still a bit groggy, now with some added shock, but for once my brain didn't interfere and I welcomed her into my bed. She snaked a leg over my body and was soon lying astride body with her face close to mine. Her eyes were looking deep into mine, as if searching for something.\n\nHer cold body was slowly warming up and I became acutely aware of the fact that a naked, beautiful, sexy woman was lying on top of me. I could feel her strong thighs hugging my hips and her large firm breasts resting against my hairy chest. My focus went back to her eyes and I couldn't help but smile at her and this sudden development. My smile seemed to be what she was searching for. She smiled back and placed a feathery kiss on my lips.\n\nShe pulled back, searching my eyes for a reaction. My big, shocked smile must have been the right one because she chuckled softly and leaned in again. I met her halfway and we kissed softly. My hands started caressing her slowly, following the curves of her body but not travelling too far. Our kissing increased in intensity and she melted into my body.\n\nI could feel her pelvis starting to grind into my lower abdomen, her curly pubic hair tickling slightly. She rolled her hips a bit and I felt her wet pussy gliding over my skin. The situation, the kissing, her body against mine, made me wide awake. All of me. My cock sprang into full hardness with admirable alacrity, ending up resting against Sofia's but crack. She paused mid-kiss, smiled, raised an eyebrow, and whispered:\n\n\"Oh my!\"\n\nI smiled back and went for her neck, peppering it with light kisses and nibbles. I felt her get goosebumps as she moaned and ran her nails softly over my arm. She slid down my body slightly and change the angle of her hip so that my cock was resting against her groin. I could feel her soft, wet labia against my shaft, the heat from her sex burning against me.\n\nI ran my hand up the back of her neck, grabbed her hair loosely and pressed her mouth against mine again. She moaned into my mouth and our kissing became even more passionate. She nibbled playfully on my lips and started rhythmically rolling her hips. It was like her pussy was jerking me off, gliding over my cock and spreading her juices all over it. She would start at the base and glide upwards but stop just before my glans reached her sopping opening and then glide down again. It was making me mad with lust and I was almost shaking with the need to just ream my cock inside her. It had been a while since my last sexual encounter.\n\nShe seemed to sense my need and desperation, so she slowed down and leaned back from our frantic mouth war. As she did so I remembered her magnificent breasts that were now on display in front of me. How the fuck could I've forgotten about them? She saw where I was looking and smiled. She shimmied up my body a bit to give my mouth and hands free access to her heavenly mounds.\n\nI explored them softly with my hands first, caressing them, following the curves of the underside of her breasts. I let my fingertips softly glide over her areolas, careful not to touch her rock-hard nipples yet. I pulled her slightly towards me and placed light kisses all over her breasts and cleavage. Now she was the one moaning with need.\n\nShe slid down a bit down my body again and her gushing pussy found my cock resting on my stomach. She started rolling her hips again, but this time her pussy was gliding over my glans, trapped between my stomach and her hot sex. I could feel my cock parting her pussy lips as she slid down, stopping when the tip met her clit and then grinding back again. I almost entered her several times, but she angled her hip somehow so that it didn't happen. I was beginning to get a bit frustrated, but I hatched a small plan in my head.\n\nI had been neglecting her nipples on purpose just to increase the build-up. When she was on the top of her stroke and I was nearing her opening again, I put my plan into motion. I suddenly sucked in her nipple in my mouth while simultaneously rolling my own hip and flexing my cock a bit, so it lined up perfectly with her opening. She was so surprised by my sudden pleasurable attack on her nipple that she didn't notice my plan downstairs.\n\nBriefly interrupted, she moaned loudly and began her downstroke. My hands on her hips helped her down and I could feel my cock finally sliding into her wet, wanting pussy. She was tight and I could feel every inch of her pussy parting for me and squeezing me hard. Halfway in I could feel her begin to shake and when my cock was finally buried to the hilt, she came hard.\n\nHer rhythmically clenching pussy brought me over the edge faster than I thought possible. I let go of her nipple and groaned into her neck while shooting load after load deep into her. Sofia meanwhile had latched onto my shoulder with her teeth and was busy trying to smother her ecstatic moans. After a while we both relaxed and on a secret signal we both started giggling softly.\n\n\"I think we both needed that,\" Sofia whispered quietly.\n\n\"You have no idea,\" I replied. She leaned back and looked me in the eye.\n\n\"I kinda do, you're still rock hard,\" she said with a hungry smile while gently starting to rotate her hips.\n\nShe was definitely correct, I was still hard as a rock, YES! Her gentle movement felt awesome, and a small grunt escaped my lips. Sofia closed her eyes and seemed to relish the sensation of being completely filled.\n\n\"Fuck your cock is nice,\" she moaned and started to lengthen her strokes.\n\nShe slowly pulled off me until my glans was barely inside her. She paused, then slowly sank down on my thick cock, languishing the feel of yet again being filled. When she bottomed out, she moaned loudly, so loud that I hurriedly covered her mouth with mine in a hungry kiss. My rapid reaction was rewarded with a bitten tongue and a feral smile. The hungry look was back, and her sparkling eyes locked on to mine while she slowly started fucking me with long firm strokes. It was definitely her fucking me, no doubt about it, but I wasn't complaining.\n\nThe view was spectacular. Wild hair, hungry eyes, a small, wicked smile, daring me to try something. Her large, heavy breasts were gently caressing my chest with their swaying motion and my hands were yet again magically drawn to them. I started caressing them softly, but Sofia grabbed my hand and squeezed it hard to her breast. I caught on and started to massage them roughly to her delight.\n\nMeanwhile her pace had increased, and she was now doing a decent job of fucking me into the mattress. She had a wonderful technique where she angled her hip on the upstroke so that her clit dragged along my shaft and then reversed the angle so that my glans bumped her G-spot on the downstroke.\n\n\"Holy shit, this girl has skills!\" I thought to myself as I saw her hips effortlessly perform a perfect riding motion. I could hear her breathing getting ragged and see a small sheen of sweat forming on her brow. She was close, judging by her increased intensity, so I surprised her by pinching her nipples, hard. It was a calculated guess, and I was correct.\n\nHer eyes widened in shock and she opened her mouth in a silent scream as a violent orgasm coursed through her body. She cramped up and her pussy clenched my cock almost painfully. At last, she slumped down on my chest, still with some lingering tremors. I still had a way to go until my own release, but I figured I'd let her rest before I took control of the situation.\n\nI could feel her slowly regain her composure and smile into my chest.\n\n\"You naughty boy,\" she chuckled softly \"Taking advantage of sex-starved little me.\"\n\nI chuckled as well because I had real trouble seeing her getting sex-starved with her looks. She raised her head from my chest and looked deep into my eyes. She gave me an enigmatic smile and kissed me hard. Then she promptly slid off my throbbing member and stood up next to my bed. She leaned over, gave me a small peck on the cheek and whispered in my ear:\n\n\"This is our secret now.\"\n\nShe silently snuck away like a cat burglar in the night as I laid there, completely shocked, with my hard, pussy soaked cock, swaying like a metronome.\n\n\"What the fuck!\" I hissed through clenched teeth as she slunk out the door with a giggle.\n\nI couldn't decide if I was angry, still horny, or ecstatically happy, probably all the above. I resigned to my fate and angrily wiped off my cock with my briefs. I still had to take a piss to \"Clean the pipes,\" so I wrapped a towel around my waist and headed for the cellar.\n\nChapter 4\n\nI fell asleep with a smile on my lips and slept better than I had for a long time. I woke up to the wonderful smells of coffee and bacon. It took me a while to get my bearings, but then I remembered where I was and what I did last night. I got out of bed with a shit-eating grin and donned my sweatpants and hoodie since it was a bit chilly. I figured it would also cover my morning woody which was threatening to spear through my pants at any second. I tried to sneak out to the toilet to relieve myself before the others noticed I was awake, but no such luck. They were all sitting in the fort of fluff, covered with blankets and comforters, eating fried eggs, bacon and drinking coffee. My eggs and bacon.\n\n<br >\"Well good morning sleepyhead, nice to see you up and about, both of you.\" Lisa snickered with barely contained glee.\n\nI looked down and noticed that my penis was trying its best to imitate a tentpole. I quickly went for the toilets in the cellar, followed by their raucous laughter.\n\n\"Eating my bacon, drinking my coffee, laughing at me?!\" I thought to myself. \"When I get up there, I'll give them the lowdown on how this weekend's gonna play out.\"\n\nI steeled myself, readying for a conflict I didn't really want to start, but I couldn't just let them walk all over me either. I stomped up the stairs and headed for the common room, ready for a fight, but was stopped in my tracks by a wonderful sight. When the girls heard my stomping, Maria jumped up from the fort of fluff and grabbed a plate from the nearby table. I got a quick view of her spectacular, fit ass in a thong before she turned around. I almost swallowed my tongue when I looked up. She was standing there with a plate filled with eggs and bacon held out before her, but that wasn't what almost spelled my demise, it was her appearance.\n\nHer long, toned legs, flat stomach with a faint six-pack in that almost alabaster white skin of hers was a sight to behold, but what really stood out was her perfect breasts. She had somehow squeezed into one of Lisa's crop top T-shirts. It was supposed to just leave the stomach bare on Lisa, but on Maria's much larger frame it barely covered her breasts. After jumping up to fetch the plate though, it had ridden up and was now barely covering her nipples, showing a respectable amount of perfect underboob.\n\n\"Maria! Boobs!\" Lisa hissed.\n\nMaria looked down and quickly pulled down the shirt to a more proper length, but her stiff nipples still showed through the thin fabric of the shirt. She gave me a shy, embarrassed smile and handed me the plate before quickly diving into the fort of fluff again to cover up.\n\n\"Sorry for making fun of your predicament earlier, but it was a pretty impressive tent you pitched there,\" Lisa chuckled.\n\n\"Yeah, sorry,\" Sofia chimed in with a smile on her lips. \"Maria made you breakfast and coffee though, as a reward for your heroics yesterday,\" she continued.\n\n\"Uhm, thanks,\" I replied, confrontational thoughts already forgotten. I nodded my thanks to Maria, turned \"My\" chair around and sat down.\n\n\"And sorry for stealing your eggs and bacon,\" Maria apologised, \"We're going out to get our backpacks and food in a while, so we'll be able to restock the fridge.\"\n\nThey were all looking a bit expectantly at me.\n\n\"No worries,\" I shrugged and took a bite of the eggs. What I expected was some nice fried eggs, what I got was a mouthful of heaven. I closed my eyes and savoured the eggs. Were there some onions in there? And something smoked? Paprika?\n\n<br >\"Holy shiiieeet!\" I exclaimed, to the obvious amusement of the girls.\n\n\"Told you he would like it, Maria!\" Lisa said and punched Maria's shoulder lightly.\n\n\"Like it?\" I said as I shoved another mouthful in my face \"I fucking love it! How did you... what...did I bring the ingredients for this?\"\n\n\"Yeah, you did,\" Maria nodded. \"I rendered down the bacon, used the bacon fat to caramelize some onions and then added the eggs. You didn't have any paprika, so I improvised with some Goulash soup powder.\"\n\n\"Damn...\" I muttered and went back to the eggs.\n\n\"Yeah, Maria is one of the best chefs I know,\" Sofia explained.\n\n\"I'm not a chef!\" Maria protested.\n\n\"But you could be!\" Lisa added.\n\nThis seemed like a conversation they'd had before, so I just concentrated on my food. They all fell silent, and I could see them letting go of the conversation and restarting.\n\n\"Maria's cooking is one of the reasons I'm so fat,\" Sofia said with a smile and pinched her tummy.\n\n\"Fat? Nah. Curvy and voluptuous, maybe, but far from fat,\" I protested.\n\n\"Well, aren't you the smooth talker now,\" Sofia said with a smile and a wink.\n\n\"It's mostly because she's lazy,\" Tina explained.\n\n\"You say lazy, I say energy efficient,\" Sofia replied and leaned back in the fort of fluff, showing off her ample bosom, barely concealed by a morning robe several sizes too small. She met my eyes and gave me a secretive smile. I finished my eggs and bacon, got the fire going in the fireplace and sat down again with my coffee.\n\nWe started talking and went over the usual stuff like work, interests, and relationship status. I told them about my last job, my ex, and my journey back to my \"Old self\". I tried my best not to sound like a pathetic loser, but I still felt like one.\n\nThe girls were all friends from middle school. They were the ones left when all the popular girls had formed their groups, so they formed one of their own out of necessity. Sofia had been the strange, withdrawn, chubby, nerdy girl with absent parents. Lisa was the angry, small, late blooming, intense girl with divorced parents. Maria was the immigrant girl, having fled with her parents from Croatia during the Balkan wars. She was a shy, gangly, socially awkward girl that was prone to crying when stressed.\n\nThe girls told their stories with humour, but you could sense some old, buried feelings and emotional scars behind the jokes.\n\nSofia went on to study sociology at university but was currently working as a workplace therapist while working on a thesis in her spare time. Her work didn't leave much room for other interests or a relationship according to her, but her friends smiled and started protesting, only to be silenced with a sharp glance from Sofia.\n\nLisa didn't like school one bit and as soon as she could, she joined a vocational school to become a painter. She was hazed quite a bit due to her gender and size in the vocational school, but she started training MMA and after demonstrating some of her skills on a would-be sexual assaulter at a party, she won the respect of her peers.\n\nShe started working at a large building company but was disgusted by the male dominated construction industry. She became self-employed and received lots of contracts for restorations, detail work and painting in awkward cramped spaces. She was currently single but mentioned that she'd had a long-term relationship in the past. Remembering their hushed conversation from the night before, I didn't push for details.\n\nMaria had really bloomed after gaining her first friends in Sweden. She gained confidence and started to master the Swedish language, something that even Swedes have trouble doing. She started getting straight A: s and got a stipend from the school. When she got control over her long gangly limbs, she started playing volleyball on a regional level (Hah! Nailed it!). She was voted \"Most likely to succeed\" when they graduated high school, but her strict catholic parents had other plans.\n\nOn a vacation to their homeland of Croatia, she was married to a man 15 years her senior that she'd never met, but who was a friend of her father. Her culture and religion made her accept this and she was still happily married to this day. As soon as she said this, I heard a derisive snort from Lisa and Sofia rolled her eyes. The mild-mannered Maria jumped to her feet in a fit of anger and growled \"You two just shut up!\" through her clenched teeth. She then stomped away towards the drying cabinet in the hallway.\n\nDuring the whole spectacle I couldn't tear my eyes away from her. She had so much power, such fierceness under the surface. With her looks and demeanour, the similarities with Wonder Woman were uncanny.\n\n\"Looks like we're going out to get the backpacks then,\" Lisa sighed, extricated herself from the blankets and got up. I almost snorted coffee through my nose when I saw that she was completely naked.\n\n\"Yeah, should have warned you, Lisa doesn't like clothes,\" Sofia explained with a smile.\n\nLisa gave me a crooked mischievous smile as she sauntered over to Maria in the hallway.",
        "<br >\"Wait here a bit,\" Sofia begged and joined her two friends.\n\nAfter a hushed conversation with their heads close together, they kissed and hugged each other and the tension in the room seemed to disappear. Sofia helped Lisa and Maria get dressed in their thick winter clothes.\n\n\"Wait, weren't one of the backpacks left behind yours Sofia?\" I wondered aloud.\n\n\"As I said, lazy, but I need the training so it's ok,\" Lisa chipped in with a smile.\n\n\"Well, I'll have to thank you properly when you come back little tiger,\" Sofia purred and gave Lisa a deep sensual kiss.\n\nLisa turned beet red and flashed a look towards me. I was a bit surprised but gave Lisa a quick smile and a shrug. They piled out through the door into the snowstorm that was still going strong.\n\nSofia pulled the door closed behind them and turned around.\n\n\"I don't know about you, but I could really use a hot shower right about now.\" She grabbed a towel from the drying cabinet and headed down to the shower room. Was that an invitation? Considering the events during the night I took it as such and hurried to my room to fetch my toilet bag and the towel I'd held back. I may be a gentleman, but you can't just hand out all your towels.\n\nI put some fresh logs on the fire and headed down to the cellar. I was almost giggling with excitement, but when I entered the shower room the shower curtains to the single stall were closed and I heard the shower going. A bit disappointed I undressed and headed for the open double stall.\n\n\"Is it ok if I take a shower,\" I asked towards the single stall.\n\n\"Sure, go ahead,\" Sofia replied.\n\nUnsure of the signals, I decided to just go ahead and take a shower by myself. I felt a bit exposed in the open shower stall, but my need for a hot shower exceeded my need for propriety. As soon as I closed my eyes and lathered up my hair with shampoo, Sofia's shower stopped, and I heard her step out. Cursing my timing I tried my hardest to rinse out the shampoo enough to be able to open my eyes and sneak a peek at Sofia's sexy body. I heard her make an appreciative sound and then a small chuckle while she left the shower room.\n\n\"Shit,\" I thought to myself as I slowed down my frantic washing. I figured I'd better just do it properly and maybe do some manscaping as well. Couldn't hurt, right?\n\nAfter I finished, I turned on the sauna again, figuring the girls out in the snowstorm might want to thaw up a bit when they came back, and then headed upstairs with only my towel wrapped around my waist. I figured some fresh clothes might be nice now that I had some company, so I left the old ones in the cellar next to the washing machine.\n\nWhen I walked up the stairs, I heard some gentle relaxing music playing. I slowed down, feeling something wonderful was about to happen. As I snuck round the corner in the stairwell, I got my first glimpse into the common room and quickly pulled back a bit. Sofia was in front of the fireplace in some sort of yoga position, completely naked. Thankfully, she was facing the fireplace and didn't see me peeking again.\n\nIt was a beautiful, sexy sight to behold, and I could feel myself getting hard. She was standing in what I later learned was the \"Tree pose\", a position where you stand on one leg and raise your arms upwards. I was impressed with her control over her body, she hardly moved at all and I could see her deep controlled breathing. I was also impressed with the body itself. She was definitely fit but at the same time had some nicely placed \"Extra padding.\" The result was breath-taking, and I found myself reaching under the towel while watching her going from one position to another flawlessly.\n\nAfter a couple of minutes, the music changed, and she sat down into a lotus position. I figured her yoga pass had ended, so I slowly pulled back down the staircase. I had barely taken a step back when I heard her soft, alto voice:\n\n\"You can come up now, it must be cold in that staircase.\"\n\nI froze up with a sinking feeling in my stomach. I'd been caught, again. My manhood shrank and I could finally feel the cold she was talking about. I was freezing but I hadn't noticed while I was admiring her body. I resigned to my fate and decided to own up to my wicked act. I walked up the final steps and headed for the common room.\n\n\"So, did you enjoy the show?\" Sofia said with a displeased look.\n\nI hoped charm might soften her up, so I went for broke:\n\n\"Very much so. You, Sofia, are one beautiful sexy woman.\" I said with a careful smile.\n\n\"You seemed so at peace that I couldn't disturb you and I was just drawn to your body,\" I continued.\n\nI saw a small smile trying to make it to her lips, so I closed a bit more of the distance between us. I decided to take my chances and met her eyes:\n\n\"I'm sorry if I intruded on your private moment and I'm really sorry if you feel violated by my actions.\"\n\nI saw the smile finally reach her lips and I couldn't help but notice that her nipples were getting hard.\n\n\"Well, aren't you the eloquent one?\" she chuckled, and I couldn't help watching her magnificent breast bobbing about slightly. She caught me looking again and just laughed.\n\n\"You really can't keep your eyes to yourself, can you? You little peeping Tom.\"\n\n\"Not when your sexy body is on display, no,\" I replied with a smile.\n\nThe heat from the fireplace was slowly warming me up, but I was still shivering a bit. Sofia noticed and motioned towards the mattress that she had placed in front of the fireplace.\n\n\"Why don't you lie down closer to the fire and I can help you get some warmth back into those limbs of yours.\"\n\nNot one to pass up that kind of offer I quickly laid down on my stomach with my towel still covering my nether regions. During the whole exchange Sofia hadn't reached for anything to cover herself up so I figured she must be comfortable with her body and not at all threatened by the situation. This made me feel a bit better.\n\n\"Wait a sec, I'll get something that will help.\"\n\nShe jogged away to their bunk room and I couldn't help but yet again admire her body and the interesting things movement did to it. I found myself reacting and tried to stop it since it was a bit uncomfortable lying on my stomach. She came back with a bottle in her hand and a triumphant smile:\n\n\"Massage oil. Now get up!\" I gave her a confused look and she chuckled.\n\n\"Did you think I was gonna massage you? No, buster, you were the naughty one, now you have to repay me with a nice back massage.\"\n\nI chuckled as well and gave in to her demands. She laid down on her stomach on the mattress. She looked at my towel disapprovingly:\n\n\"You gonna keep that on? I feel like it's only fair that you get naked to.\"\n\nI hesitated for a second but acquiesced and dropped the towel, showing my turgid, semi erect cock, freshly manscaped to look it's best. Her eyes widened slightly, and she gave a low whistle:\n\n\"That's a really nice cock you got there mister.\" I blushed a bit and she laughed.\n\n\"Now get down here and start rubbing!\" she ordered with a smile.\n\nI debated in my head how I was gonna go about this. Did I sit beside her, or should I just straddle her hips and risk my cock stroking against her ass? I started sitting down on my knees next to her, but she looked at me with a raised eyebrow:\n\n\"You're not gonna be able to do a quality massage sitting there.\"\n\n\"What the hell,\" I thought and straddled her hips, careful not to drag my rapidly growing cock across her but cheeks.\n\nI poured some oil on my hands and warmed it up while taking in her sexy body from up close. She had closed her eyes and turned her head a bit to the side, making her hair spill out like a puddle of liquid fire. Her peachy skin glistened slightly in the light from the fire as I spread out the massage oil over her back and neck. Her breasts were a bit squashed out to the sides and I didn't hesitate to apply some oil there as well, figuring we were way past that line by now.\n\nI started massaging her neck and worked my way down her back slowly. I'm not a licensed massage therapist by any means, but I studied up on the subject when I was younger, figuring it was a nice way to get to touch girls. My plan worked and I got a lot of practise which paid out in full now. Sofia started moaning and sighing with content. I was rock hard by now and every time I had to reach up to her shoulders and neck, I dragged my cock and balls across her ass. It felt really nice, and I started to get worked up as well. My dirty thoughts and pleasure were interrupted by a new order:\n\n\"Now my legs. Start from my feet!\"\n\nA bit disappointed by the change, I followed her orders. My disappointment didn't last long though as I assumed my new position and had an unobstructed view of her marvellous ass and succulent pussy. I poured on some fresh oil, started with her feet, and then moved up to her calves. My kneading of her muscles caused her legs to move and as a result of this, her ass jiggled a bit and her pussy opened up to allow a small trickle of her nectar to slowly run down her labia towards her clit. Hypnotized by this extremely arousing apparition, I must have stopped massaging her. I felt her stir and when I looked up, she met my eyes with that hungry feral look.\n\n\"Don't stop.\" she hissed and laid down her head again.\n\nI continued the massage and moved up to her thighs. During the massage I noticed that there was plenty of muscle under her soft skin. She definitely had a hidden strength and was in much better physical condition than I first thought. Her flawless yoga was proof of that, I guess. As I started working on the inside of her thighs, i could hear her breathing becoming more and more ragged and I could almost feel the heat radiating from her sex. When her moaning started, I thought back to last night and decided to get a little revenge.\n\nI slowly slid both my well-oiled hands up the inside of her thighs. I could feel her tense up in anticipation, but just when she thought my fingers would go the distance and finally start massaging her soaked pussy, I removed my hands. She made a disappointed noise but fell silent when I laid my hands square on her butt cheeks. I repositioned and straddled her thighs. I started doing a deep muscle tissue massage on the outside of her butt cheek, an abrupt change from the sensual massage I just did on the inside of her thighs.\n\nShe looked a bit confused and maybe annoyed, but soon started moaning again but in a non-sexual way. I switched to the other cheek and continued with the massage on the outside. Just when I sensed she was getting a bit restless, I switched tactics again and started kneading her buns and spreading them slightly, revealing her cute little pink rosebud and her sopping swollen pussy.\n\nI heard a gasp and she started moaning again. It took all my willpower not to just ream my cock home in her waiting pussy, instead I just started sliding my hands very slowly upwards. I could hear her getting frustrated as I slid further and further up her back, painfully slow. It was all going according to my evil plan.\n\nI glanced down to check if part two of my plan was ready, and it certainly was. My cock was harder than it had ever been, and it was perfectly lined up with her pussy. I slowed down my progress up her back and I could hear her growling with frustration. Her growls turned to moans though when my steel hard rod found her opening and slowly started ploughing into her yearning pussy. I grabbed onto her shoulders and sunk my cock the final inches, completely filling her and pushing against her cervix.\n\nShe was so wet that some of her juices squirted out when I filled her and ran down my ball sack. She started quivering and moaning, pleading me to fuck her. I held still, letting her squirm on my hard cock. I couldn't hold it for more than a couple of seconds though because she was driving me mad with lust.\n\nI pulled out most of the way and then just slammed my cock back into her pussy, causing her to scream out in ecstasy. I continued to slowly pull out and then slam back in until I felt her pussy starting to squeeze my cock even harder and I heard an orgasmic scream starting low in her throat and growing in intensity. I gripped her hips instead and started to piston my cock into her, causing her voluptuous ass to ripple with my impacts. The new angle was apparently too much for her and she came hard, her clenching pussy massaging my cock almost painfully.\n\nI kept up my pace, relishing the feel of being in control and just fucking someone really hard. Sofia's orgasmic screams turned to soft whimpers and she motioned me to slow down and let her collect herself. She was almost vibrating in her post orgasmic bliss as she looked back with a very content smile:\n\n\"Thanks for that, I really needed a soft massage and a hard fuck, in that order.\"\n\n\"Happy to be of service, but we're not done yet,\" I said as I slowly started to fuck her again.\n\nShe was about to protest, but started moaning softly instead, closing her eyes, and relishing the feel of my still rock-hard cock ploughing into her swollen pussy. I grabbed her shoulders again and helped her to get into a position standing on her knees, with me on my knees as well, still fucking her from behind.\n\n\"Oh fuck! You're hitting my G-spot...fuuuuuck!\" she exclaimed while I grabbed her heavy swaying breasts from behind.\n\nI remembered her preference from last night and started squeezing them hard, pinching the nipples now and again. Fucking had never felt so great, and I felt myself coming closer to the edge while fucking her like a rutting stag. She was also rapidly coming closer to a second orgasm, but I beat her to it and had one of my most powerful orgasms ever.\n\nI almost blacked out as I pumped her full of my seed and hung on to her breasts for dear life. I moaned and incoherently confessed my love of her body, all the while kissing and nibbling on her neck. As I regained some of my senses, I could feel her nearing orgasm herself, so I executed part three of my evil plan. I pulled out my still hard cock and fell back on the mattress, smiling. Her response was immediate:\n\n\"What the fuck!\" she exclaimed as her head snapped around.\n\n\"That's what I said last night.\" I said with barely contained glee and a satisfied smirk.\n\n\"Guess I had that coming?\" she sighed as she turned around and started to slowly crawl towards me on all fours with that feral smile of hers.\n\nI started to reply but was interrupted by a lot of stomping from the porch.\n\n\"Shit!\" we both exclaimed in unison and scrambled for our respective bunkrooms.\n\nChapter 5\n\nI managed to rush into my room and close the door before I heard the front door open with a crash. I quickly pulled on my one-piece and hurried to the hallway where a familiar view met me. Lisa, in a brilliant interpretation of a snowman, was yet again lying on the floor gasping, and Maria was bracing her foot against the doorframe and pulling the door shut. As soon as they noticed me Lisa spoke up:\n\n\"What? No fire poker this time?\"\n\nWe all cracked up and I went over to help Lisa get her backpack off. Maria seemed to be doing fine, even with her huge 90L backpack, but I helped her nonetheless and was surprised by the heavy weight of it.\n\n\"Daaaamn! You think you brought enough stuff with you?\" I exclaimed.\n\n\"Well, someone has to carry all the food and drinks.\" Maria replied timidly.\n\n\"Yeah, she's usually our pack mule. Stubborn and freakishly strong.\" Lisa shot back with a smile.\n\nMaria blushed and went over to help Lisa out of her outerwear. Whatever had been bugging Maria before they went out on their excursion, seemed to have passed for now. Maria was looking Lisa deep into her eyes and it almost looked like Maria was undressing her with romantic intent.\n\n\"I'll just put away the food then? I asked aloud and then immediately cursed myself for breaking their moment. They both smiled and seemed to return to this world.\n\n\"I'll help, Maria will just crush the food with her hulk-hands\" Lisa teased.\n\nMaria rolled her eyes but smiled as she focused on getting herself out of her outer clothes.\n\nLisa and I dragged Maria's backpack to the kitchen and proceeded to unpack the food on the kitchen counter.\n\n\"There you are!\" Lisa exclaimed and reached down into the backpack.\n\nShe pulled out one of those large dildos with a suction cup at the end and smacked it down on the counter with a smile. Maria joined us in the kitchen but when she saw the dildo standing there jiggling on the counter, she hurried over with a horrified look on her face. She tried to snatch the dildo, but it was stuck fast to the counter. She applied more force and it pulled free with an audible pop, unbalancing her in the process. She fell on her ass and her face became beet red.\n\nEver the gentleman I reached down to help her up, but she hurriedly scrambled to her feet and rushed for the bunk room. Lisa and I just stood there gaping at the almost slapstick turn of events. We both started giggling discreetly so as not to embarrass Maria further, but it was hard to control it.\n\n\"It's not what it seems,\" Lisa finally said. \"It's an internal joke and strange as it may sound, we actually just use The Beast as our talking stick,\" she explained. \"You know, like in group therapy? When the one holding the stick is the only one allowed to talk?\"\n\n\"Yeah, I heard about something like that,\" I nodded. \"You have a lot of group therapy out here in the woods then?\"\n\nLisa chuckled, \"It's one of the reasons we come here actually. To work through stuff and complain about our shitty lives.\"\n\n\"I can relate,\" I replied.\n\nWe continued to unpack the copious amounts of food and beverages and stoved it away.\n\n\"Do you guys really eat this much?\" I asked incredulously.\n\n\"Yup. Apparently, I have a black hole in my stomach, Sofia can't resist Maria's cooking and Maria eats like a horse. Maria and I train a lot so our metabolism is pretty jacked up, but I don't know what Sofia does with her surplus. Probably just goes to her boobs and ass, lucky little fucker,\" she smiled.\n\n\"Well, from what I saw this morning, you have nothing to be ashamed of in that department,\"\n\nI said sincerely. Shit! Did I say that out loud? I prepared myself for the inevitable slap. Lisa just giggled though.\n\n\"Flattery will get you everywhere, Mr Johansson,\" she said with a smile and a hungry gleam in her eyes.\n\nAt that exact moment we both heard a muffled moan from the adjoining bunkroom. There was no mistaking what kind of moan it was. Knowing the state, I left Sofia in and knowing that the girls were definitely sleeping with each other, I wasn't very surprised. Lisa was a bit startled though and shot a glance towards me. I acted like I hadn't heard the moan and stowed away the last of the food.\n\n\"How about we take a sauna?\" Lisa suggested a bit hurriedly.\n\n\"Yeah, why not,\" I played along, figuring that Lisa didn't want me to know their secret. \"I started it when you were out. I figured you'd be cold as hell when you came back.\"\n\n\"Naaaw, a gentleman. Now come and sweat with me!\" She smiled and dragged me towards the cellar.\n\nI could hear some more muffled moans as I was being hurried out of the kitchen, but I pretended not to hear them, figuring I owed it to them after being a sleazy little peeping Tom. Lisa stopped by the backpack in the hallway, rummaged around in it a bit and came up with two towels before she continued to drag me down the stairs. When we got to the shower room, Lisa unceremoniously shed all her clothes before my eyes and stepped into the shower to rinse off before entering the sauna. A bit mesmerized by her tight body and the sudden nakedness, I paused for a second.\n\n\"You shy, onesie-boy?\"\n\nAs she said it, I realized my predicament, I was completely nude under my one-piece. Figuring confidence was the only way to go, I quickly stripped off my one-piece.",
        "\"Nah, just admiring your tiger and the body that comes with it.\" I shot back with a smile as I joined her in the double shower stall.\n\nNow it was Lisa's turn to pause a bit and check me out. Thankfully, my dick played along, and I was sporting a nice chubby by now, something that Lisa didn't fail to notice.\n\n<br >\"Daaamn!\" she said under her breath as she snapped out of her cock-induced trance.\n\nShe blushed a bit and met my eyes with an apologetic smile.\n\n\"Sorry, it's been a while since I saw a cock that nice.\"\n\n\"No apologies needed,\" I assured her. \"I mean it's been a while since I saw a body as fit and beautiful as yours as well.\"\n\nWe both smiled a bit sheepishly and turned off the showers. We wrapped our towels around our waists and entered the blistering heat of the sauna. The towels were not for propriety's sake, but rather to protect our skin from the heat. Sitting down on 180\u2109 (80\u00b0C) Alderwood is not exactly comfortable. I threw a scoop of water on the stones in the sauna heater and the resulting steam enveloped us as we climbed to the highest of the three-tiered benches, where the heat and steam was almost unbearable.\n\nIt's an unwritten rule in Sweden, that you always go for the top bench and see who can endure the heat the longest. It's a silly macho contest, but one that we both embraced. Sweat started running down our bodies almost instantly, but we both sat there, trying to lean back on the scorching wall just to prove how tough we were.\n\nI saw that Lisa was trying to hide some pain. The heat wasn't that painful, but then I realized that the piercings in her nipples and clitoral hood must be hot as hell and excruciatingly painful. Remembering her stubbornness, I decided that I'd better give up this contest so that she wouldn't be hurt for real. I made a show of giving up and climbed down to the bottom bench where I could finally draw deep breaths of air without burning my lungs.\n\n\"Can't take the heat, huh?\" Lisa said with a gloating smile over clenched teeth.\n\nShe stayed on the top bench for a few more seconds just to prove her superiority in the sauna battle, but then quickly climbed down to the lowest bench as well.\n\n\"Nah, just wanted to spare you the pain,\" I said and pointed towards her nipple piercings.\n\n\"Thanks,\" she replied and chuckled, knowing who the winner really was.\n\nWith the immediate danger of heatstroke now somewhat decreased, I couldn't help admiring her breasts. They weren't big, but they fit perfectly on her petite, tight body. The areolas were no larger than an inch in diameter, but she had perfectly shaped, prominent nipples, pierced by some nice-looking goldish rings.\n\n\"Hey! My eyes are up here,\" Lisa admonished.\n\n\"Sorry, couldn't help myself,\" I smiled. \"You think Maria's still mad?\" I asked gently.\n\nLisa sighed and a look of irritation or regret flashed over her face:\n\n\"Yeah, she probably is, but not with you. As you might have noticed earlier me and Sofia have some opinions regarding her life, or rather lack thereof.\"\n\n\"I kinda noticed. Is she really that religious?\" I asked carefully.\n\n\"Yes and no. She herself is not that religious, at least not when she feels safe here with us, but her parents and husband are very catholic. Whenever she's in public, at her job or any place where she thinks they might see her or where she thinks anyone that knows them might see her, she keeps up the charade. They control her entire life, and it just pisses me off that she allows them to push her down and degrade her like they do!\" Lisa was really getting worked up and you could see that this was something that she felt very strongly about.\n\n\"So why does she allow it then? I mean, from the little I've seen of her, she doesn't seem to be the kind of woman that takes shit from anyone.\"\n\n\"It's her parents that are the main problem. Her brother defected to the Muslim side in the Balkan war and converted to Islam. Her parents didn't take that so well and started making sure that Maria was gonna be this poster child of a perfect catholic girl. When they fled to Sweden, they kinda deflected their guilt and sorrow onto Maria, at least that's what Sofia says and she's the psychologist. So now they and her husband guilt trip her and break down her confidence all the time so that she'll stay at home and be the perfect little catholic wife.\"\n\n\"Damn,\" I said silently.\n\n\"Yeah...pretty much,\" Lisa agreed. She continued:\n\n\"She had an awesome future ahead of her when we graduated high school. She had the pick of any college she wanted with her grades and volleyball talent scouts were constantly present at her matches. Her parents panicked though and kidnapped her back to Croatia where they had arranged a marriage for her. She didn't even have a chance after that. Her husband is a creepy, sleazy old fuck. He's fucking useless and mostly hang out with his semi-criminal friends at caf\u00e9s. He forces her to have two jobs to support them and controls her entire life by constantly spying on her and abusing her mentally.\"\n\n\"Shit...\"\n\n\"Yeah, me and Sofia have actually talked about making him \"Disappear\", but Maria's parents would probably find some way to use that to control her anyway. Besides, we don't know shit about making someone disappear,\" she admitted with a sad chuckle.\n\n\"She probably has to work this out herself then I guess.\"\n\n\"Sofia says the same thing.\"\n\n\"Smart girl,\" I said with a chuckle.\n\n\"Fuck you!\" Lisa shot back and punched me playfully on the shoulder.\n\nHer sudden movement made her drop her towel on the bench. She didn't notice or didn't care as she sat back down and leaned her back on the side wall, facing me in the process. I followed her example, turned around, pulled up my feet on the bench and leaned back hesitantly on the hot wall. The heat wasn't that bad down here on the lowest tier, so I figured I'd survive.\n\nI kept my towel on though and discretely covered my still semi erect dick. Lisa had no such compulsions and was sitting comfortably leaned back with one leg drawn up to her chest and the other partly spread out, putting her glistening pussy on display.\n\nMy cock lurched at the sight and I could feel it rapidly growing hard under the towel. Lisa was smiling softly, watching me as I drank in the sexy woman in front of me. I could almost feel how the mood in the sauna changed and I could hear her breathing getting heavier. Mesmerized, I watched her collect a drop of sweat from her nipple, making it even harder in the process, and then proceed to suck the sweat from her finger. She then slid her hand slowly down to her other nipple and pinched it slightly, making it harder as well. Her hand continued down her chest through the glistening pearls of sweat, down her toned abs and paused just above her mons.\n\nI looked up and she was grinning from ear to ear. She raised an eyebrow and looked at my towel, clearly implying her price for a continued show. I acquiesced and slowly pulled my towel to the side, revealing my rock-hard glistening cock. Lisa nodded approvingly and continued to slide her hand over her small landing strip of pubes, down over her pierced clitoral hood, only to pause again with two fingers on either side of her clit.\n\nShe used her fingers to slowly pinch her clit, letting out a deep slow moan. She then spread her fingers, spreading her fleshy inner labia in the process, and letting a small rivulet of her juices escape from her absolutely gushing pussy. She slid her fingers further down, spreading her juices over her swollen lips and then collecting some of it on her fingers.\n\n\"See what you do to me?\" she moaned accusingly and brought her glistening fingers to her mouth to lick them dry.\n\nI couldn't hold back anymore so I started to slowly stroke my swollen granite rod.\n\n\"I could accuse you of the same'' I teased back as I slowly spread my precum over my knob with my other fingers.\n\nLisa bit her bottom lip, mesmerized by the sight of my glossy glans. She reached up with her left hand and started tugging slightly on the barbell in her nipple. She spread her legs a bit further and reached down towards her drooling pussy with her hand again. She looked me deep into my eyes as she slowly pushed two of her saliva-soaked fingers deep into her eager, wet cunt. Her eyelids fluttered briefly as she tensed up in ecstasy and let out an almost primal moan.\n\nEven though I'd had a mind shattering orgasm not too long ago, I was almost aching with need to fuck this embodiment of lust. As if she could feel my burning desire, she opened her eyes and growled:\n\n\"I need your cock inside me. I need you to fuck me silly with your hard, beautiful cock.\" She started to get up, but then we both heard the door to the shower room outside open and two giggling voices enter.\n\n\"FUCK!\" we exclaimed in unison as we both hurriedly tried to cover our respective, clearly aroused, naughty parts. We started laughing at the tense situation and Lisa whispered:\n\n\"You're not getting off that easily, I will have your cock inside me today.\"\n\nSofia and Maria came into the sauna, towels wrapped around their bodies, and quickly shut the door. They proceeded to climb to the top bench, as one does, and sat down.\n\n\"Told you they were behaving,\" Maria said triumphantly.\n\n\"Yeah maybe, but they look a bit flustered though,\" Sofia said with a suspicious glance towards my groin.\n\nI'd covered up my raging boner pretty well with my towel, so I think we were in the clear. I shot a glance towards Lisa who just sat there smiling with her breasts on display unlike her friends.\n\n\"It's just the heat,\" I replied. \"We have been sitting here for quite some time now.\" As I said it, I realized that I was getting a bit lightheaded and nauseous. I guess horniness covers up heatstroke pretty well.\n\n\"I think I need to cool off a bit actually, now that I think about it,\" I mumbled and stumbled out the door.\n\nLisa followed on my heels, probably as overheated as I was. We threw away our towels and hurried into the double stall. The shock from the cold water felt like fire running over my body for some weird reason. We both screamed like little girls and cramped up from the intense cold. Shuddering like crazy, we tried to get feeling back into our limbs by frantically rubbing ourselves with the towels. I can safely say that I didn't have an erection anymore, quite the opposite. Lisa noticed this and exclaimed:\n\n\"Naaw, poor little fella!\" She giggled and ran away naked upstairs.\n\nA bit miffed and too tired from the heat to care, I wrapped my towel around my waist and sat down on one of the benches in the shower room to relax and recuperate. Lisa came back a couple of seconds later and handed me an ice-cold beer.\n\n\"Sorry, didn't mean to insult your manhood. It was just such a profound difference in size and stature.\" she chuckled as she sat down naked next to me with a beer of her own. I shrugged and smiled:\n\n\"Yeah, I don't think you'll see him that happy any time soon.\"\n\nLisa looked longingly at my groin and frowned.\n\n\"Well, at least we've got beer,\" she concluded with a sigh.\n\nChapter 6\n\nAfter we downed our beers, we took a real shower and headed upstairs again, figuring that Maria and Sofia would join us soon. It was already dark outside, even though it was only 3 o'clock, and it was still snowing. I put some logs on the fire and lit some candles around the common room before I joined Lisa in the fort of fluff. To my dismay she'd put on some sweatpants and a hoodie. We laid there watching the fire and the snow falling outside.\n\n\"So, you got a boyfriend?\" I asked, knowing full well that she didn't thanks to my eavesdropping last night. I must admit that I was curious about her situation and what kind of douchebag was harassing her.\n\n\"Does my recent behaviour suggest that I'm in a committed relationship?\" she asked, sounding a bit testy. \"I might have been a bit...promiscuous in my youth, but I'm not a slut!\"\n\n\"Wooo, hold on now! That escalated quickly. I'm absolutely not accusing you of anything, I was just curious,\" I assured her.\n\n\"Fuck...sorry...it's just a bit much right now,\" she said silently with a quivering voice. I turned towards her and could see her eyes tearing up.\n\n\"Shit, I didn't mean to make you upset. Come here!\"\n\nI motioned for her and she threw herself into my open arms with a sob. She started crying and hugged me tight, her tears staining my one-piece. She continued holding onto me for a while, sobs wracking her body. I stroked her hair, wondering what the fuck I'd gotten myself into. After a while she calmed down and her sobs receded to sniffles.\n\n\"Who hurt you little tiger?\" I finally asked. She chuckled:\n\n\"Only Maria and Sofia call me that.\"\n\n\"And now me. You're small, you have a tiger, it's not rocket science,\" I said with a smile.\n\nShe was silent for a while, probably debating how much she could trust me, a random guy she just met in a cabin in the woods.\n\n\"It's my ex. Actually, an old ex. We were together for a couple of years, but I broke up with him four years ago. The relationship started out good, he was such a nice and cute little computer nerd that worshiped the ground I walked on. It seemed like the confidence he got from being in a relationship went to his head though. He started controlling me, making me wear weird clothes in bed and play out his weird fantasies. I loved him so I played along, figuring it made him happy. I finally broke up with him when I heard from a friend that he was bragging all over some forums about his trained sex slave.\"\n\nShe paused a bit and then continued:\n\n\"I might have walked into his workplace and slapped him silly in front of his colleagues,\"\n\n\"Good for you!\" I said with barely contained glee.\n\n\"Yeah, it felt great humiliating him in front of his colleagues. I probably helped get him fired after leaking the story to one of his female co-workers.\" She paused again and I could feel her tears falling.\n\n\"That's when the terror started. He'd been recording all the weird, twisted shit he made me do in the bedroom and was threatening to release it to my family, my customers, and some weird porn sites. He made me do humiliating stuff to get his revenge and he's blackmailing me for money. He brags about being this cool hacker and whenever I meet someone new, a friend, customer, or boyfriend, he always finds out somehow and sends them the most depraved shit he has on me. They usually say it doesn't bother them, but everyone inevitably disappears from my life. Everyone except Maria and Sofia.\"\n\n\"That. Mother. Fucker.\" I said through clenched teeth. I could feel myself burning with righteous fury and hate. \"What's his name?\" I asked in a deadpan voice.\n\n\"Richard Bergstr\u00f6m, but he hates that name and goes by LordNox on the internet. Please don't say anything to him or anyone though, he'll just take it out on me.\" she pleaded.\n\n\"Sure, I don't want to make it any worse than it is,\" I assured her, but in my head, I was plotting his death and destruction.\n\nI was still holding Lisa when Maria and Sofia came up from the cellar. They probably thought something was going on and Sofia looked a bit disappointed, but as they came closer, they saw that we were fully dressed, and that Lisa had been crying.\n\n\"She told me about lord fucktard or whatever that repulsive excuse of a man calls himself,\" I said with disgust and barely contained rage.\n\n\"Oh, Lisa,\" Sofia sighed, laid down and hugged Lisa from behind.\n\nLisa started crying and turned to her friend. I took that as my cue and got up. I walked over to Maria to give Sofia and Lisa some privacy. Maria turned to me with a serious expression on her face and dragged me closer by my one-piece. She looked me deep into my eyes, searching for something.\n\n\"Are you a good person?\" she asked finally. Thinking back on my life and the choices I'd made I wasn't sure, but I'd never do anything close to what these girls had been put through.\n\n\"I try to be one, I want to be one,\" I answered sincerely.\n\nMaria seemed to look into my soul and finally seemed satisfied with my answer. She released her grip and leaned close to my ear.\n\n\"Good, because if you hurt my friends, I will end you,\" she whispered.\n\nThe statement wasn't delivered as a threat, more like a statement of fact. She kissed my cheek and pulled back a bit. She actually blushed a bit as she spoke again:\n\n\"Now I'll cook for you,\" and with those words she hurried into the kitchen.\n\nI stood there for a while, very confused, very angry and a bit scared. I really needed to hit something, so I put on some real clothes and my outerwear and headed out to chop some wood.\n\nWhen I came back in with a large basket full of firewood, Maria was cooking up a storm and singing some foreign sad song. I took off my outerwear and hauled the firewood into the common room where Sofia and Lisa were cuddling in the fort of fluff. They were talking in low voices and giggling a lot, so I figured Lisa was alright again. I stacked the firewood next to the fireplace and was just about to sit down in \"My\" armchair when Sofia cleared her throat.\n\n\"Why don't you come lie down here with us? It must have been cold outside?\"\n\nSofia and Lisa had cleared a space between them, and I didn't want to be rude, so I joined them. We were all lying on our backs with our heads propped up to watch the fire and the snow outside. Everyone was keeping their hands to themselves which surprised me a bit considering the events of the last 24 hours. It was very peaceful though and the presence of two beautiful women instilled a feeling inside me that everything was going to be alright with my life. \"Sofie who?\" I thought to myself and smiled.\n\nI couldn't quite figure out the deal with the girls though. When they were alone with me, they were obvious with their intent to fuck me into the ground, but when one of the other girls were present, they went back to being nice and innocent. It was almost as if they were all in a relationship together and they were being unfaithful with me.\n\nI didn't like the implications of this because I didn't want to be the source of any hurt feelings or even more pain than what they were already trying to handle. But on the other hand, maybe this was just exactly what they needed, something uncomplicated and safe in a place and time that was disconnected from their normal lives. I decided that I'd leave it up to them on how to proceed and just be a passive, willing participant. A very willing participant.\n\nA loud growling noise interrupted my musings and I realized that it was my stomach. I suddenly realized that we'd missed lunch and my stomach didn't like that one bit. Lisa and Sofia were startled by the noise and both looked at me with a raised eyebrow.\n\n\"Sorry. Long day no food make stomach mad,\" I said with my best caveman impression.\n\nSofia chuckled politely and glanced towards the kitchen.\n\n\"Did Maria say what the dinner plan was?\"\n\n\"Nah, she just said that she'd cook for me,\" I replied.\n\n\"Oooooooohhh!\" they both exclaimed teasingly.\n\n\"What?\"\n\n\"You're in for a treat then,\" Lisa said smiling.\n\n\"Yeah, she must like you,\" Sofia chimed in. \"If you didn't notice it from the breakfast this morning, Maria is one helluva good cook.\"\n\nI remembered the eggs and started salivating in anticipation, wondering what delights Maria was gonna serve up.\n\n\"Maria really excels at anything she sets her mind to. It's fucking annoying sometimes, but as long as it benefits me, I'm fine with it,\" Lisa smiled.\n\n\"Yeah, too bad her useless husband won't let her do anything she wants. She has this burning drive, but he just smothers it with guilt and threats.\" Sofia reminded us.\n\n\"Her cooking skill is one of the good things that've come out of it though. That and the fact that she's the ultimate housewife and can fix just about anything in a home,\" Lisa shot back.",
        "\"Yeah, but what if she could have applied her drive and talent towards higher education, sports or something?\"\n\nThis sounded like an old argument, so I kept out of it, my stomach didn't though and growled again. They both snapped out of their argument and smiled at me.\n\n\"MARIA! WHEN'S THE FOOD READY?\" Lisa shouted towards the kitchen.\n\nWhat followed was a long string of swearing in Croatian, a pause, and then:\n\n\"Four minutes, now shut up!\"\n\nSofia and Lisa chuckled.\n\n\"She hates that question, but it's so fun teasing her. It's about the only time we can get her to curse,\" Lisa said with a grin.\n\nWhat followed was the best meal of my life, no contest. I'd eaten at some of the best Michelin starred restaurants in Sweden and even some abroad, but Maria's food hit me on a deep personal level somehow. The meal itself was a beautifully presented three course meal that seemed to be tailored towards my taste buds and my soul.\n\nThe starter was a nice piece of baked goat cheese on a toasted slice of walnut bread, pierced through with a Parma ham crisp and drizzled with acacia honey. It was served on a bed of arugula and pear salad, dressed with evo oil and balsamic vinegar. I'd had starters similar to this before, so the flavour combinations weren't new to me, but the execution was flawless. I took my time, enjoying every last morsel on the plate. It felt familiar, comforting and a bit polite. It was as if Maria was introducing herself to me. Everyone was eating in silence, but Maria was sneaking peeks at me and Lisa and Sofia were watching both of us. Was something going on that I didn't know about? I did a mental shrug and lost myself in the wonderful food.\n\nThe main course was a wonderful piece of venison tenderloin, pierced through lengthwise with lardo and wrapped with juniper smoked bacon. This was served with parmesan topped Hassel back potatoes, a chanterelle cream sauce, treacle glazed brussel sprouts with toasted almond shavings, black currant jelly and some pickled pearl onions. I was in shock. I recognized this food, but to my recollection, I'd never had a dish like this. Similar maybe, but not with this exact combination of flavours or this perfect execution. It hit me on a deep emotional level, and I almost started crying. It felt like Maria saw through my pain and gave me a long comforting hug with every bite.\n\nI looked up from my empty plate, realizing that I'd fallen into a trance while eating. Maria was looking expectantly at me, a faint secret smile on her lips. I met her beautiful brown eyes and gave her a shaky smile.\n\n\"Thank you,\" I whispered as with a slight tremor in my voice.\n\nMaria lit up with a brilliant smile and her eyes sparkled with joy. Sofia and Lisa gave each other a secretive smile and started clearing the table. Maria hurried off to the kitchen again and I was left by myself with my emotions in turmoil. \"What the fuck was happening?\" I asked myself yet again.\n\nThe girls came back after a couple of minutes, bearing the dessert. They sat back down, and Maria put a plate in front of me. On the plate was a small wedge of French chocolate cake. It looked pretty nondescript compared to the previous courses, but I was intrigued. I could clearly see that it was moist in the middle and it was topped with a chocolate ganache that seemed to cover something, chopped nuts maybe?\n\nI took a bite, and it was like getting punched in the face, repeatedly. First it was the powerful, thick chocolate taste of the cake itself, followed by the silky smooth and sweet chocolate ganache. Then came the crunch from the peanuts that was covered by the chocolate ganache, but there was something more, bacon? Wow, that was unexpected, but it made perfect sense somehow because the flavours melded together in perfect, naughty harmony.\n\nJust when I thought all the surprises had been revealed, a sweet, slow, burning chili heat started to build in my mouth, re-igniting all the wonderful flavours again. If the starter had been an introduction, the main course a comforting hug, then the dessert was an invitation to carnal lust.\n\n\"Yup. Strong, comforting, smooth, concealed characteristics and a hidden, burning heat. Nailed it, Maria!\" Sofia laughed.\n\nLisa was also smiling from ear to ear while trying to cram the whole piece of cake in her mouth. I looked over at Maria and was met by a seductive, shy smile and hungry eyes. I smiled back and she seemed to snap out of her thoughts and realized what she was doing. She blushed and hurried away to the kitchen again, mumbling something about coffee. Bewildered, I looked back at Lisa and Sofia, faces lit up with Cheshire cat smiles.\n\n\"What the fuck is going on here?!\" I half shouted; half whispered.\n\n\"I think Maria is waking up,\" Sofia replied, whispering back. \"Thank you.\"\n\n\"About fucking time!\" Lisa half shouted.\n\n\"What?\" Maria asked as she came back carrying a tray filled with coffee mugs.\n\n\"Uhm, about fucking time you came back with the coffee Maria, we're falling asleep over here,\" Lisa hurriedly lied and gave Maria a smile.\n\nI still didn't know exactly what was happening, but I did know that Maria had made a menu that was tailored towards me, tailored so well that it told me things about myself that I hadn't realized myself. Maria might have woken up somehow, still not sure what they meant by that, but I felt that it had definitely woken me up on some levels. I don't know how she could see the things she saw, to be able to interpret me into those awesome dishes that hit so close to home, but I vowed to make it up to her somehow.\n\nWe switched coffee for red wine and dinner table for the fort of fluff. We got to talking again, realizing that the meal had been taken in almost complete silence. We talked about future aspirations and dreams. Lisa talked about her plans to maybe take on more artistic work with her business or even start tattooing for a living. She also mentioned that she wanted to start fighting professionally but that her ex would almost certainly fuck that up for her if she became successful.\n\nWe all expressed our hatred for that scumbag and toasted to his imminent demise. Quick to change the subject before we all descended into brooding hatred, Sofia talked about the thesis she was writing and her current job as a workplace therapist. We all listened politely and then pretended to fall asleep at the same time. She was a bit miffed, but chuckled.\n\n\"Yeah, boring, I know. But someone has to do it.\"\n\n\"But does that someone have to be you?\" Maria asked. \"You always complain about how you feel trapped and overworked.\"\n\n\"Well, I'm just gonna finish my thesis and then I'll re-evaluate my work situation.\" Sofia replied defensively.\n\n\"So, what would you want do if you were done with your thesis and didn't have your job?\" I pushed.\n\n\"Good question,\" she sighed. \"I think I'd just wanna make people happy somehow I guess.\"\n\nWe all agreed that making people happy was a worthwhile pursuit, but we discussed how to do it and what happiness actually was for a while.\n\n\"So, what about you Maria, what do you actually do?\" I asked, not realizing the minefield I just entered. An uncomfortable silence fell over the room.\n\n\"I work in elder and mental care,\" she answered finally.\n\n\"Yup, wiping poop and wrestling loonies, living up to your full potential,\" Lisa chimed in with a bitter sneer.\n\n\"Shut up! I care for people, you little...\"\n\n\"I WANNA BE A UNICORN!\" I shouted.\n\nEveryone was stunned into silence and they all stared at me.\n\n\"...What...\" Sofia started.\n\n\"Their horn is always stiff, and Virgins ride them all the time,\" I explained hesitantly, then I gave them a crooked grin and a wink.\n\nWe all burst into riotous laughter and Lisa laughed so hard that she spilled her wine all over herself which made us laugh even harder. After a while we all settled down a bit and wiped our tears of laughter.\n\n\"A fucking unicorn,\" Lisa chuckled as she tried unsuccessfully to wipe her clothes clean with some napkins that was nearby.\n\n\"Not really,\" I confessed. \"Don't know what I wanna do. I guess I just wanna do something that makes me happy,\" I concluded.\n\n\"Like being ridden by virgins?\" Sofia asked with a smile.\n\n\"Nah, I prefer experienced women,\" I shot back with a wink. Anyone else would see it as an innocent joke, but Sofia nodded faintly with appreciation.\n\n\"Well mister unicorn, you're gonna pay for making me spill my drink all over myself,\" Lisa said as she got up and walked towards \"My\" bunkroom, shedding her wine-soaked clothes on the way.\n\nWas she implying that I should join her? I looked at the other two, but they didn't give anything away as to what was expected of me. I settled down and waited which seemed like the proper thing to do. Lisa came back a few seconds later, dressed in one of my oversized comfy T-shirts, on her it looked like a dress though. I sighed in mock surrender.\n\n\"Ok, a small price to pay for interrupting your...discussion.\"\n\n\"Oh no, mister unicorn, this is just the beginning,\" Lisa said as she walked towards me. \"You will be my pillow for the rest of the night.\"\n\n\"As long as you forget the unicorn statement?\" I tried to compromise.\n\n\"Deal!\" she agreed as she entered the fort. She went over to Maria, who was sitting across from me, crouched down, and hugged her.\n\n\"You know I love you Boo? I'm sorry. I just want you to be happy.\" Lisa apologized.\n\n\"Yeah, you and me both,\" she said with a faint smile.\n\nI heard a small gasp from Sofia who was suddenly watching the exchange with interest. Was this maybe the first time that Maria admitted that everything in her life wasn't perfect and that she wanted more? Lisa smiled and rose to her feet again, then leaned over and gave Maria a slow sensuous kiss. I averted my eyes out of respect for their intimate moment but found myself staring straight into Lisa's wet pussy. She had apparently shed her panties as well when she borrowed my shirt and was now putting on a private show for me while bending over to kiss Maria in front of me.\n\nThe sexy kiss, Marias hardening nipples and Lisa's glistening sex a few feet from my face, made me hard as a rock in no time. The comfortable bushcraft pants I was wearing weren't that comfortable anymore.\n\n\"I think I'll go slip into something more comfortable,\" I said as I slipped away into my bunkroom.\n\nI tried furiously to get my erection to go down as I changed into my long johns and a long sleeve T-shirt. I thought about the injustice done to Maria and Lisa and the erection went down fast. When I came back out, the girls were sitting down in the fort playing Yahtzee. The darkness outside was complete and the room was dimly lit by the fire and some candles spread out around the room.\n\n\"There you are mister Pillow!\" Lisa exclaimed. \"Now come and sit behind me so that I can lean back.\"\n\nI rolled my eyes and smiled as I walked towards them. I dragged my heavy armchair right up to the edge of the fort so that I would have a backrest myself. I sat down, drew my legs up a bit and motioned for Lisa to sit down between them. She sat down and leaned backwards against my chest with a content sigh. Her warmth and intoxicating smell made me grow again. She felt it in her back and giggled a bit.\n\n\"As comfy as this is, it'll be hard to kick your asses in Yahtzee,\" she said to her friends as she repositioned herself so that she was sitting on her knees between my legs. Maria and Sofia were sitting across from us, so thankfully they couldn't see my growing erection that was threatening to burst out of my y-front.\n\nThey continued their game of Yahtzee, a game that they apparently played every time they came to this cabin. They were all very invested in the game and didn't notice me watching them. They were all beautiful in their own respective way, especially in the dim light from the fire and candles.\n\nSofia with her voluptuous body, comely face and flaming red hair, Maria with her almost unrealistically sexy body and beautiful face, Lisa with her tight athletic body, cute looks, and that mischievous smile of hers. Just as I was watching her, she flashed me that smile over her shoulder.\n\nMaria and Sofia were in a heated discussion about uneven surfaces, so they didn't notice when Lisa hiked up her shirt enough to give me a small glimpse of her pleasantly rounded muscular buttocks. She turned back to the game, leaned forward to grab the dice, giving me a full unobstructed view of her pert butt and glistening, wet pussy. This must have been her plan all along and I approved. Thankfully, the dim light, my positioning and Lisa's body, made sure that Maria and Sofia couldn't see my massive erection.\n\nI started massaging my glans through my long johns as I lost myself in the wet folds of Lisa's succulent cunt. Lisa rolled the dice three times and then leaned back again to my disappointment. Lisa wasn't a threat in the game apparently because Sofia and Maria were completely focused on each other, bickering good naturedly. Lisa took advantage of their inattention, spreading her feet a bit further out to the sides so that she could scootch her ass further backwards into my groin.\n\nI caught on to the plan and slid down a fraction, angling my hips a bit to get further underneath Lisa. She sat down slowly, so as not to raise any suspicion. As soon as she sat down fully, I could feel the heat of her sex radiating through my long johns, soaking them with her juices in the process. Her labia were hugging the shaft of my painfully hard cock and she started moving back and forth with small hip movements, stroking my cock in the process. It became Lisa's turn again and she leaned forward to roll the dice. I was once again treated to a view of her beautifully toned buttocks and sopping, swollen pussy as she distractedly rolled the dice.\n\nFeeling a bit naughty, I eased my steel rod out of the Y-front of my long johns. I pushed it down a bit so that my angry red glans lined up perfectly with Lisa's hungry opening. No sooner had I positioned my aching cock than Lisa sat back down again, impaling herself on my waiting spear. She was so wet that she slid down my pole without resistance, squeezing my cock hard, every inch of the way down. She let out a sharp gasp as she bottomed out, my cock fully encased in her burning hot cunt.\n\nMaria and Sofia didn't even notice, yet again embroiled in a heated discussion about a rule or something. Lisa looked back over her shoulder and I could see how hard she had to work to contain her lust and keep being discreet.\n\n\"You naughty fucker!\" she hissed and bit her bottom lip to conceal a moan.\n\nShe turned back to the game and feigned interest, all the while slowly fucking me with small discreet hip movements hidden by my oversized t-shirt that she was wearing. Every time it was Lisa's turn, she leaned forward to roll the dice, making sure not to lean too much forward so that my cock escaped her greedy hole. After making her rolls, she sat down hard and fast, grinding her overflowing pussy against the root of my cock.\n\nWe kept this up for a while and I could feel Lisa getting closer and closer to orgasm and I wasn't far behind. Sofia announced that it was the last round of rolls. Lisa increased her pace, and I was surprised that none of her friends had noticed us yet, but they seemed serious about winning the game and didn't notice anything else, I guess. Lisa was going last, and we were both almost vibrating with imminent release when she leaned forward to roll the dice.\n\nA couple of quick rolls and all of them suddenly started yelling \"YATZEE\" and laughing. Lisa leaned back again and started jumping up and down with reckless abandon, quickly fucking us both to a mind shattering orgasm. We both tried to hide our ecstatic moans with celebratory shouts, and I think we got away with it.\n\nLisa apparently won with that clutch last roll, but I couldn't care less, enveloped in post orgasmic bliss as I was. Maria excused herself and ran to the toilets in the cellar. Sofia watched her go and then snapped back to us with a furious look on her face. The jig was up.\n\nWe both froze, like deer caught in the headlights. Sofia crawled towards us still looking furious, but I was beginning to suspect that wasn't the case at all. Sofia darted her hand, quick as a cobra, between Lisa's legs, making us both gasp in surprise. I could feel her fingers exploring my still hard cock penetrating Lisa's sopping wet pussy. Sofia pulled back her hand, her fingers coated in our combined juices, and started licking them clean with a huge grin on her lips.\n\n\"Thanks for keeping Maria occupied with those silly rule discussions,\" Lisa said as she lifted herself off my still mostly erect cock. A torrent of our juices ran out of her pussy and made a mess in my already soaked lap. She turned around and leaned down to give me a slow kiss.\n\n\"Thank you, I really needed that,\" she whispered in my ear. She turned around and gave Sofia a deep kiss as well and then ran towards the toilets in the cellar. Too happy and satisfied to care, I just sat there with my sloppy dick resting on my thigh.\n\n\"You might want to duck into your room before Maria comes back and things get awkward,\" Sofia explained with a smile.\n\nFiguring that she knew her friends best I followed her advice and skulked off to my room.\n\nChapter 7\n\nI cleaned up as best I could without water. The long johns were a lost cause though, completely saturated with our combined juices as they were. I pulled on my one-piece again, grabbed a washcloth and was just about to sneak off to the cellar to wash up a bit when I heard Maria and Lisa coming back up again. I hesitated and then opened the door a crack to hear better.\n\n\"Where did Peter go?\" I heard Maria ask.\n\n\"He was a bit tired and wanted to turn in early,\" Sofia explained.\n\n\"Darn, I was thinking of asking him for a massage,\" Maria sighed, sounding a bit disappointed.\n\n\"I bet you were,\" Lisa teased suggestively.\n\n\"No, not that kind of massage, you filthy little pixie,\" Maria laughed. \"That's what I have you foooor...\"\n\nThe last word came out as a long moan and I would have given a lot to be able to see what caused it. I heard some more moans and a lot of wet kissing noises. I debated with myself whether to open the door, but I finally decided against it. I figured they needed some of that \"Healing\" together. I made myself comfortable on my bed with my laptop and my trusty noise-cancelling headphones.\n\nI still couldn't let go of Lisa's situation with her abusive ex. I started looking around in a few places I remembered from my earlier life as an internet delinquent. He wasn't hard to find and what I found confirmed my suspicion that he was a creepy, unsavoury, narcissistic asshole. I even found some of the pictures of Lisa buried deep in some really fucked up brag-threads in a notorious forum for pervs.\n\nSeems like the asshole liked to dress Lisa up in demeaning costumes, tie her up and do things to her. I could feel my anger rising with every picture I saw. The injustice got to me and it was hard to hold back tears of impotent rage. I suddenly experienced a moment of crystalline clarity, I knew what I wanted to do with my life, I wanted to burn that motherfucker to the ground!\n\nI cracked my knuckles and went to work. I figured that hacking his account on that forum would be a good first step, so I started working on that. After half an hour of unfruitful labour I got a PM to my dummy account that I had set up. It just read:\n\nAdmin1: Peter, just stop, this is pathetic. And cover your webcam lens ffs, what would your Uncl3 say? ;)\n\nMy uncle? I don't have an uncle. Was I busted? Then I realized who the message was from.\n\nUncl3fuk3r, as I live and breathe. What have you been up to? I replied with a smile.\n\nUncl3fuk3r, or Elliot in real life, was one of my old friends from before I started my new career. He's a brilliant hacker, or \"Security consultant\" if you want to use the proper legal term. I'd helped him make the transition from a socially awkward shut-in with money problems to a... well, socially awkward shut-in without money problems. I helped him just to be able to use him on a few important projects, but that was the old asshole me. The current me was happy that my cut-throat career moves had actually helped someone along the way."
    ],
    "authorname": "kepha",
    "tags": [
        "anal sex",
        "voyeur",
        "erotic couplings",
        "group sex",
        "lesbian",
        "masturbation"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/self-realization-the-cabin"
}