{
    "title": "Heart of Stone Ch. 22",
    "pages": [
        "22. The Beginning and the End\n\nMary didn't know how Meris or Robbie could look so calm when they were facing a barrage of shouted questions. One of the first questions they took was a request, to see one of the gargoyles close up. The person asking seemed genuinely surprised when Meris invited him to come closer. The reporter seemed surprised that Meris had agreed so readily, but he did move forward. By the time he the man returned to where he had been standing, all traces of cynicism were gone from his face.\n\nAfter that, they asked anything and everything that Mary could imagine. Things that were deemed too personal were quickly deflected. Other questions about culture and language were answered more fully, as were questions regarding their waking. Robbie and Meris skirted the issue of magic for the moment, but she was certain that it was implied. Mary glanced up at Aiden. It was clear that he was proud of the way Meris was representing them.\n\nAfter twenty minutes Mary began to relax. Aiden's hand rested on her shoulder, she reached up to hold it carefully. She was fairly certain that the small gesture had been noticed, because the cameras seemed to flash in their direction even more. She didn't have time to wonder if speculation was running through the crowd, pain shot through her lower back. She squeezed Aiden's hand a little harder until it faded. \n\n\"Child? Is there something wrong?\" His voice was close to her ear.\n\n\"No.\" She smiled a little. \"I think I'm just not used to sitting so still in one place for so long.\"\n\n\"You would tell me if you were ill?\" \n\nShe turned to look at him, a genuine smile touched her lips. \"Yes. I would.\"\n\nHe stood up again, and they both listened while Meris and Robbie fielded more questions about every conceivable topic, from cultural norms to trades gargoyles would be suited for. Mary was certain that it had gone on too long, but Aiden and Meris had decided before it even started that they would take as many questions as possible to give as complete a view as possible. Even if the vast majority of their responses didn't make it to the public initially, the reporters would still have had the experience. \n\nAnother pain shot through Mary's lower back. Again she squeezed Aiden's hand. This time, she reached next to her and grasped Nigel's arm as well.\n\n\"What is it?\" Nigel asked.\n\n\"I don't know, I keep having this sharp pain in my back.\" The pain had subsided, but her hand was trembling. \n\n\"How often?\"\n\n\"Only twice. Just now and ten or fifteen minutes ago. It's probably nothing, but it feels different than the achy pain I've had before though.\"\n\nNigel looked at the gargoyle standing over Mary. \"Aiden, we need to call an end to this, or at least provide an exit for Mary and myself.\" \n\n\"Agreed.\" Aiden went over to Meris and spoke in the gargoyle language. There was a short exchange. Mary could see the concern on Meris's face when he looked at her.\n\n\"If you would please hold your questions.\" Meris began. He repeated himself until he had relative silence. \"As you can see, our leader's mate is heavy with his child, and she is feeling unwell. Thank you all for coming, and for your kind attention.\"\n\nShouts about the relationship rang out, but Meris only repeated his goodbye. Aiden picked Mary up carefully.\n\n\"Take her to the treatment room. I'll meet you there,\" Nigel said to Aiden. \n\nAiden glanced at the door and decided flying was quicker. Mary closed her eyes and hid her face from the wind until they were safely on the balcony again. He was down the hall and depositing her carefully on the narrow bed in the converted guest room. Nigel came in with Jenna.\n\n\"Aiden, why don't you leave us to it for the moment.\" Jenna said.\n\n\"No! If Mary and my son are in distress-\"\n\n\"We don't know that for certain.\"\n\n\"What else could it be?\"\n\nJenna put her hand on his elbow and started to lead him out of the room. \"It's not unusual for women at Mary's stage of pregnancy to experience a few contractions from time to time. It prepares the body for the birth of the child.\"\n\nAiden allowed himself to be lead. \"If this is normal, why all the concern?\"\n\n\"Because we want to make certain that it's nothing more.\" The nurse's voice was perfectly rational. It was helping calm Mary down too. \"You can come back in once we get Mary connected to a monitor.\"\n\n*~*~*~*~*~*\n\nFour hours later, Mary still lay on the narrow bed in the spare room, but at least Aiden was with her. She couldn't get comfortable enough to sleep, but she could lay with her fingers twined with his. She'd asked about the others and how it went, but no one had wanted to tell her anything until they were sure that she was alright. Finally, Nigel came back in.\n\n\"Can't I please just go to my own bed?\" She asked. \"I haven't felt anything unusual since I got up here.\"\n\n\"You've had a couple of very minor, painless contractions since you've been here, but that's perfectly normal for this time in your pregnancy. You can go back to bed, and I want you to stay there for at least a week.\"\n\n\"A week? Now? With everything-\"\n\n\"I think the stronger contractions you felt were brought on by stress,\" Nigel said firmly. \"The child is already as large as a full-term human infant, and you have at least four more weeks to go, possibly more considering the gestational differences between humans and gargoyles. You've come this far with both you and the baby in good health. The last thing I want is to jeopardize either one of you needlessly.\"\n\n\"The others and I will keep you apprised of the situation.\" Aiden assured her.\n\n\"I doubt there's going to be much we can do about any of it now that it's out of our hands,\" Nigel said. \"The media will present what they want to present. Our enemy will respond and the cycle will continue. Most things you'll be able to handle quite nicely from your room, with one of the others to assist you. If that becomes too much, or when you're moved to a hospital, we'll make other arrangements.\"\n\n\"So now that I've don't my part and gotten through all the wakings I'm not needed anymore?\" Mary was angrier than she had been in a long time. Tears were welling up in her eyes. \n\n\"Certainly not, it's just that everyone's roles will be changing now-\"\n\n\"And you expect me to just disappear all together.\" Tears had started to trickle down her cheeks. She let them.\n\nAiden tried. \"Mary-\"\n\n\"You're on his side!\" She accused.\n\n\"I am not on anyone's side,\" Aiden replied firmly. \"But I do think everyone will be expressing themselves more clearly after a good night's rest.\"\n\n\"I couldn't have said it better myself.\" Nigel agreed.\n\nMary was still angry, but she could feel that her upset was disturbing the baby. She decided not to argue about it any more for the moment, but if they all thought she was going to quietly disappear into her room they would have to think again.\n\n\"Whatever, would you just get me out of this thing?\" She started tugging at the uncomfortable belt around her waist.\n\n\"Of course. Aiden, I'll let you know when we're finished.\" Nigel said. Aiden kissed Mary's forehead and stepped out of the room.\n\n*~*~*~*~*~*\n\nThe next morning, Mary woke up to a different world.\n\nFrom the balcony, Mary could see that the crowd of strange, still observers was gone entirely. It had been replaced by an equal number of reporters and curiosity-seekers. She went back inside quickly, feeling even more oppressed than she had before. At least she wasn't as angry as she had been the previous night. That didn't mean she was just going to fade away, but she did get so tired so easily. She'd barely gotten out of the shower when someone was knocking on the door.\n\n\"Come in.\"\n\nCaroline rushed in with a stack of phone messages in each hand. Each one looked to be about an inch thick. \"Mary, I know you're supposed to be resting, but I don't know how to respond to these and they keep coming.\"\n\n\"Who are they all from?\" Mary took one of the stacks and walked into the sitting room with Caroline. Her friend waited until Mary got herself arranged on the sofa.\n\n\"Everyone. Reporters and scientists mostly. A few people who are supportive and want to wish you and Aiden the best, and a few who aren't as supportive.\"\n\n\"So it's out then?\" \n\nShe nodded. \"As of a few minutes after the conference ended last night. You can find the whole thing in at least a dozen places online. I don't know how many people are linking to it.\"\n\n\"The whole thing? Not some edited version?\" Mary was surprised that the whole thing would hold the attention of a sound-bite driven world.\n\n\"From the minute they started recording to your exit in Aiden's arms.\"\n\n\"I thought they'd show a minute or two here and there, but not all of it.\"\n\n\"The idea is commonplace to us, especially now that we've lived here with Aiden and the others. To the rest of the world, this is bigger than, well, anything that I can think of.\" Caroline was on the edge between amazed and terrified by the prospect. Mary felt the same way herself. \"Anyway, the phone's been ringing non-stop. Bennett has got to be the most patient man on earth. I think he's been awake and answering it since the whole thing broke and he still sounds just as calm and polite as always.\"\n\n\"How's everyone else taking it?\"\n\nShe laughed, but it was a frustrated sound. \"How do you think? Andy wanted everyone to vote on each one of the requests and tell Aiden and the others about it later.\"\n\n\"What?\" Mary was angry that he'd even suggest such a thing, but given his track record she wasn't terribly surprised. \"No one agreed to that, did they?\"\n\n\"Certainly not. I got everything that had come in and brought it up here.\"\n\nBefore Mary could answer someone else knocked.\n\n\"I'll get it,\" Caroline said. She returned a few minutes later with Nigel.\n\n\"How are you feeling this morning?\" He asked.\n\n\"Well, I haven't had any more pain. All these messages are a little overwhelming.\"\n\n\"So you know-\" A sharp knock interrupted him. Andy came storming into the room next with Robbie right behind him.\n\n\"There you are,\" he said to Caroline, his tone accusatory. \"Honestly, I don't know what you were thinking.\"\n\n\"She was thinking of what Aiden and the others would want,\" Robbie said. \"Mary is the one person who would know best-\"\n\n\"It's not up to her!\" Andy's face was red. \"I've had enough of bowing to the wishes of a spoiled American girl just because she happens to have some natural ability-\"\n\n\"Some natural ability!\" Caroline shouted. \"How dare you belittle Mary's abilities! Without her, none of this would be possible.\" \n\nMary's head was starting to pound.\n\n\"Well, did you ever think that that might not be such a bad idea?\" Andy shot back.\n\n\"SHUT UP!\" Mary shouted. Everyone turned to look at her. \"Aiden and the other gargoyles are not pets and we don't have the right to make decisions for them. I'm not going to, and neither are any of you. Get someone to relieve Bennett and tell them to keep taking messages. Caroline and I will sort through them, and let Aiden make decisions when he and the others wake up.\"\n\n\"But-\"\n\n\"But nothing.\" Robbie said. \"What happens to Aiden and the others is entirely their own decision.\"\n\n\"And that's quite enough arguing for the moment. Mary doesn't need the stress.\" Nigel said firmly.\n\nAndy was sputtering and indignant. \"You can't just-\"\n\n\"I can.\" Nigel headed out of the room, herding Robbie and Andy along with him.\n\nMary rubbed her eyes. Suddenly it felt like she hadn't slept at all. Caroline sat down next to her. \"Have you eaten anything yet?\"\n\n\"No.\"\n\n\"I'm so sorry. I shouldn't have come barging in here like that.\"\n\n\"It's alright. I wasn't going to go downstairs anyway. Though with all the turmoil, I'm not certain that I want to bother anyone to bring me a meal.\"\n\n\"Don't be ridiculous. I know Maureen worries about you when you don't come downstairs. Bringing you meals means she gets to see you. I'll get something sent up.\"\n\n\"Thanks. My laptop too,\" Mary said. \"I want to see what's being said.\"\n\n*~*~*~*~*~*\n\nMary spent most of the day sorting through phone messages and watching streaming video of the debate raging around the gargoyles. Everything she'd expected was there. Curiosity and tenuous acceptance of the gargoyles presented by moderate, thoughtful commentators. Bigotry, rage, fear and suspicion fueled largely \u2013 as far as Mary could tell at that point - by religious conservative groups. The leading voice among those belonged to Darren Rathbun. \n\nThere were other issues too, things that Mary hadn't even considered. People were questioning whether or not a nonhuman creature could be considered a citizen. What rights and protections under the law were the government obligated to extend? Were the gargoyles required to obey the laws as they were written? What did this mean for other animals in the UK and elsewhere? \n\nLinguists analyzed the short snippet of Aiden and Meris speaking to each other in the gargoyle language, hoping to determine if it was a language, or just some kind of coded signal. Nearly all of them reached the conclusion that they didn't have enough information to make an accurate determination, but if they had to venture a guess (and they all did) they guessed it was an unknown language.\n\nQuestions about the nature and uniqueness of humanity itself were everywhere. With the addition of other speaking, thinking beings, some thought that humanity was threatened somehow. Darren played to this fear, irrational as it was, implying at one point that if the gargoyles were accepted, human beings would be reduced to the level of farm animals. He used Mary's pregnancy as an indication of the sexual aggression of gargoyle males, suggesting that human females weren't safe in their presence. \n\nMary didn't know how he could say any of those things with a straight face. It was even further beyond her understanding how anyone could believe in and agree with his twisted logic. She also didn't like relying on other people who had no firsthand knowledge of Aiden and the others to speak on their behalf. \n\nLate in the afternoon, Caroline and Mary had gotten everything organized enough so that when Aiden woke they could simply present him with the information. Robbie brought more messages up with a tray of raw veggies Mary had asked for.\n\n\"Someone from our own group needs to represent us.\" Mary said, nodding toward the streaming video. She took a carrot stick off the plate. \n\n\"I agree.\" He sat down. \"I was hoping to speak with Aiden about that when he woke up. I hesitate to begin giving interviews without his approval.\" \n\nMary looked at him and smiled a little. \"Not everyone feels that way, do they?\"\n\n\"No. I agree that we needed a more cohesive plan. I don't think anyone realized how quickly this was all going to hit. We should have, but we focused so much on getting to the point of introducing Aiden and the others that we didn't think enough about what would happen after.\" He glanced at the stacks of messages on the coffee table. \"What's all this?\"\n\n\"It's the only way I could come up with to organize all of them.\" She began pointing to individual stacks. \"Those are the reporters and news agencies. The scientists, broken down by field. Personally, I'd like to throw away all the zoologists, but I'll give Aiden the satisfaction of doing that. Medical doctors and psychologists. Finally, people who just want to express themselves. Most of those are really nice actually. Caroline has them all organized into an Excel file.\"\n\n\"Is that why you needed my laptop?\" he asked.\n\n\"Yes. Do you need it back?\" Caroline asked.\n\n\"No. Even if I had it I wouldn't be able to focus on work anyway. I don't think anyone has done anything at all today except watch the coverage and argue about what it all means for us.\" He looked at Mary. \"This is quite an undertaking for someone who's supposed to be on bedrest, though.\" He smiled.\n\n\"I haven't moved all day, except to go to the bathroom, and eat.\" Mary smiled a little. \"Nigel sent you to spy, didn't he?\"\n\n\"Yes, but only because he knew I was coming up anyway and he wants to keep people out of here as much as possible so you can actually get some rest.\"\n\nMary laughed. \"And he hasn't posted a guard at the door?\" \n\n\"This morning, I think he was tempted.\"\n\n\"This morning, I would have let him.\" Mary sighed. \"It's completely out of our control, isn't it?\"\n\n\"Most of it is, yes. We can explain, and attempt to influence, but that's all. The rest of the world will form its own opinions. We can only hope that the final outcome will be favorable to us and the gargoyles.\"\n\n*~*~*~*~*~*\n\nOver the next few weeks, it became clear how right Robbie had been. \n\nRobbie, Nigel and Jenna stayed at Beeson Hall, but the others went home. Once their names came out though, they were hounded by the press and a curious public. Veronica simply retreated behind her gates and stayed there. Ramona refused to so much as turn her head, much less make any comment. Andy was downright belligerent and for some reason that made him a favorite target, especially of the more salacious publications. The others chose paths that combined the pieces of those things that worked best for them in a specific situation.\n\nThe other gargoyles handled the intense interest differently. There were always cameras trained on the estate, and Kitra and Keldon yearned to be in the spotlight. Cerex took to hiding in the house as much as possible, so did ancient Arris. Mary really didn't mind. She enjoyed their company, and she was pleased to see that Cerex seemed to have found her place in caring for the aged male. In getting to know Arris, Mary learned that he had taught the young children of his clan to read and write the complex gargoyle language. His loving, patient nature appeared to give Cerex a sense of safety and comfort that she hadn't been able to capture since her waking.\n\nMeris and Robbie gave interviews just about every night. Mary and Aiden stayed away from the cameras as much as possible though. When questions about the baby and Mary and Aiden's relationship began to dominate, they agreed to give a single interview with one person asking questions. It went as well as anyone could expect, but Mary was very glad when the whole thing was over.\n\nThe interview had served to quell some of the curiosity about the relationship, and the sonogram images made it clear that the baby did have gargoyle and human features. It also provided fodder for those who made their livings from analyzing every word that was spoken and doing it out of context. At least two psychologists had decided that Mary was the victim of severe abuse at Aiden's hands. Another diagnosed Aiden as a sociopath. Most said they saw nothing more than a loving couple who were excited about the impending birth of their first child, making it clear that you could find someone to say just about anything.\n\nWhile the television comments were mostly moderate, the rhetoric online was anything but. Sites sprang up in support of the gargoyles, but there were just as many, if not more, making hateful accusations and assertions that had no basis in fact. One challenged viewers to sneak onto Mary's property and destroy the gargoyles as they slept. Another drew comparisons between gargoyles and demons, making the assertion that the 'circle of witches' had brought Satan and his minions to destroy everything good and decent in the world. She wasn't surprised to find a price on her head. At that point, she hired security.\n\nAs time passed and they became accustomed to having their lives dissected on a daily basis, she and Aiden had become adept at ignoring all of it. The public was polarized. She was gratified to see that there were just as many people who accepted Aiden and the others as people who didn't, and she held tight to that fact. \n\nWhen the government took up the matter of the gargoyles' status is when that polarization became most apparent. There were demonstrations on both sides of the issue. Mary thought that if the demonstrators hadn't come within sight of each other, everything would have been alright. As it was, things degenerated quickly from shouting to an outright brawl in the street.",
        "\"We cannot ignore this.\" Meris said. He, Robbie, Caroline, Nigel, Mary and Aiden were all gathered in her sitting room. The stairs were simply too exhausting for her so people had begun to come to her for these informal evening gatherings. Mary was snuggled next to Aiden on a new, larger sofa.\n\n\"What can we do?\" Nigel asked. \"It isn't as though we can go out there and physically make them stop.\"\n\n\"No matter what we say, Rathbun's group isn't going to listen anyway.\" Caroline said.\n\n\"I agree with you, but that is not who I wish to impact,\" Meris said. He looked at the gathered group. \"Our message has always been that we simply wish to live openly in human society without causing turmoil. If we accept this violence, that invalidates our whole message.\"\n\n\"What do you wish to say?\" Aiden asked.\n\nMeris thought for a moment. \"That we appreciate the heartfelt support, but we cannot and will not accept or condone violence as a way to further our cause. And that it saddens us that anyone, on either side, was injured.\"\n\n\"Was this an organized group? Or as organized as one could expect in so few weeks?\" Robbie asked.\n\n\"Yes. I was hoping to have the opportunity to meet with their leaders, but I wished to speak with Mary and Aiden about that. A face to face meeting would have to take place here.\"\n\n\"I believe that would be a good idea,\" Aiden said. \"Make contact and keep me informed.\"\n\nMary shifted uncomfortably. Even the small movement seemed to take an enormous effort. Aiden stroked the side of her tummy gently. Nigel looked at her.\n\n\"If that's all, I think Mary needs some rest,\" Nigel said. \n\n\"Of course,\" Robbie said. The others said goodnight and filed out after him. Nigel shut the door and turned to Mary and Aiden.\n\n\"We need to talk.\" He sat down again. \"I know neither of you want to hear this, but I think it's time to move Mary to a hospital.\"\n\n\"Nigel-\"\n\n\"Mary, we can all see how uncomfortable you are.\" Aiden said.\n\n\"Being in a strange place, surrounded by people I don't know isn't going to make me feel better.\" Mary felt tears filling her eyes. Aiden pulled her closer.\n\n\"You're not going to be alone,\" Nigel said. \"I realize that would be even more stressful for you. Aiden and several of the other gargoyles will go with you of course. Jenna and I will be caring for you as always. I'm sure that Caroline will want to visit as well as Robbie and the others. You're a week away from your due date, and I simply don't feel like I'm doing all I can for you here, not mention if the baby is in distress it'll take time to get you to a hospital. In an emergency those few minutes-\"\n\n\"Where do I have to go?\" Mary sounded completely defeated. She knew that she might able to argue with Aiden, or Nigel, but she didn't stand a chance against the two of them together.\n\n\"I have two different facilities in mind.\" He opened his briefcase and took out two brochures. He handed them to Mary. \"Both of them are small, private facilities. Both of them specialize in high-risk deliveries. I've had a number of patients deliver at each one of them. I know all of the doctors and most of the nursing staff at each.\"\n\nMary looked through the brochures. Both seemed lovely and well-equipped. The Afton House Birthing Center featured a walled garden. The Willows Mother/Baby Center had a spacious solarium. Other than that, the two seemed identical to Mary.\n\n\"What are the differences between the two?\" She asked.\n\n\"As far as facilities, staff training and those types of things, they're about equal. Afton House can give you a private wing. The Willows can't offer you that to start out with, but may be able to make a similar offer in a week or so,\" Nigel said.\n\n\"Both know that they will be under heavy media scrutiny, and will be able to keep Mary safe from unreasonable intrusions on her privacy?\" Aiden asked. \n\n\"Both have assured me that they can,\" Nigel said.\n\n\"I think that more privacy would be better,\" Mary said. She turned to Aiden. \"Will you be able to rest there?\"\n\n\"I will be able to rest anywhere you are, dear one.\"\n\n*~*~*~*~*~*\n\nMary was amazed at how quickly the arrangements could be made. All the activity stirred speculation, but the only official comment released was to ask for Mary's privacy to be respected. After dark, Nigel and Jenna drove Mary and Caroline to Afton House. Aiden, Esme and Jerel flew, which Mary was sure would cause quite a stir because they didn't take any care to hide. The rest of the gargoyles remained at Beeson Hall, with Calvus as interim leader. By the time Mary arrived Aiden was waiting for her.\n\nThere were four other spacious rooms in the wing Mary occupied. Caroline took one, when Veronica arrived, she occupied another, leaving the other two open for Nigel and Jenna. She made it clear that she would take care of Mary most of the time, but when other nurses were needed they were very carefully screened. Anyone who seemed uncertain about Aiden or the gargoyles was excluded.\n\nFor Mary, time seemed to stand still while she was cloistered at Afton House. The others did their best to keep her entertained, but isolated from news and the Internet. As the days wore on, she found she didn't mind that so much. \n\nNigel had recommended a caesarian delivery months ago and she and Aiden both agreed that would be safest. Given the unusual circumstances though, he wanted to wait until Mary's labor started, unless she or the baby were in danger before that. Back when she was sort of off-balance and kind of uncomfortable it had sounded like a reasonable plan. Now, she just wanted it to be over.\n\nEsme told her that gargoyle females always went into labor at night, so Mary was certain that she would too. The baby was most active at night anyway. Each night that passed without so much as a contraction seemed almost like a frustrating failure in a way. \n\nAs days turned into weeks, Mary was certain that she was going to be pregnant forever, or until she simply exploded, whichever came first. She slept more than usual during the day. When she wasn't sleeping she would chat or knit with Caroline or Veronica. When her hands were too swollen to allow her to knit, they would play cards.\n\n\"Did I tell you that one of my grandnieces eloped with one of her mother Annabelle's gardeners?\" Veronica asked. Mary was grateful for Veronica's e-mails with her family. Without them they wouldn't have a whole lot less to talk about.\n\n\"No!\" Caroline said, her eyes wide. \"Was it Elyse?\"\n\n\"No. Elyse is too afraid of losing her mother's approval. It was her sister, Justine.\" Veronica said. Mary shifted in bed, trying to relieve a sudden cramp in her back. She'd been getting those cramps since the night before. They weren't strong enough to mention then and they hadn't gotten much stronger, but they were getting more frequent. She figured her body had finally reached a breaking point of some kind.\n\n\"Won't Annabelle be just as upset?\" Mary asked.\n\n\"Of course, but that's the kind of relationship Justine has always had with her mother,\" Veronica said. \"Justine does something outrageous, usually something that Annabelle wishes she had the courage to do herself, and there's a great deal of turmoil in the family until both of them get over whatever little fit of pique they're in.\"\n\n\"This sounds like more than just a momentary thing.\" Mary said. Another cramp hit her and she shifted again.\n\n\"This time it may not be temporary exactly. I'm sure she even has feelings for the young man, but I would bet that the elopement was simply for shock value.\" Veronica explained. \n\nMary bit back a groan, and shifted again.\n\n\"Are you alright?\" Caroline asked.\n\n\"I think so, just having a hard time getting comfortable. I guess that's not so surprising.\" Mary smiled and then turned to Veronica. \"So you think she actually loves him?\"\n\n\"I do, and I think that Annabelle would actually be happy for her if she hadn't gone running off. It's more the loss of the big wedding that's-\"\n\nSharp, hot pain shot through Mary's back with such an intensity that she couldn't bite back a groan.\n\n\"Mary?\"\n\n\"I'm alright.\"\n\n\"No you're not,\" Veronica said. \"Caroline, find Nigel or Jenna.\" Caroline hurried out of the room.\n\nMary felt a warm rush of fluid between her legs. \"Oh God, this can't be happening now.\"\n\n\"When my first one was born, I didn't feel ready either.\"\n\nNigel came with Jenna following closely behind him. \"Caroline said you were in some pain.\"\n\nMary nodded. \"And I think my water just broke.\"\n\n\"Veronica, if you could step out for just a moment,\" Nigel said. He examined Mary quickly, his eyebrows rose slightly. He adjusted the sheet over her again when he finished. \"You're at seven centimeters.\"\n\n\"What does that mean?\" Mary asked.\n\n\"That this little one is ready to meet you.\" He smiled. \"Jenna, go and get Dr. Park-\"\n\n\"No!\" Mary said, tears welling up in her eyes.\n\n\"Mary-\"\n\n\"Aiden wanted to be with me, you told him that he could.\" Another strong contraction made Mary groan.\n\n\"Aiden wants to protect your health and the health of the child.\" Nigel nodded at Jenna, she disappeared. Caroline and Veronica came back in.\n\n\"Can't we wait until he wakes up?\" The prospect of going through the surgery alone was terrifying.\n\nNigel shook his head. \"Nightfall is still several hours away. Clearly you're progressing more quickly than we'd realized. I don't think it would be safe for you or the baby to wait.\"\n\n\"I don't want to do this alone.\" Mary was sobbing. She'd gotten used to being without Aiden during daylight hours. She was able to tell herself that he was away at work or something similar. Even a man who worked from sun-up to sun-down would have been there for the birth of his child. Veronica put her arms around Mary's shoulders.\n\n\"You won't be alone, I'll be there if you'll let me.\"\n\nMary looked at Nigel. \"Can she?\"\n\n\"Of course. Caroline, would you let Aiden know what's happening?\" Nigel asked.\n\nThe next few minutes were lost in a flurry of tests, preparations, and Veronica finishing her story about Annabelle and Justine. By the time she was wheeled into the operating room, Mary was trembling, but she wasn't crying any more. The spinal anesthetic was administered and Mary quickly lost sensation below her chest. Nigel came in a few minutes later in a surgical mask and gown. \n\n\"Mary, you remember Dr. Afton, and Dr. Park. Dr. Afton will be assisting me. Dr. Park will be taking care of the baby from the moment he arrives. If you feel any pain, or have any difficult breathing, just say so.\" He instructed. Veronica sat next to Mary's head and two nurses set up a screen at the level of her chest. She recognized one of them as Jenna. The other she thought was the red-haired nurse who took care of her in the evenings. \n\n\"Okay.\" Mary's voice broke.\n\n\"Can you feel this?\" Nigel asked.\n\n\"Feel what?\"\n\n\"I think we're ready to begin.\"\n\n\"Did I tell you that daughter Constance delivered her second child this way?\" Veronica asked.\n\n\"No.\" Mary was expecting pain or pressure or something, but for the moment she didn't feel anything.\n\n\"Yes. I was with her when both of her children were born.\"\n\n\"Where was her husband?\"\n\n\"You may feel some pulling and some pressure,\" Nigel said.\n\n\"Passed out in the waiting room. He's a lovely man, just completely unable to tolerate the realities of childbirth.\"\n\n\"Nearly there, Mary. Any discomfort?\" Nigel asked.\n\n\"No.\"\n\n\"Good.\" \n\nA moment later, Mary did feel something change, like a weight had been lifted off of her lower body. Dr. Park moved forward, then she heard a cough and then an angry, hissing screech.\n\n\"And there's our rather upset young gentleman.\" The baby's cries got louder and more lusty as Dr. Park brought him around to Mary's head. The large infant was purplish, and even as drugged as she was Mary could see that there were patches of scaly skin on his chest and legs. His scaly tail was wrapped around Dr. Park's arm, his fists and feet flailing.\n\n\"He's beautiful.\" Mary breathed. Dr. Park turned away. \"Where are you taking him?\"\n\n\"Just to make certain he's healthy,\" Mary watched Dr. Park and the red-haired nurse examine the squalling infant who seemed much too large for the bassinet they placed him in.\n\n\"Have you and Aiden talked about names yet, Mary?\" Nigel asked.\n\n\"We have, but I can't tell anyone yet.\" Mary's eyes were on the struggling bundle Dr. Park was attempting to examine.\n\n\"Why not?\" Veronica was curious.\n\n\"It's gargoyle tradition that the child's father is the first one to call him by his name. Is he alright?\"\n\n\"As far as I can tell, he's absolutely perfect.\" Dr. Park said.\n\n*~*~*~*~*~*\n\nMary woke slowly. The pain medication she'd been given made the whole world soft and strange, but it did keep the pain in her lower tummy down to a dull ache. For a few minutes, she kept her eyes closed, trying to ground herself with the small sounds of the room. Water dripped in the bathroom, two people passed by in the hall, speaking in hushed tones. She shifted in bed. A large hand touched her shoulder softly. When she opened her eyes, she could see Aiden in the dim light, smiling down at the baby resting in the crook of his arm. Against Aiden's massive body, even the fifteen pound infant looked tiny.\n\n\"He is beautiful.\" He looked at Mary. \"I am so sorry that I was not here when you needed me.\"\n\nMary sat up slowly, carefully. \"He just wanted to surprise us.\" He wasn't the pinkish color she'd expected, but he didn't have his father's shifting greens and blues and grays either. The lavender reddish tone was going to take some getting used to, so would the prominent bumps on his forehead that would someday become horns.\n\nAiden shifted the baby so that he was resting against his broad chest. \"He is so small, I fear I will injure him.\" He got up and sat on the bed with Mary, she snuggled against his side.\n\nMary laughed softly. \"Maybe he's small by your standards. He's twice the size of most human newborns.\"\n\nThe baby stirred and stretched, the flailing of his tail pulling the blanket off. Once the blanket was gone he settled again with a big sigh. Mary and Aiden both laughed softly. \"Perhaps he is warm enough for the moment. He was awake through the whole day?\"\n\n\"Yes. I thought that when they took him out of the operating room he would change, but he didn't.\"\n\nMary reached out and stroked one small fist. The baby opened his light green eyes and looked at her. He grasped her finger, yawned and went back to sleep. Mary was tempted to do the same thing herself.\n\n\"He is the best of both of us.\"\n\n\"Nigel asked what we were going to name him.\"\n\nHe stroked her back gently. \"I have been considering that. I want his name to reflect the duality of his nature.\"\n\n\"What did you have in mind?\" Mary asked.\n\n\"Garrick Ambrose.\"\n\nMary smiled. \"After your ancestor.\"\n\n\"And yours.\"\n\n\"I like it. Do the others know?\"\n\n\"Yes, but Jerel and Esme will not see him until tomorrow night.\"\n\n\"Why not?\" Mary could feel her body relaxing into his.\n\n\"Because this first night is ours alone.\"\n\nThe baby started to fuss and squirm. Mary smiled a little. \"I think he's hungry. Let me call Jenna.\"\n\n\"Why?\" He helped Mary sit up.\n\nShe blushed. \"Because I'm not quite sure what I'm supposed to do.\"\n\n\"Then I will help you.\" He unsnapped the right side of her gown to expose her left breast, then shifted the baby carefully. \"Can you turn so that your back is to me?\"\n\nShe turned so that her back was resting against him. Aiden held Garrick in front of her and pressed her nipple against the baby's lips. Garrick started to suck hungrily. Mary supported his head in the crook of her arm, Aiden held the rest of his weight. She relaxed back against Aiden, he wrapped his tail around her leg.\n\nThe rest of the world would make up its own mind, Mary didn't care one way or the other. The baby in her arms and her mate behind her was all she needed.\n\nAuthor's Note: This is the end of Heart of Stone. Thank you all for reading, I hope you've enjoyed reading it as much as I've enjoyed writing it. Yes, there are unanswered questions, but life is full of those. Could the world accept the gargoyles as equals? It's hard for most of the world to accept ordinary humans who are different, so I'll leave it for you to decide if Aiden, Mary, their son and the others are accepted.\n\npsyche b."
    ],
    "authorname": "psyche_b_mused",
    "tags": [
        "breastfeeding",
        "non-erotic",
        "bonding",
        "gargoyle",
        "human"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/heart-of-stone-ch-22"
}