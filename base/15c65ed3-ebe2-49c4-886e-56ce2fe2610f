{
    "title": "Jessa Ch. 14",
    "pages": [
        "Dear readers: I want to thank you so much for your patience of late. My husband has been in the hospital for three weeks, even as we are preparing to move to another city. It has been a very trying time these last couple of months. I hope you enjoy this offering, and I expect to be back up to speed soon!\n\n*****\n\n\"No!\" Jessa wailed as Jacq swung her back by the one arm he controlled, then passed her off to someone else who was dragging her away from the scene. \"Raza!\" she called, even knowing the girl would never hear her again. She struggled against whoever was pulling her from behind and then in a moment of lucidity brought her training to bear, twisting and bending to throw the current source of her confinement over her back and onto the rough asphalt. Jessa stumbled away from the man as he reached for her legs and turned to run only to find Jacq there blocking her way again. She sobbed as she struck uselessly against his chest. He pulled her into a tight bear hug until she could hardly breathe.\n\n\"Let me go! I have to get away from here.\"\n\n\"Why do you think I told you not to come?\" he demanded in exasperation.\n\n\"You knew she was dead!\" Jessa screamed. \"You knew and you didn't say anything?\"\n\n\"Of course not. I knew something was wrong and I knew you were in danger from what you told me of last night. Therefore, obviously, this was not where you belonged. And yet here you are, with no one to blame but yourself, for seeing something you didn't want to see.\" He suddenly thrust her back into the grip of someone else. \"See if you can manage to hold on to her this time.\"\n\n\"You think that's what it's about?\" she continued to rail at him. \"My delicate sensibilities? I'm not a fucking Tenth Lady with a handkerchief to my nose, Jacq!\" He loomed in front of her, the anger flaring in his eyes making him seem much taller despite only having an inch or two on her. Jessa realized belatedly that he was married to one of those 'faint of heart' Tenth Ladies, but she continued to glower at him. \"Someone I care about is dead. Because of me?\"\n\n\"That remains to be seen. Take her back to the office. And keep her there,\" he snarled, turning his back on them.\n\n\"Get back here,\" Jessa yelled after him. \"Talk to me, damn it.\" She struggled in the grasp of the man behind her, but he was not being nearly so gentle this time. Jacq only waved a hand in the air, clearly meant as a signal to his man to get her out of there. A car pulled up next to them and she was shoved unceremoniously into the back seat.\n\n****\n\nJessa was dreaming, running blindly, sobbing, as she wiped furiously at her eyes; running all out, running away from what she couldn't control, which was everything. She tore through the streets and alleys of Paris, tore past the yellow ribbons marking the occupied sector, tore past ancient landmarks that had become meaningless in the cold new world. She awoke with difficulty, clawing her way through darkness and struggling to open her tear-encrusted eyes against a bright light. She remembered being half dragged, half carried through Jacq's command center, thrust into an inner office, then crying herself to sleep, haunted by the sight of Raza's eyes, pleading with her even in death. She moaned softly in frustration, the rest of her body being much slower to wake and far less willing to move than her eyes. When she finally could focus and turn her head, she realized she was laying on a short couch. Her legs were draped over an arm of the couch, her head up against the other arm. She managed to roll slightly and saw a man, leaning against a door across the room, busy with a cell phone. He glanced at her, then opened the door behind him and said, \"She's awake.\"\n\nJessa levered herself up into a sitting position, making her head throb in the way it always had after a crying jag. She closed her eyes against the brightness of the room, taking a deep breath. When she reopened her eyes, Jacq was entering through the door. He scowled at her. \"Why do you insist on fighting hardest against the people trying to help you?\" he demanded. His very voice made her head throb even worse.\n\n\"Because you terrify me,\" she whispered. \n\n\"And people hunting you, people willing to kill an innocent servant, don't?\"\n\n\"What?\" She shook her head despite the pain. \"They killed Raza because of me?\"\n\nHe sank wearily into a chair perpendicular to the couch. \"It looked like she was tortured,\" he said more softly. \"Someone trying to find out your location.\"\n\nJessa gasped. \"Shay!\"\n\n\"She's safe. We moved her. Fortunately, she was in her own apartment when someone smashed the door to yours.\" He sighed heavily. \"I hate to say this, but your disobedience may have saved your life. Although if you ever disobey me again, Torah be damned, I'll whip you myself.\" He waited a moment for the words to sink in, but she just clutched herself and rocked softly. \"We're collecting video. I want you to look at it. See if it might be the man you saw last night.\"\n\n\"I don't understand any of this,\" Jessa moaned.\n\n\"We went to great lengths to keep your location secret...\"\n\n\"Arnau! He knew, I took him there!\"\n\nJacq shook his head. \"I told him what was going on, where we had located you. It was one of his buildings, because we knew the surveillance would be good. He keeps protectees there himself.\"\n\n\"But if he wanted to hurt me... Get revenge...\"\n\n\"He wouldn't have any reason to kill your servant. And he would have known how to avoid his own security. I've been assured we have at least some surveillance video capture. Arnau can be slimy at times, but not like this.\"\n\n\"Then Renik? I mean, his men?\"\n\nJacq shook his head. \"We know them all. They couldn't get within fifty kilometers of Paris without me knowing, let alone into the occupied sector.\"\n\n\"Then who?\"\n\n\"I don't know.\" He reached out and grasped her hand, much more comforting than his initial entrance. \"Torah is on his way. We will sort this out, but in the meantime, you need to stay safe. I can't be chasing you and your hunter around at the same time. Jessa, please. Just do what you are told. Don't fight me on this. Don't try to solve everything yourself.\"\n\nJessa's head snapped up. \"My tablet. In the apartment.\"\n\nJacq frowned. \"What was on it?\"\n\n\"Was it still there?\" she asked, ignoring his question.\n\nHis eyes narrowed. \"I'll have my men check. Jessa, what was on it?\"\n\n\"Just please, bring it to me. Don't let them try to access it. You can wait till Torah gets here to give it to me, just don't let anyone try to see what is on it. Please, Jacq.\"\n\n\"I will see if it is still there,\" he agreed noncommittally. \n\n\"Why Raza?\" Jessa moaned, feeling her eyes well with tears again. \"She never hurt anyone.\"\n\n\"Arnau's idiot City Forces. They knew to be concerned when they found your car in the parking lot, but then they broadcast it on the radio. I'm guessing that when the man you saw last night couldn't find you, he staked out the car until Raza showed up. Tortured her until he got the address, then killed her.\"\n\n\"Tortured her how?\"\n\n\"You don't need to know that, Jessa. It doesn't matter.\"\n\n\"It does to Raza!\" she sobbed. \"So it does to me.\"\n\n\"Jessa, let it go. I swear to you that Torah will make it right by her family.\"\n\n\"Money can't replace a life,\" she snapped, jumping to her feet.\n\nJacq stood up at the same time and shoved her back down onto the couch. \"This is what I'm talking about, Jessa. What are you going to do? Fight? Fight whom? Or maybe you think you can go to Raza's family and tell them you're sorry? You think that will make them feel any better than Torah's money? Get real,\" he snapped, stalking out of the room.\n\nJessa curled in on herself and sobbed, but part of her had to acknowledge the truth of what he said. There was no way to ever make things right by Raza. She uncurled slowly and noted with chagrin that the man at the door was back again, leaning against the exit to the room, enthralled by his cell phone. She examined the room more closely and realized it only had that one exit. There was a window, though blinds covered it. Jessa stood and went to the window to look out. Her 'companion' was there before she could even reach for the pull.\n\n\"No,\" was all he said.\n\n\"No, what?\" she demanded, but he would not elucidate, simply holding the blind pull out of her reach. She took his measure, but he was built like a brick wall, stolid and heavy. She knew she could outrun him easily, but wrestling him for a blind pull was simply a fool's errand. She turned back to the blinds and tried to separate the slats. He pushed her away so brusquely she fell on her ass. She glowered up at him.\n\nJacq came back in the room and took in the scene with exasperation. \"Ten minutes? You couldn't even go ten minutes without disregarding everything I told you?\"\n\nShe looked over at him, trying to appear in control despite sitting on the floor with her arms braced behind her. \"I wasn't trying to run or fight. I just wanted to look out the window.\"\n\n\"So that whoever might be out there could look in?\"\n\nJessa straightened and shrugged uncomfortably. \"I can't do this, Jacq. I can't do any of it.\" She ran her hands through her hair. \"You want me to live in fear. I don't know how to do that. I don't even know how to begin to do that. I don't want to do that. I wasn't raised to do that.\" She threw her hands in the air in frustration. \"I see a goddamn window, I want to look out it. I see a door, I want to walk through it.\" She drew a deep breath. \"Most of all, I fucking don't want other people dying because of something I am. What the fuck am I, Jacq?\" She turned an intense gaze on him, then repeated, \"What the fuck am I?\"\n\nHe stared back but offered no answer. Jessa stood slowly, deliberately, and walked toward him until she was toe to toe with him. \"I am walking out of here and I am taking control of my own life.\"\n\n\"I'm sorry, Jessa. I can't allow that,\" he said, seeming sincerely apologetic.\n\n\"I'm not asking, Jacq. I'm warning you not to stand in my way.\"\n\nHe ducked his head, trying to hide his humor at her brashness, and she clenched one hand around the other and slammed them upward, into his chin, with all the force she could muster. He staggered back and she didn't wait to see if he fell. She leapt for the door, knowing she could only be a few steps ahead of the other man, let alone Jacq if he maintained his footing. Her only hope was to run at her top speed, without pausing to decide on direction. Indecision was disaster. In the tiny glimpse she'd been afforded between the slats of the blinds, before being shoved on her ass, she had guessed that she was on the third floor of the building.\n\nShe burst through the door into an office, Jacq's presumably, with another door opposite. She raced for that and emerged into a larger office with a number of desks and a door at the far end. She ignored the two men sitting at desks in that room who jumped to their feet. It didn't matter how many might chase her. It only mattered that she was the fastest. That was what had been drilled into her when she competed, and now she was competing for her life, or so it felt. Reach, spring, kick, she recited to herself, as if on a cinder track. The door before her opened and she was faintly aware of a surprised face before she literally knocked the man to the ground and leapt over him, sprinting down a hall, hoping for an exit along the way.\n\nShe could hear pursuit behind her; someone calling her name. She didn't care. At the end of the hall, she could clearly see an exit sign. Nothing mattered to her in the moment save being away; away from everyone that sought to make her be someone she was not. She lost maybe half a step pulling the heavy stairway door open, but then a welcome sight greeted her. She had spent may long hours practicing on the steps of an old football stadium, leaping down six or more steps at a time, because she didn't have a coach there telling her it was better practice for her muscles to run each step. Without even thinking, she took each flight in three strides, using the handrail to swing across the landings to the next flight. She heard someone fall on the stairs, perhaps trying to emulate her feat. She didn't care, because the main floor landing was in front of her and she was tugging at the door.\n\nIt wouldn't open and she screamed in frustration, even as she turned to descend more steps. No hesitation, she scolded herself. Jessa felt panic rising in her chest as she flew down the last set of steps. The window in the door showed a level of parking. She tugged at the door and felt it give, reluctantly. Again, there was no time for decision-making. She raced down the parking aisle straight in front of her, hearing feet pounding in pursuit before she had covered even a third of the way to the end wall.\n\n\"Focus on the finish,\" her father had drummed into her, but she didn't know where the finish was in this race. What she did know was that she was underground, and that meant she had to go uphill. As she got closer to the end wall, she could detect an incline to the right and angled that way. She refused to look back, but she could hear footfalls, angling across the aisles of the parking, trying to cut her off. She was racing up the incline and ahead she could see small elongated triangles of sunlight hitting the floor where the underground parking gradually began to emerge at ground level. Areas where a svelte, toned female could squeeze through. As opposed to a stocky, muscle-bound council agent. Again, it was one of those instant decision times, but this was one of the few decisions that Jessa felt capable of making anymore. She gauged the sun and angles and leapt sideways, slithering through the opening just as fingers grazed her ankles. Jessa rolled and ran the opposite direction from her previous track, knowing her pursuers would need to follow the incline to find wider openings. \n\nShe was in the administrative part of the occupied sector, filled with office buildings. She reached a corner and turned downhill. Out of the corner of her eye, she could see two men running after her and another two pulling themselves from the parking garage. Jacq was one of those in full pursuit, and yelling into a cell phone. Ever so briefly, she wondered if he was talking to Torah. But then she shook that thought off, and concentrated only on each step. She knew the foot race would soon give way to cars and she couldn't hope to win unless she found terrain where cars could not follow. That meant the river, and she dearly hoped the current downward slope of the street she was following was leading her there.\n\nThe office buildings gave way to a corridor of restaurants, shops and parking lots facing the park bordering the river. Jessa laced a convoluted path through the buildings and into the park. She was seeking an area of the river roughly equidistant from bridges crossing it. She angled upstream, hoping her pursuers would think she was making for a footpath along the banks and possibly angle even farther upstream to cut her off. Without breaking stride, Jessa veered suddenly and dove into the river. The water was icy cold, but not that different than her beloved lake, and she knifed through it underwater as far as she could before coming up for air and breaking into the fastest stroke she knew. She ignored twin splashes somewhere behind her, focusing on her father's words when he was teaching her. \"In a river,\" he had said, \"never fight the current. The river will always win. Don't set your goal as a spot on the far bank, but simply as the bank itself. Let the river carry you where it will.\" She did just that, stroking hard for the far bank, ignoring the splashing behind her and the running footsteps headed for the foot bridge downstream. Either she would make it to the bank ahead of them, or she wouldn't.\n\nWhen Jessa reached the far bank, she barely spared a glance at her pursuers. Her ploy had gained her significant distance. The swimmers in particular were struggling against the cold and the current. The two runners had only just reached the far end of the bridge and were beginning to slow, breathing hard. She wasted no time on gloating, though, as she made her way across the green space and into a residential area. Here there were more alleys and spaces between buildings, and that was what she needed now. Places cars couldn't follow. She wove and twisted between buildings and through shrubbery until she reached the unoccupied zone.\n\nShe began scanning the streets before emerging into the opening. As she had expected, there were frequent cars, cruising slowly through the streets, looking for her. She also noted with chagrin that at least half of them were City Forces. Jacq had called in Arnau's help. She ran in spurts, dashing across open spaces, then stopping as soon as she reached cover to plan her next dash. The farther she went from the occupied zone, the more decrepit the buildings became, some even totally collapsed making nearby streets impassable, to Jessa's relief. Other buildings were so riff with decay she skirted wide around them just for fear they might collapse at any moment. She reached an overgrown park and plunged into the greenery. She was trying to maintain the northerly heading she had first taken, her instincts pushing her to put as much distance between her and Jacq's headquarters as possible. Once in the park, she found herself constantly having to backtrack when she would reach areas so overgrown she couldn't pass. When she finally emerged on the far side of the park, it was to find herself in another area of apartment buildings. The cars seemed less frequent now, but she noticed they had taken up vantage points at long abandoned intersections, looking up and down the straight avenues to watch for signs of her.\n\nJessa realized that her only hope was to wait for nightfall and the help of darkness. And to pray that her pursuers were not well equipped with thermal imaging. There was no crowd to hide among, here. Even feral animals appeared to have abandoned the city and its empty confines. She crawled deep into one of the less decayed buildings and curled up to rest and wait for darkness. Unfortunately, once she quit running and thinking only about the next few moments, her thoughts turned to dread of the anger that was already turned her way. She had seen just this morning - it seemed like days ago - that Jacq was capable of the same deathly cold anger that had been trained into Torah and Erich. And now, he had said, Torah was on his way. From where? How long would it take him to get here and be on the hunt for her, too? Did she have any hope of surviving, despite the Council's plans?\n\nYet, underneath the fear, at a much deeper level, there was a solemn resolve that she could no longer live this way, not knowing who was friend or foe, who's wrath might deliver instant death, to her or someone she cared about, and most especially, not knowing what the Council, or whoever was behind all of the mysteries, meant for her and Torah, and most especially for their offspring. In the darkness of the empty guts of the building, her eyes glowed with resolve. She would live free or she would die. It didn't really matter where or how, at this point. Simply surviving was no longer a viable option. And somehow, reaching that realization filled her with strength and will, rather than despair. She became eager for night to fall, to continue her journey, even entertaining thoughts of finding some way to reach the Americas, out of the reach of Council agents, their enemies, and the even more mysterious scientists that lusted after her progeny. Jessa closed her eyes, but she did not sleep. Her mind was flying with possibilities, now that she'd made a decision for her own life, even as it had when she decided to forego marriage and the ludicrous rituals of Summer's End to live life on her own terms. That hadn't worked out so well, thanks to Torah and his Council, but she was much wiser now in the ways that this world operated, and if anything, even more determined.",
        "****\n\nJessa crept through the streets, hoping she was following a northward route. Random clouds were obscuring the stars she sought for direction, and she was weaving her way along, trying to likewise obscure her own path. She still saw cars about, but they were fewer and, with darkness on her side, somewhat easier to evade. With the dark, though, they had returned to some sort of search pattern that she couldn't parse so she was frustrated with the slow and careful pace of her progress. She finally picked out a taller building, that seemed somewhat sturdier than most of the ones around her, hoping that she could reach the roof where she would be able to see the way ahead and the edge of the old city, though it might mean waiting until the moon found a hole in the clouds. \n\nShe layered on even more care as she made her way toward the structure, hoping the men pursuing her would not come to the same conclusion she had, or at least not about the same building. When she reached it, she was pleased to discover that the wooden door was still intact, though hanging askew on rusty hinges. She took that as a sign of more sturdy construction. She searched out a back, utility staircase that was framed in metal, rather than wood, and began a cautious climb toward the roof. The building was six stories and she was heartened yet again that the staircase was solid even at the highest story. When she climbed the final, narrow flight to the roof access, however, it took her shoulder and a few swear words to budge the rusty steel door. The roof turned out to be another matter entirely. The rainwater downspouts had obviously plugged up years ago, and the heavy standing rainwater had broken through the roof in numerous places.\n\nFor long moments, Jessa stared in dismay at the distant roof edge and the obstacle course of holes and sagging roof between her and the edge. Slowly, though, her eyes began to pick out a pattern to the ruin, and she could make out rows of sturdier roofing where beams or girders ran from south edge to north. She gingerly circled the stairway access and then picked her way along a beam that ran behind it all the way to the north edge. A short brick wall, matching the fa\u00e7ade, circled the edge around the circumference of the building and Jessa climbed onto it for an even better view, after checking the street below for any search vehicles. As she had feared, she was going to have to wait for the moon to find a hole in the clouds before she would be able to see much beyond the next few blocks. \n\nShe hissed in frustration and turned her search to the nearby streets, watching for cars. With their lights on, they were easier to see at a distance. Indeed, the City Forces vehicles had spotlights they were using, shining them into buildings and alleyways. As with others, she recognized their two-dimensional thinking. They never seemed to look up beyond the first story. She just didn't trust that Jacq would have the same limitations, since she had told him about climbing a fire escape to evade pursuit. Jessa jumped down off the short wall and settled to the rooftop, sitting with her back against the wall. That helped get her out of the chill north wind. When she had dressed that morning, that seemed like ages ago, she had put on her most comfortable running clothes. That had proved ideal for her flight through the city and even for her brief but icy swim across the river, but not so much now that she wasn't running to keep herself warm. Still her training had taught her how to ignore minor discomfort in pursuit of the win and right now, winning meant getting out of the city; into the countryside, where she could find people and therefore, food and clothing, even if she had to steal again. She wouldn't make the mistake of going someplace known again, or of trusting anybody. Maybe a fishing boat sturdy enough to make it to the Americas, she thought, as she watched the clouds pass in front of the faint glow of the moon. She didn't want to steal somebody's livelihood. Maybe she could send a note to Torah, beg him to forgive her and make it right by the fisherman.\n\nShe continued to pursue the thoughts of sailing across the North Atlantic as she rested and waited. She dredged her memories of long ago studies pertaining to weather and currents and winter seas, trying to determine what she would need, how long the trip would take. In her imagination, she could even hear the chugging of the boat's engine. Would it be gas powered? She realized she had no idea if modern fishing boats ran on gas or battery. The cruise ship they had taken on the North Sea - was it really only a couple of months ago - had run on batteries, but it had just been a short day trip. Jessa noted a gap in the clouds fast approaching the moon and she stood, not daring waste a moment of the precious light. That was when she realized the chugging was not in her imagination. She looked around with alarm, and there, in the distance she saw one of the rare helicopters. And it appeared to be searching for her, with a spotlight shining down onto the buildings below as it flew slowly in her general direction. \n\nJessa ducked back down behind the wall and thought frantically even as the moon shown forth, still nearly full. She cursed her running outfit now, with its white and light pink design. Against the dark rooftop, she would shine like a beacon. But if they had brought in a precious helicopter, they would certainly have thermal imaging equipment. Not even six stories of building might be enough to protect against that. And even if it were, how could she get inside the building without being seen? She eyed the nearest hole in the roof. She could jump down through that, but would risk landing on a floor that was even more decrepit than the roof, if indeed it still existed at all.\n\nShe peeked back over the edge of the wall. The helicopter was big enough to carry perhaps six people. They could all be looking right where the spotlight was shining, but that seemed pretty unlikely and not worth counting on. Still, she was sure she could make it to the stairs, even if she was spotted, and at least she knew the stairs were safe. She also knew she would be safer from the helicopter on the streets than on the roof. She jumped up and ran, retracing her footsteps, not daring to take her eyes from the precarious rooftop until she reached the stairwell bulkhead. When she looked over her shoulder, the helicopter had indeed veered her direction and sped up. Someone had been looking. Jessa swore under her breath as she circled the bulkhead. Then the sound of squealing tires rose up from the street below. And from somewhere not too distant, a siren echoed between buildings.\n\nJessa gave a quiet sob, but she had made her decision, now they would have to make theirs. She turned and ran back to the wall, leaping atop it even as the helicopter circled the building. Let them try to land, she thought, but they had seen the state of the roof and instead, circled back out over the street, staying just far enough away that the wash of the blades wouldn't endanger her balance. Jessa spotted the bars of a fire escape and made toward it along the wall. The helicopter pilot must have realized her goal, because suddenly it was there, hovering between her and the possible escape. Even as she debated jumping down to the roof and trying to crawl under the foot rails of the chopper, a car pulled up at the foot of the fire escape, disgorging its occupants.\n\nJessa backed away from the helicopter and it returned to hover over the street, giving her space, she supposed. She could almost imagine them trying to determine how hysterical she might be. Let them think they had a hysterical jumper on their hands. She knew better. She burned with determination. They would either leave her alone, disappear and drop their pursuit or she would choose death over whatever it was that they had chosen for her. When she began to close in on the corner of the building, what she had come to think of as her bargaining pulpit, the helicopter was suddenly there again, blocking her way, as if they could read her mind. Jessa looked down at the street. Let them think she was getting close to jumping, and indeed, the chopper backed off slightly, still protecting the corner of the wall, though. And now men were coming out of the stairwell. Jessa watched as one of them started directly toward her and fell through the weakened roof. She could take only dim pleasure in that, as the others, now forewarned, were spreading out and following the path of various beams. Jessa spread her legs and put her hands on her hips, watching their approach. \n\nAs they came closer, she could see that Jacq was to her right. He was watching her but motioning to the men with him, who seemed to be a mix of City Force and Jacq's. She had the one farthest to her left pegged as one of Jacq's since he seemed to take direction quickly and easily from a complex series of hand signals, whereas most of the rest were obviously trying to figure out more generic hand signals. For a few moments, there was a steady stream of them, until eight men had advanced on her position. One had been left at the stairwell to advise new arrivals where the safe parts of the roof were. Jessa easily recognized the tall, lean figure of Arnau arrive and listen with undisguised impatience as the roof terrain was explained. When he finally sidled sideways then advanced in her direction, she scowled and concentrated on Jacq, who was at the edge of the roof, next to the wall and creeping toward her every time her attention was diverted.\n\n\"Stop!\" she commanded.\n\nHe obeyed, looking at her with a detached observation that didn't fool her a bit. She stared back at him fiercely. \"Come down here and let's talk,\" he suggested calmly.\n\nJessa shook her head, using the opportunity to keep an eye on the man to her left. The rest had stopped back some distance. \"I'm through talking. I told you. I'm taking control of my life now. And if that means ending it, then that's what I will do. You can leave or watch. I don't care.\"\n\n\"You know you don't mean that, Jessa,\" he said quietly.\n\n\"What part of what I told you earlier didn't you believe?\" she asked. \"Would you live like this? Hiding, fearing, denied the one thing that fulfills your life? Would you, Jacq?\"\n\n\"You're being foolish,\" Arnau said from a short way in front of her. \"Get down here.\"\n\nShe turned toward him as Jacq threw a scowl his way. Jessa noticed with interest that the man on the left seemed enthralled in something on the street below, but she wasn't going to be foolish enough to look down there. She turned her hard stare on Arnau. \"What do you know from foolish? All you're interested in is fucking.\"\n\nHe spread his arms as well as he could with the splint on one. \"There are worse preoccupations. You should find one to take up and stop acting like a spoiled brat. You think everyone else gets exactly the life they want? This isn't a fairy tale.\"\n\n\"Shut up or I'll break your other arm,\" she snarled. \n\nArnau stiffened and was on the verge of a retort when Jacq interjected, \"Leave it, Arnau. When you've been what she's been through, then you can judge.\"\n\nJessa's eyebrows shot up. \"So now I'm supposed to believe that you're on my side, Jacq? No one's on my side. Not you, not Torah, not my family. No one.\"\n\n\"We are on your side, Jessa. That's why we're here, trying to keep you alive. Someone out there is trying to kill you. I don't know who, and that pisses me off. And now here I am trying to keep you from doing it for them, instead of my job, which is finding out who they are and wiping them out of my city. So would you please just get down here and let's solve this thing together.\"\n\nJessa laughed bitterly. \"Together? Since when has anybody included me in anything. You're all hellbent on keeping the truth from me. Well, you know what? I don't give a damn what the truth is anymore. I just want out of here, by whatever means necessary. So like I said, leave or...\"\n\n\"Isn't that Torah?\" the man to the left of her interrupted. \n\nDespite herself, Jessa looked over her shoulder at the street below and that was all it took. Jacq went flying through the air, hooking an arm about her waist and pulling her off the ledge to the rooftop. Before they even landed, a shot rang out, impossibly loud in the quiet, dead city. Jessa heard a crash as she fought to pull away from Jacq. He had drawn his gun and was trying to roll the both of them so that he would be on top of her, both for protection and to hinder her struggles. As they rolled, she saw Arnau, laying on the roof. He had fallen toward them when a bullet had exploded out through the back of his head. Jessa screamed, watching as his body broke through the feeble roof, in slow motion sliding down into the dark depths of the next floor. But the slow motion disaster didn't stop there. The hole that opened under the weight of Arnau's falling body continued to spread, the edges crumbling inexorably toward her and Jacq. His arm squeezed around her, then his gun hand wrapped around her, too, as if he could stop their inevitable fall if only he held her tight enough.\n\nJessa gasped once as they began to fall. The moon chose that moment to break through the clouds and show her Arnau's body laying sprawled on the floor below surrounded by squares of ceiling tiles and decrepit insulation. She was conscious of the floor creaking, threatening to drop the body even deeper into the bowels of the building. She was aware of Jacq twisting in midair as they fell, trying to put himself between her and the floor rushing up at them. Through it all, he refused to release her, and Jessa felt more helpless than ever. Whatever little bit of control she'd gained over the last hours, or perhaps it was only the delusion of control, had been ripped from her yet again. Then she was aware of nothing but a screaming pain in her elbow before blackness enveloped her.\n\n****\n\nJessa awoke slowly, painfully. Once again, her head was throbbing, but this time, the pain seemed centered in her temple, and when she gingerly reached for it, a shooting pain lanced through her elbow and she gasped. She rolled onto her back and tried the other arm with more success. It turned out both temple and elbow were bandaged, so apparently she wasn't laying in the guts of an old building anymore, though the room she was in was dark. She tried sitting up and, though aching everywhere, seemed reasonably intact. Once up, she realized she was in a hospital bed. There was IV tubing in her undamaged arm, but it wasn't hooked up to anything at the moment.\n\nThere was a rail on the side of the bed and she wrestled with it, trying to lower it. \"Leave it be,\" a voice said and Jessa cringed. Torah. She spun around and spotted him, a faint outline against the dark window. She returned to wrestling with the rail on the far side of the bed. She had just gotten it lowered when he was there, in front of her, gripping her good arm and reaching for a soft light at the head of the bed. She hit at him with her other arm only to discover that her elbow had been immobilized and her fist fell uselessly against his stone-hard chest, not that reaching his jaw would have been much more effective. It did however send waves of pain through her elbow. She hissed in rage as she slid to her feet and tried again but he caught her wrist, gently but firmly and pressed her back against the bed.\n\n\"Why did you kill him?\" she screamed. \"I told you I handled it.\" She struggled in his grasp despite the pain that shot through her elbow and head.\n\n\"Who?\" he asked calmly.\n\n\"Arnau, damn you! Why?\"\n\n\"I only got into town about twenty minutes ago. I'm pretty sure I didn't kill him.\"\n\n\"What?\" she said, finally pausing long enough to study his face. He was subdued and serious, but not the cold, unemotional persona she'd come to equate with his most lethal anger. \"If you didn't kill him, then who did?\"\n\n\"Jessa, that bullet was meant for you. The only reason it hit Arnau was because Jacq picked that moment to haul you down from that ludicrous stunt you were pulling.\"\n\n\"Stunt? That's what you think? That it was just a stunt?\" She snarled, momentarily distracted.\n\nHe paused a long moment. \"No.\" Jessa stared at him in disbelief. \"Get back in the bed,\" he said. \"The doctor wants you to rest. Please,\" he added as an afterthought.\n\nJessa sank back down onto the bed, but made no effort to lift her legs onto the surface. She continued to stare at him. \"So, it was the man who killed Raza?\" she asked, stunned back to the topic at hand.\n\nTorah shrugged. \"Him. A cohort. Someone else entirely.\" He looked at her sternly. \"If you hadn't decided to go running all over town, perhaps we'd know by now. How is Jacq supposed to do his job when he's running around after you?\"\n\n\"Why would somebody want to kill me?\" she whispered, ignoring his reprimand. \"I thought... I mean, the genetics, our children...\"\n\n\"Hush.\" He said, pushing her back and lifting her legs onto the bed before pulling the covers back over her.\n\nShe shook her head in frustration. \"You know, don't you? That every nineteenth child that we have will be special in some way. A way that has something to do with stem cells. If you know something more, please tell me!\"\n\n\"Not here,\" he said with a shake of his head. \"And not when you need to rest,\" he said, tugging at the sheets.\n\n\"I don't understand,\" Jessa protested, trying to sit up again. \"Why aren't you mad at me? You're always mad at me.\"\n\nHe took her shoulder in a firm grip and pushed her back down on the bed. \"Rest.\"\n\n\"Talk to me,\" she demanded, though she didn't try to sit up again.\n\nHe gazed solemnly down at her. \"Because I almost lost you today. Four times. I'll get mad later. At least, about the times that were your fault.\"\n\n\"What?\" She said, trying to rub her temples in confusion and only belatedly remembering the bandaging.\n\n\"That gymnastic trick balancing on the edge of a six-story building. And then making Jacq haul you down onto a rotten rooftop. I'm holding you responsible for that stupidity.\"\n\n\"Is Jacq okay?\" She asked more quietly.\n\n\"He is.\"\n\n'Torah?\"\n\n\"What?\" He had moved back to the window, keeping watch, though now, with the faint light in the room, he remained at the far edge, in deeper shadow.\n\n\"The reason I broke Arnau's arm? When he took me against my will...\"\n\n\"Yes,\" he prompted, somewhat tersely.\n\nShe picked nervously at the hospital blanket. \"There was a time before that, well, that wasn't against my will. I mean, I told him never again after that, but I... He...\"\n\n\"Didn't listen. I know.\"\n\nJessa rubbed at her eyes. \"I led him on, then changed my mind. It's my fault...\"\n\n\"No,\" Torah responded sharply. \"Some things are beyond your control. Arnau's sex drive was one of them.\"\n\n\"But he didn't deserve to die,\" she argued.\n\n\"No. That's why I didn't kill him.\"\n\nJessa stared at him in the dim light. It was like he was draped in a blanket of calm this night, when she was anything but. \"Torah, what I did today?\" He glanced at her then back to the street below. \"I didn't do it to hurt you. Or even, really, to run away from you or from Jacq. But, I just can't go on like this. I can't live in fear, and I can't live in a cage. I will die, one way or another. Whether it is by jumping off a building or just withering away.\"\n\n\"It was never my intent to make you fear me,\" he said softly, yet with a hint of annoyance. \"If you had only obeyed...\"\n\n\"I know.\" When he glanced at her, she shrugged. \"At least, I've come to believe that,\" she amended, with an apologetic smile. \"I used to think nothing scared me. My mother would see me wrestling with my brothers or racing down steep hillsides and throw her hands in the air, while my father hid a proud smile from her. I'm strong, Torah.\"\n\n\"I know you are.\"",
        "\"But strength is useless in the face of your anger. And I don't know how to be the kind of person that doesn't make you mad all the time. I... I don't want to be that kind of person.\"\n\n\"Then don't,\" he retorted so sharply, she suspected that his anger was rising to the surface again.\n\nA faint tremor went through her and she sighed. \"So it will always be like this? Me, in a cage, gilded or not. You, with your anger barely in check, or not.\"\n\nHe was so still, she was sure he was hiding his anger from her. But when he finally spoke, the ethereal calm seemed securely back in place. \"We just need to find another way. Love...\"\n\n\"Love?\" she scoffed, then cringed when he turned sharply and she realized she'd interrupted him. \"I don't love you, Torah,\" she said softly, with all the sincere regret she could muster. \"I don't know if love even exists in this world we live in now. I know you once said you were falling in love with me.\" She took a deep, shaky breath. \"I don't believe it.\" She looked at him boldly, but careful to keep any shadow of defiance from her features, even though he probably couldn't see her face that well in the darkened room.\n\nTorah reached up to his neck and pulled a chain free from beneath his shirt, then over his head, tossing it onto the bed next to Jessa. She looked down and saw the pendant he had given her, after taking it back from Lania. Jessa shook herself so slightly, the motion was almost imperceptible. \"I was wrong. You loved her,\" she stated simply.\n\n\"Yes.\"\n\n\"Are... Samu and Saula, are they...\"\n\n\"My sons? No. I was in a training camp when Lania was sent to my father.\" Torah shrugged. \"He did his duty. He impregnated her. But he truly loved my mother. He never treated Lania badly, he just wasn't interested in her beyond the children she carried. When my father began to ail, I came back from camp. I admit, I fell in love with Lania. I even made sure that she was allowed to stay after the twins were born. My father was too sick by then to insure they had the strongest start or that Lania was treated properly.\" He shrugged. \"Maybe it wasn't necessary. They were early and small, but healthy and they thrived. Still, it gave me a few more months with Lania. I petitioned the Council to let me keep her. She was Elite, like you, but genetically sound and with a family history of multiple births. I thought for sure they would agree, as I had the ability to protect her on the family estate. She wouldn't face the normal dangers of being wed to a council agent. I couldn't believe when they turned me down. And then to give her to Renik of all people.\"\n\n\"I'm sorry,\" Jessa said. \"And I'm sorry I'm not her.\"\n\nTorah stood at the side of the window, looking out at the night for the longest time without saying a word. \"You are her, in some ways,\" he finally said. \"In enough ways, that I forget sometimes.\" He turned slightly to look at her. \"You are beautiful. You are fiercely sexual. You are smart, smarter even than she was. You are stronger than she was.\" He shook his head. \"But she was obedient. Whereas you defy everyone for the sheer joy of disobeying.\"\n\nJessa shook her head vehemently, but he held up a hand. \"I thought I wanted, needed, obedience, but now I am not so sure. I thought the council's way was right, that women needed to be protected, impregnated, and focused on nothing but childrearing. When you killed Renik, easily escaped his men's dragnet, then fled across country, I was angry. Seething. Not because of what you accomplished to find temporary safety. I was angry because you had shaken my beliefs to the very core. I had failed to protect you and so you had protected yourself in spectacular fashion. I tried to let go, to treat you the way my father had treated Lania; better than he had treated her. Make you a Tenth Lady, see to your child-bearing in the least intrusive way possible, provide for your wants, your aspirations.\" He paused. \"I even resigned myself to looking the other way if you should need to satisfy your sexual appetites.\n\n\"Then I found I couldn't let go. I thought that was what you wanted, yet you seemed to defy me again, showing me that wasn't what you wanted at all. I was floundering. I began to think that defiance was your only goal in life. To do the exact opposite of what I wanted or needed you to do. Then when I gave you that schedule, what should have been impossible for someone like you to adhere obediently to, you not only followed it, you essentially thanked me for giving it to you with lusty sex. What was I supposed to think then?\"\n\n\"That I realized you were right,\" she stated softly, then shrugged. \"About the computer use, anyway,\" she added with a rueful smile. \"The more I explored the councilary web, the more puzzles I found. I thought I would get answers, but I only got vastly more questions. I became obsessed. I needed you to show me that.\"\n\n\"And now you have a new obsession,\" he concluded.\n\n\"I think it's one you wanted me to have,\" she challenged, her chin jutting out as she stared boldly at his shadowy figure.\n\nHe gave a rare, slight smile she could only just make out in the soft light. \"Perhaps we both have ulterior motives we hide even from ourselves. But here is not the place for that discussion. Please. Rest so the doctor will release you. Then we can talk.\"\n\n\"Torah?\"\n\nHe sighed heavily in exasperation. \"Jessa, please, just once...\"\n\n\"I just want to know what I did to my elbow,\" she protested.\n\nHe rubbed his face to hide his smile. \"It was dislocated. Doctor wanted to keep it immobilized for a few days while the soft tissue heals.\"\n\n\"Torah?\"\n\n\"I swear if you ask one more question, I will have the nurses gag you!\" He exclaimed, but with that faint smile that he couldn't seem to shed.\n\n****\n\nJessa was back in Jacq's conference room, pacing, eyeing the door. She was in no shape to make a run for it again, and she was certain, beyond any doubt, that she would never elude Torah; hadn't even been successful eluding Jacq, in the end. She was just slightly flattered that Torah seemed to think it took someone with the training of a Council Agent to contain her. That only served to guarantee he would be sure such containment was in place. Anyway, she was more than a little intrigued by the vague hints he had dropped and the ultra-secure conversation he was setting up; at least, that was why he had told her he was bringing her back to Jacq's office. So now, she was waiting impatiently for his return, craving whatever new information he could offer, like a drug she'd been too long without.\n\nWhen he finally did enter, it was with Jacq and Erich in tow and her breath caught. She wasn't sure she was ready to trust them. Being bound to Torah, by so many tethers, forced her to trust him in ways she wouldn't have chosen had there been any other options. But the others, equally as terrifying, and to whom she was - obviously - more annoyance than any woman was worth; to be bound to them by commonly held secrets was almost more than she could bear. She watched as they settled at the conference table. Jacq had given up all pretense of friendliness, though at least he didn't seem angry. Erich struck her as restless and impatient, hauled here against his will by Torah, perhaps? Torah, at least, still had his current calm demeanor and led her to a seat at the table with an arm about her waist, then settled next to her.\n\nPerhaps Torah noticed her eyes flitting nervously from face to face. He took her hand and tugged until he had her attention. \"I've asked Jacq and Erich to help us with this... puzzle, because I trust them implicitly. And because this is too complex, too well hidden for us to solve alone. We need help and we need it fast.\" Her eyes widened. \"You will ovulate soon,\" he explained. \"As you've no doubt come to understand, it is more than just certain members of the Council that are interested in our progeny. Including, perhaps, whoever is trying to kill you.\"\n\nShe formed a silent 'Oh.'\n\n\"I will start, as my knowledge goes back further in time, if not in depth, than Jessa's.\" He leaned back in the chair, though he kept his grip on Jessa's hand. She wasn't sure if that was too keep her from fleeing, or to comfort and assure her. He took a deep breath and began, \"I wasn't exactly secret about my disappointment concerning Lania being reassigned. Unfortunately, my Father's death gave certain other Council members more power, or at least more bravery to speak out against my family's interests. In the beginning, I thought that was what it consisted of, revenge against my family, or the power that my father had wielded.\" \n\nHe paused and glanced at Jessa. \"My father was very skilled at collecting favors, and reminding others of debts yet to be paid off. Part of that was because he helped a great many people who were more than happy to return the favors paid. Part of that was that he had a very extensive intelligence network. He began his career as a Council Agent, and took information gathering to new heights. Even when he moved on to different pursuits, he nurtured that network, but by then, he was freer to focus it on enemies and others in high places. When he rose to a Council position, many felt powerless to defy his will, because of what they owed him or what he knew about them.\" He paused. \"Drau was one of those.\n\n\"My father, and my mother saw to it that I inherited that network and banked those debts for the future. It took time to engender the trust of those who had fed him the information which he put to such valuable use; to convince them that not only their identities were safe with me, but that I would use the information they provided wisely. Lania was dead before someone came to me and revealed that the council denied her to me, not out of revenge, but because there was a greater plan afoot. I of course immediately set about to learn what that greater plan might be, with little success. When I was told about a year later that I was being sent to Summer's End to find an Elite for a wife, I figured that couldn't be the plan, because Lania would have fit that role easily. I fought the idea until I heard a whisper that it was part of the great plan.\" He shrugged. \"Curiosity took over.\"\n\n\"So you didn't choose me?\" Jessa asked softly, not sure how she felt about that.\n\nTorah squeezed her hand. \"I did. However, I failed to pick up on how pleased certain council members seemed with my choice, nor that they were prepared to argue me out of any other choice. I was more interested in getting the whole ordeal over with, or do away with it all together. I mean, why Summer's End? Why the pressure to 'seduce' the woman? Probably the one woman at the whole resort that had no interest in being seduced or seducing anyone else. How much easier it would have been just to drive up to her house, take her, willing or no, and bring her home.\n\n\"Then the whisper came again. It needed to be public. It needed to look like it was about the Circles absorbing the Elites. It needed to divert attention from the reality. Save no one seemed to know what the reality was. Thus the early exit, the helicopter, all of it. Grand theater to disguise the fact that it had to be me and it had to be Jessa. They would have preferred that she had come willingly, but that was a minor detail in the greater scheme of things. I didn't find out until later, but they also had me giving her hormones to encourage multiple eggs being released as well as to counteract the water at the resort. I questioned why they were so eager to get her pregnant as soon as possible, but they only insisted that when the maternal hormones kicked in, it would bond her to the idea of marriage and motherhood.\" Jessa snorted softly.\n\nTorah nodded in agreement. \"Once I got to know her, I knew they were wildly off base, but things were in motion. It was too late to take a step back. And I still didn't know what the reality was. It was becoming clear that most of the Council had bought into a story that seemed to parallel the hidden reality. They were told there was something special about pairing Jessa and me, but it wasn't the real something. They believed that we would be able to have many offspring and that the bloodlines of the Circles would be wondrously revitalized as our children came of age and bred. In the meantime, I'm trying to run my team, solve this mystery, convince the most obstinate woman in the world that her new reality - which was everything she had hoped to avoid for her future - was unavoidable, and that she was to have absolutely no choice in the matter, plus Renik has gone off the rails yet again when he heard I was granted a woman.\"\n\n\"So what was the reality?\" Jacq asked.\n\n\"I still don't know. And I don't know who does know; who is orchestrating all this behind the scenes. I know someone, or ones, at the council level is very interested in the children that we can produce and the quantity, apparently. And that these children be produced as rapidly as possible. When the doctor declared that Jessa needed to heal for a month before trying to conceive again, the orders came down that her egg would be harvested and fertilized with my sperm.\" He curled his lip in distaste. \"I have not been able to find out if an embryo resulted or if it has been implanted in a surrogate. That rush doesn't jive with looking forward to a child's contribution to the genetic pool. What is a month or two when you are looking at seventeen or eighteen years?\"\n\nJacq looked at Jessa. \"This is what you needed to go sneaking out at night for?\"\n\nJessa ducked her head. She still wasn't ready to trust the others, but Torah interceded. \"I didn't tell Jessa about any of this. I didn't have any solid information to go on. I needed to dig deeper and I didn't want to risk her if I got too close and made someone nervous. So I left her here, with the keys to the councilary web so that she could learn how to navigate, figuring when I returned with whatever information I could find, we could try to solve the mystery together. It never occurred to me that she would be halfway to solving the mystery herself. Nor did it occur to me that someone would be just as determined to prevent us from conceiving.\"\n\n\"Renik's people?\" Erich asked.\n\nTorah shook his head. \"Renik could have killed her and didn't. This person or persons wants her dead, primarily because she's an easier target than I am, I suspect. Renik's sole aim was revenge, but I think someone might have been whispering in his ear about how to achieve it, perhaps believing that he would kill her; perhaps assuming that they could more easily accomplish it once she was in Renik's control.\" He shook his head in frustration. \"There's too much I don't know.\"\n\nThe others looked at Jessa in expectation. Torah squeezed her hand, and again she didn't know if it was for reassurance or a warning to cooperate. She glanced at him and he merely nodded. \"What did you find that started you down that road?\" he asked.\n\nShe shrugged uncomfortably, her eyes laser-focused on her hands in front of her. \"Everybody, including you,\" she added with a quick glance at Torah, \"Was acting like I was the sole salvation for the genetic pool of the Circles. I may be na\u00efve, but not that na\u00efve. I mean, just look at Summer's End. The whole resort was full of healthy, virile elites. Other than being taller than most, I wasn't that special. My athletic abilities came through the hard training of my father as much as genetics. And I would even argue that I'm not any smarter than the average Elite, apart from a quirky memory and a thirst for knowledge. And while it's true that you can often tell a Circle from an Elite or a highborn from the telltale signs of genetic illnesses and weaknesses, it is becoming harder to tell the lowborn from the highborn as labor has become easier and food more plentiful, never mind their robust genetics that allowed many lowborn to survive the pandemic unscathed or even untouched. All of this information is available to us lower life forms and whispered about freely, whether the Circles acknowledge it or no. The more people kept acting like there was something 'special' about me, the more suspicious I became that it wasn't just about having good genes. Then there was the Tertiary Pandemic...\"\n\n\"The what?\" both Erich and Jacq said in unison.\n\nJessa looked at Torah. \"Tell them,\" he said quietly.\n\nShe took a deep breath. \"I heard there was a third major mutation that included an adaptation to new vectors.\"\n\n\"Heard from whom?\" Jacq demanded, but Erich was looking at Torah with a raised eyebrow.\n\n\"From me,\" Torah acknowledged. \"Go on,\" he told Jessa. \"You know far more than I was ever able to find out.\"\n\n\"It didn't make sense to me, especially as time went by and I never heard more. I mean, by definition a pandemic is a disease that strikes and spreads faster than defenses can be put up to stop it. And yet, when I started researching on the Councilary web, the information was there; the mutation phases, the speculations as to how the mutated virus was introduced into other mosquito genera and fleas and mites, the vectors and vector hosts. Everything was there except how to prevent the spread to humans.\" \n\n\"Then why don't we know about this?\" Jacq said with irritation.\n\n\"Nobody knows,\" Jessa said softly. \"Almost nobody. I was asking the same question, essentially. How could such a virulent virus be out there, with no cure or prevention, and nobody knows?\"\n\n\"And what did you answer yourself,\" Jacq asked, his skepticism etched deep in his face.\n\n\"There are two questions really,\" Jessa said, the tutor in her coming out despite her irritation with the cynical grilling. \"The first question is easier. Why don't people know about this? The answer; because the Internet, where scientists interact nowadays, instead of side by side in a lab, holds the information very deeply hidden from prying. And that would be fine, if the scientists that need to be looking at the information are sharing it with each other, but hiding it from the public to avoid a panic. That is not the case. Virtually no one is looking at the information; in some cases, it hasn't been accessed for months and new information is virtually non-existent.\"\n\n\"And the other question?\" Erich asked, toying with his cell phone.\n\nJessa spread her hands on the tabletop as best she could; Torah still had a firm grip on one of them. \"Why aren't people dropping dead?\"\n\n\"Maybe humans can't catch this virus. Maybe we're immune now,\" Erich suggested.\n\nJessa shook her head. \"The research indicates that cellular penetration and destruction is nine times that of the original virus. None of the existing antibodies are effective against it and the development of new antibodies appears to be slower by a day than the onset of terminal cellular damage. Without intervention, either preventive or antiviral, this pandemic would reduce our already isolated human populations to numbers below the estimates for a viable genetic pool, much like the problem the current Circles have.\"\n\n\"So what's the answer,\" Jacq said, perhaps rhetorically.\n\nJessa made a fist and studied it intently, wondering if she wanted to put her vaguely formed theory on the table in front of these obviously skeptical, even hostile men. Torah squeezed her hand again. \"I have a theory,\" she admitted, her voice barely audible. \"But it's just a theory. Not even a theory, more like a vague guess.\"\n\n\"Tell us,\" Torah said impatiently. \n\nJessa lifted her shoulders slightly. \"I don't doubt that the virus exists, is as virulent as the reports indicate. I mean, I saw no indication that the research was faked; there's often tell-tale signs. So if people aren't dropping dead, that would indicate that the virus is contained.\"\n\n\"Which means?\" Jacq asked. \"For those of us who aren't Einsteins.\"\n\nJessa glanced at his impatient face, then quickly away. \"It's confined to a lab somewhere. It means that it was created and, perhaps, someone is just waiting for the right moment to release it.\"",
        "\"Wait. You're saying that someone made this thing that can destroy the human population?\" Erich asked, incredulous. \"Why on Earth would someone do that?\"\n\nJessa shrugged helplessly. \"I can only guess. Maybe they have the cure or a prevention, too, and they want only a certain section of the population to survive. A new \"highborn\" if you will, but they need to disseminate the preventative before they can release it. Maybe someone wants to destroy the human population. Maybe someone wants to blackmail the whole world with the threat to release it. I don't know. It's as if they realized that they'd been discovered, at least, on the network, and stopped posting anything about the research, tried to get rid of what was out there already. All I've been able to find are bits and pieces of what had to be more complete works.\"\n\n\"So if all this is true, your mucking around on the internet has scared them into hiding so deep we'll never be able to find them,\" Jacq grumbled.\n\nJessa felt herself flush. \"No,\" she stated flatly. \"It happened before I started looking into it.\" She glared at Jacq daring him to argue.\n\n\"What does all this have to do with you and Torah and the great plan?\" Erich asked.\n\nJessa looked quickly down at her hands again. \"I only have a wild guess, a gut instinct,\" she whispered.\n\n\"Tell us,\" Torah commanded.\n\n\"I'm a scientist,\" she protested. \"I have no facts, no support. Let me do more research first.\"\n\nHis grip tightened on her hand, and this time, he didn't let up. \"People are dying, Jessa. Tell us what your gut says and let us judge.\"\n\nShe tugged until he relented and released her hand. She dropped both hands to her lap and clutched them between her thighs as she glanced askance at Torah. \"Did you ever provide bone marrow for transplanting?\"\n\nHis brow furrowed. He was both annoyed at her further evasion of the question, and intrigued. \"Four times,\" he replied.\n\n\"To family?\"\n\n\"To Circles. It was some of the most valuable indebtedness my father collected from high ranking individuals.\"\n\nShe sighed. \"And you're O negative blood type, aren't you?\"\n\n\"Yes,\" he answered slowly.\n\nHer gaze dropped to her lap as her fingers twined tightly together. \"I think we're the cure for the pandemic to come. To be specific, I think we have a one in nineteen chance of producing a fetus that...\" She faltered, stopping to take a deep breath. \"That would produce stem cells that could be differentiated, into marrow cells, thymus cells, or directly into antibodies, T cells, whatever they intend to fight the new virus.\"\n\n\"That doesn't make sense,\" Jacq argued. \"That would only help the handful of people that would be compatible with that tissue type, stem cell or no.\"\n\n\"That's what makes Torah and me so unique. We're virtually true universal donors, not just O negative blood, but to all intents and purposes, almost no antigens that would invoke blood or tissue rejection. I gave several bone marrow transplants, too, probably also to high-ranking Circles. Normally, even excellent matches result in the need for immune suppressants to prevent rejection. That would defeat the purpose of a stem cell therapy to prevent infection. But that nineteenth child we would potentially conceive would be the perfect universal donor and already be producing the antibody to conquer the pandemic virus. It's possible this great plan has been in place for the last ten years or so, when they stopped coming to us for marrow transplants and when they began destroying evidence of what we were. In my youth, it didn't occur to me that matching a number of complete strangers for transplants was so unusual. It should have been out there in flashing neon lights when I tried to look myself up on the internet. The same for Torah. Someone went to great lengths to bury that information.\"\n\n\"So they would have tested every fetus we produced and harvested the 'special' one,\" Torah said grimly.\n\nJessa looked at him for a long moment. \"And aborted all the rest.\"\n\nTorah closed his eyes and sighed, perhaps the most genuine, unconditioned sign of emotion she'd seen from him. Jessa glanced at Erich and Jacq. They seemed to be having trouble processing all the information and speculation they'd been given.\n\n\"How much of this are you sure of?\" Erich finally asked.\n\n\"None of it,\" she stated flatly. \"How can I be? I'm in Paris and the virus is in Italy and the people who know what is going on are in East Germany.\"\n\n\"What?\" all three men asked at once.\n\n\"I mean, I think...\" she stammered.\n\n\"Back up. Italy?\" Torah asked. \"I know the rumors I heard suggested a mutation coming up from Italy or Greece, but why do you say Italy?\"\n\n\"There's a city, or something, in Umbria, central Italy, near Perugia, but higher in the mountains. I've seen the lights in satellite photos.\" She shrugged. \"You told me there were research centers, like the Council Seats, in old cities. Why not in the mountains of Italy, above the range of the initial plague?\"\n\n\"Well, nobody'd be stupid enough to travel to Italy and stumble across it by accident,\" Erich conceded. \"But what's this about East Germany?\"\n\n\"There was genetics information from a lab in Berlin. The genome maps for Torah and me, maybe the probability study, too, were done in Berlin.\"\n\n\"Drau,\" Torah growled.\n\nErich waved a hand. \"Still speculation.\" He pierced Jessa with sharp eyes. \"So. Someone wants you alive to produce this stem cell factory. And someone wants you dead. Why?\"\n\n\"I don't know,\" she complained. \"Because they want no one to survive? Because they hope the virus won't be released if there's no 'cure?' You're the superspies. You tell me,\" she challenged.\n\nErich looked at Torah. \"We need to discuss this.\"\n\nTorah shook his head to what Erich had left unsaid. \"She stays.\"\n\nJacq sighed in exasperation. \"This is all speculation. She's given us her theories. That's all we need.\"\n\nTorah shook his head again, stubbornly. \"All that we can discuss at this point is our own theories. We listened to her and questioned her. Why shouldn't she listen to us and question us?\" Jessa was watching him, hoping her disbelief wasn't apparent on her face. Was this yet another side of his multifaceted personality, or was he just trying to disarm her, allay her mistrust?\n\n\"I need more time, more research,\" she said softly. \"There's just too much we don't know.\"\n\n\"Then that needs to be part of the discussion. We need to get you that time and access.\" Torah looked at Jacq, who scowled but nodded reluctantly.\n\n\"I might have a safe place. I'll have my men make sure it hasn't been compromised.\" \n\n\"By who?\" Torah asked. \n\n\"The Council isn't too happy about Arnau's fate - during an Agent op, no less. They've extended additional latitude to City Forces to investigate.\"\n\n\"Not to their own Agents?\" Torah asked.\n\n\"What was I supposed to tell them?\" Jacq demanded. \"That the bullet was actually meant for the wife of an Agent from Dusseldorf? We think, except we have no idea why. Or by whom. Oh, and just try to explain why she was dancing around on the edge of a rooftop. Why we had to bring in a helicopter to search for her. Hell, why we had to search for her in the first place.\"\n\n\"Don't forget explaining how she slipped out of Agent custody,\" Erich added, earning an even deeper scowl from Jacq.\n\n\"Is this the part of the discussion that you wanted her to be here for?\" Jacq snarled at Torah. \"Still think that was a good idea?\"\n\nJessa heard Torah's phone ping softly, but he ignored it, regarding Jacq calmly. \"Maybe if she'd been in on the intrigue from the beginning, she would have been more amenable to cooperation.\" He raised his hands before Jacq could protest. \"That's my fault, I know. You were following my guidance. I mistook Jessa's naivete for innocence. But what's done is done. What needs doing now is what we should be discussing. You've always been on my side, Jacq. I need you there now. If Jessa's right, if someone is sitting on the tertiary pandemic, just waiting to unleash it on the world, we need to figure out how to stop them and I'll be damned if it will be by chopping up one of my children.\"\n\nAs he was speaking, Erich's phone began to vibrate against the table. He picked it up and flipped it over. \"Drau,\" he muttered. \"One of us better answer.\"\n\nTorah sighed audibly. \"Tell him we're on the way back.\" He glanced at Jacq. \"If we return in twenty-four hours, can you accommodate us?\"\n\n\"You're not going to lead that Teutonic asshole back here, are you?\"\n\n\"Nope. I was thinking of making it look like we had a military escort home.\"\n\nJacq rolled his eyes and shook his head as Erich put the phone to his ear, then held it away and out toward Torah. \"He wants to talk to you. I can tell by the volume.\"\n\nTorah scowled and took the phone. \"No, we're bringing her home,\" he argued with the Councilor on the other end. \"We'll need a secure flat... No, that's not good enough. I'm taking no more risks... What did you expect me to do? Even I need to sleep occasionally. No one else knows Paris or the French countryside like Erich. I needed him with me...\" He glanced at Jessa as he listened. \"It's possible someone is trying to kill her, that's why...\" He listened again, his brow furrowed in concentration. Jessa could almost see him trying to hear in between Drau's words. \"No, no other doctors, I want Gemma on this. Tell her to clear her schedule. I want her to see Jessa as soon as we get there.\"\n\nJessa cocked an eyebrow at Torah, hopelessly confused. She was sure he hated Gemma, for one thing, and he had implied he had no intention of returning to Dusseldorf, anyway, so why insist on Gemma. Then he winked at Jessa and she was beyond confounded. Torah, winking? \"Okay,\" he finally concluded. \"We should be there in about thirty-six hours.\" He flipped the phone back to Erich. He looked back at Jessa. \"Next time we get you on a computer, you work your magic on Drau and on a doctor named Johnat. Drau seemed overly interested in setting us up with him.\"\n\n\"My tablet,\" Jessa said suddenly, looking at Jacq. \"Did you find it?\"\n\nHe shook his head. \"There was no tablet in the apartment.\"\n\nJessa groaned. \"What was on it?\" Torah demanded. \n\nShe shook her head. \"Only a screen grab of the probability analysis regarding our genetics. But it might be enough to tell someone I was on the track of them. I'm sorry,\" she told Torah. \n\n\"Surely you put a password lock on it,\" he exclaimed.\n\n\"Yes, of course, but...\"\n\n\"But what?\"\n\n\"I set a scrambler program to make a garbled mess of the hard drive's index if the password is entered wrong twice within twenty minutes, but I did it in a hurry. I... It's not my best work. It could be reconstructed, maybe, by someone who knew what they were doing.\"\n\n\"Let's assume that won't happen, at least not in the near future. But I think we need to leave as soon as possible. I don't trust Drau not to call in favors from the local Council. Jacq, we'll need a safe phone to contact you once we're on the way back.\"\n\nHe rolled his eyes and reached into a pocket, pulling out a cheap phone and tossing it to Torah. \"How did I know you'd be asking?\" he said rhetorically. \n\n\"And maybe some more appropriate clothes that would fit Jessa?\"\n\nHe stood up stiffly, betraying the bruising he must have taken during the fall through the roof last night. \"Yeah, I must have half a dozen agents in her size,\" he drawled sarcastically. He strode from the room and Jessa turned back toward Torah, studying him like a puzzle she couldn't find even a beginning piece to fit in place.\n\n\"Just go with the flow,\" Torah retorted, though she'd said nothing. \"Please, for once, no questions. I need to think.\" He strode from the room, leaving her with Erich. She glanced at the younger agent, then quickly away. His look of impatience had been replaced with one of irritation that made her cringe almost as much as his anger. It crossed her mind to apologize, but she wasn't sure what for, nor if he would care. He obviously wasn't ready to believe what she had hypothesized, but he didn't seem interested in questioning her further as he continued to play with his phone. \n\nShe stood and paced, though it made her head throb slightly. It was a silent while later before Torah came back in the room and tossed her a bundle of clothes. She glanced shyly at Erich, who had suddenly taken interest again, but a warning look from Torah told her not to even bother asking for privacy. She turned her back on the men and stripped out of her torn and dirtied running outfit. She snidely hoped they enjoyed the view of her bruised and scraped body as she struggled into the clothes Torah had brought. They were at least warmer and somewhat more comfortable. She had barely managed to pull her shoes back on before Torah was pulling her by the arm, hastening their departure. Jessa silently chided herself for ever entertaining the thought that anything had changed between them. His earlier civility must have been an act for Erich or Jacq's benefit.\n\n****\n\nTheir rather sedate, midday departure from Paris in a nondescript electric car was a stark contrast to how they had entered the city in the dark of night, speeding along in a gas guzzling heavy car. Torah wove eastward through the streets of the dead city until they reached an area that had been reclaimed into a town of sorts. There was a marketplace that had been built up in an old plaza and a scattering of newer houses among a handful of reclaimed old buildings. They stopped and plugged the car into a charging station for show while Erich searched out food for the road in the market. Jessa sat quietly in the back seat, well aware of Torah's intense eyes watching both her and the immediate area. \n\nShe watched the people in the market, mostly lowborn, shopping and gossiping, or working to load delivery trucks that would head out to highborn enclaves like where she had grown up. She caught glimpses of Erich, slipping from stall to stall, easily blending in with the people around him, no doubt sliding just the right amount of French words into the English conversations. She wondered if any of the people in the somewhat rustic market realized that the vibrant, occupied sector of Paris existed just a few miles away. Undoubtedly, they at least suspected there was some life left in the old city. Even in the Southeast of old France, they had heard rumors to that effect. It was, after all, the City of Light. How could it ever go completely dark? She glanced at the rear-view mirror and saw Torah's narrowed eyes watching her. She quickly bit back the questions that wanted to pour forth and leaned wearily back into the seat until Erich returned with fruit and croissants. He unplugged the car and they headed south.\n\nThat evening, they stopped at another town, this time to really charge the car as well as search out hot food. There was a restaurant of sorts in the town and after Erich had inspected all of its nooks and crannies, Torah led Jessa inside and they sat at a dark corner table, despite the waiter's protestations. The food was simple but satisfying; still it seemed all too soon when they were on their way again. Erich took over driving and Jessa heard them discussing 'going dark' which apparently meant turning off their phones so they couldn't be tracked. Still, once they'd done that, Torah was still using the car's system for purposes she couldn't figure out from the backseat, save they seemed to involve military network channels. All she knew was that she'd never driven a car with such capabilities.\n\nJessa dosed through the night, occasionally aware of the low murmur of voices from the front seat, and one occasion when Torah swore loudly enough to wake her. She noted he was wrestling with the car's fuse box and swearing, though the car seemed to be running fine. When she awoke at first light, she realized with a start that she was alone in the car. She sat up in surprise, hugging her borrowed jacket around her. With the car stopped, the cold early winter air had seeped in. She climbed out of the vehicle and looked around. The car was sitting at an ancient gas station, though plugged into a charger rather than connected by a gas hose. The gas station was just off a decrepit highway with little else in sight save rolling fields, possibly once producing hay.\n\nJessa climbed up the slope to the highway. The road appeared to twist and wind its way through the rolling hills, so not a main thoroughfare. She also realized that the car couldn't be seen from the road, though there was no traffic apparent for as far as she could see. She wandered back to the vehicle and tried the starter, but they had obviously taken the electronic key with them. The gas station had two repair bays, closed off by clouded glass roll-up doors. A truly ancient car sat in one; what would have been a proud antique in another age, now a rusted hulk. The other bay was empty, though it appeared unusually neat and tidy, as if in regular use. Jessa tried the office door to the gas station and it creaked reluctantly open. There was no power anywhere, save to the charging station, apparently, and the shop had long since been emptied of anything worth taking. \n\nJessa stepped back out of the shop and looked forlornly about. She had no idea where she was, save south and east of Paris. Heavy clouds were hanging low in the sky, obscuring distant landmarks. Exactly how far south was significant, impacting the chance of finding a town or inhabitants for food and shelter should she strike out on her own, even if she could somehow evade Torah and Erich. Still, how long could she wait for them to return? She didn't even know how long they had been gone, and if they had left on foot or materialized a car just as they had the charging station in the middle of nowhere. She also didn't know where the men had gone, though they seemed inordinately interested in the military, and Torah had - jokingly, she thought - mentioned something about a military escort. The last thing she wanted to risk was stumbling into a battalion of Renik-type Security Forces. \n\nShe sighed and scuffed her feet across the crumbling asphalt as she headed back to the car. In front of the passenger seat, she found a bag with a bottle of water, a stale croissant and some fruit, left from yesterday, she supposed. She ate, sipped a tiny bit of water, then curled up on the seat in a tight ball to try to sleep more. The throbbing in her head had receded to a dull ache, but it still wore at her. As she waited for sleep, she tried to think of a way around the electronic verification signal the car wanted to hear before starting. Perhaps if all else failed, she could become a car thief to make a living. \n\nJessa awoke to the sound of tires crunching quietly in the gravel of the station. She wondered briefly what she could possibly do other than run if it turned out to be someone other than Torah and Erich. She had spotted a place where the fencing was down, giving access to the field beyond. Still, it also gave access for the car to follow, so not exactly heartening. She was just starting to sit up to see who had arrived when Torah's face appeared outside the car door then disappeared just as rapidly. She opened her door and climbed out of the car in amazement. The other vehicle, a heavy gas-engined thing like the Security Forces used, hadn't even come to a full stop. It was backing toward the garage as Torah opened the roll-up door, then they were just a suddenly back at the electric car, firmly pushing Jessa back inside. Torah took the driver's seat and pulled from the gas station back onto the windy highway, heading north again.\n\n\"I could drive, if you want,\" Jessa offered. \"At least I'm rested.\"\n\nTorah looked at her via the rear-view mirror with a noncommittal expression, but she could clearly see Erich rolling his eyes at the thought. Jessa threw him a scowl, even though he wasn't looking her way. \"What did you do?\" she asked, not really expecting an answer. Torah's eyes flicked to meet hers in the mirror again.",
        "\"Our cell phones are on their way east, in the general direction of D\u00fcsseldorf, along with a detachment of Security Forces. By the time Drau figures out we're not with the phones, our trail should be good and cold.\"\n\n\"Won't he suspect we've gone back to Paris?\"\n\n\"We're not going back to Paris,\" Torah answered after a moment. Jessa stared at him. \"Not for a while, anyway,\" he added with a shrug.\n\n\"I don't understand,\" she said softly.\n\n\"When you were running. In Paris. You were headed for Calais, weren't you? The fishing fleet?\"\n\nShe shrugged. \"I hadn't really thought it out that far.\"\n\n\"Reacting. Not acting,\" he stated flatly, though she clearly remembered him saying the same about himself.\n\nJessa nodded slightly. She hugged herself. \"I just needed to get away. From cages and fear. And death,\" she added softly, gazing out the window.\n\n\"How far away?\"\n\n\"Maybe North America,\" she said with a hint of defiance, daring him to laugh at her. He didn't, though she did earn another eye roll from Erich.\n\nTorah looked thoughtful, then shook his head. \"You may well have been able to reach the other continent, but Drau would never believe it. But Calais, the channel, northern Britain. Jacq can sell that.\"\n\n\"I don't understand,\" Jessa murmured.\n\n\"I think Drau may be part of this conspiracy against us, against our children. We need to convince him that we have disappeared beyond his reach.\"\n\n\"So we're going to northern Britain?\" she asked, shaking her head in confusion.\n\n\"Of course not. We just want him to chase his tail there, which hopefully will happen after he storms Paris, which will happen after he figures out that we aren't on our way to Dusseldorf. Jacq will feed him a story about how we were going to return to Paris and hide out, but then you talked us into going to Calais and stealing a boat to go north...\"\n\n\"I talked you into something?\" she scoffed. \"There's no way he'll believe that.\" Torah just looked at her patiently in the mirror. \"So where are we going?\" she asked.\n\n\"Italy,\" he answered with a shrug.\n\nJessa gaped at him. \"You want to go to the virus?\"\n\n\"How else do we get rid of it?\" he asked nonchalantly. \"Once it's gone, nobody will care whether we are alive or dead or what the genome of our children is.\"\n\n\"But...\"\n\n\"Think big picture, Jessa. Maybe someday we'll untangle who wants to release the virus and who wants our baby to be the cure for the virus and who invented the damn thing. Someday. And maybe - just maybe - the virus won't be released before then. Or maybe it will. If we go pound on Drau's door, or someone else's door demanding an explanation, we walk right into the cage that you want to be free of. Sometimes, you have to get to the solution before you get to the answers.\"\n\nFor once, the next question wasn't flooding into Jessa's mind and Torah actually seemed bemused by her dilemma.\n\n****\n\nThey drove north and west for a few hours before pulling into a long driveway winding through an unkempt orchard. At the end of the driveway, a dilapidated farmhouse nestled under a covering of ivy and brambles. Torah pulled around to the back of the building, where Erich jumped out and entered through a remarkably intact-looking door. A moment later, he emerged and waved. Torah pulled up to a post that hid a charging station and plugged the car in as Jessa got out and stared at the building that looked for all the world like it was on its last legs.\n\n\"We're staying here?\" she asked, to which Torah only grunted, pulling a rucksack from the trunk of the car.\n\n\"Is it stocked?\" he asked when Erich came to fetch more items from the trunk.\n\n\"If you call bread and cheese sustenance, then yes,\" Erich replied. He pulled a long heavy bag from the back and slammed the trunk.\n\n\"You were hoping for pizza?\" Torah asked with a grin. He placed a hand at Jessa's back, firmly guiding her toward the farmhouse.\n\n\"Could have at least left a pork roast in the oven,\" Erich muttered.\n\nThey entered the door into a porch that plant life had made a staunch effort to repossess, though when Jessa looked more closely, she could see evidence of trimming. The inner door, even more solid looking, opened into a bright, clean, well-lit kitchen. The incongruence struck her even more than the dilapidated, yet working gas stations she had seen. Torah dropped the rucksack on the kitchen floor and continued to guide her toward a room off of the kitchen. Here, there was gleaming computer equipment.\n\n\"We don't have much time here. Make the best use of it.\"\n\n\"But how? Satellite feed to the network?\" Jessa asked, peeking around the mini-server for lines and cables.\n\n\"Is that what you consider the best use of the time you have? Asking me questions?\"\n\nJessa shook her head and fired the system up. \"Good girl. I'll bring you a sandwich.\"\n\nA few hours later, Jessa was still furiously typing away and committing everything she could find to her memory, resolving to sort it all out later. The window to her room had long been boarded up and she'd lost track of time when Torah came to pull her away from the computer. \"We need to leave at nightfall,\" he said, rubbing her shoulders. \"Erich is rested and is putting together a dinner for us.\"\n\n\"How much longer do I have?\" She asked as she typed.\n\n\"There's a bed here.\"\n\n\"What?\" Jessa asked, finally turning away from the computer.\n\n\"I want you in it,\" Torah replied with a shrug.\n\n\"But I can sleep in the car,\" she protested.\n\n\"I want you in it with me,\" he clarified.\n\nInstinctively, her hand went protectively to her belly. \"But if we...\"\n\nTorah leaned down toward her. \"Now is the time I want to see your defiance. Don't let others decide our future. I want a child and I want him with you.\"\n\n\"Or her,\" Jessa pointed out.\n\nTorah rolled his eyes. \"I can't even manage to handle one of you.\"\n\n\"Nor I, you,\" she argued with her chin raised.\n\n\"Fair point. Nevertheless, come with me. You can finish this later while you eat some dinner.\"\n\nThey went out into the kitchen and Jessa was shocked to see the table covered with weaponry and items she didn't even recognize. Erich seemed to be inspecting the equipment even as he cooked dinner. \"The bolt's loose on that one,\" he complained. \"I'm going out in the shed to see if I can find something to jury-rig it with. Jacq's going to be hearing from me.\" With that he turned his back on them and strode out the door. Torah took Jessa's arm and pulled her in the opposite direction. Only a few of the rooms in the house had been reclaimed. One of them had been converted to a cozy bedroom, though the curtains only partially hid the boarded-up window.\n\n\"Clothes off now,\" Torah commanded. When Jessa put her hands on her hips and stared at him, he added, \"Please.\"\n\nJessa smiled in triumph as she began to unbutton the man's shirt Jacq had provided. When she wasn't disrobing fast enough to suit him, though, he crossed the room to help, tossing her onto the bed to pull her shoes and pants off. Once she was naked on top of the bed, he studied her as he removed his own clothing. His eyes paused at each scratch and bruise. Jessa couldn't tell what he was thinking, save that he didn't seem any more dismayed with her current battle wounds than he had with ones he'd inflicted himself.\n\nNo sooner had he kicked his pants from about his ankles then he was on the bed, straddling her. He grabbed her wrists, pinning them next to her shoulders. \"How do you want it, Jessa? Hard or easy?\" His voice was guttural; an echo from the past.\n\n\"Rough, but not angry,\" she answered, but this time, her answer didn't fill her chest with fear. She didn't have to wonder how he would take her response. They'd played this game before; it had ended well that time and while she wasn't sure how this new iteration of their relationship was going to play out in the long run, she felt safer somehow, when her brutally honest tongue took charge. His lascivious smile suggested she was right.\n\n\"Lustful fucking,\" he nodded in agreement, then dove at her neck like a starving vampire. He kissed and sucked and nipped at every inch of her, save where he'd mapped out the bruises and scrapes earlier, until she thought for sure she would expire from the torture of far too long delayed gratification. She begged and pleaded and demanded of him only to feel his lips smile against her overheated flesh as he prolonged the sweet torment. When she grabbed his hair to try to push his head between her thighs, he caught her wrists and pinned them above her head with one hand as the other palmed her pussy, so close, yet so excruciatingly not quite close enough; all while his lips and teeth created an ever deeper aching in her tender nipples.\n\nJessa writhed against his rock-hard body, sure that if she hadn't ovulated yet, the roiling turmoil in her belly would force the issue. It wasn't until she screamed and swore in frustration that he finally relented, and she found she didn't care in the least if Erich overheard, though she swore she heard a snicker coming from the kitchen area at some point. All she cared was that Torah rolled her onto her stomach and then slid her up the bed, wrapping her hands around the slats of the headboard. \"Show me how strong you are, Jessa,\" he said next to her ear.\n\nShe didn't have a chance to ask him what he meant. Her hips were yanked up and he was slamming into her. She braced and pushed back against him and he slapped her ass cheek in approval. Her knees could barely get a purchase on the satiny bedspread but it didn't matter. Her arms and her back were ramrod straight and strong and her belly roared in appreciation of the overdue fucking. Even as she came the first time, her muscles quivered with the effort to maintain the position. He wanted to give it to her rough and that was exactly the way her pussy wanted to get it. And it was definitely screaming for more. Maybe Erich could even hear that. Oh, well.\n\nJessa took a deep breath, adjusted her grip on the headboard and arched her back, daring Torah to slap his belly and balls against her with each thrust. He reached forward and cupped her breasts, then without warning was pulling and twisting her nipples until she came again, cursing and wilting under him until he took her hips in hand and pulled her back onto his cock. He buried himself deep within her for a moment, letting her catch her breath, but she only snarled a challenge. \"Come on, superspy. Surely you can fuck better than that!\"\n\nA chuckle rumbled deep in his chest, then he was plunging his full length into her again, seemingly indefatigable. Jessa cried out as yet another orgasm ripped through her, this time the waves of contractions so strong that Torah was forced to rock inside her, leaning heavily on her shoulders, unable to withdraw against the force drawing his cock deep into her belly, unable to resist his own need to blast his seed against the beckoning entry to her womb."
    ],
    "authorname": "Chimera44",
    "tags": [
        "escape",
        "consensual",
        "drama",
        "danger",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/jessa-ch-14"
}