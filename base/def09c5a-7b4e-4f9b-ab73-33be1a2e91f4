{
    "title": "Kelsey's World Ch. 21",
    "pages": [
        "Kelsey was in the mood for a party, so she sat down with the girls and did a little planning.\n\n\"You guys, Margie texted me last week. She wanted to know if they could bring another couple with them next time we did something here. Wanna do it this weekend?\"\n\n\"Cool,\" Brie said. \"Do you know them?\"\n\n\"No, but I trust Margie. She's cool. She knows what'll work.\"\n\nCharity smiled a little. It was a mysterious smile, the result of her sex-crazed mind wondering about the unknown people. Wouldn't it be fun if they were people she'd seen somewhere, she thought? People from church, or parents from the school? She thought about how fun it would be to be the first girl with the new guy, to sort of break him in.\n\n\"So, we should have Richie and Abby and Austin,\" Kelsey said. \"How about Barbara? She'd think Ryan's hot, I think.\"\n\n\"Yeah, totally,\" Brie said. \"Do you think Austin'll be okay with it? He was a little freaked at that party at your mom's that Barb was at.\"\n\n\"He's way more okay with it now,\" Kelsey said. \"He looked at all her pictures the other day, when Sarah was here.\"\n\n\"Did he?\" Brie said, looking happily surprised.\n\n\"A lotta mommy and daddy shit goin' on around this town lately,\" Kelsey kidded. \"Charity, do you think your dad's got a big cock?\"\n\nCharity hacked out a sudden, nervous cough, almost choking. Kelsey giggled.\n\n\"My father is the least sexiest person in the whole world,\" Charity insisted.\n\n\"I believe you, Honey,\" Kelsey chuckled. \"I believe you. Maybe that's why you like fucking my daddy, and Brie's daddy, and all their daddy friends.\"\n\nCharity looked horrified again. Kelsey laughed.\n\n\"I'm just bustin' your balls, Honey,\" she said. \"We all like the older guys. It works both ways, anyway. Look at Richie and Barbara, and Austin and my mom.\"\n\n\"Yeah,\" Charity said. She smiled a little bit when she thought of how fun it was to break those generational barriers.\n\n\"So, with Margie and Ryan and their friends, that's only, what, four guys for seven girls, right?\" Kelsey said. \"That's cool, I like girls as much as anyone, but one or two more fun guys'd be nice, especially for Margie and the new girl she's bringing.\"\n\n\"Josh would be fun,\" Brie said. \"Barb hasn't met him. Remember how Sharron liked him? He's, like, real eye candy for older women I think.\n\n\"Totally!\" Kelsey said. \"He and Sharron both still talk about the anal they did together.\"\n\nCharity looked fascinated by the planning. It was like choosing fantastic food from a great restaurant's menu.\n\n\"So, yeah, with that big cock of his Josh'll count for, like, two guys,\" Kelsey said. \"So we're all set then. Party Saturday night!\"\n\n\u2014\n\nMargie snuggled against Ryan's warm body in the dark of the early morning. She needed to get up to tend to the goats that provided the milk for the cheese she made, but she lingered longer than usual in the comfortable bed.\n\n\"I don't know about you, but my mood swings have been pretty extreme the last few days,\" she said.\n\nRyan rubbed the sleep out of his eyes. \"How come? Is everything all right?\"\n\n\"How come?\" Margie said, propping herself up on her elbow. \"I know you're not that dense. We're taking our friends to an orgy tonight, remember?\"\n\nRyan smiled, brightening his tired looking face.\n\n\"Are we insane?\" Margie said.\n\n\"All you gotta do is think back to how it went last time,\" Ryan said. \"We both thought it was pretty great, right?\"\n\n\"Well yeah, I mean...it was amazing. But Alicia and Joey...are we nuts to do this with them?\"\n\n\"I'm gonna leave that call up to you. You're the woman. Guys are different.\"\n\n\"Meaning...\"\n\n\"Meaning we think about it more, I guess.\"\n\n\"Getting with Alicia, you mean?\"\n\n\"No, it's not about her. Just, sex in general I think. Men are more willing.\"\n\n\"Tell that to the three oversexed hotties that live next door.\"\n\n\"Yeah, well, we just got lucky, didn't we?\" Ryan smiled. \"Think of all the boredom we're missing out on.\"\n\n\"I guess that's one way of looking at it,\" Margie said, finally extricating herself from the warm bed. \"I just hope we don't look back on this and wonder why we did it.\"\n\n\"Have you talked to her?\"\n\n\"Alicia? Yeah. We're both pretty nervous, but, they both seem to be into it, so...\"\n\n\"Let's just let whatever happens happen,\" Ryan said. \"It worked pretty good last time, right?\"\n\n\"It's fuckin' nuts, I tell 'ya,\" Margie said as she disappeared into the bathroom. \"Fuckin' nuts.\"\n\n\u2014\n\nAlicia dealt with her nerves a different way \u2014 she didn't talk about it. She and Joey spent the crisp, early autumn Saturday together, at the farmer's market and a trio of antique stores they liked. Alicia was clingier than usual, holding Joey's arm when they walked, kissing him often with little pecks on the cheek. They were a loving couple, so it wasn't too unusual, but Alicia was definitely in an 'I love my husband' mood that day.\n\nJoey could sense the vibe. He just let it flow, not wanting to jinx his chance at his first orgy by talking about it. He was amazed that Alicia had agreed to go. It wasn't like her, but the fact that Margie had already experienced a similar evening was too much for Alicia \u2014 she felt a powerful desire to see what it was all about. It was one of those \"If Margie can do it I can too\" kind of things, but it left Alicia nervous and confused as she wondered about the unknown.\n\n\u2014\n\nWhen party time rolled around, Kelsey's bright face and sparkling personality calmed a few nerves, but elevated others. \n\n\"Hi you guys! I'm so glad you're here!\"\n\nJoey was standing behind Margie and Ryan when Kelsey answered the door, but he had a plenty good view of her and almost lost his mind. Margie had said the new tenants were smokin' hot young women, but it didn't prepare him for the sight of Kelsey, standing there in a fuck-me dress and tall high heels. The dress's emerald green color set off her short red hair, and barely contained her fathomless cleavage.\n\n\"Margie! You look sooo good!\" Kelsey said. \"And you must be Alicia. I love your dress, Honey.\"\n\nAlicia was as stunned as Joey. Kelsey was just too much to take in, so ridiculously beyond her in sex appeal, she wondered if she should turn and run, dragging Joey by the hand. That's when she saw Austin.\n\nHe walked over and greeted Margie and Ryan. Margie hugged him and kissed him on the cheek. Alicia's heart was thumping when she put two and two together \u2014 he was the best looking twenty-something guy she'd ever seen, and Margie had fucked him!\n\n\"These are our friends Alicia and Joey,\" Margie said, making the formal introductions.\n\nAlicia almost melted when Austin took her hand for a soft handshake. His eyes looked deep into her, in the most astonishing way.\n\nBrie and Charity scampered over, Brie in a plunging neckline cocktail dress and bare feet, and Charity in a new lingerie set \u2014 an unlined lace bra and panties with glimpses of her femininity showing through, and a garter belt, shear hose and high heels. She felt wonderfully wicked being the first girl in her undies, and especially so when she greeted the unknown people at the door.\n\nThe new guests spilled into the barely simmering party. Richie and Abby were already there, Abby dressed super cute and looking very young in a little dress she'd worn to prom. Josh was already there, too.\n\nAlicia was surprised by the youthfulness of the assemblage. For some reason she had assumed the young men wouldn't be quite so young. She'd pictured twenty-something women with older lovers, more experienced men that had lured them into the hedonistic lifestyle. But that thinking had been all wrong \u2014 they were all just college-aged kids who liked to party. She suddenly felt very old.\n\nBarbara was the last to arrive, and Alicia was glad to see her. Finally, someone older! Did she bring a man with her? No? Oh my gosh, she knows all these kids! They're like best friends! Do they all fuck her?\n\nMargie was having some of the same thoughts, fascinated by how naturally sexy a women in her late forties could be, and even more fascinated when she learned Barbara was Austin's mother. That was just plain insanity, she thought, but she had to admit it was strangely arousing.\n\nRyan and Joey were quietly thrilled. The smorgasbord of sexy females was off the charts \u2014 everything from a busty, leggy, broadly smiling woman in her late forties, to a cutely nervous high school prom girl who they hoped was really of legal age. In between were Kelsey, Brie and Charity, all three of whom seemed to ooze sexuality from their very pores. For Ryan and Joey it was all a crazy fantasy in real-life flesh and blood. And that didn't even take into account their own female better-halves, who they'd both secretly fantasized about for years.\n\nBefore the party, Charity had day dreamed about what Joey might be like. He turned out to be very different, but she wasn't disappointed. Mid thirties and swarthy, with a thick, muscular body. His dark eyes had a glint in them that made her think of gladiators. Or a pirate, maybe.\n\nShe moved in on him gently, striking up a conversation with him and Alicia. It started out slowly, with talk about the farmland that Margie and Ryan tended out behind the house, and what it was like to live there. It struck Alicia as odd to be standing there chatting so casually with a hard-nippled girl in see-through underwear.\n\n\"So, what do you do, Charity, if you don't mind me asking,\" Alicia said.\n\n\"Oh. I'm, uh...\" Charity said. \"Sorry, I just...did Kelsey talk to you about...keeping things to yourself? Some of us have jobs that we...well, we don't want it getting around about parties like this.\"\n\n\"Oh, of course!\" Alicia said. \"Yeah, I guess we don't want that kind of thing either.\"\n\n\"Good. Yeah, I thought you guys looked cool,\" Charity said. \"So, Brie and I are both school teachers.\"\n\n\"No way!\" Alicia said. \"I'm a high school guidance counselor.\"\n\n\"Oh my gosh, at Hillydale?\" Charity asked.\n\n\"No, St. Cecilia's. You'll keep my secret, too, right?\"\n\n\"Yes, of course!\" Charity said, smiling at the little sisterhood that was building. \"Oh my gosh, how do you stand being around all those cute high school boys? I mean, look at Richie. He's just so cute I can't stand it.\"\n\nAlicia had already thought about how much Richie reminded her of the boys at school. \"How old is he,\" she asked.\n\n\"Eighteen,\" Charity said. \"Kelsey took him under her wing, and made him, like, an apprentice or something, and then Barbara took over. He really knows what he's doing.\"\n\n\"You mean...sexually?\" Alicia asked.\n\n\"Yup. He'll make you cum wicked.\"\n\nJoey was standing silently, letting the girls gab. His excitement ticked up a whole bunch of notches when the conversation turned to sex. He could tell it was really getting to Alicia, too. She could hardly take her eyes off of Richie.\n\n\"Is that his girlfriend?\" Alicia asked.\n\n\"Yeah. She's new. This is her first big party.\"\n\n\"She looks even younger!\" Alicia said.\n\n\"No, she's eighteen, too. She's up at the Community College with Richie. She's, like, a ballerina or something.\"\n\nJoey chuckled at the perfection of it all.\n\n\"Oh, you like that do you?\" Alicia said, chiding him a little. \"Ballerinas in prom dresses turn you on?\"\n\n\"Why wouldn't it?\" Joey smiled. \"Why don't you ask about the other two boys?\"\n\n\"We're not shopping!\" Alicia said. Joey laughed at her thinly veiled defense.\n\n\"That's Josh,\" Charity said, gesturing across the room. \"I don't know him too well. And that's Austin. He's Kelsey's boyfriend, and...oh. Did you meet Barbara?\"\n\n\"Just briefly, but Kelsey told us he's her son.\"\n\n\"Oh, good. I didn't know if I should...\"\n\n\"If keeping secrets is the price of admission, you can count on us,\" Joey said.\n\n\"So, Austin and Josh, they're both, like, huge,\" Charity said to Alicia. \"You'll see.\"\n\n\"Looks like you came to the right place, sweetheart,\" Joey said.\n\nAlicia elbowed him and gave him a fleeting, scolding look.\n\n\"You like big cocks?\" Charity asked with a knowing little smile. \"You should come to a party at Kelsey's parents house. Some of those guys are big, too. I've never measured, but her dad fills me up better than anyone.\"\n\nAlicia looked shocked. \"Kelsey's parents are...into this?\"\n\n\"Yeah, really big into it. Their parties are amazing.\"\n\nThe conversation had started to heat up Alicia. She felt like she was ready to talk to one of the young men. She'd save Ryan for a little later, when Margie was busy.\n\n\"I think I'm going to mingle a little,\" she said, with her heart pounding hard. \"If you like big guys, Charity, my Joey's no slouch.\"\n\nAlicia couldn't believe her brain had allowed her to say such a thing about her husband, but Charity's ease with that kind of conversation seemed to be contagious. Charity smiled sweetly at her. After she left, heading for Richie, Charity moved closer to Joey.\n\n\"I used to have fantasies about my school teachers,\" he said.\n\n\"Really?\" Charity said, her voice suddenly soft and sexy.\n\nIt was the end of the conversation. She slithered down to a squat, unzipped Joey's pants, and sucked his quickly growing meat into her mouth. She moaned deep when she felt him grow, and grow, and grow. He was a bit shorter in length than Austin, but it was a thick, muscular cock, just like the rest of his powerful body.\n\nAlicia glanced back across the room and was astonished to see her husband's cock in Charity's mouth. It was mind-numbing for a few seconds, a completely foreign sight, like something from a dream. She was astonished, too, by how fast Charity had worked. Maybe that's how it's done, she thought to herself \u2014 you just find what you want and take it. \n\n\"Hi. Richie, right? I'm Alicia,\" she said nervously. Richie was alone, watching as Kelsey led Abby away from him to meet Ryan.\n\n\"Oh, hi,\" Richie said.\n\n\"I hope you don't mind me saying this,\" Alicia said, \"but I hope you haven't been doing this kind of thing too long. You seem awfully young.\"\n\n\"No, just, a...a few months I guess.\"\n\n\"I'm new at this, but...would it be horrible to admit I fantasize about boys your age?\"\n\nA shy smile brightened Richie's face. \"No, that's not horrible.\"\n\n\"Hey everybody...\" Kelsey yelled, \"...I forgot to say, use any of the bedrooms upstairs if you want. Or the shower or anything. It's all cool. But it'd be even cooler if we all stay down here and have fun together. If you're shy, though, head on up.\"\n\n\"Is she always like this?\" Alicia asked. \"She's got...an energy about her.\"\n\n\"Yeah, she does,\" Richie said, gazing in Kelsey's direction.\n\n\"Charity tells me Kelsey...taught you some things,\" Alicia said. She was trying to be bold, but was having trouble with her nerves again.\n\n\"Yeah, I guess,\" Richie said. He seemed distracted, looking around at the unfolding scene.\n\n\"You look as interested as I am at all this. It's so new to me. Have you been to many of these parties?\"\n\n\"Some small ones. This is my first bigger one.\"\n\n\"Really? Oh, good. I feel better. My husband seems to have jumped in with both feet.\"\n\n\"Yeah, Charity's kinda wild.\"\n\nThey both watched as she rose from her blowjob stance to kiss Joey, with her nice tits newly out in the open. She massaged his fat, wet cock with her fist as their mouths worked furiously on each other.\n\n\"I bet you she's the first one...\"\n\n\"What?\" Alicia asked with big, surprised looking eyes. \"Fucking, you mean? With Joey?\"\n\n\"She'll be the first one to cum,\" Richie proclaimed.\n\nAlicia looked on with a strange, otherworldly sense of fascination as Charity bent at the waist and pulled the gusset of her lacy panties aside. Joey's groan was loud and clear when he sunk his big chunky cock into Charity's pinkness.\n\nAlicia didn't know why she did it, but she took Richie's hand and held it tight in her own. Joey's pants were down around his ankles and he had a look on his face Alicia had rarely seen. Charity looked nearly delirious, too. She needed support to help her through, so she pivoted to the wall and slapped her hands up against it, crying out in ecstasy as Joey started fucking in earnest. He bellowed loud as the intensity of the tightest pussy he'd ever felt overwhelmed him.\n\n\"Jesus!\" Alicia whispered, squeezing Richie's hand tight.\n\nCharity came with ferocity, slapping her hand hard against the wall again as she cried out.\n\n\"Yeah, Charity!\" Kelsey cheered. \"Gettin' the party started!\"\n\nJoey looked stunned, holding his spewing cock in his hand as everyone watched the cum splatter on Charity's beautiful, lace-covered ass.\n\n\"She cums wicked,\" Richie said to Alicia, borrowing one of Kelsey's favorite phrases.\n\n\"Holy shit, you got a big cock, Joey!\" Kelsey said, watching from fifteen feet away. \"How'd that feel? She's super tight, huh?\"\n\nJoey nodded a little, but he still looked stunned. Alicia wondered if she should go to him, but she didn't want him to feel any more embarrassed than he already looked to be.\n\n\"Wanna get outta here?\" Alicia asked Richie. \"I think I'm one of the shy ones who needs a bedroom.\"\n\n\"Sure!\" Richie said.\n\nAlicia smiled at his enthusiasm. She'd often wondered if the boys at school found her attractive. She tugged Richie up the stairs, surprising herself with her aggressiveness. Seeing Joey go for it right inside the front door had emboldened her \u2014 she wanted some action, too.\n\nAlicia had never had sex without traditional foreplay before \u2014 kissing, leading to fondling, leading to undressing and licking, leading to girl on top or boy on top, leading, maybe, to some other position. Richie, though, was a more down to business kind of guy.\n\nThey helped each other strip standing up, kissed for a minute with roaming hands, and then he helped her into doggie position right off the bat. Alicia loved it \u2014 it felt like real orgy stuff, like what Joey and Charity dove into, but without the audience.\n\nAlicia hadn't fully stripped. She wasn't ready yet for full nudity in a stranger's house, so she retained her bra and panties, the sexiest ones she owned. \n\n\"God, your ass is nice,\" Richie praised. He peeled the panties down, letting them bunch up on her thighs.\n\n\"Really? I never thought so.\"\n\n\"Yeah, it's awesome,\" he said, sounding younger than someone Alicia should be with. He was so much like the boys at school she wasn't sure if she'd make it through the excitement.\n\n\"O-ho...G-od!\" she stuttered when Richie's tongue lapped up through the slit of her wet pussy, ending its journey right on her little asshole. Charity's prophetic words came back to her \u2014 \"He really knows what he's doing......He'll make you cum wicked.\"\n\nRichie plunged his cock into Alicia's insides and Charity's words made even more sense \u2014 the boy knew how to fuck! The excitement of it all sent Alicia to a happy place much sooner than she anticipated \u2014 Richie fucked her right through a ripping orgasm and halfway into another.\n\n\"No!\" she said breathlessly, pulling away. \"I want to look at you.\"\n\nShe pushed him down, rolled him onto his back and mounted him, riding him like a girl possessed, with her panties still hanging on around one leg.\n\n\"Yeah!\" she huffed as she rode hard. \"Oh fuckin' yeah!\"\n\nFor a few seconds she thought about all the years she'd been faithful to Joey, and Joey, she assumed, had been faithful to her. It was all out the window, but she didn't care. She wondered what Margie was up to, and then Richie kicked into overdrive, thrusting up into her like a turbocharged porn star, nearly levitating her yelping, writhing body. All thoughts ceased as orgasm number two consumed her. She hunched over, with no more control of her muscles. When Richie's searing cock had wrung her out, she collapsed in a heap on top of him, gasping for cool breath.\n\n\"I never would have dreamed...\" Alicia said, breathless and groggy sounding.\n\n\"What?\" Richie wondered.\n\n\"A boy your age, with that kind of...prowess.\"",
        "\"I get lots of practice I guess, since meeting Kelsey and everybody.\"\n\n\"And Barbara?\" Alicia smirked. \"Do you like older women?\"\n\n\"Sure,\" he said, sounding a little embarrassed. \"How old are you?\"\n\n\"Thirty-seven. Old enough to be your mother. Does she even have a clue what you're up to?\"\n\nRichie wasn't sure of the answer, so he didn't say anything. He thought about his mom's see-through lingerie, and the little leopard-print kimono robe she started wearing after Barbara got hers. He still wasn't exactly sure what was going on.\n\nAlicia was still half on top of Richie, resting her head on his shoulder, listening to his heartbeat and the intriguing noses coming from the party.\n\n\"I think maybe I'm ready to go downstairs now,\" she said. \"How about you? Wanna try it?\"\n\n\"Sure,\" Richie said. \n\nAlicia pulled her twisted panties back into shape, put her other leg into them and pulled them up. Her bra was still solidly in place.\n\n\"Thanks Richie,\" she said, rolling onto him and kissing him. \"That was perfect.\"\n\n\"Oh, yeah. Thank you, too,\" he said, sounding like an awkward teenager.\n\nAlicia giggled and rolled off onto her back, smiling at the ceiling. \"This is too much. Margie was so right.\"\n\n\"Is that your friend?\"\n\n\"Yeah. Make sure you spend some time with her, okay? She'll love it,\" Alicia said, looking sideways at Richie, with a big smile. \"Let's go. I'm ready to see what's happening.\"\n\nAlicia was surprised when Richie stayed naked for the walk downstairs, but she chalked it up to youthful exuberance. She took his hand and trotted down the steps with him. Richie's nakidity suddenly made sense \u2014 everybody in the room was stripped bare, with the exception of a couple of garter belts and four stockings. It was a scene right out of a porn movie. She scanned the room and saw Joey, on his knees in front of the couch, munching enthusiastically on Barbara's pussy. For an older woman, she looked just as happy and young at heart as any of the younger girls. Margie was workin' it, too, down on the floor on the soft rug, riding Josh. Alicia could only see the back of her, legs splayed wide, her muscular, farm-girl thighs propelling her sensuous movements. Josh was one of the 'big boys', according to Charity, and Margie seemed to be loving it.\n\nAlicia was still hand in hand with Richie when he noticed Abby through the kitchen door, talking to Ryan.\n\n\"Want a drink or anything?\" Richie asked.\n\n\"Sure,\" Alicia said.\n\nThey left the wild, moaning scene in the living room for the relative quiet of the kitchen. Richie went to Abby. Alicia was fascinated by her slender little dancer body, so girlish with her flattish chest and little bubble-butt ass.\n\nRyan was silent when he saw Alicia, not sure of what to say to the woman he'd fantasized about so many times. He just stood there, naked, with a deeply beating heart. Richie and Abby drifted off, disappearing out the door.\n\n\"I guess we both got our youngster thing on today,\" Ryan said, breaking the awkward silence. \"How was yours?\"\n\n\"Pretty great,\" Alicia said, sounding a little embarrassed about it. \"Yours?\"\n\n\"Yeah, pretty great. An eighteen year old ballerina. You can't make this stuff up. Are you having fun? Margie was really nervous about inviting you guys.\"\n\n\"That makes two of us. Yeah, I'm...getting used to it,\" she said, glancing quickly at Ryan's used looking cock. \"Joey seems to be right into it, but...guys are different I guess, or so I've been told.\"\n\n\"Are we?\" Ryan smiled. \n\n\"He says you think about it more.\"\n\n\"Well, when a guy has a friend who looks like you, he can't really help it.\"\n\nRyan's cock made itself known again, with an involuntary twitch and a noticeable plumping.\n\n\"That's a pretty nice thing to say, but in a place like this you don't really have to seduce a girl,\" Alicia said, her eyes showing the lust burning inside her. \"You can just take her.\"\n\nRyan stepped forward and kissed her. It was one of those crazy hot kisses, like right out of the movies. Alicia nearly had an orgasm right there on the spot.\n\nRyan kissed his way down her body, through her cleavage, down past her bra to her soft belly. He paused to lick her little bellybutton like he would a pussy, and then, on his knees in front of her, he pulled down her panties and found what he was looking for. His tongue licked up through her wetness, lingering on the clit that Richie's fucking had engorged. Alicia's knees nearly buckled.\n\nRyan spun her around, anxious to get a look at the ass he'd dreamt of for so many years. It didn't disappoint him. He spread the soft cheeks and groaned when his tongue licked up through the crack, all the way to the lovely, arched, small of her back. Up he went, kissing all the way as he rose to his feet, ending with a nibbley nuzzle of the side of Alicia's neck that almost made her knees buckle again.\n\n\"May I?\" he softly breathed in her ear. His hands were on her bra clasp, ready for her final unveiling.\n\nAlicia's answer was a soft moan. The bra was opened. Her tits were released. Everyone in the house was naked.\n\nRyan's hands slid around her sides, onto the warm softness of her. She turned her head and another hot kiss began. The flesh of his fingers grazed across the hardness of her nipples. The two new lovers moaned into each others mouths.\n\nAlicia could feel Ryan's cock against her ass. He was fully hard, and the length of it pressed firmly into her crack. His hips were moving up and down, making it move. It was a glorious feeling. She'd known for years he liked her ass, having caught him looking at it many times. To have his hard cock so intimately between her cheeks, with his rough, farm-boy hands on her tits \u2014 hands that were the sexiest she'd ever seen \u2014 well, it was just about perfect. Ryan thought so, too. He held the position so long it seemed to morph into a dream \u2014 their mouths melted together, his body moving gently, his cock sliding through the heavenly warmth.\n\nThat's when he came. With a boyish whimper into Alicia's mouth, no less.\n\nAlicia's eyes opened in surprise. Ryan was embarrassed, but Alicia was thrilled. To her, it was the sexiest thing ever. For her body, and her kiss, to excite a man like Ryan so much, well, she just about couldn't believe it. It was as thrilling a sexual moment as she'd ever experienced.\n\nRather than talk about it, Ryan spun her around, lifted her like a feather onto the countertop and buried his head in her pussy. Alicia kicked off the panties that were still hanging around her ankles. She spread her legs wide, leaned back on her arms and moaned. Ryan loved it \u2014 the smell of her already fucked pussy, the rich, womanly taste, and the sound of her deep, vibrating moans.\n\nThe insides of her thighs were sticky with the cum he'd deposited there. It wasn't much, Abby had already drained him pretty well, but it reminded him again of all the fantasies he'd had over the years of just such a moment \u2014 sticky, smelly, glorious sex with his wife's alluring friend. His cock was hard again. It was time. He pulled Alicia's sweet ass closer to the counter's edge and plunged his full length into her, raw and unbridled. They looked at each other with wide excited eyes and fucked like animals.\n\nWhen it was over they both looked a little stunned. Their grunting orgasms had been perfectly timed, draining away the animal in them, leaving them breathless and human again.\n\n\"Have Joey and Margie...?\" Alicia asked.\n\n\"Based on what I saw of him, no, they haven't. I would have heard her howling. He's huge!\n\n\"Is she a howler? I'm not sure I would have guessed that.\"\n\n\"You know, she didn't used to be,\" Ryan said. \"Did you meet Austin?\"\n\n\"Yeah. Kelsey's boyfriend?\"\n\n\"Yeah. Last time we were here she made noises with him that I'd never heard before. I guess some guys might be jealous, but I thought it was hot. Anyway, ever since then, she's been making more noise at home. I love it.\"\n\nAlicia smiled a little. She was glad she hadn't held back and had made some noise for him. \"This is gonna sound weird,\" she said, \"but, I kinda want to make sure they get together tonight. She and Joey, I mean. If they don't and we did...it'll be...awkward.\"\n\n\"Oh. Yeah, you're right,\" Ryan said. \"So, I'm just curious...what happens now? With all of us, I mean. Our friendship has sort of...changed.\"\n\nAlicia smiled shyly. \"I don't know. We'll just have to sort of see what happens I guess. I wouldn't mind...continuing. Not cheating or anything, I don't want that.\"\n\n\"No, no, me neither. But yeah, lets...continue,\" Ryan said. His little smile was so boyishly sexy Alicia had no choice but to kiss him. The enormity of the situation started to sink in when she felt his strong arms embrace her naked body. Her workaday conventional life seemed like it was turned upside down. The boredom she'd been wrestling with lately was wiped out. Ryan's cock hardened again against her belly. Her life felt brand new.\n\nBarbara felt a bit like Alicia. Her life was turning upside down, too. It was her second party with her son in attendance. The first one, at Kay and Bobby's house, was so dreamlike his presence wasn't really a factor. It was for Austin, that was for sure, but he'd ended up out on the porch with Kay and Trinny while Barbara was fucked to the limits of sanity upstairs. She never even saw him naked. She'd only seen his cock \u2014 his very man-sized, very hard one \u2014 one time, when she walked in on him masturbating to one of Kelsey's porn videos in his bedroom. It was enough to confirm that he'd inherited his father's eight-or-so incher. Other than that it was all just fuzzy memories of his naked body when he was a boy, the same kind of memories any mother would have.\n\nThe party at Kelsey's was different. Barbara knew it would be, and Austin did, too. Kelsey had eased him into it with all the photographs of Barbara, and her usual 'it's no big deal' way of talking about things, and she'd worked her Svengali ways on Barbara, too. Reality, though, is almost always more intense.\n\nKelsey knew that getting them both naked in the same room was a big, and important, first step. She remembered that Margie and Austin had been a fun coupling at the last cocktail party at the house, so right off the bat she brought them together, as casually as possible, and soon had a double blowjob going with she and Margie both on their knees.\n\nBarbara watched from a dozen feet away with furtive, and not so furtive glances. Her heart was pounding and she was having trouble breathing normally, but she tried to carry on a conversation with Brie and Josh. All this was happening early on in the proceedings, when Joey had Charity up against the wall by the front door, so things were ramping up quickly.\n\nBrie knew what was going on. She thought it was cool that Barbara was so sexy and open to things, but she could also sense the nervousness. She tried to think like Kelsey, to help things along.\n\n\"So you haven't met Josh before, huh?\"\n\n\"No,\" Barbara said. \"I guess I haven't been around long enough.\"\n\n\"Josh and Sharron go way back. We all met her at one of our beach parties up at Sandgrass Pond.''\n\n\"Oh, really?\" she said, giving him a sexy look. \"So you...don't mind us older gals?\"\n\n\"Not at all!\" he said.\n\n\"Wanna help me break him in?\" Brie asked. \"He hasn't been to a party in a while.\"\n\nBarbara giggled. \"I'm still amazed at how easy it all is. I spent a lifetime struggling to find sex partners.\"\n\n\"Yeah, that doesn't sound fun,\" Brie said, slithering down to a squat as she pulled out Josh's cock.\n\n\"Oh my God! You're as big as...\"\n\nBarb cut herself off and blushed, glancing at her son's big cock again.\n\n\"We like big boys around here,\" Brie said, engulfing the hard shaft with her mouth. \n\nBarbara's eyes met Josh's. She loved the dark excitement she saw in them. She kissed him, and moaned when his hands found her tits, fondling them through the thin fabric of her dress.\n\n\"Unzip her, Joshy,\" Brie said, looking up at the nice kiss. \"She's beautiful underneath.\"\n\nBarb turned, with her heart in her throat, and let Josh lower her zipper. Austin had seen her lounging in her satin slip, and in her little leopard-print kimono robe, but the unveiling there at the party felt different. It felt monumental.\n\nWhen the dress was lowered she stepped out of it and turned back toward Josh and the others in the room. Josh's eyes flared with approval. \n\n\"See?\" Brie said. \"Isn't she hot?\"\n\nBarbara was relieved. She was so mixed up, she desperately needed the praise she was getting. But she needn't have worried \u2014 she looked amazing in the new lingerie she'd ordered on the internet, lacy panties and a matching bustier bra that didn't cover her big, gloriously hard nipples, and thigh-high lace-top stockings that gave her long, shapely legs even more presence than usual.\n\n\"See Barb?\" Brie said, holding Josh's cock against his belly while she licked his balls. \"He's got a thing for you older girls. You got him all speechless.\"\n\nBarbara kissed the happy looking boy again. She opened her eyes in the middle of it and her gaze landed on Austin. That's when it hit her that Josh was the same age. She didn't not know it before that moment, but that's when all the similarities started rolling into her head \u2014 same class at school, about the same height. Both of them cute, big-cocked party boys that the girls enjoyed. Barb felt like she was truly in the middle of things at that point. It was almost too exciting to bear. She closed her eyes and let her hand drift to Josh's wet balls. She felt Brie's hot breath and smiled against Josh's lips when he moaned.\n\n\"Me and Josh are fucking you,\" Brie stated.\n\nThe words seemed dreamlike, and Barbara didn't understand at first. Brie got up, led her to an open spot on the soft rug and laid the mesmerized looking woman down.\n\n\"Strip, Joshy,\" Brie commanded. \"Barbara needs you.\"\n\nBrie flung off the little cocktail dress she was wearing, and all that was left was skin. Barbara smiled. Brie straddled her head and lowered her pussy to Barb's open mouth.\n\n\"Oh, fuck!\" Brie yelped. The first touch at an exciting party always gave her a jolt. \"Lift her legs, Honey,\" she said, when Josh was naked. \"Fuck her.\"\n\nBarb squealed into Brie's hot pussy when Josh filled her full. He was wildly excited and fucked her hard. Of course Barb loved it that way. She was over the moon. Having her face hidden in Brie's beautiful crotch helped too \u2014 she didn't mind when Brie unhooked the front-closure bustier, and she didn't once think of Austin or anyone else as a wildly thrilling orgasm built. It was a glorious, writhing fuck. Josh loved watching her big, womanly tits move. He had a thing for big areolas and hard nipples that stuck way out. It was all wildly exciting, but he held on just long enough for the fireworks \u2014 Barb spasmed in back arching waves, screaming into Brie's pussy to relieve some of the glorious intensity. Josh pulled out and Brie leaned down to suck in his squirting firehose. When she had a mouthful she smeared the hot goo all over Barb's electrified pussy with her tongue, and then she guided Josh's throbbing cock back inside Barb for a slow wind-down.\n\n\"Fuck, Honey!\" Kelsey said to Austin as they looked on. \"Your mom's unbelievable!\"\n\nBarbara's mind was fuzzy, but she heard the words. She'd just had wild, threeway sex in front of her son! She wanted to stay under Brie's pussy forever \u2014 how could she show her face to everyone in the room?\n\n\"You're fuckin' me now,\" she heard Kelsey say. \"God, you're so fuckin' hard!\"\n\nThe next sounds were unmistakable. Barb had listened to Austin and Kelsey through his bedroom door many times, and she knew all the sexy redhead's noises. She knew the sound of her son's body slapping against her ass, too.\n\n\"So fuckin' hard!\" Kelsey huffed mid-fuck. \"God!\"\n\nBarbara could tell what was happening was big. Kelsey was shrieking like she rarely did, and the pelvic slapping was fast and furious. With the luxurious feeling of Josh's big cock still inside her, and Brie's delectable pussy grinding slowly against her mouth, Barb had another orgasm, a slow burn that warped her mind and made Kelsey's big one sound like a hallucination.\n\n\"Whoa!\" Kelsey gasped when it was all over. \"We gotta do this more often! Fuckin' hot!\"\n\nMargie was amazed by the whole scene. Kelsey was even wilder than she remembered, and the whole mother/son thing was intensely erotic in a bizarre kind of way. She was dying to get with Joey, but it still seemed awkward to do it too soon. He was still with Charity anyway, fucking her tits and t-bagging her as she lay head down feet up on a big soft chair. Margie had been watching him so much she wondered if the others had noticed. She was pretty sure Joey had noticed. Her horniness was ramped up to a high level, and Austin was handy. She had a pretty good memory of his youthful resilience, so she went down on him.\n\n\"Got anything left for me, baby?\" she said, right before licking Kelsey's cream of his cock. She was surprised at herself for doing it. She wondered if the slippery stuff might be unpleasant, but it wasn't at all. It was just the opposite really \u2014 the scent and taste seemed to fuel her desire.\n\nBrie had a nice orgasm on Barb's mouth. She dismounted just as Margie was being bent over the back of the couch by Austin, the same way Kelsey had been. Austin didn't notice his mother sit up, naked but for her stockings. All he was thinking about was how much fun it had been fucking Margie at the last party, and how good it was going to feel sinking into her right after Kelsey.\n\n\"Oh, shit!\" Margie said when he went deep. \n\nHer tits hung over the front of the couch cushion, jiggling with each small, slow-building thrust. Austin was looking down at the nice muscles in her back when Margie's eyes found Barbara's, gazing back at her with mystic wonder. The two women seemed connected, in an odd sort of way, as Austin's big cock plunged the depths.\n\n\"Ohhh fffffuck!\" Margie said, her voice almost pure breath as the strange, magical fuck took her higher. She'd remembered how amazing Austin was the last time, and was doubtful the second time would live up to it, but Austin was proving her wrong. He fucked so fluidly, with his whole body involved, like he was built for nothing else. She looked back at him to see the beauty of it, and moaned a breathy moan that floated on the air.\n\nBarbara was lost. Her mind was somewhere it had never been. She couldn't tear her eyes away from the sight of her son \u2014 a boy who was obviously fully a man \u2014 fucking a thrilled, soon to be orgasmic older woman. It was a carnal vision that seemed like a dream.\n\nKelsey watched with wonder as Barbara sat there, with her sexy-mother tits slowly heaving with each breath. She thought about saying something, or sitting with Barbara, but she let it play out on its own. Margie came, locking eyes with her lover's mother again as the warm wave washed through her. It was a quiet orgasm, but one of the most delicious that Margie had ever experienced.\n\nJoey had been watching. Charity had left him. He sat in the chair, leaning back languidly, with his big, fat cock in his hand, watching Margie get fucked. After she came, she straightened up and kissed Austin. That's when she saw Joey. She had just climbed onto him and settled his big cock deep inside her when Ryan and Alicia walked out of the kitchen hand-in-hand.\n\n\"I guess we don't have to worry about them anymore,\" Alicia said. \"I'm not sure I want to watch that.\"\n\n\"I think maybe I do,\" Ryan said.\n\nAlicia smiled. \"We'll catch up later?\"\n\n\"I hope so,\" Ryan said. He gave her a kiss and a quick hug, and walked over to the chair. He bent and kissed Margie, and offered her his quickly swelling cock. She smiled and sucked him in.\n\nAlicia was still smiling, but it was all getting to be too much to process. Margie has them both? How can she even do that?",
        "\"Alicia! Over here!\" \n\nKelsey was waving her over, so she went, feeling strangely floaty as she walked naked through the room of debauchery.\n\n\"Charity told me you like big cocks. Austin and Josh want to do you.\"\n\n\"Do me?\" Alicia said, smiling goofily.\n\n\"Yeah. Haven't you ever been with two guys before?\"\n\nAlicia shook her head. She felt strangely out of control, but it was okay. She glanced across the room at Joey and Ryan. If Margie can do it, I can do it too, she thought to herself.\n\nIt was right about then that Margie began to howl. Ryan was holding her arms out behind her, which arched her back and thrust her bouncing tits out toward Joey. He had hold of her hips as she rode him hard, her head bobbing loose like a rag doll as her garbled howls filled the quietly moaning room.\n\n\"Joey's got a big one, too,\" Kelsey said, snapping Alicia's mind from the dreamlike sight. \"You're lucky.\"\n\nMargie seemed to totally lose her mind when she came. Ryan stuffed his hard cock in her mouth, finally quieting the ruckus. \n\n\"Fuck yeah!\" Kelsey said. \"There's some good shit happenin' tonight!\" She surprised Alicia, giving her her first girl kiss. \"So how was it gettin' with Ryan? Pretty hot I bet.\"\n\nAlicia smiled shyly. Kelsey was glad. The party was turning out to be a memorable one, for so many different reasons. \"Wanna do doggie, Honey? Let me lick your pussy and then the guys'll fuck you good.\"\n\nAlicia wasn't sure she understood. Kelsey guided her down onto her hands and knees on the soft rug.\n\n\"Holy fuck, that's an ass! Huh, guys?\" Kelsey said. \"Look at that pussy! Damn, Aly, you're fuckin' hot!\"\n\nKelsey pressed her face into the wide-open crack, moving her head around in circles as she licked. \"God! You smell good, too!\"\n\nAlicia didn't know what to think. She'd never been with a girl before. She gasped for breath as her pussy overloaded her brain.\n\nJosh knelt in front of her and she took him in her hand. An intense desire to eat him whole left her with a mouthful of twenty-two-year-old cock. She looked up at his curly blonde hair and dark eyes and almost lost it. That's when Austin started fucking her. She was used to Joey's big fat cock, but Austin was just plain long. His smooth, seemingly bottomless thrusts took her breath away. She took Josh farther in her mouth, gagging a little before he finally slipped in deep. It was a soul-stirring feeling having two young men so far in each end of her. A massive guttural groan followed Josh's cock out of her mouth when she pulled off for some air.\n\n\"Yeah, go girl!\" Kelsey cheered. \"Big cocks rule! Switch, you guys!\"\n\nJosh moved around and the handoff was almost seamless.\n\n\"Oh sweet Jesus!\" Alicia huffed.\n\nHe felt different, but filled her just as full. She stuffed Austin's big piece of perfection in her mouth, and breathed in her own heady scent. It was all too much. The launch sequence was underway \u2014 she felt it all the way out to her fingers and toes. Guttural grunts onto Austin's hot shaft, a few dirty, nasty sounding gags, and she was there \u2014 Josh fucked her through a warm rush of happy. It left her dazed and confused.\n\n\"Fuck!\" Kelsey said. \"I wish I had a cock. I wanna fuck you right in the ass, Honey. Are you into that?\"\n\nAlicia couldn't make sense of it. She sort of could, but she couldn't talk, and...fuck me in the ass? Oh my God!\n\nWords failed her. She shook her head at Kelsey.\n\n\"That's cool,\" Kelsey said. \"Maybe someday. I'll lube up my strap-on. I just love your fuckin' ass.\"\n\nAlicia started to giggle out hot air. \n\nKelsey giggled, too. \"Super fun tonight, huh?\" she said.\n\nBefore the night ended, Abby got with Joey. Ryan and Joey were her first older men, and she kind of loved it. Joey reminded her a lot of her father, so that was interesting, to Abby at least. He was by far the girthiest guy she'd been with, so watching his meat disappear in her little dancer-body pussy was quite the sight for those who got to see it.\n\nYes, it was a memorable night all around. Barb had come within an arms length of Austin's hard, slippery cock more than once, but somehow she reigned in her carnal desires and grabbed another one instead. She wondered how long that could go on, and she wondered what he was thinking. She'd talk to him about it in the morning, she thought, over breakfast, in her little leopard-print kimono robe. "
    ],
    "authorname": "riverboy",
    "tags": [
        "big cock",
        "18 year old",
        "older man",
        "orgy",
        "party",
        "mother son",
        "mother",
        "son",
        "older woman"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/kelseys-world-ch-21"
}