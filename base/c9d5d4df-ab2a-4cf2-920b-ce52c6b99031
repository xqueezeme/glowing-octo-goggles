{
    "title": "The Empire Builder",
    "pages": [
        "What follows is our joint submission for the \"Fifty Ways to Leave Your Lover\" challenge. Some of you who are older (ancient) may recognize that this submission was inspired by the classic Hollywood film \"It Happened One Night.\" Which means that we changed the characters, swapped the sexes, seriously altered the plot, and wrote a whole new story, but we thought about the film while we were trashing it. So as the Hollywood pitchmen would say: It's exactly like \"It Happened One Night\" except on a train and .... Thanks to Bebop and Nora for giving us a chance.\n\n*\n\n\"Listen you little shit. You need to get off your ass and do something.\"\n\nSergei Petrokof was not a man known for his patience, and once again, Robert Loftis, Jr. (little Bob) was the object of his ire. Sergei's anger wasn't due to Little Bob's actions. Little Bob was just a surrogate for Jason Bishop, Bob's brother-in-law; which really wasn't fair. Since little Bob hated Bishop too. \n\nBishop had jumped the almost two year surveillance leash that the Russians had on him, and Sergei rightly thought that was a problem. \"Look, Sergei, we're locked down in a Paris hotel by this virus thing. What can Elizabeth do? You got people in New York. Use them.\"\n\n\"This is your fault. You promised me two years ago that she would get me my share of the company.\"\n\n\"And you will. It just depends on my getting control.\"\n\n\"You said that two years ago.\"\n\n\"Yes, but NOW my sister is prepared to file for divorce. The minute she does, the Judge will award her the majority of Bishop's shares.\"\n\nWhen Big Bob Loftis and his son-in-law, Jason Bishop, bought Five Borough Partners out from under the control of Sergei and his Russian mobsters, they'd walked off with assets that were initially purchased with the Russian's laundered money. \n\nNow those assets were worth many times what Loftis and Bishop had paid for them. On paper, it was thirty billion, but there was probably much more. The Russians wanted their share back with interest, and Little Bob wanted to be free of his brother-in-law. \n\nThe current problem resulted from the recent death of Robert Loftis Senior. Knowing his liver cancer was going to kill him, Big Bob left his assets equally to his two children. He had sold his company, Precision Aeronautics, to the Boeing Corporation for two billion dollars. Boeing paid half in their own stock and the balance in a long-term note. \n\nIt had been a considerable fortune at the time. Boeing was doing well, and the agreement seemed a win for all sides, but things had changed for Boeing, and the Loftis children's inheritance had all but disappeared. \n\nThe elder Loftis also owned forty-five percent of Loftis & Bishop realty. The balance was held by Bishop until his father-in-law died. Big Bob left fourteen percent of Loftis & Bishop to each of his two children and the balance of sixteen percent to his son-in-law in trust for his grandchildren. \n\nThis last bequest put Bishop in control of Loftis & Bishop and all its assets. With only twenty-eight percent of the shares between them, the brother and sister had no say in the control or operation of the company and could not, under New York Law, seek a dissolution of it. So, they were powerless, and even worse, Little Bob could not get into the money laundering business with Sergei. \n\nSergei tried to intimidate Bishop. But the Brooklyn raised Bishop was not susceptible to threats. So, Sergei backed his threats with action. Bishop's secretary was accosted in the street on her way home from work. A lock of her hair was cut, and the next day it arrived in a Fed-ex box marked personal. \n\nA week later, Sergei received a Fed-ex box. When the box was opened, they found the right hand of the man who had cut the secretary's hair.\n\nSergei got the message. Bishop had friends whose predilections for violence were more extreme than the Russian mob was accustomed to dealing with, or able to tolerate. \n\nSo, Sergei tried to bribe Bishop, but this too failed for Bishop was only allegedly dishonest. He was admittedly in bed with the bad guys. But he wasn't one of them. It was why so many disreputable parties trusted Bishop.\n\nSergei found a more receptive person in Little Bob. The latter was smarting from being passed over for control of a company that was founded with his father's money. \n\nLittle Bob's incentive to do business with Sergei only increased as the fortunes of Boeing faltered, and the value of his inheritance dropped. He wanted and needed to do business with the Russians. But both men were stymied until the Bishops' marriage blew up.\n\n\"I'll speak to my sister,\" Little Bob told Sergei, \"Maybe she knows where Bishop is or how to find him.\"\n\n****\n\nThe noise of the El rattling by woke her up. She was lying in a rumpled bed, and there was just a hint of dawn peeping through the windows. A male body was snoring next to her, and she was covered in an assortment of substances. Alas, she'd fallen again. \n\nShe recalled that she'd been at the Randolph Tavern the night before. The place was overpriced. But the atmosphere was upscale, and they poured a pretty heavy-handed shot. A bunch of them were sitting together, watching the Cubbies on the TVs behind the bar. \n\nThe Cubs were playing Pittsburgh, which should have been a walkover. But Bryant booted a hot grounder into left field and the Buccos on first and second romped all the way home. She'd played third base for four years at Northwestern, and it made her nuts. So, she was perhaps a bit colorful in describing the man's sexual predilections and questionable ancestry. \n\nThat little meltdown attracted the attention of a hot looking corporate player who sidled over and asked her why she was so critical of the poor man. \"Poor??!! Do you have any idea how much money he's getting paid to fuck up a simple ground ball?\" \n\nHe'd spotted her the minute he walked in the door. She was sitting with a bunch of Gen Y hipsters who had \"internet dweeb\" written all over them. They were around a couple of pulled-together tables that were littered with glasses and bar snacks. At six-one and a hundred and ninety well-proportioned pounds, he normally had his pick of the litter, and he chose this one for tonight. \n\nShe was hot, in a tomboy-turned-curvy-woman kind of way, a little shorter than medium height, perhaps five-five, and he couldn't exactly evaluate her body since she was sitting down. But he really liked what he saw up top. \n\nShe had all the earmarks of an Irish Colleen, amazingly thick copper hair cascaded in ringlets past her shoulders, a classic heart-shaped face pointed chin and gorgeous high cheekbones with a dusting of freckles. \n\nBut her eyes were her real gift. They were huge, emerald green, and dancing with merriment, intelligence, and something else. She had a long Irish nose and the widest, most expressive mouth, her lips were pure sex. \n\nThose lips were currently yelling, \"Come on, you pussy!!! You gotta pick those up!!!\" Then, she launched into a profanity riddled tirade that questioned everything from the player's sexual orientation to his mother's many anonymous lovers.\n\nHe slid into the chair next to her and said, \"Why are you being so hard on the guy? That was a really hot shot.\" She turned to look at him appraisingly and said, \"He shoulda been crouched on the pitch, not standing up with his arms hanging down like an orangutan.\" \n\nThen she stopped and added speculatively, \"And what brings you to this place, Mr. hotshot MBA?\" That was intimidating. He was supposed to be the one with the hook-up line, not her. He wasn't used to being dragged back to his own place for sex. \n\nHe looked hesitant. So, she slid her chair back, stood up, and said casually, \"Do you happen to have a place nearby?\" \n\nThis wasn't any frail little thing. She was busty and long waisted, with a no-nonsense body that screamed carnal delight. She was wearing tight jeans that showed off long legs and a beautiful round ass, and her throwback Ron Santo jersey was stuffed full of boobs. \n\nHe kind of stuttered, \"I'm in the Randolph Tower.\" He could see that the location impressed her. She said, \"That's convenient. It's right upstairs.\" Then she turned and walked out the door. She knew he'd follow.\n\nHe had a one-bedroom apartment facing the elevated tracks on Wells. She ripped his shirt open and began kissing his chest before he had even gotten the door closed. They didn't bother to turn on the lights, as they wrestled their way into the bedroom. \n\nNaked, she had a beautiful body, narrow in all the right places and full where it counted. Before he had slipped off his shoes, she had unzipped him, fished it out and gobbled it. The moment she had him ready, she lay back invitingly. Her loud gasp preceded a lingering cry of satisfaction as he slipped into her snug furnace. \n\nWhat followed was a moaning, groaning, back-scratching one-night-stand for the ages. She was uncommonly strong for a partner. So, he held nothing back. She came loudly two or three times before he yelled, \"Unnnnhhhh, Ahhh!!\" and filled her up. \n\nThey lay silent for a few minutes, just catching their breath. Then he felt a mouth bringing him back to full mast, and they did it again, doggy-style this time. She had a beautiful hard, bubble butt. There were two more times during the night. Each equally draining. \n\nHe awoke in a contented haze. The early morning sun was streaming through the big windows, and the woman had completely vanished. He didn't even know her name.\n\n*****\n\nEllie slipped out of bed as quietly as she could and retrieved her panties. He had a dresser in the large well-appointed bedroom. She silently pulled it open, looking for one of his t-shirts. \n\nShe needed to get out of there, and she wasn't about to ruin her Ron Santo jersey with all of the gunk. It's one of the problems of being the woman in these little tete-a-tetes. You accumulate a lot of nasty stuff. \n\nShe didn't bother to put on her bra, just stuffed it in her purse, struggled into her jeans, grabbed her shoes, and headed for the hallway. She didn't want to talk to the dude. He'd served his purpose. \n\nSeriously... of course she'd enjoyed every second of it. But she wasn't as slutty as last night made her seem. It was just that in a single week, she'd lost her job, her home, and her boyfriend, and she was feeling the need for a little reaffirmation. \n\nIt wasn't like she'd gone to Northwestern to be a weather girl. She wanted to do sports journalism like Erin Andrews, or Kristin Cavallari. She had the background for it. She'd played NCAA Power-Five softball all four years at Northwestern. \n\nBut the bosses at the local Fox station took one look at her, and the next thing she knew, she was standing up in the morning slot talking about Chicago's shitty weather. \n\nThe job basically sucked. She was getting paid the minimum for an on-air personality, and she had to get up at four in the morning, to make it down to the station for makeup. They even made her supply her own outfits; while subtly reminding her that she should buy stuff that showed off her great tits. \n\nShe had been doing weather for eight months when the station manager called her into his office and laid it on the line. Either she put out, or he had a hot young thing who would. She took her grievance to the folks in H.R., and shortly thereafter, she was handed a pink slip for \"spreading malicious and slanderous gossip.\" \n\nShe took her troubles to Joe Gordon. He had been one of her journalism professors and always a bit of a mentor. He was an older guy. But he'd been smart enough to branch out into online media. His site was built around superior production values and writing. Now it had become one of the real hip-happening stars of the Windy City market. \n\nJoe said, \"I'd love to put you on staff Ellie, but you have no experience. My investors aren't going to let me hire you without some proof that you can dig up a good story,\" He added kindly, \"If you have any ideas, I'd love to back you. But it had better be decent stuff.\" \n\nSo, she dragged her useless ass back to her Chicago double-decker in Printer's Row. King and Ellie were renovating it. They had gotten together just before they graduated. He'd played linebacker for the Wildcats, and he was a bit of an alpha male. She was willing to overlook that little personality flaw since he was ALSO a hunka-hunka burnin' love, and he rocked her world. Problem was that he was also stupid,\n\nHow stupid? Well, he should have been watching TV. If he had, he would have known that she was replaced in her normal morning slot. Instead, she walked in to the sound of some slut being noisily railed in their bedroom. She'd fucked King enough times that she could tell that both of them were coming to a thrilling climax. \n\nIt wasn't like she didn't know what kind of guy her boyfriend was. Everybody knew he was a ladies man. It was just that she thought she could change him. Women are kinda dumb that way; sigh!! Thus, as she was passing through the kitchen on her way to the bedroom, she filled a big galvanized pail.. \n\nShe could've been one of the four horsemen of the apocalypse for all they'd know that she was in the doorway. He had the slut's legs gathered up past his shoulder, and was pounding on her so hard that the knobs on the brass headboard were denting the drywall, meanwhile the slut was yelling, \"YESSS BABY- GIVE IT ALL TO ME!!\" \n\nSo, Ellie did. \n\nShe tossed the full bucket of cold water on them. That's how you break up fucking dogs, right? There was a frantic couple of seconds while the two of them gathered their wits. King jumped to his feet, still befuddled. The bitch was lying there, shocked. She should be. Ellie hadn't seen her little sister Marnie in a couple of weeks. She must have come by to visit.\n\nEllie was furious. She'd save the heartbreak for later. She looked at the mother-fucker and said, \"The place is in your name. I'm outta here!! I'll get my things when you aren't around.\" Then she looked at Marnie, who was scrambling to cover her nakedness with a wet sheet and said, \"I don't care what your explanation is. You're outta my life!!\" Then she turned and marched out the door as both of them yelled, \"Ellie!!\"\n\nIt was one of those cold misty October mornings. She walked down to Navy Pier, sat on a bench, and cried. What had she done to piss-off God so much!!? In a matter of two short days, she'd gone from being a successful TV personality with a good-looking live-in boyfriend to being an out of work homeless lady with NO family. \n\nShe was sniffling when a genuine bag-lady sat down next to her. The bag-lady had been pushing her grocery cart past looking for bottles. She said in a gravelly voice, \"Men?\" Ellie nodded miserably. The bag-lady said, \"That's the way things go: you think you got a great yarn, and something comes along and messes up the finish - and there you are.\" \n\nEllie said sadly, \"There you are.\" \n\nThe bag-lady said curiously, \"Are you gonna do something about it? Or travel around picking up bottles like me?\" Okay, that was an object lesson.\n\nThen it hit Ellie, and she thought, \"Maybe I'll travel around and write about it. What's your story?\"\n\nIt took her half-hour to get Trixie, the bag-lady's story. Yes, she was a girl like Ellie once. \n\nEllie wrote it up in the Public Library over on Division and was sitting in front of Joe Gordon by lunchtime. That was the beginning of her career as a lifestyle reporter for Chicago's number one online magazine. Joe said kindly, \"I can pay you for this piece, but you will have to come up with an angle for a salary job.\"\n\n****\n\nMadison Square Garden sits atop Penn Station like an elephant on an anthill. The sporting area is famous for its basketball, hockey, and boxing (not to mention the live and extravagant concerts), but the train station is more famous for its dirt, grime, and delays. \n\nJason Bishop entered the maze of below-ground corridors, threading his way past the overpriced little shops and food vendors. Trying his best to avoid the pickpockets and con artists while making his way to the large Amtrak timetable announcing arrivals, departures, and, of course, the endless delays.\n\nBishop would buy one ticket here and another in Chicago. He had cash in his pocket for the tickets with his hand firmly on his wallet against the threat of the pickpockets. But he needn't have bothered the station was near empty thanks to the coronavirus (COVID 19). \n\nThe place had an almost post-apocalyptic feel about it. Gone were the queues for the trains, and empty was the passenger waiting area (a little cattle pen space in the middle of the station.) \n\nThe virus was a pandemic to most, but a once in a lifetime opportunity for Bishop. It had trapped his wife and her brother, Robert Loftis (aka little Bob), in France. Unable to fly home, Mrs. Elizabeth Bishop, her brother, and her three children were holed up in a plush hotel suite waiting out the pandemic. And so, for the first time in nearly two years Bishop was free to execute the plan he had been putting in place since the untimely death of Big Bob Loftis from liver cancer. \n\nJason first met Big Bob fifteen years ago shortly after first making love to his daughter Elizabeth Loftis, known to friends and family as Liz. She was a pretty girl in those days young and sensual. If she was not entirely virginal, she had an innocent manner and appearance. That style was at once disconcerting and appealing in a Wall Street attorney. \n\nIn the days after 9/11 and before the great recession of 2008, New York was on a buyer's binge. Real estate was hot, and fools were overpaying left and right for property. It was only natural that some would get in trouble and end in bankruptcy court. It was, in fact, a strategy for the unscrupulous. Borrow more than you can pay back, then file bankruptcy and give the lender a haircut. In a year or two, resell the property in a hot market. \n\nAs a young, very green attorney, Ms. Loftis found herself in bankruptcy court, attempting to argue that her client should be paid on its mortgage. They never taught her about bankruptcy at Harvard. (Elizabeth Warren notwithstanding.) Only a few studied business failure, Harvard educated SUCCESSFUL corporate lawyers. \n\nTherefore, it was quite a surprise when Liz found herself feeling like Alice in Wonderland or more accurately, Alice Through the Looking Glass, in a court of law where left is right, and right is always wrong. A place where there's the verdict, and then there's the trial.\n\nLiz entered the small courtroom on that cool spring day in 2005. She was a recently admitted attorney and a very junior associate sent to cover what was believed to be a routine appearance for an adjournment. She was sure that it was one of her superiors who had made the mistake, because the bankruptcy partner was on vacation, and his assistant was sick. \n\nLiz had come for an adjournment, what she was confronted with was known as \"a cramdown,\" a crude description for what constitutes the rape of a security agreement. The second mortgage that Liz's client held was about to disappear, and there was nothing the novice attorney could do about it.\n\nShe looked to the jury box on the left side of the courtroom. The place for a jury was required by an obscure and arcane (read asinine) US Supreme Court case, but no jury ever sat in it, because the Judge rendered all of the verdicts. Instead, the jury box was filled with the bankruptcy insiders, the small group that made up what some people refer to as the bankruptcy bar, and others the bankruptcy ring. \n\nLiz was confronted by a Judge who was preparing to vacate the mortgage and then set a date to determine what an unsecured mortgage was worth. In other words, it was a case of first the verdict and then the trial. Your mortgage is worthless, so come back in three months, so we can prove it.",
        "It was at that moment, Jason Bishop leaned over the court rail from the first row of spectator seats and whispered in Liz's ear. He was by then known as a first-class bankruptcy hack after only five years in practice,\n\n\"I elect under 1111B for my client.\"\n\nShe heard the words but had no idea of their meaning and hesitated. The voice behind her spoke again, and it was firm, \"I elect under 1111B for my client.\" \n\n\"Your honor,\" Liz began, \"I elect under 1111B for my client.\"\n\nThe Judge jerked straight up in his chair, and the bankrupt's attorney was on his feet objecting. \n\nHowever, the Judge could only grumble and allow the election. Liz knew something had happened that greatly displeased her opponent, but she couldn't understand what it was.\n\nOutside in the courthouse hall, she gazed up, despite her heels, into the deep-blue eyes of her benefactor and asked, \"What did I just do?\"\n\n\"Saved your client's lien.\"\n\nIt was all he said as he walked away. He was a big ox of a man. He was neither handsome nor well-dressed and, yet he had about him a certain alpha-male animal magnetism. He would prove to be a man of few words who everyone listened to. \n\nJason Bishop, aka Bishop or simply JB, was a night school graduate. He founded his practice from his car and was working his way up the bankruptcy court ladder with frequent stopovers in the criminal court.\n\nOn the return of the bankruptcy partner from vacation, the young Ms. Loftis was given accolades for her quick thinking and discovered that, in fact, she had saved the day. She didn't mention the help she had received through the intervention of a stranger. \n\nShe went looking for that stranger when she found herself going back to bankruptcy court again. However, she first purchased a copy of \"Bankruptcy Law in a Nutshell.\" When she saw her man, she went right for him. Liz usually got what she wanted. It had been that way all her life, and so Jason Bishop was just a big man who represented a small challenge. \n\nOn his side, JB knew the bankruptcy code by heart, but very little about women. Unlike the privileged Elizabeth Loftis, he was born into a lower-middle-class family in Canarsie. His family was an old one, but several hundred years of poverty is still poverty. \n\nJason Bishop had ambition and a taste for the expensive things in life. It was a weakness that Liz, one day, would exploit. However, back then, all she needed was the fatal ability she had been developing since before mother nature converted the little-girl into the young woman. Where men were concerned, Liz had an appetite that knew no restraint and an ability to attract the male gender that was the envy of her feminine peers.\n\nJason's capture took Liz all of a month. It was the fact that it took that long to bring down her quarry that astonished her. The problem was that JB didn't like her or, more accurately, he didn't like what she stood for, the privilege of wealth. \n\nFor her social class, Liz was not notably priggish or insensitive to others. However, it is impossible to be completely free of one's upbringing. She was a person brought up in wealth, which meant elite private schools, Harvard instead of the University of Washington, and Vacations in Europe and the Far East. She was rich and entitled, and she knew it and thought nothing of money. Wealth was a fact, and one she didn't have to think about.\n\nJason was the opposite. He had no money, and his world was delimited by that fact. He had no true place in the legal profession. That's why he had been relegated to the bankruptcy and criminal arenas. Where he excelled but was widely disliked or more precisely feared. In a game with twisted rules, where the apparently losing hand was the normal winner, Bishop was a superstar. \n\nIt wasn't love at first sight, but neither could deny the attraction that existed on multiple levels. Liz enticed him, and despite an inner voice that whispered caution, JB let himself be drawn into a relationship with a woman who was his exact opposite. \n\nIt might not have gone anywhere had cupid or whatever fickle god of love out there had not taken a hand. Liz found herself in love with a big ox of a poor boy, and he was cupid's reluctant victim. One more male who had let his heart rule his head and would live to regret it.\n\n*****\n\nBig Bob Loftis lived in a mini-mansion overlooking Lake Washington, in Seattle. He technically lived alone since his wife, Karen, died giving birth to Elizabeth's brother Robert Junior. Little Bob was a man who was nothing like his father. Fate, or a quirk of genetics, had determined that he couldn't be. \n\nWhere Big Bob was a short, stout man, who other men claimed had a constitution of iron and nerves of steel, his son was tall but reed-thin and weak. Moreover, little Bob had been a sickly child and deprived of a mother; he grew up a bit starved for affection and was selfish for it. \n\nLittle Bob was doted on by his big sister. She seemed to have inherited all the looks and brains, before her brother could get a share of any of it. His father overcompensated and spoiled him shamelessly. Consequently, Little Bob the man was still a selfish boy and well-deserving of his diminutive nickname.\n\nBig Bob had been a Boeing Engineer when opportunity came knocking. A graduate of North Seattle College, the middle-class Robert Loftis, knew a good opening when he saw it. \n\nHe had risen to the manager level at Boeing when the opportunity arose to take the CEO position with a struggling aeronautics parts supplier. Two years later, the company he ran, Precision Aeronautics, was the leader in its field, and Bob Loftis would come to be its majority owner. \n\nIt was with trepidation that a wealthy but lonely man met his only daughter's proposed husband. The trepidation was short-lived. It took only five minutes for the small but dynamic man to size up the much larger man as a good-natured and dependable giant. \n\nWithin the hour, Bob was calling his future son-in-law JB and by the time of the wedding ceremony in St. James Cathedral, the father of the bride and the husband were thick as thieves, in the literal sense. \n\nThe wedding was in Seattle, and that was why fourteen years later Jason Bishop was in Penn Station waiting for the Lake Shore Limited to take him to Chicago. Leaving in the late afternoon, the train would arrive in Chicago in the morning some nineteen hours later. \n\nThere were only two places you could file for divorce. That was in the state in which the parties were domiciled or the state in which they were wed. The Bishops lived in New York, an equitable distribution state, and they were married in the State of Washington, a community property state. On that little variation in the law, there hung a hundred billion-dollar prize. \n\nJason Bishop had been waiting two years for the opportunity. He was slipping out of New York without notice and headed for Seattle, Washington. There a set of divorce papers were ready for the filing, and all they needed was his signature. \n\nThe why of the divorce had several levels, and none of them pleasant. There was infidelity, corporate malfeasance, an arrogant wife, and an unscrupulous and ne'er do well brother-in-law.\n\nAfter buying his, ticket Bishop took a seat in the cattle pen of a waiting area. He looked oddly out of place in his wingtip shoes, Brooks Brothers pinstriped suit, and button-down oxford shirt. His clothing shouted Wall Street lawyer. \n\nTwo men approached. They were a Mutt and Jeff pair. A tall Mediterranean looking man and a much-shorter lighter complexioned fellow. As they approached, Bishop stood and then hugged each man in turn, first the shorter man, Anthony the Tiger Mancuso and then the Taller, Big Nicky, who was Tony's enforcer.\n\n\"I still think this trip is a mistake,\" Tony said again.\n\nThe three men had been friends since they grew up together on the street of Canarsie. Tony was now a Capo of the Cabrasie crime family. \n\nBishop said earnestly, \"Like I've been saying. I need to get to Seattle to file for divorce and keep control of my company.\"\n\n\"Yea, but an accident would be safer and more efficient,\" Nicky chimed in.\n\n\"She's still my wife. Whatever she may have done, I'm not going to see her killed. What would I say to my kids.\"\n\nTony nodded his head in understanding, but he gripped the arm of his friend and said, \"Look, you be careful, once you cross the state line at Erie, you are out of our jurisdiction and fair game. The Russians want you dead.\"\n\n\"Hey, relax. They won't expect me to be on a train. They'll be looking at the airports, and besides, you know me, I always hit first.\"\n\nBoth Tony and Nicky laughed at the last comment. When they were kids Bishop had always been the one to start the fight. It was how they met in a school yard brawl. They had started out as opponents and ended up as friends. The three Musketeers one for all and all for one, but what Bishop did now he did alone.\n\nTony took his friend's right hand and gave it a good squeeze despite the CDC's warnings to the contrary. And then he said, \"You be careful, and I promise if you don't make it, those fucking Russians won't live to enjoy their spoils.\"\n\nJust then, the Departure board lit up, and the announcer called the boarding for the Lake Shore Limited. Tony gave his friend a last hug and slipped an envelope into his pocket.\n\n\"What this?\" Bishop asked, fingering the edge of the envelope and realizing it was crammed full of something.\n\n\"Your share of the Thompson bust out counselor,\" Tony informed Bishop. \"I've washed it all nice and clean for us.\n\nJason frowned, \"you told me that case was on the up and up. That Tommy Thomson was just a businessman who had an unfortunate run of luck.\"\n\n\"He did,\" Nicky quipped, \"But it was at our sport's book.\"\n\n\"And his property in Brooklyn?\" Jason asked.\n\n\"I'm going to build a nice social club in Canarsie. Improve the neighborhood,\" Tony said with a laugh.\n\nThen he smiled and patted his friend's pocket that held the envelope. \"it's fortunate,\" he said, \" that I never tell my attorney things he doesn't want to know and can't divulge.\"\n\nWith a final laugh, the three men parted.\n\nSilviya Glonti was wearing a surgical mask as she manned the register at the Sarbro's. Normally, the station would have been too full for her to have noticed the three men, but the virus had nearly emptied Penn Station, and she had a clear view. \n\nShe had noticed the man who was clearly an upscale lawyer when he first entered the train station but had paid him only passing attention. However, her interest picked up when Tony the Tiger entered with his oversized thug. \n\nShe had no idea what the meeting was about. But she was sure that there would be people interested in why the mob was meeting with its lawyer in the train station in the middle of a pandemic. \n\nSilviya's eyes were not the only ones that caught the meeting of the Musketeers. Ted Carter Special Investigator for the New York Attorney General was on his way home to Utica from an assignment in Manhattan. \n\nHe just happened to recognize Tony Mancuso. The pass of the envelope had been subtle and fast, but Ted's sharp eyes had caught it. He had friends in the FBI who he was sure would be interested. \n\n****\n\nThe idea of taking the train cross country came to Ellie after she'd moved her stuff out of her former lover's house and into the little hole-in-the-wall apartment over on Clinton. \n\nHer guess was that their old place would only be King's for ninety more day; or however long it took the bank to kick him out. It had been her salary that paid the mortgage. But that was his problem now. \n\nShe didn't have many things, clothes, a bike, and her athletic gear. So, it was easy to just transfer everything to the apartment. Union station was right up the street. Hence, she was a little over-involved with the railroad industry. She didn't mind the sound of those big diesels during the day. But it took some getting used to in the middle of the night. \n\nMost of the rail traffic was freight. But every-once-in-a while there were sleek silver passenger trains, most of them double-decked. It was exciting watching them pull out for parts unknown, looking like they'd fallen out of a time warp from the 1950s. That gave her an idea. \n\nNobody flew these days due to social distancing. Being crammed into an aluminum sardine can breathing recirculated air was an invitation to catch the virus. She wondered what other, older forms of transportation might be like. \n\nSo, she spent a bit of time on the Amtrak website, and they had a train that went all the way from Chicago to Seattle. It took a couple of days, and it passed along the Lewis and Clark trail. What wasn't to like about an adventure like THAT? \n\nShe pitched Joe about the colorful insights that she could get taking the old-fashioned way from Chicago to the coast in the age of social distancing and he loved it. \n\nHence, that Friday, Ellie found herself passing through the ornate glass entrance on Canal Street and down the same iconic flight of stairs where Costner saved the baby in the Untouchables. Then she crossed the almost empty Great Hall to the track where the Empire Builder was boarding passengers. \n\nShe wanted the cross-country train experience. But she didn't want to ride for two days sitting in coach with a bunch of people wearing masks. The roomette was the answer to social distancing. One of the best things about it was that you could simply board without a TSA rectal exam. Another was that you could just drop your backpack in the roomette any time you wanted to. \n\nEllie'd seen the old black and white movies with the spacious train bedrooms. She knew that this wasn't that kind of experience. A roomette is essentially a four by seven box, closed off by a little door that you slide across for privacy. \n\nThe space itself is deceptively efficient. There was a big seat that would eventually be made into a bed and a little sink that folded down. There were also accommodations for her computer gear, including wi-fi, as well as a little closet. \n\nThe car had an aisle with the roomettes on each side. It was tight but navigable. She was bent over, leaning into her roomette, settling her backpack onto the smaller of the two seats. Her butt must have been sticking out because some careless son-of-a-bitch came along and hipped her face first into her cabin. \n\nThere was a lot of crashing and banging as she caught herself on the little shelf between the seats. She pivoted angrily to confront the inconsiderate asshole. He could see the fire in her eyes, and he was making a placating gesture with his hands. \n\nEllie was about to rip into him when she noticed his face. He was very big. She could understand why he'd run into her in the confined space of the aisle. He wasn't pretty, kind of huge and muscular. But his face had something about it. It was an odd mix of quick-witted intelligence and decisiveness, all in the guise of an unassuming nerd. Ellie was intrigued. \n\nHe said flustered, \"My God! I'm sorry.\" She huffed and said, \"Well, be careful. We're neighbors.\" She was in roomette one, right next to the john, and he was obviously across the aisle in two. \n\nA smile lit up his face. He stuck out his hand and said lightheartedly, \"Well, howdy neighbor.\" Ellie shook it the way a guy would, social distancing be damned, and said sarcastically, \"Maybe I'll see you around town.\" It was a nice hand, strong, warm, and reassuring.\n\nShe found herself speculating like all girls do. He was about as opposite King as you could get. But there was something about him. King was an intimidating guy; handsome, smooth and super-outgoing. While this one bore a striking resemblance to a silverback gorilla. Yet, he radiated an uncanny personal magnetism. \n\nIt was partly his immaculateness. Everything he wore was either Vineyard Vines or Ralph Lauren. Every personal feature, from his pricey haircut down to his highly polished shoes, broadcast his intense focus on detail. The other part was the way he held himself, low key but supremely confident. This wasn't a person who backed down from any type of challenge. \n\nBut it wasn't in the Neanderthal way that King approached things. This guy knew he was smarter than everybody else. He could find his way around anybody. Ellie's little venture into the world of cross-country train travel had suddenly become a whole lot more interesting. \n\nShe had been hit on by guys just like this fellow. But they flew around the country in corporate jets. They didn't travel stuffed in a \"superliner roomette\" on a cross country train. She was a trained journalist. She had instincts. They told her that she needed to find out who this dude was.\n\nShe tried perky. She said, \"My name is Ellie Andrews, what's yours?\" \n\nHe looked her straight in the eye and outright lied, \"It's Smith, John Smith.\" She gave him her most alluring smile and said, \"Maybe I'll see you later, John.\" Then she slipped into her \"compartment,\" sat down and got out her laptop. \n\nIn essence, a roomette is nothing more than a couple of rows of double seats turned facing each other. The people in steerage all rode in seats just like that. But they didn't have a privacy wall around them. Privacy gave her adequate distancing.\n\nCustomers are basically buying the separation from the herd, plus a bed, a little sink and closet. Those features take up the space that the area nearest the sliding door would occupy. So, when they do up your bed in the evening, you are essentially sleeping on the two window seats slid together. \n\nThe other feature was the little table in between and all of the plugs and connectivity you'd need to browse the internet. As a writer and reporter, Ellie lived on the internet. So, she had everything she needed to write her story. Plus, the roomette wasn't that much smaller than her Chicago bedroom.\n\nAs one-o'clock approached, there was a horn blast off in the distance, a bang and a lurch, and the covered tracks of the station began to move past her window. The train emerged into the sunlight of a beautiful Chicago summer afternoon and began to slowly accelerate through the city, on the way to Milwaukee, St. Paul, and points west.\n\nThe clickety-clack and swaying of the train and the occasional horn blasts added a touch of motivation to her writing. Her other inspiration was the guy across the aisle. He would need some looking into.\n\n*****\n\nBishop was watching the Chicago suburbs roll past as he sorted through his feelings. He had enough problems to deal with, between his bitch wife, douchebag brother-in-law and the Russian Mob. So, he didn't need any more complications. But the woman he had just bumped into, insisted on raising a few for him anyhow. \n\nHe'd considered the train gambit a stroke of genius. It was a relatively safe way to travel, and they'd never think to look for him on a train. Plus, the roomette wasn't as bad as he'd thought. It was forty-three hours of boredom, stopping in places like Detroit Lakes, Fargo, and Sand Point. But he could hunker down undisturbed and finalize his plans. The fact that he had full internet connectivity from a moving point of origin made those plans a whole lot easier and safer to implement.\n\nThe problem lay with the woman in the compartment across from him. She wasn't like any of the females in the uber-preppie world of New York society, least of all his whore wife. This one was very attractive, maybe even gorgeous, in a fresh-faced, kick-your-ass-and-take-your-name no nonsense midwestern way. She was young, not a college girl, perhaps mid-to-late-twenties, and her body was out of this world, long-legs, tight hips, and a shirt replete with a full set of big, round tits. \n\nHe shook his head, disgusted with himself for letting his mind wander. He had to focus on his current problem, which was survival, and that meant watching for anything suspicious. He was sure that the Loftis family and Petrokof were frantically searching for him. ",
        "He knew that they'd already floated his \"disappearance\" on social media. They'd done it in a way that had made it sound like he had lost his mind. They had to have figured out his destination. Maybe they even had people looking for him on every bus, train, or plane, who knew? All he knew was that he had to keep his head down and his eyes open. \n\n*****\n\nEllie wrote some initial impressions. It was the usual stuff, observations about the boarding process, and the room. As the train pulled out of Milwaukee and rattled through the suburbs in the gathering dusk, Ellie was writing about the odd feeling of disconnect, looking into the lives of small-town America from a passing train window.\n\nEllie was packaging her first post when a porter popped his head in to ask when she wanted to schedule her slot in the dining car. That was an interesting feature, so very Hitchcockian. They were the last sleeper car on the train, so there were only late slots. Ellie just had to take advantage of it. \n\nEllie'd had her door closed while she worked on her piece. But the porter left it open. And, she heard him ask the same question to the guy across the way. Maybe he could use some company. She left the door open while she indulged her dirty little habit, which was trolling TMZ for mindless gossip. \n\nIt seemed like the story of the day was the mysterious disappearance of some slimy New York attorney named Bishop. It was one of those salacious pieces where the speculation was in two camps. He had either run off to a tropical island with a mistress-to-be-named-later, or he was sleeping with the fishes. \n\nThe gossip hounds gave equal credence to both options since this Bishop fellow was a bit of a player with deep ties to a number of unsavory characters. That included Tony the Tiger Mancuso. That guy was an under-capo for the bada-boom-bada-bing, made-men who did the trash hauling for the five boroughs.\n\nA picture of the dude accompanied the article. The fellow was posed in a tuxedo standing next to a smiling Trump at some hideous NYC event. Bishop was with a knockout gorgeous trophy, who was identified as his wife. Trump was looking down the wife's cleavage. While, she was gazing intently off camera at somebody else. Bishop looked like he would rather be any place but there. \n\nAll-in-all it was the usual, forgettable ration of shit that TMZ shovels to the masses except for one eye-popping difference. The subject of the article was the man sitting across the aisle, staring pensively out the window as the sun set over northeastern Wisconsin. \n\nEllie had no idea why or how he'd gotten there. But he was there in all his glory. She enlarged the picture so that she could study the subject's face. She looked across the aisle to compare the two, and sure enough, it was him!! \n\nThis was what reporters from time immemorial have called a \"scoop.\" In fact, it wasn't a scoop. It was a potential Pulitzer Prize. \n\nEllie thought about calling Joe and telling him what she'd stumbled on. But the more she thought about it, the more she realized this was the kind of coincidence that made a reporter's career. She didn't want her fellow ink-stained-wretches-of-the-press to get a shot at the story. Instead, she decided to play it like she didn't know who Bishop was. That is until she had nailed his hide to her barn door. \n\nEllie spent all the time until dinner doing deep background on everybody in this guy's social network. That's the advantage of Facebook and Intelius. Suddenly all of her first impressions made sense. At age 36, the fellow was only ten years older than she was. But he already had put a lifetime of living under his belt, most of it unsavory. Of course, that's what it takes to play in the New York City real estate game. \n\nHe'd been born and raised in Canarsie and worked his way through night school. His law degree was from NYU, and he had a reputation for being the clever sort of fellow who could get any douchebag mafioso, or low-life shyster, off the hook. The fact that he was willing to do that for a living spoke volumes about his morals and ethics.\n\nHe was richer than sin because he had married into the Loftis family. Big Bob Loftis owned a lot of expensive Manhattan real estate, valued well into the billions. No wonder Bishop and wife could get a stand-up with Trump. The old man had just kicked the bucket, and it appeared that Bishop was now running things. But there was trouble in paradise. \n\nIf the rumors in the on-line edition of the Enquirer were true, Bishop's wife, who was Big Bob Loftis's little princess, played away on him. Of course, it WAS the Enquirer. Bishop, in turn, had been connected with half the actresses on the Great White Way and any stray starlet who might be idly wandering through the Big Apple. \n\nEllie was in the innuendo business. And it looked like a lot of the stories about Bishop's depredations in the female population might be counter-programming on Loftis's part. Because, absolutely nothing was confirmed. \n\nThen there was the wife's brother. He was the potential heir to the throne and also named Bob. There were rumors he was planning a coup. So, all-in-all it was clear that the Loftis family weren't the Waltons. \n\nThis had all the scandalous elements of a great story. All Ellie had to do was get it out of Bishop during the time she had him locked down across the aisle. She decided that he was about to get company at dinner. Ellie would start there, and if she had to fuck him to get the whole story, then so be it. \n\n*****\n\nBishop was sitting alone at one of the last booths in the dining car when his neighbor walked in. The diner had place settings and a table cloth. But there was no fine linen, crystal, and silverware like he was used to in Europe. Still, at least it was a place to sit, eat, and watch the night roll by. \n\nShe was wearing a Kelly-green sweater that contrasted stunningly with her copper curls and showed off her spectacular girls to their maximum advantage. She prowled toward him like a hunting cat and said in a voiced that absolutely purred, \"Mind if I join you?\" \n\nHe looked around and could see a number of open seats. Still, he gestured to the bench across from him and said grudgingly, \"Sure.\" She sat, picked up the menu, and looked it over and said conversationally, \"It's my first time on a train. Is this like a restaurant, with real waiters?\" He nodded in the direction of the guy in the surgical mask who was just approaching the table. \n\nShe looked a little flustered. Then she turned to the waiter and then said, \"I'll have the salmon. Do you have anything to drink?\" The waiter said, \"Beer, wine, or most spirits.\" She said, \"Can I buy it by the bottle?\" The waiter said, \"No, Ma'am, but we DO have a nice wine and cheese tasting tomorrow.\" She said decisively, \"Chardonnay and keep them coming.\" \n\nLooking satisfied, she turned to Bishop and said brightly, \"Do you like train travel? You don't look like somebody who normally takes the train. Is it the virus? Is that why you're here? I do the weather on Fox32 Chicago, and I'm going to Portland for my sister's wedding.\" \n\nBishop had all the instincts of a top-level predator. He knew when people were lying to him. So, why had this woman just given him a fabricated story? He was intrigued. He said, \"I'm a travel writer. I go on trips and then write about them. It tells people what it's like.\" \n\nShe looked like she didn't believe him. She said skeptically, \"You're not like any media person I've ever known. Most of them are as hyperactive as Jack Russell terriers, with about half the attention span.\" \n\nBishop actually laughed. He said, \"I write books. I know that somebody who's in TV would find it hard to believe that people still actually read.\" There was a long pause while she digested that. She said, \"So, tell me, neighbor, what books have you written. Maybe I've read some of them.\" \n\nBishop gave her a couple of style points for trying to pin him down like that. Surprisingly, he saw a wicked intelligence underneath that beautiful face. Perhaps there was more to this woman than he'd initially thought. His first impression was that she was some hot-looking girly-girl marking time in life until she snagged the right sucker. She was hot enough to catch a big rich one.\n\nHe plastered on a thoughtful expression like he was trying to think of something she might have heard of. It was a standard lawyers trick when somebody throws you a curveball. He said, \"They all start with 'Exploring the...\" Then he added slyly, \"You might have read, Exploring the French Riviera. That's the one that sells the best.\" \n\nShe looked disappointed and said, \"No, never read that one.\" Her disappointment was clearly not because she hadn't read his fictitious book. It was because she hadn't cracked his story. Then she brightened again and said, \"So where are you from? Are you married?\" She looked momentarily embarrassed and said, \"That's a standard female question.\"\n\nHe looked at her for a moment and said, \"Durham, North Carolina, and none of your business.\" She nodded toward his ring and said meaningfully, \"I'll take that as a yes.\" \n\nHe'd forgotten about the ring. He'd worn the thing for so long he hadn't thought to remove it when the whole sordid mess fell on him. This woman was sharp. He was marshaling his defenses as he shrugged and said, \"It's complicated.\" \n\nHe had to get away for both their sakes. The Russians could be brutal. He rose and said, \"I've had a long day.\" She jumped to her feet and said, \"I'll come with you. \" They made their way silently from car-to-car and up the stairs to their roomettes. The walk back featured a lot of swaying and rocking as the Empire Builder hustled through the dark night of the North Dakota prairie. \n\nTheir bunks had been made up when they got there. She gave him an impish smile, nodded toward the bathroom, and said, \"You go first. We girls need a lot more time.\" \n\nHe brushed his teeth and changed into a pair of sweatpants and a t-shirt. He found her standing, waiting for him in the aisle after he'd finished. She was grinning like the Cheshire Cat. She was clearly ready for sleep herself, wearing nothing underneath her little spaghetti strap top and a minuscule pair of loose-fitting running shorts, the fullness of her gorgeous long hair was loose and flowed around her shoulders. \n\nShe had a figure to die for, big, full firm tits with natural cleavage, long waist, and powerful flanks. But her legs were the extraordinary element of what was an outstanding body. Her thighs were well-formed and muscular, and they were a little longer than average, which gave her a leggy appearance. Combined with well-developed calves, she looked like she could have been a Rockette. \n\nShe slowly brushed past him in the narrow aisle, her back to his front. She did it very carefully like she was consciously trying to avoid touching him. But her round full buns still passed across his raging hard-on. He could feel her heat. \n\nWhen she had gone past him, he said with an embarrassing amount of lust in his voice, \"Good night.\" She turned and gave him a cat that just ate the canary smile and said, \"See you in the morning.\" He thought, \"Not if I can help it,\" as he slid the door of his compartment closed.\n\n*****\n\nEllie thought the initial contact had gone well. They had both bullshitted each other sufficiently to establish a connection, and she'd shown him the goods. The hard-on she felt as she brushed past him confirmed his interest. The only hitch was that the same contact flooded her. \n\nEllie was surprised at how decent and unassuming he was. The cover story he cooked up on the fly was not the sort of thing you would have expected. Most of the guys like Bishop were alpha-male types, whose only interest was in bragging about themselves. \n\nThey would have played the power and influence card right off the bat. A weather girl in a major market was something of a TV star, and if Bishop was a player, he would have used his status to try to get into her pants.\n\nThe latter part was problematic. She wasn't opposed to fucking him to get the story. It would be her pleasure, literally. He radiated the kind of strength and self-confidence that caused little flutters in her tummy, or perhaps a little lower. \n\nStill, there was something subliminal going on underneath all that self-control. He was hurting, and she wondered what had made such a formidable person so sad. For a moment, she wanted to comfort him rather than make him into a story. \n\nThere's something soothing about night on a train. There are very few intersections once you get into the wilderness known as North Dakota. So, the horn blasts and clanging from the crossings died down, and the gentle swaying of the car lulled Ellie into a sound sleep. She awoke to the sight of the mountain landscapes of Montana right outside her window. It was gorgeous. \n\nEllie did her morning wakeup routine and dressed in something she hoped would keep Mr. Smith interested. Then, she waited. As soon as she heard his door slide open, she slid her own back and said happily, \"Well, good morning, neighbor. I trust you slept well.\" \n\nHe gave her a look like she was the last person he wanted to run into. That was encouraging. She was getting to him. He said grumpily, \"Couldn't sleep.\" \n\nEllie felt a surge of compassion. The man was actually suffering. she said kindly, and she meant it, \"Want to talk about it over a tasty Amtrak omelet?\" \n\nThe expression on her face must have communicated her genuine concern because he smiled and said in an exaggerated tone, \"I need coffee.\" They walked down to the dining car as friends.\n\n*****\n\nElizabeth Bishop was packed. The news had come from the Russians the previous day. Her husband had disappeared and then been seen in Penn Station, boarding a westbound train. Her brother and his Russian friend had been stumped for the meaning, but Beth knew immediately what the purpose of Jason's actions were.\n\nJason Bishop, the love of Elizabeth's life, was preparing to divorce her. He wasn't filing in New York where her legal influence and an unfair set of laws would give her the advantage that she needed to hold his company hostage. He was planning on filing in a community property state, Washington, and thereby wrest control of his company from her, her brother, and their Russian partners. \n\nJason was always the shrewd one when it came to corporate structure and legal strategy. He had taken the opportunity of her being stuck in France to strike, but Elizabeth wasn't having it. She was going to New York come hell or pandemic, and no Chinese virus was going to stop her. \n\nShe was going to beat her husband to the punch with the legal process. Not because she cared about the money, although that was a concern, but because he belonged to her. He was her man, and she didn't give up anything that belonged to her without a fight.\n\nHer brother, Little Bob, was desperate about the money. \"His nickname was so apt,\" she thought. Little brother had been scheming and planning even before their inheritance took the hit that Liz doubted it would ever recover from. \n\nBig Bob had left them his interest in Boeing Stock and a billion in Boeing debt owed to him. The debt was already in default. When the Boeing 737 Max turned out to be a disaster, the company took a hit that would have destroyed any other, but it survived barely.\n\nNow with the pandemic destroying the airline industry, Boeing teetered on the brink. Only a major government bailout would save them. So, Liz couldn't call her notes without the risk of forcing Boeing into bankruptcy and thereby destroying the value of her stock. It was a classic catch 22. There was a reason they called them junk bonds. \n\nLittle Bob was desperate to gain control of the Loftis & Bishop real estate empire and all the money his Russian friends could launder through it. But Beth was playing for something far more valuable than real estate or money. She wanted her family back. She had lost it for no reason that she could fathom, and now she was determined to get it back no matter the cost.\n\nShe still had her interest in the real estate. But she only had fourteen percent of Loftis & Bishop limited. That was all her father had left her. The Loftis & Bishop corporate partnership was now the chief marital asset. So, she needed to increase her share by obtaining a favorable divorce settlement. \n\nThe remaining property was their joint interest in their two homes: their marital residence in Carroll Gardens Brooklyn and her parent's house in Seattle. And her father had left that specifically to Jason, who loved to sit on the deck and watch the lake. \n\nThey had spent last summer and the Christmas holidays with the children in Seattle. After Christmas, she had left for France to work on the Claremont Pharmaceutical reverse merger with its European subsidiary. It was a brilliant deal that she had thought up to avoid any opioid liabilities in the United States. \n\nThere was always a risk that Jason would act while she was out of the country. But she had planned to fly home at the first indication he was up to something. She hadn't expected a virus outbreak to make that nearly impossible. Now, Jason had a jump on her, and she needed to catch up. \n\nIf Jason got what he wanted, she would have a minority interest in the company which he could then render worthless and a townhouse she couldn't sell without his consent probably until the kids were adults. Jason would put her on an allowance and dole out just enough to pay the kids expenses. She would be forced to live on the hundred and sixty thousand dollars a year salary she made as a junior partner. That was unacceptable to her.\n\nBeth had been her Dad's little princess. She had led an extraordinarily privileged life. The only dark cloud had been the death of her mother when Beth was twelve. Mom had been the grounding influence in her daughter's life. \n\nSusan Loftis was a woman of humble origins. She didn't take kindly to her husband, spoiling the children. Her Mom made Liz work for what she got. Her mother's untimely death accelerated the lavish lifestyle that Big Bob heaped on his children and, in particular, his beautiful daughter.\n\nBeth was one of those girls that people normally describe as the girl next door. She was cute as well as pretty. She had that innocent and wholesome appearance that made every male past puberty want to protect her. They also wanted so much more from her sexually, but always seemed afraid to ask. They shouldn't have been. Liz learned about sex from an early age and discovered she liked it.\n\nLiz arrived in New York from the West Coast as neither innocent, nor a virgin. The sexual openness and permissiveness of twenty-first-century New York suited her. The fact that her looks misled people about her sexual proclivities was an advantage that she took full benefit of. Beth was used to getting everything she wanted, and she wanted just about everything.\n\nJason Bishop was an unexpected development. Elizabeth Loftis, pampered rich girl, had been with a lot of interchangeable men. But she had never found any that were worth caring about. When Jay stumbled into her life, she recognized that he was something different. \n\nIf she had to describe his one predominant characteristic, she would have said that he was a real person. He wasn't trying to be somebody else or live by anyone else's standards. There was a short courtship, but a long honeymoon. \n\nBeth knew that she had found the love of her life; however, that couldn't change her lifestyle. She was a rich woman, and money has its privileges. Women of her class always took lovers. \n\nOf course, not at first, she waited until the kids were in school. Initially, she only played with a client or two. Maybe the odd fellow attorney in a pinch. It was not until Leroy Grey that her husband caught on, but in a way that was inevitable and precisely the point. ",
        "Mr. Grey was a six-foot nine-inch power forward who began his career in his home town of Detroit with the Pistons. He was soon traded to the Lakers and then Golden State, He ended up at the Brooklyn Nets. Leroy was a bad boy whose antics off the court overshadowed his twenty-point a game average. Still, in Brooklyn, he was a star and a favorite of the New York tabloids. \n\nLeroy's taste in women ran to cute, white, and married and not necessarily in that order. His bad-boy antics led to the need for a substantial legal representation. \n\nEnter Tate and McKenzie and their top Junior Partner Elizabeth Loftis (aka Beth Bishop.) She had all the requisites Leroy sought plus a place in the society pages. It was a new experience for Leroy and an ego boost for the thirty-five-year-old Beth, snagging a twenty-something star athlete. \n\nUnfortunately, it was a relationship played out for the world to see in the pages of the New York Post. However much, Liz enjoyed the notoriety; the effect on her marriage was as harsh as it was unexpected. After all, it was only a bit of fun. \n\nIt wasn't intended to be a serious relationship. For God's sake she was a married woman with children, and he made his living as a ballplayer. Still, JB took his humiliation seriously. She expected a clash or two. A few harsh words while the thing played out and then a reconciliation. She didn't expect to be locked out of her own bedroom permanently.\n\nLiz had spent two years trying to make amends and reconcile. But her hardheaded Irishman of a husband was having none of it. Leroy had long since moved on to another relationship, while Liz was stuck in purgatory with no clear path to redemption. She had to move out of the Carol Garden's townhouse to a hotel room. She was allowed back only when the kids were home from boarding school, or Jason was out of town.\n\nThe Kids school was another point of contention. Jason thought that sending them away to school was wrong. Beth saw it as giving them every advantage. Taking them to France was her idea. She didn't expect the schools to close and to be stuck with three pre-teens in a Paris hotel room. Now to add to her misery, Jason was planning the divorce that she had so skillfully blocked to date. She needed to get to New York and now.\n\n*****\n\nIt was the cold-hearted breach of trust that had rocked him to his core. It's one thing to discover your wife has been lured into infidelity by some high-flying Romeo. It's another thing to discover that she had systematically and with malice aforethought done everything she could do to disrespect and ruin him. \n\nBishop wouldn't do that to his worst enemy, let alone somebody he had promised to love for a lifetime. But there it was. He saw it every time he looked at the irrefutable evidence. \n\nHe wondered what the way forward would look like. There would be no trusting any female ever. That was for sure. He also had some plans for the rest of her family. It wouldn't be pretty.\n\nJason Bishop was a complicated man. He valued reasonableness and common sense above all things. But his ethics were situational. Perhaps it was his intense rationality that made him the way he was. He didn't make judgments unless he had analyzed the situation from all sides, and he truly believed in the logic of his conclusions. So more often than not, he swam upstream when it came to the usual rules of profit above all else. \n\nThat also applied in cases where there was no guiding precedent. Some of the things he'd done would be wrong through a conventional lens. But in actuality, there was no plausible reason why he shouldn't have done them. They hurt nobody, and they benefitted his client. It was the reason why Big Bob respected him so highly. \n\nJason Bishop was hard to beat because he understood every angle. Consequently, once his eyes were opened, he had seen through Elizabeth to the bottom of her narcissistic soul. He would have merely hated her. But now, the fact that Bishop had remained her husband and lover for all those years made him question his own judgment. How had he not seen through Liz from the start??!! \n\nThat was the thought that Bishop was wrestling with as he slid open the door to his roomette. He did it as quietly as he could because he didn't want to deal with the woman across the aisle. She raised far too many troubling concerns. \n\nFirst and foremost, he was drawn to her like he had never been attracted to any woman before. She was the whole package, beautiful face, hot body, and she just radiated carnal delight. The problem was that, even with all the gossip he had actually been faithful to Elizabeth the entire marriage. \n\nThere were some near misses. Women threw themselves at him. But Bishop knew that he would be condemned to a lifetime of perdition if he stepped over that invisible line. That wasn't because trite morality was guiding him. It was because Jason Bishop knew it was the wrong thing to do. \n\nHis entire self-concept was built on a personal code that demanded that he do the right thing. And so, he wasn't about to spend a lifetime of self-loathing because he gave in to weakness. That simply wasn't who he was. Then this new woman came along. \n\nThe obvious incongruity between the character she was playing and the person she actually was disturbed him. Bishop had looked her up on the internet the minute he had gotten back in the compartment. The archived clips of her on the local Chicago station were stimulating, to say the least. \n\nShe was clearly up there to be a sexy showpiece. She had a body to die for. The people at Fox knew it, and the camera angles were aimed at showing it off. But her morning segments were more like a classroom than a stripper's pole. Her voice was controlled. Her face and eyes were clever and focused. It was like she was a real meteorologist. This was a dauntingly intelligent woman. \n\nThe moment he slid the door open, she materialized in front of him. It was obvious she had been waiting to ambush him. He was disturbed by how pleased he was to see her. She looked gorgeous. \n\nHe gave her a disgusted look, and she came right back with a happy puppy smile. But then, she must have read his face because she said, \"Want to talk about it?\" Her interest in him and her compassion was genuine. He needed somebody to unburden himself to. Why not her?\n\n*****\n\nThe Empire Builder was short staffed due to the emergency. Hence, there was only one quick breakfast serving. The dining car was full when they got there. So, they had to sit side-by-side rather than across from each other. \n\nIt was like putting two magnets on the same bench. The sexual tension was off the charts. They were seated across from an old couple who must have gotten on in North Dakota because Ellie'd never met anybody who actually called himself Zeke. They were visiting a son in Spokane.\n\nThe two old folks were both typical god-fearing denizens of a State whose entire population would fit comfortably in a couple of big football stadiums. They were mid-sixties, kindly, and they immediately assumed that Bishop, or \"John,\" as she called him, and Ellie were married. \n\nEllie had to admit that they were an impressive couple. John wasn't a movie star. But he radiated power and control. And she supposed she could play a movie star on TV. \n\nZeke started right in with, \"We're from Devils Lake. Where're you-all from?\" John said quickly before she could open her mouth, \"Chicago.\" That's funny. Last night it was Durham. \n\nHe nudged her with his leg. He was telling her to regale these yokels with a few stories about the Windy City. His nudge gave both of them an electric shock. He crept farther toward the aisle, and she plastered herself against the wall as she said, \"Have you been there?\"\n\nIda said, \"Gosh, no! That's too much city for us. But we HAVE been to Winnipeg.\" To her credit, Ellie didn't laugh out loud. She said, \"Chicago's a beautiful city with the lake at your feet and the big impressive buildings. We have some really excellent museums and sports year-round.\" \n\nIda said proudly, \"We're the perch capital of the world, and our ice fishing is legendary.\" Zeke was nodding enthusiastically. Ellie said, \"Well, that sounds pleasant.\" It sounded hideous. But she had to be polite. \n\nThen without thinking, she added, \"Jason and I ought to visit there some time.\" He gave a start and almost fell out of the booth. \n\nZeke looked puzzled and said, \"I thought your name was John?\" Oh shit!! But Jason was a cool customer. He said, \"That's my middle name. Ellie thinks it sounds more dignified.\" Zeke looked approving as he said, \"Having one of Jesus follower's as a name is always preferable to a heathen name like Jason.\" \n\nThe conversation went on along those lines for an excruciating period. Apparently, there isn't much to do besides fish for perch in Devils Lake, because the two old people talked-on-and-on. At the end of an hour, Ellie knew more about their internecine family politics than she wanted to, and Jason was bouncing up and down in his seat in frustration. \n\nThat was a new wrinkle. Jason had always seemed so controlled. But of course, Ellie had just shit in her own Wheaties. At least she could get down to the task of interviewing him sooner-than-later. \n\nEllie offered Jason a smile and a sigh of relief as Zeke and Ida wandered off to bore somebody else to death. Jason said curtly, \"Observation car,\" got up without any further word, and stalked off toward the front of the train where the observation car was located. \n\nThe observation deck was necessarily on the second level of the train, above a walk-in caf\u00e9. When Ellie got up there, Jason was seated in one of the comfortable outward facing seats staring out at the Montana scenery. He had made sure there was plenty of space around them, and it wasn't because he was social distancing. \n\nEllie slid into the chair next to him. He turned and said, stressed, \"How long have you known. This is important.\"\n\nShe gave him her most disarming smile and said, \"It was impossible to miss. I really AM on this train to do a simple travel piece. I'm a reporter, and I was browsing the gossip sites just to keep my feelers out. It's something we newsies have to do. Your story was on the front page, we'd just met, so your face was fresh in my mind.\" \n\nHe looked relieved and said, \"Then it was just coincidence, right?\" She nodded and said, \"Pure chance.\" He said, \"I'll tell you my entire story. I've wanted to tell somebody anyhow. But you have to promise to keep it confidential until we get to Seattle.\" \n\nEllie said matter-of-fact, \"I'm going to Portland.\" He smiled and said, \"Okay, Portland. But you get the point. What I'm about to tell you could get both of us killed.\" \n\nHe then proceeded to recount a tale of ruthlessness, skullduggery, and cold-hearted betrayal that hadn't been equaled since the court of Tiberius. His wife's name was Elizabeth. She was one of the Seattle Loftis's. Her father was Big Bob, who was a major supplier of parts for Boeing. There was a brother called Little Bob who, besides being a shiftless and amoral little shit, was a world-class snake in the grass. \n\nThe two children who were born of the manor had done absolutely zero to keep the family's fortune afloat. While Jason, the son-in-law, had been wheeling and dealing in a way that multiplied Big Bob's wealth by billions. The problem was that Big Bob was dead, leaving Bishop in control of the company. \n\nMost people would have been happy to live off the hard work of somebody else. But the two children had embarked on a campaign of dirty dealing and backstabbing along with the Russian mob, aimed at taking control of Loftis-Bishop's assets. At the same time, Bishop's whore wife was hell-bent in rubbing his nose in her many infidelities.\n\nThis was all aided by the shadowy presence of the Bratva. Fortunately for Bishop, he had grown up with a group of Italian-Americans who had their own little organization ending in an \"a.\" So, the battle lines were drawn between two mobs and success hinged on Bishop getting to Seattle alive.\n\nOnce he got there, he could legally divest himself of a deceitful spouse, who by any reasonable measure was the Queen of Slutvania, and move ahead with his life. That was the situation as it stood right this very second. \n\nBut of course, there were a bunch of guys with broken noses and big guns who were turning over every mode of transportation between the Big Apple and the coast, with kidnapping, or worse, in mind. So, as the scenery of Glacier National Park passed by outside the window -- Bishop was getting very nervous.\n\nHe said, \"At first, I thought that a train was the last place they would look for me, especially in the middle of a pandemic. But those two old folks back in the dining car reminded me that the people who still want to go somewhere just do it. And anybody can get on this thing, anywhere, even Devil's Lake. \n\nIf I'd flown, I would have been at SeaTac by now. So, I'm guessing that the Russians are prioritizing busses and trains over air travel.\"\n\nBishop looked at Ellie, and she was looking back at him with concern. She said, \"You're really in deep shit, aren't you?\" He gave her a sardonic laugh and said, \"No, duh!!! And if they DO catch up to me, they aren't going to discriminate between me and any witnesses.\" \n\nEllie Andrews prided herself on her toughness. She excelled in life because she faced things head-on. So, rather than excusing herself to hide out in her roomette for the rest of the trip, she gazed off at the gorgeous panoply of the passing Rockies and said decisively, \"You've gotta take me with you. I've gotta get this story!!\" \n\nBishop smiled and said, \"So no sister in Portland?\" She looked at him like he was an idiot and said dismissively, \"Never was.\" He stared intently into her unwavering green eyes and saw a strong woman. He said, \"Okay, it's a deal. But I'm dumping you the minute I hear you whine.\" \n\nShe said confidently, \"You won't hear me whine unless we move our relationship up a notch. I make a lot of noise during sex.\" Bishop nearly fell out of his chair. He couldn't help comparing this beautiful, and daring woman with the slut he was fleeing from, even if they DID seem to have the same general attitude about fucking. \n\nThe day passed without excitement if you didn't count the slowly building fire in both of their loins. They sat in the observation car and talked about little things in their lives. Bishop told her about his growing up in a part of Brooklyn where the weak were killed and eaten. It was how he picked up his finely honed survival skills. \n\nShe told him about growing up in a privileged part of Winnetka. She added ironically, \"That's where I discovered how trivial most of life is. It was a survival skill of sorts.\" \n\nShe added impassively, \"I knew that I was smarter than most of my peers. But you had to keep that hidden unless you wanted to be torn apart by the savage pack of bitches I was forced to run with. I didn't worry about attracting boys. All I worried about was my batting average, which I might add was .422 throughout high school. Point being, I've just drifted my entire life. You're a man who gets things done. This is a chance to live a little.\" \n\n***** \n\nIt was after nine o'clock when the Empire Builder pulled into Whitefish Montana. The sun had set a couple of hours earlier, but the station itself was brightly lit, and the platform was a beehive of activity. \n\nEllie was surprised. They'd been traveling through rough mountain terrain all afternoon, and suddenly, there was this little town with a big depot attached. Even stranger, the depot was a colossal Tudor monstrosity more appropriate to Stratford on Avon than western Montana. \n\nEllie's window was twelve feet about the platform. So, she was looking down on the people waiting to board. There was the usual collection of local residents, no doubt visiting relatives up the line toward Seattle. But what caught her eye were the two obviously Eastern European travelers who looked like extras from a 1960s James Bond movie. \n\nEllie took another closer look and said under her breath, \"This is it!!\" She grabbed her things, stuffed them in her backpack, and hastily slid her door open. Bishop was sitting in his roomette with his door already open. He looked at her inquiringly, and she said, \"We have to get off this train NOW!!\" \n\nBishop didn't hesitate. His survival skills were too perfected to NOT understand what Ellie was saying. He grabbed a little satchel, stuffed his electronic gear into it and said, \"Where are they boarding?\" Ellie said, \"In the coach section, four cars further up the train,\" and she nodded toward the front. \n\nBishop moved quickly but calmly toward the stairs at the rear of the car. Ellie followed, and they stepped onto the platform as the two thugs were stepping onto the train. Bishop walked rapidly, but in a way that wouldn't attract attention, down the little cement walkway between the platform and the station. They entered through the grey double doors. \n\nInside the station was large and well lit. It felt like they'd fallen through a time-warp into the 1950s. The floor was green checkerboard tile, and the seating was uncomfortable slatted benches. There was a large stuffed mountain goat in the middle of the room, which was either the mascot for the Great Northern Railway or one of the local pets. More importantly, though, there was a Hertz rental counter. \n\nBishop turned to her. He looked hesitant for the first time since she'd met him. He said, \"Do you have a credit card? They're going to be tracking mine.\" She said. \"Sure,\" and produced a Visa. He said, \"Then can you rent us a car?\" Ellie smiled at the irony that a multi-billionaire was depending on her to finance their escape. He added sheepishly, \"I can pay you back when I get to Seattle.\" \n\nThe ancient cowboy at the rental desk had a Hertz badge on his checkered shirt. No black Hertz polos were in sight. He checked her out with lust in his eyes. There were probably ten women in the State of Montana who looked like Ellie Andrews. Finally, he said, \"What can I do-you-for little Missy.\" \n\nNormally that would have gotten him a smart-ass remark... at a minimum. But Ellie was tired. So, she gave him an irresistible smile and said, \"I need a one-way rental to Seattle.\" He looked like he didn't want to do it. Since he knew he'd never see the car again. But Hertz WAS a national chain. So, he pecked around in the computer for a couple of minutes and said, \"Nothing tonight. But I have one coming in tomorrow morning.\" \n\nEllie said, \"Sold and slapped her Visa down on the counter. There was more pecking around, and the printer spit out a rental agreement. The ranch-hand-who-was-passing-as-a-Hertz employee said, \"Yep - It's due in tomorrow at nine-o'clock AM.\" \n\nShe gave him an alluring glance and said, \"Are there any places to stay until then?\" He practically melted right in front of her. He was about to offer her the prospect of staying with him when he realized that she was with Bishop and he was huge. He was standing ten feet behind her, trying to look unobtrusive, and not succeeding. \n\nThe cowboy said, \"The Firebrand is right over there.\" He pointed out the front of the station across a little park. \"That's where all the tourists stay.\" The word tourist was said with a bad taste in his mouth. Ellie gave him another one of her hot smiles and a sway of her hips as she walked over to Bishop. She said, \"All set. But we're going to have to stay here tonight. The car won't be ready until 9:00.\" \n\n*****\n\nBishop hated the fact that he needed Ellie to negotiate for the two of them until he could get to his people. But that was the way it was, and Bishop was an eminently practical man. \n\nHe was watching her wrap the old fellow manning the Hertz counter around her little finger. He couldn't take his eyes off her round hips as they shifted impatiently back and forth while she did it. Bent forward the way she was, her shapely buns and superb legs were giving him a hard-on. ",
        "She was wearing a peasant blouse over her tight pair of jeans, and he was sure she was giving the counterman a treat as she leaned over the counter. \n\nHe appreciated the fact that Ellie was willing to do that. Bishop knew she was using her blazing sexuality to get him out of a jam. A really dandy shot down the front of her blouse would make the guy a lot more amenable to her wishes. But he still resented the fact that she was doing it. \n\nShe finally finished conducting her business and turned back toward Bishop. However, not before giving the counterman the sort of hot look that could be life threatening for a guy his age. She walked merrily up to him and said, \"We can't get the car until morning. I had to give him a little peek at the goods to even get that out of him.\" \n\nSurprisingly, Bishop found himself actually feeling jealous. So, he said only half-jokingly, \"Maybe we'd have gotten forty cars if you'd showed him your tits.\" Ellie laughed and said, \"I'll keep that in mind the next time we need forty cars.\"\n\nShe said, \"We gotta stay here tonight, and I already have a place lined up.\" They walked out of the station through a little park and up a well-lit main street. The building they were headed toward might have been a bank in an earlier incarnation. Now it was some sort of rustic boutique hotel that reeked of rich tourist trap. \n\nThe lobby was more Jackson Hole than rural Montana. The girl on duty looked like she spent her days milking cows. \"Sturdy\" was the word that came to mind. Once she had gone through the usual homespun greeting, she found a room with a king bed and an excellent mountain view. \n\nBishop said nervously, \"Do you have any twins?\" She looked confused. These two were obviously married, and nobody under the age of 80 ever slept in a twin bed. She said, \"I'm sorry, but all we have are kings. But you'll love the bed. It has memory foam.\" \n\nEllie said decisively, \"We'll take it,\" and produced her Visa. She added unconcerned about the potential problem of the sleeping arrangements, \"When's breakfast, we're getting an early start?\" \n\nApparently, Whitefish Montana was some kind of wilderness destination for the rich. The room was pricey, but it was worth the cost. All the usual upscale amenities were there, including a big king bed and a couch, along with an incredible view of the mountains surrounding the town. \n\nBishop said, resignedly, \"I'll sleep on the couch.\" Ellie said, \"Nonsense!! We can both sleep in the same bed.\" Then she added teasingly, \"I won't molest you too much in your sleep.\" \n\nBishop actually blushed. Ellie thought to herself, \"This guy is really a very simple and modest man, no matter what the tabloids say about him.\" She fought back the urge to have feelings for him. The man was a currently married billionaire. She knew that falling in love with him could never lead to a happy ending.\n\nBishop still looked hesitant. So, Ellie walked to the closet and brought out the two spare pillows. There are always extra pillows in rooms like that. She walked vigorously over to the bed and arranged them down the middle, leaving a decent amount of sleeping space on each side. \n\nShe said, \"THERE, these are the walls of Jericho. They'll keep both of us virtuous tonight.\" Bishop laughed out loud and added, \"And they won't come tumbling down until I divest myself of a malignant growth named Elizabeth.\"\n\nThey took turns getting ready for bed, just as they had the night before. This time Ellie went first. There was the sound of a shower, and then she emerged in one of those plush white hotel robes drying her luxurious copper hair with a towel. It was clear that there was nothing but Ellie underneath. \n\nShe said, oozing contentment, \"That felt good.\" She added informatively, \"All the stuff you'll need is in there already.\" Then she sat down and began to comb out her long hair. \n\nHer substantial breasts rose inside the robe as she reached back to gather her hair. The top slipped open a bit to reveal an outstanding cleavage. Bishop bolted for the bathroom and slammed the door. Ellie smiled a secret smile.\n\nIt was the middle of the night. Bishop woke from troubled dreams to find that the walls of Jericho had been breached. \n\nEllie was wearing the same yellow spaghetti top and running shorts combination that she'd slept in the night before. He was just in a pair of sweat pants. The pillows were nowhere to be seen, and he was now lying spooned against his bedmate's back, holding a firm round tit, which seemed to have escaped its flimsy confinement. \n\nThe nipple was rock hard. She was apparently still asleep. But she was also quietly moaning and gasping. Even worse, Bishop's giant hard-on was jammed between her magnificent round buns, and they were both subconsciously moving together in the age-old dance of love. \n\nHe was about to take his hand off her boob when she spun inside his arms and fastened a steamy open mouth kiss on him, moaning with need as she did it. Bishop responded with enthusiasm. Then his sanity kicked in. He spun away, jumped out of the bed and stood there chest heaving. Ellie's eyes were staring at him, wild with passion. She gasped, \"What's wrong? Don't you want to fuck me?!! \n\nBishop said in a strained voice, \"I'm dying to make love to you - not fuck you. But this isn't the time or place. The situation is still way too complicated. I am ready to talk about it once we get this all behind us. But now is not the time.\"\n\nHe added, \"We're talking about billions here. The people who are looking for me are killers, and they have infinite resources. I can't let myself be distracted by getting involved with you.\" \n\nShe looked hurt. So, he quickly said, \"That's no reflection on you or our relationship. You are a beautiful woman, and your help's made all the difference in the world. But I can't start thinking about what that means to me right now, or I'll take my eye off the ball.\"\n\nShe looked at him with dawning recognition and said, \"You've never been unfaithful to her, have you?!!\" Bishop gave her an uncomfortable smile and said. \"Never...\" Then he added musing, \"I didn't even know you three days ago, and now we're traveling around like we're married. I've never connected with a woman like that before. So, it must mean something.\"\n\nShe smiled ruefully and said, \"Well, you have no idea what you missed out on tonight. \n\n*****\n\nThis was not the New York that Elizabeth Bishop had left in January. She had been fortunate to get on the Air France Jet to Kennedy International. It was crowded with returning Americans. The airport was a nightmare as homeland security agents were attempting to take every disembarking passenger's temperature. It was almost as if those fools were trying to make sure that anyone who wasn't infected would be.\n\nFinally, she got out of the airport and into a cab where the taxi driver asked her for her destination and then went silent. The plexiglass divider never opened, and the driver never left his position behind the wheel. The monitor at the back was playing and replaying the health department instructions on social distancing and the requirements for staying inside. When they arrived at her place, she had to run her credit card through the reader for the fare, and the driver popped the trunk and sat there. \n\nHer home in Carroll Gardens was on a street that was eerily silent. The house was dark as she entered and had the musty smell of a long empty building. It was just 2:00 p.m. She ordered pizza for dinner to be delivered late in the evening. She had assumed correctly that the delivery of New York's favorite food would go on despite the city being locked down. \n\nThen she called her office. The main number had a message saying the office was closed due to the virus outbreak. It gave an emergency number, which she ignored. She hung up and called the direct line of the Partner who was in charge of matrimonial affairs. His secretary answered the phone.\n\nBeth smiled to herself. The office was officially closed, but it was still functioning if only on a reduced basis.\n\n\"Janet, it's Beth Bishop. I need to speak to Jeff right away.\"\n\n\"No problem, Ms. Bishop, I'll put you right through.\"\n\n\"Hi, Liz. How's France in these interesting times?\" Jeffrey Steingold asked.\n\n\"Jeff, I'm in New York, Brooklyn actually. I need to meet with you ASAP. My husband's taken off, and I believe he's on his way to Seattle to divorce me.\"\n\n\"You're in New York! Are you crazy this is a plague town? \"\n\n\"This is important. If he can file in Washington State first, he will have a significant advantage in the divorce settlement.\"\n\n\"Really, It's pretty much fifty-fifty there, not much different than here.\"\n\n\"That's the problem. I need much better than an even split. I need the controlling interest.\"\n\nJeffrey suppressed a sigh. \"Why are clients so greedy,\" he thought. But he said, \"you better come in, and I will see what we can do on a rush basis.\"\n\nShe was sitting in Jeffrey's plush Manhattan offices by a quarter to three. By normal standards, the Firm was quiet, but they were not closed, and there were significant numbers of staff present. They weren't circulating, and they were keeping a personal distance as best they could. \n\nHowever, this was in sharp contrast to the outer city. That area was amazingly empty. The ride service from Brooklyn took barely twenty minutes, amazing!\n\n\"Look,\" Jeffrey began \"A case isn't commenced in New York until you have the defendant served. Out of state service will take a judge's approval. That will take some doing in the current circumstances.\"\n\n\"I take it he will not have the same problem?\"\n\n\"No, I believe all your husband will need to do is file and mail you a copy under Washington law, but he can't complete it until he proves you are properly aware of the action. He'll follow up the mailing by having you served by a P.I. or the Sherriff at his first opportunity. Probably not right away because he thinks you're in France.\"\n\n\"So, what we need is a willing Judge,\" Beth said.\n\n\"And a good idea of his exact location.\"\n\nBeth took a piece of paper from the desk and wrote a name and passed it to Jeff.\n\n\"Why him?\" Jeff asked.\n\n\"Certain parties have a hook in him.\"\n\nJeff nodded. It all made sense now. His Junior partner had big connections, and she had a judge in her pocket. Her husband was seeking not just a more favorable distribution on the West Coast. He needed to get beyond the immediate influence of the Russian Mob.\n\nJeff said, \"You still need your husband's location.\"\n\n\"I hear things are locked down in Seattle as well as here. There will be only a few places he could go,\" she said and paused before she added, \"that is if he reaches Seattle at all.\"\n\nThe way she said the last part Jeff Steingold knew what she meant, and he wished he had followed the governor's instructions and stayed home.\n\n*****\n\nBishop woke with an abundance of red curls tickling his nose, and a firm boob pressed against him. Ellie was sleeping, with her head on his chest body pressed against him. He had one arm around her, and the light of a gorgeous mountain spring day was peeping through the crack in the blackout curtains of the room. \n\nShe was stirring, just waking up, and the feeling of her lush, hard body moving against him gave him a case of morning wood that was more like a sequoia. Then he discovered that he was experiencing something he'd never felt before. He was at peace. \n\nBishop's life had always been a lonely struggle, made even more so by his wife and her family. This woman was a friend. She looked out for him. She was gorgeous, without all the sophisticated tricks that Elizabeth used. But more importantly, she was a competent and stalwart ally, a true companion in life. \n\nIt wasn't like Bishop feared anything that came his way. He had been dealing successfully with life's challenges since he had been nine. But this new woman gave him a comfortable sense of contentment and harmony. It was like he didn't have to impress her or fight for her. She was just there. They fit together, and that synergy would overcome anything that came their way.\n\nEllie was thinking the same thing as she lay with her head on Bishop's chest. This man could deal with any threat or hardship. She felt protected and secure. She wanted to be his. But she knew that would never happen. He was such a long way above her in any aspect of life with his wealth and style. So, instead, she dedicated herself, in her own mind, to helping him solve his current problems.\n\nShe noticed that his most obvious problem was sticking up right next to her hand. It looked like the Sears tower and she wanted it in her. But she understood why he didn't want that to happen. So instead, she seized its hot length and began a pumping motion. \n\nHe actually laughed and said fondly, \"You never give up, do you.\" She gave him a kittenish smile and said, \"Like that??\" He said, \"I love it. But I have to pee.\" It was only Bishop's iron will that permitted him to get off that bed and walk into the bathroom.\n\nThey were dressed in travel clothes as they ate the standard hotel breakfast, scrambled eggs in an unnatural shade of yellow, toast, and a couple of strips of burned bacon. Ellie in jeans and a blue chambray top and Bishop in an Orvis expedition shirt and jeans. \n\nShe said, \"Wait in the lobby with my backpack and your gear while I get the car.\" Bishop nodded. It was wise for him to stay undercover, and none of the people chasing him knew who Ellie was. He marveled at how street smart she was.\n\nEllie had been gone twenty minutes when she came roaring up in a Ford Focus, It wasn't the kind of car either one of them would have hired. But beggars can't be choosers when it comes to one-way rentals. She said agitated, \"Get in. There are a couple of them asking around the station. They must have figured out where you got off.\" \n\nBishop hastily threw the bags in the back of the little SUV and ducked down in the passenger seat. As she drove south on State Route-23, Ellie saw the two goons strolling up the street in her rearview mirror. The two of them were headed for the Hotel. They probably figured that Bishop had gone to ground there.\n\nShe handed Bishop her smartphone and said, \"Use the Waze app to plot us a course to Seattle.\" He hunted around in it and finally said, bewildered, I don't know how to do that.\" Ellie sighed and pulled over to the side of the road. They traded places, and she got the map program fired up. \n\nThey were headed in the right direction, but there were two routes. One of them was via US 90, the interstate highway. The other was a more backwoods State route. She said, \"If they're looking for you by car, then the long route through the mountains is probably better.\" Jason agreed, \"Yeah, let's do that.\" He thought to himself, \"What a woman!! Beautiful, sexy, and with the survival skills of a timber wolf.\"\n\nUS Route-2 took off into the wilds of the Rockies at a little place called Kalispell in Montana. Actually, it was the biggest place they encountered for the next four hours as they wove their away along two-lane blacktop through towns like Libby, Leona, and across the broad Kootenay River at Bonner's Ferry. \n\nThe two of them were both city folk, and the looming mountains surrounding them were giving them a bad case of claustrophobia. The good news was that they only encountered the occasional car, and none of them contained anything but potato farmers.\n\nThey began their descent out of the mountains into Spokane, Washington, which was the first significant city they had encountered on the trip. In fact, it was big enough that they had to navigate traffic as they worked their way downtown and onto I-90 westbound. \n\nThey were going to stop to get something to eat in Spokane itself, as it was close to one o'clock. But the city was confusing enough that they kept on going until they got to a stop south of the airport. \n\nThere was very little talk all the way through the mountains. Both of them were wrapped in their heads, trying to make sense out of the bizarre situation of being locked in a small car with a person who was both a total stranger and a potential love interest.\n\nIt wasn't as hard for Ellie as it was for Bishop. She hadn't been seriously betrayed by the person she loved. She had never had much respect for King. And she knew in her heart that it wasn't Bishop's money and power that attracted her. Instead, she could sense the person underneath the dangerous demeanor, and she found him absolutely fascinating. \n\nEllie was sure of nothing else about Bishop except that he was basically a decent man, and finding one of those was like discovering a unicorn.\n\nBishop was the nature-nurture paradox, a self-effacing and humble soul, forced by circumstance into the mindset and behavior of a Great White Shark. He had no reason to trust anybody, least of all a woman. But he had treated her with kindness and respect. \n\nLast night, he didn't have to act like she was anything but a disposable hoo-ha. He could have fucked her and gone off on his merry way today without any strings. Most men would have. But he had actually wrestled himself out of the situation, and she could see that it had cost him a lot. That was a novel experience for Ellie, and as a result, she was willing to walk through the fires of hell with this man. \n\nBishop, on the other hand, was confused. Every beautiful woman he had ever known, starting with his whore wife, was a self-centered narcissist who would sell him out in a New York second, if it benefitted them. Ellie had all of the, beauty, brains, spirit, and mental toughness. But with her, Bishop innately trusted that she had his back and it was important to her to do it.\n\nAdmittedly, he was a story. But she had gone the extra mile when she stepped off that train with him. And by doing that, she had unhesitatingly cut her line of communication with her media outlet. \n\nNow she was accompanying him in a car, in the middle of a godforsaken mountain wilderness, all the way to Seattle. And there isn't a lot of internet reception at fourteen-thousand feet in the Rockies. That simple truth alone convinced him that she had his best interest at heart. \n\nSadly, Bishop had never felt that way about any other human being, let alone somebody as gorgeous as Ellie Andrews. She was clearly the hottest woman he had ever met. She was utterly lost in passion last night. But at the same time, she was self-controlled and even reasonable when he chose to put a stop to things. Every other female he'd ever known would have had a nuclear meltdown if he'd left them hanging like that. \n\nSo, here he was fleeing for his life, in jeopardy of losing his business to his slimy relatives and married to a high-class whore, and yet he was falling deeply in love with a total stranger. Bishop knew he was smarter than that. But the heart knows what the heart wants. He had a lot of thinking to do. \n\n*****\n\nIt was late afternoon as the two of them came down out of the Cascade mountains and entered the suburbs of Seattle beneath the looming presence of the spectacular Mount Rainier. \n\n\"Where to?\" Ellie, who was driving, asked.\n\n\"Stay on Interstate 90 West until we reach Mercer Island,\" Jason replied. \"Big Bob built his home on Lake Washington.\"\n\nThey followed the interstate through Bellevue, headed toward the center of that city. Ellie had the feeling they were being followed, but she couldn't make out any car tailing them.\n\n\"I'll drop you off and get a hotel room,\" she said.\n\n\"Not likely in the middle of a pandemic,\" he said. \"You'll stay with me. The house has six bedrooms.\"\n\n\"Fine,\" she said, \"giving him a smile, but we probably only need one.\"\n\nShe took his hand, and as she did, she glanced in the rear-view mirror. \"How long had that black SUV been there,\" she thought. \"Had she seen it before?\"",
        "Mercer Island was extensively developed, but the Loftis house was on a secluded site on the Lake. The house had a high fence preventing entrance from the street and a hedge for privacy. Jason typed in the code to open the electric gate, and they turned into the drive. As they did, two men armed with automatic rifles jumped out from behind the hedge.\n\nEllie slammed on the brakes and tried to throw the car into reverse, but just as she did, there was the flash of lights, and the wail of sirens four police cars drove past their Ford, and the gunman decided to run. \n\n\"Holy shit,\" Ellie exclaimed.\n\nA big, black SUV pulled up directly behind their small Ford, and Two women dressed entirely in black got out they approached on opposite sides of the Ford. As they did, the uniformed police were jumping out of their patrol cars and chasing down the gunmen.\n\nThe woman on the driver's side tapped on Ellie's window.\n\n\"FBI,\" the woman began, \"I'm special agent Crawford, and agent Sims and I have a warrant to search this vehicle and its occupants.\"\n\nWith that, Ellie and Jason were removed from their rental. They were patted down for weapons. Agent Sims searched the car and agent Crawford had Ellie and Jason empty the contents of their pockets onto the hood. \n\nAgent Sims recovered an envelope from Jason's luggage. This was apparently what they were looking for.\n\n\"Mr. Bishop, would you mind opening this envelope?\" Agent Crawford asked.\n\n\"Not at all,\" Jason replied.\n\nJason unsealed the envelope that seemed to be almost bursting at the seams with something, and he then handed it to agent Crawford without removing the convents. The FBI agents removed what appeared to be a bundle of papers and began inspecting them. \n\nThe police had apprehended the two big thugs. Ellie realized that they were the same men she had seen get on the train in Whitefish. They were unceremoniously shoved into the back of separate patrol cars. \n\nAgent Sims walked over to a uniformed officer, and Elie could hear the agent thanking them for their assistance. They shook hands, and Sims came back to speak to agent Crawford who didn't look happy.\n\n\"What's going down here?\" Ellie whispered to Jason.\n\nHe gave her a smile and said, \"Looks like the FBI just saved our lives with an assist from the Seattle PD.\"\n\n\"But what's in the envelope?\"\n\n\"Nothing we need to be afraid of,\" but as Jason said this, a small man riding an e-bike appeared in the drive. \n\nAt the little man's appearance, Jason's whole attitude shifted from confident to worried. The FBI and police paid the new arrival no attention beyond a Police officer walking over to the man to casually ask him his business.\n\nCrawford turned from her discussion with Sims to confront Jason.\n\n\"Mr. Bishop, can you explain why you have a deed for a property in Brooklyn and a mortgage for five- hundred-thousand dollars from Anthony Mancuso.\"\n\n\"Well, I suppose that's because Mr. Mancuso, who is a mortgage broker, has sought a small bridge loan from Loftis & Bishop Ltd. It was inconvenient to file those with the virus and all. But as soon as things settle down ...\" \n\nCrawford seemed frustrated as she said, \"money laundering is a crime. Where is the cash that Mr. Mancuso gave you in Penn Station?\"\n\nShe had received the tip from the Utica, New York, office, which specialized in organized crime. She was expecting to find an envelope full of unreported cash. Instead, she had a bundle of legal documents that looked otherwise legitimate, but her gut told her they were part of a money-laundering scheme.\n\n\"I assure you, Ms. Crawford, that Mr. Mancuso only gave me his mortgage in return for the money he borrowed. I'll produce the bank records if I must, but in the interim, may I have my documents back if you are finished examining them.\"\n\nA reluctant Crawford handed the papers back. You can't prosecute based on your gut, but at least her raid had nabbed the two Russian hitmen.\n\nA police officer escorted the little man on the bike forward. He whispered something in Agent Crawford's ear, which brought a smile to her face.\n\nThe little fellow walked over to Bishop and asked, \"Are you Mr. Bishop\u2014Jason Bishop?\"\n\nJason said, \"Yes.\" In a very somber tone.\n\n\"You've been served the little man said, producing a large manila envelope from a satchel he carried. Then he walked back to his bike.\n\nJason slowly opened the envelope as everyone, but the little man watched. Inside was a petition for divorce and a series of court orders freezing his assets and requiring him to stay at least five hundred feet away from his wife and his home in New York. \n\nLittle Bob was appointed the temporary trustee of Loftis & Bishop, Ltd. The orders were good until a hearing was possible following the state of emergency.\n\nBishop's shoulders slumped, but he quickly stood up straight and looked agents Crawford and Sims in the eyes.\n\n\"If that's all, may we go now?\" Bishop said.\n\n\"Yes, but we might come back to speak to you later,\" Crawford replied.\n\n\"If you must, and please extend my thanks to the Seattle police for saving our lives.\"\n\nWith that, Bishop shepherded Ellie into the Ford and drove up the drive to the house.\n\nBy the time they reached the end of the driveway, Ellie could see that the FBI and most of the police had left,. Still, one patrol car remained just outside the gate, which had been closed.\n\nEllie stood before the house. It was set atop a slight hill, which you had to take a stone path to get to. Another path led around the house to a set of stairs. You could see the vast lake beyond the stairs, which must lead down to the lakeshore.\n\nBishop began walking toward the house. It was very modern and seemed to grow organically out of the hill. It was all metal, glass, and concrete. Still, it was a fine-looking house in a beautiful setting. They walked past flower beds that were blooming but bedraggled as if in need of a gardener's care. \n\nEllie stopped to look at the view and appreciate the sun that had begun to break through the sky which had remained stubbornly overcast since they had reached the Western side of the mountains. Bishop stopped at the door and waited for her to catch up.\n\n\"Welcome to my house,\" he said. \"It may be my only possession when my divorce is over. That is, of course, if I can still afford the taxes.\"\n\nHe opened the door onto a vast interior that had been deceptively hidden by the modest front of the building.\n\nBishop pulled Ellie to him and lifted her into his arms. \n\n\"Thanks to my bitch wife, I can now do this,\" he said, kissing her and carrying her into the house.\n\nThere was a short flight of stairs that went up and one that went down just beyond the entry. He took the stairs that went up, still carrying her, and then turned to his left. They entered a room that had floor to ceiling glass on three sides and at its center a great king size bed. Beyond the glass walls and sliding glass door was a broad deck cantilevered out over the lake.\n\nBishop carried her to the bed and set her gently down.\n\n\"I may be presuming that you still want me after I have lost my wealth.\"\n\n\"Well, it wasn't your money I was after, but your story. However, now I think I've found something more interesting,\" she said, running her hand over his crotch.\"\n\n\"Well, that will have to wait. It's nearly suppertime, and I haven't eaten.\"\n\nHe unbuttoned her jeans and began to pull them down, but they were too tight. He had to stand by the side of the bed and pull. As her body lifted with the force of his tug, she kicked off her shoes. \n\nHe was still fully clothed, but she sat up and began unbuttoning his shirt. She pulled it off him and began planting kisses on his bare chest. He pushed her back and, with one quick grab, divested her of her panties.\n\nJason fell to his knees and spread her legs. He began licking and kissing from her knee up her thigh. First, the left leg then the right. She sat up enough to remove her shirt and her bra. She let herself slip back down on the bed as he began to circle his tongue around her vulva. Her nipples were hard and erect. \n\nHer hands began to caress her nipples and then pull on them hard as the circles Bishop was making with his tongue got tighter and tighter. She turned her head, and she could see out to where the lake water sparkled beneath the setting sun, and the far shore ran the spectrum from bright green to dark.\n\nShe began to moan softly as he moved in on his target, and then he was there. He paused. He was teasing her. She went to reach down and force his head, but before she could, he flicked his tongue across her clit. It had the force of an electric shock. It sent her body into an arch, and before she could come back down, he had sucked her clit between his lips. \n\nShe must have let out a sharp cry then because she heard it like a disembodied shriek, but she was already shaking with her orgasm and marveling how fast it had come and how good it felt.\n\nHe was on her then. He drove his cock into her with two quick shoves that felt like he would split her in half. She wrapped herself around him as he drove into her. She couldn't seem to form thoughts. She was lost in the intensity of it. She felt her orgasm rise again as if it were happening to someone else. She just wanted to hold him forever to keep him with her.\n\nShe must have passed out. She recovered as he came in her and then she must have fallen asleep. In her dreams, a phone was ringing. Not the musical chime of her cell phone, but an old-fashioned phone, ringing and ringing. Someone must have answered because it stopped. \n\nEllie was exhausted. She had driven all afternoon through the dark Cascades. Mountains arranged in sharp rows like the teeth of a dragon. But something told her she had to get up, \"he needs you.\" It was a voice that came from deep within her.\n\nEllie fought off the sleep, and suddenly she was awake in a strange room flooded by bright moonlight. It was a huge moon, and the night was strangely quiet. Not silent for there was a steady buzz of sound and the sigh of the lake against the shore, but there was no traffic sound, no engine, no voices. No light beyond the moon and the quiet elegance of the stars, so clear so bright they seemed alive.\n\nWhere was he? The side of the bed where he should have been was empty. She went to where the sliding doors gave access to the deck. He was out there sitting in a chair by a small table. He seemed to be gazing purposelessly over the water. She opened the glass silently and stepped onto the deck. \n\nShe was naked, but for the puffy pink socks, she had put on yesterday, or was it now the day before. She smiled to think she had worn them through their steamy sex, but they were little help against the chill in the night air.\n\nShe walked over to where Jason sat, ungodly still, in one of two Adirondack chairs set to look out over the lake. As she approached, he moved only enough to take a bottle from the table and take a swig before putting it back. Was he drinking because he was having second thoughts about them? \n\nShe walked quietly over the deck until she was standing in front of his chair. For a moment, it seemed he didn't see her, and then he opened the terrycloth robe he wore and said, \"COME.\" Naked, she eased onto his lap, burying her head against his chest. He refolded the robe around them. His body felt warm, but she could sense something was wrong. \n\nShe lifted her head so she could look at his face, which was eerily lit by the moonlight. His countenance was grim, and she thought, \"his eyes look sad.\" She asked, \"Are you thinking about the divorce?\" she asked her voice betraying the fear that was rising within her.\n\n\"There will be no divorce,\" he said sternly.\n\nHer heart sank. They hadn't discussed marriage or even being together beyond tonight. \n\nShe turned away. She looked up at the moon so high in the sky but seeming so close.\n\n\"The moon is so big and bright,\" she said.\n\n\"The Flower Moon,\" he said.\n\n\"Will you go back to her?\"\n\nHe grabbed her tight. He pulled her to him and planted a gentle kiss on the side of her head, as you might kiss a child. She could feel the damp of his tears on his cheek.\n\n\"No, my love,\" he said. \"Elizabeth took sick the night we spent in Whitefish. They hospitalized her as we came through the Rockies, and she died as we exited the Cascades.\"\n\nShe could feel her own tears well up. They were a mixture of grief and joy. \n\n\"How do you know?' she asked.\n\n\"My lawyer got the news from her law partner about four a.m. our time. He called me first thing on the landline by the bedside.\"\n\n\"I heard it ring...\" she sighed.\n\n\"You were tired. I let you sleep,\" he said and reached over to grab the bottle.\n\nHe offered her a drink, but she shook her head. It was a fifth of vodka about half gone.\n\n\"There were times I wished her dead,\" he said, his voice trembling into a sob.\n\n\"Don't go there,\" she told him. \"She betrayed you. Tried to steal from you. You were angry, that's all.\"\n\n\"Tony offered to kill her. I told him no. But I was tempted.\"\n\n\"You said no because you are a good man. One of the last of a dying breed. It's why,\" she paused and then, \"It's why I love you.\"\n\nShe kissed him then, first on the mouth, and then the eyes, kissing his tears away.\n\n\"You know what this means,\" he said and pressed her even closer as he whispered in her ear. \"It means you have to be with me always because I love you.\"\n\nThey stayed there wrapped warmly in each other's love until the night noises gave way to the sweet sounds of the morning. They embraced a new day while the moon faded against the sun's light. As they got up to go in, Ellie paused, looked out over the lake, and whispered to the sun in the East, \"Thank you.\"\n\nThe woman she was thanking couldn't hear her, because she was pushing a shopping cart a half of a continent away. But somewhere in heaven, an angel got her wings.\n\n____________\n\nEpilogue \n\nSergei Petrokof was seated in a charming outdoor caf\u00e9 in Stockholm. A city that could be the only genuinely open place remaining in Europe. Sweden had decided to ignore the pandemic and rely not on social distancing or staying home. Here they relied on their general good health, advanced medical services, and generally snotty superiority. \n\nThey were ignoring the deadly virus. The death rate was high, but the stubborn Swedes assumed the angel of death would pass quickly. If he didn't, at least he would cure the chronic housing shortage.\n\nThe problem was that there was little to do in Stockholm of interest to a Russian degenerate. Sergei would much rather have stayed in New York, but that city was sick, and Sergei held little hope for a quick recovery. Ultimately, he was sure that what he believed was the first city of this modern world would recover, and the properties owned by Loftis & Bishop would soar in value. \n\nHe couldn't go home to Moscow yet, not while Bishop lived. He would have more to worry about than a virus that President Putin said wasn't there. No returning to Russia yet, He must wait until he could bring Bishop down. It was merely a matter of finding the right opportunity.\n\nThere was a spectacular blonde sitting alone at a nearby table. It was a pleasant spring afternoon, and a slight breeze brought the occasional whiff of her perfume. It was very French and stimulating. She had come with a man, but they had a small verbal fight in what was clearly German, and her escort had abandoned her to her expresso and salad. Sergei decided the fool was not worthy of such a prize and so he made his move.\n\n\"Bitte,\" he began \"Sprichst sei Russisch\" \n\nShe smiled at his poor attempt at German and said, \"Nein, but I speak English?\"\n\nHe returned her smile, and placing his hand on the seat opposite said, \"May I? it is so unpleasant to eat alone.\"\n\n\"O-kay, but just essen...eating,\" she said, waving her finger and giving a cute little pout.\"\n\nShe was eating a little salad, and Sergei ordered a pickled fish and picked at the unpleasant dish in order to enjoy her attractive company and her cute accented English. He missed New York with its fine cuisine, but the women here were amazing.\n\nShe was a big girl but thin by American standards. Her long golden hair was up in a large twist held in place by a substantial hairpin like a Japanese Geisha. Her dress was a mixture of the latest European styles, but her blouse was what drew his eyes. \n\nIt was off the shoulders and cut low enough to show the beginning of her cleavage, which was prodigious. The puffy sleeves descended to the elbow, hiding her extremely developed biceps from his view. His eyes were wandering between her luscious blue eyes and her delectable tits. Her appearance was marred only slightly by the wedding ring on the fourth finger of her right hand.\n\n\"Why would such a lovely woman be eating alone?\" he asked.\n\n\"You must have seen mein mann. He is angry with me. Jealous.\"\n\n\"Well, can we blame him when you are so,\" he paused, seemed to stumble for the word, \"beautiful!\"\n\nShe smiled and reached her right hand across the table, so her fingers touched his. He covered her hand and its wedding ring with his. Their eyes met. His were hungry with his desire, fueled by his rising cock. She blushed and went to pull her hand away, but he held it.\n\n\"I cannot,\" she said.\n\n\"Why? He left his queen, unguarded. He needs a lesson,\" Sergei whispered.\n\nShe giggled, \"are all Russians so wicked.\"\n\n\"No, he shot back. Only the very\u2014good ones.\"\n\nShe leaned forward, her lips almost touching his, \"I must use the facilities,\" she whispered.\n\nShe got up and began walking toward the back of the caf\u00e9. Her hips had an exaggerated swing, and as she reached the toilets, she looked back over her shoulder. Sergei followed. There were two unisex rooms. He tried the handle on the one she had entered. It was unlocked. He smiled and slipped in.\n\n\"Oh,\" she said, pretending innocence as he entered.\n\nHe pushed her against the wall and pressed a wet kiss on her sexy lips. His hands ran over her tight figure. She didn't resist only saying, \"I must not. What will I tell my husband?\"\n\n\"Lies,\" he said.\n\nHe went to reach between her legs, but she blocked him as her hands went to his belt and skillfully undid his pants. She maneuvered him against the bathroom door and eased his pants down, following them into a squat before him. \n\nShe pulled his boxers down and released his stiff manhood. With her index finger, she pulled down on his cock and then released, causing his sex to bounce. She gave a little giggle like a child playing with a toy.\n\nShe wasn't playing. She pressed her lips to his flesh. She brushed her lips along the length of his shaft and then slipped him into her mouth. She was good. Oh, so very good. She brought him to the edge but held him back. \n\nHe reached down and took her head with his hands. This seemed to send her into a frenzy, and he found himself pumping his seed into her waiting mouth. As he emptied into her, she reached up and pulled the pin from her hair, sending it cascading downward.\n\nShe slid up his body as if she meant to kiss him with her cum filled mouth, but at the last minute, she pushed on his chin, exposing his neck, and then she struck. With one swift motion, she drove her hairpin into his neck, up through his chin, past the roof of his mouth, and into his brain.\n\nSergei Petrokof's death was instantaneous. There was no blood, a minor virtually unnoticeable wound. She took the dead weight of his body and placed him on the toilet with his pants still down. She then washed her pin, fixed her hair, and retouched her makeup. Exiting the restroom, she tripped the lock, so Sergei was locked in.\n\nIt was hours before the restaurant noticed the locked door and used a master key to enter. The emergency services were called, and Sergei was taken to the morgue. There didn't seem to be foul play, only an unexpected death. ",
        "The corner was overwhelmed with bodies from the plague. His first impression was a heart attack, but the X-ray came back clear. Stroke? It was his next alternative, and the X-ray showedt a massive brain bleed. So, the autopsy read embolism no virus found. There was simply too much death and not enough time. \n\n*****\n\nThe new Canarsie social Club sat on a corner lot. A former office building situated on a quiet commercial street in a neighborhood of two and three family homes. It is a modern building looking like the small business office it once was. Its dark grey windows seem only an architectural pretension; However, they are, in fact, bulletproof and resistant to all manner of electronic surveillance. \n\nThe club had a bar and a dance floor. However, admittance was by invitation only, and no cell phones or electronic devices were permitted. In fact, the club had no phones at all, only a single computer which monitored the twitter accounts of a dozen high school girls as they chatted up a storm. \n\nSome of their followers wrote posts that strayed off-topic and were in fact coded messages. Thus, Tony the Tiger Mancuso had avoided the electronic surveillance that had undone so many of his rivals. \n\nTony believed in caution and on doing things the smart way. But he believed in respect above all. He had shifted his business from the old revenue streams of drugs and prostitution and moved on to more lucrative ventures in banking, insurance, and corporate finance. \n\nThe government was often his partner in these ventures. The current administration had been of particular assistance. Still, it was wise to keep your level of security up and to farm out the most sensitive work to professionals. That was why he was seated opposite the man in the dark gray suit.\n\nThe suit was, Tony assumed, as dark as the man's soul. He had entered the club with a confidence and self-assured swagger that was undeterred by the thugs on the club's doors. They had searched him thoroughly, but Tony knew to little effect. With one quick glance of his calm blue eyes, the newcomer took in everyone and everything in the room. It was a deadly and menacing glance.\n\nTony was a man who had learned to master his fear. But sitting opposite the man known as the Apostle, it was all the mob leader could do to keep from trembling.\n\n\"Nice secure place you have here,\" the Apostle said.\n\n\"A recent acquisition that I bought out of bankruptcy. I'm very satisfied with it.\"\n\n\"I hope you found our work satisfactory as well,\" the Apostle said.\n\n\"Of course,\" Tony replied. \"What was there not to like the hit in Stockholm was ruled a natural death.\"\n\nThe Apostle gave just the slightest smile and said, \"Almost too easy with the Swedes not even trying to stop the spread of the virus. They have their dead piling up in their morgues. Even a good sharp-eyed coroner gets tired and careless. After all, what is one dead Russian with what looks like a brain hemorrhage? \n\n\"The real skill was the killing off the bitch wife. But there again we had the harsh times in which we live and the U. S.'s Keystone Cops response to the virus to thank. By the time they got around to testing her for it, she was already dead. Why would you waste a precious test?\"\n\n\"Well, it was excellent work,\" Tony said and signaled to the bartender who came from behind the bar carrying a bundle.\n\nThere were two large envelopes, and they were crammed full. Tony slid these across the table. The Apostle wore a heavy wool jacket despite the warm late May weather.\n\n\"The balance of your fee,\" Tony said.\n\n\"I hope you didn't find us too expensive,\" the Apostle said. \"Since leaving government service, my agents have become used to the better things in life.\"\n\n\"Good work is worth the price. I'm surprised the government would let you go.\"\n\n\"Well, new people new ideas, and we were not exactly beloved by the Russians who have such influence these days.\" The Apostle said, \"but, I'm glad you are pleased with our service, and we are available anytime. Remember, Russians are a specialty. \"\n\n\"You need a ride or some security, that's a lot of cash you are carrying?\" Tony asked.\n\n\"No, I'm well covered by my own people.\"\n\nTony glanced at the monitors above the bar. They covered the whole outside of the building, but he saw no watchers.\"\n\nThe Apostle chuckled, \"You can't see them. They're chameleons. They blend in with the background. Especially when that background is as green as what's in these envelopes\"\n\nWith that, the Apostle stood buttoned his suit jacket and made his farewell. As the Apostle exited the club, Nicky came from the back room. \n\n\"That guy gives me the creeps,\" Nicky said, sitting down.\n\n\"Yes, very scary, but useful. These are difficult times. It's best to keep him and his group in our back pocket for the occasional special job,\" Tony replied.\n\n\"You going to tell our lawyer friend how we helped him out?\"\n\n\"No, why burden him with useless information. We got the opposition before they got him. Now we can reap the benefit. That is if the damn virus doesn't kill us.\"\n\n\"Well, we will just have to keep an antisocial distance,\" Nicky said with a sinister laugh.\n\n\"Particularly from our new apostolic friend,\" Tony replied as both men laughed. \n\nAUTHOR'S NOTE\n\nMy buddy RichardGerald wrote the intro so I'm doing the end notes. I've always considered RG to be the James Cain of authors on this site, an amazingly talented story teller, willing to take you on a tour of the dark underbelly of human experience and show you all its frailties and foibles. He clearly influences a lot of other writers, at least based on the number of times his stories have been imitated; even once by me. But of course, he's a lawyer so I suppose he's seen it all. Being a hopeless nerd myself, I've always wished I could write like the guy. That's why, I jumped at the chance when we began talking about a joint work for Bebop and Nora's challenge. \n\nThe outcome reads better than anything I could expect from two guys with such different lenses and I have to give him most of the credit. His ability to add grit and substance to my romantic narratives has created something unique for me and I have to say it was an honor working with him. Hopefully we can do it again some time soon. I actually rode the Empire Builder back in a different world and it is indeed an experience like I'm describing here. I'll leave the description of lowlife shenanigans to RG. He has all the t-shirts. - DT"
    ],
    "authorname": "dtiverson",
    "tags": [
        "50 ways",
        "big tits",
        "female reporter",
        "hot redhead",
        "infidelity",
        "revenge",
        "the mob"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-empire-builder"
}