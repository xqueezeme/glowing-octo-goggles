{
    "title": "A Tempting Vacation Ch. 14",
    "pages": [
        "Lil regretted having agreed to check on Ron almost as soon as the words left her mouth, but she couldn't think of a good reason to back out of it, short of telling his mom she'd seen him masturbating in the store dressing room, and of course, that wasn't an option. Her guilt of having succumbed to the temptation of peeping on the boy had descended upon her almost at once, yet throughout the day, her mind had nonetheless continued to flash back to the sight of his hand wrapped around his incredibly large penis. \n\nShe was hesitant to even admit it to herself, but she had been uncharacteristically aroused all afternoon, even finding herself observing a few hunky college spring breakers that had been with them on their snorkeling excursion, often discreetly glancing at their clingy wet trunks when they would climb out of the water. Mike had unknowingly furthered her temptation by asking one of the particularly attractive college boys to help her remove her flippers while Mike himself assisted their daughter. The 20 something kneeling before her, his face only inches from her crotch, seemed to take longer than necessary, and continually looked up to speak to her, obviously scrutinizing her wet, clingy one-piece swimsuit which did little to conceal a fit yet curvy figure most any 40 year old would be proud to have. Lil recalled how her body reacted, the tingling heat seeming to travel directly from her moist crotch to her flushed face as the handsome young man blatantly ogled her as she stood there in the midst of a boat full of vacationers. Her puffy nipples, which were always a threat to 'present' when she went swimming, were now distending and pushing through the well padded bra lined swimsuit she'd worn to prevent this very thing. Usually, the heat, and quite frankly, the absence of sexual thoughts in Lil's brain, kept them at bay. But not now, with this handsome young man calmly devouring her with his eyes, they were impossible to miss. As soon as she stepped away from the nicely muscled boy, she had slipped her cover-up on, eager to hide her still growing nipples. \n\nLil had been surprised that even though Mike had seemed to notice the boy lingering at her feet, he acted like it was no big deal, and even thanked the young man for his help. Relieved that her husband didn't get jealous, or cause a fuss, she was free to relax and enjoy the ride back to the dock. For the remainder of their snorkeling excursion, however, no matter how much she tried to think pure thoughts, Lil kept replaying the way the young man had so blatantly ogled her, and even occasionally would steal prolonged glances at his tanned physique from behind her dark shades. \n\nFeeling increasingly aroused, Lil had been hoping Mike would be up for lovemaking later that night, but she also knew he'd be drinking beer while watching the Heels, and while a couple of beers often led him to talk a big game, he usually fell asleep before things got very interesting. Now feeling rather horny herself, she had run into Beth and agreed to perform a motherly favor. Beth obviously trusted her to look after her son. Of course, she also had no idea of Lil's voyeurism back at the boutique. Yet, no matter some of the recent naughty thoughts, Lil was a proper Christian lady, and was perfectly capable of carrying out the favor asked of her by Beth. However, she hadn't seen Ron since their lunch, and the thought of going to his room, where he was alone, and likely asleep, still seemed like a bad idea. If he were to wake up, she just knew she'd be embarrassed and uncomfortable being alone with him, even though she had convinced herself that he had no idea she had seen him in the dressing room. Lil was committed to do the favor, but would make sure Mike would stop by with her on the way to the bar, that way everything would be completely proper.\n\n()()()\n\nMike's soapy hand swiped yet again across his slowly thickening cock. He was reluctant to admit to himself that he was becoming aroused by the direction of his thoughts. He'd never been jealous of Lil, and she had often gotten a second look over the years they'd been married, but to go from not being jealous to getting a hard-on at the recollection of your wife being the object of a young stranger's lust was quite another story. \n\nIt had begun earlier that day, as the entire family had been boating around the island on a snorkeling excursion. He'd noticed her, uncharacteristically trying to check the young guys out on the boat, and had even messed with her a little by having one of them help out with her equipment. It was so unlike her, but even more unusual was the effect the relatively innocent events had on him. He'd been trying to get Lil to dress more provocatively for a long time, and in particular on this trip, and he'd always told himself it was so he could admire his still sexy wife, but as he had casually watched the college guy not so discreetly stare at her, he felt the stirrings of an erection. Watching more closely, he realized Lil's suit was still damp enough to contour to her body like a second skin. She had even been unknowingly presenting a well defined camel toe to the boy, kneeling with his head less than a foot from her crotch, and her nipples were noticeably erect as she stood there in the 90+ degree Caribbean sunshine. As he recalled the events, his cock once again started to swell. He couldn't really believe how he was feeling, but he was obviously turned on by the thought of Lil's relatively innocent exhibitionism on the boat. But it was really more than that; it was the thought that his demure, religious wife was potentially excited by the unplanned teasing as well. The way she had been glancing at the boy's crotches, her blatantly hard nipples and somewhat flushed color of her neck and face was a pretty certain giveaway after so many years of marriage. \n\nNow, as he stood beneath the hot shower, he toyed with the idea of jacking off to images of Lil allowing the boy to rub suntan lotion on her back, or maybe of her nonchalantly flashing her panties later in the bar, to even an image of her parading in front of their bedroom window back home, knowing the neighbor's high school aged son was peeping from his room next door. These and other images were flashing across his brain randomly, and his cock grew still harder. He was about give in and stroke himself to completion, when Lil abruptly opened the bathroom door and joined him just on the other side of the opaque shower curtain. \n\nHis erection began to subside immediately, as he feared her opening the curtain and catching him in the act. She began to relay her recent conversation with Beth, the sexy blonde that had obviously been teasing him earlier at the boutique. Mike listened to Lil explain the situation. He was all for Lil and Beth becoming friendly on this trip because it improved his chances of being able to spend time near Beth, hopefully in a sinfully tiny bikini he was so certain she would wear. He didn't quite understand why Lil wanted him to go with her to check on Beth's son, but she seemed pretty adamant about it. \n\nStill feeling extremely horny and the fantasy of Lil sexily turning heads in the bar fresh in his mind, Mike decided to try and leverage the situation as best he could. \"I don't know baby, it's not long until tipoff, and I don't want to miss any of the action.\" Mike said, truthfully.\n\n\"But Mike, it won't take long, just go with me on the way to the bar.\" Lil countered.\n\n\"Well, I guess I could be persuaded.\" He said in a teasing tone. \"How about you wear that new dress I bought for the trip.\" He had been hoping to get her to wear the dress during their vacation, but with the kids along, there really hadn't been an appropriate time and place. For tonight at least, the kids, worn out from a day of swimming and snorkeling, were content to stay in their adjoining room, order a pizza and watch a movie. \n\nHe'd given the dress to her the night before they left, but she could see the daring neckline and didn't even try it on. She did give in to Mike's pestering, and packed it, but certainly had no intention of actually wearing it. But after the events of the day, she felt a little more open to the idea. Plus maybe if she played along with him now, it would keep his interest up, even through the game and beers, for some fun later. She was certainly in the mood, and with the kids staying back in their room, this might be the perfect time to break from her conservative wardrobe and wear something a little daring.\n\n\"I guess I can wear it, if you really want me to.\" She answered, seeking out one last reassurance from her husband.\n\n\"Great, now go get it on while I get dried off.\" He exclaimed, surprised at how easily she agreed, and further, surprising himself as thoughts of the way the men in the bar might ogle his sexy wife unconsciously invaded his brain. \n\nLil stood before the closet mirror in the bedroom, trying to wrap her brain around the way she looked. She had never felt so exposed when preparing to go out in public. She would never ever wear anything like this back home. It was a red, halter style dress that buttoned all the way up the front to a much more daring scoop cut than she had ever worn, showing the golden swell of each breast peeking from the snug neckline. It also dipped almost to her waist in the back, which made wearing a bra impossible. Her full, yet pert B cup breasts were firm enough to go braless, although in recent years, gravity had slightly increased the jiggle factor. It was her nipples, however, that presented the challenge Lil had dealt with her entire adult life. She wore dense tops, multiple layers and thick, well padded bras, or at least some combination of the above. While they were usually somewhat dormant, she never knew when her thick nipples would spring to attention. It didn't require her to be sexually aroused for them to grow rock hard and extend out well over \u00bd inch from her reddish brown, quarter sized areola. They would grow long and remain quite thick. In her younger days, there had been many an embarrassing moment when she got cold, or perhaps nervous, that they would push through her bra and clothing, drawing second glances from both men and women alike. Over the years, she'd learned how to manage them with the proper clothing. This dress would not be considered proper clothing, for even with a bra, it was too thin and tight to come close to concealing them. Without the ability to wear one of her supper padded bras, the slightest extension of her nipples would be plainly evident. \n\nThe snugness of the dress across her upper body gave way to a looser fit as the dress became more flowing below her waist. The ivory colored buttons extended from the plunging neckline down to a couple of inches above her knee, then another 7or so inches of material hung down to the hemline. Each step she took would lead to one tanned leg, then the other, protruding between the wispy, colorful dress, the movement and contrast in color sure to draw attention to her bronzed and toned legs. \n\nTingling from both the day's temptations and her sun-kissed skin, she felt sexier than she could ever remember, but did she really have the guts to go out in public dressed like this? She decided to see how Mike would react. He would likely decide it would be too much and ask her to change. \n\nAfter examining herself repeatedly in the poorly lit mirror next to the bed, Lil came back in the bathroom, where Mike was just wrapping his towel around his still respectable 36\" waist. \n\n\"Wow! Look at you!\" he growled, taking Lil by the hands and forcing her to spin for his inspection. \n\n\"I don't know, I feel so exposed. I mean not counting my shoes, I am only wearing two pieces of clothing.\" Lil said, fishing for more compliments. What she got was certainly not what she expected. \n\n\"You're right,\" replied Mike, \"Two articles of clothing just won't do.\" \n\nSlow to realize what he was up to, Lil watched as Mike knelt before her, slipped his hands beneath her dress and had her rather boring white panties pulled down to her knees before she even began to put up a fight.\n\n\"What are you doing Michael?!\" she barked, using 'Michael' to let him know just how serious she was, as she tried to escape, only to be trapped against the bathroom vanity counter. \n\nAs soon as he pulled the panties over one foot, Mike dove beneath her dress and began to firmly lick and kiss across her pussy. He could smell her arousal even before his tongue confirmed it. She was quite damp, which only served to spur him onward. They didn't usually delve into much oral sex, as Lil didn't care much for it, and he had to practically beg her for a blow job. Once she got going, she seemed okay with it, but sometimes he just didn't feel like putting forth the effort to get her in the mood. Tonight, however, was a different story. Lil was putting up only token resistance, and his face was quickly becoming coated in her excitement. \n\nEager to keep her aroused and perhaps more willing to play along with him later, Mike decided to stop short of giving Lil the orgasm he knew was fast approaching, and pulled free from her now compliant hands on the back of his head.\n\n\"There now, isn't that a good reason to wear only ONE item tonight. You never know when I might decide to do that again, but right now I need to finish getting ready.\" He said even as he stepped back and tossed her panties into the tub, where the last of the shower water was still pooled at the drain. \"And don't' go get another pair, because I'll just take them off of you too.\" \n\n\"Mike Johnson.......you pervert! And such a tease!\" Lil cooed in a tone to let him know she wasn't all that upset. It wasn't often that he kissed her down there, and she certainly wasn't going to complain about it now. \"What would the choir ladies think of me, dressed like some sort of floozy, and with no panties?\" she continued, twirling before the mirror. She had actually forgotten about her nipples while Mike had orally assaulted her, but as she viewed herself in the bathroom mirror, she saw that her arousal was plainly evidenced by the pinky finger sized nubs creasing the dress. Now was the time to see if Mike would dial things back a notch or two to preserve his wife's modesty. \"Oh no, honey, really, I can't wear this out in public, look.......it is almost obscene the way my nipples are jutting through this dress.\"\n\n\"So what.......we don't know anybody here.....besides, I think you look hot!\"\n\n\"But, well, don't you care if other men can see?\" She responded, taken aback that her husband was not calling a halt to her wearing such an erotically sinful dress.\n\nMike paused for a few seconds, trying to determine the best course of action. Did he really want to show off his wife so blatantly to a bar full of men? How would she respond? Would he get jealous, or turned on. As the image of Lil 'innocently' flirting with the young guys from the boat flashed across his brain, Mike's cock began to swell and he knew his answer.\n\nHe moved behind her so that they both faced the mirror. \"I won't care, I mean how could I blame them, look at you, so sexy, and you are all mine, so why can't I show you off a little? Besides, you can't convince me you won't get at least a little turned on wearing that dress into the bar tonight, can you?\" Mike said, hoping he wasn't pushing too hard. He pulled her tight so she could feel his erection pressing against her bubbly but firm ass, and reached his hands around to cup her breasts. He slowly grazed his fingers upward, the thin red material practically enabling him to feel each of the countless goose bumps surrounding her abnormally large nipples. Mike realized he'd grown to take them for granted over the years, due in large part because he never saw them like this, barely concealed in a sexy outfit. He shook her shoulders just a little as he said, \"Look at you, your breasts are so sexy, and I love the way this dress hugs them so every little jiggle can be seen. Wow!\"\n\n\"Oh you....just quit it. I will wear this for you tonight, but it will be the last time, so you better enjoy it.\" Lil shot back, deciding it best to just agree rather than lie to her husband about how excited the dress and this conversation was making her. \"Now please hurry so we can check on Beth's son before the game.\"\n\n\"We've only got 10 minutes til game time,\" Mike said, checking his watch on the counter. The excitement of Lil agreeing to wear the red dress had caused him to forget his end of the deal, as he said, \"I still need to shave, so why don't you go on down to their room and we can meet at the bar.\"\n\n\"Um, no, that was not our agreement. But I know you really want to watch this game, so I will cut you some slack, but I will not walk into that bar, dressed like this, all by myself. I probably shouldn't even walk out the front door alone. Why don't you just meet me there, room 101 down on the end by the pool, then we can go to the bar together.\" Lil replied. \n\nMike didn't want to push his luck and have Lil back out of wearing the sexy dress, so he quickly agreed to her plan and ushered her out of the bathroom and on her way.\n\n()()()\n\nIt took several minutes for Lil to get from their room to Beth's pool front unit at the end of the building. Thankfully she didn't meet anyone on the way, and proceeded on auto pilot as her body was still buzzing from Mike's earlier oral assault. That along with him talking about showing her off at the bar were so out of character, she wondered what had gotten into him. Of course, the same could be said for her. Here she was, heading to a hotel room to check on a, hopefully, sleeping teenage boy whom she had spied on earlier that same day as he masturbated his enormous penis. And thanks to her husband, she was so horny she could burst, wearing a sexy red dress without a bra or panties, and actually somewhat looking forward to seeing what sort of reaction she'd get from the other men in the bar. But first, she needed to subdue her own hedonistic thoughts and quickly confirm Ron was still sleeping off his afternoon drinking binge.\n\nShe slipped the key card into the front door and did her best to open it quietly. She flipped the security bar over to block the door from completely closing so that Mike would not knock and wake Ron, then turned to assess her surroundings. The setting sun still provided enough light through the blinds to fully illuminate the room, and Lil froze in her tracks at the sight before her. His heavy breathing confirmed Ron was still sound asleep, however, he was also wearing, if you could call it that, only a white towel. In fact, it was more draped across his midsection, as opposed to actually wrapped around him, and all of one leg and most of his hip were exposed. Further, the apparently thin and damp towel did little to conceal the unmistakable bulge resulting from his hard penis. \n\nHer mind began to whir with a myriad of thoughts. 'Surely Beth didn't leave him like this, so he must have woken up... and taken a shower? His hair did look like it was still a little wet. Maybe she should just turn and leave, but then what if Beth and her friend came back to find him like this, or worse yet, what if the towel falls completely off during his sleep? Her friend would see him naked.....and what would Beth think? What if tomorrow, she asks if I saw her son naked? Worse yet, she might bring it up in front of Mike....Mike! Oh my god, he will be here in just a few minutes. I've got to do something to cover him up.'\n\n\"Okay, take a deep breath,\" Lil spoke softly to herself, hoping the sound of her own voice would help corral her frantic thoughts and settle her nerves, \"You can handle this, just relax and think.\" \n\nShe stood there, trying to clear her brain and think of a plan of action. After less than a minute, Lil suddenly realized she wasn't thinking at all, but simply staring at the towel draped so obscenely over the teenager's penis. Her next realization was that the temperature in the room seemed to be rising, as evidenced by the increasing heat spreading from her clammy forehead, downward until she could literally feel the hot moisture between her legs. She instinctively clenched her thighs tight to keep the juices, primed by her husband's tongue and now magnified by this second serendipitous presentation of this boy's overgrown penis, from running down her thighs. ",
        "She had read once in a Cosmopolitan Magazine at the hair salon, about how men got numerous erections during their sleep, and with no knowledge of the day's unending teasing and temptations he'd been forced to endure, or the Cialis coursing through his bloodstream, assumed Ron's body was simply behaving as God intended. Staring more intently at the lanky teen and the barely adequate towel draped over his groin, Lil smiled briefly to herself, thinking that if the penis pulsing beneath the thin white towel was also as God intended, then Ron should be on his knees nightly, offering thanks for his truly beautiful and oversized blessing.\n\nAs her ironically twisted sense of humor faded, Lil finally snapped from her sinful daydreaming, and accepted the fact that she had to do something to conceal Ron's unmistakable erection before Mike arrived. She didn't see how she would get him under the covers without waking him, which was the absolute last thing she wanted. She began scanning the room, and eventually spied a spare sheet in the closet. It wasn't thick enough to actually hide his excitement, but at least his body would be fully concealed. She would just cover him, and go head Mike off before he could come in the room. Then later, if he came back with her, hopefully Ron's erection would be gone, and if not, she could feign shock and embarrassment for Mike's benefit. \n\nThe sheet poised in her hands, ready to be slung out across his body, Lil paused, taking note of how his penis wavered beneath the towel. Of course, the easiest thing to do would be to simply drape the sheet over him. But then again, perhaps she should just quickly remove the towel first? It seemed like the nurturing thing to do, after all, it was likely damp, and was probably making all the bedding wet even as he lay there right now. \n\nAlmost as quickly as the rationalization entered her brain, she admitted to herself it was a self serving lie concocted to justify exposing this boy's penis. Lil now found herself at the foretelling crossroads so many otherwise good Christians fail to properly navigate. What if you can make what you know to be a sinful choice, but no one will know and no one will be harmed? She of course knew right from wrong here, but after seeing Ron in the dressing room, and now, in her heightened state of sexual arousal, she just couldn't resist this perfect opportunity. Lil told herself she'd just pull the towel free, visually admire Ron's manhood for a few seconds, and then spread the sheet across his body and leave. A very simple plan.\n\n()()()\n\nMike hurried toward room 101, anxious to retrieve Lil and lead her through the bar. Even if it were still mostly empty, he'd at least get a reaction from the bartender. He approached the room quietly, remembering the whole point of this exercise was to check on Beth's sleeping son. Just as he prepared to lightly knock, Mike noticed the door cracked open an inch or so by the security bar. He pushed it open ever so slowly, and then saw his wife standing there, holding a sheet and staring at the sleeping boy. She appeared to be mesmerized as she stared at Ron. Something seemed off kilter to Mike, and he eased the door back to rest on the lock, then leaned in closer to observe. \n\nIt only took him a couple of seconds to notice the now tented towel over the young man's crotch as the focal point of his wife's trance-like stare. Then, she lowered her hand and stealthily lifted the towel free and dropped it to the floor at her feet. Now he was staring as well. My god, this kid was sporting a world class boner. Mike knew he himself was about average in size, and had never had any complaints, but damn, this teenager was a porn star in waiting. He shifted his vision from Ron's cock back to his wife, noting the lustful expression on her face as she gazed upon the youngster's erection. \n\nLil was motionless, visually sizing up the large sex organ jutting up from the lanky body of the passed out teen. It had looked thick and long back in the dressing room, as Ron's fist had pistoned up and down the shaft, but now from only a couple of feet away, without the obstruction of his large hand, it appeared even bigger. She glanced quickly to his hand, then to her own, noting the substantial difference in their size. My goodness, how big would it be in comparison to her own smallish hand? Lil looked back to Ron's face, where his expressionless features had remained unchanged since she entered the room, then her eyes dropped back to his penis. Before her conscious mind registered her actions, Lil's left hand moved to lightly touch Ron's thick shaft, tracing the prominent vein down its length before gently wrapping her fingers around the base. They failed to fully encircle the girth, and she gently tugged the rigid flesh to and fro as she viewed her grip from multiple angles.\n\nMike couldn't believe what he was seeing. Lil, his wife of 18 years, the ultimate church lady, and the woman who would not even show a hint of cleavage in public back home, was touching another man's cock. More specifically, she was taking advantage of the opportunity to fondle a passed out teenager's towering erection. Even though he was jealous of her obvious infatuation with a cock so much larger than his own, to see his normally prudish wife behaving in such a sexually depraved manner was an immense turn on. The latter emotion prevailed, as evidenced by his now steel hard dick. Still, he was torn by the feeling he should storm in and put a stop to her deviant behavior and silently watching, to see just how far she might go. Ultimately, he decided to give in to his lustful desires, and covertly observe his wife with the sleeping, nude boy. \n\nLil continued to lightly squeeze and maneuver Ron's penis, willingly suppressing the inner voice feebly espousing the sinfulness of her actions. Deliberately allowing her hand to slowly, yet steadily slip slightly further up, then down the shaft, Lil found herself mesmerized by the way the thick shaft felt both rock hard, yet somehow smooth and spongy. Perhaps she was more aggressive than intended, for Ron suddenly shifted his position slightly, and emitted a barely audible groan. Lil immediately released his penis, as if it were suddenly on fire. She took a step back and held her breath, her inner voice now regaining strength. What in the world was she thinking? Touching an unconscious teenager, even if he was 18, her actions were completely out of bounds. She stood there for about 15 seconds, making sure Ron wasn't going to wake up, then smoothly floated the sheet out over his nude body, allowing it to softly billow down until his penis was once again obscured from her sight. \n\nLil's body was on fire, her vagina practically oozing from the excitement of her brazen actions. She was actually glad Ron had moved and caused her to step away, because in her current state of arousal, she may not have shown the appropriate self control. Besides, Mike should be coming down to meet her soon. Thank goodness he didn't walk in during that 30 seconds of lapsed judgment. While he had been more than willing for the sexy dress and lack of underwear, Lil hardly thought he'd appreciate her groping Ron's big penis.\n\nMike sensed Lil, having subdued her lustful temptation, was ready to make her exit. He repositioned his erection as best her could, and untucked his shirt so that his tented shorts were concealed. He quickly slipped around the nearby hallway, and waited just a few seconds until he heard Lil quietly shut the door and begin walking toward his hiding spot. He then rounded the corner, as if he were just now coming to retrieve her.\n\nLil was still doing her best to process what had just happened back in the room. The obvious moral and ethical boundaries she'd crossed presented her the challenge of easing her culpability with an acceptable rationalization. Just as she was developing a position that such an unplanned and victimless encounter was hardly worthy of the degree of guilt she knew to be heading her way, Mike's voice startled her back to reality. \n\n\"Hey baby, already through checking on the kid?\" He spoke as evenly as possible, doing his best to conceal the excitement stemming from the recent voyeuristic discovery about his wife. He did take note of how her nipples looked even bigger than when she'd left the room, blatantly threatening to burst through her dress, presenting a tell-tale sign of her arousal.\n\n\"Oh, Mike!\" she exclaimed, \"you scared me.\"\n\n\"Sorry about that. So, what's his name, Ron. Is he okay?\" he said, anxious to see how she'd respond.\n\n\"Yeah, he's out cold, but looks to be doing just fine. Just remind me we need to stop back by after the game for one last check.\" Lil replied, hoping her guilt wasn't completely obvious. \n\n\"Too bad for the kid, he missed quite the show of you in that dress.\" Mike said, motioning to her breasts and plainly evident nipples.\n\nLil glanced down to confirm Mike's view, ashamed to see her nipples were even more prominent than before, \"What has gotten into you Mike Johnson? You sound like you'd be okay with me being dressed like this alone with another man.\" She answered, not wanting to address her hard nubs with him.\n\n\"Well, I don't know about another man, but I am not too concerned about a teenager, even though I can only imagine how thrilled he'd be to wake up to the sight of a sexy babe like you.\" Mike said, then grabbed her by the hand and led her into the nearby vending/ice room. \"As a matter of fact, I am thrilled right now by the way you look.\" \n\nMike pushed Lil back against the ice machine, began to kiss her neck and nibble on her ear, even as his hands slipped beneath her dress. His right hand caressed her bare ass cheek and his left dipped between her legs, all before she could put up any significant resistance. Finding her pussy hot and overly wet further excited Mike, and he pressed his now completely hard dick against her hip.\n\n\"My goodness, Mike, you are so naughty........ahh....but you have to stop......what if somebody comes by.....mmmm.....please, you have to quit.\" Lil's words conveyed reluctance but her body remained compliant to her husband's roaming hands. \n\nHe had to admit he was a little concerned about someone walking in on them as well, but Mike wanted to keep the heat turned up on Lil. The image of her so obviously aroused by the nude boy kept flashing across his brain, and he was increasingly excited by the thought of her, at least for tonight, being his sexy hot wife, hopefully willing to let loose of her normal buttoned down demeanor. Willing to take the chance of exposure for a few minutes longer, Mike dropped to his knees, slid his head beneath her skirt, and orally attacked Lil's panty-less crotch just as he had back in the room. \n\nLil's instinct was to push Mike away, but she'd been so horny all day, especially since first agreeing to wear the red dress, and now increased exponentially by the encounter with Ron, that she just couldn't force herself to stop her husband's talented and relentless tongue. \n\nHe could feel her hands, guiding his head beneath her dress. He had her pinned rather firmly against the cold ice machine, and his lips were locked around her clit as his tongue lapped steadily across the now hard little bud. Mike could feel her hips grinding in concert with his actions, and as she began to softly moan, he suspected she wasn't far from cumming. \n\nHaving been initially paranoid about being discovered, Lil's attention was now fully focused on Mike's tongue, to the point she failed to hear the approaching footsteps. Her eyes shut tight, she was bracing herself for a much needed orgasm, only to be jarred back to reality by the sudden voice in the doorway.\n\n\"Holy shit! Dude, check it out!\" Came the exclamation of the spring breaker peering into the vending room. Almost at once, another similar looking guy joined his friend, \"Damn, she is fucking hot!\" He said, in an equally excited tone. \n\nLil pushed Mike's head away, smoothing down her dress as she turned her back to the door without ever making eye contact with the unwanted audience. \"Oh my God! Mike, we have to get out of here.\"\n\nMike turned to face the boys, his face glistening with his wife's juices, and his own hard-on tenting the front of his shorts. \"Guys, no show here, head on, okay.\" Mike spoke in a stern yet friendly manner, hoping to avoid and confrontation with the younger, stronger boys. \n\n\"Ah, sure dude, no problem.......it's cool. I don't blame you......if my woman looked like that, I wouldn't make it to the room either.\" Said the first boy, giving Mike the dual, universal thumbs up approval of his actions.\n\nAs the second followed his friend, he paused, saying, \"Hey lady, if you want to dump the old guy for some real fun, come find us.\" A chorus of laughter followed from the boys as they moved down the hallway. \n\nWithout turning around, Lil said, \"Are they gone?\" She could feel her face flush from the utter embarrassment of being caught.\n\n\"Yeah honey, they're gone.\" \n\nLil turned to face Mike, then playfully, yet firmly, gave him a two handed shove to the chest, \"I told you we'd get caught! How humiliating!\" \n\n\"Listen baby, don't get all worked up over this. I mean, we're never going to see those two again, nobody back home will ever know about this......everything that happens on this vacation between me and you will be between us....and no one else.\" Mike began his task of soothing his wife, while at the same time hoping to keep her engaged in this potential sexual awakening he was seeing in her. \"Besides, did you hear what those guys said about you? About how sexy and hot you are, doesn't that make you feel kind of proud, I know it does me.\"\n\n\"Mike, really, you like the fact that two college boys saw us just now, and said I looked good? Don't you feel embarrassed?\"\n\n\"I think it is an exciting little adventure we just shared, and they didn't say you 'looked good', they said you were 'smokin' hot' and that you should dump me for them. I think I officially am married to a very sexy babe.\" Mike could see her demeanor softening. \"Come on, don't worry about it, let's go to the bar, I am starving and want to watch the game, then we'll go back to the room and finish what we've started here, okay?\"\n\n\"Well, okay, I'll let you off the hook, since we're on vacation, but you had better be ready to perform later.......cause I have to admit, I am definitely in the mood, thanks to the way you've been molesting me.\" Lil offered, although she was conflicted, to a degree, with her recent thoughts and actions versus her lifelong, dare she say, prudish behavior. She had never really thought much about sex beyond it being a responsibility of marriage, and she certainly didn't dwell on the various fantasies and kinks that were said to mold the sex lives of those she would consider 'sinners, but now here she was, delving into desires and perversions she'd never imagined back home. Lil strolled through the courtyard toward the bar, holding hands with her suddenly sex-crazed husband. Each step sent tingles through her core as her arousal was refusing to subside. As more than one man did a double take, she began to realize why so many women she'd looked down upon for all these years dressed the way they did. They got a thrill from being lusted after, just as she was now. She made every effort to hold her head high and not look down to see just how prominent her erect nipples remained, nor did she glance toward any of the men not so subtly trying to undress her with their eyes. \n\nMike was thrilled with the way Lil was handling herself with the heads turning to watch her walk past the pool. Finally at the door to the bar, Mike swung it open and immediately noticed it was about one half full, mostly with spring breakers from the University of Louisville, the Heels opponent tonight. With the majority of the crowd being guys, it didn't take long for many of them to give Lil the once over as they made their way to an empty table. \n\n()()()\n\nAbout 20 minutes after Lil had left Ron, still soundly sleeping beneath the thin sheet, Courtney and Shannon arrived at the front door to his room, accompanied by the property maintenance man. The hardest part had been tracking him down, but once the girls, each now wearing their skimpiest bikinis, flirted and teased the older Bahamian man, he gladly believed their story about Shannon's boyfriend passing out and leaving them locked out of their room, especially when he briefly saw the prone boy asleep on the bed. \n\nShannon was careful to lock the door behind them, flipped the switch to turn on a bedside lamp, then turned to join her friend. \n\nRon was still on his back, in the same position as when Lil left. His erection, however, had finally subsided so that the bulging sheet over his crotch was not the focal point upon entering the room. \n\n\"What now?\" Courtney whispered to Shannon. \"Do we just wake him up and tell him we want a taste of his yummy cock?\" She continued, only half joking.\n\n\"I don't think so, you know how he's been a little reluctant around us, I think he is all hung up on that girlfriend, what's her name, Tammie? I say we wake him, maybe get him stoned and tease him some, until he is more than willing to fuck us. We have until at least 11 before they get back, according to what you heard his mom say, right?\"\n\n\"Yeah, that gives us almost 3 hours, and I am already getting wet thinking about how long and thick his dick looked earlier today in that trailer.\" \n\nShannon sat on the edge of the bed, now observing the still noticeable bulge Ron's nearly flaccid cock was making beneath the sheet. She gently shook him, calling out his name, yet got no response. She looked to Courtney, gave a slight shrug of her shoulders, then more forcefully grabbed Ron by the arms, saying, \"Ron, hey Ron! Wake up......you ok.......wake up.\"\n\nFinally, he began to come around. He opened his eyes, still exceedingly drunk, and with his head pounding. \"Oohhh, what.?\" He finally managed to say, before turning to his side and slipping immediately back to sleep. \n\n\"Ron!\" Shannon spoke loudly, \"Wake UP!\" She clutched at his shoulder, turning him back on his back.\n\nAgain, he seemed to come around a little, shielding his eyes with his hand and saying, \"Huh, why are you here?\" As Shannon began to answer, he closed his eyes to the light, as it was exacerbating the pounding behind his eyes.\n\n\"It's ok, your mom asked us to stop in and check on you while she was gone this evening, you know, make sure you are doing alright.\" Shannon lied as Courtney made her way to sit on the other side of the bed.\n\nRon was roused again by Courtney's impact on the bed next to him, and he turned his head to see the other girl that had practically raped him on stage that afternoon, in front of everyone, yet his mind was still slow to comprehend exactly what was happening. \n\nSeeing the confusion on his face, Courtney said, \"Just take it easy. How you feeling? You want a drink of water? Maybe an aspirin?\" \n\n\"Oh, um, yeah, my head is killing me.\" Ron answered, his now squinting eyes for the first time registering that both girls were wearing very tiny bikinis. Walking to the kitchenette, Courtney's ass was on display, split only by the string running between her cheeks.\n\nCourtney went to get a glass of water and noticed the rum on the kitchen counter. She took the liberty of mixing some in a big tumbler of diet coke for her and Shannon to share. Even though it had only been a couple of hours since their tequila shots with Ron and Helga, they hadn't drunk as much as Ron, plus, she had no doubt that he was a light weight drinker. \n\nWhile Courtney was mixing the drink, Shannon grabbed her bag. \"Ron, I have just the thing for your headache. You ever get high?\" Not waiting for an answer, she pulled out a pack of Camels, and shook free one of several rather fat pre-rolled joints from amongst the few cigarettes. She'd gotten this pot from one of the many local dealers on the beach, and it was by far more potent that anything she'd smoked back in Bloomington. Anything more than three hits seemed to put her in a blissful euphoria....plus it made her incredibly horny. Hopefully it would do the same to Ron.",
        "Ron attempted to shake the still substantial alcohol induced fog clouding his brain. As Shannon lit the joint, he managed to croak, \"Ah, why are you here and where is everybody else?\"\n\nShannon blew the toxic smoke toward the ceiling before answering, \"Ron, like I said, your mom asked us to stop in and check on you. I think her and that oriental lady were going to dinner or something. Just relax and take a couple of puffs on this....it will make you feel better.\"\n\nRon was so drunk and sleepy, he hardly hesitated to take a hit on the joint. He'd never smoked pot before, but he knew kids that did. Right now, he'd do anything to get his head to quit throbbing. He tried to hold it in like he'd seen at a party once, but erupted in a series of coughs. As soon as the coughing subsided, he settled back into his pillow.\n\nCourtney crawled back on the bed, having to once again rouse him to hand him a glass of water. Absentmindedly taking a sip, he momentarily tried to orient himself to the day's events. He tried to recall what he had done that afternoon, and after only time for a few random images of various salacious situations, he began to fade back to sleep.\n\nCourtney and Shannon looked to each other, not quite sure how to keep Ron awake. As they each took a second hit on the joint, Courtney said, \"Well, if he is going to pass out again, let's give him a nice deep sleep and a very realistic wet dream.\"\n\n\"Are you serious........ooh, what a little slut you are.\" Shannon whispered. \"What now?\"\n\n\"Just follow my lead.\" Courtney replied, \"Ron! Come on, have another toke to make you feel better.\" She took him by the cheeks and urged him awake. He nodded his agreement, coming around about as much as he had to that point. Courtney turned the joint around so she would trap it between her teeth and shotgun a steady stream of smoke directly to Ron's mouth. \n\nThis time he had no choice but to inhale a substantial hit of the unique smelling smoke. The subsequent coughing fit seemed to rouse him even more. He asked for another drink, only this time, Shannon handed him her rum and coke. He took a big gulp, his half conscious condition retarding his ability to even recognize the rum laced drink. After swallowing, he plopped back to his pillow, again shutting his eyes from the bright lamp. \n\n\"Feeling any better?\" Courtney asked, passing the joint to Shannon. \"We promised to take good care of you, and that is what we plan to do. Let me get a cool towel for your forehead........you still look pretty hung over and clammy.\" Rather than walk around the bed to the bathroom, Courtney crawled over Ron's still prone body, intentionally sliding her leg ever so lightly across his crotch, effectively rolling his soft yet fat cock from his right to his left thigh. Ron didn't comprehend her actions, as he was drifting closer back to the slumber his body needed.\n\nWhile Courtney was getting a damp wash cloth, Shannon happened to spy Ron's prize bag of liquor and sex toys Beth had stored in the corner. \"Hey Court, check out the bag of goodies from this afternoon. I bet if Ron can't perform, we can find a nice dildo in there to help out.\"\n\nCourtney came back with the wash cloth, \"No chance, I am going to get some of that cock. Having to helplessly watch that bitch Helga bounce around on him made me vow to track him down and get a turn, and now is our chance.\"\n\nShe crawled back up on the bed, \"I am starting to feel the ganj, let's have one more toke, and one more for Ron too. That should be plenty to get him buzzed enough for us to have a little fun without him putting up a fight.\" \n\nShannon nodded her agreement, and repositioned the joint so she could administer a shotgun blast to her friend, then to Ron. They managed to stir him enough to take another substantial hit, then again let him chase his coughing with a drink of the rum and coke. Ron barely comprehended the actions of the girls hovering near him on the bed before his eyes shut to once again escape the bright light and he dropped his pounding head back to the pillow.\n\n\"Okay, let's wait a few minutes so he can get in a deep sleep.\" Courtney said, \"and then as soon as we get him hard, I am going for a much needed ride on that thing.\"\n\n\"Why do you get to go first, you'll make him cum and leave him useless for me.\" Shannon shot back. \n\n\"Okay, okay, I hear you.........I know, let's check the stuff from earlier, maybe find some toys to help us keep this fair.\" Courtney said, hoping that if she found a unique vibrator, Shannon might be content to let her have Ron first. \n\nShannon was not thinking like Court, instead looking for something entirely different. Sorting through the bag of goodies, she'd pull out select items to laugh about with her friend, and was about to give up when at last she found what she'd hoped for.  \n\n\"Here we go........just what our boy here needs.\" Shannon squealed, the pot buzz now kicking in nicely. \"I was hoping there'd be one of these.\" She continued, now holding up a leather cock ring encased in its clear plastic packaging. \"Ooh, and these too, they're perfect.\" She almost yelled, thrusting a box of condoms skyward in her other hand. \"Check it out Court, these rubbers say they're coated with an \"endurance\" cream. Rick got something like this once, and it took him forever to get off. But, I think we should still take turns, you know, switch up like every 5 minutes or so, just to be safe, okay?\"\n\nCourtney wasn't that thrilled with agreeing to the tag-team agreement, but it was only fair. \"Okay, so what first, the cock ring or the rubbers?\" \n\nShannon was practically squirming with the anticipation. \"Both, Rick also liked cock rings, and he had a few. I liked them too, they made him seem fatter and firmer, plus if I really paced him, his erections would practically never go away until I let him cum. Let me get this one open and we'll put it on before it gets hard, then the condoms.\"\n\nShannon pulled the sheet from Ron's body, so that he was spread across the bed completely nude, and tossed it to the corner, unintentionally covering the 'goodie' bag in the process. She crawled between his spread legs as Courtney took a ring side seat next to the passed out boy. \"Good Lord, look at his cock, long and fat, and he's not even hard. This is going to be fun!\" Shannon squealed. \"Try to wake him one more time, just to make sure he's out cold.\" She now whispered, suddenly concerned with the decibel level of her previously unrestrained voice.\n\nCourtney shook Ron, gently at first then more aggressively, calling out his name a increasing levels as well. He didn't even murmur a word as his intoxicated mind and body were unresponsive. \n\n\"Good,\" Shannon said, as she began to rip the package open. The black leather ring, fell to the bed just below Ron's balls. It was less than in inch wide, and had 4 holes closer to one end, and a about a half inch long rod protruding near the other end, obviously to be inserted through one of the eyelets. Shannon picked it up and experimented with how it hooked together. \"I don't get it, Rick's was just solid rubber that rolled down over his dick. How does this stay together?\"\n\nCourtney picked up the discarded packaging, looking for some sort of directions, \"Ha, here is how, there is a little pad lock and key in here.\" She handed them to Shannon. \"See the hole in the little rod, the pad lock will slip in there to lock it all in place.\"\n\n\"Cool,\" Shannon said, \"Now let's just see if I can get it on.\" She said, tugging Ron's rare flaccid penis up from his body about 5 inches. \"Here, hold him Court, but don't try to get him hard, just hold it up while I fasten this.\"\n\nCourtney eagerly wrapped her fingers around the head of Ron's cock and kept the tension adequate to give Shannon the room she needed. She looped the leather around the base of the still rather thick shaft, pulling it snug until the stainless steel rod slipped through the third eyelet in the ring. After quickly slipping the tiny lock through the hole in the rod, she slid it shut until it clicked. Both girls sat back to fully examine their handiwork. Ron's cock had grown slightly from the activity, and flopped sideways over the leather now encircling the base of his dick.\n\n\"Now, let's get him hard.\" Courtney nearly purred. The marijuana buzz seemed to intensify the sensitivity of every nerve in her body, as she gently grasped Ron's cock and lowered her mouth to plant a light kiss on the large mushroom shaped head.\n\n\"Let me play too.\" Shannon squirmed in close, squeezing her thighs tightly together in response to her tingling pussy. She leaned in and began to lick Ron's balls and randomly flick the tiny lock hanging down from the leather ring.\n\nAs Courtney became more daring in her actions, she looked to Ron's face, pleased to see he was still deep asleep. She could feel him rapidly growing more erect as she closed her lips over the mushroomed head and gently swirled her tongue side to side. Even in his unconscious state, the day's teasing and Beth's sneaky Cialis dosage led to a near immediate response to the co-eds oral attentions. \n\nCourtney could feel Shannon kissing up the lengthening shaft, until her kisses eventually traveled from Ron's hard cock to the soft skin of her own face. Shannon planted light kisses across Courtney's cheek until her soft lips and damp breath settled against her friend's ear. \n\n\"I can't stand to wait any more, he's hard enough now......let's get the condom on and take a ride. Who's first?\" She whispered through labored breaths. \n\nCourtney pulled her mouth free of the now hard cock with a noticeable popping sound. Both girls looked again to Ron, each still mildly surprised to see the continued serene expression on his sleeping face. Satisfied the owner of their lustful obsession was still out cold, they turned their attention back to his stiff penis, the leather ring now urgently gripping the shaft just above his balls. \n\n\"Is it supposed to be that tight.....it almost looks painful.\" Courtney commented, as Ron's cock was obviously impacted by the cock ring now being strained by his expanded girth.\n\n\"Oh yeah, it is perfect. The whole point is to keep the blood flow from leaving his dick. When Rick would wear one, his cock would always look like this.....well, but not nearly this big.\" Shannon giggled. \"Look at the head.....it's almost as big as my fist.\" She continued, holding her petite, clenched hand next to Ron's blood engorged cock head. \n\n\"Hand me the condom.\" Shannon directed to her friend. \n\nCourtney tossed the unopened three pack box of Trojans onto the bed next to Ron's leg. Shannon quickly ripped into the packaging until she held one of the lubricated rubbers over the erection wavering above the lean body of the prone teenager. She could feel the coating of desensitizing lubricant on the inside as she pressed and rolled it against the tip, until the rubber ring at the base of the condom was able to snap snugly against the thick shaft, just below his spongy, purplish colored mushroom shaped head. She unrolled it completely, the fully extended condom stopping more than an inch from the tight leather cock ring. \n\nAs Courtney gathered the condom box, preparing to toss it back toward the goodie bag in the corner, Shannon spoke up, \"Wait, I have an idea.......why not put all three on him, that way between the cock ring, desensitizing cream and three rubbers, we might be able to fuck him as long as we want, watcha think?\"\n\n\"Genius,\" was all Courtney said as she began to open then encase Ron's long prick with the second, then third prophylactic. \"I think for having such a brilliant idea, you should get the first ride......but remember, only 5 minutes, and you have to promise to take it slow so we make him last, even with all the toys helping us, agreed?\"\n\nShannon was untying her bikini as she answered, \"No problem, I just can't wait to feel something so big sliding inside me........I've never had a guy anywhere close to the size of our boy here.\" By the time she finished speaking, Shannon had already climbed on the bed and was straddling Ron's triple coated cock. \"Do you think he might wake up?\"\n\n\"I doubt it, at least not for a while. He took some healthy hits, plus a few gulps of rum. All that on top of the buzz he already had, I'd say he's out pretty good.\"\n\n\"Okay, well here goes.\" Shannon said, lowering her already wet pussy until the tip of Ron's cock nestled between her labia, poised at the throbbing entrance to her canal. She pressed down slightly, then paused, moaning softly as she adjusted to the feeling of being so stretched. \n\nCourtney laid her head on Ron's chest, \"God, this looks so sexy.\" She watched intently as her friend dropped down more firmly, the condom covered cock stretching her open as about 1/3 of the thick erection was engulfed within Shannon's sexy body. \"Go on, take it all.\" Courtney urged.\n\nShannon did as the bikini clad co-ed lying before her asked, and steadily dropped her body to take another 1/3. The girth pressed against every square millimeter of her inner walls, stimulating the countless nerve endings already primed to respond by the erotic anticipation of the situation and the marijuana buzz impacting more brain cells with every passing minute. \n\nCourtney, likewise, was on fire with excitement, \"Go on, take it all, I want to watch that fat cock disappear inside you.....you can do it.......please, let me see you take it!\" She said, while at the same time placing her left hand on Shannon's hip and tugging her downward.\n\nShannon gave in to her friend's urging, and sat fully down on the impressive erection already driving her mad with desire. She could feel the leather ring at the opening of her pussy, confirming she really had taken him almost to the hilt. Having such a thick cock deeper than she'd ever experienced pushed Shannon over the edge, and her body began to quake with what she liked to call, a \"starter orgasm\". She usually only got a \"starter\" from really good oral sex, but as the subtle quiver worked its way over her body, Shannon could hardly wait to commence a serious fucking of young Ron. \n\n()()()\n\nLil and Mike were still sitting at the high top bar table, rooting on the Tar Heels. It was not quite half time, and Mike was already on his third beer. Normally Lil would have nagged him by now to slow down. He would usually only have a couple of beers, always in the privacy of their own home, while watching UNC. Lil would throw a fit if Mike ever went out drinking in public, for the pious judgment whispered behind her back would make going to church almost unbearable. But tonight, on the island far away from prying eyes, she had actually agreed to go to the hotel bar to watch the game. \n\nOn those rare occasions, in their own den, when the beers started to go down faster than normal, she'd admonish him into slowing down so as not to get drunk. Drinking alcohol, while not permitted within the Baptist Church, was actually referenced in the bible, in the passage about the wedding and the turning of water into wine, so Lil believe a drink or two was probably acceptable, but certainly not to the point of getting drunk. \n\nTonight, however, was different. Not only had Lil refrained from chastising her husband, she'd actually given in to his persistent suggestion that she should try a drink as well. His argument, just as used to talk her into the red dress, was that they were on vacation, with no friends or family around, so they should cut loose a little. Given the way she had already somewhat embraced the sexy dress and Mike's perverted sexual advances, Lil decided having one of the fruity island drinks was likely to be the least of her transgressions for the day.\n\nShe actually liked the frozen fruity flavored concoction Mike had brought back from the bar. What she didn't know was that her dear husband had lied when telling her it contained very little alcohol. The truth of the matter was that after Mike had wormed his way through the U of L students all hanging around the bar, catching lots of good natured ribbing for his UNC shirt, he had asked the bartender for a nice strong drink, but one that would disguise any alcohol taste. The guys surrounding them all turned to look at Lil when they overheard Mike explain his request to the barkeep with the fact that his wife never drank. She had waived nervously in response to the grinning group all staring at once. The bartender mixed a multi shot drink that, as promised, tasted almost disgustingly sweet and fruity to his beer accustomed taste buds. \n\nWhen she had asked as to why all the 'boys', as she put it, had turned to look at her, he had simply told her that one of them had noticed he could see up her skirt and she was commando, so the rest, of course, turned to get a look. As much as she had suspected he was lying, he refused to give in to her persistent efforts for another, less hedonistic reason for the attention she had received, even as the lingering glances continued sporadically from several of the young men. Mike found it interesting that she had responded to his explanation with a playful refusal to believe his story, rather than getting angry with him, or becoming self conscious about her newly acquired sexy appearance. \n\nThat had been almost 30 minutes ago, and now, his wife's drink was almost gone. It was obvious to him that she was getting a pretty good buzz, however she seemed clueless to recognize her own rapid speech and giggly demeanor as she repeatedly insisted the tasty sweet concoction was having no impact on her at all. Mike knew better of course. Even had it not been for his knowledge of how her drink was mixed, the fact that she was now allowing his hands to sporadically roam over her legs, neck and bare back were proof enough. Such public displays of affection were not the type of behavior his buttoned up wife would normally tolerate. But now, with at least one of the college guys seemingly always glancing her way, Lil seemed oblivious to his still mostly innocent, husbandly strokes of affection. \n\nMike was truly interested in the game, but at least part of his mind was continually aware of his interaction with Lil and her response. He noticed in his peripheral vision how she would periodically glance to her chest, seeming to confirm her nipples were still fully erect and threatening to rip through her thin dress. He also noticed she was no longer as diligent about readjusting her dress over her legs when his caresses would push the hemline higher up her thighs. \n\nAs halftime approached, and Mike's mind managed to move solely to the TV for the final 20 seconds, Lil, clueless as to the game situation, leaned into her husband's shoulder and whispered, \"Mike, those boys keep staring at me like they know me or something, do you think the one in the white cap might have been on the snorkeling boat with us?\" she asked, \" He just looks so familiar.\"\n\nMike glanced at the one she was talking about, noticing how he not so subtly kept glancing at Lil's tanned legs beneath the high-top table. He knew perfectly well why they kept looking at her, and he doubted recognizing her from an earlier encounter had anything at all to do with their interest in his wife. He truly couldn't remember what the guys on the boat looked like, but liked the idea of Lil making that connection, whether she was correct or not. He remembered how obviously turned on she had been with the young man kneeling at her feet, and decided to play along to gage her reaction. \"You know, I think you are right. I am pretty sure he is the one that helped out with your flippers, do you think?\"\n\n\"Um, yeah, maybe. It is a lot harder to tell for sure when they have clothes on.\"\n\n\"Oh really, you want me to go ask them to strip down for you? Would that make it easier?\" Mike responded in a good natured tone, lightly tickling his buzzed wife at the ribs, just below her breasts.",
        "She giggled so loudly that several others at the bar turned to look just as she tried to squirm away from Mike's menacing fingers. Her legs parted, her dress sliding up high on her thighs as she slid off the high chair. She realized the near flash she had provided only after standing clear of her husband's attack. She smoothed her dress back down to protect her modesty, but couldn't resist glancing up to see if any of the college guys at the bar had noticed. She felt a jolt of excitement as she made eye contact with the boy in the white cap, just as his gaze was moving from her legs to her face. He gave a slight grin and tipped his beer in her direction. \n\nShe did her best to conceal her reaction, and leaned close to Mike. \"I have to go to the little girls room, be right back.\" She said before turning to somewhat unsteadily make her way down the long hallway beneath the 'restrooms' sign. \n\nMike hadn't missed any of Lil's awkward dismount from her seat, nor the reaction she tried to hide upon her realization that at least one of the Cardinal fans had gotten a pretty good view as well. He began to think about how unbelievably exciting this day had become, and the surprising way his wife was allowing him to draw her out sexually. As his mind worked, he glanced around the bar, confirming that the handful of women that had been there when the game tipped off were now gone. Lil was the only female in the bar. Knowing that as a result, she'd be alone in the ladies room, Mike decided he could use a quick bathroom break as well.\n\nMike hurried down the hall, and rounded the corner, anxious to get to Lil before she exited the bathroom. He heard nothing from the men's room, and passed it by to stand just outside the ladies door. He could hear the sink water running. Playing the odds that Lil was indeed alone, he pushed open the door and step inside.\n\nUpon seeing her husband in the mirror over the sink, Lil turned quickly to confront him, \"Mike, what are you doing in here.......You can't be in here.\" Lil whispered as if someone would overhear. \n\nMike didn't say a word, stepped quickly to the sexy vision that was his wife, and kissed her passionately. As he broke free from her lips and began to nibble and kiss her neck, she said, \"Mmm, that feels good, but we can't do this, not here, what if someone comes in?\"\n\n\"You were the last woman in the bar, nobody will bother us.\" He took her hand and guided it to his tented shorts. \"Look what you've done to me.......you look much much too hot for me to leave now.\" \n\n\"Oh my,\" Lil panted as Mike resumed his oral attack, now kissing his way over her bare shoulders. As he lightly sucked on the nape of her neck, his hands began to deftly unbutton the dress from the bottom up. He had them undone past her belly button before she noticed what he was doing.\n\nHalf heartedly trying to hold her dress closed over her pantyless crotch, Lil purred through her labored breathing, \"Michael, you are so naughty. Are you planning to make love to me right here, in the ladies room?\"\n\nMike could hear the desire in his wife's voice, and he continued with the buttons as he responded between heavy breaths. \"No, we are not going to make love.....I am going to fuck you like we haven't fucked in years!\" As he spoke, he easily lifted her petite frame so that she was sitting on the edge of the counter.\n\nLil could feel her body respond to her normally reserved husband's crude language and aggressive actions. Her already wet pussy suddenly felt ready to explode and the sexy red dress was now entirely opened down the front of her body. She hadn't even realized Mike had freed his penis until she felt him easily slide past her slick opening and impale her with all 6 inches. He then grabbed her ass and lifter her from the counter. As Lil instinctively wrapped her legs around his waist and her arms across his shoulders, he turned and pressed her against the closed door. \n\nThe sight presented Lil in the mirror as she gazed over Mike's shoulder only served to heighten her hedonistic response to the situation. His shirt tails hung halfway down his ass, which she could see flexing as he pounded into her, and his shorts had dropped down to his ankles. All she could see of herself was her tanned arms and legs as they snaked around his torso, and of course the dress. The red dress that had to some degree, help ratchet up this evening of sinful delights was hanging loosely at their sides. As Mike began to more urgently impale her against the door, she made eye contact with her image in the mirror. Her flushed skin and disheveled hair only accentuated the look of unbridled lust on her face. Mike was right, they were not making love, she was getting fucked, and she was loving it!\n\nMike slowed slightly and pulled his upper body away from Lil. He wanted to see her nipples. They were as swollen and as long as he could ever remember. He dipped his head and nibbled on first one, then the other. Lil's moan confirmed her approval, and he began to suck and bite a little more forcefully on her pinky sized nubs. He was eliciting more moans and groans as he began lifting and lowering Lil onto his rock hard dick, while maintaining the attack on her breasts. He was about to really begin pounding her against the door for all he was worth, when they both froze as the loud voices rounded the hallway corner. \n\nThey were motionless, hearing the obnoxious C...A....R....D....S cheer from the increasingly drunk Cardinal fans heading to the bathroom. Mike listened for them to all enter the bathroom, and was about to resume when they heard the men's door suddenly burst open again, and a lone voice saying, \"Screw you guys. I can't wait for you pussies, I'll go piss in the ladies' room!\" \n\nLil gave Mike a panicked look and immediately began to squirm free from his grip. His cock quickly slipped free as she dropped to her feet. Mike leaned his body against the door just as it began to push open, \"tell him 'occupied'\" he silently mouthed to his wife.\n\nShe stood, clutching her dress together at the waist, and said in a loud if somewhat shaky voice, \"Ah, someone's in here right now!\"\n\nImmediately the pressure on the door ceased, and the potential intruder uttered a simple 'Sorry', as they heard him turn to barge back into the men's room.\n\n\"That was close.\" Lil whispered, still behaving as if they were on the verge of being exposed.\n\nEven though the sudden interruption had successfully zapped much of Mike's erection, his mind was still buzzing from the thought of Lil's near exposure to yet another college boy. He grabbed her opened dress and pulled her close for a passionate kiss, his hands beginning to once again roam over her body. As his dick began to expand once again, he dropped his lips to Lil's ever erect nipples, and as he alternated licking and sucking each breast, managed to say, \"Let's see now, where were we?\"\n\nAs much as Lil's body was screaming for Mike to resume, her mind just couldn't get past the fact that she had almost been spied for a second time today while having sex. She just couldn't risk it again, and told her obviously disappointed husband as much. \n\nIt was apparent to Mike that Lil remained extremely aroused from their bathroom escapades, yet he knew she was not going to let him put her in risk of being caught yet again. Regrettably accepting her decision, Mike quickly refocused his mind back to their current situation and the night remaining. He loved the idea of sending Lil back into the bar full of guys, literally teetering on the edge of orgasm. Plus, he definitely wanted her horny and buzzed when she went back to check on the passed out kid.\n\n\"Okay, I understand.......just let me button up your dress for you.\" He said, kneeling before her and reaching for each side of the dress. Rather than immediately do as he promised, Mike, as he had done several times already, pressed his face to her damp crotch, hungrily lapping at her as his hands slid around to clutch her ass, thus limiting her ability to escape his relentless oral assault on her nearly gushing pussy.\n\n\"Oh, ooohh, Mike, you .....oh my, you have to stop.\" Lil whimpered even as she leaned back against the counter to steady her wobbly legs and allow him better access to her exposed sex. \n\nMike knew he had her now. Her resolve not to be caught was quick to crumble when being so quickly pushed to the brink of a much desired orgasm. \n\n\"MMmmm, yes, we can be quick, ....just keep doing that.\" She practically begged.\n\nAs Lil's restrained moans grew more urgent, Mike's tongue worked even more feverishly over her swollen clit. Just as he felt her stiffen in anticipation of an intense release, he pulled free, saying, \"Did you hear that? I think there might be someone in the hall....I guess you are right, we really should go.\"\n\nLil was panting heavily, so close to cumming. She didn't hear anyone, but knew she should follow Mike's advice, and she tried to compose herself, even as every nerve in her body seemed to tingle and ache for more. \n\n\"Let me help with your buttons,\" Mike offered, still kneeling at her feet. He grabbed the bottom button, and as he pulled the other side of the dress closer, he paused, allowing his mind to entertain some decidedly naughty thoughts. Lil was working on the top buttons, and didn't pay any attention when Mike slipped his ever present, Swiss Army knife from his pocket. He deftly flipped open the scissors and just as adroitly snipped the bottom button free. The next button was probably no more than 3 inches below her crotch. That should make for an enticing view of her legs, he mused.\n\nHe fastened the remaining buttons, and stood to admire the sexy image she presented before him. Her disheveled hair, flushed face and obscenely displayed nipples practically screamed 'SEX!', and guaranteed she'd draw second and third glances. Further down, her tanned legs continuously played peek-a-boo beneath the flowing red dress. \"Wow, look at how smoking sexy you are.\" Mike said, turning her to face the mirror. As he joined her eyes to roam over her upper body, he noticed how she seemed to lock onto her own nipples. He waited for her to voice another objection to the extreme display of her previously very private breasts, but to his surprise, she seemed to accept her appearance and turned, ready to go back to the bar. \n\n\"Uh oh, hold tight there, you have a loose thread. I'll get it.\" Mike reached for the top button before she could even look down. He pulled out the knife once again and as before, snipped the top button free. The snug dress instantly parted a little wider, down to what had been the second button, located at the bottom edge of her breasts. The top of the dress now flapped open, with no choice but to reveal a substantial portion of each fleshy orb, right up to the edge of her areola. \"Opps, sorry about that.\" He said while smiling like the cat that ate the canary. \n\n\"Michael! What have you done? Do you really expect me to go back out there, like this?\" Lil snapped. \n\n\"Oh honey, it's not really that much of a change, besides, it's not like every guy at the bar hasn't been staring at you all night anyway. Remember, no one knows us and we'll be leaving them all behind in a couple of days. Let's just have a little sexy fun tonight, okay?\"\n\n\"Well, I don't really have a choice, now do I, since you've gone and cut the button loose.\" Lil answered him, doing her best to hide the jolt of excitement surging through her body as a result of Mike effectively forcing her to show off due to this devilish wardrobe modification. \"We might as well get this over with.\"\n\nMike, however, wanted to push just a little more, curious to see how she'd respond. \"Okay, but I have to stop in the bathroom on the way. Here, take this $20 and go up to the bar and get us two more drinks.\"\n\nLil stared at her obviously perverted husband for a few seconds, without saying a word. After the way he'd pushed her all night to be a tease, she wasn't all that surprised he wanted her to mingle through the crowd of boys to get to the bartender, and if this is really what he wanted, if he was getting turned on by her dressing sexy for other men, or boys, to see, well...she'd do her best, at least for tonight, to play along. \"Okay honey, I'll be at the bar.\" She leaned in close and gave him a long, deep kiss, then took the money from his hand and turned, leaving him alone in the women's room. \n\nLil wasn't sure where her newfound courage, or maybe a more descriptive word, nerve, was coming from. Yet, here she was, driven to the edge of orgasm by her husband, and practically naked by her normal standards, in a bar full of college boys, about to let them ogle her while she ordered a drink. And now, with the way Mike had removed her button, her breasts were blatantly on display, as if her freakishly long nipples didn't already draw enough attention. She was hesitant to admit it to herself, but knowing this thin dress so unashamedly displayed her nipples had been stoking her inner desires all night. Despite her lifelong attempts to conceal her boobies, the day's sexual awakening was making her feel like a desirable woman, and that fact that Mike was essentially forcing her to purposely exhibit herself, especially to such handsome, younger men, was only heightening her body's response to this erotically charged evening. \n\nAs she continued to make her way to the bar, Lil eventually glanced downward, surprised to see so much of her legs on display. She quickly made the connection that Mike had secretly removed the bottom button, and just as quickly decided that as with her cleavage, what was done was done. Lil would just have to make do with her dress as it existed after her husband's handiwork. As she neared the group gathered near the bar, her body was almost quivering from the excitement of what she was doing, and for the second time in the past few minutes, she caught herself thinking, 'okay babe, if this is what you want, I'll do my best to live up to your fantasy.\"\n\n()()()\n\nCourtney was preparing to take her fourth turn on Ron's steel like dick. She and Shannon had actually resorted to timing each other, making a game out it. The 5 minute segments were too short for either of them to reach orgasm, especially with their agreed upon plan to take things rather slowly. The good thing about their plan was that Ron wasn't cumming either. Of course, the desensitizing condoms and the cock ring likely would have prevented his orgasm even if they fucked him with all their might. \n\nThe girls were extremely turned on, both from the uncommon size of their passed out partner's penis, and from the added stimulus of the very potent pot. Watching the thick shaft stretch and penetrate the relatively tight confines of each other's pussy was incredibly exciting and kept each on edge until their turn to climb back on. \n\nThis round, after only a few strokes, Courtney began to pick up the pace. Shannon thought about telling her to slow down, but knew how frustrating it was to maintain a slow pace. She looked so sexy, now rapidly and steadily rocking back and forth, Shannon just couldn't resist leaning over to take one of her erect nipples between her lips. Courtney gasped as she felt the soft lips and tongue work their magic on her sensitive breast. When Shannon turned things up another notch by moving her slender fingers down to stroke her friend's clit, Courtney moaned loudly and started to grind away, cumming all over Ron's long cock buried deep inside her. Eventually, her orgasm faded, and she gradually slowed her movement until she collapsed across the still sleeping teenager's chest. She wanted to lie there in the afterglow of such an intense sensation, feeling the still pulsing erection clutched within her cunt. Shannon had different plans however, and firmly pushed her to the other side of the bed, Ron's condom coated cock popping free to waver over his pubic hair, which was now completely wet and matted from Courtney's orgasm.\n\n\"God, that was so hot to watch, and look at his cock. It looks even bigger now than before. I guess that cock ring really works.\" Shannon exclaimed as she swung her leg over so she was facing Ron's feet. \n\nShannon clutched Ron's calves and asked Courtney to reach over and guide the rock hard prick to her soaked pussy. She had little trouble in taking the slick latex past her tight opening, and the girth moved smoothly, deeper and deeper, even though she continued to feel abnormally stretched and full. After settling fully down, Shannon was quick to follow Courtney's lead and wasted little time before moving past any sort of self-restraint. She would lean forward until most of the long shaft pulled free of her clutches, then slam back hard against Ron's hips, pounding the engorged head into depths never before reached. \n\nCourtney watched intently, enthralled by the sight of Shannon's sexy round ass working its magic. Suddenly, she noticed Ron beginning to moan and move his head about. He babbled incoherently, but Courtney, lost in her own pleasures, never noticed.\n\n\"Hey, Shan baby,\" Courtney sternly whispered, while touching her friends back, \"Ease up, I think Ron might be waking up.\"\n\n\"Shit....No.......I am so close. Don't make me slow back down again.\" \n\n\"Just sit tight, I will try to help you finish. Lean back and watch this.\"\n\nShannon did as instructed, her hands resting on the mattress, on either side of Ron's torso, allowing a few inches of his cock to slide free, but most remained snugly in her vice-like grip. While she got use to the slight change of position, Courtney moved around between Ron's legs. She glanced past Shannon's semi-reclined body to confirm that Ron appeared to be settling back to his slumber. She then leaned forward to lightly kiss and lick across first Shannon's left boob, then her right. After only a few seconds, her kisses trailed down her friend's taut abs until she was teasing her with random kisses moving ever so much closer to the union with Ron's cock. \n\nCourtney could see the thick shaft escaping the bottom edge of the condoms, as they failed to cover the last two inches of Ron's cock. Upon her close visual inspection, the cock ring looked excruciatingly tight, yet the tiny lock gave no indication it would give way. Shannon was beginning to squirm around more and more, her stuffed cunt clutching Ron's dick as her hips swayed in varying directions. Eventually, Courtney grasped Shannon's thighs, to slow her movement, then kissed her way the last few inches to concentrate on her swollen clit and began to gently coax from her the much needed and anticipated orgasm that had been steadily building for the past hour. \n\n()()()\n\nMike was just making his way down the hallway, only a few seconds behind Lil, anxious to see if she would have the guts to do as he asked, and go up to the bar for drinks.\n\nThe second half of the game was underway, and it took a few seconds before any of the Cardinal fans noticed her petite 5'1\" MILF standing behind their much larger frames. Once noticed however, it was as if the red sea parted for her to move right up front. Just as quickly the mass of male bodies closed in around her, immediately obscuring Mike's view of his wife. \n\nHe hadn't really planned this thing out, so he stood there for a moment, unsure if he should try to join her at the bar, or sit back at their table and wait for his drink. Even though he couldn't see Lil, Mike could see the way the majority of the male heads were turned toward her, rather than the TV screen. He could also see the bartender now standing directly in front of the spot he assumed to be occupied by his tiny wife. With emotions ranging from, what he realized was a perilously perverted pride, to an equally perverted disappointment at being obscured from watching Lil's reaction to being so obviously on display, Mike stood there, trying to discern the jumble of conversations emanating around the bar. Eventually he forced himself to the table, to await his wife's return. ",
        "Engulfed was the word that immediately came to Lil as the group formed a tight semicircle around her. She glanced back briefly, confirming her separation from Mike. No one was being inappropriate, or touching her, however the way they whispered to one another and nudged their friends out of the way for a better viewing angle did not go unnoticed. \n\nMaybe it was her naivet\u00e9 at being viewed as a sex object, or perhaps the age difference between her and the boys, but Lil didn't feel threatened, even though she was acutely aware of the lustful tension surrounding them. What she did feel, however, was an intense tingling from head to toe, as if she were ready to explode from the excitement of being surrounded by so many attractive, fit college boys, each of them seemingly undressing her with their eyes. It felt as if her body's only outlet from the mounting arousal building within her was the slippery secretions now trailing to her thighs, and the almost aching hardness of her thick nipples. She hadn't dared glance down to them in the middle of this crowd, for it would have confirmed to her admirer's she knew the image she was providing them, and even though a woman would have to be an idiot not to know, it just seemed less blatantly slutty to play along as if she were unaware.\n\nAs she stood there, a full foot shorter than many of the boys crowding around, she could almost feel their eyes trying to pry beneath the edge of her dress, which thanks to Mike, was so enticingly close to exposing her areola. Thinking of Mike, and how he would want to know the details of what happened here at the bar, she decided to play along with his obvious, if not stated, desire for her to be a tease, and she stepped up on the brass foot rail, then leaned across the bar to order the drinks. \n\nBefore this trip, Lil would have easily declared the best feature of her body to be her butt. Even though Mike had managed to unleash her nipples, so to speak, while here on the island, her whole life she had done her best to mask them. Her bottom, however, was more difficult to conceal, and after all, having a bubbly butt showcased in a nice fitting pair of slacks was far less taboo than walking around with two gigantic nipples tenting your clothing. How her ass would look had been the lone vain thought Lil would have when getting dressed to go out in public, and over the years, she had learned that certain outfits would never fail to draw at least one second glance when strolling through the mall. \n\nSo now was the time to get back to her comfort zone, so to speak. She knew that this dress was clingy and thin enough to present a nice image as she leaned a little further across the bar. With her arms crossed beneath her breasts, the bartender was in no hurry to end their conversation about what drink she might like. His eyes kept drifting to her cleavage, increasingly enhanced from the upward pressure of her forearms.\n\nBy the time Lil had dropped back to her feet, she had heard numerous, not so quietly whispered, comments about her bottom. She could feel her thighs growing slicker and only hoped the aroma of her excitement wouldn't become noticeable. She stood there, waiting for her drinks, not really sure how to proceed, when the white baseball cap appeared at her side. He nudged one of his friends from the nearest barstool, and offered it to her.\n\nAs she placed her foot back to the brass foot rail to leverage herself onto the stool, he stepped closer, saying, \"Here, let me help.\"\n\nBefore Lil even comprehended his words, he wrapped his hands almost completely around her tiny waist, and lifted her to the seat. By the time she was forming the words to object to his forwardness, his hands were pulled free, and rather than an admonition, Lil heard herself simply saying, \"Thank you.\"\n\nFrom habit, she went to smooth the dress over her thighs, shocked to see that very little material remained covering them. Evidently, the effect of the boy lifting her was that her dress had pulled up higher on her body. Between it bunching slightly at her waist and the absent button, the split over her legs stopped just an inch or so from her crotch. Lil's reaction to the fact that the boys might be able to look up her dress, even though her legs were pressed firmly together, was to cross her right leg over her left. While this served to conceal the juncture of her legs, it also highlighted the amount of tanned skin escaping the now incredibly revealing dress. She was contemplating how best to preserve her modesty, for even though she was willing to dress sexily and even be a tease for her husband, exposing herself completely was not on the agenda, when her thoughts were interrupted once again by the white baseball cap.\n\n\"Hi, I'm Brad,\" he said in a polite manner, \"I think we met on the boat today......I was your flipper assistant.\" As he spoke, he seemed unable to keep his eyes from running up and down her body.\n\nLil noticed his roaming eyes, but really, wasn't that what Mike wanted. She knew her drinks should be ready soon, so decided to sit tight, and let this boy, and his friends, continue to mentally undress her. And honestly, Lil knew it wasn't all just for Mike, as her body felt as if it were smoldering from within. Her reaction was only intensified by the fact that the two boys, a passed out Ron and the white baseball cap, that had ignited her dormant sexual being, had crossed her path yet again. Now, standing here between so many handsome and attentive young men, Lil relinquished any effort to prevent her mind from sinfully entertaining increasingly depraved thoughts. \n\n\"Oh yes. Nice to see you again.\" Lil responded, trying to remain as proper as possible, despite her sexy attire and her mind's immoral inclinations.\n\n\"I hope you don't mind me saying, but you look incredible. What a great dress.\"\n\n\"Ah, well, thank you. My husband bought this for me, I mean, it is not something I would ever go out and buy.\" She rambled; taken aback by his compliment, and despite her own erotic thoughts, feeling compelled to distance herself from such a wickedly sinful dress. \n\n\"Well I think all the guys in this place would like to thank him for getting it for you. I remember him from the boat, he asked me to help with your flippers. Is he still in the bar, or did he leave you here, alone?\" Brad said, opportunistic hope evident in his voice, as he scooted in closer to Lil's legs.\n\n\"He is here, back at the table. I am just getting us a drink.\" Lil noticed Brad moving closer, but with another boy directly behind her, was unable to move away.\n\nAbout that time, the bartender sat some shots on the bar, right in front of Lil, saying to Brad, \"Here you go.\" \n\nBrad began to pass them around, handing the last one to Lil. \n\n\"Oh no, I couldn't. I mean, I don't drink.\"\n\nBrad leaned in closer, almost whispering. \"But you are sitting here with me at the bar, ordering a drink, so it seems to me you do drink. Besides this is just a little one, and you just have to drink it. I ordered them in your honor.\"\n\n\"Well, thanks, but why in my honor. I am rooting for UNC.\" She said, trying to find a way to gracefully refuse the shot.\n\n\"But you're wearing red, so I figured you might be willing to root for our team if I bought you a drink.\" Brad said, his eyes still roaming over her body as he held the shot glass before Lil.\n\nLil looked past the handsome young man, to see if her drinks were ready, but the bartender was still filling other orders. She felt Brad's crotch briefly brush against her knee, then just as quickly break contact. She glanced down reflexively, barely able to stifle a gasp upon noticing the prominent bulge in his shorts. A flurry of thoughts instantly flooded her mind as she tried to decide how best to respond. First, how could she have allowed Mike to manipulate her into being such an obvious tease? And why didn't she just remove herself from this tempting situation, no matter how willing Mike was to put her on display. But she realized that even though she knew better, her morals were steadily weakening given the way this evening was playing out, as the thrill of having this same young man from the boat, so blatantly visually devouring her and obviously growing erect as a result, was turning her on like nothing she could recall. \n\nLooking for something to break the sexual tension she felt from spying his erection, Lil refocused on the shots, saying, \"Okay, I'll try it, but no promises, okay?\"\n\nBrad flashed a dazzling white smile her way, then announced, \"Knock em down ya'll, we got ourselves a new Cardinal fan over here!\" \n\nAll the boys quickly threw back the shots and slammed the glasses on the bar. Lil took a tiny sip, confirming that the brownish liquid was actually somewhat sweet tasting, maybe even with a hint of butterscotch. Satisfied, she turned her glass up and drank the entire thing. By the time she turned to place her glass on the bar, the bartender was setting another round next to the empties. \n\n\"Oh no, not another one.\" Lil protested. \"Just because I liked the first doesn't mean I want two.\"\n\nBrad stepped closer, his left knee making contact with Lil's thigh, and his still obvious erection now hovering near her left forearm. \"Just one more, do I have to compliment you again, is that it?\"\n\n\"Nope, I am not that easy. Besides, I don't even know what you are giving me to drink. It is a good thing my husband is back there to protect me.\"\n\n\"I am guessing your husband trusts you completely, otherwise he would never let you wear such a sexy dress. Did I mention you are the hottest woman I've ever seen/\" Brad said, again leaning in close to whisper in her ear. \n\nLil, while not believing she was in danger, was feeling increasingly uneasy with Brad's forwardness. She scanned the cluster of boys, looking to see if Mike was making his way to retrieve her. Failing to spy him, she decided to stand on the rung of her barstool to see over the cluster of masculinity. \"Can you give me a hand, I want to be able to see over the crowd?\" Lil said to Brad as she rose partially up to stand on the lowest rung of the stool, hoping to steady herself as she prepared to peer over the crowd. \n\n\"Sure, I'll lift you up.\" And before she could object, he reached down and wrapped his arms around her legs, just below her ass, and lifted her skyward. Lil's initial thought was to object, but as her head quickly ascended high enough to get an unobstructed view of her husband she decided it best to just accomplish her goal rather than make a scene. Mike perked up upon seeing her, made a motion as if he were drinking from an imaginary glass, then gave her an inquisitive look, plainly conveying he was still waiting for his beer. \n\nLil tried to convey a calm attitude to Mike. She didn't want to appear frightened or upset and have him panic and make a scene. But the fact was that she could feel her pantyless crotch pressed snugly against the boy's firm abs, the thin dress doing little to impede the friction between their bodies. In addition, a quick glance down confirmed that every time either of them moved, her nipples brushed against his forehead. She looked back to Mike, who once again mimicked his need for a beer. 'I bet he wouldn't be so worried about his beer if he could see how I am being hoisted above the crowd,' she thought. \n\nHer silent admonition of her husband was interrupted by Brad, asking if she could see over the crowd. She looked down to his upturned face, immediately realizing her left nipple was lightly rubbing across his nose as he spoke, practically directly into her jiggling breast. \n\n\"Okay, you can put me down now.\" Lil said. Several of the others were intently watching her interaction with Brad as he very slowly allowed her body to slide to the ground. As he lowered her, his hands pressed more firmly against her ass, not to the point of cupping her cheeks, but certainly more with more familiarity than appropriate. Lil, however, was actually more concerned for her breasts as they scraped across his face, her fleshy, dress covered left nipple was being drug precariously close to his inviting lips. The bare skin presented due to Mike's little button trick, along with the still concealed areola rubbed so firmly to his face that Lil could feel his razor stubble. As dangerously arousing as these brief interactions were, neither his manhandling of her ass nor his face buried against her chest compared to what he did next.\n\nBrad guided her still suspended body down his torso. The split in her dress was moving higher up her body due to their movements, and by the time he paused briefly, her bare crotch was trapped tightly against the substantial bulge in the front of his shorts. \n\nWhen it became evident to Lil that he was holding her in place, she began to struggle slightly, saying in a no-nonsense voice, \"I think you should put me down now.\"\n\nBrad responded, as if he had been waiting for her to object, \"Sure, no problem.\" And he did do as she requested, yet still managed to maneuver her now exposed pussy down his crotch and thigh. As soon as her still soaked and now swollen labia slid from his shorts to Brad's bare skin, her wetness caused her to glide more rapidly down his muscular thigh, the friction on her clit eliciting a barely stifled moan from Lil's suddenly parched lips. \n\nBrad was staring at her crotch, as were the other boy's close enough to see what had happened, until the dress fell back down to reestablish her modesty. \"Wow....ah, damn, that was so hot.\" He whispered while leaning in close to Lil's ear. \"You are the sexiest woman I have ever met. I swear!\"\n\nThe tide of embarrassment resulting from what had just transpired was partially thwarted by the flattering words coming from a boy almost young enough to be her own son. Even with a sudden, yet twisted sense of pride in her newfound sexuality, Lil could not look up to meet the rapt gaze of the boys. She continued to look down her body, under the pretext of smoothing the red dress across her stomach and thighs, but with the true intention of confirming the sight presented by her breast and nipples, and with the added little perverted twist of allowing her audience an unfettered look as well. The dress was slightly twisted from the jostling, and a substantial portion of her left, pale hued breast was peeking from beneath the red fabric. \n\nAfter deliberately readjusting herself, Lil did her best to present an innocent, if not clueless facial expression as she looked back to Brad, and said, \"Why, thank you for such a nice compliment, but I really don't know what you mean. But I guess a woman would have to be pretty rude not to accept a drink from such a sweet boy.\"\n\nEven though she could feel the first shot making her brain a little fuzzy, Lil knew things were beginning to get out of hand, and decided it best to pay for the drinks and get back to Mike. Noticing the bartender setting her previously ordered drinks on the bar, Lil moved her dainty hand to Brad's thick chest, and gently pushed him from her personal space, then said, \"I'll make a deal with you, one more shot, but then I have to take those drinks back to my table, okay?\"\n\n\"Alright, you win,\" he said, handing Lil her shot glass. Now knowing what to expect, she didn't hesitate and quickly downed the tasty mixture. She immediately reached for the cold beer and fruity drink, dropping the twenty on the bar, \"What were those shots anyway, I know Mike will ask.\"\n\nBrad barely suppressed a shit-eating grin while leering unashamedly at Lil's breasts, \"Oh yeah, they're my favorite shots, called Slippery Nipples.\" He redirected his vision to Lil's face, anxious to gage her reaction. \n\nShe couldn't help but to pause, if only for a second, caught off guard by the brazenness of this young man. Deciding the best way to keep him off kilter long enough to slip away was to surprise him with some sexy banter of her own, Lil held a drink in each hand and began to make her exit from the crowd. Moving directly in front of Brad, she paused a mere inch from his still hard penis and allowed her distended nipples to lightly rake across his upper stomach. While he stared down at her, dumbfounded and waiting for her to speak, she paused, glanced at her nipples, then looked up to his face. \"You know, I saw on television once this show about spring break, and the kids doing something called body shots.......I had always just assumed a Slippery Nipple was a body shot........kinda thought you might want that kind of slippery nipple shot, but, oh well, I've got to go now anyway. See ya around.\" As soon as the last word escaped her lips, Lil maneuvered quickly past the next closest boy. \n\nBefore Brad could process her tempting banter and gather his thoughts for a witty response, she had slipped past him and through the second tier of boys, most riveted on the TV replay of a fight during the game, before they knew she was even there.\n\nMike was relieved to see his wife slip from the pack of boys. He had been watching the bar intently, especially since Lil had been lifted up to make eye contact with him. He decided then, based on her apparent composed demeanor, to sit tight and wait a few more minutes before approaching the bar. Plus, the erection that had been tenting his shorts since their time in the bathroom had only intensified at the thought of her being so sexily displayed in such tight quarters with those college guys. \n\nHe noticed her swaying slightly as she made her way over to their table. Two thoughts crossed Mike's mind; Lil looked to be feeling the effects of her first night out drinking, and was she too tipsy to feel the numerous pairs of eyes practically reaching out to devour her bare back and luscious ass as she sauntered back to their table. He took the beer from her hands as she hopped up on her seat, \"Thanks, that seemed to take a while.......make some new friends at the bar?\" Mike asked with only the slightest hint of acknowledgement in his voice that they both knew it had been his intention all along to leave her stranded with those boys. \n\nLil took a long sip through the tiny straw in her drink, looked at Mike, whose eyes she noted, continually dipped from her face to her breasts, and said, \"Mmm, I really like this drink.\" After a brief pause, she continued, \"It is almost as good as the Slippery Nipples Brad and I shared at the bar.\" She gave him nothing more, deciding she'd torment him some, make him ask for the details she knew he wanted to hear.\n\nMike kept watching her, and as she casually took a second sip of her drink, his curiosity won out, \"Well, are you going to tell me more? You took a shot?\"\n\n\"Oh, yes. Two actually. You see, thanks to your sly little button clipping, I felt so exposed to all those young boys, it was making me all fidgety, you know, kind of antsy, I just thought a shot might settle me down some.....but it didn't. Then after Brad lifted me up to see you, and the way my dress slid so indecently out of place as he lowered me right down the front of his body, well, I was more fidgety than before, so I figured I should have another one. Lil did her best to play along with Mike's fantasy, realizing as she spoke that it was quickly evolving into her own fantasy as well. Teasing her husband with such a sexy tale was only increasing her excitement, and from the way he kept readjusting his shorts over his obviously bulging crotch, it appeared to have a similar impact on him as well.\n\n\"So, you were just nervous? You sure you weren't a little excited by being dressed like this, in the middle of all those guys?\" Mike asked as he dropped his hand to Lil's knee, lightly stroking her, as he obviously caressed her body with his penetrating eyes. \n\n\"Michael...of course not. I only dressed like this for you tonight. I am not the kind of woman that enjoys flaunting herself in public, much less for a group of boys almost young enough to be my son.\" Lil hoped her lie sounded genuine, wanting to continue the fa\u00e7ade of being forced into this debauchery by her husband.",
        "Mike knew better, for after observing her all day long, and especially after spying on her and the passed out kid earlier, there was little doubt his faithful, churchgoing wife was getting a thrill from delving into these sexy interactions. Anxious to egg her on, he said, \"Well, I think several of those young boys, as you put it, seem to be quite taken with you. They've hardly quit staring at you since you left them. But then again, how can I blame them, I mean you look like you've undone some buttons to draw attention to yourself.\" Mikes ear to ear grin the only sign he was less than serious. \n\n\"Michael Johnson!\" Lil started to protest, then quickly realized he was yanking her chain. Rather than give Mike the upper hand, she decided it best to get back to her story and torment him a little more, \"Actually, you're right, I think several of the guys at the bar wanted to thank you for making me dress like this, especially the white baseball cap, Brad. He seemed quite smitten with me, and I must confess, it is somewhat flattering to be the object of such a handsome young man's attention. He did get a little forward, but of course, I made him behave....eventually.\" Lil had shifted to face Mike, her back now turned slightly to the bar. Swiveling to this position had led his hand further up her leg, to within an inch or so of the, now last, clasped button. Lil slipped her own hand beneath the table, to likewise trace her painted nails up the length of Mike's thigh. This was so unlike her, but she didn't want to quit this fun little game they'd fallen into. Besides, they agreed it was just for tonight. Tomorrow she'd blame it all on Mike, and the alcohol, and the fact they were on vacation, then she'd go back to her comfortable, sensible self.\n\nMike was breathing a little harder as Lil continued, \"He is quite strong, I mean he easily lifted me up above the crowd so I could see if you were still waiting for me. Of course, I knew he was strong already, you know from the boat. I guess I should confess that when he was helping with my flippers I couldn't help but notice how well built he was, lots of muscles and very tight looking abs.\" She paused, letting Mike digest her comments, then asked, \"Did you see me, you know, when he was holding me?\"\n\nMike was mesmerized by his wife's tale. He was slightly distracted by her completely out of character behavior, but even more so by her hand now traveling tentatively up the leg of his shorts. He didn't want to break the mood, and sat motionless, eager to enjoy this for as long as she was in this sexy, increasingly inebriated mood. \"Ah, yeah, I was about to come get you, but you looked so, ah, I guess calm, I decided to just wait her for you to come back.\" \n\n\"Really, I looked calm? I certainly didn't feel calm. That boy, Brad, was holding me so tight to him, I could practically feel every muscle in his six-pack abs.\" Lil's hand had finally reached Mike's rock hard dick, and she began to lightly scratch and occasionally tug on the head as she continued, \"And my, you know....nipples,\" She whispered as if someone might hear, \"were hard, just like now, and they were right in his face as he lowered me. I tried my best to keep them from his lips, I promise I did honey......you believe me don't you?\"\n\nMike nodded his agreement, then through parched lips, managed to say, \"ahem, then what?\"\n\n\"Do you really want to know? I mean, it is not bad, well, not too bad, but it was not my fault. He is so strong, I just didn't have a choice.....maybe we should just go and forget this ever happened.\" Lil felt almost evil for doing this to Mike, but this did seem to be a just repayment for him making her dress like this tonight. She was prepared to continue, but wanted him to ask for the details. She continued to stroke his cock beneath the leg of his shorts, while staring into his eyes, awaiting a reply.\n\n\"Yes, you should, ahem, you should tell me.\" Mike managed to say as he squirmed slightly from his wife's touch.\n\n\"You mean about my nipples...or the other thing?\" Lil couldn't resist prolonging his agony just a little longer.\n\nMike was ready to burst from the suspense. He knew Lil was toying with him, but he did want to know what had happened so he didn't hesitate to ask. At the same time he decided to mirror her manual teasing, and slid his hand closer to her crotch, immediately aware of her own excitement so thoroughly coating her thighs.\n\n\"Well, as Brad was lowering me back to the ground, the naughty boy made sure to drag my boobies right across his face. I remember a completely random thought crossing my mind - how my nipples might poke his eye out. Isn't that silly, to have a good looking college boy practically molesting me in the middle of a crowd, and me being concerned with my hard nipples putting out his eye? Anyway, he was certainly taking advantage of the situation, maneuvering me so that my entire left breast was pulled down against his face, from his forehead to his chin. Oh my, I just remembered feeling his whisker stubble scraping against me, right here....can you see the scratches?\" Lil took the hand not occupied with Mike's dick and pulled the dress over until she threatened to expose her left nipple, so that they could jointly inspect her supple skin. \n\n\"Look, right here, see the red splotch on my skin, oh my, I guess I didn't realize at the time just how exposed I was. See here, how the friction marks extend all the way to my areola.\" Lil again paused with her story, kept the dress pulled aside and looked once again into her husband's face. As she waited for him to respond, his hand pressed further, until his fingers met her engorged lips and clit. \n\n\"Yeah, I see what you mean,\" Mike said, not sure if he really saw anything, or if it was simply Lil's conviction as to what had happened that caused him to agree. He could feel her squirm against his hand as his agreeable words spurred her on. \"He was pretty aggressive, huh?\"\n\n\"Oh my, yes, he was. He was actually very naughty and devious, but he was just so cute, and well, like I admitted before, so well built, I guess I was kind of slow to chastise him. Do you forgive me?\"\n\nMike began to nod his head, but before he could speak, Lil continued, \"And you haven't heard his most devious little move yet. See, as he was lowering me, he had his arms cupped behind my upper legs, you know, right below my butt. You know how my tush bubbles out so, and as he allowed me to slide right down his body, his hands ended up right under my butt. He didn't actually grab me, but I could feel his hands there, pulling me tight to his young, firm body. Mmm, Mike, your fingers are making me really horny.\" Lil paused, now breathing rapidly from both her husband's stimulation and the excitement washing over her from retelling her adventure at the bar.\n\n\"Ah, you're doing the same to me, but go on, finish telling me.\" Mike replied, noting how Lil's grip on his cock would tighten during the more arousing portions of her story.\n\n\"Mmm, okay, but, well, are the boys watching me, er I mean us, right now?\" \n\nMike glanced to the bar, seeing most of the guys intently watching the game. He hadn't even thought about the game since Lil came back from the bar, and now viewed it only as a distraction to this adventure they were on. Eager to proceed, he truthfully answered her, \"Most are watching the game, the one in the white baseball cap is pretty obviously watching your every move.\" He could feel her body tense and pressed his thumb directly across her slippery clit. \n\n\"He can probably tell what we're doing beneath this table.\" Mike added.\n\n\"Oh Mike, do you really think so........no, I know you, you're just putting me on again. So where was I? Oh yes, I was about to get to the part that was really all your fault.\" Lil had quit moving her hand as she spoke, then resumed her increasingly firm stroking with noticeably more vigor than before, making little effort to hide their under-table activity.\n\n\"My fault? I can't help it that you are still so sexy that college guys want to flirt with you.\"\n\n\"What I mean is, I wouldn't have been forced to expose myself to all those boys if you hadn't clipped the button on my dress.\" Lil explained, lifting up the dangling portion of her dress to show him the loose threads where the button had been. \n\nMike noticed her handling of the dress and the way it exposed her thigh, right up to her hip, on the side of her body closest to the bar. She didn't seem aware of this exposure, but he was skeptical Lil would show so much leg without being conscious of her audience, especially since he just confirmed for her that Brad was blatantly staring. Yesterday's Lil would have never considered such a move, but tonight's Lil, well she was proving to be an entirely different animal, and he was thoroughly enjoying exploring her expanding sexual boundaries.\n\n\"Exposed yourself? Now you sound like the naughty pervert, not me.\"\n\n\"Hardly! But thanks to you and Brad, I really had no choice. You see, as he kept lowering me, and I was so concerned about having my huge nipple accidently slip into his mouth, I didn't notice how we was positioning me right over his, well, his ...his you know.\"\n\nMike's finger was now working in concert with his thumb, steadily driving in and out of Lil's pussy while he kept up the pressure on her clit. He noticed she had begun to frequently take long sips from the straw in her drink, as if that might cool her simmering body. Further, she was beginning to struggle to speak in a normal pattern, her rapid breathing more frequently breaking the rhythm of her words. Between recounting the events with Brad and managing her reaction to his fingers, Lil's attention to his dick became more sporadic. Given how excited he was already, he actually welcomed the relief, certainly not wanting to cum here in this bar.\n\n\"So, anyway, ah, as I slid down, I suddenly realized that my dress was not sliding with me, but there was nothing I could do. My senses were so scattered. My nipple was brushing across his face and my naked kitty was scrapping down his tee shirt, practically gripping every ridge of his muscled abs.\" Lil was breathing rapidly now as she spoke, the combination of sharing this with Mike while he was bringing her closer and closer to an orgasm was quickly becoming more than her body could bear. She paused briefly, trying to compose her thoughts. She would never have fathomed a string of events that would have brought her to this point, but her she was, after a day of serendipitous temptations, a surprisingly willing husband, and more alcohol than she'd ever consumed, practically ready to have sex in a public bar. She knew from deep within she had to slow things down, and grabbed Mike's hand, telling him as much.\n\nMike didn't mind slowing down. He actually liked the idea of keeping Lil on the edge as long as possible, but he did want to hear the rest of the details from the bar, \"Okay, I'll just caress you a little while you finish telling me exactly what happened, okay?\" He pulled his thumb free and slowed his fingers as Lil began to speak.\n\n\"I wanted to get him to let me down, but I didn't want to make a scene, so I just went with the flow, and felt my nude crotch keep descending, but with my feet still more than 6 inches from the floor, he stopped. He had me exactly against his penis, and Mike, even though I only allowed him to keep me there for a few seconds, I could really tell his penis, even through his shorts, was really really hard. He is obviously a very experienced boy, cause it was like he knew I was practically wrapped around his rod, you know. I swear honey, I didn't want to respond, you know, physically, but by the time I could collect myself, and tell him to put me down, I was feeling really flushed and beginning to sweat. He listened to me right away and started sliding me down once again, but he didn't move me from his erect penis, so that I basically slide down his entire erection, but at least I was protected by his shorts... for a few more inches anyway.\"\n\nMike felt as if he was ready to explode just from hearing Lil recount the story. \"Okay, well, don't quit now, you have to finish telling me.\"\n\n\"You know, I think this is more exciting telling you about it now, than it was while I was going through it, does that make sense?\" Lil asked reflectively. Without waiting for an answer, she plowed ahead, \"So he kept maneuvering me downward, somehow managing to shift me over a little, so that I slipped right down his leg, which after being forced to rub down the length of his penis, wasn't so bad, that is until I moved past the hem of his shorts and made contact with his flexed thigh. Mike, I was so wet by this time, I practically slid down his bare leg to his knee. My kitty was on fire and I was afraid my legs would give out from the pleasure. As soon as I gathered myself, I looked up to see about 5 other boys all staring at me like they could devour me if I gave them the slightest encouragement. That was when I tried to break the tension by agreeing we should all have another shot. After that, I found a good opportunity to slip from the pack and get back here to you.\"\n\nMike sat there, his mouth agape and his cock like a steel pipe. As Lil spoke, he had slowly, yet unconsciously, increased his stimulation of her absolutely drenched pussy. She was writhing around against his fingers as he glanced to the bar and saw that 3 others had joined Brad in watching them. Realizing the risk of staying here in this bar, with a group of drunk and horny college boys, Mike grasped Lil's arm in one hand and her purse in the other, and guided her down the hallway and around the corner to the bathroom, then slipped through the back exit. He didn't think the boys were dangerous, but had long ago taken to heart the saying about discretion being the better part of valor. \n\nAs soon as they rounded the corner to the back of the building, Mike pushed Lil against the wall and kissed her deeply. \"Honey, I think that was the hottest thing I've ever heard of . You are so sexy and amazing.\"\n\nLil, the drinks and shots now fully kicking in, loved to hear Mike showing her so much passion. The fact that she had behaved like some wanton sinner didn't seem to bother her at this moment. All she wanted to do was get to the room and let Mike fuck her like he had begun to do back in the ladies room.\n\n\"Come on honey, let's get to the room and fuck.\" She couldn't resist speaking so vulgarly, caught fully in the exhilaration of the night. \n\nAs tempted as Mike was to go straight to the room, as Lil was suggesting, his darker side just couldn't pass up the opportunity to finish the night as he had intended, every since spying Lil and the passed out kid. He had hoped his ability to ply her with a drink, and her sexy attire in a bar full of college boys would make her feel desirable, but things had obviously evolved well beyond his wildest fantasies. His goal of taking her back, buzzed and horny, to check on, with any luck, the still passed out teenager, was coming together better than he could have hoped. Mike didn't know what, if anything, he wanted to happen when she saw the boy again, but he knew his earlier discovery of Lil's apparent fascination with Ron's abnormal penis had turned him on more than he would ever have imagined. He just had to see how she would respond if given a second chance with the kid, especially in her current condition.\n\nMike pulled Lil to him, grinding his erection against her stomach and began to nibble and kiss her ear and neck. \"Mmmm, yeah, I love to hear you talk dirty like that. I can't wait to get you to the room and .....wait, before we go back, didn't you plan to go check in on the drunk kid one last time?\"He asked, anxious to gage her response, but barely pausing as his kisses trailed down her neck to her bare shoulder.\n\nNot only had their adventure at the bar made Lil incredibly horny, it had pushed the thoughts of Ron, and what she had done back at his room, from her mind. Now, her brain instantly recalled the image of his huge penis being so inadequately clutched in her petite hand. She had promised his mother she'd check in on him, plus given her current state of arousal, she really did want to get another peek. Part of her, however, was nervous about the awkwardness of being with Mike should they find him, perhaps having kicked the sheet free, completely nude. She would have to compose herself and react as if she'd never before seen the boy's penis. \n\nStill acutely aware of the way Mike was stoking her with his talented tongue, Lil said, \"Mmm, we do need to check on Ron, but if you don't quit doing that, I may not make it to their room before I make you satisfy my needs.\"\n\n\"Okay, okay, let's hurry up and do this so we can get back to the room.\" Mike said, his perverted thoughts dancing around his brain as he took his inebriated wife by the hand and led her down the immaculately landscaped walk, past the pool. He kept glancing to her jiggling breasts and erect nipples, randomly illuminated by the moonlight dancing through the windblown palm trees, as he steered her toward the last room on the end, and the big cocked teenager. \n\n()()()\n\nCourtney had already cum twice, but with Ron's cock losing none of its firmness, she climbed back on just as soon as Shannon had rolled off, still quivering from her second orgasm in the past \u00bd hour. Ron had begun to come around during Shannon's rather vigorous assault of his defenseless body, albeit slowly. Neither girl cared now if he woke up, for everything from here on in was just icing on the cake as far as they were concerned. Courtney wasted little time, positioning herself over his slick, condom coated cock, and dropped down, well over half way. Even though she'd managed to take him completely last time, it still took awhile to get fully accustomed to his girth and length.\n\nRon's unconscious mind was slowly gaining awareness, initially through very graphic dreams about Amy, then, as had become the norm, expanding to encompass Pam and Beth. Eventually these dreams started to cross over, the female roles being occasionally assumed by the two college girls from the poolside contest. It was ultimately the grunts and moans coming from Courtney, now energetically pounding down against his groin, which first coaxed him to open his eyes. He took several seconds to focus, then a few more to comprehend that a sexy coed was fucking him with all she had. As he began to gain his senses, even though still clouded with alcohol and pot, he realized he hardly felt his cock, which based on the pace at which he was being fucked, should be ready to explode. As Ron began to raise his head to better take in the situation, he heard anther voice to his left.\n\n\"Look who's waking up,\" Shannon said, \"Sorry we got started without you Ron, but, well, we just couldn't resist that big dick of yours, you know?\" \n\nRon was still teetering on the edge of consciousness as Shannon leaned over and gently kissed him. \"Let me help you raise up some, you'll love watching Courtney ride that cock. I know it gets me hot to see her take it all.\" Shannon said, slipping a couple of pillows behind his head and shoulders, so he was propped up enough to have a good viewing angle. As his eyes traveled down her body, Courtney stopped moving completely, placed her hands on Ron's chest, gave him a devilish grin, and began to roll her hips forward and back, allowing most of his hard cock to pull free before she'd return to her original position, scraping her sensitive clit against his pelvis. While she looked incredibly sexy, he was unable to see his cock sliding in and out, as Shannon had suggested. \"Can you feel that Ron?\" Courtney asked, curious as to whether their various methods to prolong his orgasm would be as effective now that he was at least somewhat awake. "
    ],
    "authorname": "JackKing",
    "tags": [
        "tempt",
        "tease",
        "sleep",
        "cockring",
        "exhibitionism",
        "milf"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/a-tempting-vacation-ch-14"
}