{
    "title": "Fantasy Man Ch. 11",
    "pages": [
        "Amanda looked into her rearview mirror and adjusted an errant strand of her golden hair. She had just come from the hairdresser and didn't want a hair out of place. She was about to make her grand entrance and she wanted to look good. \n\nThe valet opened the door to her little convertible and she stepped out, taking his hand and smiling when she noticed his eyes drifting downward. Yes, she had outdone herself tonight. Her hair was immaculately done, swept up into a neat bun at the back of her neck, her jewelry shone brightly in the artificial lights that lit the outdoor marquis tent, and her little white one-shouldered dress hugged every curve of her body and came to rest just above her knees. She finished off the look with a pair of killer white open-toe stilettos. \n\nWith a wink, she handed her keys to the valet and strutted into the marquis. The engagement party was being thrown in honor of Heather Heartly-Bennett and her fianc\u00e9, Tyrell. They had recently gotten engaged and were planning on getting married within the next month. A short engagement period followed by a quick wedding, all the signs were pointing to pregnant out of wedlock in Amanda's mind. Of course, no one would comment in polite company, but behind their backs, there were all sorts of rumors flying. Nothing like a shotgun wedding to get the gossips fired up. \n\nAmanda scanned the crowd and quickly spotted her friends, Winifred and Margery, and walked over to them. Amanda greeted each one with a peck on the cheek and a smile. \n\n\"Winnie, you look stunning in that dress,\" Amanda said, paying her the proper compliment. Truthfully, she thought Winnie looked frumpy in the white chiffon dress that covered her from neck to mid-calf. It was too loose to show off any of Winifred's body and tonight was definitely the night to show some skin. \n\n\"Why thank you, Mandy. And may I say that you are a knockout in yours. I mean, the way it clings, you'll have every man in here after you tonight,\" Winnie returned. \n\n\"Oh, thank you, Winnie. I do try, though there's only one man's eye I'm interested in catching tonight.\" \n\nMargery spoke up, \"You can't mean Zack Smith. It's been years since you were together and he's still with Terri.\" \n\nAmanda shot her a glare. \"I've been waiting patiently for Zack to come to his senses and leave that black bitch once and for all, but he seems to need a little reminder about what he's lost. I mean, I saw Terri last week, and I have seen first hand that she has really let herself go. I could barely believe it. But, her gain is my gain.\" \n\nWinifred tittered. \"Has she really gained much weight? She was pretty curvy to begin with. Weight gain is a slippery slope I hear.\" \n\nAmanda grinned. \"She looks like the frickin' Michelin man.\" \n\nThey shared a laugh before moving on to other topics, though Amanda kept bringing the conversation back to how she was going to bring Zack to his knees. She politely listened while Winifred expounded on her tumultuous relationship with Davin, whose father owned a chain of hotels. Margery was still on the lookout for Mr. Right and was saving herself for marriage. Amanda often found herself wanting to gag when Margery started talking about purity and such. At least Winnie's stories about what she and Davin got up to were pretty salacious and were on the same level as her own exploits. \n\nLately, her father had been pushing her attentions on a man named Javier Garcia, who was the son of a wealthy business owner over in Spain somewhere. Amanda often tuned out when her father was discussing his business plans that involved her getting together with someone's son. She knew the deal, she didn't need to know more than whether or not the guy was hot and willing to buy her things. Besides, it never actually mattered. She was intent on winning Zack back and until she had her chance at convincing him that they were supposed to be together, she wouldn't settle for anyone else. \n\nWhen she actually thought about it though, her pursuing Zack had more to do with the way her father had reacted than any true desire she had to be with him. After Zack had broken it off with her, his father had come to her own shortly afterward to say that Zack had come to him and explained that it had been her infidelity in their relationship that ended it all. \n\nMr. Smith had declared the business partnership through marriage over and laid out a plan to merge the companies through other means, even though it meant they had to negotiate the division of the company's income and assets between the two families instead of having it all go to the family created by her and Zack. Her father could do nothing but go along with it, since Amanda was in the wrong. \n\nAmanda winced as she remembered how her father had snapped as soon as Mr. Smith had left the office. His entire face had gone red, the veins in his forehead throbbed and then he had let lose with his tirade. He had called her a whore, a slut and told her she was no better than her mother, who had left the two of them for some famous tennis player. \n\nHer father had demanded that she try to get Zack back by whatever means necessary. He had even finagled an invite to the dinner where Terri was going to meet Zack's family for the first time. He wanted to see Amanda's competition. Amanda didn't mind until she was faced with the seemingly immediate acceptance of Terri into Zack's family. His mother had only greeted Amanda with polite smiles throughout their relationship, but by the end of the night, she was hugging Terri and inviting her to their weekly family dinners. They had even spoken about children! \n\nAmanda found herself becoming increasingly jealous of their relationship, even though she had resigned herself to moving on and finding someone new. The final straw, the moment that pushed her into her relentless pursuit of Zack, was when her father had turned to her in their limo and told her that Zack had obviously found a faithful, loyal woman and that she didn't stand a chance of getting him back. The very next day, he started talking about branching out his business prospects and asked her opinion on somebody else's son. Amanda told him she wasn't interested in moving on just yet, but her father kept insisting it was a lost cause. The more he urged her to consider other men, the more stubborn she became on the Zack issue. \n\nShe wanted to prove to him that she was a good woman, one that was better than Terri. But the harder she tried, the further away from her end goal she seemed. Three years later, she wasn't any closer to stealing Zack away, but perhaps tonight would be the night. \n\nWhen Zack entered the marquis with Terri, Amanda preened. Terri was wearing something tantamount to a potato sack. The dress, with its empire waistline, hugged her generous bosom before fanning out and sweeping the floor. Amanda noted that Terri had paired her white dress with a pair of red strappy heels that showed off the tone in her legs when her dress parted at the high slit as she walked. It was a risk, wearing red to a white party, but the splash of color made her outfit pop. Amanda was impressed, not that she would tell anyone that. \n\nMargery spotted the couple at the same time and commented. \"There's your man...with his woman. I don't know, Mandy. I don't think you're going to be able to win him away from her. Zack seems like he's in it for the long haul.\" \n\n\"Nonsense. Come with me and watch me work,\" Amanda stated as she headed for the couple. \n\nWinifred and Margery flanked her as she walked towards the pair. She made sure to put a little extra bounce in her walk, to call attention to her assets. Luckily, Zack and Terri were talking to the newly engaged couple, so it gave Amanda the perfect excuse to intrude. \n\n\"Heather! Tyrell! Congratulations! What a beautiful party you've thrown,\" Amanda called out when they were close enough. \n\nThe small group's attention turned to her and her companions. She waited a beat and then added, \"Zack, how lovely to see you tonight. You too, Terri.\" She pitched her voice just right, letting them know that the greeting she gave to Terri was almost an afterthought. Amanda mentally patted herself on the back for giving such a masterful performance. It was going just the way she wanted it to so far. \n\nHeather smiled, though it was clear that it was forced. \"Amanda, hello! I'm so glad you all could make it.\" \n\nHeather greeted each of them with the requisite kiss on each cheek before returning to her fianc\u00e9's arms. \"Margery, you must tell me where you got your dress. I love it,\" Heather said. \n\n\"Actually, I made it myself. It took me hours to attach all the crystals,\" Margery replied with a blush. \n\nShe worked in a boutique on the weekends, not because she needed to, but because she loved it and it helped her come up with ideas that she used to design and make her own clothes. Her dress was a white Grecian inspired dress that fell to the floor. The straps, which crisscrossed her back, were lined with crystals. \n\n\"Well, we simply must talk about you designing me something to wear at the reception. I don't know if that's doable for you, but I must own something of yours before you hit it big,\" Heather continued. \n\nWhile Margery and Heather began to talk about dress designs, Amanda turned her attention back to Zack. He had his arm wrapped around Terri's back and was whispering into her ear. \n\n\"Zack, I haven't seen you in such a long time. You must tell me how you've been,\" Amanda purred. \n\nZack pulled his attention away from Terri momentarily. He opened his mouth to speak, but paused as a slow song came on over the sound system. \"Maybe later. Right now, I've got to have a dance with Terri. This is our song.\" \n\nAmanda could only watch, the rage boiling up inside her as Zack took Terri to the dance floor and began swaying with her gently. She saw how lovingly Zack gazed into Terri's eyes and wondered briefly if she was wasting her time. It wasn't as if she actually wanted to be with Zack, she was merely trying to restore some of her wounded pride at the fact that Zack had broken up with her and her father blamed her for it. \n\nShe had once thought Terri to be nothing more than a passing fancy, but they were still going strong. No matter. Once Zack took a good look at her body and started comparing it to Terri's, he would come back to her, if only for a night, a night that she could then use to break up Zack and Terri's relationship. She would bide her time and make her move when the time was right. \n\n_ _ _ _ \n\nZack watched as Terri sauntered off towards the toilets in the main house that the marquis was stationed behind. He had wanted to go with her, but Terri knew him well enough to know that if he followed her, raunchy sex in the bathroom wasn't far behind. And even though it would be highly satisfying, Terri would probably find it embarrassing if they were caught having sex at her ex-boyfriend's engagement party. \n\nInstead, he headed towards the bar. As he leaned against it and surveyed the party with a cold beer in his hand, Zack grinned. The past year had been amazing for him and Terri and the coming year only promised to get better. \n\nThe slim hand that slid over his shoulder while he was in the middle of daydreaming about the future wasn't unexpected. He knew that at some point, Amanda would make her move. For some reason, she just couldn't take no for an answer. \n\nHe turned, shaking the hand off and facing Amanda. \"Amanda, how can I help you?\" \n\n\"You can help me by telling me where we went wrong. We were so good together, Zack. We could be that good again.\" \n\nZack gave her a thin smile. \"Sorry to tell you this, Amanda, but what we had is nothing compared to what I've found with Terri. I would never give that up to be with you.\" \n\n\"Never say never, Zack. Your precious Terri is obviously letting herself go and soon you're going to wish that you had chosen all of this over...that.\" \n\nZack laughed. \"No, it's definitely never, Amanda. It's been over three years, I think you should focus on trying to move on and find your own happiness.\" \n\nAmanda growled as Zack walked away. How dare he reject her again! She marched after him, intent on confronting him again, when she saw him gather Terri up in his arms. She was just close enough to hear his soft words meant for Terri's ears only. \n\n\"How are you and our baby, my sweet wife?\" \n\nAmanda felt the floor sway beneath her feet. Wife? Baby? How had she not heard about Zack and Terri getting married? They would have had a big wedding, right? \n\n\"Married?\" Amanda hadn't realized that she spoke aloud until Zack turned with Terri in his arms. \n\n\"Yeah. We've been married for 6 months now. I would have thought you would have heard about it. Winnie and Margery were there with their families,\" Zack responded, a look of pity in his eyes. \n\n\"Baby?\" \n\nTerri smiled. \"It's still early days, I'll be 4 months on Friday. Our little one is a bit of a surprise, but we are thrilled. I can't wait to be a mommy,\" Terri answered, her hands gently cradling the small bump that the dress was hiding. \n\nAmanda felt her throat closing. She wanted to scream. All those years of waiting, her life on hold, and for what? She had nothing to show for her efforts and now it was less likely that she ever would. Instead of giving in to her urge to grab Terri and swing her around by her hair, Amanda managed a smile. \"Congratulations.\" \n\nShe turned and walked away, heading straight for the bar. \"Give me a double Jack and Coke.\" \n\nWinnie and Margery found her by the bar, four drinks later. \"How could you keep this from me? You let me go on and on about my plans and, the entire time, you knew that Zack was married.\" \n\n\"I told you he had moved on, Mandy. I just wanted to spare your feelings for a bit longer. I figured you would have given up by now,\" Margery stated. \n\n\"We didn't know about the baby, but I suppose it makes sense. All the weight you said she gained must be baby weight. I did suspect she was pregnant when you mentioned she had ballooned,\" Winnie added. \n\n\"That's so exciting for them! I know Terri was planning on waiting a few more years, but I bet Zack wasted no time sweet talking her into giving up the birth control after their wedding,\" Margery responded. \n\n\"For Zack, I'd give up my waistline and have a passel of kids. I bet he really puts it down in bed,\" Winnie added, staring at Zack across the room, watching as he ground against Terri while they danced. \n\n\"Fuck you both. Fuck you and fuck you. If I see any of you again, it will be too soon.\" Amanda pushed away from the bar, staggering toward the exit, intent on leaving before the drinking convinced her to let her feelings fly. \n\n_ _ _ _ \n\nTerri and Zack watched as Amanda stumbled out of the marquis. \n\n\"I feel a little bit bad for her, babe. She had no idea that we had gotten married,\" Terri said. \n\nZack wrapped his arms around her once more, pulling her close to his body. \"I didn't realize that no one had told her we were married. I mean, her father sent us a gift. You think he would have said something to her.\" \n\n\"Maybe he didn't know she was still after you.\" \n\nZack shook his head. \"Well, I don't think she'll be hounding me so much after tonight. I hope Winnie and Margery straighten her out.\" \n\n\"They did promise to have a word.\" \n\n\"Enough about Amanda. How are you feeling, Buttercup?\" \n\n\"I'm fine, Zack. I told you earlier that the nausea has eased off a bit. There's no need to worry about me.\" \n\n\"It's my job to look after you and our little rainbow. It's hard not to worry.\" \n\nTerri's smile was full of understanding and love. She ran her hand gently down the side of Zack's face and kissed him softly on the lips. \"See, this is why you're a wonderful husband and you're going to be an amazing father. You take your responsibilities seriously. Our little one will be loved and looked after and, if your parents have anything to say about it, spoiled to death. We're going to have to work extra hard to keep this kid grounded.\" \n\n\"Why do you think my parents would spoil our child? They hardly spoiled me.\" \n\n\"Okay, Mr. Trust Fund Baby, let's not get into how spoiled you are. You know good and well that your mother came over with a truckload of stuff for the baby yesterday. I had to put her off buying anything more or else we won't have anything to put on the baby registry for the shower.\" \n\n\"Okay, she might be going a little bit overboard, but she's just excited for more grandkids.\" \n\n\"Well, I guess I'll just have to hope that she tones it down sometime soon. Anyway, I'm in the mood for another dance with you and then I want to hit up the hors d'oeuvres because I'm starting to feel a little peckish.\" \n\n\"You've got it, Buttercup. Let's have a dance, some snacks, and then after the night is done, I'm going to take you home and we can practice making this baby a brother or sister.\" \n\n\"Aren't you getting ahead of yourself there? We haven't even had one yet and you're planning the next one.\" \n\n\"Oh, my sweet wife, it's never to early to practice, especially since you've agreed to at least three kids. Practice makes perfect. In fact, I think we should practice making love in the kitchen tonight. I want you on the counter, spreading that deliciously perfect pussy for me.\" \n\n\"All this talk of perfection might give me a complex.\" \n\nZack grinned. \"Buttercup, the moment I opened the door to see you standing there, nearly bursting out of your pizza delivery shirt, I knew you were perfect for me. I searched for you for almost two weeks, going to every coffee shop I could find, just to be in your presence. The more time I spend with you, the more deeply I fall in love with you. There's no one else for me. There's nowhere I'd rather be than by your side...or is that...inside?\" Zack ended with a wink.  \n\nTerri playfully slapped his chest. \"Keep that up and we won't make it home before we start in on the practice.\" \n\n\"Mmm, that's what I like to hear. Why don't you show me where the bathroom is, Buttercup?\" Zack whispered in her ear, nipping the lobe and then soothing it with his tongue. This was one of those times when he wished they were somewhere else so Terri could be naked immediately and his cock could be buried inside of her. \n\n\"Zack, we're not making love in their house.\" \n\n\"In the back of the car, then? You're so kinky, Buttercup.\" \n\n\"Hush.\" \n\nTerri could feel herself swoon as Zack's powerful arms wrapped tightly around her, bringing her flush against his body. She could feel his cock pressing against her mound and a rush of wetness flooded her panties. It seemed as if she was always ready to go, now that she was entering the second trimester. Her hormones ruled her body and they had decided that she was going to be perpetually horny. Zack was going to get a lot of practice making babies if she had anything to say about it, and he was going to love every minute of it. \n\n\"Buttercup, I love you more than life itself.\" \n\n\"And I love you...Pookie,\" Terri said, remembering their first encounter. \n\n\"No. Stop that shit right there.\" \n\n\"What's the matter...Pookie?\" \n\n\"Terri, I swear, you are pushing it.\" \n\n\"Oh, Pookie...I,\" Terri was cut off mid-sentence by Zack's lips. \n\nWhen he released her, she held on tightly to his shoulders. The man could kiss her breathless sometimes. When she looked up into his eyes, she could see the desire burning within his baby blues. Damn, my panties are going to be ruined by the end of the night if he keeps looking at me like that. \n\n\"You are so going to get it when we get home,\" Zack growled in her ear. \n\n\"Promises, promises,\" Terri sassed. \n\n\"That's it. No more dancing for you. You better prepare yourself, Buttercup, because after I spank that ass, I'm going to make love to you until you can't stand. You're going to be so well loved that you're going to feel my cock inside of you long after I've gone to work tomorrow.\" ",
        "And with that, Zack took Terri's hand and led her over to Heather and Tyrell. They said their goodbyes and as Zack led her to their car, Terri could only smile. \n\nFour years ago, she was struggling to make ends meet. She was trying to pay her way through college the only way she knew how, hard work. Three years ago, she was working three jobs, her boyfriend had cheated on her and broken her heart, and she was paying the rent on a two-person apartment by herself. Then, she met the man of her dreams, literally, since she dreamt about him almost every night before they got together. The years they had spent together had only filled her life with love and happiness. This year, she had pulled off her dream wedding with the help of Zack's mother and an amazing wedding planner. And next year, they were going to have a baby. \n\nTerri couldn't ask for much more. Zack took all of her fantasies and made them a reality. Life was good and she couldn't wait to see what it would bring next."
    ],
    "authorname": "angelicsounds",
    "tags": [],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/fantasy-man-ch-11"
}