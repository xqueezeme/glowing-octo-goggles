{
    "title": "Graduation Summer Ch. 06",
    "pages": [
        "Rita's bedroom. \n\nIt was a nice warm and sunny Sunday, with a nice breeze when the phone rang late in the morning. \n\n\"Hey Bill. Doing anything this afternoon?\" \n\n\"Nope. What's up?\" \n\n\"Not much. You want to come over? I've got something I want to show you.\" \n\n\"Give me an hour. Got to finish up some things here and then take a shower.\" \n\n......................... \n\nThere was a note on the door, \"Come on in. Shut and lock the door behind you.\" \n\nI went in and locked the door. No Rita in site, all was quiet, but a blouse was draped across the back of the kitchen chair with another note, \"Go to the base of the stairs and follow the trail to find your prize\". \n\nOn the second step leading upstairs was a pair of shorts. At the top of the stairs was a white cotton bra. My pulse quickened and my dick throbbed at the thought of what the prize was going to be. To the left and in front of a closed door was a pair of white bikini panties with a note on the door, \"Knock once\". \n\nI swallowed hard as my dick throbbed again as I knocked once. \n\n\"Come in.\" \n\nOpening the door; it seemed as though time had stopped. \n\nIt was the first time I'd been in her room. The window was open with the curtains pulled to the side as the sun bathed the room with a warm glow that brought out all of the colors of her room. The walls were painted a light sky blue. Her desk sat next to the window. Stuffed animals sat on a shelf opposite her bed, the white bunny proudly sat at center stage. A faint scent of her perfume wisped past me as my eyes rested on the vision of loveliness lying on her bed along the far side of the room. My dick throbbed as I took in her nude form. \n\nThere's something magical about when a girl's lying naked, flat on her back. I could see where the bottom of her ribcage ended and where her soft smooth stomach began. Her hipbones were plain to see too. Breasts flattened against her chest, the quarter size cinnamon colored areola surrounding the hard dark pink nipples pointing toward the ceiling, each with the trace of a tiny indentation right in the middle. A faint golden tan line ending just above the areolas with no shoulder strap tan lines (guess that answered part of my question on how she tanned). My eyes traveled down to the honey colored triangle of thin wispy hair, taking in how that triangle of her pubic hair filled the soft creases to the sides of her legs. The sight of her honey blonde bush only heightened the sense of vulnerability and need. \n\nOne knee up, the other leg flat slightly twisted at the knee to the side. The light caught the darker crease in the center and the surrounding pink folds. She was wet and glistening as she offered herself to me. I groaned as my dick throbbed inside my now tight shorts as I became overwhelmed by the erotic landscape of her smooth flawless lithe body. I loved the sight of it. All of it. All of her, and all enhanced by the soft color of the afternoon sunlight. \n\nRita spoke first, \"You can come in, if you want,\" she said with a slight nervous grin, bringing me out of my trance, \"we have all afternoon.\" \n\nI walked over, leaned down, and kissed her soft wet lips before pulling her up to a sitting position. Our lips met again. This time I kissed her, devouring her mouth hungrily, my tongue sliding into her mouth and tasting her, exploring her, finding her tongue and teasing her. \n\n\"You are sooo beautiful!\" \n\nI stood. She smiled and watched as I pulled my tee shirt over my head and tossed on the nearby desk. My shorts were next. \n\nStanding in front of her: the bulge in my tight briefs, the outline of the crown well defined, a small wet spot right in the middle. Sitting up and swinging her legs over the edge of the bed she sat up putting her at eye level with my package. Her right hand moving up the inside of my right thigh to just below my shorts and then traced her index finger over the head and the visible edge of the crown. I groaned. \n\n\"Can I do this part?\" she asked looking up smiling, her finger continuing to trace circles around the growing wet spot. \n\nI could only nod as my dick throbbed. \n\nBringing both hands up to the elastic waistband and hooking her thumbs inside, she slowly pulled down my shorts, intently watching as more and more came into view. The patch of dark hair came into view first, then base of the thick shaft. The material traveled down along the shaft stopping for a moment just below the crown. She looked up and licked her lips before continuing the final journey. \n\nMy dick popped free from the confines. The thick dark pink head pointed outward toward her face, swollen and surging with intense arousal, throbbing with each beat of my rapidly beating heart. My balls hanging free as I felt the breeze from the window against my sack. We both gasped: me at the release of confinement, Rita at seeing my very erect dick in the full light of day. \n\n\"Oh my god!\" was all she could say, as my shorts fell to the floor and pooled around my ankles, \"It looks so much bigger in the daylight. I've never looked at one this way. This close.\" She whispered as she stared at my hardness before her like she'd found some sort of rare artifact, taking in every vein along the shaft, every wrinkle in the hanging sac, the outline of each hanging testicle, the ridge surrounding the head, the clear drop of pre cum that was starting to appear as it throbbed. She looked at it from different angles and from underneath. \n\n\"Explore all you want. I've never been looked at like this before.\" I shivered, knowing that she was drinking in every detail. \n\nLooking up at me, \"You had a stupid girlfriend if she never took the time to appreciate all of this.\" She cooed as the coolness of her right hand first cupped my scrotum before her left hand wrapped around my hardness and gently squeezed. I let out a gasp followed by a groan. A woman's hands are not like a man's. There is a smoothness and tenderness they possess. \n\nStepping out of my shorts her right hand returned to my inner thigh as I moved my legs apart. Moving up to again cradle my scrotum in the palm of her hand as the tip of her middle finger gently stoked that very special spot at the base of my sack while gently rolling each testicle between her thumb and fingers. I groaned again as my dick throbbed and twitched as more pre-cum formed. \n\nShe looked up and smiled, realizing how much I loved having my balls played with. Cindy never played with them. I wanted her to, but she never did. A few times when we were parked, I even pushed her hand to my exposed crotch. Nothing. Rita cooed as she continued to massage my balls as her left hand circled the base of the shaft and moved up to the crown, and lightly moved her index finger along that sensitive valley on the underside. I groaned again, only a bit louder. My knees almost giving way. \n\nWe had played like this in the darkness of the car a few times. But here, in her room, in the full light of the day, standing before her naked; Rita - NAKED - sitting on her bed, my gaze alternated between watching her fingers move along my length, and her eyes taking in my nakedness and watching the affects she was having on me. I was in heaven. \n\nDipping the tip of her index finger into the droplet of pre-cum, she gently swirled it over my glans causing more pre-cum to form and getting another groan out of me. My dick throbbed and twitched with an aching pleasure. \n\n\"I love how it moves. How it jumps when I touch it.\" \n\nThen she did something that really surprised me. While still cradling my balls, she leaned in as she purred, \"Mmm. So hard, yet so soft, so warm. I have to do this\" With that she leaned forward and lightly kissed the tip. Didn't lick or take me into her mouth, just kissed, pulled back, and looked up at me and smiled \n\n\"I've never done that before.\" \n\nShe was having fun and knew she was driving me crazy. I settled back, sinking into the glow she created. \n\nI pulled her up as she reluctantly released her treasures. Looking into her eyes I traced the side her jaw with the back of right hand as I leaned in and kissed those soft wet lips. Slowly at first. Her tongue was slow and methodical. Soft, needy sounds escaped as the kiss continued. Then, with a heated passion we pulled each other into ourselves. Our mouths hard against each other. Hard and demanding. Skin to Skin. Hard nipples against my chest. My hands down her back to grasp each firm little butt cheek. \n\nBreaking the kiss, I looked at her and eased her down on the bed. Standing next to the bed, she first looked up at me and then my rigid dick as she reached over and touched the drop of pre cum that had again formed, lightly and gently drawing her fingers playfully down my entire length to again cradle my hanging scrotum massaging each testicle. \n\n\"You like having your balls played with. Don't you?\" \n\nThen she laid back and brought her arms back to stretch them out in back of her head, spreading herself out before me, smiling. \n\nI could only groan and nod. She smiled. \n\n\"My turn to explore you. I've never had this opportunity. Since our first time seeing you only in moonlight. I've dreamed of seeing you like this.\" \n\n\"I don't know if it's more exciting for you to look at me, or more exciting for me to watch you look. You really DO like my little boobs,\" she giggled. \n\nJust before I took the right nipple into my mouth, I whispered, \"Yes\", as she arched her back and gasped. I sat to her left as I again took in her complete nude form as my left hip rested against her. \n\n\"Close your eyes.\" \n\nThe fingers of my right hand started just below her left ear and gently traced down the side of her neck to the center of her chest right between her breasts. I watched as my index finger crossed over the tan line and circled the cinnamon colored areola of her left breast, and watched in awe as the darker nipple slowly tightened further and the little goose bumps on the areola emerged. She smiled. \n\nLeaving the left breast with the nipple untouched, I moved to right breast and lightly circled the areola giving it equal attention before leaning in to gently lick the hardened nub, producing a loud gasp. I alternated between palming the silken orbs and pinching her nipples, the sigh turned into a moan and then a whimper. \n\nLeaning in and whispering in her ear, \"Feel nice?\" \n\n\"Ooohhh,\" she moaned. \"You have no idea.\" \n\nThe only sound in the room was her heavy breathing as I felt her hips start to move as her legs opened slightly. \n\nTaking my hands completely away, I first leaned back to again take in the sight of her bareness before leaning in and lightly licked the left nipple with the tip of my tongue which brought first a gasp followed by another low moan as she exhaled. Softly blowing on it produced another gasp. Rita shivered. My tongue continued to circle the erect nipple as her breathing intensified and her hips moved against me. \n\nPulling back and sitting up again, I watched and waited as her breathing became more normal before leaning in and licking the right nipple, which brought an even more powerful gasp and louder moan. \n\nMoving to lay between her completely opened legs, my mouth engulfing her left breast as my tongue danced over and around the nipple feeling the small bumps of her aureole with my tongue. I reached over and rolled the right nipple between my finger and thumb gently pinching first one nipple and then the other until they were both stiff with need. A warm sense of intimacy flowed into me, and I could sense that Rita felt it, too. \n\nHer breathing was becoming shallower and more rapid now, and her chest quivered at each intake. I was beginning to become more adventurous, sucking her rock-hard nipples more assertively. Rita arched her back, straining her neck as the veins bulged, shuddering in pleasure, then she gripped me firmly, scrunching her legs upwards and folding me into her body. She held me for several seconds as her orgasm enveloped her. Then she relaxed and I lay with my head on her chest, planting the lightest kisses on the side of her left breast. \n\nShe was still for several minutes, and I lay there listening to her breathing return to normal. \n\n\"Wow Bill,\" she said, still in a semi-daze. \"That's the most amazing orgasm I've ever had and all you did was kiss my nipples! I can't make myself cum like that! How are you doing this to me?\" \n\n\"I love your breasts and sensitive nipples and that I can make you cum like that makes my day.\" \n\nKissing my way down her tummy to stop at her cute little navel, my tongue swirled around it as she giggled. \n\n\"Ticklish?\" \n\n\"A little.\" \n\nMoving down my lower body moved off the foot of the bed, my knees on the floor, my chin resting on the soft downy patch of honey blonde fur. I looked up and saw her looking at me with a questioning look, like, \"What are you going to do?\" I had no idea. Never been in this position. I had never heard of oral sex, but had no idea what to do. Little did I realize that before the summer was over, I would become a pro. \n\nI sat back on my knees and stared between Rita's opened legs at my first pussy. She watched as I stared as she opened her legs further exposing her core to me. I looked up at her and smiled as she nervously smiled back as I returned my eyes to those opening lips as Rita's pussy had flowered open. \n\nThe smooth puffy outer lips gave way to her inner pink petals glistening with her wetness. Her clitoris barely visible under the protective hood. Everything looked swollen and hot and coated with her liquid. At the bottom was her opening and the source of a trickle of milky white fluid. The musky scent floating through the air was intoxicating. The same scent that filled the car the other night. \n\n\"You're the first to ever see me like this,\" I could sense the nervousness in her voice. \n\n\"You're my also my first. So beautiful,\" as I leaned in and kissed her opening, no licking, just a kiss. I don't know what I was expecting, but the brief taste was something I would remember and experience again. \n\nI looked back up at her as we both smiled at each other knowing that we had just shared something immensely intimate, before returning my gaze to her widely opened legs. Leaning in my tongue left a wet trail along the inside of her right thigh, she shuddered at the coolness as I softly blew. \n\nMy finger traced a line from the bottom, across her opening, to the top and back again this time entering her to the knuckle. Her hips rose from the bed as she let out a groan as her body buzzed with anticipation. Withdrawing my finger, I again traced a line to the very top where I was met with a loud gasp as I found the little pink pearl. Gently stroking it as another groan came out of her. Flattening my hand I began to move in circles as I gently rubbed her pearl as I have done many times before in the car. Only this time I could take in the view before me. \n\nShe pressed her head back against the pillow, closed her eyes, and swallowed, then began breathing heavily. Her hips rising off the bed, legs opening more giving me complete access as she surrendered herself to me as her breathing intensified, my hand performing its magic \n\n\"God don't stop!! Whatever you do don't stop... Put your finger in me!!\" she gasped. \n\nI again entered her up to my knuckle, she gasped again as I explored every inch of her femininity with generous care and great curiosity. Her hips instinctively rocking back and forth as I moved my finger in and out faster, getting more and more excited at the sight of her pleasure and at the soft sucking sound that it made. With her hand she held my finger within her, not daring to risk my letting her go. Her legs spread, insistently she clasped the flat of my hand, pressing it to her pussy, grinding her clitoris against my palm. \n\n\"Move it around! In and out!!\" \n\nWith my free hand, I reached up and palmed a breast. A deep moan told me I was on the right track. And then it hit me: I was having the time of my life. Here I was, intimately connected to Rita's pleasure centers, her journey depending entirely on me, and she was loving it. \n\nI rolled her nipple between my fingers, and I could feel the jolts of electricity through her body. Her body rippled under me, dancing an ancient rhythm to the fire flowing through her. \n\n\"Oh, God, don't stop,\" she moaned, and I felt her body tense under me. More and more, then she bowed her back off the bed. \n\nThat sent her over the edge as a shuddering cry announced the detonation in her body as I felt her pussy throb against my fingers, and it was matched by pulses in her nipple as her hips rose letting out a cry that I was sure the neighbors heard and would be over to see if there was any problem. I continued. My fingers dripping with her natural lubrication. Her legs now in the air and spread as far apart as possible, providing complete access as she came hard again and again as she cried out a primal throaty groan; her body stiffening. Nobody knew of the G-spot back then, but I am certain now that I had found it. \n\n\"Stop. Come up here,\" she panted. \n\nOur lips met with a passion, like never before. \n\n\"I want you in me! I NEED you in me!!\" \n\nMoving to lay on her bed, I watched her white flat bottom as she hurried to her dresser taking in the way her cheeks came together below the curves of her bottom, merging into the dark center right up between the creases of her legs. \n\nShe fumbled around for a few moments and quickly returned with two condoms, a slight jiggle of her small breasts with each step. Stopping at the side of the bed we again each took in the other's nude form. My right index finger slowly tracing a line from the base of my scrotum to the tip spreading pre-cum around. Her hands cupping each breast and rolling each nipple between her fingers as we smiled at each other. \n\nHanding me one, \"Saving this one for later,\" she smiled. \n\nSitting on the side of the bed she watched as I opened the package placing it at the tip and rolled it down the shaft as she lightly stroked my scrotum along the raphe then traced the outline of each testicle. \n\nRising up and straddling me I looked down and saw the tip of my dick against her taut belly as she slowly began to rub her hot slippery wet sex up and down along my shaft, the lips of her labia cradling my dick. She would make a small whimpering sound and her hips would shake and shiver from time to time. I just lay there and watched, mesmerized. She was rubbing herself from my balls to the very end of the head. Leaning forward our lips met briefly before again sitting up, her hips raised as she reached behind to grasp my engorged member and rubbed the tip between her lubricated folds and against her opening. \n\n\"Are you having fun?\" I asked with a smile. \n\n\"Oh yes. I'm wet for you. So very wet. I want you inside of me. Deep inside of me,\" she whispered breathlessly. \n\nThen Rita gave me a truly breathtaking smile and slowly lowered herself onto my erection, not pausing for a second as she took me into her in one fluid motion as our flesh became one, my hard length stretching and filling her. Her silky wet pussy offering up just enough natural resistance to let us both savor this initial penetration. Her warm love juices running down and over my balls. The moan escaping each of us was the sound sex would make if it had a voice as we closed our eyes to savor the sensations of our joining. \n\n\"Oh god. You're in me. Sooo very deep inside of me. I could really get used to this feeling,\" the words coming as she let out another gasp. \n\nI opened my eyes first to see her sitting on top: her eyes still closed, head back, mouth partly opened. Her half-apple sized breasts rising and falling with each breath, each nipple proudly erect in her arousal. \n\nI looked down to where we were joined and saw about an inch of my shaft still visible surrounded by her honey blonde fur. My dick throbbed and twitched inside of her at the vision before me, her body on full display. The view of Rita; proud and confident in her nakedness as she sat there in the full light of the day. Celebrating her arousal turned me on like nothing before. I took another a long look up and down her body. My dick throbbed. ",
        "\"I felt that,\" opening her eyes as she looked down and smiled. \"You like what you see?\" she purred as she moved her hands up and over her small breasts. \n\nI could only nod, \"You like this way, huh?\" \n\n\"Mmmm. Ooh, I like how I can control how, how deeeep I can get you inside me. And if I move this way, it hits this spot that feels...\" \n\n\"Fantastic?\" I asked. She just nodded with her half opened eyes with a dreamy look. \n\nRita bent forward at the waist until her body melted into mine. I was still half way inside as she stroked the side of my face as we gently kissed before sitting back up to sink back down onto me. Sitting up tall she stretched like a cat as both hands again moved up and across her breasts, through her hair to straighten as she reached for the ceiling. This thrust her chest out. Her breasts riding high and proud as the excited nipples pointed slightly upward, a perfect vision of feminine lust. \n\nThis time, my eyes took a longer tour, lingering on her chest, then moving down. Her tight abdomen led down to the shadows between her legs, where my cock nestled between her swollen pussy lips. I swept my eyes back up, and took in her radiant face and those soft mounds of flesh as each of my index fingers traced the outer edge of each areola before moving to the erect nipple to gently pull away from her chest as she purred her encouragement. \n\n\"Look at you,\" I whispered, staring at her gorgeous breasts and slender body as she teased herself along my cock. \"Man, you look hot.\" \n\n\"Glad you think so,\" she purred as she again cupped each breast and stroked her nipples \n\n\"You are so alive, Rita. So beautiful,\" I said in wonder as my dick once again throbbed and twitched inside of her warmth as our eyes locked. \n\n\"You make me feel alive.\" Then a grin spread across her face. \"And also really hot. I felt that,\" she smiled, \"I know I've said this before; but, I love it that I have that kind of effect on you. That you love my skinny body as much as you do. And, that you really love these,\" she softly said as her hands covered my hands as together we massaged both breasts as I felt the walls of her pussy give my dick a squeeze. \n\nRising up, she reached a point where I was just at her entrance as she relaxed, her legs releasing and gravity pulling her back down once impaling herself on my length, filling her so quickly that she couldn't hold back another deep primal cry that formed in her throat. \n\n\"AHHH!\" \n\nI watched as she ground her hips around in a circle as my dick caressed every wall of her sex and stirring up her pleasure even higher. Reaching up, my thumb caressed the swollen bud of her clit. Her thighs quivered and shook as her core clamped down on my length tightly. \n\nI then watched as she leaned back still further, grabbing my shins with her hands, her head back, hard nipples pointing straight up, exposing the full redness of her wet lips encircling my hard dick. She knew what she was again exposing to my eyes. My dick throbbed... again. She sat up and grinned. \n\n\"Come up here and kiss me.\" \n\nLeaning back she brought both legs up along my shoulders. Sitting up, the last bit of my hardness entered her completely as the outer lips now rested at the base of my dick pressing against the top of my scrotum. \n\nShe gasped as I bottomed out and we tightly embraced each other as I reached down for those butt cheeks and pulled her in to me as the last fraction of my length filled her. She groaned and leaned in to present her breasts as an offering to my eager lips. I first licked the right nipple which brought another gasp as I again felt her squeeze. \n\n\"mmmm, I love this position,\" she purred as our lips met. \"Deep inside. Filling and stretching me completely. The tip of your dick gently rubbing against my cervix. Your tongue on my nipples. Your eyes on my boobs. You really do like my little boobs,\" it wasn't a question, it was a statement as she smiled as she pulled back to look at me as I nodded and throbbed inside of her again. She smiled at the sensation. \n\n\"My favorite too. I love looking at you. Always have. This will be OUR love making position\" as I kissed her again, holding her against me, her breasts tight against my chest as I kept my hands on her butt cheeks, pulling her further into me, if that was possible. It was the first time the work 'love' had been uttered by either of us... it would be shared many times in the future. \n\n\"Rita, can I give you a hickey on the inside of your boob? Right here,\" as I lightly kissed the gentle curve of the inside of her right breast, \"So that when you look in the mirror later, and for the next few days, you'll be reminded that I was deep inside of you when you got it. OK?\" \n\nShe looked back at me, smiled, and nodded. I leaned in and started too strongly suck on the inner tender flesh of her right breast. She cradled my head to her chest, kissed the top of my head, then leaned back, and closed her eyes as she savored the suction. Moments later, as I pulled back as we both looked at the red mark that was forming on her flawless skin. It would be purple in a few hours. We both looked back at each other and grinned. \n\n\"Well, I guess you just marked me. Does that mean I'm yours?\" \n\n\"If you want to be. I would like that.\" \n\nPulling us together, each of us savoring the closeness. Her: the fullness inside of her, her nipples moving across my chest as she turned side to side. Me: the warmth and tightness surrounding my hardness and those hard nipples moving against my chest, my scrotum rubbing against her bottom. \n\n\"Come on. Do me,\" she cooed. \n\nWe rolled over, only becoming slightly dislodged before regaining complete penetration as she laid back, her legs apart bent at the knees, soles of her feet on the bed, our pubic hair pressed together, my hanging scrotum resting on her butt. \n\n\"Go slow. I want to feel every inch of you as you move in and out of me.\" \n\nThe first stroke was slow as I withdrew until the crown just parted her lips. Our eyes met as I slid in as slowly as I could, watching her face contort with pleasure, savoring the incredibly tight warm pressure encasing my dick. We both gasped. \n\n\"Oh Rita. Rita,\" I said softly as I leaned in to gently kiss her soft lips. \n\nI held still for a few moments before slowly withdrawing, but again stopping at the threshold of penetration. Refilling her as she arched her neck backward, eyes closed, and gasped as I leaned in and kissed her exposed neck just below her right ear before slowly withdrawing. The third time I sat up and watched as I reentered and then slowly withdrew. White love juices coating the length of my latex sheathed hardness. The lips pulling out as I withdrew only to be pulled back inside as I refilled her. Rita sat up a bit to look down at what I was watching. \n\n\"It's sooo amazing how your dick moves in and out of me. Pulling my lips with it. My juices all over it. Watching and feeling it at the same time. WOW,\" she whispered as she flopped back and closed her eyes to savor the sensations of being slowly filled and the emptied. \n\nThis time was different than in the back of the truck, although we took our time then. This was true \"Love Making\", although I didn't know it at the time. Most of our future times together would be just like this. Although, there would be a few times where we would just \"Screw\". \n\nAs we continued our eyes would lock; looking deep into each other as I lay above her, my elbows locked as I gently rocked myself in and out of her, never pulling out and crudely slapping myself in her butt. Instead, just pushing myself as deep into her as I could and making her feel me there and then slowly withdraw. Her tightness massaging my length with each penetration and withdrawal. It was slow and sensual. We stayed together, her thighs now around my hips, my chest against her breasts, the both of us moving in concerted unison so that we could best experience the intimacy shared in every penetrating stroke of my erection. Finally though, I pressed in and held myself, just feeling her and knowing that she too, was feeling me. I was so deep and she was so warm, wet, and snug. \n\n\"Don't move,\" she whispered, \"don't move, Bill. I want to feel you. Feel you all the way inside me,\" as our lips met. \n\nMoments later, I withdrew, only to again enjoy the sensations when I slowly reentered her, again, and again, and again. \n\nMinutes passed. How many? I haven't a clue. We were each locked into the closeness of our joining. Neither of us wanted this moment to end, but I was getting close, which she sensed. We also knew that this would not be our last joining. \n\n\"Do it to me. Go harder. I want to feel you deeper in me,\" she panted. \n\nI picked up the pace. Soon I'd worked myself into actually fucking her nice and hard. I wasn't so sensual anymore. I was hungry. She was needy. I put my whole body into motion, thrusting with more than just my hips. I pumped my dick into her tight, slick pussy, grunting at the pleasure of it. She started mewing those sweet moans again, and just like that, her bedroom was filled with the sounds and aroma of sex. \n\nHot pleasure churned in my gut as that signature pressure spread out into my thighs, tightening my legs as I watched Rita's firm, perky breasts with a slight bounce on her chest with each of my thrusts. I spent a while staring at them, marveling at how they bounced, but before too long I was looking down again, watching her puffy, gaping pussy swallow up the long, hard dick that was pounding it. Those hot, wet inner folds snugly rolling around my cock were getting dangerously close to milking my load out of me. \n\nShe gasped, thrusting back against me, her back arching, her fingers digging into me, her nails scraping along my back, \"Oh God!\" \n\nOur awkward, young bodies convulsed together, attempting to achieve a mutual rhythm, but not always in sync as I found a motion that rubbed my pubic bone against her clit, sliding against it, at the end of each stroke. In moments she was there, as. she pulled me down flat to herself and I felt her entire body go tense beneath me. She had felt great around me before but in this moment it became a place of pure magic. I could feel the tremors of sensations passing through her body as wave after wave of pleasure slammed through her. Her moans and whimpers became a gasp, and then quiet. My body was rewarded for giving her that pleasure as she suddenly seemed to tighten herself to me as if she was made just for me. \n\nIt was too much for me to hold onto. I was swept over the edge by her orgasm and into one of my own. I felt my body tighten, as I pressed deep into her quivering warmth and released as each final stroke became mind numbingly pleasurable. I can't really say that I climaxed; it was much closer to say that we climaxed. Or something. All I can say is that our bodies, minds, and souls touched ecstasy together. \n\nI looked for her beautiful eyes. Her face was turned away from me showing me only the profile of the left side of her face. My hand moved up and with a light touch on her chin I turned her face back to mine. She was breathless from her pleasure as I pushed my hips deeper into hers even though I was softening and kissed her again. Wrapping her in my arms and squeezing her like I was trying to crush the life from her. She clung to me as tightly as I did to her. \n\n\"Oh Rita. Rita,\" gazing into her eyes I whispered before leaning in kissing her, very very gently, very very tenderly, brushing my lips across her, brushing her lips apart and now my tongue sought his, delicately. \n\nI pushed myself up with my arms and rose onto my knees as she unwrapped her legs from my hips and laid them at my sides. I looked down again. Her puffy lips were wide open around my cock, which was now just as wet as she was. I started slowly pulling out, but not before she locked her heals around me to pull me back into to her as I laid back down on top of her. \n\n\"Not yet.\" \n\n\"Am I squishing you?\" \n\n\"No. You feel wonderful right where you are.\" Rita's eyes were closed. A slight smile only hinted at the depth of the pleasure she felt from her head to her toe. As her hands circled around my neck, pulling me in for a long and deep kiss. Her erect nipples against my chest. \n\nI continued to soften before rolling off to the side, pulling her completely naked body close to mine as I gently rubbed her back and held her, stroking her everywhere I could reach and feeling nothing but warm skin. Her head on my shoulder and a soft breast against my side, her right hand resting on my chest, my disappearing erection lying against my thigh. The sheen on my dick was creamy now, like a white glaze. \n\nThe room was quiet; just our breathing and some outside sounds. A slight breeze came through the window and over our bare skin as we lay together enjoying the closeness of what we had just shared. \n\nRita spoke first. \"I never knew it could really be like that. My one and only time was fast and miserable. OUR first time was fun, and also really, really nice. I had dreamed and imagined what it would be like being made love to. Of the closeness. Of the tenderness. But never really thought it could be like that,\" she whispered into my neck. I was savoring her beautiful naked body touching my body. I enjoyed the feel of our breathing as it became one. I could feel our heartbeats beating in a synchronized manner. \n\n\"Rita, I will always remember our first time together; but, I will never - ever forget today. Here with you,\" I whispered back as our lips met. I continued, \"I'm thinking that right now I am the luckiest guy alive. Laying here skin-to-skin next to my girl friend (I make it a point to make it two words) savoring the closeness we just shared. Asking myself, 'why didn't we mend our fences long ago?'\" \n\nAs if reading my thoughts, as she continued to move her fingers lightly over my chest, she says, \"You know, that night of the party, in your dad's truck, before we left. We wondered why we didn't clear things between us earlier. I think even if we had we wouldn't have wound up together, and especially not here. Not like this. I think some things need to run their course. WE had to run OUR course. Time. \n\n\"To meet up like we did at the right time for each of us, emotionally and ready. I mean the night we got together was a first for me, in a way. I had never gone that far with a guy the first time together. But something was different that night; with you. I don't really know how to explain it. I've talked to Chris about it. She doesn't have an answer either. She knows that now it's more than the physical stuff. She knows how you feel about me and how I feel about you. She just says to go with the flow and have fun together. Enjoy each other. Just don't get hurt; either of us,\" the last part there was a bit serious tone there. \n\n\"Rita, I would never hurt you, again.\" \n\n\"I know. I truly know, and thank you,\" as our lips met for a long and deep kiss. \n\n\"We're going to need a LOT more condoms,\" she giggled as she pulled back and looked at me smiling. \n\nSitting up, she looked down at my softening dick as it rested against my thigh and giggled, \"I've never seen it like that. I thought it was always hard. What's the matter, doesn't he like me anymore?\" she grinned. \n\n\"He will always like you. Just like me.\" \n\n\"If you want to get rid of that, and clean up, the bathroom's down the hall.\" \n\nReturning to her room, I found her in the same position as I had when I first entered her room. Opened, only this time with a satisfying glow. I couldn't get over what a stunningly beautiful and sexual creature she was. \n\nWe lay together for a bit. Chit chatting as she toyed with everything down there; her finger first toying with my pubic hair before lightly stroking my scrotum, tracing the length of my semi-hard dick as we tried to come up with when, and how, we can get some \"alone time\". It seemed like it was going to be hit and miss. But, we both agreed that the back seat of the car or the back of the truck wasn't going to cut it... after today. We also agreed that we would continue to \"play\" in our spot, but 'Love Making' was going to be special. The blanket was going to get a workout. \n\nIt wasn't long before I started to throb and grow in her hand. That fascinated her as it throbbed as I went from half-staff to full-staff and ready to go. \n\n\"I've never watched one actually get hard. Actually, I've never seen one soft before. How big is it when it's normal? Watching and feeling it get hard is sooo exciting.\" \n\n\"It's not that big when it's normal. Probably a couple of inches. Never measured when it was soft. I guess I'm a grower instead of a shower.\" \n\n\"I'm glad it grows,\" she giggled, \"Will I ever be able to see it 'normal'?\" \n\n\"I doubt it. It starts to grow whenever you're near.\" \n\nShe giggled, cupping my scrotum and massaging my loose balls. \n\nThe second time was more playful. She would bring me to the edge with her hand and then back off. I got her to come once more before she rolled onto her elbows and knees with her cute little smooth bottom high in the air. Her sex completely open to me. \n\nPeering back at me and grinning, \"How's this?\" \n\n\"Oh MY,\" was all I could say as I took in the view as I rubbed the head of my now encased dick against her wet folds. \n\nI slid into her all the way in one slow stroke, gasping as I bottomed out. Immediately she began rolling her hips, as though she were getting it to fit inside, then she slowly pulled forward. Stopping just as the head was about to slip out, then pushed her little butt back against my body, filling her completely as we both gasped. \n\nSitting up to rest the back of her head against my shoulder I would reach around to cup and kneed each little mound of flesh before returning to rest on her elbows - her smooth bottom again high in the air, her face in the pillow while her little boobs swayed with each thrust as her hard nipples moved across the sheets. \n\nThis went on for another half dozen strokes before she started driving her soft bottom hard against me, I put my hands on her hips and took over. I didn't pound, just made sure it bottomed out each time. \n\n\"Faster and harder.\" She panted. \n\nSoon, I was jamming my dick as deep as it would go at a break neck speed, with her matching every stroke as my loose sack banged into her luscious butt cheeks. We were both breathing hard, ready to go overboard, reaching down to rub her clit she gave herself another one as I moved in and out. Feeling the walls spasm around my dick as each wave of her orgasm ran through her body was heavenly. \n\nSitting straight up I watched as my glistening hardness would move in and out of her wet folds; her rosebud in clear view. My scrotum pulled up tight as I felt that familiar sensation build, and build before erupting with a final thrust deep inside as my balls emptied themselves one more time. A new one for both of us. I think she liked that position too; hitting places that had not really been hit before. The feeling was new, and just as wonderful as everything else. Her idea? Maybe Chris's? Going to have to thank that girl someday. I keep saying that. Little did I know. This was going to be a fun summer. \n\nIt was getting late into the afternoon and I needed to get home for dinner and Rita needed to clean up before her mom got home. She also probably needed to call Chris to relay all the details of the afternoon. I had no doubt that Chris was fully aware of what the plan was for the afternoon. \n\nAs I dressed, Rita laid sprawled on the bed and watched. \n\n\"Aren't you going to get dressed?\" I asked. \n\n\"Why? Do you want me to? I thought you enjoyed looking at my body,\" she said playfully - smiling - as she swirled her finger around her right areola and nipple as her legs slightly parted, before splaying wide apart. ",
        "\"You keep doing that, and I may have to strip back down, and take you one last time.\" \n\n\"Promises. Promises,\" she smiled and laughed. Always the tease, and she knew exactly how to tease. \n\n\"I wanted to send you out the door with this vision burned into your brain that will last until our next time.\" \n\nWith that, she rose and leaned in, wrapped her arms around my neck and pulled us together. My arms circled her as I ran my hands up and down that smooth bare back to cup each firm butt cheek. She walked me down the stairs to the door and gave me one last kiss before pulling my hand down to her mound as her legs opened a bit. \n\n\"Get a sample for later,\" she cooed as my fingers parted her wet folds, coating them with her wetness, her eyes sparkling full of mischief. \n\nAs I sat in the car, I caught motion of the front window curtain as it opened slightly. Her head peaked around the corner of the curtain, as if checking out the neighborhood, before quickly stepping into the window, smiling, and waved in all of her glory. \n\nAnother image seared into my brain. This was indeed going to be a wonderful summer."
    ],
    "authorname": "32aa",
    "tags": [
        "18 year olds",
        "erotic couplings",
        "romance",
        "small breasts",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/graduation-summer-ch-06"
}