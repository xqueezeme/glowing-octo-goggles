{
    "title": "Charity Dinner",
    "pages": [
        "\"I feel underdressed,\" I mumbled.\n\n\"You are underdressed,\" Kelvin responded.\n\n\"No shit.\"\n\n\"I offered you a dress.\"\n\n\"Your current floozy's dress? I would not have fit in it.\"\n\n\"Yeah, but it would have fit in here. It's couture. It probably cost as much as you make in a month.\"\n\n\"Even worse. I'm not sure if I'd be more worried about spilling on it or spilling out of it.\"\n\nKelvin had always been into tall, thin girls for as long as he'd been into girls period. Tall and thin didn't run in our family, though, and while I wasn't so short I couldn't have made it work I was blessed (or cursed) with a bit more on top, and on bottom, than the girls Kelvin tended to go for.\n\n\"Anita if you'd spilled on that dress Lisette would have killed me.\"\n\n\"How the world would suffer.\"\n\n\"Be nice, I'm the reason you're even invited to this party.\"\n\nWhich was true. Expensive fancy charity dinner parties weren't the kind of thing that twenty-seven year old middle-class insurance agents got invited to, even if they had been voted \"Agent of the Year\" last year. My boss blamed \"good work ethic\" and \"ability to relate to the client.\" I blamed \"not sleeping,\" \"being friendly,\" and \"leaving the top buttons undone.\" It did earn me a cool blue nametag with \"Agent Wang\" on it, though, so there were some perks. Occasionally I got to imagine I was FBI.\n\nBut yeah, Kelvin was right: I never would have been invited to a Charity Sider party if he hadn't dragged me along. I give him crap for his supermodel girlfriends because that is what big sisters do, but he wouldn't have gotten invited either if it wasn't for those same girlfriends. Supermodels get invited as unpaying guests to expensive charity dinners that rent out entire restaurants on the thirtieth floor; hair stylists do not. Supermodel's boyfriends who are hair stylists do, though, as do sisters of hairstylist boyfriends who are visiting for the week when said supermodel get a last minute gig and there's an extra invitation. That explanation might have gotten away from me.\n\n\"You did a nice job with my hair though,\" I admitted. Peace offering. This is also what big sisters do.\n\n\"You like it?\"\n\n\"Yeah. Blue isn't really my color but it goes well with the clothes.\"\n\n\"If you can even call those clothes.\"\n\n\"It was short notice,\" I responded. That and I hadn't been willing to spend more than twenty bucks for something I was going to wear once so I'd raided an outlet store. I'd repurposed a black skirt and teamed it up with a blue wrap top I'd found off the rack. Add a pair of heels and the ensemble almost worked, but Kelvin really tied it together when he'd given my black hair a bit of blue, dying it brighter as it got near the ends. When I pulled my hair back in a ponytail my head was black, the ponytail blue. When I let it hang to my shoulders it looked fashionable enough that I almost looked like I belonged at this party. Almost. Maybe. If you don't look too hard.\n\nKelvin, on the other hand, definitely looked like he belonged at this party which is why he took point on getting in. Kelvin always looked impeccably dressed, even when he wasn't, and he was always impeccably styled. Always. This was the type of party where a man in a suit stands sentry at the door to send away the riffraff so Kelvin took point and thanks to him, and a waved invitation, we were not classified as riffraff.\n\n\"Say thank you big sister,\" Kelvin mumbled as we walked through the shiny brass doorway.\n\n\"Thank you little brother,\" I responded with complete sincerity. Kelvin's a good brother, and I try to be a good big sister. Part of being a good big sister is giving him shit, but another part is knowing when to stop.\n\n\"You off to the bar?\"\n\n\"These are your people, not mine. I can mingle, but I need a little social lubricant first.\"\n\n\"Can I abandon you?\"\n\n\"Yeah, have fun. Mingle. Make some contacts. Maybe meet your next floozy.\"\n\nKelvin was already a few steps ahead of me but turned back slightly to smile. \"You know me!\"\n\nYeah, I do. I enjoy crowds and parties, but Kelvin takes to them like a fish to water. Mingling is his favorite activity and his best skill. I'm great with people I know, I can schmooze with a client, but handling strangers outside a professional context goes much better with a drink or two on board so as Kelvin disappeared into the crowd I looked for the bar.\n\nThe restaurant was big. Standard height ceilings but those were mirrored and made it look even larger. The entryway wasn't overly large but wide doorways opened to at least three other rooms, one of which looked cleared of chairs and tables and which exited out to a balcony through wall-high windows. The others had tables but very few chairs meaning most of the crowd was standing. There were statues. There was a fountain. Music was thumping from somewhere further back, far enough and deep enough that I felt more than heard it. There were people everywhere, well dressed, beautiful people except where they were rich enough to not care. As I gawked around the room, a tall guy in an out of place leather duster walked by me. With a hooded hawk on his arm. Because it was a Charity Sider party and shit like that happens when you're the third wife of a man who owns fifteen percent of the malls in the country. You get hawks. And probably tigers too.\n\nI'd come here to see some interesting, crazy, upper class shit and it looked like this evening was not going to disappoint. If I was going to properly enjoy it, though, I really needed to get properly intoxicated first. Not enough to be drunk, just enough to loosen up.\n\nThe bar was, fortunately, easy to find and, fortunately, a little more private than the other rooms. There were temporary bars set up, at least one in each of the main rooms, but they were each surrounded by jolly partygoers and no chairs. The restaurant bar was located near the middle of the whole arrangement, with entrances to two of the dining rooms, was staffed, had chairs, and was a lot less packed. So I found a barstool and hopped up.\n\n\"What'll it be?\"\n\n\"Hairy navel. Wait, what kind of orange juice you got?\"\n\n\"Fresh,\" he replied, pointing at an artistically displayed pile of citrus fruits and almost sounding insulted.\n\n\"...yeah that'll do.\" Seriously? I just didn't want him using Tropicana.\n\nI got my drink a couple of minutes later and the bartender went off to help someone else. I socially lubricated and watched the crowd. A guy in a wheelchair cruised by with LED spinners on his wheels, a lady in a dress that looked taped on holding his hand. Someone I think I recognized from a movie was loudly discussing something, hands waving, just outside the bar. A waiter came by with tiny little appetizers, tiny little mushroom appetizers with something red and pink inside; she had glitter on her eyelashes and her uniform fit like it was tailored. It probably cost more than anything I'd ever owned. After ten minutes of watching the rich and famous and feeling very, very out of place I'd finished my drink and decided another jolt was called for.\n\n\"Bartender?\"\n\n\"Another one?\"\n\n\"Yeah, what do I owe you?\"\n\nHe looked confused. \"It's an open bar.\"\n\nYeah that makes sense.\n\n\"In that case I'll have one of those, too,\" said a voice as a man sat down next to me.\n\nThe bartender shrugged. \"Two, coming up.\"\n\nI turned to look at the new arrival. He was about as well dressed as I was: button up shirt, khakis, both of which looked off the rack. He had a great haircut, although his wasn't blue, and a short groomed beard. Nothing screamed money except his watch, which looked expensive although it could have been a knockoff. My purse was a knockoff Prada, I called it the Frauda. Knockoffs were how us poor people feel rich.\n\nMy guest was probably about my age, maybe a few years older because there was a little grey around his ears and chin. I looked at him and he looked back, eyes flicking around before settling on my eyes in a friendly \"hi how are you doing, I'm sitting in the stool next to you at a bar\" kind of way rather than an \"I'm making direct eye contact to assert my dominance\" kind of way. So we were off to a good start.\n\n\"You don't even know what I'm drinking,\" I said by way of introduction.\n\nHe shrugged. \"Worth trying something new and I feel like I could use a drink before braving the mob.\"\n\n\"You too, huh?\" I decided I liked him, at least so far. I held out my hand.\n\n\"My name's Anita,\" I continued.\n\nHe took it. \"Dixon.\"\n\n\"Nice to meet you.\"\n\n\"Likewise.\"\n\nThe bartender brought our drinks and we both took a sip. It was as good as the first, and I'm pretty sure a little bit stronger too. I think I've been to one open bar party in my life and they watered things down pretty hard; not here, though, not at a four figure a plate (unless you know somebody who knows somebody who got invited) Charity Sider charity dinner. Nope, here there's open bars, the drinks aren't watered down, the food is all tiny and people carry hawks.\n\nAs if he was reading my thoughts, Dixon spoke up. \"What brings you to this exercise in excess?\"\n\n\"Visiting my brother. He's in fashion and knows the right people. Figured it would be fun to tag along. You?\"\n\nHe shrugged again. \"Similar. Visiting family coming to the party and figured I might as well too. Seemed better than sitting on the couch watching late night TV.\"\n\nI snorted. \"Family, huh?\"\n\n\"Yeah. What?\" He must have seen my expression. Whoops.\n\n\"Nothing, I... no, nothing.\" Now I felt embarrassed and I hadn't even said it. It had seemed funny in my head. Really. Now that he asked, though, it just sounded juvenile. And less funny. Except I'd smirked. And he'd noticed. And now there was an awkward silence, soooo...\n\n\"It's just,\" I started, \"you said it and I was thinking about this charity party we're all at and thinking... you know, the Charity Charity and and seriously why would you name it that? Yeah that's funny for about three seconds but why would you ever make that joke and run with it? And then I thought huh, wouldn't it be funny if he was Charity's brother, because she's Charity Sider, well Charity Sider-Hews on paper probably but no one says the Hews and anyway that would make you, well...\" I waved my hand, encouraging him to fill in the rest for himself because I was way too embarrassed to at this point.\n\n\"I'd be what?\" he asked.\n\nWell shit. \"You know. Dixon. Sider. Dixon Sider.\"\n\n\"Huh,\" Dixon responded in a neutral tone.\n\n\"Dixon Sider, as in dick's in... no, never mind, it's not that funny. Immature, sorry, just... be funny if you were her brother is all.\" I trailed off, finally getting my mouth to stop rambling. Shut up, Anita, shut up shut up shut up you did not need to explain the joke! Maybe I needed more lubricant. Or less.\n\n\"Yeah,\" he responded in that same flat tone, \"if I were her brother.\"\n\nGreat, cutest and least not-my-people guy I've seen so far and I had to start running at the mouth again with a stupid... whatever. Maybe I should have stayed home and saved eighteen seventy-three and an evening...\n\nWait.\n\nShit. \n\nShit shit shit.\n\nShit, Anita.\n\nShiiiiiiiit whyyyyyy?\n\nHe wasn't watching me, he was just sitting on his barstool, taking a sip of the drink he'd ordered because I ordered one which is barspeak for \"I'm interested\" but now he's looking at something behind the bar, waiting for it, waiting for me to say it and I really didn't want to but now I had to because great, great going Anita. Shit.\n\nI took a deep breath and said it. \"You're her brother aren't you?\"\n\nHe nodded. \"Yup.\"\n\nShiiiiiit!\n\n\"Sorry,\" I finally said and took a long hit from my drink.\n\n\"I don't mind. Believe me I've heard it before. Novel having someone come at it from that direction though.\"\n\nI wouldn't have minded him coming at me from a few directions. Too bad I'd shot that one in the foot. I mean, it's not like anything would come of it, we'd chatter and flirt a little and maybe have a fun night together and make out, or something, but... but you know maybe something can be salvaged. Maybe. If I play it right.\n\n\"Never thought about changing it? I did.\" Hook: baited.\n\n\"It didn't seem worth the effort, honestly. People stopped making quite as big a deal to my face as I got older. And it was my name, even if it does make teens and cute girls in bars snicker behind their hands.\" Ouch. Wait, cute? That sounded like flirting.\n\n\"You were thinking of changing yours?\" he continued, interrupting my train of thought.\n\n\"Yeah,\" I replied, trying to get a new handle on where this conversation was going.\n\n\"Why? Anita's a pretty name. I like it.\"\n\nHook: sunk... wait that was flirting. That was definitely flirting. Did cute guy with the dignified flecks of grey in his beard just flirt with me? He did. I sat up a little straighter in my chair, shifted in my seat, felt the cringe sliding off my face and a smile sauntering in to replace it. Maybe I had salvaged this; I just had to embarrass myself first.\n\n\"My last name is Wang. I'm Anita Wang.\"\n\n\"As in...\"\n\n\"I need a wang. Yes.\"\n\nHe nodded. \"Ouch. I thought I had it bad.\"\n\n\"Yeah. School was a bit rough. I had to get good at making friends or cracking heads.\"\n\n\"Which did you choose?\"\n\n\"A bit of both.\"\n\n\"I heard that. Had its advantages sometimes. Good stories. A few good laughs.\"\n\n\"Like when someone comes at it from a new direction?\"\n\n\"Yeah, especially when that someone is attractive when flummoxed.\"\n\nFlummoxed?\n\nHis body language had changed at some point; he'd slid his drink over, his body turned towards me, and I'd followed suit. Now we were both leaning in, talking quieter because we didn't have to be quite so loud over the chatter and the band. The evening was definitely recovering but even so I couldn't resist ribbing him for that one because, really?\n\n\"Really?\" I asked, smiling to try to take the sting off. \"Not your best line.\"\n\nHe grinned back and took a drink. \"Talking to pretty girls always gets me a little tongue-tied.\"\n\nI grinned. \"Better, you could still use a little practice though.\"\n\n\"Can I practice on you?\"\n\nI laughed. \"Even better. Want to try again?\"\n\n\"Give me an opening and I will.\"\n\n\"I've got a few openings you could fill,\" I said before my brain caught up with my mouth and I snapped it closed.\n\nDixon stared at me. I stared back at him, feeling the blush crawl up my neck. Then he grinned, I grinned, and we both started laughing. It was more than a chuckle but not all the way to cracking up, and the evening was saved again by a cute guy with a sense of humor. Who I was flirting with, and wouldn't have minded hanging out with and enjoying the rich people shenanigans with. Or making out with. Or filling holes with, if I'm being perfectly honest and you know what? Crazy party. Crazy stories. Crazy... me. Maybe.\n\nMaybe I would see where this evening went.\n\n\"Tell me about your hair,\" he said.\n\nSo I did. Then we moved on to what my brother did, what I did, other things. Around us the party kept going, but at the bar it was just Dixon, me, and the guy at the far end of the bar who only had eyes for his growing grow of empty glasses. Other people came and went but almost none of them stayed for any longer than the time it took to get their drink. The bartender came by a couple of times to check on us but mostly left us alone to chat and sip. He knew his job. Outside the bar the music changed, the thumping bass of it halting for a bit before being replaced by what sounded like strings, and live ones at that. Of course there'd be a live band, whatever did I imagine? By then, Dixon and I had turned ourselves almost straight towards one another, each leaning one arm on the bar, faces only a couple of feet apart. I liked the way his eyes looked. I liked the way he smelled. I liked the little patch of chest hair at the neck of his shirt. Chest hair is hot. Shut up.\n\nEventually the conversation came back to names.\n\n\"Worst story,\" I asked him, smiling and trying to get him to laugh again. \"You first. What's your worst story about your name?\"\n\nHe thought for a second. \n\n\"I was dating this girl in high school,\" he began, \"and her dad called me. He asked me if I knew where his daughter was. We were dating, me and his daughter. She was late for curfew though and I said no, I hadn't seen her. So he replied: You're Dixon Sider, right?\"\n\n\"Like, your or you are?\"\n\n\"That was what I thought too. You are. Nearly gave me a heart attack.\"\n\n\"So was it?\" I asked.\n\nHe turned towards the bar to lift his drink, breaking eye contact. \"Not at that exact moment, no.\"\n\nI laughed, feeling my heart speed up, feeling things tingling between my legs as my mind started to race with images of a younger Dixon and some girl... some girl who looked an awful lot like a younger me. The bartender had kept bringing I don't know how many drinks so I asked the next question that popped into my head because sometimes, when I am drunk, I am not smart; or maybe because I'm way smarter than I give myself credit for. \"Had it been?\"\n\nHe grinned into the glass. \"When?\"\n\nYes holy fuck yes he's playing along but shit how do I answer that question? \"That day?\"\n\nHis grin grew wider. \"Does her mouth count?\" \n\nI giggled, feeling butterflies in my stomach as I pictured... well, I won't say it, you know what I pictured.\n\nWe'd been flirting for the last I don't know how long but we hadn't quite gotten back to \"I've got an opening you could fill.\" We'd gotten through \"getting to know you,\" or at least I had. I'll admit I'd done most of the talking and while he probably had a thorough understanding of being an insurance agent and the hassle that was my landlord I knew less about him. He worked for a tech company whose name I recognized and he owned a house in the city that he'd recently redone the wiring on; he'd gone into some detail but he'd lost me while talking about J boxes.\n\nNow though, now we were firmly back in sex talk land and now that we'd gotten there I kind of wanted to stay for a while. I'd planned on coming to this party and getting buzzed, meeting famous people, meeting weird people, seeing some crazy upper class shit and waking up with a hangover and a few good stories tomorrow. I had not planned on coming to this party and getting buzzed, hitting it off with Charity's super hot brother, dragging him back to a hotel room, fucking his brains out and waking up with a hangover, some really good memories, and hopefully a naked guy in bed next to me. I'd never done anything like this before, hooked up with a guy, but I'd also never been to a rich people party before and, well, I was quite a few drinks in and booze makes me horny. And brave. Horny and brave. And Dixon was making me horny and brave too.\n\nBut mostly horny.\n\nI put my hand on his arm.\n\n\"Seriously? When?\"\n\n\"After school in the back of my car. We'd actually been going to, um, hang out,\" it was very clear from the way he said it what Dixon meant by hang out, \"that night but her friend Tanya had called about sneaking out to some movie so Erika said she'd um, make it up to me.\"\n\nI laughed as much at his choice of metaphors as his story. \"Sounds like Tanya did you a favor.\"\n\n\"More than one, if we'd been hanging out Erika may very well have been at my place when her dad called and who knows what I would have blurted out then.\" \n\nHe'd finished his drink and turned back towards me; not at my face, though. His eyes had strayed more than once tonight which hadn't been entirely his fault. Like I said I'm not tall, and Dixon was, which meant he had to look down to meet my gaze. Like I also said I'm blessed with a bit more on top than the girls my brother goes for, and like I further also said I hadn't packed for a fancy dinner so I was wearing a fashionable, almost sleeveless wrap top that I'd purchased that afternoon for eighteen seventy-three at an outlet store which... well I knew what I was getting into but the top had defied even those expectations. To anyone who's never had a bit more on top a wrap is kind of like wearing a name tag that says \"Hi my name is Anita and these are my boobs\" so between the top, his height, and some strategic adjustments I'd made over the last hour there were an awful lot of curves and cleavage on display and I'm imagining they were even more fun to look at when I laughed. Which I was doing right now.",
        "I'd given him a glimpse and gotten glances back. Now I wanted his full attention.\n\n\"So what did you blurt out instead?\" I asked as I put my hands between my knees, pushed my elbows together, and leaned forward towards him. I was just leaning in to hear him better, honest.\n\nI'm lying. I did it so he'd look down my top. Hook: baited\n\nI watched his eyes, his eyes watched my boobs. Just leaning in would probably have been enough, propping the girls up like that may have been overkill because as the view got better and better whatever he was going to say collapsed into a stutter. A thrill shot down my spine. Hook: sunk.\n\nI grinned up into his eyes that were not looking back into mine, his face an expression that made me squeeze my thighs together and start wondering how best to not-so-subtly hint... and that's when I saw him out of the corner of my eye:\n\nKelvin.\n\nKelvin my brother, coming towards me out of the crowd. Kelvin my brother the socialite, who should have been boozing and schmoozing with a dozen ladies who would be at his hair salon the next morning, coming out of the crowd to check on his big sister and make sure she was alright. Kelvin my little brother who is a really great little brother, who does my hair for free and takes me to the fanciest parties and wants to make sure I am having a good time. Kelvin my little brother who is about to have the worst timing in the world.\n\nI stared at him, willing him to make eye contact. I couldn't move my arms, I couldn't say anything, not without alerting Dixon and I probably had about five seconds before he escaped the glorious, mesmerizing power of my boobs. I shot at Kelvin with my eyes, willing my little brother to see me, to see them, and to get it. He did the first two, at least: he saw me, his face lit up in a smile, and he started to raise his hand. I shot at him again and he froze. Then I glanced quickly at Dixon, then I glanced very, very pointedly at Somewhere Else. Kelvin, still frozen, also glanced quickly at Dixon and noticed that Dixon was glancing for a very long time down my eighteen seventy-three at the outlet store top. My brother, my glorious amazing younger brother who does my hair and invites me to parties and does not cockblock me, turned right around and disappeared back into the crowd.\n\n\"Anita?\"\n\nI glanced at Dixon. \"I'm sorry what?\"\n\n\"I asked if I was boring you.\"\n\n\"No, sorry,\" I waved, \"I thought I saw my brother over there.\"\n\nHe started to turn, \"Oh, I'd like to...\"\n\nI released the girls and put my hand on his arm again. \"Nope, not him. We could go find him later, though, if you'd like to meet him.\" Later, like tomorrow, after you've dragged me off to a hotel room somewhere and fucked me until I can't walk straight. You know Dixon, my tits look even better out of this top...\n\n\"Your turn,\" he interrupted.\n\nI coughed. For a second I wasn't sure if I'd said that in my head or out loud, but Dixon's question and expression confirmed it: I had not just asked him to fuck me until I couldn't walk straight. Not yet. We weren't quite there yet.\n\n\"My turn for what?\" I asked. Come on Anita, get your head out of the gutter and back in the game!\n\n\"To tell your story. Worst story about your name.\"\n\n\"Worst, huh?\" I asked, dredging around.\n\n\"Worst,\" he confirmed.\n\n\"Oh shit,\" I muttered, thinking, \"mine is nowhere near as good as yours.\"\n\n\"You've got to have a good one.\"\n\n\"Oh I've got a dozen good ones. Probably high school for me too, new year and this grandmotherly social studies teacher, she must have been a few years past retirement already and the nicest lady. She's doing roll call the first day and I'm whispering away with my best friend and don't hear her calling me: \"Wang? Anita Wang? Anita Wang here?\" Everyone's giggling and snickering and she has no idea, and finally the guy behind me pokes me and I look up. The whole class is staring at me and Mrs. Beck is staring at me and she calls: \"Everyone? Anita Wang?\" All I want to do is sink into my chair so badly that I can't even squeak \"present,\" and she calls it out again before my bestie raises my hand and says \"she's right here, Mrs. Beck.\" I got a friendly but stern glare and told \"Ms. Wang, please pay better attention in future.\" I wanted to die.\"\n\n\"That doesn't sound so bad,\" Dixon said, although he was smiling.\n\n\"But she was so nice, and she had no clue!\" I responded. \"And anyway, after that I was also called Ms. Wang. And a joke got going, did you miss your wang, because I heard Mrs. Beck needed it. I could handle it, I'd been handling it for years but I was embarrassed as hell for Mrs. Beck. She was my third most favorite teacher.\"\n\n\"So you could handle it but Mrs. Beck couldn't?\"\n\nI shrugged. \"Yeah, or at least I thought she couldn't. Looking back she raised four boys so I'm pretty sure she could handle anything.\"\n\n\"Thanks for sharing,\" he said, taking a sip of his drink. Okay, a sip of the ice at the bottom of his drink; he'd swapped to something different after those first few but I was still drinking fuzzy navels, or had been but the bartender hadn't been around in a while. I glanced down at my empty glass and suddenly this felt like the right time, now because I was a little drunk and a lot horny and he was a little drunk and a lot hot; now before the bartender got back, now was the time for... for not-so-subtle hints.\n\nBut I needed a segue.\n\n\"I know it's not quite as much fun as yours. Sorry it didn't end with any, you know,\" I told him. Okay, too subtle and honestly cringeworthy. Look maybe I'm not the best with pickup lines either but it's hard to think when you're hoping that tonight's story will end with some you know.\n\n\"How could it? You were missing your wang.\"\n\nI gawped. \"I've known you for what, a couple of hours and you do this to me. I've already decided I hate you.\"\n\nHe laughed. I liked his laugh. I liked his laugh a lot and I wanted him to do it more, hopefully while inside me.\n\nYou know what? Time for not so subtle hints.\n\n\"How about best?\" I segued, putting my hand back on his arm; in the back of my mind a plan was starting to come together. A cunning plan. A not-so-subtle plan.\n\n\"Best what?\" he responded.\n\n\"Best story about your name.\"\n\nHe looked thoughtful. \"Oh, um, hmmm. I'm not sure I've got one.\"\n\nI smiled at him, \"Okay, I'll go first then. Best story about my name. Want to hear it?\"\n\n\"Yeah.\"\n\n\"Hey Dixon,\" I said, heart pounding in my throat as I desperately tried to keep my smile at just amused instead of... well.\n\n\"Yeah?\" He looked a little confused.\n\n\"Can you do me a favor?\" Keep it together, don't smile...\n\n\"I thou... yeah, sure, what is it?\"\n\nI couldn't do it, the grin broke out. I leaned in, feeling that smile pull my face, my eyes, stretch from ear to ear as I whispered into his. It may not have been the best line, but I was betting on it working anyway.\n\n\"I need a wang.\"\n\n\"Wha...\" he started and then paused. Then I swear I heard the relay click in his head; his arm tensed and he sucked in a rapid breath followed by a murmured \"oh fuck...\" His fingers tightened on my knee. When had he grabbed my knee? Suddenly it was like all my nerves were firing a hundred times brighter the moment he'd whispered those words and his fingers twitching on my bare knee... Holy shit no don't take it away leave that hand there, actually even better put the other one on and spread my... no, shit, no we need to...\n\n\"I'm in a hotel a couple of blocks away,\" he whispered in my ear.\n\nYeah, yeah, that we need to that. Hotel. Go. I grabbed the Frauda off the counter.\n\n\"Let me text my brother,\" I said, popping it open and fumbling for my phone, \"do not go anywhere. Nowhere. And um...\"\n\nHe stared at me. \"Yes?\"\n\n\"Leave your hand there.\"\n\nHe grinned. \"Here? Not...\" and he pushed his fingers under the hem of my skirt.\n\n\"No, there's good too,\" I gasped, feeling the tingle shoot from my knees up my spine, legs tensing as I fumbled with my phone. He is still moving why is he still passcode passcode shit why can I not remember my passcode maybe it has something to do with the hard, warm hand sliding up my...\n\n\"You know,\" I heard myself saying, \"maybe I'll just text him later.\"\n\n\"Better do it now,\" Dixon said from somewhere far too close to my ear for clear thought, \"won't you be busy later?\"\n\n\"Have you got plans?\" I asked. Five eight four seven three yes I'm in shit okay \"Headed out stay have fun\" send done...\n\n\"I've got a job interview,\" he said.\n\nAnd the thought train crashed.\n\nUm... what?\n\n\"What?\" I said out loud.\n\nHe grinned. \"Aren't you looking for someone to fill a few openings?\"\n\nThe spell broke and that moment of intensity, that bubble around us, popped. Oh I was still riled up as fuck and his fingers still felt like liquid magic halfway up my thigh but I could suddenly think through it all. I laughed. He laughed. I tried in my new clarity to gracefully dismount the barstool where I'd been sitting and drinking for the last however long and succeeded at the dismounting part but not the gracefully part. Warm, strong hands caught me as I grabbed for the counter. Tingles. Fucking everywhere.\n\n\"You okay?\" he asked.\n\n\"You can leave your hands there, too,\" I murmured. \n\n\"Anywhere else?\" he asked.\n\n\"Anywhere you like,\" I replied, then, just to make sure things were clear I made eye contact and added: \"anywhere.\"\n\nThe trip back through the party was a bit of a blur. There were more chairs out, I know because I had to weave through them on my way out which is a lot harder to do when you're a bit drunk, wearing heels, and holding hands with a man who is desperate to get you back to his bedroom so he can fuck you senseless. There was a light show going on in one of the other rooms, along with whatever string band was playing. There was some guy doing something with fire on the end of a stick. There was not a tiger... but there was a much smaller cat riding around on someone's shoulders that did not look like a housecat. This was probably my one chance to see crazy rich people shit and I was missing it. String quartets, hawks, giant cats, famous actors, and all. And I did not care. I liked my plans better.\n\n\"Have a good night, Mr. Sider,\" the suit at the door said as we brushed past. Dixon gave a polite \"good night.\" I just gave him an \"I'm getting laid\" grin; I'm not sure if he picked up on it though. The hallway outside was nearly empty and we almost ran down it to the elevator bank at the far end where a man in a silly red uniform waited by the elevator to push the button. No, really, a pimple-faced boy with a silly hat was standing there just to push the down button as we got closer, although in the moment I was very appreciative for the five seconds he saved us\n\nWhen the elevator arrived it was empty, which was good because it only took about three seconds after the door closed before we were all over each other. I don't know what would have happened if there had been company, if we would have just stood there holding hands bristling with sexual tension or if I still would have pulled him down and jammed my tongue down his throat.\n\nOkay so subtlety'd gone out the window at this point. As for the pulling he was a good few inches taller than me so even in heels it was necessary to get a little help. I grabbed him by the shirt collar with both hands, stood on my tippy toes, and jammed my lips against his. Full tongue, because that was the kind of mood I was in, and while he met me just as eagerly the tongue may have caught him by surprise. My hands pulled tight on his shirt. His hand grabbed my boob. He jammed his body against mine, pushing me up against the wall, pressing our hips together and leaning into me as my head bonked the wall and our teeth clicked hard enough to send a shot of pain through my face. We broke away for a second, giggling, his hand going to his mouth but both of us still staring into each other's eyes.\n\n\"I really want you,\" he said through his fingers.\n\n\"I really want you inside me,\" I replied.\n\nHe groaned. \"I can manage that, but...\"\n\n\"But what?\"\n\nHe was breathing hard. \"It's going to be a long walk to the hotel.\"\n\nThen the elevator dinged and we had just enough time to step apart before the door opened. My hair was probably mussed, our clothes were definitely mussed, and my makeup had likely seen better days but movies had apparently lied to me: there was no line of people waiting for the elevator in the lobby, ready to be stunned by our obvious elevator tryst. There was barely anybody in the lobby period, actually, since this was mostly an office building by day and the one security guard at the desk was too busy staring at his tablet. Unlike the guy upstairs he didn't merit a wave or a grin, we just speedwalked out the door, my heels clicking on the fake marble floor, and out into the surprisingly chilly night.\n\n\"Fuck I should have brough a coat!\" I gasped.\n\n\"You want mine?\" Dixon asked.\n\n\"You're not wearing one.\"\n\nHe laughed. \"Well, I was when I showed up.\"\n\n\"Left in a hurry, did you?\"\n\n\"Well, I met this girl, we hit it off, and I just can't wait until my di...\"\n\n\"Don't,\" I said.\n\n\"What?\" he responded, laughing with his eyes, and I grabbed at his hand. \"Just come on.\"\n\n\"Anita?\"\n\n\"What?\"\n\nHe pulled me the other way, \"my hotel's this way.\"\n\nIt was only two blocks, like he'd said, but it was two remarkably cold blocks wearing a nearly sleeveless top and a skirt that didn't go down past my knees. You can only run so fast in heels, too, but I ran as best I could, giggling, holding on to Dixon's hand as he dragged me behind.\n\n\"Keep up!\"\n\n\"Keep your pants on!\"\n\n\"No longer than I have to!\"\n\nThen we were passing through the doors of a very tall building, flashing back to the elevator as a much older gentleman in a much less silly suit held the doors for us and said \"Good evening, sir, madam.\" We crossed the much more appointed and occupied lobby, feeling the warm air on the chill of my skin, and into another elevator, this one occupied.\n\nThis time there was no grinding liplock; this time we just stood, shoulder to shoulder, hands gripped tightly together, watching one another out of the corners of our eyes and trying not to laugh as we rode in silence with an older, distinguished looking couple. I glanced at the tall, handsome, funny man next to me with the little grey in his temples and a little of my lipstick on his face, and laughed. We'd been doing a lot of laughing, and I realized I was pretty drunk. And horny. I wondered if the couple would mind if we made out. I wondered how long it would take to get to his room. I did not wonder if a drunk hookup with the rich handsome brother of the super rich trophy wife was a good idea. Instead I wondered what he'd look like naked. Naked on top of me. Naked on top of me and inside me.\n\nThe other couple got off two floors before us. We still didn't jump each other but stood, waiting very impatiently as the doors closed and the elevator started up again.\n\n\"You're bouncing,\" Dixon said.\n\n\"Am not.\"\n\n\"You're bouncing. You're bouncing so hard I'm surprised the elevator isn't bouncing too.\"\n\n\"I'm impatient.\"\n\n\"Why would that be, Miss Wang?\"\n\nBecause I'm about to get my brains fucked out.\n\n\"Does being horny always make you this dumb?\"\n\n\"Only when the girl's as hot as you.\"\n\nThe elevator dinged so I wasn't left with enough time to decide whether that line was good or bad. Then Dixon was dragging me out of the elevator, down the hall, and around the corner, me giggling the whole way and trying not to fall down on heels that were suddenly very difficult to walk in. He stopped at the third door down and started fumbling in his pockets.\n\nI slid up behind him, pressing my tits against his back, grinding against his ass, sliding my hands around his body to almost reach his...\n\n\"Anita, um-\"\n\n\"This girl,\" I murmured in his ear, \"wants your dick inside her...\"\n\nHe groaned. \"You're making this really hard...\"\n\n\"That's the point,\" I giggled, and slid my hands down his thighs.\n\n\"Just... hold on a moment... it's here somewhere...\"\n\nOkay so I was a bit in the way, my arms around him were making it hard to get to his pocket but... oh no. I had a sudden, horrible moment when I remembered that his coat was back at the party. What if he kept his key in his coat, and we had to call someone up here to open his door for him? Or go back down to the lobby? It wouldn't take that long but I was dripping down my legs at this point, if he didn't get that door open in the next ten seconds I might just jump him right here in the hall.\n\n\"Dixon,\" I started, and my hands moved of their own accord to...\n\n\"Found it!\" he interrupted, fishing his wallet out of his pocket, \"I just need to um... uh... Anita... um...\"\n\n\"Hurry,\" I mumbled into his back. I was not helping.\n\n\"Kind of hard,\" he responded.\n\n\"Yes, you are,\" I said back, \"now get the door open before I pull it out right here.\" My hands had slid between his legs and now I could feel the bulge in his pants, rock hard and straining against his fly, and I cupped it, squeezing gently. I love cupping a man's package, although I prefer it just in underwear; there's something about the whole thing bundled together, balls and cock bagged up in a layer of soft fabric, that gets me going. I like to look at it. I like to feel it. It's better when he's only a little hard and I get to fondle it while it grows thicker and thicker but hard as a rock works too and...\n\n\"Holy fuck,\" I whispered. Holy fuck how much was he packing in there? \n\nI knew I shouldn't do it, I knew we were in the hallway and that I really wasn't helping him get that door open but I couldn't help myself: I curled my fingers around his shaft through his slacks and started to stroke. I felt him twitch and throb and fuck my panties were soaked. I stroked. He groaned. He fumbled the card and the door lock beeped a big red no but my hands had a mind of their own at this point.\n\nThen the door beeped again, a happy noise with a happy green light and Dixon pushed it open hurriedly, dragging me in with him as he stumbled across the threshold. I lost my grip on him as he pulled at my arms, his foot kicking the door closed behind us. Then he was dragging me down a short hall, spinning me around, and tossing me on a startlingly soft bed. I squeaked, laughing.\n\nI tossed the Frauda. I'd lost a shoe somewhere between the door and here so I kicked the other one off as I felt his weight on the bed near my knees. Then Dixon was on top of me, body pinning me down, all warm and strong and close. His mouth found mine hungrily, too hungrily because as he went in for the kiss our teeth clicked together again and sent a jolt through my jaw.\n\n\"Fuck!\" I laughed, \"stop that!\"\n\n\"Shut up and suck my tongue,\" he growled, pressing his lips back to mine.\n\nOh well shit, how could I turn that one down? I kissed him for a moment longer and then felt his tongue push against my lips. I opened them, felt his tongue slide through, met it with mine and our tongues danced for a few seconds before I sealed my lips back up and sucked. His tongue twitched for a moment before I slid off..\n\n\"Like that?\"\n\n\"Yes.\"\n\nSo I did it again.\n\n\"Kiss me, \" he growled into my mouth. \n\nI returned the favor, growling back, and did as he asked. He climbed further on top of me, lowering his body against mine as our lips mashed together and oh shit oh shit I could feel his bulge now pressed against my pussy and I lifted my hips, spreading my legs so my skirt rode up and then there was nothing between us but my panties and why the fuck was he still wearing pants?\n\n\"Take it off,\" I murmured against his lips, \"take it off take it all off I want to see you I want to feel you!\"\n\n\"You can feel me now,\" he murmured, grinding against me. I could, not very well though; I could feel his grin a whole lot better.",
        "\"Oh fuck you,\" I growled, pushing my hips up and trying to slide myself along him.\n\n\"Promise?\" he asked, kissing me.\n\n\"Only if you take it off!\" I growled back.\n\n\"You have to let me go, Anita.\"\n\nOh, um, whoops. I unhooked my legs from around his butt (when had I done that?) and let go of his head, letting my limbs flop on the bed as he stood above me.\n\nHis shirt went first. He undid only a button or two, near the top, before yanking it over his head and dropping it to the floor. He must be in a hurry. He had a white shirt on under it, a thin undershirt, and that came off even quicker. He watched me the whole time, lying disheveled on the bed with my skirt up around my waist and my legs spread wide but it wasn't until Dixon'd finished fumbling with his belt that he spoke.\n\n\"Um, Anita?\"\n\n\"Yes?\"\n\n\"You're supposed to be getting naked too.\"\n\n\"Can't I enjoy the show?\"\n\nHe growled in frustration. I liked that growl. He'd been doing it a lot over the last couple of minutes and it was growing on me, I think because it meant he was getting that much closer to pinning me to the bed and fucking my brains out. Still, though, I'd gotten his meaning and I'd rather he fucked my brains out with my clothes off. I leaned forward, stuck my thumbs in my waistline and pushed my skirt and panties down as his pants and boxers hit the floor. I kicked mine off and looked at him as he stood up straight, drinking in the sight.\n\nI wanted to touch him, wanted to run my fingers through it, wanted to feel the muscles in his limbs and his chest tighten as I touched him the way I'd felt them move in the hall. He had a lot of those, muscles I mean; not I go to the gym every day muscles but just the kind that keep him looking smooth and firm. Then there was the spot between his belly and his legs, that smooth V that draws a line from both hips to a guy's cock, that line I just want to run my tongue over, that line that is my favorite part of the male anatomy. And his cock, well; his cock was surrounded by fine dark hair, the same color as the hair on his chest, arms, legs. It was also big, hard, cut, and seemed to pulse with his heartbeat.\n\nSaying I was wet by this point would be an understatement.\n\n\"The rest of it, too,\" he growled, and the noise made me squirm. Just fucking take me. Do it. Fuck the clothes just fucking pin me down and take me already.\n\nBut I had to be a smartass. \"I paid good money for this top.\"\n\n\"And it looks great on you,\" he growled back, \"but it would look better on the floor.\"\n\nYou win. \"That's a good line,\" I said, starting to fumble with the tie at my side.\n\n\"I guess I'm improving.\"\n\n\"I could give you pointers.\" \n\n\"I'm pretty sure we're past lines.\"\n\n\"It's never too late for a good line,\" I said, yanking my top open. He stared appreciatively, but with a smirk.\n\n\"What?\" I asked.\n\n\"Hearts and skulls?\"\n\n\"I'm on vacation. I had exactly two bras with me.\" So I like a little fun on my bras so what? I propped myself up on my elbows and started fumbling with the hooks behind my back. It wasn't normally this hard but I was a little drunk and Dixon had obviously gotten tired of waiting because one hand had strayed down to his cock, wrapping around his balls for a moment, stroking them before sliding his hand up and down his shaft slowly, up and down, up and...\n\n\"Fuck Dixon that's not fair...\"\n\n\"Are you going to get naked or am I going to do this myself?\"\n\nVisions of Dixon jerking off on my tits rampaged through my mind, but they couldn't hold a candle to the images of the two of us, naked and coiled around each other, fucking like rabbits on the bed. I shut my mouth and fumbled harder.\n\nClasp off. Bra off. Bra... somewhere in the room. Then he was over me. Then he was on me. Then he was...\n\nI put my hand on him suddenly, on his belly just above that V of his that I really really liked, and pushed him back. A cold nail of reality stabbed into my brain, something that managed to make it through the booze and the libido. \"Dixon, wait.\"\n\nHe didn't joke, thank fuck, I guess I'd gotten something across. He froze, knees against the bed, legs pressing mine wide, arms on either side of my chest and cock poised inches from my cunt.\n\n\"Anita?\" He sounded concerned. \"What's wrong?\"\n\n\"Not inside, okay?\" I said. \"I mean yes inside but don't cum inside. We haven't got a condom.\"\n\nHe nodded and I grabbed his face, pulling him in to kiss him. When his tongue slid forward to dance with mine I wrapped my lips around it and sucked, pulling away, feeling him groan. I'd never done that before tonight but his noises were worth it.\n\n\"I promise you won't mind what we do instead but neither of us need that,\" I told him after we broke the kiss.\n\n\"I promise,\" he answered back. Then he kissed me again. Then he pushed forward and I felt him nudging against my pussy, parting my sleek wet folds, parting me and sliding inside and my back arched as that magnificent hard cock of his slid innnnnnnnn aaaaghhhh fuuuuuuuuck...\n\n\"Nnnnghhh...\" I said as I felt my eyes roll back in my head a bit. I felt stretched, like he was pulling me wide open but I knew he'd barely even started; he pushed in a little, drew back, then pushed in again a little further, then drew back again and each time I felt him stretch me again it was like he was entering me anew. It felt great but it felt like a tease; I wanted him deeper, I wanted him deeper right now. I needed him deeper. Fuck. Fuck you. Fuck you Dixon fuck me already.\n\nI hooked my ankles behind his back, just like before, and started to pull him in. My hands were on his hips, just at the V, and I felt those muscles tense as he pulled against me.\n\n\"Fuck you,\" I grunted.\n\n\"Let me,\" he responded.\n\n\"Don't tease me,\" I groaned.\n\n\"I'm not teasing,\" he murmured back, \"you're tight as hell.\"\n\n\"Just push it in!\"\n\nHe did, but only a little further than last time. It felt amazing, it felt like he was already deep but I knew he wasn't. I could see half of him was still outside me, stiff and veiny and why couldn't he please just...\n\n\"Fuck Anita just a few more.\"\n\nI moaned. I whimpered. I felt him push a little bit more in me and every push felt like he stretched me as wide and deep as I could go but then he'd pull out and I'd feel so empty I'd clench until he was in there again, pushing in even deeper and wider than last time and fuck me he felt amazing!\n\nThen he pulled out again, and I whimpered again, and then at last he pushed in and I felt him sink all the way to the bottom, his pelvis grinding against mine, cock stretching me deep and wide and I dug my nails into his hips \"Yessssss!\"\n\n\"Fuck,\" he gasped back.\n\n\"Yes please,\" I answered. So he did, slowly at first with long, even strokes, each one stretching me a little less than the last until he was in a comfortable rhythm. I felt his hips and belly flex with each thrust and I loved that, reveled in the feeling of his cock stretching me out and his muscles driving that cock into me. Yes please, yes fucking please.\n\nI wrapped my arms around his shoulders, pulling me up and pulling him down and mashing my tits against him and my mouth against his while he sped up, went from stroking to pushing to pounding into me hard enough that I could hear our bodies slapping together. I tensed, clutching tighter with my legs, trying to pull him in but it threw off his rhythm and suddenly he was going out on the instroke and in on the outstroke and then he was sliding out of me and his cock poked me in the clit and I gasped, and laughed, and he gasped and laughed and that laugh felt good but his cock would have felt so much better. I let go of him, collapsing back on to the bed although my legs were still tight around him. They probably weren't helping.\n\nI felt him jab me, felt his cock slide along my leg. \"Put it in!\" I laughed.\n\n\"I'm trying, stop squirming!\" he laughed back.\n\n\"Here, let me...\" I said, loosening my legs and reaching down to grab him. I felt his cock, hard and slick with my juices, slippery in my hands. Then I had him positioned and felt him slide between my fingers and into me.\n\n\"Keep your hands there,\" he said.\n\n\"You like?\" I asked, fingers still loose around him as he pumped into me, smoothly and slowly again.\n\n\"Yes,\" he responded, and his voice agreed with his words.\n\n\"Anita?\"\n\n\"Yes?\"\n\n\"Play with yourself.\"\n\n\"What?\"\n\n\"Rub your clit while I fuck you.\"\n\nSo I did. I left one hand loosely around his cock, the other I drew up between my folds to rub in soft, tight, little circles around the nub of my clit. My hands were together between my legs again, and my arms were squeezed tight against my breasts, pushing them together and presenting them up to him just like I'd done earlier although with a lot less clothes on. He started to fuck me harder, faster, and they jiggled each time he thrust in. Dixon, meanwhile, had his eyes half closed, looking somewhere near my face.\n\n\"Dixon,\" I gasped. Did I mention he felt good? He felt good. He felt really good. He'd stretched me out, worked his way in slowly, stretched me enough to go balls deep inside me but each new thrust felt like he was pushing me just a little wider.\n\n\"What?\" he gasped, meeting my gaze.\n\n\"My tits are down here.\"\n\n\"What?\"\n\n\"My tits. Are down here.\"\n\n\"What?\"\n\nWhy was he so dense? Okay so maybe I should take it as a compliment when the man fucking me into the bed is having trouble forming complete sentences, or any sentences at all for that matter.\n\n\"Look at my tits,\" I told him, \"that's what they're there for.\"\n\nHe pushed back, arms outstretched and hands on either side of me, and stared down at my chest as he pounded into me. He watched me smile, he watched me jiggle, he watched where I rubbed myself just above where his cock slid between my fingers and into my cunt with a wet thwap noise each time. I liked that, I liked the look in his eyes, like the look he'd given me in the bar and in the elevator except this was twice that. Fuck that thrice. Then he was braced on one hand, his other grabbing my tit, squeezing it and kneading it and I liked that too. He was grabbing a little hard, but he was fucking a little hard too and while I might be feeling both tomorrow right now a little hard felt a lot amazing.\n\nI like having a cock in me, I like playing with myself, and while I don't always cum from either that doesn't stop it from feeling pretty amazing. It's like... floating; my whole body feels comfortably warm, like I'm floating in warm water or up into the air and this tingling runs all through me, inside my fingers and toes and arms and legs and chest and belly and hair and... ugh. You get the picture. And it goes on and on in slow waves and I could be there for hours if it didn't eventually become too much. That's one way it feels good. \n\nAnd then there are the other times, the times like what Dixon was doing to me right now.\n\nThe waves were building, not just maintaining and washing over me but getting bigger and bigger and sending the tingles out in quickening pulses instead of slow waves. My heart was pounding harder, it felt like I was gasping for air, and the whole thing was coming from his hand groping my tits, his cock sliding into me, and most definitely from the little hard bud between my fingers.\n\nMy pussy tensed and I felt it ripple around his cock. Dixon felt it too, his rhythm breaking for a moment as he groaned. \"Fuck do that again.\"\n\n\"I would if I could,\" I said, or thought I said, \"that one was your fault.\"\n\nIn, out, in, out, in. I rippled again, each time it made me just a little more sensitive to what was being pushed inside me.\n\n\"Fuck!\"\n\n\"Your fault, too...\"\n\nIn, out, in, out, in, ripple, gasp, in, out, in, ripple. My fingers rubbed hard at my clit, my other hand almost grabbing at his cock. My hips were pushing at him, trying to meet his rhythm and utterly failing. I wanted to grab his hips, wanted to pull myself onto him, wanted to grab his shoulders and climb up his body and fuck I couldn't take much more of this.\n\n\"Fuck,\" he gasped like he'd heard my thoughts, \"fuck that feels...\"\n\nHe released my boob, both hands on the bed now, holding him up while he thrust into me. His thrusts were faster, more erratic as the ripples got weaker but started to drag on longer and merge together into... oh shit here it comes. Oh shit. Oh shit. Oh shit!\n\n\"Oh shiiiiii... nnnngggg...\" I groaned out, fingers rubbing furiously on my clit, other hand grabbing his hips and feeling the wonderful cleft of the V but just needing to hold on to him as my muscles clenched, my hips bucked up against his and my back arched. Stars danced across my eyes as I stared up at the tasteful recessed lighting fixture on the ceiling and... and...\n\nThen it really hit. It wasn't like an explosion or a release, it was more like the cup had finally filled up and was overflowing. My back arched, my legs tightened around his hips, my eyes snapped closed while my mouth dropped open and I felt my limbs tense and shiver. I gasped out an embarrassing noise like a gulping frog that I didn't give a shit about and... and... and at that point time got a little fuzzy.\n\nIt was one of those other times and it was a pretty good one. It was also pretty much all Dixon's fault, Dixon with his cock inside me, inside my rippling pussy, his cock sliding in and out, in and out, in and out... fuck that was good. Fucking good. Fucking amazing. We should do this again. And again. Fuck, that felt...\n\n\"Anita.\"\n\nYeah, shut up. Busy.\n\n\"Anita.\"\n\nShut up and go away.\n\n\"Anita.\"\n\nTime stopped being so fuzzy and I tuned back in. Dixon calling my name, not so calmly, and I could feel him still sliding into me but slower and more erratically than before.\n\n\"Mmm fuck, what?\" I mumbled.\n\n\"You okay?\" he whispered.\n\n\"Oh yeah,\" I sighed back happily. I was floating again, floating and tingling and warm and loose and wet around him as he slid in, out, in, out. My right hand had stopped teasing my clit and slid down to lie, damp and lethargic, on the sheets. My left was still between my legs, damper but just as lazy, fingers splayed around his cock as it slid between them and up my cunt.\n\n\"How are you?\" I continued. Great line.\n\n\"Getting close,\" he answered.\n\n\"How close?\" I tuned back in a little more. I was being selfish.\n\n\"Close...\"\n\nWell shit, it looked like I'd have to rally myself just a little. Sure I could make him pull out and do it all himself but no way that was happening; that had been great sex and you want to know how to ruin great sex? Make the guy pull out and do it himself.\n\n\"Pull out,\" I reminded him, attempting to muster melted muscles and an even more melted brain. I unhooked my ankles, stretched my legs, slid my hand up his shaft and started to wrap my fingers around it. He groaned, arms shaking, hips pumping into me two, three, four more times like he didn't want to stop before he finally pulled out of me with a groan and a shudder. I'll take that reluctance as a compliment, too.\n\nAs he slid out I was ready for him, closing my fingers around a shaft that was so wet from me it nearly slid right out of them. Then I pulled tired, satisfied legs back from around him, lifted them up, up, until they were up around his ears, pulled his cock between them and slid my fingers off.\n\n\"Fuck me, Dixon,\" I told him, meeting his gaze. I squeezed my thighs together, felt him clutched there, felt him slide along my pussy as he started to thrust again. His cock was covered in my wetness, so was I, and he slipped smoothly between my legs and along my labia with each pump. Then he was getting into it, pumping faster, and each thrust was pushing him along my clit with an almost painful jolt. Almost. I leaned up, wrapped my arms around his, and grabbed him by the shoulders.\n\n\"You're on my pussy. I can feel you on my pussy fuck it. Fuck me. Fuck me Dixon, fuck that's hot cum baby cum on my pussy fuck me fucking cum on me!\"\n\n\"Anita,\" he replied, pumping his cock between my thighs, slipping it along my pussy, sliding his hard shaft across my clit until I felt his balls slap me and his hard root grind against my button. He grimaced, his arms shook, I could feel his body tense and quiver against mine. It felt great, almost unbearable, and it was one of the hottest things ever.\n\n\"Fuck,\" he grunted, thrusting faster.\n\n\"Yes,\" I whispered.\n\n\"Fuck!\" He grunted again, louder, grabbing my bruised boob..\n\n\"Yes baby cum for me!\"\n\n\"FUCK!\" He yelled, thrusting so hard I could feel the slap of his body against mine pushing me up the bed and then he was hunching over me, using his shoulders to push my legs together, and...\n\nI swear I felt the first pulse of his cock against my clit and it was the most amazing shit. Then I felt him splash, wet and warm, on my neck, chin, and face.\n\n\"Holy shit!\" I gasped, laughing, as he shouted another f-bomb and I felt more cum splatter my tits and belly. My face? Holy shit he had come hard; I could feel it from my belly button to my nose and I was definitely taking that as a compliment.\n\nHe hunched above me, hips twitching, cock pushing between my legs in spasmodic jerks a few more times while I felt the tense muscles of his hands and arms gradually loosening up. Then he slowly started to release me, shoulders unclasping from my legs and fingers releasing my manhandled boob before he slid off to one side. I'm pretty sure he left handprints. I let him go, spreading my legs a little to let his still hard cock free as he collapsed onto the bed beside me.\n\n\"Holy shit you came hard,\" I giggled, voicing my thoughts.\n\n\"Yeah, well\" he managed to say, \"that was hot.\"\n\n\"You're hot,\" I said, snuggling up to him and feeling his warm skin on mine, his soft hair against me. I tried to roll over, tried to slip an arm around him and he shifted a little, moving his arm to let me. He felt good, he felt comfortable, and I was suddenly very sleepy. I had cum on me and I didn't care. I pulled closer, put my head up on his chest and heard his heartbeat, felt his breathing, both slowing. I glanced down, saw his hard cock, saw it finally starting to soften. Then he was sliding an arm under me and around me.\n\n\"You're hot,\" he murmured back.\n\n\"You're hot,\" I told him, again. I was not feeling eloquent, I was feeling sleepy and very well fucked.\n\nWe were silent for a while. I ran my fingers through his chest hair and listened to his breathing in the dimly lit hotel room. Had it always been this dim?\n\n\"I'm glad I came tonight,\" I eventually added.\n\n\"Was that what that was?\"\n\nI pulled some of his hair and he twitched. \"Yes and it was amazing.\"\n\n\"It looked it. Fucking wow.\"\n\n\"Does a girl not normally do that when your dick's...\"\n\n\"Don't,\" he interrupted.\n\nI smiled against him. \"It felt like you had fun too.\"\n\n\"It was... wow yeah it was really nice.\"\n\n\"You came on my face.\"\n\n\"Did I?\" he leaned his head up to look and I tilted mine towards him to show him. His eyes, like mine, were half closed.\n\n\"Fuck that went far,\" he said and started fumbling for something with his free hand. Then he was wiping me off, my face, my chest, doing an okay job but I didn't really care. He was warm, he felt good, he smelled good, and I was getting sleepier by the moment.\n\n\"So does that normally happen?\"\"\n\n\"Not unless the sex is amazing,\" he said, pulling me tight against him. I snuggled right back, feeling my face crack in a yawn. That was a good line, although they might all be good lines after a fucking like that.\n\nThen he had the sheets and was pulling them up over us, covering me first up to my shoulders then going back for the comforter. That went over us as well, naked, fluid covered bodies and all, and then he was again pulling me tight to him before kissing my hair.\n\n\"I'm glad I came tonight, too,\" he said.\n\nI awoke sometime in the night, cold, finding one of us had kicked the covers halfway off and I was still splayed out atop him. My arm was asleep. His fingers were tracing around my side, over the curve of my breast (the one he hadn't already mauled), occasionally down towards my hip. I'm very, very ticklish at my waist and his fingers tracing over there made me twitch and try to pull away; I think that's what woke me up, that or the ceiling lights that were still on. The clock said we'd been asleep for a couple of hours.",
        "I glanced sleepily up at his face and saw he was looking at me, eyes still half closed. I didn't say anything, just slid my hand down to his cock, found it hard as a rock, and wrapped my fingers around it. I love a hard cock in my hand, although not nearly as much as I love a hard cock in my pussy.\n\nI never even thought about saying \"I need your wang\" as I kicked the covers down, threw my leg over him, and slid myself up until I was sitting on his thighs. Honest, it never even crossed my mind. Really. I wasn't as wet as I'd been before, and while I was looser I was also pretty raw from our first go around. I took it slow, even slower than Dixon had, taking just a little before backing off, then just a little more to help ease me on and lube him up a little at a time.\n\nI didn't have that kind of orgasm this time, the mind numbing legs shaking kind, but I definitely enjoyed myself. I just rode him, half asleep, half dreaming, feeling every hard inch inside me as I ground down, circled round, or rocked my hips forward and back. I felt that warm, dreamy, floating tingle all through my body while his hands held my hips or roamed my legs, belly, arms, tits. I might have fallen asleep, I might have been half awake, sleepfucking the amazing cock of this gorgeously hot man underneath me. It felt like it lasted forever, tingling, floating, hips rocking, never bypassing that threshold from amazing to too much before Dixon gasped out \"I'm close!\"\n\nI slid off him reluctantly, my pussy aching as he left, and I thought it would have been nice to stay; but no. Besides I had other plans. I slid down his legs, lowering my body to his until my boobs squished against his belly, nestled around his cock. I pushed them together, which felt good for me but I'm betting a lot better for him; they weren't big enough to surround him but were big enough to get the job done. Then I jacked him with my tits, stroking them up and down while he groaned, grabbed at my shoulders, and murmured unintelligible things that made me grin from ear to ear. It was barely a dozen bounces before his fingers clutched tight, his hips started to buck, then his cock twitched and pulsed as he spilled his second load of the night between my tits.\n\nI climbed back up the bed, moving towards Dixon, but he got up. I growled unhappily and rolled over on my back, staring at the tasteful recessed lighting fixtures. Mighty rude of him to leave me all alone, but a minute later he was back with a warm washcloth and it was on my face, my neck, my tits where it, and his hands, lingered for a while. Then he was gone and I started tugging up at the sheets and comforter, pulling them up over me. I heard him in the bathroom, then the tasteful recessed lighting was turned off and a weight joined me in the bed. A warm body moved under the covers with me and I wrapped an arm around it, feeling and smelling Dixon. Then I drifted off.\n\nMorning sunlight woke me. Morning sunlight and a phone buzzing. Morning sunlight, a phone buzzing, and a hangover. Not the worst hangover I'd ever had but a hangover nonetheless.\n\n\"Fuuuuuuuuck...\" I groaned as I rolled over and swatted for the phone, only to find a hotel side table with a little metal clock instead that I caught a nail on. I had a moment of panic. Where? What... oh. Right.\n\nThe buzzing stopped and I rolled over, opening gummy eyes to stare at the ceiling. My eyes were dry, my head ached, my pussy ached. It ached really nicely. Last night was coming back to me slowly as I woke up: the party, the couple hours of drinking and flirting at the bar, the mad dash back to this hotel, and the couple hours of debauchery in this very bed in this very room. This empty bed. This... where was Dixon?\n\nI had a second moment of panic as I sat up, glancing around, taking in the remarkably spacious hotel room and wondering where a six foot something man with great shoulders could hide himself until I realized that white noise I'd been hearing was not the rush of traffic outside my apartment but the sound of a shower.\n\nThis was a nice room, I realized. I'd noticed the lighting fixtures of all things the night before, functional and elegant, while Dixon pounded me through the mattress but now I was noticing the rest of it too: the really comfortable bed, the really soft sheets, the art on the walls, the freaking analog clocks with the little brass hands on both side tables. The morning sunlight was coming through floor to ceiling windows on one side of the room and had a view of actual sun rather than another building. The room was spacious, the flowers were real, and the television was significant. The place smelled of potpourri rather than the usual hotel smell of bleach and dust. Okay, well, potpourri and sex.\n\nHoly shit this was a nice hotel room. That I'd just hooked up in.\n\nMy phone buzzed again. Where the hell was the Frauda? Somewhere near the door where I'd tossed it when we'd stumbled in, drunk and horny. I sat up, the sheets falling to my hips, and realized I was naked. Of course I'm naked, I got fucked so good I can still feel it, but where the hell had my clothes gone? Everywhere, apparently: I spotted my skirt just off the bed, my shoes in two different places and my bra draped over one of the very real potted plants.\n\nI'd planned on going to a high society party and getting buzzed, meeting famous people, meeting weird people, seeing some crazy upper class shit and waking up with a hangover and a few good stories. I had not planned on going to a party and getting buzzed, hitting it off with Charity's super hot and rich brother, molesting him in the elevator and hall and then fucking his brains out twice before waking up with a hangover, some good memories, and the realization that I'd just drunk my way through my first one night stand.\n\n\"Hey. That sheet looks good on you.\"\n\nI glanced up and felt my heart skip. He wasn't naked but he wasn't wearing a towel; instead he had on just a pair of tight boxer briefs and remember how I said I like the look and feel of a guy's package in just his underwear? Oh fuck why. Between that, the V, his thighs, his smile, his voice, his... this wasn't going to be easy. You were supposed to leave after a one night stand but... I didn't want to. I hadn't wanted to before but now that he was here I really didn't want to. Shit I should have skipped before he got out of the shower. Shit. Shit he had a great smile.\n\n\"Hey,\" I answered.\n\nWe stared at each other for a little, him smiling like an idiot and spending at least as much time on my face as my boobs, and me making some expression and trying to figure out what to say next, other than hi want to fuck all day and maybe for the next decade after that.\n\n\"I had fun,\" is what I eventually settled on.\n\nHis expression drooped a little. \"Had fun?\"\n\n\"Yeah, I...\" shit how do you say this? It would be way easier if he took the lead. Hey, Anita, I had fun, I'm going out for some coffee here's cash for an Uber. Hey, Anita, I had fun I'm going to get dressed, why don't you do that too? Here's a kiss goodbye. Hey, Anita, get lost.\n\nI needed an Advil.\n\nHe sat down in the chair beside the television, giving me a quizzical look. \"What's going on here?\"\n\n\"I'm trying...\" I started, \"I'm trying to say I had fun. And thanks for a great night. And... and you know I should put some clothes on.\"\n\n\"Why?\" He asked. \"I'm not.\"\n\nI can tell and fuck if I don't want to lick you until you squirm.\n\n\"Because it's going to look bad if I walk out of here naked? Fuck, Dixon, what the hell is the protocol for these kinds of things? This is my first time.\"\n\n\"First time what?\" He looked confused, then startled. \"No fucking way not...\"\n\n\"No, not my first time my first time, I've had sex before you don't... no it's just... my first...\" I trailed off.\n\n\"Your first time skipping out on a guy?\" He asked. Now he sounded hurt. Or angry. Or confused. I couldn't tell.\n\n\"What? No! I, yes? No? What?\" What? \"No! My first... the first time I've gone home with a guy! To a hotel! My first...\" I took a deep breath and slowed my flapping lips a little.\n\n\"My first one night stand,\" I continued. \"So I haven't done this before, I don't know if I was supposed to be gone by the time you woke up or if I'm supposed to leave a lipstick note on the mirror or if we fuck one time before I go or... or what...\" Shut your mouth, Anita. Shut up, shut up, shut up...\n\n\"Why do you have to leave at all?\" He asked.\n\nWhat? \"What?\"\n\nHe stared at me, leaning forward in his chair. \"Why do you have to leave at all?\"\n\n\"Because...\"I started, and stopped. What?\n\n\"Because?\" He asked.\n\n\"I thought this was... but you're...\" Okay what was going on here?\n\n\"Yes?\"\n\nI tried again. \"We met at a party and then I dragged you off to a hotel and we fucked and isn't that the way stuff like this normally ends?\"\n\n\"I think I did the dragging.\"\n\n\"No, fuck, Dixon! You don't just... this is not how...\"\n\nMy head hurt.\n\nHe tried a grin but it came out looking hurt. \"I thought hitting it off and dragging each other to hotels was how you met people you liked?\"\n\n\"Maybe how you meet people you like...\" I started and snapped my mouth shut. That came out sounding way worse than I meant it to and I could tell from his expression. Shit Anita, shit shit shit why are you not just getting your clothes and getting out of here?\n\n\"Ouch.\" The attempted grin went away and I missed it. Come back, grin, let's try again?\n\n\"That's not what I meant.\"\n\n\"What did you mean?\"\n\n\"Because you're... because...\"\n\n\"Because?\" He raised his eyebrows. Normally you read about people raising one and it looking quizzical, but nope Dixon raised the whole damn thing and it looked just as quizzical but it also made me feel confused. And small. Confused and small. Which is probably why I blurted out what I'd been thinking and trying not to say.\n\n\"Because you're rich!\"\n\nHe looked startled, and now it was his turn to say \"what?\"\n\n\"You're rich,\" I said again, \"and I'm the one night stand you met at the party and fucked. Really really well, I mean holy shit but... I don't... I don't do this sort of thing, okay I guess I do now, but now I... I don't... know.\"\n\n\"Anita...\"\n\n\"But you are super, super hot and super, super fun and I really like the sound of your voice and your beard and the way you smell and the way you leaned toward me whenever you wanted to hear what I had to say and the way you smile and...\" I trailed off.\n\n\"Anita...\"\n\n\"I just... you know, I kind of wanted to...\"\n\n\"Anita?\"\n\n\"Yeah?\"\n\n\"So I'm hot. But do you like me?\"\n\nI snorted. \"That's why this is hard.\"\n\n\"Leaving?\"\n\n\"Yeah.\"\n\n\"So it's my turn.\"\n\n\"Your turn?\"\n\n\"To talk.\"\n\n\"Okay.\"\n\n\"I don't know what I was expecting at the party last night. I wasn't looking to hook up, I was just in town to hang out with my sister and she had a shindig going on so I figured why not, I'd drink some free booze, see some crazy upper class shit, and wake up at noon the next day with a hangover and some great stories.\"\n\n\"That's exactly what I was thinking I mean did you see the fucking hawk?\"\n\n\"I think it was a falcon but quiet for a second.\"\n\n\"Sorry.\"\n\n\"I definitely wasn't expecting to meet a fun, funny, great looking woman at the bar who I just wanted to chat all night with. I wasn't expecting to get butterflies like I was fifteen again hanging out with my first crush. I wasn't expecting to want to do anything to get her to laugh. I wasn't expecting to drag her off to my hotel room and have mindblowing sex, either, but it all happened and I don't regret it. I don't regret it and I'd like to keep not regretting it.\"\n\n\"What does that mean?\" I asked.\n\n\"This doesn't have to be a one night stand. I don't want it to be a one night stand. I'd rather you stayed.\"\n\nI stared at him. Well shit.\n\n\"Oh,\" I said.\n\nHe grinned at me. Hi, grin, welcome back.\n\n\"Yeah,\" he said, \"oh.\"\n\n\"Sorry, I thought...\" I was feeling... something. A lot of somethings. A bit of confusion, a bit of embarrassment, but well... some good things too.\n\n\"I know. It's okay. This is new for me too.\"\n\nWe sat in silence for a little.\n\n\"Do you still want to leave?\" he asked.\n\nHell no I don't want to leave. I started to answer with just that, but Dixon suddenly interrupted.\n\n\"Actually, don't um, don't answer that just yet. I... before you make a decision I have a confession to make.\"\n\nMy heart jumped. Fuck you Dixon why are you doing this to me?\n\n\"What?\" I asked warily.\n\n\"I'm not rich.\"\n\n\"What?\"\n\n\"Charity and I grew up in Modesto. She married rich. I'm up to my neck in a mortgage on a five room house in Oakland that's not much bigger than this hotel room. This room? My sister paid for this room with hubby's money. This room is something like five hundred bucks a night, I'm not sure I have that much in savings. I install entertainment systems for a living, although I might be up for a promotion next month and then I'll make almost as much as you.\"\n\nI stared at him. I'm an idiot. A giant fucking idiot. Of course, of course his sister married money, I just sort of assumed because seriously who gets invited to these parties? I mean, other than middle class insurance agent sisters of supermodel boyfriend hairdressers so seriously why am I that surprised?\n\nThat's what I thought, but what I said was: \"How do you know how much I make?\" Because I'm an idiot.\n\n\"You told me. Last night. Which is when I thought I'd told you what I do for a living. I try to do that these days.\"\n\nHe had said something about his job but I had been a little distracted at the time. Whoops.\n\n\"So...?\" He started.\n\n\"So, what? Are you asking if I'm leaving now that I know you're as broke as me?\" I didn't know whether to feel hurt or not by that. I wasn't, I just didn't know if I should be. \n\n\"Yeah, pretty much.\"\n\n\"Do you see me leaving?\" I responded.\n\nHe gave a relieved smile. \"Good.\"\n\n\"Why would I leave?\"\n\nHe sighed and looked a little guilty.\n\n\"Believe it or not,\" he said, \"you're not the first woman who assumed I was rich because my sister married it.\"\n\n\"Do you bring a lot of them home?\" It was out before I thought about it. Shut up, Anita, shut up shut up shut up!\n\nDixon didn't look angry at the question, though; instead he looked embarrassed.\n\n\"Um,\" he started.\n\n\"Shit no, I'm sorry that was...\"\n\n\"No, it's okay. Only a few, but that's still more than I'd like to admit. I am, um, one night stands aren't really my thing either but I've made a few bad choices. A lot of the time I can tell they're... not really into me. You, though, you seemed...\"\n\n\"Into you?\"\n\nHe grinned. \"I think I was more into you, but yeah.\"\n\nYes you were.\n\n\"So, are you... okay with that?\" he asked.\n\n\"You being poor?\"\n\n\"Me taking girls home.\"\n\nI shrugged. \"Not judging over here.\"\n\nHe relaxed noticeably. \"Most of the time they assume I'm rich and then skip out when they find out I'm not. I like to tell women when they meet me now, just to be safe. I thought I had last night. Sorry. It's nice having someone come at it from that direction though. The opposite one, I mean, leaving when she thinks I'm rich but staying if I'm not.\"\n\n\"I wouldn't say I'm staying because you're broke. I'm staying because we had fun, and I like you.\" And I like your cock in me. A lot.\n\nHe grinned again, and I grinned back. Hello grin, I guess you're here to stay.\n\nSo one night stand, except not one night stand. Maybe it's like he said: isn't this how people meet? Why not? You like someone, you find them attractive, maybe say goodnight and part ways until the next time, maybe you hit it off and kiss goodnight, maybe you really hit it off and fuck all night in a luxury hotel room. What was wrong with that?\n\nExcept how is this going to work out? Sure, okay, we got past the maybe we actually like each other and aren't just in it for the fucking part, but seriously: I've got a career, so does he, and sure neither of them are all that great but they're careers and... wait where did he say his house was?\n\n\"Did you say Oakland?\" I asked.\n\n\"What?\"\n\n\"Your house is in Oakland?\"\n\n\"Oh, yeah.\"\n\nI laughed. \"Shit I live in Sacramento, that's like ninety minutes on a good day.\"\n\n\"I'm willing to drive ninety minutes.\"\n\n\"Ninety minutes for mindblowing sex?\"\n\n\"Ninety minutes for maybe more than mindblowing sex.\"\n\nI stretched in his luxury hotel room bed, watching as his eyes tracked over me from head to toe and back. I liked the look in his eyes, I liked it enough that I kicked the covers off as I flopped back, stretching more.\n\nI'm pretty sure I heard him mutter \"fuck.\"\n\n\"I'd like more too. But I'd also like the mindblowing sex.\"\n\n\"Me too.\"\n\n\"So, how about, maybe... now?\"\n\n\"Now?\"\n\n\"Right now.\"\n\n\"We just did it twice...\"\n\n\"Twice last night. It's morning. I can tell you're up for it.\"\n\nHe looked very torn. I almost had him.\n\n\"Won't someone be - \" he started, and as if on cue the phone dinged, interrupting.\n\nShit. I knew who it was, and even if it wasn't there was still someone I needed to call. Or text. Probably just a text. A fast text. A really fast text.\n\n\"Can you hand me my purse? I think it's...somewhere by the door?\"\n\nHe stood and fuck I just wanted to... I mean I could see it but I just wanted to cup it and feel it and stroke it and oh fuck did I want to watch him squirm. It would be great squirming. He's moan a little, grab my shoulder, and lean on me while I...\n\nI was still lost in those thoughts when the Frauda landed on the bed next to me; right, phone. I fished it out and there were two calls and five messages from my brother. I skimmed through the latter and found the expected ones: be safe, have fun, see you in the morning, and where the hell are you? The fifth and final one was an invitation to meet him for brunch, though. Hmmm.\n\n\"Hey, Dixon?\"\n\n\"Yeah?\"\n\n\"You want to go to brunch with my brother?\"\n\n\"The one I wasn't supposed to notice you waving off last night?\"\n\nWhoops. \"Yeah, that one.\"\n\n\"Sure. What time?\"\n\n\"Eleven?\"\n\nHe glanced at the clock again. \"Just enough time for you to take a shower, then.\"\n\n\"Or enough time for a quickie,\" I grinned at him.\n\nHe laughed. \"I am not sure I could survive another bout without a little more rest.\"\n\nI pouted, but...\n\n\"You're probably right,\" I finally admitted, \"I'm um... you're pretty big.\"\n\n\"Oh?\" he asked, looking pleased with himself the way guys normally do when you compliment their cock.\n\n\"Yeah, and I probably need a little time to recover before you put it in me again. But um,\" I slid my hands up my sides, cupping my boobs and pushing them together while I watched his reaction. Hook: baited.\n\n\"But um?\"\n\n\"You could always fuck my tits.\"\n\nHaving a lot on top came with a few advantages, and one of my favorites was, honestly, getting a cock between them. I liked the way it felt, I liked the way a guy looked, I'd really liked the way it felt and looked last night when Dixon had been there and fuck if I couldn't get him in my pussy...\n\nHe groaned. \"Please don't tempt me because I want to be on time and I want your brother to like me. Go take a shower.\"\n\nI dropped the girls and pouted at him some more. He did have a point, though; my brother liked punctuality.\n\n\"I'll fuck your tits after.\"\n\n\"Promise?\"\n\n\"I promise to fuck your tits after brunch.\"\n\n\"That's a good line.\"\n\nHe made a doubtful noise.\n\n\"Worked on me, didn't it?\"\n\n\"Not sure I could use it in a lot of situations. Now get to it, you're a mess.\"\n\n\"And whose fault is that?\" I asked, rising from the bed as languidly as possible. \"How's the water?\"\n\n\"This is a five-hundred dollar a night hotel room, the water is always perfect. And you have your choice of three kinds of shampoo.\"\n\n\"Oh!\" I said, acting surprised as I sauntered towards him, \"I could get used to dating a rich girl's brother.\"\n\nHe grabbed me by the blue part of my hair as I started to pass him, not hard but hard enough to let me know what he wanted, and I turned and stood up on tiptoes as he tilted my head back. We did not bang our teeth. His lips were hungry, his tongue was hungrier, and I gave it a suck when he finally pulled off. He'd told me exactly one thing that he liked and I was going to use it any chance I got.",
        "\"Get in there,\" he sighed, \"I'll room service us some ibuprofen.\"\n\nOh fuck yes. \"You're a god.\"\n\nWe were late by about ten minutes. The place looked like nothing on the outside but was pretty nice on the inside even if the tables were packed shoulder to shoulder. It had probably been at least three other things over the years, none of those a restaurant, but someone had converted it pretty well. We entered a small foyer with fake gas lamps and beyond the podium there were three different seating areas: the main floor, a raised area to our left near the windows, and a round kind of pit with a short, curved staircase.\n\nWe found Kelvin in the pit.\n\n\"Good morning, dear sister,\" my little brother called from below us, \"you look like what the cat dragged in.\"\n\nI gave him the finger and a smile as the waiter led us through the maze of tables. Kelvin, of course, looked amazing despite probably running on less than four hours of sleep. He had always been that way, always energetic, friendly, and vibrant even when he'd been out all night partying. He was also a master of makeup, wearing clean clothes, and the cup of coffee in front of him was probably his third or fourth. He'd ordered us all coffee, actually, and orange juice; oh my delightful little brother who knows me so well.\n\nHe was right about me, though. The shower had helped but I still had dark circles under my eyes and a bit of a hangover stare. He probably hadn't missed that I was also wearing last night's clothes: my skirt was a little wrinkled, the top didn't really work for brunch, and the heels were comfortable but had made the walk here a lot harder. As for my panties... well they weren't in a condition to be put back on this morning so fuck it, it wouldn't be the first time I'd gone commando in a skirt.\n\nKelvin didn't know about that last one of course. Dixon did because I'd left them on the floor of his hotel room and promised to be back for them later. I'm pretty sure that made his walk here a lot harder too. No double entendre there. Nope. None at all.\n\nSpeaking of Dixon he'd made it through the morning a lot better than me, although I might be biased. He had a change of clothes, still department store chic but it looked good on him, and a lot less hair than me to manage. He also looked a lot less hungover.\n\n\"Did you forget to charge your phone last night?\" My brother asked as we arrived.\n\n\"I was a bit busy,\" I replied as the good looking, a-lot-less-hungover guy who'd fucked me silly twice last night stepped ahead to tug out my chair. A great lay and a gentleman, it seemed.\n\n\"I see that,\" my brother said, eyeing Dixon before extending a hand, \"hi, I'm Kelvin.\"\n\n\"Dixon,\" my plus one replied as he took his own seat and extended his hand back. They shook. Polite. Friendly. So that was good.\n\n\"Nice to meet you,\" Kelvin responded but he had that look on his face, that look he got when he had a joke or a story but wasn't sure whether he wanted to tell it or make you ask about it. Which could also be good, or not.\n\n\"What?\" I asked him as I grabbed my orange juice and eyed it skeptically. No pulp, and it had that telltale look about it. Could it be...?\n\n\"Nothing,\" he responded, smirking.\n\n\"Kelvin, what?\"\n\n\"Nothing, no, it's...\"\n\nI waited, taking a sip of orange juice in the pregnant silence. Tropicana. Ugh. Maybe I'd stick to the coffee.\n\n\"It's just funny,\" he finally continued, \"you guys met at the party, right? Last night?\"\n\n\"Yup,\" Dixon said, and shot me a look. I grinned at him. I knew where this was going now, I'm pretty sure Dixon did too, and I was more than happy to let it play out.\n\n\"So it was thrown by Charity Sider, and I was thinking about the party and you guys meeting there and her name and... no you know what it's not that funny.\"\n\n\"Oh no,\" I grinned, \"go on.\"\n\n\"Well...\" he sighed. \"I was just thinking it would be funny, you know, if he were Charity's brother? You know, because his name is Dixon? And then he'd be, um, Dixon Sider?\"\n\n\"Hmmm,\" Dixon said in a familiar monotone. He was shooting me a peeved look and I gave him an innocent one right back. What did I do?\n\n\"You know,\" Kelvin responded, \"like dick's inside her?\"\n\n\"Yes,\" Dixon continued in the same monotone, \"wouldn't that be hilarious?\"\n\nI hid behind my coffee cup as I watched them, my favorite (okay, only) brother and my favorite (okay, new favorite, for the moment, as of last night) man. The coffee was too hot to drink but the mug did a good job of hiding my smile. Three... two... one...\n\nRevelation dawned, I could see it on his face, and then Kelvin let out a long sigh. \"You're her brother, aren't you?\"\n\n\"Yup,\" said Dixon, and sipped his juice.\n\n\"You're Dixon Sider?\n\n\"Not at this exact moment, no,\" I interjected. I tried not to giggle while I said it and almost made it. Dixon coughed on his drink. Kelvin just looked confused.\n\n\"Not at...\" my brother began, then realization dawned a second time and he turned a glare towards my smiling face. Most of a glare. More of a look of long suffering.\n\n\"Just for that you're paying for brunch,\" he said.\n\nI took Dixon's hand and smiled at my brother. Worth it."
    ],
    "authorname": "QuietBedlam21",
    "tags": [
        "unfortunate name",
        "flirting",
        "female pov",
        "straight sex",
        "teasing",
        "party",
        "hotel",
        "passion",
        "mutual attraction",
        "tongue sucking"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/charity-dinner"
}