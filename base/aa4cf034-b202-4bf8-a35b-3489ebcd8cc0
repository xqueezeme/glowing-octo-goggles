{
    "title": "Seven Days of Service - Day 06",
    "pages": [
        "Seven Days of Service \u2013 Day Six\n\n* * * *\n\nThe next morning, I left my house to do something I'd never done before; see what time the Harbor Bar actually opened for business. As it turned out, Harbor Hattie and her husband opened the bar around 10 a.m. for the early lunch crowd and while she was surprised to see me at that hour, she was pleased as well. I stopped her from plopping my Guinness in front of me as I entered, but still indicated to her that we needed to talk. Cocking an eye at me, she grinned and motioned for me to wait while she settled in the rest of the customers.\n\nWhen she returned to hear what I had to say, she assumed that stoic look that I'd become familiar with through the years. When I'd finished, she simply winked at me and told me to bring Cathy around after the afternoon's activities and she'd play it by ear. In the meantime, she mentioned to me almost off-handedly, that the game I was playing was extremely addictive and to be sure that I was prepared to accept the consequences.\n\nThanking her, I returned home just in time to see Cathy pull into my driveway, dressed a bit better than usual since we were having guests, and she wasn't sure what the rest of the day might bring. The collar was still prominent on her neck as instructed, so I figured she was still conforming to the terms of our deal. My \"mind's eye\" however, was able to visualize every square inch of her naked body beneath that fa\u00e7ade. In recognition of this, my cock had already begun stirring, much to my discomfort.\n\nUshering her quickly into the house, I told her to change into her bikini and report to the kitchen for further instructions.\n\nWhile she was changing, I recalled the taunts that she'd shot at me in earlier weeks of the contest. Her promise to have me serve as the host to a party of her girlfriends in a \"ball-bag\" was particularly irritating. What she didn't know right now was exactly who I had invited to our little BBQ. This time I'd taken an opportunity to invite the project leaders from her department as well, since they'd be joining me in working on this contract. If I remembered correctly, that would make it three males and two females in their party if everyone showed up, seven of us in all.\n\nAs Cathy returned to the living room I marveled at how well she filled out a bikini. She was almost as sensuous in the bikini as she was in the nude. The outfit that she had on was not overly revealing, but enough of her was exposed to pose a serious challenge to my resolve. I reminded her that she was going to be the appointed hostess for my little get-together and expected that she behave accordingly.\n\nMy guests were expected around 1 p.m., so I had plenty of time to prepare for their arrival and to make sure that Cathy knew what her responsibilities were to be during the visit. She was expressing a bit of annoyance that we wouldn't be alone for the afternoon, but I assured her that her service duties to me during the get-together were as hostess; nothing more. I also promised to take her out of the house after the party and treat her to the Harbor Bar again if she behaved herself.\n\nLooking suspiciously at me, she reluctantly wandered back to the kitchen to prepare the snacks that I had ordered the day before. The only consolation she had at this point was that I had allowed her to wear something. I was sure that she'd have objected otherwise and she'd have been within her rights to call \"foul.\"\n\nFinally, my guests began to arrive and I greeted and escorted them into the living room in preparation for the basketball game beginning at 1 p.m. Cathy and I had spread out the snacks on the end tables and coffee table in anticipation for the event, but she remained in the kitchen for now, partly I guessed out of embarrassment. She'd have done the same to me if she'd won, so I had little sympathy for her plight.\n\nAll of those invited turned up for the game, much to my surprise. It must have had more to do with the conditions of the \"Deal\" more than anything else, I thought. Some bit of novelty in their lives I suspected. Nonetheless, they settled into the chairs and couch to get comfortable for the sporting event on TV with drinks and snacks.\n\nWanting to surprise my guests and give them \"visual\" proof that I was actually using my contest prize, I turned and shouted towards the kitchen, \"Cathy, please bring a cold six-pack out here for our guests.\" \n\nI watched as five faces turned to me, a question mark on each of them. After waiting a bit for the refreshments to arrive, I decided to return to the kitchen to see what the delay was.\n\nJust as I was about to reach the doorway, Cathy slowly walked out with six beers balanced on a serving tray. Glaring at me as she passed by, she walked into the living room and stopped abruptly. Walking up to her I saw that her face and upper body had suddenly turned bright red and from the look on her face it wasn't from simple embarrassment. She was furious! Suddenly I could see that this wasn't going to be the cakewalk that I thought it'd be.\n\nI stepped up to her and attached the silver chain to her collar, allowing the end to dangle between her breasts. This time there was no expression of surprise or resistance, as she merely accepted the action, still glaring at one of the project managers that belonged to her department. It was Sonia, I recalled, but I didn't like the chemistry that was taking place right now between them and I used the chain to re-establish some control until I could find out more.\n\nSeeing Cathy standing before them in a bikini, collared, with the chain hanging down from the chrome ring, Sonia began to smile wickedly. Watching her, I was reminded of a cat that had spotted her prey. It didn't take a genius to figure out that there were some bad vibrations coming from them.\n\nGetting up from the couch, Sonia approached Cathy, circling around her like some predatory beast. The effect was a little unsettling and it occurred to me that I apparently wasn't privy to some aspect of her department's politics. \n\nFinally, stopping behind her, Sonia stretched up and hissed into Cathy's ear, \"How does it feel to be else's slave for a change?\" As she said that she reached to the bow holding Cathy's bikini top in place and pulled the string, releasing her beautiful breasts for all present to see.\n\nAs the bikini top fluttered to the floor Sonia snarled, \"A slave doesn't deserve the dignity of clothing.\" \n\nRecovering my senses, I jumped forward to restrain Sonia from going any further, but I had to inform her that she'd violated the hospitality of my house. Taking her arm, I escorted her off to the side and reminded her that despite Cathy's position while in my home she'd still be Sonia's boss come Monday. \n\nI saw a look of shock on Sonia's face as the realization of what she'd done sunk in and expected some sparks in our department when everyone returned to work the following week. Hoping to defuse any future difficulties between the two, I brought her back into the group to see how we could fix this situation.\n\nReturning to the living room, I was surprised to see that Cathy had not replaced the bikini top while I'd gone. Instead, she was still standing where I left her, still holding the tray of drinks, still bare-chested. The rest of the room was staring at her in awe, still shocked at the scene that had taken place just moments ago. The three guys were struggling with \"issues of the groin\" I noticed and the remaining lady, Barbara, simply sat there shaking her head with a small smile on her lips.\n\nI bent over in front of Cathy, retrieved the bikini top and took the tray of drinks from her hand. I then instructed her to replace the top and turned to serve the cold drinks to our guests. As I did so, I noted that Barbara had begun to laugh. Annoyed, I asked her what was so funny.\n\n\"Sonia,\" she replied. \"She's had her sights set on you ever since she found out that you were single. You just never noticed. I think she just figured out that she'd finally seen her competition.\" \n\n\"Competition?\" I asked. \"Not hardly.\" \n\nBarbara looked at me for a moment, then chuckled and said, \"Yeah, right.\" A quick glance at Sonia however, showed me that there might have been a little truth in what she said.\n\nLooking at the group as Cathy covered herself with the bikini top once more, I asked them how we could \"even the score\" a bit for Cathy after this little display of humiliation by her subordinate. Everyone fell silent for a couple of minutes, and then surprisingly, Arthur broke out with, \"If I were Cathy, I'd settle for a 'tit for a tat.'\"\n\nWe were all taken by surprise. Arthur was usually the last person to offer a suggestion in group meetings and when he did, most of the folks present didn't understand exactly what he was trying to say. Only if you paid particular attention to where his conversation was directed did you stand a chance of understanding him.\n\n\"Tit for tat\" I remembered, was an old expression of balance; like an \"eye for an eye\" going back to the 1500's. He was actually suggesting that Sonia be humiliated in the same manner that she'd embarrassed Cathy. Cathy had caught on about the same time as I did and simply smiled.\n\n\"How about it, Barb?\" Arthur asked as he glanced over at her. Barbara had been following our little drama with a frown between her brows as she tried to figure out what he'd meant by his comment.\n\n\"A tit for a tat, Sonia,\" I said. \"What'll it be?\" \n\nArthur was smiling as he sank back into his chair. Barbara had finally caught on to what we were talking about and was smiling as well. The other two leads didn't have a clue, but they were interested in what might be about to happen.\n\nSeconds turned into minutes as Sonia pondered what the group had come up with as a solution to her little self-imposed dilemma.\n\nShe had choices, more than Cathy had when Sonia decided to pull the ties on her bikini bra. But apparently only one made sense right now. She slowly reached to the bottom of her pullover and slid it over her head, dropping it on the floor next to her. Only a frilly little silk bra covered her breasts. Looking around at the group she saw no sympathy for her, so she shrugged, reached behind her and unsnapped the bra, allowing it to fall to the floor as well. Dropping her hands to her sides, she definitely succeeded in diverting any further attention from the game on TV, as everyone assembled took in the sight of her tits.\n\nNot too shabby, I thought. She was a little taller than Cathy and her body was a bit thicker, but not by much. She must have been a little younger though, as her tits still jutted straight out from her chest, no sag at all. Dark brown areoles and nice thick nipples, now firmly erect in excitement. Her face was registering that excitement right now, as the glow of red spread across her upper body into her cheeks.\n\nAnother tough little shit, I thought. Probably not the best mix between Cathy and herself, but one who could probably hold her own in a catfight. Now however, she stood before us naked from the waist up, looking straight at me for instructions. \n\nLooking over at the other guests, I noted that Arthur was grinning from ear to ear and I suspected that Sonia had just gained an addition to her personal fan club this afternoon. The other two guys were mesmerized by what had just happened and for the moment the game on TV remained completely forgotten. Glancing at Barbara I saw that she had an odd look on her face, but a grin was still on her lips.\n\nDid I ever mention that this game was full of surprises?\n\nWell, just as I was about to tell Sonia to cover up, Barbara suddenly stood up. She declared, \"I'm tired of you two bitches getting all the attention.\" \n\nShe was smiling when she said that so I wasn't too worried about her flying off the handle, but I was somewhat amazed to watch her unbutton her blouse and remove it, dropping it onto her chair. Reaching behind her, she then unsnapped her bra and placed it on her blouse. While all of us were paralyzed in shock, she reached up to her breasts and briefly massaged them with her hands.\n\nNow Barbara and I had worked together for a few years and I'd never seen a wild side to her. She was known to be one of the more mature, conservative members of my leadership crew. Moreover, she was married, as were the two men who hadn't caught on to the double-entendre of Arthur's suggestion.\n\nChecking her out, it was apparent to me\u2014and the other guys present that she certainly stacked up favorably to Cathy and Sonia. She was the oldest of the three, probably around 40 years old, but she'd kept her figure in remarkably good shape. Her breasts were full and lush, larger than either of the other women, but still holding their shape well. Her nipples were large and erect, centered in dark pink tightly wrinkled areoles.\n\nMost curiously, however, was the sight of a small tattoo of an orange-red butterfly, just over her left breast. I realized that Barbara hadn't always been the little conservative lady that she seemed at work.\n\nFearing things getting out of control now that the ladies had taken a step beyond where I'd intended for the day to go, I instructed both of them to cover themselves back up. Sonia simply put her pullover back on, leaving herself braless, and Barbara, observing this did the same, buttoning on her blouse, but leaving her bra next to her chair. I'm already thinking that the guys would definitely remember this BBQ party for a while, as would the ladies.\n\nCathy had calmed down now that the other women had exposed themselves in a sympathy strip and with the chain dangling between her tits as a reminder that she was on \"best behavior\" from this point on, soon became the consummate hostess, anticipating drink and snack requests during the remainder of the game. The guys managed to get into the game on the TV, finally, but I still caught them sneaking quick glances at the women in hopes of a repeat of the earlier exposure of their charms.\n\nThe rest of the afternoon proceeded without incident and broke up shortly after the game's completion. Out of the five members of the guest list, the only ones that were single had been Sonia and Arthur. I made a mental note to myself to take that into consideration the next time I hosted a get-together like this. I also made a note to become a little bit more aware of the political composition of the other departments around me. Apparently Cathy's abrasive attitude extended beyond the simple irritations I observed, and the appearance of \"wild-cards\" in my plans warned me to be much more thoughtful about what I was including in my plans.\n\nThe possibility of angry spouses getting involved in any of this was not a comfortable thought. The next time I invited the team members, I'd make sure the spouses were included. Perhaps then, the chance of an embarrassing slipup might be avoided.\n\nOnce everyone had left, I instructed Cathy to change back into the clothing that she'd arrived in so I could take her out as I'd promised. I asked her to give me the bikini pieces once she'd finished, assuring her that I'd return them when the night was over.\n\nAside from the color appearing on her chest and face, I had very little with which to gauge her emotional level while performing her duties for me. Picking up the bikini bottoms from the chair in which she'd tossed them, I happily noted that the crotch was absolutely drenched in her vaginal juices and the aroma had an almost hypnotic effect on my libido. Whatever happened during her \"hostess\" exercise this afternoon definitely had a most profound effect on her and all I had to do was to determine specifically what it was and exploit it.\n\nReturning to the living room dressed, I wondered if Cathy had actually worn her undergarments this time. As if answering my unasked question, she opened her blouse to reveal her naked breasts, and pulled up her skirt to reveal her naked sex. \n\nI noticed that I hadn't removed her silver chain from the collar still showing around her neck and decided to remove it for the trip to the Harbor Bar. The collar alone should suffice, I thought, to remind her that she was still under my control. As we were about to leave the house, she looked at me and asked, \"Aren't you tired by now of seeing me naked?\"\n\nI ignored the question.\n\nArriving at the Harbor Bar around 6:30 p.m., I escorted Cathy up to the bar where old Hattie stood hunched over the counter chatting with one of her customers quietly. Seeing me coming up she performed her usual little miracle with the mug of Guinness and slid a concoction of some sort in front of Cathy. Just like \"Old Home Week\", I thought.\n\n\"I was wondering if I'd get the chance to see you two again anytime soon,\" she said. \"Cathy had asked me some questions the last time you two were here and I promised I would answer them the next time you folks came in.\" \n\nCathy hadn't mentioned anything to me about that, but now that we were here I guess it was an opportunity for her to chat with Hattie again. As they began to get settled into their little routine of chit-chat, I could see that I was once again the fifth leg on the stool between the three of us.\n\nJust as I was hoping that Robert might have decided to drop in to take me away from all this \"blah-blah,\" I felt a hand drop firmly on my shoulder and as I turned around I saw someone I really didn't want to see right now. I'd only met Barbara's husband a couple of times since she'd been with the firm, but my recollection was that he was big, very big and could have been the poster child for a mean-veteran-biker. I could see that my surprise at Barbara's behavior at my party this afternoon was probably misplaced. At least his tattoos seemed to be spelled correctly.\n\nHis strong, chiseled face, ice-blue eyes and long wavy hair\u2014gray for the most part\u2014sweeping back from his temples only accentuated his large muscular build. Hands the size of hams, I thought. They could probably pull me apart with no effort at all. In my moment of truth, I tried really hard to recall his name, just in case I could use it as a magic spell to make all this go away. Roger. Roger was his name.\n\nLooking fearfully at his face, I noticed something encouraging. He was smiling, sheepishly; not in an I'm-going-to-shred-you kind'a way. Now that I was facing him, he put out his hand and shook mine, jerking his head back to a booth where Barbara was sitting, looking at us apprehensively. \n\n\"Could'ja join us for a few, Mr. Bentley?\" he asked.\n\nI just couldn't see any reason to refuse and looking at Cathy and Hattie all tied up in their girl talk, I nodded my head and followed him to the booth. Seating myself across from Barbara, I expected Roger to slide in next to her, but he slid in next to me instead, facing her. \n\nI waited for one of them to start the conversation, simply because I didn't know how much of what happened at my house that afternoon Barbara had shared with her husband. Blocked from the aisle as I was, I sincerely hoped that there wasn't any bad news associated with this visit.\n\nBarbara wasn't exactly giving me the vibes that I was hoping for however. She just sat there with her hands together, staring at her beer. Finally, Roger cleared his throat, and began to speak.\n\n\"Mr. Bentley,\" he began. \n\nI interjected, \"Scott. Please call me Scott, Roger.\" \n\nHe heaved a sigh of relief and then continued. \"I hope that Barbara's behavior this afternoon at your home didn't cause you too much embarrassment. We've been married now about twenty years and I know her really well, sometimes she just does stuff without really thinking about it. Meaning well, but getting herself in trouble, if you know what I mean. I don't want you to get the wrong idea about her, or hold any of this against her.\"\n\nApparently, there were few secrets in Barbara's household. I only wished there had been none in mine years ago, but that was then, now was now. I immediately saw where this was leading and I didn't want Roger or Barbara to worry any longer.",
        "\"Roger,\" I said. \"Before you go any further, let me explain what I think of your wife. First of all, as I explained once to a fellow manager some time ago, when I put together my staff I hired the cream of the crop. There was no compromise. Barbara was one of my first picks as a Project Leader for a number of reasons. Not the least of which was I couldn't find a single former employer that didn't want her back, badly. Second of all, with all due modesty, I'm a helluva Project Manager myself and during our interview she gave me a run for my money I'll never forget on the 'Principles of Process.'\"\n\nAs I was speaking I was looking at Barbara and saw that although she was still looking down at her drink, her face had taken on a most flattering blush. I'd never given up that much information in front of her before and I suspected that she'd expected this day to be her last, both with me and her husband.\n\nGlancing quickly over at Roger, I thought I saw his eyes begin to tear up, so I continued. Addressing the events of this afternoon, I explained to him my version of what had taken place and expressed my admiration for his wife's behavior during the confrontation between the two other women. \n\nHoping that Barbara had given him a reasonably accurate description of what happened, I said, \"Because of the stupidity of one of my guests, one of my female managers was humiliated by having her breasts exposed to the remainder of the group.\"\n\n\"This group,\" I explained, \"was composed of Project Leaders, so I gave them the problem of how to neutralize the crap that would result because of this incident, come Monday, when we all got back to work. The solution was worked out and the offending lead was faced with the old 'Eye for an Eye' form of justice.\" \n\nI didn't think it would help my explanation much if I actually mentioned the \"Tit for Tat\" version, but once I had a chance to chat with him a bit later, I think he'd have enjoyed it.\n\n\"So Sonia was urged to expose herself, the same way that she'd exposed Cathy; and she did so. Not wanting herself to be the only woman in the group to be left out of the solution and in sympathy with Cathy's embarrassment, Barbara exposed herself as well. Now there had been no holdouts.\"\n\nApparently our versions of the incident meshed fairly well, as Roger reached across the table and took Barbara's hands in his. Her hands seemed to disappear into his and as he rubbed the back of them, tears dropped from her eyes onto the table. Looking at him, I noticed that his eyes were filled as well.\n\n\"Ya'know, Roger,\" I said. \"She didn't embarrass me at all\u2014just surprised me. No disrespect intended, but she's got more balls than most anyone in my crew, and the incident just made me that much happier that I had her in my crew\u2014and on my side.\"\n\n\"And just for the record; I can't take back what I saw this afternoon, but I can tell you this; your woman is a hottie and you are one lucky son-of-a-bitch! Not only because of what I saw, but because she told you everything that happened this afternoon. Not many husbands are that lucky.\"\n\nJust about then, Cathy showed up at the booth and told me that Hattie wanted a word with me, and she wanted to talk to Barbara a bit before she left. I was more than willing to allow Roger to be subjected to some girl talk for a change. A just punishment for doubting his wife, I thought.\n\nRoger got up to let me out, grabbed my hand in his, and slapped me hard enough on my back to break a couple of bones, and told me I was a \"class act.\" If he only knew what I'd been doing to Cathy these past few days, he might not have thought so kindly of me.\n\nAs I wandered up to the bar to talk to Hattie, she said, \"Remember those little accessories that I told you to pick up the other day?\" she asked. I nodded. \"Well, I think that I guessed just right for this gal, Scottie. She's going to be a real handful for you. That's for sure.\" Looking at the puzzled look on my face, Hattie sighed, then said, \"Pleasure first; brought up short of climax\u2014then a surprise\u2014think about it, Scottie. Remember what 'coitus interruptus' meant to a young man? It means the same to a woman on the receiving end, maybe even worse because the purpose is different. Trust me, Scottie.\"\n\n\"I suggest that you give her a souvenir to remember this week by, something that will remind her of what she went through. Now don't get all nostalgic on me yet, you still have one day left and I understand that you'll both be back tomorrow afternoon. With your permission, I'll order something appropriate this evening from a specialty shop that I know tonight and have the Captain pick it up tomorrow when he comes to work. You can pay me for it when you come in.\"\n\nBeing reminded that our service week was about up was not exactly what I wanted to hear right now, but I agreed with Hattie and told her to go ahead with the purchase. I already had my gift, as long as I had my memory, but I just wasn't ready to give up this game so soon.\n\nCathy had bidden Barbara and her husband goodbye as they had other things to do this evening, and returned to the bar to sit with Hattie and me. It was still pretty early and I wanted to return home to continue to explore our \"sensitivity training\" and time was running out.\n\nSensing the tension between us, Hattie scooted both of us out of the bar, telling us to take care until tomorrow when we'd return.\n\n* * * *\n\nStepping back into my house, I closed the door and locked it. Turning to Cathy, who was simply standing in the middle of the room, I said, \"No.\" She wrinkled her brow in confusion, so I explained to her, \"You asked me a question this afternoon before we left the house. The answer is no, I don't get tired of seeing you naked. Now, you know the rules.\" \n\nAs she began to remove her clothing, she requested a trip to the bathroom to freshen up and I nodded, taking the time to wander to my own master bathroom to clean up. I changed into my khaki shorts and went into the kitchen to fetch a couple of brews.\n\nReturning to the living room, I looked over to the end table next to my couch to ensure that all my instruments were still displayed in full sight. All were in their place, and when Cathy strolled back into the room I passed her one of the beers and directed her attention to the group.\n\n\"Is there anything on that table that you absolutely don't want me to use again?\" I asked as I sat back down on the couch. \n\nI saw that her hands were shaking a little bit as she accepted the longneck from me and gazed at the items on the end table. Taking a long pull on the beer, she slowly walked over to the table and softly\u2014almost reverently\u2014ran her fingertips over the instruments of her torment. She stood there for a short while in thought, slowly drinking the rest of her beer, then putting the empty bottle on the table she turned and approached me once more.\n\nStanding between my legs, naked except for the ever present collar, she shook her head and softly stated, \"No, Sir.\" \n\nThen as if to accentuate her answer she put her hands behind her back and moved her feet apart, exposing her deliciously damp pussy to me. The faint scent of her perfume, coupled with the aroma of her arousal combined to snare me completely into our daily ritual.\n\nI reached out to the treasure between her thighs, gently scratching through her pubic hair. Once I began to hear her moans, I slipped my fingers into her very wet lips and took my time collecting my special treat. While I did this, she kept her eyes closed and I watched as the lovely blush began to spread from her breasts up to her cheeks.\n\nOnce I pulled my hand away, she opened her eyes, watching me carefully as I cleaned my fingers with my tongue. She kept her hands behind her back, but I noticed that she began to tremble a bit, as she watched me perform my daily ritual. \n\nPushing her back a bit, I got up and retrieved the blindfold from the table. Moving around to the back of her, I placed it over her eyes once more. Doing the same with the handcuffs, I secured her arms behind her back. There was no resistance this time.\n\nLeaning into the side of her face, I began the mantra, \"Do you remember your 'safe' words?\" She nodded. I then asked, \"Do you remember who you belong to during this service period?\" \n\nShe nodded her head and whispered, \"You, Sir.\" \n\n\"Do you still trust me?\" I asked. \n\nAgain, nodding her head she softly replied, \"Yes, Sir.\" \n\nI added a fuzzy question to the mix. \"Is there any part of you that you will not share with me?\" \n\nI waited patiently for her to mull that around in her head, until she finally whispered, \"No, Sir.\"\n\nMy cock seemed to have a mind of its own right now, pressing out painfully against the front of my shorts, and I was in complete sympathy with its plight, anxious to begin the exercise for the night.\n\nI picked up the horsehair whisk and before I utilized it, leaned into her chest and took her left nipple between my teeth, gently nipping it until she groaned a little louder. Sucking as much of her breast as I could into my mouth, I tasted her skin, wanting this to last as long as possible. She began squirming to ease the intensity of my attack, so I quickly switched to her other breast, performing the same service on it.\n\nTemporarily giving her some respite, I stood and told her that I was very proud of her behavior today. I commended her on her composure during the barbeque after Sonia had ripped her bikini top off and compared it to what she should be doing during the operation of her department. \n\n\"Cool under fire,\" I told her. \"There's nothing like it for keeping dissenters at bay and learning what's really going on in their minds.\"\n\nSuddenly, as she seemed to relax a bit, I softly snapped the whisk down on her left breast, causing her to gasp in surprise. As she jerked back away from me, I reached out and snapped it lightly on her right breast. \n\n\"You're mine now, Cathy,\" I said. \"I can do what I want with you. Understand?\" \n\nShe whimpered a bit, then said \"Yes, Sir.\" \n\nI figured that now would be a good time to spring my little surprise on her. \"You are not going to be punished tonight, Cathy,\" I told her. \"Tonight I'm going to give you whatever you want. Do you understand?\" Puzzled, she simply shook her head in the negative. \"Look,\" I continued. \"You've done a wonderful job of service and obedience today. I've almost gotten the impression that you're willing to take some of my advice on the management of your crew and I'm fairly happy about that. Tonight is your little reward, just let me know how you want it to progress.\"\n\nHer confusion continued and I tried to find some way of explaining to her that she had control of this night, without me directing her activities or submitting to my little tortures. The more I tried to explain however, the more panic I saw on her face. \"Look, Cathy. Think of this as a 'night off' for good behavior.\"\n\nI couldn't see her eyes, but I watched as she shook her head back and forth. Finally, her shoulders began shaking and it suddenly became clear to me that she was crying. \"What have you done to me, Sir?\" she choked out. \"Can't you see I don't need a night off? This IS my night off! This is all I can think about on my night off! Sir, I belong to you now. Please, do whatever you want with me.\"\n\nSobbing now, she just stood there in front of me, naked and unhappy. Stepping closer to her, I reached out and took hold of her tits, rubbing them in my hands, tweaking her nipples. Whispering, \"Shh...\" into her ear, I kissed her gently on the forehead once again. \n\nShe began to settle down now, moaning that familiar sound of arousal into my face. Moving my face to her chest, I took her left nipple into my mouth, nipping at it with my teeth until she squealed, then moving to the right one and giving it the same attention. Getting her back into her 'groove' seemed to be the best way to get her through what she was going through now.\n\nWhat just happened, I wondered? I just gave her an opportunity to take a break from her nightly torment and she seemed to panic.\n\nThis was just a game, dammit. It seems that she was taking it to way too seriously. As I thought that, I felt a heavy hand on my gut, as if I'd just uttered a blasphemy! Wasn't I taking it way too seriously as well? Wasn't I the one who was having difficulty imagining my life after tomorrow night?\n\nBy now Cathy had settled back down and I decided to take a slightly different tack with her this evening, to see if I could finally challenge her commitment to this game. If I could get her to hit the wall tonight, I might be able to ease her out of this bondage trap by the end of the service period. I was less confident that I could do the same for me. Four years since any kind of a female relationship set me up perfectly for my current predicament.\n\nAs I was pondering all this and my options, I was stroking Cathy's breasts and the front of her thighs with the horsehair whisk, snapping them against her skin from time to time to remind her of the consequences of her choice this evening. \n\nHer skin was taking on a wonderful pick blush in response to my flogging and the sensuous moans coming from her throat were creating a control problem in my shorts. Must be the frequency of her voice, I thought. Whenever she started, my cock automatically rose to attention and demanded instant and intense satisfaction.\n\nI walked around her now, using the flogger to awaken the skin on the back of her body as well. She would feel the full impact of our little toys this evening and I had yet one last surprise ordeal to expose her to.\n\nNearing the end table, I picked up the nipple clamps and returned to my lovely servant. Allowing the effects of the horsehair whisk to take its toll on her body for just a few more seconds, I reached out once again and took her left tit in my hand. Grateful for the pause in her torment and the relief in my touch, Cathy leaned into my grasp, giving me as much pressure against her breast as I gave her. Suddenly, I quickly applied the pincer to her nipple, securing it a bit more firmly than before.\n\nFinally, she was feeling a little pain and her brow was wrinkling a bit in concern. I reached to her other breast and after massaging it a little to get her to settle down, I applied the other pincer to her nipple. A bit harder than before as well, noting that she had sucked in her breath at the extra pressure.\n\nTo make sure that I could take her to the next level, I asked her once more, \"Cathy, do you still trust me?\" \n\nBreathing heavily now, she took a few moments and answered, \"Yes, Sir.\" \n\n\"I'm going to take you to the final test of that statement tonight. Do you understand?\" I asked. \n\n\"Y-yes, Sir,\" she replied. \n\nI didn't think so, but I continued. I knew that if we were to escape this little trap that we'd stepped into, I would have to do something that would snap her out of her fantasy world and get us both on the track of 'normal' come Monday morning. Pushing her threshold of comfort beyond what she was willing to accept seemed to be the most expedient way of breaking her out of this seemingly endless cycle of submissiveness.\n\nThere was only one day left after this night and getting things back to normal\u2014whatever that was\u2014might be getting a little tricky. There was only one thing left for me to impose upon her, without getting too weird or painful, but it would have to be performed gently. I barely had an idea of where her limit of submissiveness was and I could still get into some trouble if I got too aggressive with her. She had already surprised me by taking everything that I'd thrown at her so far and as a result, I found myself more and more deeply in need of completely possessing this marvelous creature.\n\nReaching out to gently tug on the chain between her breasts, I was again greeted by a groan of pleasure from her lips. Once again, my cock responded to her voice by firmly pressing out against the front of my shorts. I had already begun to ache for the loss of her that I was going to experience when this was over. I was determined to make this night an all-out effort to absorb as much of this woman as I could.\n\nAs her shoulders began to twitch, I understood that the effects of the flogger were beginning to overwhelm her senses and my intervention was going to be requested. I decided to wait until that moment before starting my exploration of her body. At the moment, she was only able to reach the middle of her back down to her ass cheeks with her hands to gain any relief at all and I'd already pretty much worked the flogger over most of her exposed skin.\n\nI noticed that her lips had begun to tremble and leaned into her ear to ask, \"Cathy, what do you want?\"\n\n\"I need you to touch me, Sir...to taste me,\" she whispered harshly. \"Please!\" She had already recognized my passion for tasting her essence and was appealing to the one thing she knew I couldn't resist, the taste of her lovely body. So who was in control of whom, I thought?\n\nSince her shoulders were twitching already, I moved to her backside and brought my body against hers, bringing my erection against her bound hands and moving my own hands around her arms to embrace the base of her tits. Pulling her body against mine, I massaged her breasts under the clamps and began kissing her neck and ears. There would be few untouched parts of her body this evening\u2014this was just the beginning.\n\nI was very conscious of her hands eagerly exploring my cock and balls through my shorts. It seemed that her hands were as hungry for contact as my cock was for receiving it. Nibbling on her ears, I ran my tongue around the rim of her auricle, dipping it into the ear until I felt her jerk in response. I then nipped her earlobe until she responded once more, only to move to the other side of her face. There would be little mercy tonight for my little captive.\n\nContinuing my way down the back of her body, I licked and nipped at every exposed part of her I could reach until I reached the middle of her back. I was now blocked by her bound hands, which had been forced to relinquish my groin by my travel down her body.\n\nI instructed her to kneel away from me and to spread her knees on the rug. Of course, this was to expose her marvelous sex to my hunger. This she did quickly, to get relief from her growing torment, I thought. For me, it was an invitation to a feast and I wasted no time in pushing my tongue deep into her cunt, forcing a loud grunt out of her mouth.\n\nShe backed into my attack and I used that movement to slide my tongue into every fold of her pussy that I could find, wrapping my lips around hers, sucking her juices into my mouth. Her relief was no more vital to her as mine was to me, but I had to maintain my pressure on her if I was to keep this from getting out of control. Spearing my tongue into her little asshole, I hung on to her hips as she bucked into my face, savoring every contact with her body that I could. God, I'd miss this! I was already in mourning, I thought.\n\nHer orgasm took me a little bit by surprise, but I knew the symptoms by now. The trembling in her abdomen, then the deep, shuddering throbs throughout her hips, but my place in all this I knew by heart as well. I kept my face firmly embedded in her cunt, continuing to press my tongue into and around her pussy, flicking it over her clitoris in little butterfly touches. She exploded in a thunderous climax, surprising even me with its intensity. As she shuddered through her orgasm I reminded myself that we still had \"business\" to attend to this night.\n\nI had feelings for her that I had to admit, deep feelings, that would probably effect how this whole scenario played out. The fact of the matter was\u2014I needed her. This game had already pulled too many of my strings to let loose now.",
        "\"Cathy,\" I said. \"I'm going to pleasure myself with your body tonight. Do you understand?\"\n\nStill kneeling before me, she nodded her head and quietly whispered, \"Yes, Sir.\"\n\n\"Do you have anything you wish me to do, or not to do during that time?\" I asked. \n\nI thought perhaps this might be a way to slip in that little reward for her obedience over the past week. This time, I got a different response, as she actually took some time to think about what I'd offered her.\n\nFinally she gave me an answer and it wasn't exactly what I'd expected. \"Please, Sir,\" she began, \"Just for tonight, if it's all right with you, I want my hands free and I want the blindfold off.\" \n\nThere was no request for me to lose the flogger, or the nipple clamps\u2014two items I'd thought would bother her the most.\n\nConsidering her response for a moment, I decided that her request was more than reasonable, after all I had been ready to give her the entire night free of torment. I arose, erection straining the front of my shorts and brought her to her feet.\n\nReaching up to the back of her head, I removed the blindfold. As she stood blinking at the room lights, I released her from her handcuffs. Turning her to face me, I brushed my hands across her tits almost on instinct, causing the clamps to tug on her nipples a bit more. Her groaning response had a most predictable effect on my cock, causing it to jerk even harder to attention. Certainly flattering to Cathy, I'll admit.\n\nAs she was clearing her vision I leaned into her face and took her lower lip between my teeth, nibbling on it until she began to respond. I felt her tongue pressing into my mouth and I accepted it with relish. Aside from her climax last night, when she attacked my mouth with hers to ensure my deposit into her womb, we hadn't had a real kiss. Now, I wanted to claim her beforehand, giving her notice that I wasn't going to hold back.\n\nShe made no move to remove the nipple clamps and once I'd removed the cuffs from her wrists, she immediately put her arms behind her once more, acknowledging my control over her. The difference now was the fact that now I could clearly see the emotions playing through Cathy in her eyes. I saw resignation, uncertainty, arousal, a bit of fear, and respect. If she was as perceptive as me, she could probably see the same in my eyes, I thought. God, she was beautiful!\n\nBut as entranced as I was at the moment, I shook it off and simply said, \"Cathy, I'm going to fuck you now.\"\n\nI figured that the shock of a direct approach would spark her resistance to what we were presently sinking into; the fuzzy, uncertain world of bondage. \"Do you understand?\" I pressed.\n\nAfter a couple of moments she replied softly, \"Yes, Sir.\" \n\nHer hands were free now and there was no blindfold. She could now clearly see my frustrated erection pushing out angrily against my shorts. This would be no impotent threat. It was real.\n\nI reached up and snapped the chain into her collar once more and did something that I'd not done since this week of service began. I led her into my bedroom and removed my shorts, standing before her naked, as naked as she stood before me. Gesturing towards the bed, I instructed her get onto it, lie on her back, and spread her legs for my pleasure. She did so, without protest, and soon I was able to warm her up by partaking of my favorite exercise with her\u2014licking her juices into my mouth by running my tongue through, into and around her pussy.\n\nRising from her cunt, I moved up to her face and immediately allowed her to taste herself from my lips. Placing my body across hers, I sucked her lips into mine at the same time I pressed the head of my cock against her lovely pussy lips. As she responded to my oral attention, I pushed into her cunt until I reached bottom, holding myself there until I felt her begin to respond to my invasion.\n\nAs I felt my cock securely buried in her cunt, I whispered into her ear, \"Who do you belong to right now?\"\n\nWithout a pause she replied, \"You, Sir.\" \n\nRaising myself up on my arms, I felt her now free hands sliding down her belly to reach the base of my cock, exploring the instrument that had pierced her sex, somewhat curiously. My cock twitched in response and I began a slow, leisurely stroke in and out of her pussy, changing my angle from time to time to maximize the contact between myself and the walls of her cunt.\n\nHer hips began a slow rolling motion to compliment mine and I saw clearly that our physical goals were the same, although our ultimate \"game\" goals were probably different. We were now working in tandem\u2014together\u2014each of us trying to use the other to achieve the maximum pleasure out of our union. Cathy didn't realize it yet, but she was learning yet another lesson in teamwork\u2014one that I was determined to develop in her in the short time that we had left in this challenge.\n\nWithout the blindfold, I could now look directly into her eyes as I drove my cock deeply into her body. They were just a bit glazed over in lust, but she had them focused firmly on my face. As for myself, I took my time and while her need was prompting her to speed up the thrusts, I intentionally forced our rhythm into a gentler, stronger, more engaging motion. Like a fine wine I, thought\u2014to be savored\u2014not squandered simply because of thirst. While I was waxing philosophical, I couldn't help thinking that any speedup of our present lovemaking, at any rate, would certainly cause me to bring this to an unwelcome early finish.\n\nFinally releasing my cock, she raised her hands to cover the nipple clamps now and I expected her to remove them as she'd done the night before. I was a bit surprised when she simply pressed her hands into her chest, squeezing her imprisoned tits. As she did so, she arched her chest into me, moaning loudly in passion. The chain connecting her tits slid upward to rest under her chin and I began to feel the warning flutter of her climax moving across her abdomen.\n\nAs if on cue, my nuts began the twisting sensation that signaled my own imminent release. As before, I warned Cathy that I was about to explode and wasn't too surprised this time when she brought both her arms and legs around to bind me to her. As her flutter turned into a powerful series of spasms, I drove my cock into her one final time and blissfully allowed my body to fill hers with my cum.\n\nTaking my weight off hers with my elbows, I watched her face as she slowly began to catch her breath once more. Her eyes were closed now, her lips swollen with arousal and her face glowed with the flush of sexual satisfaction. This woman could make any lover look good, I thought. As I reflected on that last thought, I suddenly felt a sharp pang of jealousy. Even though this period of service was over at the end of tomorrow, I couldn't bear the thought of this wonderful creature being in the romantic company of anyone but me. Man, I was getting really fucked up!\n\nAs my cock began to recede from her lovely pussy, I rolled off her and bent over to kiss her on the forehead. She opened her eyes and smiled at me, moving her hand down to her cunt and dipping two fingers into herself, scooping up a dollop of sperm and her juices. Bringing her fingers to her lips, she made a display of cleaning her fingers with her tongue. I can't begin to tell you what kind of an erotic effect that little scene had on me.\n\nInstructing her to remain where she was, I jumped up and hurried to the bathroom to steam up a couple of hand towels to clean ourselves with. I also picked up a little necessary item for the last and most risky torment for her for the week. This would undoubtedly be the episode that tests her determination to see the contest to its end. \"Slow and easy,\" Hattie had said, although she probably hadn't thought of this trial when she said it.\n\nReturning to the bedroom, I used the hot towel to clean my juices from her pussy and thighs. She'd obviously used her fingers to clean more of our combined liquids from herself, as there didn't seem to be a lot left to clean by the time I got there. I'm sure the warm, wet towel felt good to her nonetheless. I'd already cleaned most of our evidence from my cock and balls while I was in the bathroom, so we were prepared for the next act. \n\nPutting everything down, I moved up to stand next to where her head lay on my pillow. My cock was semi-erect and dangling just about eight inches from her face. Looking down at her, I noticed that her gaze had not moved from my re-awakening equipment, but she would soon be engaged in a tough decision\u2014to continue\u2014or not to continue our little game.\n\nTaking control once again, I instructed her get on her hands and knees in the middle of the bed. Still a bit exhausted from out last tryst, she slowly obeyed, exposing her delicious treasures to me once more.\n\nAs she remained obediently in this position, I asked her, \"Cathy, what am I doing with your body tonight?\" \n\nI moved onto the bed beside her as I waited for her reply. She was taking a few moments to think about what answer I expected to my question, so I took advantage of that delay to lay on my back, and shift her into a 69 position\u2014her looking down at my cock\u2014me looking up at her delightful pussy.\n\nFinally she recalled my earlier comment to her and answered, \"Pleasuring yourself, Sir.\"\n\n\"That's correct, Cathy, and do you recall your answer when I asked you if there was any part of you that you'd not be willing to share with me?\" I continued.\n\n\"Yes, Sir,\" she replied. \n\n\"And your answer was . . .?\" I pressed. \n\n\"All of me belongs to you right now, Sir. To do with as you wish.\" She answered. Not the exact words, but certainly what I needed for the next ordeal.\n\n\"Cathy, I need your mouth for my pleasure right now,\" I told her. \n\nGiven the position that we were in there could only be one response. She dropped her face into my groin and captured my cock in her lovely mouth. Using her now freed hand, she grasped my cock at the base once more and slowly stroked up and down in cadence with her mouth and tongue. On occasion, she'd drop her hand onto my balls, rolling them around gently to complete her sexual massage.\n\nI'd just had an orgasm a few minutes before, so I felt that could hold off a bit longer this time, but not leaving anything to chance, I began my assault immediately. Raising my face into her pussy, I began to pleasure myself once more with her, drawing my tongue through and into her cunt, tapping her clitoris on occasion, just to keep her awake. While I was doing that and enjoying her attention to my own recovering equipment, I pulled the cap off the tube of surgical lubricant I'd brought with me and squeezed a large glob of it into my fingers.\n\nThe moment of truth, I thought. I knew from our previous encounters that her ass was a serious erogenous zone\u2014only now I had to see how far that extended into this particular situation. If I could conquer this last bulwark to her personal defenses, I'd consider my conquest complete. The only danger that I could foresee was the addictive nature of what I'd been doing. Hattie had tried to warn me during one of my visits to her bar, but only now was the realization dawning on me that I was treading into dangerous ground.\n\nReaching up to her sensuous ass, I parted her ass cheeks with my fingers and pulled my lubricated finger through the valley containing her little asshole. As I did this she jerked briefly, causing the chain connecting her nipples to drag across my lower abdomen. As that happened, I knew she could feel a jerk from my cock in her mouth, but then she returned her attention to my pleasure. I was sure that she hadn't yet figured out that her sweet little ass was the next target for my arrow of lust.\n\nContinuing to pay attention to her cunt with my tongue, I slowly, gently began to caress her asshole with my thoroughly lubricated fingers, occasionally dipping the tip of a finger through the sphincter to cause her to get used to the invasion. I didn't want to actually hurt her, but I did want her to realize that there were no \"safe havens\" in our relationship right now.\n\nAs she was concentrating on giving me pleasure, I focused on preparing her ass for my assault within the next few minutes. I made sure that my fingers contained more than enough lubrication to prevent any abrasive pain to her, but I had to be patient in stretching her rectum to accept an object as large as my cock. Not that I was that large, but anything larger than what she was accustomed to having pass through there would be bothersome to her.\n\nFocusing on those erogenous zones that I'd already discovered on her body, I teased and stroked and fondled her points of pleasure, getting her fired up to the point that she'd not pay too much attention to what I was doing behind her. \n\nFinally I managed to press my entire forefinger into her ass and wriggled it about gently without getting too much of a negative reaction from her. Of course, I still worked quite diligently on her pussy, making sure that my thirst was satisfied and her sexual engine was running full speed.\n\nMy next step was to insert two fingers into her rectum, slowly, gently until I had them embedded in her body as far as I could go. The only problem I encountered was Cathy's increased interest in pressing her cunt into my face and the electric twitches of her hips, which complicated my attempts to keep myself pressed into her crotch. She was beginning to see what she was about to endure, but her emotional motor was running so fast that she couldn't slow down enough to set up a defense.\n\nAs I began pressing the third finger into her ass with my other two, she began protesting a bit; sputtering out, \"No! Please, no. I've never...not there!\" \n\nI continued pressing my fingers into her rectum, twisting them from time to time, reminding her that I was in charge, at least until I heard one of the two 'safe' words that would break this whole exercise up. Those words never came.\n\nShe had completely stopped paying attention to my pleasure now and was trying only to evade the persistent pressure of my fingers into her asshole. Caught between the demands of the service requirements and her own personal dignity, she was slowly allowing the \"Deal\" to control what happened next.\n\nFinally, I stopped. Moving myself out from under her, I told Cathy to roll over on her back and open her legs once more. Once she had done that, I positioned myself between her legs and aimed my cock back into her cunt. Pushing into her body again, I made sure that she knew that I was still here\u2014still in control. But I was determined to get this show on the road quickly, because the thought of this contest ending what I was enjoying now, was beginning to depress the hell out of me.\n\nAfter a few slow strokes to gather my thoughts, I leaned back and took a long look at what I was about to do. Cathy's eyes were closed, which made my decision a bit easier. I smeared a good glob of lubricant on my cock and aligned myself with her asshole.\n\nLeaning in slowly, I pressed my cockhead against her anus and pressed. She squirmed sharply and I saw her eyes snap open in panic. Once again she began begging that I don't. I grabbed her calves in my hands and pressed her legs back towards her shoulders, giving me an angle that should make my entry into her body less stressful to her and me.\n\nIt didn't matter now. I had to push on to the conclusion of this game, no matter what the outcome. Until I heard the two words that I'd given her end all of this, I was determined to press her to her limits.\n\nShe lay before me\u2014splayed\u2014her pussy lips engorged and full of her arousal. Her asshole was also exposed and the head of my cock was just entering her sphincter. As I passed the first guard of her ass, she clinched her muscles and caught my cock in mid-stroke. \n\nReaching up to her chest, I loosened the bands holding the nipple clamps onto her tits and removed them. As the blood rushed back into her nipples, she lost her focus on what I was doing in her ass. She quickly grasped her tits with her hands, massaging the feeling back into them, while I pressed the rest of my cock deep into her bowels.\n\nShe responded by letting out a long, loud groan, but she didn't let loose of her breasts\u2014continuing to try to massage the strong sensations out of them.\n\nLovely creature, I thought, but I've finally got you now. Or, she had me, but did it really matter?\n\nI stopped moving at this point, allowing her to set the pace for the remainder of the exercise. She was incredibly tight down there and I was beginning to feel the effects of constriction on my cock. I'd apparently conquered her last stronghold, but if I didn't get some relief action soon, I'd have to retreat to get some blood flow back into my groin.\n\nOnce she'd gotten some relief from her tortured breasts, she glanced down to see that what she'd felt was true\u2014I was firmly embedded in her ass. By now she'd loosened up enough to take the edge off the pain of penetration, but she tentatively squeezed her ass muscles against my cock, causing me to twitch it involuntarily. \n\nI watched her eyes close as she seemed to examine the sensations coming from her anus right now, but she didn't panic or try to move away. Calm and cool under fire, I thought. She was catching on quickly.\n\nOpening her eyes to look into mine, she slowly began to move her hips away from mine, allowing my cock to withdraw from her ass\u2014nearly to the end. Then, flinching slightly, she pressed her hips back into me, taking my cock back into her body\u2014gingerly. Once again she performed the movement and I began to get the feeling that we were about to expand upon the destruction of our newest barrier.\n\nPlacing her legs on my shoulders, I began to match her strokes with mine\u2013deep into her body. We began slowly, but soon we were picking up the pace. She could do little but rub her tits or reach down to caress her cunt or examine my intrusion into her body.\n\nI gave her the first instructions for this exercise now, \"Cathy, I want you to tend to my pussy while I tend to the rest of your body.\" \n\nI was giving her permission to do whatever she felt necessary to bring herself to a climax while I pounded into her asshole. I also wanted to remind her that her cunt still belonged to me right now, along with the rest of her body. It was MY pussy!\n\nAs I reached for her tits, her hands slid down her tummy to her cunt, which was eagerly awaiting some attention. I had the perfect seat in the house for what was going on right now. As I was sliding my cock back and forth in her ass, I had access to her marvelous breasts and her hands were teaching me how best to satisfy her cunt\u2013if I were ever allowed to pleasure myself with her there once again.\n\nAll too soon, this episode finished, simply because of the novelty of it. My emotions around her were always at fever pitch it seemed and just as I was beginning to get into the flow of our lovemaking, I began to sense the flutter in her stomach once more. I knew the signs well now and the signs switched on the ignition of my own internal combustion machine.\n\nWe came pretty much at the same time, me pouring what remained in my balls into her bowels and her bucking into me with a passion that defied the humiliation that I'd just exposed her to. I just hugged her now, tightly, until she finally settled into a relatively steady breathing pattern.\n\nMy cock had finally relaxed enough to pop out of her rectum and I used the towel that we'd used earlier to clean her off to some extent. Getting out of the bed, I leaned over and kissed her once more on the forehead and told her to wait until I returned. I went to the bathroom and began to prepare a nice hot shower for her. Once the temperature was just right, I returned to my bedroom and led her back to the shower, assisting her into it. Then, I hung a couple of large towels on the hanger and joined her.",
        "She was exhausted. I could see it in her face. I began to lather her body up with soap, but she resisted, insisting that it was her duty to clean me instead. Her head was still in this stupid game, I thought, but my insistence won through. I took my pleasure once more in exploring her body, although this time it was to clean the evidence of our lovemaking from her body.\n\nLovemaking? Not just fucking? I know the difference and unless I was reading her wrong\u2014which I admit was very likely\u2014there was some love involved in all of this service. Anyway, she'd endured the best that I could throw at her and hadn't backed out of the deal\u2013yet.\n\nI finally allowed her to clean me off as well and as expected, I ended up with another fucking boner! Shit! What the hell was the matter with me around this broad?\n\nDried off, I escorted her back to the kitchen area where she'd stowed her clothing and was about to let her dress and return home. Turning back to face me, she started sobbing once more and I began to become a little alarmed that I might have finally blown it tonight with her. I couldn't think of anything else to do but put my arms around her and hold on tight.\n\nShe grabbed my arms tightly and pushed her face into my chest, choking deep sobs onto me. I held on to her, stroking her head and patting her back, telling her that everything was all right. I doubted that given her reaction to all this, but I had to say something.\n\nBefore I could say anything to calm her, Cathy blurted out, \"Sir, it's late, and I'm tired. Please, can I stay with you tonight?\"\n\nNot what I expected, but how do you respond to a question like that from a naked, sexy woman into whom you've already planted seed in every orifice? Leading her back into my bedroom, I watched as she pulled back the bedding on the side of the bed that she assumed was left empty; making herself at home.\n\nI'd expected to discuss what had happened today between us, but as I returned from the bathroom to get into bed, I noticed that Cathy had already slipped off to sleep. I pulled back the covers to slip in with her, but for a moment or two, I had to marvel at the sight of her, curled into a fetal position peacefully sleeping; the sleep of the just, as the old saying goes.\n\nI doubted whether I could do the same, but I climbed in and tried to disregard the distraction that lay just inches away from me. \n\nSleep came to me slowly that night.\n\n(To be continued in Seven Days of Service \u2013 Day Seven)"
    ],
    "authorname": "Hatsuda",
    "tags": [
        "anal",
        "bikini",
        "breasts",
        "biker",
        "cock",
        "pussy",
        "handcuffs",
        "flogger",
        "nipple clamps",
        "clamps"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/seven-days-of-service-day-06"
}