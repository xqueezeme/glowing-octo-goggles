{
    "title": "Understand Breasts & Bra Sizes",
    "pages": [
        "Until I dropped anchor here, I knew about the male penchant for sports stats but was not fully aware quite how obsessed males were about sexual statistics. \"Pee-Wee Logan's career RBI was to die for but his nickname was more than justified by the two-incher he sported openly in the locker room.\" Just for information, do you measure it soft or hard and is it above or below? No, don't tell me, I really don't want to know!\n\nFor a long while now, finding female mammary glands dismissed in stories as a quantifiable fact has really irritated me. I find it as much of a turnoff as mention of a 'Hershey highway' or a 'poop chute', and if you start talking about a ZZ Top, I'll giggle and think the boobies have a long beard and are strumming a guitar.\n\nSo, in the best spirit of 'show, don't tell', I have tried to explain how breasts can be measured for bras and why they are so fundamental to sexuality in the hope that writers will see why even 'small plums', 'medium peaches' and 'large melons' give infinitely more description to the reader, male or female, than 36DD.\n\nI apologize in advance if you think there is any misinformation \u2013 the subject is a minefield of myth and legend and I've tried to tiptoe as carefully as possible, even though I've had to abridge some information and I may have compromised accuracy in so doing. I just hope this piece is of some interest to women and a cautionary tale for any writer who wants to quote breast measurement or bra sizes.\n\nFW \u2013 I raise my glass to you, many thanks.\n\n-----------------------------\n\nFairy Wonderbra says Supersize my 40AA jugs!\n\nFairy Wonderbra, FW for short, is a girlfriend who beta tests my stories to stop the worst drivel from being posted. She was sitting in my kitchen proof reading my latest erotic gem on the laptop when she suddenly screamed apoplectically.\n\n\"She's having her breasts measured! I thought we were starting a campaign to have all use of bra size measurements banned on the grounds of boredom and cruelty to women, sorta like bestiality and under pensionable-age sex.\"\n\nI patiently tried to explain it was just my very unsubtle plot device to get the girl's naked breasts to be fondled by a strange woman in public whilst her boyfriend watched, but this wasn't enough for FW. A woman who spiked my story about how Rock Hudson did some bareback riding with a frog \u2013 the frog did turn into a handsome prince \u2013 is not to be trifled with.\n\nEven though absolutely no numbers or measurements were quoted in the story \u2013 which FW is straining every sinew to keep unposted - my penance is to launch this plea to never, never quote bra sizes in literotica stories unless the plot absolutely demands it. I mean, you would never write, 'His hands slid down from her twenty-four inch waist to rest on her thirty-six inch hips,' would you? Not if you expect a good score from the readers, surely?\n\nAnyway, here goes!\n\n\"I'm Elle and let me introduce myself. I'm a 38DD sophomore at Literotica Nymphomaniac Community College.\" Yes, yes, truly, some people do start stories pretty much like that. I'm not sure how most of them end though.\n\nWhy is it, in stories, men are always human beings and women just bra sizes? I can assure you, probably from about eighth grade on, almost all girls are unhappy about their breasts; too big, too small, wrong shape, too saggy, even just 'funny looking'. From the first moment our chests start budding we are crossing our arms tightly in front of us to hide the evidence, and then by twelfth grade we are now embarrassed that ours are smaller than all of our friends, so begin stuffing handkerchiefs or socks in our bra cups. Please, oh great deity, may I never sink to the chicken fillets! \n\nAnd so it goes on; even when we start to like the bubbies as we learn how they can get us a lift home or a larger pay rise, the last thing we want to do is broadcast statistics. In fact, we are seldom sure exactly what size we are. It's good, though, I admit, when you guys check labels in the naughties drawer just before birthdays and Valentine's; we can always exchange them if they don't fit. \n\nAnyway, in his superb guide on 'How To' write erotic stories, 'The 10 Commandments', The Earl says, \"Never use measurements unless you have a very good reason. [. . . ] They restrict the reader's imagination. Plus, when was the last time you found a man who could tell women's bra sizes from outside their clothing?\"\n\nI would go a whole lot further. If a naked woman handed a man a tape measure, pencil and paper and asked him to check her bra size he probably couldn't get it anywhere close to right. Mind you, it's odds on neither would the woman!\n\nSo, just promise me this guys \u2013 and I think it is guys, really; I'm pretty sure I haven't yet seen a female writer on the site using bra measurements as descriptions of breasts \u2013 take this little examination (no stirrups or speculums) and promise me never to put a bra size in your stories unless you get all the answers right first time. On your honor now, no peeking!\n\nA) The vital statistics of a woman with a bra size quoted as 38C are 38-xx-xx?\n\nB) The number 38 in 38C equates to inches?\n\nC) Cup size C is bigger than size B and cup size DD is smaller than size E?\n\nE) Cup size is related to the bust measurement or breast size?\n\nF) A woman's breasts are symmetrical?\n\nWell, that was easy wasn't it? Now swap papers with the person sitting on your lap and we'll look at them together and see what crops up. All those who wrote 'it depends' as the answer to every question clearly has no need to carry on here in Breasts101. Full marks and you can advance to the graduate program and start on your thesis explaining the exact anatomical differences between 36D breasts and 38C breasts; with diagrams, please. Now nipple-long please, the rest of us have work to do.\n\nFor the remainder, please refrain from ever using bra size as a breast description unless you add a disclaimer explaining exactly how the measurement was obtained and verified, with written confirmation from the heroine that her bra fits properly and a note citing manufacturer and model of bra.\n\nYou see, breast measurement is one of those Catch-22 thingies. Lingerie retailers and bra manufacturers claim that more than seventy percent of all women wear the wrong size bra, but many more than seventy percent of all women claim that lingerie retailers and bra manufacturers have no idea how to measure women's busts. Let me explain.\n\nFW said she'd been mooching along for a while now with bras that are generally 34C or 36B. That's right guys, different sizes but the same tits! How can you write that in your story? It can be a personal choice, but usually depends on the manufacturer; you see there seems to be no industry standard for cup size. One company's B is another's C. How can you cope? Sloggi sports bras seem bigger than Elle McPherson Intimate Secrets. Cup sizes of the same manufacturer even change between model and size. A 36B is usually slightly bigger cupped than a 34B but have you checked between the under wired and the soft cupped ranges? What about padded or half-bra? \n\nIn any case, bras have two \u2013 usually three \u2013 sets of hooks. If I hook up my 58GGG's (joke) on the first setting, have I got the same rack as a girl who strains to 'get things together' on notch three? And when the damn thing has been washed a few times it stretches, so you have to do it up more tightly \u2013 so you're getting smaller? Seriously, any attempt at quantification is pretty meaningless and is no substitute for good description. \n\nMost women tend to stick with the same brand or brands and use trial and error when they change. You try on zillions and buy the one that seems most comfortable. Not exactly rocket science, but I pity the poor husband in the Victoria's Secret store at Christmas; unless he's taken some plaster casts, of course! Just looking in the unmentionables drawer for labels may not be enough.\n\nAnd there's another point for you guys who are hooked on numbers. Think of shoe sizes for example. Despite thinking you are a 7, you go to the shop and try them on and find you need an 8 because the style you like are cut narrowly. So what shoe size are you? Good job too, otherwise how would all those young male shop assistants get to go home on the bus in stained pants because women always go shoe shopping in a short skirt and with no panties?\n\nA bra is a skillfully engineered torture device where, for any individual woman, there are a range of sizes that fit. So when your fairy princess is 'clearly braless under her spaghetti strap crop top' then what exactly are these 38D cantaloupes she's waving in our faces? Are they, perhaps, 36DD when she's wearing a cantilevered bra with underwiring from Wal-Mart or, do you really mean 'full, voluptuous breasts stretching her spandex top as if on a mission to escape their cotton-lined Alcatraz'? Why not explain? It is much better for our imagination.\n\nSo FW and I decided to run an experiment from scratch as research. First, we got on the Web to find out the proper way to measure breasts and were absolutely amazed to find there is no one accepted standard. We found more than half a dozen methods from reliable sources, which gave wildly different results. True, the major retailers seem to have a roughly similar approach, but the answers we got from their instructions were sometimes hilarious.\n\nWe started with Victoria's Secret, but Sears, Figleaves, Maidenform, Agent Provocateur and most of the other big names were pretty similar. You take your top off and put on a well-fitting, soft bra. Catch-22 again; if you've already got a well-fitting bra, why are you doing this measuring lark? Doh!\n\nFirst, you measure round the ribcage, right under the breasts then, for some inexplicable reason, add 5 to arrive at 'band size'. Well, to be brutally honest, you can add anything from three to six, depending on the store's guidelines. Also, some sites added different amounts as you get bigger \u2013 that is bigger chested, not bigger breasted; others added less. FW came out at 34 inches and, when you add 5, that makes 39, but bras only come in even sizes (why?) so that rounds to 40. Forty what, you may ask? Not inches certainly, not dollars or even Polish zlotys; it just is 40 nothings, or somethings; it is just called 'band size'. Perhaps it is to make us air-headed girlies feel good, or bigger, or something.\n\nOne thing guys \u2013 the number is absolutely not the circumference round the biggest part of the breasts. Furthermore, band size cannot physically change; I mean the ribcage stays the same. If you ever read of a starlet having 'augmentation' surgery to go from a 34B to a 38D \u2013 they are lying to you. There is no way she has had her ribcage enlarged. Or rather, they are conning you. In actresses' or glamour models' 'resumes' you often see vital statistics quoted with a cup size added, so you get something like 38C-26-38. This probably overstates her band size by around two but pleases the punters: just guessing, but she probably wears a 36C bra \u2013 if she ever wears a bra. \n\nStep two is easy. Measure the bust over the biggest part \u2013 nipples guys! \u2013 keeping the measure parallel to the ground. Here lies another catch, because the tape is away from the chest from boob to boob. If your breasts are widely spaced apart, you are going to get the same bust circumference as a woman with slightly fuller, but more narrowly slung, lulus. Explain that in a story.\n\n\"Come on FW, that makes you 40 inches, not bad eh?\"\n\nIt said on the screen that you must deduct band size from bust measurement then look the result up in a table to get cup size. OK, that seems straightforward. We take 40 from, err, 40 and get, err, zero. Even AA goes up to half an inch! I can personally vouch for the fact that it has been quite a while now that FW hasn't been able to squeeze into teenage training bras.\n\n\"FW, don't quite know how to tell you this, but, officially, you are bra size 40AA and flat-chested. The bad news is Vicky's Secret doesn't sell anything in your size, but the good news is you don't need a bra.\"\n\nCupping her burgeoning peaches, if not melons, in her palms, FW gave me a quizzical look. The meaning was crystal clear. A 40-band bra would only have the remotest chance of stopping traveling south when it reached her hips; and then only if it hit at an angle. We knew there had to be something wrong, perhaps we had misunderstood the websites so, it was time to go shopping.\n\nIn the malls, the sales staff were insistent, sometimes downright aggressive; this was the way to assess bra size. Desperate pleadings to look at the evidence poking out in front of their eyes, that FW was not flat chested or 'big boned' \u2013 whatever that means \u2013 fell on stony ground. According to the most popular corsetieres my modestly endowed companion was officially a '38A' or a '40AA' but I defy any passing lit writer, male or female, to have guessed that from seeing her naked jugs.\n\nWe were told condescendingly that not all women comply with the norms, that perhaps she should try trial and error, and thereby implying that my friend was some kind of anatomical freak. I think the real reason is that a lot of sales assistants are not well trained and, in reality, correct bra size has very little to do with tape measures.\n\nBack at home, we made another run-through of the sites. Another way of measuring band size we found was to run the tape above the breasts and under the armpits.\n\nThis is not suggested by many of the online shops, but generally by the wonderful medical sites offering really detailed advice for women after lumpectomies or mastectomies. With FW, this approach at least gave a band 36, that is, 34 inches and add 2. Doing the standard cup size bit, she then came out as 36D borderline E \u2013 a bit over the top but a lot closer than 40AA. The medical/ women's health sites seem much more on the ball than the shops, anyway. Perhaps it is because they care more.\n\nHowever, to our utter amazement, the best measurement approximation to the bras she actually buys came from a site for transvestites and cross-dressers. Perhaps these guys have had to work harder to master the art. At least they have more options than we do to hone their body shape; unless you're into surgery, that is.\n\nThe advice they gave that seemed best overall was to measure above AND below the breasts. If the difference was less than two inches, take the ribcage measurement as band size. Otherwise, try the armpit measurement and add 2. This seemed ideal. We had now got two measurements for FW that gave a band size of 34 or 36 \u2013 just what she wears. \n\nThe other incredible revelation from this site was that cup size doesn't matter very much to breast circumference. Guys wrote that going up four cup sizes with inserts only increased the circumference measurement by about one to two inches. The advantage of being able to vary breast size at will probably helps, but the findings are pretty clear. The predominant determinant of numeric size is always going to be the skeletal, ribcage criterion and not the 'these breasts could cushion the fall of a dove's egg from 30,000 feet' mentality.\n\nPut in simple terms, there is very little difference, probably less than 2 inches, in breast circumference between a Dolly Parton look-alike and the emaciated, four cups smaller form of Orphan Annie \u2013 provided their ribcages are the same size. Furthermore, they will both have the same band size. Don't snort; this is as much a surprise to me. Guys, please understand that women's breasts vary far more in area and mass than they do in projection from the chest wall. Your 46DD only effectively describes the build and body shape of your heroine \u2013 it tells us nothing really useful about the look of her bazookas from outside her clothes!\n\nIn fact, without telling us the height of your protag we are like a blind person in a dark room in a fog. A five-foot tall girl with 34C bra size would appear a heck of a sight more 'voluptuous' looking than a six-foot tall girl with the same boobs. Trust me, I know! \n\nA plastic surgeon friend of mine told me that all he could ever really do for a girl who 'wanted to be bigger' was add volume. That's why they call it 'breast augmentation'. He said that, on a rough rule of thumb, an extra 150cc (about 5 fluid oz.) added a cup size but, it did not make the tits stick out much more! Sure they're firmer \u2013 something about quarts in pint pots if you stretch the skin \u2013 but it is mass, not projection. With a boob job, the tits spread out and fill the skin; they don't stick out much further. Certainly, sticking a saline bag or two between your pectoralis (chest wall) muscles will not change the ribcage size at all. \n\nThere are games you can play, though. When I want to flaunt a bit of cleavage, for a party or something more intimate, I drop a band size. This pushes my tits together and upwards, so voluptuous 32Ds, in their strapless casing tonight, will, like Cinderella, revert to a prosaic 34C tomorrow.\n\nThat is another thing. Shoulder straps are not really essential. They are just there to act as stabilizers for the cups. They should never be support for the breasts. The band is the main support and the rest of the bra cups the boobs to be supported by the band. The current fashion for spaghetti tops with bra straps showing has a lot to do with wearing underwear as outerwear \u2013 a bit like showing thong-T's above the back of low-rise jeans.\n\nBut, to come back to the SAT test at the beginning, I've already explained that the number has nothing at all to do with breast size. All I really understand about a 38D bra size is that the woman has a ribcage between 32 and 38 inches and nothing much about her boob size except she is probably full-breasted. You, on the other hand, may well be imagining that her bust measurement is 38 inches and teats stick out like Jane Fonda in Barbarella.\n\nSimilarly, cup size is as far from a science as most politicians are from reality. Just to completely confuse things, a C cup for a 30 band bra is almost certainly no bigger than a B cup for a 38 band bra. So guys, the petite 30C looks like what exactly? What you have in your head is probably totally different from what I see in my mind's eye. It goes further. Beyond size D, no-one can even agree on names. One company's DD is another's E \u2013 and not the same size, to boot. I have just read a story where the author said, \"I would have put her as a DD maybe even an E.\" Did he really mean, 'I would have put her as a Playtex, maybe even a Maidenform'?\n\nOh, I forgot another small point. Most women don't have the same sized breasts. Apparently, according to the AMA, 90 percent of American women have a right breast slightly smaller than their left. No idea why that is, but I haven't seen that feature in the anatomical details I've read, something like, \"her left love puppy was a 36C but the right was only a B.\" Perhaps we really do have Amazon genetic history! I always hoped so.\n\nYet another teeny complication; you are posting here to a global readership but do you know that there are dozens of different ways in the world to enumerate women's bosoms. Just a stray thought that struck me, didn't Abraham have a bosom? Was he a 30F or a 48A?\n\nAlso, most of the world is now metric. How is 48F supposed to mean anything to an Australian, even a Sheila? If some New Zealand writer talked about these drool-making 16D's would you have the slightest idea what he meant? A '36' US or UK measurement is going to be 95 in France, 80 in the rest of Europe, 3 in Italy and 14 in Australia. Also, even between the US and the UK, cup sizes usually vary by half an inch. A 36A in the US is likely to be a 36B in the UK. Help the world enjoy your story \u2013 abandon the measurements. ",
        "This begins to come back to my penance. If anyone quotes a breast size of 40AA I will immediately think of FW, which is probably not what you intend, and probably not what most other readers will imagine. Are the breasts round or pointy? Are they sticky-uppy or dangly-downy? Are the areolas puffy and the nipples large? That can make a good cup size of difference. And, I assure you, that matters to a female reader and is usually deep in the male fantasy, as far as my limited experience goes.\n\nSo, having explained why bra size is a pretty useless way of describing bosoms, what positive advice have I got to offer? How should you talk about tits?\n\nBreasts are rich and full, heaving, pendulous, wide, narrow and hung high or low on the chest, just the size to cup nicely in his palm, soft and springy like two stress balls \u2013 I could go on. I'll buy fruit comparisons; ripe plums, sweet apples, firm peaches, grapefruit \u2013 at a pinch, even melons (just spare us kumquat). Now you know they don't stick out much further than other girlies, start thinking about other ways how to make me jealous, excited. How about using descriptions like jutting, buxom, compressed or erupting cleavage, pert globes, porcelain half moons, spheres or orbs? Colors and textures are good; dusky pink, olive, coffee, nut brown. These are not necessarily favorites of mine but just examples I can remember reading. \n\nWhy can't we all use some of the descriptive talent that makes a good story: 'Her pinched, slender waist accentuated the voluptuous swell of her generous hips'? Bottoms can be bubbles, apple-shaped, heart-shaped or even split peach perfection. Why can't breasts get the same loving, descriptive treatment?\n\n\"As she lay back on the bed, the long, coral pink nipples and generous areolas stood proud of the expansive, firm flesh that cradled them. He had never found a woman with breasts so sensitive.\"\n\nWhatever the gender of the writer, I read your stories as a woman. I really go for the bits where he 'takes her soft mounds in his warm palms and slowly rolls the balls of his thumbs over her achingly hard nipples'. Just please, don't quantify them then put them on the shelf marked S, M or XXL to get treated like inventory. You don't understand, it puts off women readers and it's not erotic \u2013 even to a lot of men as I have been told.\n\nOne summer vacation during college, I worked on a major construction site as a 'girl Friday' \u2013 that means 'gofer' \u2013 and I thought I heard the whole thesaurus of words that could describe female mammaries. In the unbridled sexism and lust \u2013 that I quite liked \u2013 no-one ever quoted bra sizes. The one expression I will always remember is, 'get an eyeful of those great mazoomas'. What exactly are 'mazoomas'? Who cares? For the men who used the term it was a mix of lust, admiration and, in a strange way, a touch of respect. For me, in context, it was far more descriptive, visual and erotic than anything that has a number attached to it. \n\nWe all know there are quite a sizeable number of synonyms for both male and female genitalia. It is just that much of the vocabulary is along the Tab A/ Slot B lines, even if he sticks his 'love lollipop' into her 'steaming channel of desire'.\n\nYet, in researching this piece, we found upwards of three hundred general slang words for the female protuberances. My particular favorite was 'Cupid's kettledrums', but there is surely a place in the world for such gems as 'love-pillows', 'FiFi's Funballs', 'lung-nuts' and, even 'two raisins on a bread board'? But it goes further. Unlike any other body part, we are obsessed, both male and female, in giving bazoomikas new, and personal, names.\n\nRecently, Scarlett Johansson announced that she loved her breasts \u2013 'My Girls', as she called them. No, no, her girls, not my girls! Anyway, whilst her 'My Girls' would look drop-dead gorgeous in a Wicked Weasel bikini, my 'My Girls' would be more like two half-deflated, patchy-albino party balloons defying the laws of physics. That's why I call mine 'Laurel and Hardy': one's bigger than the other and, when out in public, they make people laugh. A girlfriend of mine talks about her 'Garfunkels' \u2013 because they are so high pitched.\n\nThat, really, is the nub of the matter. From quite different perspectives, both men and women are fixated by what jiggles up and down on female chests. The orbs are pretty damn redundant, most of the time just ornamental like baubles on a Christmas tree, and only being practically useful for a short while after you have babies, but they seem to define femininity, womanhood, for us all \u2013 male or female. Losing a limb or an eye is an awful, frightful prospect, but it pales in comparison beside the fear and trauma to women of losing a breast.\n\nSomehow, deep in our psyche, breasts define our gender \u2013 our belief in ourselves as women as we face the bathroom mirror. Perhaps that's why I get so riled when a lady's 'dessert trolley' gets summarily dismissed as a letter or clothes size.\n\nI was going to conclude by suggesting that you should always write about breasts \u2013 full, perky, firm, areolas the size of silver dollars, moving up and down on her chest as if inviting Stud to slide his cock between the pert hillocks \u2013 then FW brought me down to earth.\n\nShe said the word 'breasts' sometimes had a very negative ring for her; something a bit medical relating to lactation, mammograms and stuff. Breasts live a Jekyll and Hyde existence \u2013 sliced up on Thanksgiving with the gravy and potatoes; then morph to become the most secretly romantic thing \u2013 'he gasped as the moonlight played on her alabaster breasts, the full swells almost translucent as they rose and fell in the silvery glow'. On reflection, I think she's right. Those 'double whammies' are like the sea, ever changing, colors segueing from the crystal azure blue of sun drenched tropical bays to the wind-whipped, gray aquamarine savagery of the wildest oceans.\n\nWhen Ms Jackson's wardrobe malfunctioned, it was fascinating to study the vocabulary of the warring sides, split between the 'boob flashing' and 'exposing her breast' camps. I'll leave you to remember who was for and who against.\n\nYou start getting boobs \u2013 scary \u2013 at puberty. By college they have become fun and jolly and they help to get guys to check you out so, you decide to keep them until, forty years and umpteen kids later, you can tuck the deflated flesh sacs into the waistband of your jeans. Then you've really got breasts or, even worse, bosoms. Generally, boobs are a bit giggly girly. I've got tits when I feel a bit feisty, or when you get on them, and jugs and hooters make me want to holler and be a country girl. Didn't Daisy Duke have jugs?\n\nIn fact, watching the TV news, I've decided that Condi has certainly got breasts \u2013 my other half thinks she might even still have boobs \u2013 whilst Hillary has more likely got a chest and Barbara B has surely got a bosom. I can't explain exactly why I think it and there's certainly no similar distinction for a man's dangly bits as he gets older.\n\nSo, spare not the midnight oil you male authors. Armed with this information, let your creative juices ferment. Since the dawn of time, the bodacious tatas have been a primary erotic focus between the sexes. More than child bearing hips, big booties and the phallic imagery of trains going into tunnels or tall factory chimneys collapsing in a heap, a pair of ripe Winnebago's, nipply doo-dahs, chumbawumbas or shoulder boulders have been used by wicked women to lure poor, simple men to their doom since time immemorial.\n\nThere is so much expressive language out there to use for a nice cuddly pair of snuggle puppies; there is absolutely no excuse for resorting to the lazy shorthand of bra sizes that no-one fully understands. Anyway, it just makes me think you are quoting the size of the handles you can grab hold of when stoking the furnace.\n\nSo, in the words of the wise, the thong is over but the mammaries linger on. "
    ],
    "authorname": "elfin_odalisque",
    "tags": [
        "breasts",
        "bras",
        "describing",
        "measuring"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/understand-breasts-and-bra-sizes"
}