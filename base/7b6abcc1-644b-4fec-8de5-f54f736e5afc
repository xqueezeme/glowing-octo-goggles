{
    "title": "Sholan Alliance - AU Bk. 02 Ch. 04",
    "pages": [
        "Welcome to my next chapter in the Sholan Alliance. I do want to say that I am sorry for the slow posting of the Silver Moon and Ranicke series. I am working on them but at the moment I finally have some ideas for this and need to get them down. Even if it is just short notes at the moment and come back later but I have to get them down. I am working on the others and am hoping to have new chapters posted soon.\n\nI want to thank everyone who provided constructive criticism on this and my other stories. Any and all relations are 18+. \n\nChapter 4\n\nMoments after the tower had the top blown off by the Sholan fighter everything started to happen. The Swiss troops had taken up a defensive perimeter. On the top of nearby buildings they were setting up sniper nests, AA missiles, and various sensors. The Sholans had all been recalled to the ships they were assigned to. Warriors were taking up positions surrounding the two ships.\n\nThe ambassador had been recalled as well and Ikarius came with her as well as a shield of soldiers. He was doing everything he could to ensure that she made it back to the barque. Once they had arrived the soldiers turned the protection over to the Sholan Warriors but remained with to ensure ongoing communications. \"Ambassador I do not know what is happening right now but we are investigating. I request permission to remain with you to ensure that you will have the most current information.\"\n\nShe paused on the ramp and then nodded. \"I appreciate your offer and that is a very good idea. Come with me please.\" She hurried into the ship and Ikarius followed. She went straight to her office and settled down behind the desk and activated the computer. \"Please sit and relax.\" Teolura turned to her assistant. \"Drinks please and send a message to the commander that I need to speak to him as soon as he has a chance.\" \n\nIkarius was reviewing notes on his communicator and was not looking happy. For the moment all they knew was that a sniper appeared to have taken a shot and injured Billy and one of the Sholans. He set the communicator on the desk and activated the large screen and keyboard. Once they were displayed he started typing commands in. \"I am connected with the Colonel in charge and for the moment all we know is that someone took a shot. I will need the status of Billy so I can keep both the Swiss and my command informed of what is happening.\"\n\nTeolura nodded. \"Right now he is in medical being evaluated. As soon as the doctor has any information she will inform me.\" The door opened and some drinks were brought in. \"Thank you and just leave the tray and nibbles.\" There were some snacks on the tray as well. She poured two cups and slid one over to him.\n\n~~~\n\nIn medical as soon as Vangie carried Billy in Desjean started snapping orders. When Satasha was carried in she directed her assistant to check on her since there weren't any visible wounds. Billy went onto the trauma table and she started working. As she was working several IV's were being started and the scanner was working. It wasn't going to be perfect due to the movement but she would be able to see the damage.\n\nWhen the scanner finished Billy had been stripped and one of the IV's was pumping in an oxygenated fluid to replace the blood he had lost. They needed to get some actual blood of his type but for the short term this would take care of him. She had sprayed on a coagulant which had slowed the bleeding down some. It was only temporary but Desjean needed the time to review the scan results.\n\nWhat she found was not good. Whatever had hit him had shattered his shoulder blade, several ribs and damaged his shoulder. The rib fragments had penetrated the lung and he had several lacerations and the lung was collapsing. She didn't have what was needed to do more than a temporary dressing but chances were good he wouldn't make it to a hospital. On top of that Desjean had no idea what the medical level was. If he was taken to the mother ship at the very least they could fix his lung and ribs. Beyond that they might need to go to Shola for further repairs on him.\n\n\"What is the status of Lt. Verzilon?\" She called over her shoulder as she started doing some temporary patch work. Dr. Desjean knew that she was not going to be able to stabilize him enough to transport him. At the moment she was simply trying to keep him from coding on the table. If she could get even a few minutes to think she might be able to come up with something.\n\n\"Ma'am it looks like she is just in a telepathic coma. She has no physical injuries though she is showing signs of being injured in the same spot.\" As of now she had an IV and several meds on board to help with any pain as well as to keep her asleep. \"What do you want us to do?\"\n\nDesjean leaned back and frowned. \"Get the two cryo chambers ready and start the cryo meds on both Captain Madlax and Lt. Verzilon. We are going to need to tank them for the moment.\" She didn't like that idea since she honestly wasn't sure how Billy would handle it. There wasn't much of a choice though.\n\nShe should really contact his daughters for their input but there wasn't time. If they lost Billy they would lose Lt. Verzilon. Considering this was the first of a cross species leska link they needed to try their hardest to save them. It only took about ten minutes for the meds to start taking affect and to get the two of them in the chambers. The whole process would take a bit over a half hour but once they were in it was automated.\n\nOnce they were in the capsules she took a moment to take a breath. She had been very close to losing both of them and that would have really upset her. She liked both of them and they had shown a great deal of courage to take out the bonding contract. That and to show their bravery in the face of both their species by letting their love show.\n\n\"Doctor the Ambassador is waiting for your report.\" The attendant was in the process of cleaning up the blood and other fluids as he spoke. Several others were doing the same. \n\n\"It is going to have to wait for a bit. I am going to contact their family and let them know what is happening.\" She stripped off the gown and gloves as she was walking to her office and dumped them in the recycler. Before the call she was going to need a quick shower to rinse her fur off. \n\nDesjean stepped into the small shower that was in medical and took a quick shower. Once she was dry enough she pulled on a spare tabard and settled down at her desk. She placed the call and while waiting for it to pick up she fixed a cup of c'shar.\n\nWhen it was picked up she was facing his girls in front and the others gathered around. Most of them looked rather upset and pale not that she blamed them. \"Sally, Dani I have placed your father in cryo since I can't take care of him here. Satasha is in cryo as well since they can't survive apart. Vangie is getting fixed up right now. His wounds were relatively minor though he is going to be off duty for a week or longer. Do you have any questions?\"\n\nSally gulped and nodded. When she spoke her voice was hoarse and withdrawn. \"What is wrong with Daddy and when can I speak with Vangie?\" Dani murmured something in Sally's ear. \"Dani wants to know what you mean by you would have lost both of them?\"\n\nDesjean leaned back a bit. \"Your father was hit in the back. The weapon used shattered his shoulder blade, several ribs and ended up going through part of his shoulder. I wasn't able to stop the bleeding and though normally I would have asked felt the best way to save him was cryo. As far as losing both of them with the mental link they have they can't survive without the other.\" She took a sip of the drink before speaking again. \"Once Vangie is taken care of I will have him call you. I need to talk to the human doctor and the ambassador before I can really say much else.\"\n\n~~~\n\nThey talked for a bit longer before she hung up. Instead of comm'ing the Ambassador Desjean stood and walked over to her assistant. \"I need to speak with the Ambassador.\" She didn't know Ikarius was in the office as well. \n\nShe was shown in moments later and paused for a moment as she took in the human. Desjean turned to the Ambassador and nodded. \"I am here to update you on the status of Captain Madlax and Lt. Verzilon.\" She settled in a seat and sighed. \"As of right now they are both in cryo and...\" She went on to describe the extent of the injuries Billy and Vangie sustained.\n\nThe Ambassador rubbed an ear and sighed. \"Do you have any idea what happened or why Commodore?\" If there was a threat she wanted to know so they could setup the security they could.\n\nIkarius straightened up in the seat. \"Unfortunately at this moment Ambassador I do not have that information. As of yet nobody has come forward to claim responsibility. When the news does go out it is possible that the group responsible will put out something. On the flip side of the coin it is possible a number of groups may claim responsibility. It is going to take a bit of time to chase any and all leads down.\"\n\nHe sighed. \"We did not see this coming at all.\" Or not so soon since normally there was some chatter but for this they hadn't had any indicator it was going to happen. \"I have sent out requests for information as well as instructions on how they would like to proceed. We obviously need to increase the security around here and or possibly moving you to a more secure location.\"\n\nThe Ambassador didn't like that idea but they might have to. \"I am going to need to send some messages out requesting additional information. It is going to take some time to get a response. The doctor has already requested the human doctor to come and review her findings.\" She dismissed both of them but asked that Ikarius remain on board in case she had questions.\n\n~~~\n\nBy the end of the day a number of changes had been made to security. There were far more troops on duty and doing patrols. The Sholan fighter was remaining in the air for the time being to provide fire support. The human doctor confirmed Desjean's diagnosis. He also agreed that chances were slim if they tried taking him to a hospital. For the moment they shelved that issue but were going to revisit it in a day or two.\n\n~~~\n\nThat night Vangie was back aboard the Sandi and Sally was curled up next to him. She was being very careful not to press on his wounds and had helped him as much as possible. Now all she could do was cry on his shoulder. Both knew that he couldn't hold her but having him next to her really helped. Dani was with Jenna and Sandi being comforted. Kingie had his hands full with Crystal since she freaked out when Billy had been shot.\n\nAll in all her day had been shot to hell and the possibility of losing her father scared the daylights out of her. The idea of losing Satasha scared her as well since they had bonded as good friends. Vangie had shifted slightly and was holding one of her hands. \"Sleep Sally and I will be here for you.\" He stroked her hair for a few before he started snoring.\n\n~~~\n\nThe next two days were spent dealing with the implications of the attack. The tower had been carefully cleared and they found some remains of the body and weapon. Interpol as well as a number of other agencies were doing everything they could to identify the body. The remains of the weapon had gone to Scotland Yard for processing as well as the rest of the physical evidence. For the time being the Sholan's were remaining aboard their ships.\n\nOne thing the Sholan's had made clear was that they didn't hold any of the various governments responsible. There was even a televised broadcast by the Sholan's and the representatives stating this. They were there to stay and that was it. The only reason they would leave would be at the request of the various governments.\n\nBehind the scenes were negotiations on what to do with Billy and Satasha. By now they had accepted that Billy needed the Sholan's medical skills and technology to survive. For good measure he had been called back to active service and advanced to Captain due to seniority and that he ran his own ship. Satasha had been advanced as well though neither knew this.\n\nIt had also been decided that they would be sent to the mother ship for the initial treatment. They were going to be going on the Sandi and escorted by the fighter. The two had become central to a number of issues and their deaths would definitely cause problems. Both the Ambassador and Dr. Desjean insisted that Billy be taken to the mother ship. That was also demanded by his daughters as well.\n\nThe decision had been made and the girls, Jenna, Sandi, Vangie, Kingie, and Crystal would be going back. They hadn't mentioned it but the body of the fallen Warrior was going back as well. The flight was scheduled for the following Monday to give Vangie time to heal more. He was going to be the acting Captain for the flight to the ship. Depending on what happened he might be acting Captain for the flight to Shola.\n\n~~~\n\nThe leaders of the company were not pleased with the results. All of them had seen the news on the shooting including some raw footage a tourist had managed to capture of one of the Sholan ships taking out the top of the tower. They had known almost immediately that their operative hadn't survived the return fire.\n\nAll of them watched the news for the next few days and were rather upset with the Sholan's broadcast. That was most definitely not the results they wanted. Having them interfere with the plan even though they didn't realize it was frustrating. It had taken years to get most of the chips in place and this was threatening to completely derail what they were trying to accomplish. After the broadcast they called for a session of the senior members.\n\nThe meeting took place in the virtual world and all the connections had been routed through so many different nodes it wasn't funny. All were in shadows and their voices digitally changed. In theory the chat room was for one of the various spy games so the conversation should go un-noticed. To further hide their identities they were labeled by a number.\n\nFirst called the meeting to order. \"I am showing all seven members available. Verify connections and then we will start.\" He waited for several moments till all indicators were green. \"Very well and we are going to limit this to the intentions and results of the most recent operation. Number three explain who was tasked and what his abilities were.\"\n\nThird pretended to shuffle some cards before speaking. \"The operative was stationed in zone three and available. He was an obvious choice since he had the skills required and the target was in zone three as well. This removed any additional documentation needed and or any covert method of insertion or retrieval.\" Third looked at the cards again. \"The operative has been used a number of times and has never been caught and never been implicated. Due to this the operative was a prime choice for the mission.\"\n\nEveryone contemplated that. First spoke again. \"Fourth detail what happened and what we had been hoping for as a result.\" He had all the information and could have simply stated it but that would have caused problems. Each of the members had an area they were responsible for as well as operations. They ranged from bribes, assassinations, political adjustments, and far more. Their plans were very expansive and were aimed at the world and not just one section.\n\nFourth didn't bother with cards or anything like that. She felt that third was a bit to much of a showman. \"We are not completely sure how they located him. From the news feeds and direct feed from him he managed to shoot the tramp captain who found the aliens. There are indicators that he did hit one of the aliens and for some reason a second alien went down. Moments after that as we all know the alien ship fired at the tower and instantly killed our operative. In the process to the best of our ability to tell most of his equipment as well.\"\n\nShe paused and took a sip of something before continuing. \"What we had hoped was to scare the aliens away so they wouldn't interfere. If that didn't happen we were hoping that they would at least step back and limit the contact with the authorities. If they had done that we could have continued with our plans with minimal changes. Instead it seems to have made them move even closer to certain individuals. Since those individuals are fairly senior this is a cause for alarm. If they start providing access to even some of their technology it is going to cause major problems with the plan.\"\n\nFirst glanced around and received a nod of understanding from everyone. \"Sixth has the operative been retrieved from the aliens? If so what is being done and if not what are we going to do?\" The operative was a valuable asset but had enough information to impact on certain operations.\n\nSixth was still for a moment before speaking. \"The second operative was scheduled to be retrieved but with the results of the attempt it has been delayed. This has been marked down as 'security' concerns for the safety of all concerned. One of my assets is working to get her legally moved and returned to her 'family'. Will this work I am not sure and if not plans are being looked at on how best to remove her as a potential problem. I should be hearing something in the next few days.\"\n\nFirst nodded at him. \"Keep me updated on that and if needed we might need to take some drastic actions. I would prefer not to but better safe than sorry. If possible see if we might be able to get a message to her to lay low or else.\" He turned to another shadow. \"Seventh what sort of impact has the capture of the ship caused?\" Jack Sparrow was a pain in the ass and to be honest if he hadn't been so useful over the years would be dead. He was an egomaniac and believed nothing would ever touch him. The most concerning part was what sort of information had been captured from his ship.\n\nSeventh waggled her hand. \"That is a tough question to answer since we don't know what they might have captured aboard the ship. We also don't know what sort of information they might get out of what is left of the crew. I did try to see if we could get someone to them but security is so tight that a roach couldn't get through.\" Bit of an exaggeration but expected from her. \"From an operational aspect the loss of the ship isn't a huge deal since it is designed as a raider and not a major combatant. The loss of it can be made up in a few months with minimal issues.\"\n\n\"On the other hand there is a very real possibility that one or more of our bases have been compromised. I have set in motion a complete review of his last dozen visits and entry and exit scans. I am hoping to identify which bases are potentially compromised. Once that is done I will see about getting them relocated to alternate sites. If this happens it will set our plans back significantly.\" She returned the link to first.\n\nAll were taking a moment to review the notes they had made to see if there were any questions when one speaker requested to speak. Once he received it he looked around. \"Just a brief comment for everyone. Most of the various space going militaries have gone to a higher level of security. Having said that I haven't gotten any indication of expanded fleet training. That is especially true with the ship to ship and ship to ground assaults. There are indications they might be on the horizon but at the moment they are just trying to figure out what happened and why.\"\n\nFirst gave him a nod. \"Thank you second for that. Everyone keep your assets restrained but also try and gather as much information as possible. If possible try and get any information on the changes made to that damn ship that screwed this up. If we can get the drive mod's then it will give us a jump on the rest when we activate the Plan.\" He logged off and stretched.",
        "Once he ensured that any trace of the call was eliminated he stood and walked out to the living area. \"Hey love, sorry about that but it was an important meeting and I simply couldn't miss it. What's for dinner and where are the kids?\" State Undersecretary Nelson gave her a kiss before sitting down.\n\n~~~\n\nSince they had decided to send Billy and Satasha to the Mother Ship they had started preparing the ship to leave. Both cradles had been moved to the Sandi since they were independent units. They didn't have to be plugged in or connected to keep working. If something did happen to the ship they would survive in space for years.\n\nWhen the chambers were moved into the cargo area only Dani, Sally, and Vangie were there. Both girls had their hands on the cover to Billy's chamber. \"Daddy we will get you to the ship and medical. You had better be fine Daddy or I am going to scream at you.\" That was silly but Sally had to say something. For some reason it almost looked like he had a faint smile on his face.\n\nDani simply pressed her cheek against the cover and said a prayer for him. She had barely gotten out of the house and now this. Her mind was still trying to deal with their father being married and to an Alien as well. Right now her mind was a mess and she hadn't really had time to relax and settle down. She was going to have to call her boyfriend and let him know she was going to be gone for a while. It was something she had been intending to do but just hadn't been able to.\n\nOnce the chambers were lowered and secured Vangie took the girls forwards. It wasn't just to get them out of the storage and away from their father but so they could load the warrior in his cold chamber on. \"We are going to be leaving tomorrow and it will take just under two weeks to get to the Mother Ship. If you need to call anyone take care of it tonight. I have been assured that access would be guaranteed if at all possible.\"\n\nThey settled in the living area as he was speaking. Crystal leaned into Kingie and shuddered at that idea. Shortly after Billy had been shot notifications had gone out to all the families of the survivors. It had informed the family members that they had been rescued and were recovering. Her mother had pretty much written her off since she was now despoiled. She had known that was going to happen but it hurt badly. The doctor had to give her some meds to sleep and calm down.\n\nKingie had her tucked under one arm and tight against his side as Vangie was talking. Her blond hair stood out against his fur which sort of amused him. Everyone knew what had happened with her family and they were all doing their level best to comfort her. \"Relax Crystal and when we reach Shola you will meet my family. I know that you will be accepted with open arms. I was able to send a message home and all of them can't wait to meet my new little sister.\"\n\nShe pressed her face to his chest and sighed. Crystal really appreciated what he had done but she was still very scared by how people were going to react. The scent of him always helped to relax her and before long she had fallen asleep again. It was never a really good sleep but at least it allowed the time to pass.\n\nAs she drifted off Kingie couldn't help but wrap his arms a little tighter around her. The look he gave Vangie was very distressed. How a family could just dispose of a child like hers had was beyond him. On top of that what had happened to her was incomprehensible. Yes he was a warrior but he was still in that young and idealistic stage and all this was a major blow.\n\nVangie stood and as he walked to the kitchen area to get something to drink he placed his hand on Kingie's shoulder. He gave it an understanding squeeze before he continued on. It had been hard on all of them but especially for Billy's family. Tonight he was going to see if he could talk Sally into something more than cuddling. He was going to need to be careful but damn it he needed to feel alive and that would help.\n\n~~~\n\nDani wasn't very happy the next morning. She had called her boyfriend and it hadn't been a happy call. He knew that her father had been critically injured but he simply didn't understand her leaving. He was going to live or die as the fates dictated and to him the best thing she could do was carry on. That meant staying at the college and continuing her studies. That had ended up in a fight and her hanging up on him. Frankly at the moment she was done with him if he was going to be that insensitive.\n\nSally simply gave her a good hug when they settled down to eat. She had never liked the guy what so ever and had a feeling that they had a breakup but didn't ask. Breakfast was a quiet affair since everyone was dealing with a variety of emotions. It wasn't much later when three additional warriors came aboard since they would be helping with the flight. She had talked to Vangie and the cabin Billy and Satasha used was left empty.\n\n\"Well it is time for us to start getting the flight check done and leave. Sally I would like you on Navigation and Kingie on Engineering.\" The three of them headed towards the front and settled down in the chairs at the consoles. Vangie didn't like sitting here with Billy not on board but it was his job as his second to run the ship if he wasn't available. Once they were all seated he started calling commands. \n\nKingie opened communications with the fighter since it was going to be escorting them. That had required the Ambassador giving an order that didn't please either commander. \"Fighter we are getting ready to take off. We will rendezvous at the following location...\" He verified they had them and then passed it over to Vangie.\n\nHe slowly lifted off and aimed the ship at the sky. As Billy had several months ago he was taking it easy getting to space and headed towards the edge of the solar system. Microjumps were one thing but to do a major jump from inside the solar system was extremely dangerous. There were all sorts of things that might be partially or fully in hyper that you could run into. You also had to program the flight path to avoid obstacles such as planets and meteor belts. All in all it was far simpler to go to the edge and jump.\n\nThat took about a day and a half to reach the jump coordinates where they paused. After verifying the course with the fighter ship both jumped into hyper and verified communications. Once that was done Vangie was replaced by Kingie at the helm and a rotation had been set up. Vangie settled down in the living area and reclined on one of the couches and sighed. The wound across his chest was aching and he needed to relax for a while.\n\nFor the next week they made good progress even though they weren't really pushing the engines. It still amused Vangie that the ship was only running on 50% power and was still doing almost as well as any of the other Terran ships. To be honest Vangie wanted to go full throttle and see just how fast it would go but not till Billy was awake and healed enough.\n\n~~~\n\nThe scanner tech was scanning for any sort of hyper signatures when he started getting a return. He verified it and gave it a couple of minutes to firm up which it did. That indicated they were heading roughly in the direction of the returns since they were getting stronger and not fading away. It also indicated the returns weren't sensor ghosts as well. After several more minutes of verifying the readings he turned to the officer in charge of the bridge. \"Ssir I have picked up and verified two sensor returns. They appear to be hyper capable ships of a small size. Each is giving off a signature that is very different than the other.\"\n\nThe officer looked down at the tech and narrowed his eyes. His first thought was to see if the tech had taken longer than needed to identify the ships. If that was the case he could cheerfully tear into him. It would teach him to make reports in a timely manner and also show who was in charge. On the flip side of the coin it could also be detrimental to the moral if he did that and the tech had done his job correctly. \"Ssend the feed to my console.\"\n\nOnce it was there he reviewed the data and frowned. With a displeased hiss he snarled at the tech. \"You said two small ships. The energy signature of one is to powerful for a small ship. Explain this.\" If it wasn't a good explanation he was going to deal with him.\n\nThe tech managed not to swallow but as hard as he tried to control it faint traces of the fear scent emanated from him. \"Ssir I thought so at first for the same reason but the sensor return was not matching up. I did take an extra bit of time to verify the readings. The first ship has a smaller engine but is fairly powerful. The second ship is larger but not drastically and does have the stronger engine reading.\" He did swallow before continuing. \"If you check the addendum you will see that the smaller of the two ships have hyper readings that are very close to the Enemy's.\"\n\nThe officer checked and wanted to slash at the male but didn't since he had set an alert for that specific item. \"Keep scanning and updating our logs.\" He looked at a different male. \"Send a message to the other ships with this information. Do that after contacting the captain and informing him of what we have found.\"\n\nEveryone turned and started getting to work. Even if the officer hadn't spoken directly to them they wanted to ensure they looked like they were busy. If something happened and they weren't seen as having been doing something, anything, they would probably be turned over to the priests for interrogation.\n\nShortly the captain came to the bridge and the office stood and turned the chair over to him. \"Sso what is going on? What is this about finding a ship of the enemy?\" He was calling up the report as he was talking. \n\n\"Ssir the scanner tech picked up returns at the edge of our sensors. He refined the data and sent it to me. There appear to be two ships in hyper with different signatures. One signature we are not familiar with but the other is within five percent of the ship of the Enemy that we destroyed.\" He made sure to add slight emphasis when he mentioned the scanner tech. If anything was off he could pass the blame off to him for screwing up.\n\nThe captain looked at him and it was obvious he knew what the officer was doing and rather expected it. Rising in the ranks could be perilous at times and the higher you got the more perilious. \"Send a message to the other ships to go to battle stations. Once that is done go to silent running and work on an intercept course.\"\n\n~~~\n\nThey had about four days to the Mother Ship when the alarms went off again. \"Oh hell, not another pirate ship.\" Vangie swore as he slid into the captain's chair. Kingie, Sally, and Dani slid into the other chairs and started firing the systems up. \n\n\"Captain we are being pinged by sensors that are neither Terran nor Sholan.\" Kingie reported from the weapons station. \"Several of the sensor emissions appear to be some sort of targeting systems.\" The data was still firming up as they were activating all the systems. The fighter contacted them as well.\n\n\"This is commander J'kefa. I have picked up four enemy combatants. I am ordering you to go to full power and head towards the mother ship. I have already sent an emergency signal to them. These appear to be the Others that attacked our battleship. I am going to get as much detail on them as possible as well as slowing them down. I will rendezvous with you at the Mother Ship.\" He gave Vangie a hard look. \"Kick that ship and make her scream. God speed warrior.\"\n\nVangie started cursing before opening the intercom channel. \"Attention all passengers strap in for possible combat. Alien combatants identified and scanning us for a firing solution. I have been ordered to make all speed to the Mother Ship by the Commander of the Fighter.\" As soon as that was broadcast he slowly inched the throttle forward till all he had were the Sholan sensors available.\n\n\"Engineer status check on shields and engines.\" Vangie was checking his console and Dani was making sure the path to the Mother Ship was being updated as they moved. That was showing on his console as well. The weapons had been charged and the shields fully powered up as well. He pushed the throttle full forward and the ship leaped ahead at one hell of a speed.\n\nVangie was tuned into the channel the fighter ship was broadcasting on and it wasn't going well for them. Yes they were doing a fair amount of damage but so were the Others. He didn't tell the others but he knew that the fighter and her crew were going to be lost. Yes they were more powerful than the Others ship but the Others had numbers on their side. It didn't really take that long for any traces of the ships to drop off the sensors. The communication was still good and they were definitely taking heavy damage.\n\nIt wasn't much later they heard the destruction of the fighter over the comms and silence ruled the ship. \"Keep a close look towards our aft to see if any of the Others vessels might be following.\" He passed that order to everyone on the bridge. \"Sandi can you and Jenna cook some food and drinks and bring them up here?\" They were going to be on the bridge for a while longer and as long as they remained vigilant getting food and drinks were acceptable.\n\n~~~\n\nVangie had called for a crew rotation several hours later and everyone was silent again. Everyone knew that the fighter escort had been destroyed. It had sounded like they had critically damaged the Others ships. Vangie had checked the sensor readings and had to agree that they weren't human vessels. The engine signatures were very similar to the ones they had detected. For the rest of the flight they were going to keep a ongoing watch on the bridge.\n\n~~~\n\nThey had been running as fast as possible for close to a day when they were hailed. \"SS Sandi this is Fighter 1052 and a squadron of escort fighters. Two are going to be tasked with escorting you to the Mother Ship. The rest of the squadron is going to follow your hyper signature back to where you encountered the others.\"\n\nKingie was on watch and answered. \"Fighter 1052 this is the SS Sandi and we copy and confirm the orders. Do you have any additional orders?\" As he was talking he sent an alert to Vangie requesting him on the bridge. Several minutes later Vangie was there and took over.\n\n\"This is Acting Captain Vangie and have been updated on the change in orders. We are complying and it appears that we haven't been followed to the best of my knowledge. Right now our engines are running at about 90%. I had to slow down due to some instability at top speed.\" As he was talking the two fighters had separated from the squadron and formed up alongside the Sandi.\n\nVangie had been informed that the Mother Ship had diverted course to meet them. They would be in range in the middle of the next day. The trip had been shortened by several days due to the increased speed and the Mother Ship turning towards them. Everyone was being quiet and any talking was on the desultory side.\n\nThe rest of the flight was relatively boring and uneventful. When they reached the Mother Ship it was uneventful as well. They were tractored into one of the hanger bays and almost immediately the Commander as well as a doctor and an escort moved forward.\n\nAs they were approaching the ship Vangie opened both the cargo section and the central lock. He had his arm around Sally and Sandi and Jenna had their arms around Dani. As usual Kingie had his arms around Crystal and the rest of the warriors followed them off. Vangie saluted the Commander. \"Sir the cargo hatch is open. Please show us to our rooms so we can get clean and try and get some sleep. Losing the fighter ship as well as the injury to Captain Madlax has taken their toll. I will be ready for a debriefing once I get something to eat and a shower.\"\n\nThe Commander returned the salute and shook his head. \"Go rest Warrior and we will see you in the morning. The lead Surgeon is going to examine the records and do another scan of Captain Madlax. He will contact you before he does anything.\" He looked over the others and nodded. \"Go and relax and get some sleep. I will have food brought up. Vangie and Sally you are going to have the same cabin you used before and Sandi and Jenna can use the other room. Warrior Kingie you, Crystal, and Z'Marl will have the rooms across the hall.\" He looked at Z'Marl. \"That is unless you wish to stay in your assigned quarters.\"\n\nZ'Marl shook her head at that idea. \"I would prefer to stay with the others sir.\" She looked away from him. \"I don't think I can be by myself right now.\" She had gone from a comfortable easy life to loving an alien. Her life was totally different now and frankly she needed Billy and Satasha. Since they weren't around she was going to stay with his girls and what was becoming her family.\n\nThe Commander nodded to her and lightly brushed her cheek. \"I understand Z'Marl and have had a few of your things taken to the quarters. All of the rooms have been keyed to each of your palm prints. Tomorrow contact me and once you have breakfast I will come down and talk to you.\" He nodded at them and moved to the side. \n\nTwo warriors moved forward and saluted them. \"Please follow us and we will show you to your rooms. Your bags will be brought up shortly. There are some documents on your terminals to review tomorrow as well.\" They turned and walked away. The others followed them slowly and as they passed the various staff they were saluted.\n\nEventually they made it to the rooms and separated for a few. Crystal looked into the room and sort of smiled. \"I do feel a shower coming on. Do you want to join us Z'Marl? I am sure you would like a real Sholan shower.\" It was only a bit of humor but she was teasing her and that was a step forward.\n\nZ'Marl wrapped her arms around her body and had a happy look on her face. \"Oh my yes for the hot air jets alone.\" Dani snickered at her and Z'Marl grinned. \"Do you want to join us? About four per shower area is the max.\"\n\nDani sort of blinked and had to think about it. \"Um, Kingie is a male right? I think I can wait.\" When everyone started snickering she gave them an odd look. \"Why are you laughing at me?\"\n\nSally laughed even more. \"Because Sholan's tend to shower communally. Since they are furred and don't show external organs like we do they don't have any nudity taboo. Go and get clean and enjoy the attention.\" She nudged her sister towards the other rooms and then turned towards the room she and Vangie used.\n\nZ'Marl wrapped an arm around Dani. \"She is being serious and if it helps Kingie has helped most of the rescued women get clean. Crystal was the first but most of them decided to adopt him as their personal grooming kitty.\" She wrinkled her nose at Kingie and snickered. \"So far we haven't had any complaints with the bathing.\"\n\nKingie stuck his tongue at her and hissed for good measure. \"I am not a kitty. I am an adult male so there. Kitty's are little and cute. I am big and grumpy.\" He ignored Crystal as she snickered at him. \"If you tease me to much I might just brush your fur backwards or something. Better yet I will find a bell and attach it to your tail while you are asleep.\" He had seen a few cartoons on the ship and for some reason in some that was like the thing.\n\nZ'Marl laughed at him as she gently tugged Dani towards the room they would be using. \"Let's see what they brought from my room and I might have something you can wear after the shower.\" The two of them had started bonding since they were so close in age. It was nice that Dani was really smart as well and understood where Z'Marl was coming from.\n\nDani let Z'Marl draw her to the other room and she blushed when Z'Marl casually stripped the tabard off. She hadn't seen any of the Sholan's nude as of yet and was a bit curious. \"You do have a lovely color of fur.\" She smiled shyly as she was taking the braid out of her honey blond hair. The two colors were very close.",
        "Z'Marl laughed at her as she opened the door to the showers. \"Come on silly and get undressed. The showers are really nice.\" She swished her way into the bathing area and water could already be heard. \"Hey Crystal Dani should be in momentarily.\" \n\nWhen Dani walked in Kingie was working on Crystal's hair and she had her eyes closed and an expression of contentment. \"I feel really odd doing this since there is a boy in here. At school the showers were only for either the males or females.\"\n\nCrystal actually snickered a bit before stepping out and walking out of the shower. She looked at Dani who was just outside the shower door. \"If I don't mind Kingie being in here you don't have anything to worry about. He is a really good person.\" She looked down for a moment. \"He has adopted me as one of his little sisters. That was about the only thing that kept me from losing it.\"\n\nShe turned and walked back in and Dani barely managed not to gasp when she saw Chrystal's back. There were trace marks of whips, burns, gashes, and other marks she couldn't identify. If Crystal could do it then Dani could as well. She slowly walked in and turned away from Kingie before stripping and stepping into the shower. She was on the other side of Z'Marl so she had a bit of privacy.\n\nZ'Marl turned so she was facing her and smiled. \"Turn and let me get your hair Dani.\" She started working on Dani's hair and was taking her time. \"I can feel your tension. I know much of it is related to your father. I am sure he is going to be okay and later I can give you a good massage to help you relax.\"\n\nDani slowly relaxed as Z'Marl worked on her hair and it was obvious she had a good idea of what she was doing. When she mentioned her father she tensed some but managed to keep the tears from flowing. \"If you wouldn't mind I would really appreciate it. I am sure you are probably tense as well and maybe I can return the favor.\" As Z'Marl started working down her back Dani leaned against the wall and groaned slightly. \"That does feel good.\"\n\nEventually they were done showering and found some tabards for them. For the humans they had covered sides so nothing showed. Dani pulled one on and had to be shown how to seal it. She had to go and look in the mirror and couldn't help but smile. \"Well I have to admit it doesn't look to bad on me.\"\n\nZ'Marl snorted. \"Good hell, we might need a few warriors to keep the admirers away.\" She curled an arm through one of Dani's and they headed across the hall for dinner. When they walked in Z'Marl inhaled but didn't say anything. She simply drew Dani to the table and settled down next to her. \"Oh my the Commander isn't holding back.\"\n\nAll of them sat around and ate the food till they were stuffed. Sally was leaned back against Vangie and groaned. \"I think I ate too much but goodness that was good.\" She burped a bit and took another sip of wine. \"I have a feeling I am going to sleep like a log tonight.\" Sally yawned much to everyone's amusement.\n\nVangie leaned over and mock whispered in her ear. \"Not before I am done with you. I am going to carry you in to our room and ravish you and then you can sleep.\" Just for good measure he purred in her ear before speaking again. \"I really prefer my partners to be awake when I ravish them you know.\" When she turned really pink he simply gave her a low laugh and licked the ear.\n\nThey talked for a while longer and there was a definite sense of relief for being here. All of them felt that now that they were aboard the Mother Ship Billy would be fine even if it took some time. There was some sadness for the warriors who had been lost protecting them. Everyone had decided to write some sort of note to the families though they would probably end up being sent to Shola on the Sandi. Eventually they all split up and went to the various rooms assigned.\n\n~~~\n\nThe four of them went to the other suite and all had to stop and inhale. Z'Marl shook her head. \"The Commander is definitely taking good care of us. This is from the senior officers mess and some of the best food on the ship.\" \n\nSally had to smile at Z'Marl's comment since it was a darn good breakfast and she was enjoying it a great deal. \"Morning Dani and the surgeon decided to come down and talk to us.\" She did smile but it was strained since dealing with doctors like this was hard. \"He wants to discuss some options on how to treat Pappa. He seems to think there are some viable options for getting the worst damage repaired.\"\n\nThe male gave both an affirmative nod. \"I do. It took some time to get the scans I needed due to the cryo chamber but I do have a few options.\" He refilled his cup before speaking again. \"One option would be to simply leave them in cryo and forward them to Shola. The next option is to do the critical repairs here and the sending him back to Shola for the final repairs. That would require the use of the cryo chambers again since healing would continue if he was awake. The last option would be to do all of the repairs here and send him back to Shola for rehabilitation.\"\n\nHe took a sip of his drink and shrugged slightly. \"None of the options are better or worse than the others. It is simply a case of what you wish to do. I would have to say the last option would be the last I would recommend. I feel that it would be better for him to do most of his reconstruction and rehabilitation planet side. It usually is considered more therapeutic to be planet side. It gives them the sun and green plants and other things to do.\" He finished talking and waited for questions.\n\nThe two girls looked at each other and Sally leaned into Vangie and Z'Marl curled an arm around Dani. Both were looking at each other and there was a blend of hope and fear in their eyes and expressions. Sally finally spoke. \"I think pappa would prefer to do the initial treatment here and then get sent to Shola for anything else.\" \n\nShe closed her eyes and struggled to keep her fears in control. \"I think he would like to get as much done of the important work done. The work needed to keep him alive that is. I know he is in cryo but I know that as deep down as he is he is also missing and longing for Tasha. I know that doesn't make sense but I can feel it.\" She looked at Dani and got a slight nod. \"Wake both of them and do what you need to.\"\n\nDani nodded as well though she didn't say anything and leaned into Z'Marl's hug. She closed her eyes and leaned into her shoulder and as hard as she tried not to the tears started flowing. Yes she might act mature but she was still barely out of the house and the idea of losing her father scared the daylights out of her.\n\nThe surgeon stood up and nodded before leaving the room. He had work to do and bothering to deal with all the emotions could wait. He headed straight for medical and assembled his team. \"Ladies and gentleman this is going to be complex and difficult. What we are going to do is...\" He started explaining the procedure he was planning. It took some time and his staff tossed possibilities around before he finalized what they were going to do.\n\n\"Okay get the cryo chambers ready to be opened. Before they are opened I want premedication applied.\" He started calling out orders as the chambers were brought into the room. He knew that they were leska's and it was definitely not a good idea to have one awake while the other was in cryo. Satasha would have to remain in the same room as Captain Madlax while he was revived and operated on.\n\nThe operating room was a hive of activity as the chambers were brought in and the meds were started. As soon as both were at the end of the resus cycle the teams really started moving. Satasha had been moved to a floater off to one side of the room while Billy was moved to the actual surgical table.\n\nAll the others were gathered in the suite that Billy and Tasha had been assigned and were being very quiet. Time seemed to drag and all they could do was wait. Both Sally and Dani were virtually silent during the wait. Sally simply curled up in Vangies lap and Sandi and Jenna had Dani between them and was giving her all the comfort they could.\n\nEventually there was an alert from the door and everyone started since it was way too early for the surgeon to have finished. That was unless there was bad news. Both girls clutched at the ones holding them while Kingie went to the door. His body posture showed startlement. \"Good morning Father. Please come in.\"\n\nHe moved back and Sally was slightly startled as well since it was the priest of Vartra who had married her father and Satasha. She stood up and moved over and gently grasped his arms and leaned forward and rubbed her cheek against his. \"Please Father come in. Have a seat and would you like something to drink?\"\n\nNordan returned the nuzzle before he let her lead him over to the table. \"A c'shar would be greatly appreciated and thank you.\" He had a gentle smile on his face. \"I came when I heard what had happened to your father. I have sent a prayer to Vartra for his recovery and speedy healing.\" He took the cup of c'shar handed him and took a sip.\n\n\"I was really hoping to see them again but not this way. I understand they are now Leska's? They are blessed by Vartra. To have two different species be so compatible is truly astounding.\" One or two of the lay brothers had been blessed with God Dreams but they were vague. With many they were hard to understand except when you looked back. Then what they meant seemed to jump out at you.\n\nSally settled into Vangie's arms again and relaxed with her head tucked into his neck. \"They were getting along very well till all this crap happened. The two of them were greatly enjoying the company of each other.\" She made a face. \"Almost reminded me of high school and all the cuddling and stuff. I felt like I was the only adult there.\" When Vangie gave his slow laugh she smiled a bit and leaned a bit more into him.\n\nDani sighed. \"At least you knew what was going on. I was greeted with a hug and a 'love you Dani' mixed in with 'oh, this is Tasha my mate'.\" Sandi grinned at her and gave her a good squeeze. Dani shook her head. \"I barely know Satasha and am just learning to know Vangie and Kingie. I got dropped in the deep end and then Daddy got shot.\" She closed her eyes and shuddered at that.\n\nNordan reached over and lightly stroked her cheek. \"What little I felt of your father is he is a fighter. He didn't try and hide his relationship with Lt. Verzilon and stood up for both her and what was developing between them. You have a very strong father and I am sure Vartra will help them.\"\n\nThey talked a while longer before the priest left the suite and they were finally comm'd about what was happening. It was one of the assistants that called. \"Good afternoon and I just wanted to update you. Captain Madlax appears to be handling the procedure well. We have his lung repaired, we had to do a venous graft on his sub-clavian artery and repair or remove pieces of his ribs. We are almost done but it is going to be two to three more hours before you can see him.\"\n\nVangie took the message and nodded. \"We understand but as soon as it gets even close to their seeing Yilly and Satasha please contact us. We will come up and sit in the waiting room so we are there when they come out of the meds.\" He knew that Satasha was going to be sedated as well since the last thing they needed was her reacting to Billy's pain. Once he had gotten a confirmation he hung up and settled back where he had been. Sally had finally fallen asleep and he wasn't going to wake her for the moment.\n\n~~~\n\nThe last thing he remembered was the pain and agony of being shot. He knew that he had managed to get Vangie and Sally out of the way but why was he still here? Billy knew that even if they had a mobile crash unit on hand the chances of saving him was close to zero. As he slowly rose to some sort of consciousness he could feel the pain. It was being kept away by the fog of the meds but it was there just waiting.\n\nWhen he did finally fully wake he groggily looked around and found that they were back in the isolation room. Next to him was warmth and silky fur and he kind of smiled. He could feel her in his mind though it was mostly a fuzzy sensation. She was curled up on his left side and had one arm across his waist. Tasha's tail was curled around one leg. In the background he could hear beeping and knew he had at least three tubes in him if not more.\n\nWhen he tried to move he simply couldn't. Something seemed to be tying him down to the bed but he just couldn't gather enough energy to care at the moment. He was just floating in a sea of lassitude. Having Satasha touching him did seem to calm him and sooth some of the pain he was feeling. As he was lying there he heard the door open and slowly opened his eyes. Sally and Dani slowly walked in and he tried to smile. \"Hysh girls. Shooting gets stchucks.\"\n\nFor some reason that made him almost want to giggle. \"Darsh it, can't talk.\" He licked his lips for a moment. \"Love you.\" He could feel Satasha starting to move and he smiled and yawned. \"Talsh later.\" He slowly fell back into the welcome pit of darkness where he didn't feel the pain but only the warm fuzzy of Satasha in his mind.\n\nBoth girls couldn't help but smile somewhat. \"Oh man I wish I could have recorded that. I would have played it for Daddy later.\" Dani had to shake her head when she said that. \"I would ask what good drugs he is on but that wouldn't mean much to me.\" She didn't want to chance hurting her father so she settled down next to Satasha.\n\nShe really didn't know what to say to her at the moment and settled for simply holding Satasha's hand. Satasha seemed to be rather out of it as well since she also yawned and gave her a sleepy smile.\n\nSally had to smile as well and settled in a chair and stroked Satasha's ears. \"Take good care of him and try to keep him from fretting. He really doesn't like hospitals or being tied down in one.\" Hell he hated anything that would keep him from doing what he felt was his job.\n\nSatasha gave Dani's hand a light squeeze and leaned into Sally's stroking. \"I will even if I have to sit on him.\" Since she was holding Dani's hand she could tell how tired and stressed she was. The bed was more than large enough so she gently tugged Dani's hand till she moved onto the bed and laid down. \"Relax Dani and you can wait here for your father to wake again.\" She pulled Dani's arm around her and was quickly asleep.\n\nDani slowly settled on the bed and curled against Satasha. Vangie pulled a light cover up to ensure they didn't get cold. The rooms were kept cooler to help reduce the spread of infection though the beds were warmed. \"We will check on you later Dani and if you need anything call or have someone call.\"\n\nSally leaned over and gave Dani a peck on her head. \"We will come and get you before bedtime.\" They had already eaten though it had been more picking at the food than anything else. All of them needed to start eating better and she knew it but with all the stress it had been so hard.\n\n~~~\n\nAll of them had been rotating through the room they were in simply to keep busy. Billy definitely wasn't there when he did wake since he tended to mumble. He was also not tracking very well and needed to be told where he was several times. Eventually though later the next day he did wake up and was a bit more clear headed.\n\nBilly yawned and looked around the room and sighed. It wasn't all a bad dream or nightmare. He was in medical and his right shoulder and side was aching. He was obviously on some meds and they were heavy meds but on a dosage that allowed him to wake and somewhat be there. Billy didn't even try to move other than to find the control for the bed and lift the head some. \n\nWhen he did Jenna sat up and smiled. \"Hey Billy how are you feeling? Before I bother saying much I figure I might as well see if you are even somewhat coherent.\" She stood and walked over and settled down on a stool next to the bed on Billy's side. \"Satasha is in the shower right now but should be out shortly. Z'Marl is helping her since apparently Cryo didn't agree with her and she is shedding big time.\"\n\nBilly stared at her and frowned as he processed what she was saying and it didn't make sense. \"Cryo? When was I in cryo and how did I get here.\" Obviously it was while he was in cryo but his mind was having problems since human's had given up on the deep sleep once hyper had been discovered. \"Oh, good, clean is good and I could use a bath.\" He was feeling itchy and dirty.\n\nJenna listened and he did sound more there. \"Yes cryo and you won't remember since you were tanked shortly after you were shot. Doctor Desjean consulted with one of our doctors and they both agreed that you needed better medical than earth has. They felt that if they pulled you out of cryo on earth even in a trauma center your chances were slim. She tanked you and then talked to your girls.\"\n\nJenna had to stop for a moment and leaned over and gave him a light kiss. \"Don't you ever do something this stupid again. Let someone else get shot damn it.\" Her eyes were moist but she didn't cry. \"Vangie captained the ship back to the mother ship and they operated on you yesterday. It was only to repair the critical aspect and the doctor will be in shortly.\" She looked up as the others came out of the shower.\n\nTasha smiled at Jenna and then Billy. \"I feel better now after the shower. I would ask you to brush me Yilly but that might be a bit hard right now.\" She settled on her side of the bed and leaned over and kissed him. Just because she nipped the end of his nose after giving it a lick.\n\nBilly snorted at her. \"Girl you are going to get it when I get out of this bed.\" He returned the kiss and smiled when she nipped his nose. \"Silly cat my nose is not for nipping. I might have to see if you like cat nip tea.\" He gave her a tired smile before yawning.\n\nZ'Marl leaned over and gave him a good kiss as well. \"Missed you Yilly and it is so good to talk to you and know that you are doing reasonably well.\" For a brief moment she tucked her nose in his neck and inhaled before moving back. \"Jenna and I are going to leave since I can feel the SBA glowering at us. We are under strict orders not to tire you out.\" Her fingers lightly caressed his face. \"Later Yilly and I will let the girls know that you seem to be doing better.\"\n\nHe yawned again and gave them a smile as one of the machines gave him the next dose and he drifted off. Billy was awake long enough to feel Satasha lay down next to him and curl up. He really wanted to tell her how much he loved her but he was gone before he had a chance.\n\n~~~\n\nThe next two days were much the same for Billy. He would wake up, talk to whoever was in the room and then fall asleep for a while. On the fourth day after he had been operated on he was mostly awake. The doctor came in and smiled at him. \"Good morning Commander how are you feeling?\"\n\nBilly frowned slightly. \"I am not a commander but if you need a rank I am the captain of the SS Sandi. I am feeling okay for the most part. Obviously my shoulder and chest still hurts but the meds help with that. I really don't like being plugged into all the various tubes but again there isn't much help for that. So tell me what has been done to me? What is going to happen as well?\"\n\nThe doctor couldn't help but smile slightly when Billy told him to call him captain. \"It has been explained to you that your human military recalled you to active service and advanced you. I know you don't remember this but you now have the rank of captain in your military. Since you were given that rank it was decided by our military that you would be given the rank of Commander. That is pretty much the same rank as a Captain in your military. Lt. Verzilon is no longer a lieutenant and is now a Lt. Commander.\"\n\nBilly had to stare at him when he told him that. He really didn't remember being told that what so ever and was both shocked, appalled, and rather pissed off. The Sholan thing he didn't really care about but they had no right to recall him to active service. His face was furious when the doctor told him that. \"I will deal with that later. They had no right. Now tell me what is going on with me medically.\" His voice was cold and hard. It wasn't the doctors fault but Billy's control of his emotions was rather off.",
        "Satasha was sitting up next to him and she grasped his hand and stroked his hair. \"Calmly Yilly and we will straighten this out. He is simply telling you what is going on and using the appropriate rank as of now.\" She had been more than shocked when she had been informed as well. Right now she could tell that his emotions were a mess.\n\nBilly twitched away from her hand. \"Satasha don't please. Don't try and calm me. They had no right and that is all there is to it.\" He felt a bit bad for speaking so coldly but he was going to need to deal with his anger. Trying to keep it from showing wasn't going to work. \"Now tell me what is happening please.\"\n\nThe physician straightened slightly at the command in Billy's voice. Here was an officer speaking and giving an order. He responded to the tone as much as anything. \"Commander when we resuscitated you and your Leska we immediately started operating on you. We had to remove several pieces of ribs which had lacerated your right lung. The artery leading to your arm was damaged and had to be repaired. Some reconstructive surgery was done as needed for the repairs. You have three chest tubes in your right side. What I would like to do is to give you another three or four days for the lung to finish healing. Once that is done I will have two of the chest tubes removed and then put you back into cryo. At that point we will continue your journey to Shola for continuing treatment and rehab.\"\n\nHe took a breath before continuing. \"The recovery and rehab will take several months due to the damage to nerves, bones, shoulder girdle, and any other damage. I have been in contact with a number of the doctors at the Telepath's guild and they will take over once you arrive on Shola.\"\n\nBilly listened and was slightly appalled by the damage the doctor was mentioning. Technically he should be dead based on the damage listed and would have been if he had been treated on earth. Well treated by earth doctors that is. For the moment his anger over what had happened with being recalled was muted by the shock of the injuries. He leaned his head back and closed his eyes and started shaking slightly.\n\nSatasha curled as best around him as possible. \"Please give us some time Doctor. We will page you when we have an answer.\" She at least had already been informed of the extent of injuries. It had shaken her as well but she wasn't the one that was hurt. \"Hush Yilly you are going to be okay. Maybe not perfect but you are going to live and so am I. That is what matters.\"\n\nBilly turned his head into her shoulder and cried in frustration. It was to much and he couldn't handle it. The machines kicked in and medicated him and shortly he was asleep in her arms.\n\n~~~\n\nOver the next several days Billy kept getting better. He talked to both of his girls as well as Tasha and finally decided to agree with being tanked. All agreed that he would recover better on Shola than on the ship or even Earth. So far they hadn't heard much news about the attack on earth. Billy and Satasha had been informed of the loss of the fighter escort which upset both of them. He understood that it happened and chances were they would lose more people they knew and didn't know.\n\nThe doctor kept a close eye on him and finally told them that the next day they would put him back in cryo. Once they were in cryo and stabilized they would be taken to the ship and routed to Shola. One thing they hadn't been told was that the Mother Ship was enroute to earth. They knew that the Others were more advanced than earth. The fighters that had gone back to check on the escort had encountered more enemy ships. They had run but the fact that there were so many indicated either they had a carrier or their planet was close.\n\nSally had to tease her father. \"Daddy I know you have been wanting to see Shola but you could have asked you know.\" She even went so far as to give him an innocent look when she said it. \n\nBilly stared at her and then snorted. \"Not going to make me laugh girl. I really don't feel like crying from the pain of laughing. I will deal with you later when I can put you over my knee and spank you.\" The joking was nice since he really didn't want to think about going into cryo again. No he didn't have any memories of it but that didn't mean he wanted to be a human corpse-cicle.\n\nEarly the next morning the doctor and some of his staff came in. \"Good morning and we are here to get you ready and then put you under. You will wake on Shola and I hope for the best for you.\" As he was talking his staff was starting to inject the premeds. Once they were in they moved both to floaters and floated them out of the room. By the time they reached the capsules both were asleep.\n\n~~~\n\nThe General was sitting in the chair behind his desk and was glowering at the door. He had been informed of what had happened and was waiting on one of his junior officers to give the report. If the male didn't hurry up he was going to turn him over to the priests and let them deal with the male. Almost as if the male had felt his General thinking in his direction he dinged the door and walked in.\n\n\"Afternoon my general and I have a preliminary report for you. My staff is sifting through all the data available from the damaged ship right now. Once they have compiled it I will give you more details but I expected you to want as much information as soon as possible.\" The General was a pain in the ass to work for but it gave the male more chances to advance. That was especially true if the general screwed up and was relieved.\n\n\"Well don't just stand there.\" He hissed. \"What does the report say or do I need to remind you the priests are bored?\" That thought was enough to make even him shudder though he didn't. They valued their ability to torture people and see how long they could keep them alive. Well usually that was. When they encountered those aliens for some reason the priests went nuts. They had to be restrained to keep from killing all of the captives on sight.\n\n\"Yes ssir. Based on the report four of our scout-fighters intercepted two vessels. They appeared to be somewhat larger but of two totally different types. One was obviously a fighter craft of some sort. The other we aren't sure of since it ran when our ships were detected. The first four ships headed in to try and disable the fighter and the rest of the squad was sent to follow after the other ship.\" He paused as he reviewed the information on his tablet.\n\n\"As per what scan data we have managed to recover at the moment the second ship had some rather odd power readings. The scans show it as being a relatively small vessel but the power readings appeared to be from a vessel at least twice its size. When it went to full speed it was extremely fast and the scout-fighters were not able to catch it or keep up. It was approximately five percent faster than our ships.\" He scanned through more of the report.\n\n\"As per the ship that did return from the original four the fighter was very well armed and agile. The other three ships were damaged to the point they dropped out of hyper. The one remaining ship turned away to avoid getting destroyed so they could bring the readings back. The fighter was destroyed as well. Our ship stayed in hyper due to damage and the captain did think they would be able to get back into hyper if they did drop out to check for the other ships. He deemed getting the data back was of more importance.\" Or he was trying to save his skin of which both were possible.\n\nThe General took a sip of his drink and stared at the other male for several minutes. \"What about the other ships that were following the second enemy vessel? I know they came back without any damages at all.\" He was most definitely considering sending one male from each crew to the priests. At the very least they should have gotten some shots off before retreating.\n\n\"There were four enemy vessels approaching. Since they knew that one had damaged or destroyed four vessels the senior captain decided it was betting to get as many sensor readings and then break it off. They also detected a hyper signal of a very large vessel. Considering there were at least six enemy vessels it has to be capable of carrying parasite craft. That indicates it is either a carrier or a combat vessel that carries a small compliment of parasite craft to scout and extend it's combat reach.\" In other words the captains would have been stupid to stay around.\n\nThe general hissed at him. \"Don't presume to defend their actions. It is my job to decide if they performed their jobs correctly. Do that again and I might give you to the priests for a day.\" Punishments could be anything from a simple whipping to death and were all administered by the priests.\n\n\"Yes sir I understand. The report has been sent to your computer and as soon as my techs have further information it will be sent as well. Do you have any further need of me?\" The threat didn't really bother him since if the General tried it he would be dead before he sent the message.\n\n\"Get out of my sight you egg licker. Don't come back without some news that has some use.\" The general hissed again and tossed back the last of the liquor in the cup and turned to face the window. Behind him he heard the male leave the room and the door hiss shut.\n\n***\n\nPlease vote and send me feedback or leave a comment. I really do appreciate feedback of any sort from my readers. I hope you enjoy this. I am probably going to be posting a list of characters and a bit on the Sholan Culture and society."
    ],
    "authorname": "maxd01",
    "tags": [
        "alien felines",
        "injuries",
        "conspiracy"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/sholan-alliance-au-bk-02-ch-04"
}