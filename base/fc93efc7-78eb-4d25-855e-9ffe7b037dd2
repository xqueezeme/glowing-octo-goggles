{
    "title": "Aztec Treasure Ch. 21-30",
    "pages": [
        "Frank Grimes' POV\n\nGrand Island, Nebraska\n\nI got in the car and drove away from the two surviving werepanthers, my stomach rolling over the lost opportunity. I'd done what I could to try and get her to trust me, and it didn't work. There was too much history in the way. \"Where to, sir,\" Tom Nichols asked me.\n\n\"Tell everyone to meet at the 7-11 off Highway 30. We need to talk to the others,\" I told him. Meghan made the calls to the two Brotherhood vehicles while Tom linked to the two Pack cars.\n\nWe pulled into the parking lot of the convenience store. I got out as soon as the car stopped, and Meghan got out and moved to my side. Tom and Meghan were Arrowhead warriors, and their job was to protect me. I didn't need protection from the others here; they were friends.\n\nThe four men, two members, and two prospects from the Denver Steel Brotherhood chapter got out and gathered around me. \"You guys did a great job, and I appreciate it,\" I told them. I handed each of the men envelopes; they started to object, but I held up my hand. \"You lent us your time and talents, so this is the least we can do to pay you back. We're good now. Get some steaks, some sleep, and head back to Denver when you're ready.\"\n\nThe leader of the four smiled. \"I guess we can use some beer money, Frank. If my Brother needs help again, have him call.\" There were handshakes all around before they got back in their cars and left.\n\n\"What about us, sir?\" Brent and Laura were another mated warrior couple that had come down with us.\n\n\"You two have the first watch,\" I said. \"Maria's had a long day, and I don't expect her to go far before she finds a place to crash. Stay close enough to watch, but not close enough for her to pick you up. How is the GPS signal?\"\n\n\"It's strong,\" Laura said. \"She hasn't moved from the park yet.\"\n\n\"I put the tracker under the cushion on the baby seat, so even if she changes cars, it should stay with her. When she's on the move, stay far enough back that she doesn't make your car. Exchange texts with Tom and Meghan if you're outside the range of the Pack link.\"\n\nBrent nodded. \"Rules of engagement, sir?\"\n\n\"Our goal is to keep them alive and out of CIA hands. If anyone tries to grab her, it's kidnapping. Use deadly force if needed.\"\n\n\"Shifting, sir?\"\n\nI looked over to Laura. \"If there is no other option to save their lives, shift. I don't want anyone to figure out we're working with her if we can avoid it.\" I turned to my other warrior pair. \"Tom, you and Meghan can drive me to the airport in Lincoln. I need to get back to Arrowhead, and I'll take the standby team with me.\"\n\n\"It's a ninety-minute drive,\" Tom said. \"We should be back in four hours with stops to eat and gas up.\"\n\nLaura looked at her phone, which had the tracking app going. \"Maria is on the move,\" she said.\n\n\"Go.\" The pair jumped back into their car and headed back towards the park. I looked over at Tom and Meghan. \"Grab your snacks and use the bathroom, I guess.\" A few minutes later, I had a cherry Slurpee next to me in the cupholder as we drove south out of town towards Interstate 80. I took the secure phone out of my bag and started calling. \"Hey, baby,\" I said as my mate picked up. \"I'm finished here and heading back to the jet. I'll be back in Arrowhead by morning.\"\n\n\"Are they with you?\"\n\n\"No.\" I related to her the conversation with Maria. \"She's refused help for now, but we will be monitoring her from a distance just in case.\"\n\n\"She's not wrong about some of her worries,\" Colletta told me. \"Have you heard back from the Attorney General?\"\n\nAfter our meeting, she was supposed to ask the President if she had authorized a CIA operation to capture Werepanthers. \"No, nothing.\"\n\n\"I'll follow up. You need to follow up with Chase and Rori. Come up with a plan for how to integrate Maria into Arrowhead should she change her mind about asylum.\"\n\n\"I will.\" We talked for a few more minutes before I called Chase. I updated him on things and asked him for a favor. He agreed, especially after I told him why.\n\nI put the secure phone down and picked up my cellphone. I found the text string with Frank Donovan and asked him to call me when he had a chance. He called a minute later. \"Hey, Frank,\" he said.\n\n\"How is Claire doing?\"\n\n\"She's a mess, but she's alive and awake,\" he told me. \"I don't know what to do, Boss. The doctors say she'll be in here for two weeks. That gives me time to figure out the next step.\"\n\n\"Will she let you help?\" It was only on the flight up that the two confessed their attraction for each other; their relationship was still new.\n\n\"I don't know. There's no one back in Washington who can care for her, and she doesn't want to go back to North Dakota so her parents can take care of her. I'd take her to my place, but my apartment isn't suited for someone with her needs. She needs home care, hydrotherapy, physical therapy; it's practically a full-time job. She's facing months of physical therapy before she can walk without crutches, and I still have a job of my own.\"\n\n\"Have they told you what your next assignment is after the Task Force goes away?\"\n\n\"No. I'm worried about that, too. I can't take family leave to care for Claire unless we're married, and I can't afford to be on a leave of absence for six months either.\"\n\nIt sucked, but I had an answer. \"If I go to your bosses to get it approved, would you consider the two of you going to Arrowhead?\"\n\n\"Arrowhead? Why?\"\n\nI set the hook. \"There are dozens of female Omegas, low-rank wolves, at Arrowhead who could be useful for the DEA. They don't want to become fully-trained agents, and they won't leave Arrowhead for extended training assignments. Most have come out of bad situations, including slavery and abuse, so they don't trust easily and don't have the mindset to be warriors.\"\n\n\"That doesn't sound that useful,\" Donovan replied.\n\n\"There's nothing wrong with their noses or their brains,\" I said. \"A werewolf is better than four drug dogs due to their intelligence and ability to communicate with each other. These women are similar in size to existing dogs in their wolf form and will blend right in. Another advantage is that they can do the searches in human form as well. The DEA can't be choosy, Frank. Most of the warriors willing to take Federal positions are in the military, Secret Service, or FBI.\"\n\n\"What do you need me for?\"\n\n\"As I said, these women are comfortable together at Arrowhead. I'm proposing a limited agent training program for them. They don't want or need arrest powers or weapons, so much of our basic agent training won't apply. I plan to ask you to design and instruct an abbreviated training program at Arrowhead. I hope to get one to two dozen to agree to take the training, allowing teams of four to six to cycle out to where they are needed in small groups for a few weeks at a time.\"\n\nHe picked out the problem right away. \"These women you pick; how will they handle assignments away from the Pack?\"\n\n\"They will be together, and they aren't as afraid of humans so much now.\"\n\n\"What about Claire?\"\n\n\"The Arrowhead Pack House is a marvel, Frank. There are guest bedrooms in the building basement, which also has full gym facilities. The main floor has a dining room that serves four meals a day and connects to an indoor pool she could use for her therapy. Rori's Mom is a nurse, and we can bring someone in to do the physical therapy with her. There are elevators, and it's big enough to get around. It's also a lot closer to her parents if they want to visit.\"\n\nHe didn't say anything for a minute. \"What if Claire doesn't want to go there?\"\n\nI just laughed. \"I'll have Chase send you his promotional material,\" I said. It was true; part of Arrowhead's plan to become a functional Pack required them to recruit people from existing Packs to join them. The videos of his facilities and the Pack and Club celebrations held there were his best advertising. \"She can always Skype with Arrowhead if she has questions or wants to see more. I can send a jet to fly you here when she's released. If she doesn't like it, we'll send her wherever she wants to go. I only hope you two aren't body-conscious.\"\n\n\"The pool?\" I chuckled at his realization about Packs and their clothing-free pools and casual nudity.\n\n\"Epic parties,\" I told him. \"Get back to me in a day or two with your answer, and I'll work with the DEA bosses to set it up.\"\n\n\"Frank? Why? Why would you do all this for someone you've never met, especially when Claire was the one who figured out how to track Maria?\"\n\n\"Claire has a lot of talent, and the compromise wasn't her fault. If what you say is true, she may never be able to return to duty status with the FBI. Claire is an asset I'd want to have on my side, Frank. If she likes it there, I hope she will stay. I'd like that for you, too.\"\n\n\"I appreciate it, Frank. I'll let you know.\" I hung up and leaned back in the seat, watching the empty cornfields pass by in the night. Maybe, just maybe, I could help the couple find a place to settle down.\n\nCh. 22\n\nMr. Red's POV\n\n\"Check out that one,\" I said.\n\n\"Bingo,\" Mr. Green said as he looked through the binoculars from where we were parked and waiting. \"2017 Ford Escape, license number 269-SNM. That's our girl.\"\n\n\"We let her pass by, and then we follow her until we're out of town far enough to do this.\" I sent a quick text message to Mr. Blue. \"Intel good, target acquired, proceeding with extraction.\"\n\n\"I didn't get a positive identification, Mr. Red. She's wearing a hat and was looking away from me when she passed.\"\n\n\"It's her.\" I kept an eye on the car as he pulled out from our parking spot in front of Mel's Diner in Russell, Kansas.\n\nMr. Green did a U-turn on the city street in our rental Dodge Charger, staying at least a block behind her. \"I can't believe she's still following 281 south.\"\n\n\"It's what passes for a major road in this godforsaken expanse of fucking nothing,\" I said. \"Maria's avoided the freeways, and she can take this road clear to the Mexican border if she wants. It's a good plan for someone on the run who doesn't know the area and doesn't want to use a phone. Still, she fucked up. Once the red light camera in Hastings caught her, she popped up on the Company's radar. After that, it didn't take long for the drone to find her and guide us in.\"\n\n\"The bird still up there?\"\n\n\"No, it was bingo fuel and had to RTB. Flying that shit over US territory is a risk, especially at night. They won't send up another.\" We didn't need its help anyway. One teenage girl with a year-old baby wasn't a match for me, much less a man of Mr. Green's talents. We'd worked together before; he was a good operator, but I had no idea what his real name was and never would.\n\nWe followed her out of town, continuing south along the two-lane highway. It was eight at night, and the roads were empty save for the pickup trucks and farm vehicles. \"This is why we built the fucking freeway system,\" Mr. Green complained as we did twenty miles an hour, eight of us in a line behind a tractor towing a manure spreader with a full load. \"God, the smell.\"\n\n\"Stay close to this pickup so she can't see us,\" I told him. It was another twenty minutes before things thinned out enough for us to make our move. I removed the portable flasher from my bag, handing it to Mr. Green to stick to the roof. \"Light her up, and let's take care of this.\"\n\nThe red flasher started rotating, and I used a portable siren hanging out the window to give the noise. We quickly came up behind Maria's car; she didn't see us until we got close and flashed our brights. The car jerked a little as she saw us in the mirror, and then she put her blinker on and started to slow down. Mr. Greene looked over at me. \"Got the juice ready?\"\n\nI checked my jacket pocket and nodded, one and a backup. Mr. Blue said it would knock her out for at least four hours, which was plenty of time to make the handoff and collect our fee. \"Ready. Make sure you have that badge showing and keep a hand on that pistol. I want her focusing on you and thinking we're the cops.\"\n\n\"And here we go.\" He stopped behind her and left the flasher running. I made sure my fake detective badge was hanging visibly from the chain and got out onto the gravel shoulder.\n\n\"You've got to be fucking kidding me,\" Mr. Green said as he looked up the road.\n\n\"Stay cool,\" I said. What were the chances that a Sheriff's Deputy would just HAPPEN to be driving by as we made our stop? Apparently, for us, it was one hundred fucking percent. Cops hate doing traffic stops alone, and Officer Friendly was here to help. He lit up his flashers as he slowed, then turned and parked behind us. I handed Mr. Green one of the autoinjectors. All you had to do was press it against the skin, and the needle would go in and deliver its dose in a fraction of a second. \"Let him get close enough, and I'll hit him with the needle. Back me up before you get the girl and the kid. I'll dump him back in his cruiser.\"\n\n\"Yeah.\"\n\nThe Deputy was riding alone, thank God. He got out and walked up to where we were standing near the front of our Charger. \"What's going on, boys?\"\n\nI turned towards him as he walked up; he'd taken the flap off his holster and kept his right hand on that as his left held his patrol flashlight high. \"Detective Gray, Deputy. Sixteen-year-old driver, drunk and combative. We're running her license and registration now.\"\n\n\"Colorado plates?\"\n\nHe was even with me, and I moved before he could react. My left hand pressed his down so he couldn't draw, while my right hand spun around and plunged the autoinjector into the side of his neck. He tried to pull away, but the drug hit him like a truck. His muscles relaxed, he dropped the flashlight, and his legs collapsed. I caught him before he hit the ground.\n\nI looked up to see our target drop the Escape into gear and floor it. \"Fuck!\" He pulled his pistol out but didn't fire. Our bosses wanted her unharmed, and shit happens when rounds go downrange. \"Toss him and let's go,\" Mr. Green said as he moved for the driver's door.\n\nI tossed the Deputy into the ditch, then slid into the car. Mr. Green was peeling out as I was closing the door, and I put the seatbelt on as he picked up speed. \"Got her?\"\n\n\"She's running dark, but it's not like there are a lot of places to go,\" Mr. Green replied. \"She can't outrun us in that thing.\"\n\n\"We have to stop her, and I don't want her crashing. You'll have to get ahead of her and force her to stop.\"\n\n\"I know.\" He was already doing over a hundred; that Escape would be factory-limited to less than that. \"One more minute, and we're on her.\"\n\n\"I think she figured that out,\" I said. She'd locked up her brakes, turning onto a gravel road and accelerating over the cattle grate. The Charger slowed later and turned faster, and we were only twenty yards back when we left the pavement.\n\nThe dust from the road made it difficult to see her, and her four-wheel-drive was better suited to driving on this crap than the sports car we had. Green had already fishtailed twice and nearly rolled the damn thing when the passenger-side wheels dropped off the gravel on a hard right turn. \"Get behind her and give spin her out before we lose her,\" I said. \"The damn airbags can save her, and there's nothing but fields here to run into.\"\n\n\"Roger that,\" Green said. He gunned the engine on the straightaway, closing in on her. We were only thirty yards from her when she locked up the brakes and went into a powerslide on the gravel, driving off the road and through a barb-wire fence into a field. \"Hang on,\" he said as he braked hard.\n\nThe four-wheel-drive compact SUV had the advantage now that the chase went offroad. The uneven terrain caused the Charger to bottom out, and the freeway tires had traction issues. We were getting knocked around like kernels in an air popper as we tried to keep up, and then we hit the drainage ditch. The front wheels dropped in and the front bumper buried into the soft soil, bringing us from forty to zero in about four feet. The airbags deployed to save us, but FUCK did it hurt.\n\n\"You all right,\" I asked as I opened the door.\n\n\"GODDAMMIT ALL TO HELL,\" Green raged as he unbuckled his seatbelt. I got out, watching the Escape driving through the fence on the other side and back onto the gravel road. There was nothing we could do except watch her drive away.\n\n\"Check the car, Green. I need to update Mr. Blue.\" I sent a text message to him. \"Target evaded us, ride trashed, need extract ASAP.\"\n\nGreen was shaking his head when he got done looking at the front of the car. \"We're fucked, Red. The front axle snapped,\" he said. \"This isn't getting out of here without a wrecker.\"\n\nI looked behind us, and my stomach dropped into my gut. \"We're fucked, too,\" I said. On the flat land, you could see miles in all directions. I could see multiple police vehicles coming our way. \"Run for it?\"\n\nMr. Green laughed as he looked around. \"To where? You could run for a day, and they'd still see you from here.\" He took his pistol and holster out, throwing it as far as he could into the pasture. \"Text Mr. Blue. Have him send lawyers, guns, and money, because the shit has hit the fan.\"\n\nI took a step and skidded a little on a cowpie, causing my legs to go out and landing me on my back. \"Yeah.\"\n\nCh. 23\n\nSpider Monkey's POV\n\nArrowhead Pack, Minnesota\n\nVic came into our bedroom as I was getting out of the shower. It had been a long day in the office, and I was ready to sleep. \"Frank made contact with Maria,\" he told me. \"He just got off the phone with Colletta. She listened to him, but she turned down his offer of asylum here.\"\n\nDamn. Doesn't that girl know how dangerous it is out there? She's a seventeen-year-old with a baby in the car, and the CIA isn't fucking around here. If they can get Julio out of Federal prison and to a black site without a trace, they can snatch her without breaking a sweat. \"She did well to hide as long as she did, but it's crazy to go it alone with what we know!\"\n\n\"Cats and dogs living together isn't natural, and there are a lot of trust issues to get through,\" Vic said as he pulled the sheets down for me. \"Frank gave her some money, the driver's license you prepared, and his card so she could call if she changes her mind. He also warned her that her car was compromised. Maria will buy a car using her new name, and she'll leave the old one for us. Frank wants to dump it near the Mexican border in Texas to throw her off.\"\n\n\"I'll have to watch tomorrow in case her car trips any more cameras; there will be plenty of them in Texas.\" Wait a minute. SHIT! I got back out of bed and started throwing some sweats on. \"We need to talk to the Alphas and Frank NOW.\"\n\n\"Why?\"\n\n\"I've got an idea.\" Vic linked everyone to let them know. \"They're in the pool, so don't worry about getting too dressed.\"\n\nI put on some flip-flops and followed him out the door for the quick trip over to the pool area. Everyone was sitting on chairs around the wading pool, watching the little ones playing in the shallow water under the watchful gaze of parents and nannies. Colletta was here with her youngest son Chase and daughter-in-law Rori. She was lying in the shallow water in wolf form as the children splashed nearby. \"Frank will be available in a few minutes; he's talking to Frank Donovan.\"\n\n\"How is Claire doing?\" We all knew about the shootout in Denver.\n\nColletta set down her water glass, her other hand staying on her pregnant belly bulge. \"My mate is trying to convince Frank to bring his girlfriend here to recover. You were right when you said we could use Claire on our team, and Frank Donovan's one of his closest friends.\"\n\n\"Frank would be an asset around here,\" Chase agreed. \"I was hoping maybe he'd find a mate with one of our females, but no such luck. If he has a human girlfriend, he can't make the change.\"",
        "\"That's him,\" Coletta said as the phone rang. She answered on one of our scrambled phones. \"Hey, baby. I'm here with Chase, Rori, Vic, and Spider. Where are you?\"\n\n\"Interstate 80, about an hour from the airport in Lincoln.\" I knew just where that was. \"I left two teams in Grand Island to maintain surveillance on Maria, and I just got off the phone with Frank. I think he's interested, but we probably won't hear back from him for a few days.\" Cheryl walked over and sat in his lap, smacking the water with her palms as she giggled. \"What's going on, Spider?\"\n\n\"You still have one team with the plane, right?\"\n\n\"Yes, Beta Peter and Beta Louisa from Oxbow Lake.\"\n\nI knew both of them; Peter ran their security, and Louisa was his match in every way. \"Vic told me you plan to dump Maria's old car in Texas, right?\"\n\n\"Yeah. I was planning to ask one of the Texas chapters to bring a trailer up and haul it to the border after Maria gets done with it.\"\n\n\"Don't do that, sir. Send Peter and Louisa instead.\"\n\nEveryone looked at me, and the phone was silent. Chase spoke first. \"Why?\"\n\n\"We've been so afraid of the CIA tracking the car down that we haven't realized that we WANT the CIA to track the car down.\"\n\nVic looked at me like I was crazy. \"What? How is that safe?\"\n\n\"We wait until Maria is out of town and headed in a different direction and give her a big head start. Louisa can dye her hair black and use makeup to darken her skin; it won't be perfect, but with the right clothes and a hat, she would look a little like Maria. We put trackers on Louisa and the car, then have Beta Peter as a trail car. I can tell them where the traffic cameras are, maybe even get her pulled over once to get her in the system. The bad guys figure out she's heading south, and we use Louisa as the bait to bring them in.\"\n\nVic's eyes got wide. \"You want to get Louisa kidnapped?\"\n\nI shook my head. \"I want them to take out Maria's car. As soon as they see who is driving, they'll know they have the wrong person. In the meantime, Peter can take them out, and then we'll have a link back to the CIA and their black ops people.\"\n\nNo one said anything for a minute, and then Frank spoke up. \"I'm sure Donovan would LOVE to find some of those CIA assholes after the shootout. Plus, if we capture a CIA team operating domestically, it would give us evidence that the CIA is behind Christian's murder and Julio's disappearance. Without hard evidence, those fuckers will keep denying it.\"\n\nWe talked for a few more minutes before Frank closed it out. \"It's a good idea, Spider. I can't force anyone to put his mate out there as bait, so I'll have to ask the two when I get to Lincoln. If they don't want to do it, I'll ask our teams for volunteers, and they can replace the two on surveillance.\"\n\n\"I need to be on with them to run support and monitor for reaction,\" I said.\n\n\"Nothing will happen until tomorrow afternoon at the earliest,\" Frank said. \"People have to sleep, including me. We'll need to rent a chase car and set up everything. Chase, talk to Alpha Michael soon and make sure he's all right with the plan. If not, we can see if his people can replace ours.\"\n\nThe phone call ended, and Chase took the phone back to the office to talk to the Oxbow Alphas.\n\n\"Let's get you to bed,\" Vic said as he picked me up. I waved goodbye and was in bed minutes later.\n\nBy lunchtime, it was all set. Maria bought a Toyota minivan when the dealer opened up and was on the road by lunchtime. Our teams trailed behind her as she drove east on Highway 30. It was the back way to Omaha, but we had no idea where she was going. I kept the tracker display on the wall monitor in my office displaying Maria's location plus the two trail vehicles.\n\nMy office filled up in the late afternoon as the operation got underway. Frank Grimes was back and sitting on the couch with Colletta, both of them busy on their phones. Vic was sitting next to me, and Brian Steele was working the spare computer at the other end of the desk. We'd picked a simple route for them, leaving Grand Island to the south on Route 281 and following it to the border in McAllen, Texas. Brian and I had compiled a list of numbers to use; we could spoof our cellphone to appear to originate from anywhere along the route so it would end up at the right 911 center. We also had our hacks ready to get into the Department of Transportation computers in Nebraska, Kansas, Oklahoma, and Texas. I wasn't sure if the CIA would use the same DEA traffic camera database, but I'd identified every camera along the route.\n\nFrank left his scrambled cellphone with Beta Peter, and he called us just before five. \"We've eaten and gassed up, and we're ready to go,\" he told us. \"I'm going to leave the line open and muted.\"\n\n\"Sounds good,\" Vic told him. \"We're showing the trackers, and we are ready to go. Any questions?\"\n\n\"Our Alpha already warned us not to take too many risks,\" Peter said. \"We'll drive casual until we attract attention, then I'll move in. Both of us have tasers and pistols, and we know the mission priority is to capture the CIA team alive.\"\n\nThe next few hours were uneventful. We followed their progress south into Oklahoma, making sure she hit the traffic cameras. I entered the computer system from Hastings, Nebraska, as if I was a police officer. I then simulated a traffic stop, including a check on the Colorado registration. If anyone were monitoring DMV records, it would set off the alarms.\n\n\"Bingo,\" I said as I read the FAA update. I unmuted the phone so Peter could listen in, and he'd link everything to Louisa. \"The FAA just approved a short-notice training mission for a drone flight out of Fort Riley in eastern Kansas. It's flying west at five thousand feet to central Kansas, then performing a north-south search pattern before returning to base. It looks like a daylight-only flight.\"\n\nFrank was first to ask a question. \"What do they fly out of Fort Riley, Brian?\"\n\n\"Hang on.\" Brian did a quick search. \"The Army runs AAI RQ-7 Shadow drones, which have high-quality daylight cameras, forward-looking infrared, and laser designators. If the CIA is using the base, they could have something more advanced.\"\n\n\"Daylight makes sense, as you can't pick up a license plate with FLIR. I bet they are scrambling to get teams to her south, and they'll use the drone to guide them in. Spider, see if you can find any recently-filed charter flights landing ahead of our people in the next few hours.\"\n\n\"I'm on it, sir,\" I told Frank as I got back to work. We didn't find anything before darkness came, but that didn't prove they hadn't taken the bait.\n\nPeter came off mute. \"We're going to stop for dinner up at Smith Center, boss. Louisa saw a sign for Pete's BBQ.\"\n\n\"Copy that, Peter. Leave her car where it's visible from the road, and don't make it obvious you are together in case you have a tail.\"\n\n\"This is some empty-ass territory, Spider. It's no wonder this place is called tornado alley. Flat as a pancake, and there's nothing to slow it down but a picket fence that blew down in the depression era.\"\n\n\"Keep the phone and the guns close.\" They teased us with their sampler plates, which made the pregnant woman hungry. Vic arranged for the kitchen to deliver dinners to us, as we weren't leaving the room. Thirty minutes later, the sun was setting, and they were back on the road.\n\nRussell, Kansas, was where we got the first hint that something might be in play. \"We might have picked up a tail,\" Peter reported. \"Dodge Charger with two white males inside just whipped around and pulled in behind her.\"\n\nI ran the plates through the DMV database. \"Registered to National Car Rental,\" I said.\n\n\"That's our boys,\" Frank told them. \"Stay far enough back that they don't pick you up as a tail. How is Louisa doing?\"\n\n\"She's driving casual. She says the passenger is on his phone, and both men are in their thirties and look military.\"\n\nTwenty minutes later, we concluded they were following the car and waiting for something. Who rents a sports car and drives it at the speed limit? Either they were waiting for the right spot or waiting for more units to box her in. Peter was staying almost a mile back as they drove down the deserted road.\n\n\"Boss, the Charger just put a red flasher on and siren. They're pulling her over.\"\n\n\"Go dark and watch, Peter. Tell Louisa to keep the gun handy, and don't let them pull her out of the car.\"\n\n\"Roger that. She's stopped now.\" You could cut the tension with a knife. \"Shit, what luck! A sheriff's car just hit its light bar and is turning around to assist on the traffic stop.\"\n\n\"This should be interesting,\" Frank said. \"They aren't cops in a rental car.\"\n\n\"SHIT! The Deputy is down, they hit him in the neck with something, and he dropped like a rock! Louisa took off, and those two are getting back into the Charger to pursue.\"\n\n\"Follow Louisa,\" I told him. \"I'll call in an Officer Down.\" Everyone else in the room kept watching the trackers on the displayed map while I configured my phone to spoof a number from that area. I called 911. \"OFFICER DOWN, officer down, Highway 281 just south of Michael's Road! The deputy was making a traffic stop, and some guy hit him in the neck with something, and he dropped like a rock! He's in the ditch next to his cruiser!\"\n\n\"Ma'am, are the men still there?\"\n\n\"No, they took off southbound.\" I gave them the make, model, and license number. \"I'm about a half-mile behind them. Now crossing 220<sup>th</sup>, and these assholes are flying!\"\n\nI listened as she coordinated EMS and other units to intercept, including requesting a helicopter from the State Patrol. I kept them posted using the tracker to show where they were, insisting I was in no danger and I wasn't going to let those men get away with this. I saw the dots change as Louisa left the main road. Peter reported that he could see multiple police vehicles approaching from north and south at high speed. I got back to the 911 operator. \"They spotted the responding cars, officer. They've turned east off 281 onto a gravel road just past Northwest 130 Road,\" I told her. \"I'm not taking my baby on a dirt road, but those boys aren't getting away in that.\"\n\n\"Our units have them in view. Thank you for the assist.\"\n\nI hung up and listened as Peter described the chase through the field, ending with the Charger bottoming out in the pasture. Louisa kept going back to the road, turning towards 281 again once she reached 130. \"Louisa says it's like a cop convention,\" Peter said. \"We're going to drive casual and get back on track. Sorry, boss. I didn't expect them to take down a cop.\"\n\n\"This could be better,\" Frank said. \"The locals will charge them with assault on the Deputy, and that's a major felony. If their identifications don't hold up, they'll have more. You guys keep driving, and I'll take care of the rest. Good job, and stay safe.\"\n\n\"Thank you, sir.\"\n\nFrank got on the phone with the FBI director on his private number. I could hear how pissed he was, but he also could use this to his advantage. \"We'll get those two into Federal custody as soon as possible,\" Director Patterson said. \"Nice job, Frank.\"\n\n\"Hugh, we want to tie the CIA to this kidnapping attempt and the death of Christian Porter. Don't say anything about Julio, or he could end up in a shallow grave.\"\n\n\"I'll keep you posted.\"\n\nFrank got on the line with Peter and updated him. \"What's your plan now?\"\n\nPeter laughed. \"There's still sixteen hours of driving to the border. We're going to drive for a couple more hours and find a hotel for the night.\"\n\n\"Take your time,\" Frank said. \"And keep one person on watch in the hotel; we don't know if there are more teams out there.\"\n\nWe supported them until they stopped for the night, then the party broke up. It had been a hell of a day.\n\nCh. 24\n\nSpider Monkey's POV\n\nArrowhead Pack House\n\nAfter all the excitement of the chase in Kansas, the last two weeks had been boring for me. I was sitting in my office in the late afternoon, looking out at the lake and wondering how much longer the ice could hold on. Another day or two? The sun is high, and the days are much longer now than in the dead of winter. The warm temperatures and winds had melted all the snow except where the plows had piled it.\n\nI heard Vic running up the stairs from the basement tunnels; he'd been training the omegas in defensive fighting tactics all afternoon. I'd watched a little when I took a break an hour ago; they had moved from one-on-one to small groups. I'd watched as Vic and some of the other Betas simulated attacks on the females, teaching them how to fight together until help could arrive. \"He is a magnificent wolf,\" I thought as I walked back home.\n\nI'd had time to plan, and I knew how horny he gets after a workout. I was alone, not that it would stop me after months of living with the Pack. I figured he came home through the tunnels naked, not bothering to dress for the short run underground. I tossed my shirt onto an extra chair and had my shorts at my ankles when he burst into the room.\n\nSure enough, Vic Junior was in the room before Vic was.\n\nHe grinned when I pointed at the couch. \"I need you, baby,\" he said as he sat down.\n\n\"I ALWAYS need you, Vic,\" I said as I walked over. \"Warm me up.\" I swung my right leg over his shoulder as Vic grabbed my ass and pulled me close. I moaned when he took a lick of my sex from bottom to top. I put one hand on the wall to steady myself as he dove into my taco bar. \"YES! Right there,\" I said as he shifted his tongue and plunged it inside. I highly recommend getting oral sex from a werewolf; that tongue does things you can't imagine. I came only twenty seconds in, flooding his face with my juices. Vic just smiled and kept going, not satisfied with just one. My legs gave out with the second one a few minutes later, and I felt myself being lowered onto his lap as my body recovered.\n\nVic and I knew that he was a big guy, and the athletic, pound-me-into-the-mattress sex wasn't a good idea in the later stages of my pregnancy. His wolf seemed to accept that, and Vic held back more than I wanted him to. He slid down until his ass was at the edge of the seat, and I straddled him with my knees up by his chest. I reached down, guiding his cock head to my soaked entrance, and moaned as I slowly took him in. \"Not too deep,\" he warned.\n\n\"I'm in control, and it feels SO good,\" I said as I got halfway down. \"Doc said if it doesn't hurt, it's fine.\" I kept my hands on my mate's shoulders as Vic's hands supported my thighs to keep me from dropping down. I rose off him until he was almost out, then sank again until I'd taken a little more. It took a few minutes until I was resting on his thighs. I could see my belly button push forward, proof of when he'd reached. I stayed there for a bit, kissing him as he caressed my breasts and pinched my nipples. I squeezed him and rotated my hips, moving ever so slightly as he fought the urge to pound into me.\n\nThe sex was slow and tender, and it ended with him flooding me as I came around him. I kissed Vic as he reached for one of the small towels we kept handy for just this purpose. Our sex wasn't limited to the bedroom, and we tended to make a mess. When I came off him, I caught most of it. I shuffled off to the bathroom, and Vic had the shower going by the time I was off the toilet.\n\nHe made sure I was clean, kissing my belly as he knelt. I barely came up to his chest, so he did a lot of bending down. \"How's my boy?\"\n\n\"He's making room for himself,\" I said. \"I swear he thinks my bladder is a speed bag, and it's only going to get worse.\"\n\n\"He can't help being big and strong,\" Vic replied. \"I wish it were different, but I think my boy is leaving by the window instead of the door.\"\n\nNo kidding. My OB-GYN already warned me that my hips weren't suitable for the size baby I was likely to have at full term. A C-section was almost a given after 35 weeks or so. I am going to be so fucking huge when it's time to evict him. \"Thank you for the loving, Vic. I don't know how much longer I'm going to be able to do that for you.\"\n\n\"I love you, baby. We can adapt and overcome.\" He dried me off before we got dressed. We walked outside to the Pack House, enjoying the fifty-degree weather before going back inside again.\n\nThe Pack dining hall is heaven for a pregnant woman with cravings because there is a wide variety of food, and if it isn't out, they'll make it for you. I had no idea how much babies meant until I saw how the Pack treats them. Vic had explained how rare it was to have ANY baby in a Pack, given the low fertility rate of werewolf females. Arrowhead had a baby boom going, and believe me, the other Packs noticed. Even Oxbow Lake had multiple pregnancies right now.\n\nBecause of the value placed on the next generation, the whole Pack supports a pregnant or nursing mother. It shows in the smallest ways, like how everyone insists that pregnant and nursing females go to the head of the line for meals. Vic is an overprotective male, but he's not alone.\n\nI was tired, so Vic got my food while I sat at the Alpha Table and scratched Rori's ears while Chase hand-fed her chunks of rare steak and potatoes with gravy. It was another example; Rori would have been fine eating off a plate on the floor, but feeding your mate by hand was a mate bond thing. I was perfectly capable of using a knife and fork, but Vic was always offering me something off his plate or bringing me things. The act of providing food showed how committed they were to their mate and offspring. It worked for me, especially when he would snag the blueberry cheesecake.\n\nThe meal was excellent, and the Betas and Alpha retired to Rori's office after dessert. These Friday end-of-week meetings ensured we were all up to date on what happened, especially me, since I didn't have a Pack link. We sat down in the conference room, and Chase started the meeting. \"How is Maria doing?\"\n\n\"She stayed in her rental condo all day,\" Beta Teri said. \"Tom and Meghan Nichols are watching her, but other than doing some shopping at Wal-Mart and taking her girl to the park, she hasn't left her house.\"\n\n\"Austin, Minnesota is a good place for her to hide out,\" I added. \"It's a small town a few hours from the nearest big city, there is a large Hispanic population due to the pork processing plant, and the apartments aren't expensive. It also helps that no one minds a month-to-month leash using cash. She knows how to live without leaving a trail, and that's a good thing.\"\n\n\"Any sign the Government knows where she is?\"\n\n\"No, Alpha. I don't have my FBI backdoor access anymore, but with the Task Force closed down, I'm not worried about our end.\"\n\nChase looked over at his father-in-law. \"Frank, anything on the CIA connection?\"\n\n\"Nothing. Our two operatives remain in Federal custody. We've made no progress in identifying them, although we do know their identifications were fraudulent. There's also nothing so far tying them to the Denver shooting. Without a name, they can't make bail and remain in protective custody. Homeland Security is handling the investigation.\"\n\nWhen asked, the President and the CIA Director both denied any involvement. I hadn't had any luck penetrating the CIA computers, and the black programs were likely impenetrable. \"Any leads, Spider?\"\n\n\"Not a thing,\" I said.\n\n\"Well, keep trying,\" Chase replied. \"Teri, are we ready for Frank Donovan and Claire Bennington to arrive next week?\"\n\n\"Yes, Alpha. The room is up to ADA standards, including a roll-in shower and bars in the bathroom and bedroom. Her physical therapist has talked to the doctors in Denver, and all of the equipment needed is in place.\" One of the Oxbow Lake Omegas worked as a physical therapist at a Duluth hospital, and we were paying her to help Claire here. She had a long road to recovery and wouldn't be placing weight on that leg for another month. Frank was right; our Pack House was the perfect place for her to rehab.",
        "\"I've already set her up with everything she needs,\" I added. \"She's going to love the computer setup; everything is adaptable for how she's sitting in the bed or chair, and it's as powerful as mine.\"\n\n\"Good. Claire has a real talent for tracing things, and I'm sure she's raring to get back to work. Donovan, too.\" Frank had brought his friend into DHS as a consultant, meaning he could stay here with Claire and not take a leave of absence. Claire was still FBI on medical leave. Officially, she was only using her computer to play computer games and surf the internet. That meant the Franks couldn't ask her to do anything, as it might jeopardize her benefits. Me? I was a friend, and we could do whatever we wanted.\n\n\"Anything else,\" Chase asked.\n\n\"There was a development in the Portman shooting,\" Frank said. \"A few days ago, Christian's assistant received an envelope in her mail at home. It was all of the material Christian had on Maria's home and her estate; he must have mailed it after I warned him. The FBI has it now.\"\n\n\"Will the money go to Maria,\" I asked?\n\n\"I'm pushing for that, but it's up to the US Attorney.\"\n\n\"Have a new attorney set up the funds in an account for Maria. I can help her get the money without the Feds tracing it to her.\" Moving money around was one of my talents.\n\nChase nodded. \"If the Feds hold it up, transfer funds from the Pack account. I don't want her doing something stupid because she's running out of money.\"\n\n\"I'll take care of everything,\" I said.\n\n\"Anything else?\"\n\n\"A party,\" I said. People looked at me like I was crazy; it had only been a few months since our kind came out to humans, and we still had gates and armed guards at the entrances. \"We can't hole up like some cult, people. We live among humans, and we had good relations before the unmasking. We need to reinforce those relations with our neighbors and our friends.\"\n\n\"How do you propose to do that?\"\n\n\"Invite the property owners around the lake, local law enforcement, and the Federal agents who assisted to a party. We get the grills going, have some games and tours, and open up our pool for an afternoon.\"\n\n\"Rori likes the idea, but she's always up for a party,\" Chase said with a smile. \"When?\"\n\n\"Before summer,\" Vic said. \"Maybe the end of April or early May? We need some time to set it up and send out the invitations.\"\n\n\"We should do two parties,\" Teri said. \"One for the people on the lake, and another jointly with Oxbow Lake for law enforcement, local politicians, and Federal agents. There are hundreds of homes on the lake, so we have to keep things to a manageable number.\"\n\n\"Good idea,\" I said. \"As long as the kids get invited. Our pool is the best outreach tool this Pack has.\"\n\n\"Sounds good. Everyone have a good weekend, and Luna willing, it will be quiet.\"\n\nCh. 25\n\nMaria Meztli's (aka Esmerelda del Rio now) POV\n\nNorthwest Park, Austin, Minnesota\n\nMinnesota could go from warm sunshine to a blizzard in one day, so when you got a warm Saturday in early springtime, you took advantage of it. The grass was still brown, but the park still had swings and slides for Maritza to play on.\n\nI'd picked Austin as my next hideout for a few reasons. It wasn't a big town, only twenty-five thousand people, and it was diverse enough for me to fit in. Around twenty percent of the population was Hispanic, drawn by an economy centered around Hormel and Quality Pork Producers' processing plants. No one looked twice when a Hispanic girl of eighteen showed up with her baby and rented the basement of a house with cash. Unlike Denver, it was cheap; I was paying five hundred a month in rent with utilities included. It even had cable and internet.\n\nGeographically, it was a rural area. I could get to Rochester in an hour or the Twin Cities in ninety minutes if I needed a bigger town. Located a bit east of Interstate 35 on Interstate 90, it also meant I could get to Arrowhead in under five hours if I had to take them up on their offer. In the meantime, I'd enjoy the old neighborhoods, the parks, and the Spam Museum.\n\nYes, spam. I'd eaten cases of the stuff when I was hiding out in Denver.\n\nWe hadn't done much since moving in. I'd shopped at Wal-Mart for supplies to last a few weeks, including a stroller for the girl. We had to get outside, and there was no good place to let our cats out. This part of Minnesota was flat farmlands, not the rugged mountains I'd played in as a child. On the good side, a few neighborhood parks were within walking distance, and no one looked twice at a Mom pushing a stroller along the sidewalk.\n\nI'd walked the six blocks to the McDonald's off Fourteenth Street, where we ate lunch before going in back to the neighborhood park. It wasn't a big one; a single baseball diamond, a small pavilion in case it rained, and a playground with swings and slides. Maritza was giggling as I put her inside the seat of the kiddie swing, which turned to screams of joy as I gave her a push.\n\nShe didn't get tired of the swing for almost fifteen minutes, and then it was on to the smallest of the slides. I would lift her to the top, she'd slide down to the bottom, and we'd repeat. When my girl tired of that, she started climbing on the playground while I sat nearby watching.\n\nIf I didn't have my Jaguar hearing, I never would have heard the women talking as they walked by on the sidewalk. They weren't talking loudly; in fact, they were whispering to each other, but since they were looking my way, I heard them. \"I'm telling you, that's her! That's Maria Meztli,\" the younger woman said.\n\n\"What would she be doing here?\"\n\n\"I don't know, but she has the baby with her. I'm going to get a picture so they know I'm not making it up.\" I didn't turn towards them or let them know I heard them talking about me. Instead, I turned to watch Maritza climbing around. I was shocked when the younger woman walked halfway to the play area, her phone recording the whole thing.\n\nI stood up suddenly, making her jump before she turned back to the sidewalk. As they took off down the sidewalk, I picked up Maritza and carried her back to the stroller. \"PLAY,\" she cried as I strapped her in.\n\nI gave a low growl, one that meant danger. That quieted Maritza long enough for me to get us out of the park before anyone else showed up. I focused all of my senses, looking for threats as I hurried back home.\n\nI took Maritza out and put the stroller into the back of the minivan. As I closed the hatch, I tried to figure out what went wrong out there. It didn't make any sense; I was a nobody, so why would some nosy bitches in Minnesota recognize me and film me? How did they know my name?\n\nI had to leave, and I had to get out of this town fast. I buckled Maritza into her car seat, carrying it inside and leaving her by the door while I got our things. Just like the cabin, I'd never truly unpacked. I zipped up the bags, put the dirty clothes in a garbage bag, then packed the food and kitchen supplies into boxes and coolers. I had it loaded into the spacious minivan inside of ten minutes and went back inside to get my adoptive daughter.\n\nWhen I came back out, a black SUV was blocking the driveway. A female werewolf got out, her hands up and empty. \"Frank Grimes sent me, Maria. We need to get you out of here.\"\n\nI kept the car seat behind me, pushing back the urge to shift and flee. \"Who is looking for me?\"\n\n\"Everyone,\" she said. \"They may know where you live, what your name is, even what you drive. We're begging you; let us help you before it's too late.\"\n\nI looked into her eyes, and I believed her. \"What about my car? My apartment?\"\n\n\"Let Tom handle that. We need to leave, and I mean NOW.\"\n\n\"Fine,\" I said. \"What do I need to do?\"\n\n\"Get into the car with her while I grab the base of the car seat and hand him your keys.\"\n\nTom took the keys and got out the other side. I got in the back, setting Maritza's carrier in place while I waited for her to move the base over from my minivan. She set it in place, then closed the door and backed out of the driveway. \"Leave Maritza on the floor until you have the car seat secured,\" she told me as she started driving down the road. \"I'm Meghan, by the way. Tom and I are warriors at Arrowhead Pack. Put this on.\" She handed me a brightly-colored hijab.\n\nI pulled it over my head, glad she'd thought of something like this. The Islamic headdress left only my eyes exposed. I finished attaching the straps before I snapped the carrier into place, then I sat in the seat on the other side and buckled up. \"How did you know I was in trouble?\"\n\n\"We've been tracking you the whole time, just in case you needed help,\" Meghan said as she turned onto Fourteenth Street. \"We were in the McDonald's lot, using a parabolic microphone to listen in when we heard the women talking. As soon as I reported it to my Alphas, they sent us in to get you.\"\n\nI let out a low growl, upset that Frank had people following me after saying I was free to go. \"I should have known,\" I finally said. \"He let me go too easily.\"\n\n\"We aren't kidnappers, and our orders were to watch and protect you without being seen,\" Meghan told me. \"Even though you turned down our sanctuary offer, it didn't lessen the danger you faced. Nobody expected what happened this morning, though.\"\n\n\"What happened?\"\n\nWe were waiting at a stoplight near I-90, so she took out her phone and opened up the browser. \"Take a look,\" she said as she handed it back.\n\nMy eyes got wide as I saw my high school photograph, next to a picture of me carrying Maritza back into the United States in my jaguar form. \"DANGEROUS WERECAT RUNNING LOOSE IN USA,\" the headline read. \"$50,000 REWARD.\"\n\n\"What is this,\" I said as I looked up again.\n\n\"It's from the Human Purity League website, but the major news networks picked up the story, and it has been getting a lot of air time today,\" Meghan replied. \"The HPL is the most active of the anti-were groups. They act as a clearinghouse for information and rumors; since they are never directly implicated in attacks, we can't shut them down. The more dangerous groups listen to them, and this takes it to a new level.\"\n\nI skimmed the article, shocked at how much information they had. According to the webpage, werejaguars were dangerous, associated with a violent biker gang and the drug trade. There were other details; a family tree showing \"DEAD\" or \"IN PRISON\" for many of my relatives, pictures of the Denver SOT clubhouse, and even a photo of Maritza at eight months. The reward was for 'information leading to the current location of Maria Meztli' and included a website and a toll-free phone number. \"The reward is for information only,\" I said. \"Why?\"\n\n\"These guys are smart,\" Meghan said as we headed west on I-90. \"If they said 'information leading to the capture of,' then they are soliciting kidnapping. That's a federal crime. It would be even worse if they said something like 'wanted dead or alive.' This way, they can say they just wanted to know where you were so they could keep everyone safe from you.\"\n\n\"Could they hurt me?\"\n\n\"Chairman Colletta said it isn't something to take a chance on. For the werewolf treaty, she explicitly clarified that werewolves have all the rights of humans. I could see a defense attorney arguing that the murder statute doesn't apply to werejaguars, especially if they kill you in cat form.\"\n\nI shuddered; these people were nuts. Meghan was right to pull me out of there. A sighting could lead to a crowd, a crowd to a mob, and a mob to a lynching. Fear was a powerful thing, and this article was peddling fear. \"Where did they get all this?\"\n\n\"Frank thinks this is part of a CIA operation. They don't have the resources to scour the country looking for you, so they've recruited tens of thousands of people to do it for them. When they get good information, they'll send people in.\" She smiled. \"Don't worry about it. Spider Monkey is fucking with them big time right now.\"\n\n\"Spider Monkey?\"\n\nShe nodded. \"She's a human and the mate of our Beta. She's also the most gifted hacker out there. That website to report sightings? She's already crashed it after sending in thousands of false sighting reports. She's got dozens of people calling in tips as well. Even if that woman gets through, her report will join thousands of others.\"\n\n\"Damn.\" Maritza was falling asleep, and the adrenalin crash was upon me. I leaned back, forcing myself to relax. \"What is the plan now?\"\n\n\"We're driving straight to Arrowhead. Tom needs another few hours to get as much DNA and physical evidence of your presence out of your apartment, just in case someone checks. I'm not too worried about that because the authorities aren't looking for you.\"\n\n\"What about my car? All my things?\"\n\n\"Tom will get it transferred to a car we're sending down, then he'll take your minivan to a chop shop in the cities to get scrapped.\"\n\nDammit! \"I just got it,\" I whined.\n\n\"It's under Esmerelda's name. If someone gets to your landlord or has a good description of your car, it could lead back to you. Don't worry; we'll find something better than a minivan for you when it's safe for you to drive again.\"\n\nSafe to drive again. \"How long will that be,\" I asked.\n\n\"I don't know,\" Meghan said. \"Get some sleep if you want. We should get to Arrowhead before the dinner buffet shuts down for the night. Tonight is Ribeye night, and it's wonderful.\"\n\nI might as well sleep while Maritza does. I grabbed a blanket from behind the seat, wedged it against the window, and closed my eyes.\n\nCh. 26\n\nCIA Station Chief Richard Todd's POV\n\nCIA Safe House, South of Ottawa, Canada\n\n\"New intercept is coming through now, sir.\"\n\n\"Thank you.\" I moved over to his station, looking over his shoulder as the computer decrypted the file. It had been a frustrating week for the Foggy Bottom brass. How tough could it be to bring in a 17-year-old girl and a baby? Apparently, tough enough to leave two in the ground, one in the hospital and two in Federal custody. Frank Grimes and his werewolf buddies made us look bad, and the heat was on.\n\nOur break came when the National Security Agency managed to break the encryption Frank and the Packs used for their cellphone communications. The codes had changed five days ago, so we only had the numbers involved, times, and durations. When we started listening in, it was clear that they had eyes on Maria. The calls came in at the same time every night and never from a place within fifty miles of the previous report. Their people in the field removed the batteries between calls, taking away the ability to track them via cellphone towers. They were good, but they put too much confidence in the expensive military-grade encryption they were using. The NSA made it a priority, and their supercomputers cracked it in two days.\n\nTheir conversations didn't provide us any clues about where Maria was hiding; from the pattern of calls, we knew it was somewhere in southern Minnesota, southwestern Wisconsin, or northern Iowa. Frank Grimes and Chase Nygaard called them Tom and Meghan. A quick check showed Tom and Meghan Nichols were mated members of the Arrowhead PackLake Superior's North Shore.\n\nThe Deputy Director- Covert Operations came up with a plan. We knew the people involved, but we didn't know where they were. \"When the game is hiding in the thicket, you need to flush it out,\" he told the five of us on the call. \"Frightened game will bolt for the nearest cover. Since Arrowhead is the closest Pack, that is where they will run. When they do, we'll be waiting.\"\n\n\"How do we flush her out of hiding,\" Peter asked.\n\n\"Simple. We make Maria believe that hiding is no longer a viable strategy.\" Yesterday, the plan went into effect. We used the information on Maria, the paranoia about Were-people, and the promise of a large reward to turn the country into our eyes and ears. We put the reward offer out on social media and pushed it through the websites opposed to the Werewolf treaty. Since we knew she was in the Upper Midwest, our people targeted the advertising, leveraged media coverage, and invested heavily in social media.\n\nFor fifty grand in cash, people would sell their mother.\n\nThe tip lines didn't go as well as we had hoped. Cyberattacks, ranging from spoofing to denial of service attacks, slowed or stopped the tips. Our phone lines got swamped, with thousands of reports coming in every hour. If we needed that intelligence, it would be tough to find.\n\nWe didn't. All we had to do was scare the wolves enough to bring the cats home.\n\n\"The decryption finished, sir,\" the technician told me. Under the rules, the CIA couldn't listen in on intercepts of US citizens. However, the CANADIENS could, and there were no restrictions in sharing that information once it came to them. Since Canadian Intelligence couldn't break the encryption, they could say they didn't know the content under oath. The Canadian military was very interested in werewolves, as they had several Packs there already and a Russian Pack moving in.\n\nI put on the headphones as he played the audio file. \"Tom.\"\n\n\"It's Frank. We've got a big problem. Someone put out a fifty-k reward for Maria's location. It's all over the place, Tom. We've got to pull her in.\"\n\n\"Will she come with us?\"\n\n\"You need to convince Maria because SOMEONE will have seen her. Spidey's doing all she can to mess with the websites, but it won't last.\"\n\n\"What if she runs?\"\n\n\"Convince her that running makes her more vulnerable. Her best bet is to let us sneak her in.\"\n\nThere was a pause. \"Maria is watching Maritza play at the park now, and I don't want to do this in public,\" Tom said. \"We'll follow her home.\"\n\n\"Call me when you have her.\"\n\n\"Yes, sir. We're on it.\" The call ended as I smiled. I went into my office, opening up the secure line to Langley. I informed the Deputy Director of the conversation. \"Good. Our people will be waiting for them north of Duluth. The vehicle registered to Tom Nichols is a maroon 2018 Honda Pilot, Minnesota license number NVY 287.\"\n\n\"Understood, sir.\" It didn't take long to get an update. The next call was at 2:05 Central time. Tom reported that Meghan had the two cats with her and should arrive at Arrowhead around seven PM. He was cleaning up her apartment and would follow a few hours later. I quickly passed the information to the DD-Covert Operations and went back to the rest of my work.\n\nCats may have nine lives, but the third time is the charm.\n\nMeghan Nichols' POV\n\nInterstate 35 North, Minnesota\n\nJust because you are paranoid doesn't mean they aren't out to get you.\n\nThe events in Austin made me nervous about security. It was probably nothing, but my gut told me it was possible that Maria's landlord, or her neighbors, hadn't seen our car when we went into her driveway. It was enough to make me want some help. After all, when your Spidey Sense is tingling, call for Spider Monkey! I dialed her on the emergency burner phone. \"It's me,\" I said. \"I'm nervous about coming home.\"\n\n\"You shouldn't be; Mom will love them,\" she said.\n\n\"I just have a feeling something bad is going to happen.\"\n\nShe didn't say anything for a few seconds. \"I'll send someone down to help.\"\n\n\"Thank you.\" I hung up and focused on the drive north through the cities.\n\nIt was two hours later when I got a mental send from Frank Grimes. \"Where are you at?\"\n\n\"I just passed Stacy on I-35,\" I sent back. \"Thanks for coming.\"\n\n\"Better to be safe. Take the Highway 95 exit in North Branch. Go to the Holiday Station on the northeast corner of the intersection. Pull into the pumps behind a white panel van from Northwoods Catering. Have Maria exit on the pump side while we block the view from the store. We'll have the side door open for her. Brent and Laura will exit out the back with bags and get into your car while you're pumping gas. I'll follow you out after you pay and use the bathroom.\"",
        "\"Will do. I haven't seen any tails, Frank. Maybe I'm paranoid.\"\n\n\"The people we are dealing with have satellites, drones, and tracking devices. Paranoid is a good thing.\"\n\nHe was right; all it cost us was some time and gas. \"Five miles.\"\n\n\"We'll be ready.\"\n\nI briefed Maria on the plan. \"What about the car seat?\"\n\n\"You'll be in the back, I doubt there will be anywhere to place it, and we don't have time. Use the sling. I don't want you visible for more than five seconds. The awning over the gas pumps will hide us from surveillance, but not from someone in a car.\"\n\nThe swap went like clockwork. I pulled into the gas station and saw them on the inside of the last row of pumps. I pulled in behind the van, turning off the ignition but leaving the keys in place. \"You guys ready?\"\n\n\"Go.\" I got out and walked behind my car, stopping at the gas pump. While Frank and I blocked the view, Maria got out with Maritza in her sling and her hijab on. She climbed into the cargo van as Brent and Laura bailed out the back doors with canvas range bags. The two warriors got into my car, Laura riding shotgun, while I swiped my credit card in to pay for the gas. Laura picked up the hijab I'd been wearing and pulled it over her head to mask her identity. Frank walked into the gas station as the van drove off. \"Nice job, Meghan. Take your time, do the windshield, and use the bathroom. We want them to get a good head start on us.\"\n\nI finished filling up my tank, then went inside and used the bathroom. I picked up a Mountain Dew and a pack of Twinkies, then walked back outside to my car. I got in and started it up as Frank opened the door and climbed into the rear passenger seat. \"Let's go,\" he said.\n\nI got back out on the freeway, watching for tails and not finding any. Once we were at speed with no cars around, the weapons came out. I had my Glock 22 on my right hip, and I was sure everyone else had a pistol or two, but they came prepared. Laura brought a Benelli M3 semi-automatic 12-gauge combat shotgun. In the back, both Frank and Brent had chosen carbine-length AR-15's with 30-round magazines. \"Where is mine?\"\n\n\"Here,\" Frank said as he passed forward another AR-15. Laura held them between their legs as I drove.\n\n\"Why did you come along on this, Frank?\"\n\n\"I'm the only one with a badge if this goes bad,\" he replied. Brent laid down in the back cargo area while Frank laid on the back seat. Laura and I watched for hostiles over the next ninety minutes as we passed through Duluth and headed up the North Shore on Highway 61.\n\nLaura was the first to pick up on the threat as we drove past Knife River. \"Two black Suburbans just pulled onto the road behind us after another pulled ahead of us,\" she said. The big SUVs had tinted windows, and the two behind us were driving side-by-side now. The one in front was going just below the speed limit, so we were catching up to him. If we didn't do anything in the next minute, they'd have us boxed in on the four-lane divided highway.\n\nFrank was sitting up just enough to see where we were as he dialed 911. \"This is Supervisory Special Agent Frank Grimes of Homeland Security. Officer needs assistance, possible kidnapping attempt in progress. Suspects are driving three black late-model Chevy Suburbans.\" He gave them the license plate numbers and our location, plus the details on our SUV.\n\n\"Boss, they are closing in,\" I warned him. We were almost on top of the lead SUV, and the trail ones were only a hundred feet behind us.\n\n\"Wait until the last second, then turn right onto Salakka Road. If they follow, they are hostile.\" I watched as the intersection approached, then locked the brakes up and turned a hundred and twenty degrees right onto the road. The Suburban behind me had to swerve to avoid me, and both of them overshot the road. They didn't care about traffic; I could see them backing up to make the turn while I was a few hundred feet ahead of them.\n\nI braked and turned into a driveway, following it behind the house to park behind a pole barn. The guys were bailing out before I stopped. I was out and had my AR-15 pointed over the hood seconds later. Laura moved to the near corner of the pole barn, hiding in the bushes while aiming her shotgun back down the driveway. Frank went to the other end of the pole barn and took cover while Brent set up behind a car parked by the house.\n\nFrank was still talking to the 911 operator, and I could hear sirens in the distance as the first SUV came into the driveway. \"Open fire at the first hostile act,\" Frank told us.\n\nIt didn't take long. The first two vehicles parked about twenty yards away, turning to block our escape. The last Suburban stopped at the end of the driveway. What they didn't know is that we didn't want to escape. Six men exited the vehicle, all carrying pistols or shotguns. \"YOU ARE SURROUNDED! DROP YOUR WEAPONS AND COME OUT WITH YOUR HANDS UP, MARIA!\" He pointed his Mossberg Tactical in my direction, and all hell broke loose.\n\nThe four of us opened fire on the men in the closest SUVs. They only expected me to be armed, and all their focus was on me. They didn't expect to fire from three additional locations on each side, and they didn't live long enough to regret their poor situational awareness. Anyone who stuck his head out got it shot off, and those that didn't found out what deer slugs could do to an unarmored vehicle.\n\nThe guys at the end of the driveway said \"fuck it\" and took off, but it was too late. Frank shot out the driver's side window, killing the driver. As the Suburban crashed into a tree, Frank and Brent were already closing in on the survivors.\n\nThe police started to arrive, blocking any escape. In the end, there were eight men dead, one critically injured, and three captured. None of them were in the system, and every one of them wanted their lawyer.\n\nThe four of us ended up back in Duluth at the FBI office, where we suffered through hours of interviews before being let go. Frank's presence saved us; since we were acting under his direction, we were effectively his deputies. The 911 call recorded the kidnapper's words, and everyone knew about the bounty on Maria.\n\nFrank laid down the law. \"Maria Meztli is under the protection of the Arrowhead Pack,\" he told the FBI and the Federal Agencies on the line. \"Figure out who is trying to get her and stop them. The Packs have no problem with stacking bodies until they give up.\"\n\nCh. 27\n\nMaria Meztli's POV\n\nInterstate 35, Minnesota\n\nI climbed into the delivery van, closing the door behind me. These werewolves had their shit together; the whole evolution from pulling to a stop to moving again took maybe fifteen seconds.\n\n\"Sit down and stay out of sight,\" a man said from the driver's seat. He looked to be in his twenties, with a cheesy mustache and a mullet. He was good-looking, and I could tell he had broad shoulders and worked out. The mullet wasn't the Joe Dirt mess; it was a flat-top with shaved sides from the front, but the back was hanging down past his shoulders. I wondered if he rode. \"A mullet? In THIS century?\"\n\n\"Hockey hair has a long and storied history up here, don't you know. I couldn't commit fully to the buzz cut when I was doing warrior training. My stylist calls this the Skin Fade Mullet. I like the feel of it trailing behind me when I ride.\" The van's rear held a love seat against the far wall, with pillows and a blanket on the floor behind the passenger seat. I sat down and set Maritza next to me. I waited until we were on the freeway, then I grabbed the beddings and tried to make a nest for her next to the arm. \"I'm Lance, by the way. Welcome to Arrowhead.\"\n\n\"I'm Maria, and this handful is Maritza. Thanks for bringing me in.\" He seemed nice, and I was happy to be around someone who knew motorcycles again, even if they had been our enemies. \"What do you ride?\"\n\n\"I got a 2020 CVO Street Glide when I transferred here from the Monongahela Pack in West Virginia. How about you?\"\n\n\"I used to have a Heritage Softail Low-Rider.\" Emphasis on 'used to,' as Mom burned it with the rest of our house.\n\n\"The Pack has loaners at the main garage you can sign out. We had regular Pack runs before all the security problems started.\"\n\nI missed the runs; when the Sons were on the road, we owned it. \"That would be cool. There's nothing like it.\"\n\n\"Many of us ride, and with our Alphas part of the Steel Brotherhood, we get a lot of visitors. Hell, I've been out a few times already this year when we've had warmer days. I never get tired of riding along the lake, even if it freezes my balls off.\"\n\nI was trying to get Maritza to sit still, and she was fighting me, then she started to cry. \"Dammit!\" The emotion of the day was catching up to me, and the tears leaked out as I leaned back.\n\n\"She won't settle down?\"\n\n\"No. Maritza doesn't like being stuck in her seat for long road trips, and we haven't stopped yet. It doesn't help that she hasn't shifted for a week.\" He looked in the mirror, confused. \"Werecats can shift shortly after birth.\"\n\n\"That's cool. I didn't know that, but there's probably a lot about you jaguars I don't know. It's the first time I've seen a live one.\" I didn't say anything about that; I knew some of my relatives had attacked Arrowhead, and he must have seen the bodies. \"I wish my first shift had happened when I couldn't remember it instead of at fifteen. It sucked ass. I've never felt such pain before or since.\"\n\n\"I wish I could shift more often, but it's too dangerous after the reveal.\"\n\nHe didn't even turn back. \"We've got an hour before we hit Duluth, so if you want to shift and stretch out for a bit, go for it. No one will be able to see you if you pull the curtain.\"\n\nIt was a great idea. \"Thanks,\" I said. I pulled the curtain across behind the seats and console, then took off Maritza's clothes and diaper. I pulled my clothes off quickly, piling everything behind the bucket seat. I went to all fours, closed my eyes, and shifted into my cat. I was stretching out as Maritza changed to match me.\n\nI laid down on the carpeting and watched her as she explored. She was fun to watch, with her oversized paws and insatiable curiosity. Once done sniffing, she started to play-fight with me. We played for a good twenty minutes before she climbed off me and onto the couch and promptly fell asleep.\n\nI waited until her breathing evened out, then soundlessly got to my feet and crept forward. I got my nose under the curtain and pushed my nose through, letting out a cough-like sound to get the driver's attention. \"Hey there,\" Lance said as he reached back with his right hand. I sniffed him, then licked his hand with my tongue. \"Wow, that's different. It's like sandpaper compared to a wolf tongue.\" I stretched my head out, letting him scratch me around the ears. \"You better change back, though. We're getting more traffic now.\"\n\nI went back to the couch, shifted, and dressed. \"Thanks, Lance. We needed that.\"\n\n\"It sounded like she had fun. She's going to LOVE the pool.\" I'd seen some video of it when Chase allowed a camera team on Pack lands for a documentary. It was an impressive facility, part of an even bigger Pack House complex.\n\n\"I don't know if I'll be able to get her out. Jaguars LOVE to swim.\" We talked as he drove north, and he filled me in on all the facilities and activities. It sounded more like a resort than a Pack.\n\nLance had transferred in shortly after Rori opened the Pack up to new members. \"The Monongahela Pack had issues,\" he told me. \"Until recently, there were few opportunities to move between Packs unless you were a female going to your mate's Pack. My Alphas cared little about those under them, and I had few opportunities to advance. They kept the leadership positions to those related by blood to them and enriched themselves on our labor.\"\n\n\"Why didn't you leave?\"\n\n\"It's not that easy. You need to apply for the transfer, and both Alphas have to approve it. What is the upside for my Alpha to let me go? He loses my labor, and it isn't an overall neutral like it would be with the female mates moving. Also, just applying for the transfer was enough to brand you as disloyal. He didn't hesitate to retaliate.\"\n\nIt was foreign to me; there were so many of them, and mates blew my mind. How could you know that person was yours forever with just a sniff? An arranged marriage, like the one intended for me, made more sense than that. \"What changed?\"\n\nHe told me about Rori shaming the Council into allowing immigration to grow her fledgling Pack. \"I didn't know much about Chase and Rori, but they were young and took chances. I wanted a fresh start, and they gave it to me.\"\n\nBy the Goddess, I could use a fresh start. I wasn't sure I would find it here, though. \"Do you think we can be happy there? I mean, there's a lot of history. Will people be able to look beyond it and accept me?\"\n\nHe thought about it for a moment before answering. \"Arrowhead isn't like any Pack out there, Maria. Rori is the only remaining member of the original Pack at the hands of other werewolves. The first members of the Pack came out of abusive situations, if not outright slavery. Arrowhead has more human members than the rest of the Packs combined, not to mention the Brotherhood friendships we have. There are two things all Arrowhead members understand; bad things happen to good people, and forgiveness is the way forward. As long as you treat people with respect, you'll get that back.\"\n\nI hoped so. Hiding away from people for these past months had been difficult; I missed the Clubhouse, school, and friends.\n\nI could see the Duluth skyline through the partially-open curtain as we crested the hill and headed down towards the lake. A ship was moving in the harbor, and Lake Superior stretched beyond the horizon. Lance pointed at the temperature display on the radio. \"Even in the middle of summer, Lake Superior doesn't warm that much. The temperature dropped fifteen degrees in less than a mile. Weather can change drastically when the wind shifts.\"\n\nThe pines and hills were familiar, but we didn't have anything like this lake back home. \"It's beautiful.\"\n\n\"Wait until you ride along the North Shore,\" he told me. \"There's nothing like it.\"\n\nWe turned off Highway 61 at Two Harbors and went inland towards the Pack. Thanks to the Pack link, the guys at the gate had it open as we approached. I woke Maritza and commanded her to shift. She did, and I dressed her. The van drove to the back of the Pack House, backing into the loading dock. \"You ready for this?\"\n\n\"I guess.\"\n\nHe got out and came around to the rear doors while I put a sleepy Maritza on my shoulder. When the doors opened, I could see we were under an overhang, and the building surrounded us on three sides. \"No one can see you. Come on.\" He offered a hand as I got out, the dock making it an easy transition. He opened the door for me, which led to storerooms and the kitchen. We walked through the kitchen, the staff waving and smiling as they saw me. We entered the main dining hall through swinging doors as the room got quiet. \"Arrowhead Pack, allow me to introduce our guests, Maria Meztli and her daughter Maritza.\"\n\nA big rust-colored female wolf, obviously pregnant, trotted over and sniffed my hand before licking it as everyone watched. Behind her was a tall, powerfully-built male holding his twin son and daughter. \"On behalf of Arrowhead Pack, welcome to our home. I'm Alpha Chase, and Alpha Rori already greeted you.\"\n\n\"Thank you, Alphas.\"\n\n\"You must be hungry. Sit with us, please. Arrowhead Pack, please don't crowd them, but introduce yourselves when you can.\" I looked around the room as he led us to the main table. Four dozen people went back to eating, more men than women, and a dozen or so couples. My stomach growled as I smelled the food, and I was shocked to find a high chair and two plates of food when I got to the place Chase indicated.\n\n\"This looks so good,\" I said as I looked down at the food. I put Maritza into the high chair and fastened the bib around her neck. The kitchen had left a kid's plate with steak pieces, French fries, and applesauce.\n\n\"I can help her with her dinner if you want,\" the petite Asian woman on the other side said. I took a sniff; she was human and pregnant. \"I'm Spider Monkey.\"\n\n\"The hacker?\"\n\n\"That's me.\" She caught Maritza's attention and started feeding her applesauce while I dug in.\n\n\"You're catching the end of the dinner service, but they wanted to stick around and see you when you arrived,\" Chase said. \"Take your time and eat.\" I didn't say a lot as I ate the best meal I'd had in months. Maritza finished up before me, and Spider Monkey cleaned her up and sat her on her lap while I finished.\n\n\"That was amazing,\" I said as I put my fork down.\n\n\"I hope you saved room for dessert,\" Chase said. The lights dimmed, and my jaw dropped as two of the chefs walked out with a big sheet cake. I started to cry as I saw the eighteen candles and \"Happy Birthday Maria\" on it. \"Happy birthday.\"\n\nI'd completely forgotten about what day it was. I was an adult now, starting a new life, and I had hope.\n\nCh. 28\n\nMaria Meztli's POV\n\nArrowhead Pack, Northern Minnesota\n\nI woke to the smell of pancakes and bacon. For a moment, I closed my eyes and let myself imagine I was at home, my mother cooking breakfast while my father got ready for another day of Club business. I'd come down the stairs, rubbing my eyes, and Mom would hand me a plate with a smile on her face.\n\nIt wasn't going to happen, and I knew it. I had to make a new life for myself. I opened my eyes to the guest bedroom. It was nicer than any hotel, tastefully furnished with a full bathroom attached. The windows looked out at the Alpha's home at the end of the Point, but you could see Lake Arrowhead to the left and the Pack House complex up the hill to the right. Spider Monkey, the pregnant human and mate of Beta Vic, had taken me under her wing. It wasn't something I sought out, but Spider is something of a force of nature. Even the wolves deferred to her.\n\nLooking at the clock-radio on the bedside table, it was eight in the morning. I got out of bed, stretching out and checking on Maritza before I went into the bathroom. When I came out, Spider was knocking on the door. \"Your luggage arrived late last night, Maria. Tom made a loop into central Wisconsin before coming up here to make sure no one followed him.\"\n\n\"Thank the Goddess for fresh underwear,\" I said as Vic set the bags on my dresser and the chair in the room. \"And her diaper bag! Thank you.\" I grabbed what I needed for Maritza as she woke up. \"Did you and Meghan get back safely? I didn't see you at the party last night.\"\n\n\"There were problems, and we didn't want to ruin your party,\" Spider Monkey told me.\n\n\"It's why I didn't get back until late last night, Maria. It was a good thing we switched cars and snuck you in. A dozen men, we believe from a CIA team, went after Meghan's car using three SUVs. The four of us took cover in a rural driveway north of Duluth. The team blocked our exit and demanded you give yourself up. We opened fire on them, and they are now dead or in Federal custody. None of our people were seriously hurt. Meghan's car got shot up, and the car and the contents are all part of a crime scene. We had to have people pick us up after talking to the police because the car isn't driveable now.\"\n\nI stared at them, my jaw open. \"It sounds like it was more than you're admitting to, Vic. What is this 'not seriously hurt' stuff? Who got hurt?\"\n\n\"Frank got grazed with a bullet, but it's only a few stitches and some new clothes.\"\n\n\"A few inches left, and the Council would be declaring war on the CIA for killing Colletta's mate,\" Spider Monkey said. She wasn't happy Frank was in the field and got hurt. A few inches to the left, and it would have been a different story.",
        "Vic continued with the damage. \"Brent banged his knee up diving for cover, and Laura's cheek got cut by a rock fragment. We'll all be fine. It was a textbook ambush.\"\n\n\"And Meghan?\"\n\n\"Her shoulder is a little sore from firing that shotgun so many times, but she kicked ass. She took out five of them with those deer slugs. The rental cars looked like Swiss cheese when she stopped shooting.\"\n\nI'd endangered my host's mate and three others just by existing. \"I'm sorry I brought trouble to your Pack, Beta Vic.\"\n\n\"Just Vic; while you are here, you're family. I'm happy to have you in my home and my Pack, Maria. I think you can be happy here, and you'll make the Pack stronger by your presence.\"\n\n\"Thank you.\"\n\n\"Now get dressed and come down for breakfast before it gets cold,\" Spider Monkey said. They closed the door behind them, and I changed quickly. I put on a T-shirt, shorts, and sweats, and then changed Maritza's diaper and grabbed a terrycloth romper for after breakfast.\n\nI scented we weren't alone as I came down the stairs. I recognized Lance and Chase by their scents, and Frank introduced me to his Colletta. I smiled at everyone as I put Maritza into a high chair and put some Cheerios on the tray for her.\n\n\"Good morning, Maria,\" Lance said. \"How did you sleep?\"\n\n\"It was good, thank you,\" I replied with a smile. I took a pancake and started cutting it up for Maritza, topping it with syrup before putting the food on her tray. Maritza LOVES pancakes, but they make a mess. I quickly filled my plate as Spider Monkey set a glass of juice in front of me. \"Frank, I didn't see you at the party last night. When did you get in?\"\n\nFrank looked at Chase, and I could see something pass between them. I guessed what it was. \"Vic told me Meghan's car attacked yesterday, and they were after me.\"\n\n\"Yes,\" Frank replied. \"Three attempts on your life is unacceptable. I have made it clear to the FBI and the Kettering Administration that you are now under Pack protection, thus included in the Treaty.\"\n\n\"And I'll be meeting with the President tomorrow, with the rogue CIA being a major topic,\" Colletta added. \"The President told me she didn't direct the abduction attempts, and I believe her.\"\n\nLance finished up and put his plate and glass in the sink, walking out of the room without a word or look. Chase waited until he was gone before he spoke up. \"Maria, with the threats and your unfamiliarity with the Pack, I want to assign a warrior to escort you.\"\n\nMy eyes got wide. \"A bodyguard? Why would I need one on Pack lands? You said I'd be safe here.\"\n\n\"Think of it more as a guide to help you integrate into the Pack who happens to be armed just in case,\" Frank said. \"It isn't uncommon. Colletta has a security detail everywhere she goes, and our daughter's protected 24/7 by dedicated warriors.\"\n\n\"Why would Cheryl need security as a one-year-old?\" I'd met Chase's twins last night, and I could see them being good friends with Maritza in the Pack daycare.\n\nChase gave a quick talk about Rori's blessing as a direct first-born female descendent of the first Werewolf female and what it meant for her and Cheryl. I knew werewolves lived a lot longer than humans, but I had no idea how tough it was for them to get pregnant. It was no wonder their daughter had around-the-clock protection. \"What do you think about Lance as a bodyguard for you?\"\n\n\"He's a good guy from what I've seen. He was nice to me when he brought me in.\"\n\nChase nodded. \"He volunteered for the duty, but Rori and I have concerns because he isn't mated. We've had recent unpleasant experiences with bodyguards becoming too close to their charge. We made our expectations clear to Lance, but we need you to understand as well. Lance has a fated mate out there that isn't you, and he could find her at any time. When they find each other, no one before her will matter. You can't let him get close to you, or you'll both get hurt.\"\n\n\"If you want him as your bodyguard in the first place,\" Spider Monkey said. \"We can find someone else if you don't get along.\"\n\n\"No, don't get anyone else. I trust Lance to do his job,\" I said. Lance walked back with a smile on his face a moment later, thanks to that freaky Pack link thing the werewolves have. It was so much better than the vocalizations and posturing we used in our cat form to communicate. He got a washcloth and started cleaning up Maritza for me while I finished eating. It wouldn't be easy because she had syrup in her hair. \"What is on the agenda for today?\"\n\n\"Doc Olson is coming over from our friends at the Oxbow Lake Pack to give the two of you arrival physicals,\" Chase said. \"Possum will meet you after lunch at the Pack clinic to start the workup.\"\n\n\"Possum?\"\n\nSpider Monkey laughed. \"That's her road name in the Steel Ladies. Her old man is Roadkill, and what kind of roadkill is good to eat?\"\n\n\"Oh,\" I said as I blushed.\n\n\"Roadkill is our Facilities Beta, so he's responsible for everything mechanical. Possum is a registered nurse, and both are human,\" Chase said. \"I'm in training as a psychologist, but I'm the only doctor at Arrowhead until Doc Olson shows up. If you don't mind, I'd like to sit in on your appointment. I don't have any experience with jaguar physiology, and it's a chance to get a baseline.\"\n\n\"That would be fine,\" I told him. \"It's been years since I saw a doctor.\"\n\nLance spoke up next. \"I should give you a tour of the Pack grounds and talk through the security rules with you. We can leave Maritza in the Pack daycare if you're comfortable with that.\"\n\n\"We're the only Pack in the country that needs a daycare,\" Chase said with a smile. \"The other Alphas are quite jealous of our baby boom.\"\n\n\"That sounds good,\" I said. \"Maybe after Maritza's afternoon nap, we can hit the pool?\"\n\n\"Sure,\" Chase said. \"We'll join you if we get our work done. Speaking of which, I better get going.\"\n\n\"Thank you for breakfast,\" I told Spider Monkey. \"We should be going too.\" Lance handed me my cleaned-up and fully-dressed daughter, then led me down the stairs to the basement tunnels. I'd been amazed by them when we used them last night, but I understood why. Living right on the lake among humans, it was not just an escape route but a way to get around without being seen by humans.\n\nWe went up the hill to the Pack House's basement, taking the elevator up to the daycare. It was off the hallway leading from the dining area to the pool room. Maritza took off for her new friends and didn't look back; after months of being alone with me, the toys and children were a treat. \"It's like I'm not here anymore,\" I said as I watched her sit with the others.\n\n\"It's new for her,\" one of the nannies said. \"We've got her; go have fun. I'll link Lance if we need you.\"\n\nSo we did. I'd seen a little of the Pack House last night, but it was bigger than I thought. Three dining wings, with one in use, the pool and locker rooms, offices, and kitchen were on the main floor. Downstairs were bunk rooms and guest quarters, a large gymnasium, weapons training areas, and utilities. A class of women was taking pistol combat class when we went past the firearms simulator. \"After Chase saw this at Carson's pack, we had to have one. Realistic pistols with lasers and a hundred-and-eighty degree video projectors.\"\n\n\"It looks like fun,\" I said. As a Club Princess in an outlaw biker gang, I'd been shooting since I was five.\n\n\"Once you settle in, Beta Vic will evaluate your fighting skills and slot you into classes. Everyone does it, even the Omegas. Every adult has a job in defense of the Pack. It's made all the difference in defending against attack.\"\n\n\"The Jaguar attacks?\"\n\n\"Yes, but the worst was when two other Packs attacked. It was a slaughter; none even got close to our people.\"\n\n\"Can you defend us? I've watched the news; you've been attacked how many times in the past year?\"\n\n\"Five times, Maria. We lost a few in one of the jaguar attacks, plus the wolves we lost defending the Orlando clubhouse. We aren't a big pack, so we have to take our preparedness seriously. On the bright side, we have great parties, and there are plenty of fun machines to ride.\"\n\n\"I can't wait to ride,\" I told him. \"It has been MONTHS.\"\n\n\"We can take ATVs out when I show you the Pack Border today. A motorcycle run will need a lot more people to keep you safe, but I'll ask the Alpha to schedule one.\"\n\nThat sounded good. The more I saw, the more impressed I was. I spent way too much time in the garage, hanging out with Roadkill and his mechanics as he got the motorcycles, ATVs, and boats ready for the summer season. We made it to lunch a few minutes late. Maritza ate with the nannies so I could enjoy my meal. Lance laughed at me when I cut my grilled cheese into tiny bites out of habit.\n\n\"Come on, we need to get to the clinic,\" he told me when we finished. We walked across to the clinic in the sunshine since the hills and buildings shielded us from view. \"You can go right out that doggie door to the woods,\" he told me. \"There are cubbyholes for clothing just inside.\"\n\n\"I want to let my cat out,\" I said as I looked at the pines and rocks. I knew the Pack owned hundreds of acres back there, and we'd be riding the trails later on.\n\n\"Shifting is at night only due to the threat from the anti-werewolf groups, and only in groups of five or more,\" he replied. \"I'll take you out after dark if I can get some volunteers for a run.\"\n\nI laughed. \"You guys can run all you want, Maritza and I like to climb and leap. Ambush predators, remember?\"\n\nPossum welcomed me to the clinic, and Lance waited in the lobby as she took me back. Seeing the doctor was going to be interesting.\n\nCh. 29\n\nMaria Meztli's POV\n\nArrowhead Pack Clinic\n\nPossum took me back to the exam room and started my physical workup. Vital signs, weight, height, urine sample, blood sample, and medical history were all taken down on paper. \"No computer?\"\n\n\"We don't want werewolf data shared, so no,\" she told me. I liked her from the moment I met her; she reminded me of the old ladies in my Club. She didn't take shit from anyone. A young woman came in to take the samples. \"We don't have the equipment to do the analyses, so we run them to a lab in Duluth under Doc Olson's account. We're using a fake name on the samples, so don't worry.\"\n\n\"It won't matter. Mom told me that our DNA is the same as human DNA.\" We used human doctors and clinics while I was growing up, though I rarely got sick.\n\n\"Now for the embarrassing part. Are you sexually active?\"\n\nI laughed. \"My father would kill any man who touched me. Hell, I couldn't even get a date because the Club sons and daughters put the fear of God into the boys at my school. I'm not just a virgin; I've never even had a boyfriend.\"\n\n\"Are your cycles regular?\"\n\n\"They haven't started yet,\" I told her. \"What do you know about werejaguar mating and physiology?\"\n\n\"Nothing,\" Possum replied. \"I'd assumed you had monthly cycles like humans.\"\n\nWe were interrupted by a knock on the door. Chase entered with an older man with grey hair. \"Maria, this is Doctor Olson from the Oxbow Lake Pack,\" he said. \"He's been a Pack Doctor for almost two centuries now.\"\n\n\"Nice to meet you,\" he said as he shook my hand. Possum handed Doc the notes from the workup, and he took a moment to review them before he patted the exam table.\n\nI got up onto the paper-covered table. Doc went through the physical checks and pronounced me healthy. \"Any issues or complaints?\"\n\nThey had no way of knowing, so I had to tell them what my mother had taught me about coming of age as a jaguar female. \"I have to tell you about jaguar reproductive practices.\"\n\n\"Do you want me to leave,\" Chase asked.\n\n\"No, because this affects you as well. Lance told me a little about how werewolves do it, but jaguars are a lot different. When the Goddess passed down our animal portion, she didn't give us the lifespan that you enjoy. Werejaguars have the same life expectancy as humans, though violence often takes us before then. We don't heal any faster or have better immunities than humans. If you didn't see us change, you wouldn't know we had a cat.\"\n\n\"How does that affect your sexual maturity,\" Doc asked.\n\n\"I went through puberty at thirteen, with the growth and physical changes matching those of a human, but I never had a menstrual cycle. Like you, our cycles are a mix of human and cat. How much have you read on wild jaguars?\"\n\n\"I looked at a little when we first started encountering your kind,\" Chase said. \"Jaguars are solitary, with males and females establishing a territory. They only come together for reproduction. The female goes into estrus or heat some time after reaching the age of eighteen. Her cat calls for males to find her when she is ready. The males fight each other and the female over the right to mount her. The heat can happen at any time of year when food is plentiful but is more likely in spring. The male induces ovulation during the mating process, which involves multiple times mounting over a day or two. Once the coupling is over, the male leaves the territory, and the female births and raises the cubs alone.\"\n\nHe was well informed. \"The female werejaguar doesn't reach sexual maturity until eighteen. From then on, she will go into heat once or twice a year. The estrus scent strongly attracts the male werecats, and their cat side takes over. If we are among multiple males, they will fight to the death for the chance to impregnate the female. The female fights too, wanting the most dominant male, and sometimes gets hurt in the process.\"\n\n\"That sounds dangerous,\" Doc said.\n\n\"It is, and I'll have to deal with it at some point. That is why our normal practice is to marry off the females when they turn eighteen. By placing her in a monogamous relationship with a male, they keep each other safe. The husband recognizes the heat coming on and takes her away before the pheromones her estrus produces cause problems. They drive werecats nuts, but they affect humans to a lesser extent.\"\n\n\"So, it would be highly disruptive to have a female in heat in the clubhouse.\"\n\n\"That's an understatement,\" I said with a laugh. \"The humans would be sexually attracted without knowing why, while the werejaguar males would fight to the death over the female.\"\n\n\"Did your parents plan for your coming of age?\"\n\nI nodded. \"My parents had arranged for me to be married to Jose Correria in New Orleans on my eighteenth birthday.\"\n\nChase looked at me with his eyes filled with anger. \"Jose? That little...\"\n\nJose was the young man who had attacked the Orlando Steel Brotherhood chapter and started the war. Someone killed him, probably Arrowhead Pack, and his body never turned up. \"Yes. I'd met him a few times when we visited Los Angeles. He was a second cousin, and we were both children of Club Presidents. Politically it helped, and our parents hoped our offspring would be strong cats. Is this going to be a problem between us?\"\n\nChase let out a breath. \"Not if you can promise me you knew nothing of what he was doing with the Ryder family or the Brotherhood.\"\n\n\"I was a Club princess, but they never allowed anyone without a Patch into Church. I had no idea what he was doing, just like I had no idea what my father did. All I had were rumors and news articles that Mom told me to ignore.\" Chase nodded for me to continue.\n\n\"My father and the other US Presidents were betrayed and killed by the Cartel, and the Feds took out the rest. With so many of the Club leadership gone, the remaining jaguar families were sent down to Mexico to regroup with the Club. We suddenly had far more females than males, and that was a problem. I knew I would become a sister wife to Maritza's mother when I came of age. I survived because I was watching her while moving my bags to his car.\"\n\nDoc nodded as he worked through the information. \"Because your kind needs to repopulate your species.\"\n\n\"Yes.\" I got up and paced for a bit, thinking over how to say the next part Mom had taught me. \"Mom told me what I needed to know. For female werejaguars, heat is a literal bitch. It lasts between one and three days and turns you into a sex-starved madwoman. When my Mom went into heat, she and Dad would mate almost continuously for more than a day. Mom said he would remain erect and inside her almost the whole time to boost the chance of conception and keep other males from mating her. With a male's presence, the heat ends early and with little pain. Even so, conception is rare, much more difficult than with humans.\"\n\n\"Why is that,\" Doc asked.\n\n\"Heat isn't ovulation, just the preparation for it. The barbed end of the male penis in cat form is what stimulates the release of the egg. That's why a male werejaguar is needed to get a female werejaguar pregnant. Our females can't get pregnant in human form.\"\n\n\"Can a human get a werejaguar female pregnant?\"\n\nI shook my head, no. \"You seriously think a human is going to stay mounted to a sex-starved werejaguar for a full day? Or get an egg released? Not going to happen, though a few died trying.\"\n\nPossum laughed. \"Roadkill tried that on our honeymoon and didn't make it past four hours.\"\n\n\"Exactly. Now for the bad part. The heat drives the female to seek out the male, and not finding one can be painful. The fever spikes, your body aches, and no amount of self-stimulation provide relief for the need for sex. The heat can persist for three agonizing days. Females have died in estrus, either from the fever or stumbling around in their delirium. With no male to service the female, the only safe alternative is sedation for the heat duration while keeping the female isolated. Now, I don't know how my heats will affect your wolves when they eventually come, but...\"\n\nThat had Doc's attention. \"Better safe than sorry.\"\n\n\"Yes,\" I said. \"Even after all that fun, most heats don't take. It's not easy to have a big family. I don't want my people to die out, but I don't see a way to prevent it. Maritza and I are the last two females. Julio is the only male I know of, and he's gone.\"\n\n\"And Julio is not important for his DNA, but because a male cat is needed to trigger ovulation,\" Chase replied. \"This sucks.\"\n\n\"I don't have a way around it, Alpha. Our Goddess created us to reproduce with our kind.\"\n\nChase was thinking and linking, so Possum asked another question. \"Can you change humans into werepanthers?\"\n\n\"Like you, our bite in panther form is fatal to humans.\"\n\n\"And you don't have mates, so there is no bond to use to pull the human through the shift,\" Doc finished. \"I wouldn't want to be the first volunteer. We don't have a stock of panther blood.\"\n\n\"Our jaguar nature is passed from mother to child via supernatural blessing, not with blood,\" I replied. \"The Sons tried artificial insemination once; the offspring were fully human. And our bite is deadly because the Goddess gave that to us to slay our enemies, not change them.\"\n\n\"Wonderful,\" Chase said. \"You've given us a lot to think about.\"\n\n\"I'd like to examine your cat form,\" Doc said.\n\nI shifted into my cat, stretching out before walking over to Chase and putting my head by his leg. He was the Alpha and the one I had to submit to while I was here. He scratched my ears, then he and Doc started examining me from snout to tail. When they finished, there was another knock on the door. \"Come in,\" Doc said.\n\nThe door pushed open, and Rori came trotting in, her tail high and wagging as she came over to sniff me. I rolled onto my back and remained still as she scented me, finally coming around to lick my face. Maritza had shifted into her cub form as soon as she saw my cat, and she ran in and started climbing on me. Doc and Chase did an exam on her before he asked me to shift back so we could talk. When I changed, Maritza followed. \"Fascinating,\" Doc said. \"See how the neck muscles have adapted to the larger head of the werejaguar form?\"",
        "\"I'm more impressed with these murder mittens,\" Chase said as he scratched her belly with one hand while the other held up a paw. \"Can she climb?\"\n\n\"She's learning,\" I said. \"Jaguars are excellent climbers and swimmers. We haven't had much practice while we were in hiding.\"\n\nThe two finished checking my baby while I got dressed. \"I should get your lab results later today, and I'll call Chase with them. You're a healthy female, and Maritza is hitting all the marks for a human child. If anything comes up, Chase can get ahold of me. Meanwhile, I'll think about what you told us and see if I can figure a way out of it.\"\n\n\"Thank you, Doc,\" I said. Maritza let out a yawn, and it was time for her nap. \"Lance, let's put her down for her nap, and we can take that ATV ride.\"\n\n\"I'll get some volunteers to ride with us,\" he said, reminding me of the five-person minimum to leave the Pack House area. We left Maritza in daycare and walked to the garage to get geared up.\n\nCh. 30\n\nDoctor's POV\n\nDecommissioned Oil Platform #328, Gulf of Mexico\n\nI looked up from the test results and put my head into my hands. The subject was not cooperative, and so far, my tests were not showing promise. The DNA results showed nothing different between the subject and human DNA. The sperm samples showed no difference either. Whatever it was that made him different was not on a cellular level.\n\nThe mechanism of werejaguar reproduction was unknown, but the exposure of werewolves to the world months earlier provided valuable clues. When a werewolf and a human mated, the offspring was another werewolf. I couldn't see why, but our plans were proceeding regardless. We had collected Julio's semen and had it shipped to a fertility clinic in New Orleans. There, the sperm fertilized donated eggs before implantation in surrogate females. The children would be collected and raised within my program to establish a captive werejaguar population under our control and training.\n\nYou had to think long-term, as Julio was a poor choice for Company field work. My bosses understood this; as career employees, they knew the best deep-cover agents took decades to develop. In the interim, I needed to find a way to change existing agents into werecats. The Werewolves proved this could happen, both with Frank Grimes and Deputy Mark Brighton. We knew from this that humans could change if we replaced enough blood volume with were blood. I had already collected and stored one bag and would collect more every six weeks until we had enough to treat the first volunteer.\n\nI heard the helicopter just before it landed, and the guard knocked and told me to report to the pad. I closed my laptop and walked out of my office. I followed the guard up a few levels to the top and out to the landing platform. The twin-engine Bell helicopter's door opened, and I recognized the man coming out.\n\nDaniel French, the CIA's Deputy Director of Covert Operations.\n\nHis arrival wasn't a good sign, and it got worse when he called the head of the Black Site over and instructed him to set charges and abandon the station. \"The site is no longer tenable,\" he told the gathered men. \"Gather everything of importance and get on the helicopter. We're relocating you immediately.\"\n\n\"Yes, sir,\" the man replied. His men took off to implement the contingency plan. The site chief had briefed everyone on the contingency plan for \"sanitizing\" the secret prison. Explosive charges attached to the flotation tanks would detonate on a timer after we left by boat or aircraft. Minutes later, the rig would slip beneath the waves and end up two thousand feet below.\n\nI walked to Daniel and spoke into his ear since the helicopter was still going. \"What about my research?\"\n\n\"It's over, Doctor. Julio is a loose end, and he belongs on the bottom of the ocean.\"\n\nHe couldn't shut me down, not now. \"No! I'm not done yet! I still need him, and I need his blood, or we won't be able to change any humans!\"\n\nHe looked at his watch. \"The helicopter is taking the men out, and then a boat is coming for me. What can you do in an hour?\"\n\n\"I can't bring him with us?\"\n\n\"Not happening, Doctor.\"\n\nI thought quickly. \"I can remove as much blood as I can before we leave. It's a mistake, though; he's too valuable to leave behind!\"\n\n\"He's too dangerous to leave alive. Get it done, quickly.\"\n\nI grabbed two of the guards and gave them instructions while I went to my office to get what I needed. When I arrived in the treatment room, they had Julio secured in a five-point harness to the table. \"Remove the collar. I need access to his neck,\" I told them.\n\n\"That's against standing orders, Doctor.\"\n\n\"I don't give a shit. Take it off, then get on the helicopter before it leaves you behind.\" One of the men left to get the key while I set up my bags, while the other went back to sanitizing the platform. The veins in the extremities would collapse before those in the neck, but I got a bag started on his right arm while I was waiting. Julio had about ten pints of blood in his body, and I wanted to get at least six before his heart stopped.\n\nThe guard returned, removing the explosive collar. \"Be careful, Doc. We're out of here.\"\n\n\"Go.\" I was too busy inserting needles to look back at him. A few minutes later, I had five bags filling from veins in his arms, legs, and neck. I heard the helicopter engine spin up before it took off. Thirty seconds later, an explosion shook the platform.\n\nI looked out the doorway in shock, walking to the door as dust filled the air. I was not paying any attention to the patient behind me, and that was a fatal error. I turned when I heard a growl, and my head exploded in pain. The last thing that went through my head before I died was Julio's canine teeth.\n\nMaria Meztli's POV\n\nArrowhead Woods\n\nLance and I got dressed in the garage changing area. When I walked out, I was in a one-piece racing suit with sewn-in armor and padding, armored boots, and a full-face helmet. My hair was braided and tucked under my racing suit, making it impossible to identify me. One man and two women were waiting for us on the ATVs near the door. \"We patrol the property four times a day now with ATVs during daylight and have done so since our exposure,\" Lance explained. \"We do have cameras and motion sensors around the perimeter, but nothing beats a patrol if people sneak onto our land. It happens more times than you might think, though many are groupies.\"\n\n\"Groupies?\"\n\n\"Yep. Humans who want to become werewolves and think they are entitled to make the change. We get more of them than the human purity factions. Anyway, we use ATVs during the day, and at night we do patrols in wolf form. The trails are pretty obvious, but they can be challenging. How experienced are you at riding these?\"\n\nI just smiled at that. \"Don't worry about me; I'll keep up,\" I told the group. I mounted my ride, a Polaris XP1000 in camouflage colors. The big ATV had cargo racks front and back, a front winch, and a quick-detach mount for an AR-15 inside a protective plastic sleeve. Lance always carried a pistol at his hip, but I was surprised when he handed me a gun belt and holster. \"We never head out unarmed,\" he told me as I put it on over my suit. The others had pistols on their hips or shoulder holsters, and the women had scoped bolt-action rifles. I also spotted a medic bag and some gear bags on the guard's racks. \"We have two trails, one on the border, another a quarter-mile or so in from that. You and I will be taking the inside route; we'll pause periodically to sniff and listen. Ready?\"\n\n\"Hell yes.\" The door opened up, and our group started our ATVs and headed down the road along the lake. I pulled into the tail position behind Lance, slowly getting a feel for the power and handling of this big ATV. The ones I'd ridden before were 750 cc models and were smaller and more maneuverable. The leaders took off near the back entrance along the fenceline while Lance slowed down and turned onto a trail behind the lakeside pavilion.\n\nI was having a hell of a good time following the winding trail up and down the hills when Lance held up his hand and stopped. I pulled up next to him, turning off my ATV after he did. \"Security picked up a group of men entering our property on ATV's and heading towards the Pack House,\" he told me. \"The Pack has gone on alert. The three guards will sweep around between them and the road, and we are to take up a blocking position on the trail. Follow me.\"\n\nHe wasn't holding back on our driving as we cut east along a little-used trail. I was struggling to keep up. Five minutes later, we parked below a hill and turned off the engines. \"There is a ridge up there that runs along the trail. It's a good ambush spot.\"\n\nI followed him up the rise and heard gunfire in the distance. \"What's the situation?\"\n\n\"Four men on ATVs, two disabled, two coming our way. They've fired on us, so it's weapons-free. Be careful of the guards behind them.\"\n\nI looked at my pistol; it was useless from this distance. I took off the gun belt and started stripping as Lance took a position at the edge with his AR-15, the reflex scope scanning the trail. \"What are you doing?\"\n\n\"I'm an ambush predator, and this is an ambush,\" I told him. Once naked, I looped the gun belt over my neck and shifted into my jaguar. I ran down the hill to the trail, jumping up into a large pine tree. Climbing fast, I hid in the branches and waited.\n\nWe set up just in time, and the noise of their engines was getting louder. Lance opened up as soon as they were in range, sending round after round towards the men. I watched as one hit the shoulder of the lead rider, making him swerve off the trail and crash. The second man didn't stop, and the trees would be in the way in seconds. I roared, then leaped from the overhanging branch with my claws out just as the last rider approached."
    ],
    "authorname": "partwolf",
    "tags": [
        "werewolf",
        "werecat",
        "pack",
        "alpha",
        "luna",
        "jaguar",
        "panther",
        "action"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/aztec-treasure-ch-21-30"
}