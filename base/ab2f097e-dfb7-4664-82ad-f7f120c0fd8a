{
    "title": "Getting Away from it All....or Not",
    "pages": [
        "I guess we all have our peculiarities. One of mine, and I probably have too many to count is I am dedicated to my job. No, it's not that I work all the time. And no, it's not that I have an electronic \"shackle\" in the form of a laptop or company issued smart phone that I stay attached to the job 24/7. Simply put, I don't take much time off. \n\nI guess we all think our job is important and I am the same way. As a senior buyer, I have a lot of responsibility. No, the wheels wouldn't come off the bus if I take a day off, but I don't want to inconvenience my colleagues in having them cover for me. Weird, right? I can't help it. That's just the way I'm wired for better or worse. \n\nLike many companies, we have a use it or lose it policy when it comes to time off. I was fast approaching my anniversary date and had several days I had to take off. True to form, I went to my boss. \n\n\"Hey boss, you know I've got some time that I have to take or lose. I was wondering if I could get permission to carry over some additional days to next year.\" \n\nHe looked at me like I had grown a third eye. \"I consider myself a pretty flexible person, but...this benefit is for you and you need to take it. You've been working hard and you've earned the time off, so take it. He grinned and said, \"And in answer to your request, no.\" \n\n\"Look, I know you love to fish. The weather is hot, but it would still be a great time to be on the water wouldn't it?\" \n\n\"Well, I guess...\" \n\n\"No guessing...take your time off. Go enjoy yourself. Go fishing or lay in bed all day. Just take some down time. I promise we'll be here when you get back.\" \n\nOf course, he was right. I needed to take some \"me time.\" \n\nThe next few days flew by and the first of my days off arrived that Friday. All of my fishing buddies were working, so it would be a solo trip for me. I was up early getting my gear together and loading it on my boat. For those who care, the boat is a 16 foot Bass Tracker with a 50 horsepower outboard and a foot controlled trolling motor. It's perfect for me as I use it to fish the rivers and creeks here in the Low Country. \n\nI backed my truck up to the trailer and hooked up. Doing one more last check...tackle bag - check, cooler with bottled water - check, life jackets - check, sunscreen - check...I hopped into the truck and pulled out. \n\nThe first item of business was to get some breakfast. I stopped at the local diner in my small hometown. You know the kind...every small town has one. It's the place where you can get bad coffee, overly scrambled eggs and runny grits. You can also hear the latest gossip. Some of it is occasionally true. \n\nSaying hi to the regulars, I slipped into a booth and opened my paper. On cue, Cindy, who had worked there as long as I could remember, appeared with a cup of the aforementioned coffee. \n\n\"Want the usual Carl?\"\n\n\"Sure, two overdone scrambled eggs, burnt toast, runny grits and grape jelly.\" \n\nShe wrote it down and said loudly to the cook/owner, \"I need a house special for Carl.\" \n\nIt's the same routine every time I come in. You've got to love a small town. \n\nAfter wolfing down my breakfast I left for my 20 minute trip to a small creek that doesn't get a lot of fishing pressure. There is a nice state-maintained boat ramp and ample parking. As I pulled into the parking lot I noticed there were no trucks and trailers. While it was still early, it looked like on this work day I may have the creek to myself while the rest of the world works. Maybe this isn't such a bad thing after all. \n\nI launched the boat and parked the truck. I cranked the motor and it purred to life. Easing away from the dock, I headed up the creek to a spot in a desolate slough off the main creek. \n\nReaching my destination, I killed the outboard and moved to the front of the boat. Sitting in the pedestal seat, I eased the trolling motor forward. This is a very quiet and serene place. Large cypress trees grow out of the water. Spanish moss hangs from many limbs. On a foggy morning, it has an almost eerie vibe. \n\nThere is wildlife galore on this creek. Deer come to the water's edge to drink. Beavers and muskrats swim along with the occasional snake. Turkeys parade around the low ground and bald eagles sometimes glide quietly overhead. \n\nWhile the surroundings are awe inspiring, the order of business today is fishing. I started with a spinnerbait and twenty minutes later, a 2 pound bass flopped on the deck of the boat. Removing the hook, I returned it to the water. \n\nThe spinnerbait proved to be the ticket. Over the next 2 \u00bd hours, I boated 11 more bass. The largest weighed about 4 pounds. \n\nAs the sun rose, the temperature moved into the mid-80's. Starting to break a sweat, I took off my t shirt and hung it on the back of my chair. As the day warmed, the fish cooled off. I threw a series of different baits. While I got a bite here and there, I had now not landed a fish in close to an hour. \n\nI took a bottle of water out of the cooler and looked around. I was near the back of this slough. No one could come up behind me as the land surrounding the slough was swampy. I could see the mouth of the slough and I hadn't heard a boat motor all morning. \n\nMy girlfriend, Terri, and I had on occasion taken my boat into out of the way places like this and sunbathed nude. We're not youngsters. Terri is 49 and I'm 52. While we're not bad looking for our age, we are definitely not supermodels. We just like the opportunity to shed our clothes and enjoy the sun warming our bare bodies. And yes, I'd be remiss if I didn't admit we would sometimes rock the boat while enjoying the warm sunshine. \n\nLooking around one more time, I decided now was a perfect time to work on my tan. I stood up and dropped my shorts to the deck of the boat. The sunshine and the light breeze on my now naked body felt amazing as always. \n\nI maneuvered the boat so that I was facing into the sun. As I drank my cold water and enjoyed the sun's rays, I thought, \"Yeah, I needed this.\" \n\nThere's something about being nude in a place where people aren't normally nude. I guess for most people there is the small amount of paranoia that someone will catch them. With that in mind, I regularly looked around and saw no one. Eventually, I told myself that I would hear a boat motor if anyone were coming and have plenty of time to get \"decent\" before another fisherman was within sight. \n\nI decided to take a break from fishing. The day was beautiful and the warm.\n\nI thought about a recent trip with Terri. We were in a spot very much like this. Terri wasted no time removing her top and massaging sun screen into her small breasts and dark, pointy nipples. I decided she shouldn't have all the fun, so I dropped my shorts and applied sunscreen to my cock and balls. Terri moved in front of me and asked me to put sunscreen on her back. I did so and then tugged her bottoms quickly down her legs. Without being asked, I applied sunscreen to her ass cheeks. I'm such a considerate guy. I then turned her around and rubbed sunscreen on her smooth lips and her small landing strip. Sunbathing was quickly forgotten as she climbed into my lap for some awesome open air sex. \n\nThe combination of the warm sunshine, the gentle breeze and the pleasant replay in my mind contributed to my cock starting to get hard. Not wanting to burn, I rubbed sunscreen on my balls and cock. As I did, my cock did what came naturally and got even harder. \n\nI looked around one more time to confirm I was all alone. Silly, I thought...it's a weekday and I haven't seen or heard a soul. Satisfied I was, I closed my eyes and started to rub my cock as I relived the feel of my cock sliding into Terri's wet pussy. \n\nI put more sunscreen into my hand and rubbed the warm lotion along the length of my hard cock. I could feel myself closing in on an orgasm. \n\nThat's when I heard a small splash. I opened my eyes and, to my horror, saw a woman close to my age in a kayak. \n\nAnd if that weren't enough, I knew her. Not only did I know her, but she was a sales rep that I worked with on a regular basis at work. \n\nJessica had a look of shocked surprise on her face. After a moment, the look changed to a broad smile. \n\nI scrambled for my shorts. As I did, Jessica grinned ear to ear and said, \"Carl, don't you think it's a little late for that? I mean, I can't unsee what I just saw. Not that I'm complaining, you know? \" \n\n\"Um, Jessica, um it's not what it looks, I mean, well, I guess it is, but I thought I was alone back here and shit, I am so embarrassed. Why did it have to be someone I know who slipped up on me? Damn, I'm sorry...\" I again reached for my shorts. \n\n\"Carl, we're adults. Chill out. You're a guy. You've got a dick. I've seen one before. I would be shocked if you didn't masturbate. I mean we all do, right? Besides, I kind of enjoyed it.\" \n\nI started to pull my shorts on again and Jessica stopped me, \"Carl, you don't have to do that. I mean I've seen your cock. And it's a nice cock for sure.\" \n\nShe continued, \"I've got an idea. I know you're concerned that I might tell folks what I saw. While I'm not inclined to do that, I have a proposal for you. If you're willing, I can absolutely promise no one will ever hear about this.\" \n\n\"Uh, Jessica, I don't know...\"\n\n\"Carl, relax, I'm not going to jump your bones. I wouldn't mind, but I'm a married woman and I won't do that. But...\" \n\n\"But what?,\" I said hesitantly. \n\n\"Tell you what Carl,\" she said. \"I promise to keep quiet. But I'd really like to watch you.\" \n\nThis whole episode was very surreal. I had jacked off for Terri and a couple of women in previous relationships. The idea has always turned me on. Besides, at this point, I was wondering if I had a choice.\" \n\n\"Jessica, if I do this...\"\n\n\"Yes, Carl, I promise to not tell a soul.\" \n\n\"Actually Jessica, I was wondering if you would like to join me.\" \n\n\"Sure Carl, I'd be happy to sit on the boat with you and watch.\"\n\n\"Uh, Jessica, what I meant was would you take your clothes off while I masturbate.\" \n\nJessica paused in thought, \"I don't know about that. I'll think about it. But regardless I do want to watch you. Permission to come aboard?\"\n\nWithout waiting for an answer, she tied her kayak to my boat and climbed aboard. She sat down and gave me a little nod as if saying, \"OK, I'm waiting.\"\n\nTaking her hint, I began to slowly stroke my cock. With an appreciative audience, it began to regain its former state. \n\nJessica subconsciously licked her lips as her gaze locked on my hand sliding the length of my now very hard cock. As turned on as I now was, I knew it wouldn't take long. \n\n\"Jessica, I'm so turned on. I can't last much longer.\" \n\n\"Want some help?\"\n\n\"Do you mean you want to help me?\" \n\n\"No, I'm not going to touch your cock, but if you want some inspiration...\"\n\nWith that she pulled her t shirt off leaving her in a bathing suit top. She pulled the top up exposing a pair of C cups with large pink areola and short, fat nipples. She pinched her nipples. \n\n\"Carl, would you like to cum on my tits?\" \n\n\"Oh wow,\" I thought. This has certainly taken a different turn. Happy to oblige the lady, I stood up with my cock pointed at her white mounds. Inspired by the sight, it was only a few quick strokes before I sent a spurt of cum on her right tit. That was followed by another shot between her tits. Emboldened now, I rubbed the drip of cum hanging on my cock on her left nipple. She gasped as my cock grazed her hard nipple. \n\nJessica grinned wickedly and wiped a glob of cum off her tit with her index finger before sucking the finger dry. \n\n\"That was nice Carl. And you taste nice too. I think since you've seen my tits you have something to hold over me. You don't need to worry about me telling a soul. And I'm not worried about you sharing this with anyone.\" \n\nShe was right in that I wasn't about to tell a soul. Jessica took her time pulling her bathing suit top into place. I think she was enjoying me appreciating her boobs. \n\n\"Well Carl, that was certainly unexpected but most enjoyable,\" she said as she climbed aboard her kayak and untied the line holding it to my boat. \"Maybe I'll SEE you again out here,\" she said with a sly grin. \n\nWith that, we said our goodbyes and she paddled back out to the creek. It was at that point I realized I was still naked. After sunning for another 30 minutes, I got dressed and headed back to the boat ramp. There was no sign of Jessica when I returned to the ramp. I trailed my boat and headed back home. \n\nMonday morning arrived too early and it was time for another work week. I rolled out of bed, showered quickly and dressed before heading to the office. Aside from the usual backlog of emails, it was a fairly uneventful day until our receptionist called to tell me I had a visitor. After telling her to send the person back to my office, I returned to paperwork before hearing a knock on the door. \n\nJessica smiled and invited herself into my office. \"Hi Carl, haven't SEEN you in a while.\" \n\nI played along, \"Yeah Jessica, it's must have been what, like less than a week?\" \n\n\"Carl, I have some new products that I want you to check out. I think you're really going to like them.\" We talked about the new products and work related stuff in general for the next half hour. The conversation stayed on a professional level. I could tell Jessica was wrapping up our meeting when she leaned over my desk and dropped her voice. \"So Carl, when are you going fishing again?\" \n\nSo much for staying professional. \"I stammered, \"Uh, I don't know for sure. I mean I'm taking off this Friday, but it will depend on the weather and what else comes up in the meantime. Why do you ask?\" \n\n\"No particular reason, just wondering. Gotta run Carl, I've got another appointment across town\" she said as she slipped out of my office. \n\nI didn't give Jessica's question a lot of thought and just assumed she was having a little fun with me in her subtle reference to the previous Friday. Not that I was complaining. I always thought Jessica was an attractive woman and enjoyed seeing her tits, not to mention being able to shoot my cum on them. I figured that wouldn't ever happen again, but the sight of my cum on her tits was burned in my memory. \n\nThursday afternoon as I was wrapping up things in preparation for being out the following day, I received a call from the receptionist. \"You have a visitor.\" \n\n\"Thanks,\" I said. Send them back. \n\nA couple of minutes later Jessica breezed into my office. \"I brought these samples by for you to check out. Let me know what you think.\"\n\nWe talked work for a few minutes before she changed subjects. \"So where did you decide to fish tomorrow? Are you going to the same place?\"\n\nI pondered a moment and told her I wasn't sure. I did have good luck for a while the previous week, but had not decided if I wanted to return there or try elsewhere. We chatted about work for a few more minutes before we both had to move on to other things. \n\nFriday morning brought a repeat of the previous Friday morning. I went through the same checklist and left the house at the same time. I stopped and greeted the same regulars at the diner and had the same breakfast. Yes, being the creature of habit I am, I decided to go to the same fishing hole. \n\nFishing was again good early. I had boated 8 fish by 10 am when the sun started to heat things up again. I grabbed a bottled water and took off my shirt. Smiling as I thought about the previous week, I opted nevertheless to leave the shorts on at least for now. I went back to fishing and boated a couple more in the next hour before noticing movement between the trees. \n\n\"Hmmmm, that blue kayak looks familiar,\" I thought as Jessica came into view. As she got closer, I noticed how her blue two piece bathing suit showed off a very nice looking body. \n\n\"Hey stranger, fancy meeting you here of all places,\" she said with a big grin. \n\n\"Yeah, what a coincidence,\" I said with my own big grin. \n\n\"Fish biting this morning,\" she asked. \n\n\"As a matter of fact, they have been.\" \n\n\"That's great,\" she said. \"Mind if I watch? Your boat has more room than the kayak, so I can better work on my tan.\" \n\n\"Sure, come on aboard,\" I said. I wasn't about to turn down the chance to check her out more fully. \n\nI continued fishing and landed another bass a few minutes later. As I released the fish back in the water, I turned to see Jessica untying her top and tossing it aside. \n\n\"Hey, judging from your attire, the dress code here doesn't include tops. Not sure what I'd do if you were naked again today.\" \n\nJessica squeezed some sunscreen into her hands and began to rub it on her shoulders and stomach. When she started rubbing lotion on her breasts, I forgot all about fishing. She slowly rubbed the lotion into her mounds. Once she had completed that, she slowly rubbed more lotion onto her areola and nipples pulling each as she finished. \n\nI knew it was too late, but I asked her if she needed some help. She smiled and said, \"No, I think I've got the front but I could use some help with my back. \" She didn't have to ask twice. She lay on her stomach on the deck of the boat and pulled her hair away from her neck. I squirted lotion into my hands and started with her neck and shoulders and worked down paying special attention to the side of her ample breasts. \"Legs,\" I asked? \"Yes please,\" she said. I started at her feet and worked upwards. Not knowing how far I should go, I stopped just short of the bottoms of her bathing suit. I then went back to her lower back. To avoid getting lotion on her bathing suit bottom, I folded the top down to finish her back. As I did, she raised her midsection slightly into the air. \"Did she intend for me to...no way,\" I thought. I figured there was no harm in easing her bottoms down another half inch. As I did, she raised up again. This time I decided to take a chance. I started to pull her bottoms down further. She rose up more. There was no mistaking she wanted me to remove her bottoms. I slowly eased them down over her white ass cheeks and down her legs. \n\n\"Jessica, that white skin is going to burn if you don't put some sunscreen on. Would you like me...?\"\n\n\"Yes Carl, please do put some sunscreen on my cheeks.\" I wasted no time putting sunscreen on her cheeks. By the time I finished she probably had enough sunscreen to prevent sunburn on her cheeks for the rest of the summer. I did take care not to let my hand stray too far between her legs as I wasn't sure where this was going. \n\nShe rolled over and I saw for the first time all of her naked body. Jessica was short of being full figured, but she had curves. Very nice curves. Her pussy hair was trimmed very short to the point she may have been smooth a couple of weeks prior. Her lips glistened in the morning sunshine. \n\n\"Carl, don't you think you are overdressed?\" she said as she noticed the tent in the front of my shorts. I wasted no time in losing my shorts. \"Mmmmm, looks like someone is happy to see me,\" she said as she licked her lips. \n\nJessica continued, \"Carl, I was thoroughly turned on watching you cum last week. As a matter of fact, I can't stop thinking about it. You shooting cum on my tits was totally hot. As a matter of fact, several times this week, I've thought about you cumming on me as I rubbed my clit until I came.\" \n\n\"So, here we are. I figured as much as I was turned on watching you masturbate and cum that it would only be fair to watch me. I'm going to lie here and play with my clit until I cum. You can watch or you can play along, but I plan to enjoy cumming in the great outdoors.\" \n\nJessica spread her pussy lips and licked her finger. She touched the tip of her clit and began to do small circles around the tip. She looked at me and said, \"As horny as I am, this won't take long.\" Needing no further encouragement I began to stroke the length of my hard cock. Jessica bent her knees and opened them. \"Carl, I want you to kneel between my legs so I can see your cock better and so you can see me up close.\" Jessica continued to rub her clit and slide two fingers in and out of her juicy cunt. Her breathing quickened and I could tell she was getting close. \"Jessica, I won't last much longer.\" ",
        "She smiled at my hard cock and said, \"It's ok...I won't either. Carl, I can't let you cum in my pussy, but I can let you cum ON it. \"Her breathing quickened more as she began to moan. I wanted to cum with her, so I kept pace. As she said, \"Ohhhhhhhh, I'm cumming,\" her body stiffened and shook. At that point I leaned in close to her and touched her clit with the tip of my cock. Almost upon contact with her clit, I let loose with a stream of cum on her clit followed by another on her pussy lips.\n\nI collapsed beside her on the deck. Jessica leaned over and kissed my cheek. \"Carl, that was fucking amazing. Well, I guess it wasn't fucking but it was as close as you can get without actually doing it.\" \n\n\"Carl, my pussy is covered in your cum. That was so hot, but I would like for you to do something else for me. Would you lick my pussy clean?\"\n\nI nodded yes and gently pushed her legs apart and kissed her inner thighs. I then licked along the line of her shortly trimmed pussy hair. She started to squirm. I took a long slow lick beside one of her pussy lips. She moaned as her hips squirmed. I then took another slow lick beside the other pussy lip. My hands found her pussy lips and gently eased them apart. Her clit peaked from its hood. My tongue found the area between her lips and pushed inside her. \n\n\"Ohhhhh, Carl fuck me with your tongue.\" I pushed my tongue deep into her as she continued to moan. My tongue found the underside of her clit and slowly licked it. She continued to moan and squirm as my hands found her rock hard nipples. \"Oh my god...Carl pinch my nipples.\" \n\nI alternately pinched and pulled on her nipples and I sucked and licked her clit. I felt Jessica's hips rise as she started a moan. Her moan became louder as she cried out, \"Yes, oh my god, I'm cumming.\" \n\nJessica lay back with her eyes closed as her breathing slowed. \"That was freaking amazing. I'm so glad I came. I mean, both came here in my kayak and well, came.\" \n\nWe lay back on the deck and enjoyed the warmth of the sun on our naked bodies. Jessica eventually stood up on still rubbery legs. \"I hope I have enough energy to paddle back to the ramp,\" she said. Jessica slowly got dressed and gave me another kiss on the cheek. \"Thanks Carl, I really needed that.\" \n\nAs she climbed on her kayak, she looked at me and smiled and said, \"So when's your next day off?\""
    ],
    "authorname": "fishnfool",
    "tags": [
        "mutual masturbation",
        "masturbation",
        "outdoors",
        "fishing",
        "business collegue",
        "surprise"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/getting-away-from-it-all-or-not"
}