{
    "title": "Boston to Birmingham Ch. 01",
    "pages": [
        "All right, all you lawyers, students of the law, or just plain nitpickers, listen up. I don't know shit about law, I drive a forklift for a living.\n\nThe part of writing fiction I love is just that, it's fiction. I don't know if Alabama even has a three strike law, but for the sake of this story it does. Read it as what it is, escapism. \n\n.............................................\n\nThe little girl was squirming on her lap, making it pretty hard to put her hair up in the French braid she loved so much. She had never seen a five year old with so much hair.\n\n\"Crystal Anne! Stop, right this minute, or we're going to be late for church. What in the world is wrong with you?\"\n\n\"Granny, cousin Billy said you was a Yankee, That's not so, is it?\"\n\n\"First of all young lady It's were, not was. Here comes Gramps, why don't you ask him.\" \n\n..........................................\n\nGwen noticed her standing in the doorway of her office, An odd expression on her face.\n\nShe was her husband's oldest friend, moving from Birmingham to Boston with him when he relocated. Gwen had never really liked her. Her name was Crystal Ann Montgomery, but everybody called her 'Dixie'. Short, stacked, a redhead with green eyes. Between her killer good looks and soft Southern drawl, she had the males at the firm completely whipped, even the married ones. All she had to do was suggest something and it became policy.\n\nShe flirted shamelessly, but was never improper. She never dated in house, but was seen on the arm of many eligible men over the years. Oddly, she had never settled down.\n\n\"Something I can help you with, Crystal Anne?\"\n\nShe would be damned if she ever called her by her nickname.\n\n\"I been hearin' things, sugar, bad things. Thought I might drop by, see if there was anything to it.\"\n\nHer green eyes were frosty, no friendliness at all in them.\n\nHer comment made Gwen angry.\n\n\"What you hear and don't hear is none of my business. Now, I'm sure you have better things to do.\"\n\nCrystal refused to be baited.\n\n\"Sorry sugar[she pronounced it 'shugah', her accent became more pronounced when she was pissed], when you married Hardy you became my business. Honestly, I've never liked you and don't give a rats ass what happens to you. I tried my best to talk him out of marrying you.\n\nBut love is blind, and in his case stupid, and he did it anyway. Now you've fucked over him, and for his sake I'm giving you fair warning.\"\n\nShe paused to clarify her thoughts.\n\n\"He's not the man he led you to believe. You actually know very little about him. He didn't tell you because he was ashamed of part of it and afraid the other parts would scare you away.\"\n\n\"I tell you this for your own good. He's an Old Testament kind of guy, and is a firm believer in the 'eye for an eye' school of thought. When he finds out what you've done, you better not be anywhere close to him or it could end up very badly for you. Just so we're clear here, I'm not telling you this to protect you, but him.\"\n\nBy now Gwen was angry. First she didn't know what she was talking about, and second her life was none of her business.\n\nDripping sarcasm, she spoke.\n\n\"Well, Miss Montgomery, let me thank you for your concern, however scant it appears to be. But Hardy and I are just fine, despite what you hear.\n\nNow, I'm sure you have work to do.\"\n\nIf she thought that would make her scurry away she was badly mistaken.\n\n\"Oh, don't worry about me, sugar. I'm on lunch. If you're just fine with your husband, why did Allen post 'BLOND ON BLOND IS BACK!' on his corporate Facebook? I'm leaving now, I just wanted to have this talk to see if I could save Hardy some pain.\"\n\n\"But you're either in denial or just don't care.\n\nI've said my piece, but I will leave you with this.\"\n\n\"Like I said, I did it for Hardy, not you. You need to remember, he's not one of those Ivy League Yankee boys you're used to. There won't be any counseling or exploration of feelings. He'll go straight to your ass.\"\n\n\"Parting shot here, what you may not know is the one thing Hardy hates above anything else is a cheater. And when he kicks you to the curb, I'm gonna be there to try and catch him on the rebound.\"\n\n\"I've loved him since I was fourteen years old, and I'd die before I'd cheat on him. I intend to be on him quicker than a hen on a June bug.\"\n\n\"Ya'll have a nice day, sugar.\"\n\nWith that she sauntered out the door, turning the head of every man in the hallway.\n\n..................................................\n\nGwen sat in shock, before accessing his Facebook account. \n\nThere it was, for every one to see.\n\n\"Man, the trip to Paris was a huge success. The negotiations went very well, and more importantly,\n\nBLOND ON BLOND IS BACK! Things can't get much better.\"\n\nBlond on blond was his pet name for them when they were intimate. He was something of a poser, and grew his hair long to give him what he mentally called his 'rebel' look. He said with both having long, beautiful locks[his description, not hers]made them a beautiful couple. Her Dad and most of the senior staff thought he looked girlish, but he was damn good at his job so they left him alone.\n\nShe reached for the phone, dialing his extension. He recognized her number.\n\n\"Hi, babes. What's up?\"\n\n\"Allan, are you insane? What's with the 'blond on blond' crack on your Facebook? Are you trying to get me divorced, or both of us fired? If Dad gets wind of this you'll be fired in a heartbeat, and it won't go well for me either. I don't think he would fire his only child, but who knows.\"\n\nShe was practically screaming at him by the end.\n\n\"Hold on there, babe. Your Dad would never fire you, you're the second best contract lawyer he's got, right behind me. Everything will be cool, just stay calm.\"\n\nNot assured, she tried to reason with him.\n\n\"Look, Paris was a mistake. If I hadn't been drunk and let you talk me into that line of coke it would never had happen. We DO NOT want my husband to find out.\"\n\nAllan was not perturbed. He wanted everyone to find out, he wanted Gwen back. He almost had her until her Dad brought that hick up from Alabama.\n\n\"You sure didn't think it was a mistake when you were screaming my name. Joe Redneck doesn't scare me, remember I\"m a third degree black belt. I won't go looking for him, but if he pushes he'll get more than his feelings hurt.\"\n\n\"Damn Allan, have the drugs scrambled your brains? Don't sell him short, he did two tours in Iraq. He's kinda used to killing people. Now, keep your mouth shut, understand?\"\n\nHe had no intention of keeping his mouth shut, but he wanted to keep her calm so he agreed.\n\nWhen she hung up he reclined back into his chair, smiling. He almost had her once, and this time he was going to hold on to her. He knew her weaknesses and intended to exploit them.\n\nShe was beautiful, fairly intelligent, but more importantly, she was the only child and sole heir to her fathers' estate when he passes, not to mention the massive trust fund her grandmother had left her. All told it ran into three to four hundred million, give or take. Yes, life was going to be very good to him in the near future. Smiling, he lifted the phone.\n\n.................................................\n\nGwen sat at her desk, fuming. How had she let herself get drawn into this mess? She hoped Allen would honor his word. Looking at the picture on her desk, she thought back to her courtship.\n\nShe had chased him, relentlessly. His Southern charm, rugged good looks, and animal magnetism drew every woman to him like a moth to a flame. He didn't appear to notice it, and treated every one of them with respect, but his habit of looking them directly into their eyes like they were the only woman on earth worthy of his gaze unnerved and aroused them. One once described his look as controlled, but with something primal and dangerous lurking just below the surface.\n\n\"Who is that?\" She asked her paralegal one day, watching him walk down the hall.\n\nLisa laughed. \"Down, girl! That's Hardy Wilkes, the new lawyer your father brought up from the Birmingham office. He handles all the pro bono work now. He's pretty, but he's a loner. I don't think he's gay, but he doesn't seem to have much interest in women. I gave him a run, and he basically ignored all the signals.\"\n\nGwen brought him up at her regular Sunday lunch with her Dad.\n\n\"I hear you brought a lawyer up from the Alabama office. Is he any good?\"\n\nShe often wondered why he kept the Birmingham office open. Her great grandfather had opened the office as a favor to a steel baron who he represented. It was a good move, and eventually they had almost all the old steel magnates as clients.\n\nBut the steel business was almost completely gone now. The office was just a courtesy to the few surviving tycoons. But still, it was profitable and seemed to have a place in her Dads' heart.\n\nHer Dad laughed. \n\n\"Leave it to you to notice when a handsome man joins the firm. His name is Hardy Wilkes. He grew up in a small county up north of Birmingham. Went to college on the GI bill. We fund a scholarship at his college and I met him there.\n\nHe'll fool you with that Good Ol' Boy charm and then destroy you before you realize there's a brilliant mind under that exterior. I saw him eat up a practicing lawyer at a mock trial when he was in his second year. I recruited him on the spot. When he got his license he went to work for me. He doesn't seem to be motivated by money, so I let him run the pro bono section in Birmingham.\n\nHe was fairly selective, only taking cases where he thought they were innocent, and has a 93% success rate.\"\n\nHe looked at her speculatively. She had a habit of falling in love inopportunely. She had been engaged twice, and both times they fell through when she cheated.\n\n\"Leave him alone, Gwen. You have no idea how he thinks. He has no experience with your world, and I don't think he would fit. Plus, I don't think you could control him, and I know how important that is to you.\"\n\n\"Daddy! Really, do you think I pursue every man I think attractive?\"\n\nHe just sat back and smiled. \n\n.................................................\n\nIt was an uphill battle. He was polite, he was nice, he just wasn't interested. She was enough of a spoiled little rich girl to let that offend her greatly. \n\nFinally, she had him trapped. It was a black tie dinner for Amnesty International, a fundraising effort on the part of her father. He supported the group privately and publicly, donating resources as well as money. He was a keynote speaker, but it had been a particular nasty winter in Boston, and he had a case of the flu bad enough to be hospitalized overnight. He was home now, but was in no shape for the event, so he asked Hardy as a personal favor to give his speech. He would represent the firm, she would represent the family. She showed up in a limo to pick him up.\n\nGwen spent a good deal of time and money to look her very best. Long, shimmering gray dress by a prominent designer, diamond necklace, bracelets and ear studs. Her long tawny blond hair styled to perfection. She took his breath away.\n\nHe wore a standard black tux, but she thought he was very handsome in it. His almost platinum blond hair styled very nicely, his piercing grey eyes and gleaming white teeth made him a very presentable package.\n\nThe local press was out in force, this was a big event and most all the movers and shakers in the area would be there. When they arrived, as hosts and primary donor, they had their picture taken almost the whole time they were there. They were on the front page, in the business section, as well as the social section in Sundays' paper.\n\nThe front page identified them as Gwen Canaday, contract law specialist and daughter of the principal partner and C.E.O. of Canaday and Associates, and Hardy Wilkes, recently of Birmingham, prominent defense attorney of the same firm.\n\nThe business section had a spread on the economics of pro bono defense cases for large firms, and of course the society page speculated whether they were a couple or not, and if the \"Canaday wild child\" was finally settling down.\n\nThe night was a success in terms of money raised and pro bono hours committed by various firms. Hardy gave an impassioned speech about the importance of the cause. \n\nThey mingled, her clinging to his arm like it was a lifeline, saying it would keep the wolves at bay. She was careful to be well behaved but occasionally flirty, with light touches and whispered observations. By the end of the night she was much more sober than usual, while he on the other hand had more wine than his norm.\n\nThe ride back was relaxed. She sat close but was careful not to smother. She had the feeling he would bolt if she came on too strong. He delivered her to her fathers' mansion instead of her townhouse, and to her surprise agreed to a coffee before he left. Forty five minutes of conversation and a gentle kiss, and he was gone.\n\nShe felt like a fifteen year old, hugging herself behind the door as he left. She had forgotten how good that felt. Then she went to check on her father before retiring into her old room. Her last thoughts were of his smile as she drifted out to sleep. \n\nAfter that, she found one function or another that required him escorting her.\n\n\"Just business, you know.\"\n\nSoon, they were dating.\n\n................................................\n\nIt was a difficult courtship, mostly because she had to do the courting. He was smitten badly, but refused to act on it. \n\nThe first thing she did was end her relationship with Allan. He was smart, fun to be with, and above average in size and bedroom skills. Their occasional use of what he liked to call \"recreational pharmaceuticals\" enhanced the experience, but made her uneasy afterwards. Plus, she didn't love him.\n\nHe did not take it well at first, then calmed down and wished her well, reminding her if she needed someone, he was there for her.\n\nHer Dad gave her a serious lecture after her intentions became known.\n\n\"Leave him alone, baby. He's a good man, and you could destroy him without any effort at all. He's from a different world. His values and long range plans are probably nowhere near yours, if you even have plans. You'll end up breaking his heart.\"\n\n\"Oh, Daddy, don't worry, it's nothing serious. I won't hurt him, he probably won't remember me in two years. I like him, he's fun.\"\n\nAt home, she was deciding if Gwen Canaday-Wilkes\n\nwould sound as good to others if it did to her.\n\nAfter they got comfortable with each other, he spent part of every date telling her why there could never be a long term relationship between them.\n\n\"I'm almost ten years older than you. I have no money other than the generous salary your Dad gives me. I can't compete in your world, and don't really care to. I'm a simple man, you're as complicated as quantum theory physics. I want a quiet life, with a good woman and two or three children. I don't think you care for kids.\"\n\nShe was actually offended, and gave him his first dose of her temper.\n\n\"How would you know what I want? You've never cared to ask. Maybe I want the same thing, maybe money, travel, and power isn't as satisfying as the love of a good man. You'll never know unless you give me a chance.\"\n\n\"Sure, I like money and I'm used to it, but when I measure a man I don't really think of it. I've got enough money now than most people can earn in a hundred lifetimes, and that's not counting what I inherit from Daddy. Earnings potential isn't what I'm looking for, love is.\"\n\nShe calmed down a bit and teased him gently.\n\n\"Sorry honey, but sometimes you can be so dense. Are you sure you're a lawyer? I hope you kiss better than you argue.\"\n\nUp until now, the sixth date, all she had gotten was a soft goodnight peck. She was sexually and emotionally frustrated, the longest it had taken to get a man in bed before was two dates, if she wanted.\n\nApparently she had gotten to him, she had never seen his eyes so intense. He looked...primal.\n\nGrasping her firmly, he kissed her soundly, and with a good bit of passion. She stiffened at first, but soon surrendered to the feelings.\n\nShe felt overwhelmed, possessed, and loved all rolled into one. When he finally broke away, the only sound in the room was their ragged breathing.\n\nHe abruptly rose, gave her a curt goodnight, and strode out of her townhouse. By the time she had gathered herself and rushed to the door he was long gone.\n\nShe leaned against the door jamb and smiled.\n\n\"Gotcha.\" \n\n...............................................\n\nHer father was not pleased. Not at all.\n\n\"Don't do this, Gwen. It will only end badly.\"\n\n\"Please, Daddy, be happy for me. I truly do love him. Just think, in a few years I'll turn into the grandchild factory you've been wanting.\"\n\n\"You know he asked me for your hand? Who does that anymore? He's the best man I've ever met, Gwen, I mean it. There's a lot potential in that man. If there's the least bit of uncertainty, let him go.\"\n\n\"I'll hold that man 'til the day I die. I promise you Daddy.\"\n\n................................................\n\nShe conquered him on the ninth date.\n\nIt was an art benefit. To her surprise he knew quite a bit about the subject. He loved impressionists and old masters, wasn't to keen on surrealists and modern art.\n\n\"Pollack? Really? The man threw paint at canvasses, something a monkey could do.\"\n\nShe loved \"The Scream\" for what she called the raw emotionalism. But she also liked folk art, and the Wyeth family.\n\nTheir playful argument drew a crowd, and soon several others joined the debate. One woman seemed just a bit too friendly, and Gwen found herself in the unusual position of defending her property. She tried to keep between Hardy and the woman, but was unsuccessful several times. It didn't help that the woman was drop dead beautiful, even if she was a little older. Plus, the clothes, the jewelery, the general attitude of the woman screamed 'MONEY'. Hardy caught on, and teased her by paying what she thought was undue attention to the woman. She caught her in the ladies room.\n\n\"That Hardy sure is a fine looking man. I'd love to see his legal briefs sometime.\"\n\nThe other ladies laughed, one even said she heard they weren't brief at all.\n\nGwen had all she could stand.\n\n\"Back off bitch. He's mine!\"\n\nShe smiled sweetly, pissing her off more.\n\n\"You don't have to convince me, darling, you have to convince him.\"\n\nShe practically hung on him like wallpaper the rest of the evening. \n\n\"Why did you do that?\"\n\nThey were in the car headed home.\n\n\"Do what?\"\n\n\"You know what. Flirt with that bitch. Couldn't she see you were mine? She's too old for you anyway, she must be what, forty? That was mean.\"\n\n\"That bitch, as you so elegantly put it, is one of our clients. Old money from Birmingham. I helped her nephew in a small matter once, a few years back. She was teasing you, just to see how you'd react. And she's thirty nine, just four years older than me\"\n\n\"Besides\" he grinned \"Who said I was yours?\"\n\nIt caught her off guard.\n\n\"Well, that is, I mean to say...\"\n\n\"Honey, better stick to contract law. I'd slaughter you in court.\"\n\nShe could see he was laughing at her. She slapped his shoulder.\n\n\"I'm just starting to see what a sneaky devil you are. And for your information, you're mine 'cause I say you are. Because I want you to be.\"\n\nShe could feel his eyes on her in the dark.\n\n\"Be careful what you want, little girl. It might turn out to be something totally different after you've got it.\"\n\nShe answered in the same serious tone.\n\n\"I always get what I want, and if it's a little different I can work with it, make it better.\"\n\nHis mood changed suddenly. He was grinning again.\n\n\"Why counselor, that sounds like a merger proposal. Are you willing to negotiate?\"",
        "She smiled back.\n\n\"Yes I am. I'm sure I could bring a very good offer to the table.\"\n\nThey had pulled up outside her townhouse. When he got out to escort her to her door, she turned and dismissed the driver.\n\n\"Well,\" he said, staring at the disappearing taillights, \"there goes my ride home.\"\n\n\"Don't worry, my darling, I'll get you home.\"\n\nAs she turned to unlock her door she said under her breath \"Eventually\".\n\nShe put on a pot of coffee, his weakness. He was a coffee junkie, constantly buying expensive brews and experimenting. He got hooked in Iraq, after drinking the local crop. He used to laugh that lots of guys came back with bad habits, but he was the only one he knew who was a caffeine addict. She always had a few exotic blends on hand.\n\nExcusing herself, she slipped out of her dress and into a short robe. When she returned and sat, his eyes immediately went to her legs. She knew she had very nice legs, so she wiggled around a bit for his benefit before tucking them underneath her on the couch.\n\nHe had prepared the coffee, and they sat, sipping in companionable silence.\n\n\"I think you owe me something for being mean to me tonight.\"\n\nHe was startled, brought out of his reflections by the abruptness of her words.\n\n\"What would you consider a fair payment?\"\n\nShe crawled across to straddle him. \n\nHolding his head in her hands, she said \"I consider ten kisses to be a good start. After that we'll negotiate .\"\n\nThe first two were gentle probings, the next two more demanding. She pulled back.\n\n\"Whew, I've never been so hot during negotiations, I need to be a little more comfortable.\"\n\nShe untied the robe and let it fall open. There was nothing underneath but her. His eyes flew wide and then narrowed, hooded by lust.\n\nAs his hands slipped underneath and began stroking her body, she sighed contentedly.\n\n\"Much better.\"\n\nBy the sixth kiss the robe was on the floor. He abandoned her mouth, concentrating on her neck, trailing down to her nipples. They were hard enough to cut glass by the time his tongue left them. She could feel him growing under her. Arching her back, she ground against him.\n\n\"I think,\" she said, breathing heavily, \"I think....\"\n\nShe didn't get to finish her thought before his lips clamped down on hers. He rose easily, sliding an arm underneath her legs. Even in her arousal she marveled at his strength.\n\nCarrying her into the bedroom he threw her down, and started removing his clothes. She lay on the bed admiring him, admired the power radiating out of him, before she scrambled to the edge and started helping him.\n\nWhen his pants and boxers fell to the floor, she got a nice surprise. His cock wasn't the biggest she ever saw, that guy was a freak of nature, but it was very nice, very nice indeed.\n\nShe grabbed it, trying to pull it to her mouth. He stopped her, threw her back on the bed, grabbed her legs, and rammed it all the way in on the first thrust. She came instantly, with a scream.\n\nNo gentleness, no words of endearment, just a firm and steady pounding, increasing in speed and strength for about twenty minutes. She screamed her way through two more orgasms before she felt him stiffen, then collapse on her. She was gasping for breath, while he was breathing slowly, regularly. He hadn't made the first sound while they coupled.\n\nShe finally found her voice.\n\n\"Wow. That was great, I can't....\"\n\nThat was all she got out before he flipped her over, grabbing her hips and pulling her onto her knees.\n\n\"He can't possibly be ready again\" she thought,\n\n\"wonder what...\"\n\nThat was the last of her coherent thoughts as he rammed home again, just as hard as he was before.\n\nIt probably lasted half an hour this time, but she had no idea. She came again within two minutes, screaming his name. Then he slowed down, varying speed, depth, rhythm, sliding to the side, moving her up and down like she weighed nothing. Soon she was begging for release, but he teased her another five minutes before thrusting, pushing her over the top. She thought at one time she passed out, only to regain her senses as she orgasmed yet again. When he finally collapsed and spooned her to him, she was asleep within seconds.\n\nShe was still sleeping the next morning when she felt drops of water hitting her face. Looking up, she saw him freshly showered, wrapped in a towel, flicking water off his body.\n\n\"Good morning, sleepy head! Wouldn't happen to have a razor lying around, would you? If I kissed you now it would feel like sandpaper.\"\n\nShe rippled across the bed, making sure he took in her toned body as she moved.\n\n\"And do you intend to kiss me?\"\n\nHis smile was radiant.\n\n\"As the man in the movie said,'hard and often', but if you prefer it rough...\"\n\nHe leaned over and rubbed his cheek across her stomach, it did feel like sandpaper.\n\n\"Ouch! You've made your point.\"\n\nGwen scrambled off the bed and found him a razor.\n\n\"Hope the color pink doesn't offend you masculine sensibilities\" she giggled, handing him the razor.\n\n\"It'll be our little secret\" he grinned back.\n\n\"Tell me what you like and I'll make sure we have some next time.\"\n\nHis cool grey eyes looked into her ice blue ones.\n\n\"Are you sure there's going to be a next time?\"\n\nShe looked back, just as seriously.\n\n\"No, there's not going to be a next time. There's going to be lots of times.\"\n\nIt was the right answer.\n\nHardy shaved as she showered. She stuck her head out.\n\n\"Honey, would you wash my back?\"\n\nMoving to the shower he took in her glorious body. water cascading off her breasts and flowing down to her shaven pubes. Abandoning all pretense, he climbed into the shower with her, for what would be the second of three showers he would take that morning.\n\nSoon he had her in his arms again, carrying her to the bed, not even stopping to towel off. Once again she was tossed on the bed.\n\n\"Damn\", she thought, \"he must be a throwback to the cavemen. I wonder if he does anything with a woman besides pound her?\"\n\nThe thought was answered quick enough when he dropped to his knees beside the bed and pulled her to him, his tongue finding her pussy with the accuracy of a guided missile. She feared an onslaught, but he was very gentle, at first. \n\nShe didn't scream when she climaxed because it took her breath away. She couldn't even beg him to stop as he kept up his relentless licking, sucking, and nibbling. It was only after the second one, when she felt like she was trying to squeeze his head off his shoulders, before she found her voice.\n\n\"Please, baby, no more, not right now, let me res..\" was all she got out before he was on the bed between her knees. After a few hard minutes he rolled over, putting her on top. Gwen didn't know where she found the strength to ride him, but she gave it all she had. Losing count of the orgasms, she felt him grip her a little tighter, thrust a little harder, then hold her in place for a minute. She could actually feel him pulsing inside her.\n\nThey lay intertwined for a few minutes before he rose.\n\n\"Wanna take another shower and start again?\"\n\n\"No, baby, let me lay here for awhile.\"\n\nShe looked at his back and ass as he went into the bathroom. Who knew there were that many muscles under those suits?\n\n\"It's not supposed to be like this\" she thought,\n\n\"he's the one who supposed to be reduced to rubble, not me. Where the hell does he get that energy?\"\n\nTruth be known, it was all Hardy could do to keep his legs from shaking as he went into the shower.\n\nThinking of his grandfather as he lathered, he was sure he was right.\n\n\"The first time you bed a woman, boy, give it to them hard and fast, and last as long as you can.\n\nThat way they'll know they have a real man. Love 'em slow and gentle next, and they'll know they got a good man.\"\n\nAll told, he thought, probably the best advice he could ever get.\n\n...............................................\n\nIt wasn't all sunshine and roses afterwards, but she slowly moved him to her way of thinking.\n\nThe only way he could get him to agree to consider marriage was to live together for awhile.\n\nThey knew they were compatible sexually. Socially was another matter.\n\n\"I grew up dirt poor, Gwen. I've never had much, never really wanted much more than to be able to give my family a good life. I lack both your desire and social skills to move in your world.\"\n\n\"Silly man, everybody can learn. And would you please stop worrying about money. I've already told you, I've got all we'll ever need.\"\n\n\"That's kind of the point, hon. It's your money, not ours. It will always be your money, I'll never touch it. IF we marry, there will be a prenup stating I will not profit from a breakup, and that we'll split just what we accumulate after we wed. This isn't negotiable, counselor.\"\n\nHer dad was touched by the gesture, but it was just what he expected from Hardy. It surprised them both when her Dad stated that he would represent Hardy in the prenup negotiations, no argument. He made Gwen get another lawyer outside the firm to represent her.\n\nThe meeting was a surprise to all concerned. The senior Canaday had a contract that was not to be deviated from, or the marriage was off.\n\nIn the event of dissolution because of irreconcilable differences, both parties left with what they brought in. If they separated due to his infidelity, Hardy lost everything. Then it got interesting.\n\nDue to the extreme disparities of net worth, should Gwen stray before five years, Hardy got forty million dollars, one quarter of her trust fund from her grandmother. For every year they stayed married, it dropped a million, until at the end of the term all he could ever expect to get was one million. \n\nSince her father was trustee until she reached the age of thirty five, and as his lawyer,he would oversee the disbursement. Plus, it was to be paid immediately upon proof of infidelity, regardless of whether they stayed married or divorced. Everyone was shocked.\n\nHer lawyer was almost screaming with protest, so was Hardy. Gwen was numb.\n\nHardy was fuming.\n\n\"I'll not accept this. Why won't you honor my wishes?\"\n\n\"Hardy, will you wed her without my permission?\"\n\nHe had him there, knowing his code of honor.\n\n\"No,sir. I couldn't in good conscience do that.\"\n\n\"Then this is what it's going to take to give you my blessing. You're going to be together forever, this is really a moot point. Just sign the papers and set the date. Do it to please me.\"\n\nHe turned to Gwen. Only she could see his eyes.\n\n\"He thinks I'm going to cheat.\" she thought, \"I hope he lives long enough to see how wrong he was.\"\n\nShe gave her Dad her best smile.\n\n\"I think the whole thing is foolish. I didn't want a prenup anyway. Where do I sign?\"\n\nAgainst the strong advice of her lawyer, the agreement was signed and filed.\n\n................................................\n\nThe wedding was the social event of the season. Nominally Catholic, the service was held in the largest cathedral in town. It was well attended, mostly by business and political allies. The only ones attending from his side was his maternal grandfather and an aunt. His parents were dead, and he never mentioned any siblings.\n\nThe ceremony, the dress, the reception were all beautiful and outrageously expensive. Hardy said something to Greg, her dad, about it, but he just laughed and said it would all be worth it if he didn't have to go through it more than once.\n\nThe only flaw in the marriage was the presence of her mother. She had called and told her of the engagement. She was living in France, with her sixth husband.\n\n\"I'm so happy for you darling! Is he from a good family?\"\n\n\"He's from Alabama, Mom.\"\n\n\"Goody! Old steel money?\"\n\n\"No Mom, he's...\"\n\nShe cut in.\n\n\"let me guess, cotton, shrimp, timber?\"\n\n\"No Mom, he has no money.\"\n\nHer enthusiasm cooled instantly.\n\n\"Oh no, he's not a gold digger, is he?\"\n\n\"No Mom, in fact he wanted to sign a prenup to insure he would never touch my money.\"\n\n\"I always knew you were a smart girl. You must have him trained pretty well.\"\n\n\"Not exactly, but I have gotten him to stop peeing on the rugs.\"\n\n\"What?!\"\n\n\"Just kidding Mom. Are you and Henri coming?\"\n\n\"I'd love to honey, but Henri has me a short leash, and you know how he hates your father.\"\n\n\"Why would he hate Dad? He was five husbands ago.\"\n\n\"I don't know, because of his success, I think, or maybe because when I was tipsy once I let slip he was the best lover I ever had. I'd love to come honey, I just can't afford it right now.\"\n\nShe knew what she was asking.\n\n\"Don't worry, Mom. I'll arrange a first class ticket, and reservations at that five star hotel you like so much. You can even use the amenities, just charge it to the room. We'll go dress shopping when you get here.\"\n\n\"Thank you, my darling. I'll see you soon.\"\n\nShe loved her mother, but she was a terrible parent. When they split, she got custody. She immediately took her out of school and to Europe, promising Greg she would get her first class tutors. They spent ten months touring the continent, and she didn't open the first text book.\n\nShe finally squandered the settlement she got, generous in spite of the prenup, and then thought she could use Gwen to get more. Her Dad played hardball, and won custody. Gwen spent the rest of her teen years being tutored, entered college at the age of sixteen.\n\nShe was the youngest lawyer to enter her Dad's firm.\n\nHer Mom went through husbands and money like there was a never ending supply until she met Henri. He loved her, but was no fool. She had a monthly allowance, and when it was gone she got no more until the next month. Gwen used to slip her money until her Dad found out and hit the roof, threatening to both fire her and cut off the trust fund. After that she was on her own.\n\nGwen had to get permission to pay for her trip.\n\nShe loved her Mom, but as she matured she could only take her in small doses. They did have several shopping adventures while she was there.\n\nIt felt like role reversal on occasion, having to tell her no like a child.\n\nMom didn't like Hardy, at all.\n\n\"Get away from that one, honey. He's too much man for you.\"\n\n\"Mom, why would you say something like that?\"\n\n\"He won't let you control him, and you have enough of me in you to want to. He won't bend much, if at all. Trust me honey, he'll either break your heart, or you'll break his.\"\n\nGwen, of course, laughed off her fears.\n\nSecretly, she was happy to see her go home to France.\n\n..................................................\n\nThe honeymoon was a month long cruise, paid for by her father. The only mar was when she wanted to go on a nude beach. He refused. She called him an old prude but didn't push it. He tried to explain it to her.\n\n\"I'm a little old fashioned, you knew it when we married. What you did before was your business, but you belong to me now, and I want to be the only one to see you. Please understand.\"\n\nPrivately she didn't, but agreed to his wishes.\n\nThey settled into her townhouse. It was paid for, and she loved it. He liked it, but reminded her when the children came along he expected a house with a nice yard.\n\nThings were great for a year. They christened every room in the house several times as a married couple, maintaining a strong sex life, only pausing when she had to travel for business.\n\nHer job as a contract lawyer specializing in international business kept her traveling. At first she cut it back as much as she could, but soon was traveling at least twice a month for several days each time. He went with her when he could, but had his own responsibilities.\n\nWhen she was home, much of her business was done over dinner meetings, and he had to be in court early every day. The home life started to suffer.\n\nThe little things soon magnified in importance.\n\nHe was pushing her to cut back and start thinking about children. He was thirty six, his biological clock was ticking.\n\n\"But I love my job!\" she exclaimed as he talked to her once again.\n\nHe was trying to be reasonable and make his point too. He was a trial lawyer, after all.\n\n\"Honey, I'm not telling you to give it up. You're very good at what you do. I'm sure your Dad and the partners are very pleased. I'm just asking you to cut back a bit, explore other options. Your Dad wants you to get trial experience, you know he's grooming you to take over one day. Why don't you give that a try? We could work together, and spend a lot more time together.\"\n\nHmmm, spend time in stuffy courtrooms with criminals, or take meetings in London, Lisbon, Marrakesh? She would never admit it to Hardy, but she loved her jet set lifestyle.\n\n\"I know honey, and I will, in a year or two. I want to be the best at this first, it's important to me.\"\n\nThis was disconcerting to Hardy, it wasn't what she promised going into the relationship. He didn't press it, a tactical mistake. She thought it implied agreement, she could move when she was ready.\n\nAnother six months went by, and she became more and more distant. He was a runner, had done two marathons in Boston and one in New York. His goal was to finish, not win. She hated that he ran, said it took time away from them.\n\nHe held his tongue, barely. He ran early mornings, and she was not an early riser. Often he would do five miles, shower, and be ready for work before she even woke her up. She was the one who often missed dinners at home, stressing the urgency of business.\n\nGwen became resentful of his friends. He didn't cultivate the power brokers, instead he often spent time with the local police at their gym, working with at risk youth. He knew every cop in a ten block radius, as well as the chief and commissioner, often stopping to chat with the beat cops when he ran. Considering he was a defense lawyer, this was rare. But he was always fair, upfront, and never attacked a cop personally. All he wanted was the truth.\n\nThey liked him before, but when he came up on a patrolman trying to subdue a suspect and saw another angling up behind him with a bat, his military training kicked in and he flattened the guy, his reputation was made. The second suspect was going to sue him, but he was a lawyer and an officer of the court, and the public defender let him know things would go very badly for him if he tried.\n\nBut what really irritated her was his church friends.\n\n...............................................\n\nIt was Sunday morning, Gwen was in London, so he went running, taking a route new to him. It was amazing to him that just twenty five blocks separated the upscale town homes from the projects. Wisely deciding not to tempt fate, he turned and started back. There was a church on the corner, and as he passed he stopped. The doors were open, and he stopped to hear the choir singing.\n\nAn old man was sitting on the steps, smoking.\n\n\"Come on in, son. We always got room for one more.\"\n\nHe declined.\n\n\"Thank you, sir. But as you can see, I'm not dressed for church.\"\n\nHe was dripping with sweat, and his shorts were soaked.\n\n\"Don't make no difference to Him,\" he said pointing up, \"but come another time. We'll always be here, and you'll always be welcome.\"\n\nThe man stood and dusted off his seat.\n\n\"Well, I got a sermon to preach. Hope He forgives me for sneaking a smoke. Everybody thinks I'm composing myself for the sermon. Putting the flock on the road to glory and all that. Ya'll have a blessed day.\"\n\nHardy looked at the church sign out front.\n\n\"Williams Street A.M.E. Zion Church\"\n\nThere was a lot of those in Alabama. A.M.E. stood for African Missionary Expedition, an offshoot of the Methodists, designed to bring the blacks into the fold.\n\nHardy had attended church while in service, and kind of missed it. He asked Gwen once if she ever went to mass, and she just laughed.\n\nThe next Sunday found him standing out front of the church, in a suit.",
        "The same older man greeted him warmly, and escorted him in. There was just a moment of silence as the sea of black faces took his measure, then began coming up to him, shaking his hand and bidding him welcome.\n\nThe service was moving, reminding him of the preachers back home. He went back to see his grandfather about every two months. Gwen had never accompanied him.\n\nHe noticed the choir sang acappella, even though a big B3 Hammond sat prominently off to the right.\n\nHe asked the reverend about it as they shook hands after the service.\n\n\"It's broke, and we ain't got the money to fix it. Even if we did, we got no one to play it.\"\n\nHe changed the subject.\n\n\"I can tell by your voice you're not from around here. Where you from originally?\"\n\n\"I doubt you ever heard of it. Limestone County, Alabama, up on the Tennessee border.\"\n\nThe reverend grinned broadly.\n\n\"Heck, boy, I'm from Franklin County. I thought you sounded familiar.\"\n\nHe paused, frowning.\n\n\"My last church was in Colbert County, there were some Wilkes living there. Any kin?\"\n\n\"Yes preacher, afraid so. And I know you know their reputation, and in my younger days I was as bad as any of them.\"\n\n\"Well son, you seem to have bettered yourself. God does move in mysterious ways.\"\n\nHardy laughed.\n\n\"I don't know if it was God, but a county sheriff, a smart judge, a tough drill instructor, a Jewish Rabbi, and a good pyschologist moved me in the right direction.\"\n\n\"Brother, that's a story I got to hear sometime. Now, would you join my wife and I for lunch?\"\n\nIt was Southern cooking at its' best. There must have been twenty people there, and the good will and fellowship flowed.\n\nGwen attended with him, once.\n\nTwo months later he joined the church. A week after that he had the organ fixed, and surprised the congregation by accompanying the choir.\n\nHe had learned to play while he was in rehab for wounds received in service. Learning an instrument\n\nwas part of his therapy.\n\nGwen thought it was funny until she came home from a trip and found a black teenager in her kitchen. She thought it was a break in until Hardy came out of their home office. He had been tutoring the boy and had taken a break for some drinks. They had to cancel the 911 call and talk to the policemen who came to check, standard policy when 911 is dialed.\n\nShe recovered nicely but gave Hardy hell later.\n\n\"I admire your work, Hardy, but do you have to bring them into my home?\"\n\nHe looked at her with tired eyes.\n\n\"Don't you mean our home? Robbie has a very high IQ, he's motivated and wants to get ahead in life. He just hasn't had a lot of breaks. I'm helping him get ready for his SAT exam. If he does well he's almost guaranteed a scholarship.\"\n\nShe realized her error and tried to make amends.\n\n\"Yes, honey, it is OUR home, and I'm proud of what you're doing. It just caught me by surprise. I'm tired. Take me to bed?\"\n\nHe did, but it felt forced, rehearsed, without any real feeling. Their love life had dwindled, badly.\n\nWhen they first married he would come home, sneak up behind her, and before she knew it have her flipped over the closest piece of furniture available. She would scream and giggle, telling him to stop, while thrusting back with all her might. Six months ago he tried it and she shocked him by breaking loose and giving him a lecture about being crude. She didn't realize it until much later, but it was the last time he ever attempted it.\n\nGwen was working on the biggest merger in the firms' history. Two mega corporations, one in Boston, one in Paris. The intricacies were horrific, and her team, Allan's team, and their Parisian counterparts were working seventy plus hours a week to meet a government imposed deadline. She had been home for two days in three weeks.\n\nThey had dinner with her Dad, and he could tell things were strained. When he tried to lighten the mood by asking if the timeline for grandchildren was still on, things went downhill fast.\n\nHardy was almost emotionless in his answer.\n\n\"You'll have to ask Gwen. We have to actually be on the same continent and in the same bedroom for that to happen.\"\n\nGwen flushed. She knew she had been neglecting him, but damn it, the merger was important. Instead of smoothing it over, she attacked.\n\n\"That's not fair and you know it! I have to work like this to get the merger done on time. A lot of people are depending on us. It'll be over in the next month, then we can go back to our lives.\"\n\nHardy shocked her.\n\n\"Oh. I understand, honey, the needs of the many vs the needs of the few. The firm should always come first. And I'm sure we'll get our lives back, at least until the next big deal comes up. We'll have what, two, maybe three whole days? I guess I should be grateful for what I can get.\"\n\nHer face lost all color. How dare he trivialize what she did?\n\nBefore she could start, Her Dad interrupted.\n\n\"Gwen! Not a word! Anything you say right now will probably be hurtful. You two obviously have issues. Go home, work them out. And Hardy, I resent the implication that I would allow our firm to eclipse your marriage.\" \n\nThey rode home in absolute silence.\n\nThey sat together on the couch later, side by side. They may as well have been on different continents.\n\nHardy apologized.\n\n\"I'm sorry I hurt your feelings. I didn't mean to say anything in front of your Dad, it just came out. But honey, we need to talk. What's happening lately isn't what we agreed on when we married. We've lost the passion, and just to be honest you've acted like you were ashamed of me the last few times we've been out with your friends. If you're out of love with me, tell me and we'll move on. You're too beautiful to be miserable.\"\n\n\"It'll break my heart, but I want you happy.\"\n\nGwen felt like someone had poured a bucket of ice water over her head. Had she been that bad? Looking back, she had to admit she had slighted him several times while out with her friends. Was she ashamed of him? No! He just needed to lighten up a little.\n\nShe started crying and apologized repeatedly. \n\n\"I still love you! Of course I'm proud of you. We WILL start our family soon, just let me get through with this merger, honey. We'll take a trip, reignite our love. Please honey.\"\n\nHe held her and whispered his love to her while she cried. Glad she couldn't see his face, the tears trickling down his cheeks. He wanted to believe her, desperately, but the trial lawyer in him couldn't ignore the facts.\n\nThey went to bed but didn't make love, content to hold each other. The next morning he woke to a warm pleasant sensation, and looked down to see she had hold of his morning erection, and had it halfway down her throat.\n\nHe lay back, enjoying the sensations, it had been a while. When she started being more aggressive, he reached down to pull her up.\n\nShe rammed her mouth all the way down his length, sliding slowly, slowly back up.\n\nShe looked at him with the old lust in her eyes.\n\n\"Oh no, big boy. Today you get to rack up frequent flyer miles. We're going to start in France..\" she paused to take him back into her mouth for a second, \"Then I thought you might want to do a little missionary work, and end our little tour in Greece. It's your turn to go 'round the world.\"\n\nIt was the most intense lovemaking they had ever had.\n\nWhen he finally lost it, she clamped down, not allowing a drop to spill. He grabbed her and told her since he was in France, he was going to stop by the Gates Of Heaven and proceeded to give her two massive orgasms with his tongue and fingers, working both holes at the last. They both lay in blissful silence, before he proceeded with his mission work.\n\nThey rested before the last stop. Gwen actually liked anal when she was in the mood. It was a longer session than she would have liked, but the look on his face made it all worthwhile.\n\nThey cuddled and caressed the rest of the day.\n\nShe went into work Friday beaming. Things were getting back on track. Her good mood evaporated when Lisa told her the boss wanted her ASAP.\n\n\"Damn\" she thought, \"What could Dad want now? This can't be good.\"\n\nShe entered his office, and he came around the desk and sat in a chair beside her.\n\n\"Honey, let me tell you how proud I am of you. This merger is going to make you a star. You'll definitely get a full partnership out of it.\"\n\nShe beamed under his praise. Maybe she was wrong.\n\nHe leaned back tented his fingers and looking at her intently.\n\n\"How's your home life? Truth, now.\"\n\n\"Oh, it's been a little rocky, but we reconnected last night. I'm formally putting in for two weeks of vacation immediately after the merger is complete. We're going away, no cell phones, no deadlines, just us.\"\n\n\"I'm pleased for both of you, you know how I feel about Hardy.\"\n\nHe paused, she wasn't going to like what was coming next.\n\n\"Honey, the other partners and I have come to an agreement. You've peaked in your department. Nothing can top what you've done. We think it's time you moved over to litigation. A year or two of court experience will round you out. This is a good thing. After all, in ten or fifteen years you'll be sitting in this chair. We want you to be competent in all areas. You'll need the experience to make the hard decisions.\"\n\n\"So, finish your project, take some time off with Hardy, and when you return you can look forward to new challenges.\"\n\nIt was liked being slapped in the face. All her hard work, and as a reward she was being transferred to the most onerous department in the firm. Court cases, the kind they handled for rich clients, were often messy, blood letting affairs, involving sex, stupidity, or money, usually a combination of all three. Occasionally one of the clients did something so monumentally idiotic they ended up in criminal court. Then it got really bad. The sheer drudgery of paperwork would drive a normal person insane.\n\nHer Dad knew she was pissed, but deep down he did want grandchildren, and he knew they had no chance of staying together unless they had more time to reconnect.\n\nShe put on her best face, even if he was her dad, he was still the boss.\n\nAfterwards, she slammed her office door, telling her assistant not to disturb her for an hour. Irrationally, she blamed the whole thing on Hardy.\n\n\"He got to my Dad. I bet they spend quality time mapping out my future, probably already determined the number and names of my children.\"\n\nThat night at home, as Hardy tried to kiss her, she turned her head, offering her cheek instead.\n\nHe was confused, things seemed to be back on track. What had he done wrong now?\n\n\"What's wrong, hon, bad day at the office?\"\n\nShe had been brooding all day and lost it.\n\n\"Like you don't know! Scheming with Dad to keep me home, taking my job away. Why did you do that to me?!\"\n\nShe continued to rail at him for ten minutes before he could get a word in.\n\nHardy had no idea what she was talking about. Her Dad had made that decision without him knowing, so he was completely in the dark.\n\nIt took awhile to get the story, and while he sympathized with her, he was becoming irritated.\n\n\"I'm sorry, I didn't know the thought of spending more time at home was so distasteful to you. I had no input in the decision, but I'd be lying if I told you I didn't like it. We made promises, Gwen, established a timeline. Damn it, we talked this to death! I'm starting to think it was all a lie, just another example of a spoiled little rich girl stamping her foot and saying 'I want'. And I was a fool, dumb enough to believe you.\"\n\n\"But you know, deep down, I knew it would come to this. We're just too different. Knowing that, I still hoped it would work, hoped with all my heart, so even though I'm not surprised, I'm still amazed at the pain I feel.\"\n\nAt the end, he was standing over her, the pain and anger blazing from his eyes. She shrank back, afraid of her husband for the first time in her life. When he turned and stalked out the door, she sat there in shock.\n\nTo this day she couldn't tell you how long she sat there in confusion and surprise. Snapping out of it she grabbed her phone and called him. It rang and seemed to echo, before it hit her it was coming from the bedroom.\n\n\"Did he come back in while I was zoned out?\" she thought as she hurried to the bedroom.\n\nOf course he wasn't there, his phone was on his night stand, like it always was when he prepared for bed.\n\nShe called his friends, the ones she knew of, but nobody had seen or heard from him. In desperation, she called her Dad.\n\nWhen he heard the story she could hear his irritation as he talked. Finally he exploded.\n\n\"You need to fix this, and quick. He's a prideful man, child, and you've been cutting him to the core lately. Get your head out of your ass before you lose him. On the other hand, if you want out, end it quickly. Don't make him suffer needlessly. Damn it girl! I knew this would happen. You've got too much of your mother in you. I should have told him no when he asked for your hand.\"\n\nGwen reeled under his attack, did he really think so little of her? She ended the call by telling him if he heard from him, please tell him to come home, or at least call.\n\n\"And Daddy, make sure you tell him I said please, that I'm sorry, and most of all that I love him.\"\n\nShe finally fell into an exhausted sleep around two. \n\nAt noon she called the local precinct to report him missing. Maybe the police could find him. She talked to an Officer Malone.\n\n\"Hardy is missing? How long?\"\n\nShe was surprised he used his first name, but then again, he seemed on a first name basis with the entire police force.\n\n\"Since seven last night. Can you help me?\"\n\n\"Officially, we can't do anything for twenty four hours. Tell me, did you two have a little spat last night?\"\n\n\"Well, we did have a misunderstanding, but I...\"\n\n\"There you go, my lass, he's probably off cooling down. If he's not home by tomorrow morning, call and ask for me. You don't remember me, but we met once. I'm sure he won't stay away from such a beauty as you for long. And, unofficially, of course, I'll check around today. If I find him, I'll give him a little nudge. Stop worrying, he'll most likely be home shortly.\"\n\nShe thanked him profusely, the deep baritone Boston Irish accented voice was comforting.\n\n.................................................\n\nOfficer Malone put the word out, and soon found him at an uptown hotel.\n\nHardy was surprised when he opened the door.\n\n\"Tommy, what brings you out of your precinct? Is everything all right?\"\n\n\"No, me prideful, stubborn boy, things are definitely not all right. Your lovely bride reported you missing. You should have heard her, it sounded like she was about to collapse any second.\"\n\n\"It's not my business, but I've become fond of you. If you hadn't been there that day my youngest may not be here now. So as a friend, do us all a favor and go home. If her dad decides to throw his weight around it could get uncomfortable for everyone.\"\n\nHardy frowned. He had been thinking about going home, but the stubborn streak he had been trying to hold in check for years had been loosed by all this, and was not to be denied.\n\n\"So, the rich bitch gets Bostons' finest to do her dirty work now. Tell me Tommy, how did she pay you, offer to make a donation to one of your causes?\"\n\nTommy literally reeled under the attack. By the end Hardy was standing directly in front of him, dwarfing his five nine with his six three. And the eyes! He had never seen eyes like that before. Training kicked in and he stepped back, touching his weapon. \n\n\"Jeez! Calm down Hardy. She didn't do anything but try to file a missing person report. I came on my own because I thought you were my friend and I wanted to help you. Sorry, it's not my business. I'll leave you alone.\"\n\nHe was backing out of the suite as he was speaking, never taking his gaze of the eyes.\n\nHardy seemed to deflate like a balloon.\n\n\"I'm sorry Tommy. I didn't mean to be so rude. And I appreciate the effort, really. But there's a lot more to this than you know.\"\n\n\"Do me a favor, tell my wife I agree to talk. I should be calm enough by tomorrow, I'll be home by one. We'll talk then.\"\n\n\"And Tommy, thank you, it's good to know you got friends.\"\n\n\"Don't mention it. I expect to see you Thursday, basketball tryouts at the gym. I think we're gonna give you the girls this year.\"\n\nIt was the first time that day he saw him smile.\n\n\"Great! I can't handle one Yankee gal, and you want to turn a bunch of twelve and thirteen year old girls loose on me. Thank you so much.\"\n\nTommy grinned back.\n\n\"Don't worry too much, by the second day they'll all be in love with you. Then they'd kill for you if you told them to. Good luck, old son.\"\n\nAs he walked away he fingered the rosary in his pocket and said a little prayer for him. It couldn't hurt.\n\n................................................\n\nGwen had not been idle. After the shock wore off her skills surged to the forefront and she started making calls. She called Crystal Anne, she just laughed and hung up. Damn, it had been only ten days since their little talk. God, she hoped she didn't spill the beans about her slip with Allan.\n\nIt had been a tense week, working with Allan again. She repeated their previous conversation. She really liked him, but it had been a mistake, never to be repeated. He kept hinting, so she started avoiding him, speaking only when business required it. Thank goodness they only needed one more week to conclude the deal for their clients.\n\nHe was nice to her, didn't want to scare her again, but deep down he was pissed. Still, patience was a good thing when it came to closing the deal, and he was a master.\n\nWord got back to him soon about her situation, he was paying[and banging] her P.A.\n\nHe called her that night before Officer Malone got back to her. He was careful in his wording, trying to show compassion while undermining Hardy more.\n\n\"I'm sure he'll be back soon. He just not, well, not as sophisticated as we are. He doesn't understand our world, he's too simple. As soon as he cools down and starts thinking about all that money, and your beauty of course, he'll come crawling back.\"\n\nHe'd been doing this for months, damning him with faint praise, stressing his humble background, his lack of sophistication, his slavish devotion to what he called the broke losers, his pro bono clients, his inability to loosen up. And planting small doubts in her head about whether it was her or the lifestyle he wanted.\n\nHe had even talked her into going to a nude beach while they were in France, allowing the exhibitionist tendencies she had since she was eighteen to run loose. Then he sympathized with her for marrying a prude.\n\nHer insecurities were in the forefront, she never thought in a million years he'd walk out on her.\n\nThe phone call from Malone gave her hope and comfort. And she actually listened to his advice.\n\n\"I don't know what happened, don't want to know, but he's hurt bad, I could see it plain as day.\n\nYour fault, his fault, doesn't matter. What matters is you need to talk it out. Be honest, be loving, be upfront when he asks you something. You're both lawyers, you need to forget about your training, and just talk. Oh, and if it works out like I think it will, Thomas Francis is a good name for a boy.\"\n\nShe actually laughed for the first time in two days, and promised to run it by Hardy.\n\nThanking him profusely, she hung up.\n\nShe laid out her most elegant nightgown, she wanted to be sexy but conservative. His favorite perfume followed, and a silk robe. She wanted to be dressed but instantly available. And she prayed for the first time in forever, that she not screw this up. Satisfied, she had a light dinner, called her dad and said she thought all would be right by tomorrow night, drank enough scotch to make her drowsy, and slept.",
        ".................................................\n\nAllan sat, planned, brooded. Her P.A. had just left, after sharing a text that Gwen had sent.\n\n\"One o'clock. I need to be there at eleven. If I work this right, he'll be gone by one fifteen, forever, and I'll catch her on the rebound. A little consoling, a little petting, and I'm back in the saddle.\"\n\nAt ten thirty he was at her door.\n\nShe answered on the first ring, expecting someone else, no doubt. She was stunning, the gown was gorgeous, her hair was perfect. She was going all out.\n\n\"Allan! What are you doing here?\"\n\n\"I thought I'd stop by, see if Hardy was still in the wind. You know, give some comfort, try to cheer you up.\"\n\n\"Thanks, but he'll be here soon. I believe we're going to be all right.\"\n\n\"That's great!\" he said with false enthusiasm, \"I brought a bottle of champagne to comfort you, let's use it to celebrate instead.\"\n\n\"I don't know, Allan. Hardy might not understand if he shows up early and sees you.\"\n\n\"He doesn't know about Paris, does he?\"\n\n\"No, I told you it was a mistake. Please don't bring that up anymore.\"\n\n\"My lips are sealed babe. How about a quick mimosa, and then I'll be gone. I'll be the first to congratulate you. It would be a shame to waste this bottle.\"\n\nGwen loved champagne, one of her weaknesses. This was a particularly good vintage, nearly impossible to acquire. He practically sold the shell of his soul to get it.\n\n\"Well, maybe one. Then you have to go. You're a real friend Allan, thanks.\"\n\nHe hugged her as the door closed.\n\nBy eleven, she was starting to feel the effects of the drug cocktail he had fed her in the champagne. Coke, x, a few more things his dealer said would start her motor.\n\nShe was leaned against his shoulder, barely able to speak.\n\n\"Come on baby, time to go to the bedroom.\"\n\n.................................................\n\nHardy barely slept. He missed Gwen terribly. The fact that she missed him enough to search for him felt good. Maybe, just maybe, things were finally working out.\n\nHe stopped by the church on the way home. He hoped the reverend could give him some advice.\n\nThey talked for an hour. The reverend took counseling courses from time to time, a requirement in his trade. The church approved, in fact many were certified. Keeping the flock on the right path included keeping couples together.\n\nDeep down, he had his doubts about Hardy and Gwen.\n\nHe was willing, but he wasn't sure about her. He really didn't understand rich people very well.\n\n\"Hardy, one of the truisms of counseling is the maxim 'Am I better off with her, or without her?'\n\nI've prayed for you both since yesterday. I can't make your decision. Does she make you happy? Do you make her happy? Can you find middle ground and make each other a promise to rekindle your passion for each other?\"\n\nTears glistened. \"I can't see me without her. I don't want to.\"\n\n\"Then what are you waiting for? Go home to your wife. Love each other. I'll ask the big man to excuse you from services today. I'm sure He'll understand.\"\n\nHe offered his hand. Hardy shook it.\n\n\"Thank you, reverend. I'm not supposed to be there for another hour or so, but I'm going right now.\"\n\nHe didn't run out of the church, but it was a very fast walk.\n\nHe was home by eleven twenty. not seeing her he thought she may be out, or still sleeping. He walked quietly to the bedroom, if she was asleep, he would let her rest, maybe even slip into be with her.\n\nHe started to ease the door open, when the noise of someone having sex hit his ears.\n\nNo, no, this isn't right. No one should be in the bedroom but her. Never a timid man he threw the door the rest of the way open, making a bang and punching a hole in the drywall with the knob.\n\nWhat he saw destroyed years of work, training, counseling, and hopes. All his hard work, all the work of friends through the years to change him into a better man, slipped off him like a layer of cheap veneer left out in the rain. He reverted to the rough and vicious man-child of his youth, instantly.\n\nAllan was lost in lust, ignoring the soft punches and protests. He was gonna bang the bitch good and leave her, open and dripping, for her husband. That should run Little Abner back to Alabama, then she would be his.\n\nHe froze for a second when the door flew open, then grinned. This was even better. When he was done he'd kick his ass for good measure.\n\nHe looked over his shoulder.\n\n\"Come on in here, boy. Watch what a rea...\"\n\nThat would be the last coherent word he spoke for ten weeks.\n\nEven through the drug induced fog, she thought the scream sounded like the howl of an enraged animal.\n\nAllan may have been a black belt, but when you're buzzed and balls deep in a woman, your defensive options are limited. Hardy grabbed the long hair and dragged him backwards off Gwen and the bed. Allan had to wear a neck brace for two months.\n\nHardy still had him by the hair, and was punching him before he fell off the bed. In the end, he had a broken nose, broken jaw[in two places]seven teeth knocked out, four broken ribs and a broken arm. Both eyes were blacked and he had a split ear. Oddly, he never once kicked him in the crotch.\n\nGwen had come to her senses a bit, and screamed, trying to get Hardy to stop.\n\nHe didn't hear her, and when she pulled his arm, he thought he was being attacked and reacted, driven by rage, backhanding her.\n\nIt split her lip so badly they had to put in six stitches, and she later had to have an implant to replace the molar she had apparently swallowed. She was out cold before she hit the headboard.\n\nHardy had a flash of reason when he saw her bounce off the headboard, and stopped. The only sound in the room was his harsh breathing and the moans of his victims.\n\nStill wild eyed and irrational, he went to check on her. Satisfied she was breathing, he happened to catch sight of the three pack of superglue he had bought to try and repair a small vase she had broken.\n\nThe vase was the only thing he had left from his mother, and he kept it on his nightstand. She had come in tipsy one night and managed to knock onto the hard wood floor, breaking it into several pieces. He hadn't said anything, just cleaned it up and saved the pieces.\n\nHe put the glue in his pocket, grabbed her by the hair and dragged her onto the floor. With his other hand, he grabbed his hair as well, and dragged them both through the house, as if they were feathers..\n\nTheir town house was on the ground floor, with a small patio in front, just big enough for a table and two chairs. It was raised off the sidewalk by about two feet and guarded by a short, wrought iron fence. Hardy sat there a lot in the temperate months, exchanging greetings with neighbors and reading the paper. Gwen hardly ever used it.\n\nNot having a spare hand, still running on pure adrenalin and rage, he kicked the front door pretty much off it's hinges, and dragged them onto the patio. Luckily they were both still out cold, but they could add sore scalps to their aches and pains when they awoke.\n\nPropping them side by side against the back fence, he pulled their hair through the fencing and tied it in a knot. Then he squirted a whole tube of superglue in it. He used another tube to glue her hand to his cock, and the last to hold his hand on her breast.\n\nTurning, he stalked off down the street. People were out, but no one offered to stop him, although they stared at the couple on the patio.\n\nReason was starting to return, and he pulled out his cellphone out and dialed 911. He didn't identify himself, just reported a domestic disturbance with injuries and gave his address.\n\nIn another nine blocks he was at the local precinct. The first person he saw was Tommy.\n\nHey, Hardy! How did your talk go? have you kissed and made up yet?\"\n\nHe didn't say anything, and Tommy, true to almost three decades of police training, took in the anguished look on his face, his bloody hands and clothes, and the slump in his posture. Softly he asked \"What happened, old son?\"\n\n\"It's bad Tommy, real bad. I caught her in bed with the guy she works with. I lost it, and hurt them both, I don't know how much. I am officially turning myself in.\"\n\nTommy couldn't believe it, he had never even heard Hardy raise his voice in anger. All in all, he was the most controlled person he had ever met.\n\nBy then his radio was crackling, reports and the urgent request for an ambulance. Tommy made a snap decision, based on his friendship and the fact that he saved his youngest son from a lot of pain and possible death when he subdued the guy with the bat.\n\n\"Stop! Don't say another word! Get in the car.\"\n\nHe opened the back door and Hardy slid in without a word. He wasn't arresting him, yet. He just wanted him where he could control him and keep him from leaving. He flipped open his cell phone and called his captain, who called the chief, who called the commissioner. This could be really bad, publicly for the police and his father in law, and privately for Hardy. Tommy listened to his orders and hung up.\n\nHe got in the car and started across town. Hardy noticed and asked why they were driving away. Tommy reminded him sharply to stop talking, he figured it was because he hadn't been read his rights.\n\nWhen they went through the gates of his father in laws' mansion, his head shot up.\n\n\"What are we doing here?\"\n\n\"Not another word, old son, I'll be back in a minute.\"\n\nLeaving Hardy trapped in the car, he rang the bell and told the housekeeper to get her boss, it was urgent police business. Greg came to the door, puzzled.\n\n\"Mr. Canaday, a private word, please.\" Tommy looked pointedly at the housekeeper.\n\n\"Come in, we'll go to my office.\"\n\nOnce settled, he came right to the point.\n\n\"What can I do for you, officer... Malone?\"\n\n\"Sir, you don't know me, I'm from the twenty first, Your daughter and son in law live there.\"\n\nGreg was instantly alarmed.\n\n\"Has anything happened to my family?\"\n\n\"Are you aware that were having...difficulties?\"\n\nYes, my daughter called me. I expect they'll patch things up.\"\n\nTommy sighed.\n\n\"I don't think so.\"\n\nHe proceeded to tell him the events of the day. In constant contact with his captain, he learned that she had minor injuries, and was already in a private room. The man wasn't so lucky, multiple broken bones and a concussion, but his life wasn't in danger. He didn't give details of the way he had left them.\n\nGreg went pale. Then he squared his shoulders and went into lawyer mode.\n\n\"Where's Hardy? I need to get there, I'm his lawyer of record. First I need to see my daughter, make sure she really is okay. Have you read him his rights? Has he been questioned?\"\n\n\"No to both. He hasn't been charged yet, so there was no need. As to where we're holding him, he's outside in the car. The chief wants you to call him before we proceed. I'm at your disposal until then.\"\n\nGreg had the housekeeper take Tommy into the kitchen for some coffee, and started making calls. The chief agreed to place Hardy in his custody, unofficially, until charges could be filed. He also agreed to give him Officer Malone for a few days, calling it detached duty.\n\nHe went into the kitchen, drawing Malone off to the side and handing him some keys and papers.\n\n\"Officer Malone, these are keys to my cottage on Cape Cod, and directions on how to get there. These are the keys to my Lincoln, someone will pick up your patrol car shortly. Call the commissioner, he'll explain.\"\n\n\"Keep Hardy there until we call, if you have to handcuff him to the bed. Now, I need to go with you to talk to Hardy. Wait just out of earshot, client lawyer privilege, you understand.\"\n\nThey walked to the front of the house. Just before they went out he put his hand on Malone's arm.\n\n\"I can't thank you enough, but tell me why? Why would you help him like this?\"\n\n\"Mr. Canaday, he's one of the good ones. He does his job, doesn't cut us slack, but never makes it personal. A lot of defense lawyers win cases by smearing cops, but not Hardy.\"\n\n\"Also, he's a good man. He helps out with the police youth league, with money, but more importantly time. Most lawyers give lip service and a check, Hardy is right there with us. If he ever has kids, he'll be a great Dad. He can get them to listen and behave, because he respects them and expects it in return.\"\n\n\"But I helped him for two more reasons. Last year my youngest son was a rookie patrolman, working the projects. He made a rookie mistake, thought he had the crowd controlled and was cuffing a suspect. The suspect's partner was about to bean him with a bat when Hardy came by on one of his runs. He subdued the guy, my son would have been blindsided. He could have been hurt bad, even killed.'\n\n\"Another reason is you and I are related, very distantly. My grandmother was a Kennedy. Not THOSE Kennedys, but again, distant relatives.\n\nMy aunt researched our ancestry as a hobby. Did you know that when our ancestors came over from Ireland, the clerks at Ellis Island weren't the sharpest government employees around? Some of them could barely spell. Some of our people were processed as Kennedy, some as Canaday, but they were all the same clan. Just like you're a fifth generation lawyer, I'm a fifth generation cop. Our families have been intertwined for over a hundred years. And I was taught from the cradle you always took care of family.\"\n\nGreg was overwhelmed. He thought his family had been dying out for generations.\n\nHe extended his hand and Malone shook it.\n\n\"Thank you, cousin. Know that as long as my firm survives, your family will never pay another fee to a lawyer. Family has to stand together. Now, excuse me while I talk to my idiot son in law.\"\n\nHe opened the car door.\n\n\"Out!\"\n\nHardy got reluctantly out of the car, not looking him in the eye.\n\nGreg started immediately.\n\n\"Malone filled me in. It was a horrible thing done to you, and I can understand your rage against the guy on some level, even if I can't condone what you did. But Gwen, was that necessary? You could have just walked away.\"\n\nHardy told him the whole story, making sure he knew he only hit her once, by accident. He was sorry about her, and knowing how much he hated abusers, was deeply ashamed. But he surprised Greg by what he said next.\n\n\"She probably saved Allan's life. I had every intention of beating him to death. If she hadn't distracted me, I would have. And I'm sorry, but only that I didn't get a chance to finish the job.\"\n\nGreg realized as he looked at him he didn't know who he was anymore. It was like someone flipped a switch, and he had transformed into something different, alien, evil perhaps. And his eyes, usually bright and flashing with good humor, had all the warmth of a bar of steel. They looked soulless, barren.\n\n\"I have to go to the hospital. You've been released into my custody, and as your lawyer and boss I'm ordering you to go with Officer Malone. Do not talk to anyone, you understand, not a soul.\n\nYour word on this, Hardy.\"\n\nHe agreed, and Greg watched as the Lincoln pulled out of the driveway.\n\n.................................................\n\nGreg had them both transferred to a private hospital. \n\nGwen looked awful, her lip and the side of her face swelled enormously, the lip bristling with stitches. Plus, she was mildly concussed. The doctors assured him in a couple of weeks she would be back to normal. She was only semiconscious, but in a moment of clarity she recognized her Dad, and she held out her hands. He held her until she went back to sleep. His shirt was soaked, and she murmured \"sorry\" over and over.\n\nHe was shocked when he saw Allan, trying to reconcile his image of Hardy to the man capable of doing this. The face was swelled beyond recognition, his jaw was wired, and he had tubes and bandages sticking out of his face.\n\nWhat shocked him most of all was that both Gwen and Allan had almost shaved heads. He thought it was due to the medical treatment. \n\nWhen he read the police report, he was so stunned he had to lie down.\n\n.................................................\n\nIt was one of the most uncomfortable meetings he ever had.\n\nA month had passed. Gwen was presentable again, except for the small scars on her lip. Her hair had grown out, and she had it in a modest bob. The hairstyle and her quiet demeanor made her appear older.\n\nShe had come back to her fathers' house after she was released from the hospital, on medical leave from the firm, hardly ever leaving her room. Greg finally insisted on counseling, she had gone twice so it was too early to tell if it was doing any good.\n\nAllan still looked like shit, his face a mottled color of healing bruises. His jaw was wired shut, would be for a few more weeks, and his buzz cut made him look totally different.\n\nTrying to keep the disgust out of his voice, he spoke.\n\n\"All right, you two, here's what going to happen.\n\nWe'll start with you, Allan. Here are your options.\"\n\n\"One. I'll allow you to resign, and you won't be getting a recommendation. If you do this, I'll pay for your reconstructive surgery and give you two hundred thousand. You will relocate, west of the Mississippi. I hear California has excellent plastic surgeons. You will sign a paper releasing Hardy of any further responsibility of your medical bills. I've already paid them anyway. You will refuse to press charges for the assault, go away, and never contact him, my daughter, or this firm again.\"\n\nAllan was already shaking his head no, visions of a multimillion dollar lawsuit in his eyes. Plus, he really wanted to stick it to the redneck asshole.\n\nGreg eyed him for a minute.\n\n\"All right, option two. I'll have you arrested for sexually assaulting my daughter and drug charges. Yours were the only fingerprints on the champagne bottle. You have any idea how popular pretty boy lawyers are in jail? You'll be married to Bubba in less than a week, I'll make sure of it.\" \n\n\"You'll be disbarred, even if you beat the assault charge, because of the drug angle. Gwen has already agreed to testify. You'll most likely have a felony record, and minimum wage will be your future.\"\n\n\"As a bonus, the Boston P.D. has a real hardon for you right now. Shouldn't have been such a jerk when you were doing defense work. If you're one mile over the speed limit, you'll get a ticket. If you fart in public, they'll cite you for breaking the noise ordinance. Have one drink in a bar, and you'll get a drunk and disorderly charge. They know your fondness for drugs, they'll probably search your home, your car, your body, including full cavity searches, on a regular basis. All I have to do is call the commissioner and say \"go\". All told, sunny California looks like your best option.\n\n\"In other words, I'll use all my wealth and the connections I have to make your existence as miserable as possible, and I'll do it with a smile. Shouldn't have messed with my family, ASSHOLE!\"\n\nHe picked up the phone.\n\n\"So shake your head yes right this minute, you miserable motherfucker, or the games begin.\"\n\nAllan was trapped, and knew it. He was actually crying when he shook his head yes. Greg smiled for the first time.\n\n\"Good. Now before you leave, I think my daughter wants to say something to you. When she's done, I expect to hear you're on a plane within twenty four hours, heading West. Go past that and I start making calls.\"\n\nGwen rose and stood before him. He wouldn't raise his head. She grabbed him by his split ear. He would have screamed if he could have opened his mouth.\n\n\"Look at me, you miserable cocksucker. I lost the man I loved over you. I've always meant to tell you, without the drugs in me your lovemaking skills suck. I hope you have a long miserable life, and all the shit you've pulled come back to bite you on the ass.\"\n\nShe let go of the ear and slapped him hard. He almost passed out from the pain. He practically crawled out of the office. The paperwork, including the check, was waiting for him at the security desk.",
        "After he was gone they sat in silence for a bit. Greg had his head in his hands. \n\nGwen couldn't stand the silence, she had heard more than enough of that the past few weeks. \n\n\"Thank you, Daddy. Now will you please get Hardy to talk to me?\"\n\nIt broke his heart to tell her, but she needed to know.\n\n\"Gwen, he's gone. He went back to Alabama three weeks ago. He's not coming back. It was all I could do to get him to stay with the firm.\"\n\nTears sprang instantly from her eyes. She tried to speak but couldn't for the sobs.\n\n\"I'm sorry, baby, it gets worse. He filed for divorce before he left. I tried to talk him out of it, then tried to get him to change the reason. He filed on grounds of adultery.\"\n\nGwen fainted. Greg sent her home and called a doctor. He sedated her and told him to keep an eye on her for the next few days.\n\nAnother three weeks passed. He was sitting with her in the dining room. She hadn't said much the whole time except to ask him to get the best divorce lawyer available for her, she was going to fight the divorce. He refused.\n\nShe had gotten shrill and abusive. He was at his wits' end. The spoiled princess was out in full force.\n\n\"Gwen, I want you to listen to me. I've been thinking about this a lot. I'm partially to blame for this mess, me and your mother. Your mother gave you everything you wanted and taught you how to be manipulative. I was a single dad and you were my princess, so I spoiled you too, though not as much. Because of your upbringing and wealth, you have a disproportionate sense of entitlement. I'm going to give you a lesson in reality.\"\n\n\"Are you listening to me?\"\n\nShe nodded, not really paying attention, wondering why the divorce attorney she contacted hadn't set a meeting yet.\n\n\"Gwen! Look at me! You have no idea what your escapades have cost me. I'll be paying back favors for years, not even mentioning the money.\"\n\n\"But I managed to keep Hardy out of jail and to retain his license. It was touch and go for awhile. When Allan refused to press charges, a young assistant D.A. trying to make a name for himself decided to press anyway on behalf of the city. Know what it's like to destroy someone? I was going to, but cooler heads won out. The commissioner, the State Attorney General, and the lt. governor convinced him it wasn't a good idea.\"\n\n\"I've decided it's time for some tough love. I'm going to force you to grow up and learn how the real world operates. I'm sorry honey, but you no longer work for the firm. The scandal was just costing us too much. Clients don't like representation that can't keep its' own house in order. So you're gone, I don't have a choice.\"\n\nHer mouth was hanging open. What had he just said?\n\n\"It gets worse Gwen. You've been funneling most of your salary into stock options, keeping about a fourth in checking. You've always had your trust fund and I've always let you draw off it when you wanted something.\"\n\n\"Effective today, you may no longer draw off your trust fund. Your stock options are locked in, you can't cash them out. Your grandmother was pretty smart. There was a section in the trust agreement concerning morality. Should you show weak moral judgement before the trust fund is executed, the trustee can delay the release for years, up to your fiftieth birthday. Your grandmother was a smart old lady, and was afraid you would take after your mother. Don't even think about the townhouse, it's owned by the trust.\"\n\n\"So, you're jobless, homeless, and pretty much broke. Here's what's going to happen. You can refuse of course, but you'll find it hard to find a job anywhere on the east coast. And yes, I blackballed you.\"\n\n\"If you accept what I offer you and behave, in a year you can come back into the firm. By then someone else will have done something stupid enough to eclipse you. I'll even pay for a good therapist if you can find one where you're going.\"\n\nHe handed her some paperwork.\n\n\"Congratulations, you are now officially the newest A.D.A. of Franklin County,Alabama. You start next week. Your annual salary is $38,000 a year. I,m a college friend of the District Attorney, and he did me a favor.\"\n\n\"I've done you a favor, gotten you a nice apartment. I took care of the security deposits, but you'll have to pay the rent out of your salary. You can't take your Lexus, it's leased by the firm, remember? I did lease you a nice Ford Focus, they're supposed to be fun little cars. Again, I took care of the deposits, but you have to make the monthly lease payments. You're also responsible for your own phone and utility bills.\"\n\n\"The only condition my old friend put on your employment is a once a month drug test. It'll be discreet, no one will see the results but him. I guess someone told him about your recent problem. Fail once, and you're out of a job, and I won't come to your rescue.\"\n\n\"Do this, stay straight, do a good job, prove you're a responsible adult and can take care of yourself, and I'll welcome you home with open arms. Fail, and you better hope they've got openings for junior associates in Iowa or North Dakota.\"\n\n\"Oh, and you're not flying. You can't afford it. You'll be going on Amtrak. You're only allowed three bags, so pack carefully.\"\n\n\"You can of course refuse, but if you do, be out by tomorrow, or I'll have you removed. I mean it.\"\n\nHe got up from the table, leaving her in shock. He turned just before he went out of the room.\n\n\"One more thing. Hardy is there, running an office for me two counties over. You shouldn't cross paths professionally, but if you do, behave.\n\nOh, something else I forgot. You'll be practicing under your maiden name. Hardy has it in the divorce papers you have to give up his name, so you might as well get used to it.\"\n\nHe left her there, tears of hopelessness and despair running down her cheeks. "
    ],
    "authorname": "qhml1",
    "tags": [],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/boston-to-birmingham-ch-01"
}