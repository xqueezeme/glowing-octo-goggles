{
    "title": "Midnight City Ch. 01",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 1 - Prologue \n\nSunday, November 13th. Dr. Laura Fredricson was catching up on grading tests and other paperwork. Her office was back to normal now. She'd had the already-excellent security upgraded even further, with her husband's help. She wondered if even the CIA's best technology gurus could break through it. She hoped she didn't have to find out.\n\nSpeaking of her husband, he was at The Cabin with Carole and Jim, as well as Molly, Ross, Ian, and Cindy... which gave her, Laura, that chance to catch up on work. She began wondering if Don had come to any conclusions about the break-ins. She remembered how his gray eyes had looked when he looked around after they'd gotten back from the Lake... as if he was already a step ahead of the Campus Police and everyone else. But he had not said anything.\n\nThere was a knock on the door, which surprised Laura. She called out \"Come in!\" and the door opened to reveal the gorgeous porn star Callie Carrington. Her light blonde hair was made up in a perfect style to accent her beautiful face, her lips were full and inviting, and shimmering with the clear gloss Callie had applied to them, and Callie's blue eyes were sparkling as always. Her perfect body was covered by a white sweater that strained to constrain her breasts, extremely tight blue jeans that looked like they'd split apart at the deep crack of Callie's magnificent ass. Callie's white western-style boots encased the blue jeans.\n\n\"Hi Callie, I didn't expect to see you today.\" Laura said, though smiling at the sight of the beautiful young woman.\n\n\"I'm sorry for barging in on you, Dr. Fredricson,\" said Callie happily, anything but sorry, \"but I'm going to the City this week, and I wondered if you knew of any girls I should recruit into my Film Company.\"\n\nBy that, Callie meant her pornographic films company, which featured romantic and softer films, and was popular with women and with husbands who watched with their wives as couples.\n\n\"I've got a couple of names.\" Laura said. \"One of them is one of my students here at the University, so she may turn you down. Her name is Tiffany Barclay, and her stage name is 'Betty Lamarr'.\" Laura showed Callie her file on Tiffany, who was a pretty redhead with a slender body.\n\n\"Oh, she's cute!\" Callie said. \"But she's one of your students?\"\n\n\"Yes.\" Laura said. \"She's majoring in psychology, with an emphasis on sexual studies. I haven't seen a girl as addicted to sex since Karen Warner blasted through campus.\"\n\n\"And who else?\" Callie said.\n\n\"There's a woman that works in a nightclub over in the City.\" Laura said. \"Does live sex shows on stage with men or other women. Her name, her stage name anyway, is 'Norelle Black'. Beautiful woman, about 28, raven black hair, incredible body.\"\n\n\"Sounds like you, Doctor.\" Callie said with a grin, her eyes sparkling. Laura smiled.\n\n\"This woman is hotter, but she's known to be somewhat weird. Kind of keeps to herself, which is not easy to do in the adult industry. Rita from 'Lashes & Lace' introduced her to me at Rita's clubs, and we had a good talk.\"\n\n\"And more, I hope.\" Callie said. Then she looked at the woman's photo. \"Wow, she looks like the type of woman that would come into a private eye's office and start trouble. Okay, I'll look her up, too.\"\n\n\"Speaking of private eyes,\" Laura said, \"How are things with Eddy the Bounty Hunter?\"\n\nCallie smiled briefly. \"Oh, I haven't seen him in weeks. He got onto this big case, or so he says. And that's okay. He was a pretty good fuck, but beyond that he's not that great a guy. But maybe I'm spoiled... because of the Iron Crowbar. I think you're the luckiest woman on the planet to have that hunk of a man in your bed every night.\"\n\n\"Don't I know it.\" Laura said, smiling at the thought of her husband Don. \"I get wet every time I think of him, every time I see him...\" After a moment of thought, Laura said, \"If you have some time, Callie, let's go into the little bedroom in my clinic...\"\n\n* * * * * * * * * * * * * * * *\n\n\"I can't believe the legendary Iron Crowbar so happily changes diapers.\"\n\nThe sentence was uttered by one Cindy Ross, speaking to her sister Molly at The Cabin. Molly burst out laughing.\n\n\"He really wants to be close to the boys.\" Molly said. \"And I'm glad for that.\"\n\n\"You ever thought about dating someone else?\" Cindy said. \"Not that I'm saying you should, but while Don does do right by the kids, it can't be the same thing as a full relationship.\"\n\nMolly nodded. \"No... meaning I've thought about it and am not really interested. I had such a bad marriage that this arrangement actually works well for me. Don's not too far away; Laura is a great friend and 'sister wife', so to speak; I get to see you as often as I see Don. But speaking of relationships... have you talked to Jenna since the election?\"\n\nCindy sat back on the sofa and looked out the window, seeing the Town and noticing the light of a train as it came out of the western horizon. \"No.\" she said. \"I've called a couple of times, left messages, but she hasn't called back. I'm not going to push it, and I'm not going to chase after her.\"\n\n\"Hmmm,\" said Molly, \"someone else in your picture?\"\n\nCindy smiled briefly. \"Technically, no. But Callie Carrington, the porn star, stays at my place when she's in Town. She's in Town right now. And I could definitely get used to her presence around here. But... she's busy, she's in and out of California, and our lives just aren't matched up right now.\"\n\nMolly nodded, not probing that any further. \"So, what about Police business? How are things going there? I know I haven't heard much from 'Coldiron' about any drug issues.\"\n\n\"With the not-so-good Pastor Westboro dead and buried, Robert Brownlee and Leonard Sharples rotting in prison, and the Criminal World scared to death of my Police partner, and rightly so... it's been pretty peaceful around here. And that is not a complaint.\"\n\nJust then they heard Bowser coming down the stairs, then saw him run into the room. Looking back, Cindy saw the dog's owner, Carole, coming down the stairs, followed by Carole's father.\n\n\"Okay,\" I said, \"Ian is fed, watered, diaper-changed, and put down for his nap. Ross and Jim fell asleep while playing, and I put a blanket on them. Carole here is being the fussbudget she normally is.\" \n\nI had picked up Carole and now handed her to Molly as I said \"Cindy, I just got a call from Jack Muscone. He wants us to come over to the City. I don't know what it's about. If you'll grab your suitcase, I'll call Laura and tell her. Sorry about this, Molly.\"\n\n\"Oh, that's okay.\" Molly said. \"I'll just keep Carole and Bowser company.\"\n\n\"Bowser is MY dog!\" proclaimed Carole, who was not in a good mood.\n\n\"Are you being a 'Grumpy Cat', Carole?\" I asked sternly. My daughter looked up at me, knowing I was not pleased with her attitude. \"You can let Molly help you play with Bowser, can't you?\"\n\n\"Yes sirrr.\" Carole said sullenly.\n\nPart 2 - City By Day \n\nWe were dressed in civilian clothes and we were riding in style in the Black Beauty. As Cindy drove the gleaming dark green car, she discussed the upgrades, which included small machine guns in the door panels that could fire backwards if the doors were opened and the trigger buttons pressed. Better radar equipment. And rockets. Very cool stuff.\n\nGetting to the City, we headed to the Federal Building, and to the FBI offices there. We were escorted into a conference room, which held the DepDirector, FBI Special Agent in Charge Jack Muscone, Special Agent in Charge Clark Webster, Special Agent Sandra Speer, Special Agent Lindy Linares... and SBI Inspector Britt Maxwell. The raven-haired beauty was looking very stunning, her blue eyes twinkling as they always did. I noticed Cindy had as positive a reaction to the lovely Britt as I did. I also noticed Sandra and Lindy looking at me, and I made sure to give meaningfully flirtatious them looks as I greeted them.\n\nOnce we were seated and given bottled waters, the DepDirector indicated to Jack Muscone to start the meeting.\n\n\"Nash and Escobar are on another mission right now---\" Muscone began.\n\n\"Lake Amengi-Nunagen is really nice this time of year. The leaves have turned, everything is really beautiful.\" I said. Jack just looked at me with his beady black eyes. The Deputy Director's mouth pursed into what was for him a smile. I thought that I should make him and Teresa 'Cunt' Croyle have a smiling contest.\n\n\"Four hundred years ago...\" said Muscone, referring to the joke about burning me at the stake. \"Yes, that's where they are, and I won't even ask how you know. Anyway, what we asked you guys to come in to discuss is some impending and embargoed news. First, the FBI's report on SBI corruption will be coming out, and it's going to be very ugly for the SBI.\"\n\n\"Wish this had come out on November 1st.\" I said. \"But the good guy won the Governor's race, so I'll excuse the tardiness.\"\n\n\"Don,\" said the Deputy Director, \"I'm sure you can imagine the backlash if we'd put this out before the Election. The Democrats would be accusing us of trying to influence the election, and probably accuse us of stealing it for the Republicans. Anyway, the report really wasn't completed until this past Friday.\"\n\n\"I can't wait to read it, and act upon it.\" said Britt Maxwell, who was the equivalent of Internal Affairs for the SBI.\n\n\"Maybe it can help you and Governor Jared with your plans for the SBI, Don.\" Cindy said.\n\n\"Ohhhhh, what plans are those?\" asked Britt. Cindy had let the cat out of the bag. I wasn't happy, but I held my temper: I knew Cindy was doing that because I hadn't filled her in on the details, either. My cousin can be bitchy, that way...\n\n\"Let's not waste the FBI's time talking that right now.\" I said to Britt, trying to dodge. \"I'll brief you and Cindy over dinner.\"\n\n\"Then we're all going to dinner with you,\" said Sandra, her blue eyes gleaming at me, \"because I want to hear it, too.\"\n\n\"I think we can tab a dinner for all of us tonight.\" the DepDirector said. \"Okay, Jack, keep going.\"\n\n\"Yes sir.\" said Muscone. \"Anyway, this report may not be as strong as you were hoping for. It discusses mostly poor law enforcement procedures, failures to communicate, bad training, and an atmosphere of internal hostility and suspicion. There are a lot of good SBI agents, and there are also a lot of bad ones.\"\n\n\"What is not really discussed in this report,\" continued Muscone, \"is the corruption and the criminal activity, or potential for criminal activity. We're going to send that to the SBI Office of Ethics and Review, but our lawyers simply wouldn't allow us to publish half of what we found because we just didn't have enough to back it up with indictments. That pertains especially to Director Lewis.\"\n\n\"Damn.\" said Britt Maxwell. \"I can assure you that my report won't have any such restraints... and will be far more in depth in its damnation of some of the SBI's leadership.\"\n\n\"Has the Governor tried to get you to tamp it down?\" I asked Britt.\n\n\"I'll put it this way.\" Britt replied. \"He never directly asked me to censor myself or back off. However, he did say some things like 'the election is over, it's time now for healing' and 'we don't want to destroy the People's trust in the organization itself'.\" I felt Cindy peering at me as Britt spoke.\n\n\"What do you know about all of this, Commander?\" asked the DepDirector, who was also peering at me.\n\n\"Not much new, sir.\" I said. \"Just after the election, Jack Lewis's people approached Governor Jared's people with a proposal that Lewis would resign immediately as SBI Director if all investigations of him and the SBI were dropped. The Governor flatly rejected that, but they did discuss Lewis resigning and the investigations of him personally going away. I have not been told of the progress of those discussions.\"\n\n\"Inspector Maxwell,\" said Jack Muscone, \"you'd better never, ever, let Dick Ferrell off the hook for what he did to Tanya. And I don't even need to say what is going to happen if and when I come face to face with him again.\"\n\n\"Don't worry, I won't.\" Britt said. \"And my report recommends if not outright demands Ferrell's prosecution for aggravated assault for that incident. But I don't know if anything will ever happen. They're really covering for him, and I'm not sure why. I'm guessing he has some really nasty pictures of the rest of them.\" Everyone laughed at that, though tepidly.\n\n\"What about Robert Gaston?\" asked the Deputy Director. \"Is he clean or dirty? Can he be trusted?\"\n\n\"He cannot be trusted, for damn sure.\" I said. \"He was Lewis's de facto campaign manager within the SBI. However, there are rumors he helped undermine Lewis's campaign by having Lewis continue to support Ferrell, and those same rumor-mongers think he did that so that he, Gaston, could become SBI Director. Either way, if he's playing both sides like that, I sure as hell wouldn't trust him.\"\n\n\"Wasn't he going to be Director already, if Lewis had won?\" Special Agent Lindy Linares asked.\n\n\"Supposedly.\" I replied. \"But the underground word was that Lewis was going to put Ferrell in the SBI Director's chair, or at least put that up for consideration. That was before the incident with Tanya Perlman. And I personally believe those rumors, that Lewis was just paying Gaston lip service, and that Lewis really wanted Ferrell to be the next SBI Director.\"\n\n\"So you wouldn't recommend Gaston as SBI Director?\" asked the DepDirector.\n\n\"No, I wouldn't.\" I said. \"But that doesn't mean Governor Jared won't think about it.\"\n\n\"Who would you put in the SBI Director's chair?\" asked the DepDirector.\n\n\"Tom Conlan.\" I replied. \"And that's part of the overall plan for overhauling the SBI, and I think it'll be best to not talk about that further.\"\n\n\"How about you as SBI Director, Commander?\" said Clark Webster. \"With your record of successes, you could clean that filth up like no one else, and the People of the State would support you all the way.\"\n\nCindy had brought out the green crowbar, and was waving it. \"Do not even try to take the Iron Crowbar away from my Police Department.\" she warned. \"I would be very... upset... if that happened.\"\n\n\"Don't worry, my friend.\" I said. \"I am not going anywhere.\" Cindy and I fist-bumped.\n\n\"Guys, this kind of camaraderie is what I want all of my FBI units to have. In a professional manner, of course.\" said the DepDirector. \"Okay, so let's move along to the next agenda item I wanted to discuss with you guys: Wallace Bedford. He lives in New England, and is a very powerful and wealthy financier from an old Southern family. He and 'Mittens' Baker were known to be close. Bedford also had business relationships with Perry Richards, Conrad King, and the leaders of BigCommCorp, the biggest media conglomerate in the nation. He's on the Boards of several big companies, most notably BigPharmaCorp.\"\n\nThe DepDirector continued: \"We also are beginning to develop leads that he has connections to Superior Bloodlines. He's never been shy about being the direct descendent of a founder of the Ku Klux Klan, nor his racist attitudes, but actually connecting him to this shadow group is another thing. And then there's more... well, let's not discuss that here.\"\n\n\"You mean the fact that he was the one that paid Steven Moschel to steal Amy's transplant organ for his, Bedford's, own son, who is very ill?\" I asked.\n\n\"What?!\" gasped Cindy, turning her head and peering at me with pure disbelief. \"You know this, and that bastard is still alive?\"\n\n\"I can't prove it yet.\" I said. \"And like Westboro, killing him gets him off easy. I want him publicly humiliated first. And he's not mine to kill.\" Cindy and I exchanged a glance; she knew what I meant by that last sentence.\n\n\"And I would love to help you accomplish that, Commander.\" said the Deputy Director. \"Though I first want to ask him a few questions about who his associates might be. And speaking of those associates... you better not know this Commander, or you could be arrested... we have developed deep intel that Dick Ferrell has joined Wallace Bedford's team, ostensibly as a security analyst and bodyguard, but possibly more.\"\n\n\"Nooooo, I didn't know that.\" I said. Yes I did, I thought to myself, but I had no desire to get arrested, so I held my tongue.\n\n\"Inspector Maxwell,\" said the DepDirector, \"this is why you might be finding pushback on any attempt to prosecute Ferrell. These are some powerful people, and if Ferrell becomes one of their soldiers, they'll try to protect him.\"\n\n\"Won't stop me from trying to take his ass down.\" replied Britt.\n\n\"That's one thing Nash and Escobar are looking at with regard to Lake Amengi-Nunagen.\" said Muscone. \"Ferrell's involvement with some of those people up there, and seeing if he's hiding up there.\"\n\n\"Now that the elections are over in all the States,\" said the DepDirector, \"we are expecting Superior Bloodlines to begin making their next set of moves. Fortunately, they were stymied in Teresa Croyle's hometown, then totally blown up in the Iron Crowbar's hometown.\"\n\n\"Good thing my hometown is in Canada.\" said Cindy. We all chuckled again... except the Deputy Director.\n\n\"And seriously, that's what I need to ask all of you about.\" he said. \"Where you guys think they'll try to strike next.\" Again, everyone seemed to be looking at me.\n\n\"Offhand,\" I said, \"I'd say they won't strike in one place next, and won't try again to do what they tried in Apple Grove and Providence Springs. They'll infiltrate numerous places at once, get really embedded, grow their networks, then when they think they're ready, they'll spring out in a bunch of places at once. Their object will be to overwhelm the FBI and indeed the entire Government.\"\n\n\"How long will it take them to do that?\" asked Jack Muscone.\n\n\"Years.\" I said. \"Which gives us time to detect them, watch them, then pick them off as we break down their entire web.\"\n\n\"I fear they're going to work faster than that.\" said the Deputy Director. \"Time is beginning to be against them. They are ultimately globalists, using racism as a false front, and there is a tide of anti-globalism beginning to form here and in Europe.\" \n\nAs the room fell silent, the Deputy Director said \"Okay, if there's nothing else, let's go have dinner.\"\n\n\"I have just one question.\" I said. I could feel the room tense up. \"What's going on?\"\n\n\"What do you mean?\" asked Jack Muscone. Everyone else looked puzzled, except the Deputy Director, who looked like he was realizing I was onto them.\n\n\"Oh, I mean that I see Special Agent Webster in this meeting.\" I said. \"Nothing personal, Agent Webster, but why is Missing Persons in this Special Unit's meeting? And calling Cindy and myself over here on a Sunday evening, just to talk about this background chitchat?\"\n\nI leaned forward and said \"Something is going on. Y'all want us here to be available, to be around, but you don't want to say anything, not yet. You've been antsy all afternoon, and it's not about Dick Ferrell and Jack Lewis. And with Mr. Webster's presence here, I'd suggest it's a missing person.\"\n\nSandra Speer and Lindy Linares were grinning. Britt Maxwell's eyes were twinkling brightly. Jack had the '400 years ago' look that is unexplainable in print, and the DepDirector was shaking his head.",
        "\"Okay, Clark, tell him.\" said the DepDirector.\n\n\"Before I do,\" said Webster, \"nothing has been said to you before now because it's out of this State's jurisdiction.\" His attempt to cover was flawed, but I just nodded and he began: \"The State Attorney General of the State east of us called me a few hours ago. His name is John Barclay, and he's a rising star in political circles in that State. His daughter is named Tiffany. He said Tiffany had called from School yesterday morning, but when he tried to call her last night and this morning, they couldn't get in touch with her.\" Clark had connected his computer to the wall monitor, and a photo of Tiffany was displayed. He also sent that picture, and one of all the Barclays, to our email inboxes.\n\n\"It's just now getting to be 24 hours,\" said Webster, \"but my people have been checking leads ahead of time.\"\n\nCindy had her laptop out. \"Don, this girl is a student at our University. And guess what she's majoring in?\"\n\n\"Psychology.\" I said. \"I'm reading it here on my Police iPhone. And sexual psychology, at that. Too bad we don't know anyone in that Department at the University, eh?\"\n\n\"Huh?\" said Clark Webster, looking confused.\n\n\"My wife, Mr. Webster,\" I said, \"is the Head of the Department of Psychology at the University. This girl is her student, and I mean that literally... Dr. Laura Fredricson is Tiffany's faculty advisor. My wife has very few of those, so this can be considered a BFD.\"\n\n\"How are you getting that?\" asked Webster.\n\n\"I just texted my wife.\" I said. I showed him the texts, where I'd asked Laura if she knew Tiffany Barclay, and Laura had replied that Tiffany was one of her students.\n\nI speed-dialed the number. \"Hello, dear... yes, I'm at the FBI offices... yes, can you call Tiffany's friends and check on her? Word over here is that she's missing...\" I listened for a minute to my wife, then said \"wow... really... okay, yeah, do check up on her, then, and send me anything you have that might help... okay... I love you too... bye.\" I disconnected.\n\n\"So... you brought us over here to help with this politically charged situation,\" I said, \"and the answer might lie right over on our home turf.\"\n\n\"No... it doesn't.\" Cindy said. She had a look of introspection on her face. It was my turn to peer at her. She was going inward, as her father had been teaching her to do. Some people don't believe stuff like this is possible.\n\nShe continued: \"No, these guys in here are worried about this... definitely politically charged... something... not clear here...\"\n\nA moment later Cindy asked \"Does this girl work in the City?\"\n\n\"Not that we know of.\" said Clark Webster. \"But we just started looking.\"\n\n\"Yeah, right.\" Cindy said. \"No, Mr. Webster, what you are doing is trying to help a politician tamp something down before it becomes a Media event. And that's why they want you here, Don... so you'll figure this out before it blows up in the politicians' faces...\"\n\n\"Four hundred years ago, Clark...\" Jack Muscone said, trying not to grin. Clark Webster looked just as he felt: dumbfounded.\n\n* * * * * * * * * * * * * * * *\n\nStill Sunday, November 13th. We went out to dinner, but without Clark Webster or the Deputy Director. The DepDirector said he needed to make some phone calls, and I'm sure that was the truth. Webster was still miffed, especially at Cindy for all but calling him out about the political situation with that missing girl.\n\n\"I have to admit,\" said Jack Muscone quietly to me as we ate, \"it is always a lot more fun when you guys are in our midst. My boss still can't believe you survived Casey B. Walker and his band of madmen. And we all loved seeing Cindy put Webster in his place today.\"\n\n\"What's that all about?\" I asked. \"Is this politician that big a deal?\"\n\n\"Barclay?\" Muscone asked. \"Yeah, he's being groomed. He's forty-five years old, still young but moving up rapidly. His wife is Daphne Reynolds Barclay; her family is what they call 'old money' in the South. Two kids, daughter Tiffany, twenty years old, and son Ethan, who just turned eighteen. His friends call him 'Tommy', though his family insists on calling him Ethan.\"\n\n\"Barclay is the Attorney General of the State east of us.\" continued Muscone. \"He's a Democrat in a Republican administration, which should tell you something. Word is that he is probably going to run for something State-wide, Governor, U.S. Senator, and then he'll be on to Washington.\"\n\nI just nodded, feeling myself going into a reverie. I pulled myself out quickly.\n\n\"And Webster is one of those tuned to the political situations.\" I said. \"Your boss is already a made man in the FBI, and you are like me in that we just don't care... but Webster is hoping to get in with the rising stars.\"\n\n\"As usual, you're on the ball about it.\" said Muscone. \"That, and Webster being scared of his own shadow. He wants to be mobile-y upward, but he's more scared of something going wrong and him being taken down a notch.\"\n\n\"Well, you have Cindy and me for a couple of days.\" I said. \"I've cleared it with the Chief, who wants to put Teresa and Coldiron through their paces without me being there. And obviously this is something important to your boss.\"\n\n\"Why do you say that?\" asked Jack... just a touch too sharply.\n\n\"Well,\" I said, \"you know all about the Barclays, which means you've researched them. And it wasn't Clark Webster that got Cindy and me over here. Only you or your boss could get our attention like that.\"\n\nAs we were finishing dinner, Jack Muscone's phone cell rang. He answered it, said \"Okay, on our way.\" and hung up. We were all looking at him.\n\nJack nodded and said \"They found her.\"\n\nPart 3 - The Crime Scene \n\n\"Waiting in a car,\n\nwaiting for a ride in the dark,\n\nthe night city grows,\n\nlook into her eyes, they glow...\"\n\n--- M83, \"Midnight City\"\n\n8:30pm, Sunday, November 13th. We were at the State Line, southeast of the City, due east of Eastphalia, and just off the main highway from the City to the town of Sparta in the State east of ours. The sun had set; it was dark.\n\nI was wearing a black pullover mock-turtleneck sweater with armor underneath and my beige trenchcoat (also lined with light armor) on top. I was also wearing my ubiquitous Tilley Hat with Airborne wings with an FBI logo underneath, which was pretty small and hard to read. Cindy was in black with another layer of black pullover sweater, which gave her freedom of movement.\n\nWe'd raced over in the Black Beauty, with a blue light on top to get traffic to get out of our way. The FBI team came in two black cars, with blue lights embedded in the windows flashing brightly. We came upon the scene and got out. I secreted my red crowbar in its pocket in the trenchcoat. Cindy left the green crowbar in the car; she had an M-4 rifle with her.\n\nWe saw the klieg lights set up, and we went over. A girl was lying face-down, dead. She was auburn-haired, pretty, and young. Her body was straddling the State Line almost perfectly. And that was the source of the problem.\n\nThere were State Troopers from each State on their own sides of the line, and they looked a bit hostile towards one another. SBI Agents Carter Fischer and Ted Orosco were on the scene, on our State's side. What I suspected were State agents for the other side was on that side, as well as the Sheriff of that County.\n\n\"She's lying right on the State Line, sir.\" said a surveyor from the U.S. Geological Survey. \"Impossible to say which State has jurisdiction.\"\n\n\"Then the FBI will handle this until we find out where she was killed, which is what will establish habeas corpus.\" I said loudly.\n\n\"I agree.\" said Jack Muscone. He said loudly \"I'd like for State agents on both sides to cooperate with us and assist us.\"\n\n\"No way in hell.\" said one Agent from the other State. \"We think this is our case alone, and we're not working with that other State's people.\"\n\n\"Don, get to work on this,\" Muscone said quietly to me, \"before something ugly happens. I don't like the way this is shaping up.\"\n\nI went and began examining the body. \"Stay on your side of the god-damned line.\" snarled the Sheriff of the County on the other side. I stood up and faced him, pulling out my FBI I.D.\n\n\"I'm an FBI Consultant.\" I said. \"And I will examine this body on any side of any line I damn well please. Consultant Kato!...\" I said to Cindy, \"...shoot to kill anyone why tries to stop me.\"\n\n\"With great pleasure, sir.\" said Cindy, who was ready to do it, too. A lot of the LEOs were shocked at our aggressiveness, and remained frozen for the moment. Good, I thought to myself.\n\n\"Okay, no purse, no cellphone,\" I said, \"but lo and behold, there is an ID in her pocket. Student ID from the University in my State, belonging to one Tiffany Barclay. Okay, she's wearing a tan sweater, blue jeans, high heel leather boots. Big blood spot in the middle of the back, appearing to be exit woulds from a long knife stabbing her... wow, several stab wounds right in the same place...\"\n\nI was about to turn her over when the Sheriff intervened: \"If you try to roll that body into the other State, I'll have every one of my men shoot you. And this bitch can't shoot us all in time to save your sorry ass.\"\n\n\"What's your fucking problem, Sheriff?\" asked Jack Muscone. \"I'm going to have this body taken to the Federal Building in the City, so she's leaving your State no matter what. And if you kill any of us Federal agents, you'll have the entire FBI all over your county and fucking you up like you've never seen before.\" The Sheriff gave Jack an ugly look, full of hatred. But he relented.\n\nAn ambulance arrived at the scene, with a doctor and an FBI team of forensic experts. I deferred to them for the examination of the body. We rolled the girl over and the doctor shined his flashlight around.\n\n\"Can you give me a time of death, Doctor?\" I asked first thing.\n\n\"About eighteen hours ago.\" said the Doctor. \"But that's a very loose guess, based upon the rigor and the condition of the blood and tissue.\"\n\n\"Good enough.\" I said.\n\n\"Hmmm, yes, as you said, multiple stab wounds, right in the heart.\" said the doctor. \"Looks like a big, long, knife, too... maybe a bread-cutting knife. Wow, stabbed the same place over and over... like a fit of rage or something.\"\n\n\"Maybe a jealous boyfriend.\" said the lead State agent on the other side.\n\n\"Why do you say that?\" I asked.\n\n\"All that stabbing, right in her heart?\" the man said. \"Looks like a crime of passion to me. You got a better idea?\"\n\n\"Two better ideas.\" I said. \"First, if this were a passion-fueled frenzy, I'd expect stab wounds to be all over the place. These were done carefully, cooly, and aimed very accurately. And the other idea... is to not theorize further without more data.\" \n\n\"What, you think you're some kind of fucking Sherlock Holmes?\" snarled the Agent. \"You think you're like that Iron Crowbar bastard across the State, who murdered a church Pastor and then said he was some kind of Moriarty syndicate?\"\n\n\"Whaddya think, Kato?\" I asked Cindy. \"Think we ought to call the Iron Crowbar over here?\"\n\n\"He'll do better than these pieces of crap that call themselves State agents.\" Cindy replied. The Agent gave her an ugly look, but Cindy continued: \"These guys seem to be afraid of the Iron Crowbar, like he might solve something they don't want solved. Now why is that, Agennnnt...?\"\n\n\"Go fuck yourself, bitch.\" snarled the Agent. \"You FBI fuckers think you're better than everyone else, but you're not.\" He turned on his heel and stalked off. Cindy was working hard not to giggle. I just had an 'oh well' look on my face.\n\nA few moments later, FBI Agents Sandra Speer and Clark Webster came up from the east, i.e. the other State, escorted by Webster's 'robot' Agents from the 'Point Hollow' case. \"We found her cellphone and purse about half a mile down the road.\" said Webster.\n\n\"Then it's our case!\" yelled the Sheriff. \"Girl was killed on our side of the line.\" Jack Muscone looked at me and I shook my head.\n\nI said \"Agent Webster, was there a lot of blood at the scene where you found those items?\" I asked.\n\n\"No, Commander,\" said Webster, \"maybe a few spots, but not really anything. We found the cellphone by triangulating its signal. Nothing there but some tramped down grass and the cellphone and purse.\"\n\n\"Then the girl did not bleed out there.\" I said. \"And therefore that location can hardly be the scene of a bloody stabbing, now can it Sheriff?\"\n\n\"Good point, Don.\" said Jack Muscone. He then squared up to the Sheriff and said \"Sheriff, I'm maintaining jurisdiction of this case until a Federal Court decides who has habeas corpus. So either help us, or back off.\"\n\n\"No, I am claiming jurisdiction.\" said the Sheriff. \"I will fight you over it, either in Court, or here with guns. What are you going to do about it?\"\n\n\"Sheriff,\" I said, \"do you really think you can stand up to the full might and power of the United States Government? Do you truly realize what you are about to be up against?\"\n\nAs if on cue, the wind picked up, blowing through all of the people standing off against each other. And that wind brought some wisdom to that Sheriff. He turned on his heel and walked back towards his vehicle.\n\n* * * * * * * * * * * * * * * *\n\nThe FBI's C.S.I. team was wrapping up when a black limousine pulled up. A man in his forties got out of the backseat, his full head of black hair perfectly in place. He was escorted by a State Patrol Officer (from the other State) and what looked like a security man in suit and tie.\n\n\"I'm Attorney General Barclay.\" the man said as he came up to us. \"I got a call that my daughter...\" Muscone looked at me, and I nodded, doing the necessary duty.\"\n\n\"Mr. Attorney General, my name is Commander Donald Troy, here as an FBI Consultant.\" I said. \"Do you think you can handle identifying your daughter, sir?\"\n\n\"Is that...?\" he asked, seeing the girl's body still on the ground, covered by a sheet. \"Oh, nooooo...\"\n\nI escorted him over and the technician lifted the sheet. Barclay staggered to his knees. \"Oh God, no! Tiffany!...\" He was going to grab her, maybe hug her, but I held him back.\n\n\"Sir, I'm afraid this is still a crime scene, so please don't touch her. Is this your daughter?\" I asked the distraught man. He just nodded as he sobbed.\n\n\"I am sorry for your loss, sir.\" I said. I had the technicians take Tiffany's body to the ambulance. Somewhat to my surprise, her father did not try to follow.\n\n\"Sir,\" I asked quietly as we sat on our knees on the ground, \"when was the last time you heard from your daughter?\"\n\n\"It was... it was yesterday, I guess.\" Barclay said. \"Well, my wife, Tiffany's mother, talked to her on the phone. We thought she was coming home for the weekend, but she didn't.\"\n\n\"You're an important man in your State, sir.\" I said. \"Are you aware of any threats to your daughter, or to you through your daughter?\"\n\n\"No... no, nothing like that.\" said Barclay.\n\n\"And no threats to the rest of your family, sir?\" I asked.\n\n\"No, not that I'm aware of.\" said Barclay. \"We have a security man, but Tiffany didn't have one at the University... we didn't think it was necessary. Sir, what happened to my daughter?\"\n\n\"We're not sure.\" I said. \"She was stabbed, but we don't know any details yet. We're not sure where she was killed, either, and her body was straddling the State Line. So the FBI will be in charge of the case for now. This is Special Agent In Charge Jack Muscone; he'll let you know what's going on.\" Jack Muscone introduced himself and then walked with Barclay towards Barclay's car.\n\n\"Wow, he got here fast.\" said Cindy. \"The capitol city, Acropolis City, is what, 90 minutes away, at least?\"\n\n\"Unless you're driving the Black Beauty at your usual speeds.\" I replied. \"But you're right, he got here fast. He had to be somewhere in the area.\"\n\nSandra Speer came over to us. \"This is a really tense situation here.\" she said. \"Why all the hostility?\"\n\n\"It's the other State's A.G.'s daughter.\" I said. \"Political ramifications.\"\n\n\"And some penis envy.\" said Cindy, causing me to look at her funny and causing Sandra to laugh.\n\nJack Muscone came over. \"Okay, the techs say they're finished with the scene. Why don't we head back to the City? It's pretty tense around here. I told Mr. Barclay that we would visit him and his family tomorrow morning, so let's go get some sleep.\"\n\n\"I think we've got some serious time on the computers before we can do that.\" I said...\n\nPart 4 - The Family \n\nMonday, November 14th. I stood on the roof of the Federal Building and sipped my coffee as I watched the sun rise in the east over the vista of buildings that stretched in all directions. I had been working the wires all night long, but the sunrise, the coffee, and perhaps the 5-Hour Energy drink I'd consumed had me feeling okay. I knew if I ate, though, that I'd shut down hard. \n\nAs I watched the sun peek over the horizon, I thought of the millions of lives in those buildings that were just waking up to face this day... and what a shame it was that young Tiffany Barclay was not one of them. What can I do to right that wrong? I thought to myself.\n\nI went back inside and back to the FBI offices. I'd been melting the wires all night, collecting a much data as possible on Tiffany Barclay, her family, and any other possible leads I could get to explain why someone wanted to kill this 20-year-old girl. \n\n\"Good morning.\" I head Jack Muscone's voice say as he came in. \"You're up early.\"\n\n\"I never went to bed.\" I said. \"But I've got some interesting stuff, here. Girl named 'Betty Lamarr' showed up on a fingerprint submission.\"\n\n\"Which submission was that?\" asked Muscone as he poured himself coffee.\n\n\"Oh, Tiffany's fingerprints, submitted to the FBI national database.\" I replied. \"This girl 'Betty Lamarr 'is Tiffany's alter ego in adult industry circles. Betty was a stripper at some of the classier joints in the City and surrounding areas, and she migrated to working in a club whose basement housed live sex shows and sex parties. But she was busted mostly at Fraternity parties at City U., and in stings at hotels by City Vice.\"\n\n\"So she was a hooker.\" said Muscone. \"Did Daddy know?\"\n\n\"I don't know.\" I said. \"And I'd advise we don't ask until we have had a good interview with the family.\"\n\n\"I hear you, Special Agent Troy.\" Jack said teasingly. \"It's going to be good having you working with us, so my guys get to watch you work even more closely.\"\n\n\"Butter me up, butter me up...\" I replied. Jack laughed, then the humor vanished.\n\n\"You didn't have to stay up all night, you know.\" said Jack. \"You should've gotten some sleep.\"\n\n\"Yeah, I know.\" I said. \"But something is bothering me about this one... I've got a 'vibe' about it.\"\n\n\"Hey! That's my department!\" cried out a voice behind me. Sure enough, a platinum blonde with a green crowbar was walking in. As Cindy poured coffee, she said \"But I've got the same vibe about this, too. Something's not right with this one. So, Don, does this girl have a record as a 'working girl'?\"\n\n\"She sure does.\" I said. \"I was about to tell Jack here that we have to be careful in talking to the family... it could be that John Barclay was being blackmailed about his daughter, then it went to the next level.\"\n\n\"Or it could be something as simple as a prostitute murdered by her john.\" said Muscone.\n\n\"Could well be.\" I said. \"That's the angle I need to prove or disprove before moving on.\"\n\nJust then the FBI DepDirector came in. \"Guys, I think you know our guest Medical Examiner.\" he said.\n\n\"Martha!\" I exclaimed, surprised to see my County's M.E. in the house. \"Don't tell me the FBI has hired you away from us!\"\n\n\"No, Commander.\" said Martha with what was for her a grin. \"But when the Deputy Director of the FBI himself asked me to come over and assist with the autopsy, I could hardly say 'no'.\"",
        "\"Good!\" I said. \"I'm glad you're here. You are used to my idiosyncrasies, and there are a couple of things I want you to look for on the body.\" I handed Martha a folded piece of paper. \"And don't let these guys see that. Payback for them surprising me with your presence.\"\n\n\"But we did surprise you, at long last.\" said the DepDirector with his pursed smile. \"Okay, let's go into the conference room and you can catch us up on what you found last night.\" An Agent escorted Martha to the basement, where the autopsy would be performed.\n\n* * * * * * * * * * * * * * * *\n\nAfter briefing the FBI team on Tiffany/Betty, I continued with the family:\n\n\"Okay, John Barclay sounds like a financially well-connected name... and he is.\" I said. \"His father was a financier in Boston. John majored in Finance at Penn, went to Harvard Law for his law degree. Went to work for a banking conglomerate named WorldBankTrust, which isn't exactly your local J.P. Goldman Bank; it's basically a bank for bankers, has 'Rothschild' all over it.\"\n\n\"So we already have \"Big Boyz' influences in the case.\" said Muscone.\n\n\"That explains the high tension at the State Line last night.\" Cindy said most astutely.\n\n\"Very true, Green Crowbar.\" I said. \"So continuing the story: young Mr. Barclay was sent to the Charlotte, North Carolina branch of this bank, and while living there he met Daphne Reynolds, a young socialite from another money family of the Old South. They married and had two children, the late Tiffany Barclay, and now-17-year-old Ethan. I'm waiting on more data on them.\"\n\nI continued: \"Mr. Barclay rose quickly within WorldBankTrust, and came to the City ten years ago. Six years ago he saw the opportunity to run as Attorney General of the State next to us, did so, and easily won. The curious thing about that, is that he did not run as a Republican, but as a Democrat. I would think with this background, he'd be like Mittens Baker and run as a Pubbie, not as a Dem.\"\n\n\"Maybe he ran against the Republican incumbent.\" said Lindy Linares.\n\n\"In fact, he did.\" said the DepDirector. \"And I can tell you in the here and now that that election was fraught with discrepancies. But the Republicans refused to mount a legal challenge. They just let it happen; it was almost as if they colluded in it.\"\n\n\"Don't get the Iron Crowbar started on that.\" Cindy said, again most very astutely.\n\n\"Ye-ezzz.\" I said witheringly. \"Anyway, he's the A.G. over there now. And from what I saw last night, he either has a lot of support among State and local LEOs... or they are very afraid of him.\"\n\n\"Maybe some of both---\" started Jack Muscone. Just then, a young FBI Agent in a well-fitting suit came to the door.\n\n\"Uh, sir,\" said the Agent, \"we have a young woman at the front door who says she is with the Town & County Police Department and here to see Commander Troy. She has a badge, but...\"\n\n\"Let me guess.\" I said. \"She is dressed in leather, looking 'Punk', hair dyed either pink or blue... I'll guess blue, would you say 'blue', Kato?... and she is about to rock these poor Agents' world.\"\n\n\"Uh, yes sir...\" said the Agent.\n\n\"Well, man,\" I said, \"it should be obvious I'm expecting her. Show her in, show her in!\"\n\n* * * * * * * * * * * * * * * *\n\nA moment later, Mary Mahoney Milton was escorted into the conference room. Sure enough, Mary had chosen to have blue hair today. She still looked smoking hot.\n\nI made the unnecessary introductions, then Mary handed me a jump drive. \"The information you wanted, Commander.\" she said as she handed it to me.\n\n\"Thank you.\" I said. I plugged the jump drive into my secure computer, then looked at the information. \"Okay, no arrests for either Mr. or Mrs. Barclay. Ethan has three traffic tickets for speeding; one more and his license is pulled. Oh, here's something... there was a home invasion a few years ago, in North Carolina... Mr. Barclay shot the intruder with his legally-purchased revolver, and the perp died at the scene. Deemed self-defense, and that makes sense to me.\"\n\n\"But there was a crime against them.\" said Muscone.\n\n\"So it would seeeeem.\" I said in my best 'Chief Moynahan' imitation voice. \"The perp in that case was a cat burglar, and his luck ran out. He picked the wrong place, got his ass shot dead.\"\n\n\"Or so the official story goes.\" said the DepDirector.\n\n\"I looked up that perp, sir.\" I said. \"He was a pretty well known and successful cat burglar. Unless you know something, sir, I'd say this was just a burglary that ended the right way for the good guys, and badly for the cat.\"\n\n\"No, I just suggested that with 20/20 hindsight,\" said the DepDirector, \"remembering what someone said about coincidences.\"\n\n\"I'll look deeper into that, sir.\" said Lindy Linares.\n\nI then said: \"Okay, these are school records of the Barclay children, among other things. Seems Tiffany was pretty introverted as a child. She did the Brownies and the Girl Scouts for a while, was in the band as a majorette, or flag girl, or whatever they call them these days... then there's a few notes that she was hanging out with the wrong crowd, especially boys.\"\n\n\"Boys are definitely the wrong crowd.\" said Cindy. Britt Maxwell chuckled.\n\n\"Especially the ones in the TCPD.\" I replied drily.\n\n\"We'll hang out with you, Don.\" said Sandra Speer, with a flirtatious look at me. Lindy Linares nodded vigorously in agreement. I smiled at them.\n\n\"Okay,\" I said, \"so as not to waste any more of the FBI's time with our bad jokes... okay, Ethan goes by the name 'Tommy' in school. He was on the football team, but virtually never played. Was on the baseball team, warmed the benches. Didn't letter in anything. Grades were okay... well, looks like some of them got changed upwardly, and after the fact. Got into a couple of fights. Counselors say he seemed frustrated and generally unhappy, but couldn't be brought to say anything, and then his father would step i and stop the counseling sessions..\"\n\n\"How do you get that stuff?\" asked the DepDirector. \"I know Mrs. Milton and her husband are the very best at hacking, but to get counselor notes like this?\"\n\n\"I am a happily married man, Mr. Director.\" I replied, a directly indirect reference to my wife, who happened to be a psychiatrist as well as a high-ranking operative of the Central Intelligence Agency, and as such could get some records even the FBI normally cannot.\n\n\"Okay, finances...\" I said. \"Tiffany had... none, that I can tell. No bank accounts. One credit card in her father's name, probably for emergencies, only used a couple of times...\"\n\n\"Okay, we need to get going.\" said the DepDirector, interrupting me. \"We're going to Acropolis City, the capitol city of Barclay's State.\"\n\n\"And please let Commander Troy take the lead on all questioning.\" said Jack Muscone.\n\n\"I'll brief all of you on what to ask and what not to ask just yet.\" I said. \"By the way, I need to send a team of people to this address.\"\n\n\"Wow, that's in the Red Light District.\" said Muscone, seeing it. \"Whassup with that?\"\n\n\"It's Betty Lamarr's address on her drivers license.\" I replied. I made a call to Sapper Warren and Robin Ventura of the City Police. I then thanked Mary, and asked her to work with the FBI guys to get a warrant to get cell phone records.\n\n* * * * * * * * * * * * * * * *\n\nThe trip was nearly two hours. We were in a big FBI SUV, with Jack Muscone driving, me riding shotgun, and Lindy, Cindy, and Sandra in the backseat. After telling everyone what things to not mention to the Barclays, I consumed a couple of Egg McMuffins and coffee... and as I'd predicted at sunrise, I promptly fell asleep. Cindy awakened me just as we were passing through Sparta, on the way to Acropolis City.\n\n\"There's Eastern State University, sir.\" Cindy said. \"Theo graduated from there.\" I watched as we passed through. Eastern State looked a good bit like our own university, and like my Wildcats' Campus, as well.\n\nDriving on, we arrived at the Barclay's neighborhood. Their home was in a gated community, and the home itself was fenced in and gated. It reminded me of our own Heritage Cloisters, but on steroids. And the security was 'no shit' serious. We drove in and parked in front of the front door.\n\nThe Deputy Director came up to A.G. Barclay, and I could see that both were practiced at playing The Game. \"I'm so sorry for your loss, Mr. Barclay.\" said the DepDirector as they shook hands.\n\n\"I'm very appreciative that the Deputy Director of the FBI took the time to visit us.\" said Barclay. \"Come on in. I'll have to ask you to not talk with our son unless we the parents are present.\" I noticed there were a couple of men in suits in the doorway, one of them being a lawyer, I perceived.\n\nThe house was not as large on the inside as it seemed to be on the outside. As I looked around, I got a feeling of sterility, of perfect appointment but none of the 'lived in' feel of a home. No dogs, either. Never good when there are no dogs...\n\n\"Have a seat.\" said Mr. Barclay to all of us in the living room. Chairs had been pulled from the dining room table, and we sat with A.G. and Mrs. Barclay. I took this moment to study her.\n\nDaphne had light brown hair that seemed to have streaks or highlights of a reddish tinge to them. She was attractive, slender, in decent shape from playing tennis a lot, and she looked like the typical Southern socialite that was now a gentleman politician's wife. But her face seemed to look just a bit haggard, and the makeup didn't hide it. By that I did not mean the grief she was experiencing upon the loss of her daughter, but something deeper, more chronic. However, I saw no bruising or marks suggesting physical abuse. Last, but not least, she did not strike me as particularly intelligent.\n\nJack Muscone led the questions. \"I'm sorry we have to do this so soon after Tiffany's death, but it's imperative if we're going to find the killer. First, do you know of anyone that would have wanted to harm Tiffany?\"\n\n\"No.\" said Barclay. \"She was a normal girl. If she had any enemies, I don't know who they might be.\"\n\n\"Mrs. Barclay?\" asked Muscone. \"Did your daughter have any friends, or boyfriends, that she might have had a falling out with?\"\n\n\"No, nothing like that.\" Mrs. Barclay said. \"She... she had friends, but not really any close ones. We're a... close family... and she stayed with us for the most part. She went with John to the Capitol a lot, and watched the politics in the Statehouse, went with him to ball games, things like that.\"\n\n\"Mrs. Barclay,\" I asked, \"did your daughter talk to you about any boyfriends at the University?\"\n\n\"No, she didn't.\" said Mrs. Barclay. \"She was very active and busy at School; she didn't call us a lot. And when she did, she didn't mention any boys, not specific ones.\"\n\n\"She was working very hard at school.\" said Mr. Barclay. \"She was active in many groups, as well as trying to get her undergraduate degree in three years so she could begin postgraduate work early. She didn't have much time for dating.\"\n\n\"What was she majoring in?\" asked Cindy.\n\n\"Psychology.\" said A.G. Barclay.\n\n\"The one time she called and was totally excited,\" said Mrs. Barclay, \"was when she was accepted to work with the Head of the Psychology Department, Dr. Fredricson. She said that was a very big deal.\"\n\nI asked \"Did Tiffany ever say what she was going to do with her Psychology degree?\"\n\n\"No...\" Barclay said, as if he was thinking about it. \"I always had the idea she was going to go on to graduate work, but she never really talked about it with me.\"\n\n\"Why did Tiffany go to the University in the other State?\" asked Jack Muscone, asking a planted question at my request. \"Why not go to Eastern State?\"\n\n\"We wanted her to go to Eastern State.\" said Mr. Barclay. \"But she said the Psychology program at the University was the best, especially with Dr. Fredricson there. This Dr. Fredricson must be the gold standard of professors, the way Tiffany talked about her.\"\n\n\"I've heard that about Dr. Fredricson, also.\" I said, my face and voice straight deadpan. Then I said: \"Mr. Barclay, I'm sure you understand that in your position as the Attorney General of this State, someone might try to attack you through your daughter. Were there any threats against you, or them? If there were, we need to know, sir.\"\n\n\"Uh, no.\" said A.G. Barclay, \"No, there was nothing of that kind.\"\n\n\"Is there anyone you've prosecuted in the past that might hold a grudge?\" asked Jack Muscone.\n\n\"No.\" said Barclay. \"And to be honest, before I ran for A.G., most of my legal experience was in finance-related areas. I never tried any cases in a Courtroom or anything like that. And as A.G., we've really had no big cases, not the news-making kind like that Iron Crowbar guy in our neighboring State--- oh, wait... you said your name was...\" He peered over at me.\n\n\"Yes, it is me.\" I said, meeting his look. \"I am here as an FBI Consultant.\"\n\n\"Well... good.\" said the A.G. \"If you're on the case for us, maybe it'll get solved, with all due respect to the rest of you.\" So why did the Barclays look nervous? I asked myself.\n\n\"I have just one more question.\" I said. \"Did Tiffany own a car?\"\n\n\"No.\" said Barclay. \"We didn't buy her one, anyway. She normally got rides with friends, and on a few occasions I had a State vehicle take her to School. Probably not totally legitimate, but I reimbursed the State for the costs. And that is one of the reasons she didn't come home a lot from School... it wasn't easy arranging transportation.\"\n\nI just nodded but said no more. And I felt mental power of the Green Crowbar trying to reach me. I mentally pushed back...\n\n* * * * * * * * * * * * * * * *\n\nCindy, Sandra, and I were looking through Tiffany's room. It was what one would expect to see of a young girl's room: pink and white paint on the walls, teddy bears all over the bed, a 'frilly' bedspread, desk and chair painted white. There were not a lot of books in the bookshelf over the desk. A couple of plaques on the wall.\n\n\"Not a single picture of a boy.\" said Sandra. \"Not any rock band boys, nor rock band girls for that matter.\"\n\n\"No pictures of girlfriends, either.\" said Cindy. \"Nor groups of friends posing for selfies at some event.\"\n\n\"No school accolades for good grades.\" I said. \"Yet Laura accepted her into her program, which would not happen if Tiffany weren't pretty smart.\"\n\n\"She must've turned on the switch in college.\" Cindy said. \"Both academically and socially.\"\n\n\"Yes.\" I said. \"Okay, I'm going to go look at Ethan's room.\" I went down the hall into the next bedroom.\n\nEthan Barclay was lying on his bed, and he sat up as I entered. He was slender, almost skinny, with brown hair. His face resembled his mother much more than his father. He was wearing a shirt and blue jeans, both getting dirty after several days of continuous wear.\n\n\"Hello, Tommy.\" I said. \"Mind if I take a quick look?\"\n\n\"Uh, no sir.\" said Ethan. I looked around. The room was painted blue with white trim. The room was a bit messy, the bedding rumpled, a couple of items of clothing on the floor. The desk was almost bare. There were a few trophies on the chest of drawers, various kids league 'participation' trophies.\n\n\"Sir,\" said one of the security men, who had come up, \"this is not Tiffany's room.\"\n\n\"So I've observed.\" I said.\n\n\"Sir, you cannot question Ethan without his parents being present.\"\n\n\"I am not questioning him.\" I said, continuing to look around. Ethan looked nervous.\n\n\"Sir, you need to come with me.\"\n\n\"No.\" I said, turning to face the security man. \"You go get his father, and bring him up here, so that I can talk to Ethan in his father's presence.\"\n\n\"You still need to come with me.\" said the man, looking tense.\n\n\"Or what?\" I said.\n\n\"Or I will have to make you leave, by force if necessary.\"\n\nI reached into my trenchcoat, and the red crowbar made its appearance. \"You are welcome to try.\" I said.\n\nThe man was going to go for his gun, but he felt his wrist being grabbed. He turned around to see Cindy Ross, who was exhibiting a green crowbar.\n\n\"I wouldn't try to do that.\" Cindy said. \"The crowbars are for show. I'll shoot you dead if you draw your gun.\"\n\n* * * * * * * * * * * * * * * *\n\n\"I've heard of your reputation, Commander Troy.\" said Barclay, sitting on the bed next to his son. Ethan was slouching over, his hands clasped in front of him. \"It is one of creating agitation, and you've done that here.\"\n\n\"My apologies, Mr. Barclay.\" I said. \"But I am investigating your daughter's death, and I don't brook interference very well. Since you are now here, I do need to speak to Ethan, if I may.\" Barclay nodded, and I said \"Ethan, I'm sorry about your sister. I need to ask you if you know of anyone who was threatening her, or threatening you or your parents through her.\"\n\n\"No sir.\" said Ethan.\n\n\"Did your sister ever tell you of any problems with anyone she was having?\" I asked.\n\n\"No sir.\" said Ethan, his voice sounding dull.\n\n\"When did you last see or talk to your sister, Ethan?\"\n\n\"I dunno, the last time she was home, I guess.\"\n\n\"And that was... when?\" I asked.\n\n\"Last summer, I guess.\" Ethan said. I made the rather obvious deduction that he was not very forthcoming with his answers.\n\n\"Tiffany didn't stay at home last summer, Commander.\" said Mr. Barclay. \"She said she was doing intern work at the University, and some in the City. She came home the July 4th weekend, and right around August 1st. Apparently there was some big stuff going on in the University Town, and she wanted to get away from the crowds.\"\n\n\"Interesting.\" I said. \"Ethan, do you have a car?\"\n\n\"No sir.\" said Ethan.\"\n\n\"He drives mine or his mother's if he needs to go anywhere.\" said Barclay. He then added \"I'm sure you will find out that he's gotten a few speeding tickets.\" The last sentence was stated rather harshly, and I knew it was spoken at Ethan more than at me.\n\n\"So, Ethan,\" I said, \"I see a chessboard on your desk. You play?\"\n\n\"Not really.\" said Ethan. \"I'm not very good. It's a nerdy game, anyway.\"\n\nI smiled. \"When I was in high school, the second best player on our chess team was also the best pitcher on the baseball team. He even made it to the minor leagues. And he loved chess.\" I wondered what had become of my friend Mike, but then refocused. \n\n\"So, you play sports?\" I asked.\n\n\"Yeah, some.\" said Ethan.\n\n\"He's on the football team, too.\" said John Barclay, who added emphatically: \"Even if he doesn't play much, sports teach discipline and life lessons for success.\"\n\n\"True enough.\" I said. \"Ethan... how well did you and your sister get along?\"\n\n\"Okay, I guess.\" said Ethan, keeping his eyes staring at the floor. \"She did her thing, I did mine, you know.\"\n\n\"No, I don't know.\" I replied. \"So you were or were not very close?\"\n\n\"We kept to ourselves.\" Ethan said.\n\n\"Did you give her rides to School, or anywhere else?\"\n\n\"No sir.\" said Ethan. \"She usually drove Mom or Dad's car, or one of her friends picked her up.\"\n\n\"Did Tiffany and Ethan fight, Mr. Barclay? Or were they close?\" I asked, having gotten nowhere with Ethan.\n\n\"Somewhere in between, I guess.\" said Barclay. \"They got along, but kept mostly to themselves. Isn't that right, son?\" Ethan nodded in agreement, his eyes still studying the floor.\n\n\"Okay, Ethan, thanks for your time.\" I said. I handed him my FBI Consultant card. \"If you think of anything that can help us find your sister's killer, give me a call, okay?\"\n\n\"Yes sir.\" said Ethan.\n\n* * * * * * * * * * * * * * * *\n\nAs we were getting ready to go, John Barclay said \"Commander, this will sound awful so soon after Tiffany's death, but I have to ask: will State Tech be kicked out of its Conference?\"\n\nI nodded. \"I see... if they are, your Governor and other politicians will make a bid for Eastern State over here to be admitted to the Conference.\"",
        "\"Yes,\" said Barclay, \"and they need to know if they should prepare a presentation.\"\n\nI replied \"Mr. Barclay, I have no idea what State Tech nor the Conference will do... but you should advise your Governor to go ahead and prepare that bid.\"\n\nBarclay nodded, then turned to the Deputy Director. \"Again, sir, I appreciate your personal appearance. But from what I'm hearing, shouldn't her murder be investigated by our State Agents and the local LEOs?\"\n\n\"It depends on where the crime occurred.\" said the DepDirector. \"The FBI is just trying to keep a legally defensible case going until we find out who has jurisdiction---\"\n\n*BRING!* *BRING!* *BRING!*\n\nIt was my Police cellphone. I answered it.\n\n\"This is Sapper Warren with the City Police, Commander.\" said the voice on the other end of the line.\n\n\"Hi Sapper.\" I said. \"Whaddya got?\"\n\n\"A crime scene, sir.\" said Sapper. \"A crime scene. Blood all over, type matches Tiffany Barclay's. Lab will run more tests to confirm, of course. Her fingerprints all over the place; she lived here, for sure...\"\n\nAfter a few minutes of conversation, I disconnected. \"Sir,\" I said to the DepDirector, \"I think we've got the crime scene, and habeas corpus... in the City.\"\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/midnight-city-ch-01"
}