{
    "title": "Never Welcomed Home Pt. 02",
    "pages": [
        "CHAPTER 7\n\nOver the next couple of months, I became cautiously optimistic about my relationship with Becky. Unless I was totally off base, I think she was starting to warm up to me. In addition to our discussing Abby, we talked about everything else going on in our lives. \n\nWhen I told her I was training to be a therapist she thought it was a good move on my part.\n\n\"It's something you would probably be good at. After all, you know what it's like to hit rock bottom and pull yourself back up. I only wish you hadn't tried to take us down with you last time.\" \n\nI bit my tongue while trying not to get angry. It was a harsh shot, but that was the new Becky. She said what she thought and didn't pull any punches. At least not with me.\n\nNow, in addition to Friday night family dinners, on Mondays, after my 5:00 class, I would pick up something for dessert and stop over on my way home. It was a nice end to a long night of school. Abby still greeted me at the door with a kiss and hug, but that new excitement had waned. She simply was used to me being a part of her life. What I really wanted to know was if Becky was still dating Mr. Wonderful, but I never asked. I was afraid of the answer. \n\nInstead of buying clothes and other things for Abby, I started to give Becky money every week to help with expenses. The first time I slid over a check she had a fit.\n\n\"We've done perfectly well without your money,\" she said, shoving the check back across the kitchen table at me.\n\n\"I know, but Abby's my daughter and I want to help.\" \n\nIt took some coaxing but she eventually took the money. \n\n\"I guess I can use it for the extras I haven't been able to afford.\" She didn't say it, but her eyes said thank you.\n\nNow every Friday, when I gave Becky a check, she gave me a small smile and slipped it into her pocket. I was doing right by her and Abby. It felt good. \n\n***\n\n\"For next Wednesday's meeting, I want everyone in the group to bring the person who means the most to them.\" Greg announced. \"It really doesn't have to be just one person. I want to meet the people you're going through hell to impress.\"\n\nI took the easy way out and asked Gran. I thought about asking Becky, but I wasn't sure she'd go and I didn't want to rock the boat just as things were starting to get better between us.\n\nGran turned me down. \"Honey, I'm proud of what you've accomplished, but I'm not the person you need to take with you. I can think of two others who would be much better choices.\"\n\n\"Gran, I don't think Becky will go.\" It came out like a little kid whining to his mother.\n\n\"Well, you won't know until you ask\u2014and I wouldn't wait until the last minute either.\" \n\nI took Gran's advice and called Becky on Thursday.\n\n\"Steve, I don't know about this. Wouldn't you rather take your grandmother or parents?\"\n\n\"Becky, I want you and Abby there with me. You two are the most important people in my life.\" \n\nShe said nothing for a moment. \"Give me a day or two and I'll let you know.\"\n\nWe saw each other during the week but didn't discuss the meeting. I didn't want her to think I was pressuring her. I wanted her to come because she wanted to be there, not because she felt obligated.\n\nWhen the following Wednesday rolled around, and I still hadn't heard back from her one way or another, I assumed the answer was no.\n\nI wish she'd at least had the decency to tell me she didn't want to go. \n\nDeep in thought, I jumped a foot when the phone next to the sofa rang.\n\n\"What time are you picking us up?\"\n\nI stammered for a moment or two before finally finding my voice. \"When I didn't hear back from you I thought you weren't coming.\" I hoped she wasn't playing some sick joke on me.\n\n\"Steve, I said I would think about and I have. Now, what time are you picking us up or do you want Abby and I to meet you there?\" \n\n\"I'll be there in fifteen minutes.\" It took me twenty but who's counting. I just wondered which Becky was coming tonight.\n\nGreg had gone all out. There were meat and cheese trays, and cut up fruit and vegetables. He had two huge pots of coffee brewing and an assortment of diet sodas. When he saw me walk through the door with my two girls, he came over.\n\n\"So, this is the woman who's been keeping Steve on the straight and narrow. I'm happy to finally meet you, Becky, and this must be Abby.\" He got down on one knee. \"Your daddy says you're the prettiest girl he knows and it looks like he wasn't exaggerating.\" Greg winked at \n\nBecky as a huge smile spread across Abby's face. \"You guys better dig in before the others eat all the good stuff. Maybe later we'll have a chance to talk.\" \n\nBecky leaned over and whispered in my ear. \"I think I like this guy already.\" The smile she gave me told me I had made the right choice bringing them tonight.\n\nAfter dinner I introduced Becky and Abby to all the members of my support group, noting that even Keith had brought someone. After about an hour Greg asked everyone to take a seat.\n\n\"I'm going to keep this brief.\"\n\nSomeone in the back of the room yelled out, \"Like that's ever going to happen.\" Everyone laughed.\n\n\"Seriously, I want to say how proud I am of the men in this room. Most came here not really knowing where they were headed. Now they have a purpose and a goal in mind. My hat also goes off to the special ones they've brought with them tonight.\"\n\nEveryone in the room looked at each other. I saw a few smiles exchanged and even a kiss or two. \n\n\"I know living with them has been difficult, and maybe impossible at times. But, I want to tell every one of you, that these men have worked their butts off to get where they are today. I'm not going to stand up here and tell you they're cured and all is good. I'm not that na\u00efve. But I will tell you they're committed to getting back the life they once had. All I ask is that you find it in your heart to give them another chance. And with that said, dessert is served.\" Everyone clapped and I could see a few teary eyes. \n\nWe stuck around until seven. We had to get Abby home to bed. Greg walked us out.\n\n\"Becky, if you ever want to talk, with or without Steve, my door is always open.\" Greg hugged her and told her not to be a stranger.\n\nI thought it would be a quiet ride back to her apartment, especially with Abby fighting a losing battle with sleep in the back seat. It wasn't.\n\n\"Are all those guys Viet Nam vets?\"\n\n\"All eleven of us spent at least a year over there. Some guys went over as early as 1968 and I think the last guy in our group came back in '73.\"\n\n\"And they're all screwed up like you?\"\n\nI still wasn't used to or in fact liked Becky's sharp tongue and almost reacted in an ugly way but thought better of it. We'd have to have words, and soon, about the disrespectful way she talked to me.\n\n\"Some not as much and a few a lot worse. What we have in common is that we're all dealing with P.T.S.D. issues.\"\n\n\"Are you going to get better? I mean are you ever going to be normal again?\"\n\nI shrugged. \"Becky, what's normal? Everyone has issues that affect their everyday lives. How they deal with them is the key. I couldn't deal with mine, and it about killed me. I'm now recognizing what went wrong and I'm retraining my brain so it doesn't happen again.\"\n\nShe was quiet for a few minutes. \"I hope you know that Abby and I are pulling for you.\" \n\nThat remark gave me hope. That is until she pulled it out from under me. Three weeks later we had a conversation that changed everything. ***\n\nOn Monday night I had just finished reading Abby a bedtime story and had tucked her in for the night. Her \"I love you Daddy,\" melted my heart. I was walking on air when I caught up with Becky in the kitchen, she sipping a cup of coffee. I decided to share my joy.\n\n\"She is such a gem. You really did a great job bringing her up.\" \n\nBecky smiled at my compliment. \"She can be a handful at times but I wouldn't give her up for the world.\" \n\n\"How about I take you to dinner at Tony's on Saturday night, just the two of us. I'll get Gran to babysit. You know how much she loves Abby.\" \n\nHer smile faded and she went quiet. \"I've got plans for Saturday night.\"\n\nI wasn't taking no for an answer. \"Can't you change them?\" \n\n\"I can't.\" \n\nThe strained look on her face confirmed my worst nightmare. \n\n\"I'm sorry.\"\n\nMy legs got weak and I sat down in the nearest chair. Where I got the guts to ask the next question I'm not sure. \"You sleeping with him?\" I didn't want to hear the answer, but at this point I needed to know. Time to rip off the bandage and get everything out in the open. \n\nThe conciliatory look on her face disappeared as she recoiled and the new hard-faced Becky replied. \"Excuse me! I don't think that's any of your business. Are you sleeping with your blonde friend, whatever her name is?\" That cutting tone in her voice was back.\n\n\"I stopped seeing Carol a couple of months ago. I didn't have the energy for two relationships and she wasn't the one I wanted to spend the rest of my life with.\"\n\n\"Well, how would I know that?\" was her sarcastic reply.\n\nMy whole world was imploding around me but there was one final question I needed to know the answer to. \"Do you love him?\"\n\n\"Steve, it's complicated. I've been with him for a while, long before you came back into our lives. Truthfully, I'm not sure\u2014but I think so.\"\n\nI swallow the bile rising in my throat. \"I'm not giving up Abby, even if you marry him!\"\n\n\"Who said anything about me marrying him? Besides, Abby is your daughter, no one is going to take her away from you.\"\n\nThe walls seemed to be closing in on me and I found it difficult to get in a deep breath. \"I think I should go.\"\n\n\"Steve, wait! We can go out next week or some other time.\" \n\nI didn't respond. That wasn't going to happen. Not after tonight.\n\nBecky was still back peddling and making excuses as I walked out the apartment door. I kept my mouth shut because I knew if I said anything else it would have been ugly. I'm not sure how I got home. I felt pretty optimistic when I had gotten there tonight, now there was this empty space inside of me where Becky used to be. I thought, even dreamed about the three of us being a family again. I couldn't really blame Becky. I screwed up and was now paying the price for my past sins. \n\nTime to move on and get my head and ass wired together, as they always told us in the military.\n\nThere were no more Monday or Friday family dinners. When I got off at 3:30, I would pick Abby up at the sitter's and either take her out to dinner or we ate with Gran. I made damn sure to get her home before bedtime. I said my goodnights in the car before I passed her off to a sullen Becky at the front door. The future I'd wanted with Becky was no more. I had screwed up my life once but no more. I was moving on.\n\n\"I told you, one board at a time. What about that didn't you understand?\" Gran asked weeks later, when I had gotten home from dropping Abby off.\n\n\"She's in love with Mr. Wonderful and I'm tired of beating my head against the wall, hoping for a second chance. We had a good run. I fucked up, and now I'm taking whatever time I can get with Abby. Case closed.\"\n\n\"You still love her!\"\n\n\"Gran, I think I was in love with the notion of us being a happy family again. That, however, isn't going to happen. So I need to look to the future and make a life for Abby and me. I don't have it in me to chase Becky any longer.\"\n\n\"Steve, you're making a big mistake.\"\n\n\"Gran, I've made a ton of them in my life. What's one more?\" \n\nI worked, concentrated on school, and saw Abby whenever I could. I even reconnected with my parents. I apologized for what I had put them through. They forgave me, but I knew we would never have the close relationship we once had. \n\nI decided that working only with military vets would never work, too many memories. I decided I wanted to work with people who had substance abuse issues. I had been there and knew how hard it was to break those bonds of addiction. Greg understood, but also warned me I would still probably be seeing a lot of military vets. \n\nNothing in life was ever clean-cut. I had to move on or at least try. I was still in love with Becky, and probably always would be. I needed to move forward, not backwards. \n\nCHAPTER 8\n\n\"When was the last time you and Becky really talked?\" Gran asked one night over dinner.\n\n\"A couple of months ago. Why?\"\n\n\"Abby asked me the other day why the three of you aren't a family any longer. She said her mommy is sad because you don't all eat together anymore.\"\n\n\"What did you tell her?\"\n\n\"What could I? I couldn't very well tell a five-year-old that her mommy and daddy are a couple of stubborn butt-heads and don't know when they've got a good thing.\"\n\n\"I wanted a relationship with her, I really did, but she's screwing Mr. Wonderful!\"\n\n\"Watch your language, and don't cop an attitude with me, young man. You're not too old to spank!\" We looked at each another and broke out laughing. \"Okay, maybe you're a little old for that, but watch how you speak in front of a delicate older lady.\" \n\n\"Gran, I tried. But it looks like a second chance isn't in the cards for us.\" \n\n\"It's too bad. I think you two have both grown up a lot and would have made it this time around.\"\n\n***\n\nMy parents still went to church with Becky and Abby every Sunday. I was chastised on more than one occasion for not attending mass. I sloughed it off. At twenty-seven, I was too old to be shamed into going. I was managing as best I could and then the other shoe dropped. In September, as the temperature outside started to fall, Gran got sick.\n\n\"Quit fussing over me, will you! It's just a cold,\" Gran said, pulling her thick terrycloth robe tighter.\n\nLike always, I ignored her tirades. I brought a humidifier and an electric heater to make her bedroom warmer. Her house was old and drafty, and the ductwork to her upstairs bedroom must have had a million holes in it.\n\n\"It's not just a cold. You've got bronchitis and unless we get it under control you'll be spending the next week in the hospital. You want that?\" \n\nShe shot me an ugly look. Since my Grandfather passed away, Gran was used to having her way. Not this time.\n\nEven though she said she was fine, I saw the concern in her eyes when she hacked up a mouthful of phlegm and struggled to catch her breath. When I checked in on her Wednesday morning I found her sleeping, sitting up, in the recliner in her bedroom. I wanted to wake her and move her back to bed but thought better of it. Let her sleep, I thought quietly backing out of her room. \n\nI went to work Thursday and Friday, but spent the weekend taking care of her. Once again she let me know she wasn't happy about it\u2014until I bought her a quart of egg drop soup and chicken from the Chinese market down the street. But that only lasted for a night. Then her ornery nature surfaced again. \n\n\"I'm not a cripple. I can take care of myself.\" She couldn't, and her condition grew worse.\n\nThe following Tuesday, I found Gran in that damn recliner again when I went in to check on her. When I couldn't wake her, I called 911. It took the ambulance and paramedics almost fifteen minutes to arrive. They gave her oxygen and a shot of adrenalin to bring her around. Then they loaded Gran on a stretcher and took her downstairs. I almost lost it when she looked up at me with those scared eyes. We were taken by ambulance to Minneapolis General hospital.\n\n\"Don't worry Gran, I'll be with you every step of the way.\" \n\nI called my parents' house before we left and told them what was happening. \"I'm riding with Gran in the ambulance to the hospital. I'll see you when you get there.\" \n\nMy whole family caught up with me in the emergency waiting room. After we'd sat for three hours, the doctor came out to see us.\n\n\"How's my mother doing?\" Mom asked through tearstained eyes, latching onto the doctor's arm.\n\n\"We gave her a nebulizer treatment to open up her bronchial tubes so she could breathe easier but she has fluid in her lungs. Unless she improves we'll have to put her back on oxygen.\"\n\nMy father stepped behind her, as Mom's legs buckled. \n\n\"We'll know more after we do a few tests. Your mother wasn't happy when I told her she would be in here for at least a couple of days while we monitored her condition.\"\n\n\"Can we see her?\" I asked.\n\n\"Maybe later after her tests and she gets some rest. She isn't exactly ecstatic she's in here and has already told the nurses what she wants for dinner tonight, which I'm afraid isn't going to happen. If you come back at about 7:00 tonight everything will have settled down, or at least I hope so.\"\n\nThat's Gran. \n\n\"If her condition changes I'll let you know. Make sure the front desk has your contact information.\" \n\nI felt relieved. In here, Gran would get the care she needed to get better. Two days later, Mom called me at work. \n\n\"Steve, please come to the hospital. And hurry!\"\n\nI made it there twenty minutes before Gran died. We watched in silence as her breathing became shallower and finally stopped. I think a piece of me died in her room that day. I know another empty spot in my heart opened up.\n\n\"I'm sorry. We did everything we could do,\" the doctor told my distraught mother.\n\n\"She's in a better place,\" my mom said, holding onto my dad for support.\n\n\"How can you say that?\" I startled them with the sharpness in my voice. \"Gran loved life and wasn't ready to give up on it yet.\" \n\nMy mother reached for my hand. \"Honey, all I'm saying is that she's not suffering any more. That's all I meant.\" \n\nI left. My mind was a jumbled mess of thoughts and memories and I didn't want to be around anyone. I went back to Gran's and paced the floor of her small house before ending up in her bedroom. Like always, it was neat as a pin. The only thing out of place was the pillow and blanket still on the floor next to her recliner. I would miss her. I thought about going out and tying one on, and then remembered her. That was the last thing in the world Gran would have wanted me to do. She'd saved me when everyone else had given up. I laid down on her bed, closed my eyes, and poured out my soul to her until I fell asleep. In the morning I started a new chapter in my life. One without her.\n\n***\n\nThe funeral was much larger than I expected. In addition to our family, there were at least thirty of her friends, some I hadn't seen since I was a small child. A lot of memories and tears were exchanged in the back of the church before the service started. \n\nAt the cemetery, our family and friends paid their final respects. We watched as her casket was lowered into the ground a hundred feet from where John had been laid to rest.\n\nWhen the graveside service was over and people started to disperse, Becky and Abby came up behind me.\n\nBecky touched my arm. \"Sorry about your grandmother. I know how much she meant to you.\"\n\n\"I'm sorry too, Daddy,\" Abby said, arms outstretched, wanting to be picked up.\n\nI lifted her up and pressed her tight to my chest, my tears wetting her cheek. It was comforting to feel something warm and alive.\n\n\"Daddy, you're hurting me,\" Abby squealed.\n\n\"Abby, Daddy would never hurt you. He loves you more than anything,\" I set her back on the ground.\n\n\"Your grandmother was a wonderful lady.\" Becky said, moving in closer and resting her hand on my back. \"Abby and I will miss her.\"\n\nI looked back at the hole in the ground.\n\n\"Why is it that everyone I care about dies? If I didn't know better I would think that I was some kind of jinx. I would never forgive myself if something happened to either one of you.\" \n\n\"Don't worry about us. We have a strong Marine looking out for our well-being. Isn't that right, Abby?\" Abby nodded her head and grabbed my hand and smiled up at me. \"Would you like to come over for dinner tomorrow? I'll make you a home-cooked meal and then maybe later we can talk. 6:00 work for you?\" ",
        "My thoughts returned to Gran. My throat closed up. I could only nod.\n\n\"Good, we'll see you then.\" \n\nAfter a kiss on my cheek, she and Abby headed back towards the parking lot. I watched them walk away. I recalled another day, years earlier, when Becky had left after saying her goodbyes to me in the airport. That was the day John and I left for Viet Nam. I hoped for a better outcome this time around. \n\n***\n\nThe following day, Mom asked if I would stop over. She had something to tell me and wanted to do it in person. \n\n\"I'm having dinner with Becky and Abby at 6:00. I'll stop over before. Say 5:00?\"\n\n\"That'll be fine, dear.\"\n\nWe'd had a strained relationship of late and by the serious tone in her voice, I could tell something was up. This wasn't going to be a \"how are you\" type of conversation. What did I do this time?\n\nI entered my parent's kitchen shortly before 5:00. They were sitting at the table, beers, and a stack of papers in front of them. \n\n\"Grab a soda out of the refrigerator if you want and have a seat,\" my dad said, motioning to the chair opposite them. \n\nI passed on the beverage and sat down. \n\n\"I'm not going to draw this out,\" he said, sliding a thick packet of paper across the table. \"Gran left you her house. It's paid for and is already in your name.\" \n\nStunned, I leaned back in my chair.\n\n\"Gran never said anything to me about it. When did she do all this?\"\n\n\"About three months ago. She went through a new lawyer and never said a word to anyone. We found out yesterday when he dropped off her new will and this paperwork. You own the house and everything in it.\" \n\nI couldn't believe what I was hearing. \"Mom...\" she held up her hand to stop me. \n\n\"Honey, it was your Gran's house to do with as she saw fit. The only thing I ask is that there are a few mementos I would like to have. If you want I'll pay you for them, but I would like to have them. They're all I have left of her.\"\n\n\"Mom, take whatever you want.\" I took my house key off and handed it to her. \"I'm sorry, I don't know quite what to say.\"\n\n\"We don't need or want the house. It's way too small. It'll be a good starter home for you and whomever you settle down with.\" I saw the look in her eye and knew the meaning of what she was implying.\n\n\"Mom, Dad, I've got to get going. Is there anything I need to do? You know, with the house paperwork?\"\n\n\"No, and if there is, I'll take care of it. Just go and have a nice dinner with your family,\" Mom said with a kiss and a hug.\n\nI only wish they still were.\n\nI walked out to my car and paused with my hand on the door handle. I looked up at the heavens and said a thank you to my grandmother. It was quite a beginning to my evening.\n\nAs usual, Abby met me at the front door with a big kiss and hug.\n\n\"Mommy and I made dinner for you,\" she said proudly.\n\nI scooped her up into my arms. \"What did you make?\" \n\n\"Mommy made spaghetti and I put butter on the bread.\"\n\n\"I sure do like bread,\" I said, giving her a kiss and a tickle. It had been a rough couple of days and Abby's high-pitched laughter gave my spirits a much-needed lift. \n\nBecky stood in the doorway to the kitchen. Our eyes met. Her eyes were softer then the last time I had eaten dinner here. A good sign? Only time would tell.\n\n\"Dinner's about ready. Why don't the two of you wash up while I set the table.\"\n\nThe food was good, but the company better. I recalled the sometime meager dinners Becky and I had when we first got married. Back then it wasn't about the food, more so the two of us being happy together. I wished I could go back and change what I screwed up but since that was impossible all I could do was move on and do my best every day and show everyone the new me. \n\nAfter dessert and a short Disney cartoon, we put Abby to bed. \n\n\"I love you Daddy,\" she said with a yawn, curling up with her stuffed giraffe. \n\nI kissed the top of her head. \"I love you too.\" We quietly snuck out her door.\n\n\"Coffee?\" Becky asked.\n\n\"Would love some.\" \n\nIn the kitchen Becky flipped the switch on the coffee maker and a minute later I heard it start to perk. We said nothing. Sometimes the silence says a lot. \n\n\"I'm not dating him anymore,\" she blurted out. \"Haven't been for a while, if you're interested.\" She nervously rubbed her arms, looking at me and I guessed waiting for some reaction. \n\nI think the surprised look on my face gave her the answer she was looking for. I took Gran's advice for a change and just listened. \n\n\"He asked me to marry him and when I couldn't give him an answer, he figured it out.\" \n\nI still said nothing but leaned forward and reached for her hand. \n\n\"I was afraid of you when you went off the deep end. Not that I thought you would physically hurt either one of us. I didn't want to stick around to see what you would end up doing to yourself. So I left\u2014not only physically, but also mentally. After that, when I didn't hear anything more about you, I thought you'd finally killed yourself. That's when Abby and I went on with our lives.\"\n\n\"Well, you were right to cut me loose. Truthfully, I should be dead. I guess someone up there was looking out for me.\"\n\n\"Up there? Your grandmother saved your sorry butt. When I saw you the first time, after you moved in with her, I wanted to slap the hell out of you and tell you what a loser you were. But, your Gran said you were harder on yourself than I could ever be.\" She reached out, took my hand, and pulled me over to the kitchen table where we sat down next to each other. \n\n\"Did you know she called and gave me updates on how you were doing? She said you were going to make it. She was sure of it.\"\n\n\"Why didn't you...?\" \n\n\"Why didn't I come running back? You were still an unknown commodity, and I had Abby to consider. If you made it\u2014great, but if you didn't, I couldn't put Abby or myself through that again. So we waited. Besides, I still had a lot of anger in me to work through.\"\n\n\"So, you hedged your bets with someone else?\"\n\n\"Yes and no. Down deep I still cared for you, or at least the man you'd once been. But, I wasn't about to jump in again with my eyes closed. Not this time. I'm not the starry-eyed, twenty-year-old na\u00efve girl you married back then.\" Then she got a serious look on her face. \"Steve, I knew you were different when you came back from Viet Nam. I thought I could make you forget what happened over there. And for a while I thought I was making strides, especially when Abby was born. Boy was I wrong.\"\n\nShe stood up and started to pace back and forth in the kitchen. She seemed more agitated than angry, appearing to be looking for just the right words.\n\n\"Mom said that when Dad came home from Korea he also was different. He wasn't as fun loving and was a lot more serious she told me. One night Dad told Mom that he would never leave her again, and that she was the most important thing in his life. That's what I was waiting for from you. She went quiet and sat back down in her chair. \n\n\"I've changed.\"\n\n\"Don't you think I know that? If you hadn't, we wouldn't be having this conversation. When you first started coming around I wanted nothing to do with you. All I wanted to do is hurt you like you hurt me. When I said all those ugly things to you and you just took them without saying anything back, it felt like I was kicking a new puppy. I didn't want you! I wanted the new life I had made for Abby and me. I was happy. I had a new man who loved me. But somehow you wormed your way back in.\"\n\nI gave her a confused look. \n\n\"Steve, I thought that after I told you about Jerry you'd just pack up and just leave, but you didn't. Even though we were estranged I saw how much you loved Abby and frankly I was jealous. I thought about the early years and missed the Old Steve. When Abby asked why we weren't a family any more, it about broke my heart. I probably should have my head examined, yet for some reason I want you back full time in Abby and my life. Just don't change back to what you were back then. I couldn't take it again\"\n\n\"Becky, we've both changed. I'm not sure we'll like the people we've become.\"\n\n\"You don't want to try again?\"\n\n\"I didn't say that. All I'm saying is that we need to take it one step at a time. And this time around if we have any issues or problems, we don't let them fester. We openly discuss them when they come up.\" \n\nShe was quiet for a minute.\n\n\"We'd be exclusive? No dating anyone else?\"\n\n\"Becky, you're the only one I want.\"\n\n\"Good! Let's keep it that way.\"\n\nWe spent the next two hours discussing the do's and don'ts of moving forward. She was still a little hesitant, and I wanted to prove to her I was worth a second chance. I wasn't perfect but I was going to do my best. I only hoped my best would be good enough. \n\nCHAPTER 9\n\nThe first month we took it slow\u2014a lot slower than I would have liked. I understood Becky's trepidations but I was crazy happy and wanted it to be like when we first got married. On more than one occasion I had to tone down my enthusiasm a notch or two before I got myself in trouble.\n\nAt least we're together, was the only way I got through it some times. \n\nI had dinner at their apartment on Mondays, Thursdays, and Fridays. On Saturdays, when we could arrange for a sitter, Becky and I went out, otherwise we ate in and rented a movie. After two months I started to get a little frustrated. I felt like I was back in junior high. There was kissing, but that was as far as she would go. One night I'd had enough and said something. \n\nI poured Becky a glass of wine and fidgeted with my Dr. Pepper while I tried to find a good way to start this conversation. \"I was thinking about asking my mom to babysit Abby next weekend. There's this bed and breakfast I think you'd really like. It has a fantastic restaurant and Greg said that the rooms on the back have an unobstructed view of the lake at sunset. His wife said it was really romantic.\"\n\nShe rolled the stem of her wine glass between her fingers. \"And why do we need to go away to some probably expensive bed and breakfast? We've got a perfectly good apartment here and the rent is paid for the month.\" She wasn't making this easy on me. \n\n\"You know. You and me, by ourselves. I think it might take some of the pressure off us and we could you know, get reacquainted again.\" I didn't feel this nervous in my first firefight.\n\n\"Steve, we're not taking it to the next level until I feel more comfortable with you.\"\n\n\"For Crissakes, Becky, we were married for three years! How much more comfortable do you need to be?\" \n\n\"I can't give you a time table, but I'll know when it feels right.\" \n\n\"How long was it before you felt confortable with Mr. Wonderful?\"\n\nBecky's eyes narrowed. \"That's none of your business.\"\n\nI didn't let her off the hook this time. \"Weren't you the one who insisted that if either one of us has an issue we should talk about it?\"\n\n\"My relationship with Jerry is off limits as is yours with Carol. He's in my past and I want him to stay there. Like I said, we'll go forward only when I say it's time.\" \n\nI knew Becky well enough to recognize that no amount of pleading was going to sway her. We'd had a great sex life at one time. That was years ago. It looked like this was another bridge I would have to rebuild. I just hoped it wouldn't take too long. I hated cold showers.\n\nSo, I courted her. That's probably the best way to describe what I did for the next month. I didn't do anything over the top, but without saying a word I made sure that she knew just how special she was to me. I made dinner when she worked late, did her laundry, and my hands usually ached by the time I was done massaging her feet with lotion when we watched television. I made my share of mistakes and had to bite my tongue on more than one occasion\u2014better than saying something that would have set us back days if not weeks. The important thing was that we were moving forward and I had my girls back in my life.\n\nThen there were Becky's mood swings. While I was out of the picture, Becky had become very independent and developed what can best be described as a stubborn streak and cutting tongue. I had been on the receiving end of both. I would be the first to admit I screwed up but I was getting tired of continually hearing about it and paying the price so I could have her in my life. We'd have to have a serious talk, and soon, but now wasn't the time. We were still in the honeymoon stage of our relationship and I didn't want to make any waves. Not yet anyway.\n\n***\n\nWith one semester left of school, I was floating on air. I secured an intern position with a large inpatient facility and would start the Monday after I graduated. Greg was right about one thing. I would never get rich with what they were going to pay me until I got my Masters and passed the State Boards. Thank God my house was paid for and I didn't owe anything to anyone. Then a week before I was to graduate, Becky surprised me\u2014no, shocked was a better word. \n\n\"I think we should get remarried and have a second child. My biological clock is winding down and it's not going to get any easier as we get older.\"\n\nMonths earlier Becky had finally relented. After a bottle of her favorite wine we started making love again. Although, like everything else, it felt as though Becky was trying to control even that part of our lives. It was like sex was being doled out only when she was in the mood, or as a reward for something I had done for her. I was tired of the games. I had played by her rules for too long. It was time to exert my independence.\n\n\"How about if I don't want another child? And, why do we need to get married anyway? You'll notice I stopped asking six months ago when you kept turning me down. I think we should just live together for a while. I would hate like hell to be a two-time loser if it doesn't work out for some reason.\"\n\nBecky's eyes got big and she stammered, \"But we always talked about having two and if we were to have another one, I think it would look better if we were married.\"\n\n\"Becky, I want to enjoy my post-school free time for a while. And since I'll be starting a new job and will be on probation for ninety days, I don't need any additional stress in my life.\" I saw the look on her face. She wasn't happy but this time didn't shoot me an ugly reply, like she had in the past.\n\n\"But, Honey...\" \n\nNow it was Steve honey and I think I even heard the word please somewhere in our conversation.\n\n\"Look, I think you and Abby should move in with me. This way we'll save money on rent, gas, and food.\"\n\n\"And I suppose you'll expect me to share a bedroom with you?\" Her tone hardened. \n\n\"Of course. There's only one real bedroom upstairs, but I broke down two walls and made another small one. This way Abby will have her own bedroom next to ours.\"\n\n\"Don't you think that will be sending the wrong message to Abby? Two unmarried people sharing the same bedroom?\"\n\n\"What's the difference from me staying over on weekends and her seeing me walk out of your bedroom for breakfast?\" She didn't have a comeback. \"Look, we don't have to make any decisions today. All I'm saying is think about it and we can talk later.\" We called it a night and went to sleep together in her bedroom.\n\nThe following morning, when Becky thought I was still asleep, I heard her talking on the kitchen phone.\n\n\"All right, I know I was pushing my luck. I just figured he'd do anything I asked to keep Abby and I happy. Now, he doesn't even want to marry me. He wants to just live together. My parents will never go for that, even though they'll have no say in whatever we end up doing.\" \n\nI stopped four steps from the kitchen and listened.\n\n\"Jerry was a great guy and he loved Abby but...\" \n\nI heard the pause and figured the person on the other end was saying something. That's when I heard something I wish I hadn't.\n\n\"No, it's not that. Jerry was good in bed, maybe better than Steve. But, I've got a history with Steve and even though I don't fully trust him yet, I think he's the one I want to be with.\"\n\nI would have given anything to know who she was talking to.\n\n\"Of course I love him, that goes without saying. But, over the last couple of years, I've found I kind of like being in charge, and I don't want to give up that control.\"\n\nI made some noise walking down the hallway and I heard Becky end her phone call.\n\n\"Who were you talking to?\" \n\n\"Just a girlfriend from work.\" \n\n\"Were you discussing us?\"\n\n\"No we weren't talking about you. And they say women are vain. Women do talk about other things besides the men they're with. If you must know, we were talking about her ex, or should I say soon to be ex. They're separated and going through an ugly divorce.\" \n\n\"Sorry to hear it. Been there, done that, and didn't even get the tee shirt.\" I tried to add a little levity. It didn't work.\n\n\"She's having a hard time of it. Her husband left her with a little one and refuses to pay child support. She had him served with divorce papers, but it all takes time. Time she and her child don't have.\"\n\n\"Sounds like two other people I know. Luckily we worked out our differences and got back together.\" Becky said nothing but I could see the gears turning behind those serious eyes. \n\nBecky and Abby moved in with me the following weekend.***\n\nThirty days after I started my job I got my first review. It didn't go well. They felt I wasn't giving 100%.\n\n\"Steve, are you purposely holding back for some reason?\" \n\nI paused for a minute before answering. \"I'm really trying hard not to make a mistake, that's all.\"\n\n\"You're still learning and are going to make mistakes. That's why we have you working under Robert.\"\n\n\"I just don't want to screw up anyone's life.\" I thought about my experiences with the doctors at the VA. \n\n\"Look, you can guide, advise, and counsel, but it's up to the patient to follow through if they want to get better. I see from your file you went through a lot of what your patients are \n\ngoing through. You of all people know the failure rate in people with addictions. All we can do is our best and save as many people as we can.\"\n\nI was working at an private inpatient drug and alcohol treatment facility. It was a lockdown facility but the patients weren't forced to participate. Someone was paying an awful lot of money for them to be there. \n\nMy sixty and ninety day reviews went much better. I had become more confident and it showed in how the patients reacted to what I was trying to accomplish. I was given a bump in pay and informed that if I took any classes, I would be reimbursed for tuition. I took advantage of that perk and enrolled the following semester. I was gung-ho but only took one class at a time. I was enjoying living with Becky and Abby too much and wasn't about to screw that up again for anything on earth.\n\n***\n\nIt crept up on me slowly and settled in before I even realized it.\n\nOne Sunday morning I couldn't sleep, so I quietly slipped out of bed and went downstairs. I brought in the newspaper and was glancing at the headlines when I realized how hungry I was. It took me forty-five minutes to put together a spread of bacon, waffles, juice, coffee, and hot chocolate for Abby. Her favorite on cold mornings.\n\nI had just finished setting the table and was getting ready to wake Becky and Abby when it hit me. Normal. The word just popped into my brain. The last nine months had been good. \n\nHell, better than good. Great maybe. Becky and I weren't like the old Becky and Steve, thank God. We were both responsible adults this time around. \n\nThe sharp tone in her voice and demanding attitude were all but gone, replaced with a calming outlook that at times even took me aback. We were truly happy once again.\n\nI slipped back into our bedroom and under the covers. Since she and Abby had started going to church at 5:30 on Saturday evenings, Becky liked to sleep in on Sundays. That is until Abby woke up and came roaring into our bedroom demanding breakfast. ",
        "I pulled Becky in tighter and continued to let my hands wander. \n\n\"If you let me sleep for another half-hour I'll be your best friend.\"\n\nI kissed and nuzzled in the nape of her neck, all the while continuing to let my hands explore her hidden warmer areas.\n\n\"You do know our daughter will be up soon and even if we lock our door she's not going to leave us alone.\" She turned over to face me. \n\n\"How about if we take a nap after breakfast? We can put on a movie for Abby and sneak back upstairs for a little alone time.\" \n\n\"Like that'll work. You should have made your move last night instead of falling asleep on me.\" She was right, especially when it came to our daughter.\n\n\"Well get your butt out of bed. Breakfast is on the table and it'll get cold if you don't hurry up. I'll go get Abby up. See you downstairs.\"\n\nThat's the way most weekends went. During the workweek, we had our routine down to a science. Becky picked up Abby at afterschool day care, something for dinner was thrown together, and everyone caught up with each other while we ate. \n\nAfter dinner Becky and I did the dishes looking forward to the day we'd own a dishwasher. Then while one of us helped Abby with her homework, the other caught up on items that they hadn't had a chance to finish earlier. It seemed that something was always going on. \n\nBy seven-thirty, with the outer layer of dirt removed from Abby, she was given a horsey back ride to bed. I was usually picked for the bedtime story. I think it had something to do with me acting out the storyline and the inflections in my reading voice. Whatever the reason, it was something I looked forward to every evening. After a couple of kisses from each of us, Abby was down for the count.\n\nI watched Becky's bedtime routine from the comfort of our king-size waterbed. With her face washed, she flossed and brushed her teeth, and then laid out her clothes for the next day. She usually slept in an oversize tee shirt she'd absconded with from my closet. Normal, that's what our life had become. And I loved every minute of it.\n\n\"What are you looking at?\" Becky asked, undoing her ponytail.\n\n\"Nothing,\" I replied with my best sexy smirk.\n\nShe tugged the oversize tee shirt down a little lower. \"Don't you ever get enough?\"\n\n\"Of you? Never. I was just thinking, you are the sexiest woman I know.\"\n\n\"How many other naked women have you seen lately?\"\n\n\"Well, there was that girl on the video we rented last weekend.\" \n\nShe gave me the look. \"You think her boobs looked better than mine?\"\n\n\"No way. Hers were way too big and too perfect. I like mine smaller and broken in.\"\n\n\"You're nuts, you know that?\"\n\n\"Would you want me any other way?\"\n\nI could tell from the look on her face she'd had a flashback. \"Are you happy?\"\n\nI jumped up from our bed and wrapped my arms around her. \"What do you think?\"\n\n\"I think we're good, it's just that...\" \n\nI stopped her. I took her face in my hands and pulled her to me. It wasn't a huge passionate kiss that buckled her knees, more so a reassuring gentle kiss. \"Becky, I love you, and this is the happiest I've ever been.\" Then I went for the knee-buckler.\n\nWe made love that night and without protection. Twice. And then fell asleep in each other's arms. I was happy. The demons were gone and I was at peace with myself. I had moved on. I know my Grandmother would be proud at how far I had come.\n\n***\n\nBecky said nothing all week when we made love without using any birth control. Neither did I. Once she started to say something but stopped herself. We both knew what we were doing, but neither of us wanted to address the elephant in the room. Not yet, anyway. I knew this weekend it would come up, and I prepared myself for that and another conversation we'd also be having.\n\nI had no idea what Becky had done with her old engagement and wedding rings. I called Mom on Wednesday and told her I wanted to stop over to discuss something with her after work. I would have to be careful on how I approached her with my request. Thankfully, when I got there Dad wasn't home from work yet.\n\n\"Mom, what did you do with Grandma's wedding rings?\" \n\n\"I have them. Why do you ask?\"\n\n\"This weekend, I plan on asking Becky to marry me, and would like to give her Grandma's engagement ring.\" I saw a look of anger cross her face.\n\n\"I would have gladly given you my old wedding set, but someone stole them and pawned them to buy drugs.\" \n\nI was afraid that might come up.\n\n\"Mom, I'm sorry. Back then I would have sold a kidney to get money for drugs. But that was then, and this is now. I can't undo what I did and I know that just saying I'm sorry won't bring them back. Becky and I are starting over and it would mean a lot to me to give her Gran's rings. Giving her those rings would be like Gran being a part of our marriage. I'll pay you for them if that's the issue.\"\n\n\"Steve, it's not the money. It's all I have left of my mother.\" \n\nI saw the sense of loss in her eyes. \"Mom, don't give it a second thought. You keep the rings, I'll buy Becky a new set.\" I walked over and hugged her. \"I love you, Mom.\" I kissed the top of her head and beat a hasty retreat. My past was gone but not forgotten. I would have to go to Plan B.\n\nThe diamond wasn't huge, just shy of a half-carat. I had purchased the ring from one of the other therapists whose fianc\u00e9e had broken up with him a year earlier. He wanted it gone and I needed an engagement ring, so we both got something out of the deal. We settled on a price and I was ready for Saturday night.\n\nThen, the next complication arose. My babysitter got sick on Friday and cancelled for Saturday. With both of our parents busy, I went to Plan C. Or in this case, made up a Plan C.\n\n\"What do think about Chinese take-out?\" I asked, trying to salvage as much of my plans as I could.\n\n\"I think Abby would rather have pizza but either one will work.\" \n\nI ordered in a pizza and picked up Chinese. I wasn't taking any chances tonight.\n\nI had planned a romantic dinner, ending with me down on one knee and the ring in my hand. I could have waited until the following weekend but the ring was burning a hole in my pocket. With dinner already on the table and Becky setting out the drinks, I grabbed Abby and pulled her into the living room.\n\n\"Honey, after dinner, I want you to give Mommy this for me.\" I handed her the black velvet box. \n\nAbby looked at the box and then me. \"Okay\" \n\nSince my original plan wasn't going to happen, I thought it would be cute to have Abby hand her the box. She'd never expect Abby to give her the ring. Plan C was now in place. \n\nDinner was tense, at least for me. Abby was eating her pizza, talking aimlessly about something she'd seen on television, and ignoring me. I had just filled my mouth with a forkful of Kung Pao Chicken when Abby put down her piece of pizza and reached into her pocket.\n\n\"Here, Mommy,\" she said. Her arm outstretched and the black velvet box gripped tightly in her hand.\n\n\"What's this?\" Becky first looked at Abby, then me.\n\n\"Daddy told me to give this to you.\" With her task accomplished, she went back to eating her pizza. \n\nI shrugged, thankfully swallowed without choking, and tried to look nonchalant, but I was dying inside I was so nervous. Becky looked at the box, put it on the table next to her plate, and to my horror ignored it.\n\nHow I made it through the rest of dinner I'm not sure. Becky was a lot calmer than I was, at least on the outside. It wasn't until the supper dishes were put in our new dishwasher and dessert was on the table that she even acknowledged the box. She glanced my way, picked it up, and put it in her jeans front pocket.\n\n\"Becky...\" \n\n\"Later,\" was her short reply.\n\nThat began one of the longest nights of my life. Our eyes would meet and all Becky would do was mouth, later. \n\nLater? How much later? I was going nuts.\n\nI couldn't wait for Abby to go to bed. I even picked the shortest book I could find for her nighttime story. After a quick kiss, I went looking for Becky.\n\nI found her in our bedroom\u2014naked, sitting on the bed. The ring on a piece of string dangling from around her neck.\n\nI leaned against the doorframe. \"I see you opened the box.\" I tried to be cool about it.\n\n\"Oh, this little thing?\" She said fingering the ring. \"I figured we'd talk before I decided whether to put it on my finger or not.\n\nI pulled off my tee shirt, kicked off my shoes, stripped down to my boxers, and joined her on the bed. \"I thought you might have a few questions. Ask away.\"\n\n\"It was a no-brainer to realize you'd changed your mind about having another baby, but why the sudden change about getting married?\"\n\n\"You were right about not wanting to change diapers when we're forty, but getting married? To coin a phrase, it just feels right. I was kidding myself back then when I thought I was ready for marriage. I didn't have a clue what it entailed. I do now, and want to take another shot at it.\"\n\n\"Another shot at it? Be still my heart. If you were any more romantic I would be falling all over myself to jump your bones.\" \n\n\"You have to know that I love you. Hell, I must, to have jumped through all the hoops you put in front of me. What I want is the life we could have had back then. I want to fall asleep next to you and see you every morning when I open my eyes. I think the four of us will be crazy happy together.\" At this point I shut up and waited for what I hoped was good news.\n\n\"I want to get married in a church this time. No notary,\" Becky said excitedly.\n\n\"Agreed.\"\n\n\"And I want to wear a white wedding dress and have a formal reception with music. I want to party and dance into the night.\"\n\n\"Anything else?\"\n\n\"I just want you to never stop loving me. That's all.\" Her soft eyes were fixed on mine.\n\n\"That's one thing you'll never have to worry about.\" I took the ring from around her neck and placed it in her hand. \"Are you ready to put that ring on your finger and call our parents?\"\n\nShe slipped the ring on her finger and stared at it. \n\n\"We'll call them tomorrow. Right now I want to make love to the man I fell for when I was eighteen and want to spend the rest of my life with.\" \n\nI got up and turned off the lights. \n\nWe'd come full circle.\n\nCHAPTER 10\n\nAfter the five required premarital classes, we were wed in St. Charles Church on April 2nd. This time around we invited not only our family but also all our friends. Greg graciously consented to be my best man. I made it a point to have John's mother and father assigned to the bridal table. Since my best friend couldn't physically be with us at least I would have his parents there to bless our union. I got an unexpected surprise when my mother came up to me before the service.\n\n\"Here,\" she said, placing my grandmother's gold wedding band in my hand.\n\n\"My mother would have wanted you to have it.\" I started to say thank you, but she stopped me. \"Mom gave me back my son. I never was able to thank her properly before she died.\" She reached up and put her hand on my cheek. \"You two have come a long way. The only advice I can give you is that no matter what happens in the future, always love and trust one another. You both deserve this second chance at happiness.\"\n\nThe three of us stood up at the altar in front of God and everyone else. We each held one of Abby's hands and said the vows that made us one again. Abby had been an important part of us getting back together so it was only fitting she be part of the ceremony. At the end, she even added a little chuckle to the service. After we'd said our \"I do's\" Abby spoke up and said loudly \"I do, too,\" smiling up at both of us. We were officially a family again.\n\nWith fifty-five people in attendance, the reception was one huge party. Becky got a little tipsy and like she'd wanted to, danced until the last slow song of the night. \n\nAfter being together for the last year, this time we didn't need to get reacquainted on our honeymoon. We spent four days in Las Vegas going to shows, sampling the massive hotel buffets, and watching people throw their money away. Like everyone else, we made our own donation the night before we left.\n\nA month after our wedding I came home to an excited wife.\n\n\"Well, you wanted another one, and in eight months you're going to get your wish. I just hope this baby is as easy as Abby was.\"\n\nRobert John was born two weeks early. Unlike Abby, he didn't sleep through the night until the second month. During those first two months we questioned our sanity for having another one, but in the end, we never regretted it. Six months later, we sold Gran's small house and moved into a larger one. \n\nLife wasn't always easy, and at times it got down right ugly like when I took a second job so we could upgrade our new old house. \n\n\"Steve, I never see you anymore and Abby wants to know when her daddy is going to start reading her bedtime stories again.\"\n\n\"In six months I'll have enough money to upgrade the wiring and put new floors down in the kitchen and living room.\"\n\n\"In six months you may be living alone again if you don't watch it.\"\n\nMy second job only lasted four months. We could live with the carpet in the living room a bit longer. I wouldn't live without my wife and kids this time around. \n\nI still took a class every semester. It took me two more years but I finally got my Masters and passed the state boards. A year later I put out my own shingle. I was a State Certified Mental Health Therapist. The first time I helped a couple with their marital problems, Becky greeted me with a smirk on her face after they left. \n\n\"What?\" I asked, questioning the look on her face. \n\nBecky walked up and kissed me. \"Who better to tell a couple their marriage is in the toilet than someone who's already gone through it?\" Then added, \"but if we can make it, anyone can.\" \n\nOur marriage was far from storybook perfect. Over the next ten years occasionally, like all couples, we had our problems. Hell, some of the arguments brought back memories of times gone by. This time, however, we talked and solved them like the two adults we'd become. \n\n***\n\nKids grow up but sometimes you wonder how. When Abby snuck out one night and took our car to meet her new boyfriend, she thought we'd never know. When she and her boyfriend were picked up doing it in the backseat at Lover's Lookout I let Becky handle it. I couldn't stop laughing, thinking about all the times I had almost got caught with a girl in my room by my mother when she got up in the middle of the night for something.\n\nI thought Robert was the perfect one until I got a phone bill for over $400 dollars. It seems my son found a friend half way around the world and was conversing with her every night on my dime. If these were the worst things our children did, I considered myself lucky. We had good kids.\n\nThey did grow up and one by one went to college. That wasn't an option. Thank God they both attended local universities and lived at home or we'd still be paying for their education into our seventies. Abby became an Emergency Room nurse and Robert ended up doing something with computers. He's explained what he does to me on numerous occasions and maybe one day I'll understand it. As long as he's happy, it really doesn't matter.\n\nLike all children, they finally moved out and we became empty nesters. Becky took it hard for all of a month. Then one Sunday morning I came down to breakfast to a nude wife. She was sitting at the center island without a stitch on.\n\n\"I love the new look but I'm a little surprised.\"\n\n\"It finally dawned on me this morning that I don't have anyone left here to offend.\" I glared at her. \"You know what I mean. If we want to make love, I don't have to put a pillow over my face anymore to muffle my screams of joy. Now I can scream to my heart's content. Also, we can fool around anywhere in the house now without fear of getting caught and embarrassing anyone.\" That morning we christened the kitchen center island. \n\nWe did the things we'd always dreamed about. One summer we rented a camper and drove to the Grand Canyon. Boring. It was a long way to drive to see a pretty hole in the ground. When I talked Becky into a cruise, we found out what we had been missing. It was wonderful to sit back, relax, and have someone else cook and entertain you. Touring the ship, we found out the upper deck was for adults only for a reason. I tried to bribe my wife into staying and to go with the flow. But as she informed me, \"If you want to see my boobs we'll go down to our cabin, because these breasts aren't going to see the light of day, at least not up here. I took one more look around and we headed for our cabin. Becky was still the only one I ever wanted.\n\nOver the next few years, it seemed there was always something Becky wanted to see or do. I was more than happy to oblige her. We didn't become world travelers, but ended up with more than a dozen stamps on our passports.\n\nWhen Abby and Robert found their special ones, both said they hoped their marriages would be half as good as ours. Becky gave me the look...we both knew what that look meant. We could still read each other's mind. That was a good thing.\n\nChapter 11\n\nI watched on television as the choppers landed on the roof of the US Embassy in Saigon and took the fortunate few to safety. \n\nWhat a waste, I thought. All those thousands of men and women who gave everything, and for what? So the politicians in Washington could play God? \n\nI watched in horror as the United States continued to get involved in one conflict after another around the world. I felt for our men and women in uniform. They were being deployed all over the globe trying to quash insurrections in other countries or trying to solve other countries internal problems. It never seemed to work, but we kept trying. Then September 11th happened.\n\nStunned like the rest of the world, my shock turned to anger. When the president turned our troops loose, for a split second, I wished I was going overseas with them. Then I remembered Viet Nam. War was for the young, not a fifty-something vet with a bum leg.\n\nWars never go as planned. I watched the news, read the papers, and felt sorry for our boys dying overseas supposedly to keep the homefront safe. That's what the politicians and generals kept preaching to us anyways. \n\nWhile grocery shopping one day I heard the phrase that sent me tumbling back to another time. \n\n\"Thank you for your service,\" the young female cashier said to the young Marine in uniform.\n\nIt all came rushing back. I couldn't think. Memories I had repressed decades earlier bombarded my mind. How I even made it home, I'll never know. \n\nThe first time I had gone through it alone and it about killed me. This time Becky was there for me. I was stronger this time around. We both were. \n\nNo one ever really forgets. We're only kidding ourselves if we think we do. It's how we react to those horrific memories that make us who we are. \n\nBecky and I talked. We hugged. We made love like we hadn't in years. The demons were still there but they no longer controlled me. I had won.\n\n***\n\nWhen things went sour in the Middle East I thought about Viet Nam. People still supported the troops, but I could see the far away look in the eyes of the men and women returning home from the Middle East. After two, even three tours over there, they were being pushed, sometimes beyond their limits. It was at that point I felt like I needed to do something, anything, but I hadn't a clue what. Then one night, lying in bed it came to me. I called Greg. I hadn't talked to Greg in years. Like me, he was still in the business of helping others.\n\n\"Greg, Steve Moore here.\" \n\n\"Hey, buddy, it's been a long time.\"\n\n\"Too long,\" I replied\n\n\"I can tell from the tone in your voice this isn't a social call. What can I do for you?\"\n\n\"You still see any of the old support group?\" ",
        "\"A few now and then around town. Why are you asking?\"\n\n\"I want to get the old group back together for one last mission.\"\n\n\"Steve, I don't understand. What mission? What are you talking about?\" \n\nI told him my plan.\n\nThree weeks later, twelve Viet Nam vets stood in the terminal of the Minneapolis International Airport along with fifteen members of V.F.W. Post #22. I had done my homework. Today there would be four planes coming in that would have returning soldiers on them. When the troops flew back from overseas, friends of mine notified us what airlines and flights they would be on. \n\nWe broke into smaller groups, making sure we had all three concourses covered. Twenty minutes later we saw eight men in uniform walking towards the baggage claim area. We walked up to the group, handed each a small American Flag, and shook their hands.\n\n\"I want to thank you for your service,\" I said, and saluted each. To a man they were taken aback. Some smiled, some eyes on both sides were wet, and a few hugs were exchanged. That day, every man and woman in uniform we saw was thanked for his or her service to our country. We began to meet every flight of returning warriors.\n\nWord of what we were doing spread. Other V.F.W. posts and military groups joined in the effort. About three weeks after I started the campaign, Becky came with me to the airport. She watched from a distance, holding our inventory of American Flags. \n\nWhen I ran out of flags, I went over to grab a few from her. The kiss I received reminded me of the picture taken in Times Square at the end of World War II, only in reverse.\n\n\"Have I ever told you how much I love you?\" \n\n\"Yes, but I never get tired of hearing it.\" I got another kiss.\n\n\"Stephen Moore, you can be a royal pain in the ass sometimes, but you're a good man. Never forget that.\"\n\nI never did. And, my fellow vets and I never let another serviceman think he wasn't appreciated when he returned home from war.\n\nThe demons weren't gone, but I had finally put then to rest. I had won."
    ],
    "authorname": "Slirpuff",
    "tags": [
        "marriage",
        "divorce",
        "love",
        "alcohol",
        "drugs",
        "redemption"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/never-welcomed-home-pt-02"
}