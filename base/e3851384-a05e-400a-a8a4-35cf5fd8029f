{
    "title": "A Shepherd Afield Pt. 04",
    "pages": [
        "Author's Notes:\n\n'A Shepherd Afield' is a continuation of 'A Shepherd in France' which continued the story of 'The Shepherd of Ashburn Court'. Minimal effort is made in this tale to explain the backstory so please read the other stories first.\n\nAll characters engaging in sexual relationships or activities are 18 years old or older.\n\n********\n\nChapter 24\n\nGabriella was on pins and needles. She saw on the board that Ben's jet had landed and he should be on his way into the terminal. She was practically vibrating with excitement. It felt like ages since she'd seen him.\n\nWhen he'd called her from Costa Rica and offered to invest so much of his money in the company she was desperately trying to save he proved beyond a shadow of doubt how much he believed in her. She'd never felt so honored in her entire life. Ben not only loved her, he trusted her implicitly. That took her breath away. Her husband would never have done that. Daniel was far more in love with his money than her and he trusted no one with it other than himself. \n\nShe craned her neck to see the doors where Ben would come out. Each time they opened her heart leapt up into her throat but some stranger would walk through instead. Her nerves were fraying when the door opened once more and Ben walked through pushing a cart. She was surprised by the number of bags on the cart. Then she saw he was pushing the cart with one hand while holding up his phone with the other?\n\n\"MOM!\" squealed two very excited voices.\n\nGabriella froze when she saw Miriam and Daniel rush around from behind Ben's back. Then her kids were in her arms and she was crying tears of joy as she clung to them. \n\nBen put his phone away and smiled at the three hugging each other as they laughed and cried. Gabriella reached out and pulled him into their midst and soon they were all hugging.\n\nWhen she finally got control over her emotions Gabriella looked at Ben with pure happiness as she kept her arms around her kids. Both were grinning at Ben with their shared joy at surprising their mom.\n\n\"Thank you Ben! Oh my god, I can't tell you how much this means to me!\" she cried.\n\n\"I was going to be in the neighborhood anyway and I had that big jet all to myself so I thought, why not,\" Ben teased.\n\nGabriella took his face between her hands and kissed him as her kids looked on with surprise. Daniel turned away with a grin and Miriam bounced on her tip toes as she smiled at them.\n\nWhen she pulled back Ben's head was spinning. \"Wow,\" was all he was able to say.\n\nShe hugged him again then gave her kids another hug.\n\n\"Mom! Are we going to see Milan or stand around the airport hugging all day?\" Daniel complained as he smiled at her.\n\n\"Fine! Let's go!\" she grinned. Ben got behind the cart once more and followed them through the airport to the parking garage. He had such a warm feeling in his heart seeing Gabriella so happy and reunited with her kids.\n\nThey barely managed to get everyone and all the bags into the small car Gabriella was driving. It was fortunate that she'd rented the largest one she could get to fit Ben's large body. Daniel and Miriam giggled in the back seat at Ben's antics of squeezing into the car.\n\n\"It was all they had!\" Gabriella said, supressing her own giggles.\n\n\"It's fine! I understand spleens are redundant organs anyway. Off we go!\" Ben said theatrically.\n\nGabriella drove them to the apartment in the fashion district. Miriam's eyes were glowing with excitement while Daniel just took in the sights. They took a few moments to get settled into the apartment and checked it out. There were two bedrooms and a pull out bed in the living room which Daniel would use.\n\nNow that she had her family with her Gabriella was excited about taking them to see everything. They only had the weekend so she chose a few things. They visited the main cathedral, Duomo di Milano, then saw the Galleria Vittorio Emanuele II. Daniel took pictures of the group as they went. \n\nHer kids really wanted to see the company she was working at but she couldn't visit with Ben because the staff were planning a little party for him on Sunday night. She promised they would all get a tour then.\n\nThey were passing through a road with several tech shops on their way back to the fashion district. Ben fully expected to be making several stops to check out the clothing before they reached the apartment. He spotted a camera shop. He'd watched Daniel shooting and reviewing all day and a smile came to his lips. He called a halt and dragged the curious family members into the shop.\n\n\"Daniel, I think it's time to upgrade your equipment. You've proven you have the eye and the skill. You should have the tools to push you to the next level. I'd like to invest in that if you and your mother are ok with it,\" Ben said seriously. Daniel's eyes lit up with excitement and Gabriella beamed a smile at Ben. She nodded and Daniel grinned with excitement.\n\n\"I know nothing about cameras or the different brands so I'll rely on your knowledge. Is there a brand you're interested in?\" he asked the boy.\n\n\"Nikon,\" the boy blurted.\n\nBen smiled. Obviously Daniel had done some research. \"Ok, let's look at some of those.\"\n\nDaniel rushed forward and looked in the display cases. Gabriella kissed Ben's cheek and pointed across the street to a store which sold watches. He nodded and she left with Miriam who was all smiles.\n\nBen saw Daniel was still looking at what looked like entry level cameras. They looked like they were better than what he had but it wasn't what Ben was thinking of. He caught the eye of one of the hovering salesmen. \n\n\"Hello! My friend here is ready to upgrade to professional level Nikon equipment,\" Ben said emphasizing the word. Daniel looked back at him in surprise.\n\nThe salesmen smelled money and smiled smoothly. \"I see. Then perhaps he might be interested in a full frame model.\" He led Ben and a dazed Daniel across to the high end cameras. \"The D6 is new and it has the latest image processor chip.\"\n\nBen watched Daniel's face and with each technical phrase he saw the young man's expression twitch and change. So far everything Daniel was hearing he liked.\n\n\"It all sounds like noise to me. What do you think Daniel? Do you think this camera might meet your requirements?\" Ben asked seriously.\n\nDaniel seemed to come back to himself and straightened his posture as he turned to Ben. \"Yes, uh, I've heard this model is good but as it's implemented a lot of new features there are some rather unfortunate bugs that will require a firmware update to address them. Also, some features from previous models have been removed to make room for the new ones and many professional photographers have complained about this. As I'm just moving into this level it might make more sense to look at a more mature model which has already been through that bug cycle and is at its apex of usability. I don't need the newest. The D4S perhaps?\"\n\nBen smiled proudly at how brilliant Daniel's response was. He looked to the salesman who was staring at Daniel in surprise. Obviously, he thought he'd be unloading their most expensive camera on a newbie. \"Do you have a D4S we might look at?\"\n\n\"Of course, sir,\" the salesman said and put the D6 back in the case. He brought out the D4S and handed it to Daniel. The young man's eyes once more began to glow with excitement.\n\n\"It's currently equipped with the 50mm prime lens which comes in the kit,\" the salesman said trying to get the initiative back.\n\n\"Is that a lens you'd be interested in having?\" Ben asked Daniel who looked back in surprise. \"If it's not a useful lens to you then maybe we should look at a different lens. Are prime lenses good?\"\n\n\"Prime lenses have one focal length and that means they can be sharper and faster. Zoom lenses are more versatile as they can cover multiple focal lengths but they typically aren't as sharp or fast.\"\n\n\"Fast?\" Ben asked.\n\n\"Fast lenses have wider apertures allowing more light in which allows the camera to use faster shutter speeds in low light conditions.\n\n\"Wide apertures also lets you drop the backgrounds out of focus to emphasize the subject,\" the salesman jumped in, still trying to drive the sale.\n\n\"So, is a 50mm lens useful to you?\" Ben asked again.\n\nDaniel looked at him with wide eyes. \"No, not really.\"\n\n\"Does this camera come in a body only configuration?\" Ben asked.\n\n\"Yes but... you'll need a lens,\" the salesman uttered.\n\nBen looked back at Daniel. \"What lens would be useful? What do you use now?\"\n\nDaniel lifted his camera and showed Ben. \"It has a zoom. 30mm to 90mm.\"\n\n\"OK, which... focal lengths do you use most,\" Ben asked feeling rather pleased with himself for getting the term right. \n\nDaniel was having trouble speaking as he was seeing the price of this camera begin to skyrocket. \"I- I use wide for scenic so 30mm and the other end for portraits.\"\n\nBen turned to the salesman. \"Do you have a prime lens in the 30mm range and a prime portrait lens in the 90mm range for this body?\"\n\nThe man's smile returned twice as bright. \"Yes sir, we do.\" He turned back to the case.\n\n\"Ben... this is really expensive!\" Daniel whispered hoarsely so the salesman wouldn't hear him.\n\n\"Really good tools usually cost more. That's why you don't get them until you've proven you have the skills to use them. It's a universal rule. Listen Daniel, I'm not kidding when I say your photos are really great. A better camera won't make bad pictures better but it will make great pictures spectacular. I think you have it in you to take truly exceptional photos. I'd like to invest in that potential. However, if you aren't interested in investing your time, if photography isn't that important to you I'm ok with that too. We can look at a lower end camera. It's up to you.\"\n\nDaniel was struggling not to cry. Having Ben's respect meant so much to him. Hearing that the big man believed in him to this level was almost too much for him to cope with.\n\n\"I'd- I'd like to get the D4S,\" he choked out.\n\nBen saw Daniel was shaky so he pointed to the wall of camera bags. \"Good! Why don't you select a camera bag that will hold the camera and at least three lenses. Oh! And get one of those wide camera straps. This camera is going to be heavy.\" \n\nDaniel smiled and stiffly walked away.\n\nThe salesman returned and frowned as he saw Daniel walking away with an odd look on his face. The man had the D4S body, a 35mm prime, and an 85mm prime. At Ben's questioning glance he explained the lenses. \"These are the 'fastest' and sharpest lenses for this body.\"\n\n\"Great! I'll also need at least three batteries and a charger for them. I assume I'll be able to get a North American equivalent charger at home?\" The man nodded. \"And three large capacity memory cards for this camera body. Daniel is selecting the camera bag and strap.\"\n\n\"Will there be anything else?\" the happy man asked.\n\n\"I don't think so,\" Ben responded.\n\n\"Excellent sir. I will meet you at the cashier's station.\" Ben nodded and the man walked away with the equipment.\n\nDaniel met Ben at the checkout counter with a shoulder camera bag in grey and a dazzlingly colorful camera strap. Ben grinned when he saw the strap and Daniel grinned self-consciously. \"I like it!\" he said defensively and Ben just held up his hands in surrender.\n\nAs Ben stood at the counter making the purchases he felt Daniel leaning against him. It was Ben's turn to choke back his emotions. When he was done Ben and Daniel turned and spotted Gabriella standing in the aisle with tears in her eyes and a trembling smile on her lips. Both men groaned as it was hard enough holding back their own tears. They glanced at each other in surprise and snorted with amusement.\n\nThey collected Gabriella and Miriam and walked out of the store.\n\nOnce everyone was breathing easy again Gabriella looked at her son. \"So, what did you get?\"\n\nDaniel looked nervously at Ben who smiled and shrugged. He reached into the bag and pulled out the box for the D4S body. Gabriella's eyes widened in shock when she saw the price tag on the box.\n\n\"BEN!\"\n\n\"What?\"\n\n\"How much did you spend?\" She recognized the camera name and model from the photographers who worked with Brezza.\n\n\"Are you going to chastise me for how much I invest in those I believe in?\" he asked with a raised eyebrow.\n\nHer mouth opened and closed as she struggled to find an argument for that. Finally she just shook her head.\n\n\"Good because I think we've reached the place Miriam has been waiting all day to visit since we drove through it so quickly,\" he said with a grin as the young girl's face lit up. \"Let's get you some pretty things to wear!\" Miriam bounced on her toes and hugged Ben as she giggled.\n\nBen and Daniel had a lot of opportunities to sit and play with the camera while the two ladies tried on fashions. The young man got the new strap on it and quickly got the hang of the different modes on the camera. He was using the 85mm to do portraits. His subject matter was Ben for the most part since they were stuck together waiting but once in a while he snapped a shot of his mom or sister as they came out of the dressing rooms. When he had a number of shots under his belt Daniel proclaimed he was in love with the camera and gave Ben a big hug. He reviewed the shots with Ben and they both agreed the quality of the images was far superior. Ben wasn't too keen on the subject matter when it was him but he loved the candid shots of Gabriella and Miriam. He saw his investment was already paying off.\n\nHe lost count of how many clothing shops they visited but he was steadily collecting shopping bags around himself.\n\nWhen they finally called it quits and returned to the apartment, exhausted from their full day they plopped down on the couches and grinned at each other. Miriam dragged herself to her feet and dropped down next to Ben with her mom on the other side. She reached an arm over Ben's broad chest and hugged him.\n\n\"Thank you so much Ben! The clothes are gorgeous and Karlene will love them too! She's going to look so nice in the white and grey dress!\" she gushed.\n\n\"You are most welcome. Ask your brother to see the images he took of you and your mother today. They are amazing!\" Ben replied. She kissed his cheek and pushed herself up and off the couch to drop down next to her brother who queued up the pics. Ooo's and ahhh's could soon be heard.\n\nGabriella snuggled in next to Ben and kissed his cheek. He turned his head and they shared a tender kiss.\n\n\"Hey! Get a room you two! Kids over here!\" Daniel barked with a grin and got a smack from his sister. \"Hey!\" He smacked his sister back.\n\n\"Settle down you two,\" Gabriella scolded gently. She smiled as she rested her cheek on Ben's shoulder. \"I'm too pooped to go out to dinner tonight. I can't believe we squeezed all that into one day!\"\n\n\"Well, we only have the weekend so live for the moment,\" Ben sighed.\n\nGabriella didn't want to think about that. She was so happy right now. With her family all around her. \"Can we just order in pizza tonight?\" she asked as she snuggled closer to Ben.\n\n\"Do they have that here?\" Ben asked seriously. She leaned up to stare at him and caught the impish smile on his lips. \n\nBen started to laugh at her incredulous expression as did her kids. She grinned at him. Happy was too small a word to describe how she felt.\n\n\nOnce they'd had their dinners and talked until every third word was a wide yawn Gabriella got her kids settled in for the night. Daniel was already snoring gently on the pull out bed and she'd tucked her daughter into her bed in the second bedroom. \n\nGabriella slipped into the bedroom she was sharing with Ben. He was already in bed leaning up against the headboard. The sheets covered him from the waist down. This meant she could clearly see his broad chest and strong arms. A thrill shot through her. \n\nHe was all hers tonight but they would have to be quiet as the walls weren't that soundproof and her kids were close by. That said she wasn't going to deny herself this treat she'd been craving for so long!\n\nShe took off her dressing gown and Ben's eyes lit up at the sight of the sexy black satin and lace nightie she'd purchased specifically for tonight.\n\n\"My god you're lovely!\" Ben said, his deep voice rumbling with his desire.\n\nShe couldn't keep the smile from her face as she moved onto the bed from the bottom. On hands and knees she moved up the bed towards him, her heavy breasts swaying, barely contained by the satin. She held his eyes with hers and saw he was enjoying the show.\n\nShe stopped just between his feet and tugged the sheets down. Her eyes widened in surprise and joy as she saw Ben was naked under the sheets and he had obviously enjoyed watching her approach. His cock was rising to greet her and she purred with satisfaction as she pulled her nightie up and over her head. Now she was as naked as he was.\n\nBen glanced at the wall between the two bedrooms. \"Uh, we're going to have to be really quiet,\" he whispered.\n\nShe grinned wickedly as she stretched out between his legs until her face was only inches away from his stiffening cock. She looked up at him and flicked her tongue along the head. He jumped and sucked in a sharp breath at the sensation.\n\n\"Shhhhh,\" Gabriella said as her lips pressed against his hard shaft. Ben moaned then slapped a hand over his mouth. Her eyes twinkled with happiness.\n\nShe ran her tongue up and down the underside of his cock and stopped to give his balls some loving attention. If she was honest she was a little obsessed with them. She loved their weight and how they felt in her hands. Mostly though she got a special thrill sucking them into her mouth, running her tongue over them and she delighted in feeling and hearing Ben's reaction when she did this.\n\nHe was struggling to keep his moans muffled as she stroked his cock and balls with her active tongue. It was pure bliss. When she finally took his cock into her hot mouth he threw his head back at the intensity of the sensations and struck it against the ornate headboard with a loud crack. He saw stars and held his smarting head in both hands.\n\n\"Everything ok in there?\" Miriam called out through the wall.\n\nBen opened his eyes to see Gabriella's breasts in his face. She was up on her knees in front of him, moving his hands to see if he'd cut the back of his head. She didn't see any blood so she relaxed.\n\n\"We're good! Ben just bumped his head on the headboard when he was leaning back. Good night!\"\n\nShe squeaked loudly as Ben sucked one of her nipples into his mouth. He wrapped his arms around her pulling her tighter against his chest as his tongue teased her. \n\n\"What was that?\" Miriam called out.\n\n\"Nothing! Go to sleep!\" Gabriella exclaimed as she clung to Ben's head. She bit her lip as he drove her mad with his mouth. He moved to the other nipple as his hands slid down to grip her ass cheeks. She gasped out loud once more. \n\n\"Mom?\"\n\nDaniel's voice called out from the living room. \"For Pete's sake Miriam, go to sleep and let them play!\"\n\nBen pulled back to stare up at Gabriella in surprise. Her eyes were wide with surprise as well. They both burst into laughter.\n\nOnce they got control of themselves they realized the moment and mood had passed. A feeling of domestic bliss had taken hold and they smiled at each other happily. \n\nThey settled down under the covers and snuggled together after Ben turned out the light.\n\n\"I know it's interfering with our 'play' but I can't thank you enough for bringing them with you,\" she whispered to him. \n\n\"I love you Gabriella, with or without the 'play',\" he said smiling back at her in the dark.\n\nHer soft lips found his and they shared a sweet kiss that warmed them both. They snuggled against each other and let sleep take them.\n\n\n\nChapter 25\n\nBen, Gabriella and her kids were having lunch in the restaurant overlooking the plaza of Duomo di Milano where she'd met Catherine and Chanel Babineaux. They froze in surprise when they spotted the tall brunette striding towards their table. Ben was shocked by how gaunt the woman looked.",
        "He stood as she arrived and she looked at him with great sadness in her eyes. \"Chanel! Please join us!\"\n\nA waiter added a chair to their table and Chanel sank into it gratefully. Her short black hair had grown out a little and was looking like she'd slept on it. She wore no make-up as usual but with the weight she'd lost and the apparent lack of sleep the bruises under her eyes made her look truly exhausted.\n\n\"What happened?\" Gabriella asked.\n\n\"I tried. I did. I tried to put her from my mind and move on. Go back to my life before...\" Chanel sighed and rubbed her face. She looked at Ben again. \"After that animal Rapava took my Isabelle I had my hate for him and the hunt to keep my heart and mind occupied. Then Cath-\" her voice caught. \"Then she entered my life and I was torn. I still had to complete my mission but there was a chance for love again.\"\n\nHer face tilted down and she seemed to be struggling to hold back her tears. When she looked up again her eyes were glassy. \"I've been so single minded since I escaped my mother's plan for my life. I had my ambitions and my own plan. Isabelle was the one unexpected element but she flowed effortlessly into my life and was content to follow. I made room for her in the course I'd set. When she was taken there was a huge void in my life. I thought Catherine might step into Isabelle's place but she is so much different. She is not content to follow. She-\" a sob escaped. Gabriella took her hand and Ben saw Chanel took strength from the touch as she bit her lip to stop her tears.\n\n\"She will not follow. She is strong and willful and has her own plan and commitments. And my plan is dust in my mouth. Nothing has meaning anymore. Without her, I am nothing.\"\n\nGabriella made a sympathetic sound and squeezed her hand.\n\n\"Why didn't you call her? Tell her?\" Ben asked thinking of the pain Catherine was going through as well.\n\nChanel dropped her eyes again. \"In my desperate desire to start over I erased all the information I had for her. No numbers. No address. Then so much time passed. She must hate me. For how I ran.\"\n\nBen scowled. \"If you think that you don't know her well enough!\"\n\n\"Ben!\" Gabriella admonished and he settled back in his chair but he wasn't finished. \"I'm sorry for that outburst Chanel. But you're wrong about Catherine's reaction. She's heartbroken. She misses you terribly. She wants you back.\"\n\nChanel began to cry softly and Gabriella moved to pull her into an embrace. \n\nEventually, Chanel got control and thanked Gabriella. She wiped her eyes and for the first time she seemed to become aware of Miriam and Daniel. She smiled weakly. \"You must think I'm a silly woman.\"\n\n\"Not at all. I think you're a woman in love. You should be with the one you love,\" Miriam said gently and Daniel nodded.\n\nChanel blinked at the young ones and looked to Gabriella. \"You truly are the Goddess of Love if your children are this wise about love.\"\n\nGabriella blushed and smiled at the woman.\n\n\"Miriam and Daniel are flying back home tomorrow on a jet. Catherine is picking them up at the airport. There is room on that jet if you want to go to her,\" Ben said.\n\nChanel looked at him in surprise. \n\n\"Understand, Catherine loves me and I love her. I'm not giving her up but I don't have to. She loves you too. There is more than enough love for everyone. She needs you as much as you need her. Go to her. Find it in yourself to understand that love isn't finite or have to be divided and make it work. You're right about one thing. Nothing else matters,\" Ben asserted.\n\n\"I- I would like to go to her,\" she said shakily looking into Ben's eyes.\n\n\"I'll call the jet service to let them know you will be joining the kids on the flight home,\" he said and stood taking his cell out.\"\n\n\"Are you not flying home as well?\" Chanel asked. \n\n\"No, I have business in Australia to attend to first.\" With a nod he left to make the call from the lobby where the signal was better.\n\nChanel looked at Gabriella. \"I feel like a leaf, lost in the wind.\"\n\nGabriella smiled and took her hand once more. \"We all feel that way when life gets away from us. When we forget to pay attention to what's truly important. I promise, when you're in Catherine's arms again the world will right itself and you'll find your balance once more.\"\n\nChanel smiled and looked at the kids. \"You are very lucky to have this woman as your mother.\" Two happy grins told her they knew.\n\n\"Where are you staying? Wait- how did you find us?\" Gabriella asked in surprise.\n\nChanel raised an eyebrow. \"I am a detective.\"\n\nThree grins indicated they were suitably impressed.\n\n\"I am staying at a dumpy little hotel on the edge of town,\" she replied.\n\n\"Check out and bring your stuff to the Brezza offices. You can stay in the suite at the office tonight. There is a party tonight in honor of Ben's saving the company. It will be good to unwind, there's going to be delicious food, drinks and dancing. And a really nice bed to sleep in until we pick you up in the morning to drive you and the kids to the airport.\"\n\n\"Ben saved the company? The last I heard you were trying to sell off assets to save the company,\" Chanel said.\n\n\"I was hunting for investors with very little luck. Ben stepped up and made a major investment to save this season's product line up,\" Gabriella beamed.\n\n\"Major?\" Chanel asked.\n\n\"Millions major,\" Gabriella said with a raised eyebrow.\n\nBen returned and took his chair. He saw the two women smiling at him. \"What?\"\n\n\"Nothing,\" Gabriella smiled sweetly.\n\n\"I must go to check out of my dumpy little hotel. I will meet you tonight at Brezza,\" Chanel said.\n\nEveryone stood and gave Chanel a hug and a kiss on the cheek. She especially enjoyed hugging Gabriella as the woman exuded love. Chanel was convinced Catherine was right about her friend. After a moment's reflection she thought she might be right about Ben as well.\n\n\n\nBrezza headquarters was buzzing with energy that night and Ben was right smack in the middle of it. Gabriella failed to mention just how large a 'party' the employees were going to throw for him.\n\nHe was wearing his dark suit which normally made him an intimidating presence but each and every employee of the merged companies insisted on shaking his hand, hugging him, kissing his cheek, or all of the above. Gabriella did her best to move the more amorous and enthusiastic ones along but by the height of the evening Ben was feeling truly worn out. He needed a little downtime so Gabriella found him a table in the corner and found four of Brezza's security staff, who also owed their jobs to Ben, to stand guard and redirect the now slightly inebriated staff away from the table.\n\nFrom his vantage point Ben could see most of the floor space the party was occupying. There was a large screen on one where images from the most recent fashion show were being displayed. This was the collection that was already making waves in the industry. Fashion was a very fickle business but for this year it seems theirs was the hot iron and it had struck well.\n\nGabriella finally explained what she meant when she said his name had leant the company a great deal of respect with the suppliers. He was holding one of the silk garment tags that were being sewn into each item. Sewn onto each was a silhouette of the blasted brass statue... with permission from Gabriella's cousin who was reaping her own fortune from the damn thing. The chateau was booked for the foreseeable future as the only way to see the real statue was to stay at the hotel. A copy was on display at Richard and Henry's hotel as that was only fair. The two businesses shared the wealth very well.\n\nGetting back to the silk tag, some clever stitching left the impression of a formidable appendage between the legs... or it could just be the contour of his thigh muscle. It was left to the imagination of the wearer. \n\nHe'd been shocked and a little disturbed when Gabriella first handed him the tag and explained what it was. Then she explained how it was driving their pre-orders through the roof. The order estimates for the collection were being recalculated but it seemed like they had underestimated by a factor of 3 if not more. The production department was thrilled!\n\nSo his little foray into investing in fashion was going to pay off very well after all. His nest egg was going to get another sizeable bump.\n\nHe tucked the tag into his pocket and looked out over the party. He could see Daniel's smiling face behind his new camera. He was circulating, taking candid shots and the models hired to show off the new line were all fawning over him. Someone had the brilliant idea to tether his camera wirelessly to the computer displaying the images up on the screen and his party shots randomly appeared on the screen as well. He saw one of Miriam and it took his breath away. \n\nThe image on the screen showed her wearing one of the new dresses and laughing with two of the models. Daniel had captured a moment of pure happiness and joy for his sister. It seems Miriam had been made an honorary model for the evening and Ben thought she looked absolutely beautiful. \n\n\"Oh my god, I look like a goof!\"\n\nBen looked away from the screen to see Miriam standing next to the table looking up at the screen in dismay.\n\n\"What are you talking about? That's a wonderful picture and you look lovely!\" Ben protested. He noticed she had on a different outfit than the one in the image and grinned. \"Are you enjoying yourself?\"\n\nMiriam's face lit up with a huge grin. \"So much! I only wish Karlene was here to share it with me!\" she lamented.\n\n\"We'll ask her mother if she can join you next time, ok?\" he suggested.\n\n\"Oh my god yes!\" Miriam gushed. She looked over her shoulder as she heard the models laughing and calling her name. She glanced back at Ben. \"Thank you so much for this, Ben!\"\n\nHe just smiled and nodded so she turned and rushed back over to the ladies who whisked her away.\n\nGabriella showed up at the table with a stylishly dressed older woman at her elbow. Ben stood as the woman was introduced as Monique Lemoine, a good friend of Brezza for years and a reporter for one of the more popular and well respected fashion magazines. She was the only member of the press invited to this party. Her grey streaked black hair was pulled back into a long ponytail and she favored the color black for her blouse, slacks, and high boots. She kissed his cheeks as this was the ritual he'd gone through all night.\n\nBen gave Gabriella a quick look when he heard the woman was a reporter then they all took seats with Monique across the table from Ben and Gabriella.\n\n\"I understand your hesitance to speak with someone in my field. Many of the articles released about you have not been fair or impartial,\" Monique said with a small knowing smile.\n\n\"Yes, my relationship with the press hasn't exactly been smooth,\" he admitted with a cautious look.\n\n\"Everyone wants your story and will make one up when they can't get one,\" she continued.\n\nBen frowned but nodded. He wondered if she would do the same.\n\n\"I was asked to come tonight not in my official capacity but as a long-time admirer of the designers and the brand. Brezza has done some truly innovative work and I was horrified when that jackal Leone and his bitch tried to destroy it. It is my understanding that you two are the reason the company and all these good people,\" she swept her hand out to indicate the celebration around them, \"are able to continue to innovate and share their beautiful creations with the world.\"\n\nBen squirmed. \"It's Gabriella's efforts that made it possible, not mine. All I did was buy some shares.\"\n\nThe woman looked at Ben with a smirk. \"I think your investment cannot be minimized in this case.\" \n\n\"But it can and it should. Gabriella stepped up and through her blood, sweat, and tears made it possible to merge the companies so they could produce these amazing clothes. My involvement is purely financial. It was her compassion, brilliance, and strength that saved all these people!\"\n\nMonique was still giving him a skeptical look. \"Purely financial,\" she said and Ben nodded.\n\n\"Are you an investment specialist?\" she asked and he had to shake his head. \"Maybe you are a gambler?\" she said giving him an evaluating look and again he shook his head. \"Investing in the fashion industry is one of the riskiest gambles you could do so I think you are a gambler,\" she insisted. \n\n\"Not at all. I didn't invest in the fashion industry. I invested in Gabriella. I trust her. There was no gamble at all,\" he said calmly.\n\nGabriella hugged him and turned his face so she could give him a kiss. Ben blushed at her display of passion in front of this stranger. \n\n\"I think this is a love story, yes?\" Monique said smiling at the couple.\n\nBen looked at her for a moment then slowly smiled and nodded. \"Yes... yes it is. Gabriella loves these wonderful people and needed to save them. I love Gabriella beyond measure. I trust Gabriella with my heart so trusting her with my money is nothing.\"\n\n\"Well put,\" Monique smiled happily as Gabriella teared up at Ben's words. He kissed her tenderly then she leaned against his side as he put his arm around her.\n\n\"If the buzz is to be believed Brezza is going to have an extraordinary season. Is it true that a major American retail chain has placed an order for a portion of the collection?\" the reporter asked. \n\nBen looked in surprise at Gabriella who smiled and nodded. \"But I'm not at liberty to say which one at this time. You'll have the exclusive in about five days,\" she said.\n\n\"Would you mind if I included a small piece on the two of you when I release that news?\" Monique asked.\n\nGabriella looked hopefully into Ben's eyes and he sighed with a smile. He focused on the reporter. \"Gabriella trusts you so I'm going to say go ahead. Please pardon my reluctance. I've been burned too many times to be comfortable by having additional attention.\n\n\"Yes, I've read the articles. They are poorly written and I assume are filled with inaccuracies?\" she asked.\n\nBen nodded but didn't rise to the bait. She smiled. \"Presented with an opportunity to clear the air and set the record straight, you choose silence instead. You are consistent at least.\"\n\n\"My life story is mine,\" he replied. \"If you wish to write about your personal impressions of who we are, that's your story.\" He leaned forward. \"Nothing would make me happier than to fade from the public's attention. I'm told it will happen eventually when someone else excites them. I'm hoping that happens soon.\" He looked over the shoulder of the woman as he saw Chanel walk into the room. He smiled and looked back at Gabriella. \"She made it.\"\n\nGabriella looked in the direction Ben was pointing and smiled. She slid out of the booth and went to collect the woman who found herself surrounded by Brezza's excited models and Miriam who was wearing yet another example of this year's collection. \n\nChanel's expression relaxed when she saw Gabriella who rescued her from the models, gave her daughter a kiss on the cheek and whispered in her ear, then brought Chanel back to the table to make the introductions.\n\nOnce she was seated next to Monique the reporter turned to her with a smile. \"I'm going to be writing a brief profile on Gabriella and Ben for my story on Brezza's rebirth. Would you care to share your personal impressions of the couple?\" Monique looked at Ben with a raised eyebrow to see if he'd challenge his own words. Ben just smiled at her and nodded.\n\nChanel looked between Ben and the reporter. \"Shouldn't you just speak with them?\" she said.\n\n\"Ben has stated that he does not intend to personally share his story but I am free to write my own 'personal impressions' of who he and Gabriella are. I've known Gabriella for some time but her interaction with Ben is new to me and Ben himself is a stranger to me. My impression will be too limited for the story. You have history with them. Your impression would be richer. Ben, you don't object to others sharing their impressions do you?\"\n\n\"I'd only request discretion when it comes to information that you think I might consider private and personal.\" Ben said to the reporter and Chanel.\n\nChanel grinned. \"That does not leave much as I know Ben is a very private man.\" She paused to look critically at the man as she considered her words. \"I know he is a man with a very deep well of love. I know Gabriella is a 'Goddess of Love'.\" She grinned when the woman blushed and Ben nodded enthusiastically. \"They are a perfect match.\"\n\nThe reporter saw she was not going to get an inside scoop from Chanel and wondered at the seemingly impenetrable wall around the man. Her instincts were telling her there was a story to be had but her good sense told her to let it go. She knew Brezza would live because of these two and Gabriella hinted at good things to come for the company which meant exciting times ahead and stories for her. She would be grateful for that.\n\nShe nodded to Chanel for her 'quote' and bid them all a good night as she slid from the booth. She'd spotted one of the senior accountants who looked like he'd helped himself to the free wine a little too much. He might be an excellent source of information.\n\nWhen they were alone Ben leaned forward. \"Thank you,\" he said to Chanel.\n\nShe grinned at him and nodded. She spotted Daniel taking pictures and her mouth dropped opened in surprise as she realized some of the images on the big screen had come from his camera. She turned to Gabriella who was once more wearing a proud smile on her face. \"He's a very talented photographer!\"\n\n\"Thank you!\"\n\nThen Chanel looked over at her shoulder to spot the group of models laughing and giggling over by the bar. Sure enough Gabriella's daughter was amongst them. \"And your daughter is a model? Is this a family business?\"\n\nGabriella smiled. \"Miriam is just having a good time. She's actually expressed an interest in marketing. This is excellent experience for her. I would love to work with her! Daniel's grades are top of his class but he hasn't really indicated what he would like to do as a career. I'm delighted he's enjoying photography. If it will become his occupation, it's too early to say. To work with him as well? Heaven!\"\n\nChanel grinned at the other woman's look of joy. She wasn't interested in having children of her own but she could appreciate good parenting when she saw it. \"They are wonderful kids! You have reason to be proud.\"\n\nGabriella beamed a smile across the table.\n\nThe DJ announced his arrival and the dancefloor came alive. Grinning happily, Gabriella tugged Ben and Chanel from the booth and they headed out onto the floor to enjoy the music with the others. A cheer went up when the staff saw Ben and Gabriella join them. Ben relaxed and just let the beat take over. Gabriella danced close to Ben and there was a fair amount of bumping and touching. Gabriella smiled happily as she saw Ben's eyes on her and the heat in them.\n\nThey stayed on the dancefloor through set after set. Chanel was out there with them the entire time. \n\nFinally Ben caught sight of a clock and realized he had to be the responsible one and get them to their beds so they would be able to wake for their flights the next day. He gestured back to the table and got nods from Chanel and Gabriella. He looked over the heads around him and saw Daniel dancing as well, the camera still in his hands. He grinned and pointed towards the corner table and the young man nodded back.\n\nGabriella collected Miriam and they all met at the table. \n\n\"Time to call it a night,\" Ben said to the group. He looked to Chanel. \"As you are staying here I suppose you could keep dancing but we have to be at the airport by 8AM tomorrow, uh today,\" he said realizing again that it was almost 1AM.\n\n\"No, I will head off to bed now. I'm done for the night as well,\" she smiled in return. She pulled Gabriella into a hug and gave the kids hugs as well. Finally she faced Ben. \"I cannot tell you how much this means to me.\"",
        "He just smiled. \"I would do anything for Catherine's happiness and this is going to make her very happy.\"\n\nChanel's eyes twinkled in anticipation. She hugged Ben tight then waved at the group as she headed off to her suite.\n\nGabriella got them organized and out the door. The night air was chilly and they rushed into the cab. Mom and children snuggled in the back as Ben sat up front with the driver. Both Daniel and Miriam were nodding off against their mother's shoulders from the late hour and all the excitement though Miriam's fatigue might have had an additional cause. Gabriella had given Miriam permission to have a glass of wine with the ladies and she might have had two... or three. \n\nThey got to the apartment and Ben carried Miriam upstairs as Gabriella guided her sleepy son. They put the kids into their beds and Gabriella kissed and hugged them. Ben kissed their foreheads then followed Gabriella into their own bedroom and closed the door. \n\nOnce they were alone they got ready for bed by just removing their clothes. They'd slept nude the previous night and Gabriella enjoyed the freedom of it. They brushed their teeth then slipped under the covers. Ben turned out the light then spooned Gabriella who rubbed her ass back against his cock. It began to wake up. She sighed and pressed back more firmly.\n\nBen went still as he looked at the shadowy outline of the beautiful brunette. \"Are you sure? We had some difficulty being quiet last night. Oh shit! I didn't bring any condoms!\" he lamented.\n\n\"I'm safe. I need to 'play' Ben. I need you!\" she begged.\n\n\"I need you too,\" he said rolling her onto her back as he moved his body over hers. \n\nHe kissed her and her mouth was demanding, her tongue sliding into his mouth to stroke across his. He gave her the passion she needed and more.\n\nWhen he tried to move his kisses down her body she pulled him back up. He looked into her eyes in the moonlight and saw her desperation. \"I need you inside me, now!\" she whispered.\n\nBen nodded and rubbed his hard shaft up and down against her wet pussy. \n\nHer eyes flew wide and her mouth dropped open as she gasped quietly, clinging to him, kissing his shoulder and chest as he moved over her. \n\nHe shifted lower and felt her hand between them lining him up against her wet opening. He pressed forward and the thick head forced her open as it slid inside.\n\n\"ffffffuuuuuccckkkk! Ben, oh my god!\" Gabriella moaned against his shoulder to stifle the noise.\n\nHe stopped and withdrew slowly then pushed himself inside a little deeper than before.\n\n\"Oh yes... yes... god you're so big!\" she said breathily as she continued to press her mouth against his shoulder. She bit down gently and Ben smiled as he remembered Catherine's bite.\n\nOnce more he slid himself out then teased her with short strokes, dipping just the head inside and out. She gasped and wrapped her legs around him to pull him deeper. He resisted for a moment then let her pull him inside. She didn't stop squeezing until his pelvis settled against hers. He rocked his hips, grinding against her clit and she squeaked.\n\n\"Oh god Ben! What you do to me!\" she hissed quietly.\n\nBen was basking in the incredible bliss of being in Gabriella's most intimate embrace, arms and legs wrapped around his body while his cock was deep inside her. She found his mouth with hers and his pleasure was complete. He gently caressed her full lower lip with his and the tip of her tongue slipped out to stroke across his lips. He caught her tongue with his lips and sucked it into his mouth deeply as she groaned in pleasure. \n\nHe couldn't get over how passionate she was being tonight. She was holding him so tight and kissing him so boldly. Her hands moved up to the back of his head to slip through his hair as her mouth explored his.\n\nBen pulled his cock halfway out until her legs pulled him back with a grind at the bottom. She gasped as her clit threw sparks through her body and Ben pulled out again only to be pulled back inside. They repeated the tug and pull actions and gradually increased their speed always ending with bumping their bodies together. \n\nGabriella's eyes were beginning to roll back from the impacts on her clit as the stimulation was intense and overwhelming.\n\n\"Ben! Fuck me! Please, take me! Fill me up!\" she sighed to him and his pace increased. She lost the ability to be quiet, her moans beginning to fill the room, so he lifted her head to his shoulder once more. Her teeth fastened onto his dense muscles there and he jolted from the sharp sensation. His strokes became erratic as the pleasure was too much for him.\n\n\"Beh! Beh! BEH!\" Gabriella grunted with her mouth against him.\n\n\"Fuck! Gabriella! I'm going to cum!\" he gasped.\n\n\"Yeh! Do-\" She pulled back from biting him. \"Do it Ben! I'm right there!\"\n\nThey were both past the point of worrying about how loud they were being as his hips went into overdrive. The dull thumps of Ben's body slapping hers against the mattress competed with her cries of joy and his growl as their pleasure crested.\n\nBen pressed his head to the mattress next to Gabriella's shoulder as he moaned in ecstasy. He ground his pelvis against hers as he came in surges. She pressed her mouth against his shoulder to block her howl as her pleasure spiked savagely. \n\nIt took some time to catch their breath and they felt completely spent once the waves of bliss finally ebbed. Ben pulled his softening cock from her body and flopped down on the mattress next to her. They gasped for breath staring at the ceiling.\n\n\"Oh my god Gabriella! That was wonderfully intense!\" he managed to get out between deep breaths.\n\n\"It was amazing!\" she sighed happily. \n\n\"We weren't too loud were we?\" he asked nervously.\n\nShe looked over at him and realized they had been pretty loud. \"Let me check on them,\" she said as she slipped from the bed. She wobbled on her feet and looked back at Ben with a grin. \"My legs are a little wobbly after that!\" She pulled her dressing gown on and slipped out into the living room. Daniel was snoring peacefully, oblivious to the world. She smiled down at him and moved his camera off the bed to the coffee table. She couldn't resist kissing his cheek and he smiled in his sleep.\n\nNext she slipped into Miriam's room. The girl was sitting up but her eyes were closed. \"Miriam?\"\n\n\"Thirsty, mama.\"\n\nGabriella smiled. She got a glass of water for her daughter and watched her drink it all down before taking it back from her hands.\n\nShe kissed the sleepy girl and Miriam laid back against her pillow, out before her head touched down. She must have had more than two glasses of wine. The naughty girl was going to regret that in the morning.\n\nGabriella left the room and returned to Ben, dropping her dressing gown on a chair.\n\n\"Everything ok?\" Ben asked anxiously.\n\nShe slipped under the covers and snuggled up against him as he put his arm around her. She sighed contentedly. All that mattered was this moment. \"Yes, Ben. Everything is perfect!\"\n\n\n\nChapter 26\n\nBen leaned back in his first class seat on the next leg of his journey, on his way to Melbourne, Australia. He shifted in his seat with a sigh as he realized he really had been spoiled by that jet flight. The first class seat on the commercial flight was far less comfortable.\n\nHe smiled out the window as he remembered how Miriam looked this morning when she got up.\n\n\"I'm never drinking again!\" the young girl had moaned as she held her head.\n\n\"I told you one. One glass of wine does not result in this,\" Gabriella said gently to her daughter as she tried to get her to eat the dry toast and drink more from the tall glass of water.\n\nDaniel shook his head at his sister and took a quick picture to capture the moment. \n\n\"Mom, tell him to stop taking pictures of me when I feel like this!\" she complained.\n\nGabriella fixed a look at her son and he nodded with a smile.\n\nBen was sitting at the table enjoying the domestic moment. \n\n\"We have a van picking us up shortly so have you packed everything?\" Gabriella asked. Daniel nodded and pointed to his suitcase and his camera bag on top.\n\nMiriam nodded gently and pointed to her bulging suitcase. \n\nGabriella walked to the window and saw the van pull up. It was time to go.\n\nThey made their way to the van and stopped by the Brezza offices to pick up Chanel who was fidgeting nervously. Gabriella gave her a hug and the woman settled down with a grateful smile. \n\nThey arrived at the airport with plenty of time but security was insistent that they move through. They said their goodbyes to Gabriella who clung tightly to her kids then Ben before they headed inside. She'd wanted to know if he was going to be coming back in her direction but he'd let her know his return from Australia went through Los Angeles. She pouted so he kissed her once more until she was left panting and grinning. He promised to get back to her as soon as he could. He still remembered how lost she looked as they stepped through the door. His heart hurt but he knew he had to let her live her dream. He couldn't be the reason for her turning her back on her dreams. He'd never forgive himself if that happened.\n\n\"Mr. Shepherd? Is everything ok? Is there anything I can get you?\"\n\nBen came back from his thoughts to look up into the hopeful expression of the first class flight attendant. Slim and surprisingly petite by airline standards, she was blue eyed and fair haired with a delightful sprinkling of freckles across her cheeks and her small snub nose. She tucked a loose strand of her blond hair behind her ear once more as she held his eyes. \n\n\"Ben, please. Could I get a cup of water?\" he asked and she grinned as she turned away to fetch it. He didn't really need the water but it kept the woman busy and his continued negative responses were making her unhappy. \n\nShe'd been a little star struck since he'd walked onto the plane and almost bumped into her. She looked up at him and her jaw dropped as she recognized him from the scar across his face and his physical dimensions. She'd immediately assigned herself as his personal attendant though she did quickly serve the other passengers seated around him, glancing in his direction as she did in case he were to suddenly need her.\n\nHis seat was next to the window and the seat next to him was empty which was perfect. Across the aisle in the three center seats were three older but very well dressed women who were having a quiet argument amongst themselves and ignoring him. That suited him fine. The two men behind him were working on their computers and there was a grey haired couple in the two chairs in front of him. That took care of his immediate neighbors and the remaining passengers in first class were keeping to themselves so he breathed a sigh of relief. Now, if the flight attendant could find something else to do Ben would be set.\n\n\"Here you go, Ben,\" the woman said emphasizing his name as she handed him the cup. He took it and her hands lingered a little too long before she moved back with a smile,\n\n\"Thank you,\" he said returning her smile.\n\n\"Julie.\"\n\n\"Ah, thank you Julie,\" he said and sighed quietly with relief as she was called away by the other flight attendant.\n\n\"Excuse me?\"\n\nBen looked across the aisle and the closest of the three women was trying to get his attention. \"Yes?\"\n\n\"My friends and I are having a disagreement you could settle for us,\" she said with an expectant look on her face.\n\nBen had a bad feeling about this but nodded as he couldn't think of a polite way to avoid it.\n\n\"You look familiar to us but we can't recall from where. Sadie, two seats over, says you work for Interpol with their special forces as she says she saw you on the news. Eleanor here says you're a movie star as she saw you in a magazine. I think...\"\n\nBen stared at the woman whose face was turning red as she lost her nerve to continue. Her friend Eleanor leaned around the frozen woman. \"Nadine thinks you do porn!\"\n\nHis stare became a glare and his scar flared making the women nervous. \"You're all wrong. I don't work for Interpol, I'm not a celebrity by any stretch of the imagination, and I've NEVER done porn!\"\n\n\"Oh my god! You're the bronze man!\" Nadine gasped as the facial scar linked her memories together and she suddenly realized why she'd thought he'd done porn. Eleanor and Sadie gasped too as they connected the dots.\n\nBen turned his face to the window. He was truly sick of that sculpture. He considered asking Stephanie to destroy it. Richard would have to get rid of the copy... and the mold and original clay sculpture if it still existed. He sighed knowing that wasn't going to happen.\n\nHe'd read his ticket wrong and hadn't realized how long this flight was going to be. This morning when he checked the itinerary he saw he'd be in the air for over 20 hours. There was going to be a stop in Dubai. He'd immediately sent a note to the company in Melbourne to let them know he'd be there a day later. Then he sent a note to Margaux explaining his mistake. He'd said he'd call her when he got to Melbourne.\n\nBen tried to relax but he could still hear the twittering of the three ladies across the aisle. It was going to be a long flight.\n\nHe must have fallen asleep as he jerked awake when he heard voices shouting from further back in the plane. He was a little dazed and his neck was stiff from the too low headrest but he twisted in his seat to see what was going on. The curtain was closed between first class and economy but the screams came through quite clearly. It was an angry male voice yelling something and a woman screaming angrily back but there was an edge of fear in her voice. Ben was on his feet and moving down the aisle before he was completely awake. \n\nHe went through the curtain and moved quickly down the aisle towards the noise. It was coming from further back in the plane behind the next set of curtains. He opened the first and saw the tense face of a flight attendant on the phone. He nodded to her and pushed through the next curtain.\n\nHe saw two flight attendants, one on either side of a confrontation, trying to calm a man in some kind of white gown, maybe in his late sixties, who had a grip on a woman's hair in his left fist. With his right hand he was trying to stab her with a fork. The woman in his grip had a hold on his right wrist but she was weakening as he yanked on her hair while screaming in her face. None of the passengers around the couple moved to stop him. \n\nBen rushed forward, gently moving the flight attendant from his path so he could reach the struggling couple. He seemed to fill the limited space in the aisle and the man came out of his rage long enough to look up at him in surprise as Ben yanked the fork from his grip, dropping it on the floor behind him.\n\n\"Let. Go,\" Ben growled menacingly.\n\n\"Go away. This has nothing to do with you!\" the man barked angrily.\n\n\"Last chance. Let go now.\"\n\nThe man looked into Ben's eyes and saw the violence poised to crush him. He took in the white scar across his face. His nerve broke.\n\nThe man shoved the woman towards Ben and said something which made the woman stiffen and scream angrily back at him. Ben wrapped an arm around the thrashing woman and dragged her away down the aisle until they reached the central set of curtains and pushed through. He met the flight attendant who was still on the phone and the one he'd moved aside. \n\n\"I'm sorry for barging through like that,\" Ben said to the attendant he'd moved.\n\n\"It's fine. Thanks for the assist,\" the woman said as she turned to the shaken woman Ben was guiding. \"Let me get something for those cuts,\" she said to her.\n\n\"They are merely scratches. The old fool hadn't managed to stab me yet,\" the woman replied in a lovely British accent. She looked up to Ben. \"Thank you for stopping him. He was going for my eyes next.\"\n\nBen rocked back at the casual way she'd mentioned it.\n\nA man pushed through the curtain from the front of the plane. Ben saw the man's uniform and assumed he was one of the flight crew. \"Is this the man?\" he said with a thick Australian accent, looking nervously at Ben. \n\nBen smiled at him and shook his head. Then he jolted and scowled as he felt something poke sharply into his back. He spun and saw the frightened face of the older man standing in the curtain with the fork gripped in his fist. The tine tips showed just a little red. Ben reached out and plucked the fork from his fingers, again, and leaned down to glare in his face. \"You've just used up all of my patience. Go sit down in your seat. NOW!\" he yelled and the man turned and rushed away. He stumbled a few times but he managed to get back to his aisle seat and sat down to look back fearfully. Ben gave him one more glare. \"Leave that seat again and I will deal with you. Do you understand?\" The man nodded vigorously. Ben closed the curtain and turned back to the group inside.\n\n\"Geezus! He stabbed you? Your back is bleeding!\" the man said. The flight attendant immediately pulled out the first aid kit. \n\n\"I'm a doctor,\" the woman Ben rescued said and took it from her. She looked to Ben. \"Let me see the wound.\"\n\nBen sighed and pulled his shirt off.\n\n\"Fuck me! Who ran you through the thrasher?\" the male flight crewman exclaimed as he took in the scars. Ben ignored the question.\n\n\"I see now why you weren't frightened of a fork,\" the doctor said with a wry grin taking in the damage on Ben's chest. \"Please turn so I can see where he stabbed you.\" \n\nWhen he turned his back to them he heard the sharp intakes of breath that he expected when they saw the other signs of violence on his body.\n\n\"Compared to the rest these three tiny holes are nothing,\" the doctor said. \"The wound is barely bleeding so it's not deep.\"\n\nBen felt her wiping something over the wound which stung a little then she applied a small square of gauze and taped it down. \n\n\"You can put your shirt on though you might want to clean it first,\" she said.\n\n\"I've got a clean shirt in my carry on,\" Ben replied.\n\n\"Where can we reseat Doctor...\" the man said looking at the woman. \n\n\"Rahal. Dr. Nezha Rahal,\" she said to the crew and smiled at Ben.\n\nThe flight attendant frowned at the co-pilot as she pulled the passenger listing. \"We're completely full. I'll have to find someone who doesn't mind changing their seat. We can't leave her in the back section where he can see her. Passengers in the mid-section won't be keen on moving back.\"\n\n\"There's an empty seat next to me,\" Ben offered.\n\nThe woman blinked and looked at the manifest. \"I see no empty- oh, you're from first class. Yeah, it's against airline policy-\"\n\n\"How much,\" Ben sighed.\n\nThe attendant glanced up at him. \"There's an $800 upgrade fee.\"\n\nBen pulled out his wallet and the doctor looked upset. \"What are you doing?\"\n\n\"Sorry, we have a long way to go and I'm not going to sleep well knowing Stabby McFork Man is back here hunting you. So if you don't mind I'd like to offer you a seat in first class so we can move his target where he can't see it or get to it.\" Ben explained.\n\nThe doctor looked to the flight attendant who was nodding hopefully. She still looked doubtful.\n\n\"Consider it payment for the medical care,\" Ben said.\n\nShe snorted. \"I applied a plaster!\"\n\n\"You've never worked as a doctor in the States I take it,\" Ben grinned and her eyes got wide. \"I may be exaggerating... a little.\"\n\n\"Oh... alright,\" she finally agreed, seeming a little dazed. \"I'll need to get my carry on.\"\n\n\"Let me guess, it's in the storage above his seat,\" Ben sighed.\n\n\"I'll take her back to get it,\" the co-pilot said. Ben nodded and moved to let the man by. The doctor followed him through the curtain.\n\nBen finished the transaction with the flight attendant whose eyes kept slipping to his scarred chest.\n\n\"How... how did you get those?\" she asked quietly.",
        "Be glanced at her as he waited for the credit card machine to accept his code.\n\n\"Drunk man with a big knife and a lousy aim.\"\n\nHer eyes got wider. The machine beeped and she took it back. She handed him the receipt as raised voices sounded off in the back section. Ben spun and tore open the curtain to glare back. \n\nThe seated man was tugging on the handle of the bag the doctor had lifted down from the overhead bin and was yelling something at her. Ben stalked down the aisle and the man let go of the bag and shrank back into his seat.\n\nThe co-pilot lifted his hand and Ben stopped three seats away. He realized he was still topless and everyone was staring but he kept his eyes on the older man who was also shocked by the scars on Ben's chest.\n\n\"My book. In the seat pocket,\" Nezha said and the man who was sitting next to the window plucked it out and handed it past her attacker. She took the book with a nod and walked back towards Ben who began walking backwards towards the curtain. He stepped inside and moved aside to let Nezha by. The co-pilot was having a quiet word with the older man whose frightened eyes hadn't left Ben's.\n\nDr. Rahal walked towards the front of the plane with Ben following her. He picked up the wave of chatter as people watched them go by. People began to crane their heads and look back at him. He heard the phrase 'bronze man' more than a few times and just did his best to ignore it. When they got back to first class Julie was waiting for them and her mouth dropped open when she saw his shirt was off. Her eyes drank in the raw violence of his scarring and she was practically quivering with excitement.\n\n\"Julie, may I introduce Dr. Rahal. She's joining us...\" he turned to the woman. \"Are you going to Dubai or all the way to Melbourne?\"\n\nNezha blinked as she thought about that. \"My... my ticket is for Dubai but I'm going to have to get a ticket back to England the moment I land.\" She began to tremble as her adrenaline ran out.\n\n\"If you don't mind I'll let you take the window seat,\" Ben said gently and she nodded absently as she moved to the seat. Ben lifted her bag into the overhead bin and pulled a black t-shirt out of his duffle.\n\n\"What happened to your back?\" Nadine blurted seeing the bandage. He looked back into the excited eyes of the three women.\n\nBen had already forgotten about the fork wound and thought she meant the scars. \"I fell off my bicycle.\"\n\nConfused and disappointed expressions crossed their faces as Ben tugged the shirt over his muscles and turned away to take his seat.\n\n\"Can I get you anything?\" Julie said gently touching Ben's arm.\n\n\"I'd love some fruit juice and I think a cup of water for the doctor,\" Ben smiled back. Her eyes held his then she nodded distractedly and moved off to get his drinks.\n\nBen sat and looked over at the doctor. \"Are you alright?\" He noticed her hands were shaking a little.\n\n\"Yes... yes, I am now. Thank you for rescuing me. I- I didn't expect his response to be quite so... violent,\" she said with a shaky voice.\n\nThe co-pilot stopped by on his way back to the cockpit. \"Thank you for your assistance back there and a special thanks for keeping your cool even after he stabbed you!\"\n\nJulie had returned and cried in dismay when she heard what the co-pilot said as she looked to Ben. Her hands shook causing her to spill orange juice on the carpet next to Ben's chair. The co-pilot glared at her and took the cups from her hands as she hurried away to get a damp rag.\n\nThe man handed the drinks to Ben.\n\n\"Is that guy back there going to be arrested when we arrive?\" Ben asked.\n\nThe co-pilot stopped and looked at him uneasily. \"Do you or Dr. Rahal wish to press charges?\"\n\nBen looked at her and she shook her head.\n\n\"My chances for justice in this... situation are limited. My best avenue is to return to London,\" Nezha said.\n\nBen nodded. \"I'm passing through and I have no desire to stay.\"\n\nThe co-pilot gave them both a relieved smile and a nod then made his way back to the cockpit.\n\nBen handed the water to Nezha and set the half cup of orange juice down. Julie rushed back and knelt down to wipe up the spill. He noticed her blouse had somehow opened a little more and he was being given a bird's eye view of her lovely cleavage and a very sexy lace bra. When he dragged his surprised eyes back up he saw the satisfied smile on her lips. She bit her lip and got back up to her feet. She spotted the cup of orange juice and leaned across him to take it back.\n\n\"I'll get you a fresh one,\" she said and walked away with a little extra wiggle in her step. \n\nBen blushed from her overt attention and his adolescent libido had certainly taken notice. His pants were becoming uncomfortably tight. He glanced over at Nezha.\n\n\"Do women always throw themselves at you?\" the woman asked quietly.\n\nHe shook his head in embarrassment. \"No... not... always.\" He looked down at his hands. \"When they do it's usually not so aggressive.\"\n\n\"You don't take advantage of these offers?\" she asked and his eyes flashed to hers.\n\n\"No! I'm not... interested in casual affairs,\" he finished.\n\n\"Why don't you just tell her?\" Nezha asked.\n\nBen glanced in the direction of the little kitchen. \"They usually give up without me having to hurt their feelings.\"\n\nNezha sat back and looked at Ben, watching him fidget. She'd just witnessed him shut down a hostile confrontation through sheer strength of will but here a flirting flight attendant had him flustered. She shook her head.\n\n\"If you don't mind me asking, why was the man back there trying to stick a fork into your eye?\" Ben asked.\n\n\"I told Jasim I wasn't going to marry him,\" she remarked.\n\nBen's face showed his shock. \"He's old enough to be your father!\" As the words left his lips he heard the hypocrisy. Weren't some of the women he was with as far apart in age? \n\nHe looked at Nezha and estimated her age to be in the early thirties. The Arab beauty had thick, wavy black hair flowing over her shoulders. She had large, expressive dark eyes, a slim nose and her beautiful white teeth in her wide mouth had a slight overbite. She was pretty in the girl, or in this case, woman next door sense. Her intelligence flashed in her eyes as she leaned closer.\n\n\"My parents moved back to the UAE, settling in Dubai, from London about fifteen years ago and that man back there has taken good care of them in their retirement years. He came to London to find me and ask me to return with him to reconcile with my parents who are dying. As we are almost there he could not contain his excitement and just explained to me that they promised me to him as his bride. He did not like being told no.\"\n\n\"I'm sorry to hear about your parents,\" Ben said and she nodded to him with a slight smile.\n\n\"We haven't spoken in years. Not since they tried to marry me off to a neighbor in London. If he hadn't said they were dying I wouldn't have let myself get talked into going to Dubai. I have no plans to get married. Ever.\" She looked at him waiting for him to object but he just smiled back. She relaxed. \"My career keeps me very busy and I'm happy.\"\n\n\"Are you a General Practitioner or do you specialize?\" he asked.\n\n\"I'm the senior physician at a clinic on the outskirts of London,\" she said. \"We see a lot of trauma victims at the clinic, from broken limbs, to deep lacerations from a variety of sharp objects, and contusions from domestic violence. It's a pretty rough neighborhood. When I'm not doing that I'm dealing with chronic health issues of our senior patients.\"\n\n\"That sounds tough!\" he said in surprise. \n\nShe smiled at him. \"Yes, it can be.\" Her smile dropped away and she looked out the window. \"I handle all of that and I'm almost blinded by a senior with a fork.\"\n\n\"Hey, I can personally say he was pretty dangerous with that fork!\" Ben said to lighten her mood. She turned to smile at him and looked beyond. \n\nBen turned and saw another man in a uniform. Tall, lanky body with blonde hair greying at the temples, the man looked to be in his fifties and he was grinning at Ben.\n\n\"Hello, I'm Richard Hall. I'm your pilot today,\" he boomed with a thick Aussie accent like the co-pilot.\n\n\"Hello, Ben Shepherd,\" he said, restraining the impulse to ask why he wasn't in the cockpit flying the plane then. He shook the man's offered hand.\n\n\"I just wanted to personally thank you for defusing a potentially dangerous situation. It's great that no one got hurt!\" the pilot grinned looking over at Nezha.\n\nShe leaned towards the pilot. \"Mr. Shepherd was injured.\"\n\n\"Yeah, Jerry mentioned you got poked with a fork! What a thing to happen!\" he replied shaking his head. Ben shrugged and the man's smile got wider as he saw Ben wasn't making a big deal of it. Less headache and paperwork for the flight crew.\n\n\"Well I just wanted to say thanks and meet the man of the hour. Imagine, Ben Shepherd on my plane!\"\n\nBen gave him a slightly pained smile and nodded.\n\n\"Well... I'd better get back to it,\" he said and yet he didn't move.\n\nBen could see the man was gripping his cell phone through the fabric of his pants pocket. He wanted to take a picture. Ben sighed inwardly. He looked over at Nezha. \"Excuse me a minute?\" She nodded as he stood up. Ben gestured to the front galley and the pilot's eyes lit up. When they were in the front Julie looked at them curiously. Ben looked at the pilot and gestured to his pocket. \"Would you like to get a picture?\"\n\nThe man's grin widened and threatened to split his face. \"Strewth? My Betty would die if she learned you were on my plane and I didn't get at least one!\" He pulled his phone from his pocket and got the camera app running. He handed it to the smiling attendant and stepped up beside Ben throwing an arm around his back. Surprised, Ben put his arm behind the pilot's back and rested his hand on the man's shoulder. \n\n\"Smile!\" she said and they did. She took a few and handed the phone back to the pilot. Then she pulled out her own phone and wiggled it between her fingers while she looked at Ben hopefully. \n\n\"Sure,\" he said. \n\nRichard took the phone and Julie slipped in under Ben's arm. She pressed her body tight against his and smiled back at the camera. Her head barely reached his chest. \n\nBen was reacting to her hot body pressed against his side but he did his best to smile. The pilot took picture after picture as Julie posed for him. \n\n\"I think that's got it,\" Ben finally said and Richard grinned self-consciously as he handed the camera back to the woman whose hand was lingering on his ass. \n\n\"Would... would you like to see the cockpit? We don't normally do this but...\" Richard said with a coy smile. \n\nBen was stuck. He wanted to get away from their attention and back to his seat as he needed to make sure that man didn't come after Nezha. However, the engineer in him was squealing like a little girl at the idea of seeing the inside of an actual cockpit in flight.\n\n\"Uh, I should keep an eye on Dr. Rahal-\" he said hesitantly.\n\n\"I'll do that for you!\" Julie said with a smile.\n\n\"Oh, uh, alright but just for a minute,\" Ben agreed.\n\nTwenty minutes later he returned to his seat with a guilty smile for Nezha and Julie. The cockpit had been as fascinating as he'd thought it would be and Richard and Jerry were delighted to give him the tour. They took some more selfies with Ben as well which they promised would not be seen outside their specific circle of friends as they would be in the 'shitter' if the bosses found out.\n\nBen stood in the aisle and Julie got up from his seat and smiled up at his face.\n\n\"I've kept it warm for you,\" she said with a smile and she gently pressed her body against his as she moved past. \n\n\"Thank you,\" he mumbled.\n\n\"Oh! I never got you that juice! I'll be right back!\" she exclaimed softly.\n\nBen slipped into his chair and turned his burning face to Nezha who was smiling at him.\n\n\"She's determined,\" she said with a wry grin.\n\nHe nodded uncomfortably.\n\n\"She was telling me how exciting it is to have you on the flight. I have to admit I had no idea I'd been rescued by such a renowned hero,\" Nezha said watching his expression change. \"You don't like being thought of that way?\" she said in surprise.\n\nHe looked over and shook his head. \"I don't. I don't want to be famous. I just do what I do because it needs to be done. All this fame crap is a nuisance.\"\n\n\"But it's true that you rescued those girls from the slave ring?\" she asked.\n\nHe nodded. \"But I was just in the wrong place at the right time. I didn't expect to be there but once I was... I took steps to free them,\" he finished quickly as he saw Julie returning with his juice.\n\n\"Would you care for anything stronger?\" Julie asked, holding his eyes with hers.\n\n\"No, this is great thanks! I don't drink.\"\n\n\"Oh!\" she exclaimed softly. Another passenger signalled her on the other side and she glanced over distractedly.\n\n\"Duty calls,\" Ben said with a smile. She flashed him a dazzling smile and rushed away.\n\n\"Not a drinker? That's nice to hear. Alcoholism is a problem in the neighborhood I work and live in. Getting away from that even for this brief time is a welcome break.\" Nezha said.\n\nBen nodded with a slightly pained frown. \"Yeah, I spent a few years in that trap but with the help of my friends I got out. I haven't had a drink since.\"\n\n\"Those were good friends.\"\n\nBen smiled warmly as he thought of Gabriella and Catherine, his original saviors. \"The absolute best.\"\n\nNezha was watching his eyes and saw the love there. \"More than friends?\"\n\nHe looked over but saw she wasn't trying to pry but was just curious so he nodded. \"Just one of the reasons I don't do casual affairs.\"\n\nHe heard a squeak and turned his head to see Julie rushing back into the front galley. The glass of juice was sitting on the table before him. He closed his eyes and sighed. \"She heard that, didn't she?\"\n\nThe doctor could see the pain on his face. She'd caught the expression of surprise on the attendant's face so she was certain the woman had heard Ben quite plainly. \"I believe so but it was something she needed to hear.\"\n\nHe nodded slowly then drank some of the juice. He sighed, closed his eyes, tilted the seat back a little and tried to get as comfortable as he could with the too low headrest.\n\nBen woke from the gentle touch on his shoulder. He opened his eyes and saw Julie biting her lip nervously. He came awake immediately and glanced over at Nezha who was blinking the sleep from her eyes. He then looked back to see if the man was returning but the aisle was clear. He looked back at Julie. \n\n\"Sorry, we are landing and I need you to raise your seat,\" she said quietly.\n\nHe immediately relaxed. \"Oh... sure.\" He sat forward and brought his seat up.\n\nShe smiled and moved on. \n\nNezha smiled at him. \"You are traveling on to Melbourne?\" she asked and he nodded. \"What arrangements have you made for the layover?\"\n\n\"Layover?\" he blinked.\n\nShe looked at him in surprise. \"The flight continues on tomorrow at 10AM. There is a twelve hour layover. You don't have a hotel room reservation?\"\n\nHe scowled. \"No, this is my first flight to Australia. It seems I really screwed up my ticket this time.\"\n\n\"Is there a problem?\" Julie asked gently as she heard his comment on her way by.\n\n\"Ben did not prepare for the layover. He has no hotel room,\" Nezha explained.\n\n\"Oh! Finding one at the last minute could be a real problem but Rich and Larry would let you bunk with them! There will be a fold out couch in one of their rooms you can use.\"\n\nBen looked at Julie and saw her earnest expression. \"I- I wouldn't want to intrude-\" he began but she grinned and patted his shoulder as she moved away to make the call.\n\nHe looked over at Nezha. \"Thanks for coming to my rescue. I would have probably slept in the airport until my flight.\"\n\n\"Not a comfortable night,\" she remarked with a grin.\n\n\"How about you? You said you're going to get a flight back to London immediately,\" he said curiously.\n\nShe frowned and nodded. \"I'm going to go see my parents. To say goodbye.\"\n\nIt was Ben's turn to frown. \"Are you going to be safe? You said that guy took care of your parents. If we're not going to put him in jail and it looks like the plane's crew doesn't want the headache, he's going to be out there too.\"\n\nShe hesitated and Ben frowned in concern. \"Can I help?\"\n\nShe looked at him in surprise. \"You've done so much already!\"\n\n\"No, I just did what was needed. How far from the airport is your parent's place?\" he asked. \n\n\"A thirty minute taxi ride.\"\n\n\"It's settled then. I'll go with you... unless you don't want me to,\" he finished as he thought he might be intruding.\n\nShe smiled at him as she covered her hair with a scarf and wrapped it around her neck. Only her face was left exposed. \"I would appreciate the company and yes, I would feel safer. Thank you.\" She rolled her sleeves down. \n\nBen watched her preparations curiously. \n\n\"The dress code for women in the UAE is not the same as it is in the UK or the USA,\" she said with a smile.\n\n\"Should I be dressed differently?\" he asked.\n\nShe looked at him. \"You might want to put on something a little looser. Showing off the body is frowned upon.\"\n\n\"Showing off? I'm not...\" He sighed in frustration. \"Finding clothes that fit me is a challenge.\" \n\nShe smiled as she tilted her head. \"I think you would look very smart in a thobe. Very smart!\"\n\n\"Thobe?\"\n\n\"The garment Emirati wear in Dubai. With your coloring you would look very handsome in the white,\" she grinned. \n\n\"Yes, he would.\"\n\nBen turned his head to see Julie smiling at him. \n\n\"It's all set. The flight crew is staying at the Holiday Inn Express overnight. You can sleep on the pull out couch in Rich's room and come back to the airport with us tomorrow for the continuation of our flight,\" she explained with a smile.\n\n\"That's really generous! Thank you for arranging that!\" Ben exclaimed.\n\n\"Just part of the above and beyond service we are renowned for!\" she smiled happily.\n\n\"Uh, I'm going to accompany Nezha to visit her dying parents to make sure she's safe...\" he turned to face her. \"Where are you staying tonight?\"\n\n\"I have friends from London who live here now. I'll give them a call when we land and stay with them after I see my parents,\" Nezha explained.\n\n\"Good, ok... so after I drop her off at her friends place I'll come back to the hotel. How do I find Rich's room?\"\n\nJulie nodded. \"Just go to the reception and let them know who you are. They'll give you an extra key to the room. If you're late don't worry about it. The room will be ready.\"\n\n\"Wow, I have to say this is exceptionally nice of you guys!\" Ben said and she soaked up the praise. She glanced down the aisle as the other attendants were signalling it was time to prepare.\n\n\"Make sure your seat belts are fastened. We'll be landing shortly.\" Julie moved back to the front galley to return to her station.\n\nNezha looked out the window at the lights below.\n\n\"Have you been here before?\" Ben asked.\n\n\"No, I've spent my entire life in London. I was born there,\" she said wistfully.\n\nBen settled back and relaxed as the plane settled down smoothly on the runway. After a long time taxiing they finally stopped at the gate and they were able to disembark. He collected his carry on and got Nezha's for her. As they walked out through the front Ben looked but the cockpit door was closed. The captain and co-pilot were still inside so Ben couldn't thank them but he did thank Julie as he went by. She gave him a smile and a nod. \n\nOnce they were in the terminal they made their way through the processing with the other passengers and picked up their luggage. Nezha called her friends and from the smile on her face Ben assumed they were happy to hear from her.\n\n\"Mary said she and her husband Kamal will meet us at my parent's house,\" she said with fondness in her voice.",
        "\"Good friends?\"\n\n\"Mary worked with me for years. Kamal was originally a suiter of mine but he fancied Mary more. I wasn't interested in dating at the time and I was happy to see her find someone who truly cared for her. She's one of the good ones and as it turns out, so is he.\"\n\nBefore they left she went to a counter and picked up a ticket for a flight back to England the next day. Then they made their way to the taxis with their luggage and soon they were traveling down the highway between the brightly lit towers. \n\n\"This city is remarkable!\" Ben said watching the scenery. There were cranes everywhere so building was going on throughout the city.\n\nNezha smiled at his enthusiasm. \n\nIt wasn't long before they arrived at the low rise apartment complex where her parents lived. Ben got Nezha to tell the driver to keep the meter running and wait for him. \n\nThey went to the front entrance and Nezha spoke with the concierge. Ben watched her become more and more upset. He didn't know what he could do to help.\n\nA woman wearing a shawl over her blond hair entered the building with a tall, slim man in the traditional white gown. \"Nezha!\" the woman called out.\n\nNezha spun and looked at her friend. \"Mary!\"\n\nThe women embraced and held each other's arms as they drank in the other's current appearance.\n\n\"What's wrong?\" Mary asked.\n\n\"He's telling me my parents are dead! That they've been dead for over a month!\" Nezha exclaimed.\n\nBen looked at the man in surprise but he just shrugged.\n\n\"Oh! Where are my manners? Hello Kamal! Mary, Kamal, this is my friend Ben Shepherd. Actually I met him on the plane when he saved me from losing my eye to that awful man Jasim Nasar.\" At Mary's look of horror Nezha shook her head. \"I'm sorry, I'm so shaken by the news I'm messing up the story and completely confusing you.\"\n\nThe awful man in question suddenly entered the lobby and began yelling something at Nezha. His voice choked off abruptly when he caught sight of Ben.\n\nNezha surged forward to scream in Arabic at Jasim causing the man to flinch back but Ben reached forward and got an arm around her waist to stop her.\n\n\"Remember, you have to go home to London,\" he said quietly to the irate woman. She was breathing hard and shaking but she got control and nodded stiffly.\n\n\"I think we'd better leave,\" Ben suggested to Mary who nodded. As a group they left the lobby to go outside.\n\nBen was relieved to see his taxi still there. \n\n\"Have you had supper, Mr. Shepherd?\" Mary asked.\n\nHe blinked at the abrupt change in direction. \"Uh... no.\"\n\n\"That won't do! Please join us for a late supper! We know a charming restaurant that serves the most delicious local food! It will give Nezha time to calm down.\" Mary insisted.\n\nBen realized he was pretty hungry and Julie said he could be out late. He smiled. \"Alright. Let me just pay the driver and get the bags.\"\n\nKamal followed him and they shook hands in greeting as they walked.\n\nBen paid the bill and gave the man a generous tip for waiting. They carried all the bags back to Kamal's van and put them in the back. Mary and Nezha were already seated in the back so Ben got in the passenger seat next to Kamal and they were off.\n\nThe restaurant was only twenty minutes away and Mary was right, it was a very charming and small restaurant in their neighborhood. The temperature was really lovely so they opted to eat outside on the patio under the lanterns. Candles lit the tables and gave it a very intimate feel. Nezha looked like she was feeling better.\n\n\"So his whole story was lies. He told me they were alive and wanted to talk to me. They were both ill. Apparently that part was the truth. They died within days of each other. They probably did tell him I would be his bride but they never told me and the answer is no,\" she sighed.\n\nBen shook his head in amazement.\n\n\"So you really got a fork stuck in your back from that man?\" Mary said and Kamal's eyes widened in shock.\n\nBen shrugged.\n\n\"You are so much bigger than him! You could easily have crushed him in retaliation! Yet you didn't?\" Kamal exclaimed.\n\n\"Of course I could have and he knew that but what would that have proven? By not retaliating I got the same result. He sat in his seat and behaved himself for the rest of the flight,\" Ben explained.\n\n\"I don't think I could have resisted the need to fight back,\" the man admitted.\n\n\"Being poked with a fork is not high on my retaliation list I guess,\" Ben shrugged.\n\nNezha gently poked his bicep with her fork. He looked at her in surprise then grinned as the others laughed at her boldness.\n\n\"Have I heard your name somewhere?\" Mary asked with a curious look.\n\nHe shrugged but Nezha grinned. \"They made a fuss over him on the plane.\"\n\nBen just looked at her beseechingly so she stopped.\n\nThe waiter arrived and Kamal placed the order for the table. Nezha smiled happily at his choices.\n\nMary explained how she now worked in a hospital here in Dubai and Kamal was a pharmacist. They spoke of their life in the ever growing city and Ben was fascinated.\n\nThe food began arriving and Kamal took it upon himself to educate Ben on the delicacies of his home country. Ben was really enjoying himself and saw Nezha was as well.\n\nFinally Ben had to say no more. He'd enjoyed too much good food and was feeling heavy and sleepy.\n\n\"Thank you so much for the hospitality! I must get back to the hotel so I can catch some sleep before my flight tomorrow. Can I get a cab from here?\"\n\n\"We could drive you-\" Kamal began.\n\n\"No, you have been too kind. Please continue enjoying your night. I just need to get my bags and point me to a cab and I'll be on my way,\" Ben insisted.\n\n\"Let me get you the cab,\" Kamal said as he got up to make the call.\n\n\"Thanks!\"\n\nAs Kamal took care of that Ben looked over at Nezha. \"Are you going to be ok?\"\n\n\"Yes, thank you Ben! You have been wonderful! My flight home is tomorrow-\" She paused to look at her watch. \"...tonight. Enjoy the rest of your journey!\"\n\nBen saw Kamal waving at him and nodded to the man. \"It was very nice meeting you both. Thank you for a delightful evening!\" Mary smiled at him and he could see she was still trying to place him. He sighed. \"The Bronze Man.\"\n\nMary's face froze in shock and her mouth dropped open as her eyes flew wide. With a final smile at Nezha who was completely loving her friend's reaction Ben left the table and joined Kamal who helped him transfer his bags to the waiting taxi. He shook the man's hand and thanked him again before getting into the cab. \n\nHe gave the driver the destination and off they went.\n\nBen smiled to himself as he thought of the wonderful evening he'd had. They really were lovely people and the food had been so good but he was so tired.\n\nWhen the taxi stopped Ben woke and looked around. They were in front of the hotel. He paid the driver, got his bags, and walked into the lobby up to the reception desk. \n\n\"Hi, I'm Ben Shepherd.\"\n\nA slim man with a trimmed beard rushed over with a smile. \"Ah, Mr. Shepherd! Truly an honor to have you in our hotel!\"\n\nBen was still a little groggy from the sleep in the taxi. He smiled and nodded. \"Thank you. I understand there is a key for me?\"\n\n\"Yes sir!\" the man said and rushed away to get it for Ben. He returned promptly. \"Room 305. Enjoy your stay. Do you need help with your bags?\" he said with a smile.\n\n\"No, I'm good. Thanks.\"\n\nBen took the elevator to the third floor and found the door. He quietly stepped inside and saw a table lamp had been left on in the room and the sofa bed was prepared for him. The bedroom door was closed so he sighed in relief. \n\nHe quickly used the bathroom and got ready for bed. He undressed and left his boxers on. Exhausted he slipped under the covers and turned out the light. Sighing contentedly he quickly faded.\n\n\n\nHe was on the island of Hawaii in his beautiful ocean side suite. He was resting in bed with his beautiful wife Wendy but she was sitting on the edge looking back at him with a sad look on her face. He felt Tina's body squeezed up against his, her hand gently stroking his cock, bringing it to life. \n\nWendy stood and walked to the window to look out at the waves. Ben wanted to say something to her but he didn't seem to have any words. The sensations Tina was sending through his body were so good. He couldn't deny them. He wanted more.\n\nWendy looked back and opened her mouth to speak but nothing came out.\n\nBen felt Tina's lips kissing their way up the shaft of his cock and he moaned. Wendy turned away and began to fade as dark grey clouds started to collect out the window. Ben was confused but Tina was driving him mad with lust. She slid her light body over his and ran her pussy up and down his shaft and he felt himself get harder still. The pressure eased then she was pressing her wet opening down on the head of his cock. \n\nIt felt so good but he knew she had to take it slow. He glanced over to the window and the clouds were ominous. A major storm was coming. Maybe even a typhoon!\n\nHis cock slowly slid deep into Tina and he was worried about the baby. She shouldn't go so deep! Her body was resting against his and he noted her stomach was flat. Had she already had the baby? Her moans...something off. \n\nLightning flashed outside the window and Ben heard the rumble of thunder. He looked over to the window and the storm had Wendy's eyes and they were filled with anger. \n\nHe gasped and awoke to the sensation of his cock being squeezed over its entire length. It felt so good but he shouldn't be feeling this!\n\n\"WHAT THE FUCK!\" he growled.\n\n\"Shhh Ben! Please!\" a woman's voice gasped. \n\nHe froze. \"Julie? What are you doing in Rich's room?\"\n\n\"This is my room. Fuck you're big!\" she moaned as she rocked her hips to make herself more comfortable with him deep inside her.\n\n\"Get off of me!\" he insisted.\n\n\"Please Ben! Don't stop this! It feels incredible!\"\n\n\"I didn't say I'd have sex with you! Get off now!\" he said moving his hands to lift her free of his body.\n\nShe began to cry. \"I'm sorry. I'm so sorry! I'm such a slut!\" Sobs wracked her body as she pressed her face to his chest.\n\nBen froze again. Then he lifted her off of his cock and gently laid her on the bed next to him as she cried. His erection had already begun to diminish. He pulled the sheet over their bodies and turned the light on.\n\n\"Stop crying. Explain to me what's going on.\" Ben said gently.\n\nHer tears gradually tapered off and she took some deep shuddering breaths to get control once again. Ben glanced at the clock and saw it was 3:15AM.\n\n\"God, I'm so embarrassed! I'm so sorry!\" she moaned.\n\n\"You told me Rich was going to let me sleep in his room,\" Ben prompted to get her started on her explanation.\n\nShe looked up and saw he was waiting. Her need for him suddenly swelled up, rocking her stability and she gasped in another deep breath to stem the tears. \"I- I convinced Rich to switch his suite for my room.\"\n\n\"He did this out of the goodness of his heart?\" Ben asked doubtfully.\n\nBig blue eyes looked up at him as her bottom lip trembled. \"No,\" she whispered. He waited. \"I gave him oral sex... and promised to do it again tomorrow.\"\n\nBen raised an eyebrow at her. \"You did that so you could get into my bed and have sex with me?\"\n\nShe nodded jerkily.\n\n\"Isn't he married?\" he asked.\n\n\"He cheats. A lot.\"\n\n\"I'm a complete stranger. You don't know if I'm dangerous or not. Why did you think having sex with me would be a good idea?\" he asked.\n\nShe was twisting the sheets between her hands. \"I- I can't help it. It's a compulsion. My shrink says I'm a sex addict.\"\n\nBen looked at her in concern. \"You've done this before.\"\n\nShe nodded.\n\n\"And you're seeing a doctor about it?\"\n\nShe nodded again.\n\n\"How often are your sessions?\" he asked.\n\n\"Twice a month. When I fly home.\"\n\n\"And between these sessions you fuck strangers.\"\n\n\"Co-workers too!\" she insisted as if that made it better.\n\nBen considered the woman's occupation. Long hours in the air, interacting with strangers, layovers, and horny work mates. \"Your co-workers know about your addiction? Have any tried to help?\"\n\nShe looked gloomily at him. \"Who'd want to break the bicycle?\"\n\nIt was Ben's turn to look confused. \"Bicycle?\"\n\n\"It's what they call me. It means someone who's ready to be ridden whenever, wherever, and by whomever.\" She looked sad.\n\nHe looked at her in shock. Then he took her shoulders in his hands. \n\n\"You are NOT a bicycle! You are a beautiful woman who needs to learn to love and respect herself!\" he insisted.\n\n\"But I love sex!\" she gasped, her eyes getting a little glassy feeling his hands on her body as she looked at the scars on his bare chest.\n\n\"You don't have to give up sex! Just choose your partners more carefully and have sex at appropriate times in safe locations. Preferably choose single people.\"\n\n\"Are you married?\" she asked in a quiet voice.\n\n\"No, but I'm engaged to be... I'm actually in a...number of relationships.\" He closed his eyes and shook his head to start again. \"Listen, my suitability isn't the point. You should find someone who legitimately cares about you! Who thinks about your feelings! Don't settle for someone who just wants to use your body like a sex toy, to stick his dick in you and get off.\"\n\nShe moaned and rubbed against him.\n\n\"Julie!\" he barked in frustration.\n\n\"I'm sorry! You're making me so horny!\"\n\n\"Wha- how... Damn it! What did I just say?\" he exclaimed.\n\n\"You said I should have sex at an appropriate time in a safe place with someone who cared about me as a person not a fuck toy to stuff full of cock until I cum!\" She was beginning to pant.\n\nBen's cock jumped and swelled at her words and the pressure she was applying with her body. She felt that and whined. He'd heard what she'd said though. Those were his words... mostly.\n\n\"Julie. You need to heed your doctor's advice not your co-workers.\"\n\n\"I know! I'm trying! But I just get so sexually frustrated, I need it! I have to! I'll fuck the first person to look at me invitingly,\" she moaned rubbing against his leg. \n\n\"Can't you... take care of it yourself?\"\n\n\"That doesn't work anymore,\" she whined.\n\n\"So... if I send you away-\"\n\n\"The lounge downstairs always has someone in it, even if it's the staff,\" she finished, looking at him pleadingly.\n\nBen was stuck in a moral dilemma. He could see she was prepared to hunt for relief and Dubai wasn't the city for that kind of behavior. She'd get arrested... or worse. He scowled. God damn it! Maybe he could just get her off and she'd calm down?\n\nBen tugged the sheet from their bodies and Julie cried out with joy. When he pushed her legs back to her chest she trembled violently. He looked up at her face but she was just going through some kind of heightened state of sexual anticipation. Ben didn't bother with the tease as she was too far gone. He just wanted to get this done quickly but he didn't want to hurt her. He moved directly to her dripping pussy and fastened his mouth on it. Her trembling intensified and he fucked her with his tongue, sucking on her lips and clit. Soon her body was arching between her head and Ben's mouth as she clung to the sheets. He felt the telltale internal pulsing indicating she was going through a huge orgasm. He relaxed as this meant he was done.\n\nHe looked up at her and she was looking back down at him with a look of fierce concentration on her face.\n\n\"Fuck me Ben! Oh god! Fuck me with that big cock!\"\n\nBen's face froze in surprise. Didn't she just come? Shouldn't she be too sensitive?\n\nHis cock was ready to play so he moved up the bed and rested it against her wet, reddened lips. \n\n\"OH FUCK! You're so hot! Put it in Ben! Fill me with your cock!\" she whined.\n\nHe was stunned at what was coming out of her mouth. She looked like a little blond pixie but she had the tongue of a sailor. Still, his cock throbbed in anticipation so he pulled back and forced the head inside.\n\nHer jaw dropped and her trembling came back. He pushed in about three inches until her body's shaking began to concern him. She was so hot and tight. He stopped and pulled out to the head. \n\n\"NO! FUCK ME!\" she screamed. \n\nBen tossed a pillow at her face and scowled as she came back to her senses. She held the pillow over her own mouth.\n\n\"Let's not wake the neighborhood, alright?\" he hissed, frustrated by the whole experience. She nodded at him with wide eyes, worried he'd stop but her eyes just rolled back as he thrust his hips forward burying half of his cock into the petite woman. She moaned loudly but it was mostly muffled by her biting the pillow.\n\nHer heels were pulling on his ass so he pulled out and drove forward again managing to sink even deeper into her hot depths. \n\n\"MMMMMFFFFFFFF!!!!\" she screamed into the pillow and bucked her hips up to meet his thrusts. \n\nBen was having difficulty keeping up with her gyrations and preventing himself from driving too deep. He felt himself get close to bottoming out and didn't want to drive himself into her cervix. She wasn't making his efforts easy as she tugged with her heels on his ass and lifted her pelvis to meet his downward thrusts.\n\n\"FuckmeFuckmeFuckmeFuckmeFuckmeFuckme,\" she chanted rapidly as he began to piston in and out of her drooling pussy. He couldn't get over how wet she was! He glanced down between them to make sure she wasn't bleeding but it was just her juices.\n\nThen he saw her pinching and twisting her nipples painfully. He glanced up at her face in shock when he saw how raw they looked. \n\n\"I'm close, Ben. Oh my fucking god I'm so fucking close! Keep doing that! Yes! Fuckme! FUCKME! Fuck!\" she whined as their bodies slapped together rapidly.\n\nHer legs spasmed and Ben accidentally dropped too low, his cock hitting bottom as his pelvis slapped her clit hard.\n\nBen's cock was suddenly clamped in a vice as Julie bore down on it all along its length as her body spasmed and shook from the intensity of her orgasm.\n\nHis release was suddenly pushed back by the tight grip she had on his cock. Ben held still and waited for her to return from her ecstasy. Her eyes were tightly closed, her fair brows were drawn down, and her mouth was open but no sound was coming out. She went through three major jolts and the third was so violent Ben's cock was pulled free. She trembled and moaned as she slowly came around. She struggled to focus but eventually looked down at Ben's throbbing erection. She smiled.\n\n\"Thank god you're still hard!\" she thrilled.\n\n\"What?\" Ben stared at her in surprise. \n\nShe proceeded to roll over onto her stomach and spread her legs. As he watched she reached back and sunk two fingers into her wet and raw pussy. She gasped and arched her head up from the mattress. When she pulled her dripping fingers out she immediately sank one then the other into her ass. \"Yes! Ben, fuck my pretty little asshole! Fuck it! Fuck it! Fuck it!\" she chanted each time she shoved her fingers deep into the orifice getting it wet with her juices.\n\nHe was done being surprised by this woman and he needed relief. The gentle approach was obviously not working and he didn't want to be up all night doing this. He moved his large body over her petite frame and she lined up his slick cock with her puckering rosebud. When he pressed forward she dropped her face to the pillow and howled as he forced her open wider and wider. He reversed and pushed forward again and again, moving deeper in tiny increments until most of his cock was filling her up. She tried to lift her hips to meet him but her muscle control was gone. \n\nThen he rested his body on top of hers, pinning her to the mattress, sinking his cock all the way inside her ass.\n\n\"Oh... oh goddd... ffffffuuuuuccckk... Buh!\" she struggled to speak as the enormous intruder was opening her up so wide.\n\n\"Do you like my fat cock in your tight little ass?\" Ben rumbled into her ear and she trembled and nodded as she'd lost the ability to talk. ",
        "He started to pump himself slowly in and out of her ass, moving glacially slow so she could feel every throbbing vein and ridge. \n\nWhen she began to whimper he increased his pace slowly until he was making long even thrusts in and out of her stretched asshole. \n\nHer head was resting on the mattress so he got a grip on her hair and lifted her head. He looked at her ecstatic expression of lust and picked up the pace once more. Drool dripped down her lips and he lowered her head to the mattress. He was getting close. He leaned close to her ear once more.\n\n\"I'm going to fill your hot little ass with my sticky cum. Do you want that?\" he whispered and felt her begin to jolt as a third release rocked through her body. \n\nThe weak squeezing was all Ben needed and he drove himself deep one last time to fire streams of cum into her tight ass.\n\nShe moaned pitifully and her shaking increased. Ben kept her pinned down to the mattress and continued to unload into her hot channel.\n\nFinally he was done so he pulled his cock free from her and she sagged, completely spent.\n\nShe'd sprayed during her last orgasm so the sheets were drenched. Ben grimaced and climbed off the bed. He lifted her in his arms and she whimpered so he carried her into the bathroom. He sat her on the toilet and cleaned himself. Then he left so she could do her business. He waited until she called for him weakly then he went back in and leaned her over the counter as he used a warm facecloth to clean her pussy and ass. She collapsed against the counter as he wasn't gentle but he got her clean. \n\nShe was a trembling mess when he carried her out and into the bedroom. He immediately picked up the scent of female excitement in the room. She'd been busy as she waited for him to arrive and fall asleep. A large dildo rested on the bed with a jar of lube. He put her on the bed and cleared a space for himself, moving the items to the end table. Then he got his phone from the living room as it was his alarm clock as well and climbed into bed. He turned out the light.\n\n\"Ben?\" Julie whispered into the darkness, her voice raw.\n\n\"Yes?\"\n\n\"Thank you.\"\n\nHe snorted.\n\n\"No, not for the sex. Well... yes for the sex, too. But mostly... mostly for caring,\" she said quietly.\n\nBen was quiet for a bit as he thought about how to answer. \"I'm going to give you a little advice which you may disregard but as I do care I hope you won't. I think you need to take some time off from your job. It's not the healthiest environment for you to heal in. Dedicate time to getting better.\" He was silent for a moment. \"That's it.\"\n\nHe heard her struggling to move then felt her lips on his cheek. He surprised her by taking a grip on her hair and kissing her mouth tenderly.\n\nShe tucked herself in against his side and he felt her silent tears dampen his chest. He held her until he felt her relax. He stared at the ceiling and wondered how he got himself into these situations. His emotions felt all tangled up and he felt uneasy about what he'd just done. Try as he might he just couldn't think of another way out.\n\nIt took him much longer than Julie to get back to sleep.\n\n\n\nChapter 27\n\nBreakfast with the flight crew was an awkward affair as Ben was aware of Rich's infidelity and his bargain with Julie. Rich's satisfied smile died immediately when he saw the flaring scar on Ben's face as he got a scowl. \n\nEveryone seemed to know what had happened the previous night between Ben and Julie but considering how slowly she was moving this morning it wasn't a big leap. \n\nThere was a breakfast buffet so Ben served Julie her breakfast and waited on her much to her delight. They sat at a table separate from the others.\n\nAfterwards Ben carried Julie's bag to the van and they all rode together back to the airport which was a very short drive. Ben gave Julie a kiss as they separated at the airport. He went through the check in process and soon enough he was back in his first class seat. \n\nOne of the flight attendants from the back cabin was working in the first class cabin.\n\n\"Where's Julie?\" Ben asked her as she passed by.\n\nThe woman gave him a cold look. \"She's taking a leave of absence. Deadheading back to Australia then off for three months.\"\n\n\"Good,\" Ben said with a gentle smile.\n\n\"Good? You've ruined a fun time,\" the woman snapped.\n\nBen stared her down. \"If that's all you thought she was then she's definitely better off away from you.\" \n\nHe turned away from her burning face and settled back in his seat.\n\nNeedless to say he got terrible service for the rest of the flight and didn't dare eat any of the food she served.\n\nOnce they landed Ben went through processing and collected his baggage. He was walking through the terminal towards the information kiosk when he spotted Rich walking up to a plump brunette woman. He gave her a peck on the lips and a quick hug. His Betty? \n\nBen spotted Julie moving slowly up behind them. She was pulling her suitcase and carrying a clear plastic cup in her other hand. She smiled at the wife as she pulled up beside them. Rich looked... nervous as his wife greeted the flight attendant. \n\nJulie smiled and lifted the cup to her lips and spat Rich's cum into it much to the horror of his wife. Ben saw Julie glance at the panic on Rich's face then say something to the wife as she handed her the cup. Julie walked away and left Rich with his furious wife to face the repercussions of his affairs.\n\nBen watched Julie walk out of the terminal with her head held high, a smile on her lips. He hoped she'd get the help she needed.\n\nHe glanced around looking for the man who said he'd pick him up. In the last message he'd received from them after he'd informed them he'd be late they let him know they'd have someone from the company at the airport to pick him up.\n\n\"Fuck me mate! You're a big buggah!\"\n\nBen turned around to see a fat man in a sweat stained polo shirt and grubby shorts staring up at him with bleary eyes. His prodigious belly strained the shirt which was having a difficult time staying down. Ben caught the odor of the man's breath and realized he was dealing with a drunk.\n\nThen he noticed the emblem of Blake Uranium, the mining company he was here to see, on the polo shirt.\n\n\"Are you Devon?\" he asked and the man's eyes widened in surprise.\n\n\"You know my name?\" the man slurred.\n\n\"The email said a Devon would meet me at the airport.\" He looked around hoping there was someone else here with the same polo on.\n\n\"Right. Yes. That's me. I've been in this bloody airport for two days mate! Bored senseless!\" the man complained.\n\n\"But you found the bar.\"\n\nDevon grinned at him. \"That I did! Here on the company's business so drinks on them!\" He paused as the most wonderful idea came to him. \"Would you like to-\"\n\n\"No, we should go meet the people I came to meet,\" Ben said dashing the man's hopes.\n\n\"Right, right. Well, out we go. The truck's in the lot. Or was when I got here two days ago.\" Devon grumped. He pulled a cell from his pocket and dialed a number as they moved. He grunted a few words into it and tucked it back into his pocket.\n\nBen followed the wobbling man outside and decided there was no way he was letting the man drive him. \n\nThe late afternoon sun stretched across the parking lot and Ben took a deep breath of air. It was hot and dry with the scent of kerosene from the jet fuel, hot asphalt and dust. Not the most memorable first sensation from the big continent but he smiled to himself. He was in Australia! \n\nThey walked across the lot as Ben adjusted to the idea of being so far from home. He felt a pang in his heart as he thought of Ashburn Court.\n\nThe truck turned out to be an extended cab pickup with the Blake Uranium logo on the side. Ben plucked the keys from Devon's fumbling fingers. \"Why don't you let me drive and you relax?\"\n\nThe man blinked at him then bobbed his head as he smiled. \"That would be great!\" He proceeded to crawl into the back seat and lie down across it. Ben sighed and pushed the man's feet further in before he closed the back door. He tossed his bags on the passenger seat and got into the truck. It was right side drive as they drove on the left here so he familiarized himself with the controls and got them underway. He found the ticket and paid for the parking as Devon snored like a buzz saw in the back seat, his polo shirt having given up its doomed attempt to cover his stomach. \n\nBen had looked up the directions before he left home so he had a fair idea of how to get to the Blake Uranium head office. It was a bit of a drive from the airport but the truck had a full tank of gas and the weather was good. He drove for about an hour before he saw the large office tower. He rolled up to the security gate and rolled his window down to speak with the guard.\n\n\"Good evening. I'm Ben Shepherd here to see Don Blake. Devon is sleeping off his bar time in the back.\" While he'd been communicating with an engineer here named Bryan Crane he'd been told to ask for the man's boss when he arrived.\n\nThe guard could hear the snoring and saw Devon sprawled out on the back seat. He shook his head and went back to Ben's window.\n\n\"Mr. Blake is expecting you. I'll call ahead and you can meet him in the lobby. Just pull up to the front door. We'll take care of Devon.\" He stepped back into his booth to raise the gate. \n\nBen drove into the lot and parked by the front door. He left the keys inside the truck, got his luggage and walked into the building. The foyer had a three story atrium and the Blake Uranium logo was front and center on the wall above the reception desk. He looked down from the logo to the young woman manning the desk. She was looking back at him open mouthed with shock. Ben saw she was young, maybe 19, long black hair tied back in a ponytail and wearing a company blazer. He walked closer and saw she was holding a copy of Peeps magazine in her trembling hands.\n\n\"Mr... Mr. Shepherd! It is such an honor!\" the young woman gushed. Ben wondered what she'd read in that article that made her impressed with him. He didn't recall it being so... generous.\n\n\"Evie! What are you still doing here, girl? It's well past business hours!\"\n\nBen looked towards the speaker moving towards them from the elevator. The man was almost as tall as he was, fair haired and deeply tanned. He had a muscular build under the white dress shirt he wore open at the neck with rolled up sleeves and his tight blue jeans. He had a strong chin, piercing blue eyes, and a dazzling white smile he showed to the blushing receptionist as he strode towards Ben. \n\n\"Sorry Mr. Blake! It's just... Ben Shepherd! Here in our office!\" the girl swooned.\n\nDon Blake reached out to shake Ben's hand. As they gripped hands, he gave Ben a false frown. \"She used to look at me like that!\" His grin reappeared immediately. Up close Ben could see he was likely in his early sixties.\n\n\"Mr. Blake!\" the young woman gasped in embarrassment and put her hands over her red cheeks.\n\nBen smiled, enjoying their casual and friendly behavior. \n\n\"Mr. Shepherd will be here tomorrow,\" he glanced to confirm that with Ben who nodded and continued. \"You can bat your pretty eyes at him then. Get on home to your mum and give her a kiss from me.\"\n\n\"Yes, Mr. Blake,\" the young woman said as she walked past. \n\n\"Could... could I get a picture to show my mum?\" she pleaded. \n\n\"Sure,\" Ben said and her face lit up.\n\nDon took her phone from her and got a few shots of the young woman grinning happily beside Ben. Once he handed the phone back the woman left quickly, eager to show her mother the pictures.\n\n\"Have you eaten?\" Don asked him.\n\n\"No.\"\n\n\"I took the liberty of making reservations for dinner at a favorite restaurant of ours. We can drop your luggage off at the hotel on the way,\" he suggested.\n\n\"That sounds good,\" Ben agreed. He picked up his duffle and laptop case as Don took the handle of his suitcase and began to lead him back out the front doors. \n\nThey waved to Evie as she drove past with a huge smile on her face. Then they turned right towards a huge red SUV. It was one of those ex-military conversions. Ben glanced at the man beside him.\n\n\"Bryan and the fellas want to take you out tomorrow night if that's alright. They've been eagerly awaiting your arrival with the solution you designed for them. Did you bring it?\"\n\nBen smiled and patted the duffle.\n\n\"It's really going to filter the uranium dust from the truck's air intakes?\" Don asked curiously. He hadn't been part of the effort but Bryan had kept him abreast of their communication with their online engineer.\n\nBen smiled. \"That's one use for it and we'll see it work in a production environment tomorrow. The virtual benchmarking I did proved it will work theoretically. However, that only goes so far. My software is really good but it's not like I can run a physical test of my own with these materials.\"\n\nDon grinned and nodded to him. \"Just put your bags in the back seat for now. The hotel isn't far from here.\n\nThey climbed in and got underway. The ride in the big SUV was smoother than Ben had expected and the interior was very posh and comfortable. It even had plenty of head and shoulder space. But still, it was really too much truck for city driving.\n\nThe hotel looked very nice and Ben dropped his bags off in his room. Once he was back in the SUV they drove to the restaurant. The valet looked at the big truck with wide eyes.\n\n\"Be gentle with my baby!\" Don grinned at the young man.\n\nBen followed him into the restaurant and the hostess greeted them with a wide smile. The restaurant owner came out to shake their hands then personally led them to their table where two pretty blondes were already seated. \n\nAgain, Ben glanced over to Don but he was all smiles as he leaned down to kiss the two women. Ben saw one was older than the other and that one got the kiss on the lips, the younger one getting a chaste kiss on the cheek. He hadn't seen their age difference until he'd gotten much closer.\n\nDon turned back to him. \"I'd like to introduce you to the two loves of my life, my wife Rita and my daughter Sarah.\"\n\nSeeing he wasn't being set up on a blind date Ben relaxed and smiled at them. He shook their hands and everyone took their seats.\n\n\"Would you care for some wine Mr. Shepherd?\" Rita asked.\n\n\"Please call me Ben. I don't drink so I'm fine with water.\" Seeing her momentary discomfort he continued. \"But please enjoy the wine! I have no problem with other's drinking!\"\n\nShe smiled graciously at him and he could see she went to considerable effort to maintain her youthful appearance. She was truly lovely but there was a tightness to her features.\n\n\"What brings you to our side of the planet?\" Sarah asked. She had to be in her late twenties, maybe 28, and was truly lovely in that spoiled and pampered way of the wealthy. Ben was trying to give her the benefit of the doubt but her eyes were scanning him critically and from the slight twist of her lip she was finding something she wasn't impressed with. \n\n\"Just a little work with your father's company,\" he replied politely.\n\n\"You work in mining? I thought you were a celebrity?\" she said sounding genuinely surprised.\n\n\"Celebrity? Hardly. I'm a mechanical engineer. I design solutions for engineering issues,\" Ben replied.\n\nSarah pouted at her father. She'd been promised an interesting evening with a world famous celebrity and here she was stuck with this dreary mining engineer whatever that was. He looked like he could be the Ben Shepherd she'd read about but maybe he wasn't.\n\nBen watched her expression with interest. While it was disappointing he was always amazed that people could reach adulthood yet never progress past an early teen's maturity.\n\n\"Now dear, Mr. Shepherd is more than a mechanical engineer-\"\n\n\"Actually, not really. That's the extent of my training. Everything else I've done that's you might have seen on the news has been grossly exaggerated. I'm just an average man,\" Ben replied watching the young woman's confusion grow. Don seemed genuinely concerned that his daughter was unhappy. Too much of a doting father perhaps?\n\n\"What about the sculpture? Was that an exaggeration?\" Rita asked with a twinkle in her eye. \n\nBen frowned looking down but shook his head. \"No, that's accurate. A little too accurate for my comfort.\" Ben missed the look exchanged between mother and daughter but when he looked up he saw the young woman's pout had been replaced by a look of interest.\n\nSarah was finally convinced that this was the same Ben Shepherd from the magazines and TV so her night wasn't going to be a loss after all!\n\nThe waiter arrived thankfully and they placed their orders. Don recommended the prime rib or the T-bone steak. Ben went with the latter. Once the man left Ben went on the offensive.\n\n\"What do you do?\" he politely asked Sarah.\n\n\"Our Sarah doesn't have to do anything,\" Don grinned broadly. \"Why do you think I work so hard?\"\n\nThat earned him smiles from the ladies. Ben couldn't comment on that without offending the man so he just nodded.\n\nRita leaned forward again and Ben got the impression that she might have adjusted her dress to expose her cleavage just a little more. She had sizable implants which were now threatening to come out and say hello. When his eyes returned to hers he saw the satisfied expression before she spoke.\n\n\"Surely not everything we've seen in the news about you has been an exaggeration. The girls you rescued from the slavers over in France for instance? They reported you walked unarmed into their hideout and killed four heavily armed men to rescue five young women.\" She raised her eyebrow at him daring him to refute the story.\n\nBen shifted uneasily in his chair. \"What they didn't report was that I only stumbled on the 'hideout' because I was in the restaurant next door and got lost looking for the washroom. I wasn't on some kind of rescue mission.\" Ben had no memory of what happened in the room but didn't want to open that Pandora's Box. \"I just did what was necessary.\"\n\n\"I think our Mr. Shepherd is uncomfortable with the praise, no matter how justified it is,\" Don said coming to his rescue. He nodded to the man who looked satisfied at having his daughter smiling again. When Ben glanced in her direction she wasn't just smiling, she was eyeing him like dessert. He sighed to himself and turned back to his meal.\n\nConversation moved to travel and how Ben had enjoyed France. Don had taken his family there and they exchanged recollections of their favorite places. Ben shared his memories of Paris, the French Alps, and his time in Southern France. He stayed away from the more sensational events he'd experienced in those places but Sarah's expression of interest never waned. She'd gotten her entertaining evening after all. \n\n\"Do you travel a lot, Ben?\" she asked.\n\n\"No, before this trip I'd only been to France and Costa Rica,\" he replied.\n\n\"Ah! Your vacation with Dream and La'Shia! I read about that!\" the woman exclaimed.\n\nBen looked at her excited expression. \"Well, we didn't go with them. Again, it was more a case of accidentally bumping into them when we were there. They just happened to be staying at the same resort with the other members of their... groups.\"\n\nSarah's eyes were almost glowing with her excitement. \"It was so tragic to hear about La'Shia breaking off the wedding then Dream getting arrested for murder!\"\n\n\"What? Murder?\" Ben jolted.\n\n\"Yes, they're saying he gunned down two men in the house of a friend of his oldest friend, Night-\" Her eyes flew wide. \"OH MY GOD! You were there when Night died!\"\n\nOther guests in the restaurant were beginning to look in their direction and Rita took her daughter's hand to get her to calm herself. \"Sorry Mum but he was there!\" she said in a more subdued voice.\n\nDon looked at him for confirmation. \"Yes, I was there. It was a stupid accident. The man was... deeply troubled and unstable.\"",
        "\"How did he die?\" Sarah gasped, that tidbit having been missing from the story she'd read.\n\nBen's discomfort at her excitement seemed to be lost on her. \"He slipped on some wet tiles and fell, striking his head on the edge of a step.\"\n\n\"That's it? He slipped and bumped his head?\" Don exclaimed.\n\n\"That's all it takes,\" Ben said.\n\n\"But... what was he doing when he slipped? What made him slip?\" Sarah growled in frustration.\n\nBen was getting a little tired of keeping her entertained. He sighed. \"The man was swinging a knife at the face of a woman I was standing beside. I yanked her back. He missed. His shoe slipped out from under him and he fell. He died. That's it.\"\n\nHer eyes were like saucers and her next question was interrupted by her father.\n\n\"Sunflower, I think Mr. Shepherd has said all he's comfortable saying about that.\"\n\nShe looked like she wanted to argue but again her mother squeezed her hand and she settled down.\n\nThey finished up their meals, keeping the conversation to milder topics. Don had done some renovation work on his house and Ben traded stories about that with him.\n\nBen caught Sarah watching him with a hungry look on several occasions and his unease about the woman's state of mind grew.\n\nSomething Rita said caught Ben's attention and he looked at her. \"Sarah's married?\"\n\n\"Was,\" Rita clarified with a frown. She sent her daughter a quick look of reproach as Sarah looked away stiffly.\n\n\"Oh, I'm sorry. I didn't mean to pry,\" Ben said but Sarah saw an opportunity.\n\n\"Not all relationships work out as we plan, isn't that right Ben,\" she said looking defiantly at her mother.\n\n\"Uh, well, that's been my experience,\" he agreed reluctantly.\n\nRita looked at him eagerly. \"You've been married too?\"\n\nHe nodded. \"A long time ago.\"\n\n\"She left him,\" Sarah blurted and Ben winced.\n\n\"Sarah!\" Rita scolded.\n\n\"I'm just stating what it said in that magazine.\" She looked at Ben. \"Your ex didn't say very nice things about you.\"\n\n\"Ex's sometimes don't but don't believe everything you read, especially in one of those magazines,\" he said in his defence.\n\n\"So, what really happened then?\" Sarah asked.\n\n\"Sarah!\" her mother scolded again but her daughter's eyes flared.\n\n\"You blame me for choosing the wrong man to get married to. Maybe it's not my fault. Maybe we fall in love with people who change!\" Sarah hissed back at her.\n\nBen blinked at the younger woman. For all her insensitivity and immaturity she'd just given Ben something to think about.\n\n\"Sunflower, this isn't the time to talk about that,\" Don said and his daughter leaned back in her chair with a pout.\n\nDessert was sorbet and ice creams which fit well with the climate around the table. There was definitely a chill between mother and daughter and Don looked apologetic. \n\nAfterwards they said their goodbyes as Don was going to drive Ben back to the hotel. Rita firmly pressed her body against Ben's when she hugged him. Her touch was a little too familiar as well but Ben let it slide. He'd barely stepped back when Sarah was crushing herself against him, feeling the beginning of his reaction to her mother's tight embrace. Her hands wandered as well and her eyes were wide and excited when he gently disengaged from her hug.\n\n\"It was nice meeting you both,\" Ben said with a smile and followed Don out of the restaurant. \n\nAs they stood waiting for the valet Don looked over at Ben with a cautious smile. \"So that's the wife and daughter.\" He suddenly seemed insecure.\n\n\"Don, you are a very lucky man,\" Ben said and the man's smile suddenly lit up his face.\n\n\"You're damn right!\" he exclaimed with enthusiasm as his confidence returned. \n\nDon was almost bubbly with good humor on the drive back to the hotel and told him he'd pick him up in the morning at 9AM.\n\nBen made his way up to his room and stripped his clothes off. After he freshened up in the bathroom and brushed his teeth he went back to the bed and propped himself up on the pillows against the headboard. He flipped open his laptop and called Margaux.\n\nOn the third ring the screen opened up and there she was. Her thick mahogany hair framing her lovely face, her beautiful mouth wide with a happy smile and her lovely dark eyes twinkled with joy. \n\n\"Are you here?\" she gasped in delight.\n\n\"Well, I finally made it to the continent! I'm in Melbourne now. Just had dinner with the company president, his wife and daughter. Tomorrow I get to meet the engineering team. They're taking me out to dinner too.\"\n\n\"When are you coming to Sidney?\" she asked.\n\n\"The day after tomorrow... what day will that be? I swear with all this time zone jumping I'm lost.\"\n\nShe shook her head and smiled at him. \"Thursday. When do you have to head home?\"\n\n\"My flight back to the States is Sunday night,\" he said.\n\nShe nodded as she considered all the things she wanted to do with him in the time she had. Her grin turned wicked.\n\n\"I recognize that smile. What naughty thoughts are going through that brilliant brain inside that pretty head of yours?\" Ben said with a smile.\n\n\"You'll just have to wait and see!\" her smile turned sultry and Ben's cock woke up.\n\n\"So much for sleeping tonight!\" Ben said with a grin making her squeak in delighted amusement.\n\n\"I am very much looking forward to your visit!\" she said.\n\n\"I'll see you on Thursday!\" Ben said.\n\n\"Goodnight, Ben.\"\n\n\"Goodnight, Margaux. Sweet, naughty dreams,\" he returned and she chuckled as she disconnected. \n\nNext he dialed up Tina's tablet. It rang six times and he was about to disconnect when the screen suddenly came online.\n\n\"Ben!?!\"\n\n\"Tina?\" he asked in concern.\n\n\"Yes! Sorry, I could not get my tablet out of my bag and I thought I missed the call. I was expecting your call last night.\" Tina said.\n\n\"My apologies. I screwed up my flight from Milan to Melbourne and I had a surprise layover in Dubai.\n\nHe heard laughter in the background and Tina turned the tablet so he could see Trish standing next to her. \"Hi Trish!\"\n\n\"Hey Ben! Is Dubai as pretty as it seems on TV?\" the redhead asked with a grin.\n\n\"I'll let you know when they finish it,\" he said. \"It's pretty posh in places and a complete disaster in others! It's a very strange mix. I did meet some lovely people and enjoyed a local meal.\"\n\nTina's face came back into the picture. \n\n\"What are you two doing... at noon on... Tuesday?\" he said struggling with the time zones.\n\n\"Just doing a little extra shopping for the house on the lunch hour. Picking up sheets,\" Tina replied. Trish disappeared for a second and Ben watched Tina's expression as she watched the other woman doing something off camera. She smiled in amusement.\n\n\"Hey Ben! Check out these pillows!\" Tina turned the tablet to face Trish who had two large and round pink pillows held up against her chest and she was squeezing them together like they were her own tits.\n\n\"Ooo, Ben! Wouldn't you like to slide your big cock between these babies?\" Trish teased and laughed at Ben's embarrassed expression. \n\n\"Trish! You're in a public place!\" he exclaimed.\n\nThe woman in question grinned and threw the pillows into the bin. \"Ben, the store is dead! Tina and I are the only ones here! Hell! I could walk through the store naked!\" She got a twinkle in her eyes and lifted her top to expose her large tits struggling to free themselves from her sexy red lace bra. Ben heard Tina giggling from behind the tablet.\n\n\"Very nice ma'am. Please put them away,\" a male voice said.\n\nTrish pulled her top back down as she looked up at the security camera just to her left. Tina's giggles had become full out laughter and the camera was no longer steady. Trish plucked it from Tina's grasp. She smiled at Ben.\n\n\"We miss you big guy! When are you home again?\"\n\n\"Uh, next Monday... evening... I think. I'm having trouble keeping the days straight. I miss you guys too!\" he said. \"How are the girls? Wait! How did their date go?\"\n\nTina took the tablet back. Her smiling face looked back at him. \"The date was a big success. Jayden was a gentleman and Penny's boyfriend Frank is very nice as well. They have another double date planned for this weekend. Karen is very happy as is Penny. They miss you too!\"\n\nBen relaxed a little and gave Tina a smile. All was well at home. \"Thank you Tina for taking care of things while I'm away.\"\n\n\"Do I deserve a reward?\" she asked cheekily.\n\nBen grinned. \"Oh yes, you will be rewarded very well for this.\"\n\n\"Hey! I've been helpful too! I want in on this reward action!\" Trish whined from off screen. Tina turned the tablet to her and Ben saw her pout. \n\n\"Trish, you will get your reward when I get back too!\" he promised.\n\nShe noticed his shoulders were bare and realized it was after midnight where he was. \"Are you naked?\" she said with a huge grin. Tina immediately spun the tablet back to face her but Trish moved beside her to see as well.\n\n\"Yes but I'm under the top sheet,\" he grumbled.\n\n\"Oh god Ben! Give us a little preview!\" Trish moaned.\n\nTina nodded enthusiastically with a grin on her face. \"Yes, please!\" she added.\n\nFeeling a little awkward Ben set his laptop on the bed between his outstretched legs. He still had the sheet over his legs, pulled up to his stomach so he was 'decent' for the camera. Both women made appreciative sounds as they could see his full torso. \n\n\"Oh fuck, that's nice!\" Trish sighed. \"Why don't you slip that sheet down a little?\" Tina was nodding rapidly.\n\nHe sighed and reached down to the top of his thighs and slowly tugged the sheets down until the top of the sheet was just barely covering his intimate parts. He stopped there and smiled at the camera.\n\nTrish was staring open mouthed and Tina's eyes were wide with excitement.\n\n\"I think that's enough for tonight,\" he said.\n\n\"Oh you tease! So unfair!\" Trish blurted.\n\nHe leaned forward to grab the laptop and lift it back up to his legs when the sheet dropped away. Trish and Tina were given a very up close and personal look at his semi-erect cock hanging down between his legs before he yanked the sheet up again.\n\n\"Shit! Who's python was THAT!\" a female voice exclaimed from off screen. The screen went dark as Tina pulled her tablet tight against her chest. The next sounds were loud but muffled and when Ben's screen brightened once more Tina looked very apologetic.\n\n\"Sorry Ben, we did not see or hear the saleswoman approach,\" she said.\n\n\"Yeah, we were a little distracted! Fuck! That was hot!\" Trish grinned.\n\nBen sighed as his face burned. He'd had enough excitement for the night. \"I'm going to sleep now. Have a good day! I love you two!\"\n\n\"We love you too Ben! Sweet dreams!\" Tina said as Trish blew kisses.\n\nBen shut down the laptop and put it away. He flipped off the light and smiled as he thought of home. He missed his ladies very much.\n\n\n\nChapter 28\n\nCatherine looked down at her feet once more as she walked across the lobby of the office tower her charity, Kids-2-Kids, hosted their office in. She saw her feet were touching the floor but she swore she was floating inches above it. Her heart was soaring and the reason for that was waiting for her by the front doors. She pinched herself again as she took in the tall svelte body and new spiky hairstyle Chanel was sporting. Spotting Cat's reflection Chanel turned to face her lover and smiled.\n\nOnce more Catherine's thoughts were pulled back to Monday evening when she picked up Miriam and Daniel from the airport. She'd arrived early and watched the happy reunions with a dull pain in her heart. She'd given herself a shake as Miriam and Daniel didn't need to see that.\n\nThe kids had looked so happy when she saw them coming through the arrivals gate. She could tell they'd had a wonderful visit with their mother and Ben. Miriam absolutely glowed in the lovely new dress she was wearing. She was growing up to be such a lovely young woman!\n\nShe spotted Daniel pointing his camera in her direction and she grinned at him. \n\nThen she walked through the gate behind the kids.\n\nCatherine's grin froze and she blinked, not believing what her eyes were telling her. It couldn't be. It was just her wishful thinking. She'd been dreaming about this very thing happening so it couldn't be. It had to be a dream!\n\nWhen Chanel smiled back at her hesitantly, biting that delectable lip, and tears welling in the brunette's lovely eyes Catherine found her feet moving, slowly at first until she was running. She pulled the woman into her arms and held her, feeling the pain rush away to be replaced with a giddy joy. As Chanel's strong arms wrapped around her, their lips found each other's and their kiss was the sweetest relief. Her heart filled with happiness to have Chanel back in her arms.\n\n\"Catherine? Love?\"\n\nThe blonde returned from her thoughts feeling the gentle touch of her lover's hand on her cheek. \n\n\"You disappeared for a moment there,\" Chanel said with concern in her voice and love in her eyes.\n\nThey were standing in the middle of the lobby. Catherine blushed and a joyful smile appeared on her lips. She slipped her arm through Chanel's and got them moving. \"Sorry, just reliving your return to me.\"\n\nIt was Chanel's turn to flash back to the moment and a sweet smile spread across her face. \"It was magic for me as well.\"\n\nStepping outside into the crisp fall air Catherine held tighter to Chanel's arm. \"Where do you want to have lunch?\"\n\n\"Someplace we can hear ourselves think,\" the brunette said as she looked at the noisy road construction crew whose whistles and cat-calls could barely be heard above the machinery noise. Chanel adjusted her jacket, making her holster evident and the crew found other things to do.\n\nCat smiled at the woman and led them a couple of blocks down to a nice little two story Italian restaurant. The owner was friendly and got them an intimate table by the window upstairs. \n\n\"The view isn't as spectacular as a view in Paris would be,\" Catherine said when they got settled.\n\n\"The view in Paris was missing something I could not live without,\" Chanel said taking her hand.\n\n Catherine's smile stretched wide and her eyes twinkled happily as she held the other woman's hand.\n\nChanel suddenly looked a little nervous and Cat's breath caught in her throat. She'd been waiting for this. Since the incredible moment when Chanel appeared at the airport, she'd been riding a high. Now reality was going to come crashing down on her. Chanel would tell her she was leaving, why it couldn't last, why it wasn't meant to be. Her heart began to ache.\n\n\"I- I didn't want to say anything until I was sure but my meeting this morning went better than I'd hoped. I don't... I hope... I got a job, as detective, here in your city. I'm moving here.\"\n\n\"Oh my god!\" Catherine gushed as her breathing finally came back to her. \"Oh my god!\"\n\nChanel was looking at her with a confused smile. \"Good?\"\n\n\"Good? Incredible! So good! Move in with me! Live with me!\" she blurted and Chanel's shoulders relaxed. \"You thought I wouldn't want you to?!?\"\n\n\"You have a life-\"\n\n\"YOU are a very important part of that life! I want you by my side! I love you!\" Cat exclaimed.\n\nChanel was suddenly crying and Catherine was too. The blonde kissed the brunette's hand. They pulled back and struggled to stem their tears as they beamed at each other.\n\n\"What happened? Who were you meeting this morning?\" Catherine asked when she could.\n\nChanel dabbed her tears and nodded. \"I went to speak with the police commissioner after he received a call from Chief Inspector Boucher who gave me a glowing recommendation. There is currently media pressure to hire more female detectives in this city and as I have an excellent record the commissioner recognized it would be excellent timing to hire me to ease some of this pressure. I do not care why he is hiring me as long as he does. I know I am great at my job. I just needed my job to be near you.\"\n\n\"You didn't answer my question. Will you move in with me?\" Cat said biting her lip.\n\n\"I would love to. As long as your daughters do not mind,\" Chanel said.\n\n\"They all think very highly of you!\" Cat grinned.\n\nChanel smiled and looked down at her hands resting on the table. \"And what of the big man? Will he object?\"\n\nCat tilted her head. \"By now you know the answer to that one. Wasn't he the one who sent you to me on that jet?\"\n\n\"At that time I did not tell him that I would be staying.\" Chanel said nervously. \n\n\"You're still thinking in possessive terms. Ben loves me. He supports my happiness. You make me so very happy! He will definitely be on board with the idea of your staying!\"\n\n\"He told me he was not giving you up.\"\n\nCatherine smiled happily as a warm feeling flowed through her. \"And I'm never going to give him up. That doesn't mean I don't love and need you!\"\n\n\"I need you as well. I would like to try. I would very much like to try.\"\n\nCatherine nodded and the waiter took that opportunity to approach. They gave their orders and the man left.\n\n\"I've been thinking about redecorating the house. There is still too many reminders of Ashraf there. He had an office which you could take for your own personal space. I have my own office.\"\n\n\"Do I get my own bedroom?\" Chanel asked.\n\nCat's expression froze until she saw the slight smile in the corners of Chanel's lips. \n\n\"You're such a tease!\" Cat growled.\n\n\"I will show you tonight how much of a tease I can be,\" Chanel promised with heat in her eyes. \n\nThe look went straight to Cat's most sensitive bits and she squirmed in delight. Something occurred to her. \"What did you do with your apartment in Paris?\"\n\n\"Nothing yet but I will have to give it up. I still need to pack my things. I do not have much,\" Chanel sighed.\n\n\"It's a shame. An apartment in Paris sounds lovely,\" Cat smiled.\n\nChanel gave her a wry grin. \"You have not seen the building my apartment is in nor the neighborhood. No one would have romantic thoughts of that place.\"\n\n\"When will you be going back to get your stuff?\" Catherine asked.\n\nChanel sat back and frowned. \"I was in such a rush to come here I didn't make any plans. Now that I have a new job I don't know when I will get the time to do it!\"\n\n\"When is your first day?\" \n\n\"They want me to unofficially begin training next Monday. I still need a Visa to actually work. They are rushing to get me a temporary work Visa and fast tracking my application as a permanent resident. I doubt they will be happy about giving me time to go back to pack. And the airfare is going to be prohibitive!\" she said with a worried look.\n\nCatherine pulled her phone from her jacket pocket and quickly typed out a message. She hit send and sat back with a smile.\n\n\"What was that?\" Chanel asked curiously.\n\n\"I just asked my boyfriend if we could borrow the jet for the weekend. It has a bed you know.\" Catherine grinned.\n\nChanel's eyes went wide. \"You asked Ben to pay for the flight to and from Paris on a private jet to pick up my things and bring them back?\" she asked incredulously.\n\nCat blinked at her. \"Yes, why? What's wrong?\"\n\n\"He does not even know I am staying and now he is paying my moving expenses? I- I think this is too much!\" she exclaimed.\n\n\"He could say no but I doubt he will. I asked nicely and he knows how important this is,\" Catherine explained.\n\n\"I- I do not wish to spend his money... I will find a way to pay him back,\" she said in discomfort. \n\nCatherine looked at the woman across the table. \"When we get back and Ben is back we need to sit down with him and clear away some misconceptions you have. I think you will be far more at ease with him then.\"\n\n\"I'm not attracted to him,\" Chanel said cautiously.\n\n\"And I'm not asking that of you. I am asking you to make the effort to see the man for what he is, not what you think he is. I believe you'll like him as a person. You don't have to love him but please respect that I do.\" Catherine held Chanel's eyes with hers and saw the acceptance there. Chanel nodded and smiled."
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "mature",
        "romance",
        "anal",
        "harem",
        "domination",
        "submission",
        "oral"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/a-shepherd-afield-pt-04"
}