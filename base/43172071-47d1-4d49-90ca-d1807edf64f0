{
    "title": "The Winter of Temptation Ch. 11",
    "pages": [
        "Author's note: I appreciate all the support, love, and patients you guys, show me. I just wanted to say thank you for sticking with me, through this journey with Samantha &amp; Ian. This isn't the end of the story guys, so don't worry. I have plenty left in store for my favorite couple. Also, some may have not seen my update in my bio, but the reason it took me as long as it did with this chapter is because my grandma died, and I took it very hard, and so did my muse for a while. But I'm back now, and I got you guess a pretty hefty chapter. Any who I love you guys. Til next time. \n\nSoulholder11 \n\n**** \n\nDecember 17 \n\nSamantha packed the last bit of her accessories and placed it in her suit case. Lifting the oversized bag from the bed, she rolled it across the room. When she reached the door she sat her bag there, and picked up her large winter jacket, and beanie cap. Grabbing her purse from her dresser she then grabbed the suitcase and strolled out of the room, and down the stairs. Reaching the bottom, she went to the kitchen to find her dad. \n\n\"Morning daddy.\" She greeted kissing her father's cheek. \n\nHe turned around from the stove to kiss her cheek, and smile. \"Morning baby girl.\" He perused her attire. \"Where you headed this early in the morning baby?\" \n\nSamantha pursed her lips, taking her time with her reply. She hopped up onto the countertop, allowing her short limbs to dangle. Moving a strand of hair behind her ear she finally looked up to her dad. \n\n\"Um, Caroline and I are going on a little trip with the guys this weekend.\" She replied, rubbing her ear nervously. \n\nShe was very aware of the fact that her dad was not a big fan of Ian's. All the more reason why she was very hesitant and afraid of telling him, they had officially become an item. The day that he found out would be very stressful, she already knew. But there was absolutely no way to avoid it, especially with Ian's parents being in on the situation. \n\n\"Baby girl, what do you mean? Where y'all planning on going? Does your mom know about this?\" He rattled off question after question. \n\n\"Yeah! Wait mom didn't tell you about the trip? I told her days ago.\" \n\nHis brows drew together, and Samantha found herself a target of his heated glare. \n\n\"No she hadn't told me anything.\" \n\nSamantha jumped down from the counter. \"Daddy, it's not a big deal. We're only going to be gone for the weekend.\" \n\nSamantha wrapped her arms around his toned waist, placing her head against his heaving chest. \"Daddy, I promise we will be okay.\" \n\n\"That's not my only concern, baby.\" He held her close, and exhaled deeply. \"So when will you be back again? \n\nSamantha stepped back, with a laugh. \"I'll be back probably on Sunday.\" \n\n\"Bradley, sweetie have you seen my address book?\" Belinda strolled into the kitchen. \n\n\"No, darling last time I saw your book, it was on the coffee table. \n\nBradley, turned back to the stove to finish the French toast, sausage, and eggs. He ushered them to take a seat at the kitchen islands, while he made their plates. Samantha took her plate, and sliced into her French toast. Taking a bite, she almost had a mini orgasm. Nothing was better than her father's French toast. She finished her French toast quickly, feeling more hungry than usual. Spooning a fork full of eggs, she brought it to her month. Immediately she felt a wave of nausea hit. Throwing the fork down, Samantha rushed out of her seat to the bathroom, down the hall. Barely making it to the toilet, before the contents she had just eaten came up as bile. \n\nAfter a full minute of puking her brains out. Samantha came to her feet, and went to the sink to rinse her mouth out. \"Ugh.\" She grimaced. Looking at her reflection, she couldn't help but think, 'what the hell,' worry, began to surface. \n\n\"No, oh no, calm down Samantha. You're overreacting. Breathe.\" 1, 2, 3...inhale. 1, 2, 3...exhale. \"You just ate way too fast. That's all.\" Reaching under the sink she grabbed a spare toothbrush that she knew her mom kept in stock for guest, and brushed her teeth. Taking a moment to regain her composure. She gave herself a final once over before she walked back to the kitchen. \n\nBelinda noticed her first, and gave her a concerned expression. \"Baby, you feeling okay?\" She placed the back of her palm, against her forehead. \"You're not running a fever...\" She stated looking her over. \n\n\"Ma, I'm okay. I think I just ate my food to fast.\" She plastered a smile on her face to dispel her mother's worry. \"I promise I feel fine.\" \n\nTurning to Caroline, she realized her friend was giving her the eye. \"Morning, to you too babe.\" She stated, placing her bottom, in Caroline's lap. \n\n\"Good morning.\" She wrapped her arm around Samantha's waist. \"You sure you feeling alright?\" \n\nSamantha nodded, ignoring the sly look Caroline still wore. \"I feel fine. Just probably a little too excited.\" \n\nCaroline smiled, as she continued to nibble on her sausage. \"Yeah me too, I'm ready to see this place.\" \n\n\"You're gonna love it. You got everything packed, already?\" Samantha eyed Caroline's plate, and felt her stomach wobble once more. Trying to play it off she took another strip of French toast, and nibbled. \n\n\"Yeah I finished earlier, I'm assuming the guys are gonna be here in a bit.\" \n\nSamantha nodded. \"I haven't called Ian yet. But I'm pretty sure he's going to want to get on the road, while they are still clear.\" \n\nAs if they were psychically connected, the doorbell rung, at that exact moment. \n\n\"I'll get it.\" Samantha stated, as she hopped off Caroline's lap, and rushed to the door. \n\nOpening it Ian was standing there with a bouquet of white and lilac Candytufts. He handed her the flowers, and gave her a soft kiss on the lips. \n\n\"Morning beautiful.\" He whispered next to her ear as he brought her into his arms for a hug. \n\n\"Morning Ian.\" She exhaled. He pulled back too soon for her, but she realized why once she saw Michael walk through the front door. \n\n\"Hey Sam.\" \n\n\"What's up?\" \n\n\"Nothing.\" He replied, giving her a hug. \"Mmmm...What smells soo delicious?\" \n\n\"Hey, hey.\" Ian grunted, pulling Samantha from Michaels embrace. \n\nMichael laughed. \"Relax bro, I mean food. I smell food.\" \n\n\"You're such a fatty, Mike.\" Samantha laughed. \"Follow me.\" She led them to the kitchen. \n\n\"Good morning you two.\" Belinda greeted. Bradley gave a curt nod, and Caroline smiled goofily. \n\n\"Y'all want breakfast?\" Belinda asked. \n\n\"Definitely.\" \n\n\"Yeap.\" \n\nThey answered in unison. \n\nBelinda fixed them both a plate and passed it to them. They began to eat in silence, when Bradley spoke up suddenly. \n\n\"Where'd you get those flowers, baby girl?\" \n\nSamantha paused, and looked to her dad, who quietly sipped on his coffee. She then looked at Ian, before returning her gaze to her father. \"I...umm...\" \n\n\"I bought those for her sir.\" Ian spoke up. \n\nBradley's steel gaze locked onto his. \"What would cause you to do such a thing?\" \n\nIan placed his fork on the plate, and leveled his gaze on her father. All was quiet as the two held a stare off, Samantha, as well as everyone else gaze darted back and forth between the two. \n\n\"Well, because I thought it would be nice. Plus they, are beautiful, just like her.\" \n\nBradley shifted from his lean against the counter as he placed the cup down. \"Boy, what kinda g-\" \n\n\"Ah, that was so sweet of you, Ian.\" Belinda, interrupted, coming to stand next to Bradley. \"Don't you think so darling?\" She rubbed his chest, beckoning him to calm down, and look at her. \n\nFinally it worked and his tense body relaxed a fraction. He gazed down at his wife, and gave her a nod, silently letting her know he was once again calm. Yet Belinda stayed by his side, as Bradley grabbed his cup of coffee, and openly glared at Ian. \n\n\"So I think we should be heading out.\" Samantha stated, nervously. She was afraid to look her father's way, and the tension was definitely still present in the room. \n\n\"Alright sweetie, come over here and give your mama a hug before you head out.\" \n\nSamantha got up, looking over at Ian, she could see he was a bit upset so she laid her hand on his. \"Can you take my bags to the car?\" \n\nIan smiled. \"Of course, you'll be in my car.\" He got up. \"Thanks for the breakfast.\" He stated before walking out of the room. \n\nAlone with her parents, Samantha fiddled with her hair, and waited to hear it from her dad. \n\n\"Samantha Kailee Wilson, what in God's name is that boy up too?\" \n\n\"Dad don't. I just want to enjoy the holidays, with my family and friends. Please, can we just no do this?\" \n\n\"She's right, let it be Bradley.\" Belinda interrupted. \"She's a grown woman, let her be.\" \n\nBradley looked at his wife, with shock. He wanted to disagree, but Belinda placed her finger over his lip. Looking at Samantha, she smiled. \"Go ahead baby girl, be safe.\" \n\nShe kissed her mother's cheek, and hugged her tightly. She looked at her dad, not expecting him to open up his arms for her, yet he did. She sighed in relief, as she hugged him. \n\n\"I love you, baby girl.\" \n\n\"I know, daddy. I love you too.\" \n\nPlacing her thick jacket on, she waved, before going out the door. \n\n*** \n\nThey were an hour into their 2 hour 45 minute drive to Lanesborough, and Ian could barely keep his gaze away from Samantha. She was sitting quietly, bobbing her head to the radio as she gazed at the snowy scenery that passed by. \n\nHe grabbed her hand, causing her. To turn to him, still mouthing the words to her song. When he began to chuckle at her, she couldn't resist, she cocked her head to the side. \"What's so funny?\" \n\nHe turned back to the road, and saw her turn around in her seat to stare at him. \n\n\"Why did you, bring me these flowers.\" She fiddled with the ribbon on the bouquet. \"You had to know my dad, would become suspicious. Then you challenge him!?\" \n\nIan shrugged his shoulders. \"What was I supposed to do? He asked a question Sammy, I supplied an answer.\" \n\n\"Ian...\" She sighed. \"You know what I mean.\" \n\nIan kept one hand on the wheel, while he moved the other one to her knee. \"Listen, I'm sorry. But Samantha what could I have said? Your father will find out sooner or later.\" \n\nSamantha looked away. \"I know. It's just that he's going to be...so difficult.\" \n\nThey were in line at a toll. \"Hey.\" He grabbed her chin. \"It's okay. We will get through it.\" He kissed her lips, and moaned at the sweet taste of the cinnamon sugar still left from the French toast. \n\nBehind them they heard a car honk, and they both laughed. Ian paid the toll and they continued on. The closer they drew near to their destination the more excited Samantha became, she began to inch up in her seat. \n\n\"I can't believe I finally get to go.\" \n\nIan chuckled. \"If I had known you would get this excited I would have took you before now.\" \n\n\"So where are we staying?\" \n\n\"Baby, it's a surprise. But just know that it's amazing.\" He said, enthusiastically. \n\nShe grinned and turned her attention back towards the window. \n\nHer phone flashed, so she looked down to see it was a text from Caroline. \n\n\"Saw your little steamy lip lock. What was that all about!? Hmmm\" \n\nSamantha laughed out loud, and replied. \"It was nothing.\" \n\n\"Liar. Lol I'm going to get all the dirty details.\" \n\n\"Yea sure. Ian said we're almost there. Aren't you excited?\" She questioned to change the subject. \n\n\"Hell yeah I'm excited. Excited to finally get off my ass. It's numb.\" \n\nSamantha couldn't help but laugh. \n\n\"Baby, all I hear is Blank spaces. Does your ringtone really have to be Taylor Swift?\" \n\nSamantha cut her eye at him. \"You know I love Tay Tay, so why you playing?\" She replied with sass. \n\nHe smirked and shook his head. He knew he had better shut up. \n\n*** \n\nBefore long they were pulling up into this wooded area. Where in the distance Samantha could clearly see the snow caped mountains up ahead. She gasped as they pulled up to this beautiful floor to ceiling windowed cabin. With its high beams, and beautiful rustic wood, she could tell it was of modern design. He pulled up and parked inside the two car garage, Michael pulled right along beside him. Cutting the engine, Ian looked over to her, and rubbed her cheek with a smile. \n\n\"We're here.\" He opened the car and got out. Michael meet him around the trunk, they got the luggage out. \"The door is unlock babe. Head on inside, we're coming right behind you.\" \n\nSamantha and Caroline rushed inside. Passing through the laundry room, they entered the living room and swooned. Caroline fell on to the huge sectional, dragging Samantha down with her. \n\n\"Oh, its sooo comfy.\" \n\nIan walked in carrying an arm full of luggage, one look at them, and he laughed. \"Im going to put this up in our room. Be good.\" He winked at Samantha. \"Bro, we're taking upstairs, ya'll got the room down here.\" \n\nIan disappeared upstairs, as Michael vanished somewhere in the back of the cabin. Samantha sat up and admire her surroundings once more. \n\n\"This is beautiful. I mean look at that view.\" She pointed towards the huge scenic windows, to the snowy Mountain beyond. \"I'm in love.\" \n\n\"Good. That means I've done my job. You want to see our room?\" Ian had appeared out of nowhere. She nervously wiped her clammy palms over her jeans, before taking the hand he offered. \n\nIan led her upstairs. On the top level they came upon a lounging area, complete with a huge flat screen and a beautiful love seat designed for a couple. There was a nice entertainment center that sat in the center of the room, and she became eager to relax in front of it. \n\n\"I can't wait to relax in front of that.\" \n\n\"I know what you mean, baby. Check out the fireplace in the corner.\" Ian pointed to the huge electric fireplace sitting off in the corner. He then grabbed her hand, and pulled her into the master bedroom. As they entered she grinned goofily, and pulled him down to her level. Allowing her to smash her lips into his firm ones. He drove his tongue into her sweet cavern, and captured the gasped that followed. With a ferrous growl, Ian lifted Samantha up off her feet, and backed her into the nearest wall. Feasting from her lips, like a man starved. \n\n\"Sammy.\" Ian moaned. Trying to regain composure, seizing the rapid hardness growing between them. Samantha could not answer him, for she couldn't get enough of his taste. Yet their passion was halted by the clearing if someone's throat. \n\n\"Guys! Have you no patience's.\" Caroline giggled. Michael stood at her side, wearing a grin as well. \n\nSamantha blushed deeply, and pushed against Ian's chest. He dropped her legs, and backed away. Whirling around he gave the laughing pair a glaring eye. Before he could speak, he felt a small gentle hand push him aside. \n\n\"Damn it. You and your pop ups Carol.\" Samantha groaned. \n\n\"Oh gosh, Excuse me.\" She replied, laughing. \"There's plenty of time for that you two little freaks.\" \n\nIan shook his head, and turned back to her. \"Get comfortable, and relax. I'll be back shortly.\" He pecked her lips. \n\n\"Where you going?\" She questioned. \n\n\"Just going to pick up our passes, when I return, I'm going to take you to pick up some gear. How's that sound?\" \n\nShe stood on tip toes, bringing her closer to eye level. \"That sounds awesome.\" Kissing him once more, she backed up, and watched him, as he left with Michael in tow. \n\n\"Ah you loveable slut.\" Caroline gushed. She walked over to the massive bed sitting in the center of the room. \"I didn't know you were that eager.\" \n\nSamantha rolled her eyes. \"It wasn't like that. We just got a little carried away.\" \n\n\"Of course you did.\" She sighed. \"This is a great place, though. Beautiful.\" \n\n\"I'm so happy you're here, to enjoy it with me.\" She kicked off her shoes, and flung her jacket over the back of a chair. \"You like your room.\" \n\n\"Duh! It's amazing. Besides I get to share it with a hot guy.\" \n\n\"Are you nervous about sharing the same bed as Michael?\" \n\nCaroline giggled. \"Why would I be? It's not like I've never lain with a man before.\" \n\nSamantha removed her scarf from around her neck, and threw it into Caroline's face. \n\n\"Shut up.\" She fell into the chair, and threw her legs over the arms \"Everyone can't be as bold, and carefree as you Ms. Thang.\" \n\n\"So you're saying you're nervous to sleep with Ian?\" Caroline questioned. \n\nSamantha flustered. \"No way.\" She lied. \n\n\"You're such a bad liar.\" She picked. \"It's totally obvious that you are Babe.\" \n\nWith a huff, Samantha threw her head back against the chair. \"Well what am I supposed to do about it Carol?\" She looked to her friend with question. \"I've only ever done it once for goodness sake.\" \n\n\"Sweetie, do not overthink it. Just let things naturally happen.\" She flipped her hair flirtatiously. \"You are a passionate ebony goddess, and you have that man wrapped around your finger. So work what your mama gave you, bae.\" \n\nSamantha stared at her with a blank face. \"Oh my god. I'm going to suck.\" She groaned. \n\nCaroline laughed, and stood up. \"You're not. Get up, let's find the kitchen.\" She pulled Samantha from the chair, and out the door. \n\nSamantha took to the pantry, as Caroline went through the fridge. Samantha set her sights on a jar of Nutella. Suddenly she wanted it with a need so bad she didn't pause to grab a spoon. Opening the jar, she took the seal off and dipped her finger inside. She moaned as the sweetness hit her tongue, almost instantly curing the nagging crave she had acquired. \n\n\"Sam, why you so quiet? Do you see-\" \n\nOpening the partial door, Caroline caught Samantha red- handed with her had in the jar. \"What in the hell?\" She said through her laughter, not able to breathe, because all she saw was Samantha's hand, and mouth covered in Nutella. Her eyes were wide with guilt, and embarrassment. \n\n\"What!?\" She sucked her finger, and shrugged. \"I wanted some Nutella.\" \n\n\"Babe, there's a little invention called a spoon, ever heard of one.\" Caroline picked. \n\n\"Oh shut up. Don't make me feel worse than I alrea-\" \n\n\"Samantha?\" Where are you baby?\" Ian called out. Before he suddenly, appeared behind Caroline, at the pantry door. He took one look at her, and bellowed. \n\n\"What's going on?\" Michael asked entering the kitchen. \n\nSamantha felt her blush start at her ears, before it rapidly spread. She closed the lid on the jar, and pushed past three of her favorite dummies. She went to the sink to wash off her hands, and mouth before searching for something to quench her thirst. She found bottled water, taking a swig she took to leaning against the counter, she noticed they were finishing up their laughter at her expense. \n\n\"Done?\" Her voice was full of sarcasm. For some reason she couldn't stop the small pout that appeared on her face. \n\n\"I'm done, baby.\" He walked over to her. \"Come here.\" He pulled her into his arms. With his index finger he coaxed her face up. \"I missed you.\" \n\nSamantha looked up at him, with skepticism. \"Really?\" He had been gone less than 15 minutes. \n\n\"Yes really.\" He smirked, placing his forehead against hers. \"Did you miss me? Or did Nutella replace me?\" \n\nSamantha smacked her lips with a roll of her eyes, she pushed against him. \"Whoa... Calm down baby.\" \n\nHugging her to him he turned his back against the counter, as he continued to hold her in his arm. \"So, are you ready to go shopping?\" He grinned, and she could see the crinkles at his eyes. \"Isn't that like every woman's favorite word?\" He teasingly rubbed his nose, against hers. \n\nSamantha sighed. \"Why can't I stay mad at you?\" She locked eyes with his beautiful blue ones. \n\n\"Because you love me.\" He stated. \n\n\"I do.\" She replied immediately, with no hesitation. They gazed at each other for a long moment, neither looking away. Samantha stood on her tip toes, while pulling him down to her level. She pushed her lips into his, enjoying the feeling of his body pressed so close to her. ",
        "\"God, we walk out of the room, and come back, and you two are locking lips.\" \n\nSamantha pulled her lips away from his, to look over her shoulder. \"Huh?\" She feigned innocence. \n\n\"You didn't even know we was gone.\" \n\nSamantha blushed, as she shrugged her shoulder. \n\n\"You two are too much.\" \n\n\"So are we heading out?\" Michael asked, leaning his arms on to the counter. \n\n\"Yeah. I just have to grab my jacket.\" Samantha ran upstairs to grab her stuff. \n\n\"She seems to be very happy.\" Caroline voiced. \n\nIan looked to her, and nodded. \"That's all I want to accomplish.\" \n\n\"You better.\" Caroline, gave him a serious look, before she turned to Michael. \"Are you gonna help me out there? \n\n\"Of course.\" Michael moved closer to her. \"I have no problem with that.\" He cupped her cheek, and moved his face inches from hers. \n\n\"I'm ready!\" Samantha appeared, bundled up in her thick Northface jacket, warm hand knitted beanie, and gloves. \n\n\"Great.\" Ian, walked to her grabbed her hand, and tugged her towards the garage. \"Let's go.\" \n\nThe ride to the Sports shop, was a short one, when they got in she looked around, totally lost. Ian took her hand and guided her towards the gear section. \n\n\"You're going to need a thicker coat, some heavy snowboarding boots, a helmet and some goggles.\" \n\nSamantha nodded her head, as she went over to a slick grey jacket lined in a peach coloring by North Face. The style and color drew her in, but when she flipped the price tag over, and saw that it cost $249.00, her eyes widen, and she backed away from it while shaking her head. \n\nIan looked up from his phone, with a question written amongst his face. \"You don't like that one baby?\" \n\nSamantha eyes widen once more, when she realized that Ian had noticed her hesitation at the high price items. \"No. It's not that. It was cute.\" She replied, looking around to insure no one was watching them. \n\n\"What's the problem?\" He chuckled moving towards the rack she stood near. \n\nSamantha squinted her eyes. \"Have you seen these prices!?\" She whispered excitedly. \n\nIan shook his head no, before he picked up the coat, she had turned from. Looking at the price, he then looked back to her. \"And?\" He drew out his word, to signify his cluelessness to her point. \n\n\"And!?\" She grabbed the jacket, put it back on the rack. \"That's too much.\" She picked up one that was a bit cheaper at $50.00 \"I'll get this one.\" \n\n\"Oh no, you're not going to settle for less Samantha. You pick out what you want, no matter the cost.\" He grabbed the jacket she had picked out first. \"I like this one.\" He grabbed her hand, and kissed the tips. \"Don't fight me on this.\" \n\nSamantha stretched up to him, and pecked his lips. \"I can't promise you anything. But I'll try.\" \n\n\"I wouldn't expect it any other way.\" With his hand at the small of her back, he held her closer. \"Your one tough chick.\" \n\nShe lightly tapped his stomach with her fist. \"Where's Carol? Shouldn't she be getting her things as well?\" \n\n\"Michael texted me.\" Ian held up his phone. \"He said that him, and Caroline got a little side tracked. That they are going to catch up with us in a little bit.\" \n\nSamantha giggled. \"Typical. What am I going to do with her?\" She replied rhetorically. \n\n\"Hmm.\" He shrugged his shoulder. \"Question is what do you want to do with me?\" Ian wiggled his eyebrows, closing in closer to her face. \n\nShe pushed him back. \"You're such a perv.\" She went back to looking around. Ian helped her pick out all the gear she needed. Playfully teasing her, or stealing a kiss whenever he could. The sexual tension buzzing between them grew more, every time they shared a look, or touch. \n\n\"This one matches your jacket.\" He held the helmet up, showing her a slick grey helmet, with POC Written in bright letters. \n\n\"What does POC mean?\" She scrunched up her face in the cutest way to him. \"Is that like the brand?\" \n\nHis shoulders began to tremble, as he looked away to hide his laughter. Samantha noticed it and felt stupid. \"Yeah. It's the brand babe.\" He coughed to cover up his laugh. \"I swear you were meant to be a blonde. Let's try it on.\" He sat the helmet on top of her head, helping her adjust the straps. \n\n\"It looks good on you.\" \n\nShe smiled brightly. \"I'll get this one.\" \n\nIan walked away, only to return shortly with a pair of all black goggles, with tinted two tone lenses. Slipping them on, he turned her to a full length mirror. \"There.\" \n\nSamantha cocked her head to the side, as she slid the goggles off. \"I look like I have no clue on what I'm doing.\" \n\n\"I'm going to teach you. Just trust me Sammy.\" He took her helmet and goggles to the counter, where he asked for a clerk to assist him with picking out her boots, and bracket. After much bickering, and second guessing, she decided on a pair of black Nike boots with a Peach color swoop. As they reached the counter, the young boyish clerk rang up her items, nervously glancing at her, every once in a while. Ian watched as the young blushing teenage boy stared at Samantha, and felt the need to fuck with him. Clearing his throat, he witness the boy head jerk up to meet his taller gaze, which held a deep scowl. \n\nThe boy, whose name read 'Joshua' on his name tag, looked back down to the register as a scarlet tint began to creep up along his neck, to spread to his cheek and ears. Ian smiled, and nodded in satisfaction. Samantha who gaped up at the big oaf, nudged him roughly in the rib, knocking the air from his body. She leaned on the counter, getting Joshua's attention. \"Don't mind him and his caveman ways. He's an oaf.\" \n\nThe boy smiled shyly, as he finished ringing every item. \"That's going to be $1369.80.\" \n\nSamantha's mouth dropped to the floor. She looked up to Ian, who only produced his wallet, and Black Card. Her eyes felt like they would join her mouth on the floor. The kid swipe the card, handed it back to Ian who took her things, placed his hand at her back, and ushered her out to the car. \n\n\"Curly, you didn't have to spend all that money on me.\" \n\nIan waved her concern away. \"That's not important Sammy. What's important is your happiness.\" He started up the car. \"I have a surprise for you.\" \n\nHe maneuvered his car back to their cabin. Inside he placed all of her stuff down before he returned to his car. She sat down on the couch, patiently she surfed Facebook on her phone as she waited for him to come back. When she heard his heavy boots stomping through the house, she looked up towards the entrance. When he came in he held a strap across his broad shoulder. \n\n\"What's that?\" She asked curiously. He removed the strap, and placed the bag attached on the coffee table. Falling onto the couch beside her he slouched back, with his long legs spread out. \n\n\"Open it and see.\" He replied. \n\nShe cut her eye at him and muttered, \"Smartass,\" before she looked back at the bag. Grabbing the bag, she realized it was heavier than she thought. Pulling it in to her lap, she unzipped the zipper. Inside the bag, she found a beautiful snowboard, with splashes of green, blue, and purple with a black backsplash. In green scripted writing was, 'limelight.' The name of her board. \n\n\"You've done so much for me. All this money you're spending, you don't have to... to buy my love.\" \n\nShe turned in the couch and crossed her legs Indian style. She leaned forward and moved a curly tendril from his brow. \"You don't have to impress me with money, curly. I've known you all my life. I know your heart and that's why I love you.\" \n\nIan sat up. \"I just want you to have the best, everything your heart desires. So I don't care about money, it's irrelevant. Your happiness is worth so much more.\" \n\n\"My heart desires you, curly.\" A tear fell from her eye. \"Just you.\" She swiped at her tear, and gave him a watery smile. \n\nHe groaned, and wrapped his arm around her waist. \"Don't you already know?\" He pecked her lips. \"You have me. My heart, my soul, my world. It's already yours.\" \n\nSamantha gasped. As Ian pushed forward, sending her back into the plush cushions of the couch. His lips commanded her's, as he passionately grinded his hips into hers. Samantha felt his hardness press into her mound. Instinctively her hips thrust upwards to meet his, as her legs wrapped around his lean waist. Ian's big hand gripped her tender breast through her sweater, kneading them with expertise, as he worked his way from her lips down to the sweet spot on her neck. \n\n\"Ian.\" She moans, gripping a fist full of his hair. \"Not here. I don't want it to happen like this.\" \n\nHe lifted his head from the crook of her shoulder with a dishearten groan. He looked at her, and confirmed that he understood. \"No pressure, baby. We can take it slow.\" He adjusted his thick member within his pants to a more comfortable position. \"Even if it kills me.\" He chuckled partially joking. \n\nSamantha blushed with a smile as she tore her gaze away from the sight of his engorged dick making an astounding tent in his pants. She couldn't admit to him that she was a bit afraid to once again take on him that way, afraid that she wouldn't know what to do. \n\n\"Any way, how about you change into your new jacket, and snow boots, I wanna take you on the soaring eagle zip line.\" \n\nSamantha's eyes lit up. \n\n\"As you change, I'm going to see what mike and Carol is up too.\" Kissing her forehead he went in search for the two. Coming to stop at their bedroom door, he heard laughter, and playful batter. He knocked, and waited for someone to acknowledge him. After a minute, the door came open with Michael standing in front of him, shirtless. \"Hey man, what happen to you two? Sammy, was waiting on you guys to show.\" \n\nIan looked over Michael's head to see Caroline sprawled on her back, with a gigantic smirk on her face. Luckily for him, she was fully dressed, instead of being naked as the day she was born. \n\n\"We got a little caught up in the moment, man.\" He glanced back at her with a smile. \"She's special, dude.\" \n\nIan felt happy for his friend, he knew out of all people that Michael deserved someone good in his life. It was even better since the girl turns out to be his woman's best friend. It brought all of them together closer than ever before. \"I'm happy for you man.\" He patted his shoulder. \"Do you think that you guys are going to be able to ever pull yourselves from that bed, and get out of the house?\" \n\n\"Of course.\" He chuckled. \"She's just addictive you know what I mean?\" \n\nIan smirked knowingly. \"Actually I do.\" He checked the time on his watch. \"Alright man, me, and Sammy are about to go zip lining. She's real excited so, I'm going to start showing her around. \n\n\"Did I hear you say zip lining?\" Caroline stood next to Michael, who naturally put his arm around her shoulder. \n\n\"Yeah. We got all of her gear earlier.\" he smirked down at her, causing her to blush and look away. \"So yeah, were just going to enjoy the rest of the afternoon.\" \n\n\"You want to go zip lining?\" Michael looked down, at her. \"Then afterwards we can get you some gear.\" \n\n\"I like the sound of that. \" She smiled and pecked his lips. \"Where's my girl?\" She asked turning back to Ian. \n\nHe pointed towards the living room. He waited for Caroline to get out of sight before he turned back to Michael. \"Mike, you two got it in already?\" Ian couldn't help but wonder. \n\nShaking his head, Michael pulled a sweatshirt over his head. \"No, we just did a bit of heavy petting, and making out. We both wanted too but she felt as if it would be too soon, so I held back.\" \n\n\"She's a keeper that's why buddy.\" He waited by the door as Michael continued to gather his stuff. \"After we go zip lining, you two are going back to the shop to get her gear?\" \n\n\"Yeah, I guess. If she's still up for it. Sam got all that she needs?\" he asked. \n\n\"Of course, I made sure she got everything she needed. I couldn't bare it if a single scratch was to mark her beautiful skin. And I will ensure the same thing for Carol, so when you get there just charge it too my account.\" \n\nMichael paused to look at his friend. \"You sure man? All of this has got to be pricey.\" \n\nIan waved it off. \"I just want our women to enjoy themselves, while completely being safe.\" He arched a brow. \"She is your woman now right?\" He questioned referring to Caroline. \n\n\"For all intents and purposes.\" He smirked. \"I'm ready, let's go.\" \n\n***** \n\nThe wait wasn't a long one, they reached the top, and waited as the couple ahead of them enjoyed their ride. The lift pulled the couple backwards, taking them up higher and higher. Samantha covered her mouth in excitement, she looked up to Ian, to insure he was seeing the same thing she was. Looking back up she saw them stop for a second, before they were propelled forward. When the couple came to a stop, the staff member went to each and helped unbuckle their safety belts, before escorting them to the exit. The employee opened the gate for Ian, and Samantha to enter. Ian gripped the seat to keep it from swaying as Samantha hopped onto the seat. His long frame easily settled into the seat with his feet still on the ground. The employee, buckled them in, and smiled reassuringly. \"You two ready?\" \n\nSamantha nervously returned her smile, although she was more excited than anything, being high off the ground did rattle her nerves. Ian knew of her slight discomfort. He threw his arm over her shoulder, letting her know he was right there with her. \n\n\"Were good.\" He told the employee. \n\nShe rose the lift, and unhatched the clasped hook from the bottom. \"Enjoy your ride!\" She called out before they began to ascend backwards. Samantha clenched as the lift swayed gently. She placed her hand on Ian's thigh squeezing harder than she realized. \n\n\"Relax, baby. You're safe, just enjoy the experience.\" \n\nSamantha tensed shoulders relaxed at the sound of his warm voice, at her ear. His breath warmed her body, as did the soft kiss he placed at her ear. \"Look how beautiful this place is.\" \n\nShe looked around, and witnessed a sight so beautiful, it made her want to cry. All of the snowcapped tree tops, stretched for miles and miles on end. There was a slither of sunshine in the sky, making the fluffy snow appear to be trillions of tiny diamonds clustered together. She turned to him with a grin. \n\n\"It's amazing.\" \n\n\"Get ready!\" He shouted back, right as the lift stopped. Samantha threw her head back, as they took off, she found herself giggling as she threw her arms out to the side. \n\n\"Whoa, GO Sam!\" She heard Caroline shout, as they drew closer. When they came to a stop, they were ushered off the platform. \n\n\"We have to do that again before we leave, it was just so freaking fun.\" Samantha rambled excitedly. She continued walking ahead not realizing Ian was leisurely trailing behind. After almost 5 minutes, Ian needed to reassure himself that she was taking proper breaths due to how fast she was going. Taking her hand, he tugged her towards him, and spun her around. \n\nPlacing both hands on her cheeks, he held her in place. \"Breath.\" He stated. Samantha's batted her wide eyes up at him, with a look of so much innocence's. Her lips were pressed together like a fish, due to his oversized hands cupping her puffy cheeks. With a laugh, he leaned down and pressed his forehead to hers. \n\n\"Hmm.\" He hummed. \"You're so special.\" \n\n\"Mmhmm, you would know. For you sat right beside me on the short bus.\" She stated matter-of-factly. \n\nPulling away she placed her hand on her hip. \"What's next on the agenda for today?\" She returned to the innocent woman from before, as if she hadn't just made that smart remark. \n\nShaking his head, he walked towards her. She was so quick to switch attitudes, he failed to keep up majority of the time. \"Let's see shall we.\" \n\nPulling out a resort map from his back pocket, he maneuvered them through the park. \n\n\"How about the Alpine slides.\" \n\n\"Sure I'll try anything.\" \n\nJust as before the line moved quickly, because there were two lanes. When it was their turn he kissed her, and got on to the left slide as she got into the right. She took off first, speeding down the winding path. He realized that she was challenging him to race her. He leaned forward, shifting his weight forward to make him speed faster down the slide. He came up beside her, and grinned at her look of surprise. She tore her eyes away to focus on the path before her. Gripping the shift in between her legs, she leaned over lower, and inched farther up. Taking a quick glance in his direction, she stuck out her tongue. \n\n\"Loser!\" She called out. Leaving him in the dust, throughout the remainder of the course. \n\nUp ahead he could see she was nearing the red stop area, and knew he was defeated. 'Damn' he groaned. \n\nHis cart slowed to a stop. Getting up he stretched out his long limbs, he picked up the cart, and put it off to the side. When he looked over at her she was standing patiently with her arms crossed, a shit-eating grin spread across her face. \n\n\"I totally just kicked your ass.\" Her voice was full of cocky confidence. \n\n\"Yeah well, you had a lucky heads start.\" \n\n\"Oh you think? Well I say we go again and see who the true winner is.\" She challenged. \n\nIan stared her down, loving her competitive nature, and the way she looked so feisty. \n\n\"You're on.\" He answered. She stuck out her hand for him to shake. He looked down at her small palm, and chuckled yet he took it in his, and she shook it with all the strength she could muster. He tighten his palm a little when she started to release hers, pulling her to him he spun her around in his arms, trailing a kiss from her brow down to her nose, and cheek, before settling on her lips. The kiss was short, sweet, and brief, leaving her panting little frosty puffs. \n\n\"But before we go for round two. I want to get some food in your belly.\" \n\nHe checked his Phone for the time, it was 4 o'clock well past lunch time, and he was starving. They decided to eat at the John Harvard's restaurant and pub. Samantha shot a quick text, to Caroline inviting them to lunch. \n\n\"Can I get a Sprite, and she would like a Dr. Pepper.\" He asked the waitress. She nodded and went to get their drinks. \n\n\"What you in the mood for Sammy?\" Ian asked, looking over the menu. \n\n\"Bacon cheeseburger, extra Bacon, with season fries.\" Was her immediate answer, her appetite had definitely returned. \n\n\"That sounds good baby. I think I'm going to get the double steak Burger.\" \n\n\"Yummy.\" She moaned. \n\nThe waitress returned with the drinks and pulled out her pad. Ian repeated their order, making sure she got everything right, before she left to put it in. \n\nSamantha took that time to look around. Taking in the coziness of the restaurant. It had a homey feel, with its dark browns, solid wood tables, low lighting, and rustic displays. The old fashioned dark oak bar, took up a large amount of space towards the back. As if it was the highlight of the place. Flat screens hung above it, showcasing numerous sports, which drew Ian's gaze Samantha noted. Yet she didn't mind, seeing as she had a text from Caroline, and Annabel. Caroline let her know that her, and Michael were on their way. As Annabel asked about her time here so far. \n\n\"Curly?\" Ian turned to look at her, with a guilty blush, creeping onto his cheek. Samantha found it to be too cute. \"I'm going to run to the restroom real quick.\" \n\nHe nodded, as he watched her head towards the bathroom. Inside, she rushed into a stall. The bathroom was fairly clean yet she didn't believe in sitting her ass on a public toilet. Squatting she relieved her bladder, noting how much longer it took her than normal. Flushing she exited the stall, and washed her hands. Pulling her beanie from her head, she groaned at the mess of strands sticking up everywhere. Running her fingers through the thick mass she finger combed it into a big messy bun. Then she touched up her lip balm, refusing to walk around with crusty dry lips from this weather, she thought about all of the kisses she shared with Ian, and thanked god she took care of every aspect of her body. ",
        "With everything straight she walked back into the restaurant. When she reached her table she found Caroline sitting at her right, with Michael right at her side. \n\n\"Hi there beautiful. Where have you been\" Samantha asked. \n\n\"Well, Michael took me shopping for my gear.\" Caroline replied, cutting her eye at Michael, as both men vehemently debated about a call made on one of the sports game. \n\n\"That was so nice of him.\" Samantha cooed elbowing Caroline. \n\n\"Well I'm finding out that he's a very nice, generous man the more and more I'm around him.\" \n\n\"That's what you deserve, am I right?\" Samantha joked. \"Did you guys order?\" \n\n\"Uh huh. Girl he told me to get whatever I like. Whoa.\" She fanned herself dramatically. \"You know I can get used to that.\" \n\nSamantha laughed. \"Stop acting up.\" She chided, playfully. \n\nThe waitress came over carrying a big black server tray. She placed down two big plates, containing a burger so big she doubted she could hold with one hand, and a fist full of fries. She also placed a few plates of appetizers on the table, huge crispy onion rings with a zesty sauce, mozzarella sticks with marinara, and a plate of cheesy bacon potato skins. \n\nIn true Samantha fashion she snatched up a mozzarella stick and took a huge bite out of the delicious chewy fried cheese. \n\n\"Mmmm.\" She moaned, closing her eyes as she chewed slowly, cherishing every bite. When she opened her eyes she saw that Ian was staring directly at her with heated eyes. His clear blues were beginning to change, something she began to notice whenever he became aroused or angry. \n\nReaching out with his hand he used the pad of his thumb to remove a lengthy strand of mozzarella from her bottom lip. Without looking away he licked the cheese from his thumb. Leaning over he whispered in her ear. \n\n\"I can't begin to explain how watching you simply eat, affects my body.\" He let out a ragged breath directly in her ear, causing her to shiver. \"I don't understand what you do to me woman.\" He growled softly. \n\nHer breathing began to change, as she thought about what he said. Picking up her knife she cut her burger in half so she could manage it. Slowly she munched on a piece, finding a distraction in conversation with Caroline. She spared a fleeting glance in Ian's direction, but his attention was averted towards the game once more. \n\nWhen she figured he wasn't paying attention she reached over and picked up his heavy burger. Taking a bite, and then another, she quickly placed it back right as he turned back to his plate. Looking down at his burger his brows bunched together in confusion. Glancing around the table, he eyed each of them before his eyes settled onto Samantha who still chewed silently while looking down at her phone. She felt his eyes and glanced at him with an innocent smile. Ian cocked his brow, and his lips quirked. Reaching over he swiped sauce from the side of her lip. Realizing it was steak sauce from his burger, he grunted. \n\n\"I knew it.\" \n\nSamantha looked at him with a smirk of her own, and simply shrugged. \"It looked so good I had to try it.\" \n\nHe grunted once again. \"Yeah, seems as if you enjoyed it quite a bit. Judging by how much of my burger is gone.\" \n\nShe waved her hand. \"Aw boo hoo. Here...\" She picked her burger up, and held it out for him. \"Take a bite.\" \n\nIan didn't hesitate, as he leaned forward and took a big chunk from hers. \n\nSamantha eyes widen. With a glare she reached over to his plate, stole a fry, and ate it right in his face without breaking eye contact. \n\nIan bellowed, and eyes strayed to their table but no one cared as Michael's steak came out, along with Caroline's pasta, soon after. They played and joked around as everyone ate contentedly until Samantha had to push back from the table, while rubbing her belly, with satisfaction. \n\n\"That was so good.\" She added. \n\nSamantha still had half of her burger and there were a few left over appetizers here and there. Caroline had a bit of pasta left, but for the guys, their plates were completely clean \n\n\"You got that right I need a beer now.\" Michael added. \n\nSamantha slurped down the rest of her drink, as Ian signaled the waitress to come over. Suddenly Samantha let out a very unlady like belched, which had all eyes at the table on her, as well as a few others near their table. She covered her mouth with her hand, and embarrassingly squeaked, \"Excuse me.\" \n\nMichael bursted with laughter, followed by Ian, and Caroline. \n\n\"That was a good one, Sam.\" Michael boasted, as he belched. \n\nShe blushingly sent a smile to him, that's why she loved him. He was like a big brother to her, always there to make her feel better, and make a bad situation better. \n\n\"Are you ready for your bills?\" The waitress asked. \n\n\"Yes, we are. And can I also get a few take out plates if you don't mind?\" Ian asked. \n\n\"Of course not. I'll be back in a moment.\" \n\n\"So has today been a success for you?\" Ian questioned, moving in closer to her. \n\n\"I would have to say so, Mr. Queen.\" She leaned into him. \"But I haven't forgotten that rematch.\" \n\nIan grinned. \"Of course not, but perhaps we will take that up tomorrow. After all I don't want to burn you out on the first day.\" \n\n\"Okay.\" She replied. \n\nThe waitress returned with the checks, and takeout containers. The women gathered the remaining food, as the men handled the bill, each left a generous tip. Before the group left, to head for the cabin. \n\nNight had fallen quickly, as well as the snow. Large outdoor light post lite up numerous paths, and hills, guiding them safely back to their cabin. Once inside Michael went to heat of the enormous fireplace to knock the slight chill off the house, as the girls simultaneously spoke of showering. They giggled, and split up to go get cleaned up, and dressed down into something more comfy. \n\nSamantha showered in her favorite moonlight Jasmine body wash, before she stepped out and donned one of Ian's old worn high school jerseys. The shirt fit her like a dress, hanging loosely to her mid-thigh, barely covering her large bubbles ass clad in a pair of all black boy shorts. She moistured her skin, brushed her teeth, and hair. \n\nWhen she walked out of the steamy bathroom into their bedroom, she found Ian stripping out of his shirt. He heard her approaching, so he turned around to see her standing before him in his high school championship jersey. He had all but forgotten he had gave it to her all those years ago. But seeing her in it now, brought on a primal feeling of need on an entirely different level. \n\nSamantha observed his body, noting how his beltless slacks hung low on his hips, making his V more pronounced, and mouthwatering. The front of those very same slacks began to give way to a very large bulging tent. She gasped and tore her eyes away, to look into his. She saw that his jaw was clenched, and that his fist were balled around the shirt he had just removed. \n\nClearing his throat, he knew he needed to go and practically drowned himself in a cold shower ASAP. Only that would help the raging passion inside of him, at this point, or so he hoped. It had to, because he wouldn't pressure her into doing anything that pertains to sex if she wasn't ready. \n\n\"Uh, I'm going to go hop in the shower right quick baby.\" He moved past her, careful to not touch any part of her, because he wasn't sure how he would react to the softness of her skin against his. \"I put our things up in the fridge, so you don't have to worry about that. Just curl up on the couch or whatnot, maybe we can watch a movie.\" \n\n\"Okay.\" \n\nShe walked out of the bedroom, into the entertainment area beside it. She found the remotes to operate the TV, and crawled on to the round love seat sectional designed for a couple to cuddle comfortably while watching television. She flipped through the channels aimlessly for a while, before settling on 'Lucy.' \n\nShe felt a chill course through her, jumping up she ran back to their room grabbed a blanket, and on second thought also decided to run downstairs and grabbed two drinks for them. Running back upstairs she placed their drinks in the little drink holder attached to the sectional, before she fell back onto it out of breath. \n\n\"Shit, I'm so out of shape.\" She gasped to herself. \n\n\"What?\" \n\nSamantha sat up with a start, so caught up in her mini impromptu exercise she hadn't realized the shower had stopped. Ian stood at the door to their bedroom, dressed in a pair of loose black sleeping pants, with a towel in hand drying his unruly curls. He looked dark, mysterious, and dangerous even. With his full stubbled beard, and slick damp muscles, it was all doing a helluva lot of damage on her fresh panties, they were quickly becoming drenched. \n\nHe threw the towel somewhere behind him as he walked into the entertainment area. \"What are we watching?\" He asked. \n\nSamantha worked her throat hoping to produce enough saliva to aid her in talking. \"Uh, Lucy. With Scarlett Johansson.\" \n\n\"Ah! I heard that was good.\" He came and sat down next to her on the lovers couch. He scooted back into the cushions, and even then his long limbs were fully on the couch with room to spare. \"Come here. I want to cuddle against all of those curves.\" \n\nSamantha rolled her eyes before she crawled to him, coming to rest inside of the crook of his arm. Her cheek laid directly on his bare chest, she could hear the calming beat of his heart, and it calmed her. He covered them up with the blanket she had grabbed. It was big enough for them both to have equal share in the warmth. \n\nThey had caught the movie in the beginning so they both found themselves absorbed in the action flick. She stayed at his side, as he rubbed his rougher hand Up and down along her arm. It was hard to ignore, the sensations that the touch produced. Her nipples tightened, and her clit began to swell. She shifted in her seat, rubbing her body along his accidentally, once her breast brushed his side through the thin jersey, she couldn't contain her moan of pleasure. Once it was out she couldn't help but feel embarrassed. \n\nIan looked down at her, with questioned, and she could only stare at him, with her lip firmly between her teeth, and her thighs tightly shut. \n\n\"Baby?\" He questioned, his voice husky, and low. \n\nShe nibbled on her lip, contemplating on her actions, and what they would bring. His manly scent invaded her nose, as he leaned closer to her, making her say 'fuck it.' \n\nShe threw her arms around his neck, pulling his lips down to hers. She suckled on his lips, as if she was a possessed mad woman. Plunging her tongue into his minty mouth. She moaned hungrily, causing Ian to answer with a growl of his own. \n\nHis palm found its way up to her tit where he squeezed gently, and tweaked her nipple between the pads of his thumb and forefinger. He released her nipple to twirl his finger around the turgent sensitive tip. \n\n\"Ugh.\" She moaned wantonly. Pulling her lips away, as she threw her head back. He went for her tender neck, she freely offered. Using his teeth he grazed her throat, before he suckled the pained sensation away. He continued, driving her mad. She threw her leg over his. Bringing her crotch right onto his leg. She radiated heat from her core, as if she was in heat, as she began to grind her pussy into his thigh. \n\n\"Oh, Ian.\" She whispered. Rubbing her throbbing clit into him. \n\nIan pulled away from her neck, placed his hand at her gyrating hip, to still her. \n\n\"Samantha...\" He growled. His jaw worked, as he clenched and unclenched noticeably, she could hear him grating his teeth to keep control. \n\n\"I want you with everything in me. But I won't take you like this. Our next time will be more meaningful, when you're really ready.\" \n\nSamantha's hips stopped fighting his hand, as she laid still her horniness cooling. He noticed the change, as she turns her head away ashamed. \n\nWith a grip to her chin he forced her eyes back to his. \"Though I won't take my pleasure inside of that beautiful tight pussy tonight, doesn't mean that I want quench my thirst for it.\" \n\nHe moved to the end of the couch in record time, and threw the blanket from her. With rough hands he parted her clenched thighs and pushed the jersey out of his way. He held her thick thighs apart as his eyes feasted on her beautiful shape. With deliberate slowness he brought his mouth to her clothed pussy, and used his lips to run over her mound, down to her soaked slit. Her pelvis bulked from the surprised pleasure, but she was firmly locked by his grip. He repeated this action numerous times, until he worked himself up, to where he could go no longer without tasting her full essences. Licking the sweetness of her pussy from his lips, he lifted her ass up in the air and tugged her panties off in one go. The coolness of the air hit her exposed pussy making her squirm in delighted torture. \n\n\"Ian...\" She looked at him through the dim lightning. He was staring down at her glistening pussy. On his knees, he put her back in position, her legs spread wide, with his palms securely holding them in place. Leaning closer, he blew a hot breath across her pussy and watch her twitch. \n\n\"Please no more teasing.\" She grabbed for his head, which was hovering right at her mound \"I need... I need...\" \n\n\"You need what?\" He questioned. Each word hitting her pussy. \"Tell me, and you know I will make it happen.\" \n\nShe fought against her crippling need, trying to refuse having to shamefully admit her wants to Ian. But her body won over, and she couldn't take the torture any longer. \"I need you to eat my pussy.\" She breathed. \n\n\"Will do.\" He stated blankly before he kissed her mound. \n\nSamantha jerked, as Ian went farther down, trailing his lips over the lips of her slit, down to the opening. Leisurely he plunged his full tongue within her tight opening. Pulling it out, he repeated the action again, then again. Working her sweet essences from within out onto his waiting tongue. He tongue fucked her slow, and deep until he felt the familiar tighten of her inner wall. Pulling his tongue away, he placed closed mouth kisses over her pussy. \n\n\"Ian, please keep going.\" She reached down into his curls. \n\n\"Shh.\" He replied. Leaning up he pushed the jersey up to her chin, exposing her shapely tits to his ravishing gaze. He kissed her from her pussy, to the valley between her breasts. \"Do you want me to suck on your beautiful titties?\" He questioned. \n\nShe nodded her head ferociously. \n\n\"Can I get an answer baby?\" \n\n\"Yes Ian. Suck them please.\" \n\nHe trailed his tongue over to her right nipple. Using it he swirled his moist tongue around her nipple, before he closed his teeth around the rigid bud. Swirling his tongue around her nipple quickly, he unlatched his teeth, so he could suckle. \n\nAfter a moment he popped her tit out, to trade for the other side. Showing it equal treatment. Letting that nipple go his kissed his way up her neck. He suckled beneath her ear, as she began to grind into his bulging dick tucked inside of his pants resting at her pussy. \n\n\"Do you have any idea on how sweet your pussy is?\" He whispered. \n\nHe brought his lips to hers. Sharing the essences on his tongue. She gasped as she lined her clit up with the head of his dick. He allowed her to gyrate herself against him, until he could no longer take it. \n\nGripping her hips he halted her movements. \n\n\"Fuck.\" She hissed, frustrated. \n\nIan smiled, as he looked down at her drenched pussy. It was covered completely with her juices, and her clit was now protruding through her slit. His mouth watered at the sight. \n\n\"You have the most beautiful pussy that I've ever seen.\" \n\nHe latched his mouth on to her pussy, sucking her clit into his mouth, where he slurped, and flicked his tongue rapidly against it. Wanting better access, Ian placed his hands at the back of her knees, lifting her legs, her pussy spread open. \n\n\"Ohhh my godd!\" She groaned. Gripping his hair tightly. Tugging painfully. Ian didn't care though, he kept his mouth in place, using the roughness of his tongue to stimulate her clit thoroughly. \n\nWith a scream she came over his face, his tongue flattened catching every drop. With her legs on his shoulder, he used both hands to tweak her nipples, more cream flowed into his mouth from the action. \n\nWhen she laid still with a few tremors, Ian got up from his kneel on the floor. He gripped his length and pulled a few times to ease the ache. Taking his previous seat, he scooted backwards and pulled her prone body to him. He swiped excess wetness from his lips. Covering their limbs, he held her close in his arms. He heard her light snoring, and smiled to himself, 'That's 2 for me,' he thought. He turned his attention to the television. Lucy had ended, and he saw that the equalizer was starting. \n\nHe watched, becoming absorbed in the movie. He enjoyed the action Denzel presented, expecting no less from a well rounded professional such has he. Focused on the screen, Ian hadn't felt Samantha stir, yet he felt her delicate hand as it gripped his semi-erect dick. With a surprise gasped he looked down at her, she feigned to be paying attention to the movie as well but her hand continued to explore his cock. \n\n\"Sammy baby, what are you doing?\" \n\nHe questioned, letting his hand go to her 's. \"You don't have to do that.\" \n\nShe tightened her grip. \"But I want too.\" Knocking his hand off, she pulled at his waistband, easing a hand on the inside. She came in contact with his stubbled happy trail. A zing of excitement passed through her, at the feel of his taunt skin. \"I want to learn you.\" She whispered. \n\nHelping her remove his pants, he lifted his hips. She tugged them, anticipating the vision of his thick member. When it sprang forward, she starred with awe. \"It's so large.\" She stated. Reaching out she gripped him, using her thumb and forefinger to swipe over his mushroomed head. His hips raised up with a jerk, as she continued to swipe her thumb over his head, gathering precum to lubricate the most sensitive area on his dick. As her fingers became more slippery she worked her way down his shaft. Moving her fist in a fluid motion, that was comfortable for her. His breath continued to hitch as she put more speed in her efforts. \n\n\"Damn. That feels so good.\" He thrusted his hips up to meet her down stroke. \"Use both hands.\" He commanded. \n\nAdding her other palm, she twisted them in alternate directions as she pumped up and down. His breathing came more rapidly, he felt his impending orgasm approaching. He grabbed the back of her neck, pulling her into an overwhelming kiss. She jerked his dick off with one hand, as the other cupped his balls giving them a light squeeze. That sent him over the edge as he cried out, breaking their kiss. He leaned his head against hers, working to regain his breath. \n\nWhen he calmed he looked down to discover the mess he had created. His cum covered her hand, his stomach, and chest. \"Shit. I gotta clean this up.\" He shifted to get up. \n\n\"I'll get it up.\" She said, pushing him back down on the chair. She got up, ran into the bathroom, and came back out with a wet wash cloth. Crawling onto the couch, she settled between his thighs. With the washcloth, she cleaned his upper body, and then focused on cleaning his flaccid dick. As she cleaned his body began to react, his softness quickly started to harden. Her eyes looked to his and a knowing smile quirked her lips. \n\n\"Give me that.\" He growled, taking the cloth away. Pulling his pants back up, he reached for the remote to turn the television off. \"Let's get to bed.\" \n\nWithout complaint, she placed her hand in his, and followed him to their bed. He pulled back the thick comforter, and ushered her underneath, following her closely behind. Samantha preferred to sleep on her stomach while Ian mostly slept on his back. She turned to look at him with a smile as she threw her left arm over his chest. \"Good night, curly.\" She whispered, closing her eyes as sleep pulled her into sub consciousness. ",
        "\"Goodnight Sammy baby.\" He kissed the top of her head, before caving in to his own tiredness. \n\n***** \n\nAround mid-morning they woke, cooked brunch, and gathered around the dining table to eat. Each one held a secretive smile upon their faces, speaking volumes even without words. Samantha couldn't hold anyone's gaze for too long, since apparently she was a screamer, she knew that she was heard. From the look on Caroline's face, she knew that her friend was going to grill her for details the first chance she got. \n\nAfter breakfast Ian and Michael offered to clean up, while the girls went off to chat. With giant coffee mugs full of hazelnut goodness, blankets, and iPad, they settled outside on the outdoor terrain around the huge fireplace. Samantha wore her oversized ugly sweater, with a pair of black joggers and thick fuzzy socks, Caroline in something similar, wore a pair of black tights, and a pullover hoody. Samantha placed her mug on the coffee table and took a seat on the huge C couch, she spread the blanket over her limbs, and went to her library of interracial erotic romance for a good story to get absorbed in. \n\nThey sat in comfortable silence for a good 10 minutes before Caroline broke their silence. \"So about last night?\" She questioned, not bothering to look up from her bubble witch saga. \n\n\"What about it?\" Samantha replied evasively. \n\nCaroline smacked her lips. \"Oh come on, are we really going to act like you didn't scream your brains out.\" She pinned her with her stare. \n\nSamantha blushed, and continued to focus on her iPad. Until, Caroline cut her view of the screen with her manicured hand. Samantha rolled her eyes towards the sky, as she looked at Caroline. She patiently waited for Samantha to cough up the goods with her head cocked to the side, her brow raised, and a wicked grin. \n\n\"We didn't fuck if that's what you want to know.\" \n\n\"What?\" Surprised, she shook her head. \"Damn babe what did he do to have you screaming like that?\" \n\nShe nibbled on her lip to hide the smile on her face. \n\n\"Did he eat you out?\" She asked bluntly. Samantha smirked. \"He did!\" \n\n\"Shh...\" She looked towards the back sliding door, it was cracked, but no one was standing there. \"Not so loud.\" \n\n\"So he did.\" She giggled. \"Girl if he made you scream like that when he was only eating your pussy, I can only imagine how you would act when he gives you the D.\" \n\nShe knew that Caroline was right, but there was no way she was going to admit that to her. \n\n\"Did you return the favor to him?\" \n\n\"Somewhat.\" She shrugged. \"I've never done that, so I just used my hands.\" \n\n\"Babe, there's no right or wrong way to give head, just never use your teeth.\" She instructed. \"And remember to breathe, stay relaxed.\" she added. \n\n\"But what if I can't fit all of that in my mouth?\" Samantha questioned, cocking her head to the side. \n\nCaroline eyes bulged slightly. \"Damn, how big is his dick!?\" She caught herself. \"You know what never mind that.\" She waved that question away. \"That's not the objective. The goal is to give your man pleasure, just focus on using your tongue on his sensitive areas. Be sure to watch for his reactions as you perform, that way you will be able to know what he likes, and what he loves!\" She winked, and gave her a know it all smile. \"Did I mention the breathing part?\" \n\n\"Oh god, I can't believe I'm taking advice on this. I feel as if I should be taking notes right now.\" \n\nCaroline rolled her eyes and continued to play her game. \n\nSamantha interest was on her story, as she began to read a new supernatural series. Popping a pair of earphones on she laid back on the colorful pillows that lined the couch and cuddled underneath her blanket. She paused as the blanket rubbed her nose. She vaguely smelled Ian's scent. It was comforting to have his scent wrapped around her, it made her body relax. \n\n**** \n\nLater... \n\nSamantha felt her torso being shifted around. She opened her eyes to look up at Ian. He sat down and lowered her head into his lap. Looking up at him, she smiled and stretched her limbs. \n\n\"Still tired?\" \n\n\"I guess. I have no clue what happen.\" \n\nShe looked around to see Michael and Caroline were cuddled up on the other end of the couch. Sharing whispers, smiles and touches. \"What have you been up to?\" She asked Ian. \n\n\"Had to make a few calls to Virginia, and I checked on the house.\" \n\nShe pulled her blanket closer to her chin, as she shifted closer to Ian. \"Hmm, how's the guys?\" \n\n\"Good from what I've been told, and the house is still in tack surprisingly.\" \n\nShe giggled, and closed her eyes. \"Ian where do we go from here?\" \n\nHer question was met with silence. When she looked up she could tell he was deep in thought. \"How do you mean?\" \n\n\"I mean as in the future do you see us?\" \n\nHe focused his attention on her. \"Oh course, Samantha. There will always be us.\" He leaned closer to her. \"Even when you may not want us to be.\" He teased. \n\nShe pushed his head away with a roll of her eyes. \"Stop teasing me.\" \n\nHe gripped her chin, and brought her lips to his. \"I like to tease.\" \n\nHis hand touched her hip, with a light squeeze he guided her closer into the cave of his arms. He playfully licked her lips with the tip of his tongue, using the wet appendage to trace every inch of her softness. \n\n\"Judging by your breathing, and the look in your eye, I can tell you enjoy that teasing as well.\" \n\nShe tugged her lip between her teeth to suppress a moan. His close proximity and words were causing her body to wreak havoc. \n\n\"You're showing me right now exactly how eager you are. When the time is right I'm going to show you how much I want you.\" His voice held promise. \"Now I do recall a rematch is supposed to take place today.\" \n\nHis sudden change of topics made Samantha frown. At this point the playful competition they had going was at the very back of her mind. Because she wanted to know more about what he planned on doing to her. Before she could voice her thoughts he got up from the couch, pulled her up against him, and pulled her into the house. \n\n\"Get dressed baby. We got a lot to do.\" \n\nShe put up no fight, against his command. Her body felt tender and tired, and she just wanted a warm bath, and a warm bed. Yet she knew if she said anything such as that, everyone would consider her a party pooper. After taking a relaxing shower Samantha dressed and went back downstairs to look for Caroline. She found her outside in the car, flipping through the radio trying to find something. Both Ian and Michael loaded gear into the Jeep, since it was bigger, they all were going to ride with him. \n\n\"You ready?\" Samantha asked with a beaming smile. \n\n\"Girl yes. I'm excited as hell.\" \n\n\"Wait until you go on the Alpine slide that was fun as hell. Ian and I are going to have a rematch today since he can't handle the fact that I kicked his ass yesterday.\" \n\n\"Hey. I heard that. \"Ian popped up behind her. \n\nSamantha looked back over her shoulder with a smirk. \"I figured you did.\" She turned back to Caroline. \"Perhaps I wanted you too.\" \n\n\"OOOO.\" Caroline instigated. \n\nIan crossed his arms over his wide chest. \"Better watch it.\" He grumbled before he brought his palm down across her ass. \n\nSamantha's eyes widen with shock, as her mouth fell open. \"Ian.\" She gasped. Ian only walked away with a slight smile on his face. \n\n\"Naughty girls deserves spankings.\" He threw over his shoulder. Turning he put the rest of the gear in the truck. \n\n\"Unbelievable.\" She mumbled, staring at him in wonder. \n\n\"Alright girls we're all set.\" Michael slammed the trunk shut, and walked around to the driver's side. \"Ya'll ready?\" He asked, as he took the wheel, and looked over at Caroline. \n\n\"Hell yeah.\" Caroline answered. \n\n\"Well alright then.\" Michael gave her a wink, as he pulled out. \n\nWhen they reached the parking lot, Samantha had to admit to herself that she was excited to be doing something she had always wanted to try. Hopping out of the Jeep, she went to the trunk as Michael popped it open. Grabbing her helmet and goggles, she slipped them on, as she watched everyone else do. Afterwards she grabbed her gloves slipped them on and grabbed her board from her bag. As she looked it over she realized that at some point Ian must have placed her Brackets on to the board. She looked up towards him and noticed he was placing his helmet on, as well as his board. She mimicked what he had done, and placed her front foot inside the bracket, and locked it in place. \n\n\"You have a camera on your helmet?\" \n\n\"Yeah my GoPro. I plan on catching every bit of this moment. \" \n\nSamantha groaned, since she knew he meant that he would have something tangible that shows her embarrassment. Turning her attention to the Mountain, she really realized how big it is, and briefly wondering how they are going to get up there. Or better yet how she was going to get back down. \n\n\"How the hell do you get up there?\" She asked. \n\n\"We're going to take the Berkshire express.\" Michael answered. He took Caroline's hand and moved towards the entrance of the lifts. She excitedly skated along next to him using her board. \n\n\"What have I gotten myself into?\" Samantha questioned herself. \n\n\"Come on scaredy cat.\" \n\nIan grabbed her hand, and led her to the lifts as well. They moved in line with Michael and Caroline, shuffling forward as people boarded lift after lift. The Berkshire express held up to five people per lift, making the wait pass quickly. \n\nWhen it was their turn to get on Ian got in on the edge, pulled Samantha to him, followed by Caroline and Michael, as well as another more experienced couple. They began to move in the air, heading towards the top of the mountain. Ian wrapped his arm around Samantha's shoulders, coaxing her to lay her head on his shoulders as they both took in the beautiful scenery. \n\n\"Are you comfortable?\" He questioned. \n\nShe hummed her satisfaction, as she took a deep whiff of his scent. \n\nYou smell so good. \n\n\"Really? You think so huh.\" \n\n\"Huh?\" \n\n\"I'm glad you enjoy how I smell.\" He chuckled. \n\nSamantha cringed inwardly, 'please tell me I didn't say that out loud.' Looking up at him she knew that he had indeed heard every word. A blush stole her cheeks, as she turned away in embarrassment. She tried to move out of his arms, but Ian wasn't having it. \n\n\"No don't try and pull away.\" \n\n\"I'm so embarrassed.\" She mumbled, keeping her gaze from him. \n\n\"Don't be.\" He soothed. \"If it makes you feel any better, \" He leaned closer to her ear. \"I love the way you smell as well, especially when you're soaked with your sweet goodness, waiting for me to taste your pussy.\" \n\nHer gasp drew attention to her from the others on the ride. Ian looked over her shoulder innocently with a smile. He rested his head on the top of her head, with a kiss and they finish the ride in comfortable silence. At the landing, they filed off, and headed towards a more vacant spot on the mountain top. \n\n\"Have a seat baby. Let me help you get your board on.\" \n\nSamantha sat down on the hard packed ground while Ian sat next to her holding her board in place as she positioned her feet inside. \"Alright, this strap goes here,\" He showed her how to properly adjust the buckle through the latches. \"Now just crank it until its snug around your boot. This is really important baby, it's for your safety.\" \n\n\"Curly I'm pretty sure I understand,\" she laughed \"Relax will you.\" \n\nIan realized how he sounded, and laughed at himself. \"I'm very precautious and protective over you Sammy. I can't just turn it off.\" \n\nHe double checked the latches on her brackets before he stood up and reached for her hand. Her board slid forward and she gasped in surprise. Ian wrapped his arm around her waist to hold her steady. \"Hold on to my shoulders.\" \n\nShe placed her hands on his shoulders and held on as he bent down to lock one of his brackets in place. Standing back up, he beamed at her happily. \n\n\"We're going to start out slow.\" He let her go slowly. As he backed further away, she wobbled, carelessly trying to pull him back. \n\n\"Stand up straight, and relax. The key to snowboarding is keeping your body controlled. You turn your body the way you want to go Sammy.\" He glided farther back \"Try it baby, don't be afraid to fall. It's just snow.\" He picked. \n\nShe glared at him from her slumped posture. \"Is that supposed to motivate me? If so you need a lesson in motivation techniques.\" She grumbled. \"It's not about the fall, it's about the embarrassment.\" \n\n\"Aw, trust me none of that matters out here.\" Ian effortlessly skated over to her on his board. \"Keep your shoulders straight, and pushed back,\" He positioned her shoulder. \"Now look in the direction that you want to go.\" \n\nShe followed his instructions, and looked down the slope. \"It's so steep.\" \n\n\"It won't feel that way once you start. Now you're going to have to find your fall line, and keep it in your sight. When you're ready, decrease the edge angle of your Snowboard. Point your board down and then shift your weight forward with your weight on your leading foot.\" \n\nShe began to glide down the terrain slowly. \"That's it baby.\" He boasted. \"If you ever need to stop, just shift your weight back, and lifted your board up slow.\" \n\nSamantha noticed the speed she was starting to gain, and tried to stop herself using Ian's instructions. Yet as she pulled back, she leaned back too far, landing on her butt with a big thump. Ian skated to her side quickly. \n\n\"Baby, are you okay?\" \n\nSamantha fixed Ian with her bright gaze, unexpectedly he saw a smile gracing her lips, which turned into laughter. \n\n\"That was so fun.\" She dusted her hands off, fixed her helmet, and took the palms he offered to help her up. \n\n\"You sure you're fine.\" He brushed the snow from her back, and ass. \n\n\"I'm good. I'm good.\" \n\n\"Let me fix my boot, and I'll show you how to stop.\" He chuckled. \n\n\"Stop laughing at me loser.\" \n\nPushing himself up from the ground, he put his leading foot forward, and started off at a glide down the hill. He let his board gain speed, carrying him further down until he came to a stop. He looked back up the hill and waved for her. \"Come on baby, you can do it.\" \n\nSamantha took a deep breath, and started off in a glide down slope. When she neared Ian, she leaned back to slow down to a stop, yet it wasn't slow enough, and she crashed smack into him. They both fell with an oomph, and laughter. Their arms and body were entangled, as she laid over him, with his hands wrapped around her waist. \n\n\"This is way harder than I thought it would be.\" \n\n\"Your get the hang of it.\" \n\nShe moved down to shift backwards off of him. But Ian had other ideas, as he slipped his hand down to her ass. \n\n\"You're not enjoying hanging out with me down here.\" His lips lifted at the edge with a mischievous grin. \n\n\"You're so awful.\" \n\nShe pushed away from him, ending up on her butt. She then turned over on all fours, using her hands she pushed her body up off the ground. \n\n\"Let's go lover boy.\" She placed her hand on her hips. \"I've got a lot of learning to do.\" \n\n\"Yes ma'am.\" \n\n**** \n\nLater that night after spending the entire day on the slopes, and Ian earning a win on the Alpine Slide. The crew shuffled inside the cabin exhausted. \n\nSamantha stripped out of her jacket, and went into the pantry and grabbed her Nutella. Going to the counter she took a spoon, opened the jar, and ate. \n\nIan pulled his shirt over his head, and flexed his tense muscles out. His palm ran through his hair, leaving a trail of messy curls in its wake. \n\nSamantha still sucking on her spoonful of Nutella looked at each rippling muscle, with passion filled eyes. Her mouth started to salivate with more intensity, as she stared. Ian unaware moved to the fridge, where he bent down to grab a beer. She cocked her head to the side to get a look at his ass. \n\n\"Baby, you want something to drink?\" \n\nIan turned his head to look back at her, catching her stare on his ass. Samantha blushed in embarrassment, as she nodded. \n\n\"What you want?\" He smirked. \n\n\"Water, please.\" She crooked. \n\nTurning around he grabbed her a bottle. \n\n\"You know is not polite to stare.\" He baited. \n\nSamantha played dumb. \"What do you mean?\" \n\n\"You like what you see at least tell me so.\" He teased. \n\nSamantha kept her eyes cast low, stabbing the spoon in her hand into the jar. When he called her name she ignored him, continuing to murder her Nutella. Frustrated Ian grabbed the jar from her hand, and used his forefinger to tilt her head up. Still her eyes looked down. \n\n\"Samantha what is the matter? Look at me please. \" \n\nHer eyes lifted to his revealing tearful eyes. When she blinked they began to fall. Ian rushed around the kitchen island to her. \"Baby don't cry. I never meant for you too.\" \n\nHe held her in his arms. It was only a Joke Sammy.\" He lifted her gaze once again. \"What did I do?\" \n\n\"No, it's not you.\" She shook her head. \"God I have no clue why I'm crying.\" She said through her tears. Dashing at her tears she tried to stop her tears. \"I don't know what's going on with me I'm so emotional.\" \n\n\"Come on. Let's go upstairs, so we can get you cleaned up and in bed.\" She nodded and let him lead her upstairs to their bathroom. Taking a seat on the toilet. He pulled her in between his legs, and looked up at her. Even seated his head reached her chin. Her sobs had quieted down to sniffles, as she watched him watch her. He leaned over and stopped up the oversized Jacuzzi tub, started the water and poured some of her bath gel in. \n\nLooking back up at her, he grabbed her shirt and lifted it over her head. Reaching for the button on her pants he worked then down off of her hips. When they fell he lifted each leg up and out of the puddle of fabric. His eyes made a trail from her legs up to her face. Reaching around her back, he held her gaze as he unbuckled her bra. Letting it fall between them to the floor. Her nipples harden into pebbles at his gaze. The panties came next, without difficulty. His fingers eased between her parted thighs, where he found slickness covering her folds. Her whimper reached his ears, right as her palm came up to grip his shoulders. Ian looked at her with a sly grin as he removed his hand to stop the water. \"Step in.\" He helped her get in, the water was perfect for her. \"Relax. I'll be back in a minute. \" \n\nHe stood up and walked into the bedroom, coming back carrying her overnight bag. \"Thought you might want this.\" He sat the bag on the counter before he went to the tub. \"I'll let you enjoy the water for a bit. I'm going to go downstairs, and chill with Michael for a while.\" \n\n\"Okay. \"She sighed. Leaning down he cupped her face and kissed her lips. \"I love you.\" \n\n\"I love you more.\" \n\nSamantha relaxed back in the warm water until she felt her skin began to prune. Then she scrubbed her body thoroughly, before she moved on to shaving her legs and armpits. When she was done she moved out of the tub, and dried off. Brushing her teeth and rinsing, she sat on the edge of the tub to lotion up. \n\nGoing through her bag she pulled out the G-string and teddy she picked out from Victoria secrets. Slipping them on, she added her garter belt, and fishnet stockings. She thought that her attire looked amazing put all together. She looked at her hair in its fish tail braid to the side, and decided to undo it and leave it in its wavy state. As a second thought she decided she was going to fully Glamorous her look. Using her makeup she did a Smokey eye look with a cat eye, big lashes and a sexy matte red lip. \n\nGrabbing the matching silk robe, she left the bathroom in search of her man, before she lost her nerve. Reaching the bottom of the stairs she heard loud laughing and the announcer on the television clamoring on about the happenings within the game. She began to get cold feet, wondering if she should turn around and go cover her ass while she still could. ",
        "\"Well look at you!\" \n\nSamantha froze in mid step from the trot up the stairs. \"Caroline, what are you doing.\" She said, turning to look at her friend. \n\nShe saw that Caroline came from the direction of the kitchen with two beers in her hand. \n\n\"Hanging with the guys. You want one?\" She offered her a beer. Samantha turned it down because she hated beer. \"Where you headed!? You just came down.\" \n\n\"Oh I was just going to head on to bed.\" She feigned a yawn, going as far as stretching her arms. \n\nCarolina who had already had a drink or two, read passed her lie with a smirk. \"Don't chicken out now hottie. Come on.\" \n\nSamantha clenched her robe closed, hiding her revealing undergarments, as Caroline drug her to the living room. When they burst in the guys looked their way. Michael choked on the swig of beer he had taken, while Ian's never made it to his lips. His eyes lowered, but she couldn't make out what he was thinking. Caroline instigating ass eased over to the couch to sit down beside Michael. \n\nWhen she took a tentative step forward to sit next to Ian, he slammed his beer onto the table and shot up from his seat. Marching the rest of the way over to her, he bent down and scooped her up off the floor, and over his shoulder. Samantha squealed in surprise and pushed against his shoulders to have him put her down, but Ian slapped her on the ass once, and she stopped squirming. Without uttering a word, Ian walked out of the living room, with her over his shoulder and up the stairs. \n\n\"Umm, Ian, I can walk so could you please put me down.\" \n\nIan ignored her, and walked into the bedroom and slammed the door shut behind them. Going over to the bed he gently tossed her on to the mattress, where she bounced slightly and her robe came undone, leaving it open for his gaze to roam over her luscious curves. The red in the teddy stood out against her skin vividly, as she tried to sit up and move towards the edge of the bed. \n\n\"Stay right there.\" She stops moving at the sound of his voice. \"Let me look at you.\" \n\nShe laid back down on her back, and balled the covers on the bed in a fist as butterflies flutter within her belly. Closing her eyes, she waited on him to make the next move. She felt feather light touches against her legs, and it caused her to twitch. \n\n\"What are you doing?\" She questioned. \n\n\"Hush.\" Ian moved over her, and settled on top. \"Do you have any idea on how fucking incredible you look.\" \n\nHe used the tip of his nose to caress her sensitive neck, as he worked his way up to her ear, where he took the lobe into his mouth and sucked gently. His hips rotated against hers, as he felt her hands move up his sides, to hold on. With her legs spread apart he was able to feel her heat intensify against the front of his pants. Grinding roughly against her pussy, he looked into her face, and saw ecstasy covering her features. She thrust her hips into his, and moaned from the friction against her clit. Her eyes popped open when he pulled away, leaving her cold; absent of his body heat. Lifting up on her forearms she looked down to see him stripping out of his pants, and boxers. His dick bounced in the air, before resting near his belly button. \n\nHer pussy responded to the sight, by flooding the strappy fabric covering her. Without much thought or hesitation, she moved her palm to her mound in search of her clit. As her finger came in contact with her harden nub, her vision blackened from closing her eyes. Feverishly, she used her hand to massage her clit, reaching for the climax she knew was near. Opening her eyes into slits she saw Ian, standing at the edge of the bed, stroking his dick. Moaning, Samantha thrashed her head from side to side, almost reaching her orgasm. Yet Ian, grabbed her by the ankle and pulled her towards the edge. She gasped, and looked up to him as he held her legs apart. Reaching down he clutched her G-string in one strong grasp, and pulled. The G-string snapped, and left her pussy bare, and opened. Lifting her ass off of the bed, Ian thrust his face into her wetness, and lapped for all he was worth. \n\n\"Yess.\" She moaned, biting her lip. She pinned his face to her by crossing her ankles. His tongue delved deeper, swirling around inside her opening. Parting her continuously, as he slurped on her clit. He squeezed her ass roughly, turning his head along with her writhing hips. \n\nTaking a finger he creeped past her anus, and up to her dripping pussy. Tracing her entrance, he teased her with the tip of his index. \n\n\"Ian, please.\" She pushed down on his finger, forcing him to penetrate her more. \"Yes, fuck.\" \n\nIan gave her what she beg for, plunging two fingers deep. Turning his wrist he pushed in and pulled out repeatedly. He suckled harder on her clit, as Samantha pulled at his hair as she screamed her orgasm. When he didn't stop dragging the flatness of his tongue over her pussy she covered her mouth with one hand, and pushed at his head with the other hand. \n\n\"Ian it's too much.\" She moaned as another tidal wave hit her. \n\nWhen he was satisfied from her pussy he stood up and wrapped his hands around her waist, lifted her to her feet. She wobbled a bit but soon found her footing. Looking down into his eyes, she blushed and bit her lips from the tingle in her pussy. \n\nHe pulled her closer, until her tits were at his mouth, where he took his time, and suckled them thoroughly. She cradled his head in her arm, and enjoyed the throbbing pressure building in her pussy. Ian relieved that pressure when his hand found its way between her spread thighs to rub the aching away. \n\n\"It feels so good.\" \n\n\"It only gets better, baby.\" He replied. \n\nSamantha pushed hard against his shoulders, and sunk down to her knees in front of him. She smiled and rubbed her hands down the length of his thighs before going back up to rest around his pulsing dick. \n\n\"I want to taste.\" She declared, as she took what she wanted by licking the precum off of his swollen head. Without letting her mind over think anything, Samantha opened her mouth and took him in until the tip of her nose touched his pelvis. She felt his dick jump in surprise down her throat, as a growl/groan left his throat. She pulled her mouth away with a swirl of her tongue along the entire shaft. \n\n\"Was that right?\" She asked, taking in his pained facial expression, and fisted hands at his side. At her question his eyes slide open, and a pure primal expression glowered in his stare. Reaching out he pulled her into his lap, spreading her pussy wide over his protruding dick. \n\n\"That was too right.\" His voice was unrecognizable. \"Any more of that, and I wouldn't last a minute.\" \n\nSamantha felt a Chester cat grin spread across her face, but that grin turned into a moan at the feeling of Ian's dick stretching her opening as he used the grip on her hips to press down on him. \n\nHer arms circled his head, as he paused to regain his composure. Her tight pussy caused him to become weak with pleasure. Samantha became restless from the building pressure, and squirmed on his lap, sinking further down on him. \n\n\"Fuck! Sammy, baby...\" He grit. \"Im trying to go slow. You...can't do that baby.\" He panted, looking into her slanted eyes, before taking in her kiss swollen lips, which was parted as well. \n\nGripping his head with her smaller hands, Samantha silenced him with her lips, as she worked her pussy all the way down on his dick. Seated completely within her, Ian dug his toes deep into the rug at his feet, as his fingers dug into her skin bruisingly. \n\nPulling back Samantha looked down between their bodies to where they were joined, and clenched her pussy, testing his girth. When he groaned she did it once again. \n\n\"Samantha.\" His teeth were clenched and a vein had appeared in his neck. \n\nLifting up slightly, Samantha sunk back down and wiggled her hips. Leaning forward she licked his protruding vein, and the coat of sweat on his throat. Pushing Ian more towards his breaking point, as he lifted her hips and pulled her down roughly as he met her. \n\n\"Shit.\" He uttered, when he felt her teeth nip into his neck. Suckling the spot where she bit him, Samantha rocked her hips into him in a frenzied. Before she leaned back once more with one palm flat against his chest and the other behind her on his knee, she began to bounce on his length. \n\n\"You feel so big inside me baby.\" She leaned forward to kiss his lips. Moaning, Samantha clenched her eyes tightly shut. Trying in vain to control the trembling in her limbs. \n\n\"Goddamn...\" Ian growled. Picking her legs up, he threw them over his forearms, as his hands gripped her ass cheeks. Lifting her body up he fucked her pussy relentlessly, as she screamed out. \n\n\"Oh my godd.\" She screamed until her voice went hoarse. Biting down on his shoulder she dug deep into his shoulder, as a powerful orgasm exploded throughout her core. Vaguely she heard his grunt of completion, before she felt his seed spill into her. \n\nHarsh breathing and panting filled the room as they both tried to calm their racing hearts. Looking up at Ian, Samantha blushed with a smile. A content rumble sounded from his throat, when she planted her lips on his. Still seated on his dick, she felt him grow harder once again. \n\n\"I'm nowhere near done with your sweet pussy.\" \n\nStanding up with her still planted on his dick, he turned and placed her on the bed. Standing up he spread her legs out wide, and surged to the hilt. \n\n\"Ah.\" She cried. \n\nIan paused, and kissed her discomfort away. Taking the neckline of her teddy He pulled down, releasing her tits from confinement. When he felt her relax against him her eyes connected to his slowly began to fuck her. Deeper than he had ever before. Her eyes connected with his, and she felt connected to him on a deeper level than ever before. \n\nIan shifted her backwards on the bed until her head hit the pillow. \n\n\"Look at me.\" She looked at him. \"Put my dick back inside you.\" He commanded. \n\nShe looked at his dick between them and felt her pussy seep out more cream. His dick was angry, long and swollen. Shining in the dim lighten from her juices. Grabbing him in her hand she pulled on him, stroking his dick under his watchful eyes. Feeling empowered Samantha taunted him with her words. \n\n\"Do you want more of my pussy?\" She licked her lips. \n\n\"Yes.\" His voice had grown deeper, something she realized he did whenever he was extremely turned on. \"Now put my dick inside your sweet tight pussy, or I'm going to flip you over and pound that said pussy into the middle of next week.\" \n\nSamantha quaked at the thought of him pounding her pussy from behind. She found herself getting wetter, from his threat and was tempted to try him. Yet her hips moved down, and her hand pulled him towards her. She watched his face as she positioned him at her opening, and held him there as she pushed her hips down onto him. The tick in his jaw thumped wildly as his eyes slide shut from ecstasy when she began to fuck herself on his dick. Ian held still as she enjoyed her control over their lovemaking. \n\n\"Fuck yes.\" She thrashed, thrusting her hips harder. \"Take my pussy.\" \n\nIan leaned forward, placed each arm by her head, stretched out his long legs and thrusted long strokes inside her. \n\n\"Who owns this pussy?\" He continued with his long deep strokes. \n\n\"Ian...\" \n\nIan bottomed out and held still as Samantha clenched and unclenched around him. \n\n\"Say it.\" \n\nSamantha who was more focused on making his hips move, ignored him. Pulling out Ian surged back inside soundly and rotated his hips once. He knew she was on the brink of her orgasm. \n\n\"Let me hear you say it.\" \n\n\"You own my pussy.\" She wailed. \"Please let me cum.\" \n\n\"Mmmm.\" He moaned. Pistoning his hips into her, he reached down and massaged her clit. \"Cum for me baby. Let me feel this amazing pussy milk me dry.\" \n\nSamantha opened her mouth and screamed louder than ever as she exploded around him. Covering her mouth with his, Ian continued to pump his hips until he felt his own release hit him like a semi. \n\n\"Uh, yes. Pussy. So. Good.\" Thrusting lightly he collapsed over her, unable to hold himself upright any longer. \"Damn, I love you Woman.\" \n\nSamantha giggled lazily. \n\n\"I'm sorry I smushed you.\" He said, as he lifted off of her. \n\n\"You didn't curly. I loved being surrounded by you.\" She said with a yawn. \n\n\"Oh yeah, well come here.\" He moved her closer to him, in the middle of their bed, out of the huge wet stain they had created. \n\nSamantha hissed silently, already the soreness was kicking in. Ian who had heard her, looked at her with concern. \n\n\"Are you okay baby? Did I hurt you?\" \n\nSamantha smooth the wrinkle out of his brow, and kissed her worry wart soundly. \"I'm okay Curly. I just have to get used to this, is all.\" \n\n\"I love you.\" \n\n\"Likewise.\" She teased. \n\nIan growled, and shifted her onto her back once more, ready to get round 3 started. Samantha laughed and pushed against her oaf. \n\n\"Wait a minute. Hold on.\" She snorted. \"I love you too, you big oaf.\" \n\nShe pushed him onto his back, placed her head on his shoulder, and laid her arm over his torso. \n\n\"Never doubt that.\" She stated, followed by a light snore. \n\nIan looked down at her sleeping upturned face, with a smile. 'That's 3 for me. 'He caressed her cheek, and nose, to which she frowned, and opened her eyes for a second, before closing them once more. \n\n\"You're my heart Samantha,\" Kissing her lightly on her parted lips, Ian yawned his own exhaustion. \"Never doubt that.\" He closed his eyes, and let sleep take him."
    ],
    "authorname": "SoulHolder11",
    "tags": [
        "black woman",
        "white man",
        "family",
        "love",
        "friendship",
        "drama",
        "winter",
        "college"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/the-winter-of-temptation-ch-11-2"
}