{
    "title": "Another Week on the Lake Ch. 07",
    "pages": [
        "Author's Note:This is a sequel to \"A Week On The Lake\" and \"Snowed In.\" A few of the characters in this story appear in the \"Lucky Cable Guy\" stories also. Readers of my previous stories will already be aware that sometimes my group sex scenes involve guys messing around with each other, \"so if that doesn't seem like your particular brand of vodka, help yourself to as much food as you like, and have a safe journey, no hard feelings. Otherwise, come with me.\"\n\nSpecial thanks to SpotInTheSand for story consultation and editing. Check out his stories. They're excellent.\n\nAdditional thanks to Stonehammer69 for ongoing story consultation and idea brainstorming. He's also got a couple of stories posted so go read them and tell him in the comments to keep the chapters coming! \n\nIt's been quite a while since I posted a chapter, so I figured a quick recap was in order. This is Will and Eva's second year at the lake with their best friends Jack and Sophie. Will and Eva are also celebrating their first anniversary as a couple. They've been exploring the lake a little more than they did last year and meeting quite a few more people and having quite a bit more sex with most of them.\n\nThere's something special about this lake, although Will and his friends don't know exactly what. People seem to both lose sexual inhibitions and gain sexual desire and potency. This chapter is going to get into that idea, so some of the stuff ahead leans a little toward the unusual side.\n\nAlso, we're going to see the narrative taken over by Eva for certain sections for this chapter and the next.\n\nHere is a quick refresh on who is who:\n\nJack's Cabin:\n\nWill - Our protagonist\n\nEva - Will's girlfriend of one year\n\nJack - Will's best friend. His family owns the cabin\n\nSophie - Jack's long-time girlfriend, now fiancee\n\nMaggie - Jack's cousin by marriage\n\nDani and Kristen - Maggie's friends\n\nNext door neighbors\n\nMike and Tara\n\nJosh and Liz\n\nMarine Patrol\n\nBarbara, \"The Chief\"\n\nDavid - Barbara's husband\n\nJodi - Marine patrol assistant\n\nBrad - Jodi's boyfriend\n\nCharacters from Lucky Cable Guy (this story takes place thirteen years after LCG)\n\nJason and Amber\n\nMatt and Tina\n\nJack and Stacy\n\nTrevor and Emma\n\nMelanie\n\nLeanne\n\nKaylee's group\n\nKaylee and Connor (this takes place the summer before \"Connor's Senior Year\")\n\nJill and Tommy\n\nJess and Roger\n\nKatrina and Tyler\n\nFriday\n\nMaggie, Dani, and Kristen were in the driveway packing Maggie's car when Eva and I got back to the cabin on foot, lugging our gear, but well rested and happy after a night alone in the tent.\n\n\"Oh no!\" Eva called as we approached. \"Are you guys leaving?\"\n\n\"Yeah, it sucks,\" Maggie said. \"But I already stayed longer than I planned and work is starting to get a little pissy. Plus the cabin is starting to get crowded.\"\n\nThat's when I noticed the third vehicle, and then we heard the sound of the screen door swinging open and slamming shut as Becky burst from the cabin and nearly tackled me and Eva to the gravel-covered ground.\n\n\"Surprise!\" she cried as she pulled Eva and I into the same bear-hug. Becky's wonderful lightly-freckled boobs were already clad in a bikini top and they were the only thing in the world I could see for a few seconds while she squeezed us.\n\n\"Becky!\" Eva squealed and threw her arms around the tall auburn-haired beauty alone once Becky had released us. \"I thought you weren't coming!\"\n\nI looked up just in time to see Felicia bearing down on us from the main yard on the lake side of the house. The statuesque blond was also wearing a bikini and her gorgeous tits threatened to spill out of it as she ran to the driveway to greet us.\n\n\"Felicia!\" Eva outright screamed when she saw her old friend. She'd known Felicia before meeting any of the rest of us last year. The three girls hopped around in a three-way hug while Becky's boyfriend Todd and Felicia's on-again off-again squeeze Robert came around the corner in their swimming shorts and t-shirts.\n\n\"About time you guys showed up!\" Todd said cheerfully, extending his hand, which I shook before pulling him in for a hug and a few slaps on the back.\n\n\"Todd!\" I said with genuine happiness. \"Long time no see!\"\n\nI repeated the greeting with Robert, who we'd not seen for an even longer time. While Becky and Todd had spent a snowy night with me, Eva, Jack, and Sophie in our apartment last winter, we hadn't seen Felicia and Robert since leaving the cabin last summer. Todd was lean and athletic, and his blond hair had grown out into a messy sort of surfer-dude look. Robert's crew cut was unchanged from a year ago, but it seemed as though he'd been hitting the gym a little harder recently, as his dark skin bulged with more muscles than I remembered.\n\n\"I managed to reschedule some stuff,\" Felicia said as she leaned in to give me a hug. \"So a couple of days ago we all decided to just go for it and get up here for a couple of nights at least.\"\n\n\"I'm sure it's no coincidence that one of those nights is Bonfire night,\" Sophie said, she and Jack having joined us sometime during the commotion of the surprise greetings.\n\n\"You guys missed an epic breakfast,\" Jack said. \"Maggie whipped up one hell of a farewell spread. But we saved a couple of plates for you.\"\n\nMaggie and her two friends had nearly finished loading the car with their bags and belongings, and our congregation on the driveway turned to one of goodbyes and promises to get together again. We waved as Maggie and company backed down the driveway and took the road back toward civilization.\n\n\"Booze cruise?\" Jack inquired of the group.\n\n\"Booze cruise,\" I said.\n\n* * *\n\nEva and I crammed down a plate each of partially cooled breakfast food before we took a quick shower together then put on our bathing suits. The other three couples were all waiting for us on the boat when we emerged from the cabin with our towels and sunglasses and marched through the yard to the dock. Eight people was just about all the old boat could handle and Jack assured us that we'd be keeping a leisurely pace and finding some nice spots to swim.\n\nBecky handed us each an ice-cold beer, assuring us that it was indeed five o'clock somewhere, while next to her in the bow seats her boyfriend Todd rolled what looked like show-stopper of a joint.\n\n\"We're only here for two nights,\" he said. \"So I figured I'd do what I could to slow down time while we're here.\"\n\n\"An excellent idea,\" I agreed.\n\n\"So how have you guys been?\" Eva asked, her question floated generally to the new arrivals, two of whom we hadn't seen in several months, the other two a full year. Eva talked on the phone with both Felicia and Becky on a regular basis. \"I assume you've heard about these two already?\" She pointed to Jack and Sophie, the latter of whom was seated on her new fiancee's lap as he piloted the boat out onto the lake.\n\n\"I know! It's so exciting!\" Felicia squealed. \"We are going to throw a kick-ass wedding party.\"\n\n\"Woah,\" Jack said. \"We haven't even had an engagement party yet.\"\n\n\"Isn't that what tonight is for?\" Todd asked, smiling and raising his eyebrows repeatedly.\n\n\"The bonfire orgy?\" Sophie giggled. \"That's great and everything, but we were thinking something a little more intimate tomorrow night.\"\n\n\"I like the sound of that,\" Becky said, her eyes passing from me to Eva, then to Jack and Sophie and back to me again. It was clear that Becky was fighting hard to hold herself back from tearing off her bathing suit and instigating some open-air naked shenanigans. Not that I could blame her. After assuming for most of the week that we wouldn't be seeing our friends this time around, the sudden knowledge that sex with Becky and Felicia was not only possible, but very likely imminent, had me sporting a partial erection ever since my shower with Eva.\n\n\"Do you have any ideas for the wedding?\" Felicia pried, ignoring Jack's protest against stressing over future details.\n\n\"Kind of,\" Sophie said. \"I think we're going to end up doing two weddings. One back home with our families and friends and all of the usual stuff. And another one up here with our lake friends.\"\n\n\"Yeah,\" Jack said. \"Even if the lake wedding just turns out to be a second party, we want to be able to celebrate the way we want to celebrate without having to worry about our families being there. If you know what I mean.\"\n\n\"He means orgies,\" Eva said.\n\n\"Thank you, Eva,\" Jack chuckled. \"I'm sure everyone would have been hopelessly confused without your translation assistance.\"\n\n\"I certainly appreciate the blunt approach,\" Robert said, eyeing Eva's busty figure from where he sat across from her in the rear of the boat.\n\n\"Speaking of blunt approach,\" Todd said. \"Blunt approaching.\"\n\nHe'd managed to get the enormous joint lit even in the mid-lake breeze, and now he passed it to Becky, who puffed on it before passing it to me. I inhaled once and enjoyed the dank aroma and flavor, held it in for a few seconds and exhaled slowly as the buzz immediately settled in just behind my eyes and the dark blue of the lake and pale canopy of the sky seemed to suffuse themselves into the foreground of my vision, wrapping me up in warmth and color. The second hit on the joint sharpened the colors of the girls' bikini tops and made the cold beer in my left hand feel suddenly twice as heavy. The twenty or so seconds that I partook stretched out both behind and in front of me, and I passed the joint to Sophie with an involuntary and almost certainly goofy smile on my face.\n\n\"Somebody hit the sweet spot,\" Robert laughed. \"That was a mighty toke.\"\n\n\"Early one morning the sun was shinin', I was a-layin' in bed...\" I sang, tossing my head back and basking in the heat of the sun and the gentle rocking of the boat, which Jack had now set to drift in the middle of the widest part of the lake. \"Wonderin' if she'd changed it all, if her hair was still red.\"\n\n\"Oh Jesus he's Dylan high,\" Jack cackled after getting his own hit while I sang. \"Babe, get some tunes going and save us!\"\n\nI gave Jack the finger.\n\nWe swam. We splashed. We drank. We smoked more and drank again, and the late morning hours gently rolled over us and became the high-sun hours of early afternoon. The girls kept their tops on, which I found both surprising and weirdly tantalizing. It had been such a free-for-all so far this week with naked women everywhere I looked, but to suddenly see four of the most beautiful women I knew all together and showing off their bodies without taking that last step was a delightful tease. Nobody was saying it out loud, but it seemed pretty clear to me that we were all saving our strength for Bonfire Island and the activities we were sure to participate in once we were there.\n\n\"Who's ready for lunch?\" Jack called to the rest of us who were still swimming or floating lazily around the boat.\n\n\"Oh fuck yes!\" I cried, kicking my feet to propel me toward the boat's ladder. \"Set a course for the nearest taco truck, Boat-Man!\"\n\n\"And my best man is a moron,\" Jack said, chuckling at my foolishness. \"Can you imagine how nasty a food truck would be this far out in the boonies?\"\n\n* * *\n\n\"Hey, did you guys end up hanging out with Jeff and Christie last night?\" Eva asked Sophie as we chowed on cheeseburgers on the cabin deck.\n\n\"Who the hell are Jeff and Christie?\" I asked.\n\n\"That couple we met when we were on marine patrol, doofus,\" Eva said, slapping my arm. \"Before we busted Molly and Billy and Hailey?\"\n\n\"Oh right!\" I chuckled. \"Pink bikini and her husband!\"\n\n\"So yes, me and Jack had fun with them last night while you two were camping,\" Sophie said. \"I think they're arranging a babysitter so they can come to the Bonfire.\"\n\n\"There's going to be a whole bunch of people there tonight,\" Jack said. \"You guys thought last year was fun.\"\n\nMy cock twitched in my shorts at the images my imagination was conjuring, based on my memories of last year, but expanded and multiplied. Given all of the people we'd met or reunited with this week, it was clear Jack was right. Matt and Tina had a bigger crew at their house this year. Our neighbors were going to be joining us. We'd met Ken and Lucy and Lily, plus Kevin and Claire on Tuesday, Gary and Meredith and their young friends Molly and Billy and Hailey on Wednesday. And who knew how many other couples and adventurous group sex freaks there were lurking around this lake.\n\n\"Tina told me Luke and Rebekah might be there,\" Sophie said.\n\nJack smiled. \"That would be amazing.\"\n\n\"Who are Luke and Rebekah?\" I asked tentatively. \"I'm not forgetting someone else I've already met am I?\"\n\n\"No,\" Sophie said with a smirk. \"You would remember if you met Luke and Rebekah.\"\n\n\"Along with the Chief,\" Jack said, \"they're kind of the founders of the Bonfire and the whole Marine Patrol thing. They also run that church camp down at the south end of the lake you were asking me about the other day, Will.\"\n\n\"Are you telling us that the founders of the Bonfire Orgy are churchies?\" Felicia protested. \"What the hell kind of church camp is it anyway?\"\n\n\"We've heard things,\" Sophie said. Everyone was paying close attention now as some long-speculated Lake lore seemed to be just below the surface. What was it with this place, being the most common question. \"But Jack and I have never been to the camp. We've always kept busy doing other things.\"\n\n\"And other people,\" Jack said with a chuckle. \"We only met Luke and Rebekah once, and there was no sex involved, but...\" He stopped, looking to Sophie, perhaps for help finding the words.\n\n\"They're special,\" Sophie said. \"The way things are here at the lake just suddenly feels completely normal when you're around them, and we were only around them for about ten minutes at the Marine Patrol office a few years ago.\"\n\n\"So are they like, super sexy or something?\" Becky asked.\n\n\"To put it mildly,\" Jack said.\n\n\"I've never wanted to fuck someone after just meeting them as badly as I wanted to fuck those two that day,\" Sophie said. \"I've had sex with everyone here and I love all of you, but even as wet as I get thinking about you guys is nothing compared to that day.\"\n\nJack adjusted in his seat and it was clear that he was fully erect, his huge cock straining to escape his shorts. \"Just thinking about it gets me hard,\" he said. His face had taken on a slight flush and his breathing had quickened as he and Sophie told us about this mysterious couple.\n\n\"Does this guy have like the world's biggest cock or something?\" Felicia joked.\n\n\"We have no idea,\" Sophie said. \"But my pussy is so fucking wet now I can barely think. Just from remembering when I shook their hands.\"\n\n\"Every fucking time we talk about it this happens,\" Jack said. \"I can't wait until the Bonfire. I need to fuck. Now.\"\n\nHe stood up and pulled down his swim trunks and his huge cock popped up and slapped audibly against his stomach. Sophie was naked just seconds later and they were in each other's arms, mouths locked together and hands roaming frantically while the rest of us looked on in surprise and no small level of horniness. A pair of naked tits is usually enough to make me hard, but I realized I was fully erect even before our friends stood up and stripped.\n\nEva reached over and grabbed my cock through my shorts. \"Felicia or Becky?\" she whispered in my ear. \"I want to watch you fuck one of them right now.\"\n\nBefore I could answer, Sophie dictated my choice for me. \"Becky,\" she said. \"Get over here and suck my fiancee's cock.\" She then left Jack standing on the deck and sashayed gloriously naked over to Robert, dropping down between his legs as he fished his long thick cock out of his shorts.\n\n\"Felicia it is then,\" Eva whispered in my ear again. \"I'm going to go ride Todd's cock now.\"\n\n* * *\n\nLater on that night we would all experience first-hand and full-force erotic trance effect that swept over us when Jack and Sophie told us about these mysterious strangers Luke and Rebekah. Even writing this months after returning to our comparatively normal lives it's still difficult to remember the details of the afternoon leading up to my second Bonfire Orgy at the lake. Not because of weed and beer, but because the intensity of the lust-drunk free-for-all of the orgy itself seems to warp the events immediately before and after in my head.\n\nWe really had been saving our strength for the Bonfire, but Jack and Sophie had told their seemingly innocuous story and then set the rest of us off in seconds. Eva had stripped off her bathing suit as she crossed the deck to Todd, who met her with his swim trunks already pulled down to his knees and his big cock pointing straight up in the air. I stood up from my seat and took off my shorts as I watched my girlfriend slowly drop down into his lap, taking him deep into her pussy while he happily sucked on her tits.\n\nBecky gave me a smile and a wink as she stood up from sucking Jack's cock and turned around to give me a delightful show of lowering herself onto his free-standing cock. Jack's hands found their way around her body in an instant, lifting and squeezing her big luscious tits as her pussy enveloped his big fat cock.\n\nI watched Becky ride Jack's cock for several long seconds, my own cock standing tall and proud in front of me in the afternoon sun, until I was joined by Felicia, her eyes smoldering with desire. I tore my gaze away from Becky's incredible naked body to behold Felicia's. I was mildly disappointed to have missed seeing her take her bathing suit off, but the results were enough to make me go weak in the knees. She had slightly smaller tits than Becky, and maybe just a little bigger than Sophie. Her pink nipples extended insistently from her creamy smooth areolae. Her abs were ripped beneath those two perfect globes and I was delighted to see that she had recently shaved her pubic hair.\n\n\"I can't believe it's been a whole year since I had this cock in me,\" Felicia said, reaching over to wrap her fingers around my throbbing rod. \"Will you fuck me, please?\"\n\n\"I would love to fuck you, Felicia,\" I said. \"Get up on that chair on your knees.\" I pointed behind her to the chair that Sophie had abandoned when she and Jack had lit the fuse of this sexual explosion. She complied immediately, placing her knees on the forward edge of the seat and resting her forearms on the back of the chair. I pointed my cock downward enough to direct it between her legs, and let go again so that it sprang up and slapped wetly against her pussy.\n\n\"Oh fuck!\" Felicia groaned. \"I'm ready, Will! Put it in!\"\n\nI dragged my cock back over her pussy lips until my head was at her entrance, and she pushed back into me, forcing my cock head to pop into her juicy opening. I held onto her hips as we worked to gradually bury my entire length in her cunt.\n\n\"Oh fuck, Felicia!\" I groaned. \"Your pussy feels so fucking good!\"\n\n\"Fuck!\" Felicia yelped. \"Did your fucking cock get bigger? Jesus I'm gonna cum already!\"\n\n\"Fuck yes, cum all over my fucking cock, Felicia!\" I reached beneath her upper body and grabbed onto her swinging tits and began to pump my cock in and out of her clenching pussy. I listened to the moans and shrieks of pleasure from behind me as I fucked Felicia facing away from the rest of the group. I was beginning to think about rearranging our bodies so I'd be able to watch my friends fuck when our neighbors filed out from around the corner of the cabin next door and into the yard beside the deck.\n\nTara and Liz came first, smiling broadly when they saw the eight of us fucking in the open air. They took off their bikini tops and dropped them in the grass as they approached. They were followed by their husbands, Mike and Josh, both of whom slipped their shorts down and walked hard-cocked up onto the deck behind their wives. I greeted Tara and Liz by pulling my cock out of Felicia's pussy and presenting it to them to suck. Felicia didn't even bother introducing herself to Josh or Mike before dropping down to suck their cocks.",
        "The deck was now crowded with naked bodies, all of us panting and sweating as we sucked and fucked in the afternoon sun. After Tara and Liz had finished sucking Felicia's pussy juice off of my cock, I turned back to Felicia and stuffed my hard pole back into her pussy and she screamed onto Josh's prick. Josh threw his bald head back and gasped at the pleasure Felicia was giving him with her mouth. Mike took my place standing in front of Liz and Tara, and they feasted together on his huge cock.\n\nFelicia never let Josh's cock out of her mouth while I fucked her. She came, trembling and bucking on the chair, screaming onto Josh's cock, over and over again as I thrust my prick deep into her pussy.\n\n\"Suck that cock, Felicia,\" I groaned. \"Make him cum in your mouth and I'll cum in your pussy!\"\n\nI remembered the first time we'd fucked, just inside the cabin on the living room floor. We'd taken our time that day, licking and sucking each other first. I'd been dazzled by her cock-sucking prowess and by the exquisite taste of her pussy. Then she'd ridden my cock until both of us were screaming and thrashing and cumming just as the rest of our friends had started to file back into the room. Today we were frantic, racing to our mutual destination, even with the distractions of our neighbors. \n\nFelicia pulled her mouth off of Josh's cock and turned her head, \"Slap my ass, Will. And fuck me harder!\" Then she stuffed Josh's cock back into her mouth.\n\nI let go of her tits and pivoted my hips slightly, fucking her instead at an oblique angle in order to get a better angle to slap her right ass cheek. Thwack! She howled onto Josh's cock as I reached back for another slap. I slapped her ass again, not viciously, but hard enough for all of us to hear the sound and to know exactly what it was. Three smacks on her luscious creamy tanned bottom and I went back to fucking her. I fucked her hard and fast, holding onto her tits and squeezing them as she screamed onto Josh's cock. Eventually the churning in my balls became impossible to ignore and a massive orgasm exploded deep inside me, sending a torrent of cum jetting through my cock and deep into the spasming depths of her pussy.\n\nJosh announced his own orgasm just as mine began, and Felicia sucked down his cum while I pumped mine into her pussy. She finally let his cock fall out of her mouth when I helped her up off the chair to stand on wobbly legs as my cum dripped down between them. We turned to watch the rest of the group hurtle to their own orgasms. Felicia and I must have been fucking longer than I realized, because behind us, the entire group had reconfigured and absorbed Mike, Tara and Liz. I watched Robert cum in Eva's pussy, my girlfriend writhing in his lap with his big black cock stuffed in her pussy and his hands squeezing her huge gorgeous tits. His cock was covered with her cum, and his own was just beginning to ooze out of Eva's pussy and dribble down the exposed portion of his shaft. Becky had remained impaled on Jack's cock, at least as far as I knew, except at some point she had turned around to face him, and now she shuddered against his chest as she came and he pumped a huge load of spunk up into her cunt.\n\nSophie had taken on Mike at some point, draining his balls of his load with the expert squeezing of her pussy on his huge cock. Todd was tangled in a pile in the grass at the bottom of the stairs to the deck with Tara and Liz, and I could see that both of them had streaks of his cum all over their tits.\n\n\"Well that took the edge off,\" Jack said, his cock still buried in Becky's pussy. \"I think tonight is going to be something special.\"\n\n* * *\n\nMy cock hadn't softened after shooting my load into Felicia's pussy, and I wanted to keep going, but Jack's advice to save it for the bonfire was sound, and I settled for cooling off in the lake, along with most of the rest of our group, swimming in the cool water until eventually my cock went limp. Eva and I napped together in our bedroom naked, but we kept the fooling around to a minimum, settling for some long slow kisses before we drifted off to sleep.\n\nI woke with a raging erection and Eva's fingers slowly stroking it.\n\n\"Good dream, baby?\" Eva cooed.\n\n\"I was eating Becky's pussy while you rode my cock,\" I said, and I lifted one of her tits in my hand and lowered my mouth to suck on it while she stroked me.\n\n\"That's a nice dream,\" she moaned. \"Hopefully it will come true tonight.\"\n\nI reached between her legs and discovered the wetness of her arousal, but she stopped me and rolled off the bed. \"Let's save it, baby,\" she said. \"It's almost time to go to the island.\"\n\n* * * * *\n\nEva\n\nI've always known Will was a tits-man, but having just spent the last few hours reading his manuscripts of our first summers together at the lake, even I'm a little surprised. Not in a negative way, god no. I love tits too, but I feel like his reverence for them might lead him to exaggerate their size, or at least influence his selection of superlative adjectives when describing their size. He actually does the same thing with cocks, but that might be a different story for a different time.\n\nI certainly have big tits. There's no denying that. I was so jealous of my big sister's boobs when I was a kid, until I was a teenager and clearly bigger than she was, and the feelings of jealousy reversed direction. But when Will uses words like \"huge\" and \"massive\" and \"mammoth,\" I can't help but chuckle to myself a little. So my boyfriend loves tits. So do I.\n\n\"What's so funny?\" he asks me. We're both sitting propped up in bed against our pillows and he's reading a novel and I'm reading his manuscript on my laptop. The shower is running and we can both hear a gentle humming through the open bathroom door.\n\n\"Nothing,\" I say, giving him a smile and then a kiss on the cheek. \"I just like the way you remember.\"\n\nWill has been telling me for weeks now that he is having trouble figuring out how to do justice to Friday night of our second trip to Jack's cabin. Bonfire night. Our first year had been incredible enough on its own, but a year later during a hotter summer on a brighter night under the glistening band of the Milky Way, we found out what the annual Bonfire Orgy was really all about. \n\nI'm writing this partially for him, to help him finish his story so he can give it to Jack and Sophie, and partially for me, because all these months later I still get instantly wet when I think about that night. I'm not sure if my contribution will make it into his final draft or not, but I'm going to write it in my own way with my best effort to keep to the spirit of his story so far.\n\n* * *\n\n\"Oh my god,\" I said as we approached Bonfire Island. \"There's already a ton of people.\"\n\n\"I think this one is going to be bigger than last year,\" Will said next to me, but directed at Jack and Sophie, the old pros of our group. This was their eighth appearance to Bonfire night compared to only the second for the rest of us.\n\n\"This is more like the usual,\" Jack said. \"Last year was an off-year for some reason. A few years back there had to be close to what? Seventy people?\"\n\nSophie looked at me and nodded. \"It was nuts.\"\n\nThere were already several boats pulled up partly onto the sand of the low, flat, nearly treeless island. The fire wasn't yet lit, and indeed several people were still stacking logs both in the fire pit itself and a dozen paces away in a pile to resupply the fire during the night.\n\n\"Where the hell did the firewood come from?\" Will asked.\n\n\"David and the Chief have a supply boat, sort of a barge kind of thing they lend out for people who want to haul construction materials across the lake to some of the more remote properties,\" Jack said. \"Most years he loads it up with a cord of firewood and brings it out a few days before the bonfire.\"\n\n* * *\n\nWait. What am I doing? Who gives a fuck about the firewood? I'm here to tell the story of the night where almost a hundred people got together on the island to fuck under the stars; nobody gives a shit about the firewood.\n\n* * *\n\nThat might just be my favorite thing about the lake. Everyone knows that there's an orgy at Bonfire Island every Friday night. And everyone is basically okay with that. Actually, in my case, I didn't find out about the orgy until I'd already been at the cabin for a couple of days, but during those two days basically all we did was fuck, so I can't say I was very surprised to discover that Friday night was orgy night.\n\nSex was the culture of the community. Group sex in particular. I feel like the lake must be some kind of tourist destination for swingers and exhibitionists, but I wonder how long it's been this way. If Luke and Rebekah are to be believed, then I guess it's been about nineteen years.\n\n* * * * *\n\nWill\n\nI asked Eva if she'd be interested in helping me try to describe the Bonfire Orgy, and good god did she come through. I'm mixing what she wrote in with what I've been able to remember. Unlike the first year, my recollection of Friday night can get a little hazy, so I'm glad she's here to help fill in some of the gaps. Anyway, back to the story.\n\n* * *\n\nWe'd only been on the island for fifteen minutes and there were already twice as many people as there had been last year. I looked around, flabbergasted at both the size of the crowd and number of people who were total strangers. Even with all of the people we'd met and fucked this week, there were still dozens more I'd never seen before.\n\n\"This one could break the record,\" Jack mused as we sat at a picnic table sipping beers we'd brought with us. We'd already greeted many of the people we knew, including the Chief and her husband David, Matt and Tina, Jason and Amber, Katrina, Jess, Roger, Tyler, and more. He and I were sitting down surveying the growing crowd as more and more boats landed on the sandy shore of the island from all directions. Jack waved to people he knew and some that we both knew. Eva and Sophie were milling about the crowd saying hello to friends and meeting new ones. Becky, Felicia, Todd and Robert were at the next table chatting with Katrina, Jess, Tyler and Roger, who they'd all met at the bonfire last year. Kaylee, Connor, Tommy and Jill were chatting with some strangers a little farther away. I'd stopped counting when the crowd grew over fifty.\n\nThe sun was going down and the Chief slowly managed to get everyone's attention.\n\n\"This is a very special night!\" she called over the dying murmurs of the crowd. \"Most of you have been here before, but never so many at once. We're not all here yet, but the sun is going down and it's time to light the fire!\"\n\nCheers greeted this announcement, and Barbara waited for quiet before continuing. \"The rules are simple, and most of you know them, but here they are just the same.\" She paused, looking around her at the gathering and smiled. \"This gathering always has been, and always will be totally consensual. Everyone is encouraged to try new things and meet new people but the word no is absolute. No one should ever feel that they need to do something they don't feel comfortable doing, or with someone they don't feel comfortable doing it with! I will be keeping my eye and ears open. That's a promise!\"\n\n\"You're the boss, Chief!\" Tina cried from a few tables over, and Jack and I chuckled along with a few others.\n\nEva and Sophie had been making their way back to the table since Barbara started talking, and they sat down before she continued. Eva kissed me and took my hand.\n\n\"Some folks are going to be late,\" the Chief continued, \"but let's get this party started!\"\n\nA much louder cheer than the first one greeted this pronouncement, and the fire was lit.\n\n* * * * *\n\nEva\n\nI kissed Will again, slipping my tongue into his mouth this time and holding him close, my hands roaming over his muscled back as he moaned into my mouth. I enjoyed the taste and feel of him for a few wonderful seconds before I pulled back and gave him a smile.\n\n\"What?\" he asked.\n\nI stood up from the picnic table and walked around to Jack and Sophie, swinging my hips for Will's benefit and taking off my shirt as I went. I'd gone back and forth over whether or not to wear a bra or a bikini top or nothing at all under my t-shirt, with the growing golden-orange light of the fire playing over the lacy black of my bra I was happy with the decision. I leaned over and gave Will a wink before kissing first Sophie and then Jack. I helped Sophie to her feet and out of her shirt before pulling her against me, I had to get up on my toes to kiss her properly, and I laced my fingers through her blonde hair and pulled her head down to meet my kiss as our men looked on, Jack actually groaning.\n\nSophie broke our kiss and looked at Jack and Will still sitting at the table with looks of hunger on their faces. \"You boys go have some fun,\" she said. \"We'll catch up with you later.\"\n\n\"Will,\" I said as I rubbed Sophie's tits through her bra. \"Your mission is to fuck someone whose name you don't know. Come find me after.\"\n\n\"You too, baby,\" Sophie said to Jack.\n\nWe left the boys sitting at the table and made our way into the group.\n\n* * * * *\n\nWill\n\n\"That's going to be an easier mission for you than for me,\" Jack said. \"I've been coming to this lake for eight years! I know almost everyone here!\"\n\nI stood up and adjusted the bulge in my shorts so it wouldn't be so obvious, then chuckled as I looked around me. There were already several hard cocks exposed in the evening air in the light of the bonfire, along with several more sets of naked tits and plenty of bare asses. \"Fuck it,\" I said, and peeled off my shirt and slipped out of my short and boxers. Jack quickly copied me, and the two of us folded our clothes and placed them in stacks with our shoes under the picnic table. Both of our cocks were rock-hard and ready, and when I stood up again Jack caught my cock in his mouth and gave it a few long slow sucks before getting to his feet beside me.\n\n\"My, my, look at these two fantastic cocks,\" the Chief said, having appeared in front of us, her brown skin painted in the light of the fire and her massive naked tits glorious on her chest.\n\n\"Hey there, Chief,\" Jack said. \"Wanna fuck?\"\n\n\"Let me suck those beautiful cocks first, baby,\" Barbara said. She was still wearing her khaki Marine Patrol shorts, but she left them on as she dropped down into the sand in front of us. She grabbed my cock with her left hand and Jack's with her right and started sucking his rod first and stroking mine, her hand spreading Jack's spit around my entire shaft.\n\n\"Oh yes, Chief,\" Jack moaned. \"Suck that cock. Suck Will's too.\"\n\nBarbara quickly popped Jack's cock out of her mouth and turned her head to suck in mine. Her lips closed around my pole and her tongue swirled around my cock head.\n\n\"Fuck,\" I said. \"Fuck that feels good.\"\n\nThe Chief switched back and forth a few times, slowly covering both of our cocks with a coating of her saliva. \"Stand closer together so I can suck them both at the same time,\" she said.\n\nJack and I grinned at each other. This was something that we did every once in a while with Eva and Sophie, having tried it the first time last year at the cabin. Jack's cock is about an inch longer than mine, but I'm about an inch taller than he is so when we stand face to face and press our cocks together the heads are always lined up at the exact same height. It was a lot of fun trying to get both of our swollen cock heads into the same mouth, but both of us had also really grown to enjoy rubbing our cocks together.\n\n\"Good boys,\" Barbara said when Jack and I had taken position leg to leg and cock to cock. She wrapped her fingers as far around both of our shafts as she could and started bathing our cock heads with her tongue. Jack and I had to make room for her by pressing our hips together, my left to his right while The Chief sucked our cocks.\n\n\"That feels so fucking good,\" I groaned.\n\n\"I love feeling your cock up against mine, Will,\" Jack said.\n\nBarbara's head popped up off of our cocks. \"Excuse me,\" she said. \"Do I get any of the credit here?\"\n\n\"Is a guy suddenly not allowed to express appreciation for his best friend's cock?\" Jack chuckled. \"Fuck you suck them good though, Chief.\"\n\n\"Okay you two clowns,\" she said. \"Time to fuck me.\"\n\nShe stood up and I watched her massive tits jiggle with her movements as she took off her shorts and panties, baring her big luscious brown ass and her clean-shaved pussy.\n\nI looked past her as she planted her palms flat on the picnic table and Jack moved in behind her to stuff his big throbbing cock into her pussy. I'd lost track of Eva in the crowd and it dawned on me again just how much more massive this orgy was than the one we'd enjoyed last year. Where had all these people been that night?\n\n\"Oh yeah fucking give me that dick, baby!\" Barbara moaned as Jack began to rhythmically pump his cock in and out of her juicy pussy. I moved in beside her and tried to grab a handful of one of her huge swinging melons, and she turned her head to start sucking my cock again, howling onto my cock as Jack's cock made her start to cum. When Jack was satisfied that Barbara's orgasm had passed he nodded to me and we switched places. Jack offered his rigid cock to Barbara, and she began greedily sucking her cum off of him while I stuffed my cock into the hot constriction of her pussy. I fucked her with hard fast strokes, enjoying the undulation of her generous butt every time my hips slammed into it and my cock drove to the hilt in her cunt. She seemed to be on a hair trigger this evening, because it only took a few minutes of fucking for her pussy to contract on my cock, trapping me inside her as she thrashed in orgasm with Jack's cock in her mouth.\n\n\"Fuck!\" she growled when I finally extracted my cock from her pussy. \"You two are special,\" she said. \"Let's go find some more people to fuck.\"\n\nI bid them good luck, and the three of us separated to find our own way through the ever more chaotic scene surrounding us.\n\n* * * * *\n\nEva\n\nMy panties were already soaked even before I left Will with his assignment. I badly wanted to get fucked, and I thought it might be fun to single out one of the several guys I saw in the crowd whom I'd never met, and see if they were up for fucking a stranger. But then a minute or so after leaving Will I saw Trevor's cock and I couldn't resist stopping to give it a good hard suck. His massive rod was rock hard in my mouth and I swirled my hands around the rest of its considerable length while I sucked him. \n\n\"Fuck yes, Eva,\" he said. \"That feels really fucking good. I think you should take that bra off so I can see those amazing titties.\"\n\nI smiled, or as close to smiled as I could manage with his monstrous black fuck-pole in my mouth, and reached behind my back with one hand to unfasten my bra. My tits dropped with the release of tension, and soon I had pulled the cups down and away, baring them for Trevor and anyone else to see.\n\n\"Goddamn you have some really nice fucking tits,\" Trevor moaned as I continued to suck his cock. Will and Jack both had nice big dicks, but this thing was truly fucking massive. Between Trevor's cock right now, and Connor's last night, it wouldn't have taken much to convince me that I'd been sucking two of the biggest cocks I would ever see in my life, and it made my pussy even wetter to think about it.\n\nI thought back to a year ago to the night before Felicia, Robert, Katie, and I had made the trip to the lake, before I'd ever met Will or Jack or Sophie. I'd been stunned when Felicia had pulled Robert's big dick out in front of me and Katie like it was no big deal, and while my first instinct was to leave the room and give them some privacy, something made me stay and watch. Maybe it was the fact that Robert's cock was considerably bigger than either of my ex boyfriends' had been, even though during the week I'd end up seeing several that were even bigger. ",
        "It had slowly dawned on me that night watching Felicia suck Robert's cock that I had something of a thing for big dicks. My exes had had perfectly normal, perfectly fine dicks, but Robert's was comparatively huge. I nearly laughed thinking about it with Trevor's considerably bigger cock in my mouth. Felicia had asked Katie and I if either of us wanted to try sucking Robert's cock and neither of us had been able to resist. I'd let him fuck me that night too, and again the next morning before we left for the lake. By the end of the next day I'd also fucked Todd, Jack, and finally Will, and I was a full-blown big cock addict. I'm sure if I really tried I could be okay with only Will's cock, but my time at the lake had given me so many opportunities to sample so many big dicks that I was grateful that neither Will nor I had any desire to be sexually exclusive. Our deal to loosen what few sexual restrictions we put on each other while we were at the lake had been incredible so far, and tonight I planned on taking advantage of way more than just Trevor's fantastic monster cock.\n\nIf he noticed me spacing out instead of sucking his cock with all of the hunger and skill I was capable of, he didn't say anything. In fact, he seemed to be content to just watch my tits sway beneath me as I worked his cock in my hands and mouth. I pulled him out of my mouth so I could spend some time licking and sucking his big heavy balls. I had just managed to get the first one into my mouth when I was joined on the ground in front of him by a woman I had never met. She looked like she was in her thirties, blonde hair falling to her shoulders, nice tits bouncing on her chest with her movements as she took Trevor's cock into her mouth while I sucked on his balls. She stroked Trevor's cock shaft with one hand, and reached over to lift and squeeze one of my tits with the other. I still had my shorts and panties on, but she was already naked, so I slipped a hand between her legs to rub my fingers over her already-dripping pussy. It hadn't occurred to me that my first stranger could be a woman. I pulled my face back from Trevor's balls and the other woman popped his cock out of her mouth and we kissed with his cock just an inch from our faces.\n\n\"Hi,\" I said when we'd managed to untangle our tongues.\n\n\"Hey,\" she said, smiling at me. \"I'm\u2014\"\n\n\"No!\" I said. \"Don't tell me until after all three of us cum.\"\n\n* * * * *\n\nWill\n\nThere were plenty of strangers to choose from, but as soon as I left Jack and The Chief, Becky caught my arm ans spun me to face her and pressed her glorious naked body against mine and launched her tongue into my mouth.\n\n\"Oh fuck, Will,\" she gasped. \"I can't wait any more. You need to fuck me right now!\" \n\nI looked around us to find the nearest blanket or towel or picnic table, somehow not even taking any time to observe the frenzied orgy going on around us. The Chief had left my cock throbbing hard and oozing a little drip of pre-cum. I guided Becky over to an unoccupied blanket and kissed her again, my hands searching for and finding her incredible tits. I lifted and squeezed them as our tongues twirled together and Becky's hands found my cock and slid up and down its length. I broke our kiss and leaned over to lick and suck her big gorgeous boobs.\n\n\"Mmm, yes Will,\" she moaned. \"Suck my tits, baby.\"\n\nI slid one hand down her tight stomach and through the groomed patch of red-brown hair above her pussy and found her dripping wet cunt and she tilted her pelvis to give me easier access to her opening. I sucked on one of her tits as I sank my middle and ring finger into her pussy and Becky gasped and humped against my hand. Once my fingers were liberally coated with her juices I somewhat reluctantly stopped sucking on her amazing breast and stood back up, bringing my hand up to her face. Becky smiled and sucked my two pussy-slick fingers into her mouth.\n\nOnce she'd sucked them clean, Becky smiled at me again and got down onto the blanket, leaned back on her hands and thrust her chest upward. At the same time she spread her legs out in front of her and bared her pussy to my view. I knelt between her legs.\n\nI gripped my cock around the base and stuffed the first half of it into Becky's pussy. \"Your pussy feels so good, Becky,\" I groaned as I slowly pushed deeper inside her.\n\n\"Stuff that big fucking cock in me, Will,\" she replied. \"Oh my fucking God, I love your cock!\"\n\nBecky sat up a little straighter and both of us watched my cock slowly disappear into her pussy. I grabbed one of her tits just as I finally managed to bury my prick inside her and Becky groaned wordlessly as she adjusted to my invading girth. I pulled her hips toward me as I drove mine forward, burying my entire cock inside her cunt hard with every stroke. I watched her big tits bouncing wildly and I could feel my balls bouncing hard off of her ass.\n\n\"FUCK ME!\" Becky screamed. \"HARDER! FUCKING HARDER!\"\n\nI muffled her yelling by slipping two fingers of my right hand into her mouth, and Becky sucked them hungrily. I pulled my cock out of her pussy and told her to roll over. Becky planted her knees on the blanket in the sand and I slammed my cock back into her and produced a scream of pleasure, a scream that mixed in the air with dozens of other screams of pleasure in the night.\n\nI pressed my saliva-wet middle finger against Becky's asshole and pushed it inside her. Without slowly down the constant pounding of my prick into her pussy, I reached beneath her body and rubbed my fingers on her clit with my left hand, while I slowly worked my right middle finger deeper into her asshole.\n\nBecky came. Hard.\n\n\"JESUS FUCK!\" she screamed as her pussy convulsed, painfully squeezing my cock and forcing me to stop fucking her. She slapped my hand away from her clit and moved forward, so that my cock popped out of her pussy. My finger was stuffed in her ass past the second knuckle, and I was afraid she was going to break it off. Her pussy dumped girl-cum all over my cock and balls, and down the inside of her thighs. She screamed the entire time. \"FUUUUUUUUUUUCK! HOLY JESUS FUUUUUUUUUUUCK!\" \n\nShe rolled over onto her back and held a hand over her pussy as more of her juices sprayed out between her fingers. Her eyes rolled up in their sockets and her face and chest flushed bright red. I jacked my cock hard and watched her thrash and cum in front of me. My balls began to boil, and just as Becky's orgasm started to come to an end, mine began. I leaned over Becky's panting, sweaty body while I worked my cock in my right hand.\n\n\"Oh fuck yes!\" I moaned. \"I'm gonna cum all over your fucking tits! Oh FUCK!\"\n\n\"Do it, baby,\" Becky encouraged breathlessly, squeezing her tits together. \"Stroke that big cock and cum all over these tits!\"\n\n\"Fucking FUUUUCK! Here's my fucking cum!\" I roared. My cock exploded, and began shooting thick ropes of hot cock cream in long jets all over Becky's body. My balls roiled and my cock fired shot after shot of cum, leaving streaks of white dripping down Becky's neck, all over both of her tits, across her stomach, and even on her pussy. When my cock finally stopped spurting, I turned around and collapsed on the blanket beside her. \n\nMy cock lay against my stomach as I tried to catch my breath, but only for a few seconds before another hand was on it and Hailey leaned over and sucked it into her mouth, slurping up the last glob of cum that still dangled from the head of my cock. Hailey, who Eva and I had surprised with her two friends fucking in the woods on the day we took a Marine Patrol shift, her big tits swaying beneath her, sucked my cock hard and didn't give it a chance to start going soft. She still didn't count as a stranger, but the challenge would have to wait a little while longer because Jesus she was good at sucking cock.\n\n\"Can I help you clean up from all of that cum?\" a voice came from my left where Becky lay watching Hailey suck my cock. A woman I had never met before was standing over the edge of the blanket looking down at all three of us, but mainly at Becky's cum-streaked body.\n\n\"That sounds really nice,\" Becky said.\n\nThe woman appeared to be in her early forties. She had big tits and a big ass and long dirty-blonde hair. \"Three newbies?\" she asked.\n\n\"She and I were here last year,\" I said, indicating Becky beside me as the woman got down onto the blanket with us and began licking my cum off of Becky's tits.\n\nHailey popped her mouth off of my cock. \"First time for me,\" she said.\n\n\"I'm Sarah,\" the woman said. \"Friend of Luke and Rebekah.\"\n\nShit. So much for her being my assignment. But the part about Luke and Rebekah was interesting. I wondered if they were at the bonfire yet, at least until Hailey started sucking my cock again.\n\n* * * * *\n\nEva\n\n\"Holy fuck that cock is big,\" the woman said as I helped Trevor begin to stuff a few inches of his enormous fuck-pole into her pussy. We'd agreed not to make our introductions until after we all came but so far Trevor had managed to hold out, even though our new nameless friend and I had both had two or three orgasms each. She'd sucked my pussy to my first good hard cum of the night, and I'd returned the favor, and Trevor had fucked both of us to at least two more. She was right though, his cock was fucking huge.\n\n\"You two lovely ladies are going to make me cum soon,\" Trevor said. \"Such nice tight pussies.\"\n\nIt always made me giggle when a guy with a huge cock told me my pussy was nice and tight, but I took it as a compliment anyway.\n\nThe woman began howling with pleasure as Trevor increased the speed and intensity of his thrusting into her cunt, and I muffled her cries by feeding her my tits, which she managed to suck despite the pounding Trevor was giving her.\n\n\"Fuck her,\" I said, just barely stopping myself from saying his name, just in case he and the woman were not yet acquainted. \"Fuck her hard and then cum in my mouth!\"\n\n\"Oh so fucking close!\" Trevor groaned.\n\n\"Oh FUCKING FUCK!\" the woman screamed. \"I'm fucking cumming again!\"\n\nShe thrashed beside me on the blanket and Trevor pulled his cock out of her pussy and I spun around to catch his first thick hot spurt of man goo in my mouth. It landed on my tongue and I savored the taste even as I closed my lips around his huge bulging cock head and started drinking down blast after blast of his delicious cum.\n\n\"Swallow that fucking cum, baby\" Trevor moaned as his balls continued to pump his spunk into my mouth.\n\n\"Oh fuck I want some too!\" the woman managed to gasp in the throes of her subsiding orgasm. I stopped swallowing and let Trevor fill my mouth with cum. It was a massive load, a true compliment to his gigantic cock. Despite all I had already swallowed, my mouth was full before he was spent, and his cum dribbled out of my mouth and down onto my chin and chest and tits. Trevor pulled his cock out of my mouth and spun to our new fuck-buddy, who sucked the last thick glob of cream off the end of his cock before locking her lips on mine so we could share the huge load I was saving for her. More cum dripped out of my mouth and hers, but we both managed to swallow a couple of gulps before we fell to licking the rest off of each other's faces and tits.\n\nWe tumbled to the blanket and pressed our bodies together and kissed frantically once we'd managed to swallow every drop of Trevor's cum. My pussy was still dripping wet and I wanted a cock in it badly, but my new friend's body felt so good against mine and her tongue tasted wonderful in my mouth.\n\nWhen we finally parted we smiled at each other and noticed Trevor was gone, off into the crowd to share the joy of his amazing cock with more people.\n\n\"I'm Eva,\" I said.\n\nShe kissed me, and then something about her changed. It was like I was only seeing her for the first time even though we'd just had enthusiastic and intense sex together. Her golden hair shone in the light of the bonfire. Her big perfect tits shone with traces of my saliva from licking them clean. Her green eyes were brilliant before but now they actually seemed to shine with their own internal light. In that moment she was the most beautiful person I had ever seen.\n\n\"I'm Rebekah,\" she said.\n\n\"And I'm Luke,\" a voice came from immediately behind me. \"Nice to meet you Eva.\"\n\nI turned around on the blanket and looked up to see what could easily have been the biggest cock in the world.\n\nI started to cum immediately.\n\n* * * * *\n\nWill\n\nI fucked Sarah's pussy while she screamed into Hailey's cunt. Becky had left us, giving me a long hungry kiss first, to find more fun around the fire. She and Sarah had sucked each other to orgasm after Sarah had finished licking my cum off of her tits and stomach and pussy. Only a few minutes later and I was already starting to get ready for another cum as Sarah's pussy clenched and spasmed around my cock. I held on to her big swinging tits as she moaned and gasped into Hailey's pussy. Hailey cried out her pleasure into the night as she came from Sarah's expert sucking. I watched Hailey's tits bounce and sway on her chest and I lost it, my balls churning and pumping as cum shot on long hard bursts deep into Sarah's pussy.\n\n\"Holy fuck yes!\" Sarah cried. \"Cum in my pussy, Will! I can feel you cumming in me!\"\n\nHer pussy milked more and more spunk out of my cock and soon it was running down her thighs and dripping onto my balls. But somehow instead of collapsing back in a post-orgasmic haze I just kept fucking her. My cock stayed rock-hard, and maybe even got harder. Sarah dislodged my cock by crawling forward over Hailey's body before turning around to suck our combined cum off of my cock.\n\n\"Holy fuck,\" I growled. \"Suck that cock! I can't believe I'm ready to go again already!\"\n\n\"That's the Luke and Rebekah effect, baby,\" Sarah said after popping my cock out of her mouth and offering Hailey a taste.\n\nI looked around while Hailey sucked my cock. \"They're here?\"\n\n\"See those two on that blanket over there blowing that big-titted little nympho's mind?\"\n\nI looked where she pointed and saw Eva, my big-titted little nympho trying to suck a preposterously huge cock while one of the most beautiful women I had ever seen fingered her pussy and gave her verbal encouragement.\n\nI immediately wanted to make my way over there to help Eva suck that fantastic cock, but even as I stood I was intercepted by Sophie and a young woman who I didn't know.\n\nSophie smiled up at me and grabbed my cock before kissing me hard on the lips. \"Hi,\" she said. \"This is an old friend of mine and Jack's.\" She let go of my cock and pointed at the cute busty redhead beside her.\n\n\"Sophie tells me your mission is to fuck a total stranger,\" she said. She had wide hips and a big bottom. Her creamy white skin was dotted with freckles on her face and shoulders and the upper slopes of her big luscious tits. \"She says you really know how to use that thing.\" She pointed at my throbbing fuck-rod.\n\n\"Sophie is a sweet girl,\" I said before kissing my best friend's fiancee again and squeezing her big boobs.\n\nSophie's friend moved closer and smiled up at me when Sophie and I parted. \"Wanna fuck me?\" she asked sweetly. She grabbed my cock with one hand and pulled my right hand up and pressed it against her left breast with the other.\n\n\"Oh yes,\" I said. \"Care to join us, Sophie?\"\n\n* * * * *\n\nEva\n\nI was so delirious with lust that it's still hard to remember some of the details of my time on that blanket with Luke and Rebekah. They gave me several of the most powerful orgasms of my life. Rebekah made me cum over and over again with just her fingers while I struggled to suck as much of Luke's unbelievably huge cock as I could. Just his cock head nearly filled my mouth and I was stunned by how far away his huge heavy balls were. And it didn't seem possible that a man could safely carry enough blood in his body to make a cock this big this fucking hard. And he wasn't just hard. His cock felt like a thick iron rod in my hands. It was too hard for me to really point it down any farther than perpendicular to his chiseled body. I reached out and marveled at how heavy his big balls were in my hands while I sucked on his enormous cock head.\n\nBefore this moment, either Trevor or Connor had the biggest cock I'd ever seen or sucked or fucked, but Luke had them both beat by inches. I wanted to fuck him more than I've ever wanted to fuck anyone in my life, including Will. But I also didn't want to take him out of my mouth. I wanted to know what his cum tasted like and I wanted to feel it going down my throat and warming me from the inside.\n\nAll of this flashed through my mind in a short gap in between mind-blowing orgasms from the work of Rebekah's fingers. When I wasn't frantically stroking Luke's cock with both hands I was clumsily pawing at her perfect tits. They weren't as big as mine, but for a woman who I'd heard was close to forty, they felt more like mine had when I was a teenager. I couldn't believe how long Trevor had managed to fuck her without cumming, but if you'd asked me then, I would have had a hard time matching the woman Trevor and I had fucked with the woman who was now encouraging me to suck her husband's cock and fingering my pussy with magical dexterity. Her hand was soaked from my pussy juice and every few minutes she would lift it to her mouth to taste and raise her hand higher for Luke to taste.\n\n\"That is a delicious pussy, Eva,\" Luke said, and his voice alone made me shiver with pleasure. \"Would you like me to suck your pussy for you? You've been sucking my cock so good I think I owe you.\"\n\nI didn't really believe I'd been sucking him all that good, but the idea of this man eating my pussy drove all other thought out of my head and I immediately rolled back onto the blanket and spread my legs for him. He got down on his knees between my legs and his gigantic cock hovered in the air over my stomach for a minute before he got down low enough to lick my pussy.\n\n\"Holy FUCK!\" I screamed when his tongue dragged up over my slick opening and flicked across my clit. \"Oh my fucking god SUCK MY PUSSY!\"\n\nI nearly passed out when Luke went to work on me in earnest. Rebekah smiled at me before climbing over me and muffling my screams with her pussy and I immediately started cumming in Luke's mouth. It was the most delicious pussy I'd ever tasted and her flavor sent me hurtling over the edge into a blinding white-hot orgasm. I screamed into her pussy as I thrashed beneath her and Luke greedily sucked down my cum.\n\nI had only just begun to catch my breath and concentrate on eating Rebekah's pussy when I felt Luke's preposterous cock-head push against my pussy. There was no way it was going to fit, but it felt too good and Rebekah's pussy tasted too good for me to protest and then his head popped inside me and I came again, even harder.\n\n\"Oh Eva you're going to make me cum, baby,\" Rebekah wailed. I had no idea what I'd been doing to bring her close to orgasm, because my brain was scrambled by the never-ending explosion inside me as Luke slowly sank more and more of his cock into my pussy. But she did cum, and when her orgasmic fluids rushed into my mouth she screamed into the sky. \"FUUUUUUCK! I'M CUMMING!\"\n\nRebekah rolled off of me and I was stunned to see how much of Luke's cock he'd managed to stuff into my pussy. \"HOLY FUCK!\" I screamed. \"HOLY FUCK IT FEELS SO FUCKING GOOD!\"\n\n\"Your pussy is incredible, Eva,\" Luke groaned. \"It feels so fucking good on my cock!\"\n\n\"Let me taste, baby,\" Rebekah said, having more or less recovered from the orgasm she'd just had on my face. \"Pull your cock out so I can taste that pussy on it.\"\n\n\"Oh my god please put it back in!\" I begged while I watched Rebekah suck my cum off of her husband's monstrous member. \"Please don't stop fucking me!\"",
        "\"Give it to her, baby,\" Rebekah said. She pointed Luke's cock back at my cunt.\n\n\"Do you want me to fuck you now?\" Luke asked me.\n\n\"What do you call what we were just doing?\" I asked, feeling my face flush red.\n\n\"Just getting warmed up, sweetie,\" Rebekah said.\n\n\"Hold on to Rebekah,\" Luke said as he pressed his cock head back against my pussy lips. \"We'll see you in a few minutes, Eva.\"\n\nHe thrust his cock into me hard and reality flew apart around me.\n\n* * * * *\n\nWill\n\nMy new red-haired friend was begging me to fuck her. Sophie and I had been toying with her for a while now, making her cum over and over again with just our tongues. Both of them had sucked my cock at various points as we rolled around on top of a picnic table, and we'd made her watch as I pumped my cock into Sophie's pussy a few times.\n\n\"Oh my fucking god would you just fucking FUCK ME ALREADY!\" she screamed.\n\nI looked down at Sophie as she bucked her hips up to drive my cock a little deeper into her cunt. \"Goddamnit I should have just kept you all to myself,\" she chuckled as we disengaged. \"Fuck her, Will. Fuck her fucking brains out.\"\n\nThe busty beauty who I'd never met opened her legs for me and Sophie helped me guide my cock into the hot silky embrace of her pussy.\n\n\"Oh FUCK!\" she screamed.\n\n\"Oh my fucking god that pussy feels good,\" I groaned.\n\n\"Grab my tits and fuck me!\" she roared up at me.\n\nI did as I was commanded, feeling the hard nubs of her nipples digging into my palms as I started to pump my cock in and out of her juicing pussy. I moved slowly at first, savoring the contours of her channel caressing my cock head and shaft. I glanced back in Eva's direction quickly to see her rolling onto her back and spreading her legs for the man I'd been told was Luke, and given the way Jack and Sophie had talked about him earlier today, I could see my girlfriend was about to have a memorable experience. Watching him aim his ridiculously huge cock at Eva's pussy filled me with a powerful lust, and I began fucking this red-haired young woman in front of me with determined zeal.\n\n\"Oh fuck your cock feels good!\" she wailed. \"Fuck me! FUCK ME!\"\n\nHer pussy clenched and squeezed my cock and covered me with her cum as an orgasm thrashed through her body and I watched in awe at the violent bouncing of her tits. I'd slid my hands down to her hips so I could lift her butt off the table and slam my cock into her pussy harder and she slammed her whole body in my direction on every stroke, fucking me back as hard as she could.\n\n\"Fucking pussy feels so fucking good!\" I groaned.\n\n\"Fuck it!\" she cried. \"Fuck that pussy! Pound me with your big fucking cock! FUCK ME!\"\n\nI realized Sophie had left us alone, so now it was just me and this total stranger fucking each other on the table top as hard as we could. I was a little worried about already working up to my third cum of the night, but there was no soreness in my balls or my cock. This could have been my first erection of the day and I was ready to cum as many times as I could.\n\n\"I'm gonna cum soon,\" I moaned. \"Can I cum in your pussy?\"\n\n\"YES!\" she screamed. \"CUM IN MY PUSSY! OH FUCK I'M CUMMING AGAIN! FUUUUUCK!\"\n\nWe shrieked together in delight as my balls exploded and my third huge surge of hot cum pumped up through my cock and deep into her clenching pussy. Her cum soaked my cock and my balls as mine flooded into her cunt.\n\n\"OH FUCKING FUCK!\" she cried. \"Oh your cum feels so good in my pussy, baby!\"\n\n\"Fuck yes,\" I growled. \"Cum all over my fucking cock!\"\n\nWhen my balls finally ceased their pumping, I slowly pulled my cock out of her pussy and it sprang up and slapped against my stomach with a wet smack.\n\n\"Let me taste it,\" she said, climbing up onto her hands and knees to suck my cum-covered cock. When she'd finished sucking my cock clean and licking my balls, she kissed me on the mouth and shared with me the taste of our mixed cum.\n\n\"Mmm, delicious,\" I said when we parted. \"I'm Will.\"\n\n\"Nice to meet you, Will,\" she said. \"I'm Lily. A friend of Jason and Amber from way back. You have a really nice cock and that was a really good fuck.\"\n\nShe got down off the table, leaving me alone. \"Have fun out there,\" she said, before skipping off into the crowd.\n\nI got down and looked around to see Rebekah and Luke helping an unconscious Eva to the ground, so I walked over to them, my cock standing tall and rock-hard in front of me.\n\n\"Is she okay?\" I asked.\n\n\"She's okay,\" Rebekah said, and her voice made my cock twitch. \"Luke has a way of making people pass out from pleasure. Your girlfriend is amazing, Will.\"\n\nRebekah was staggeringly beautiful. Her blond hair in the firelight took on a golden shine and her green eyes almost looked as if they glowed. She had big tits, probably about the same size as Sophie's, and long slender limbs. It was a few long awkward seconds before I noticed her husband next to her with his impossible cock shining in the night with a mix of his own and my girlfriend's cum.\n\n\"Mind if I clean that up for you?\" I asked him.\n\n* * * * *\n\nEva\n\nThe most powerful orgasm of my life was more than just an orgasm. It went on for the entire time Luke's cock was in my pussy and it doubled over on itself when he filled me up with his cum. But that's not doing any justice to what happened to me when Luke fucked me. The instant his unbelievably proportioned cock head slipped into my pussy my stomach flew up in me like the drop of a roller-coaster and the cacophony of the orgy around us vanished. \n\nFlickering firelight was replaced by a directionless explosion of sound and color and a giddy floating up of myself from my own body. I could feel him fucking me, but I could also see him fucking me as though through someone else's eyes. It took a few seconds to realize that they were his eyes. I was watching his cock pump in and out of my pussy because he was. I was watching my big bouncing tits on my chest because he was. I had a disorienting moment when I realized I could also feel what he was feeling on top of the terrific cascade of feeling and pleasure in my own body. He was watching my tits with pleasure because he had always loved big tits and I knew this because I felt it too. He was watching his cock move in and out of my pussy because he liked the way my pussy lips seemed to grab his shaft every time he withdrew and it reminded him, as it always did no matter who he was with, of his first time with Rebekah. \n\nI saw my eyes roll back in my head through his eyes when my orgasm exploded and doubled in power because he had started to cum. For some impossible amount of time I new what a man's orgasm felt like and he knew what mine felt like. I knew that this is what sex was like for him every time. He could feel what the other person felt and he shared his own feelings with the other person and I knew all of this just before I blacked out from the pleasure.\n\n* * * * *\n\nWill\n\nI looked at Luke's cum oozing out of Eva's pussy and her chest gently rising in falling and the drool in the corner of her mouth.\n\n\"Sit up on that bench so I can suck your cock while you suck Luke's\" Rebekah said, indicating an unused picnic table just a few feet away from the blanket. \"Don't worry. Eva will be awake again in a minute or so. The first time with Luke can be pretty overwhelming for someone new.\"\n\n\"What happened to her?\" I looked at Luke directly.\n\n\"If you suck my cock you'll find out,\" he said. \"More or less.\"\n\nIt didn't hurt that his monstrous prick looked like the most delicious thing I had ever seen, with the possible exception of his wife's beautiful tits and pussy. I sat down on the picnic table bench and leaned back against the table top, my cock pointing straight up in the air, still shiny with Lily's saliva. Rebekah crawled slowly to me from the blanket across the sand, her incredible tits swaying gently beneath her body. I spread my legs apart to make room for her between them and she licked me from between my balls right up to the tip of my cock and I gasped at the intensity of the pleasure.\n\n\"Holy shit that felt good!\"\n\n\"You haven't felt anything yet, hun,\" she said and started to suck my cock.\n\n\"Oh my fucking god,\" I gasped as she swallowed my entire cock. \"Holy fuck that's incredible!\"\n\nI threw my head back and closed my eyes as the sensations coursed through me, Rebekah working my cock with her lips and tongue and throat. When she pulled back I wanted to cry at the loss of contact.\n\n\"He tastes good, baby,\" she said, turning back to Luke who was walking slowly to join us. \"I taste Sarah, and Sophie, and Lily... The Chief.\" I opened my eyes in amazement as Rebekah tilted her head in thought. \"And two other young ladies I've never tasted before.\"\n\n\"How the hell could you tell? And Sophie and Jack told us they'd never had sex with you guys.\"\n\n\"We haven't,\" Luke said with a chuckle at my exasperation.\n\n\"But I've tasted Sophie on Matt and Jason's cocks a few times over the years,\" Rebekah said.\n\n\"My wife has an extremely refined pallet,\" Luke said, before pointing his gigantic cock at my face. I stared at its immense cum-covered girth and length and Rebekah started sucking my cock again. I grabbed Luke's cock with my left hand and lifted its considerable bulk and realized I couldn't get my fingers all the way around it. The pleasure from Rebekah's sucking was dizzying, but I opened my mouth and sucked his cock-head through the haze and the world blurred.\n\nI very nearly started cumming in Rebekah's mouth the second I had Luke's cock in mine, or what pitiful portion of his cock I could fit, anyway. His cum was delicious, and the way it mixed with Eva's pussy juice made both taste even better. But the sensations of pleasure from sucking Luke's cock drove away my awareness of my surroundings. There was no bonfire or orgy or picnic table, just Rebekah sucking my cock and me sucking Luke's. While Rebekah seemed to be able to swallow my entire cock with ease, I was not anywhere near as skilled, and I had to settle for sucking Luke's head while pumping his long thick shaft with both of my hands and swirling them around in the slickness of Eva's cum. \n\nBut the pleasure wasn't merely derived from the taboo feelings of sucking a man's cock that still invaded my brain from time to time, although that was part of it. It took a few minutes of disorienting pleasure before I realized that I was watching myself suck his cock and I could feel what my mouth and hands felt like on his cock as though he was transmitting his experience to me through our physical contact. I could feel the incredible sensations of Rebekah sucking my cock on top of the surprisingly wonderful sensations of my own cock-service on Luke. I could feel his pleasure at seeing my cock in his wife's mouth and I knew that it was the same pleasure I derived from watching Eva suck and fuck other men. I could feel him admiring my cock, even though it seemed almost comically small next to his, and before he even said it out loud I knew he was going to ask Rebekah to mount me and ride me.\n\n\"Ride his nice big cock, baby,\" Luke said. \"I want to watch you fuck him while he sucks me.\"\n\nLuke had to turn a little to make room for Rebekah to climb up into my lap, and when his cock popped out of my mouth my link to his experience was extinguished and I was back to just my own body and my own sensations. Not to say those sensations weren't amazing, but it made me dizzy for a few seconds and I thought the picnic table was tipping up on its end beneath me until Rebekah climbed into my lap and her tits were right there in my face and she impaled herself on my cock.\n\n\"Oh FUCK!\" we screamed together.\n\n\"Your cock feels so fucking good, Will!\" she cried.\n\n\"Oh my fucking god your pussy is incredible, Rebekah!\" I replied.\n\nI turned back to Luke to find his cock waiting and I opened my mouth again. As soon as I started sucking the link was restored. I could feel Rebekah on my cock. I could feel my own mouth sucking Luke's cock as though our positions were reversed. I felt Luke lusting after his wife's tits as they bounced and crashed against my chest. I saw my own balls bouncing against Rebekah's ass through Luke's eyes as I bucked my hips up to fuck her back as she fucked me. \n\nI couldn't hold back my orgasm as badly as I wanted to give her a worthy experience, but as soon as Luke started to cum in my mouth, the weirdness of the doubled-up experience got even weirder. The taste of his fresh hot cum in my mouth made my balls start pumping immediately, as though the thing making me cum was not Rebekah's incredible pussy pulsing and clenching along the length of my cock, but rather the taste of Luke's cum itself. A huge blast of cum exploded through my cock into Rebekah's pussy just a half-second after Luke started cumming in my mouth. I felt my own powerful orgasm, one of the most powerful I'd ever had, but I also felt his. I could feel the way it felt presumably every time he came and I knew it was a more intense feeling than my own. His balls were also bigger than mine and they pumped harder, and his cum stream shot faster and thicker and farther and there was no way I was going to be able to swallow his entire load. \n\nBesides feeling myself and Luke cum at the same time, the link between me and Luke suddenly extended through my cock into Rebekah and I could feel her orgasm too. I could feel my chest against her tits and my cum gushing into her pussy. I could feel her lust for her husband's cum, and knew she was waiting for me to drink my fill so I could give the rest to her. I could feel their love for each other burning around all of us and straight through my body in both directions. I could feel three impossibly intense orgasms at the same time through three interweaving perspectives and my brain couldn't take either the pleasure or the sensory dislocation and I passed out just as I saw Eva come close to us with a big smile on her face and a strange luminescence in her eyes.\n\n* * * * *\n\nEva\n\nWhen I came to on the blanket I was alone. But as my vision started to sharpen and my sense of the world around me came back, I saw that Luke and Rebekah were only a few feet away at a picnic table. With Will. My heart swelled for him even as my lust for all three of them exploded and I climbed to my feet. The picnic table was only four or five paces away, but every step brought more and more sensory information into me than the one before.\n\nFirst there was the sense of my own body, so much sharper and more precise than it had ever been before. I could feel every bone and ligament doing it's job, every muscle working not just normally, but better. I could still feel Luke's cum in my pussy and taste Rebekah's on my tongue. The sensation of experiencing Luke's being along with him had disappeared when I passed out, and I was both disappointed and grateful. On one hand it was the most intense experience of my life, but on the other, it was quite a bit more than my mind could take for any extended period of time.\n\nThat was the second flood of sensation that occurred to me as I crossed the distance to my boyfriend and the woman riding his cock and the man cumming in his mouth. The link to Luke, though temporary, had given me a perspective on my own consciousness that I didn't know could even exist. I wasn't outside myself, but I knew what outside myself was, and it was something that I was never going to forget.\n\nWhen I saw Will's eyes roll up into the back of his head as he valiantly tried to swallow Luke's cum, I knew he was experiencing it too.\n\n* * * * * * *\n\nTo be continued. Looks like Bonfire Island is going to need two chapters."
    ],
    "authorname": "Megamuffin",
    "tags": [
        "orgy",
        "big tits",
        "big cock",
        "bisexual male",
        "bisexual female",
        "outdoors",
        "exhibitionism",
        "swapping",
        "heightened reality"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/another-week-on-the-lake-ch-07"
}