{
    "title": "Loving Yvonne",
    "pages": [
        "This is a story about futanari.\n\nYvonne and I first met in the summer before my senior year, in the woods behind my family's property. It was kind of embarrassing. She caught me lying naked on a mossy log by the stream, beating off in a single-minded frenzy. I've made better first impressions. \n\n~~~ \n\nI was masturbating in the woods because I didn't dare do it at home. I grew up in a very conservative household. My parents had a strict no-porn rule, and I was prohibited from having girlfriends or engaging in 'acts of self-abuse'. If you think that kind of ban is unenforceable, then you don't know my parents. \n\nIt amazes me that people so sexually phobic were able to procreate. It also amazes me that I accepted their regime as normal for so long. \n\nWhile I wouldn't describe my parents as evil or abusive (they provided as best they could), when it came to sex, they were just...weird. For instance: I had stripped naked there in the woods to ensure no evidence would accidentally spatter my clothes. My mother would carefully inspect every article when doing the laundry, and I would have to explain any mystery stains. I'm not kidding. At night, they would listen at my bedroom door, sometimes for hours. If so much as a bedspring creaked, they would fling open the door to \"just make sure everything's all right.\" \n\nI won't go into all the other neurotic little tactics they used to restrain my burgeoning sexuality during those hellish teenage years, but they were all equally extreme. None of them actually stopped me from masturbating of course, but I had to go to ridiculous lengths to get my private time. And I would feel so guilty about it afterwards that it would be days before I would get desperate enough to do it again. \n\nSadly, they didn't have to work too hard to prevent me from dating. At that age I still hadn't properly filled out, or attained my full height. I was a nervous runt with no social graces. The girls in my hometown couldn't be bothered with awkward clods like me. Our town hosted a big, prestigious university and the girls only had eyes for the male students. Every year a new crop of old-money boys from upstate would come to town, all destined for bright futures elsewhere. My fellow townie boys all learned to say \"fucking stuck-up college-groupie\" before they learned to say \"pass the salt.\" My virginity had no end in sight. \n\nMasturbation, however, was well within my grasp. Even with all my parents' moaning about hairy palms and blindness, I couldn't be stopped. I was at that age where my penis would stiffen up of its own accord several times a day, and it was too tempting not to play with it. \n\nI loved the nasty images that came into my head as I masturbated. Visions of naked, beautiful women and men doing exciting sexy things to each other, and sometimes to me, would just spontaneously appear. The exact details were always vague, as I had no sexual experience beyond masturbation, and precious little visual material to draw upon. The imagination is a wonderful thing, though, and as I rubbed myself, the pleasure and those sexy thoughts and feelings would rise to an awesome peak. When I shot my load all over the bushes, it was pure heaven. \n\nNot much was fun or pleasurable in my life in those years. Masturbation took me someplace else, and that made it an Unquestionable Good. \n\nMy parents worked long hours during the summer break, and fortunately, that summer there was only part-time work to be had for students. I had whole days to myself. Our house was out past the town limits, on the edge of a state conversation area, and we had no neighbors. While the house was a sexual no-fly zone, there was plenty of opportunity to fool around naked outdoors. I knew lots of secluded little dells where I could strip and play with myself in complete privacy. \n\nIn retrospect, I guess it seems obvious my home life was a pretty repressed, miserable existence. In my young na\u00efvet\u00e9, I thought everybody lived like this. Yvonne taught me differently. \n\n~~~ \n\nSo there I was, sprawled out nude on a log in the woods, happily whaling away on a very respectable teenage stiffy, when a girl I'd never seen before strolled into my line of sight. \n\n\"Hello,\" she said politely. \n\nSomeone gave my heart a brutal squeeze. The air wheezed out of me, along with all rational thought. I gaped at her. \n\nShe wore round, wire-frame glasses over large, pale-blue eyes. That was the first thing I noticed. She had the most disconcerting eyes. You looked into them and whether you were looking for it or not, you saw right to the very bottom of her soul. \n\nI remembered I was naked. I remembered I had my dick in my hand. I let out a horrified yelp and fell off the log. I landed face-down in the muck of the riverbank with a loud splat. It was pure luck I remembered to close my eyes at the last instant. \n\n\"Are you okay?\" She asked. \n\nI was unhurt, but embarrassed nearly to death. I was covered from brows to toes in mud. My dick speared straight into the muck, and as discomposed as I was, it still felt kind of good. If I weren't overcome by shock and horror I might have been tempted to give it a few humps. As it was, I had absolutely no idea what to do next. \n\n\"Are you okay?\" she asked again. I peeled my face up out of the mud and looked at her. She just stood there and regarded me with polite concern. As a definitive moment of one's worst nightmare realized, it was somewhat anticlimactic. \n\n\"I'm okay,\" I answered at last. My voice had a funny hoarse sound, like it was breaking again. \n\n\"I'm Yvonne,\" she said. \"Hello.\" \n\nHer name didn't suit her. That's all I could think in that moment. With her plain round face and long straight hair, she looked more like a Mary or a Barbara. I belatedly remembered my mother mentioning earlier in the week that a family had moved into the old Peddimore farm. It hadn't sunk in that we were no longer alone in our rural little corner of nowhere.\n\n\"Hello Yvonne,\" I answered stupidly. \"I'm Martin. Marty.\" \n\n\"Hi Marty. Do you need a hand there?\" \n\nI fought off hysterics. \n\n\"No...I'm good.\" \n\nI realized she wasn't going to freak out, and some of my panic subsided. \n\nI needed to wash the mud off me. That was my first imperative. My second imperative was not exposing myself to this strange girl any more than I already had. After a moment's deliberation, I stayed on my belly and crawled backwards into the stream. I suspected I looked even more ridiculous that way, but I wasn't about to stand up and give Yvonne another front-row seat to my persistent boner. \n\nThe water was cool and pleasant on such a hot day and came up to my chest as I knelt on the riverbed. It rushed quickly enough to obscure my submerged nudity. I wiped away the clinging mud as quickly as possible. \n\n\"I think I've seen you before,\" she said. \"Your family lives in the gray house just over there, right?\" she waved back in my home's general direction. \n\nOh that's just great. I closed my eyes. She knew where I lived. I had visions of her showing up with a housewarming casserole. Hello Mr. and Mrs. Wozniak, I'm Yvonne and my family just moved in down the way. I've already met your son and boy, can he ever spank the monkey. \n\nI could feel the warmth rushing into my face. My vocal cords seemed frozen. She didn't seem to mind the silence. \n\n\"We just moved in last week. We're a couple bends down the road from your place.\" \n\nI was clean inside a minute. This ushered in a new problem. My clothes were still on the bank. \n\nI was too uptight to just stroll out of the river naked in front of her, but it seemed lame beyond description to ask her to turn her back. \n\nI cleared my throat. \"Could you throw me my clothes, please?\" \n\nShe looked puzzled, but shrugged and said, \"Sure.\" \n\nShe tossed them to me, and I put them on underwater. Then I walked out of the river, dripping wet, feeling more like an idiot than ever. I stood on the bank and stared down at my waterlogged self. \n\n\"What?\" she asked. \n\n\"I can't go home all wet like this.\" Inside my head, I was cursing my stupidity. \n\nToday was my parents' day off, and they were home, expecting me back soon. They thought I was at work, and there was no way to sneak in without them noticing me. If I walked in as soaked as I was, a full-bore interrogation would ensue. I was still fairly easily browbeaten in those days; even if I didn't crack under questioning (by no means a sure thing) my parents would still be more suspicious than ever. I'd have even less freedom. Hell, I wouldn't have put it past them to stick me with an electronic ankle bracelet. All my covert jackoffery would be on hold indefinitely. My dismay at that prospect overshadowed my current humiliation. \n\nI thought about just staying out until I was dry, no matter how long it took, but coming in late would just as surely trigger a parental water-boarding. \n\n\"What's wrong, Marty?\" \n\nYvonne wasn't having hysterics or even agitated. She was unruffled, almost serene, and when I came out of my self-absorbed funk, I saw she was still studying me. This set her aside from most of the girls I went to high school with, who considered the mere existence of local boys a gross personal affront. They would have been freaking out in her place. Scratch that; they would have been running in her place, and gibbering all the details of my transgressions into a cell phone as they ran. Yvonne just sat there on a rock with a small Mona Lisa smile curling her Cupid's bow lips. \n\nIt was hard to feel embarrassed or upset in Yvonne's company. She seemed to radiate a disarming, inclusive calm. \n\n\"My parents...they'd be pissed if they knew I fell into the river.\" I looked down at myself. \"Our dryer's on the fritz.\" It was humiliating to have to lie. I was always covering for my family in those days. \n\n\"You could use ours,\" she suggested. \"We have a big dryer. Your clothes would be done in half an hour. You could dry off in the bathroom. We've got...hairdryers, towels, all that.\" She shrugged. \n\nI looked at her. \"That's okay? Your folks wouldn't mind?\" \n\n\"They're out. They won't be back until dinnertime. But they won't mind. They're really nice.\" \n\nFor a moment I was bemused at hearing a teenager describe her parents as 'really nice'. The kids I went to school with described their parents as assholes, if they ever spoke of them at all. Mind you, most of the kids at my school were assholes themselves. \n\n\"Thanks,\" I said. \"That would be...really great.\" \n\nWithin minutes we were on the path to her place. We chatted as we walked, and I was able to look at her properly for the first time. She wore her brown hair parted in the middle, and had the slightest double chin. She wasn't overweight, though - she just hadn't yet lost what my parents would call her puppy fat. Her short, sleeveless dress smoothed over the faintest bulge of girl-tummy and flared out, swirly tennis-skirt style, above her knees. Her legs, what I could see of them, were sleekly well-fleshed.\n\nShe was in her teens, like me, and like me, had the awkwardness of one who still hadn't fully grown into their body. Her breasts and hips, while showing definite potential, had yet to blossom to their fullest. \n\nYvonne wasn't pretty, but she was...attractive. It didn't take me long to be compelled by her mild, nonjudgmental demeanor. I felt I could say anything to her. To me, that was a new and wonderful quality in a person, and it made her attractive as hell. Within twenty minutes of meeting her, I knew I wanted to be around her a lot. \n\n\"Do you like beating off outdoors? Are you an exhibitionist?\" \n\nIt was a matter-of-fact question, spoken with nothing but genuine curiosity. \n\n\"No,\" I answered, opening the gate to Yvonne's backyard. \"I just...I can't do it at home. My folks don't like me...beating off,\" I almost stumbled over the phrase, never having spoken it aloud to anyone before, never mind a girl. \"I'm not supposed to do it at all.\" I couldn't believe I just admitted that. \n\n\"Why not?\" Again, no hint of mockery. \n\n\"It's...\" I caught myself about to parrot my father's party line about sin and masturbation. I shrugged instead. \"They just think it's wrong.\" \n\n\"Do you think it's wrong?\" The funny thing was, my answer seemed important to her. \n\n\"Maybe. I don't know. I just like doing it.\" \n\nIt was weirdly easy to talk to her. Even though I'd known her less than an hour, and she was a girl and all, I felt comfortable with her. \n\nI couldn't help noticing the gigantic metal fridge in the kitchen and the huge flat screen TV in the living room. Yvonne's family had kept a lot of the old wooden furnishings but added all new and expensive-looking appliances. They sure weren't hurting for money or taste. \n\nShe told me her parents were engineers (mother chemical, father aerospace), and they had moved here to work at the local university. Both had scored prestigious research fellowships. I saw photographs of her parents on the mantel. Her Dad was tall and wore glasses like her. Her mother was a brunette knockout with a stunning, large-breasted figure. She smiled prettily in a couple of holidays-at-the-beach shots, wearing a revealing bikini that my mother wouldn't have worn at gunpoint. \n\nYvonne gestured toward a wooden door. \"That's the guest bathroom. You can dry off in there. Just chuck your clothes out the door and I'll take them down to the dryer. There should be a spare bathrobe, too.\" \n\nThe bathroom was twice the size of any in my home. I stripped, opened the door a crack to hurriedly pass my soaking pile of clothes to Yvonne, and then shut it. On impulse, I jumped in the shower and gave myself a quick soap, shampoo and rinse. Blow dryers were considered a vain luxury at my house and it startled me how much volume it gave my hair, and how much better I looked, dried and combed and cleaned. \n\nI put on the bathrobe -- another soft and fluffy extravagance -- and opened the door to find Yvonne smiling and waiting and for me. \n\n\"Would you like a soda, Marty? The dryer will take about half an hour.\" \n\n\"Sure,\" I said. \n\nWe sat at the kitchen table and resumed our conversation. She told me things about herself: her anxiety about the move and the isolation of her new home. I explained about the virtues of seclusion and the general breathing space out here. I told her the country could be beautiful and she'd come to love it if she gave it a chance. I didn't mean to, but I found myself admitting how I felt more out-of-place in town, surrounded by people, then on my own in the woods. I had no connection with the other kids my age. This brought the conversation back to me jacking off in the woods. \n\n\"You do know there's nothing wrong with masturbating, right?\" she asked. \"My brothers and I do it all the time.\" \n\nThis was a bomb. I almost choked on my drink. \n\n\"You...they...?\" I didn't know how to finish the sentence. \n\nShe misunderstood me. \"Yeah, but they don't live with us anymore. They're all at college out west.\" \n\n\"How many brothers do you have?\" I desperately hoped I sounded casual. \n\n\"Three. Randy's the oldest. Joe and Zack are twins, they're in the middle. I'm the youngest.\" She smiled at me, a beautiful, unselfconscious grin. \"Mom says she kept trying for a girl.\" \n\n\"I guess she got her wish.\" \n\nYvonne shrugged. \"I guess.\" \n\nAt the time, I took that to mean that Yvonne was a tomboy, and her mother wanted a more feminine daughter. I was really more interested in the whole beating off thing. I wanted to get back to that. \n\n\"So...you and your brothers...masturbate together?\" \n\n\"Oh yeah. Mom and Dad don't like us talking about it, but they're okay with it.\" \n\n\"Uh...yeah, they're right about not talking about it, your Mom and Dad,\" I said fervently. \"Look, Yvonne, you really don't want to just...admit something like that around here. People around here are muy uptight. They'd freak.\" \n\n\"Are you uptight?\" \n\nShe had the most inoffensive way of asking penetrating questions. This was already the most meaningful conversation I'd ever had. I didn't mind opening up to her at all, though. Yvonne had that gift.\n\n\"No. This place...it's not me.\" \n\n\"You plan on leaving?\" \n\n\"Oh yeah. After this year. I've got some money saved. And I've been studying my ass off. I should be able to get a scholarship at some college or other. Whoever gives me the best deal. I don't care which one. I can't get the fuck out of here soon enough.\" \n\nThe fervency in my own voice took me aback and I paused, blinked, and tried to get things back on track. \n\n\"So...how would you and your brothers...beat off?\" \n\n\"Oh, you know, we'd get some magazines and stuff, sometimes a DVD, look at them together in one of our rooms. You know.\" \n\nI didn't know, and that was the problem. I was rabidly curious. \n\n\"Magazines?\" \n\n\"You know, porn. Naked people. Sexy stories and stuff. Don't you have any porn?\" \n\n\"Are you kidding?\" I blurted out. \"If my folks caught me with anything like that...\" \n\nI shut up. My family embarrassed me. So did my dearth of sexual experience and sophistication. I liked Yvonne, but I didn't want her to pity me. \n\n\"Well,\" she said carefully, \"would you like to see some? My brothers left me a pile.\" \n\nMy heart was pounding loud enough for me to hear it in my ears. \"S-sure.\" I hated that I couldn't keep the stutter out of my voice, but at that point I didn't care. \n\nYvonne took me upstairs. She had the whole third floor to herself. Most of it was an open rec room deal with old bean bags and posters of bands I'd never heard of on the walls. She even had her own bathroom. I envied her space. \n\n\"In here,\" she said, holding aside the bead curtain to her bedroom area. I couldn't be sure, but I thought I heard an excited little catch in her voice. \n\nIt wasn't hidden or anything. There was a milk crate filled with glossy magazines next to her bed and she just hauled it up onto the spread beside her. I sat down next to it and began to rummage. \n\nIt was the fucking mother lode. I couldn't believe my eyes. The local stores only had Playboy, and maybe Penthouse. One of the gas stations carried Hustler for a week before they were forced to remove it. Yvonne's crate brimmed with lurid and exotic titles I'd never heard of, and would never see on any of the local magazine racks. My dick was already as rigid as a telephone pole when I lifted out the first magazine. A girl's big round rear end filled the cover, her privates barely concealed by a neon-orange G-string. Bright, jolly lettering arched over her bottom and spelled the magazine's title: Assgasm. \n\n\"Randy likes that one,\" Yvonne said with a fond smile. \"He's an ass man.\" She sat casually, leaning back on her palms with her legs crossed at the knee. \n\nI opened it, and my eyeballs bulged. Holy shit. There were men and women licking, fingering and fucking glistening asses on every page. I had never seen hardcore, and all these good-looking people doing it -- doing it for real -- blew my mind. I was shocked at how big the guys' dicks were, and how the pictures actually showed them penetrating all those wet, pliant anuses. It also took me aback how genuinely beautiful the women were. From the neck up they could have been the models from my Mom's Sears catalogues. They all had fantastic curvy bodies and every photoset had them naked except for a shiny coat of oil. Asses bounced everywhere, and it forced out a laugh of pure delight and disbelief. \n\nYvonne chuckled with me. \"Great, isn't it?\" she asked. I could only nod. \n\nI was salivating over one particularly round and sassy butt when I realized there was a glistening ballsack below the pink, attractive anus. It was a guy! In my raging heat it didn't even matter. I realized the guys were feeding my excitement too, with their huge smooth balls and muscular, jutting butts. I turned a page and gulped at the sight of a gorgeous female pushing an enormous greasy dildo up a handsome man's ass. My own anus squirmed, and not unpleasantly. ",
        "And the jism! I had never dreamed of so much cum. There were pages filled with buttocks and faces glazed with interlacing strands of semen. Yawning assholes overflowed with pints of the stuff. I turned another page and saw four huge-cocked guys ejaculating onto the hefty bum of a girl on all fours. The camera had captured it so perfectly, their cum looked like solid white ropes undulating through the air. I thought I might shoot off myself, right in my borrowed robe. I flipped more pages, and with a queasy quiver that was more excitement than disgust, I realized that more than one of those well-creamed rectums was male. I turned another page and a man and woman were trade-fucking a prone man's upraised butt. She wore a fake penis in some clever harness around her hips; Yvonne explained that was called a strap-on dildo. \n\n\"Jesus,\" I whispered. I never knew men could be fucked like that. The fact that I could be fucked like that sent an erotic chill down my spine. This was a whole new world opening up for me. \n\n\"Anal sex is awesome,\" remarked Yvonne. \"But you have to be really relaxed, and really well lubed up, or it smarts like hell.\" \n\nI tore me eyes away to look at her. \"You've tried it?\" \n\nShe blushed. \"Only with, you know, toys and stuff.\" \n\n\"Toys?\" I'd never felt more clueless and out of my depth. At the same time, I was more excited than I could ever remember being. I was hungry to learn more. \n\n\"You know, toys.\" she said. \"Dildos, vibrators. I even have a couple of butt plugs. My brothers got them for me.\" \n\nShe reached under the bed and pulled up a shoebox. Inside, wrapped in a fluffy hand-towel, were a collection of multi-colored cylindrical objects. A clear pink gel one was shaped exactly like a penis, complete with molded testicles at the base. It was about the same size as mine.\n\nThere was a white plastic device, about the size of a soup ladle, which consisted of a long handle ending in a short metal rod spearing a stubby, plastic cylinder with rounded edges. An electrical cord trailed away from the handle. \n\n\"That one's a vibrator,\" she explained. She touched the bulbous part. \"This vibrates like crazy. It's really good for your neck and back, but I just like to masturbate with it. These,\" she went on, pointing to a bunch of short, blunt objects with rectangular bases, \"are butt plugs. They go up your butt,\" she added, unnecessarily. I nodded. The magazine had shown similar toys in use. \n\n\"You ready to beat off, Marty?\" Yvonne asked me. \n\nI snapped out of my daze and stared at her. \"Yeah,\" I said. \"Oh hell, yeah.\" \n\n\"Here,\" she said, handing me a clear bottle. \"It's edible lube. Blueberry, my favourite.\" \n\nShe held up a container of moist wipes. \"Use these for the clean-up. Try not to get any cum on the robe. It's my Dad's,\" she explained, almost apologetically. \n\n\"Should I just take it off?\" I don't know where I got the nerve to ask that. Yvonne's eyes widened and her smile deepened. Clearly, she liked that idea very much. She nodded. \"Yeah, go ahead.\" \n\nI stood and removed the robe. I didn't give myself time to be self-conscious. Yvonne's interest in my naked body, especially my stiff, protruding penis, was frank and unabashed. Her smile was warm and approving. I got a hot, giddy feeling all over. \n\n\"You have a nice tan, Marty,\" she said. \n\n\"Thanks,\" I said. I shrugged. \"Plus side of getting naked outdoors, I guess.\" \n\nYvonne giggled, and for the first time I caught an inkling that she might just as excited as me. She spun her finger in a 'turn around' gesture, and bemused, I obeyed. \n\nShe whistled. \"Nice butt,\" she said with genuine appreciation. Feeling like I was in a dream, I bent over and wiggled it at her. She laughed out loud. I nearly jumped out of my skin when she gave my ass a light slap. \n\nI liked feeling her hand on me. It was friendly and familiar. Feeling a little foolish and very outrageous, I stuck my ass out further and kept on gyrating my hips. \n\nYvonne whooped and kept slapping my ass, alternating cheeks. \"Shake it baby, shake it!\" She was laughing so hard I thought she might choke. \n\nIt began to sting a little, so I stopped and turned around. \n\n\"All right, all right,\" I said, mock-serious, \"back to the business at hand.\" \n\n\"At hand, yes,\" she giggled. She was at that breathless phase where she was snorting a little through her nose. \"Okay. Oh man that was awesome. None of my brothers ever gave me a table dance.\" \n\nShe took the lube, uncapped it, and poured out a long string of the stuff onto my penis, like she was squeezing mustard onto a hot dog. It was cool and tingly. \n\n\"That feels nice.\" \n\n\"Wait til you spread it around some. Go ahead, stroke it in.\" \n\nI took hold of myself and began to masturbate. My eyes almost rolled up into my head. The lube made it feel so much better, I had to stop and take a breath. \n\nMy knees felt weak, so I sat back down on the bed. I didn't know what else to do, so I began flipping those wonderfully graphic pages again. I stroked myself with my free hand. I knew I wouldn't last long, so I tried to go slow. From time to time I would glance at Yvonne, and she would just smile and nod encouragingly. I didn't feel nervous at all. In a weird way this seemed perfectly natural. My fist made slippery, juicy sounds as I worked it up and down and I grunted softly. \n\nThis was the most remarkable and exciting experience of my life to that point. I had never been in a girl's house, never paraded around naked in a girl's bedroom, and certainly never masturbated in front of a girl before. The timorous idea that sex with Yvonne might be imminent made me dizzy. \n\n\"You don't mind if I beat off too?\" \n\nI didn't think I'd heard her right. I stared at her, and she was looking at me askance, plucking at the neckline of her dress. \"You don't mind?\" \n\n\"Uh...no,\" it came out of my dry throat as a croak. \n\n\"Great,\" she enthused, with relief evident in her voice. \"I was getting really horny, too. Your little booty shake was really sexy.\" \n\nShe stood up with her back to me and looked back over her shoulder. \n\n\"Unzip me?\" \n\n\"S-sure.\" \n\nI grasped the tab with numb fingers and watched Yvonne's dress peel away from her pale, perfect body. It dropped in a circle around her feet. She stood there for a moment with her heels together and just let me look at her. She wore no bra, and a pair of turquoise cotton panties with green and yellow stripes stretched over her plump bottom. There were dimples on either side of her tailbone just above the waistband. The shallow indents of her waist and the opulence of her thighs brought a lump to my throat. I couldn't believe I'd ever thought Yvonne plain; even from the back, she was so lovely it hurt. \n\nShe bent forward, just like I had, and the posture pushed her buttocks out in perfect half-moons. She stuck her thumbs under the waistband of her panties and whisked them down her legs. I gasped at the sight of her bare ass. It was smooth and generous and beautiful. She kept her legs together so I couldn't see between them. She straightened, and studied me over her shoulder. \n\n\"Oh God...\" I wheezed.\n\n\"Don't come yet, Marty, okay? Can you do that?\" \n\n\"I think so...\" \n\n\"May I have the lube, please?\" \n\n\"Sure.\" \n\nI held it out to her without thinking. When she turned around to take it from me, something swung around with her. It stuck out from her crotch, and at first I thought of the strap-on dildos from Yvonne's magazine, but this was all Yvonne: pale-skinned, ruddy-tipped, with a light weave of blue veins. It sprouted directly from her flesh. It was her flesh, and waggled with her movements. \n\nMy jaw fell open. It was a penis. It curved out from a tiny triangle of closely-trimmed brunette pubes. It was at least three inches longer and fatter around than mine. A pair of balls as big and smooth as any of the porn studs' in Assgasm swayed in counterpoint beneath it. \n\nMy brain registered all this in less time than it takes to describe. Then a roaring sound filled my head, like the sound a conch shell makes when you put it to your ear. The blood rushed from my face and I could feel myself blanching. My vision went gray to match. Everything blurred, and to my everlasting mortification I passed out. \n\n~~~ \n\nI floated up from a timeless gray space. I could hear a girl's voice echoing over a great distance. \n\n\"Marty? Are you okay?\" \n\nI opened my groggy eyes and at first I didn't remember where I was or even what day it was. Yvonne's face swam into focus, and all at once, my bearings returned. \n\nI had flopped back on Yvonne's bed. I was still naked, still erect, and my legs hung off the edge, with the balls of my feet brushing the carpet. \n\nYvonne was sitting on her heels next to me, cupping my face and staring down at me with great concern. She was still naked, too. Her small conical breasts pointed rigid nipples at me. She had the most enticing puffy pink poker-chip-sized areolas. They put another lump in my throat. I glanced down past the bulge of her tummy, and it was still there, too. \n\nIt hadn't gone down an iota. Yvonne was uncircumcised, like me, and her purplish bulb had inflated so much her foreskin had pulled down below its crown and bunched up there. Her penis lay pillowed on her balls, which looked like water balloons squashed under it. \n\nHer penis was long, like I said, and both wider and sleeker than mine, which tended toward knottiness with its pronounced veiny ridges. Yvonne had a big, beautiful porn star cock though, and the sight of it springing from her pale, petite frame made me feel faint again. \n\nShe put a hand on my forehead. \"Are you okay?\" she repeated. \n\n\"Yeah,\" I gasped. My mouth was so dry my voice cracked. \"Okay. Just...surprised.\" \n\n\"Let me get you something,\" she said, and hopped off the bed. She had a mini-fridge next to her desk and bent over to open it. My eyes were drawn between her legs like iron filings to a magnet, and I gasped again. Yvonne had a vagina too. Her balls hung heavy, and their webby satchel linked up to a completely normal-looking vulva. From what I had seen in Assgasm, Yvonne's vagina was more or less positioned right where a regular woman would have one. Her asshole too. As she bent over, her cheeks parted enough for me to see that as well. I was completely flabbergasted when I felt a pleasurable flex in my penis at the sight. Yvonne's body may have had my head all mixed up, but there was one part of me that was still unequivocally approving. \n\nShe came back to the bed with frosty bottle of water. Her cock bounced and swung with every step, and I couldn't help staring. It was real, and there was no point in disbelieving or denying it. She uncapped the bottle and held it to my lips. I drank thirstily. Eventually I took the bottle from her and finished it on my own. \n\n\"I'm sorry I blacked out,\" I said, as soon as I got my voice back. I had begun to feel a little sheepish about fainting in front of her, like some vaporish heroine in a Victorian novel. \"I didn't mean to...I mean...\" \n\n\"No I'm sorry,\" Yvonne exclaimed. \"I can't believe I didn't give you any warning! I just got so turned on, it was just like having Randy or the twins up in here, I didn't even think...shit, Marty, I'm so sorry!\" \n\nHer face scrunched up and turned red. She looked ready to cry. The weird thing was that upset me more than her penis had. \n\nI had grown to like Yvonne that afternoon, and I discovered, to my surprise, that my feelings hadn't really changed. I'd had quite a shock, and I certainly had some pressing questions, but Yvonne was still Yvonne. I didn't want her to cry. \n\n\"Hey, it's okay. Don't cry, Yvonne. It's okay, really.\" I reached out and patted her thigh. I meant it to be comforting, but she burst into tears anyway. I still couldn't help noting it was the most intimate touch I'd ever given a girl in my life. I wished my libido would switch off for one moment. \n\nYvonne flung herself down beside me, put her arms around my neck and hugged me. My brain seized up at the feel of all her bare, smooth warm skin pressed up against me. She put her face against my shoulder, wetting me with her tears. And not just her tears. I could feel her dick pushed up against my side, hot and throbbing with her heartbeat, and it seeped its own wetness onto me down there as well. \n\nAside from her penis, she was distractingly soft all over. I had never been so aroused and so freaked out in my life. \n\nI awkwardly put an arm around her and stroked her back. \"It's okay,\" I said faintly. \"Don't cry. It's all right.\" \n\nMy mind was like a frantic dog chasing its tail. Okay, now what? What happens now, Marty? What? What, for chrissakes?\n\nI didn't know, and that was what paralyzed me. I had enough presence of mind to know I wasn't repulsed or frightened. I was shaken, yes, but I was also eighteen years old with a naked girl in my arms. The fact of her extra organ had given me pause, for sure (in the same way a eighteen-ton wrecking ball gives a condemned building pause), but... \n\n\"It's all right,\" I repeated, and holy shit if it wasn't suddenly the truth. It really was okay. \n\nYvonne was snuffling her nose on me, so I reached over and picked up the tissue box next to her clock radio on the nightstand. \"Here,\" I said, holding them out. \n\nYvonne whispered \"Thanks,\" and wiped her eyes and blew her nose. She very nicely cleaned my shoulder with one of her wet wipes and then dried it with Kleenex. \n\n\"I have...questions,\" I said carefully, stroking her shoulder. \"Is that okay?\" \n\n\"Sure.\" \n\n\"Okay.\" I took a deep breath and tried to corral my whirling thoughts. \n\n\"You were born like this?\" \n\n\"Yeah.\" \n\n\"And your parents...know?\" I winced at myself. \"Sorry, dumb question. Of course they know.\" \n\n\"Yeah. They're okay with it, though. They explained it all to me when I was little. They let me decide if I wanted to be a boy or a girl. But there was no decision to make, really.\" She shrugged. \"I knew I was a girl.\" \n\nI just lay there for a moment, digesting that. The unbelievable coolness of Yvonne's parents floored me. I didn't think parents could be that cool. \n\n\"And how did...I mean, didn't anyone at school notice?\" \n\n\"I was homeschooled. My parents taught me stuff, and my brothers. I passed my GED when I was fourteen.\" \n\nThe difference between Yvonne's home life and my own hit me again, like a punch. I felt cheated and jealous. I knew Yvonne was smart, but the fact that she'd already surpassed me academically humbled me. \n\n\"My brothers, my parents,\" she snuffled. \"They're so great. They never make me feel like I'm not normal. I mean, there's nothing physically wrong with me, I'm healthy and everything works right. They're always so supportive...sometimes I forget...I am a little different from other girls. That other people might think I'm not normal. That's why...\" She looked down at the bedspread. \"Sorry I freaked you out.\" \n\nI let my breath out in a ruminative puff. \"Can't say I wasn't surprised, but...\" I looked down at where her penis snuggled against my waist. It extended almost all the way up to my ribs. My own dick bobbed with definite enthusiasm. \"I think I'm okay with it.\" \n\nYvonne kissed me on the cheek. It was spontaneous and heartfelt. It startled me, but I liked it a lot. She looked up at me. She still looked a little tearful, but her smile was back. \"Do you think I'm not normal?\" \n\n\"Hell no.\" In my strange state of mind I didn't think twice about my answer. \"You're better than normal.\" \n\nYvonne grabbed a few more Kleenexes, blew her nose and wiped her eyes under her glasses. \"What do you mean, Marty?\" \n\nI shrugged my right shoulder. \"I've been around normal people all my life,\" I said, \"who act like total lunatics. They judge people based on...nothing. They fly off the handle over nothing.\" \n\nThose hypnotic eyes told me she wanted to know more, so I told her things I never thought I would tell another soul. I told her about how I liked to read, and when my classmates found out about that when I was a freshman, the three years of wedgies and nerd jokes that followed. \n\nI told her about the kid who came out in grade ten, and how the school lost its collective mind. The teachers took up a petition to get him booted. And it happened. All the parents, the so-called grown-ups...they all agreed with it. \n\n\"It's like they're so determined to be normal,\" I said. \"They enjoy...nothing. Hell, my folks? They're miserable. They're not happy unless you're miserable too. And that's what passes for normal around here.\" I shrugged with one shoulder again. \"That's not you. And that's why I like you.\" \n\nShe spread those brilliant teeth at me in a shy smile. \"Yeah?\" \n\nAgain, I didn't even think. \"Shit yeah. You're the nicest person I've ever met.\" And I'm not just saying that because you're naked in bed with me, I didn't add. \n\nWithout warning, Yvonne kissed me on the lips. It started out as a sudden peck, like her previous smack on my cheek, but this one sort of...deepened. I kissed her back and suddenly the electricity was flowing and things got much more exciting and serious. My arms went around her and she slid partially up onto my body. The weight of her felt good. \n\nWe're making out, my mind noted. Holy shit we're making out for real. And oh Jesus, that's her tongue in my mouth. It's slipping and sliding over mine. Holy shit. \n\nWhen our lips finally parted Yvonne looked as flushed and breathless as I felt. The first thing out of my mouth was, \"Can we fuck?\" \n\nIt was the burning question on my mind, and I didn't even think about asking it so baldly. \n\nTrue to form, my question didn't faze her, but she did glance down demurely. \"I...kinda want to wait on that. Save it for the person I'm really in love with, you know?\" \n\n\"Okay.\" I looked away, a little abashed. Smooth move there, 007, I thought. \n\n\"Marty?\" her eyes were back on mine, and she looked a little anxious. She bit her lip. \"Do you, um...still want to beat off with me?\"\n\n\"What? Oh...yeah. Hell yeah!\" \n\n\"Great.\" She sighed with relief. \"I was kind of worried you didn't want to anymore.\" \n\nShe rolled onto her back so we lay hip to hip. Her breasts jutted up like perky little hillocks and her brown triangle of pubic hair stood out against her pale abdomen. She poured lube all over her enormous sausage and then my own. She set aside the lube, grabbed her penis with both hands and stroked it swiftly up and down. \n\nI just stared. Her hands looked so small gripping that thing. I don't think her fingers even met all the way around it. \n\n\"Come on, Marty,\" she grinned at me. \"Let's see who can come first.\" \n\nI grabbed my dick and started pounding. I stared at Yvonne doing the same. Her small breasts shook and her pudgy little belly quivered like Jell-o in a mold. Her face took on that dazed, slack-jawed look I came to know as Yvonne's beat-off face. She looked beautiful. \n\nOur forearms rubbed together, over and over. I listened to our heavy breathing. I watched the bright flush spread down to Yvonne's collarbone and the hot red patches break out on her chest and tummy. \n\nIt amazed me when she came first. Her breathing turned into noisy panting, with little whimpers on the exhale. It was the sexiest thing I'd ever heard. Her breathing accelerated, rising in a series of successively higher pitched gasps, and then, with a sharp intake of breath, her penis flared in her grasp like someone had goosed it with an air pump. Her breath went out with a loud grunt as her prick spat a fountain of cloudy white fluid in long, stringy bursts. \n\nThe first squirt hit her cheek with an audible splat. The next spurt landed full-length from her nose down to the hollow of her neck, stringing a line of thick translucent cream across her lips. I lost track of them after that. The hard-flung coils of her semen liberally spattered her body, and formed glistening puddles on her skin. ",
        "\"Jesus,\" I gasped. \n\nHer eyes opened and she panted as she looked at me. \n\n\"Are you gonna come?\" she asked. \n\n\"I...yes!\" There was no stopping it now. \n\n\"Come on me, Marty,\" she begged. \"I love it when boys squirt all over me.\" \n\nSomehow I kept one hand on my cock as I heaved myself up onto my knees. My penis had never looked so big. It loomed out over Yvonne's body like the bough of an oak tree. I could feel my orgasm gathering momentum, building up and up to an unnerving summit. \n\nYvonne's penis was still flexing and pumping out little globs. She disengaged one hand and grasped my balls. Her fingers were warm and slippery with her semen. She squeezed gently and pulled downward. \n\n\"Jesus!\" I screamed, and blasted the largest, most satisfying load of my life. The first spurt overshot Yvonne entirely and landed on her pillow. The next lobbed directly onto her tummy. \n\n\"Mmmm...your cum is so warm, Marty...\" \n\n\"God...oh God...\" I kept stroking, kept shooting. My jism formed tic-tac-toe grids with the lengthwise trails Yvonne had already laid. She shivered and moaned as I ejaculated all over her. I pumped out my last, and the sight of the semen glistening on her nipples made me feel faint. She kept squeezing and tugging on my balls, as though she were trying to coax more fluid out of me. Incredibly, sperm was still oozing from her penis. She kept on milking it with her free hand. She actually finished a little after me. \n\n\"Ooooh, that was nice.\" Yvonne gave me a lazy grin. She released her penis and ran a finger up her body through our mixed sperm. She put it in her mouth, sucked it and closed her eyes. \"Mmmmm.\" \n\nThe sight was so sexy, that I felt a little after-twinge in my now-rubbery dick. \n\nShe ran another finger over her body, giggling as she finger-painted herself with our semen. She held her sticky finger out to me. \"Wanna taste?\" \n\nI didn't even think. I took her finger in my mouth and sucked it clean. I'd never tasted cum before. It was thick and plain, with a salty under-taste. It wasn't bad at all. \n\n\"Good, huh?\" she was watching my reaction. \n\nI shrugged. \"It's okay.\" \n\nShe was still cupping my balls, fondling them. I gave a little twitch when she extended her wet index finger and drew it along the little ridge between my balls and anus. My cock gave an involuntary flex. Yvonne smiled. \n\n\"I like that too,\" she said. She let go of my balls and took hold of my prick. She squeezed firmly, and another pearly drop of cum oozed out. \n\nJesus...she's touching my cock... \n\nI just stared down with my jaw hanging open. Yvonne's hand was much smaller than mine and the difference was startling. She pulled down, like she was milking a cow's teat, and ran her thumb over my glans to collect the fluid. I was so sensitive I almost jumped. Then she released my cock and sucked her thumb. \n\n\"You taste nice, Marty. I knew you would.\" \n\nShe grasped my penis again, and even though I just came, I could still feel the blood rushing, and my cock ballooned in Yvonne's fist. She stroked it a few times, squeezing and sort of examining it, and I soon inflated to full erection. I was incredible -- I'd never gotten so stiff so quickly after an orgasm. Her lazy smile didn't change a bit. She patted the bed next to her. \n\n\"Sit down. Let's jack off again.\" \n\nI sat down next her with our hips touching again. She didn't let go of my prick. Her free hand took my wrist and brought it to her penis. I grasped it without thinking. It was so thick my thumb barely overlapped my fingertips. It was hot and sticky and pulsing in my hand. I moved my hand, and the outer sheath of skin slid back and forth just like mine did. I felt faint again, but it was a good, trippy excited feeling. It amazed me how arousing it was to squeeze and play with Yvonne's long, meaty cock.\n\n\"I love it when boys jack me off,\" sighed Yvonne. \n\nI stifled a hysterical chuckle. \"Do lots of boys jack you off?\" I asked. \n\n\"Just my brothers,\" she said in that same dreamy tone. \"And now you. My hands are so small. But boys have bigger hands, they can really grip me all the way around. I love that.\" \n\n\"I like you playing with my...with mine, too.\" I said. \"Your hand feels really good.\" \n\nThat was an understatement. Yvonne's soft hand felt phenomenal slipping up and down my sperm-lubricated prick. \n\n\"Can you bring your knuckle up...on the upstroke?\" Yvonne asked. \"Just...rub the underside...up at the top.\" \n\nI obliged. \"Yeah, that's nice,\" she sighed. \"I like feeling different penises...the different sizes, different shapes. I like feeling them come. I like watching boys' faces when they come. It's so beautiful.\" Her features relaxed into her beat-off face again. \n\nHer free hand slipped between her legs. She played with her shiny-wet balls, rolling them in her palm. Then her hand went underneath them and began rubbing in a rhythmic circular motion. Her testicles bobbed on her knuckles and slid about in their sac. Her cheeks flushed again. \n\n\"What are you doing?\" I asked. \n\n\"Playing with my coochie,\" she said with a smile. \n\nI swallowed drily. \n\n\"How do you...I mean...\" \n\n\"You wanna see?\" \n\nShe didn't wait for a response, which was a good thing because my brain had seized up again. She spread her legs and bent them to form a large letter M. She released my penis and waved down between her legs. \n\n\"Hunker down,\" she said. \"I'll show you.\" \n\nI maintained my grip on her cock as I knelt on the floor between her legs. She lifted up her balls and there was her vagina again: a glistening, vaguely floral pink opening nestled between a pair of fleshy, cheek-like labia. Unlike the porn models I'd seen, Yvonne didn't shave her privates. There were lines of fine sand-colored hair framing the puffy halves of her split. I could smell ocean salt, sweat and musk. My mouth watered. \n\n\"This is my clit,\" she said, touching a little knob at the top of her slit. It was no bigger than a cherry pit. A furrow of skin partially hooded it, and tapered back up into the seam of her nut-sack. \"It's really sensitive. It's almost too tender to touch unless I'm really turned on. Like now.\" \n\nShe spread her labia wide with two fingers. I could see a tiny puckered opening at the midpoint of her vulva, and a larger one with rudimentary labia below it. The interior flesh was flushed a deeper, ruddier pink. \n\nShe pointed to the tinier, upper opening. \"This is my urethra,\" she said. \"And down here...\" she pushed a finger into her lower aperture. \"That's my vagina. That's what all the fuss is about.\" \n\nShe pumped her finger in and out a few times and then withdrew it. It came out glistening. Her juice looked creamy, like watery lotion. She then placed the pads of two fingers on her clitoral hood and began rubbing in circles again. Now I could see how the motion pulled the little foreskin back and forth over her tiny glans. \n\nJust like I do it, I marvelled. \n\nI resumed stroking her penis. I studied the way my pulling action made the mouth of her vagina elongate and squash, alternately. I could see her fluids form on the inner lips of her cleft. \n\n\"That feels good,\" she sighed. \"Marty...would you do me a favour?\" \n\n\"S-sure,\" I answered. \n\n\"Would you put a finger inside me?\" \n\nBrainlock again. \"Uh...in-inside?\" I hoped she meant what I thought she meant. My thoughts were so jumbled then, dazed by what was happening, and even more agitated by all the things I desperately wanted to happen, that my head just kept on getting jammed up. \n\n\"In my coochie. Just to the second knuckle.\" \n\n\"Uh...okay.\" \n\nI gingerly touched her petals. They felt soft and rubbery-firm. Greatly daring, I pressed at the opening at the bottom of her vulva. My finger slipped into a snug, spongy tunnel lubricated with thick, warm goo. \n\nMy finger went in about halfway, and Yvonne said, \"That's it. Now curl your finger up, like this.\" She crooked her finger in a beckoning gesture. I did, and she sucked in a breath. \n\n\"That's it. That's the spot. Just keep rubbing there. Gentle little circles.\" \n\nI obeyed, and she closed her eyes. \"That's really good, Marty,\" she said. \n\nSomething occurred to me, and I cleared my throat. \n\n\"Isn't there supposed to be a...membrane or something?\" I asked timidly.\n\n\"Yeah,\" she said dreamily. \"Mine's long gone, though. Took care of that ages ago with my toys.\" \n\nI shut up and concentrated on pleasing her. Her prick lubricated heavily, much more than mine. It throbbed in my grip, and kept chugging out all this clear, slippery sap. It smelled sweeter than mine did, too. My hand made squishy noises as it slipped up and down. My own penis was so rigid and roused it bobbed in place like a struck tuning fork. \n\nAt school I'd heard a lot of locker-room tripe about girls who were groaners or screamers. Yvonne wasn't either of those. She was silent aside from her heavy breathing and the odd whispered instruction: \"Jack it a little faster.\" \"Press a little harder.\" \"Put two fingers inside now.\" \"Move them in and out a little.\" She also never failed to tell me when I was doing it right: \"Ohhh, that's good, keep doing that...\" Mostly she just panted and bit her lip. \n\nHer vagina got very juicy. The two fingers I had pumping in her were coated with her buttery fluids. I saw the little telltale tremors in her thighs, and the way her breathing picked up. She rubbed her clitoris faster and faster, and our hands kept bumping. Her nipples stuck up like half-inch nails. \n\n\"Faster, Marty, faster,\" she grunted between her teeth. \"Ohhh yeah, almost, almost...\" \n\nI did as she asked. I was anxious to see her come again. \n\nWhat she did next astonished me. She licked the index finger of her free hand, and then reached under herself and slipped it right up her asshole. I could feel it enter her as well as see it. \n\nShe drew several short, gasping breaths; her chest heaved, and her tummy worked in and out. The finger up her ass was wiggling like crazy. She rubbed her clitoris in frantic circles. Her vagina began contracting tightly around my fingers, and this time I could feel her orgasm rise up through her penis. It swelled up, just like before, and when the explosion came, her breath escaped in a sharp, wordless exhalation. \n\nI could feel the rush of her semen through her member as she ejaculated in long, high-flying streams. It slopped down all over my face and Yvonne's hips. My jaw hung slack and I found myself with a mouthful of her thick, salty-sweet jism. It was all over my cheeks and forehead, too. I swallowed and extended my tongue for more without thinking. \n\nHer whole body quivered. \"Oooooh,\" she said. \"Oooooh.\" \n\nThe jets tapered off and her thick, strong-smelling cum oozed over my knuckles. I licked my lips and tasted more semen. I had the strongest urge to lick her cock, just lap up all that sweet seepage, and maybe even place her cock in my mouth to suck out the remainder. I didn't know if that would upset her. Dazed as I was at witnessing this phenomenal orgasm up close, I was still too timid to dare. I just kept squeezing and stroking her penis until I'd milked out all of her load.\n\n\"Oooh, take your fingers out, Marty,\" she panted. \"Oooh, I get so sensitive after I come.\" \n\nI pulled two dripping fingers out of her vagina. I put them in my mouth and sucked. Her syrup was warm and pungent. It reminded me of the one time my family had lobsters (my Dad had won a contest), only Yvonne was both sweeter and tangier than lobster meat. \n\n\"Come up here, Marty,\" she said. She patted her chest, just below her breasts. \"It's your turn. Straddle me.\" \n\nI stood up and planted a knee on either side of her rib cage. My cock was bobbing in anticipation and her skin was warm and sticky under my thighs. She reached up and squeezed my nipples. I gasped, and almost came from that alone. She ran her hands down my sides and grasped my penis with both hands. They were slippery with sperm. She squeezed hard, and her fingers squelched on me. \n\n\"Hump my fists, Marty,\" she whispered. \"Move your hips.\" \n\nI moved back and forth. She worked her wrists and wrung my cock as it slipped through her two-handed grip. My eyes rolled; her little hands felt better on me than mine ever did. I moaned out loud. \n\n\"Do you like that?\" she asked. Her gaze darted from my freakishly engorged penis pushing through her glistening fists, up to my eyes, and then back again. \n\n\"I love it,\" I moaned. I sounded like I was in pain. In a way, I was. My cock ached, and my testicles had drawn up and swollen to an agonizing size. They felt like soccer balls. But I was also in ecstasy, the most profound pleasure of my young life. I kept on moaning helplessly, and I realized I was the groaner, not Yvonne. My pre-cum flowed like a leaky tap, making Yvonne's hands even more slick, and clear droplets fell onto Yvonne's chest. Her hands made wet sucking sounds around my cock. \n\nI felt her breasts. I couldn't stop myself. They were the first girls' breasts I'd ever touched, and each soft conical mound fit my palm perfectly. I squeezed, and their yielding springiness made my mind flutter. Yvonne looked at my groping, kneading hands, and then up at my face, smiling. She nodded her approval. \n\nI fondled her breasts to my heart's content. I traced the perimeter of each deep-pink areola, and watched them crinkle up as her nipples extended. They swelled up really fat, too, like grapes. She pursed her lips as I took each protruding nubbin between thumb and forefinger and pinched gently. \n\n\"Pull on them,\" she murmured. \"Not too hard.\" \n\nI did as she asked, and her cheeks bloomed pink again, in response. One hand left my shaft to cup and squeeze my balls. \"Are you ready to come again, Marty?\" \n\n\"Oh God, yes,\" I whimpered. \n\n\"Good,\" she murmured. The index finger of her ball-squeezing hand extended to stroke my perineum again. That moist finger didn't stop there, however -- it slipped all the way back to my anus, and circled it with tantalizing delicacy. Then Yvonne pushed, firmly, and her wet finger slid inside me with exquisite friction. \n\nThe hairs on the nape of my neck stood up. I gasped. I never dreamed my rectum could be a source of such pleasure. Yvonne wiggled her finger inside me, just like I had done to her and my climax rose with sweet, inexorable slowness.\n\nMy body jerked like a puppet on a string, humping both of Yvonne's hands. I let out a high-pitched yelp and my jism began squirting all over Yvonne's face. It flew all over her cheeks and nose and open mouth. Her hand pumped and squeezed, encouraging me to ejaculate more copiously. \n\nSeveral timeless moments later, Yvonne gave me a final squeeze and a shake to dislodge the last hanging thread of sperm. She caught it on her tongue. She licked her lips and smacked them with a look of great satisfaction. Her finger slipped out of my asshole; she put it in her mouth and sucked it. She looked like one of the cum-covered porn queens in Assgasm. No -- she looked better. My foamy goop coated the right lens of her glasses. She removed and wiped them with a tissue. \n\nShe put her glasses back on and looked up at me with great fondness. \"Did you enjoy that?\" she asked softly. \n\n\"I loved that,\" I sighed. \n\nMy cock drooped in her fist. It didn't shrink, which surprised me, but rather just relaxed slightly at its full length. I looked at her face and her cum-splattered lips compelled me. I lay down on top of her, and she spread her legs so I could nestle between them. I was careful to take my weight on my elbows. Her penis was huge and hot and gluey against my belly. \n\nShe watched my face descend, and opened her mouth as my lips pressed down on hers. This kiss was more languorous than the previous one; still electric, but at a different voltage. Her lips were creamy with jism and her tongue was soft and salty in my mouth. I sucked it, and she sucked mine, too. \n\nBefore I knew what I was doing, I had licked her face clean. I licked her neck and lapped up the pool of semen in the hollow of her throat. Her arms wrapped around me and she pulled me down in a firm hug. Her warm, slick naked body against mine set all my synapses crackling again. \n\nI slid lower, and began licking the upper slopes of her breasts. Yvonne stroked my back, and I took this as encouragement. I went down and began sucking those big, protuberant nipples. \n\nAs I nursed, I groaned like a pig at the trough while Yvonne just sighed. She played with my hair while I suckled and tugged her stiff pegs with my lips. \n\n\"Marty,\" she said. \"Before we go any further...I really want to take a shower.\" \n\n~~~ \n\nHer shower was almost like a glassed-in room, it was so big. You could even sit down in it -- a tile bench grew from the wall facing the showerhead. We got under the spray and soaped each other up. Yvonne had this slick, sensual body wash, and I got chills, even under that steaming-hot shower, from the feel of her hands slipping all over me, and mine over her. I still wasn't used to this; the novelty of having implicit permission to touch a girl all over had my head floating on starry clouds. My dick kept on brushing the wet skin of her tummy, and rolling over her hip. My erection soon returned to its full ferocity. So did hers. It kept bumping me and painting circles of pre-cum on my skin. She took hold of my penis again, and I hers, and we kissed under the drumming stream. I'd never felt so happy. \n\n\"Here,\" she said. \"Turn around.\" \n\nI obediently turned my back to her and she pressed up against me. Her wet soapy penis slipped between my thighs. It slid along my balls and rubbed my own cock deliciously as it emerged in front. I stared down at it. It was like I'd grown two cocks. Her penis was so long, it extended two-thirds of the way up my shaft before her hips bottomed out and her pubic hair tickled my butt. \n\nShe hugged me from behind. I felt her sigh into my back. Her hands slid up to fondle my nipples, and then down to grasp my cock. \n\n\"Squeeze your legs together,\" she murmured. \"Make it tight.\" \n\nI did, and she began sliding her cock back and forth. It was an amazing sight to see that enormous shaft appear and disappear below mine. Yvonne stroked my penis, and with a sudden inspiration, I reached down and made a tunnel of my soapy fists. Yvonne's penis passed through them as she fucked my thighs. \n\nI loved feeling her cock. I loved its pulsating heat and solidity, the mobile fleshin \n\nI loved feeling her cock. I loved its pulsating heat and solidity, the mobile fleshiness of her foreskin, and the plum-like firmness and elasticity of her bell-shaped dome. I listened to her heavy breathing and knew I was making her feel good. I was good at making Yvonne feel good, I realized, and felt a ridiculous surge of pride. I began thinking of all the other ways I could make her feel good. My excitement mounted. I knew, with a shivery certainty, that I was going to do a lot more with Yvonne's body than just feel her penis. \n\nI turned to face her. Her eyes were so big and blue and vulnerable as they looked up at me. I could see her pulse galloping in her throat. I cupped her face and kissed her. She kissed me back. It was like we were communing somehow. I could have done that for hours, but Yvonne's body was like an amusement park. I wanted to go on more of the rides. \n\nI bent and sucked those fat nipples again, one after the other. Her hands cradled my head and stroked my wet hair. Our penises crossed swords below. She did something with her hips, and hers slowly revolved around mine. \n\nI sank to my knees, kissing her belly as I went. Her penis slid along my soap-slippery chest and then my neck. I took hold of it again, and held it up into the shower spray to rinse away the suds. I rested back on my heels, and Yvonne's penis looked me right in the face. I could hear her loud and unsteady breathing even over the rushing of the shower. ",
        "I gripped her penis with both fists and pulled her foreskin back and forth. Her length really astounded me; not counting her head, there was still another full hand's worth of shaft left over. I squeezed as I pulled up, and just as I intended, a clear drop of her precious fluid welled up in her urethra. I looked up at her, and there was nothing but feverish anticipation in her face. I slid out my tongue and licked up the drop. \n\nHer eyes doubled in size. \"Oh,\" she said, almost as though she were about to weep. I kissed the tip of her blunt, rounded snout and licked her urethra again. I flicked its tiny lips and gently insinuated my tongue. More of her delicious juice flowed and I slurped it up. Her eyes begged me to do more, go further.\n\nI pursed my lips against her tip and pushed my head down. \n\n\"Oh wow,\" she moaned. \n\nYvonne's penis was warm and meaty and delicious in my mouth. I sucked her in, until my lips met my topmost hand. Then I pulled back, sucking hard, and felt a giddy surge of glee at her gasp. \n\nI began moving my head back and forth. When just the tip was in my mouth, I slapped my tongue all over her bulb. As I moved down, and her shaft filled my mouth, I wiggled it against the underside. All the while I kept up a steady suction. \n\nI loved sucking her cock. I loved pleasuring her. I loved the taste of her preseminal ooze, and when I did something she particularly liked, I would be rewarded with a stronger flow. \n\nHer hands cupped my head. She encouraged my back-and-forth movements with a gentle pressure. Her face was apple-red, and when I began stroking her with both hands in tandem with my mouth, that telltale heavy breathing began again. \n\nHer penis grew bigger and stiffer and more excited. I let my lower hand drift down to cup and fondle her balls and I found them pulled up tight against her base. They had swollen up like oranges. I squeezed, and felt the moisture from her vagina soaking them. I fondled those tight, engorged nuts for awhile and then groped behind them. Her arousal had enlarged the ridge from her sac to her clitoris; I easily followed it with my finger, and found her clit like a hard little gumball inside its hood. \n\nI played with the soft folds of her lips, and her vulva was dripping wet. I eased my index finger inside her again and let my thumb rest on her clit. Goose bumps popped up all over her thighs and tummy and shivers raced through her. \n\nI'd never been very co-ordinated, but somehow I just fell into a groove; my mouth went up and down Yvonne's cock along with my left hand, while my right played with her vagina. I even managed to maintain a steady rhythm. \n\nHer balls rested heavily on my wrist. I could feel them shifting about as I worked my thumb and forefinger on (and in) Yvonne. \n\nI took my mouth off her penis and ducked lower to suck her balls. I took each one into my mouth and tongue-basted them with my saliva. She was so clean, there was no sweaty saltiness; they just tasted like skin, with a strong tang of her vagina. I licked and pulled each one in my mouth, until that distinctive woman-taste was gone. \n\nI wanted more. I wanted to see her vagina up close, lick it and play with it. Cunnilingus, like mutual masturbation and cocksucking, was one of those shadowy practices I'd heard about, but never thought I would ever experience. That was before today. \n\nI couldn't do it from my current posture; Yvonne was too short. I couldn't get my head in under there. \n\n\"Yvonne,\" I croaked. \"Could you...turn around?\" \n\nShe nodded, and turned unsteadily. Her round, plump ass, stippled with glittering water droplets, was like a fantasy from the pages of Assgasm brought to life. It was all I could do not to seize my cock and beat off to it. \n\nI put my palms on her lower back and pushed gently. She got the message, and bent over. She braced her hands on the shower bench and shifted her heels into a wider-legged stance. \n\nI just stared for a few moments. Her lips were parted, and her pink interior blushed nearly red. Her balls hugged her mound, and the tissues merging them into her labia were pulled so tight they were almost translucent. \n\nI ran my hands over her buttocks. I sank my fingers in and fondled her thoroughly. She was so soft and squeezable. I spread her cheeks and watched her vagina open. The wrinkled pink closure of her anus dilated a little, too. \n\nI lapped her balls again like they were big scoops of ice cream. I took each into my mouth for a long, loving suck. Then I licked the seam up to her clitoris. Yvonne twitched. \n\nI bore in mind all she'd taught me about touching her clitoris and ran my tongue in circles round and round her sensitive little button. I kept the pressure light at first. When she began pushing back, I licked a little harder. \n\nI moved my hands down from her bum and spread her labia apart with both hands. Her clitoris popped right out of its hood when I did that, and when my tongue began making more direct contact I saw a quake go through Yvonne's thighs. Her juices flowed, wetting my face, and I sucked up as much as I could. Her scent was in my nostrils, meaty and intimate. \n\nI dragged my tongue up through her sopping trench, all the way up to her anus. I licked her there, prying and teasing at her pucker. It was as fun and nasty as it looked in Assgasm. \n\n\"Oh God, Marty,\" she sobbed. \n\nHer voice struck a chord in me. I was vividly reminded of my own arousal. My prick had never felt so huge and hard. I hadn't given it a single stroke since I got on my knees, and it was pounding with lust. \n\nI slipped a finger into Yvonne's tight, cushiony pussy, and it disappeared slippery-quick. I felt her inner muscles squeezing and churning around my finger, and suddenly I knew exactly what to do next. A weird sense of calm came over me. It was like everything had clicked into a preordained groove. \n\nI gave her vagina one last long lick from her clit up to her anus. I stood and grasped the scoop of Yvonne's waist with one hand. With the other, I grasped my prick to aim it. \n\nI rubbed my head against her balls, lifting and rolling each one around. I waggled my haft and made them bounce. Yvonne shivered again, and stared at me over her shoulder with wide eyes. She knew what I was going to do, but said nothing. And I knew she would say nothing, make no protest whatsoever. I didn't know how I knew, but I knew this was going to happen, and that she wanted it even more than I did.\n\nI pulled my cock up to her clitoris and rubbed my head around it. I could see Yvonne's knees shaking below. Her teeth were sunk so deeply in her full lower lip I half expected to see blood. \n\nI lifted my cock two inches higher and rolled it into her soft, rubbery lips. I felt it catch in the warmth of her socket. I paused and looked into Yvonne's eyes, and they mutely begged me to proceed. With another flash of that unnatural confidence, I pushed, and my penis sank out of sight into the wettest, snuggest, most wonderful place it had ever been. \n\nYvonne's eyes snapped shut and her mouth dropped open. Her lips had never looked so ripe or kissable. She opened up to me slowly; twice I had to stop because she had closed up tight as a fist and I didn't want to force it or hurt her. It seemed to take forever for those six or so inches to enter her. Then my balls came to rest against hers, and my sense of power and mastery was complete. \n\nI pulled out to my crown and slid back inside. As easily as that, we were doing it. The friction, heat and softness were delicious. I pumped, and her soft, breathy whimpers delighted me. Yvonne's slack-jawed beat-off face reappeared, only now with an urgent, nostril-flaring intensity, and I realized this was Yvonne's fuck-face. I was mesmerized. \n\nThen, the full significance of what was happening penetrated my brain, and all my preternatural self-assurance evaporated. All of a sudden, I was a young man getting laid for the first time, and I had no idea what I was doing. In a panic, I gripped Yvonne's waist with both hands to keep myself from falling over. Her hips moved, pushing back at me, and the next thing I knew I was putting the meat to her with wild, zero-finesse sawing. \n\n\"Oh Jesus,\" I gasped. \"Yvonne...Jesus!\" \n\nHer vagina squeezed and tugged at me. I was moaning out loud, and she was moaning too, and both our voices resonated in the shower stall. My hips were slapping her bottom with loud, wet claps. Water flew everywhere. \n\nWeird bleating noises burst from my lungs as I felt myself begin to come. The feeling built until I let out a crazed grunt and exploded inside her. It was the most beautiful climax of my life, so intense it was almost painful. I emitted long moans as I shot long spurts into Yvonne. \n\n\"Ohhhh...ohhhh....\" \n\n\"Yes, Marty, yes,\" she cried. \n\nI was so turned on, so alive in that moment that my erection barely subsided. My mind did clear somewhat as my orgasm ebbed, and I realized the full implications of what we just did. \n\n\"Oh Jesus, Yvonne,\" I panted. \"I'm sorry...I...condoms...\" \n\nShe made a dismissive gesture. \"Don't...worry...about it.\" She was breathing pretty heavily herself. \"My mother's got like...morning after pills...all that kind of stuff.\" \n\nRelief flooded through me almost like a second orgasm. I sighed, and Yvonne sighed with me. \n\n\"First time?\" she asked. \n\n\"Yes.\" I didn't know what else to say. \n\n\"Mine too. I really liked...feeling you go off inside of me. That was just...awesome.\" \n\nShe hadn't come with me. I had come way too fast for that. I was about to apologize again, when I realized I knew how to remedy that situation. My suave control was back. \n\nI pulled out of her, and watched the cream well up from her swollen, reddened vagina. I knelt down and resumed licking her. I leisurely sucked out my warm frothy offering. Her stifled little cries were music to my ears. \n\nI cleaned her out, and then sat back. Yvonne straightened and turned to face me. Her penis swung with her and bounced about with its own momentum. The sight of it made me salivate. I swooped down and took it back in my mouth like I'd never stopped sucking her. My hands resumed their duties on her shaft and cleft. She stiffened, and then relaxed into the stimulation with another of those sexy whimpers. \n\nI studied her face as I happily slurped and stroked and fingered away. Her fuck-face shifted from anguish to joy and back again. I glowed; I'd never felt so useful and needed. \n\nWhen her eyes closed and her face puckered up like she was going to cry, I knew she was almost there. Her fingers gripped my head tightly, and her whole body tensed up. Galvanized, I sucked harder and worked my hands faster. \n\n\"Marty...oh Marty...\" Her face strained as tight as her voice, but then it just relaxed into an open-mouthed expression of transcendental bliss. She was so beautiful, it transfixed me. When her cock began shooting off, it took me by surprise. \n\nHer penis rippled as her sperm blasted through it. Warm, delicious cum hosed into my mouth. Her vagina gripped and released my buried finger. I wasn't ready. \n\n\"Marteeee...\" \n\nWhile Yvonne convulsed in divine pleasure, I spluttered, gagged and choked my way through the first spurts. Some of her cum went up the wrong way and I began snorting it out my nose; my sinuses burned. There was too much of it. My eyes watered and I damn near panicked. \n\nBut then, thank God, I caught her rhythm and began swallowing in time with her surges. I got a handle on it. By the time her fusillade began to diminish, I was actually able to enjoy it. I grew to love the fact that she came so abundantly, and gulped down her sperm with horny gusto. Even when her hips jerked involuntarily and the head of her penis entered my throat, I didn't freak out. She sent two or three shots straight down my gullet before I pulled back, regained control, and sucked her on through to the end of her orgasm. \n\nHer penis softened as it emptied. I sucked more gently and nursed out the last drops. Like before, it didn't shrink; it just relaxed somewhat. After she stopped shooting, it became a thick, pliant lug of flesh in my mouth. I wondered how many times Yvonne could come in a day before properly shrivelling. I found I liked having her soft cock in my mouth as much as her hard-on.\n\nHer legs got pretty shaky after she was done, so I helped her to the bench. I put my face under the shower and snorted my nasal passages clear (I made sure I kept my back to her for that!), rinsed, and then sat cross-legged on the tile floor at her feet. I rested my head on her knee. Her hand wandered to my head again and patted and played with my hair. She seemed to like doing that a lot. \n\nShe was really out of it, panting and glassy-eyed. \n\n\"Wow, Marty,\" she said. \"Just...wow.\" \n\n\"Was that your first...\" I couldn't seem to shake my odd mental block on talking dirty in front of a girl. I cleared my throat. \"...first blowjob, too?\" \n\n\"Yeah.\" She shook her head and sighed. \"I was always after my brothers for blowjobs, but they were always too hung up on the whole...incest thing.\" She lifted one shoulder in a languid shrug. \"I guess they thought jacking off together was fun enough. And it was, I guess.\" She touched my cheek. \"Thank you. That was...wonderful.\" \n\n\"You're welcome, Yvonne. I liked doing it.\" And that was the truth. I had found bringing Yvonne to orgasm so satisfying that I hadn't noticed how rigid and anxious my own cock had become. Incredibly, I was lusty and raring to go again. Yvonne noticed. \n\n\"Stand up, Marty.\" \n\nThat sense of calm inevitability descended upon me again. I stood, and watched as Yvonne gripped my penis and lowered her head. She licked my helmet and took me inside. \n\nThe warmth of her mouth, the suction and silky caresses of her tongue felt so good they sent shivers down my arms and lower back. The sight of her face, with her lips pursed around my shaft and her eyes closed in peaceful concentration, excited me terribly. \n\nHer lips slid up and down, and she cupped and fondled my butt cheeks as her she sucked. I knew what was coming when she removed her mouth briefly to suck on her left index finger. My cock then went back into her mouth and her moistened finger slipped up my butthole. \n\nI was glad that I had already come so many times that afternoon. If I hadn't, I would have come immediately from what Yvonne was doing to me. As it was, I was in ecstasy, and it kept going on and on with no orgasm to end it. Yvonne put two fingers up my ass, and the pleasure increased. \n\nThat sense of knowing what to do grew stronger as well. I gently disengaged Yvonne's head from my groin and turned around. Yvonne attacked my ass with a moan. She licked and kissed and even bit it all over. She spread my cheeks with both hands and there was a pause in which I imagined her feasting her eyes on my exposed, winking anus. Then she buried her face between my cheeks and her tongue pierced me. The sensation of her licking my asshole was electric; I twitched, and moaned with joy. Without thinking, I bent over to give her greater access. Her tongue swirled and wiggled and slid in and out. \n\nLooking between my legs at her, I noticed her penis was up again. I marvelled. For such a demure, sweet sort of girl, Yvonne was as randy as a billygoat. \n\nShe licked down to my balls and sucked them again. Her fingers went back up my ass. God, it felt good. \n\nWith a rush of that same calm certainty, I crouched down on the tiles on all fours. I'd seen this position many times in Assgasm. To make sure there was no confusion, I lowered my chest to the floor and reached back with both hands to help her spread my buttocks. \n\n\"Marty...?\" Her voice was an anxious moan. \n\n\"Go ahead, Yvonne,\" I answered, and damned if my voice wasn't full of that same calm confidence. \n\n\"Let me...I have some lube...\" \n\nI heard movement, and the shower turned off abruptly. Then came the sound of Yvonne rummaging amongst the shower shelves. There was the popping sound of a cap releasing, and then a stream of cool wetness hit my backside. I smelled blueberries again. \n\nYvonne spread the lubricant all over my cheeks and then reinserted her two fingers. She put a third one in, and I grunted softly. She corkscrewed them in and out, and I closed my eyes. The stuff was super-slick, and made the sensation of her fingers in me delicious. \n\n\"Marty...can you wait just a minute?\" \n\n\"Sure,\" I answered. \n\nYvonne disappeared again. In less than a minute she was back. More lubricant drizzled into my buttcrack, and then something cool and plastic pressed at my hole. \n\n\"It's one of my butt plugs,\" she said softly. \"I want to make sure you're ready.\" \n\nI nodded my assent, and Yvonne easily pushed the odd-shaped bullet of latex inside me. I grunted. When it was fully inserted, she turned it in slow circles. I sighed. \n\n\"That feels really good.\" \n\n\"I'm glad.\" I could hear the smile in her voice. \n\nShe pulled it out and I felt another one, a larger one at my back door. \"This is the biggest one I have.\" \n\nI stretched just fine to take it, and she just left it inside me for a while. She would stroke my back, and from time to time would reach under me to squeeze my penis, as if to check if I was still erect. I was. \n\nShe was so patient. When she finally pulled it out, there was just the faintest twinge of pain as my ring stretched over the widest point. \n\n\"You okay?\" She asked. \n\nI nodded with my cheek against the cool wet tile floor. \"Good to go, Yvonne.\"\n\nI heard her sent the plug aside, and her calves brushed mine as she settled in behind me and put her penis to my hole. Her bulb felt as big as a tangerine, and hot as a roasting marshmallow. She had lubricated it as well. The press of it felt like a sloppy kiss. \n\nWith the exception of my penis, I was soft and relaxed all over. At the same time, I was excited and eager to experience my first ass-fuck. I pushed back, and winced as her glans penetrated me, but it didn't daunt me. I knew something good was waiting for me on the other side of whatever discomfort there might be. \n\nI heard Yvonne draw in a sharp breath as the feel of my gripping rear passage registered. She applied a gentle pressure, and the nerves in my rear tunnel sang for joy as Yvonne slipped her meat into me. \n\n\"Oh God,\" I gasped. \"Ohhhhhh....\" \n\nJust like when I entered her, it took a while to do it fully. I felt a few more twinges from time to time and had to make her stop a minute before continuing. I never balked, though; the intense pleasure of my rectum slowly engulfing that massive fleshy post drove the breath from my body. \n\n\"That feels...really good...\" Yvonne choked. I could only groan in agreement. \n\nShe began working her hips back and forth. \n\nOh God now she's fucking me, my wobbly brain thought. She's fucking my ass and oh God it feels good. How did this happen? Two hours ago I was alone! \n\nYvonne panted as she buggered me. I was much noisier: I groaned and grunted and gasped and howled. That endless cock turned me inside-out; it was the most overwhelming sensation I'd ever experienced. Her penis pushed and pulled through the well-moistened grip of my asshole with a wet slurping sound. I pushed my hips back to force it deeper inside me. I loved it. \n\nShe grasped my prick and jacked me off at a frantic pace. Her hips quickened to match it. She had bent over me to do it, and I felt her breath and her big nipples brushing my back. \n\n\"Oh yeah,\" I moaned. \"Oh that's good. Do it nice and fast.\" \n\nYvonne began whimpering again, and the thrusts of her pole became more erratic. I had a sudden brainstorm and began tightening my rectal muscles in time with her thrusts to make the in-stroke more of a squeeze. \n\n\"Oh God, Marty\" she panted, sounding like she was in pain again. I could imagine her fuck-face above my shoulder blades, all open-mouthed and straining. \"That's...that's...I'm gonna come!\" ",
        "She gave three or four hard shoves, and her penis pulsed in my tight clasp. Her breath escaped in a barely-vocalized \"ahhhhhh,\" and her penis began flooding my bowels with hot fluid. \n\nHer hand on my cock never faltered. I came, and my muscles contracted so strongly the geyser of Yvonne's sperm was nearly stifled. I could feel the spurts fighting through my tightness. \n\n\"Uhhhhhh,\" I groaned. \"Uhhhhh...\" \n\nShe filled me to capacity and beyond. When she pulled her cork out of me, her sperm flowed out like an opened beer keg. I moaned again, softly, at the feeling. I closed my eyes and luxuriated in it. \n\n\"Uh-oh,\" her voice came to me from a distance. \"Got poop on my thing.\" She didn't sound terribly upset. She sounded tired and happy. The shower restarted and I heard scrubbing sounds. Then a warm washcloth rubbed my sore and well-used asshole. She removed the washcloth and pressed her lips between my cheeks in a brief, fond kiss. \n\nI somehow lumbered to my feet and we clumsily embraced on rubber legs. Then we used up most of Yvonne's body wash cleaning the rest of our sweaty, sex-pungent bodies. \n\n~~~ \n\nYvonne put on a robe to help me collect my long-dry clothes from the dryer. Her penis, I noticed, had finally softened to half its erect size, and swung about, limp and content. She saw me to the door and we kissed goodbye like lovers. \n\n\"I thought I was gonna be lonely out here,\" she said, running her fingers through my freshly-shampooed hair. \"It's been really nice to meet you, Marty.\" \n\nI grinned goofily. \"You too, Yvonne.\" I turned to go, and paused. \n\n\"What's up?\" she asked me. \n\n\"It's just...I don't even know your last name.\" I said. \"Mine's Wozniak.\" \n\nYvonne smiled at me. \"Loving,\" she said. \"Yvonne Loving.\" \n\n~~~ \n\nI walked home on a cloud that day. For the rest of that summer, Yvonne and I would meet up in the woods at that big log. Its thick mossy blanket served us well as a mattress. If Yvonne's parents weren't around, we would play at her house. After, we would take long showers together. When we weren't screwing like minks, we dated and hung out like normal teenagers. We found we got along well even when we weren't having sex. Talking to Yvonne, putting my thoughts into words, I discovered an equanimity within myself I never knew before. I calmed down and stopped caring about staying below everyone else's radar. I stopped caring what anyone else thought, period, including my parents. \n\nOddly, even though we could have the most outrageous sex imaginable whenever we wanted (and often did), one of our favorite things was just hanging out in Yvonne's room, reading her porn magazines and jacking off together. Sometimes we'd move on to other kinds of sex, but often we'd just masturbate each other. We still do it to this day. I guess we like re-living the day we met. \n\nNaturally, I couldn't keep the fact that I now had a girlfriend from my parents. I won't bore you with the arguments that ensued, but suffice to say they didn't much care for the new me. I didn't give a shit. I had found an unflappable core and they couldn't sway it. I sometimes smile when I think about the heart attacks they would have if they knew about Yvonne's penis.\n\nI wound up moving out just before the start of my last year in high school. I moved into Randy's old room at Yvonne's house. Mr. and Mrs. Loving turned out to be as cool as advertised by their daughter. I kept my job in town -- I insisted on paying the Lovings at least a nominal rent -- and completed my senior courses via correspondence. With Yvonne's tutoring, I pulled straight A's. \n\nYvonne and I still screw like minks and once my future is secured, I intend to marry her. Loving Yvonne is kinkier, more depraved, and at the same time more wholesome and pure than any relationship I ever imagined for myself. I plan on enjoying her for as long as she'll have me."
    ],
    "authorname": "jokermon797",
    "tags": [
        "futa",
        "futanari",
        "futa on male",
        "male on futa",
        "masturbation",
        "neighbor"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/loving-yvonne"
}