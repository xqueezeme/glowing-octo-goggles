{
    "title": "The Twelve Tables Ch. 18",
    "pages": [
        "Authors Note: This chapter is set out differently but I hope you enjoy it none-the-less. Thank you to everyone who left comments or sent me feedback about previous chapters of this story. Thank you also to Margaret who proofread for me. ~ellie\n\n*****\n\n \"Baby Diary \u2013 Week 20 (5 months) \u2013 The Donati Triplets.\n\nToday was check-up day. I am getting bigger every day now, and I think and have taken to wearing Josh's wardrobe more often than mine. He has told me to go shopping with Andie and buy a whole new maternity wardrobe, but I feel like this is just another thing he says to keep me from bothering him. He used to love seeing me wearing his clothes now I feel like it only annoys him, particularly when he can't find a particular shirt.\n\nThank goodness for work and the fabulous support team I have down there. I suspect Dante and Lio have been giving Darius instructions on taking more of the workload from me. The archivists who have arrived from other tables are eager to get their volumes progressing and with the additional staff we have added, my original team seem to be able to manage things quite well. As much as I would like more input, it's nice to know the project will carry on should these babies decide to make my life any more difficult.\n\nI feel them kicking all the time now and think in those quiet times when I wake at night that I can almost tell them apart. I wish Josh would slow down enough to talk to me about names for our children, rather than the baby A, B, and C that they had been labelled on the ultrasound scan. They are around two hundred grams each at the moment, and I find myself looking at snacks of a similar weight and imagining a baby that small.\" \n\nSince waking up in the Battaglia hospital, Peri had hardly seen the side of Josh that had both frightened and attracted her during the early weeks of their relationship. She and her friends in the research department had nicknamed him the control freak but when their relationship had been almost torn apart by circumstances he had mellowed in his demands on her. In the time since returning from the farm gathering, however, she began to see that side of her husband more often as he worked hard to keep all of the projects in his life moving forward the way he wanted. \n\nWhen she saw him after long days at work and the house build he commanded and demanded rather than requested and discussed things with her. The stress and urgency of juggling her needs on top of the business and the house build showing in his demeanour and personality. He was still loving and kind in other ways, but she knew that this was no longer an equal partnership, and she was being put in her place as wife and mother while he began to make all the decisions that would affect their lives in the long term.\n\nPeri was at a loss for how to help him or make things easier for him, so she meekly accepted most of the demands he made of her without question. From time to time she questioned what he was doing or had asked of her, but she picked her battles and gave him the control over the majority of their lives that he seemed to need so desperately.\n\nAs her belly started to expand Josh became more careful in his use of her. He had asked very direct questions of both Anna and Pete about their sexual activity particularly regarding her breasts and when she would start lactating. Peri had blushed furiously throughout the questions, but the doctors hadn't batted an eyelid when they had answered in great detail. To his great delight her breasts grew along with her belly and by twenty weeks she already felt huge and was starting to have difficulty getting up and down from low chairs and the floor.\n\nThe doctors talked about her body's stress levels when engaging in rough sex, and while they did not put any specific limitations on their activities, there was an underlying warning about getting carried away. She could feel his frustration as he held back in his use of her and while he still bound her often his use of the crop and the painful pleasures he used to rain down on her body had diminished as did the force he used in applying them.\n\nAs the house build gained momentum, Josh came home later and later in the evening taking her quickly and roughly. She could still feel the intense passion he felt for her, but it seemed that sex had become another task on his agenda to be completed each day. She had tried to tease and provoke him in moments when he seemed more relaxed but even when he was home his phone rang constantly, and he seemed distracted. He was determined to create a perfect home for his wife and children and drove himself relentlessly. \n\nAfter the early arrival of his newest nephew Timo, Josh had become even more careful to shield Peri from the stresses of his work or the build of their dream home. Helping Peri through her anxiety of knowing their babies would be born early; he seemed to see the premature baby ward with new eyes. While he remained upbeat and positive when discussing baby Timo with Ben and Emily, he disliked the thought of his children being there. He became determined to cosset Peri in Dante's high rise apartment away from any of life's stresses until the babies demanded their entrance into the world. When Anna had brought up the idea of booking in a caesarean rather than waiting for labour, he had refused at first. \n\n\"Isn't it better for us to let them develop as long as possible within the womb?\" He had demanded abruptly.\n\n\"It is but we can make an educated guess about when that will be. Most triplets arrive between thirty-two and thirty-four weeks of gestation because they simply run out of room to grow,\" Anna explained. \"It could be less traumatic for the babies if we shoot for week thirty-three but we can wait for labour if that is what you both decide.\" Anna looked at Peri, who was listening to the conversation silently.\n\n\"I feel great,\" Peri said brightly. \"Is there a reason you think I mightn't make it longer than thirty-three weeks?\"\n\n\"Your babies take after their Papa,\" Pete said with a smile. \"They are growing well, and there is only so much room you can make for them before it starts to affect your health, Peri. You're carrying three not one, so you're going to be much bigger than Emily or Bianca got with their pregnancies.\" He looked at Josh then. \"We still have some time to decide so think about it until we meet again, okay?\"\n\n\"Okay,\" Josh agreed without consulting Peri. \"Is that it for this week?\" He asked abruptly coming to his feet.\n\n\"Everything seems to be going according to plan,\" Anna said and smiled at Peri. \"Your babies are about two hundred and fifty grams each right now, and your fundal height is over thirty centimetres, so your uterus is beginning to stretch to the full term length of a single pregnancy. You need to rest more often because these little ones are only going to demand more from you. They seem active on the scans, and you can feel then moving about, so all seems to be very normal for you and the babies. Have you got any questions?\"\n\n\"No, I will see you next week at the scan,\" Peri said standing up beside Josh. Every Wednesday she had an appointment to see Anna. On alternate weeks, she had a scan as well but this week was just a check-up. She took Josh's hand and farewelling Pete, they walked from the room.\n\n\"Did you want to see Timo before we leave the hospital?\" Peri asked as they walked toward the elevators.\n\n\"Yeah but just for a few minutes,\" Josh said his voice returning to the calmer one she knew so well. \"There's been a few issues with the build today so I will have to head out there straight away. Would you mind if I left you here and got D. to come pick you up?\" He asked watching carefully for her reaction.\n\n\"I can just catch a cab, I don't need an escort,\" Peri said lightly. \"You go and sort out what you need to.\"\n\n\"I'd feel better if I called D.,\" He said already fishing his phone out of his pocket. He made the call and organised for Dante to be there in an hour to pick her up.\n\n\"We're over halfway now,\" she said brightly trying to bring Josh's mind back to her. \"That's pretty exciting.\"\n\n\"Yeah, they'll be here before we know it. Let's hope this house is finished in time,\" he squeezed her hand. \n\n\"It will all work out, Josh. You don't have to work so hard. We have options if the house isn't finished in time,\" she said quietly.\n\n\"It will be finished,\" Josh said emphatically as they walked into the Neonatal Ward, despite his earlier words of doubt. \n\nTrue to his word Josh barely stayed for ten minutes before leaving again to head back to the house. Peri would have liked to go with him. She had only been back once since moving into the city again. He seemed to think it was too noisy, too dirty and too dangerous with all of the machinery or equipment they were using, he always had a reason not to take her. In the end, she gave up asking and consoled herself thinking of the wonderful surprise she would get when it was completed.\n\nIt seemed that where she was concerned, Josh expected Dante to act in his stead when held up at work or the build. Dante had begun constantly checking on her and eating meals with her at the apartment when Josh was running late. He was good company, and their friendship grew as they seemed to spend some of each evening together.\n\n*****\n\nJosh sped through the city peak hour traffic heading back out to the house. Peri had said they were over half way, but that was for a normal pregnancy. He felt the self-imposed pressure of wanting to provide everything his family needed weighing on him heavily. He didn't want to have to take the babies and Peri home to one of his brother's homes or his parents. Andie's home was certainly too small and not an option.\n\nTarsia had been a formidable force as she pulled together every contractor she knew and some she didn't. At times the small hill they were building the home on looked like an ants nest with all the workers coming and going and working towards the same goal of finishing this home.\n\nIt had been six weeks since they had returned from the farm and work had begun within days after Tarsia pulled strings to get the planning approval from Council sped through. His sole focus had been this house, and he was here as often as he was at work or home.\n\nBeing a semi-rural area, there were constant issues with access to town water, the power grid, and telecommunications access. Once again he relied heavily on Tarsia's expertise and connections as they waded their way through a mountain of red tape before the foundations of the new house could be poured. The inclusion of cellar had also held up work as weather played havoc with the schedule on top of the other issues.\n\nHe had started seeing progress in the last week, but he worried it was too little and too late to be able to make their deadline. He realised that most people didn't realise that Peri was at least a month further along than they had reported but they could feel his sense of urgency as he spoke about the shorter pregnancy triplets were afforded. Tarsia had tried to reason with him suggesting that should they come early they would need to spend some time in hospital before coming home, but the thought only made him more determined to do whatever it took to get the work done.\n\nJoseph had stepped in on a number of occasions to take his son aside and calm his mood. In truth, he was impressed with how Josh was handling the pressures of everything that was going on in his life. He had been a man of raging perfectionism when he had been a younger man, and it had served him well to maintain his families standing not only in the community and family but within the twelve tables themselves. His reputation preceded him in the years that followed, and he rarely had to rage over the failures of his people. He was undisputedly a leader to be reckoned with, and he could see the same qualities in his son.\n\nDespite his perfectionism and intolerance of hold-ups in the build, his reputation as a good family man went before Josh rather than the raging lunatic he had become so often recently. His honest and fair reputation gave him the respect of the people who now worked with and for him. Joseph added his influence and experience to the work site and would come for days at a time finding a farm with an airstrip close by and having a car housed there for his use.\n\nWith his father overseeing the house and working with Tarsia Josh threw himself into his business which he had been neglecting and he put in long days before heading back to the house to see the progress made each day before heading home. Wednesdays he tried to stay home after being at the hospital with Peri, but he found that invariably he was pulled back to the build for one issue or another.\n\nThere was another problem with a supplier when he got out to the build late one Friday afternoon, and he sat with Grant and Tarsia talking about the options he had to fill the void left by the failure of delivery. When they had worked it all out again, Joseph patted him on the shoulder and indicated they should walk. \n\n\"You've taken on a big task here,\" Joseph said without emotion. \"Even as a small boy, you would never want to do anything on a small scale. I remember you wanted me to buy you a Bobcat excavator to build a working volcano for a science project at boarding school. You were not happy with me when I said no,\" he chuckled.\n\n\"I wasn't that small, and it would have been the most epic science project ever,\" Josh chuckled remembering how disappointed he had been at the time.\n\n\"I expect it would have been. Just like this house will be the biggest and best of all the family homes,\" he continued to chuckle keeping the conversation light and easy. \"Rome wasn't built in a day, though and you cannot sustain the schedule you have set for yourself, if you do not take the time to recharge yourself by seeing to your own needs.\"\n\n\"I will rest when it's done,\" Josh said seriously.\n\n\"No, my son, you will be a father and have even greater responsibilities when it is done. Peri may be understanding of your absence now, but once she is out here away from your brothers and friends she will need you here to support her and the babies,\" Joseph advised. \n\n\"She will have all the help she needs, Mama is training some nannies for the job even as we speak,\" Josh said easily.\n\n\"Even with a full household staff this is a large house you have built her, and she will need some help and guidance in managing it and the staff while mothering your children. She did not grow up accustomed to such things, and while she is a clever girl, she suffers bouts of anxiety fed by insecurities,\" Joseph said gently reminding his son that his wife had flaws, albeit reasonable ones. \n\n\"Your mother would love to move in with you and Peri for a few months,\" he chuckled knowing that was not something any of his children would relish. Unchecked Antonia was a force of nature that swept everyone before. She liked things done a certain way, and she had no compunction turning her wrath on anyone who disagreed. If her daughters were princesses, then she was undoubtedly the queen.\n\n\"I can only move forward now and trust that she is every inch the woman I believe her to be,\" Josh said in return. \"I need to do this Papa, just as I need my company to thrive and my family to be happy and healthy.\"\n\n\"I would expect nothing less from you,\" Joseph clapped him on the back, \"but I am here to assert my authority and take you home for the weekend to relax and spend time with those who love you and need you to take some time relax.\" \n\n\"I can't leave Peri,\" Josh began to protest. \"Dante will bring her home tomorrow. it may be her last chance to visit us for a while and Pete has said she can fly at the moment under certain conditions.\"\n\n\"I have so much to do here,\" he protested weakly.\n\n\"And it will still be here on Monday. The world will not stop turning if you take some time to enjoy your wife and family. You can leave your car in the shed with mine, just follow me over to the airstrip.\"\n\n\"Papa I don't want Peri to risk flying or doing anything that could be a potential risk. Why don't you bring Mama to town? There is plenty of room, and we could have a family dinner while the three girls are in town. Izzy will be going back to Italy soon, so it's a good opportunity,\" Josh spoke with the same demanding tone born of exhaustion that he used with everyone recently making his father looked at him with a furrowed brow.\n\n\"You would do well to remember that you do not command me, Joshua Craig,\" Joseph used an authoritative tone and Josh blanched realising he had spoken too abruptly. \"I will accept your suggestion and leave my car here. I can travel into the city with you tonight. Angelo and Carlo can bring your mother and join us tomorrow.\" \n\n*****\n\n \"Baby Diary \u2013 Week 24 (6 months) \u2013 The Donati Triplets.\n\nI'm lying to myself of course, but it felt good to write six months in the title of this entry. I'm not sure who created the illusion that forty weeks of gestation could be divided evenly by nine. But labelling the months in four week lots makes me happier about how early they will arrive. If I continue to cheat this way I should be able to say I am eight months pregnant before they arrive. It's a small lie but for some reason, it makes me feel better about my size and how easily I become fatigued now.\n\nJosh seems never to be home now. It's as if he is being driven by some unseen demon and I am often asleep before he slides into bed with me. I know he does come home though because when one of my little angels wakes me in the middle of the night I feel him curled against my back. I worry that he is pushing himself too hard, so I am trying not to make too many demands on his time. He comes with me every Wednesday to the doctors and for a short time, he seems relaxed and happy as we sit and watch our three little angels fight for room as the move about inside me.\n\nThe angels are now around five hundred grams each, and my uterus continues to stretch to contain them, the fundal height is forty centres now, so it's not just the outward stretch they are forcing on me. I am rubbing cream into my belly daily to avoid stretch marks, but I think they are inevitable. I'm finding clothes are a difficult option and were we in our house in the country all by ourselves I may make Josh happy and just go without clothes all day every day, but I'm not so I am struggling along with ill-fitting clothes. Andie is doing her best to find me some decent work clothes, but I already look like I am nine months pregnant. The larger sizes don't seem to fit my shoulders or height and the clothes my size barely cover my bump. \n\nBridgette continues to be wonderful and in addition to looking after my diet and all of the supplements I have been given she has started altering the new larger clothes for me, so I am not as uncomfortable in them. I can't believe I ever worried about inviting her into our lives. She is amazingly good to me, and we have become friends in an odd way, and though she always treats me with the differential treatment, of an employer, she is loosening up a bit more when we speak and is finally calling me Peri. I know she will be equally wonderful to the babies when they arrive. I expect I will have to start interviewing nannies soon though I would like to think that Bridgette and I could manage without them.\" \n\nPeri put the laptop aside and picked up the large jar of vitamin E cream. She lay on her back on the wide leather couch rubbing the cream into her belly. Stretch marks had already begun to appear as the babies pushed her belly ever outward. Bridgette had told her to forget all the expensive lotions and creams promoted by the mother's magazines and just use the vitamin E cream. The older woman had assured her it was by far the best preventive solution.",
        "\"That's not huge. You're not even trying to be as big as a house are you?\" Dante chuckled as he walked into the room\n\n\"You try carting three babies around in your belly, and then we'll talk about how huge you feel,\" Peri grumbled. \"Is Josh going to be late again?\" she asked not bothering to try and sit up knowing she looked like a beached whale when she tried.\n\n\"Papa is coming home with him tonight,\" Dante said. \"I think your about to have your husband home for a whole weekend,\" he grinned. \"They went past the hospital on the way to visit Emily and Timo. There was another small hiccup, and they have taken him in for observation.\"\n\n\"Shouldn't you be there too instead of babysitting me? I have Bridgette if I need anything,\" Peri struggled to sit up, and he came forward to help her.\n\n\"I don't do hospitals,\" he shrugged. \n\n\"Liar, I saw you down in Canberra when I was in the hospital,\" Peri laughed thinking he was making excuses for Josh sending him here.\n\n\"I was there to stop Josh from ripping anyone's head off, that was different,\" he chuckled. \n\n\"Emily must be beside herself,\" Peri said softly her hands protectively curling over her baby bump.\n\n\"Timo came very early, and there were bound to be a few complications. He's a Donati though and we're a pretty touch breed. I'm sure he'll be fine and home by tomorrow night.\"\n\n\"My babies will be early too. My doctor says my triplets will run out of room and want to get out around thirty-four weeks, though it's not unusual for them to come earlier if they are big boofy boys like the Donati brothers,\" she teased.\n\n\"I'd like to argue with that statement but I can't,\" he chuckled. \"I hope they are not being mean to the little princess trapped in there with them.\"\n\n\"She was holding her own at the last scan so I think she can look after herself,\" Peri said looking down at her big belly. Her scans had shown that she would deliver identical twin boys and a girl. \"Were you mean to your sisters?\"\n\n\"Nah, it wasn't worth the hiding I would get from Papa. They were his princesses and we all pretty much caved into their demands,\" he gave a soft smile. \"Possibly a little too much in some cases, Lucia and Maryanne were sweet enough but Izzy and Nik, well I guess I don't have to tell you what bitches they could be,\" he chuckled.\n\nShe had slowly gotten used to people casually mentioning Nik as they spoke of Josh as a little boy and how the siblings had gotten along but it still made her flinch every so often. The movement wasn't lost on Dante, and he frowned. \n\n\"Too soon?\" he asked keeping his voice light.\n\n\"Yes and no,\" she said carefully. \"Josh said he always knew he would lose Nik, not like this but to another family eventually but I feel bad that he can't share this with his twin,\" She rubbed her belly as she spoke.\n\n\"No one blames you Peri, least of all Josh,\" Dante said. \"She was always going to escape the facility. You being there at the time was just a bonus for her. She would still be exactly where she is for the death of Giorgio. I know you have heard all of this before, but you have to start believing it and let yourself off the hook.\"\n\n\"I don't think anyone has ever said it that way before,\" she said truthfully. \"It always seemed like I was the catalyst and at fault for his death too. Like she wouldn't have killed him if she wasn't trying to get rid of me.\"\n\n\"Well now you know, so let it go and move on. You are in no way responsible for her behaviour or anything she did that night,\" he said seriously.\n\n\"She would have tried to escape the facility even if I wasn't there and she still would have hurt Giorgio and those others,\" Peri repeated as if the words finally sunk in. \"So even if I hadn't been there she would still have escaped the way she did?\"\n\n\"A crime of opportunity, you were in the wrong place at the wrong time,\" he shrugged.\n\n\"Dante if I could get up I would hug you so tightly right now!\" Peri said with a smile. \"Oh damn it, just don't laugh,\" she wiggled to the edge of the couch and heaved herself up. Then, waddling towards him she threw her arms around his neck, \"Thank you.\" She kissed his cheek, and she felt his arms wrap loosely around her belly and waist as she pressed against him to reach his shoulders.\n\n\"Umm your welcome,\" he said stunned by her reaction.\n\n\"Nobody ever brings up that night,\" she said stepping back from him. \"Which had always been fine with me. I spoke to my shrink about it, but if she or anyone suggested that I wasn't the focus of Nik's rage, then I didn't hear it. I didn't hear a lot of things back then, I suppose\" she admitted looking up at him and seeing an odd look in his eyes.\n\n\"I'm sorry, I forget not everyone is a fan of the belly,\" she said awkwardly not sure of the look she saw there.\n\n\"It's a great belly, I'm a fan,\" he said shaking his head in confusion.\n\n\"Would you like a beer?\" she asked. \"I don't know what Josh brought home last time, but it smells strong.\" She waddled toward the kitchen. \n\n\"Go and sit down I'll get it,\" he said following her. \n\n\"All I seem to do is sit down lately,\" she sighed. \"I'm pregnant not an invalid. I want to dance or swim in the lap pool, or something but Josh is always so tired when he finally gets home I hate to ask, and Bridgette is not strong enough to help me.\"\n\n\"I'm here, so swim, what do you need help with?\" he asked.\n\n\"I can't get out on my own because I'm huge!\" She blushed and laughed lightly.\n\n\"Swim, I'll call a crane in to get you out,\" he offered with a cheeky grin. \"Seriously I don't mind helping you. You only have to ask.\"\n\n\"Stay for dinner and I might take you up on that offer,\" Peri said knowing she didn't have to twist his arm to stay for one of Bridgette's meals.\n\n\"Better tell Bridgette to expect Josh and Papa too, I suppose,\" he said taking the beer from her hand and smiling at Bridgette, who stood in the kitchen behind Peri.\n\n\"If your father will be here do you want to let Lio know? It wouldn't be nice to leave him downstairs alone while we all eat together,\" she said with a tilt of her head.\n\n\"Yeah, I'll get him to bring up some from his wine collection, I would hate to see what Papa and Josh could do to mine,\" he chuckled.\n\n\"I'll spruce this dinner up a bit then,\" Bridgette said, \"I'm sure you would like to impress Mr. Donati Snr.\"\n\nPeri watched as Bridgette went to work and Dante walked to the door to go down one floor and speak to Emilio about Dinner. Momentarily at a loss, she walked to the bedroom to change her clothes feeling that she was a little too exposed to greet her father-in-law. \n\nOver an hour later Josh and Joseph came through the door as she, Dante and Emilio sat on the couches chatting about what the doctor had said at her check-up and how she was feeling. She wore a new blouse that Andie had brought her, and she realised as she was sitting and talking that she should have taken longer to decide on her outfit as Emilio commented on her cleavage and asked if she would prefer a night alone with her husband. \n\n\"Papa can stay with us downstairs tonight if you like\" he waggled his eyebrows at Peri, who blushed and lifted her hands covering herself slightly.\n\n\"It's not that bad is it? Should I change?\" She asked anxiously.\n\n\"You're asking two red-blooded men if they mind seeing cleavage?\" Emilio laughed. \n\n\"Don't listen to him, Peri,\" Dante shook his head trying not to join his brother's laughter. \"You look perfectly respectable. He's just teasing you about your new figure. Personally, I like it, impending motherhood suits you.\"\n\nThe door opened as Dante was speaking and Josh ushered his father into the apartment. He seemed tired Peri thought as she struggled to her feet to greet her father-in-law who led the way to where the trio sat. \n\n\"This is a nice surprise Papa, thank you for bringing Josh home in time for dinner,\" she smiled and kissed him on both cheeks. She then moved to embrace Josh and kiss him tenderly. She was glad he was home and wouldn't be called out again tonight. She hoped he would relax enough with his father and brothers to get a good night's sleep. \n\n\"How are you feeling?\" Josh asked releasing her from the embrace and looking at her critically.\n\n\"I'm feeling great especially with you home for dinner,\" Peri said cheerfully. \"Would you like a beer before dinner? Joseph, can I get you one too?\"\n\n\"I'm sure Dante has a well-stocked bar around here somewhere,\" he looked at his son. \"I'll have a scotch.\"\n\n\"Beer for me thanks, D.,\" Josh grinned and guided Peri back to the couch and sat with her.\n\n\"I live but to serve,\" Dante said dramatically and came to his feet walking across the room to a well-hidden bar.\n\n\"Good to see you haven't raided this yet, Wah-wah,\" Dante called out as he poured a scotch for his father.\n\n\"Maybe if I had have known where it was hidden,\" he chuckled in return. \"I wouldn't expect it to look that way the next time you're here.\"\n\n\"I knew I should have pushed you harder towards taking Lio's place,\" he shook his head and walked back with the drinks.\n\nThey chatted about the house and how the build was going, and Josh described the drama's as well as the progress that kept him so late most nights. For Peri, it was the first time she had heard some of the information, and she listened eagerly without saying much. Not that she had to as his brothers commented and joked with him all of the way through his recounting of the different facets of the build.\n\n\"Take my advice little brother and just let Tarsia do her thing,\" Lio said. \"If you keep having to be there every step of the way you are going to wear yourself out and Dante will steal your wife. I think he's here more than you are lately.\"\n\n\"Did you have to warn him? How am I supposed to seduce her now?\" Dante groaned. \"We had a date to go swimming tonight before Papa ruined it by making Josh come home at a reasonable hour and now you tell him of my genius plan.\"\n\n\"When were you going to let me on this plan?\" Peri asked with a perfectly seriously face making them all look at her. \"I always assumed you'd be that creepy Uncle, who lived in our cellar and scared the children.\"\n\n\"That's my retirement plan,\" Dante said conversationally. \"I have to keep myself entertained until then. Taking Josh's toys has always been fun.\" He shrugged \n\n\"You can't fight true love,\" Josh chuckled taking Peri's hand.\n\n\"Remember that time we hid your horse,\" Emilio laughed loudly. The rest of what he said was lost in laughter as Dante joined him in relaying the story. Most of it was lost on Peri, but Joseph added to the story as Josh fumed at his brothers like it had happened yesterday. Thankfully Bridgette came in and announced dinner and Peri was relieved of the burden of trying to follow the conversation. \n\nPeri found following a conversation of half-spoken sentences as they all cut each other off or talked over each other was difficult. By the time dessert came and the third bottle of wine was opened she had grown too tired to follow any of it, let alone join in.\n\n\"Well gentlemen, I'm afraid I can't keep up with you all, so I am going to call it a night,\" Peri interrupted their conversation to take her leave. \"It's so good to have you all here laughing so much I think the noise of it soothed the babies, so I am going to rest while they seem to be asleep. They tend to wake me up to play a couple of times a night now,\" she laughed lightly. \n\n\"We won't stay late,\" Dante said with a gentle note in his voice.\n\n\"Stay as late as you can it's been some time since I have seen Josh this relaxed,\" she said with a smile. \"Thank you for bringing him home tonight Papa. I will see you in the morning.\" She kissed Josh, who had stood to help her and encouraged him to stay. \"I can walk as far as our room by myself,\" she reassured him smiling and touching his cheek. \"Please stay and enjoy dessert, you know Bridgette has made something wonderful. I'll have mine tomorrow.\"\n\nPeri was surprised with how quickly she had fallen asleep and when she woke two hours later with the insistent kicking of one of the babies telling her it was playtime; she could still hear the murmur of the men talking in the other room. Groaning as she rolled over awkwardly, she clutched at the body pillow and having settled the babies, closed her eyes once again. When next she woke the apartment was silent, but the bed was empty, so she forced herself up and padded quietly out into the main rooms.\n\nJosh was stretched out on the couch with a blanket covering him. Lying on his back, he was snoring, and Peri was grateful that the sound was not in the bed beside her. She smiled and kissed his forehead before padding back to bed and another few hours of restless sleep. \n\nPeri smiled as she felt Josh climb onto the bed beside and opened her eyes seeing dull morning light through the windows. She rolled to her back and turned her head to look at him. \"Did you have a good night?\" She asked still smiling.\n\n\"I did, but it seems my devious family has seen fit to take away my phone and car keys,\" he grumbled.\n\n\"Is it so bad having to stay home with me for a day?\" Peri asked the smile slipping slightly.\n\n\"There's nothing I want more, but I want to do it in our home. I need to be there to make sure it's moving forward,\" he explained as if it was perfectly obvious.\n\n\"Tarsia seems pretty capable of managing the build. I mean that's what you're paying her for isn't it?\" Peri tried not to feel upset that he wasn't looking forward to spending the weekend with her. \"Your family will all be coming tonight so that will be fun and may take your mind off not being at the house,\" she tried to keep her voice positive.\n\n\"Yeah, Andie and Charles will be coming too, so it should be a nice dinner for both of us,\" he agreed. \n\nThe passion and the strong love she had always felt from Josh seemed to have disappeared in the last few weeks. She had put it down to him working so hard to build both his business and the house but now given the chance to relax and spend time with her he seemed just as distant. Feeling the babies wake up and begin to move she placed a hand on her belly.\n\n\"Seems everyone is awake this morning,\" she said in a gentle voice looking down and seeing the movements as well as feeling them. Josh placed his hand beside hers.\n\n\"They definitely seem awake, are they trying to do the wave in there?\" He asked watching as he his hand moved slightly with her belly.\n\n\"Well, Romulus and Remus seem to think they are rugby players and are always wrestling for room to move. Rose just likes to stretch every so often, and that usually calms her brothers down,\" Peri laughed lightly.\n\n\"Romulus and Remus?\" he asked with a cocked eyebrow.\n\n\"Well I am not calling them Joshua and Josh Junior,\" she poked her tongue at him as she struggled to rise. \"I guess I could refer to them as Larry, Mo and Curly Jo like your brother suggested.\" She swung her legs over the edge of the bed and stood carefully.\n\n\"Where are you going? We have been ordered to sleep in this morning,\" Josh said with a chuckle at his brother's names for his children.\n\n\"The babies think my bladder is a trampoline,\" she groaned and walked to the bathroom.\n\n\"We probably should talk about names,\" Josh called after her. \"Do you have any in mind?\" \n\n\"I was trying to think of names that were hard to give a goofy nickname to, like Hannah Banana,\" Peri said when she came back into the room, \"and names that weren't too common it seems everyone is calling their babies Liam or Emma at the moment.\"\n\n\"Well what have you come up with?\" he asked curiously.\n\n\"Not much, Brett is hard to rhyme with. Ryan maybe or Thomas?\" she said a little nervously. \"Honestly the more I think about names, the harder it gets.\"\n\n\"So you came up with Romulus and Remus?\" Josh chuckled shaking his head. \"We could always go with the initials they already have like Mama did.\"\n\n\"We can't call them A, B, and C!\" Peri laughed.\n\n\"No, but Angus, Brett and Claire maybe,\" he suggested.\n\n\"What if the girl is born first? I would like to think our boys were little gentlemen, and would let her go first.\" She said as she plumped up the pillows and sat on the bed resting her back against the headboard.\n\n\"They will be protective big brothers and scope out the landscape to make sure it's safe for her out here,\" Josh moved up beside her and placed his hand on her belly once again.\n\n\"I don't know, she's pretty pushy in there,\" Peri giggled. \"I was contemplating going all soap opera with their names. There are so many people in your family that I thought we might not find a traditional name we like and have to resort to Cruze or something like that.\"\n\n\"Honestly, I quite like Cruze,\" Josh looked at her thoughtfully as he spoke. \"What else have you got?\"\n\n\"Chase, Thorn, Ridge, Cato or maybe Echo or Willow for the little princess,\" she laughed. \"There's this site,\" she picked up her phone and began to bring up the page. \"What do you think of Eden?\"\n\n\"I don't mind that one either you might be onto something here. So far I 'm pretty sure they would be unique names in my family,\" Josh moved closer to look at the phone with her. \"Blaze is good, Cruze and Blaze sound good together for the twins.\"\n\n\"Sounds like an arsonist,\" Peri shook her head.\n\n\"Think of it as a trailblazer,\" Josh cajoled still looking at the names as she scrolled.\n\n\"You're just trying to get the A, B, C thing for them again,\" she accused. \"What about Zander,\" she offered instead, \"Or Rafe? I like the flowery type names as well for girls like Lilly or Violet.\"\n\n\"Eden would have all those flowers,\" he said ignoring her comment about the boy's names. \"Violet reminds me of the girl in Willy Wonka or whatever it's called. We don't want her seeing that and comparing herself.\" He pulled a face. \"Lilly and flowery names just make me think of old ladies. \"Why don't we get Bridgette to make us some breakfast and we can talk about it a little more.\"\n\n\"Breakfast sounds great, I can't believe how hungry I am lately, and I'm getting so big I can't tell if it's just the babies or I am genuinely getting fatter,\" she lamented.\n\n\"You look fabulous,\" Josh leaned over and kissed her his hands running down her body. \"We can always come back to bed after breakfast, and I could show you how irresistible you are.\" He murmured and deepened the kiss. \n\n\"Maybe we could just stay here now and come back after breakfast,\" she purred at him thinking her husband finally had his attention on her rather than the house or business. She leaned closer and kissed his neck and behind his ear.\n\nJosh groaned softly and ran his hand over her belly and down to her cunt feeling the wet welcoming warmth of her. He kissed her deeply before moving his head to follow his hand down her body, trailing kisses down her neck to her breasts as his fingers brought out the heated sounds he adored from her. Her breasts seemed fuller and firmer, and he indulged himself playing roughly with one nipple as his mouth sucked, bit and tormented the other.\n\nWhimpering at the pleasures he gave her Peri lay back stroking his hair and twirling her fingers into the curls at the nape of his neck. She gasped as she felt his fingers grip the slippery oyster of her clit and twist slightly making her arch, her belly rising to push him away from her breast. He moved to kiss over her belly murmuring tender words she couldn't make out but she knew they were not for her ears but rather for the three little bodies snuggled inside her.\n\nPlacing his hands under her ass and raising it Josh bent his head to her taking in the familiar scent and fluttering his tongue over her well-lubricated folds. He felt the tell-tale beginnings of tremors in her thighs before he had even touched her clit with his dancing tongue and smiled. Pulling her legs up over his shoulders and raising her hips further his brought one hand to the slick wet hole and pushed two fingers into her deeply as his lips clamped around her clit and tongue whipped it.",
        "Peri's heels dug into his back lifting her hips further as her climax rose within her rapidly. His talented hands spilled her over the edge of sanity into a blissful wave of sensation. She was still riding the wave when she felt his insistent hands turning her onto her belly and raising her hips. She struggled with shaky legs as she came up on her elbows and knees presenting him with her hot open cunt that begged him to fuck her. Moving between her legs, his hands grasped her hips, and he rammed his cock into her. Then as if remembering himself he bent over her body and ran his hands over her belly and up to her breasts gripping them hard as he began to move without the force of the first thrust. \n\nShe felt him holding back again and groaned in frustration. She understood his concern, but she wanted more, more of him and his brute force. His fingertips found her nipples and pinched them giving her some of what she craved but it wasn't enough, and as he came she felt deflated as she didn't quite make it to that high that she used to ride with him.\n\nJosh groaned and flopped onto the bed beside her allowing her to relax. Peri was still on edge though and came up to her hands rather than elbows crawling around and kissing down his body to his semi hard cock. Licking out she began to clean it, willing it to stiffen again and satisfy her need but after a few minutes, he pulled her up to him and kissed her. \n\n\"Aren't you a greedy girl this morning,\" he grinned and kissed her again. \"We can come back to bed after breakfast, but we need nourishment if we are going to play all day,\" he chuckled lightly.\n\nPeri decided not to tell him she was unsatisfied and silently nodding her agreement. She considered how she could tell him that she didn't like that he was holding back so much. She understood why he was of course, but the doctors had assured them more than once that they did not have to change their sex life for the sake of the babies.\n\nRather than just pulling on her robe Peri showered quickly got dressed knowing that Joseph would probably be at the breakfast table. By the time she got there, Joseph had asked Josh to drive him to the airport to pick up Antonia. She was welcome to go with them, but Josh had thought she might not be comfortable sitting in the back of the car for so long.\n\n\"That's okay I will call Andie and see if she wants to come and help me prepare for the dinner tonight,\" Peri said despite her disappointment.\n\n\"Dante and Emilio have it all under control, and I have already spoken with Bridgette,\" Joseph informed her. \"You just rest little mama and help those babies grow big and strong.\"\n\n\"In that case, maybe I will see if Andie wants to go shopping, so I don't have to wear a tent to dinner tonight,\" she said her disappointment growing. This would have been the first family dinner she and Josh would have hosted, and she was looking forward to planning it this morning.\n\n\"Just don't overdo it,\" Josh warned placing and arm around her waist and looking at her with concern.\n\n\"It will do me good to get out and get some fresh air,\" Peri said in return.\n\nThey finished breakfast and left her to wait for Andie to pick her up for the day. She convinced herself that things had worked out for the best, and it had been way too long since she had spent time with her mother whose business was flourishing.\n\nAndie had been doing her research and had found some wonderful outlets and designers who catered for maternity as well as their normal range. Peri spent a small fortune on several outfits for both casual and dressier occasions. She felt guilty about the amount of money and knew that she would only be pregnant for another month or two, but the clothes were so comfortable and managed to make her look like a woman instead of a blimp.\n\nWhen she got home, she put on one of the dressier outfits and went to see if she could help with any of the preparations. Instead, Dante offered her a fruit punch and sat to talk to her while the family arrived.\n\n\"You're looking lovely tonight. It was a successful shopping trip I assume?\" Dante said as he relaxed his long limbs into the chair opposite her.\n\n\"It was. I spent way too much money but it was nice to find something that fit,\" she laughed. Josh came to join her as the family began to arrive. Peri shook her head at the crowd that was the Donati family. Even though the other brothers had not brought their partners there seemed to be people everywhere she looked. Josh looked happy and relaxed as he talked and joked with his siblings and she was suddenly grateful to Joseph for the enforced break he had made Josh take from the house build.\n\nAfter dinner, Peri sat on the couch with Antonia, Lucia, and Andie. The crowd in the spacious apartment made her realise just why Dante and Emilio had built apartments on the scale that they had. Izabella and Maryanne joined the women on the comfortable couches while the men remained clustered around the large table.\n\n\"I feel like a bit of an intruder here without the other wives,\" Peri gave her mother-in-law a lop-sided smile. Once again Peri had found it hard to keep up with conversations at the table as they spoke about growing up on the farm.\n\n\"Don't be silly. Timo needs Emily close right now, and Carmen can't resist any excuse to go and fuss over them. And Bianca is still feeding her baby. They could have come if they wanted but it wasn't good timing,\" Antonia explained.\n\n\"We're heading back to Italy tomorrow, but I have left three gifts with Lucia for each of your baby showers,\" Izabella said with a smile. \"I'm glad I got to know you a little while we were here.\"\n\n\"Gosh I hadn't even thought about baby showers,\" Peri blinked in astonishment, wondering how it had slipped her mind. \"I guess I should do something about that.\"\n\n\"You don't throw your own baby shower silly, we do,\" Lucia said waving around her glass of wine indicated the other women sitting with her. \"It's a bit tricky with you not being in your house yet, but I am going to hold the one for your little girl, and we can keep the gifts at my house until the nursery is ready.\"\n\n\"Antonia and I are going to divide up the rest of the family and friends and host one for each of the boys,\" Andie said. \"It would be so much easier if you had chosen names for them. I don't like calling them A, B, and C.\"\n\n\"Just as well she is not having four or we would get confused with baby D.,\" Maryanne laughed loudly. \"D. would think he was in trouble all the time if we all started calling him Dante.\"\n\n\"You don't have to throw three showers,\" Peri said between giggles at Maryanne. \"Josh and I were talking about names this morning, but we haven't decided anything definite yet.\"\n\n\"The twins could have a joint shower if you want but I am having one for the little princess,\" Lucia said. \"It will be all pink perfection.\"\n\n\"Just leave it all to us, we were thinking we could start them next weekend,\" Antonia nodded at Andie. \n\n\"Could we maybe combine the boys then? I'm getting bigger by the day, and I would hate to think what I will look like in three weeks' time,\" Peri tried to compromise seeing that she had little choice in the matter.\n\n\"I would be happy to combine my efforts with Antonia's if you and Josh can come up with suitable names by then,\" Andie said with a sly smile.\n\n\"Well I think we have decided two out of three I'll talk to him tomorrow. I don't want to say anything just yet in case we change our minds again,\" Peri gave them a small, secretive smile.\n\n*****\n\n \"Baby Diary \u2013 Week 28 (7 months) \u2013 The Donati Triplets.\n\nDante rushed me to the hospital. It's so nice to know he's close by when Josh is at work or the house build and seems busier than ever. I was so relieved and embarrassed when Dr. Bellino told me I was having Braxton Hicks contractions. Josh wasn't happy after racing to the hospital only to find it was a false alarm. He says he doesn't blame me and that it's better to be safe than sorry, but I could tell he was angry. Still there was some good news; I passed my glucose test; my blood pressure is great, and I have no protein in my pee, so the worries about pre-eclampsia and other conditions seem to have been unfounded. So far at least.\n\nI think I will have to give up going out anywhere until the angels arrive. They are jesters just like their father and uncles I think. I need to pee about every fifteen minutes so they must be using my bladder as a trampoline or something. I was considering going to a chiropractor or at least a masseuse to ease the pain I feel in my back now, but I'm not sure I wouldn't disgrace myself if I tried.\n\nI have a lot of energy once I get up in the morning, and I feel like I should be putting together all the nursery things but as with everything else in my life lately someone else is organising that for me until we get to the new house. It gets me down a little but I am trying to blame my moods on pregnancy hormones rather than wishing Josh's family would back off and let me do something for my babies rather than just be an incubator.\n\nI've had two baby showers, and I can't believe all of the stuff people gave me as gifts even though most of them attended both showers. I know I have more than enough clothes and nappies to begin with, but I wish I could sort it out myself and be sure. Josh has organised a van and driver for the babies and me after the birth. It hadn't even occurred to me that a regular car would not be the best for us anymore. Though I am sure, we could have had my car modified with the safety straps to hold three carriers it would have been difficult to get the middle one in and out. Especially after the surgery.\n\nThe babies have grown so much that now I don't feel the run-up and kick of little feet but more the graceful movements of synchronised swimmers as the fight for room in that tight little space. I don't know how much more my belly can stretch over the next six weeks or so. I am still using the vitamin E cream a few times a day to try and help the tight skin of my belly stretch that little bit further without too many marks.\n\nThank goodness I bought all those maternity clothes when I went shopping with Andie, or I would have nothing to wear now, not even Josh's shirts can cover my belly fully. I am starting to feel that time is against me and while I say another six weeks I lie awake and worry despite being so tired my eyes ache. I want a completed nursery, and if the house isn't complete soon, I will be asking Dante if I can convert the spare room here into a nursery. I might do it regardless for when I visit here or my team at work. I still visit if only for a little while each day and only under Dante's supervision. My team is amazing, and I am very proud of their progress. Darius runs a tight ship and keeps me constantly informed. I have no qualms about leaving them to carry on when I have the babies. \n\nPeri had decided to visit Lucia to try and work out if there was anything at all she needed for the nursery. She felt she just needed to do something to appease her nesting instinct and had organised the visit the night before. She was preparing to go down to Emilio's apartment and meet Dante the following morning when Josh came back through the front door and wrapped his arms around her.\n\n\"Josh, you left hours ago, what are you doing back?\" Confusion laced her voice as she returned his embrace.\n\n\"Come and sit down,\" he led her across the room to the couch without looking at her. Once seated he finally turned to face her, and she could see his eyes were red and swollen as if he had been crying.\n\n\"Josh what's wrong?\" she placed a hand on his cheek and looked up into his eyes.\n\n\"I need you to listen calmly and not panic,\" he placed a hand on her belly as if to reinforce his words. He saw her eyes widen and spewed out the words like ripping a band-aid off a fresh wound. \"There's been an accident, Lio's dead,\" his voice cracked as he spoke and a tear ran down his cheek.\n\n\"Oh, Josh,\" Peri whispered and hugged him. She felt her heart fall into the pit of her stomach, and her eyes fill with tears. She shared his grief. She loved Emilio he had become her true brother along with Dante, and she was devastated. Taking a deep breath, she knew she needed to be strong right now and look after herself and her babies while supporting Josh but the thought of Dante brought a fresh wave of horror. \"Oh my God, Dante!\" she exclaimed. \"He must be a mess right now.\"\n\nJosh released her taking a shuddering breath and dashing away the tears from his cheeks. He took a few moments to compose himself taking both of her hands in his. \"He's at the hospital. The doctors say he's in shock. He's refusing to leave or talk to anyone,\" again his voice cracked as he spoke. Peri opened her mouth to speak but shut it again as he looked at her with worried eyes. \"The only thing he has said is that he needs to see you. You don't have to go, but...\"\n\n\"Of course, I have to go, Josh, it's Dante,\" Peri's sad voice cut over his attempted explanations of why she should go. \"It's fine. I'm fine. Josh, we will be okay,\" she said placing her hand on her belly. \"We can do this together, for Emilio and for Dante.\" She said sounding much stronger than she felt. \"He has been there for us through everything. He kept you from killing people in Canberra. He has been looking after me like gold while you work on the house. I am beyond devastated about Lio, I loved him as if he was my own brother, but we have to look after the living, don't we?\"\n\nHer words were like a slap in the face for Josh, who immediately sobered and blinked his eyes at her. He nodded clearing his throat and rubbing his hands over his face. \"Yes,\" he said softly looking at her once again. \"We need to go, I'll call Ben from the car, Mama and Papa should be there by the time we get there.\"\n\n\"I can't imagine what they're going through,\" Peri's eyes welled again as she struggled up from the couch and took Josh's hand. \"I just can't imagine what any of you are going through right now,\" she said quietly.\n\nAside from the red swollen eyes Josh's face was calm as he turned to look at her. He wrapped an arm around her waist as they stepped into the elevator and then pulled her to him. They stood in silence for the long moments of decent before the doors opened again and they stepped out into the carpark. He sped to the hospital, and they walked quickly through the emergency ward to a quieter back area where the family all sat each lost in their grief.\n\n\"This way,\" Ben said. He had been leaning against the wall waiting for them. \"Their waiting for a psych consult,\" he murmured to Josh. They walked into a room where Dante sat on a chair beside the bed staring straight ahead at a spot on the wall. His face was pinched, but he showed no sign of having been crying or any other real emotion. Joseph and Antonia stood nearby, Joseph comforting the sobbing Antonia.\n\n\"Peri?\" Dante said as they entered the room and gave her a sad smile.\n\n\"I'm here,\" she went to him and hugged him. \"You've been there so much for me, how could I not come when you needed me.\" She felt his arms wrap around her returning his hug and as if the floodgates opened he began to cry.\n\n\"Lio's gone,\" he pulled back slightly tears running down his cheeks. \n\n\"I know,\" she said gently tears stinging her eyes, \"It's not fair, I know.\" She went to move to the chair Josh had pushed close to where Dante sat, but he wouldn't let go of her. \"Dante, I need to sit down. I'm not going anywhere I'm staying right here, for as long as you need me.\" He looked at her with a blank expression and pulled her onto his lap.\n\n\"Hey D. we should probably take Peri home now where we can keep her safe,\" Josh stepped forward in concern for both his brother and his wife. Dante turned his head to look at Josh and furrowed his brow. \n\n\"She is safe. I'd never hurt her Josh. I love her. The one person who makes me genuinely happy when I am around them, and she belongs to my brother,\" he sighed. \"Lio loved that about you, you know?\" He asked Peri. \"That you could make me laugh when no one else could.\"\n\n\"I didn't know that,\" Peri smiled. \"He could always find something good to say about everyone. Even when he fired that awful assistant you hired for me he praised her commitment to her desk,\" he smiled remembering the conversation she had had with him after he had said it.\n\n\"He was the good twin, the better half of our dynamic duo,\" Dante gave her a teary smile and broke down again as he said, \"What am I supposed to do without him acting as my conscience?\"\n\n\"You have Josh and me,\" Peri's heart broke for him. \"We are already so close that we will be there for you.\" She held the sobbing man who could no longer speak. She tilted her head and looked at Josh, who watched on in concern.\n\n\"At least he is doing something now rather than looking catatonic,\" Ben murmured to his father. \n\n\"See what's holding up the doctor and take your mother out to Lucia,\" Joseph said. \"Please Mama,\" Joseph said sadly when Antonia started to protest. Then he moved towards Josh hearing them leave behind him. \"I know you don't like this, but you need to suck it up and let him into your life with Peri until he can cope on his own again.\"\n\nJosh looked at his father unbelievingly and then back at the strange portrait of his pregnant wife sitting on his brother's lap while he bawled like a baby.\n\n\"Dante,\" Peri said after a while of just sitting and letting him cry. \"Dante I have to go for a few minutes, but I will be back and Josh will be right here. Talk to him he loves you as much as I do. He wouldn't have trusted you to fill in for him so much lately at home if he didn't.\"\n\n\"No, don't leave me,\" Dante said almost desperately. \n\n\"I will be back, I promise, but these babies make sure I have to visit the bathroom every half hour or else disgrace myself. Please let me go, I will come back,\" she said softly.\n\n\"Let her go,\" Joseph said calmly but in a stern voice. Peri felt Dante's hands relax, and she stood with a sad smile. \"I will come back and then maybe you will let Josh, and I take you home. Okay?\" \n\nDante turned his head to Josh as if seeing him for the first time and nodded. Then he slumped in the chair his hands covering his face as he breathed heavily. Peri left the room quietly and hurried passed the family in search of a bathroom.\n\n\"Peri wait!\" Lucia called after her, but her bladder was bursting, and she needed the relief so badly she didn't slow down. She could see the lit signs in the ceiling directing her, and she practically ran through the door and into a stall. She heard Lucia come in after her. \"Peri?\" she called again.\n\n\"I made it,\" Peri called out, \"But only just, I was about to burst,\"\n\n\"The way you hurried through I thought you were upset. I thought Dante had said something to upset you,\" Lucia said relief evident in her voice.\n\nPeri came out and looked at her reflection. She could understand why Lucia had chased her now. She looked dishevelled and upset with her eyes red and the little amount of makeup that she wore ruined.\n\n\"No wonder you came to look for me I look frightful. I'm sorry to add to your worries,\" Peri said sadly, trying to repair her makeup and hair. \"I promised I'd go right back,\" she said turning from the mirror. \"I'm so sorry, Lucia. The whole situation's awful I don't know what to say.\"\n\n\"Is D still catatonic?\" Lucia asked worriedly her voice tremulous. \n\n\"No, he cried mostly,\" Peri said. \"He hasn't said much of anything,\" she was careful with her words. \"I'm hoping he will let Josh, and I take him home once he's seen the doctor.\"\n\n\"He should come back to my place I don't think going back to the apartment he built with Lio is a good idea,\" Lucia shook her head. \"He's better off at my place with Mama and Papa.\"\n\n\"I'm sure he'd appreciate that,\" Peri said with a sad smile walking back to the waiting with Lucia. \"I'll tell him when I go in.\" She walked to the door with Lucia at her side.",
        "\"I want to see him,\" Lucia said and not knowing what to do. Peri opened the door and they both walked into the waiting room where Antonia sat with her other children. She looked at Peri and held out her hand. Peri went to her taking the offered hand. \n\n\"Did he talk to you?\" She asked in a sob.\n\n\"Not very much, he mostly cried,\" Peri answered honestly. \"I promised I would go back in once I'd been to the bathroom,\" She said gently taking her hand away. \"I'm so sorry Antonia, I don't know what to say to anyone, it's a nightmare, and I'm so sorry.\"\n\n\"It was a dreadful accident but just that, an accident. We have spoken with the police and doctors here. It was a stupid, tragic dreadful accident, and I have lost one son. Now I need to make sure I don't lose another,\" Antonia's words were hiccupped as she struggled to take hold of her emotions. \"They were closer than any of the other boys, it is Dante we must look after now,\" she said urgently.\n\n\"Has the Doctor come yet?\" Peri asked feeling the need to help this woman somehow. \n\n\"Peri,\" Joseph's voice reached her. \"Come now,\" he said placing a hand on her shoulder. She turned and nodded moving into the room she saw a doctor sitting opposite Dante, who seemed to be looking right through him. He blinked as she came back to the door and a soft, sad smile appeared on his face.\n\n\"You came back,\" his voice was low and seemed hoarse after his bout of crying.\n\n\"I didn't mean to interrupt,\" she said softly. \"You should talk to the doctor so we can take you home,\" she said gently. Dante seemed to focus on the Doctor for the first time, his face blank. \n\n\"I'm Doctor Khan, Mr. Donati. You've suffered a terrible loss today, and you have my deepest sympathy,\" the man said.\n\n\"Do I?\" Dante said. \"How very nice,\" he sneered. \"What can you tell me about losing a twin? You have no idea what it is like to have half of your whole being ripped away.\" His tone was harsh and unforgiving as if the man in front of him were somehow to blame. \"None of you do,\" he said looking around the room. His eyes settled on Peri and seemed to soften; his shoulders slumped again, and his hands scrubbed at his cheeks. \n\n\"You are right. I don't know. Why don't you tell me about it, about your brother,\" Dr. Khan prompted him to keep talking?\n\n\"I tell everyone that he was the good twin, but his temper was worse than mine, he just managed to hide it better. Where I became dark and surly, he was sweetness and light. When shit went down, however, he handled it with well-concealed stone cold rage while I was, well I never concealed much of anything. We kept each other in balance. We were each other's conscience. We stopped each other from making huge mistakes. He kept me sane when I lost everything, who will do that now?\" He asked the stunned doctor. \"You can't help me, they can,\" he turned and looked directly at Josh and Peri. So give me whatever pills you think I need to get through the next week and let me go home.\"\n\n\"He can come home with me,\" Lucia stepped forward interrupting the conversation. \"His family will be there, and we can make sure he is well cared for,\" she looked at Dante with sad eyes. \n\n\"No, I'm going home with them. None of you knew Lio. None of you would know the first thing about him. I don't want to listen to you all talk about the things he wanted you to see. They know why he hid so much,\" Dante said the harsh tone back in his voice.\n\n\"It's not the time,\" Josh said cutting him off with a stern tone similar to that that his father had used. \"We'll take him home Lucy. You can all come tonight for dinner and stay if you want.\" He spoke in the same voice willing his sister not to argue any further.\n\n\"I'll see about getting you some sedatives,\" the doctor rose from his seat and indicated that Joseph should follow him.\n\n\"Lucy come and help your mother,\" Joseph said guiding her from the room.\n\n\"He's grieving,\" Dr. Khan stated the obvious. \"There is nothing in his demeanour to make me overly concerned for his welfare. For whatever reason he has transferred his attachment to Josh, and I think that allowing Josh and his wife to care for him while he grieves is for the best. I'll see to that medication so he can go home.\" Joseph nodded and walked back into the room and looked at his two sons and Peri. Closing the door firmly he walked to where Dante sat and took the chair the doctor had vacated and look at his son with misty eyes as if deciding what to say.\n\n\"Do not mistake my silence for ignorance. I knew your brother as I know all of my sons. It is to my eternal regret that I did not heed the warnings earlier about your sister, but I had hoped she would mature,\" he took a shaky breath. \"I knew who your brother was and who he loved. He was discreet. He didn't publicise his personal choices and neither should you now that he is gone,\" Joseph commanded. \"He was a good man, and that is how everyone will remember him. You will not push him out of the closet on his deathbed.\"\n\nDante looked at his father in wild-eyed wonder, \"You knew?\"\n\n\"You think I am some doddering old fool stuck out in the middle of nowhere?\" Joseph scoffed. \"I was already packed and filing a flight plan when Ben called me with the news. I know what each and every one of my children is thinking and doing,\" he said stretching the truth of the matter. He had received a phone call informing of Emilio's fate only a half hour before Ben had called him. \"You will not expose your brother's hidden self to the world,\" he commanded again. Dante nodded dumbly saying nothing. Joseph nodded and stood again this time to face Josh and Peri.\n\n\"A parent shouldn't outlive a child, and it is frightening to contemplate any loss like this be it a parent or a child or a loved one. We have to walk on though and look after the living. Appreciate and revel in the closeness of our bonds with those we love. Dante has loved you both more than you realise for some time, look after him as you would each other,\" Joseph said cryptically and left the room again.\n\n*****\n\nOnce the funeral was over Dante seemed to compartmentalise his grief and bury it beneath a fa\u00e7ade of a more subdued man. Rather than the constant teasing and jokes, he became more serious and after a week, he went back to work. Without Emilio there with him, he took on all of the day to day running of the Auction House promoting two of their long term employees to managerial roles and keeping both personal assistants. He would be the figurehead but as he had seen Josh and Peri do in both of their work roles he put in place the people he knew he could run the auction house the way he wanted even if he was not there in the flesh.\n\nHe struggled to go through all of Emilio's business dealings and allocate some of those customers and families that used the House of Lorraine regularly to the new managers. One would look after the sellers and the other the buyers. After as little as two weeks he had known he had chosen the right men to spearhead his business dealings.\n\nIn Peri's absence, as she came down very little now, he brought in his cousin Claudia to help manage the family archive. Being Charles' daughter she was as close as a sister to him and he trusted her implicitly. He hoped in time that Peri would re-join him to manage the archive, but he knew it would only be on a part-time basis when and if she did come back. It was Josh's duty to continue the family history as part of that archive. As Josh was already involved in the archive in some way, Dante hoped he would take up some of the burden now left to him alone.\n\nHe had been living with them since the day they had taken him home from the hospital. He felt content that he was where he belonged. There were days when he wished for so much more, but he took the love they gave him and savoured being part of their world in a way he could never have been part of Emilio's. Dante had on occasion tried to be part of Emilio's world, but he wanted more, he wanted, women and family as well. In the same way, that he had shared in Emilio's life for a time, he was now sharing Josh's. The one time he had attempted to carve out a life for himself had ended in disaster resulting in the loss of the woman he had thought himself in love with and his unborn child. \n\nShe had ended the pregnancy as soon as she had returned to the city and when he had confronted her about it, she had raged at him and cruelly taunted him that she had never really loved him but had thought she would have an easy life with his wealth and family connections. His father's offer of a trial had come with a prenuptial agreement. In her rage, she had claimed she would fuck anyone even his father, but she wasn't signing away her right to all that money. Lio had ended her career and her reputation with Charles' help and Dante's faith in women, bolster's by his vain and narcissistic sisters, had been destroyed until he met Peri.\n\nHe considered his other sisters in law. Emily was a good woman but like Ben, her first thought was always about pleasing the family. To her own and Ben's detriment at times. Baby Timo was now thriving but her decision to try and give Ben a second son was risky to both mother and child. Bianca was far too much like Nik for Dante's liking. He did not doubt her love for Jules, but she was vain and independent. She bore his children, but she certainly didn't mother them, leaving that to the nannies and housekeepers. Carmen, on the other hand, was the opposite with a mothering instinct that bordered on pathological. She tried to mother them all, interfering in their lives and mothering the other women as if only she knew what was best for their families.\n\nPeri, on the other hand, was able to be independent despite being shy, quiet and quite obviously submissive. He knew that Josh would have no need to employ a kept as his brothers did. He imagined her as she was when he first met her at the family lunch telling the story of how she and Josh had got together with a perfectly straight face. It was her comment about the boots that had made him look at her properly that day. She certainly didn't look like a model or even the elegant women they were used to seeing Josh with. There was, however, an attractiveness to her fuller figure that he couldn't deny, and her sweetness tinged insecurities that made her shyness win out only made her seem more attractive to him.\n\nHe'd dated Louisa for a time but found that even though she was lovely, there was no real attraction there. He hoped that she worked out with Carlo, he needed a nice woman in his life. Even the Kept housed at the farm, and Charles small rehab facility did not hold his attention as he began to find excuses to hang out with Josh and Peri. Lucia knew and counselled him against spending so much time with them but like Carmen she believed she knew what was best for everyone.\n\nWhat he needed right now was to remain part of their life and to find a Kept with similar attributes to Peri that he could work out his frustrations on, he decided to spend some time with Charles and discuss his needs. He was the best trainer the family had if anyone could find what he needed Charles could. \n\n*****\n\n \"Baby Diary \u2013 Week 32 (8 months) \u2013 The Donati Triplets.\n\nI'm swollen and itchy everywhere even my insides sting from heartburn and the constant reminder that three little people struggle for room inside me. They move slower now as if arguing over who will stretch next in their cramped conditions. I feel fine when I am home and imagine I have all the energy I ever had pre-pregnancy, but when I go out, I realise that I am fooling myself and need a recovery nap when I get home.\n\nI finally made thirty-two weeks, now we wait for the birthdate we have chosen. Until this last appointment I was able to set myself the goals of making the next four-week mark, now I just feel scared. I'm scared of the birth, scared of becoming an instant family but most of all I'm scared of motherhood. What if they arrive and I don't recognise them and love them immediately? \n\nI'm scared about the surgery and have asked about delivering vaginally but the risks are apparently a lot higher, and Josh has refused even to contemplate an option that carries more risk even if it gives our babies more time to grow.\n\nWhat if our house isn't ready for us? Josh assures me it will be and shows me photos of the work on the interior and Grant calls me with questions or photos, but it's not the same as being there and knowing.\n\nThe one thing I am thankful for at the moment is yoga pants. I would never have believed how comfortable they could be and had I not outgrown my whole wardrobe I probably would never have known. I can't even imagine that my belly will ever be normal again, but Dr. Bellino says she knows some tricks to help me starting with a girdle type thing that will help with the afterbirth pain.\n\nI don't know what is scariest, staying as big as a whale or meeting these new little people and finding out if my dreams or nightmares come true. \n\n\"Come on then stumpy, we're going for a drive,\" Dante announced as he finished his breakfast. \"I can't be waiting all day for you to waddle in there and get dressed into something pretty.\"\n\n\"What?\" Peri asked confused. \"I doubt I could even fit in our car anymore.\"\n\n\"I hired a bus big enough to fit your huge butt, just go and get all beautiful. Trust me, you'll want to go where I am taking you,\" Dante chuckled.\n\n\"Where would that be exactly?\" she asked but started moving toward the bedroom.\n\n\"Just trust me,\" he said and waved her off, knowing she would do as he asked. Since Lio's death, he had lived with Peri and Josh and their relationships had deepened. Each of his brothers had been checking in on him and dropping by constantly. Josh though had never forced him to join them for anything, not even dinner. As far as Josh was concerned, it was a given that Dante would be there and be part of their lives. That automatic acceptance and their late night chats about what was going on in their lives helped to fill the gaping void that Lio's absence caused in his day to day life. \n\nThey let him take his time to feel ready to go down to Lio's apartment and go back to work, and he knew when they moved into their new home that he would be welcome, they had both said as much. If he was honest with himself, he didn't want to be here alone. He stood up and walked to the windows looking out on the city. He'd never been alone in his entire life. Even when he and Lio were apart, he knew that his twin was no further than a call away, no matter the time. With Josh's easy acceptance of his constant presence, Dante hadn't felt alone, not even at the funeral when his pain was so raw. \n\nBen had not understood his preference for Josh's company and had demanded that Dante stay with him and Emily until he recovered from the shock of Lio's loss. To his surprise, Joseph had stepped into the conversation and said he thought that Dante spending some time with Joshua and Peri would be a good thing for all concerned. Then he had taken Ben for a walk and talked with him. He was still contemplating that moment and what his father might have said to Ben when Peri came out of the bedroom looking lovely despite the huge bump and unusual walk of a woman carrying triplets.\n\n\"Ah beautiful,\" he said with genuine warmth. \n\n\"Liar,\" she accused. \"Let's go and see if I can fit in this big butt bus of yours,\" she laughed easily.\n\n\"Your chariot awaits,\" he swept his arm before them.\n\nThey chatted casually as Dante drove more carefully than he normally would have causing Peri to tease him about his change of driving style. About fifteen minutes from their destination Dante used the hands-free to call Josh and put on an eastern European type accent.\n\n\"Ve have kidnapped your vife, if you do not pay us one million dollars ve will return her to you, and you can put up with her for eternity,\" he said winking at Peri. \n\n\"I'm a bit short of funds at the moment. You'll have to bring her back I suppose?\" Josh said as if thinking over the demands. \n\n\"You son of a beer swilling old goat, I vill be there in ten minutes,\" Dante cursed. \n\n\"Yeah well what ya gonna do, see you in ten minutes,\" he chuckled and hung up.\n\n\"We're going to the house?\" Peri asked in stunned amazement. Josh had refused to let her anywhere near the house because it was too dangerous during construction and then when the interiors were being completed he had used similar excuses.\n\n\"We are,\" Dante nodded. \"I did tell you that you would want to come for a drive with me.\"\n\n\"It must be finished or close enough to being finished or Josh wouldn't have let me come,\" she reasoned out loud becoming excited to see the house she had dreamed of.\n\n\"I believe it is, aside from a few feminine touches that you will bring to it,\" Dante smiled looking at her happy smile. She was glowing, and her happiness was palpable as she looked out of the windows for a glimpse of the turn off that she knew must be close. He was happy that Josh had asked him to be part of this moment in their lives and share her joy at seeing the new house for the first time.\n\nAfter ten long minutes, Peri saw the large house nestled on top of the hill above their original house which had been left intact as a guest house after the team had taken in its quaint charm. Peri was speechless as they drove closer. The front was like a sprawling historical Queenslander style home, but it rose in the rear in glorious golden roughly hewn sandstone blocks that made the rear appear from the same era and as if it had always been there. The big SUV crunched on the gravel drive, and Peri marvelled that even the landscaping had been completed.\n\n\"It's like driving up to a manor house,\" Peri said breathlessly, her eyes wide as she took in the sheer size and beauty of the house. \"It's incredible. This isn't a house it's a mansion!\"\n\n\"It's the house that Wah-wah built,\" Dante chuckled. He was as impressed as Peri, but he was not going to let his little brother get away without a few digs in the ribs.\n\nJosh sat on the wide veranda with the team that had built the house for and with him. He watched eagerly as the car pulled up and went down to help Peri from the car.\n\n\"You never told me you were finished, I thought there was still weeks to go,\" Peri said in wonder looking around at the landscaping and front veranda.\n\n\"The team wanted to be here when I told you that it was ready for inspection,\" he said bending to kiss her and wrapping an arm around her waist as he led her up the three steps to the veranda where they all waited. All five of the team spoke as they toured the main floor and cellar of the home. The second story of the residence had been divided in two by a wide sweeping staircase. One wing held beautifully furnished guestrooms and bathrooms while the other wing held rooms for children with smaller rooms for nannies on both sides at the end of the corridor.\n\n\"This is all so beautiful, but where will we sleep?\" Peri seemed confused by the lack of a Master suite.\n\n\"We saved the best for last little Mama,\" Grant said cheerily and led the way back down the stairs to the main floor. In her excitement, she hadn't realised that she had only seen the front area of the main floor where the various living rooms were located and the kitchen nestled under the stairs. Walk back behind the staircase to where the kitchen opened out she realise that the ground floor opened up into two wings as the upper floor did above them in the larger sandstone section of the house. \n\n\"This,\" Josh said to his brother, \"Is yours for a lifetime or as long as you need it,\" they walked into a large suite off the corridor they entered. It was as beautifully finished as the rest of the house. \"There are two suites in this wing; it was designed for the grandparents and Uncles to come and stay for extended periods. In the last few weeks, we changed a few things to make it yours. We want you here, I want you here,\" Josh said with feeling. They had both lost their twin this year, and Josh felt a special bond with his brother which had deepened over the last few weeks.",
        "\"You don't have to ask me twice, look at this place,\" Dante walked into the room touched that Josh had decorated in the style he had used in his apartment. \"It feels like home already.\" \n\nBeaming up at Josh, Peri hugged her arms around him. She had listened to them when she woke through the night and knew that they were good for each other. Dante had let Josh pour out his feelings about Nik in an unreserved way and then when he was ready, and able Josh listened to Dante as he spoke about Emilio. She had known Josh planned to create a space for Dante here, and she was happy to have him as part of their lives and immediate family here in this house.\n\n\"I haven't forgotten you,\" he murmured returning her hug and leaning down to kiss her. They walked back to where the kitchen sat behind the staircase and rather than going around it, they walked through to the other wing. They walked down a short corridor past two closed doors before coming to a wide open space that was the Master suite. \n\nThe large bed in one-half of the room faced a glass wall that looked out onto a private courtyard complete with hot tub and tropical plants. A small lounge and comfortable chairs sat in the other half of the room and opened into a large walk through closet space and bathroom. A closed in room occupied the space next the private courtyard and as she finished exploring the other areas of the room she went to the door.\n\n\"What's in here?\" she asked Josh curiously as she tried the handle.\n\n\"The fun room,\" he grinned. He stepped forward and pressed a small hidden panel beside the door which unlocked it and let her turn the handle. Peri opened it only a fraction before blushing and went to close it again.\n\n\"Maybe we should explore that later, together,\" she whispered.\n\n\"Not likely,\" Dante laughed. \"I'm not going to be the only one here who doesn't know what's in there,\" he put his hand on the door and pushed it wide. \"Well, well, well,\" he smirked. \"What I wouldn't give to be a fly on the wall in here.\"\n\n\"Stop that,\" Peri smacked his arm lightly and went to pull the door closed again not daring to look at any of the other people in the room. \"A little warning would have been nice,\" she whispered to Josh.\n\n\"What? Josh said innocently, \"They helped me build it, even designed some of the furniture to make it safer and ergonomically supportive.\" He couldn't help but laugh as Dante roared with laughter at his explanation. \"Trust me Dante is far from shocked. He's probably even more jealous now.\"\n\n\"Hell yes, I am!\" Dante laughed even more and stepped between them putting an arm around both their shoulders. \"Perhaps all the good things in your life should be in three's,\" he waggled his eyebrows at them.\n\n\"I give up,\" Peri muttered and stepped away from the brothers towards the small group who stood at the other end of the room talking quietly. \"I don't know how to thank you all enough. This is all beyond my wildest dreams.\" She said with genuine gratitude.\n\n\"You will get our bill,\" Tarsia laughed merrily enjoying the tour and the obvious happiness of Josh and his family. \n\n\"Maybe we should go back out to the living room before Peri's blush makes her burst into flames,\" Dante chuckled closing the gap between he and Josh and the others.\n\n\"Wait! The nursery where's the nursery? It's sort of important right about now,\" she asked running her hands over her big belly.\n\n\"I'm so excited about this, and I thought you would never ask,\" Grant took her hand, \"Come with me. We kept the nursery close. All babies need their Mama.\" They walked back to the short corridor, and he opened a door to a basic guest room with three single beds. \"This is where the nannies will stay and this,\" he opened the door opposite to reveal a nursery for three babies.\n\nOverwhelmed Peri walked into the room her eyes travelling over every piece of furniture and accessory. The individual wall art with the babies names she had commissioned hung proudly over each bed. The only person they had told the names they had finally decided on had been Grant until now. Each crib had its own space and accessories including changing station, rocker, and chest of drawers.\n\n\"I had all of the gifts we were given at the baby showers brought over and organised by the staff. Mama has already sent the girls that you and Bridgette approved. So we can move in straight away if we want,\" Josh said coming to stand behind her and wrapping his hands around her waist and belly. \"Or we can stay in the city close to the doctors and hospital until the babies arrive.\"\n\n\"I say we move in now,\" Dante said following them into the room after giving them a few minutes alone. \"She can come back to the city with me during the day so she isn't here alone and I can bring her back at ...\" his voice died as he stood in front of a crib and read the name art. \"Well, at least you didn't make it his first name. I'm not sure I could have handled that,\" he said his voice thick with emotion. \"Blaze Emilio,\" she said softly and turned to see the other names they had chosen. \"Cruze Joseph and Eden Anne,\" he read from the walls. \n\n*****\n\nPeri woke with a start. She woke often having to go to the bathroom, but she had never wet the bed before. She was sitting up and about to swing her legs over the edge of the bed when she felt the first twinge. Slightly stronger than the usual Braxton Hicks she endured she bit her lip and rubbed her belly as it subsided. The pain felt like it radiated from her back making her belly tense up and she began to worry.\n\nStanding up she padded to the bathroom and turned on a dim night light. Despite the wet bed, she still needed to empty her bladder she sat on the toilet and took a deep calming breath. Something was wrong. She could feel it. She was half-way back to the bed where her phone lay intending to call Pete and explain what she was feeling knowing he would calm her down when another twinge gripped her. Taken by surprise, she bent as if to double over but was stopped by the belly which had tensed with the pain and what she believed was just a stronger Braxton Hicks contraction.\n\n\"Peri?\" Josh said sleepily hearing her soft cry and realising she was no longer in the bed. \n\n\"Something isn't right, I was just gonna call Pete and tell him I feel a bit weird,\" she said through gritted teeth as the painful moment subsided.\n\n\"Weird how?\" Josh woke immediately at the sound of pain in her voice. \n\nPeri made it to the bed and turned on the bedside lamp folding back the sheets and revealing the dampness on the sheets. \"I wet the bed, and the Braxton Hicks feel different somehow. Like they are coming from my back and circling instead of just tensing my belly. It's not super painful or anything, but its hurts a little bit more than usual,\" She admitted.\n\n\"Fuck we should have stayed in the city,\" Josh immediately snatched up his phone and called Pete. \"She's in labour we're on our way, get whoever you need there we'll be there as soon as we can, I'll get D to drive,\" he said abruptly and hung up. \"Just sit for a minute I'll get everything we need including D.\" Josh began to bellow Dante's name before he left the room, adrenaline racing through him and colouring his voice with the panic he felt.\n\nPeri could hear a murmur of voices from the kitchen as she walked into the wardrobe and pulled on some clean underwear and one of the big tent dresses her mother had given her for being comfortable around the house. She slipped on a pair of flat shoes and grabbed the hospital bag she had repacked almost every day in the last ten days. Her caesarean had been booked for two days' time.\n\nDragging on a pair of jeans and a shirt, Josh rammed his feet into his shoes not bothering with socks. Dante raced into the room and picked up her bag as Josh picked up Peri and they hurried to the car. Bridgette had woken and stood in the doorway of her room realising what was happening wishing she could ask for more information or at least a phone call from the hospital, but instead she said a silent prayer and watched them go.\n\nPeri's emotions were all over the place, and she began to cry. This wasn't what they had planned; she wasn't ready. She was anxious and overwhelmed; she had not seen Josh look at her with such concern since they had reunited after her ordeal in Canberra. She didn't know what to do or what to say, she reached up and placed a hand on his cheek, and he gave her a crooked smile.\n\n\"It going to be perfect Josh, everything is going to be wonderful,\" she whispered and grimaced as another spasm started in her back and tightened her belly. \"I don't want the caesarean anymore, they want to come normally, I can do this, I'm stronger than I look,\" she gave a laugh that was laced with pain. \"I can do this. I want to do this. Don't let them cut my babies out, please, Josh, I don't want that anymore.\"\n\n\"Let's see what the doctors say when we get there,\" Josh said stroking her hair back from her face. \n\n\"I know there're risks, but there is a risk no matter what we do now. This isn't what we planned this is what they planned, let's let them come into the world the way they want to,\" her voice was soft but held a certainty and determination that she could and would give birth to them naturally.\n\n\"Ah,\" she groaned loudly biting her lip realising the pains were coming more frequently now and wondering how far they were from the hospital.\n\n\"Step on it D. or I'm going to be delivering one of the babies in the back of this car,\" Josh said urgently. \n\n\"You think I am out for a Sunday drive here,\" Dante growled, his anxiousness palpable. Dante pulled up to the emergency entrance of the hospital, and a team was waiting. Josh refused to leave her side as she was placed on a hospital bed and wheeled through and up in an elevator to the delivery suites. A team of doctors and nurses in surgical scrubs waited for them and overwhelmed by the crowd Peri sat up grimacing. \n\n\"These babies are coming now it's too late for the plan I don't want the caesarean,\" she declared loudly making everyone in the room stop to look at her. She cried out as another pain gripped her, \"They're coming now whether we like it or not so do what you have to do here not in surgery, I'm not having the caesarean.\"\n\n\"Peri, it's Dr. Bellino,\" Anna said pushing her mask down. \"I know you are scared, but it will be much safer if we stick with our plan,\" she said gently as once again the team started working to place monitors on both Peri and across her belly to monitor the babies. \n\n\"No! These babies want to come now, normally, not in a cold, sterile room. Josh help me,\" she begged looking up at him as yet another contraction gripped her. \"Pete, please, I can do this. You know I can do this,\" she was becoming distressed as she pleaded with the people around her. \"Oh God,\" she groaned loudly.\n\n\"Peri I'm going to examine you now. I need you to lie back and relax,\" Anna said. \"Dr. Thomaz needs to feel your tummy to see what the babies are doing right now. \"We need to look after the babies now,\" she said with a gentleness that encouraged her to relax and lie back allowing the doctors to work to ensure her babies were fine. \n\n\"Josh don't let them take me,\" she begged as he took her hand and stood by her head as her underwear and dress were removed, and she was given sheets for some modesty as the doctors worked. \n\n\"Peri, I'm Dr. Thomaz, and we have an ultrasound set up to look at your babies. Try and breathe slowly and deeply for me,\" he said in almost crooning tones.\n\n\"Baby A is crowning Peri, try not to push yet until we have more of an idea what position he is in?\" Anna said calmly, but her eyes sent a different message to Dr. Thomaz, who immediately ran the scanner down over her belly. \"It looks like we are doing this, let's hope that only one has decided to come right now.\"\n\nThere was a flurry of action as members of the team hurried for equipment and dragged it into the room. Josh watched wide-eyed as the room filled around him with bodies and equipment. His hand continued to stroke Peri's hair and try to soothe her. He bent his head to kiss her and promise her anything if she could just get through this safely but she cried out and crushed his hand in her own.\n\n\"He not waiting any longer it seems, push Peri,\" Anna said loudly. She pushed hard crying out and gripping Josh's hand and in only two pushes the first of her sons was born.\n\n\"I've got this,\" Dante said from behind Josh, \"Go and meet your son.\" Josh hesitated looking down at the woman he loved and back up at Dr. Thomaz, who now held his son who wailed taking his first breaths. \n\n\"Is he okay?\" Peri's eyes implored Josh, who kissed her forehead and moved to go to his son. \n\n\"He's perfect,\" Dante murmured taking the stool Josh had vacated and smoothing back her hair as Josh had done. \"The doctors need to check him over, and you have two more who are waiting to meet their Mama.\"\n\n\"Baby B is head down, but Baby C is still transverse. It looks like B pushed A out and is coming just as fast,\" Dr. Thomaz alerted the team. \"Peri you're going to have to keep going he spoke as he saw the current contraction subside. Breathe and feel what your body needs right now.\"\n\nThe second of the babies was born just as quickly as the first with the second of the boys being born only minutes after his brother. Josh was there to cut the cord for the second baby who was screaming and crying upon his entrance to the world. Dante remained with Peri holding her hand and helping her to understand what was happening by repeating everything the doctors said. He leaned forward and kissed her forehead as Josh had done as she cried and gasped for breath after delivering the second of her babies.\n\n\"Peri, we need to try and move this little girl, she's not dropping into position, and we need to try and turn her before she becomes too distressed,\" Anna said gently moving up to her head and talk to her. \"Dr. Thomaz is going to massage your belly and encourage her to move now that there is a little more room in there. Peri cried out as another contraction gripped her body, she was tired now and breathless from the pain and exertion. Determination drove her as she felt the heavy hand pushing hard on her and massage her belly trying to move the baby into position.\n\n\"She's turned now Peri, but the little ballerina has her hands above her head. How are you doing Peri?\" Anna asked as the doctors continued to manipulate her belly. \n\n\"I'm great!\" Peri tried to sound confident.\n\n\"Good. The baby is becoming stressed now. Try not to push yet I'm going to attempt to move her arms internally,\" Anna said and moved back to her position at the foot of the bed.\n\n\"I can do this, I really can. I can do this. Oh ah,\" Peri let out a long, painful cry as she felt the hand invade her cervix and attempt an internal manipulation. \"She's going to be fine because I can do this,\" she cried tears streaming down her cheeks as she thought of her baby being trapped and distressed within her. She felt the warm rush as the water was broken and she cried again as the doctors hand continued to move within her in an attempt to save her from surgical intervention.\n\n\"The heart rates beginning to decline,\" Dr. Thomaz announced, and Peri cried out in fear and pain as another contraction gripped her. The talk went on over her head as if she wasn't there and she knew that the baby was either not tolerating the labour anymore, or the placentas were beginning to detach and starving the baby of oxygen.\n\n\"Push, Peri push,\" Anna yelled withdrawing her hand quickly, and Peri put all of her reserves of energy into pushing this baby to the freedom that beckoned outside her body. Finally, fifteen minutes after her brothers she arrived. There was no scream or crying, and she appeared to be quite blue. Dr. Bliss took the baby quickly.\n\n\"What's wrong? Why isn't she crying? Oh my God what have I done?\" Peri was becoming hysterical. She should have let them do the caesarean she thought. One of her babies might not make it, and it was her fault.\n\n\"The doctors are looking after her Peri. She will be okay. Dr. Bliss has her,\" Dante said at a loss to say anything else as he stroked her damp hair from her face once again. \"Breathe, relax, you did it. You did it all on your own little Mama. You have three beautiful babies.\n\nPeri continued to ask for her babies and to see her daughter as they continued to deliver the placentas and clean her up.\n\nJosh returned to her holding a bundle. \"Hello, mama would you like to meet your son Blaze?\" He smiled and bent to kiss her forehead as he placed the baby on her chest. He immediately started rooting around and surprised she exposed her breast from under the sheet that now covered her body. He latched on but barely suckled before being content just to be there on her breast. \n\n\"He's a boob man just like his father and Uncle,\" Dante chuckled in awe of the woman lying on the bed and the small bundle she held. A nurse brought in Cruze and Peri took him in her other arm finding that he too seemed to be seeking out her breast. The twin boys rested peacefully as Peri counted little fingers and continued to ask about Eden. \n\n\"Can you check on Eden please, Josh?\" she asked her anxiety clear in her voice.\n\n\"She's okay, she just needs some oxygen for a few minutes, but she is recovering beautifully,\" Josh said gently. \"She's going to be perfectly fine. Pete is with her. He will bring her in as soon as he can.\"\n\n\"I'm sorry Dante, you got a little bit more than you bargained for tonight but thank you. We couldn't have done this without you here,\" Peri smiled and reached up to touch his cheek. Rather than feeling jealous Josh felt a warmth at seeing Peri touch Dante with such an intimate gesture.\n\n\"Are you kidding? I'm honoured and privileged to be here. I can't imagine anywhere I would rather be than here with you two right now,\" he said looking at them both and taking her hand. \"I love you,\" he said to Peri but looked up to include Josh in the statement.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "pregnancy",
        "triplets",
        "twins",
        "brothers",
        "birth"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-twelve-tables-ch-18"
}