{
    "title": "My Cock Ch. 02",
    "pages": [
        "I lie awake on my bare mattress watching the last sliver of daylight glide imperceptibly across the faded wallpaper. My hand drifts up and down my naked body, fingertips just barely brushing my skin. My cock lolls between my out-spread legs, wrinkled and flaccid. My fingers find the crusty remnants of dried cum on my belly. I absently scratching at it while listening to the noises floating in through the open window. \n\nI stare at the water stain on the ceiling, my ears alert for any sounds that hint of sex. A girl's voice out in the street. Is she flirting? A dull pounding from across the alley. Is it a headboard or a hammer? The girl giggles. Is someone tickling her? The unintelligible bass of a man yelling. Did he just catch his girlfriend in bed naked with another guy? A shower sputters and hisses somewhere close by.\n\nI go to the window and scan the alley. The top of a small window with blurred glass is partway open. I can see the edge of a bathtub. I wait, leaning to the side for a better angle. I pick at the hardened semen inside my belly button while I watch. There's movement. It's a woman. She's wearing a ratty blue robe that hangs open. I see her legs and a thick bush of dark hair with touches of gray. \n\nI take hold of my soft cock and roughly yank at it trying to get it hard. She approaches the window and I can just make out a flash of saggy cleavage. Yeah, right there. Now drop the robe, let me see those big floppy tits. She reaches up and pulls the blind down--show's over. Fucking tease. My semi-erect cock shrinks as soon as I let it go. \n\nI turn and survey my darkening one-room apartment. It's been a week since I was fired, and rent is due soon. I'm totally fucked. I shuffle across the thin carpet, trying to avoid the damp spots, and open the refrigerator. Half a container of duck sauce, relish, some dried up lemon wedges. Where the fuck did those come from? Wonder what it'd feel like to jerk off with cold duck sauce? Maybe later.\n\nI turn on a light and sift through the video tapes piled on the floor next to the TV. They're mostly crappy dubs and junk from the discount bin at my video store. \"Euro-Gash,\" seen it twenty times. \"Interracial Knob Gobblers,\" watched it this morning before I went to sleep. \"Amateur Hour Fuckfest,\" that one sucks. Nothing in the rest of the pile tickles my nut sack. I flip through a few magazines. I've already cum on all the good pages. I consider my computer. Piece of shit crashed a couple of days ago, so no more free porn.\n\nI think about Heather. I barely heard what Dave was saying when he fired me. I couldn't focus with Heather right outside his office. I could smell her perfume mixed with smoke from Dave's cigarette. I was transfixed as she leafed through an office supply catalog with one hand, while twirling a strand of her long hair with the other. I got this weird tingling sensation across the back of my neck as I watched her. She was completely oblivious. She had no idea I was a few feet away staring at her with a hard cock.\n\nThinking about Heather gets me erect in a few seconds. It strains against its own limits as if it wants to be even longer and harder than it is capable of. I stroke it slowly, picturing Heather standing up from her desk and lifting her skirt, exposing thigh-high stockings with lace tops. She's not wearing panties. A neatly trimmed triangle of soft blonde hair is nestled between the tops of her tanned thighs. My hand moves faster. She smiles and squats, opening her legs wide. She is perfection. My hand stops suddenly as I hear the sharp clack of heels on linoleum out in the hallway.\n\nI go to the door and press my ear against it. Definitely high heels. I open the door a crack and take a peek. Can't see anything. I stick my head out and spot a tall black woman at the end of the hallway. At least I think she's a woman. She's got a white dress on that pulls so tight across her ass I can see right through it. Fucking Ramirez got himself a goddamned hooker. That fat fuck. He opens his door and lets her in.\n\nI never stopped jerking my cock, the images of Heather replaced by the thought of that hooker's ass. I double-check the hallway, then let my door swing open. I stand in the threshold masturbating. If anyone opens their door they're going to see me. I hear a loud flesh on flesh slap from down the hall and the hooker laughs.\n\nI step out into the hallway, completely naked, cock in hand. If anyone comes up the stairs I'm fucking dead. I turn toward the stairs and defiantly thrust my cock in that direction. Who wants to see me jerk off? Come on, I'm playing with my hard cock in the middle of the hall, who wants to watch me cum? This feels so good. I bend my knees an open my legs a bit, letting my balls swing from my ass to my hand as I jerk off. Someone might hear me. Someone might be looking through their peep-hole right now.\n\nI don't care, I'm almost there. I'm going to come. Slap, slap, slap. My balls smack against the heel of my hand. My cock feels so good. I think I hear someone on the stairs, hurry, hurry, I'm too close to stop! My balls tighten and my cock surges. I cup a hand under the head of my cock as the cum spurts out into my palm. I catch all my spunk and quickly scuttle back into my room and close the door before someone sees me. God that was stupid, what if one of my neighbors caught me? I've got to stop doing that.\n\nI scrape the cum off my hand on the edge of an end table. I've got to get out of here. I pull on some jeans and a shirt, then slip on my tattered excuse for sneakers. I head out and down the stairs, resisting the temptation to go listen at Ramirez's door. \n\nOutside it's hot and the streets are busy. Friday night, nothing but possibilities. I pass three girls dressed for the clubs. They have sparkle in their hair, and mini-skirts that barely cover their asses. The one with big sloppy tits passes a bottle of something to the one with skinny legs as they totter down into the subway. There's no way at least one of those chicks isn't going to end up with a mouthful of some guy's jizz before the night is over. Lucky bastard.\n\nI continue down the street to the corner. There's a woman with a fussy kid in a stroller. I'm about to cross when she goes to give the kid a bottle or something. I decide to wait for the light. There's no better chance to get a look down a chick's shirt than when she's bending over to deal with a kid in a stroller. Her damn bra ruins the chance for a nipple shot, but I get a nice view anyway. Thanks for the peek, honey.\n\nI cross the street and find myself in front of my video store. May as well check it out as long as I'm here. I go in and make my way toward the adult movie room in the back of the store. I push through the saloon-style doors that creak loudly to announce my arrival.\n\nOne other guy is in the room. Always awkward. He tries not to notice me, I avoid eye contact and meander to the corner opposite him. I check out the garish video boxes emblazoned with gaping cunts, massive tits, and cocks of epic proportions. The other guy is working around the room clockwise, so I keep pace ahead of him, occasionally pulling a box off the shelf and checking the back cover.\n\nThe guy eventually chooses a video and hurries out. Only one flick? This guy must be a fucking amateur. I head over to the wall where the new releases are. Nothing I haven't already seen, but I double check to make sure. I hear kids squealing outside the swinging doors. Whoever the friggin' genius is that put the kids' movies next to the porn room deserves a baseball bat to the nuts.\n\nNot surprisingly, the door bursts open and little Johnny-sticky-face comes running in screaming \"What's in here, Mommy?\" I almost tell the little nose-picker that this is where babies come from, but he hears Mommy start counting down from three and runs out in a panic. I begin another circuit, making sure I haven't overlooked a hidden gem.\n\nThe doors squeak and flutter, I avoid looking at the new guy and focus on the video boxes. I continue to slowly move clockwise around the room, scanning each box as I do. After a minute or so I realize this guy is moving the wrong way. He's going counter-clockwise. We're going to run into each other soon, and there's no need for that. Another fucking amateur. I look over to see if I can make a discreet angle and cut past him, and almost piss myself.\n\nThe guy isn't a guy, she's a chick! I've never seen a girl in the porn room before, much less been in it with one. Now what do I fucking do? She must be looking for something for her and her boyfriend to watch. He'll probably come in here any second and knock my head off for checking her out. Or maybe it's for a bachelorette party?\n\nI stay where I am, staring at \"Open Up and Swallow, Part 12\" as she moves closer. I take another quick look. She's not very tall, not exactly fat, but not slim either. She's wearing black jeans, and a black leather jacket with a punk band logo on it. Her hair is short with some streaks of red, and she's got a bunch of earrings in one ear. \n\nShe continues moving closer until she's looking at stuff on the same wall as me. Should I say something? That might scare her off. I'm getting hard just being in the porn room with a chick. She's only about four feet to my right. She takes a box off the shelf for a closer look. \"Strap-On Slut Party.\" She must be a lesbo.\n\n\"That's, ahh...that's a pretty good one.\" Did I just say that out loud? Holy shit!\n\nShe quickly puts the box back without looking at me. Nice going dick for brains, now she's going to bolt. I stare straight ahead at a picture of some bald woman with a gob of cum on her tongue. \n\n\"I was, um, looking for something with guys doing it with each other, and with girls, too.\" Her voice is soft and quiet with a slight tremble to it. \n\n\"Ahh, well, okay.\" I'm stammering like I'm eleven years old talking to a girl for the first fucking time in my life. \"There's some bi stuff over along that wall there.\"\n\n\"Oh, thanks.\" She offers a nervous half-smile and quickly heads to where I pointed. She's not going to win any beauty pageants, but there was something very cute about her. Kind of chubby cheeks, small nose, and a lot of dark eye makeup. \n\nI should just grab something and get the fuck out of here. No, I can't. This chick is definitely horny. Just knowing she is behind me looking at porn is such a turn on. As soon as I get home I'm going to jerk off thinking about fucking this chick right here on the floor. Maybe she's like me. What if she's here to get a porno, then go back to her shitty apartment to watch it and get off? This chick is so cool.\n\n\"Um, is this one any good?\" She's right next to me holding out a box, \"Bi-Bath House.\" \n\n\"I haven't seen that one, but the company that made it is pretty high quality. They get a lot of awards, I think.\" I can't believe she's talking to me like this.\n\n\"Do I need a membership or something to rent movies here?\" She asks.\n\n\"Yeah, but you don't need a credit card, just a proof of address, like a phone bill.\"\n\n\"Shit, I didn't bring anything like that with me.\" Her pale cheeks are flush. \"Maybe some other day.\" With a nervous laugh she turns to put the video back.\n\n\"Well, if you want I can check it out on my account for you. I don't mind.\" Goddamned if I'm not the knight in shining fucking armor.\n\n\"You don't even know me. What if I don't bring it back and you get stuck paying for it.\"\n\n\"Yeah, I can't exactly afford that right now.\" I have a sudden flash of inspiration. This is never going to work. \"Well, you could watch it at my place. It's only a few blocks away.\" I'm now holding my breath. Please, please, please. She doesn't look so sure.\n\n\"I wouldn't try anything creepy or anything,\" I add. \"We could just hang out and watch the movie.\" She's thinking about it. Yes? Maybe? \n\n\"Just watch the movie?\" She bites her lower lip as she thinks. This girl is shooting right up the cute charts like a bullet.\n\n\"If that's cool with you.\" Come on you horny slut, just say yes!\n\n\"As long as you promise you're not a psycho.\" She smiles and hands me the video. \n\n\"I promise. I'm just a normal guy.\" That jacks off no less than ten times a day!\n\nWe get back to my apartment and I'm suddenly aware of the smell. She doesn't seem to mind though, so fuck it. I make a pointless effort to clear away some of the clutter, I move a pile of cereal bowls to the sink. She takes off her jacket revealing a loose black t-shirt with the sleeves cut off. She hangs her jacket on a door knob then sits on my mattress. \n\nShe picks up a magazine and flips through it, sniffs at one of the pages and looks at me with a knowing smirk. Shit, if I knew a chick was going to be here I would have stashed some of that crap. What the hell, why hide it? She finds a butt plug on the floor and sets it on top of the television. She notices something else up there and picks it up.\n\n\"What is this, a chop stick? I like the design on it, it's pretty. Where's the other one?\" All I can do is shrug.\n\nShe puts the video in the VCR and hits play. I'm still puttering around, picking crap up from here and putting it over there. I hear the phone sex ads come on. \n\n\"The remote is right over there if you want it.\" She just smiles, leaves the remote where it is and watches all the ads. I guess she hasn't seen them a hundred times already.\n\n\"Can you turn the light off?\" she asks.\n\nI turn off the light and make my way over to the bed. I sit down on the edge of the mattress. Her eyes are fixed on the small screen. The glow of the TV plays across her, lighting up her face and bare arms. The first scene is a guy giving another guy a blow job while he talks on the phone with his wife (who doesn't know yet that he goes both ways). \n\nI hear a muffled snap. I think that was the top button of her jeans coming undone. She leans back a bit getting comfortable. I'm dying to look, but I don't want to jinx it. My cock is practically bent double inside my pants struggling for release. I stare at the screen as the one guy gives the other guy's balls a tongue bath.\n\nI can feel a slight hint of rhythmic movements through the mattress. I risk a glance. She's got her top button open and the zipper partway down. Her hand is in her pants, but over her underwear. Holy shit. There is a girl sitting on my bed, watching porn and rubbing her pussy! The scene changes to a straight girl on guy situation.\n\nI lean back also and try to adjust my hard-on. From this angle it's easier to look at her without being obvious. She has her fingers inside her underwear now and I can see her hand moving in circles beneath her pants. I'm dying to take my cock out, but I don't want her to freak out and leave.\n\nBy this time the woman in the movie is on top of the guy, riding his cock while he spreads her ass cheeks wide. I can feel the bed moving with a quickening rhythm and she lets out a stifled moan of pleasure. I can see her squeezing her legs tight together with her hand pressed against her crotch. Oh God, I think she just came. In my room. With me right here.\n\nI don't move, don't breathe, don't blink. Was that it? Was she going to leave now? Oh, please don't. She sits up and watches the inane dialogue scene. I always fast forward past this crap, but she actually seems interested in the story. Weird.\n\n\"You can take you pants off... if you want.\" She says without taking her eyes off the TV.\n\n\"What?\" I heard her perfectly, I want to see if she'll say it again.\n\n\"I want you to masturbate with me while we watch the movie.\" She looks at me and smiles. \"Unless you don't do that sort of thing.\"\n\nI stand up and pull off my pants. My swollen cock springs free, pointing straight at her. \n\n\"You've got no hair down there,\" She observes.\n\n\"Yeah, I shaved it a week ago just to...see what it was like.\"\n\n\"It's cute. Reminds me of when I used to babysit.\"\n\nWhat the hell does that mean? Who the fuck cares, there's a horny girl in my room and I have no pants on. I sit back down and stroke my cock very slowly. If I go too fast, if I even hold it too tightly, I will come in a second. I want this to last.\n\nI look over, her eyes are on my cock, watching me stroke it. She sees me watching her and smiles. She lies back and wiggles out of her pants, then turns her attention back to the movie. I don't have to sneak peeks any more, I know she wants me to see her now. \n\nShe opens her legs a bit and runs her fingers through the tuft of dark hair just above her pussy. Her lips glisten in the shifting colored light of the television. She slides a finger down and lightly touches the tip of her swollen clit. She licks the end of that finger and quickly returns it to her clit, rubbing it in soft tiny circles.\n\nI can feel my orgasm about to unleash itself and I let go of my cock. This is a dream come true. I can't take my eyes away from this gorgeous creature. She watches a woman and a man go down on another guy together, knowing that I'm looking her the whole time. She runs a finger down and up her pussy slit. I pull off my shirt, hoping she will do the same.\n\nHer hand slips up across her round belly and under her shirt. She massages each of her tits while her other hand rubs her pussy. My hand is back on my cock. I'm still too close to coming to stroke it, so I just squeeze my shaft and let go. Squeeze and release. Nice and easy. She lifts her shirt up over her head, and pulls off her bra.\n\nShe's lying on my bed naked, watching porn and masturbating. This is heaven. My eyes hungrily roam over her body taking in every detail. Her pale soft thighs are spread wide. She pinches and pulls at both her nipples. I know she is no swimsuit model, but her soft curves and fleshy swells are exquisitely sexy. I wouldn't trade her for any of those models right now.\n\nHer tits seem strange, not like the women in the magazines or videos. I guess this is what real tits must look like. They are sexier than any implant I've ever seen. The way they sway and jiggle as she works her pussy. So beautiful. \n\nShe is really going at it now, no longer trying to be quiet. Long little moans build in intensity, each one louder than the last. Her head is back, eyes closed. She is fingering herself furiously with one hand, while the other grabs and pulls at her breasts leaving faint red marks. The moans from the video increase as well. She turns and looks at me.\n\n\"Come with me. I want to see you cum all over yourself.\" She whispers. \"I want to see you masturbate for me.\"\n\nI begin to pump my cock at a steady pace. Not too fast.\n\n\"Yes, play with your cock. Yes, yes, yessss.\"\n\nI can't hold back any longer. I begin jerking off like mad man. My hand is a blur as it jacks up and down my hard shaft. Oh, God, I can feel it. I am going to come.\n\n\"I'm coming!\" She lifts her ass up off the bed pressing her crotch hard against her hand. \"I'm coming, come with me, shoot your cum for me.\"\n\nThat does it. The head of my penis swells and I can actually see my piss hole open wide just as the first stream of cum shoots from my cock hitting me right in the face. She gives a final hard thrust into the air and begins to shudder with her own orgasm. Three more gouts of semen spew forth from my cock and cover my chest and belly. \n\n\"Fuck that was good,\" she coos after collapsing flat on the bare mattress. I look around for a towel or a sock that's not already covered in dried jizz. \"No, don't clean it off yet. I like it like that.\" She gives her tits a squeeze apparently still feeling the effects of her orgasm. \"Have you ever tasted your own cum?\"\n\n\"Just once,\" I lie.\n\n\"Do it now. I want to see you taste your own cum.\" She moves her hand back down to her cunt and begins fingering her clit again. \n\nI scoop up a gob of cum on my finger, her hand moves faster. She's loving this. I slowly move my finger toward my mouth.\n\n\"Put it in your mouth, eat the cum that just came out of your cock.\" Her hand is blazing back and forth between her legs. Her eyes widen as I lightly touch the white goo to my lips, then lick it off. \"Eat it, taste it, swallow it!\" She begs. I put my finger in my mouth and suck the rest of the cum off of it, then quickly scoop up more and eat that too.",
        "She squeals and lets out a soft grunt of pleasure as her third orgasm rocks through her body. She rolls to her side, hands still clenched between her legs, and I get my first good look at her ass. I love it. Big and round and smooth. I want to bury my face in it. I want to spread her cheeks open and slide my tongue all around her asshole.\n\n\"I'm sorry,\" I hear her say. \"I got carried away, I'm sorry.\"\n\n\"That's okay. I actually really liked it. This is the best sex I've ever had, seriously.\"\n\n\"I'm liking it, too,\" she says as she rolls onto her back, still slightly breathless. \"Okay, so you did what I wanted, now what do you want me to do for you?\" I swear her eyes actually fucking sparkle as she says this.\n\n\"Ah, let's see.\" What do I want? Don't want to push it. I don't want to fuck this up now. \"I, ah, I want to see you're pussy.\"\n\n\"I kinda think you already have, haven't you?\"\n\n\"Well, yeah, but I want to really see it, you know?\" I sit there feeling a bit foolish, with my dick in my hand and cum dribbling down my chest. She doesn't answer and just turns back to the movie, one guy is taking it in the ass while he licks some chick's puss. Shit, she's going to leave.\n\nShe shifts herself so she's half leaning on the grimy wall at the head of my mattress and opens her legs. Her pussy is shadowed by one of her legs, so she turns just enough so the light from the television illuminates her crotch.\n\n\"Come and look,\" she says, her voice soft and husky.\n\nI slide off the mattress onto my knees and move closer. I get as close as I can without blocking the light. I can smell her now. A musky mix of sweat and sex. She's amazing. I can do nothing but stare at her pussy. Her coarse dark pubic hair stops at the top of her slit. The sides are shaved, but I can see stubble. She missed the area down near the bottom and several strands of hair curl out from near her asshole.\n\nThe delicate creases of skin form lines that seem to swirl and flow one into the other. Vulva, vagina, labia, clitoris. They're all there in front of me plain to see, but still holding onto their sensual mysteries, refusing to reveal exactly where one sweet secret begins and the other ends. I look down at myself. My hand slides up and down my cum slicked shaft. Cock and balls. That's all there is to me. Simple, ugly, functional.\n\nHer hands move down between her legs. She runs her index fingers up and down her wet slit, then spreads herself open slightly. Pink skin gives way to redness in the places she was rubbing at just moments ago. With one finger she strokes a little nubbin of flesh, coaxing it out from beneath a fold of soft skin. She gently rubs the side of her tiny clit, rolling her hips slightly as she does. \n\nI focus on every detail of her swollen lips. How they curl this way then that. The slightly darker skin along the top edges. The way they seem to simply melt away into the area around her pussy hole. I want to taste her so bad. I want to glide my tongue across her hole, up her pussy to her hard little clit. I want to kiss and suck her and cover my lips and face with her wetness.\n\n\"You like my cunt?\" She asks. \"You like looking at my pussy, you dirty boy?\" She knows I'm fascinated. She begins masturbating. This time she's masturbating just for me. Her finger moves up and down, pressing and rolling her clit against the side of her pussy. She reaches around her leg with her other hand and dips the tip of a finger just into the opening of her vagina. I notice her chipped black nail polish just before her finger disappears inside.\n\n\"You going to watch me fuck my finger, you nasty pervert?\" God, I wish I had a video camera for this. I would never need another porno or magazine for the rest of my life. I would just watch the tape of this horny girl spreading her pussy for me, over and over. Now her finger is deep inside her cunt, like she's searching for something in there.\n\nI switch to my left hand and slow down a bit. I don't want to come until she does. She is really fucking herself hard now. One hand pumps away at her pussy hole, while the other works her clit. She hunches forward and pulls her hips up some. She's looking down at her own pussy. She's watching herself masturbate.\n\n\"Yes, watch me make my pussy come. Stroke your hard cock while you look at my cunt.\" Her commands aren't necessary, I'm not taking my eyes off her for anything. I notice the small rolls of her belly in this position. She's so horny she's not even self-conscious about it or trying to cover up. God, what a turn on. I want to slip my cock in between those shameless rolls of fat and fuck her cute little belly.\n\nShe suddenly arches her back, lifting her ass up off the bed. She thrusts her cunt into the air, only inches from my face. Her thigh brushes my cheek--it's so soft. I switch back to my right hand, jerking as fast as I can. I'm kneeling on something sharp, but I can't even consider the pain right now.\n\n\"Uh huh, uh huh, yes, oh, yes,\" she moans. She shoves three fingers into her pussy and bucks even harder. She's really humping her hand now. The slick sounds of her fingers plunging in and out of her cunt mix with her panting cries in a sublime sexual melody. \n\n\"There it is, yes, right there!\" She lets out a long low guttural moan and her pussy actually seems to pulsate just before releasing a jet of warm fluid that splashes onto my face. I can't fucking believe it! She tenses again and another squirt shoots out and coats my neck and chest.\n\nI beat my cock harder than ever. My head is swimming, I think I might be hyperventilating. My orgasm starts at the base of my cock. I feel the sensation move up my shaft and my spine at the same time. My cum spatters out onto my mattress, the floor, my leg, everywhere. But even after I'm done coming I keep stroking my cock. That feeling is still there in the tip of my penis. My whole body spasms with the after effects. Once, then once more. I don't want this feeling to end.\n\n\"Oh my God, what happened?\" She looks at my face soaked with her pussy cum. \"That's never happened before, I'm so sorry. I swear I didn't mean to do that.\" She seems genuinely horrified. \n\n\"Are you kidding? That was incredible. I think that only happens to women when they are really excited or something.\"\n\n\"I've never come that hard before. Oh, God, your mattress.\" She was referring to the huge wet spot beneath her.\n\n\"Don't worry about it.\" My cock still throbs in my hand. I swear I'm going to be hard for the rest of the fucking week.\n\nI climb back onto the bed and lie next to here. Nothing but the sound of our breath. She twists and stretches letting out a lilting moan that seems to define satisfaction. Her knee touches my leg. I half expect her to pull away, but she doesn't. I know it's ridiculous, but I can't help feeling like this is the most intimate contact I've ever felt.\n\n\"I have to pee,\" she murmurs. She gets up and walks toward the bathroom. I marvel at the movement of her round ass as she steps over my dirty clothes on the way to the bathroom. She closes the door only part of the way. I hear her put the seat down, then listen to the rush of pee shushing forcefully from her pussy. Sounds different from when I go. I wish she left the door open all the way. \n\nShe flushes and moves back through the shadows of my room and I can see just the highlights of her body. The top of her shoulder, the curve of a breast, the glint of her belly button ring. She finds her shirt and pulls it on.\n\n\"You can stay if you want,\" I offer.\n\n\"Thanks, but I should head home.\" I stare at her crotch as she moves around the bed looking for her pants and underwear. Why is a girl in nothing but a shirt so fucking sexy? I'm mesmerized as she bends over then struggles into her pants, pulling them up tight around her ass. She bunches her panties and bra up into a ball and stuffs them into a jacket pocket. \n\nI notice the girl on television taking simultaneous loads in the face from two guys who then rub the heads of their cummy cocks together. The credits roll. \n\nShe's ready to leave, I get up and walk over to the door with her. I feel kind of silly all of the sudden, standing in front of her naked with various bodily fluids drying on my skin. \n\n\"So, if you ever want to come again...\" I say not really knowing where to go from there.\n\n\"Yeah, sure. Maybe.\" She tucks a strand of hair behind an ear while looking at the floor. Should I give her a good night kiss or something? I just watched this girl shoot cum all over my face while I jacked off with her, why the fuck is this so awkward?\n\n\"Okay, well, it was, ah... nice meeting you.\" Can I possibly be any more lame?\n\nShe opens the door and heads out, then turns back. She leans in and gives my cheek, the one we both came one, a long slow lick. \n\n\"I'll find you again when I need you,\" she whispers in my ear, then gives me a quick soft kiss on the lips. She hurries down the hallway. I stand naked at my open door listening to the heavy thunk-thump of her boots all the way down the stairs. \n\nI slowly close the door and go into the bathroom. The toilet seat is down. I sit and take a long piss. The VCR cycles to auto-rewind. The tape whirs through the machine. I go to my bed and lie down with my face next to the wet spot. It's still warm. I wonder if she'll think about this the next time she masturbates. Will she picture my cock when she comes? \n\nI doze off replaying every detail about her and her pussy in my head. "
    ],
    "authorname": "kylewhitney",
    "tags": [
        "masturbate",
        "mutual masturbation",
        "male masturbation",
        "mutual masturbation",
        "chubby",
        "voyeurism",
        "squirt",
        "female ejaculation"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/my-cock-ch-02"
}