{
    "title": "The Bar and Grill Pt. 04",
    "pages": [
        "AUTHOR'S NOTE: Well, here it is, the fourth and final part of The Bar and Grill. Thanks to everyone for bearing with me as this got written and posted. In my defense, though, I haven't kept you waiting as long as DanielQSteele has for \"When We Were Married.\" (Really, DQS, will you please hurry up? We're dying out here waiting to find out what the hell happens next!) Then again, this story is neither as long, complex, nor emotionally packed as DQS's masterpiece, so I should note that it wasn't particularly difficult to write.\n\nIf you haven't figured out yet by my comment on the first part, this is based on true people and true events. Truth be told, it's based on me. I'm Tim. Sure, I've changed some things here and there--most notably my profession because I wanted to write something more quirky and original than my previous efforts--and I've embellished, added, or deleted facts in numerous places to heighten the drama or humor or, most often, the flow of the story. Still, Tim was me. (HarryinVA, don't feel bad for saying in your comment to part 1 that you hate me; I'll admit I was a dumb ass for much of my life, and the residuals are still there for all to see to this very day.) I'll leave it to the reader to figure out what happened and what didn't in real life, but ninety percent of this is true. That's also why it was so easy to write.\n\nI hope you've all enjoyed reading this, and now you probably all understand a little better why I'm as fucked up as I am.\n\nIn closing, I ask that you all take a moment to comment on the story. Comment on whatever you want: The writing, how much you hated the continuous use of recipes, which characters you liked and disliked, how horrible my own choices in life are. I'd really appreciate your feedback, even if it is just to call me a pathetic wimp.\n\nTWENTY-EIGHT\n\nBy the next morning, the county cops had heard about Randy's arrest, and they filled Moss in on all the other sightings. It was thin, they agreed, but Moss decided to go ahead and draw up separate complaints on each time Randy had been parking outside our house and a final complaint for felony stalking. All told, I signed almost two dozen separate complaints, and Moss told me bail would be set high.\n\nAll told, I was in an amazingly good mood by the time I returned home at about nine. Both of us had the weekend off, and I was looking forward to making a big breakfast for Nicole, Alistair, and me before spending the day outside getting the landscaping beds cleaned and prepped for the Spring that was now falling upon us.\n\nWhen I walked in the door, I heard the shower shut off in the hallway bathroom. Good, I though, Nicole is up.\n\nI went into the kitchen to get going on breakfast when I saw Ernie trot past me down the hall and toward the bathroom. I watched him, smiling. He sure had taken a shining to our new roommates, Nicole almost as much as Alistair.\n\nGetting to the door, Ernie scratched at and pawed the door, trying to get Nicole to let him in. She hadn't closed the door all the way, though, and I smiled as the door slowly swung open. Cold pug nose on wet, bare skin had often made for an early morning shocker in my life.\n\nThe door swung all the way open, though, and my smile quickly changed. Nicole was standing in front of the mirror. Brushing her long wet hair. Totally naked.\n\nI watched her reflection in the mirror. The long slow strokes of the brush down her hair, her proud, upturned breasts--little more than a handful but shaped as if by a master sculptor--her flat, taut belly flaring to her slightly jutting hipbones, the bubble of her perfect ass rising. And her mons. Shaved bare, completely without hair. I'd never seen one shaved all the way, at least not outside a porno flick.\n\nWhen my eyes traveled back up her body, though, my wonderment turned to horror. Her biceps were a mass of dark bruises where Randy had held her. He'd really been gripping hard, I realized, and I was amazed she'd not been crumpled at his feet the night before.\n\nI took all of this in in little more than a few seconds, but I couldn't look away from her arms. Then Ernie's nose got to her, and I saw her jerk and look down. My eyes went from her arms to her face in the mirror, and she looked up and saw my reflection staring at her.\n\nHer face remained a mask, staring evenly back at me for a moment before reaching over and closing the door.\n\nI stood there for a moment, embarrassed. Then I did what I did best. I went to the refrigerator and pulled out the ingredients for French Toast and French omelettes with gruyere cheese and fresh chives.\n\nFifteen minutes later, Nicole walked into the kitchen, fully dressed in jeans and an old sweater, her hair still wet. Alistair was in her arms, slung across a hip with his face buried in her wet hair, and Ernie was trotting dutifully behind.\n\n\"Breakfast?\" I said.\n\n\"Smells good,\" she replied, smiling. \"French toast?\" she said to Alistair. His face remained in her hair, but his sleepy head nodded.\n\nI didn't know what to say about seeing her. I was embarrassed, ashamed, worried. Hell, let's face it, I didn't really know what I was.\n\nNicole seemed to sense this, and her reaction was strange. She was neither quiet nor boisterous. Rather, she just acted like nothing had happened. Like it was no big deal and I shouldn't be so pensive about it.\n\nBut I was.\n\nTWENTY-NINE\n\nA half hour later, I was in the front landscaping beds raking leaves from the mulch.\n\n\"Want some help?\" Nicole said.\n\nI stopped and turned. She was in a stocking cap, old tennis shoes, light jacket over the sweater, and had gloves on her hands.\n\nI smiled. \"Outside work's my responsibility, remember?\"\n\n\"Yeah,\" she said, \"but the house is already clean, laundry's going, and the dishes are done. Alistair's watching cartoons with Ernie, and I'm bored.\"\n\nI looked at her for a moment. She seemed amused, her eyes dancing and a smile playing at her lips.\n\n\"Jesus, Tim,\" she said. \"You act like you've never seen a girl naked before.\"\n\nMy eyes went wide and I felt the blush creeping over me. She laughed.\n\n\"You're embarrassed,\" she taunted.\n\n\"Well I . . . it wasn't . . . I didn't mean to-- \"\n\n\"What?\" she teased. \"You think I'm afraid you've taught Ernie to go opening doors so you can catch your peek? I mean, I can just picture it. 'Ernie,'\" she whispered, a hand cupped to her mouth. \"'Quick. She's in the bathroom. Get over there and open it up and let's see what she's got.'\"\n\nNicole was laughing so hard by the end of that she was snorting. It was infectious, and I started laughing with her. She'd never much shown a sense of humor, and I'd definitely never seen her laugh this hard. And I realized that, for the first time since I'd known her, her defenses were totally down. It was like I was seeing the real Nicole for the first time, the Nicole from before her husband was murdered and her boyfriend had put her through months of terror and hell.\n\nI couldn't take my eyes off her as our laughing died down.\n\n\"Cat got your tongue?\"\n\n\"Just never seen you like this before,\" I said, turning back to raking leaves.\n\nShe scooped a pile of leaves into the wheelbarrow.\n\n\"Like what?\" she said.\n\n\"So happy. Playful. You know.\"\n\nShe didn't say anything, just kept piling leaves into the wheelbarrow, pressing them down as she did so.\n\n\"You okay after last night?\" I said. \"I mean, I saw the bruises.\"\n\n\"Yeah,\" she said. \"I'm good. The bruises aren't really that bad.\"\n\n\"And everything else?\"\n\nShe only nodded, but the peaceful look didn't leave her face. Not a smile, mind you, but not the usual silent mask, either. She seemed content.\n\nWe worked in silence for a couple of hours, Nicole bopping back into the house now and again to check on Alistair. The chilly, damp day was exhilarating, and it was relaxing being outside for so long after a winter stuck inside. Unfortunately, it also got us both to do more physical labor than either of us had done in months, and we were wiped out by the time the work was all done.\n\n\"Swear to God,\" I said to her as we put the rakes and wheelbarrow away, \"I may need a nap.\"\n\n\"Me, too,\" she agreed. Then she raised her eyebrow at me.\n\n\"What?\" I said.\n\nShe only smiled, then shook her head. \"Nothing. Just thinking of something.\"\n\n\"Thinking of what?\"\n\nThen she started giggling.\n\n\"Tell me,\" I insisted, pleased her mood was lasting.\n\nShe only shook her head, her giggling going on.\n\n\"I'm going to tickle you if you don't,\" I warned, stepping toward her and reaching to her ribs.\n\nShe tried to block me by pulling her arms in, but she was unsuccessful as I rubbed my fingertips over her ribs.\n\n\"I'll tell you,\" she said, backing away with a shriek.\n\n\"I'm waiting,\" I pressed.\n\nNicole tried to stop her giggles, looking at me and trying to keep a straight face. Then her eyes roamed from my face down my body and back up again, and her giggles started anew.\n\n\"C'mon, what's so funny here?\" I said, stepping toward her again.\n\n\"It's what Jennifer said,\" she shriek, covering her ribs with her arms.\n\n\"Jennifer?\"\n\n\"That girl you dated,\" she said.\n\n\"What did Jenny say?\"\n\n\"We were talking last week. I was her waitress. Her's and Jammer's. They were out to dinner together. He was asking her what was so special about you, why she couldn't get you out of her mind.\"\n\n\"Okay,\" I said, waving my hand for her to continue.\n\n\"Well, she saw me standing there waiting for their order, and she invited me to sit down with them. 'Ask her,' she said to Jammer, but I didn't know what she was talking about. 'Tell Jammer what Tim's like in the sack,' she said. I laughed and told her I didn't know. It wasn't--we weren't, aren't--like that.\"\n\nI nodded, feeling my face flush as she spoke. I knew where this was going.\n\n\"So she gave you details, right?\" I said.\n\nNicole nodded, her giggling starting again.\n\n\"A lot of details,\" she confirmed.\n\nI was . . . . Hell, I didn't know what I was. Angry, embarrassed, upset, pissed at Jenny for shooting her mouth off and at Nicole for teasing me about it. Was I really that bad in the sack?\n\nI had to get away from her, and I fled into the house and into the bedroom.\n\n\"Tim,\" Nicole cried out behind me, \"it's not like that. Really.\"\n\nBut I was in my bedroom with the door closed behind me before she could catch up.\n\nI sat there, confused. Why should it matter? I thought.\n\nBecause I liked her, that's why. Because I was falling in love with Nicole, and I didn't want her to laugh when she thought about being with me. And now Jenny had betrayed me. Whether intentional or not--and I couldn't believe she'd done it intentionally--she'd said enough so that Nicole laughed at the very notion of going to bed with me.\n\nAfter five minutes of sitting on the bed, I stood and moved toward the master bathroom and the hot shower I needed to relax and clean up.\n\nI was in the shower, feeling the water cascading down, when I saw her shadow outside the frosted shower door.\n\n\"Nicole?\" I said.\n\n\"I didn't mean anything by it,\" she said.\n\nI saw the shower door start to slide open.\n\n\"Nicole,\" I warned, placing my hand on the handle to keep the door shut.\n\n\"You got to see me,\" she said.\n\n\"Yeah, but that was-- \"\n\n\"It's only fair,\" she interrupted, her voice gleeful and the pressure still trying to slide the door open.\n\n\"Give me a minute,\" I said. \"Let me finish first, okay?\"\n\n\"Okay.\"\n\n\"It'll be a few minutes,\" I continued, feeling the pressure leave the door. \"I still haven't soaped up yet.\"\n\n\"Okay,\" she said.\n\nThe pressure on the door was gone, and I reached for the shampoo and lathered some in my hair.\n\nThen I felt a breeze shiver over my body and turned to the shower door.\n\n\"I thought I'd help you,\" Nicole said, stepping into the shower. Her cool hands pressed against my chest. \"Soap up, that is.\"\n\nShe looked into my eyes as the water cascaded over us.\n\n\"You think this is a good idea?\" I said.\n\n\"Yes,\" she replied, leaning in to kiss me.\n\nOur lips met, wet and soft and hungry. In a flash, I was harder than a rock, and she pressed herself into me. Her breasts pressed against my chest, and her hips pushed into mine. With one hand, she held the back of my neck and with the other she pulled my lower back closer to her smooth, taut body.\n\nThe kiss was soft and slow, and I let her set the pace. After a moment of brushing her lips around mine, I felt her lips part and her tongue seek mine. I responded, our kiss building as I reached my arms around her and stroked the smooth skin of her wet back.\n\nShe broke the kiss and laid her cheek on my shoulder, our hands sliding over each other's body.\n\n\"She said you were the best she's ever had,\" Jenny murmured, tracing a fingernail up my spine as I massaged between her shoulders.\n\n\"Then why was it so funny?\" I said.\n\n\"Just picturing it, I guess.\"\n\nI said nothing. She was holding back, but I didn't know why.\n\n\"And how specific did she get?\"\n\nNicole chuckled into my shoulder blade. \"Very.\"\n\n\"Uh huh,\" I said.\n\nMy right hand snaked around the front and brushed over Nicole's breast, lightly past her nipple. She shivered.\n\n\"And you thought you'd give it a try?\" I asked.\n\nShe turned her head back to face me, a smile on her lips.\n\n\"That's what I was hoping.\" Her face got earnest. \"Hoping for quite awhile now.\"\n\n\"And if Alistair walks in?\"\n\n\"Napping with Ernie. Just put them to bed.\"\n\n\"So you've got this planned out,\" I said, now palming her breast with my hand and giving it a gentle squeeze.\n\nA look of pleasure swept her features, then she nodded and leaned in to kiss me again.\n\n\"Okay,\" I mumbled through the kiss. \"But I don't have any . . . .\"\n\n\"The pill,\" she mumbled back. \"It's pretty safe.\"\n\nSo we got down to cleaning each other up. In very intimate detail.\n\nI've long been convinced that there's a difference between naked and nekkid. The former is when you're in the shower, the latter when you're in the shower with someone else doing naughty things. We'd started out naked, and it stayed naked for a long time as we stroked and massaged and kissed. But then it turned to nekkid when I rubbed the soap into the washrag and began to get really intimate. She was content to use the soap without the wash cloth, and I appreciated her decision when she made sure my cock was clean as a whistle.\n\n\"You know what I want to do?\" she said.\n\nI shook my head as I rubbed the washcloth down her back and toward the crack in her amazing ass.\n\n\"I want to wash you everywhere I want to taste you.\" Here eyes had a gleam as she said this, stroking my cock with one hand while soaping up my balls with the other.\n\n\"Sounds like a good idea,\" I said.\n\n\"So you know where my lips and tongue are going to be before they get there, okay?\" she continued.\n\n\"And turnabout's fair play?\" I asked.\n\nShe nodded, then looked down at her hands.\n\nI soaped up my free hand and moved it to her breasts, taking my time as I soaped them up. I squeezed her breasts and nipples, and her eyes moved to my hand as her faint pink nipples grew in my hand. With the other hand, I moved the washcloth over her stomach and hips, rubbing slowly.\n\n\"Ditch the washcloth,\" she whispered.\n\nI did, rubbing the soap over her breasts and torso with my bare hands, enjoying the feeling of her smooth, slick skin and tight, hot body against me.\n\nShe leaned in and kissed the base of my neck, and I felt her hand leave my cock and go around to my ass, squeezing and sliding. It felt good, and I slid one of my hands back to her amazing ass, ready to burst at the sensations.\n\n\"I like your ass,\" she said through her kisses. I felt a fingertip tracing down the crack between cheeks, slowly.\n\nI tensed as she got closer, and I decided to give her some of the same. My fingertip began its own journey down the crack of Nicole's ass, and I felt her hot breath increasing against my neck.\n\nMy other hand moved down her stomach and cupped her mons. The feeling of her slick, shaven pussy was like no sensation I'd felt. Well, no sensation I'd felt, that it, until my finger traced down a little further to the furrow at the top of her lips. Her clit was hard and her pussy was on fire, wet and hot.\n\nHer breathing increased against my neck and I felt her hand on my ass pressing downward and against my clenched opening.\n\n\"You ever been kissed there?\" she whispered, pressing around the knot.\n\nMy breathing was now increasing, as well, and I couldn't answer through the sensations.\n\nInstead, I started rubbing my finger over and around her clit while my other hand sought out her backside.\n\n\"Are you going to kiss me everywhere?\" she said as I circled her rosebud and clit with my fingers.\n\n\"Yes,\" I gasped. \"If you'll let me.\"\n\nThen her lips were again on mine as she pulled my ass into her. Her breath was coming in gulps, and I kept circling her with my fingers.\n\n\"Let's get out of here,\" she urged between kisses. \"The bed.\"\n\nI slammed off the water and slid the door open as fast as I could, stepping onto the shower rug and pulling her out with me. Then she was back in my arms again, all slippery and hot and frantic. I lowered my mouth to her breasts and sucked in her nipples, and her hands went to the back of my head to keep me there.\n\nI knew what I wanted to do, and I picked her up and carried her to the bedroom. I lowered her to the bed, my mouth now traveling over the hollow at the base of her neck.\n\n\"Like this,\" I said, breaking from her and turning her over before pulling her legs off the bed.\n\nShe didn't fight me as I maneuvered her. Her arms were flayed out above her head, her face turned to the side and framed by her hair spilling all around her head.\n\nI went to my knees at the base of the bed and, with my hands, spread her legs and leaned in, kissing her inner thighs as my hands went to her ass and kneaded that perfect, pouty posterior.\n\n\"You like my ass, don't you,\" she gasped as my tongue got closer and closer to her core.\n\n\"I love your ass,\" I corrected her.\n\n\"You're always looking at it,\" she whispered through her panting.\n\nShe gasped as I ran my tongue the length of her slit. Enough talking, woman!\n\n\"That's so good,\" she murmured as my tongue traveled up and down her length, softly and slowly.\n\nThen my lips and tongue kissed, licked, and gently bit the firm, perfect globes of her ass. Her moaning increased with the hunger of my attention, and I pried her ass cheeks apart with my hands, seeing the crinkled knot of her anus in front of me. Oh well, she'd said so long as I cleaned it for her, I thought, tracing my tongue toward it.\n\nShe gasped, her hips twitching, as the tip of my tongue brushed over the tiny furrowed ridges of her rosebud, the knot clenching and unclenching. She groaned, not turned off by my actions. Rather, her hips started a gentle roll, her undulations driving her ass harder then softer on my tongue.\n\nMy hand found its way to her pussy. My fingertips teased up and down her puffy lips before a finger eased slowly into her opening. My thumb brushed lower, finding and then circling her clit as my tongue lashed at her ass and my finger felt around the walls of her pussy.\n\nWithout warning, Nicole groaned and her hips pushed back on my assault, her ass unclenching as she did so. I felt my tongue sink in--just the tip, tasting a musky soapiness--and her groan increased as her hips started rolling faster. I stayed unmoving, allowing her to fuck herself against my tongue and finger, and her quickening breath told me it was the right move.\n\nThen her body went rigid, clenching on me, as a long \"Uhhhh\" escaped Nicole's lips. In response, my tongue left that perfect ass and went to her clit, circling and sucking on the engorged flesh and drawing out her orgasm.\n\nAfter nearly a minute, her orgasm complete, Nicole went limp. I brushed my tongue away from her wet, puffy lips and kissed her inner thighs.",
        "\"That was so good,\" she murmured into her outstretched arms.\n\nI looked up, standing as I did so.\n\n\"You liked?\"\n\n\"I liked,\" she said, her eyes closed.\n\n\"Well let's see if you like this,\" I said, guiding her hips to turn over until she was on her back.\n\nI gazed at her smooth pussy, mesmerized.\n\n\"I've never seen,\" I started, then let the words die as I leaned in to kiss her bare mound. From there, I trailed my tongue and lips up her flat belly to her breasts. She'd be too sensitive for my lips to continue their assault on her clit, and I wanted to get familiar with the rest of her.\n\nNicole's hands found my head, and her fingers brushed through my hair as I sucked on her nipples and all over her breasts. Then I felt her hands tugging my hair, and I followed her direction and was assaulted by her mouth, her tongue frantically searching then attacking mine.\n\n\"Hurry,\" she urged, a hand going down between us and guiding me toward her.\n\nI allowed her to guide the tip to her opening, easing just the head into her. She was an inferno, and I gasped with the sensations. Her hands went to my ass, trying to pull me in deeper, but I resisted. Instead, I withdrew slowly before again pushing just the head into her. I kept this up, teasing her with bare penetration and making sure I rubbed against her clit with every re-entry.\n\nNicole's panting turned to whimpers of frustration, and I smiled down at her. Her mouth opened to say something, and I chose that moment to slide the rest of the way into her. Her words were lost as her head tilted back and a long, soft moan escaped her lips. I leaned in and kissed her neck, then up to her earlobes.\n\n\"You're on fire,\" I whispered into her ear, holding myself fully inside her and grinding my pelvis against her.\n\nNicole gave a brief \"Oh, oh\" in reply. I felt her walls clamping around me, her fiery, spasming core driving me to the edge. My God, it had been forever since I'd been laid, and I was doing my damnedest to hold back.\n\nThen her hands were in my hair, her lips and tongue seeking mine as her pelvis started bucking and her upper body went tight.\n\n\"Oh Jesus,\" she moaned into my mouth.\n\nAs her slick, silken walls convulsed around me, I felt my resistance shatter and I groaned as I came. Her right leg clamped over and around me, her hands going to my ass and holding me deep inside her as I shuddered with the force of my release. Her lips were all over me, kissing my face and neck and ears as my tension released and I relaxed atop her.\n\nI looked down at Nicole, and she was staring back at me with eyes wide open.\n\n\"That was pretty fucking wow,\" I smiled at her.\n\nShe nodded, her face a mixture of sated and exhausted.\n\n\"I've never . . . .\" Her thoughts seemed to be mixed, and she couldn't get the words out.\n\nI stayed above her, my weight on my forearms and my softening cock still inside her.\n\n\"Was it as bad as Jenny told you it would be.\"\n\n\"That's not what she said,\" Nicole said, closing her eyes and her smile getting wider. \"'Excitable boy.' That's what she called you. She said you're like no one she's ever been with before. More than once, at least.\"\n\n\"How so?\" I said, my embarrassment gone in our postcoital bliss.\n\nNicole opened her eyes and stared at me, her eyes twinkling. \"She said you're like a little boy in your excitement. Not slow and methodical and tender, but not rough and aggressive, either. It's like every time's the first time for you.\"\n\n\"Is that a good thing?\"\n\n\"Oh yeah,\" she said. \"Now I know what she was talking about, and I can tell you from firsthand experience now that it's a real good thing.\"\n\n\"So you don't prefer that I be more, what, tender?\"\n\nShe shook her head. \"This is just fine, thank you.\"\n\nWe kissed a couple of times, me still atop her and her not seeming to mind. Then she snorted into a kiss.\n\n\"What?\" I said.\n\n\"Just thinking about some things.\"\n\n\"Such as?\"\n\n\"Jennifer said you were like a kid in a candy store.\"\n\n\"And?\" I prodded.\n\n\"I'm just thinking how right she was. Like my body was for you to toy with however much you wanted, and you were really turned on getting to do it. It makes me feel beautiful. Sexy.\" She paused, her voice getting lower. \"And I was just remembering how you got to taste some candy that no one else has ever tasted before.\"\n\n\"You mean when I?\" My eyes traveled around her side toward her beautiful bottom.\n\nShe nodded.\n\n\"Did you like it?\" I asked.\n\n\"Oh yeah,\" she said. \"Which surprised me.\"\n\nI withdrew from her and laid on my side, looking at her face while stroking her belly down to her legs.\n\n\"So maybe we'll get to do this again sometime?\" I asked.\n\n\"Like right now,\" she said. \"I still owe you some kisses, don't I? Some areas we got you all sparkling clean, right?\"\n\nShe slid down, kissing a trail down my belly to my softened cock as she did so. I felt my excitement returning as I watched her, my hands stroking her back and shoulders as she licked up and down before taking me fully into her mouth.\n\nI'm pretty sure I acquitted myself well in the second bout.\n\nI mean, she napped for at least an hour afterward, and the smile never left her sleeping face.\n\nSo that's good, right?\n\nTHIRTY\n\nSunday morning, I awoke early. Nicole was sleeping next to me, and I felt a feeling of tenderness as I watched her.\n\n\"What're you looking at?\" she mumbled, her eyes still closed.\n\n\"How'd you know I was looking at you?\"\n\n\"I just do.\" A faint smile played over her lips.\n\n\"Banish those thoughts from your mind,\" I teased. \"I couldn't again if I wanted to. And I do, but I'm pretty sure I can't.\"\n\nHer eyes opened and stared into mine, an evil glint sparkling as her lips turned upward more.\n\n\"How do you know that's what I was thinking?\"\n\n\"I just do,\" I said.\n\nShe nodded.\n\n\"Get up,\" I said.\n\nShe moaned. \"Why can't we just stay in bed for awhile?\"\n\n\"Because I want to get an early start.\"\n\n\"On what?\"\n\n\"I want to take you and Alistair to the zoo,\" I said. \"Show him the gorillas and giraffes.\"\n\nNicole said nothing, her lascivious smile transforming to simple pleasure.\n\n\"He's never been to the zoo,\" she said.\n\n\"Then let's have an adventure, okay?\"\n\n\"An adventure?\"\n\nI nodded. \"I'll pack us a picnic, and we'll take him to see the wild animals.\"\n\n\"You always like this?\" she said.\n\n\"Like what?\"\n\n\"So . . . so nice. All happy, and trying to make sure we're--Alistair and me--are happy all the time, too.\"\n\nI chuckled. \"No. Usually I'm a prick. But you've managed to bribe me with your . . . your incredibly hot body . . . and I'm trying to get in your good graces.\"\n\n\"I should be saying the same,\" she whispered.\n\nI raised an eyebrow, hoping she'd continue. Seeing my look, she explained.\n\n\"I never really knew how it could be,\" she said. \"Alistair was my first. He was . . . well, he was pretty good. But we were young, not much experience. And he was a bit of a prude. You know, unwilling to really push the envelope.\"\n\nHer smile went tender at the memory, like any deficiencies he may have had in the sack didn't matter because she loved him anyway and, by virtue of that, it was special every time. Then her face lost all happiness.\n\n\"And Randy,\" she said. \"Let's just say with Randy, it was all about Randy, okay?\"\n\nI nodded. \"And with me?\"\n\n\"I've never come like that,\" she said. \"From just having it in me, you know?\"\n\nI didn't know. \"Is it different?\" I asked.\n\nShe nodded. \"Yeah. Not better, but different. Every other time, I'd come from, you know, fingers or from . . . kissing down there. But never from just having it in me.\" She was blushing as she spoke. \"Not without some help from fingers, at least.\"\n\nIt was cute, her shyness in talking about sex. The difference between how she had been the day and night before--completely unreserved and more than a bit naughty--was at odds with her reluctance to openly discuss any of it.\n\n\"And it's way different with you than with them,\" she continued. \"Not just, you know, how excitable you are.\" A giggle twitched at her lips as she remembered Jenny's description. Then she looked up, her shyness leaving and her face getting earnest. \"I trust you, Tim. Like I've never really trusted anyone before. I don't know why. Can't explain it, really. But I do. And that makes it . . . you know, us . . . in bed . . . it makes it different. Like no matter how wild you get--we get together--it's gonna be good. You won't hurt me. It'll be really good.\"\n\nI smiled. Then I leaned in and kissed her forehead, brushing her hair from her face as I did so.\n\n\"Well,\" I said, \"it's pretty special for me, too.\"\n\nAnd I realized I was telling the truth. I wasn't just saying this to make her feel better or because it seemed the thing to say. Moreover, it wasn't like I was now in love with her because I'd slept with her, which is what Jenny had pretty much accused me of falling for in the past.\n\nNo, I was pretty sure I was in love with her before she'd joined me in the shower. But that didn't seem right, did it? I mean, come on, she'd rarely let her guard down around me, so I still didn't know if I knew the real Nicole. Then again, our months together, both in the kitchen and then as roommates, had allowed me to get to know her in ways I'd never known another woman before falling in love, or lust, with her. We anticipated each other's actions and needs and could almost finish the other's sentences. The way she treated and raised little Alistair was spot on, too, at least so far as I was concerned. She loved him, but she was a parent rather than a friend. And she was neat, and getting easier to talk with, and her moods were getting predictable, and--\n\n\"What're you thinking?\" Nicole said, interrupting my thoughts.\n\nI shook my head.\n\n\"Tell me,\" she urged.\n\nI took a breath, hoping I wasn't going to scare her away.\n\n\"I'm thinking,\" I said, \"that maybe I love you.\"\n\n\"Maybe?\" Her smile told me she wasn't afraid of this announcement.\n\n\"Okay,\" I said. \"Probably.\"\n\n\"Not definite yet?\"\n\n\"We'll see how you do at the zoo,\" I said, getting out of bed.\n\n\"Tim,\" she called as I padded down the hall toward the shower.\n\nI stopped and turned around, looking at her as she swung her legs off the bed.\n\n\"Just wanted you to know,\" she said, sitting there with her hands in her lap and her face a touch pensive.\n\n\"Know what?\"\n\n\"That I love you, too,\" she said. \"Definitely.\"\n\nI felt a rush of warmth wash through me.\n\n\"Well,\" I started, looking at her and seeing the look on her face. She was nervous. Why?\n\n\"Well what?\" she said.\n\nI gave her a lopsided grin. \"You're still on probation until I see how you do at the zoo.\"\n\nShe flashed her eyes at me. \"You shit,\" she said, picking up a pillow and tossing it at me.\n\nI chuckled as I got undressed and hopped in the shower. I gasped when she joined me a few moments later. I groaned in ecstasy as she did her best to get little Timmy up for another round before getting dressed. She mewed in excitement as I reciprocated on her with my mouth. The noises and sensations after that are just a blur.\n\nIs there any better way to start a day than by telling the person you love that you love them; then having them say they love you, too; then each of you proving your love to the other with a spirited romp under the sheets, all by seven in the morning?\n\nIf there's anything better than all of that, I'd never before been privy to such an experience.\n\nNot with any of my past girlfriends.\n\nCertainly not with Nina.\n\nTHIRTY-ONE\n\nI won't keep you in suspense: The trip to the zoo was a lot of fun for all involved, and I confirmed upon returning home that my love for Nicole was pretty definite by that point.\n\n\"Just pretty definite?\" she smirked. \"Not definite definite?\"\n\n\"Don't get cocky,\" I warned.\n\n\"Oh, don't you worry about that,\" she teased. \"I won't be getting any cocky of any kind until I know where I stand here.\"\n\nSo, of course, I crumbled. Immediately and without further ado. Call me weak, call me spineless, call me the poor victim of sexual blackmail. Guilty as charged.\n\nYet, for the first time in my life I felt real love. Or, at least, what I assumed was real love. Love beyond wanting to get in someone's pants and shag them silly. Love beyond wanting to please someone like an attention-starved puppy dog. Without a doubt, this was a love where I couldn't wait to get home to be with Nicole and Alistair rather than dreading coming home to Nina, Emily, Nadine, and a house full of tense drama. Love where getting Nicole to smile was now reciprocated with her getting me to smile even bigger.\n\nWhere the fuck had I been all these years?\n\nApparently, the change in both of us was tattooed across our foreheads.\n\n\"It's about time,\" Clara smirked bright and early Monday morning, a frown playing over her lips as she tied her apron strings, watching Nicole and I playing grab ass around the onions we were chopping.\n\n\"What?\" I protested, tears from the onions streaming down my smiling face.\n\nShe only huffed and walked out. Nicole and I shrugged at each other.\n\nLater, Uncle Jack came in and took one look at me and Nicole prepping plates for some early diners.\n\n\"Jesus,\" he rumbled, \"what the hell took you so long?\"\n\nI gave him my best innocent, earnest look.\n\n\"I always knew you were slow, Timmer,\" he continued. \"For a while, though, I was beginning to think you were seriously fucking stupid.\"\n\nNicole punched my arm at that, laughing.\n\n\"You're supposed to defend me here,\" I said.\n\n\"Why?\" she said. \"He's right.\"\n\nI laughed.\n\nThe next night, Jammer and Jenny were all smiles at their table watching me kiss Nicole good night before I took off to pick up Alistair.\n\n\"Well?\" Jenny said to Nicole.\n\nNicole beamed. \"You were right,\" she said. \"Wow.\"\n\n\"Told you so,\" Jenny laughed.\n\n\"For Chrissakes,\" Jammer moaned. \"Will someone tell me what the hell is so special about this shithead? You both praise him like he's some kind of fuckin' porn star.\"\n\n\"Close,\" Jenny replied. \"Then again, I've never been with a porn star. Maybe he's better, right?\"\n\nNicole got a serious look, contemplating the question. \"Probably better,\" she finally said.\n\n\"Don't worry,\" I said, slapping Jammer on the back. \"I'll write something up for you. You know, like a list of pointers on how to do it right.\"\n\n\"Eat shit,\" he said, taking a slug of his beer.\n\n\"So you two?\" Nicole said, her finger wagging between Jenny and Jammer.\n\n\"Taking it slow,\" Jenny said.\n\n\"But I've got her coming home early at least one night a week,\" Jammer boasted. \"And staying out of that goddamned office on Sundays.\"\n\n\"Well, well,\" I said, realizing I wasn't upset with them getting together.\n\nJenny seemed relieved by my reaction and smiled. \"I guess people can change a little, huh?\"\n\nI nodded.\n\nBut some people don't change. Not even a little.\n\nPeople like that rotten prick Randy.\n\nAnd that's a lesson I was about to learn the hard way.\n\nTHIRTY-TWO\n\nIt was Friday night, and Nicole was going to be waiting tables after her shift in the kitchen. Nicole and I were prepping the final pieces of cod for the fish fry when the conversation turned in a direction I didn't see coming.\n\n\"You really do . . . ,\" Nicole stuttered, her face getting red and her eyes avoiding mine. \"Your favorite thing on a girl.\"\n\nI turned and smiled. \"Any girl or you girl?\"\n\n\"Both,\" she said. \"It's . . . you really get turned on by-- \"\n\n\"Your ass,\" I confirmed. \"Don't get me wrong, you're beautiful. The whole package. I mean, the face is the first thing I look at, and you're absolutely stunning. And the rest of you is perfect, too.\"\n\n\"But you really get turned on by . . . my bottom,\" she said.\n\n\"You can say ass,\" I teased. \"I won't wash your mouth out with soap. Promise.\"\n\nShe smiled, but it was a shy smile.\n\n\"So that first time,\" she pressed on.\n\n\"First time what?\"\n\n\"You know. Last Saturday. When you kissed me there. And touched me there with your fingers.\"\n\nI nodded. \"Yes?\" I encouraged.\n\n\"Have you ever. . . .\" Her voice trailed off.\n\n\"Nicole,\" I said, lifting her chin with my fingers and staring into her eyes. \"Don't be embarrassed. You ask, I'll answer. Anything.\"\n\nShe nodded into my chin, but still said nothing.\n\n\"Have I ever what?\" I encouraged.\n\n\"Done more? You know, with a girl's . . . ass.\"\n\n\"Like what?\" I said. I knew what she was asking, but I was taking a perverse pleasure in trying to draw her out, trying to get her to speak more openly.\n\n\"I don't know,\" she muttered. \"Like maybe put your finger in there for awhile?\"\n\n\"Sure,\" I said. \"A couple of times.\"\n\n\"With Nina?\" she pressed.\n\nI laughed aloud at that. \"No, never with Nina. That area was strictly off limits with Nina.\"\n\n\"Jenny?\"\n\n\"Never tried with her,\" I said. \"We weren't together that many times.\"\n\nShe nodded. I could tell she wanted to say more, but her lips were pressed together, as if she was forcing herself to keep the words in.\n\n\"What?\"\n\n\"Have you ever, you know, put your . . . done a girl there?\"\n\nI raised an eyebrow at her. She had hit on my ultimate fantasy. Being an ass man, I'd long dreamed of trying anal sex, but I'd been shot down with the four women I'd been with, and I was afraid to go too fast in bringing it up with Nicole, the fifth woman.\n\n\"Why do you ask?\" I said, my voice lower.\n\nShe looked away. \"I lied to you,\" she said. \"That time--the last time when Randy beat me--that's what it was. He came home, dragged me into the bedroom, and told me that's what he was going to do. Put it there. And when I refused, when I fought back, he got really mad. Madder than I'd ever seen him. Like my body was his to do with as he liked. Like I had no right to refuse him.\"\n\nGod, I wanted to strangle that fucker. He'd ruined my shot at it before I'd even met her.\n\n\"Did he?\" I whispered.\n\nShe shook her head. \"He'd have hurt me,\" she said, turning back to me with anguish on her face. \"I've never done it, but I know you can't just go right to it, you know? He'd have just . . . torn into me. And hurt me. He liked that.\"\n\nI put my hand over hers. \"We don't have to do anything you don't want to do, okay? Ever. If you don't want to do something, you just say the word and I'll stop.\"\n\nShe nodded. \"But I'm thinking that maybe I want to try it sometime.\"\n\nShe was looking straight into my eyes as she said it. I couldn't read her reaction to her own words.\n\n\"Why?\" I asked.\n\n\"Because,\" she whispered, \"I know you won't hurt me. And I can tell--when we're together--I can tell you really want to do it. And I want to make you happy, to give you something special. Something I know you really want.\"\n\nThis was it, when I really knew I loved Nicole. No, you shallow bastards, not because she was offering me my ultimate fantasy. (Okay, it took me a moment to realize that, too.) No, the reason this was when I realized I really loved her was because she was willing to try something that she dreaded, that she had come so close to having brutally inflicted on her. And she was willing to do it just to make me happy, damn her own fears and needs.\n\nContrary to what I'd told Nina four months before, sometimes intentions really are way more important than the actual actions.\n\n\"What I really want,\" I assured her, \"is to love you. To make you happy. I don't want to force you into anything. I don't want you doing something you really don't want to do just to make me happy. You're . . . well, you're the best goddamned thing that's ever happened to me, okay? And just knowing you'd even consider . . . after all you've been through-- \"\n\n\"Don't you understand?\" she said. \"Doing something for you, something that really makes you happy, that's what makes me happy. That's what makes it special.\"\n\nThere are really women out there like this? I thought. Women who really thought this way? Where the fuck have I been my whole life?",
        "\"But if you're afraid,\" I said, still unsure what my reaction should be.\n\nShe shook her head. \"That's just it,\" she said, her eyes soft and her lips turning into a melancholy smile. \"With you I'm not afraid. You'd never hurt me.\"\n\n\"But it would probably hurt the first time,\" I warned, inwardly wincing as I tried talking her out of giving me what I really wanted most to try in the bedroom department. \"The first few times at least. It'll probably hurt you know.\"\n\n\"Still,\" she said, \"I want to try sometime. If I get used to it--if you go real slow--then maybe I'll like it.\" She smiled a little brighter. \"I know I liked what you already did there. A lot.\"\n\nI paused, staring at her. She was serious.\n\n\"Where did this come from?\" I asked.\n\nHer smile got wide at this. \"Face it, Tim, you're not exactly the go-getter type. We'd spend the rest of our lives together and you'll never make a move on it. Never even bring it up, right?\"\n\nI nodded. She was right. I'd been shot down so many times before that I'd never take the initiative on this one. Jammer told me once that chicks either liked anal or they didn't. Those that did would make it clear; those that didn't would make it even more clear if you tried to go there. Nicole seemed to be the in-between chick, the one that was interested in trying it to find out which camp she fell into.\n\nThen my eyes narrowed at the thought of something she'd also just said.\n\n\"The rest of our lives together?\" I said.\n\nShe bit her lip. \"I just meant,\" she said.\n\nI beamed. \"So you're considering that?\"\n\nShe nodded. \"I'm not trying to scare you or anything. Pressure you. That's. . . . It just kind of slipped out.\"\n\n\"Boy,\" I said, \"you're right. Maybe I should start taking a little more initiative, huh?\"\n\nShe leaned over and kissed me. \"I don't want you to change. I love you just the way you are. It's cute.\"\n\nI pulled her in for a tight hug. \"I love you more. Way more.\"\n\nLater, I kissed Nicole on the cheek as I pulled on a windbreaker and got ready to go pick up Alistair. I was still on cloud nine, amazed at the speed--or lack thereof--with which my perfectly shitty, post-divorce life was sorting itself out.\n\n\"Goin' home?\" Lonnie Mackie said as I approached the bar, which was next to the exit.\n\n\"Yep,\" I said.\n\nHe was standing, too.\n\n\"I'll go with you,\" he said. \"Get home to the boss.\"\n\nWe were outside, turning the corner into the parking lot and heading toward my car, when the idea of a Spring cookout came into my head.\n\n\"Any plans this weekend?\" I said.\n\n\"You know,\" he said, \"same old-- \"\n\nHis words were lost in a sudden, searing pain in my back and deep into my chest while something pushed me forward and to the ground.\n\n\"What the fuck,\" I said, seeing the ground rise up to meet my face. I could sense something, someone, behind me. Hot breath on the back of my neck and a hand on my left shoulder, pushing it forward as whatever was causing the searing pain in my back was withdrawn, leaving a deep, empty ache.\n\nEverything after I hit the ground was a blur of noise, movement, screaming, and pain.\n\n\"You fucker,\" I heard Lonnie Mackie screaming.\n\nThere was a crunch, and the weight was off my back as something fell to my left.\n\nSomeone said to call an ambulance.\n\nAnd call cops.\n\nI tried to talk, but no words came out as everything started getting weird, dizzy.\n\nThen feet, a lot of feet, were running all around me. I felt them on the blacktop parking lot and heard them near my head. The images were going blurry, though.\n\nSirens started in, then I heard a loud scream. A wailing scream. Nicole begging me to be alive.\n\nI am alive, I tried to tell her, but I didn't hear anything come out.\n\nMy mouth just kept moving noiselessly while everything else got darker.\n\nTHIRTY-THREE\n\nMy other senses worked first. I felt the crappy, scratchy sheets encasing my body. My mouth was impossibly dry, my tongue cracked, and I tasted the worse morning breath in history, morning breath so bad it almost blocked out the antiseptic smell of the room. I didn't open my eyes until I heard the click clack of shoes on the tile floor.\n\n\"Good,\" a stout, middle-aged nurse announced. \"You're awake.\"\n\n\"How long have I been here?\" I asked, my eyes sweeping the three-walled room. The fourth side was open to a bank of nursing stations. Intensive care unit. I'd been here once before, when Aunt Aileen was dying.\n\n\"It's Sunday morning,\" she said, picking up a chart. \"And you were admitted after surgery at about eleven on Friday.\"\n\n\"Surgery?\" I said. The dull ache in my chest and the itching on my back, just below the scapula, reminded me that something had happened on Friday night. Still, I had no idea what had happened.\n\n\"The doctor will be by in awhile,\" she said, ignoring my question and walking out of the room.\n\nI heard a faint rustling to the right of my head and tried to turn and see who was there.\n\n\"Hello?\" I said when the person said nothing.\n\nIn response, I heard the sniffling of tears.\n\n\"Nicole?\" I said.\n\n\"You had us so worried.\"\n\n\"Nina?\"\n\nShe was in front of me now, looking down at me with tears running down the face that was smiling in relief.\n\n\"What are you doing here? What happened?\"\n\n\"I work here,\" she said. \"Some friends called me the second you were brought in. I agreed to take turns with the others babysitting you.\"\n\n\"The others?\"\n\n\"Nicole, Jack, that great big guy from the bar. Larry.\"\n\n\"Lonnie,\" I corrected. \"Where are they?\"\n\n\"Nicole will probably be here soon. She and Jack ran to the restaurant to get things set up, then she's coming back.\"\n\nI was a little disappointed. Somehow I pictured her holding bedside vigil.\n\nNina saw the look on my face and read it accurately. Can't slip shit like that past someone you've lived with for four years.\n\n\"Don't be upset,\" she said. \"They left about three hours ago, and it's the first time she's gotten out of here since you were brought in. She needed a bath, some clean clothes, and to help Jack get the kitchen set up.\"\n\nI nodded.\n\n\"So what happened? Why am I here?\"\n\n\"You were stabbed leaving work,\" she said, surprised I didn't know. \"Someone you threw in jail a week or so ago. Nicole's ex-boyfriend?\"\n\nI nodded. Randy. He'd finally bailed his sorry ass out and decided to kill me for the inconvenience I'd helped impose on his life.\n\n\"How bad is it?\"\n\n\"Touch and go for awhile. You lost a lot of blood. The knife nicked some ribs on its way to your right lung. The lung collapsed, which led to the surgery.\"\n\n\"Recovery?\"\n\n\"Barring infection, you should be up and at 'em in a couple of weeks. The musculature in your back, which is also stitched up, will be pretty sore for awhile longer. So will the bones that got cut. But you should be good as new in no time.\"\n\nI nodded, exhaustion beginning to cascade over me.\n\n\"And Nicole? She's all right?\"\n\nI saw a flicker of disappointment play across Nina's lips, but she kept up the facade for me. \"She's scared, Tim. And tired.\"\n\nI tried to smile, but I'm pretty sure the effort was wasted.\n\n\"Tell her I'm fine, okay?\"\n\nI didn't hear her response before sleep overtook me again.\n\nThe next thing I remember was voices. Jammer and Nicole, chatting softly.\n\n\"It's not your fault, Nic,\" Jammer said.\n\n\"I was afraid Randy would try something like this,\" she said, her voice weary. \"I should've stayed away. Taken Alistair and just moved.\"\n\n\"Don't say that,\" Jammer reassured her. \"He loves you. Trust me. I've known him since we were knee high to a frog's ass, and I've never seen him look at anyone the way he looks at you. Jenny included, and he had the biggest crush on her since kindergarten.\"\n\n\"Why would I be mad?\" I croaked, my throat hurting with the effort.\n\nI felt Nicole's hands on my forearm in an instant, her warm breath on my face.\n\nI opened my eyes and looked at her. \"Don't cry, little girl.\"\n\nShe was torn between trying to smile for me and trying to hold back her tears.\n\n\"It's gonna take a bigger prick than Randy to get me out of your life.\"\n\n\"Told you so,\" Jammer said from behind her.\n\n\"He's right,\" I continued, the pain searing my throat.\n\nI coughed. To my left, a nurse hustled in.\n\n\"Good,\" she again announced. \"He's awake. Give him some of these.\"\n\nShe pushed a glass and a spoon into Nicole's hands before picking up the chart and taking writing down a bunch of stuff from the machines surrounding me.\n\n\"Open up,\" Nicole said, pressing the spoon against my lips. Ice. Who ever knew a chip of ice could be so goddamned good? It melted against my tongue, coating my mouth and throat as it slid down. I opened my mouth again, and another chip was dropped in. After five minutes of this, I felt well enough to talk again.\n\n\"What happened to Randy?\" I asked.\n\n\"He's in jail,\" Jammer said. \"They're gonna resist bail this time. The State, that is. The judge will probably go along with it since he was out on bail when he attacked you.\"\n\n\"He just stabbed me once?\"\n\nNicole smiled. \"Lonnie Mackie knocked him out cold.\"\n\n\"Yeah,\" Jammer added. \"One punch to the side of the head and he was out like a fuckin' light bulb.\"\n\n\"He says you owe him two gift certificates now,\" Nicole said. \"Not just the one like last time.\"\n\n\"Tell him he can have three,\" I said.\n\n\"I heard that,\" Lonnie said, shuffling in with his wife and three little kids in tow. \"You okay?\"\n\n\"I'll be fine,\" I said. \"Thanks to you, I'm told.\"\n\n\"Little prick,\" Lonnie said. \"Should've killed the bastard the first time.\"\n\n\"Lonigan Marvin Mackie,\" his wife said, \"the children.\"\n\nI chuckled, then coughed.\n\n\"Don't get him excited,\" the nurse warned. \"We need those stitches in his lung to do their job.\"\n\n\"Thanks, Lonnie,\" I said.\n\nHe seemed all sheepish, like it was no big deal. His wife, though, was proud of him. It was written all over her face and the way she clung to his arm and looked at him. Even when she'd corrected his language, she was almost playful about it.\n\n\"You okay?\" I said, turning my attention back to Nicole.\n\n\"I'm sorry,\" she said.\n\n\"Don't be. At least he's gone for good now, right?\"\n\nShe nodded, brushing away tears. I tried to reach up and help her, but the lines running in my arms wouldn't let me.\n\n\"Hey, really, you need to settle down,\" I tried to reassure her.\n\nShe nodded, trying to smile.\n\n\"Just stay the hell away from Jammer until I'm out of here, okay? He's pretty well known for taking advantage of these things.\"\n\n\"Hey,\" Jammer protested, but I didn't hear the rest of what he said. All I heard were Nicole's words before I again fell asleep.\n\n\"I love you so much, Timothy Franklin. So much.\"\n\nTHIRTY-FOUR\n\nThree weeks later, I was at home, cooking tomato soup and grilled cheese sandwiches for Alistair and me. Alistair and Ernie were sitting on the sofa, watching some kid's show on public television, when the doorbell sounded.\n\n\"Police man,\" Alistair yelled.\n\nI was surprised. Police? Then I was worried; had something happened to Nicole?\n\nI turned off the stovetop and went to the front door.\n\n\"Hey, Mike,\" I said, opening the door for Sgt. Moss.\n\n\"Can you come out here for a sec?\" he said, his eyes shooting to Alistair.\n\nI felt a pit in my stomach.\n\n\"Is Nicole okay?\" I said, stepping onto the porch and closing the door behind me.\n\n\"She's fine,\" he said. His jaw was chewing gum about a mile a minute.\n\n\"What's wrong?\"\n\n\"Just got back from county,\" he said. \"Something's come up and I wanted to let you know on my way back to town. Before it gets out and all.\"\n\n\"Okay,\" I agreed. \"What's up?\"\n\n\"It came up right after the assault on you,\" he said. \"I was in court a few days later, for the arraignment. A cop from Frontier City was there for a case he had. We got to talking, what we were there for and all. I told him about you, how you were attacked.\"\n\nI nodded. So?\n\n\"Anyway, the whole Randy and Nicole thing rang a bell with him. Later, that afternoon, he calls me. Randy was a suspect in the murder of Nicole's husband. He was stabbed outside of his workplace a few years back.\"\n\n\"Yeah,\" I said, now seeing where this was going.\n\n\"So they sent some detectives over the next day, Tuesday after you were stabbed. Gave us a lot of their stuff on the murder.\" His jaw tightened. \"We'd have never done it, see? Tested the knife or anything. I mean, hell, we had him at the scene with witnesses and his hand on the knife. No need to test the knife for blood, okay?\"\n\nI saw it, saw where this was going. \"Alistair's blood was on the knife, wasn't it?\"\n\nMoss nodded. \"Up inside the handle. Probably would've never still been there, except he used a folding knife. Stupid fucker. And used the same knife in his attack on you.\"\n\n\"So you guys charging him on that one?\"\n\nMoss smiled. \"Already done. That's what we were finishing up this morning. I started the interrogation--stupid fucker even had a lawyer, but she didn't see this coming--and the Frontier City guys sit down and pull out all the paperwork and lab tests and shit. They even found Alistair's blood in his car and apartment. Laundry room carpet. They zeroed right in. Got him to say that no, he didn't even know Alistair before he died; no, Alistair had never been in his car. Or his apartment. Then they put all of that in front of him and he just exploded. Before the attorney could even shut him up, he's screaming about how Alistair had it coming and he wasn't man enough for a woman like Nicole and all that.\"\n\nHe smiled, but his smile looked weary, like it had been a long morning. \"He'll die in prison, Tim. So I wanted to tell you that and maybe hoped you'd tell Nicole, too. It'd be easier coming from you, right?\"\n\n\"Sure,\" I agreed, not really wanting to tell her.\n\nWhen she breezed in that night, the look on my face pulled her up before she could plant a kiss on my cheek.\n\n\"What's wrong?\"\n\n\"Come on,\" I said, walking into the dining room away from Alistair.\n\nWe sat at the table, her next to me and our knees touching while I held her hands. And I told her.\n\nShe cried. Cried for her poor dead husband, for the father her son would never know, for the fates that had foisted Randy into their lives without her even knowing what was happening, for the tear at the scab in her heart that had only so recently healed.\n\nI held her, telling her everything would be all right. I'd been there too, though, and I knew it would take a long time for this to all get better again. If ever it did.\n\nTHIRTY-FIVE\n\nThree days later, on a Saturday morning, the three of us were sitting around the dining room table eating our stuffed French Toast. (Try this: Take a block of softened cream cheese whipped together with some vanilla and confectioner's sugar, stir in a handful of chocolate chips, then spread it between two pieces of good white bread. Dip it into your typical eggy french toast batter and cook it on a buttered griddle. Trust me, it's beyond incredibly good!)\n\n\"Mommy,\" Alistair said with a mouthful of food.\n\n\"Don't talk with your-- \"\n\n\"Are you almost done being sad?\" he said, ignoring her reprimand.\n\nShe looked at him, then at me. Her face had been a mask of anguish or sadness since I'd told her about Randy killing Alistair. Now, for the first time, I saw something else seeping in.\n\n\"Because I really want to go to the zoo today, Mommy,\" Alistair plodded on. \"And I don't really want to go if you're going to be sad anymore.\"\n\n\"Mommy's just-- \"\n\n\"Do you love me?\" he said.\n\n\"Of course I love you.\" She was taken back at the little tyke's verbal barrage.\n\n\"And Tim? Do you love Tim, too?\"\n\nShe nodded, looking at me with tears welling up in her eyes.\n\n\"And Ernie?\"\n\nShe looked at the lovable mug of the begging pug sitting at her feet and laughed.\n\n\"Especially Ernie,\" she said. Her glistening eyes warmed, and her tears seemed to be tears of relief and--almost--happiness. And maybe the realization that Alistair had died three years ago, and she now had a new family that could again give her happiness. Okay, maybe I'd just like to take a touch of credit here.\n\n\"Then don't be sad anymore,\" Alistair said. \"Ernie thinks you're mad at him.\"\n\nShe reached down and scratched behind Ernie's ears. \"I'm sorry, Ernie.\"\n\n\"See? Now we can go to the zoo.\"\n\nWith that, Alistair was done saying his piece.\n\nOf course, I'd like to tell you that this got Nicole out of her funk like a bolt of lightning, but that would be bullshit. She did try to be happy, though, and I'm pretty sure that's the best way to get over being unhappy.\n\nWe can all feel sorry for ourselves and the shit sandwich that this thing called life serves us sometimes. But, like Uncle Jack always says, \"The true measure of a man is not the heights he rises to, but how well he picks himself up after being knocked on his ass.\"\n\nIt seems Alistair's little diatribe had shaken this reality into Nicole. So, little by little, she started picking herself up. I could see she wasn't totally out of the woods yet, but she at least tried to smile and give hugs whenever Alistair and I were around. Ernie appreciated her more frequent ear and belly scratching, too.\n\nThen, one Tuesday night when I was at home babysitting Alistair, Nicole came in late and awoke me with a camera flash.\n\n\"What?\" I said, lifting my head from the couch and reaching for the remote to turn down the television while I focused my sleepy eyes on her.\n\n\"You've got to see this,\" she said, her smile ear to ear.\n\nShe handed me the camera, and I turned it around to look at the picture.\n\nThere I was, zonked out on the couch. Alistair was sound asleep, too, stretched the length of my torso with his cheek on my chest. Protecting us both was Ernie, laying at the top of my head with his neck and fore paws curled around my neck and his black muzzle almost nose to nose with Alistair.\n\n\"My three princes,\" Nicole said, chuckling at the thought. \"All cuddled together.\"\n\nSure, the picture was cute. But cuter, and far better, was the look of genuine happiness on Nicole's face. It was a look we hadn't seen in some time, and I felt myself relaxing.\n\n\"You better now?\" I said.\n\nShe nodded. \"Yeah. Way better.\"\n\n\"I love you,\" I said, sitting up and scooping Alistair into my arms for a trip to his bedroom.\n\nHer eyes were welling up. \"I love you more.\"\n\nShe was the first woman who had ever said that to me and looked like she meant it.\n\nTHIRTY-SIX\n\nWell, not much more to tell, really.\n\nNicole and I were married three months later.\n\nLonnie Mackie, Uncle Jack, and Jammer stood up for me in the simple ceremony. I tried to pick a best man, but gave up after deciding they had all helped to get me where I was.\n\nJenny, Gertie, and Clara stood up for Nicole. Again, they'd all played their part, and none was the maid of honor.\n\nAlistair looked cute as a bug in his little tuxedo, striding down the aisle with Ernie prancing along beside him bearing a pillow holding the rings. Okay, Ernie tried to mark his territory in the vestibule, but a slap from Sgt. Moss stopped that.\n\nOn our honeymoon, Nicole gave me that fantasy she'd been curious to try. What can I say? Fucking amazing pretty much sums it up. Just make sure you go real, real, real slow and use lots and lots and lots of lube. By the third time, she assured me she likes it, too.\n\nRandy got sixty years for killing Alistair and another twenty-two for trying to kill me. The sentences run concurrently, so he'll be about a hundred before he gets out. Good luck, prick.\n\nNina? Not a clue. She drops by the Bar and Grill every so often with some other nurses, but we don't talk much. I know she tried making a run at Jammer, but he and Jenny seem to be getting real serious, so it didn't go anywhere.\n\nEveryone else seems to be pretty much the same. Uncle Jack is still going strong, as are Clara and Gertie and the gang.\n\n\"You happy?\" Nicole said to me one night.",
        "My one hand was wrapped around a sleeping Alistair, holding him close. With my other hand, I rubbed her swollen belly, feeling the tiny kicks.\n\n\"Happier than I've ever been before,\" I said.\n\n\"Me, too,\" she said, leaning into me and snuggling against my chest.\n\nAin't life grand?\n\nP.S. Don't forget to drop by the Bar and Grill. Our honeymoon to New Orleans gave us some really great sandwich ideas. Can I recommend the Roast Beef Po Boy? It's the tastiest, messiest sandwich I've ever had. Friggin' amazing!"
    ],
    "authorname": "Rehnquist",
    "tags": [
        "anal",
        "cunnilingus",
        "one on one"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-bar-and-grill-pt-04"
}