{
    "title": "A Stitch in Time Pt. 07",
    "pages": [
        "Chapter 24\n\nOn Monday morning, I was racing to my locker after English and before Astronomy to switch my books. Getting rid of Moby Dick alone would improve my posture for the rest of the morning. I quickly dialed the combination and jerked the locker open, only to have it slam close again. Tommy Narburg was standing right next to me. The locker door had apparently banged off his forehead. Despite the dazed expression on his face, it didn't appear to have done any damage.\n\n\"Tommy?\" I asked as I returned to the lock.\n\n\"Your sister asked me to the dance,\" he said in an odd monotone.\n\n\"Oh, yeah,\" I nodded, opening the door more slowly this time.\n\n\"Is she, um, okay?\"\n\n\"Okay how?\" I asked.\n\n\"Like, um...\"\n\n\"Like is she firin' on all cylinders? Has she gone off the deep end? Is she serious about going to the Spring Formal with Tommy Narburg, or is this just some big practical joke?\"\n\n\"Yeah. All that.\"\n\n\"Tommy, as far as I know, she's dead serious. She's been plannin' this since Saturday afternoon. I told her you might not be the one doing the asking.\"\n\n\"No kidding.\"\n\n\"You did say yes, didn't you?\"\n\nHe just stared at me.\n\n\"Thought so,\" I smiled. \"Got to go to class, man. Hey, I'm gonna go rent a tuxedo this afternoon after practice. You want to come?\"\n\nTommy broke into a big grin. He ambled off down the hallway, banging into other kids' lockers in a sort of classical random Brownian motion. I watched him for a while, and then ran to class with a big smile on my face.\n\nTanya pulled me aside before lunch.\n\n\"I missed you this weekend,\" she said simply.\n\n\"I missed you, too,\" I said. \"It was good to have a weekend apart, though, so I could learn just how much.\"\n\n\"So, um, you want to sneak out back and maybe get a...?\"\n\n\"Hot dog?\"\n\n\"Trick,\" she blushed.\n\n\"Seriously, I would love to get a hot dog with you,\" I said. \"Any other day of the week. But if you miss lunch today, you'll never forgive me.\"\n\n\"Why?\"\n\n\"Oh, let's not spoil the surprise. Coming?\"\n\nTanya let me drag her to lunch, where I waited fifteen minutes to drop the news.\n\n\"Oh, Jeanne, I'm gonna need the car after school today,\" I said quietly. \"Me and Tommy gotta pick out our tuxes.\"\n\nIt didn't matter how quietly I said it. Conversation stopped.\n\n\"Tommy?\" Rabbit said. \"Why do you need a tux, Tommy?\"\n\nTommy had evidently taken a vow of silence. At the very least, he was having trouble getting any words out through the grin that was frozen onto his face. I gave him a minute or so, and then answered the question.\n\n\"The Spring Formal?\" I suggested. \"On Saturday? That's what formal means, Rabbit. What were you planning on wearing?\n\n\"What's Rabbit wearing?\" I asked a grinning Cammie.\n\n\"Who's Tommy taking to the Spring Formal?\" Rabbit interrupted me. We were cutting Tommy out of the conversation completely now.\n\n\"He decided to go with Jill,\" I said in a tone that suggested that Tommy had finished weighing his choices and come to a final decision.\n\n\"Jill Peterson?\" Cammie asked doubtfully.\n\n\"Jill Peterson?\" I scoffed. \"As if.\"\n\nEveryone laughed at my impersonation of the annoying Ms. Peterson. That girl's voice could peel the paint off a bridge. And what her voice didn't get, her cursing would finish.\n\nI watched the gang look around the cafeteria. I watched as their eyes settled on Jill Fairchild, an attractive eleventh-grader who, to the dismay of any number of guys, had been in a steady relationship with Amy Constantine since the ninth grade. I watched them consider whether Tommy was going to serve as Jill's pretend date, which they correctly discarded as completely unnecessary. Gay and lesbian couples were perfectly welcome at school functions, and the Fairchilds and Constantines were well aware of their daughters' attachment.\n\nIt was Rabbit who caught on first.\n\n\"Sterling,\" he clutched at his chest, \"tell me he's not going with your sister Jill.\"\n\n\"He's not going with my sister Jill.\"\n\n\"Yes I am!\" Tommy found his voice and blurted out.\n\n\"I know,\" I turned to him. \"But he asked me to tell him you weren't. I was afraid he was going to have a heart attack.\"\n\n\"Wait a minute,\" Rabbit held his hands to his head. \"You mean to tell me that Tommy Narburg is going to the Spring Formal with the most b \u2014\"\n\n\"Rabbit,\" Cammie warned him.\n\n\"The most young sister you have?\" Rabbit paused only a second.\n\nCammie turned to Jeanne and Tanya.\n\n\"See, girls. That's training,\" she pronounced with a satisfied smirk.\n\n\"That's all right,\" Jeanne smiled. \"I know she's the most beautiful girl in the school.\"\n\n\"Present company excepted,\" Rabbit offered.\n\n\"Nice try, pal,\" I muttered. Jeanne, Cammie, and Tanya just threw potato chips at Rabbit.\n\n\"No, seriously,\" Rabbit turned back to the main issue. \"Tommy's going to the Formal with your sister Jill?\"\n\n\"You do know he's right here, don't you?\" I asked.\n\n\"Yeah,\" Cammie smiled. \"And now we understand that sappy look on his face. So I doubt we'll be able to get him to talk any more.\"\n\n\"True,\" I said. \"But he can nod. Going to the Formal, Tommy?\"\n\nHe smiled and nodded.\n\n\"Takin' my sister?\"\n\nHe nodded some more, blushing to the roots of his hair.\n\n\"Jill, right? 'Cause you're goin' with Sammy, aren't ya, Jeanne?\"\n\n\"I assume I'm going with Sammy,\" she said icily.\n\nTommy was off the hook for the moment. Now it was Sammy's turn. He actually looked a little pale.\n\n\"Yeah. You're coming with us to the tux place, aren't you, Sammy?\" I asked.\n\n\"Um, yeah, sure. Thanks, Trick.\"\n\n\"Well, I guess Jill and I will see what's left in the bottom of the barrel at the department store,\" Jeanne huffed.\n\nAt dinner that evening, Tiffany asked me where Jeanne and Jill had run off to.\n\n\"In Jeanne's room,\" I said. \"Doing something with some dresses they bought. For the spring Formal.\"\n\n\"Why are they so friendly now?\" Dad asked.\n\n\"You mean since last Wednesday?\" I asked, getting a glare from Tiffany for implying that Dad hadn't noticed for that long. Which he hadn't. \"They traded parts in the school play.\"\n\n\"Why?\" Tiffany asked.\n\n\"Jill remembered something that my mom said,\" I told her.\n\n\"What was it?\" Tiffany looked genuinely interested, as if it were only now occurring to her that she was going to be a parent any minute, and had better start figuring out how to do it.\n\n\"'When it's your turn,'\" I quoted.\n\n\"'You better be ready,'\" my father finished with a smile.\n\nI smiled back at him. I was inordinately pleased that he remembered. I turned back to Tiffany. She too was pleased, probably not with Dad remembering as much as with the way we were interacting.\n\n\"And its corollary,\" I added, \"which was probably more important this week. 'If you're not ready, it's probably not your turn.'\"\n\n\"I hadn't heard that one,\" Dad said, still with a big smile.\n\n\"It was at that amusement park we went to. You and Dave were trying to see who could ring the bell on the Strongman thing. Now, if you'll excuse me, I think I'll go check on the girls.\"\n\n\"When is the Formal?\" Tiffany asked as I cleared my plate.\n\n\"Saturday night,\" I said. \"Dave's visiting Liane so I guess you guys will have the place to yourselves.\"\n\nI waggled my eyebrows at them. I wasn't sure how Dad would spend a free Saturday night with his own private five and a half foot tall bowling ball, but that was up to them, right?\n\n\"Actually,\" Tiffany smiled, \"if I haven't given birth by then they're going to induce it on Saturday evening or Sunday morning.\"\n\n\"Neat,\" I returned her smile. \"Well, gosh. We should be with you then.\"\n\n\"And take you away from your Senior Formal?\" Tiffany laughed. \"I'll be the evil stepmother for the rest of my life. If there's a problem, we'll call you. Otherwise, you can just come on Sunday afternoon.\"\n\n\"Okay,\" I agreed. \"Say hi to little Brittany for us.\"\n\nJeanne had picked up a beautiful strapless dress. Jill, bless her heart, had decided on a more conservative look.\n\n\"Can you believe Sammy?\" Jeanne said disgustedly. \"Did he at least pick out a nice tux?\"\n\n\"Yeah, but Jeanne...\" I said.\n\nHer attention caught by the tone in my voice, she stopped fidgeting with the dress and looked up.\n\n\"You want me to leave?\" Jill asked.\n\n\"We're a family,\" I shook my head. \"Secret, though, right?\"\n\n\"Pinky swear,\" both girls said in unison as they held up their littlest fingers. I smiled. It felt really good to be the Sterlings again.\n\n\"Jeanne, I loaned him the money to rent the tux,\" I said. \"And to pay for the tickets and a room. You've been to his house, right?\"\n\n\"Oh, God,\" Jeanne had turned as white as a sheet.\n\n\"Yeah,\" I said. \"That's why he hadn't asked you before.\"\n\nShe was beginning to tear up.\n\n\"God, how could I be so stupid?\" she started sobbing. \"I mean, I know he doesn't have a lot of money.\"\n\nHer breath was coming in gasps.\n\n\"Sweetie, it's not the end of the world,\" Jill said. \"You've had a lot on your mind recently. Just give him a kiss and a hug and don't mention anything about it again.\"\n\nWe finally got Jeanne calmed down and focused on the dresses again. We also agreed that she would use our car. Jill would be going in Tommy's car. After we finished, I called Tanya from my room and made arrangements to borrow her parents' car.\n\nThis week was the end of the regular baseball season. By now, we were all wearing ties to the game. Some of the guys even started wearing jackets. And we were taking care of business. We won the Tuesday game 4-2 behind a very strong performance by Cary. I went the distance in the Friday game, striking out 10 guys in a 6-1 win. We would still only be the sixth seed in the league playoffs, the lowest possible. We would have to beat the third seed and then play a rested second-seeded team in the semifinals. Top-seeded McKay Academy would no doubt await the winner of that game.\n\nSaturday was the Formal. As we had arranged, Tanya drove over in her folks' car, and then I drove the rest of the way to the hotel. Once we checked in, Tanya laughingly insisted that we would have plenty of time for \"that\" after we got back from the dance. She needed to shower, and no, she didn't need any help.\n\nBy the time I was done with my shower, she was sitting on one of those little hotel chairs with a portable mirror sitting on the table. I stopped as soon as I saw her, because she was wearing the tiniest of lace white bras, a skimpy pair of lace white panties, white panty hose, and white high heels.\n\nI was finally able to open my mouth.\n\n\"No,\" she giggled as she looked over at me.\n\n\"I didn't say anything yet,\" I protested.\n\n\"I know what you're thinking,\" she smiled as she returned to her task.\n\nThat was probably true.\n\nTanya looked lovely when she was done. I looked, well, probably a lot like every other guy at the Formal.\n\n\"What time does it start again?\" Tanya asked.\n\n\"It starts at six,\" I said with a look at my watch. \"Dinner's at seven. Dancing's at eight. It's now six-ten.\"\n\n\"Perfect. Five more minutes.\"\n\n\"But we're already late.\"\n\n\"Men,\" Tanya shook her head with a laugh. She spent the next five minutes making herself even more perfect, and we headed toward the door. As she exited, the door next to us opened up. Cammie Rowe and Rabbit Parker had the room next door. We smiled at each other, somewhat embarrassed at having been \"caught\" coming out of our hotel rooms. It did make me thankful, though, that Tanya had insisted on holding off until after the dance. Even then, I wondered how quiet we could be together.\n\nWe walked together in silence to the elevator, and still hadn't uttered a word as we boarded. Rabbit and I stepped to the rear, and Tanya and Cammie stood in front of the highly polished mirrored door. We all did what people usually do in elevators: stare at the numbers of the floors as they go down. But I did sneak a quick glance at the door. Tanya looked gorgeous, of course, in the off-white gown that was an odd but perfect match with her golden hair. In her high heels, she appeared to tower over Cammie, who was about four inches shorter anyway, and whose shoes added only an inch to her height. But Cammie was no less beautiful in the dark blue off-the-shoulder gown that she had chosen. The contrast between her gown, the white skin of her shoulder, and the jet black of her shoulder-length hair was almost mesmerizing.\n\nIt was mesmerizing, in fact. I was suddenly aware that her dark brown eyes were staring at me, almost laughing at me, in the reflection. She raised an eyebrow.\n\n\"You look very, um, nice, Cammie,\" I said.\n\nI immediately flinched. I could already hear the patented Cammie Rowe retort, \"You look very um-nice yourself, Trick. And your date is perfectly um-lovely.\"\n\n\"Well, thank you, Patrick\" Cammie floored me with a genuine smile. \"That's a beautiful gown, Tanya.\"\n\n\"And a beautiful necklace,\" Rabbit chimed in.\n\n\"Thank you,\" Tanya glowed. \"Patrick got it for my birthday.\"\n\nShe turned to look back at me, and Rabbit and Cammie looked over as well.\n\n\"Well, actually, Cammie helped me pick it out,\" I said.\n\n\"Kind of like this,\" Cammie said to Tanya with a laugh as she fingered the lapis lazuli necklace that I hadn't noticed her wearing, the one I had given her in thanks for her help with my SAT test. \"It's like we're using Trick's money to buy each other presents. Maybe after he gets drafted we can buy each other cars.\"\n\nTanya smiled back at her, but didn't answer. I was just as glad. I had never told Cammie about my dreams of going to UVA, and my need to ace all my courses, and I didn't want her to start giving me shit about it now.\n\nThe elevator door opened up and we joined our classmates in the ballroom. After a while, we were herded to our assigned tables for the dinner, where Rabbit, the dog, claimed the seat between Tanya and Cammie. The four of us chatted amiably through dinner, although I did talk to the stunningly beautiful girl sitting on my other side. To be honest, we didn't really have a lot to talk about. After all, Jill and I saw each other all the time. Every day, in fact. What's to talk about? We sort of had too much in common.\n\nEventually, Tanya and I found our way to the dance floor. Then she told me to ask Jeanne to dance. So I did my duty while she talked to Rabbit. Then Tanya told me I was obligated to dance with Jill, and that she was fine talking to Rabbit while Cammie danced with Tommy. And then she told me to ask Cammie to dance.\n\n\"Last time I danced with someone else, I got in real trouble,\" I pointed out.\n\n\"Guess you'll have to take your chances,\" she grinned at me.\n\nI offered Cammie my hand and we made our way out to the dance floor.\n\n\"You know, it looks like my friend and your girlfriend are getting pretty friendly over there,\" she said after we'd danced for a minute or so. She nodded toward the table, where Tanya and Rabbit were still engaged in a very animated conversation.\n\n\"She's not my girlfriend,\" I pointed out with a laugh. \"On the other hand, good luck to him.\"\n\n\"Good luck to her,\" Cammie said fiercely, emphasizing the 'her.'\n\n\"Hey, I didn't mean \u2014\" I started to excuse myself.\n\n\"Rabbit's a nice guy,\" she said.\n\n\"I know he's a nice guy,\" I agreed. \"He's been my friend longer than he's been yours.\"\n\n\"What's the problem then?\" she demanded. \"You think your friend Tanya's so special that your friend Rabbit isn't worthy of dating her?\"\n\n\"Why do you want your boyfriend to date Tanya?\" I parried.\n\n\"He's not my boyfriend,\" Cammie insisted. \"Answer my question. You think she's too good?\"\n\n\"No, it's just that \u2014\"\n\n\"What?\" she pressed me.\n\n\"She's Jewish,\" I said.\n\n\"So?\"\n\n\"He's not an M.O.T,\" I confided in her.\n\n\"He is so an M.O.T.,\" she answered.\n\nWow. Cammie Rowe was something else. I was tempted to see what would happen if I insisted that Rabbit wasn't a kumquat.\n\n\"M.O.T. means \u2014\" I started to explain.\n\n\"Oh, fuck you, Trick Sterling,\" she cut me off again. \"I'm smarter than you are. I know what an M.O.T is.\"\n\n\"But \u2014 but Rabbit's not a... I mean, I've been over to Rabbit's house for Christmas,\" I protested.\n\n\"His father's Catholic, his mother's Jewish,\" she explained, suddenly growing wistful. \"He says he promised her he'd marry a Jew. That's why we're not, you know...\"\n\nOh, my God, Cammie Rowe was in the same boat I was. I remembered now that Rabbit had told me, months ago, that they were just friends. Good friends obviously, if they were sharing a room, but not boyfriend and girlfriend.\n\n\"Then why didn't he ask Tanya out before now?\" I asked when I finally found my voice.\n\n\"I guess because he didn't know she was Jewish,\" Cammie replied.\n\n\"I thought everyone knew,\" I'm sure my voice expressed surprise.\n\n\"Why?\" Cammie chuckled. \"Does she wear a sign?\"\n\n\"No,\" I laughed. \"'Cause that's the reason I broke up with Stephie van Carlen. 'Cause she called Tanya a Jew girl.\"\n\n\"Seriously?\" Cammie asked, her eyes softening a little. \"That's pretty cool. I didn't know that, either.\"\n\nI shrugged.\n\n\"We just thought you finally realized what a bitch she was,\" Cammie said.\n\nWe danced the next dance as well, this time joined on the dance floor by Jill and Tommy, and by Jeanne and Sammy. Rabbit and Tanya were still talking. About halfway through, Cammie asked me what I thought we should do.\n\n\"About what?\"\n\n\"Tanya and Rabbit. Look at them. They're half in love already.\"\n\n\"It'll mean giving Rabbit up,\" I pointed out.\n\n\"I don't own him. He already told me he was looking for a nice Jewish girl to come along.\"\n\nWe danced a little longer while Tanya's very similar words echoed through my head as if she had said them yesterday and not two months ago: So I'll be available whenever you want, okay? Just promise me that if I can't find a nice Jewish boy while I'm here, you won't start publicly dating some hot little shiksa. Well, I had reminded her about the first sentence recently. Maybe it was time to remind myself about the second one.\n\n\"Hello?\" Cammie was saying. \"Trick?\"\n\n\"I'm sorry,\" I said, looking down at her with what I hoped was a smile. I swallowed hard. \"What did you say?\"\n\n\"I asked, 'how about you and Tanya?'\"\n\n\"You know,\" I looked at the table with a wistful grin, \"I really just want her to be happy. So how 'bout I go over and say, 'so, how you two Jews doin'?'\"\n\nCammie laughed and hit my arm.\n\n\"Actually, hang on,\" I said. \"I have another idea. I'll meet you back at the table.\"\n\nI found Mrs. Jenkins, who was sitting with Mrs. Palmer at one of the faculty chaperone tables.\n\n\"Mr. Sterling,\" she said.\n\n\"Ma'am,\" I said, drawing up a chair. \"Can I ask you something? That's a lovely dress, by the way.\"\n\nMrs. Jenkins could see a suckup a mile away.\n\n\"Um, do you know any Jewish, ma'am?\" I asked, ignoring her glare.\n\nMrs. Jenkins looked at me coldly.\n\n\"Jewish is a religion, Mr. Sterling,\" she reminded me.\n\n\"Yes, ma'am, a religion,\" I agreed. \"But isn't there some sort of, uh, language?\"\n\nThere had to be some sort of language, what with the shiksas and the mitzvahs and everything. I mean, it couldn't possibly be some sort of private Szerchenko code that nobody else knew.\n\n\"Like Yiddish, Mr. Sterling?\" she asked as Mrs. Palmer, sitting on her other side, started laughing.\n\n\"Exactly,\" I said. \"Yiddish. Do you know any?\"\n\n\"A little. Why?\"\n\n\"I have two Yiddish friends,\" I began.\n\n\"Jewish,\" she said.\n\n\"Jewish friends,\" I corrected myself. \"And they don't know each other is Jewish, see? So here's what I was thinking...\"\n\nI returned to the table armed with a little knowledge, usually a dangerous thing. I picked up my glass and raised it in the air.\n\n\"A toast,\" I said.\n\nMy tablemates picked up their glasses as well.\n\n\"L'chaim,\" I offered.\n\n\"To life,\" Tanya and Rabbit responded in unison.\n\nThey laughed and then they stared at each other. They talked some more and then they danced. It was hard to feel sorry for yourself in the reflected light of true love, so Cammie and I just sat back and watched it happen. At one point, when Cammie had left to talk to some of her volleyball teammates, Rabbit left Tanya shyly hanging around the doorway to the ballroom while he slid into a chair next to me.",
        "\"Look, uh, Trick,\" he finally said.\n\n\"Rabbit, it's fine. If I'd known you were Jewish, I'd have told you about her much earlier.\"\n\nHe gave me a curious look, one that I was beginning to recognize by now.\n\n\"I didn't come to your bar mitzvah, did I?\" I asked.\n\n\"My brother's,\" he told me. \"Mine was the year we were away.\"\n\n\"Sorry,\" I said. \"Forgot. Tanya will explain. Anyway, I think it's great. The two of you have my complete blessing.\"\n\nFather Sterling was back in town.\n\n\"Actually, what I wanted was your key,\" Rabbit said.\n\n\"My key?\" I asked.\n\n\"To get Tanya's stuff out of your room, and Cammie's out of mine,\" he said. \"So Tanya and I can have some, er, \u2014\"\n\n\"Privacy?\" I asked.\n\nHe nodded eagerly. I pulled out one of the two card keys from my jacket pocket and gave it to him.\n\n\"I've got another, so just slide it under the door. Have you told Cammie?\"\n\n\"No,\" he looked around to try to find her. Then he looked over at the door, where Tanya was eagerly smiling at him. \"Could you?\"\n\n\"Could I tell Cammie Rowe that she has to change her clothes in my room? Are you serious?\"\n\n\"Please? And make sure she gets home?\"\n\n\"Just go,\" I pushed him out of the chair and waved goodbye to Tanya. See ya, Tanya Szerchenko. It was a bittersweet thought.\n\nTelling Cammie was a little more on the bitter side. She was as happy for the new couple as I was, but she had already told her parents that she wasn't going to be home until morning, and she had no intention of disturbing them now. On the other hand, the thought of spending the night in a hotel room with me also held very little attraction. But after a check with the front desk, and with Jeanne completely unwilling to trade Sammy for Cammie, that was the only choice that we had.\n\nFortunately, the room had the two queen-sized beds. So, in strict accordance with instructions from Cammie Rowe, I entered the bathroom, changed back into my jeans, and got into the bed nearest the door. She entered the bathroom, and five minutes later knocked on the bathroom door. I turned out the lights, and covered my face with a pillow lest I inadvertently catch a glimpse of Cammie Rowe, in her pajamas, getting into bed. When she finally told me it was alright, I was allowed to sleep.\n\nFor a little while, anyway. Until we heard our next-door neighbors start up.\n\n\"Ooh, Joel,\" we heard Tanya say. God, what were these walls made out of, tissue?\n\nI started laughing.\n\n\"Shut up,\" Cammie hissed. \"What so funny?\"\n\n\"Well, for one thing, who's Joel?\" I tried to reduce my laugh to a whisper. \"They already have a threesome?\"\n\n\"Joel is Rabbit, you ass. I thought he was your friend.\"\n\n\"He is my friend.\"\n\n\"But you don't know his name. You don't know his religion.\"\n\n\"Oh, Joel, you're so big,\" Tanya's squeal came through the walls.\n\n\"Well, that's more than I needed to know,\" I grumped.\n\nNow it was Cammie's turn to laugh. Softly, of course. God forbid that Tanya and Joel knew we were here.\n\n\"He was too big for me,\" Cammie said quietly. \"We only really did it a couple of times.\"\n\n\"Thanks,\" I whispered. \"That's a big help.\"\n\nWe finally managed to get to sleep, once they stopped vocalizing their feelings and turned to gasping and moaning. Then around two o'clock it started up again.\n\nI couldn't help myself. I just started laughing again.\n\n\"Shut up,\" Cammie hissed.\n\n\"They're making me laugh,\" I gasped.\n\n\"They're making me horny,\" Cammie retorted, which put a quick end to my laughter.\n\nWe listened a little longer, and then I heard the rustle of Cammie's sheets. And then I froze, when I became aware of a presence beside the bed, and a hand snaking under the covers.\n\n\"Cammie? What are you doing?\"\n\n\"What I'm good at, Trick Sterling,\" she gave a nervous chuckle. \"Digging out balls.\"\n\nShe was good at it. Her hand was in my unzipped, unbuttoned pants in seconds, gently caressing me inside my shorts and working its way inside.\n\n\"Cammie,\" I warned her.\n\n\"I know,\" she said. \"It'll just be once.\"\n\nI pushed my pants off and she climbed on top of me. She was already naked, and she reached down to put me inside of her.\n\n\"Oh God, Cammie,\" I moaned, \"that feels so \u2014\"\n\n\"Shut up,\" she hissed, a command that wasn't really necessary since she had put her hand over my mouth. \"If you ever tell anyone about this, I'll cut it off myself.\"\n\nI couldn't help myself this time either, so I was ready when she took her hand away from my lips.\n\n\"I thought you weren't that good at spikes.\"\n\nShe started to laugh, which felt incredible when it was transmitted through her body. I reached out and put my hands on her thighs, fully intending to continue the journey upward to caress her small but very lovely breasts. At least I assume they were lovely. I'd only ever seen her clothed before, and it was too dark to see her now.\n\nShe grabbed my wrists and slammed them down against the mattress.\n\n\"No,\" she said.\n\nShe began to ride me, up and down, milking me with her strong thighs. She began to whimper, incredibly weakly at first, so that I could barely hear her. And then finally I could hear a soft little \"oh\" with each exhalation of breath. Finally I couldn't take it any more. I brought my arms up, easily pushing past the half-hearted resistance of her own arms. I took her waist in my hands, a waist that seemed much thinner than it ever had in any of the clothing I had ever seen her wear.\n\nAnd then I pulled her over underneath me. Other than a whispered, \"Trick, oh God,\" she offered no objection. So when I centered myself over her, I began to control the rhythm of our coupling. She was amazingly tight, and I probably only lasted another five minutes. But it was enough, I think, to give her a climax. It was certainly enough to give me a climax, which we both knew because I pulled out and spurted it all over her stomach.\n\n\"You could have cum inside of me,\" she said softly when I finally started to push myself off of her. \"I am on the pill.\"\n\n\"No, I actually couldn't.\"\n\nI don't know why. It just would have been wrong. If I had done that, we would have been making love. As it was, we were just two horny kids helping each other to get off. That was the way that Cammie appeared to want it, and that was fine with me.\n\nShe got up and went into the bathroom to clean herself off. And then she got into bed and fell asleep. The other bed.\n\nCammie insisted on leaving the hotel at seven o'clock in the morning so that I could drop her off at home before her father got up. I simply shrugged and toted our stuff \u2014 my tux, her dress, and her giant makeup bag \u2014 down to the Szerchenkos' car for the trip home.\n\nIt wasn't until we neared her house that I finally decided I had to say something about what had happened.\n\n\"So you want to, um \u2014\"\n\n\"No,\" she cut me off.\n\n\"No what?\n\n\"No, I don't want to do anything with you.\"\n\n\"But Cammie,\" I said. \"Last night was... It was incredible.\"\n\nShe turned to me with a tear-stained face.\n\n\"I know it was incredible,\" she spat. \"I've known it would be fucking incredible since the fucking eighth grade, asshole.\"\n\n\"But \u2014\"\n\n\"Shut up, Patrick Sterling. Just shut up. Do you know how much it hurt me when we broke up? Do you know how many days I cried? Do you know how long it took me to even make friends with Jeanne again? And then my mother was all, like, 'I'm sure it'll work out, honey.' Yeah, right. Like I'd ever put myself through that again.\"\n\nI opened my mouth to answer, but Cammie was on a roll.\n\n\"And then yesterday, you were just like the boy that I fucking fell in love with. The Trick Sterling that I broke up with would have cut Rabbit off at the knees. But you just gave him your best friend because you knew that they'd be happier together.\"\n\n\"Well, so did you,\" I protested.\n\n\"Shut up,\" she hissed again. \"Pull over here.\"\n\n\"But your house is just down the street.\"\n\n\"I know where my house is, you ass. I'm not taking any chances on my dad being up. Thanks for the ride.\"\n\nShe got out, took her stuff from the back seat, and slammed the door shut. I watched her walk down to her house, and then went back to mine.\n\nI was a little surprised to see Tommy's car outside the house. Okay, I was shocked. Not so much at Jill, of course. She had been active for a while. But Tommy?\n\nI opened the door to find him standing at the door to the basement, looking down the stairs toward Dave's room. He was still wearing his rented pants and shirt, carrying the tuxedo jacket. He turned toward me with a dazed expression.\n\n\"That's where it is,\" he said, looking behind me toward the blue sky of the morning. I could hear giggling coming from the upstairs hallway.\n\n\"Where what is?\" I asked him.\n\n\"The front door.\" He stepped around me and barely made it down the front steps.\n\n\"Are you okay to drive?\" I shouted after him.\n\nHe waved his hand in the air. Yeah, yeah, I'm fine. I'll just fly home.\n\nI sighed and went back in the house.\n\n\"I can't believe that you're letting him leave in that condition,\" I directed my shout upstairs.\n\n\"He didn't drink a thing,\" Jill said defensively.\n\n\"He's drunk on you. Tommy's a new man today.\"\n\n\"We borrowed some of your condoms. Three, I think.\"\n\n\"Thanks for sharing. Keep 'em.\"\n\n\"Thank you for sharing,\" she giggled. \"I was afraid they weren't going to be big enough, but they stretched okay.\"\n\n\"Thanks for sharing that, too.\"\n\nWhat was I, the locker room shrimp? True, nobody showered with an erection, but I didn't think I was that small.\n\nJill giggled again, and in a few minutes I heard the sounds of the shower. I made us both breakfast, and we sat and talked about how much fun the Formal had been. Jeanne breezed in just after ten, and she and Jill started talking as if I weren't even there. After about fifteen minutes, though, there was a lull in the conversation and Jeanne turned to me.\n\n\"So, um, I'm sorry about last night,\" she said.\n\n\"Sorry about what?\" Jill asked.\n\n\"About Tanya and, um, Rabbit,\" Jeanne said.\n\n\"What about them?\" Jill still looked confused.\n\nJeanne looked at me.\n\n\"It's not like it's a secret,\" I laughed. \"Tanya and Rabbit spent the night together.\"\n\n\"You're kidding!\" Jill was floored.\n\n\"Yeah,\" Jeanne said. \"I saw 'em at breakfast.\"\n\n\"I think they'll be really nice together,\" I smiled.\n\n\"And you don't care?\"\n\n\"It's not like she was my girlfriend. I'm sure we'll still be friends.\"\n\n\"So you were alone last night?\" Jill asked.\n\nJeanne had a very small smile on her face.\n\n\"No,\" I said. \"Cammie had to have somewhere to sleep, so she was in the other bed.\"\n\n\"You and Cammie?\" Jill's face lit up.\n\n\"No,\" I said. \"She just slept there. She made me sleep with my clothes on.\"\n\n\"Bummer,\" Jill laughed. After that, she and Jeanne returned to discussing their evenings.\n\nI waited until just after noon to drive the Szerchenkos' car back to their house. Dad had called just before I left and asked us if we could come to the hospital around two. His voice was almost trembling, but he assured me that both mother and baby were fine. He just wanted us all to come in at two to meet our new half-sister.\n\nMrs. Szerchenko emerged even before I brought the car to a stop.\n\n\"Didn't you forget someone?\" she asked as I walked up to give her the keys.\n\n\"She's not here?\"\n\n\"Why would she be here if she's not with you?\"\n\n\"Um,\" I desperately tried to think of a good reason, without any success at all. It was time to bite the bullet.\n\n\"She found someone else.\"\n\n\"You broke up?\"\n\n\"Well, there really wasn't anything to break,\" I pointed out.\n\n\"She just left you there and went off with some other boy?\"\n\n\"Yeah, pretty much,\" I nodded.\n\n\"I can't believe this,\" she clutched at her heart. \"You bring her to the dance, and she meets another boy \u2014\"\n\n\"Actually, no, she'd met him before,\" I interrupted her. \"He was here for her birthday.\"\n\n\"He's a friend of yours?\" she was shocked.\n\n\"Yeah, he's the shortstop on my team. Rabbit? Tall kid, skinny?\"\n\n\"The boy with the nice curly dark hair?\"\n\n\"That's him.\"\n\n\"I need to sit down.\"\n\n\"Me, too.\"\n\nWe both took seats on the porch swing.\n\n\"You seem remarkably composed about this,\" she said suspiciously.\n\n\"Well, we were just friends.\"\n\n\"With benefits,\" she added.\n\n\"With benefits,\" I agreed. \"No more benefits for me.\"\n\n\"So what does she see in this \u2014 Rabbit? \u2014 that that she doesn't see in you?\"\n\n\"Oh, come on, Mrs. S,\" I laughed. \"I think we both know the answer to that one.\"\n\nI did. She still didn't.\n\n\"Is he smart?\"\n\n\"Are you saying I'm not?\" I did my best to look shocked. \"I think I'm hurt, Mrs. S.\"\n\n\"No, no, no,\" she started to get flustered.\n\n\"Come on, Mrs. S,\" I let her off the hook. \"What's the only reason Tanya isn't dating me?\"\n\nHer eyes widened.\n\n\"He's a... he's a -?\"\n\n\"Jew,\" I nodded. \"A member of the tribe.\"\n\n\"Oh my,\" she started to fan herself with her hand. \"Why didn't he ask her out before?\"\n\n\"I don't think he knew you were Jewish. You should advertise more. You know, a little sampler for the wall that says 'Next year in Jerusalem.' Something like that.\"\n\nShe whacked me on the arm.\n\n\"Excuse me, I have to tell Sol,\" she said, hurrying into the house.\n\nThe Parkermobile pulled in as soon as she left.\n\n\"Sorry,\" I shrugged as they exited the car. \"I thought you'd be here before now. Jeanne said she saw you at breakfast.\"\n\nI looked back to make sure Mrs. Szerchenko hadn't come back.\n\n\"What did you do, go back to the room after? Use the extended checkout option?\"\n\nIt was very gratifying to see Tanya blushing that deeply. Mrs. Szerchenko popped out onto the porch just then. Without waiting to be introduced, she grabbed Rabbit by the ears and pulled him down for a kiss. Then she brought him into the house to meet Sol.\n\n\"Have fun, Joel.\" I shouted after them, drawing out the name Joel.\n\n\"You heard, didn't you?\"\n\n\"Ooh, Joel, you're so big,\" I mimicked her voice.\n\n\"Patrick, I \u2014\"\n\n\"Tanya, I think it's really great. You'll still always be my friend. Right now, though, I need a ride home. I have a new baby sister to meet.\"\n\n\"So how was Cammie?\"\n\n\"Cammie?\"\n\nYou and Cammie did spend the night together, didn't you?\"\n\n\"In separate beds,\" I agreed.\n\n\"Patrick,\" she looked exasperated. \"That was the whole point of giving you to her.\"\n\n\"Giving me to her?\" I asked. \"I gave you to Rabbit.\"\n\n\"Only after I'd made you dance with Cammie,\" she laughed, \"and you realized that Rabbit and I were both Jewish. For which I'm very grateful, by the way.\"\n\nShe stood on tiptoes to give me a kiss on the cheek.\n\n\"But why would you give me to Cammie?\" I was feeling a little dazed.\n\n\"Because you love her,\" Tanya said.\n\n\"How do \u2014\" I started. \"Why do you say that?\"\n\nShe just laughed. Tanya could read me like a book.\n\n\"You needed Cammie's help to pick out my necklace, and picked out hers on your own? When I thought that it was a terrible present?\"\n\n\"So?\"\n\n\"So you still have feelings for her,\" Tanya insisted.\n\n\"Yeah, she has feelings for me, too,\" I said sarcastically.\n\n\"She was wearing the necklace, wasn't she? Honey, you and I are just friends. She's your girlfriend.\"\n\nTanya left me standing there while she went in to get Rabbit. She was able to drag him away, but only with the promise that he would return as soon as I was jettisoned at the closest bus stop along the way. Rabbit and I both assumed they were joking, and he drove me all the way home. We spent the whole time talking baseball, right up until he pulled into my driveway and stopped.\n\n\"You treat her well,\" I smiled at him.\n\n\"I love her,\" he said simply.\n\nThat was good enough. I got out of the car and sent him back toward his future.\n\nWe arrived at the hospital just after two, and Dad was waiting for us in the waiting room at the maternity ward. He looked even more nervous in person than he had sounded on the phone.\n\n\"You sure she's okay, Dad?\" I asked. \"Is there something you're not telling us?\"\n\n\"She's fine,\" he assured us. \"I thought you could go in first, Trick, and then Jeanne and then Jill.\"\n\n\"Okay,\" I said. Whatever.\n\nI knocked on her door and Tiffany told me to come in. She looked very beautiful there in her bed, her little girl asleep on her chest.\n\n\"Hey,\" I said quietly.\n\n\"Hi.\"\n\n\"So this is little Brittany?\"\n\n\"We haven't actually named her yet,\" she said slowly. \"That's why I wanted to talk to you.\"\n\nI sat down in the chair beside her bed. This was much more serious than what I had been expecting.\n\n\"First of all, I want to apologize, Trick. When I married your dad, I think I admired him more than I loved him. And I had a bit of a crush on you. You kind of reminded me of this guy I dated in high school. I'm really glad now that I didn't do anything about it. But I hope that I didn't creep you out too much.\"\n\n\"No, no,\" I assured her. Except maybe for that bit on Christmas where she had told me she wished it was my child she was carrying. But we didn't have to mention that again.\n\n\"Good,\" she smiled. \"Anyway, I really do love your dad now. I love being in your family, too. At first, I was like really jealous of your mom, because it was clear to me how much your dad loved her.\"\n\nI smiled.\n\n\"But you know, the two best times in our house this year have been when your mother was there.\"\n\n\"She was there?\"\n\n\"I don't know. Her spirit was there. Do you remember that snowstorm when we came home and found you and Jeanne and Jill all laughing together?\"\n\n\"Uh-huh.\"\n\n\"I found that Jill had cleaned up her room, and she said that you had reminded her about her mother, and how neat the house always was.\"\n\n\"Yeah,\" I smiled. \"That's true.\"\n\n\"And then this last week, when you and Jeanne and Jill were all friends again and driving to school together and going to the dance together.\"\n\n\"'Cause of what I said to Jill about Mom.\"\n\n\"Yeah,\" she said. \"And I realized that your mom must have been a pretty special person to be able to keep that much love in this house after she was gone.\"\n\n\"She was,\" I said.\n\n\"So I was thinking of how much I'd like to try to do that, too, now that I'm a mom.\"\n\nI smiled again.\n\n\"So first of all, I'm taking your father's name. Your family's name. I kind of really didn't want to do that before, to be Mrs. Sterling.\"\n\n\"No kidding. Tiffany Sterling? You sound like a \u2014\"\n\n\"Gold digger,\" she finished the sentence. \"I don't care. I want to be a Sterling.\"\n\n\"Welcome to the family.\"\n\n\"Thank you,\" she said sincerely. \"And I told your dad that I wanted to name the baby something other than what we had planned, and he said I had to ask you guys.\"\n\n\"Tiffany,\" I said, \"you guys can name the baby whatever you want.\"\n\n\"Even Sarah?\" she asked, a tear forming in her eye.\n\n\"Sarah Sterling?\" I asked, my voice dropping to a whisper.\n\nShe just nodded. The baby, meanwhile, had woken up.\n\n\"Do you want to hold your half-sister?\" she asked.\n\n\"Yes,\" I said. \"Call the waiting room. Ask them all to come up.\"\n\nI walked around the room with the baby in my arms until Jeanne, Jill, and Dad pushed through the door.\n\n\"Girls,\" I said. \"I want you to meet your new sister, Sarah.\"\n\nThey cooed in unison as they stepped toward me. That was the last time I got to hold the baby that afternoon. As we were leaving, Tiffany called to me just as we reached the door.\n\n\"Trick, will you do something else for me?\"\n\n\"Sure, Tiff.\"\n\n\"That picture of your church that was hanging on the wall?\"\n\n\"Yeah?\"\n\n\"That meant a lot to your mom, didn't it?\"\n\n\"It was her favorite place,\" I smiled. \"Other than home.\"\n\n\"It's in the hall closet,\" Tiffany said. \"Will you put it back where it was?\"\n\nI was honestly speechless.\n\n\"Trick?\" she asked again.\n\n\"Patrick,\" I said haltingly.\n\n\"I'm sorry?\"\n\n\"Mom never liked the nickname 'Trick,'\" Jeanne told Tiffany, wiping a tear off her own cheek. \"I'll make sure he does it.\"\n\nWhat an amazing day. God had taken something away but He had given me something new. Mrs. Jenkins always used to say in Sunday school that He worked in mysterious ways. Damned if she wasn't right.",
        "Chapter 25\n\nThe following Monday marked the beginning of the last month of classes. Apparently that was the signal for our teachers to tell us their plans for the end of the semester. In Government, Mr. Kennedy, bless him, said that our final would be on Tuesday, June 12. If there was one thing I loved, it was Mr. Kennedy's government tests. Mr. Anson's history class would also end with a test, on Monday the 11th.\n\nMrs. Palmer had no intention of letting us getting away with something as simple as a test. Instead, we would have a final paper. That paper would be due on Friday, June 8.\n\n\"You have two options,\" she announced. \"The first is that you can revisit the paper you wrote at the beginning of this class on Mr. Melville, where you discussed one fact from Melville's biography and how it influenced his writing. Now that you have read some of his work, you can let me know whether you were right or wrong.\"\n\n\"And the other option?\" Missy chirped behind me.\n\n\"The other option,\" Mrs. Palmer said, stepping forward with a stack of Xeroxed papers that looked depressingly familiar, \"is to do the same exercise with Mr. Sterling's paper. I passed it out early in the semester, although I doubt that many of you saved it. Even though it was probably the best piece of writing most of you saw all year. So here's another copy. Mr. Sterling?\"\n\nI could feel the glares behind me as I put my hand back down.\n\n\"What's my other option, ma'am?\" I asked.\n\n\"Your other option, Mr. Sterling?\"\n\n\"Other than using my own paper, ma'am.\"\n\n\"Your other option is an F, Mr. Sterling.\"\n\nThat set the whole class laughing. I just nodded.\n\nMr. Carruthers had already informed us how our final grade would be determined: partly by the quizzes but mostly by our lab notebooks and our final reports. The notebooks were due at the end of the last lab, this coming Wednesday, and the final reports on June 11.\n\nAstronomy class, of course, was also the first time I had seen Cammie since I had dropped her off in the street after the Formal. She resolutely refused to look at me, and instead stared straight ahead for the entire class. So as the bell was ringing, I leaned toward her and said, not in her ear as much as it was so softly that nobody else could hear it.\n\n\"You know, if you act like this at lunchtime, they're gonna know something happened.\"\n\n\"What do you mean?\" she said savagely.\n\n\"Well, Jeanne knows you slept in the same room as I did,\" I pointed out.\n\n\"You told her?\"\n\n\"You told her. When you asked to switch rooms with Sammy. You told her there were no other rooms and you couldn't go home. What else was she gonna think you did? Sleep in the lobby? I told her we were in separate beds.\"\n\n\"We were in separate beds.\"\n\n\"I guess. For sleeping.\"\n\nShe glared at me as we started to make our way out of the classroom toward our next classes.\n\n\"Anyway, if you don't act exactly like you did last week,\" I continued, \"she's gonna think we did more than that.\"\n\nShe continued to stare at me as I walked away.\n\nReligion was almost as bad. Tanya kept staring at Mrs. Jenkins as she informed us that the final exam would take place on Friday. June 8. It would include an essay portion covering the entire year, and a short-answer portion covering the last third, on the prophets.\n\n\"So you wanna talk?\" I asked Tanya when class was over and we started walking toward lunch. \"I mean, we're still friends, right?\"\n\nShe stopped and looked at me.\n\n\"I feel like we've just abandoned you,\" she said sorrowfully. \"My parents adore Rabbit. It's like you were never there now.\"\n\n\"Oh, I think we both know exactly where I was,\" I smiled and nodded my head.\n\nTanya flushed a dark red.\n\nI felt a twinge of pain when I entered the lunch room and realized that the seats that were awaiting Tanya and me were no longer together. Instead, Cammie had given up her seat for Tanya, and had apparently pushed Tommy into the seat next to me. So now I couldn't even look at her during lunch without appearing obvious.\n\nThe main topic of conversation, of course, was Tommy. He had looked very nice in his tuxedo, and of course everyone had admired his date. But he was a gentleman, insisting that after the Formal he had simply taken Jill home. He said not a word about his not having left for another seven or eight hours after he got there. It was a prudent decision. If we won our first league playoff game that afternoon, I would be firing fastballs at him on Thursday. Those protectors work well, but they're not perfect.\n\nDespite our record and our sixth seed, the rest of the league was well aware that we were the defending state champions. And because we hadn't played the third-seeded team, Hillside High School, this year in league play, they were a little nervous about facing us. We exploded in the top of the third inning for four runs, including homers by Mo and Matt. But Cary didn't have his best stuff, and after five innings, the score was tied at 6-6. Then Eddie, hitting ninth, singled to open up the sixth. He was erased at second by a force out on Bobby's grounder to short, but they weren't quick enough to turn the double play on Bobby at first. Rabbit smoked the very next pitch right over second base, and we had runners on first and second with only one out. I stepped to the plate confidently, having already doubled in the four-run first, and having singled in a run in the third.\n\nBut I couldn't handle the curve. After working the count to 2-2, I popped up weakly to the left side of the infield and threw my bat on the ground in disgust. I watched in amazement as the Hillside shortstop closed his glove a fraction of a second too quickly The ball bounced off the closed glove and headed for the outfield, the shortstop and the third basemen in frantic pursuit. Bobby and Rabbit both took off. By the time the shortstop picked up the ball, he had no play on Bobby at all because the third baseman was standing next to him in the outfield. Instead, Bobby turned for home. Rabbit was already cruising into second base. The shortstop looked over at me standing at home plate, watching the play unfold, and with a big grin on his face, heaved the ball toward first. The Hillside first baseman scooped it out of the dirt, and the first base umpire screamed that I was out. Yeah, no fooling.\n\nThe first baseman threw home, and Bobby had to retreat to third. Mo struck out after that, and the inning was over. Throughout the rest of the game, I was getting dirty looks from various guys on the team, as if they were really disappointed that I had popped out. It surprised me a little bit. We had pulled together as a team recently, and it was kind of hard to believe that the guys would blame any one player for not getting the job done, even if we had had a runner in scoring position.\n\nIt wasn't until after we had won the game, scoring the winning run in the top of the seventh and then holding off a desperate Hillside rally in the bottom of the inning, that I realized that they were mad about something else entirely. As I stood at the bottom of the bus steps to offer my now-traditional post-game congratulations, Bobby Bunt muttered something as he approached me.\n\n\"Sorry, Bobby, I didn't quite catch that,\" I said.\n\n\"I said, nice base-running, Sterling. If you'd run out that pop-up, we would have had the bases loaded with one out.\"\n\nHe pushed past me onto the bus, taking a seat in the back with Hal.\n\n\"Can I say a word to the team, Coach?\" I asked as Coach Torianni brought up the rear.\n\nHe smiled and nodded.\n\n\"Listen up, guys,\" I said. \"Apparently some of you are upset that I didn't run out the pop-up, and I just want to explain why. Some of you probably remember that at the beginning of the year, Coach went over the infield fly rule with us. The one where the batter is automatically out. Guys, that was it. Runners on first and second, less than two out, a pop-up to an infielder. I was out as soon as I hit it.\"\n\n\"But he dropped it,\" Bobby said from the back.\n\n\"That's why the rule's there, guys. So if he drops it on purpose, they can't get a double play on the runners who are staying on their bases.\"\n\nI watched comprehension dawn on a couple of faces. Bobby still wasn't happy, though.\n\n\"But he didn't call it,\" he pointed out. \"He's supposed to call out 'infield fly, batter's out.'\"\n\n\"He is,\" I agreed. \"But it's an appealable play. And you can be damned sure that if he had picked up the ball and tried to force out Rabbit at second before throwing to first, I'd have been there screaming that there was no force play. Coach would have been right behind me, right?\"\n\nI looked behind me to see Coach grinning and nodding.\n\n\"And yeah, I know. Maybe they didn't know the rule either, and they wouldn't have appealed. There probably are coaches out there who don't. Maybe we could have had the bases loaded. Maybe you want to be on a team that can't play by the rules of baseball. I don't. I think baseball's the greatest game there is. I think that all of its rules have a reason. I don't want to win unless we can win under those rules. Any questions?\n\nRabbit raised his hand.\n\n\"So should we run there or not?\"\n\nI smiled.\n\n\"If he catches the ball, it's a tag-up play. If he drops it, you run if you know you can make it to the next base ahead of the tag.\"\n\nI took a seat next to Rabbit and thanked him. He gave me a little grin and went back to his calculus textbook.\n\nJeanne knocked on my door a little after nine that evening.\n\n\"So,\" she gave me a big smile.\n\n\"So what?\" I asked.\n\n\"So you and Cammie?\"\n\n\"Me and Cammie what?\"\n\n\"You and Cammie hooked up.\"\n\n\"Who told you that?\" I demanded, my eyes widening in surprise.\n\n\"You did.\"\n\n\"I did not. When did I tell you that?\"\n\n\"Just now,\" Jeanne giggled. \"When you said 'who told you that?' instead of 'we did not.'\"\n\n\"Very funny, Jeanne Sterling,\" I said soberly. \"If you tell Cammie I told you, she's gonna castrate me.\"\n\n\"Well, you really just confirmed it,\" Jeanne sat down on my bed. \"She's the one who told me.\"\n\n\"I'm quite sure she would have done no such thing,\" I insisted.\n\n\"Not so anybody else would know,\" she smiled at me. \"But I'm her best friend. I could tell something had happened from the way she was treating you at lunch.\"\n\n\"She was ignoring me at lunch,\" I protested.\n\nJeanne smiled and leaned forward as if she were about to let me in on a great feminine conspiracy.\n\n\"After you broke up, she used to absolutely hate you,\" she said. \"Her father still does hate you actually. But then this year, after you changed, she started looking at you a little differently.\"\n\n\"She still calls me an asshole every chance she gets.\"\n\nBy now I was interested enough in this conversation to put down my book.\n\n\"Yeah,\" Jeanne laughs. \"But it was sort of like you had become just another guy at the table. But I could see the way she looked at you today when you weren't looking.\"\n\n\"How?\" I prompted her.\n\n\"Like you'd gotten under her skin again.\"\n\n\"And that told you that we'd hooked up?\"\n\n\"Either that or you'd done something really stupid again. And if you'd done something really stupid, she would never have even come to lunch. So something else obviously happened.\"\n\n\"Uh-huh,\" I agreed, reflecting that I had no chance when it came to understanding women. \"You still can't say anything.\"\n\n\"Okay. So how was it?\"\n\n\"Jeanne,\" I protested.\n\n\"Yeah, I thought it would be,\" she smiled.\n\nAbsolutely no chance whatsoever.\n\n\"Can I ask you a question?\"\n\n\"Sure.\"\n\n\"How long did I date Cammie?\"\n\nShe got a little grin on her face.\n\n\"Let's see, you kissed her at Christmas, and finally got up the nerve to ask her on a date in June, I think. You didn't break up until the next year, like March.\"\n\n\"After baseball season started?\"\n\n\"Oh, yeah. That's when you became Mr. Bigshot. Oh my God, you don't remember breaking up, do you?\"\n\nI shook my head.\n\n\"I have a good idea how much it hurt her,\" I said. \"But no, I don't remember it at all.\"\n\n\"So you're, like, still in love with her.\"\n\nTanya had said the same thing, but I hadn't put it in the context of my \"memory loss.\" The last thing I thought about before I went to sleep on Christmas Eve last year was how much I was looking forward to Cammie Rowe \u2014 chubby, metal-mouthed Cammie Rowe \u2014 coming back from her trip. Jeanne's statement \u2014 not a question but an affirmative declaration \u2014 was like a physical blow.\n\n\"Well, you're going to make Mrs. Rowe very happy,\" Jeanne continued after it had become apparent that I was completely speechless.\n\n\"Mrs. Rowe?\"\n\n\"She always thought you were meant for each other. She probably still has all the china patterns that she picked out for your wedding.\"\n\n\"Are you serious?\"\n\nJeanne just smiled. Finally, with a very affectionate look at me, she pushed herself off of my bed.\n\n\"Thanks for the chat, big brother.\"\n\n\"Seriously,\" I reminded her. \"Castration.\"\n\nShe just giggled and left. I looked down and thought I should go out and find somebody to have sex with. It might be my last chance.\n\nBut I was still intact on Thursday, when we traveled to Park Forest for our next playoff game. Park Forest was the second-seeded team, and had been given a bye to the second round of the playoffs just like McKay Academy. They had their number one pitcher ready and we had ours.\n\nI gave Tommy a little grin just before we took the field.\n\n\"What?\" he asked.\n\n\"Arm's feelin' heavy again, Tommy,\" I said, turning it in a slow windmill.\n\n\"Well, goddamn, let's get this game started.\"\n\nBy the end of the fifth inning, I had struck out ten batters. Two more had grounded out to Rabbit, and Eddie had made a flawless play on another. Mo made a beautiful catch of a foul ball for another out, and Hal made a flat-out dive in the bottom of the fifth on a blooper that I had been sure would drop in for the first hit of the game. It hadn't. There had been no hits, no walks, and no errors. The guys had started ignoring me just like they had during my no-hitter, but I wouldn't let them this time. I joked with each of them, threw bottles of water, and did my best to keep everybody loose.\n\nBy that point, we were only leading 1-0, on a home run in the third inning by, of all people, Tommy Narburg. Other than that, their pitcher had shut my team down almost as well as I'd shut his team down. In the sixth inning, I started to get a little tired. Fortunately, the first guy up went after the first pitch. He sent a liner toward first that looked like it would be well over Mo's head, but the big guy made an awesome leap, climbing the ladder to rob the guy of at least a double into the right field corner. The next guy also went after the first pitch, an easy grounder that I scooped up and tossed to Mo. The third batter was a little more patient. He took the first two pitches for strikes and swung at the third, a long fly ball that Bobby hauled in just short of the left field fence. Park Forest was down to its last three outs.\n\nWe went quickly in the top of the seventh and I took the mound. I was starting to get a little nervous myself and threw the first two pitches for balls.\n\n\"Hey,\" Matt Denton suddenly appeared beside me on the mound.\n\n\"What?\" I asked anxiously.\n\n\"Just let 'em hit it. We got your back.\"\n\nI stared at him for a few seconds. Did he not realize that every batter represented the potential tying run? That having my back didn't do a lot of good if one of these guys took me downtown because I left one out over the plate?\n\n\"All right, Matt,\" I smiled. \"I'll make sure they're all grounders.\"\n\nI started throwing them all low. Unless they were good golfers, there's no way they were gonna put one out of the park. Or even out of the infield, if I did my job well. The first pitch was a swinging strike, and the next one was hit straight to Rabbit. One down, two to go.\n\nThe second batter let the first two pitches go, but one caught the lower outside corner, and the count was even at 1-1. The next pitch was just a little lower and just a little further outside, and he couldn't get around on it. He hit a soft roller down to Mo, who came down the baseline, picked it up, and tagged the guy out. Two down, one to go.\n\nI realized now, as I looked into Tommy to get the sign, that this batter was probably even more nervous than I was. He might have been the potential tying run, but he was also the potential last out of the season for his team. With that little bit of knowledge, I reared back and blew a fastball right past him for strike one. Tommy called for the change on the next pitch, and he swung so early he almost had time to reset himself and swing again as if he were in a cartoon. Strike two. I burned the next two pitches, trying to tempt him to swing at balls further and further outside of the strike zone. He was getting more and more frustrated as he fouled both of them off. Then I threw the next pitch inside, and he took another mighty cut at it. This time he got a little bit of the bat on the ball and it headed weakly toward the shortstop. It was such a weak shot, in fact, that I had a play on it myself. As a lefty, my follow-through brings me to that side of the plate, and I eagerly stretched my glove toward the ball.\n\nI don't know what I tripped on: a blade of grass, a bump in the mound, my own feet. It didn't matter. I simply stared in horror as I felt myself falling toward the earth, and as I watched the ball tick off the end of my glove. It would have been an easy play for Rabbit if I hadn't touched it, but now I had redirected it toward third base, and Matt, moving toward his left, suddenly found the ball trickling off toward his right.\n\nIt's still hard for me to believe that I saw Matt Denton, E-Five as some of the guys called him behind his back, arrest his forward motion and bend his body backward far enough to pick up the ball with his bare hand. Standing that off-balance, with no time to set himself, there was no way his throw should have made it anywhere near first base. But it was close enough. Close enough that Mo Perra, who later told me that now that he knew how much it hurt, he would never try to do a split again, could get his glove on the ball and keep his foot on the bag. It all seemed to go in slow motion \u2014 the ball leaving Matt's hand, bouncing once and settling into Mo's outstretched glove, and the umpire behind him throwing his fist into the air to signal the end of the game. The end of a perfect game.\n\nMy team carried me off the field. They carried me out of the locker room to the bus. I insisted on my new ritual, though, and when Mo came by he handed me the ball. When Matt came by, I handed it to him.\n\n\"But this is yours,\" he looked down at it in shock.\n\n\"Well, it's really the team's,\" I said. \"And look how many guys here are going to be graduating this year. I think next year's team's gonna need a little inspiration.\"\n\n\"But...\"\n\n\"So I'm giving it to the captain. He can give it back to me next summer. Heads up play, Mattie. Thanks a lot.\"\n\nWe actually hugged, right there at the steps to the bus. Then the guys still in line started making fairy jokes so we parted company and I finished shaking hands.\n\nWe got home around seven that evening. I had already told Dad that I wouldn't be home for dinner, and after I got a bite at the Burger King, I headed back for the school. The auditorium was only half full. The Friday and Saturday night performances of The Sound of Music would probably be much better attended, so I was glad I had already bought my tickets for those shows.\n\n\"Patrick!\"\n\nI was walking down the aisle and quickly spotted the source of the cry.\n\n\"Hi, Mrs. Rowe, Cammie. May I sit with you?\"\n\n\"Please,\" Mrs. Rowe smiled.\n\nI sat down on the other side of Mrs. Rowe from Cammie and leaned forward.\n\n\"Thank you very much. How come you're not in the play, Cammie? You have such a nice voice.\"",
        "\"Thanks,\" she said, somewhat sullenly.\n\n\"Cameron,\" her mother said, \"he asked you a question.\"\n\nCammie looked over at me and grinned a bit.\n\n\"Grades,\" she said. \"I have a horrible lab partner this year in Astronomy, and I have to do twice as much work.\"\n\n\"Oh, dear,\" Mrs. Rowe said. \"How come you never mentioned this before? I would have spoken to Mrs. Sparks on the school board.\"\n\n\"I worked it out, Mom,\" she told her mother with a wicked smile that was solely for my benefit.\n\n\"Okay,\" Mrs. Rowe said doubtfully. \"So how was the game, Trick?\"\n\n\"One to nothing,\" I said. \"Hammerin' Tommy Narburg homered. That boy's doing something right. How did you know we had a game, Mrs. Rowe?\"\n\n\"Well, Cammie told me, of course,\" she said.\n\nShe turned back to her daughter, who suddenly noticed Tanya and Rabbit walking up the aisle and insisted that they join us. Tanya claimed the seat next to me and gave me a peck on the cheek.\n\n\"Isn't it neat?\" she leaned forward to speak to Cammie and her mother.\n\n\"What?\" Cammie asked.\n\n\"Patrick,\" Tanya squeezed my arm. \"His perfect game.\"\n\n\"A perfect game?\" Mrs. Rowe said. \"What's a perfect game?\"\n\n\"It's just like an A-plus,\" I smiled at her. \"Sort of like what Cammie's gonna get in Astronomy despite her lab partner.\"\n\nThe lights went down just then, preventing me from seeing Cammie stick her tongue out at me. But I knew she had done it. If her mother hadn't been there, she would have called me an asshole, too.\n\nJill was excellent as Liesl, although the completely natural way in which she claimed to be \"Sixteen, Going on Seventeen\" gave me pause. She wouldn't even be going on sixteen until next Friday night. And yet as wonderful as Jill was, she came nowhere near matching Jeanne for the sheer effervescence of her performance. Jeanne sang like she was truly happy, and knowing her as I did, I was quite sure that she was.\n\nI drove them both home after the performance, and they never stopped singing the entire way home. Fortunately, nobody wanted to wake Sarah or Tiffany up, so my time at home was blessedly quiet.\n\nOn Saturday I found myself in the mall. Ostensibly I was there to get something for Tanya, something that said \"you're okay, kid,\" without saying \"let's hit the sack.\" She had given me back my friendship ring on Friday. Rabbit hadn't actually said anything, but she could tell that it made him uncomfortable for her to be wearing it, so she wanted me to have it back. I took it back to the jewelry store, and they were more than happy to give me half of what I had paid for it.\n\nAs I walked the mall, though, I found it nearly impossible to pick something new out for Tanya. Because everything I looked at caused the same questions to pop up in my mind. I wonder how Cammie would look in this? I wonder if Cammie would like this?\n\nFinally, feeling a little bit dizzy, I sat down on one of the benches in the center of the mall. The one, it was true, with the view of the Victoria's Secret store. Maybe I should just go ahead and get the castration over with. I saw this, Cammie, and I thought of you.\n\nI was actually starting to feel a little bit better. I was a little distracted, though, by a brunette who was standing with her back to me looking in the window at a tan bra and panty set. From the back, it appeared to me that she had the perfect figure to make it work. Tall with very nice curves, and very long auburn hair. I watched her look at it for a while, and then start to walk away. And then she stopped and stood in front of it again. And then she took five steps away. And then she walked back. And then she turned around, and I burst into laughter.\n\n\"And just what is so funny, Mister Sterling?\" Rachel Carter demanded, having covered the ground between us in a few short strides. She stood there, her arms crossed in front of her chest. \"You think I would look funny in that outfit?\"\n\n\"No, ma'am,\" I said, suddenly sober again. \"I think you would look incredible. It was your indecision I found, um, humorous.\"\n\nShe tapped her foot on the ground, looking back at the store window over her shoulder.\n\n\"So you gonna buy it or are you just gonna stare?\"\n\nShe looked back at me, her face a bright pink.\n\n\"'Cause I think it would look pretty darn nice,\" I added.\n\nShe was now almost red.\n\n\"I'm thinking I should start dating again,\" she said, suddenly wheeling around and sitting beside me on the bench. \"It's hard.\"\n\n\"I'm sure it is,\" I nodded.\n\nWe spent the next hour sitting there while she told me the story about her fianc\u00e9e. We cried, we laughed, we held hands together. It was particularly poignant when she explained that he had been a graduate student at the University of Virginia. That, she explained, was why she had been so willing to help me when I had wandered into the office on the day after Christmas.\n\nAnd then, very shyly, she turned to me and asked if I would like to have dinner with her, at her house. I looked into her eyes, trying to make sure that I knew what she was asking.\n\nShe leaned into me, her eyes dancing now.\n\n\"'Cause I think we could have a lot of fun together.\"\n\nI just smiled at her as she traced a finger along my arm.\n\n\"I would, and I wouldn't,\" I finally said.\n\nShe looked a little disappointed.\n\n\"The old Trick, the one that did Ms. Torianni and all those other girls in the high school and elsewhere,\" I said, \"he would have done you in a minute. The new Trick is a little different. The new Trick is the one that you danced with, the one that you celebrated his SAT score with.\"\n\n\"That's the Trick I like,\" she said quietly.\n\n\"Yeah, and that's the Trick that now wants love to go with his sex,\" I smiled. \"And I do love you, Rachel Carter, just not like that.\"\n\n\"I heard you broke up with your girlfriend last weekend,\" she put a hand on my knee in sympathy.\n\n\"Yes and no. She wasn't really a girlfriend, so we didn't really break up. But it did hurt. I don't think I really did love her.\"\n\n\"That's too bad,\" she murmured.\n\n\"On the other hand, I am in love now.\"\n\n\"Already?\" she giggled. \"You're a very fast worker, Patrick Sterling.\"\n\n\"Well, she doesn't love me, but I'm working on that.\"\n\n\"How can she not love you?\" she took my side immediately.\n\n\"Who knows? Women. Still, what I would like to do, Rachel Carter, is to take you to the dinner I owe you, and then to the theater.\"\n\n\"The theater?\" she laughed.\n\n\"The Sound of Music,\" I told her. \"Starring Jeanne Sterling and Jill Sterling. This will be my third night, so if I start singing along, just elbow me in the ribs. Shall I pick you up at six for dinner?\"\n\n\"That would be very lovely,\" she said, kissing me on the cheek. Then she got up and walked into the Victoria's Secret store with just the tiniest look back over her shoulder. She'd be wearing them, too, the bitch.\n\nHeads turned as we entered the auditorium. I was dressed in my best suit, a freshly pressed shirt, and a nice, conservative tie. Rachel Carter wore a flower print dress that swished back and forth around her beautiful legs as she walked. She held my arm as we walked down the aisle and found two seats. We had enjoyed a very nice dinner at the town's best Italian restaurant, and I had happily given her the other ten-dollar show ticket that I had bought when I thought I would be attending with Tanya. It was another incredible performance, and when Jeanne took her bows, the last of the year in her starring role, she found me in the audience and waved. I waved back. And then I watched her being applauded.\n\nThere is a prayer that goes something like, \"God grant me the serenity to accept the things I cannot change, the courage to change the things I can, and the wisdom to know the difference.\" In church the following day, I asked God to give me a prize. I didn't care what, a plaque or a nice trophy or something. I had turned down Rachel Carter. From any objective point of view, that didn't require serenity, courage, or wisdom. Most guys would consider it rank stupidity.\n\nChapter 26\n\nThe news that I wasn't going to get the grades I needed to be admitted to the University of Virginia was just sort of slipped into the middle of the week, like a piece of paper you find in a book that you picked up in the library. On Monday, we had another quiz in Astronomy, and I was stoked when I handed it in. As far as I could tell, I nailed every question on it. Cammie was happy, too. We were both pleased. Until lunch, anyway.\n\n\"Do you know any sports couples?\" Jeanne was looking around the cafeteria as she threw the question out for discussion by the table.\n\n\"I'm not sure I even know what a sports couple is,\" I said doubtfully.\n\n\"It's a couple where both the guy and the girl lettered in sports,\" Jeanne said, turning back to us with a frown. Apparently she had been unable to locate any.\n\n\"First of all, no,\" I said. \"And second of all, why?\"\n\n\"Because the sports banquet is next Saturday,\" she said.\n\nI actually knew that, because Coach had said that he would pass out tickets after the game today. I didn't see how that answered the question, though, and apparently my confusion showed on my face.\n\n\"Oh, you remember,\" Jeanne said to cover up the fact that I didn't. \"All the athletes get one ticket, and they each get to bring a guest. Last year, Rabbit went with Cammie, so he gave me his ticket so Jill and I could go. Of course, that's where Jill met Andy. Who are you going with, anyway?\"\n\n\"I don't know. I was thinking of Mrs. Jenkins.\"\n\nThe whole table turned to look at me.\n\n\"Our Sunday school teacher?\" Jeanne asked incredulously.\n\n\"Yeah. She's also my Religion teacher. I thought it would be fun. You know. People would talk. But our final's that week so she might think I was sucking up. You can come with me.\"\n\n\"I was kind of hoping to go with Sammy,\" Jeanne blushed. \"Jill will be going with Tommy, I assume.\"\n\nWe all looked over at Tommy, whose face still hadn't lost its stupid expression. Like me, he had been to the play each night last weekend. And then he had accompanied Jill to the cast party.\n\n\"And I assume Rabbit's taking Tanya,\" Jeanne said as the two lovebirds gave each other sickening smiles. \"Who are you going with, Cam?\"\n\n\"Nobody,\" Cammie said. \"I'd give you my ticket but Liz said I had to show up.\"\n\n\"Well, sure. You have to dance with Trick.\"\n\nCammie flashed me a look that said she would rather dance with a fish.\n\n\"Wait a minute,\" Jeanne was getting excited. \"Maybe you could \u2014\" \n\n\"No,\" Cammie said.\n\n\"You haven't even heard it,\" Jeanne protested.\n\n\"Maybe I could go with Trick. No.\"\n\n\"Trick wouldn't mind, would you?\"\n\n\"No,\" I grinned. \"People would talk even more about that.\"\n\nCammie glared at me. I smiled back.\n\n\"Oh, please?\" Jeanne looked at her friend.\n\n\"You can come with me,\" Cammie said. \"And Sammy can go with Trick.\"\n\n\"No. That kind of talk I don't need,\" I shook my head.\n\n\"Besides,\" Jeanne said earnestly. \"I'd still end up sitting next to Sammy and you'd end up sitting next to Trick. You know you're gonna have to dance with him. 'Cause you know you're both going to be athletes of the year again.\"\n\nI smiled again. Cammie glared again. She looked back at Jeanne.\n\n\"I'll think about it,\" she sighed.\n\n\"Thanks,\" Jeanne said. She turned to me and, out of Cammie's sight, gave me a big wink. It was all I could do not to laugh. I wondered if she really wanted to go to the banquet at all. I was a very lucky brother.\n\nTuesday afternoon was our rematch against McKay Academy for the league championship. It had been hard beating them once, and harder beating them twice. Nobody had any real illusions about the third time being the charm. And the news the Coach gave us after we had boarded the bus didn't help our confidence. Cary had stepped on a nail over the weekend and was going to be lost for the rest of the season.\n\nBy my calculations, that was maybe three hours away. A half hour bus ride, half an hour to change, and a two-hour game that either Donnie or Steve would be pitching. Season over.\n\nThat didn't stop us from having fun, though. Carl Thomason was pretty much the last guy on the team. He would pinch hit and play left field if the game was completely out of control. He had apparently spent his time watching all the rest of us, and decided that this was the time to show off his impersonations. There were guys rolling in the aisle when he did Coach. He saved me for the very end, standing up in front of the bus as it rolled to a stop in front of McKay Academy.\n\n\"All right, men. Remember, this is a team game. And we're a team. You can tell that because we all wear the same uniform. Except me, mine has a \"C.\" And a different number, of course. Anyway, we win as a team, we lose as a team, we eat as a team, and we crap as a team. But we're a team. Even if you are doing my girlfriend, Jo-el. Now, men, we have to remember this is a game with rules. Lots of rules. Don't try to remember them all. It'll just give you a headache. Just remember that with men on first and third and less than one out or more than one out, but not one out, a ball hit to the shortstop means that the man on third has to click his heels together three times and say, out loud, 'there's no place like home, there's no place like home.' And then you'll be home. And that's good for us. So are you ready, men? Who's with me? Let's goooooo.\"\n\nWe all followed Carl off the bus, screaming at the tops of our voices. The McKay Academy team was already walking out to the field, and the sight of twenty screaming guys wearing ties was no doubt a little unnerving.\n\nIt was apparently unnerving enough that their pitcher hung a curve to Mo in the top of the first, letting him drive in Bobby from first with a two-run homer. And that only further set him off. In the fourth, he left a fastball out over the plate, and I crushed it. It barely missed a Volvo in the parking lot beyond the left field fence.\n\nDonnie, meanwhile, was throwing the most effective junk of his life. Having prepared for Cary's curve and my fastball, the McKay hitters had no idea what to do with a fastball that came in as slowly as Donnie's did, or a slider that always threatened to break across the plate but never quite made it. They got their hits, but never enough of them in a row to do any real damage to us. By the end of the fifth inning, we were ahead 5-2, and the McKay coach was getting worried.\n\nOur coach was getting worried, too, although for a different reason. Donnie was done by the top of the sixth, walking the first batter on four straight pitches. That left it up to Steve, and his first pitch, to my old friend Paul Bunyan, came down in the next county. After that, the other guys were starting to look worried as well.\n\n\"Matt!\" I screamed from right field.\n\nHe looked out at me, and I motioned toward the mound. He pointed at the pitcher and raised his eyebrows, and I motioned again, doing my best to scowl at him. Matt obediently strolled to the mound to have a word with Steve. As far as I know, Matt had been to the mound only three times that season, and I was hoping that he would remember the last time and not the first or the second.\n\nThe next pitch was grounded to Rabbit. One out.\n\nThe next batter stroked a single to right field. I fired it into Eddie on second to keep him at first.\n\nAnd the next batter hit into a textbook 5-4-3 double play. Third to second to first. Denton to Cooper to Perra. One more inning to go. We were clinging to a 5-4 lead.\n\nCoach sat down next to me while Eddie was hitting and asked me quietly if I could pitch the last.\n\nI looked at him and gave him a grin.\n\n\"Nah,\" I said, in as loud a voice I could. \"Steve'll finish it off.\"\n\nHe returned my grin.\n\n\"Hear that, Manzilla?\" he yelled toward Steve. \"Sterling wants you out there rather than him.\"\n\nSteve's eyes grew wide. Eddie finished striking out to end the inning. I ran past Steve and clapped him on the shoulder. And he struck out the side. None of us could believe it either. We stood there in the field while Steve and Tommy started celebrating our second consecutive league championship all by themselves. Finally we wised up. And then we all started running toward them.\n\nMr. Carruthers returned my astronomy lab notebook on Wednesday morning. Cammie, sitting next to me, looked over at it and gave me a smile.\n\n\"A-minus. Good job, Trick.\"\n\nI was numb, sitting there in a sort of hazy fog. Finally, though, I managed to stammer out a \"yeah,\" as I glanced over at Cammie's A-plus.\n\n\"Hey, I'm the scientist,\" she said breezily. \"Speaking of which, are you busy on Saturday night?\"\n\n\"Huh?\"\n\n\"I'm was going to borrow a telescope and make a few last observations,\" she said, looking at me out of the corner of her eye. \"I need somebody there to help.\"\n\n\"Somebody?\"\n\n\"All right, you. I need you. You're my frickin' lab partner, and you already know my whole system. Happy?\"\n\nShe gave me a look that managed to convey more emotions that I would have thought possible: a dare for me to say no; her ambivalence about asking me in the first place; and there, in the back of her eyes, maybe just a tiny bit of hope that I'd agree. Of course I would.\n\n\"I'd be a little happier if you'd talk to me now and then, instead of pretending like I didn't sit next to you in class or at the same table at lunch.\"\n\n\"I'm sorry. It's just \u2014\"\n\nMr. Carruthers had finished passing back the lab books and begun his lecture. So I never got to find out what it was that was just \u2014.\n\nI continued through the rest of the week in a kind of numb disbelief. I had been focusing on my grades for the last five months. Now, with a B-plus average on the quizzes and an A-minus on the lab book, there was no way I was going to get an A-plus in astronomy. And without that, there was no way I was going to get into the University of Virginia.\n\nI found, though, that I couldn't help but keep working. I was spending my evenings with Moby Dick opened in front of me, trying to glean its origin, if any, in Melville's childhood illness. UVA or not, I was just as much a nerd now as I had been in ninth grade.\n\nOn Saturday, I settled in at the public library to do my first draft. I was working hard enough that I didn't realize that the library had closed for lunch until Lynn Edwards pulled out the chair across the table from me.\n\n\"Hey,\" she said softly.\n\n\"Oh, hi. Sorry. I guess I was concentrating a little too hard, huh?\"\n\n\"You remind me of the old Trick,\" she giggled. \"The one who used to come here and bury his nose in his books.\"\n\n\"Yeah, me, too.\"\n\nShe reached out and traced her fingers lightly across my hand.\n\n\"Of course, the new Trick was fun, too.\"\n\nI froze in place.\n\n\"But I thought you and, um, Bob were going out.\"\n\n\"We were. Not any more. I'm leaving.\"\n\n\"Leaving?\"\n\n\"I'm going to New York City. This Friday. I was going to call you today to tell you and here you are. You know, I've always wanted to be a writer, and I just decided if I don't give it a try now, I'm never going to. I just need to get away for a while and concentrate on writing, and one of my college roommates has an opening in her apartment.\"\n\n\"Wow.\"\n\n\"Bob has his life here. He's going to make partner next year. It was good, but we were never going to be together forever.\"\n\n\"Sorry.\"\n\n\"I'm not. I had a blast. Thank you, Trick.\"\n\n\"Sure.\"\n\n\"So do you, um, want to say goodbye?\"\n\nShe batted those big eyelashes at me. I reached for my wallet and opened it up.\n\n\"You know, I do have a condom,\" I pulled it out.\n\nShe blanched. It had been nearly five months since she had told me that if I ever showed up with a condom she'd let me fuck her in the ass, but she remembered it just as clearly as I did.\n\n\"Trick, I, um...\"\n\n\"That's okay. I think I'd rather say goodbye just like this.\"\n\n\"Just like what?\"\n\n\"Just sitting across from you here, having you tell me about your dream of becoming a writer.\"",
        "That was all it took. Her ambitions, her dreams and aspirations - everything poured out of her over the next hour. We shared the tuna fish sandwich that she had brought for lunch, and I told her about our baseball season, and how I thought I had turned into a real team captain. We said goodbye with a long, tender kiss that made my groin ache.\n\nCammie picked me up around nine o'clock that evening. As I sat waiting on the porch for her, I had decided that the three-step process that I had begun when I had returned from my visit from the University of Virginia wasn't all I needed to do to make amends. This time, though, what I needed to amend was not from the three weeks after my no-hitter, but from the three years before I woke up on Christmas Day. I had a fourth step.\n\n\"Cammie,\" I said as soon as she had parked the car at Lemmon's Park. \"Before we set up our stuff, I just wanted to tell you how sorry I am.\"\n\n\"For what?\"\n\n\"For hurting you as badly as I did. I don't think I knew before last week, on the way home from the Formal, just how much pain I had caused you. I was Trick Sterling, the king of the world.\"\n\n\"Trick, I \u2014\"\n\n\"Shush,\" I silenced her. \"I need to finish. You're a really great girl, Cammie Rowe. You need to have somebody who will tell you that every day. And I can't help but think that the reason you don't is that you're afraid to get close enough to somebody who will. Because you're afraid that he'll hurt you just like I did.\"\n\nI could tell she was looking at me, but in the quickly growing darkness of the parking lot, I couldn't really see her face.\n\n\"So all I want to say is, when you get to Albania next year, let yourself fall in love. Don't let a high school jerk prevent you from finding him.\"\n\nI reached out and found her hand on her lap. She put her other hand on top of mine and gave it a squeeze. I could feel her tears dropping on to my skin.\n\n\"Thanks, Patrick,\" she finally said with a sniff.\n\n\"But as for Albania,\" she said ruefully.\n\n\"Have you heard yet?\" I asked.\n\n\"Not yet,\" she sighed. \"I think I may have to go to my safety.\"\n\n\"MIT? Cal Tech?\"\n\n\"Asshole,\" I could hear Cammie grinning in the dark. \"Come on. Let's go.\"\n\nWe hiked to where we could see her star low in the western sky. I carried the telescope that she had borrowed from the school and she brought her notebooks and papers. Finally, she pronounced herself satisfied with the view and I extended the legs of the scope.\n\n\"These little scopes are harder to set,\" Cammie said, \"so you look and tell me when I've got it centered properly.\"\n\nI did as Cammie requested while she made some minor adjustments.\n\n\"Whoa,\" I said. \"Looks like you get a bonus.\"\n\n\"A what?\"\n\n\"A bonus star. One that wasn't there last time.\"\n\n\"What are you talking about?\"\n\n\"There's another star there. That's a little odd, huh? Maybe it's a spaceship from Planet Xenon Four.\"\n\n\"Yeah, like you'd know if there was an extra star there,\" she scoffed. The real Cammie was back.\n\n\"Hey, lady, I stared at that grid of yours for three frickin' hours last time,\" I was getting pretty defensive. \"I think I know when something doesn't belong.\"\n\n\"All right, I'm sorry. Let me see.\"\n\nCammie replaced me at the scope.\n\n\"I don't see it,\" she finally said, sounding a little put out.\n\nI checked her grid with the little penlight she had brought out.\n\n\"C-16,\" I smiled at her in the darkness. \"Right next to the rest stop on the interstate.\"\n\n\"Fuck. There it is,\" she said, completely ignoring my humor. \"Damn. I could have looked for hours and not seen that. How did you see that?\"\n\n\"Ted Williams had 20/15 vision,\" I pointed out.\n\n\"What?\"\n\nI could tell she had turned to look at me from the change in the tone of her voice.\n\n\"Ted Williams? Last major leaguer to hit four hundred? He had 20/15 vision. He used to say he could see the stitching on the ball.\"\n\n\"Asshole,\" she murmured, quickly losing interest in Ted. \"Holy shit. I think it's a comet.\"\n\n\"Not a spaceship?\"\n\n\"Trick,\" she sighed as if she were talking to a five-year-old. \"You have to report it.\"\n\n\"I don't really think the police are gonna care if there's a comet.\"\n\n\"Not the police, the IAU.\"\n\n\"The...?\"\n\n\"International Astronomical Union. Here.\"\n\nShe grabbed the little flashlight to illuminate her purse, and produced a card with the organization's phone number.\n\n\"Ooh, look at you, little junior woodchuck member of the International Astrologers Union,\" I snatched the card from her hand. \"What are you, some sort of little Brownie scientist?\"\n\n\"Astronomers, asshole. Look, are you gonna call or not? The rules say if you're the first to sight the comet, it gets named after you. But you have to be the first to report it.\"\n\n\"Sure,\" I said. \"Rules are rules. I love rules.\"\n\n\"Let me get you the coordinates,\" she said with a note of disgust.\n\nI pulled out my cellphone, but we were too far away to get a signal. At Cammie's insistence, I left her there and drove back toward town. When I returned, she was waiting expectantly for me.\n\n\"Well?\"\n\n\"I just got a machine. You know, press 1 if you sighted a comet, press 2 if you found a meteorite, press 3 to report the explosion of the sun and the imminent destruction of life on earth. I was really tempted on that one.\"\n\n\"Trick,\" she hissed a warning.\n\n\"So I answered the questions. Name, date, time, coordinates. You really think it could be Sterling's Comet?\"\n\n\"Comet Sterling,\" she corrected me gently. \"Trick, that would be so cool.\"\n\n\"Yeah, I guess it would,\" I agreed.\n\nWe settled back into our observations for another hour, until she finally announced that she was done. We packed up the equipment and hiked back to the parking lot, where Cammie drove me home.\n\n\"Trick, do me a favor,\" she said as she pulled in front of my darkened house. \"Tell Jeanne she can have my tickets. I'll go with you.\"\n\n\"Oh, sure. Now that I'm a famous astronomer.\"\n\n\"No, now that you're not so much an asshole.\"\n\n\"Good enough,\" I nodded after no thought at all. \"It's a date.\"\n\n\"It's not a date.\"\n\nI told her that I would pick her up at seven-thirty. She told me she would be driving herself there and would meet me in the lobby of the school. I insisted that I would pick her up at seven-thirty, and she told me she would be long gone when I got there. I smiled. She glared.\n\nI told Jeanne the next morning on the way to church. Where she sat with Cammie in the front row. I was unwilling to join them on my own, and I hadn't been invited. So I contented myself with childishly sticking my tongue out at the back of Cammie Rowe's head. That was apparently a little disconcerting for the minister, who faltered a little bit during his sermon. Whatever. I'd just add it to the sins I'd be confessing in a couple of minutes.\n\nChapter 27\n\nBy now, the last full week of school, we didn't really practice much baseball after school. We would get together for about an hour, maybe do a little running and stretching. We pitchers would throw a little to loosen our arms. We'd take a little BP. We would laugh and talk over our favorite parts of the season. The state championship tournament began tomorrow, against Crest View High School, a school from about an hour and a half south of us. They were supposed to have an excellent pitcher, and were one of the top-hitting teams in the state this year. We had me, and we could hit pretty well most of the time, but we were all aware that this could be our last game.\n\nComing up to bat in the top of the sixth inning, we were behind, 2-0. I had walked the leadoff batter in the bottom of the fourth, and the next guy had taken my fastball out of the yard. A very good hitting team, indeed.\n\nBut not, as it turned out, particularly well-coached. With one out, Bobby had singled. Rabbit had bunted the ball down the third base line, and their third baseman had just missed it when he went to scoop it up for the throw. Only a heads-up play by their shortstop had kept Bobby from scampering to third.\n\nWith the count at two balls and two strikes, I got the curve, and once again I couldn't lay off. Once again, I popped it up to the shortstop. This time, the umpire behind the plate called out \"Infield fly, batter out.\"\n\nAnd it had no effect at all. I watched in shock as their shortstop pretended to drop the ball at his feet. He let it bounce, scooped it up again, stepped around Bobby to put his foot on second, and threw to first. With a huge smile on his face, the first baseman planted his foot nearly on top of Rabbit's, caught the throw, and rolled the ball toward the pitcher's mound. The whole team ran off the field.\n\nI was still standing at the batter's box, Mo was in the on-deck circle, Coach Craig was still at third, and Hal Stonerider was in the first base coach's box. All of us were paralyzed. Finally, I realized that if we just kept standing there, somebody on the Crest View team would figure out what the umpire had meant when he called me out on the infield fly. There followed perhaps the slowest play in the history of the game of baseball.\n\n\"Rabbit,\" I yelled out to him as I slowly started making my way to the dugout. \"Which glove is yours?\"\n\nRabbit started to walk toward second base, and I saw him nod to Bobby to start heading for third, as if he were walking toward the dugout.\n\n\"It's the Spalding,\" he yelled back to me. \"Derek Jeter.\"\n\n\"Mine's the black one,\" Bobby yelled as he started down the line from second to third. He was walking with his hands on his hips as if he were just a little disgusted that no one had yet run out with his glove.\n\nNo one had emerged from the dugout at all. As Coach Craig, Hal, Mo and I slowly began walking there, everyone in the dugout was pretending to look for the gloves.\n\n\"Where did you leave your glove, Bobby?\" Donnie yelled from the dugout.\n\nBobby was nearly at third by now, with Rabbit about half way from second to third. The umpires were watching us intently, and they were the ones who finally gave it away. The Crest View catcher had taken off his gear and emerged to lead off the bottom of the sixth, and he glanced at the umpires, Bobby and Rabbit, and the team in the dugout.\n\n\"Shit!\" he screamed. He dropped his bat and raced toward the mound. Bobby took off for home, with Rabbit right behind him. Bobby made it easily, but Rabbit wasn't quite as fast. The catcher actually had a play, but Rabbit executed a perfect slide to the outside of the plate, just out of the poor guy's reach.\n\nWe were laughing so hard we could barely congratulate each other on tying the game. Mo was laughing so hard that when the Crest View team finally returned to the field, more than a little angry, he struck out on three pitches. Then the Crest View team struck out on eleven pitches in the bottom of the sixth.\n\nNeither team scored in the seventh, and we found ourselves in extra innings. Coach had offered me a chance to come out, and I had declined. It was my game, and unless it went to twelve or thirteen, it was mine to win or lose. I was clearly getting tired, though, and after we failed to advance Jesse from first in the top of the eighth, I walked the leadoff batter for Crest View on a 3-2 pitch that could have been called either way. The next guy up pushed a perfect bunt up the third base line, and Matt was lucky to get the out at first base. So Crest View had a man on second with only one out. The third guy up was their leadoff hitter, and he hadn't touched me all day. But with the count at 2-2, he tapped a weak little roller toward third base. It would have been a relatively easy play for Matt, at least at first base. But I dove for it, hoping to throw the guy out running to third. And once again I watched in agony as the ball ticked off the end of my glove.\n\nThere was no chance for Matt to save me this time. The ball trickled across the third base line as the runner rounded third. Matt made a tremendous effort to reverse course and scrambled after the ball. But by the time Tommy caught the ball, the Crest View team was already celebrating their win. I just lay there on the ground, trying to blink the tears out of my eyes. Rabbit came over to help me up, and we lined up to shake our opponents' hands.\n\nCoach pulled me aside before I got into the showers to tell me that I had nothing to be ashamed of, that the team was only in the playoffs in the first place because I had picked them up and carried them there.\n\n\"Sure, Coach,\" I grinned. \"Thanks.\"\n\nI was the last one out of the showers, though, and found the locker room completely deserted. I found out why when I finished dressing and headed toward the bus. There, lined up to shake my hand, was every member of the Marshall High School baseball team. Rabbit was first in line, Coach Torianni was last. The best, though, was Matt Denton, who simply said, \"nice job, cap,\" as he shook my hand.\n\nStill, it was a silent, almost depressed bus. Until Carl Thomason piped up from the back in a perfect imitation of Donnie's tenor.\n\n\"Where did you leave your glove, Bobby?\"\n\nThat started us laughing again, and pretty soon we were trading stories about the season. We were still joking with each other when we pulled into the parking lot to find Jeanne, Jill, and Tanya waiting for us.\n\n\"So you won?\" Jill asked Tommy.\n\n\"Nope,\" he said, watching their faces fall. \"But we didn't really need to. Want a ride home, Jilly?\"\n\nShe climbed into his car, Tanya got into Rabbit's, and Jeanne drove me home.\n\nI spent Tuesday night as I had spent the night before, and the night before that. Mrs. Palmer was a demanding teacher, and even if I wasn't going to get an A-plus in Astronomy this semester, it was for damn sure that I was going to get one in English. When I finished it late Tuesday night, I was pretty pleased with myself. If Mrs. Palmer thought that my first paper had been an excellent piece of writing, just wait until she got this one.\n\nWednesday and Thursday nights were devoted to Religion. For the most part, at least. There was a band and orchestra concert on Wednesday night, so the Sterling kids had to attend that to cheer on Sammy, who had a solo. There was a chorus concert on Thursday night, so the Sterling brother and sister had to attend that to cheer on their other sister, who also had a solo. Jeanne was thrilled when Dad and Dave also showed up at the concert.\n\nI did a lot of studying during my study halls on Wednesday and Thursday afternoons. And after I got back from the concerts, of course. Although on Thursday there was the added distraction of the major league baseball draft. When we returned from the chorus concert, Tiffany told me that I had gotten twenty calls so far, one from the Pittsburgh Pirates, who had drafted me with the fourth pick, and all the rest from agents eager to have me sign up with them. Eventually, she said, she just changed the answering machine message so that it gave out my cell phone number, and then she had just stopped answering the phone.\n\nI thanked her, and then excused myself to go study. Dad and Tiffany traded looks, and Dad cleared his throat.\n\n\"If you'd rather go to college, son,\" he said, \"I'm sure we can find the money.\"\n\nI stared at him for a few seconds, and then just thanked him as well.\n\nI very proudly handed my paper in to Mrs. Palmer as she walked around collecting them on Friday.\n\n\"Decided not to take the F, Mr. Sterling?\" she asked with mock acerbity as she took my paper.\n\n\"Tough call, ma'am,\" I nodded. \"But I figured since I set a personal best for class attendance this year, I might as well finish the game.\"\n\n\"Indeed. Ms. Josephs, another paper based on Mr. Sterling's thesis, I see. You should be pleased with yourself, Mr. Sterling. You appear to have attracted half the class to your point of view.\"\n\nFlushed with success in my English class, and cognizant of the sheer effort I had put into studying, I was confident when I walked into Religion for the test the following period that I could handle anything that Mrs. Jenkins could throw at me. Isaiah? Knew it. Amos? Knew it. Jonah, Micah, Malachi? Knew 'em all. And those older historical books? I knew them, too.\n\nThe test only bruised my confidence a little. I was in doubt about one of the short answer questions, about the book of Daniel. Daniel. Damn! I didn't spend long enough with Daniel. And then the sweeping essay question that concluded the test cost as much sweat and blood and toil as I could bring to bear in a fifty-minute class. Tanya and I both looked at each other with relief when that test was over. I was effectively done in two of my classes. I would finish polishing my astronomy report tonight, study for the history test on Saturday and Sunday, and memorize everything I could about the American government on Monday night.\n\nIn the meantime, though, I still had to get through lunch on Friday. Everyone congratulated me on the draft, and then the talk turned to colleges. Tanya would be going to Cornell, and Rabbit to Colgate. Tommy was going to be going to Williams College, and Sammy had received a full scholarship to the Eastman School of Music in Rochester. Cammie still hadn't heard from R.P.I., and shortly after graduation would probably let her backup school know that she'd be going there instead.\n\n\"Which is where?\" I asked.\n\n\"R.I.T.,\" she said.\n\n\"In Rochester?\" Sammy brightened up.\n\nCammie nodded.\n\n\"Wait a minute,\" I said. \"Didn't anybody apply to colleges that aren't along the New York State Thruway?\"\n\n\"Cornell is in Ithaca,\" Tanya pointed out helpfully. \"South of the Thruway.\"\n\n\"And Williams is in Massachusetts,\" Tommy chimed in.\n\nStill, even with the prospect of a multi-million dollar signing bonus, which the morning paper had assured me was the going rate for top-five draft picks, I felt strangely out of place in my own little crowd.\n\nI was at the mall again on Saturday. I walked into a jewelry store, instantly spotted the two earrings that I wanted, and had them in my pocket in less than five minutes. On the way out, I saw Rachel again, sitting on a bench across the mall.\n\n\"Hey, beautiful,\" I yelled out.\n\nShe looked up and gave me a big smile as I walked toward her.\n\n\"Jeez, one trip to the men's room, and you're already trying to find a younger guy,\" said the guy who came up behind her.\n\nWe glared at each other like dogs getting ready to fight over the same fire hydrant.\n\n\"Mr. Hastings,\" I said cautiously.\n\n\"Mr. Sterling,\" he answered with equal care.\n\nI was the first to smile.\n\n\"Well, this is so great,\" I gushed. \"I'm happy you called her.\"\n\n\"Are you going to find me all my dates?\" he grinned.\n\n\"No, this is it,\" I said. \"So maybe you had better try to make this one last, huh?\"\n\n\"Maybe he'd better,\" Rachel said, taking his hand as she stood up. \"And thank you, Patrick Sterling.\"\n\nShe leaned forward and kissed me on the cheek. I'd gotten a lot of cheek action in the last couple of weeks, and it was getting just a little frustrating. Still, as I watched Rachel and Bob walk off, hand in hand, I reached inside my pocket and felt the earrings that I had bought. Maybe I'd at least get another cheek kiss tonight.\n\nI pulled into the Rowe's driveway a little before seven-thirty. Mr. Rowe was sitting on the steps of his house, and started glaring at me as soon as I stepped out of the car. I was dressed to please, or at least to please Cammie's mother, in a sports coat and khaki slacks, and my most conservative tie.\n\n\"Can I help you?\" he asked gruffly as he stood to bar my way.\n\n\"Sir, I'm escorting your daughter to the sports banquet tonight, and I'm just here to pick her up.\"\n\nHe gave me an odd look.\n\n\"Did she know you would be coming?\" he asked.\n\n\"I told her seven-thirty,\" I said. \"But before I knock on the door, sir, I just wanted to apologize to you.\"\n\n\"To me?\" he started.\n\n\"I've already apologized to Cammie, sir. I was stupid. I was rude. I was arrogant. I've told her that, too. I was just too full of myself to see that I had found the best girl in the world back in tenth grade and let her slip out of my hands.\"",
        "He looked at me for a long time, and I tried to make the sincerity on my face match the sincerity with which I had delivered my little speech.\n\nHe finally sat back down on the steps and nodded to the step next to him.\n\n\"Her mother seems to like you,\" he said, staring off into space.\n\n\"I appreciate Mrs. Rowe's good wishes.\"\n\n\"I don't want my daughter to get hurt like that again.\"\n\n\"No, sir. I would never hurt her like that again.\"\n\n\"What makes you think she'll ever consent to go out with you again?\" he chuckled.\n\n\"Nothing, sir. Although she is letting me take her to the sports banquet. That's a hopeful sign, sir.\"\n\nWe sat there in silence for a little while longer.\n\n\"Cammie tells me that you discovered a comet,\" he said suddenly.\n\n\"Well, apparently I saw a comet,\" I agreed. \"Although it was Cammie who pointed out it was a comet. I was hoping for a spaceship. But I don't know yet about the discovery part.\"\n\n\"Seriously? It's been a week. I thought she said you had to give them your e-mail. Shouldn't you have heard by now?\"\n\n\"Actually, I gave them Mr. Carruthers' e-mail address. Our astronomy teacher.\"\n\n\"Why?\"\n\n\"Well, put yourself in my shoes, Mr. Rowe. If I go in to Mr. Carruthers and tell him I discovered a comet, he'll say, 'uh-huh, sure Trick.' And I could probably even fake up an e-mail.\"\n\n\"But if he gets it directly...\" Mr. Rowe smiled.\n\nI smiled back.\n\n\"Daddy, have you seen my car keys? I can't find them anywhere.\"\n\nCammie was still in the house, her voice growing louder as she walked down the hallway that led toward the porch. We both turned as she appeared in the screen door. She was absolutely beautiful, in a red and white knit dress. And, I was very pleased to see, a lapis lazuli necklace.\n\n\"Trick,\" she pushed the door open and finally saw me standing there.\n\n\"You look lovely, Cammie,\" I smiled.\n\n\"I thought I told you \u2014 oh, never mind. Let's just go.\"\n\nI pulled the box out of my pocket.\n\n\"I brought you some earrings.\"\n\nShe stared at the box and slowly opened it.\n\n\"They go with your necklace,\" I said.\n\nBoth her father and I watched her hand rise up to finger it.\n\n\"They should match,\" I pointed out helpfully.\n\nShe stormed back into the house, but returned in a minute wearing them. Mrs. Rowe joined her husband on the porch to wave goodbye to us.\n\n\"I can't believe my father didn't kill you,\" Cammie said when we were finally on the way.\n\n\"He seemed very reasonable,\" I said.\n\n\"It's still weird,\" she said. \"And I told you I was going to meet you there. If I'd found my car keys I would have already been gone by the time you got there.\"\n\n\"I would have had to give you the earrings at the banquet, then,\" I smiled.\n\n\"Oh, wipe that stupid grin off your face,\" she said. \"Just because I'm wearing your gifts doesn't make me your girlfriend, Trick Sterling.\"\n\n\"Oh, I know that,\" I nodded sagely.\n\n\"So why did you come?\"\n\n\"I wanted to apologize to your dad. Like I apologized to you. For hurting you. Jeanne said he took it much harder than your mom.\"\n\n\"Mom,\" Cammie scoffed. \"My mom and your mom were this close to booking the church.\"\n\nShe held up her finger and thumb a millimeter apart.\n\nI smiled.\n\n\"What are you smiling at?\"\n\n\"Just remembering my mom,\" I glanced over at her. \"She'd probably be pretty happy right about now.\"\n\n\"Your mom would be fucking ecstatic,\" Cammie said. \"I miss your mom. That was neat about your new sister.\"\n\n\"Yeah, I think Tiffany and Dad are going to be pretty happy.\"\n\n\"When I was over there for dinner, I didn't get the sense that you guys got along real well.\"\n\n\"People change,\" I shrugged.\n\n\"Don't even think about it, Trick Sterling,\" she said after a while.\n\nBut I had heard that before.\n\nThe sports banquet featured lousy food and even lousier speeches by the members of the athletic department. If there is one group of people that should not be encouraged to take up public speaking, it's high school coaches. Finally, after we were done naming all the lettermen in all the various sports, Bob Hutchison, the athletic director, stood up.\n\n\"And now, boys and girls, I won't say that this is the moment that you have all been waiting for, but it is at least the moment that you have all been expecting. This is the first year that we have ever had a repeat of both the female and male athletes of the year. Our female athlete of the year, once again, is the star of the Marshall High School volleyball team, Cameron Rowe. And our male athlete, again, is her date \u2014\"\n\n\"Her date,\" I whispered.\n\n\"God,\" Cammie groaned.\n\n\"\u2014 the star of our baseball team, Trick Sterling. If we could have them both on the floor for our traditional dance, please.\"\n\nWe had to dance to Queen's \"We are the Champions.\" Cammie had a thin smile plastered on her face. I had a big grin plastered on mine. But at least she wasn't making an effort to actually push me away.\n\n\"This is nice,\" I said.\n\n\"It's okay,\" she agreed.\n\n\"We were a little farther away last year.\" I remembered Jeanne having told me that you could have fit another person in between us.\n\n\"You're a little less of an asshole this year,\" she smiled.\n\nWe danced just as closely as we had danced at the Formal. Just maybe not as closely as we had danced after the Formal. When we were done, we went back to the podium to accept the little trophies that went with our titles, and then returned to the table where Jeanne was sitting there beaming at us.\n\n\"Don't push it, Jeanne Sterling,\" Cammie warned as she sat down in the chair I held out for her.\n\n\"I don't have to push it, Cammie Rowe,\" Jeanne stuck her tongue out at her best friend as I reclaimed the seat in between them.\n\nThe waiters \u2014 actually, the cafeteria staff \u2014 brought our dessert. As we finished, I asked Cammie if she wanted Jeanne and I to pick her up on the way to church tomorrow.\n\n\"Thanks,\" she said, \"but I'll find my keys tonight. You don't need to bother.\"\n\n\"It's no bother,\" I insisted. \"If you find them, just give Jeanne a ring. Otherwise we'll stop by on the way.\"\n\nShe could see nothing wrong with that, and we stood up to leave. Then Cammie spotted Liz Torianni. As she went over to talk to her, I leaned down to talk to Jeanne.\n\n\"Do me a favor?\" I asked.\n\n\"Sure,\" she said.\n\n\"Call Cammie's mother,\" I told her.\n\n\"Her mother?\"\n\n\"Tell her to keep the keys hidden until tomorrow morning. Cammie's gonna let me take her to church if she still can't find her keys.\"\n\n\"Her mother?\" Jeanne asked again as she started laughing.\n\n\"You don't think I'm stupid enough to try to do this all by myself, do you, Jeanne?\"\n\nShe was laughing even harder as I headed for the lobby to meet Cammie.\n\nOddly enough, Jeanne never got that call from Cammie on Sunday morning. So we picked her up on our way to church. We all sat in the front row together. Me, Jeanne, Jill, and Cammie. Actually, the order was Jill, Jeanne, me, and Cammie, which worked out even better. I was particularly thankful to God that morning, and asked him only to help me avoid being an asshole for just a little bit longer.\n\nChapter 28\n\nOn Monday and Tuesday I took my tests in American History and Government, respectively. I studied hard, and I walked out of both classrooms happy. Lots of short answer questions, lots of multiple choice.\n\nWednesday was the last official day of classes, and nobody really expected to get anything done, particularly not in the senior classes, where the grades had been turned in to the office on Tuesday afternoon.\n\nIt wasn't a big surprise, then, when Ms. Carter came on the loudspeaker and asked everyone to assemble in the gymnasium. We were seated by class, the seniors and sophomores on the right, the juniors and freshmen on the left. In the middle of the gym were about fifty seats, which were occupied by the faculty, and in front of them was a makeshift stage with a podium and three folding chairs.\n\nMr. Peterson took the seat on the podium on the far right. When everyone had settled down, he walked up to the podium and turned on the microphone.\n\n\"Can everyone hear me?\" he said with surprising enthusiasm.\n\n\"Yes,\" we all droned.\n\n\"Good,\" he said. \"This is a very special assembly to celebrate both academic and athletic achievement. First of all, I would like to have Trick Sterling and Cammie Rowe join me here on stage.\"\n\nCammie and I made our way down to the floor and then up to the stage. I offered her the middle seat, the one right behind the podium, and took the left-hand one. Looking out, I noticed Ms. Carter standing at the back of the gym, next to my brother Dave and my dad, along with Aunt Ruth and Uncle Bill. I smiled and waved. Next to them were Cammie's parents.\n\n\"Who are you waving to?\" Cammie hissed at me.\n\n\"Your mom and dad,\" I whispered back.\n\nShe leaned over toward me to look around the podium and I watched her eyes widen in surprise.\n\n\"I think your dad likes me,\" I said.\n\n\"I think not,\" she said.\n\n\"Haven't you told him you're my girlfriend?\" I asked.\n\n\"I'm not your girlfriend.\"\n\n\"Can I have your attention again, please?\" Pete was asking. \"I'd like to start with two very special athletic awards. The state association is a little late on one of these, some sort of computer mistake, apparently. They, uh, asked me to apologize to you, Ms. Rowe. Nonetheless, I am very proud to announce that Cammie Rowe was selected to the All-State volleyball team for 2007. Liz?\"\n\nLiz Torianni walked up to the stage with a trophy and climbed the steps to give it to Cammie. The school photographer had them pose together for a picture, and Liz went back down to join the faculty while Cammie took her seat. We then went through the whole thing another time when I was named to the All-State baseball team. Coach came up for the picture-taking session, and then the photographer asked Cammie and I to pose together.\n\n\"Pretty special, huh?\" I said through my teeth as we stood there smiling.\n\n\"What's that?\" she asked.\n\n\"Us here, together, winning these awards,\" I said. \"Look how much your parents are enjoying it.\"\n\nI lifted the trophy in salute to my guests, and Cammie uncomfortably did the same.\n\n\"If I could sort of segue into the academic portion of the program...\" Pete began when we were back in our seats.\n\nCammie and I both stood up to leave.\n\n\"No, no, no,\" he said as he looked around and saw us. \"You guys sit back down. First of all, I'd like to announce the valedictorian and salutatorian of the class of 2007. I won't bring them up here, because you'll be hearing from them on Saturday. I am pleased to announce that the top grade point average in the class was earned by Sammy Houghtaling.\"\n\nAmid the applause, there was a whoop from the junior class that had everyone laughing.\n\n\"And the salutatorian,\" Pete announced, \"is Tommy Narburg.\"\n\nAnother round of applause, another whoop, this one from the sophomore class.\n\n\"The Sterling girls apparently like those brainy guys, huh?\" Cammie whispered to me.\n\n\"All us Sterlings value education,\" I said with a grin.\n\nPete leaned back to the microphone.\n\n\"I would like to point out that in third place, barely out of second, was Cammie Rowe.\"\n\n\"See?\" I told her.\n\nShe shot me a dirty look.\n\n\"Now before I get on with the most unusual part of the program,\" he said, \"I want to tell you about something else unusual that happened today. I was coming out of my office and I heard Ms. Carter swearing. Now to tell you the truth, people, I don't think I've ever heard Ms. Carter swear.\"\n\nI had to suppress a laugh. I'd be willing to bet, given the proper incentive, Rachel Carter was capable of some language that would surprise him. I lifted my head and saw Rachel standing at the back of the auditorium, turning beet red.\n\n\"So I asked her what was the matter,\" he continued, \"and she told me a really remarkable story about the Trickster here. About how he wanted to boost his grades to get into the University of Virginia, and how he needed five A-pluses this semester to do it.\"\n\nHe looked at me and smiled before he turned back. I glanced to my left to see Cammie starting at me, a puzzled expression on her face.\n\n\"She was upset, you see,\" Pete said, \"because she'd just seen his report card, and he only got four. One A, and four A-pluses.\"\n\nEven though I knew it was coming it still caused a little twinge. Well, hell, it had been a good try. I gave Cammie a little half-smile.\n\n\"But I think, people, that with just a little persuasion, we can get him what he needs. Don't you?\"\n\nMs. Carter's look had turned from one of embarrassment to one of horror. I found it a little hard to believe myself.\n\n\"Let's see, an A-plus in Government, an A-plus in History, an A-plus in the Honors English Seminar, and an A-plus in Astronomy. Mrs. Jenkins, can't we prevail on you to give Mr. Sterling an A-plus in Religion, and send this young man to the school he's dreamed about attending. What do you say, huh? What do you think, boys and girls?\"\n\nMrs. Jenkins was in the center of the group of faculty, sitting next to Mrs. Palmer. She looked miserable. Pete had started rhythmically clapping his hands, and a good number of the students in the gym were joining him. Pretty soon small pockets of them \u2014 jocks, mostly \u2014 were starting to stand up and clap. I picked out Tanya and Rabbit, sitting next to each other. Rabbit stood up and Tanya yanked him back down by his belt. Uh-oh, their first argument. I couldn't help but smile.\n\n\"Excuse me, Mr. Peterson,\" I stood up and tapped him on his shoulder. \"May I speak?\"\n\n\"Sure, Trick!\" he boomed.\n\nI smiled and edged my way between him and the microphone.\n\n\"Sit down!\" I roared.\n\nThe people who were standing quickly sat down.\n\n\"And shut up,\" I said in a more reasonable town of voice.\n\n\"You know,\" I looked around at the trophy I'd left by my chair, \"that's a great award. All-state pitcher. I'm very proud of that. I'm gonna take that and put it on my shelf at home. But I have to tell you my teammates helped me, especially Tommy Narburg. In every inning of every game, Tommy told me which pitches to throw, Tommy told me where to throw 'em, and Tommy caught 'em and threw 'em back. The ones that didn't get hit, anyway.\"\n\nThat got the expected laugh.\n\n\"So I am proud of that award, even if I didn't do it all myself,\" I went on. \"On the other hand, if I go home next week and get a report card with four A-pluses and one A, I'm gonna be damn proud of that. Because I will have done that all by myself. I worked hard for that A-plus in government and that A-plus in history. I worked damn hard for that A-plus in English.\"\n\nMrs. Palmer was beaming at me.\n\n\"And I worked my butt off in Astronomy,\" I said. Although an A-plus, to be honest, seemed a little high. I mean, what did he have left to give Cammie, who was, as she had pointed out, an actual scientist?\n\nI turned around and gave Cammie a little shrug. Then I turned back and saw Mr. Carruthers smiling before I found Mrs. Jenkins again.\n\n\"But I messed up that final in Religion, didn't I, ma'am?\" I asked. \"I should have gone into a little more depth on that last essay, shouldn't I?\"\n\nShe was nodding, and smiling.\n\n\"And I missed one of those short answers, too, didn't I?\" I continued. \"Daniel's friends, from the book of Daniel.\"\n\nMrs. Jenkins nodded again.\n\nI snapped my fingers.\n\n\"Meschach,\" I yelped. \"That was it \u2014 Shadrac, Meschach, and Abednego. Damn it. What did I put?\"\n\nMrs. Jenkins had buried her head in her hands, her body shaking as if she were sobbing.\n\n\"Seriously,\" I asked, \"what did I put?\"\n\nMrs. Palmer tilted her head in and shared a whisper with Mrs. Jenkins. Then Mrs. Palmer leaned back and started laughing, a raucous \"ha, ha, ha\" that echoed off the walls of the gym.\n\nShit. Suddenly I could see the answer I had put down as if it were right in front of me.\n\n\"I put Rorschach, didn't I?\" I asked. I had identified one of the biblical Daniel's friends as the Viennese psychiatrist who had invented the ink-blot test.\n\nI had to admit that it was kind of interesting to see who laughed. About half of the faculty had joined Mrs. Palmer and Mrs. Jenkins. I could see Liz Torianni laughing; Coach Torianni, sitting next to her, looked a little mystified. A few students \u2014 Tanya, Rabbit, Sammy, and Tommy among them \u2014 started to laugh as well. I heard a thud behind me and turned around. Pete gave me a sort of shrug. I turned the other way, where Cammie Rowe had fallen off her chair and was holding her sides.\n\n\"Oh, just get back in your chair,\" I pointed to it, making her laugh even harder.\n\nI turned back to the audience, which finally quieted down.\n\n\"I did a lot of preaching to my teammates this year about respect,\" I said. \"About respect for the game of baseball. Its traditions, its values, and its rules. And I have to tell you, Mrs. Jenkins, that if you change my grade \u2014\"\n\nI gave Tanya and Rabbit a little smile before I gestured at the general student body.\n\n\" \u2014 because those pinheads want you to, or because this pinhead wants you to \u2014\"\n\nI jerked a thumb back at Pete.\n\n\"\u2014 then I'm gonna lose a good deal of the respect I have for this institution, and its traditions, and its values, and its rules. Since I've been here at John Marshall High, I've learned that you can bend some rules.\"\n\nI smiled at Mrs. Palmer.\n\n\"But you can't start breaking them. And one of those rules says that you don't get an A-plus on your final unless you get everything just about perfect. I wasn't just about perfect in your class, Mrs. Jenkins. But I worked hard. I earned that A. Don't you dare take that away from me.\"\n\nI walked back to my seat, and the applause started again. When I sat down and looked up, I saw that the whole faculty was now standing. Rachel was standing. Well, to be fair, she'd never actually been sitting. But she was applauding wildly, tears streaming down her face. Tanya was standing, and dragging Rabbit to his feet with her. Sammy and some of his band friends \u2014 most of his band friends, actually \u2014 were standing. I just smiled and waved. It didn't last long; the faculty and the band weren't that big. \n\n\"Uh, thank you, Trick,\" Pete said, a little chagrined. \"Finally, I'd like to ask Mr. Carruthers to come up here.\"\n\nMr. Carruthers mounted the steps and took Pete's place at the microphone.\n\n\"Thank you, Tony,\" he said nervously. \"For those of you who don't know me, I teach physics here at Marshall, and this year I also taught an elective course in Astronomy. Mr. Sterling and Ms. Rowe were among my students. And yes, you did work hard, Mr. Sterling, although perhaps not quite as hard as Ms. Rowe. In fact, when I totaled your tests and lab grade and final report, I was set to give you an A-minus. But I remembered that at one point your classmate Mr. Collins, asked me, in jest of course, if I'd give an A-plus to a student who found life on another planet, and I assured him that I would. At the time, I thought to myself, I'd give an A-plus to anyone who can find another planet. Heck, I figured, very generously, I'd give an A-plus to anyone who could find a comet.\"\n\nCammie reached over and put a hand on my arm. Her face was glowing with nothing but happiness for me. Mr. Carruthers pulled a piece of paper out of the hideous orange-colored jacket that he was wearing.\n\n\"I received this e-mail last Wednesday from the International Astronomical Union. I have to say that I was a little disappointed that nobody mentioned this in their final reports.\"\n\nHe turned around to give us his best dirty look, a sort of cross between a smile and a glare, and went back to his e-mail. Cammie was nearly bouncing up and down as Mr. Carruthers started reading.\n\n\"'This will confirm the comet sighted at Right Ascension seven hours, forty-four minutes, sixteen point seven seconds and Declination plus twenty eight degrees, two minutes, fifteen seconds on Saturday, June 3, by Cameron Rowe and Patrick Sterling. Further analysis of the comet by our staff indicates that Comet Rowe-Sterling will become visible to the naked eye during the early morning hours of the second week in August.'\"",
        "The applause for that was thunderous. Nobody had done that before. The faculty stood up, the student body stood up, and I looked over at a stunned Cammie Rowe, who had stopped bouncing pretty much right when she heard her name. I grabbed her wrist and pulled her up after me.\n\n\"Why?\" she whispered.\n\n\"It's kind of like baseball,\" I whispered back as we sat back down after acknowledging the applause with a few waves. \"We're a team. It was your star, your stupid grid, and you were the one who borrowed the telescope. I certainly couldn't have done it without you.\"\n\n\"But what about the rules? You were the first one to see it.\"\n\n\"Rules?\" I grinned. \"Rules don't apply to girlfriends.\"\n\n\"I'm not your \u2014\"\n\n\"Hush,\" I said.\n\nMr. Carruthers had started speaking again, and it was my turn to put my hand on Cammie's arm.\n\n\"I have a former college friend of mine employed at the IAU, so I e-mailed him back to confirm it. And when I got that, I e-mailed another friend of mine at a college in New York State that had had the utter gall to put Ms. Rowe on its wait list, despite my recommendation.\"\n\nHe got a nervous laugh from the audience for that. He pulled a second e-mail out of his pocket.\n\n\"I told him that I was sure that Caltech would love to number the discoverer of a comet among its incoming freshman class,\" he continued. \"I got his return e-mail today, and he informs me that the Rensselaer Polytechnic Institute would also love to number Ms. Rowe among its freshman class, and is willing to offer her the Cushing Scholarship, for a student who has performed unparalleled original work in the physical sciences. Ms. Rowe?\"\n\nHe turned around to hand the e-mail to Cammie in the midst of the renewed applause, but found her chair empty. Ms. Rowe had already knocked me to the ground.\n\nIn between kissing my face, she spoke those twelve words that any suitor longs to hear.\n\n\"It may take Daddy a little while to come around, you asshole.\"\n\nI shrugged, as best I could in a prostrate position.\n\n\"But I love you, Patrick Sterling,\" she said, burying her head in my shoulder.\n\n\"I love you, too, Cammie Rowe,\" I said.\n\n****************\n\nSammy Houghtaling was a great trumpet player, but as a public speaker he left a little to be desired. His valedictory address at Saturday's graduation was a halting speech, filled with platitudes about growing older. Jeanne wasn't the only one in the audience cringing in sympathy.\n\nThen Tommy Narburg got up and gave a hysterical speech in which he pointed out that a valedictory was simply a farewell address \u2014 vale being Latin for farewell and dictory meaning address. Then he pulled out a watch and said that he intended to speak for a minute longer than Sammy, which made him the real valedictorian of the class.\n\nSammy reclaimed the microphone, and we all held our breath, waiting for a fresh disaster. But he had his trumpet with him, and leaned forward into the microphone. I had forgotten that Sammy was also scheduled to do a trumpet solo at the ceremony.\n\n\"This is Perpetual Motion,\" he said.\n\nHe launched into a five-minute solo. I swear he never took a breath for the entire time, and when he was done, the rest of us just exhaled, as if we had all been trying to hold our breaths until he finished.\n\nHe took advantage of the silence to lean forward to the microphone one more time.\n\n\"Valedictorian,\" he pointed to himself with a smile as he looked out at Tommy.\n\nTommy was the first one to jump to his feet and start applauding. Well, the first one after Jeanne.\n\n****************\n\nI drove Jeanne and Jill to church the following day, and naturally sat in the front row next to my girlfriend. After church, I was stunned at the size of the crowd waiting for us outside the church, even if I was responsible for them being there. It included, I was very happy to see, not only Dave and Liane, but also Dad and Tiffany, with little Sarah sleeping peacefully in Tiffany's arms. Aunt Ruth and Uncle Bill were standing right next to them.\n\n\"What's going on?\" Jeanne gripped my arm as she saw the assemblage.\n\n\"Come on,\" I motioned her and Jill over to where the minister was waiting.\n\n\"Patrick,\" he said. \"Would you like to say a few words?\"\n\n\"Thank you, sir. This week will be the second anniversary of our mom's death, and I want to thank the Vestry for giving us permission to plant this tree here in her memory. It's a weeping willow, her favorite.\"\n\nJeanne and Jill were already in tears, and I was going to be joining them really soon.\n\n\"It will have a plaque on it that says, In loving memory of Sarah Anne Sterling. 1965-2005. May \u2014 may, I'm sorry...\"\n\nI handed it to Jeanne, who handed it to Jill, who gave it to Dave, who got about as far as I did. It came back to me, and I gave it to Cammie, who couldn't do any better. Finally, my best friend, Tanya Szerchenko, reached for it. She was crying, too, and I couldn't help but wish, as I heard her read it, that my mother had been able to meet her.\n\n\"In loving memory of Sarah Anne Sterling, 1965-2005. May God bless us all with her ability to love her neighbor as she loved herself.\"\n\n****************\n\nAugust, 2007\n\n\"Wake up,\" she hissed.\n\n\"What time is it?\" I groaned.\n\n\"Two o'clock.\"\n\n\"In the morning?\"\n\n\"Of course in the morning, Patrick. Look.\"\n\nWe looked up into the sky, and there it was. Comet Rowe-Sterling, blazing in the eastern sky.\n\n\"Wow!\" we both said at the same time.\n\nWe were lying naked on two sleeping bags in Lemmon's Park.\n\n\"Oh, look, Patrick, a shooting star!\"\n\n\"Who cares about a shooting star? There's a frickin' comet up there.\"\n\n\"But it's a shooting star. You have to make a wish.\"\n\n\"Oh, no. I'm not making any wishes.\"\n\n\"Why not?\"\n\n\"I already did that once this year, and look what happened.\"\n\n\"What?\"\n\nI ticked the reasons off on my fingers in the darkness.\n\n\"I almost got thrown out of school. My face is scarred for life. I almost got arrested. I almost turned back into an asshole.\"\n\n\"You threw a no-hitter and a perfect game,\" she countered. \"And you managed to wiggle your way into UVA. I still haven't figured that one out.\"\n\n\"Hey, you think after Tommy posted that video of my little speech on YouTube that they were going to turn me away, even with a 2.7434 average? I did get a 1970 on my SAT, you know.\"\n\n\"Yeah, no fooling,\" she laughed. \"Anyway, your brother is happily dating your ex-girlfriend, your sister is happily dating the valedictorian, your little sister is happily dating your catcher, and you got to have the two hottest girls in the senior class.\"\n\n\"Well, when you put it that way...\"\n\nI did have a wish, though, come to think of it. I was really hoping that this wouldn't be like one of those movies, where a guy's guardian angel, or the Ghost of Christmas Yet to Come, shows the guy what his future would be like if he doesn't change, and then returns him to where he started. Because I really didn't want to go back.\n\nI didn't think it would happen, not now anyway. The time to return me would have been after the assembly, or after the church ceremony. And that had been two months ago. On the whole, I found that I didn't mind losing the three years between my freshman and senior years of high school. I didn't think I could do any better than I had done now. And I knew for damn sure that Tommy Narburg couldn't have done any better.\n\n\"Why so quiet?\" she asked.\n\n\"Sorry,\" I smiled in the darkness. \"Just thinking. So what did you wish for?\"\n\n\"I can't tell you. It's bad luck.\"\n\n\"So how will I know if it comes true?\"\n\nI felt a soft hand bump my thigh and then wrap itself around my cock.\n\n\"Ooh, look,\" she said as she felt it grow and stiffen. \"It's already coming true.\"\n\n\"You didn't need a star for that. I'm gonna make that wish come true for the rest of your life.\"\n\nShe moved up to straddle me.\n\n\"You know, I'm naked and wet. You're naked and hard. What do you say we just skip the foreplay and get down to the real play?\"\n\nShe held me in place and sank down on top of me, making both of us groan with pleasure. She was tight, and wonderful, and perfect. Ten years from now, when we had a couple of little Rowe-Sterlings running around underfoot instead of one big one shining overhead, she probably wouldn't be quite as tight. But she would still be wonderful. She would still be perfect. She would still be my Cammie.\n\nTHE END (thanks for reading) "
    ],
    "authorname": "MarshAlien",
    "tags": [
        "drama"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/a-stitch-in-time-pt-07"
}