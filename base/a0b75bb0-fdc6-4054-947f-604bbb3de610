{
    "title": "Spanking Kenny's Wife Ch. 04",
    "pages": [
        "Continued from part 3.....\n\nAuthors Note: I want to thank my new friend, Barb, for her excellent suggestions and help with grammar and punctuation. She's made this a better chapter.\n\n*\n\nUp to now, I had spent the entire evening creating an atmosphere of suspense, excitement, mystery and sexual tension for Jan. I wanted her to know what was going to happen, but have enough surprises in store for her so that she could never tell what was going to happen next. \n\nDuring our time in her bedroom, I was methodical in trying to embarrass her, but in a way that gave her an excuse \u2013 a way to say she wasn't in control and therefore, couldn't change the events that occurred. I played up to her fantasy of being exposed and touched. I did a lot of things to expose her and to touch her in a way that was completely new, and it excited her so much to do these things with the full knowledge and permission of her husband. \n\nWhen we moved downstairs where Kenny was waiting for us, I continued the same approach. Slowly building the tension, getting closer and closer to the point where she knew things were going to happen. I enjoyed building her anticipation of the inevitable that was to come. My goal was to raise her sexual arousal and get her to say and do things she wouldn't normally say. And if I don't mind saying so myself, I had brought her to the edge of her level of comfort and held her there all night. \n\nIt was time, though. All the preliminaries had been completed, she had been prepared and dressed. Her frame of mind was where it needed to be and she was ready \u2013 ready for the real thing. I still wasn't sure if it was the spanking she was interested in, or just the sexually charged situation the spanking would create. It didn't matter, we were here and it was time for Jan to be spanked. \n\nEverything we talked about was about to start. Even though I had tried to prepare her for what was to follow, I was sure that the events of the next hour were going to hold a plethora of feelings for her. The excitement, the embarrassment, the humiliation, the things I was going to make her say and the things I was going to do, up to now, had been a fantasy. This was going to be real. She was going to lay over my lap and I was going to touch her cute little ass just the way she wanted me to. She had already cum twice in the last 30 minutes, and unless I was wrong, she would cum several more times before I left. All of this would happen with her husband watching.\n\nI sat on the spanking seat and looked up at her saying \"Get down on your knees and lay across my lap.\" She moved as I instructed and I adjusted her knees apart so that I could have complete access to her panty covered bottom and the treasure between her legs. I propped her up a bit, telling her I needed to be able to have access to her nipples. I told Kenny he could either stay sitting in the chair and stroke his cock, or move to a better position, but he needed to move now if he was going to move. As I was talking to him, I dropped my right hand to her bottom and began to move it under her short skirt and then to the silky treasure between her legs.\n\nKenny stood and shoved his pants to the floor and stepped out of them leaving him naked from the waist down, dressed only in a t-shirt and sox. His cock, small and hard, pointed straight out as he walked toward us and lay on the carpet right next to her. From his vantage point he would have an excellent view of anything I did to her and if he decided to take pictures, he would be close enough to capture the intimate details and the intricate folds of her beautiful pussy.\n\n\"I hope you didn't think I was going to let you remain dressed during all of this,\" I said to Jan, \"The clothes were just for fun. Before we are done you will be naked, you can count on that. For now, maybe we'll just pull your skirt up.\" I let the anticipation sink in as I neatly lifted and folded her skirt up onto her back. She looked so cute lying there with her little skirt pulled all the way up and her silky pantied ass fully on display for us. I started out by lightly rubbing my hand slowly over her ass cheeks \u2013 ever so softly, barely touching her until I finally dipped my hand between her legs. The crotch of her panties was wet, almost drenched. Oh, how I love to touch a woman that has wet panties. The wetness gives a certain texture to the material there and tells you that she's soft and moist, ready to be penetrated. \n\nMy fingers worked up and down her crack, pressing against the outside of her panties and feeling her from her anus down to her vagina. I lingered back there, letting Kenny watch as I lightly stroked her up and down, making a crease in her panties as my fingers repeatedly ran up and down her crack. I pressed my finger against her anus. When I touched it, she tightened up. I knew this was a reflex action but I needed her to know now that her sacred little bottom was going to be invaded. I knew she was afraid of being hurt there, and I wanted to use the anticipation of her anal invasion to create a heightened apprehension so I just let my finger press against her backdoor and tapped it lightly as I said \"Don't tighten your cute ass like that again, my sweet. I will be gentle with you as long as you don't deny me. If you try to resist, I can make it quite uncomfortable. When I touch you there, relax your butt hole and push back against my finger. Let's try it again.\" \n\nI pressed my finger against her hole again and her resistance gave way. Her ass opened up to me and I lightly pressed into her to test her resolve to follow my instructions. I was delighted with her response and wanted to acknowledge her trust so I didn't push into her very far at all, instead, I just applied light steady pressure to her entry. The longer I left my finger there, the more she relaxed she became. \"Do you let your husband fuck you there?\" I asked, wiggling my finger a bit. I waited at least 10 seconds for her answer and when she didn't say anything, I slapped her ass hard. She jumped when I smacked her and I held her down over my lap as she tried to move. I hadn't intended to slap her butt that hard. I knew I couldn't spank her for the next hour with the same force, she simply couldn't endure that. \"Jan, let that be a reminder for you,\" I said, soothing her stinging bottom with the hand which just spanked her, \"unless you want to be spanked like that all night, I suggest you answer more quickly next time.\" \n\n\"Let's try that again.\" I said as my finger moved back to her anus and applied pressure to it. Again I felt her relax and open so I kept it there and didn't try to push into her. I repeatedly tapped lightly on her hole and asked \"Now tell me, do you let your husband fuck you there?\" This time, her answer came quickly. \"No, I've never had any thing in there.\"\n\n\"Oh,\" I replied, \"that's just shameful. Why not?\"\n\n\"I had a girl friend in college who let her boyfriend do that. She bled for a week and she was in a lot of pain. It really scared her.\"\n\n\"Well,\" I said, \"I guess I'll just have to show you guys the right way to treat a lady's ass. If you use enough lube and go slow, you'll really enjoy it. We'll try some fingers later to see how that feels. I'll be very gentle and you'll see how nice it is. But to deny your husband something this cute and this beautiful, that's just wrong.\"\n\nI lifted her chest up a little so I could slip my hand to her chest easily. I felt I hadn't paid enough attention to her petite little breasts and I wanted rectify that. I cupped one of her petite breasts in my hand and pinched the tiny nipple lightly. I began stroking her pantied covered ass again, caressing the silky cheeks of her bottom as I spoke to her saying \"I think we'll begin now. I want you to lie still while you get the first of your swats. After these are over, we'll help you get a little more undressed and then we'll have some more swats.\" \n\nI left my hand where it was, holding her tit and lightly pinching and pulling her nipple. As a signal to Kenny that I was starting, I raised my right hand \u2013 held it there and then began her spanking. The first swat fell on her right butt cheek. It sounded like she got a good swat, but, I could tell by the absence of movement under me that it hadn't hurt her at all. My finger returned to the furrow between her legs and I rubbed her, trying to judge the wetness inside her panties. With her husband watching, I slipped my fingers under the crotch of her panties and rubbed her labia, making sure Kenny saw where I was touching. Bent over like she was, I could smell the unmistakable aroma of her pussy filling my nostrils and not able to resist it any longer, I deliberately slipped two fingers into her vagina and didn't stop until they were all the way in. I moved my fingers around inside her, wanting her to feel how much access I had to the inner reaches of her vagina. Pushing deeper, I briefly touched her cervix and she let out a moan. \n\nAfter pushing into her as deeply as I dared, I removed my hand from inside her panties and gave her another swat on the other cheek. As I did, I noticed a glob of thick looking girl juice on my finger and slipped it into my mouth, I made a sucking sound to intentionally bring focus to the fact that I was licking the fingers that had touched inside her body \u2013 inside her soul and inside her sex. Looking down at Kenny lying beside her, I made an exaggerated face saying \"She's finger licking good, my friend. One of us is going to need to lick her pussy tonight. We can't let that go to waste \u2013 that's one tasty pussy.\"\n\n\"Jan,\" I said, \"Turn your head toward your husband so you can see what this is doing to him.\" She turned to look at Kenny as he laid all the way back and held his cock out for her to see and stopping his stroke for a few seconds. He squeezed his cock and a dribble of precum rose to the top and rolled down onto his fingers. While she watched him, I gave her ten more swats, alternating cheeks each time as I increased the pinching pressure on her nipples. By the time I reached the tenth, I finally gave her one last pinch, this time of considerable force. None of the swats were hard enough to cause her any real pain, but, when I stopped, I noticed her legs were shaking a tiny bit. Thinking this might be hurting her more than I thought it was, I decided to momentarily suspend her swats and give her some pleasure. I slipped my hand down inside the back of her panties toward her vagina. \n\nKnowing the workout her clit received in the bedroom and what I had planned for her yet this evening, I knew I couldn't keep manhandling the tiny bud over and over. Instead, I slipped my thumb into her pussy, searching the anterior wall for her g-spot. After a few seconds of searching, her moaning told me I had found it. I pressed against the pea sized gland and gently rubbed it. She was able to stand only a minute of this before she started to wiggle her ass as if to give me more access. \n\nShe built up to it quickly. Her breathing quickened and she started moaning \"Oh, Oh, Oh, Oh\". The shaking of her legs became worse and her butt was moving in time with my thumb pressure inside her. When her orgasm took hold of her, her midsection went completely rigid on me and I felt her pussy clamp down on my thumb. She held her breath for an instant and then went limp, resting her body on my lap. I withdrew my thumb and started running small circles around her inner lips, but still not touching her little clit. I looked at Kenny to see him raise his eyebrows and smile. \n\nI had the sensation that my hand was completely soaked. It didn't feel like the normal female lubricating secretions, but, instead it felt like my hand was holding back a flood of hot warm liquid. As I moved my hand around inside her panties, there was no mistaking it. She had gushed on me. Keeping my fingers together, I carefully pulled my hand out of her panties and looked at it. Contained in the palm of my hand was a small pool of sinuous clear looking fluid. Fuck, she actually ejaculated on me. If there had been any contact at all with my own cock at this exact instant, I would have cum, myself. I don't know who was more turned on, me, Kenny, or her, but, I had to make a big deal of this unexpected turn of events.\n\n\"Jan, please stand up.\" I requested. \n\nSlowly, she rose up off of me to stand next to Kenny, who was still lying on the floor stroking his cock. I held my hand out for to her to see saying \"I know I don't need to ask you if you had a good cum. Does this (pushing my hand out toward her) happen a lot?\" \n\nI looked up into her eyes to get her answer and immediately saw tears starting to swell. At that instant, my heart melted as I realized she was more embarrassed than she had been all evening. This really hit her at the core of her being. A tear fell down her cheek on one side, and then the other. She breathed in a choppy breath, just like a small child who was trying to talk while crying. \"Once,\" she said. \"It happened once before.\"\n\n\"I'm sorry if I spanked you too hard\" I said. Tears were streaming down her face now and I started to apologize again, but, she stopped me. In between the sniffling and the crying she said \"No, no, it's okay, you didn't hurt me. This is just so embarrassing. No one has ever seen me do this. It's something you did to me... in there. I couldn't control myself. All of a sudden there was this huge feeling like I had to pee, and then after that, it felt like something exploded in me. I really can't explain it, but, I thought I peed on you.\" She started to laugh. \"Remember,\" she said, \"I told you I can cry really easily.\"\n\nI looked at my hand, still holding the small pool of wet cum fluid, then back at her. \"Do you know what they call this?\" I asked. She nodded her head, looked at my hand and replied \"Female Ejaculation.\"\n\n\"Take your shirt off, please\" I asked. \"It's not fair for you to have this much fun alone.\" She pulled the shirt off and I was amazed at the flush across her chest between her jiggling tiny tits. I very deliberately wiped her juice all over one tit and then the other, coating both of them with the wetness. I looked at Kenny and said \"I'm afraid her tits need cleaning, licking and sucking. If you don't, I will.\"\n\nI'm not sure if he thought I was kidding or if I was serious. He stopped his stroking, but, he didn't move to get up. So, I turned to her and put both my hands around one of the darling little a-cups and started to gently squeeze, suck and lick. Out of the corner of my eye, I saw him get up and make his way over to us. I stopped and moved over to make room for him. He moved up next to me and started to do exactly what I was doing, but to her other tit. I paused for a moment and looked up at Jan, who was standing there with her eyes closed and her head thrown back. When she noticed I had stopped my sucking, she opened her eyes and looked back at me. \"Jan, you should repay his kindness.\" I told her.\n\nShe reached down and took hold of her husband's cock as he sucked her nipple and licked all over her tit. When she grabbed him, he never stopped, but let out a long groan in response to her handling of his cock. Whatever shame or embarrassment Kenny had over the small stature of his manhood had melted away. Even thought it was small, it was very hard, and as Jan stroked and squeezed him, he seemed to enjoy it tremendously. He was devouring the juice covered breasts like a madman and she was getting into it, too. \n\nJust then, it hit me that this would be a good time to have her touch my cock. \"Hey,\" I said, \"this isn't fair at all. If you're going to reward him, shouldn't you do the same for me?\" Without receiving an answer, I undid my jeans and pulled my cock out of my underwear. Once my cock was freed Jan's hand immediately took hold of it and began to stroke me, too. I put my hands back up to her breast began to tweak her nipple. Thinking back on some of the things she told me, I knew she had to be enjoying this attention. I decided I needed to find out for sure, and there was only one way to do that. I dropped one of my hands to feel her between the legs on the outside of her panties. She moved her legs further apart to allow my touch. Her panties were understandably soaked now. They were saturated from the front all the way to the back. I didn't pull her panties down yet because I didn't want Kenny to see her shaved pussy, so instead I pressed my finger into her slit and rubbed her up and down. \n\nJan was doing the best she could to jack both of us at the same time. Kenny was getting the worst of it, though, since Jan is right handed and had her right hand on my cock. Seeing his dilemma, I simply backed away, pulling my cock from her grasp and told her \"Concentrate on him, but, be careful not to make him cum in case you want to ride that pony tonight.\"\n\nI pulled my pants up, sat down and watched while she tormented him by stroking him fast, then slow and then fast again. One thing became clear, she knew exactly how to handle his cock. \n\nI didn't let this go on too long and finally put an end to it telling her \"Go up and get the Astroglide lube we left in your bedroom. Also, bring me a pair of silky thong panties and a plastic baggie. Hurry back so we can get on with this. You've had much too long of a rest.\"\n\nJan gave me a puzzled look and turned to go back up the stairs to her bedroom. I looked at Kenny saying \"Listen, during the next session, she's going to be completely stripped and I'm going to make her say some things that might shock you. These are things she wants you to hear but isn't brave enough to say on her own, so, make sure you pay attention. We'll be done in about 30 minutes, so pace yourself, dude.\"\n\nJan came down the stairs with the Astroglide lube. Dangling from her hand I could also see she was bringing me a pair of pink thong panties. Little did she know what I had planned for them. She and Kenny were going to get a lesson in panty stuffing. My cock gave a twitch as I thought about stuffing that tiny garment into her pussy, leaving just an inch or two hanging out of her pussy while she was spanked. Then I had a better idea, deciding to have Kenny help me put them into her. Having us both touch her at the same time would bring her to a fever pitch and treat her to the experience of having her both of us touching her most private parts at the same time. \n\nOnce she returned, I took the lube and the thong from her. I sat them down on the spanking seat, took her by the hand and led her back to where Kenny was sitting. I positioned her right in front of Kenny, maybe no more than 2 feet away while I stood behind her. As before, I told her to repeat after me.\n\n\"Kenny, sometimes I want to act very nasty. Actually, it's more than that. Sometimes I want to act like a slut, but, I'm afraid of what you might think about me if I do. I don't want to get into any real trouble and I don't want to be attacked or gang banged, or anything like that. I've never told you this, but, I've always fantasized about being naked in front of people and letting them see my pussy. To show you how serious I am, I shaved my pussy so anyone looking at it would be able to see everything \u2013 all of me down there.\"\n\nI told Jan to remove the skirt and lower her panties to her knees. Her hands went to the sides of the skirt to unwrap it. I took the skirt from her and told her to continue. She took a breath, hooked her fingers into the waist band of the panties and slipped them down. The look on Kenny's face was priceless. Having seen her shaved pussy myself, I knew exactly what he was looking at. My cock was throbbing and it took all my will power to keep from taking it, or her, into my own hands. \n\nWithout my prompting, she asked \"Well, what do you think?\"\n\nStill standing behind her, I held my finger up to my lips as if to shush him.\n\n\"Jan,\" I said, \"take your panties all the way off and hand them to me. Then, spread your legs and let your husband examine your new look.\"",
        "She did as I asked, slipping her panties down and off. As she stepped out of them and handed them to me. The crotch panel was soaking wet. Now, I'm not talking moist here, I mean it was literally soaked. What a prize for me to have and the fact that they both knew I had these would add to her excitement and fantasy. For me, it would be the gift that keeps on giving. \n\nKenny sat up and reached for her pussy. I stepped to the side to watch, crossing my arms across my chest in a satisfied stance. I had created a very erotic situation for both of them. His fingers felt her smooth lips and I could tell from her sharp intake of breath that he was headed to the source of her wetness. As Kenny fingered her pussy, the wet sounds of his fingering filled the silence in the room giving obvious proof that she was turned on to the max. She spread her legs even wider to accept his fingers. She looked at me and I smiled at her, giving her a nod to indicate it was okay to do what she was doing.\n\nBeing the nice guy I am, I let him play there for a minute before I threw her a curve ball. I had been waiting for an opportunity to open her up and this was it. I asked Kenny to stand up and trade places with Jan. As he stood, I told her to sit and lean all the way back in the big chair. \"Pull your knees up,\" I gestured to the cushion of the chair, \"Put your heels up here on the cushion and open your knees up as far as you can.\" \n\nWhen her legs opened, her juicy pussy came into view and gave us our first glance at her little brown hole. Her legs were open almost like she was in the stirrups for her pap test. The sight of those perfectly hairless lips, saturated with her glistening juice simply took my breath away. I wasted no time in sitting down in front of her while Kenny moved closer to see what I was going to do. I knew I had to do this right if I was going to get the desired result.\n\nI laid my palms on either side of her mound with my thumbs between her inner and outer lips and slowly begin to spread her open. My thumbs kept slipping due to the amount of lubrication she had leaked, so I had to hook my thumbs inside her pussy hole and stretch her open like that. When I did, there was a huge inrush of air into her pussy and she opened up completely. We looked down into her, able to see every detail. With her lips held open and my thumbs holding her vagina open, it was all laid out in front of us. \n\n\"Oh, Fucking-A right,\" Kenny said, \"I can see all the way inside her.\" Looking up at Jan, it was easy to see that she was uncomfortable about being seen like this. She had turned her head away from us and was covering her face with her hands. I pulled my hands further apart to open her up even more. \"Kenny,\" I asked, \"Do you have a flashlight handy?\" Without answering me, he ran off into the kitchen and returned immediately with one. He turned it on pointed it into her open pussy. \"See that circle thing down there with the dimple in the middle \u2013 with the red around it?\" I asked. He nodded, trying to adjust the flashlight and his angle to get the best view. \"That's her cervix.\" I said. \n\nJan was just shaking her head now and she was red from her chest to her forehead. Seeing an opportunity to drive her embarrassment a little deeper I added \"I bet she would really get off of letting someone else see up inside her like this. You need to go out to the internet and see where you can pick up a speculum, dude.\"\n\n\"Well, I think it's time to end our anatomy class. But, before I move you, There's something I want you to experience.\" I released her vagina and let the lips go back together. As soon as they closed, I lightly spanked her pussy. Technically, it was more of a slap, but, we can call it a spanking for now. My hand was fully open and I wasn't trying to do anything other than redden her up a bit and create some blood flow to her mound. I repeated it and looked up to see that her eyes were closed and her mouth was open. \"Does that feel good?\" I asked.\n\n\"Oh yeah,\" she answered, \"Just not too hard, okay? I like the way it feels on my lips. It stings a little and it's warm, but, it's nice, too.\" I slapped her pussy 10 more times while watching her reaction. I could see that this was something she might like and suggested to Kenny that this was something they needed to look into. I gave her one more slap, this time a little harder and then stood up. \n\n\"Time to resume your spanking, so, come back over here with me.\" I was careful to take her by the hand, just as I had done all night, in order to reinforce the feeling that I was in control and that she was being led and protected. I wanted her to continue to feel that I was looking out for her best interests. \n\nI sat down and positioned her naked body over me. I tapped the insides of her thighs to get her to spread her legs further and when I wasn't satisfied that she was spread open enough, I tapped them again. Looking at her backside, I could see her vagina was totally exposed, her lips completely visible and there was no question about the fact that she was in a very compromising position. I slipped a finger down to her pussy and it slipped into her easily. She was sopping wet with excitement.\n\nIt was obvious that her bottom was still a little red from the previous swats, but, that wasn't a concern to me. \"Kenny,\" I asked, \"please come and help me for a second.\" I handed the pink thong to him and told him my intentions saying \"My friend, you're wife has the cutest pussy I think I've ever seen. And, although we agreed that I could keep the panties she had on, I've decided that I've earned another 'Thank You' gift.\" Kenny obviously had no clue where I was going with this and I didn't think that Jan knew, either.\n\n\"Kenny,\" I continued, \"I'm going to teach you about something they call 'Panty Stuffing'. That's where a pair of panties are pushed up inside a woman's vagina to soak up the wetness and then taken out later to be sucked or sniffed. She's going to look so cute lying across my lap, with her legs spread and those delicate pink panties hanging out between her lips. Given the way she is lubricating, they will be soaked pretty quickly. I'll take them out in a while and put them in the plastic baggie your wife so graciously brought to me. So, not only will I have the panties I personally dressed her in this evening, but, I'll have these, too. When we're done here tonight, and I leave, you'll know that I'm taking with me something that was actually inside your wife's pussy. That, along with the pictures you're going to give me, should give the two of you something to start talking and fantasizing about.\"\n\nI reached down and placed my hands on Jan's tight little ass cheeks and spread them apart, exposing her backdoor and her vagina. I held her cheeks open as wide as I could and looked up at Kenny. \"There you go.... just use your finger, push a little into her at a time. Don't scratch or hurt her. Use one hand to open her pussy lips and then your finger to push them in. Leave about 2 or 3 inches hanging out of her.\"\n\nKenny knelt down next to me and reached up between her legs and opened her lips. His first touch on her and the wet sound of her vagina being opened made her shudder. She took a sharp intake of breath and I nodded for him to continue. One thing I'll say for Kenny, he's a fast learner and within just a few seconds he already had half the thong pushed up into her pussy. I leaned down toward Jan and spoke to her softly, but intentionally loud enough for Kenny to hear me say \"Jan, as wet as you are, I know you're really getting off on what we're doing here tonight. Did you ever think you would be laying naked across another man's lap while he held you open so your husband could slip your panties into your pussy? You said you wanted to act nasty and slutty, well, would you call this nasty and slutty?\"\n\nHer face turned toward me and I could see that her eyes were closed and she moaned her answer saying \"Yes, this is nasty and slutty. This is the kind of thing I have fantasized about.\"\n\n\"Tell us Jan,\" I asked, \"What kind of other things have you fantasized about? I want you to be very specific so Kenny knows how to please you after tonight.\"\n\nKenny was just finishing his panty stuffing duties as she started to speak. I looked down to inspect his work, and finding it satisfactorily done, I let go of her butt cheeks and motioned for him to stay where he was. I laid my hand on her back and rubbed her tenderly saying \"Go ahead and tell us. We're ready to listen. Just be honest with your feelings and confess your fantasies to your husband.\"\n\nShe started hesitantly and I thought she might chicken out, but, I she understood that this was her chance to have full forgiveness for anything she might say. Then, deciding to take that chance, she began to tell him. \"I've always gotten very turned on thinking about being seen while I was naked or in my underwear. Sometimes, I fantasize about him bringing someone home after work and surprising me in the kitchen naked, like I just got out of the shower or something, or maybe him bringing someone upstairs and I would walk out of the bathroom at the exact time they came in. Maybe we could do some things that seemed innocent and caught me by surprise so it could be easily explained and excused. I wouldn't mind going braless and letting people look down my top, or wearing a skirt without panties as long as he was with me. Maybe we could make a rule that when ever you came over I had to strip for you and let you inspect me to make sure I shaved good enough. Sometimes, I think about being naked in front of a group of people, so maybe we could go to a nude beach where I can lay out with my legs spread, or maybe one of those nude cruises. We can even go to a bar and I would wear a short skirt and be told to flash someone. I also think about being touched and fondled while I'm exposed, maybe even by someone else. I don't want to get into any trouble, Kenny, or get arrested or cause any thing to happen with my family, but, I want to show myself and I want you to be okay with it and help me do it. I swear I would strip for you anytime you tell me to or I would let someone else undress me as long as you were there to protect me and I wouldn't get into trouble. I don't know what more I can say, I fantasize about being an exhibitionist and sometimes being touched, and there's one more thing.......\"\n\nI looked at Kenny, who was slowly stroking his cock again, and he looked back at me. I raised my eyebrows, patted her back and told her to go ahead and continue.\n\n\"Please don't get mad at me for saying this, Kenny.\" I looked at him to see that he had stopped stroking his cock. Looking back at her, I noticed that tears were now starting to form in her eyes. I resumed my light caresses on her back as a reassuring gesture to tell her it was safe to say anything she wanted to say.\n\n\"I really love you, Kenny. I am so happy being married to you and I would never cheat on you. This is hard to say so please don't take this personally. I, uh, would really like to feel a large cock in me. Not that I want to do that all the time, but, I want to experience it at least once, to get that feeling of being filled up, I mean. I can't explain it and it doesn't have anything to do with me not being sexually satisfied, because I am. It's just a fantasy I've had for a long, long time \u2013 even before we met, and I can't get it out of my mind. I just want to see what it feels like to have my pussy filled. If there was some way you could ever allow that, it would mean so much to me.\" \n\nShe started to cry, perhaps from the embarrassment of her words, or the shame of what they meant. She was trying to catch her breath when Kenny got up on his knees and moved up to her face. Still laying across my lap, he turned her head so she was looking at him and he kissed her. First, one small peck on her cheek, and then a full wet lover's kiss placed squarely on her lips. It was incredibly moving to watch as he told her it was alright saying \"Honey, I heard everything you said and I'm not mad at you. I'll help you with your fantasies and we'll find some ways to expose you as long as it's safe to do it. Who knows, maybe we'll just have to do what we're doing tonight on a regular basis. And I completely understand why any woman would want to try a big cock and I'm not mad about that, either. I think that might be normal for a woman and it doesn't threaten me or make me feel inadequate. I don't know how we'll do it, but, we'll find a way. I love you and I want you to be happy. I'm glad you told me these things instead of keeping them inside or trying them on your own. I love you. \n\nShe pulled up off my lap and they embraced. She was kissing him passionately in between sobs, covering his face with her tears of joy. I was proud of Kenny and the way he stepped up to her confession. After a minute more of their kissing, I cleared my throat, as if to excuse myself, saying \"Well, we better get on with it so I can leave you guys alone to talk this all out, uh, that is, unless you need me to help in that department, too. And by the way, any time you get the itch to do some showing off, just call me, I would be more than happy to be your audience.\"\n\nShe laughed and after kissing him one more time, laid herself back over my lap and reached out to him with her hand. It was so cute, the way they were holding hands, as if he was going to give her strength for her next set of swats. I didn't want to ruin the mood so I told him he could stay next to her and hold her hand while I resumed her spanking. He moved up close and knelt directly next to her. \n\n\"Okay,\" she said, \"I'm ready\".\n\nI didn't waste any time and starting her swats straight away. First on one cheek, and then the other, my hand came down on that heavenly bottom. She wiggled her legs further apart and I felt her settle into my lap and rest all her weight on me. She wasn't trying to prop herself up at all, and it was clear that she was beginning to accept her submission. After about 10 swats, I put my hand between her legs and slowly pulled the pink thong from her vagina. I couldn't have wished for better results from our little panty stuffing lesson. Her panties were soaked and there were spots that had thick, mucousy pussy juice on the garment. I held them to my nose to inhale her aroma and then placed them in the baggie, along with the other ones and set them aside. \n\nI told Kenny to move in front of her so she could suck him while we continued her spanking. As he did, I leaned down and told her to be careful not to bite him while she was being spanked. When he was close enough, I told her to begin sucking his cock. Up until that time, I've never seen a girl suck a cock with so much conviction and excitement. As my fingers stroked her lips, occasionally dipping my finger into her pussy, her cock sucking energy increased and she began to moan.\n\n\"Go ahead little nasty girl,\" I told her, \"suck his cock while I play with your pussy. Show him how nasty you can be. Show him how well you would suck his cock if you were naked and another man was touching you like this. I can't believe how wet you are. Tell us, Jan, would you like to suck Kenny's cock while someone fondled you like I am?\"\n\n\"Hmm, yes.\" She gasped.\n\n\"And would you suck someone else's cock while Kenny fondled you?\" I asked.\n\nShe moaned another time and answered \"I would do anything he told me to.\"\n\n\"Anything?\" I asked, \"Do you really mean that? You would do anything?\"\n\n\"Hmm, yes\" she moaned.\n\nI wasn't surprised at her answer, but, I pressed on with my questions asking \"Does that mean you would strip, show your pussy wide open, give someone a blow job or even let someone fuck you if he told you to?\"\n\n\"Oh, yes.\" She said, \"If he told me to I would.\"\n\n\"Well, Kenny,\" I said, \"There you have it. Your wife is as cute as a beauty queen, has a killer body with a shaved pussy, and would strip, fuck or suck at your command. All you have to do is help her and keep her safe. Damn, seems like a fair trade to me. What do you think, my friend?\"\n\n\"I just have two things to say\" Kenny said, \"First, where do I sign, and, second, I love her too much to have her really treated like a slut, but, I'm sure there's some things we can do. She's a remarkable woman, 'eh?\" I had to agree with him.\n\nI removed my hand from her pussy and told her to reach under and touch herself. As she did, she let his cock slip from her mouth for an instant and I saw how engorged the head of his cock was. What I wouldn't give to change places with Kenny right about now. I was definitely regretting the promise I made not to intentionally insert anything into any of Jan's openings. This was getting to be the mother of all my mistakes and I made a mental note not to make that promise again.\n\nWhen her hand was nestled safely inside the tender folds of her pussy, she returned to her cocksucking. Kenny's moans confirmed the fact that she was gobbling his cock down, much like she must have done after I met with her the first time. Looking down at her buns, I noticed that her bottom was much redder than the light pinkness from the first two rounds of swats, but, that didn't persuade me to stop. I began giving her more swats, alternating her tender ass cheeks each time. Her fingers never stopped diddling her pussy and she continued working on the cock in her mouth. At the fifth swat, though, she pulled off his cock, and pulled slightly away from my hand. She hung her head down, her face contorted and her eyes squinted, I knew she was feeling the sting of the swats. She had endured about 25 swats up to now, and as I paused to take stock of the situation, I laid my hand on her ass and felt the heat from her red cheeks. I must have been spanking her harder than I thought. I knew I had to console her and show her some tenderness or she would always associate this kind of erotic activity with pain, and I didn't want that.\n\nI stood her up and was shocked to see that she was tearing up again and about to start to cry. She was doing a good job of trying to hold it back, but, I knew it was time for me to back off on the swats and give her some tenderness. I felt like shit. Fuck, how could I have let this happen?\n\nI pulled her a step or two away from Kenny and put my arms around her. She laid her head on my chest and looked towards her husband. I held her loosely, stroking her hair and telling her \"It's okay, go ahead. I know it hurts. The worst is over now. You've been a good girl.\"\n\nI motioned for Kenny to give her some tissues, and as he approached her, she took them from him, blew her nose, wiped her eyes and then rested her head back on my chest. As she started to calm down, I saw an opportunity to do something nice for her and made the decision to just go ahead and do it. Still cradled in my arms, I lowered my hand to her pussy.\n\n\"Jan, spread your legs for me and look at your husband. You've been so good and brave tonight, I think you deserve to cum again. I want you to look right at him while you open your pussy to my fingers and let him watch me make you cum. This is your wish, Jan. Show him how submissive you can be.\"\n\nMy fingers began to stroke her outer lips up and down, slowly at first, and then I moved to the inner lips and circled the entrance to her vagina several times. I dipped my finger into her pussy, being sure to lightly graze her pee hole as I circled. The long strokes between her clit and her pussy shortly began to do the trick. I felt her legs open more for me and she started to moan and rub herself on my hand. She was indeed looking right at Kenny, who was stroking his cock again.\n\nI whispered into her ear to tell him to get the camera, but she did better that that saying \"Kenny, I want you to take pictures, take as many as you want.\"\n\nI felt her turn her body toward him, exposing her pussy to the camera. I pulled my hand away and let him take a picture. Then he moved in to get a close-up of her pussy. After he took it, I put my fingers back in her pussy and he took another picture. I did the best I could to open up her slippery lips and show off the pink tissue of her vagina while he snapped away with the camera. I slowly moved behind her, keeping my right hand in her pussy and finding her left breast with my other hand. While I masturbated her, I tweaked her nipple and lightly massaged her breast, squeezing it just as she told me she liked it. She opened her legs even more as Kenny took picture after picture. ",
        "Seeing an opportunity to further expose her, I whispered in her ear for her to lift her left knee up. When she did, I dropped my hand from her breast and hooked it behind her knee and pulled it up. This left her standing on one leg, balancing back against me, with the other leg pulled up obscenely exposing her fully open pussy to the camera.... complete with my fingers now gliding in and out of her vagina effortlessly. \n\nKenny took more pictures as I held her leg up and out. Looking down, I knew she was obscenely and utterly exposed, perhaps more than she had ever been. Even at my angle, I could see her clit popping out of her bare lips so I knew he had a very open shot. I pulled my hand away to allow him to take some very extreme close-ups. \n\nHe finally got down on his knees with his face only inches away from her treasure. I thought he was going to start to lick her pussy while I held her open, but, he resumed jacking his cock again. He was staring into her pussy, studying my fingers as I continued to stroke her. Damn if I didn't feel her widen herself even more to let him see as much as possible. \"Can you see inside my pussy?\" She asked. \"I would love for you to show me off like this sometime.\"\n\n\"Oh, Baby, this looks so hot,\" he said, \"your pussy is so wet. This is really turning me on, watching him touch you, seeing his fingers in your pussy, oh, hell yes. I promise we'll do something like this again. I want to watch you cum now.\"\n\nAnd his request was answered. I split my first two fingers apart and began to rub them quickly up and down the sides of her clit, straddling the little button tightly between my fingers. She started to moan and pant, leaning back on me enough for me to know I was supporting all of her weight. \"Oh, yeah, I'm going to cum again,\" she said, \"oh, fuck, oh fuck, oh fuck, ohhhhhhhh, ahhhhhh.\"\n\nShe tensed up, kicking her left leg straight out as I held it up, and came with such force that I almost fell over. She buckled and shook and convulsed almost uncontrollably until finally relaxing back on me. \n\nI told Kenny to get the blanket and lay it out. He moved quickly to do it and in just a few seconds had made a soft place for her to lie down. How nice he was to even include a small couch pillow for her head. I helped her down to the blanket and told her to spread her legs as wide as she could. Seeing her pussy spread open in front of me again made my already hard cock throb inside my jeans.\n\nI immediately reached for the dildo saying \"Jan, I want you to suck this before I fuck you....\" I paused just a few seconds to see her reaction before I added \"with the dildo deep inside your pussy.\" I couldn't tell from the expression on her face if she was relieved, or disappointed that she was going to get the dildo up her pussy and not my cock. \n\nKnowing full well that she knew the dildo represented my own cock, she took it from me and began to suck the phallus. She looked right at me as she slid it into her mouth, sucked around the head and then took as much as she could into her throat. \"Keep sucking it while I get your sweet tender ass lubed up, you nasty girl.\"\n\nI reached for the lube and told her to raise her knees. When she did, I pressed them up further to where her knees were touching her chest and her hips were rocked back to allow access to her anus. I poured the lube on my fingers and applied it directly to her tender backdoor. She let out a gasp as my finger entered her anal passage. I withdrew it, applied some more lube and slowly pushed it in again. I repeated this until she was lubed up enough for my finger to move easily in and out of her. All the while, Jan was sucking the dildo and alternating glances between Kenny and I. \n\nKenny reached for his camera and starting taking pictures again as she sucked the dildo with her legs splayed open and getting her ass fingered. It took all the will power I had to keep from pulling my cock out and sinking it into her sweet, tender ass. \n\nI felt her ass finally relax and accept my finger, even felt it open a little more to accommodate the mini-ass fucking she was getting. \"Give me the dildo now,\" I asked, \"it's time for your pussy to be penetrated.\" As she handed me the dildo, I saw that it was covered liberally with her spit so I moved it right to the opening of her vagina and slipped it in her all the way to the hilt. She let out a gasp that could only mean the dildo was hitting pussy territory that hadn't ever been touched before. Her eyes told the story, telling me this was the deepest she had ever been drilled. \n\nLooking over at Kenny, I pointed to Jan saying \"Her mouth is yours now. Do with it as you please.\"\n\nI began a steady rhythm of finger butt-fucking and dildo pussy fucking, periodically putting upward pressure on the dildo to make it rub on the top inside wall of her vagina trying to get close to her G-spot. Her knees were fully retracted and she looked like a porno star availing her holes for our use.\n\nKenny moved over to the side of her and then bent over her head on his hands and knees thrusting his cock toward her mouth. As she opened to take his cock between her lips, I smiled to myself seeing the transformation Jan was experiencing. It hadn't been but just a few days ago that Jan was the spitting image of modesty and now she was on her back letting me finger fuck her ass, penetrate her pussy with a dildo and suck her husbands cock. It's amazing what a little tenderness and trust will do. \n\nJan had turned her head at an angle to where Kenny was actually fucking her mouth. She was holding her jaw open while he moved his cock in and out between her lips. This wanton display of face fucking caused me to notice that one of her hands was free so I told her she could touch herself if she wanted to. \n\nI totally expected her to eventually climax again, but, I didn't think it would be as quick as it was. Her fingering brought her over the edge within a minute of when she started to touch herself. As her orgasm approached, her ass clench down on my finger and her pussy tried to expel the dildo as it continued to move in and out. Kenny must have sensed that she was becoming wild and pulled out of her mouth just as she went rigid and thrashed her head from side to side. I pulled the dildo out of her pussy, deciding it was better to let her continue with her own fingers. She let out a loud grunt and shot a thin stream of clear liquid up from her pussy. Damn, it was so cool to see her squirt like that right in front of me. Almost as quickly as her cum started, it died off and she laid there trying to catch her breath.\n\nBoth of my arms were wet from her ejaculation, and Kenny's eyes were about as big as silver dollars after what he had seen. I was blown away, too, having never actually seen anything like that right before my own eyes. \n\nKenny and I both sat back, taking in the scene that had just unfolded before our very eyes. His demure wife, now the exhibitionist slut, was lying motionless trying to catch her breath. I knew I had to finish up and let them make love since we were already running late and I didn't want to take up their whole evening. Besides, my cock was straining for some relief and I knew I had those two pairs of panties to take home and covet. Just the thought of sucking the juices out of the little pink thong while I jacked my cock gave me the urge to hurry things along. \n\nI told Kenny to move to her side and pull her knee up while I moved to the other side and did the same. A few seconds later, we each had a knee held up and I began to apply swats to her ass cheeks again. Jan laid completely submissive before me, unable to resist me and unwilling to stop me. Her face winced as I landed each swat, but this time I was careful to make them softer. I never felt her legs jerk or move as I gave her ten more swats on her ass. This was the point when I knew she had given up all control. She was finally experiencing the feeling of total submission and trust. It was time to give Kenny his relief and Jan a very well deserved fucking.\n\n(... to be continued in chapter 5) "
    ],
    "authorname": "Pro_Ball_Player",
    "tags": [
        "pussy",
        "vagina",
        "panties",
        "spanking",
        "masturbate",
        "shaved"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/spanking-kennys-wife-ch-04"
}