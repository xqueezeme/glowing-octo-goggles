{
    "title": "My Little Ventrue Ch. 09",
    "pages": [
        "Author's Note: Second edit pass complete! Check out my bio for details.\n\n~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nJack's eyes went wide. Half of Viktor's head was gone, just gone. The bloody gibs of brain matter and bone turned into tiny fires that faded into ash and embers before they even hit the ground.\n\n\"Shit! Shit shit, what-\"\n\nJulias put a hand against Jack's mouth, and pushed him back against the wall. \"Sniper, down the path.\"\n\nJack reached up and pulled his sire's hand down. \"What about Viktor!? The fuck are we supposed to do now?\"\n\nJust as he was about to start ranting, his jaw dropped yet again when Viktor sat back up, safe out of the line of sight of the alley. Half his head was still missing, but it was rebuilding itself. That dark and thick Kindred blood was seeping into the gory mess and quite literally rebuilding bone, muscle, tendon, teeth, and even his hair. It wasn't like when Julias healed from his burn; this was some freaky mutant insane healing powers shit.\n\nA minute later, Viktor was standing and dusting his shoulders off. His hair was now undone, and the black length reached the middle of his back. \"Vermin. Cowards. If they want to play as rats, then rats they shall have.\" He looked to his childe, grandchile, and gave a small grin. The smirk was gone so fast, Jack wasn't sure he'd seen it.\n\nAnd then, as if thrown into the ocean during a hurricane, Jack had to press a hand to the wall to brace himself against the invisible. Viktor's voice was quiet, but he could feel it resonate through him. There was power there, so much power that it shook the blood in his withered insides. It only got worse when Viktor used a fingernail to slice open his wrist, and forced a large splattering of his blood to land on the pavement.\n\nSqueaks. At first it was a barely audible buzzing sound, like a fly near the ear, but soon the rising tide of squeaks flooded toward them. When Jack looked toward the source, he could not find it. It came from everywhere. In the dark of night, it looked like the pavement had come to life.\n\nHundreds of rats poured over everything. They ran the corners of building and street, flowed up from sewer drains, and down the walls of warehouses, all to sip at Viktor's blood.\n\n\"Go. Swarm and devour my enemies.\"\n\nKing of the rats. The flood of moving fur poured past them all and down the alley. The moving carpet of teeth was met with gunfire, squeaks of death and exploding, furry little bodies, but whoever was shooting did not have nearly enough bullets to stop a torrent of claws. Within a minute, the sounds of gunfire had fallen back.xxwwxJulias went in first, his pistol held in both hands. Viktor had also drawn his pistol, a machine pistol at that, but he held it in one hand. With an almost flamboyant flare, he drew his sword and held at in his right hand at the ready. It was not some antique, but rather something clearly modern, almost more like a very long dagger.\n\nJack found himself suppressing a grin. He was afraid, there was gunfire, and Viktor had lost half his head, but damn if his grandsire wasn't an irrefutable badass. Viktor went in after Julias, and the two went at a full run. Jack came up behind them, and found himself drifting to hide behind Viktor more than Julias. No offense to his sire, but his grandsire was scarier.\n\nInstead of stopping to regroup once a new set of warehouses were reached, they kept running. Fearless. It was strangely exhilarating. At first, he was terrified, and he still was, but there was something to this, hunting things in the dark. Something primal and ancient tugged at Jack's insides, that inner-beast that now lived inside him, and pulled him along like a cat chasing prey. He forgot about Mrs. Pavala, about Mary, about all the stupid shit that didn't matter then. For the moment, he was a predator.\n\nThey soon found themselves in a cross section of road, warehouses, factories, dipping ramps of asphalt that lead into garage doors. The rats were pouring down one of the ramps and under a barely-opened garage door. Then the air was filled with squeaks, hundreds, even thousands of squeaks. Dying squeaks.\n\nViktor held up a hand, and Julias came to a stop with his back against the wall of the opened door. Jack's sire clearly had training; he moved with efficiency and speed with his pistol in both hands. His grandsire on the other hand, walked forward as if immortal. For all Jack knew, he might as well have been. The elder Kindred stepped underneath the garage door, following the rats into the darkness.\n\nJack followed him in, only to have the garage door slam behind him.\n\n~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~\n\n~Julias~\n\nShit.\n\nJulias only had time to take two steps toward the garage door before a pair of hands crashed into him. Everything turned upside down, everything hurt, and suddenly the pavement was zipping by underneath him. He was sent fifty feet before he skidded to a stop, suit torn to bits and his pale skin ripped open all over.\n\nHis skin closed and healed itself within seconds, and he was up on a knee in the same amount of time with his gun drawn. A quick look around showed he was in clearing of street, likely where transport trucks rerouted.\n\n\"God damn Ventrue. Too damn hard to kill with bullets.\"\n\nRebecca. The redheaded bitch was wearing a wearing a black trench coat, and... a nice scarf. Damn Daeva always concerned with looking sexy. The woman had a large rifle with a long barrel in her hands, but she threw it to the ground with a frustrated groan.\n\n\"Good thing Daeva aren't so hard to kill.\" He'd shot thousands of bullets from dozens of different guns. His current pistol had kick, but it was nothing a Kindred couldn't suppress easily, so firing several bullets in rapid succession from the oversized weapon was easy.\n\nHitting the Daeva, on the other hand, would not be so easy. Rebecca moved as a blur, fast enough that before he knew it she had put a warehouse corner between them. He'd clipped her; the splattering bits of dark blood and withering ash proved it. He'd have to hit her in the chest several times just to slow her down long enough to take off her head, though.\n\nWell, at least the place was deserted for a wide radius. No cops.\n\n\"Come out come out wherever you are.\" Julias stood up and started to walk toward where she'd disappeared, pistol at the ready.\n\n\"Are we going to play hide'n'seek?\" the darkness asked.\n\n\"Well, you can hide, but eventually I'll give up and get back to Viktor.\" He poked his head around the corner, just long enough to see what waited for him. Nothing.\n\n\"Well I can't have that.\"\n\n\"No I don't suppose you can. You really think Tony can kill Viktor?\" He really only had one direction to move in: toward the voice. Rebecca was staying ahead of him, ducking around warehouse corners and likely hiding on rooftops to throw her voice.\n\n\"What's a Ventrue without his subjects to fight for him?\"\n\n\"Ah, so that's why you separated me.\" He kept his pistol in both hands, and tracked his gaze with practiced speed.\n\n\"Indeed!\" Always with a flare for the dramatic, the serpent jumped from a rooftop. Jumped was incorrect, she'd actually propelled herself down toward him, and she crashed into him with enough force to dent the wall behind him with his head.\n\nHe was prepared this time, and Ventrue reflexes had his vitae pumping defense through his body upon impact. Physics were physics though, and he slammed into the wall hard enough to almost bounce. He pulled the trigger, several times, but all the bullets went wide. It only got worse when a punch hit his hands hard enough to knock the weapon away.\n\n\"I'm going to -- ah!\" Rebecca jumped back with her hands to her chest.\n\nJulias got back up, knife in hand and Rebecca's blood on its blade for only a moment before the red became ash. He didn't need a gun.\n\n\"You nearly killed by childe. You nearly killed me.\" He gripped the blade tight in his right hand with his left hand open and pointed toward the Daeva. \"You really suck at finishing jobs. You wouldn't last two days in the Invictus.\"\n\n\"Old hags and dusty dicks who couldn't move on from dead dynasties.\" She paced left and right in front of him, a growl on her beautiful lips. Her hands were empty; she'd left the sniper rifle behind.\n\nOr at least, they were empty. It was too damn hard to follow her movements, but she managed to reach into her jacket and pull out a weapon before he could move. He wasn't worried about a pistol, but she wasn't pulling out a pistol. She was pulling out a short-barreled shotgun, perfect for splattering a Kindred into bits.\n\nHe ducked in and tackled her. She was faster and stronger, but he was tougher. Her shot clipped over his shoulder and tore a chunk of his flesh free, enough to disable the arm. For the moment.\n\n\"Get off of me!\" \n\nShe bashed him in the face with the weapon, but he was inside now. His right hand still worked, so he swung the knife for her guts. She raised the gun in a harsh uppercut though, straight up against the hand, blocked his swipe, and drove the butt of the gun into his face. The damn Daeva hit so hard, his knife was knocked up from his hand and away, and his head snapped back almost hard enough to break his bones.\n\nShe pointed the gun at him again, but he reached for it with his good arm while falling back. His torn up arm was taking just seconds to heal, but seconds was a long time when a Daeva was struggling to get a shotgun in your mouth, so he only had the one hand to hold onto the gun while she had a free hand. She used it to punch his chest again, and again, and again, until bone broke inward.\n\nHe didn't let go of the gun. She beat him, tore into him, ripped open his chest, but still he didn't let go. Over the seconds, his arm put itself back together with the crack of undead bone and shifting cartilage. When the arm finally started working again, he ignored the blinding pain -- his inner-beast demanded it -- and raised his free hand to grab her face. He was bigger than her, much bigger, and he put his size to use with his larger grip over her eyes, and his grip squeezing hard enough to crush bone.\n\nHe may not have had the strength of a Daeva, but she didn't have the resilience of a Ventrue. Within seconds, he felt her pale skin start to give way to his fingers, and soon the bone underneath it around her temples and eye sockets began to crack.\n\nShe screamed. Kindred were not immune to pain, and her noises made Julias grimace. Her high-pitched wail turned into a furious banshee cry as she let go of the gun, but put both hands against his assaulting hand, and ripped it off.\n\nIt was his turn to cry out. Her nails dug into his flesh, into the undead insides, and tore it apart at the wrist. Bits of bone flew out, along with a small splatter of his blood before the viscous liquid contained itself to his open wound. His hand was gone though, and the severed limb crumbled into old dust and bone on the pavement. He wasn't Viktor, it would take a lot longer than few seconds to grow an entire hand.\n\nRebecca threw her fist into his face, and this time he flew back only to crash into a nearby warehouse wall. With only five feet between them still, the Daeva pounced at him.\n\nBut he hadn't let go of her shotgun.\n\nWith barely enough sense of mind to pay attention, searing pain tearing through his wrist and through his body, he raised his remaining hand up to the serpent's face. She was mid-air, she couldn't change direction, and the speed of it all meant she crashed into the gun the moment he pulled the trigger.\n\nRebecca still crashed into him, but now it was a mess of limbs, blood and ash. She wasn't trying to grab him, not yet. Maybe he'd killed her? He got his bearings -- she was on top of him -- and he swung the gun into the side of her head. She rolled off of him, onto her knees, and started moving, struggling, groaning.\n\nHe forced himself up and onto his feet, gun still in hand. He tried to not look, but eventually he had to take a glance at the damage Rebecca had done to his other hand. There was no hand, just a stump of wrist where it had been. Pain re-surged anew, and he forced down the need to scream and yell. He had a job to do.\n\nThe Ventrue looked down at Rebecca, who was whimpering with obvious pain and favoring one arm. When she realized he was up, she turned around on her knees to face him, but immediately fell over onto her side. There was a mess of blood, torn clothes, and a blatantly open cavity in her right chest that exposed dark flesh and shrunken organs. Were the shotgun any stronger, it would have put a hole clear through her torso.\n\nHe pointed the shotgun at her head.\n\n\"... m-mercy,\" she said.\n\nHe froze.\n\nShe attacked.\n\nHe only had time to blink before the Daeva forced herself into a tackle against him. She was practically snarling, and despite a giant chunk of her chest missing, she was still using both arms and managed to punch him in the jaw hard enough crack bone again. When his back smashed into the pavement, he let go of the shotgun, and immediately found his only hand pinned underneath one of hers.\n\n\"God damn Julias Mire. Still a sucker for a girl in distress. You know what? Fuck you. I'm not going to kill you because it's my job. Instead, I'm going to kill you just because you're an archaic, sexist dick.\" She put the shotgun against his head.\n\nAnd then she had no arm.\n\nJulias's jaw dropped open as Rebecca's arm dropped to the floor. By the time it reached the ground, the limb fell apart into bone, ember, fading ash, and the shotgun bounced harmlessly across the pavement.\n\nRebecca's eyes opened wide. She tried to get up and turn around, but only two seconds after her arm had simply fallen off, a massive set of claws were sticking out of her chest. Some claws poked through the wound the shotgun had made, while most just bore straight through her back and out through her ribs.\n\n\"I... I....can-\"\n\nAnother set of claws punctured her, next to the others. Rebecca was skewered ten times through, and shaking with disbelief, and pain.\n\nWith taunting slowness, Beatrice exposed her face from behind and over Rebecca's shoulder. Like a dark ghost, the Nosferatu formed into view from the shadow, with obsidian melting off of her to expose her teeth, claws, and snake eyes.\n\n\"Beatrice? Wai-wait, I-\"\n\nJulias's hand was suddenly free, and he had to raise it to his eyes to cover himself from the sudden explosion of Kindred flesh. Beatrice's arms swung to both sides, and the Daeva split apart at the center, down the middle and in both directions. For just a split second, he saw a surprised look on Rebecca's face, before his hand was covering his eyes, and the Daeva's blood and body went everywhere. Within seconds, her flesh withered and decomposed, until moments later it was nothing but bones and dust.\n\nWhen Julias lowered his gaze, it was just soon enough to see Beatrice showered in red, her arms out to either side of her, and large chunks of Rebecca still within her claws. With a slow, almost dramatic flare, the Nosferatu stepped up from her knee, and stood over Julias. He was still just laying there, jaw dropped, and blinking up at the woman.\n\nHoly shit.\n\n\"Fuck that felt good. I really hated that bitch.\" She chuckled, stepped forward, and reached for his hand. \"Need a haaaand... oh god, I didn't even realize.\" She managed a glance at his missing hand, then back to him, before she burst into laughter.\n\n\"... thanks.\" He took her hand, and pulled on it hard in a weak attempt to pull her down to him. But she was Nosferatu, and instead pulled him up to his feet like he weighed nothing.\n\n\"Damn you really owe me one for this.\" She was smiling, big crocodile teeth on either side of her mouth, with her sweet, perfect lips between them. He really wanted to kiss right then. Not now, Julias!\n\n\"I do. Definitely. But I need to get in that building. Jack, Viktor and Tony are in there.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nIf there was one way Jack was going to get himself killed, it'd be making a stupid decision.\n\nThere were dead rats absolutely everywhere. Someone had ripped them up like a tornado of meat and bits of blood, stomped into mulch underneath boots. It was a carpet of whiskers and rat tails midst tiny guts and tufts of fur.\n\n\"My oh my. The great and proud Viktor Honors himself. I'd have thought you would have sent your right hands,\" the black said.\n\nHe froze; he knew that voice. That was Tony.\n\nRows and rows of machines lined the floor of the large warehouse, abandoned and forgotten. Spools of different fabrics were being rolled into machines of turning wheels that were then threading the threads into other machines. All were silent, except for the hidden man's voice bouncing along the walls for a dull echo.\n\nIt was the textile mill.\n\nViktor sneered. \"It wasn't you, serpent, raiding on Xnomina property then?\" The elder Kindred walked forward into the black, unhindered with any sort of hesitation or fear.\n\nWhy weren't they leaving? Tony was a Daeva, and that meant fast, and strong. If Jack turned around to open the door, it meant being exposed. Still, there were two of them, he could open the door while Viktor covered him. Instead, the ancient Ventrue walked between the old machines, sword and gun in each hand, black hair pouring down his back.\n\nIt probably never even dawned on his grandsire to retreat, or that retreat was even an option.\n\n\"I have to admit, I didn't expect one of the triumvirate, especially the Ventrue himself. What good are you without an army to bark orders to?\"\n\nJack tried to follow the voice, but Tony's sly tone was a soft echo and nothing more.\n\n\"You try my patience, Tony. Begone.\"\n\n\"Guess I'll just take the pack-\"\n\n\"You don't have the information drop, plague-ridden vermin. Otherwise you would have left already.\" Viktor took a swipe at the air with his sword.\n\nJack smiled. Damn his grandsire was such a badass.\n\n\"Tch.\" From down the pathway of cold floor and dusty machines, Tony stepped out into the open. He was wearing black jeans and a jacket, so casual Jack almost found it insulting.\n\nBut the grin on his face was enough to make the tiny Ventrue's withered stomach turn on itself, and his inner-beast recoil in fear.\n\n\"Begone.\"\n\n\"Nah,\" the Daeva said with a shrug. \"The fuck do I have to fear from a god damn Ventrue?\"\n\nThe two elder Kindred stood there, looking at each other, neither moving, neither making the first move. At first, Jack noticed the hilarious similarity of it and shogun samurai duels; two people staring at each other, as if their facial expressions alone were a battle. But as time went on, his body slowly froze under the power if it. These were not juveniles throwing around testosterone, but gods, staring down hundreds of years of wisdom and murder.\n\nJack stepped back an inch.\n\n\"Ah, hey, it's they kid. Hey twerp.\" Tony stepped forward toward them.\n\nIt was enough to make Jack step back again, even with a hundred feet between them. Viktor didn't move though, and with a leisurely gesture, angled his sword down between Jack and Tony.\n\n\"You've met my grandchilde then? As I understand it, he's accomplished something you could do not.\"\n\nJack went completely still. What? What had he accomplished? The only link between him and Tony was... Antoinette.\n\n\"... be careful Viktor.\" Tony tightened his hands into fists. On the surface, it was nothing but posturing, but Jack could feel the anger and power flowing out of the Daeva like lava.\n\nViktor glanced over his shoulder at Jack, gave him a knowing smirk, and looked back to Tony. \"He managed to woo the Prince, but a month old and barely a fledgling.\" He took a step toward the Daeva. \"Does it sting, vermin? The great and mighty Tony, forgotten by his sire, only to be replaced by a freshly embraced?\"",
        "Oh. He was bait. That's why Viktor wanted him, not for his 'insight,' but for bait. Well, he had to admit, it was a smart move. A dangerous move, for him. His unlife was on the line now and Viktor was specifically goading the monstrous Daeva into attacking. If he did, Jack would be the first he'd try and kill.\n\nBut Viktor was keeping between the two of them, and the Ventrue seemed more than ready to fight if the situation called for it.\n\n\"You don't know what happened between us, Viktor. You know nothing.\" Tony stepped forward again, but then raised a hand. \"You know, we're both here for information. Think I'll find any nasty Invictus secrets?\"\n\nIt was Viktor's turn to grimace, but he said nothing.\n\n\"I don't give a shit about you, Invictus,\" Tony said. \"I want Antoinette crushed and ruined. So, how about we put this little dilemma on hold?\"\n\n\"So you can get your hands on that information? I have no intention of letting vermin learn of our secrets.\"\n\n\"And if I promise to share?\" Tony said, but he laughed when he said it. \"We could ignore each other, for the time being, and use the information together.\"\n\n\"You do not even know what the information is.\" Viktor dismissed Tony with a wave of his hand. \"Or if it's here already, or coming.\"\n\n\"Mehket can be sneaky, but I saw a car drive away when I got here.\" Tony snickered. \"So it's probably here, somewhere.... come on Viktor. You're not being very reasonable. Think I don't know you want to be Prince?\"\n\n\"When I become Prince and destroy Antoinette,\" Viktor said, with sword now raised and pointed at Tony, \"it will be on my own terms, and not with the aid of some vermin ser-\"\n\n\"What? You can't hurt Antoinette.\" Before he could stop himself, the words were out of his mouth. Jack put a hand to his lips, as if he could cover up the mistake. If there was one way he was going to get himself killed, it'd be making a really, really stupid decision.\n\nTony stopped and looked at him, eyebrow raised and hands slipping into his pockets. Viktor, on the other hand, slowly turned to face his grandchilde, and his expression was shocked. More than shocked. His eyes were wide, confused, and his mouth looked like it was ready to drop.\n\n\"... I beg your pardon?\"\n\n\"Um... I....\"\n\nViktor started to walk toward him, one slow step at a time. His eyes were still wide, and... afraid? It didn't make sense. The ancient Kindred just walked toward him until Jack's back was against the garage door.\n\n\"You... you would dare insult me?\" Viktor swung the sword in the air several times, as if to display his disbelief. He wasn't afraid. He was furious. \n\nLike Tony moments before, Jack could feel the anger actually flow out of his grandsire as crushing waves. His own inner-beast was screaming in terror, but he couldn't move back any futher. His mind was in a panic, he couldn't turn to lift the door, he couldn't get out. Trapped. Trapped!\n\n\"Al-Alder Viktor, please, I.... Antoinette is-\"\n\n\"You would betray me for her?\" Intent was dripping from Viktor's gaze like blood. Maybe there was fear in his eyes. Fury, but also paranoia. Julias had said elders were paranoid, but he had no idea.\n\nJack was shaking. \n\n\"I-\"\n\nThe blade came down fast. Too fast. Almost as fast as a Daeva. And in the next moment, the blade had swiped through and was now pointed down at Viktor's feet.\n\nThe moment after that, Jack fell to his knees, and then onto his side. Things stopped working. He clutched his hands at the floor and tried to pick himself up, but it just wasn't happening. He looked down at himself, but found only a mess of his suit cut down the center, and the thick, viscous blood of a Kindred dripping down onto the floor; Kindred blood wasn't supposed to do that.\n\nThen the pain started. It exploded outward from his face first, and when he reached up to clutch it, he found a massive gash down through it, through his forehead, nose, mouth, jaw, and into his skull. It wasn't just a small cut, but a deep cut that had sliced deep through his bone. The pain moved downward, and with a trembling hand, he managed to bring a hand to feel his chest. There too, a massive gash had cut into chest.\n\nThings were falling out of him.\n\nWhen he managed to force his attention through nausea and blistering pain, he could just barely make out withered things, dark and atrophied and dead things slipping from his pale skin, and soaked in dark red. Kindred insides.\n\n\"Learn your place.\" Then Viktor kicked him. \"And die.\"\n\nBone cracked inward and more of his precious vitae splattered over the floor. Hard as the viscous liquid fought to stay inside him, he was cut open like a gutted fish, and the blood was helpless but to pool around him. He tried to talk, to beg, to plead, but all that came out was Kindred blood.\n\nHe could hear laughter, and voices. Viktor was talking, but not at him. Tony. The two were walking toward each other, faster, and then... running at each other.\n\nGunfire. Metal smashed against the machines. Everything became a blur. Tony was moving, jumping, insanely fast but everything was spinning now. Even Viktor looked like a blur, with his machine pistol drawn and unleashing a sliding light of muzzle flash in the darkness.\n\nTheir fighting was his death song. Sword against the floor and bullets against the spooling machines. Whoever won was going to kill him. Either Tony would for his relationship with Antoinette, or Viktor for Jack's audacity.\n\nHe was going to die. He was going to die because he didn't know how to keep his mouth shut, because Viktor was a paranoid bastard, and because Tony was a deluded asshole.\n\n... no. Fuck that. Fuck it. Fuck Tony. Fuck Viktor. Fuck them all.\n\nHe reached out across the floor with one hand, dug his fingers into the floor as best he could, and started to drag himself. He'd broken his leg once as a kid. He'd been kicked in the balls by a bully once in high school. One time, he lost a tooth to an infection.\n\nNone of it even compared. If he'd still be human, kine, he'd have passed out from the pain. So much of his body had been split open, he could feel bone grinding against bone where it was supposed to be connected. Each inch crossed sent migraines of pain that overwhelmed him until he couldn't think. No! He was Kindred now. He was a fucking Ventrue, and he wasn't going to fucking pass out and die to a fucking flesh wound in the middle of a fucking textile mill! \n\nTextile mill! Thread. Fabric. Spools of it. Let it be let it be... yes! The lighter was still in his pocket.\n\nThe two elder Kindred were still fighting. He could barely follow that they were moving, and the gunfire was growing quiet. Gunfire wasn't supposed to be quiet. He had to go faster. Find some thread, some fabric, something that was hanging far enough down he could light it.\n\nHe wouldn't let these fucking animals hurt Antoinette.\n\nThe building was in disarray. It'd obviously not been properly emptied when abandoned. And after dragging himself twenty feet, he found one of the spool machines. It was such an old machine, no wonder the mill had been abandoned. It wouldn't have passed safety inspection, and it would have cost a fortune to replace all the machines. But it'd only recently been abandoned, and now that he was up against the machines, he could see through cloudy eyes that bits of fabric were everywhere.\n\nHe held the lighter in front of him. It was drenched in blood, and he had to struggle to hold it. He was shaking, either from how close to his second death he was, or because he was holding Kindred bane in his hand. Every flick of the thumb against the flint wheel was fruitless. He kept trying, even as he fell over onto his shoulder, and could barely see the lighter in front of him or the threads of fabric, he kept at it.\n\nFinally, a spark.\n\nAnd then, fire.\n\n~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~\n\n~Beatrice~\n\nFire. Fire! Fire poured out of the old warehouse like death given its own life, its own desires, its own hands to reach out and grab and take whatever it wanted. And it wanted everything. \n\n\"No! Jack!\" Julias tried to rush past her, but it only took a quick hand to his chest to knock the big man down onto his ass.\n\n\"Stay back, fucking idiot! Look at that!\"\n\nFire didn't just rise from the old building. It exploded outward. Fire and smoke and chemicals; it was a giant cluster fuck of insane proportions.\n\nAnd then it was the next building. They didn't go up in flame with the same eagerness as the first building, but the fire was spreading nonetheless. Just looking at the flame was making the Nosferatu tremble.\n\n\"Jack was in there, with Viktor!\" Julias motioned to the first building that went up in flame. \"I have to get him!\" \n\nSuperman got up again, and she put him down just as easily. Hell, he was missing a hand and beat to shit, he couldn't even land without stumbling over. \"You'll fucking die! We'll both fucking die. The fire is spreading.\" She reached down, picked him up by his collar, and shook him. \"Use your god damn brain, Invictus!\"\n\nHe struggled. \"No. No I have to go get him, I-\"\n\nNope. Fuck that. She punched him in the face, and when he spit curses of pain, she punched him again until she heard something crack. She couldn't knock him out without nearly kill him, but it was enough to break his face if that was the only way to get him to not commit suicide.\n\nShe dragged him off. He was holding his face now, yelling and struggling, but at least his hands -- er, hand -- was off of her so she could drag him without issue.\n\n\"I didn't save your god damn life so you could throw it away. Now shut up. The kine will be here soon. This whole district will be in flames soon!\"\n\nWow, he did not stop struggling. Whatever, she overpowered him easily, and the big man was helpless to escape her grip as she bounded up onto rooftops.\n\nShe took him back to his place.\n\n~~~~~~~~~~~~~~~~~~\n\nFinally, they were back at his apartment. She had to use her cloak of night to get past all the pedestrians, and with the one-handed Ventrue hanging off of her shoulder, that was no easy task. At least the big lug had finally given up struggling.\n\n\"Sit down and so help me god if you try and leave I will rip off one of your legs. See how far you can get with half your limbs gone!\" She threw him onto the couch, hard enough to make her point.\n\n\"...alright.\" \n\nSuperman slumped against the couch and cradled his missing hand. He'd be able to regrow it during the day when he slept, and the host of other wounds he'd taken. He'd be hungry as well when he woke up, for the sheer amount of vitae it'd require to regenerate.\n\n\"Sunrise is in an hour. So don't... just don't.\" She stood there, arms folded across her chest, before she finally took a look down at herself. God she was a filthy mess. She had Rebecca all over her.\n\nOk, the situation sucked, but that thought made her laugh. Julias quirked a brow at her, and she raised her hands up in surrender. \"Just a funny thought.\"\n\n\"Jack could be dead.\"\n\n\"Yep.\"\n\n\"... fuck you,\" Julias said. \n\nShe did a double take. He had said it, right?\n\n\"Hey, he could be alive too.\" Pretty damn unlikely though. The fire had eaten a dozen warehouses by the time it was beyond them and out of sight. And even to a Kindred as young as Jack, fire was still extremely deadly.\n\nJulias didn't say anything. Just looking at him was enough to make her feel weighed down though. For just a moment, she thought of the old stories she'd heard, of what a parent went through when they lost a child. The Ventrue was beaten, missing a hand, suit in shambles, but it was his down-pointed eyes that had her feeling... feelings.\n\nShe came over and sat down next to him.\n\n\"... what are you going to do?\" she said.\n\n\"Don't know. I don't even know if Viktor is alive; he hasn't called to arrange another meeting.\"\n\n\"God. What the fuck went down tonight, Julias?\"\n\n\"It was just supposed to be a smash'n'grab! Get the package, get out, push Tony and Rebecca around if we had to.\" He reached up with his only hand and covered his face. \"Important information, just didn't know what it fucking was. There were too many signs to ignore though, so we risked it. Fucking... Viktor. I trusted him to keep Jack safe.\"\n\n\"It... uh... doesn't sound like a very well thought-out mission. Not very Invictus-like. No offense.\"\n\n\"It wasn't. But the information was supposed to be sensitive to the covenants, so Viktor... thought it was so important, he'd go himself.\"\n\n\"Wow, the big man himself thought it was that important?\"\n\nJulias gave a slow nod, but she'd set the wheels turning in his head. His eyes drifted forward, but he just gazed into nothingness while his hand gripped at his other wrist. She had no hope of following all the webs he was untangling in his mind.\n\n\"... thanks... for telling me all this,\" she said.\n\nJulias blinked; she'd startled him.\n\n\"I... I really shouldn't have.\" He managed a small smile at her, and scratched at the back of his neck with his only hand. She could see he was in a lot of pain, but he bore it like a true Ventrue. The stupid bastard.\n\n\"Well, thanks anyway.\" She got up again, headed for the door, and gave the poor guy a pat on his shoulder. \"And... he... well....\" Arg, why was this so hard? She clicked her teeth together from side to side. \"I... I'll go.\"\n\nWhen she lifted her hand and stepped to the door, a tug on her arm stopped her. She turned around, and found Julias's one good hand holding onto hers. His hand, covered in the now-turned-to-ash blood of Rebecca, sneaked its fingers between her long claws. She gave a small tug again, but he didn't let go.\n\nHe didn't raise his head, didn't smile anymore, didn't move, just looked down at the floor in front of him, and held onto her hand.\n\n\"Sunrise is in an hour, I have to-\"\n\n\"Stay.\" Finally, he raised his eyes to look at her. \"Please.\"\n\nMan, even a begging Ventrue still looked noble. Part of him looked like a poor boy asking for more food, and another like a defeated king bravely requesting of his conquerer for his people to be spared. Those eyes of his lowered a bit, to where their hands were netted together, and then he looked up to her again. He tugged on her this time, only tightened his hold of her hand, and lead her to sit back down beside him.\n\n\"It takes thirty minutes to get back home though. I-\"\n\n\"Just... stay.\"\n\nHer turn to blink. She wanted him to stay? \"As in... stay the day? Like, sleep here? Like, super defenseless deep Kindred sleep, with no one around to protect me?\"\n\nHe managed a small chuckle, weak, but real. \"The place seals off from sunrise to sunset, and the curtains automatically close. And I... I could....\" His eyes lowered again, where his hand held hers over his knee.\n\nShe'd never thought she'd ever see a Ventrue look so defenseless, open... vulnerable. Broken.\n\n\"... alright.\"\n\n~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nFire was always a frightening beast. It seemed alive and bloodthirsty, even when it was just a candle's flame. But dry fabric like cotton was not the same. Not the same. He could not have known how bad it would have been.\n\nIt was like an explosion. The fire filled the air far faster than he could have imagined. The flash of it burned his skin until he could feel it against bone, and he backed away from it like a panicked animal. Fear, so much fear filled him, that for that brief instant the red flame lit up the mill, he could not feel that he'd been cut open from head to gut.\n\n\"W-wait!\" Tony screamed.\n\n\"No. No!\"\n\nJack looked across the way, but all he could see was flame billowing out. Something was in the air, something that caught the flame and whipped it into a maelstrom. He'd heard stories, horrible stories about cotton mill fires, but he had no clue. It slammed him into the garage door hard enough that he was sure something else broke. To the two elder Kindred though, the effect was entirely different. The explosion of incinerating air crashed into them, and through the fury of its swirling red, Jack forced himself to watch.\n\nThe two of them only had time to raise their hands in panic, and then they were gone. Their voices echoed with billowing force over the explosion, like dying gods, and then they were gone. They burst into flames, bright and unnatural against the fire, before falling apart to ash, and then they were gone.\n\nIt was almost disgustingly quick. Beings hundreds of years old, ancient, powerful, deadly and intelligent, were gone in a flash. A literal flash. The air was on fire and it didn't care about how powerful and ancient they were, it just made them gone. And it was coming for him next.\n\nThe walls, the machines, so much of it was old and dry. It was going up in flames after the flash fire, and he had no time. No time to think about it, no time to worry about it, he could only do one thing.\n\nHe turned around with one hand holding his guts in, got to a knee, and used his free hand to grab the garage door's base. He lifted.\n\nAgony coursed through him. He could feel his undead insides fight against the weight. It wouldn't have been too hard for a kine, but even as a Kindred, split almost in-half and with one hand, nothing was working right. He started to tumble over, blink in confusion, lose his sense of awareness, before he snapped back to his senses. He pulled harder, and harder, until he heard the creak of moving metal against the roar of fire. More of his blood was pooling out of him. Kindred blood wasn't supposed to do that, but it didn't matter. Ignore it, just move!\n\nAt last the door lifted. For a moment, he forgot about his singed skin turned to ash over half his face. The next moment, it was almost enough to blind his thoughts. He stumbled forward as the door rolled up, and fell out onto the pavement. He managed a glance around, silently begging for Julias, but his sire was no where to be seen.\n\nHe looked behind him, and found only more of the growing red engulfing everything in its wake, like a demon on his heels.\n\nHe grit his teeth. He wasn't going to die to this bullshit. He'd killed Tony. He'd killed Viktor. He was not going to die to some fire that he himself created. Fuck that and fuck them. He was a Ventrue.\n\nVentrue do not fail.\n\nHe started to crawl. Attempts to stand quickly proved impossible, for pain and lack of strength, but that was fine. He didn't need to stand, he just needed to move. More of his dark blood dripped out of him in unnaturally thick globs, but he ignored it. Just move. Just move.\n\nA small chuckle escaped him, quickly regretted for the pain. He was absolutely and completely alone, in what was proving to be a raging fire that was doing more than just burning the building behind him; it was burning the buildings everywhere around him. Still, somewhere in his mind, he refused to accept it. He was a Ventrue. He would not die here to a stupid fire.\n\nSo he kept crawling, even as the fire spread out to the buildings in front of him, even as the palettes of wood around him burned, and the trucks and what-the-fuck-ever started to catch fire, he kept crawling. His bloodline would not let him give up.\n\nBoots. There were boots in front of him. He looked up and tried to focus his eyes. A person, someone tall, in a trench-coat. And glasses?\n\nWhoever it was leaned down with a hand outstretched. Part of him wanted to panic and fight, but the hand was empty. He was too tired to fight anyway. Instead, the stranger put his hand on Jack's shoulder.\n\n\"Mister Terry? I got you.\"\n\nHeh, Mister? His title was Master Terry, just a kid. Julias was a Mister. Whoever this guy was, he was no Invictus. Darkness pulled him under, and all he could think was, what a dumb last thought to have before you die. "
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "vampire",
        "vampire romance",
        "supernatural romance",
        "blood",
        "violence",
        "seduction",
        "vampire sex",
        "vampire novella",
        "vampire drama"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-ch-09"
}