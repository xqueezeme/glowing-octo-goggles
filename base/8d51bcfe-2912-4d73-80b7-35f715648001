{
    "title": "Fucking Pantyhose",
    "pages": [
        "All characters in this story are eighteen years of age or older at the time any sexual activity takes place.\n\n********\n\n\"You seem a little off today if you don't mind my saying. What's bothering you Sandy?\"\n\nThere was no answer for a while as Sandy tried to compose herself before responding to her good friend April's question. The two were having their weekly lunch at a nice outdoor cafe and Sandy was indeed preoccupied. It did not take a trained psychologist like April Stimson to pick up on that fact.\n\nWhat Sandy had seen this morning had caused her much disquiet and concern and she had never been any good at concealing her emotional state from April.\n\nIt was April who instinctualy had known when things had become rocky between Sandy and her now ex husband long before Sandy was prepared to admit it.\n\n\"It's hard to say exactly.\" She finally began.\n\n\"I suppose if I can't trust you I'll never tell anyone and if that happens I might go mad.\"\n\n\"You need to open up dear. You look ready to explode.\"\n\n\"I don't know how to begin. It's embarrassing.\"\n\nThere was a long pause while Sandy looked down at the salad she was absentmindedly toying with. Eventually April broke the uncomfortable silence.\n\n\"Is this about Ronnie?\"\n\nSandy raised her head to meet Aprils eyes as she struggled to hold back tears from her own. She managed a nod and then.\n\n\"How did you know?\"\n\n\"It's plain to me dear that your son is the only thing important enough to you to get you this discombobulated. What has he done that's got you in this state?\"\n\nAgain Sandy hesitated and April was patient with her friend. She took a bite of her sandwich and gave Sandy time to decide whether to open up or remain bottled up.\n\nFinally Sandy spoke. \"It is Ronnie. April, I'm so worried about him. I don't know what to do.\n\nI feel like it's all my fault. He needs a man's influence in his life and even though Bruce was a jerk I'm thinking it might be good for him to be around just now.\"\n\n\"Don't go there girlfriend. You are well rid of him and he was not good for your son.\"\n\n*******\n\nSandy's ex husband Bruce was not her sons father. Sandy had become pregnant in her senior year of high school and had decided to keep the baby. The real father was unknown to her with exact certainty. There had been a party one weekend near the end of senior year at the home of one of her friends. Sandy had gotten pretty wasted that night. There was some pot smoking and a lot of drinking and then the scene had gotten pretty sexually charged.\n\nThe parents of the hostess were out of town and all holds were barred. Several couples were pairing off in corners and disappearing into bedrooms. Sandy saw a boy she was interested in being blown by some girl from her civics class on a couch across from her.\n\nHe made eye contact and with a nod invited her to join them.\n\nShe did.\n\nShe had never sucked a dick before that night but was no virgin. The few times she had sex with her boyfriend, her only boyfriend, she had been very careful to avoid her fertile time as she was not on birth control. Her parents would lose their minds if she got pregnant she had thought at the time, and as it had turned out she was correct.\n\nShe got on her knees before the boy and took her turn sucking on his very tasty cock. When he invited the two of them to one of the upstairs bedrooms, which he was quite familiar with from having dated the parties hostess, the two had followed willingly.\n\nHe got the two of them on the bed and naked and took turns fucking them until he shot his load deep into Sandy. When he was coming inside her pussy Sandy noticed that another boy had joined them in the room and was busy putting it to the other girl. There were also she noticed, a couple of other horny seniors standing inside the doorway. Somebody had probably spread the word about the two chick's going all the way upstairs.\n\nShe never blacked out but was very stoned and very horny and she probably fucked about six or seven boys that night as did her friend from her civics class. Three or four of them at least came inside her unprotected pussy and an equal number got off inside her friend.\n\nHer friend was on birth control. \n\nSandy was not.\n\nThus Ronnie was conceived.\n\nSenior year ended before she started to show but when it became obvious she confessed to her parents that she was pregnant. She wanted to keep the baby. She refused to say who the father was and was too embarrassed to say that she actually wasn't sure since she had been willingly gang banged in a drunken and stoned state at the party.\n\nShe left home because her father insisted she give the child up for adoption and she refused. After Ronnie was born she started to raise him in a group home for unwed mothers. \n\nShe met Bruce about a year after Ronnie was born and he took a liking to her. He was in his late twenties and she was desperate enough for attention that she never hesitated when he asked her to move in shortly after they started dating and she married him when he asked her a few months after that.\n\nBruce was nice enough to her but he was a little distant and cool to Ronnie. Her son was a very shy and introspective boy. Bruce tried on occasion to take him out for guy things but Ronnie usually deferred, choosing to stay close to home.\n\nOne day, shortly after Ronnie had reached puberty, Bruce came home to find him wearing Sandy's stockings and heels. \n\nBruce lost it and started to berate the youngster.\n\n\"You're going to turn into a fag if you don't straighten out and man up.\" He had shouted.\n\nBruce had never adopted Ronnie but he felt that Ronnies apparent predilections were somehow a reflection on his own manliness. \n\nTensions increased as Ronnie was discovered several more times having invaded his mom's underwear drawer and Bruce repeatedly tried to correct his behavior with verbal threats and beratings. Eventually Bruce was asked to leave by Sandy because she felt it was an unsafe emotional environment for her son.\n\nApril had started counseling her friend during this time and she had recommended the splitup. Bruce had moved on to another relationship in the five years since the divorce and had initiated no contact with Sandy or Ronnie in that time.\n\n*******\n\n\"Maybe Bruce was trying to do the right thing. I don't want my son to be gay but if he is I'll be okay with that. I just want him to talk with me and he's shutting me out.\"\n\n\"What happened exactly dear? Stop beating about the bush.\"\n\nSandy sobbed a couple of times and then began. \n\n\"I came back from work to the house about an hour ago to get my purse because I had forgotten it and I knew we had a lunch date. When I went upstairs to my bedroom to get it I saw Ronnie in the hallway standing with his back to me before the full length mirror we have at the end of the hall.\"\n\nThere was a moments pause while Sandy gathered the courage to say what she had to say next. April waited patiently.\n\n\"He was wearing a pair of my pantyhose and nothing else. He was touching himself down there with one hand through the materiel and I could see that he was very aroused. His other hand was stroking his thigh over the pantyhose like he was feeling himself up. I gasped in shock and he heard me. He saw me looking at him through the mirror and he ran into his room and locked the door.\"\n\n\"Did you try to talk with him?\"\n\n\"He wouldn't answer me. Eventually I told him I had to meet you for lunch. I told him I loved him and not to worry. That we would talk later.\"\n\n\"That was good.\"\n\n\"I don't know what we will talk about. I don't know what I can say. Does this mean that he's gay? That he's some kind of transvestite or something? I don't know how to get my head around all this.\"\n\nThis time it was April who paused before offering, \"I'm not sure exactly what issues your son is working through but he does love you. I have a little more insight into human sexuality than you do and if you'd like I can try to reach him. Try to get him to open up.\"\n\n\"If he'd be willing that would be great April. You're a real friend.\"\n\n\"Was this the first time he was into your clothing drawers since Bruce left?\"\n\n\"Probably not. Actually, almost certainly not. I have found things rearranged and have even discovered cum stains on my nylons in the past. I was afraid to raise the subject. I was burrying my head in the sand. I suppose I had hoped he would grow out of it. I hoped he'd find a girlfriend but he never has. All through high school nothing.\"\n\n\"Is he a virgin do you think?\"\n\n\"Without a doubt.\"\n\n\"Why don't you ask him if he would be willing to talk with me. He knows I do counseling for a living but this would just be as a friend. Call me if he agrees and we can work out a time and place.\"\n\nSandy reached across the cafe table and took her friends hand and said gratefully, \"Thank you April. I will do just that when I get home after our lunch.\"\n\n*******\n\nTwo days later April was at Sandys house and Sandy met her at the door.\n\n\"Ronnie is in the living room waiting for you.\n\nI'm so glad he agreed to do this. I'm so grateful April.\"\n\n\"Don't be silly my dear. What are friends for? Besides, I've known him since he was a little boy. He's almost like the son I never had. It will be my pleasure.\"\n\n\"I'm going to make myself scarce if that's okay. I can go to the mall for an hour or so to give you two some privacy.\"\n\n\"That's perfect dearie. Take your time. He'll be in good hands.\"\n\nWith that said, Sandy left and got into her car for the trip to the mall and April entered the living room to find Ronnie seated in the middle of the sofa with his head down.\n\n\"Hello Ronnie.\"\n\n\"Hi Mrs Stimson.\" the young man muttered raising his head enough to make brief eye contact before lowering it again.\n\n\"Ms. Stimson,\" She corrected him, \"I never was married but lets forget all that. You may call me April. Your mom does and we're old friends. I'd like our little talk to be between friends.\"\n\n\"Ok.\" was all Ronnie could manage without raising his eyes to meet hers. \n\nShe had seated herself across from him in an upholstered armchair.\n\n\"Ronnie, look at me for a moment while I say a few things to get us started.\"\n\nHe looked at April expressing some aprehension about what might be coming next.\n\n\"Your mother told me about what she saw the other day and she told me she's not sure about how to talk with you about it. Are you embarrassed to talk with me abut this? I think it will be helpful.\"\n\nApril paused and waited for Ronnie to absorb and acknowledge her statement. He finally said, \"We can talk if you like.\"\n\n\"OK then. First of all its perfectly natural for young people to explore the boundaries of their sexuality. There is nothing abnormal or deviant about what your mom said she saw. Many men like the feel and look of lingerie and nylons.\"\n\nApril noticed that Ronnie had begun to have his gaze linger a little longer on her legs and she subconsciously recrossed them to capture more of his attention. It was attention that she did not often get.\n\nApril Stimson was by any measure a very ordinary looking woman of forty two. She normally dressed demurely and professionally and did not overdo her makeup. She had an average face, wore plain horn rimmed eyeglasses, and kept her brown hair in a short wavy style that was becoming enough. Her B cup boobs fit her slender frame well, but her most outstanding features were two very well toned and turned out legs with a scrumptious set of buns sitting atop them.\n\nRonnie was obviously attracted to her legs April noted as he had trouble keeping his eyes off her nylon covered calves. Her skirt came down below the knee when standing but had risen to mid thigh as she crossed and recrossed those shapely legs.\n\nHaving a young man notice her this way was very exciting for her.\n\nShe did date some but as she had said when correcting Ronnie she had never married. In fact she had never had a long term relationship. Her busy work schedule, lack of confidence in her attractiveness, and scarecity of available men in her demographic all worked against her having a regular and fulfilling sex life.\n\nThis attention from an innocent but eager admirer was like water to a parched desert traveler.\n\nShe knew she was playing with fire and that her friend Sandy would not have approved of her actions but April was moved by an irresistible urge to get up from her chair and join Ronnie on the sofa. She obeyed that urge.\n\nWhen she sat next to him their thighs touched briefly until he nervousely edged away.\n\n\"It's ok dear, I won't bite. I know from what your mom told me that you have put on her hose. Did that excite you sexually? Did you get hard?\"\n\nShe asked this last question knowing full well that he had been hard. Sandy had told her what she had seen through the mirror.\n\n\"It did excite me. I can't help it. Am I weird April?\"\n\n\"Of course not. You are young and learning about what you like.\"\n\n\"Does this mean I'm queer or something like Bruce said?\"\n\n\"Not necessarily. Do you feel attracted to men? Do you imagine women in the stockings you tried on? There are no right or wrong answers to those questions. Just your answers.\"\n\n\"I like women. I've never had a girlfriend but I'd like to have one. The girls in school never wear stockings that are sexy like yours.\"\n\nApril squrmed a little at that remark and her pussy dampened.\n\n\"These stockings are not especially sexy as stockings go Ronnie but thank you. Would you like to touch them? Feel my legs through them?\"\n\n\"Oh yes! Please! Can I really?\"\n\nWith that said she hiked up her skirt and took one of his hands and placed it on a nylon covered thigh.\n\n\"Go ahead. Run your hand up and down and feel the texture and the heat of my body coming through.\"\n\nApril could see that he was hardening inside his denim shorts and that his erection was expanding down along the inside of one thigh. He was adjusting himself with one hand while he continued to fondle her offered leg with the other. Without a word she swung both legs up and across his lap so that her calves rested on his upper thighs. She could feel his hardon againt the underside of those very shapely legs.\n\nApril leaned back agaist the arm of the sofa and hiked her skirt up another couple of inches in doing so.\n\n\"Go ahead Ronnie. Touch them all over. Tell me how it feels.\"\n\nIt felt great to April having this young man so appreciate her legs in this manner and was prepred to enjoy his touch for some time when he moaned and stopped abruptly after less than a minute.\n\nShe was about to ask if he was ok when she felt the hot wetness against the back of one calf.\n\nHe had shot off in his pants. He had come enough to soak through his underwear, his denim, and her hose. Quite the load she thought to herself, but way too quick.\n\n\"Did you just have an orgasm Ronnie?\"\n\n\"Yes ma'am, I mean April. Sorry.\"\n\n\"Nothing to apologize for.\"\n\nShe swung her legs back off his lap and saw a huge cum stain spreading inside his pants. \n\n\"You did nothing wrong. Perhaps we can talk some more tomorrow at my place. You better get upstairs now and change before your mom comes home dearie.\"\n\n\"Thanks April. I'm so sorry. I'd like to talk tomorrow. Don't tell my mom about what I did.\"\n\n\"Don't fret Ronnie. Go and change now. Come to my house after school tomorrow. I'll arrange that with your mom but this will be between us.\"\n\nRonnie scurried upstairs and April reached into her pantyhose and touched herself as soon as he was out of sight.\n\n*******\n\n\"How did it go?\" Sandy asked as soon as she had returned and seated herself actoss from April.\n\n\"I think we made a good start. He seems willing to talk with me.\"\n\nSandy said nothing, waiting for April to expand on that.\n\n\"I think he's a normal young man in most respects. I'd like a few more informal sessions with him and he's agreeable to that. We're meeting tomorrow afternoon at my place to explore a little more in depth some discoveries we made today.\"\n\n\"He opened up to you?\"\n\n\"Yes he did, a little. I think I can get more out of him though. He's not homosexual by the way and he's very embarrassed about what you saw.\"\n\nRelief washed over Sandy as she said to her friend. \"Thank you April. I trust you to do right by my boy. He's all I have and I want him to grow to be normal and happy.\"\n\n\"You can trust me.\" April said, not entirely believing herself as she said it.\n\n*******\n\nThe next afternoon could not come soon enough for either of them. Ronnie ditched his last class and texted April, asking if he could show up a little early.\n\nApril, who had been preparing herself for hours already, texted back that of course he could.\n\nShe was wearing waist high sheer nude pantyhose and had on open toed pumps with three inch heels. A wraparound skirt with a floral pattern and an attractive pink blouse under which she was braless completed her ensemble. She was made up as if going out on a hot date as opposed to supposedly counseling the eighteen year old son of her good friend.\n\nShe was setting herself up for trouble for she knew she would have great difficulty staying inside the lines of restraint normally called for. The fact that the mere touch of her legs had caused this young man to orgasm was thrilling to her ego and sense of sexuality. \n\nShe had orgasmed several times this morning imagining how far things might go while promising herself that she would keep some boundaries intact.\n\nWhen Ronnie knocked on the door she was dripping with anticipation.\n\n\"Come in Ronnie. Make yourself comfortable. Would you like some lemonade or perhaps soda to have while we talk?\"\n\n\"Maybe some coke if you have it. My mouth is a little dry.\"\n\nHe had walked the mile and a half from the high school quickly in his eagerness to begin this session and was a little out of breath.\n\n\"Done. Have a seat on the sofa and I'll be right back with it.\"\n\nAfter returning from the kitchen April handed him his drink and took a sip of the wine she had also brought back for herself. This would be her fourth glass and she was feeling the effects. Her inhibitions were dangerously reduced.\n\nShe sat down beside him and squeezed his knee asking, \"How did school go today?\"\n\n\"Ok April. I'll be so glad when it's done next month.\"\n\n\"Are you excited about college? Your mom says you're going to the junior college locally for a while.\"\n\n\"Yes.\"\n\n\"There are going to be a lot of new adventures to be had. Girlfriends to experience and new things to learn.\"\n\n\"I don't know about girls April. I don't think they like me very much. I don't play football and I'm kind of scrawny.\"\n\n\"Don't be silly dear. You are very nice looking and you'll have lots of girlfriends before it's all said and done.\"\n\nIn truth Ronnie was a little scrawny as he put it. His face was pleasant enough to look at but his body wasn't very well toned or muscled and he was on the short side at five foot six, a good two inches shorter than April.\n\n\"You'll get all the girlfriends you need if you learn how to please a woman. Women like to be touched gently and slowly. I liked the way you touched my legs yesterday. I have to confess that it excited me Ronnie.\"\n\n\"Did it really?\"\n\n\"Yes it did. I played with myself after you went upstairs to clean up. I played with myself this morning thinking about you touching me again today.\"\n\n\"Wow! You play with yourself too.\"\n\n\"Yes I do Ronnie. And I know you've played with yourself after you have gotten into your mom's stockings drawer. She said she has found cum stains on them.\"\n\nHe hesitated, a little embarrassed, before offering.\n\n\"I usually try to rinse them off or get them to the hamper but she came home early a few times and I just put them back in the drawers. She never said anything to me and I was hoping she hadn't noticed.\"\n\n\"She was embarrassed and didn't know how to bring up the subject. Did you wrap the stockings around your penis to masturbate? Do you masturbate sometimes when you have her pantyhose on?\"",
        "\"Yes.\"\n\n\"Do you come quickly? As quickly as as you came the other day?\"\n\n\"After the first time I usually last a while.\"\n\n\"Good. Women like it when a man can last a while. I notice you like my legs Ronnie. Do you like my feet as well?\"\n\n\"I sure do. They're very sexy.\"\n\nOoohh. Sexy was not an appellation April was accustomed to having applied to herself and she very much liked it that this young man, oozing testosterone, found any part of her to be sexy.\n\n\"Would you like to touch them Ronnie? Would you like them to touch you?\"\n\n\"What do you mean, them touch me?\"\n\n\"What I mean Ronnie is to have my feet rub on your penis while they are covered in the nylons.\"\n\n\"You mean jerk me off with your feet.\"\n\n\"Yes Ronnie. It's called a foot job and I think you'll find it very exciting. Would you like for me to do that for you?\"\n\n\"Oh yes! Way yes! Would you really?\"\n\n\"Take off your pants. Lay on your back on the floor right there and I'll show you about would I really.\"\n\nRonnie wasted no time in doing exactly what April suggested and his six inch stiffie shot straight up from his sparse thatch of pubes. April sat on the floor with her back to the sofa and having taken off her pumps stretched a stockinged foot out and touched his tensing abdomen.\n\n\"Now Ronnie, I want you to practice delaying your orgasm. When you feel like you are going to come I want you to bear down as if you are trying to stop yourself from urinating. That's called doing kegal exercises and it has been known to help with premature ejaculating. I don't think you're a premature ejaculator but you will enjoy this so much more if we make it last.\"\n\nShe was now nudging his scrotum with her hose covered toes, her hot pink toenail polish showing nicely. He looked down at the exposed expanse of her legs as she had pulled the wraparound skirt open. He nodded his agreement and then moaned. \n\n\"I'm getting close.\"\n\n\"Thank you Ronnie.\" April said, ceasing her stimulation of the boy and talking him through the kegal maneuver.\n\n\"It's better now.\" He said, wanting to please this sexy older woman and not come too soon.\n\n\"Good boy. You're really going to enjoy this.\"\n\nFor the next twenty minutes April toyed with the young man's erection. She had one hand inside the top of her pantyhose fondling her clit through her thick untrimmed bush and her other hand was inside her unbuttoned blouse pinching and playing with her erect nipples.\n\nHer nylon covered feet grazed over and touched the young man's penis from which copious precum was seeping.\n\nShe would stop whenever he said he was close which was about every minute or so and would then talk him through a kegal even as she continued to masturbate and bring herself ever closer to her own orgasm. \n\nFinally she took his hardon between the soles of her feet with the toes wrapping themselves around as best they could and began a vigorous foot job, stroking the writhing boys cock rapidly.\n\n\"Ooohhh... I'm getting close again.\" He gasped.\n\n\"It's ok baby. Come for me. Shoot off for my feet. Shoot it. Come on Ronnie. Come.\"\n\nHe arched his back and the first blast seemed almost to contact the slowly rotating ceiling fan before arcing back down and landing mostly on April's exposed pantyhose. Several blasts followed, decreasing in intensity with some of the come landing on each of their legs until the rest of the come which had been building up in the boys balls was only able to ooze out and coat her stocking covered feet. Those feet had continued their slow milking of his now softening prick.\n\nApril, who had been furiously frigging her clit during the buildup orgasmed herself during the volleys of sperm.\n\nShe sighed with satisfaction and then asked Ronnie to go to the bathroom and get some towels so that they could clean up. She thought she might not be able to stand for a moment or two. He stood up and she admired his softening penis.\n\n\"That was quite a geyser young man. I'm very impressed.\"\n\n\"Wow!! That was awesome!\" Ronnie said after he returned.\n\n\"It was very nice, I agree. I hope you learned something about the benefits of delaying gratification.\"\n\n\"Yes indeed. Can we do this again? Can we fuck? I've never done that.\"\n\n\"We obviously need to be discreet about this as I'm not sure how your mom would take this. We can't have sex because that would be crossing the line. I don't want to lie to my friend about fucking her son so we won't be doing that. You can come back for some more exploring though if you want.\"\n\n\"Oh yes I want. I want.\"\n\n\"I want to be able to tell your mom we are making progress in our talks so we can meet again in a few days but you will have to remember that this is just between us.\"\n\n\"Whatever you say. I just want to see you some more.\"\n\n\"Good. We are in agreement. I'm going to give you some of my stockings in a bag so that you can masturbate with them. Don't use your mom's anymore. You can bring them back to me crusty if you like. In fact I'll be disappointed if you don't bring them back that way.\"\n\nHe had gotten dressed and she walked him to the door. She gave him a hug but when he moved to kiss her on the mouth she turned her head to offer her cheek instead. \n\n\"Be a good boy now and get home. I'll tell your mom we made progress and we'll meet again Friday.\"\n\nWith that he was off and she closed her front door behind him.\n\n*******\n\nThat evening when Sandy came home she called out to her son, \"Ronnie I'm home.\"\n\nRonnie was up in his room masturbating for the second time since he had come home from April's house with one of her black stockings wrapped around his cock and a pair of her pantyhose under his nose in the hopes that he could smell her womanly scent. They were laundered but he thought some of her aroma might have remained.\n\nHe did not hear his mom at first and was very close to coating the stocking with his jizz.\n\nHe then heard her at the bottom of the staircase calling out this time, \"Ronnie! Are you home?\"\n\n\"Coming mom.\" He shouted out while blasting off into the stocking. \"I'm be down in a minute.\"\n\nWhen he came downstairs his mother didn't waste much time in getting around to asking how things went today with April.\n\n\"How did your talk with April go today?\"\n\n\"It was alright. We're supposed to talk again Friday after her last appointment. I'm supposed to go over there again.\"\n\n\"And you're good with that? I wouldn't want you doing this just to make me happy.\"\n\n\"No mom I'm not.\" Ronnie said as he thought to himself, 'I'm doing this to make myself happy, very happy'.\n\n\"I'm glad you're able to get along with her. Even though it's not formal, therapy can be stressful. What would you like for dinner tonight?\"\n\n\"I dunno mom. Can we order pizza?\"\n\n\"Sure Ronnie, whatever you like. Why don't you call it in?\" And with that she tousled his head and smiled at him. He smiled as well but it was partly a secret smile in remembering his experience of today and anticipating some more fun on Friday.\n\n*******\n\nThe next afternoon Sandy called April from work to thank her for being such a special friend and helping her out with Ronnie. \n\n\"Don't be silly dear, it's my pleasure. He's such a pleasant young man. He's just a little confused and inexperienced about women.\"\n\n\"Well, thank you anyway. I understand he's going to see you again on Friday.\"\n\n\"That is the plan, yes. I thought we might meet once or twice a week for a while if you don't have any objection.\"\n\n\"He's eighteen now April. I'm going to have to learn to let go. I trust that you will help him sort out his confusions. I'd appreciate any insight you get but understand if you want to keep some of what he says to you confidential.\"\n\nOn her end of the line April tensed a little at the words trust and confidential when Sandy had spoken them. Was what she had done with Ronnie breaking a trust? If it was, was she going to go further in betraying that trust? She firmed up her resolve not to have intercourse with her friends son. Resolved not to take his virginity.\n\n\"I'll be sure to tell you what I think is appropriate for you to know. This is a delicate time for him.\"\n\n\"Of course. I trust your judgment.\"\n\nThere was that word again. Trust.\n\n\"Let's have lunch again early next week. I'll tell you what I can about our Friday session then, ok? Let Ronnie know that after five will be good on Friday.\"\n\n\"I will. Talk to you later April.\"\n\n*******\n\nFor Ronnie it seemed that Friday could not come soon enough. For April it was the same.\n\nShe cancelled her last appointment so that she could get home early and prepare herself for Ronnie. She knew she would have to masturbate herself to a couple of good orgasms before he arrived or risk losing her self restraint and allowing him to fuck her. That just couldn't happen.\n\nShe then picked out a nice pair of white pantyhose to put on. They had seams on the back of the legs and soles of the feet as well as nice bow tie designs on the backs of both thighs. April had gone online and ordered a variety of kinky sexy nylons, pantyhose, and bodystockings from an adult shopping outfit. They had arrived yesterday and she was very satisfied with her selections.\n\nOver her pantyhose she was wearing only a simple robe. She was topless. She wanted to give Ronnie access to her breasts because she thought that having a womans breasts to play with would help him to feel less afraid that the kind of play she had planned was a sign of homosexuality. She also wanted to feel his touch on them for her own benefit.\n\nIt wasn't real sex she rationalized.\n\nRonnie arrived right on time and was carrying a paper bag. He came inside and closed the front door behind him.\n\n\"Hi Ronnie. It's great to see you.\" April said, giving the boy a hug and feeling his erection against her abdomen as she did so.\n\n\"What have we here?\" She asked, indicating the bag.\n\n\"Your stockings. I brought them back like you asked.\"\n\nApril opened the bag and reached inside. She could feel the dried crusty cum all over her hosiery and could smell the spent spunk as well.\n\n\"Wow young man! You must have come buckets. You kept away from your mother's things like you promised right?\"\n\n\"Yes I did\"\n\n\"Good.\"\n\nShe walked up the stairs and went into her bedroom with Ronnie following right behind.\n\nShe pointed out a pair of sheer black pantyhose lying on the bed and told him to get undressed and put them on.\n\n\"But.\" He started\n\n\"No buts. You were wearing something like these when your mother saw you and you both got so upset. We need to do this so that you will know you won't be rejected just because of what you like to feel against your skin. Now please do as I ask.\"\n\nRonnie stripped out of his clothes and April was pleased to see his rock hard youthfulness on full display. He slithered into the hose and his erection was pinned against his tummy by the waist panel.\n\n\"Now then. That looks lovely. Very sexy.\"\n\nApril dropped her robe and Ronnie could now see all of her. Her black bush showing through the white pantyhose. Her bare breasts bobbing before his eyes as she played with the hardening nipples and asked if he would like to touch them.\n\n\"Would I!\" \n\nHe reached out and grabbed at one.\n\n\"Gently now.\" She cautioned, \"Softly. You can pinch the nipple just a little if you like but not too hard. That's right. Just like that.\"\n\nApril allowed herself to enjoy the sensation of having someone play with her boobs for a while. It had been months after all she rationalized to herself and it wasn't real sex.\n\nEventually she stood back and asked Ronnie to stand before her full length mirror and play with himself the same way he was playing when his mother had come upon him and surprised and embarrassed him.\n\nHe seemed to hesitate and April said to him, \"Ronnie, it's going to be necessary for you to see that a woman is not repulsed by the sight of you engaging in what you clearly enjoy in order for you to move on to real meaningful relationships. Now do as I ask please.\"\n\nRonnie stood before the mirror with April behind him. \n\nHe could see her head over his shoulder in the reflection. He could not see her hands. He could feel one gently grazing over his nylon covered buttocks. He was unable to see that the other was inside her own pantyhose and playing with her sopping pussy.\n\nHe could feel her erect nipples grazing his back as she leaned in and whispered in his ear.\n\n\"Play with yourself for me.\"\n\nRonnie began to do just that.\n\nHe rubbed his hardon through the pantyhose, enjoying the feeling of the nylon against his skin. He stroked and tickled his balls with his other hand. Precum was freely flowing.\n\nWhen his breathing changed a little to indicate to April that he might be getting too close she advised him to kegal and slow down.\n\n\"Don't come just yet. Make it last. You won't be sorry.\"\n\nThis went on for almost fifteen minutes until April had been edging herself for so long her legs were beginning to weaken.\n\n\"Get on the bed and lie on your back.\" She instructed the boy.\n\nHe began to peel down the pantyhose but she stopped him, \"No. Leave those on. Just lie down on your back.\"\n\nHe got on the bed this time without delay and she had him scootch towards the headboard with a couple of pillows propped up under his head.\n\nShe then joined him and straddled his groin so that her pussy lay directly in contact with the trapped underside of he virginal penis.\n\nDirect contact that is except for the black pantyhose restraining his penis and the white pantyhose covering her black bushy box.\n\nRonnie could look down and see their joined groins and began to groan with delight when she started to rock her hips a little and fuck him through the hosiery. \n\n'It's not real sex' she once again rationalized to herself.\n\n'This is great' Ronnie was thinking to himself.\n\nApril leaned forward gripping the headboard and offered her breasts for young Ronnie to suckle on. He took one and then the other into his mouth, gently teasing and biting the nipples and swirling his tongue around them.\n\nShe moaned and looking down at him said, \"Very nice Ronnie. You're learning fast. Does what I'm doing feel good to you?\"\n\n\"Oh yes..\"\n\n\"Remember to let me know when you're getting close. I want this to last for you. Can you feel how wet I am?\"\n\n\"Oh yes. I sure can.\"\n\n\"Can you feel the heat of my pussy coming through the hose?\"\n\n\"Oh yes!\"\n\nRonnie started to press her down harder on his erect cock trying desperately to tear trough two pair of hosiery and sink his meat into her channel.\n\nIt was not possible.\n\n\"I'm getting close April.\" \n\nShe stopped her movements and said, \"Very good. Kegal. Kegal. Hold it back.\"\n\nHe bit down on his lower lip and they remained motionless for a little while. He was slowly backing down from the edge of a explosive orgasm and the mature psychologist knew that he would last a little longer in the buildup to his blast off now and also knew that it would indeed be a massive load he would have stored for her. She was counting on it.\n\n\"Good boy Ronnie.\" April said after they had been quiet and concentrating on delaying their orgasms for some time. She then started her slow grind against his trapped cock anew and spoke softly to him.\n\n\"Now I'm going to let you feel my wetness sliding up and down your cock. It's a very nice cock you know. It looks so pretty inside those sheer black pantyhose you're wearing. Can you feel my juices soaking through? I'm so turned on.\"\n\n\"Yes I feel it.\"\n\n\"Does the nylon rubbing and sliding against your prick feel good?\"\n\n\"It feels great but why can't I go inside you? Why can't I fuck you April?\"\n\n\"It wouldn't be right, that's why. You can fuck my pantyhose though. Do that now Ronnie. Fuck my pantyhose.\"\n\nApril increased the pace of her rocking and Ronnie took hold of her hips and increased the pressure of their respective nylon covered crotches against one another.\n\n\"Ooohh Yesss... I'm very close Ronnie. Are you?\"\n\n\"Oh yes! Hell yes! Can I?\"\n\n\"Yes dearie. Get it. Do it. Come for me. Shoot in my pantyhose. Shoot on my pantyhose.\"\n\n\"Oooooh...\" He moaned and she felt the head of his prick swell and the underside of his cock begin the spasms of ejaculation. She held still with her clit strategically pressed down over his cock heads opening. The first jet soaked through both layers of hose and she could feel his hot sauce directly coating her hot button. She came with that and started to spasm and squirt a little girl juice herself.\n\nRonnie continued his orgasm and April renewed her rocking, slowly spreading their combined juices all over the newly soaked hose.\n\nShe rolled off of him with a very satisfied sigh and said to him, \"You will be quite the lover young man. That was the best orgasm I've had in a very long time.\"\n\n\"It was? Am I good.\"\n\n\"Oh yes, you are and will be. You will make some girl very happy. You just need to find one who appreciates wearing nice hose and lingerie.\"\n\n\"Why can't we fuck April? I won't tell anyone, even my mom.\"\n\n\"You won't have to lie to your mom about us having sex because we won't be. What we are doing is not sex but it's best if you don't tell her about this. She probably won't understand. I might not if you were my son. We'll tell her that I'm teaching you how to relate to women. How to be a good boyfriend. That's basically what were doing right?\"\n\nShe was asking for his complicity in her bullshit rationalization and she knew it and he knew it. He wanted whatever she wanted to label this as to continue so he agreed. \n\n\"Sure April. I'll be cool.\"\n\n\"Good. Now let's peel off these sticky nylons and get into the shower.\"\n\nThey got in together and he tried to kiss her but she would not let him. She did let him soap her all over and wash away the sticky mess he had made seep through her hose to soak her curly bush with sperm. She did not object when he slid a finger inside her and was able to feel just how deliciously soft and tight she felt inside. When he tried to line up his once again hard cock up with her opening she slapped at it and said, \"No. You need to finish up and get dressed. I'll see you Tuesday, same time ok?\"\n\nApril stepped out of the shower and while drying herself, admired his youthful body under the running water and congratulated herself for her restraint. She resisted the temptation offered by this young man's willingness to fuck her. She hadn't been laid in quite some time and the prospect of Ronnies prick was so very appealing.\n\nThere was Sandy to think about though and their Monday lunch together. How would she face her friend if she took her only sons virginity?\n\n******\n\nAt lunch on Monday Sandy was in a much better mood than the previous time the friends had met at the cafe.\n\n\"How was your weekend dear? You look so much better than last week.\"\n\n\"Very good. I'm so much more at ease with things around the house since the tension with my son has lessened. I ordered for you by the way, I hope you dont mind. You always eat the same thing. You need to get more daring.\"\n\n\"What makes you think I'm not daring Sandy? Maybe I have a secret daring side you know nothing about.\"\n\n\"Oh come on girlfriend! You work too many hours. You eat at the same restaurants and order the same few things. When I tried to set you up with that hot guy from my work you passed because there was a documentary on you wanted to watch. Right! A documentary. What a lame-o excuse.\"\n\n\"Why do you think it was an excuse?\"\n\n\"Well maybe it wasn't but I still think you ought to work on expanding your love life as much as you do expanding your mind. It's not healthy for a woman to go as long as you have without getting laid. I know! I've had my dry spells.\"\n\nSandy had started dating some when Ronnie was a sophomore in high school. There was one semi regular fuck buddy she kept company with. Tony was a divorced father of two who owned a local car repair shop. Sandy had jokingly asked six months before if there might be some other way she'd be able to settle a rather large estimate he had given her for some necessary work on her SUV. With a sexy lecherous smirk he had said he could think of one thing he could definitely think of that would help mitigate her costs. ",
        "One blowjob after the shop had closed and her bill was halved. When they started seeing each other after that session Sandy was getting fucked regularly and well. She always went to his place and never spent the night. She barely mentioned Tony to Ronnie and then only as a friend. She didnt want to complicate her sons life with another man not related to him. She wanted to finish getting him raised to adulthood. Now April was helping her with that. Her dry spell had ended. Perhaps she could help April end hers.\n\n\"April, unless you have another documentary you'd rather watch maybe I can see if Tony knows someone he could set you up with.\"\n\n\"Please don't. You worry too much about me. My love life will sort itself out in time.\"\n\n\"Ok. I just think you need to put yourself out there more. Flaunt what you have. Lord knows I dress to accentuate my boobs. Tony loves them. You should showcase those lovely legs of yours more.\"\n\nGlancing down Sandy said, \"Wearing sexy stockings like those you have on is a good start. Are they new?\"\n\nWith that April blushed and the food arrived.\n\n*******\n\nTuesday afternoon April was wearing the lace crochless bodystocking she had on the previous day at lunch. Sandy did not know it was a bodystocking as April had a conservative blouse and skirt covering it. Sandy certainly didn't know it was crochless.\n\nWhat Sandy most certainly wouldn't have imagined was that the woman wearing it would right now be astride her sons nylon trapped penis and grinding herself to a nice orgasm.\n\nRonnie was stroking the cougars toned thighs and enjoying the texture of the lacy swirl pattern. He was gazing at her full bush sliding back and forth along his hardon or rather the pantyhose covering his hardon.\n\n\"That feels so great April. I'm getting close again.\"\n\n\"I'm even closer dearie. Hold off while I come and I'll give you a special treat.\"\n\n\"Can I fuck you? Really?\"\n\n\"No Ronnie, we will not. I've told you the reasons.\" April said. Her breathing was getting more rapid and she ground her clit down harder and increased her tempo.\n\n\"Will you at least suck it?\"\n\nThe thought tempted her. She hadn't had a cock of any age in her mouth in a very long time and his was so vibrant, youthful, and juicy looking. It was too close to sex though and she was afraid if she crossed that boundary her pussy would follow shortly. The image of this youngster blowing off in her mouth brought her over the edge and she gushed with a very satisfying cum, soaking his nylon encased cock.\n\n\"Whew! That was fabulous Ronnie.\" April said as she rolled off his abdomen with a satisfied sigh.\n\n\"You are really learning control. If you can delay your orgasm while your favorite fabrics are touching you that is quite the accomplishment. You will make someone very happy young man. Are you sure there are no girls your age that would be able to inspire you?\"\n\n\"There is one who goes to my third period class. Her name is Susie.\"\n\nRonnie had answered this question while watching his mom's friend strip off her sexy outfit and put on another pair of pantyhose. This pair had a crotch dammit. He wanted to ask her, even beg her to suck him. He was so close and they had been playing for over an hour. He hadn't come once and she had gotten off several times. She had let him examine her pussy with his hands and shown her all about how a woman likes to be touched down there. She showed him how to play with her little button she called her clitoris. She had let him finger fuck her while she played with her clit herself. She was so smooth and tight inside. It would feel great around his cock. He just knew it would. When he had tried to get his head between her legs to taste her she had pushed him away.\n\n\"No Ronnie. That's too much like sex and I couldn't face your mother.\"\n\nShe sure had a weird sense of what was and wasn't sex but he felt he better play along to get what he could get. \n\n\"What makes you like Suzie?\"\n\n\"I dunno. I guess because she wears stocking a lot and has nice legs.\"\n\n\"Have you talked with her?\"\n\n\"A little. She's pretty shy. She was new to the school this year.\"\n\n\"Ronnie. I'd like you to stand up and take off those hose for me.\"\n\n'Oh boy', he thought. Maybe now I'll get my dick sucked. He peeled off the sheer black pantyhose with a little difficulty as his precum and her juices had thoroughly soaked the front panel.\n\n\"Now put these on and you'll get your treat.\" April said, handing him a new pair of crotchless lacy white pantyhose. After complying, he was standing and his erect teenage penis was bobbing at April's eye level as she sat on the carpet before the aroused youngster. He could feel her hot breath on his cock when he inched himself a little closer.\n\n\"Now close your eyes and let's talk a little about Suzie. You're going to feel some wonderful sensations on your cock and I'm going to want you to imagine her.\"\n\nIn truth April was a little jealous at the mention of another female of intrest but the small part of the psychologist inside her that was still operating in this frenzied state knew that it was much more appropriate for Ronnies attentions to be directed to someone his own age.\n\n\"What kind of stockings does she wear?\"\n\n\"Regular black most of the time. No sexy patterns like yours.\"\n\n\"Does she wear skirts?\"\n\n\"Yeah.\" He jumped a little as he felt something contact his cock. He cracked an eyelid to see that April was running a stocking over his prick. The touch was deliciously delicate and some of his precum decorated it when it passed over his head.\n\n\"Are they short skirts?\"\n\n\"Sometimes. Sometimes below the knee with a little slit. I sit next to her and I can see most of her thigh.\"\n\n\"Does she have a boyfriend?\"\n\nApril had each of her hands inside a different kind of stocking as she asked this and had started to give Ronnie an occasional squeeze and tug as the questioning went on. She would change out stockings after a short while so that he would get a chance to feel all kinds of textures on his swollen prick.\n\n\"I'm playing with your cock with all different kinds of stockings Ronnie. You'll have to tell me what feels best. Why do you think Suzie doesn't have a boyfriend? Is it because she's shy?\"\n\nApril was continuing her stocking covered handjob with these questions and Ronnie was answering as best he could given his hyperaroused state.\n\n\"A little because she's shy. Some of the other girls and guys make fun of her because she has a lot of acne and she wears braces. Also she doesn't have a lot on top.\"\n\n\"You mean breasts? I don't have a lot on top either Ronnie.\"\n\n\"You have more that she does and you don't have bad skin.\"\n\n\"I did when I was her age.\"\n\nApril remembered her high school days and thought Suzie seemed to be experiencing the same kind of awkward teenage rejections she had felt in her day. \n\n\"Is she your age? Eighteen?\"\n\n\"I guess so. She's a senior so probably so. Like I said I haven't talked with her much.\"\n\n\"You just like to look at her legs?\"\n\nRonnie was looking at April's legs now as he had his eyes open to be able to see her stocking covered hands playing with and jerking off his cock. She was squatting on her heels before him and was still eye level with his cock. Oh how he wished she would take him into her mouth.\n\n\"That one feels the best. Oh God I'm close.\"\n\nApril was jerking him with a fine black silk stocking on one hand and teasing his balls with a fishnet stocking on the other hand.\n\n\"Go ahead dearie. Shoot it. Think of Suzie legs and shoot your jizz for m...\"\n\nHer sentence was cut off by a blast of his seed firing into her open mouth. She jerked her head back and swallowed. His further blasts continued and coated her face and hair.\n\nShe kept jerking his dick until he was spent and when he looked down and saw her come covered face he said. \n\n\"I'm sorry April. I didn't mean to...\"\n\nShe cut him off. \"It was my fault Ronnie. I was in the line of fire after all and I had built you up to that big load. I'm going to go into the bathroom and clean up a bit. Why don't you sit on the bed and work that thing up again. Keep the crotchless pantyhose on. I'm going to show you a position for fucking that most women enjoy. If you ever get a chance with Suzie\n\nI'm sure she'll enjoy it.\"\n\nWhen April went into the bathroom to shower off his cum Ronnie sat on the bed and stroked his immediately re-erect penis. Finally getting to fuck. He couldn't wait.\n\nApril showered off the cum and then masturbated herself to an earthshaking orgasm. She almost lost her balance and had to lean on the shower door. \n\nWhen she got out and dried off she put on a pair of nude pantyhose. Over this she put on another pair which she had altered slightly. She had cut a small hole in the crotch through which his penis was supposed to slip. It would offer more friction to him than a full crotchless pair would have and the intact pair underneath would prevent his accidentally slipping inside her. She had prepared several pairs in this manner so that she could teach him various positions for sex in the weeks to come without breaking her promise to herself.\n\nWhen April entered the bedroom again and Ronnie could see that she was not naked the disappointment on his face was palpable.\n\nShe joined him on the bed and getting on all fours facing the headboard she invited him to get on his knees behind her.\n\nThere was a large mirror above her dresser from which the two of them could observe all of what was about to happen from a side view and she hoped it would enhance his excitement. She knew it would hers.\n\n\"Line that nice cock of yours Ronnie with my pussy hole. There is a small hole in the pantyhose which it should fit through. I have another pair underneath so you will feel the heat and wetness of my pussy but you won't go inside. That would be breaking the rules.\"\n\n'Fuck the rules', he thought, but he said. \"Ok April. Like this?\"\n\nHe placed the head inside the narrow slit in the hose while she held it open with two fingers. It hugged his length when he slid forward and the top side of his prick rubbed agaist her moist nylon covered gash.\n\n\"Yes!!\" She hissed. \"Just like that. Now pump back and forth. This is called doggy style. Most women love it. Take my hips and make belief it's Suzie and her pussy you are going in and out of. You can't fuck my pussy but you can fuck my pantyhose. Now do it. Fuck my pantyhose and make me come again.\"\n\nThey both watched in the mirror as he sawed his hips back and forth and fucked her pantyhose. The sight was very kinky and erotic. The teenage son of her good friend dressed in a sexy pair of crochless pantyhose fucking her doggy style. She had a hand pressed up agaist his cock while it continued it's humping motions between the layers of nylon. This kept some pressure against her clit with his fucking motions. His calves were rubbing against hers while he was fucking her and she could remember fondly a previous lesbian experience when a lover had fucked her while wearing a strap on. She and the other woman had stockings on and the memory of the swish swish of nylon against silk from that long ago time made her smile.\n\nRonnie was able to last quite a while after his recent explosion. It was quite the load and very tasty. She had managed to get cum in her mouth without blowing him. \n\n'Glad I resisted that temptation' she had thought to herself.\n\nEventually after another good orgasm for her April could feel him thrusting harder and reached between their bodies to feel that his balls had tightened up. \n\n\"Go ahead baby. Blow that load into Suzie. Fill her up. She wants it. Wants it bad.\"\n\nRonnie grunted and ejaculated. His sperm coating the space between the pantyhose. \n\n'Maybe this wasn't real fucking but it's not bad.' He thought to himself as he fell back in exhaustion on the bed.\n\n*******\n\nThe next two weeks went on in a similar way. Sandy and April having their weekly lunches. They talked about men and April gave her updates on her progress with Ronnie. Very sanitized reports.\n\nApril continued her non-sex sessions with Ronnie. She taught him various positions for sex, always being careful to have two pairs of pantyhose on to prevent accidental penetration.\n\nHe enjoyed what they were doing but kept begging and asking for more.\n\nRonnie was being more open with his mom and related that things were going well with April and that he felt he was understanding a lot of things about himself. He told her that with April's encouragement he had asked out a girl from his school for a date and she had said yes.\n\n\"That's wonderful!\" His mom had said. \"What's her name?\"\n\n\"Suzie. We're going to a concert week after next.\"\n\n\"I'm so happy son. It looks like your sessions with April are paying off. They've given you confidence.\"\n\n'More than that' Ronnie thought but he said, \"It sure has mom.\"\n\n*******\n\nOn a Wednesday afternoon, three days before Ronnie was to take Suzie out on their first date and the day before his last scheduled session with April, Sandy made a disturbing discovery in his room.\n\nApril was home when her cell phone chimed with Sandy's call.\n\n\"Hi Sandy. How was your day?\"\n\nSilence.\n\n\"Can you hear me? Are you there?\"\n\n\"Yes. I'm here. I'm a little embarrassed about what I have to tell you is all.\"\n\n\"What is it? We've shared a lot of embarrassing things. You can tell me anything.\"\n\n\"Well, um I was cleaning the house and I ahh...\"\n\nA long pause.\n\n\"Go ahead. You were cleaning the house and you...\"\n\n\"I found a paper bag under his bed.\"\n\nOh no! April's heart sank as she knew where this was going. She knew what was in that bag. She was hurriedly preparing an explanation to excuse her wanton behavior when Sandy began speaking again.\n\n\"I'm almost afraid to say what I found in the bag.\"\n\nSilence from April.\n\n\"There were a lot of stockings and he had obviously used them to masturbate with.\"\n\nMore silence from April.\n\n\"I thought they might be mine but then I knew they were not. I had been pleased that he had been leaving my underwear drawers alone these past few weeks. I was sure your helping him was getting him to outgrow jerking off on his mother's stockings but now I find this!\"\n\nApril was desperately trying to formulate an answer to what she was sure was going to be an accusation leveled against her when Sandy spoke again and relief washed over her.\n\n\"I'm so sorry April. Obviously Ronnie has been going through your things and helping himself to them. I recognized one pair in particular that you wore to the cafe. He must have invaded your privacy when he found an opportunity.\"\n\nApril could hear sobbing coming from Sandy's end and quickly morphed from someone needing bailing out into her more comfortable role of rescuer.\n\n\"There, there. It's not what you think. He didn't steal those things. I gave them to him. We talked about his fixation on the stockings and such and I recommended desensitaztion.\n\nI told him to use them for a while but to work towards being with a real female.\"\n\n\"You gave them to him?\"\n\n\"Yes I did. It seems to have worked because he's going out on a date this weekend.\"\n\n\"I know. He told me.\"\n\n\"Our last session is tomorrow. Don't say anything about the bag or the contents, he may have forgotten he has it. He has made great progress. I'll tell him to throw them away after our session.\"\n\n\"Can they be slavaged? Some of them look expensive.\"\n\n\"I couldn't wear them again after what he's done with them. It would be too weird, almost incestuous. Consider them tuition. You can pick up the tab for lunch for the next few months and we'll call it even.\"\n\n\"Oh April.\" Said Sandy with very obvious relief in her tone, \"Thank you again for taking care of my boy. You're the best friend ever.\"\n\n\"No. Thank you dear. It's been my pleasure.\"\n\n*******\n\nThursday afternoon Ronnie arrived and had the paper bag holding her crusty stockings.\n\n\"Your mother found those under your bed.\" April said pointing to the bag.\n\nRonnies face fell and reddened.\n\n\"Don't worry. I covered for you. For us. I told her I had given them to you and that they were part of therapy. Now you have to make my promise have meaning by never again taking her stockings. Can you promise that?\"\n\n\"Yes.\"\n\n\"Good. Are you excited about your date with Suzie?\"\n\n\"Yes. We've talked about it some during lunch period. I think she's kind of new to dating too.\"\n\n\"You will have to be very gentle and slow with one another. Touch her very gently and read her signals as to what to do next. You have some ability to do that as I well know from our play sessions together.\"\n\n\"I can be slow.\"\n\n\"If you do have sex remember to wear a condom. I would have had you wear one if we had any penetration because I could still potentially get pregnant but since you were just fucking my pantyhose that was like the condom. You wouldn't want to get her pregnant.\"\n\n\"If we get that far I will. Where can I get some?\"\n\n\"It just so happens I bought some for you. Here, consider them a graduation from therapy gift.\" She said as she handed him the box of prophylactics.\n\n\"Can I try one out with you?\" Ronnie said with a hopeful grin.\n\n\"No you cannot and I will not suck you either. We have gone over that ground and I want to keep those boundaries.\"\n\nShe looked at his disappointed face and added.\n\n\"We can try one more practice with you fucking my pantyhose in the position of your choice.\"\n\n\"I choose doggy style. That felt the best when you were playing with my balls. Can we practice kissing a little too? I don't want to make a fool of myself when I first try it with Suzie.\"\n\n\"Well ok.\" April answered with very little reluctance, \"For Suzies sake.\"\n\nThey sat down together on the couch and engaged in a serious make out session as two teenagers might which was somewhat appropriate as one of them was actually still a teenager. She taught him how to kiss, softly, then deeply and passionately. She allowed him to unbutton her blouse and first fondle and then put his mouth on her boobies.\n\nWhen he ran his hand up her leg and reached her dampening pussy she did not stop him.\n\nShe was wearing silk stockings, a garter belt, and no panties for this occasion.\n\nThere was only a brief hesitation on her part when he asked if he could kiss her down there.\n\nShe had been hoping he would ask and was rationalizing in her mind that it would be to Suzies and any future girlfriends benefits if had a little training in cunnilingus. She pulled off her skirt in response to his request and slid her ass to the edge of the sofa.\n\nRonnie got down between her legs and she put a stocking covered calf over each of his shoulders and pulled him gently into position. Her former bush was gone as she had shaved her pussy for this occasion. She had done it this morning in the shower and had masturbated herself to a couple of nice orgasms in the process.\n\nShe had been hoping very much that he would ask to taste her. She had denied him before but it had been ages and ages since she had been eaten and the very anticipation of his tongue on her pussy was too much for her to resist. \n\n\"Wow! You're all bare down there.\"\n\n\"I thought it would be easier for you to see what you were doing.\"\n\nWhen she said that Ronnie knew that she was eager to be eaten and he dove right in.\n\nFor the next thirty minutes April taught the young man the basics of eating pussy. He was a natural and she managed to have one small orgasm and one larger one.\n\nRonnie was very aroused and playing with his hard cock which he had extracted from his pants. When he rose up and tried to position his cock for entry she pushed him away.\n\n\"No means no young man. You are going to have to learn that. I won't leave you frustrated. Let's go upstairs and let me put on my pantyhose and you can fuck those one last time. I'll play with your balls just the way you like and you can squirt all over.\" ",
        "They hurried upstairs and Ronnie stripped naked. April did as well but then reached into a drawer and pulled out a pair of sheer black pantyhose and put them on. She pulled out a second pair and checked to see that there was the small slit cut in this pair for his dick to go through. There was. \n\nAs April snaked her body into this second pair Ronnie jerked his cock and admired her very shapely legs.\n\nApril hopped onto the bed and getting on all fours looked over her shoulder and said to Ronnie. \"Go ahead big boy. Show me what you got. Suzie is waiting.\"\n\nRonnie worked his cock into the opening and then began to hump the space between the nylons. April kept one hand between their legs to increase the pressure of the upper side of his cock against her and increase the pleasure for both of them. April was approaching an orgasm when she thought she felt something funny. It felt like skin against skin with no nylon between. Was it possible that in her haste she had put on two pair of pantyhose with slots cut in them. A second later the answer came when Ronnie in his frenzied humping managed to slip into that slit and was now fucking the outside of her pussy lips directly with no nylon barrier to separate them. Instantly he realized the different feeling and guessed what had happened. \n\nHe pulled back and lined himself up with her opening. Before his intentions could sink in to April his teenage meat did. It sank in right to the root and he stayed there bathing his cock in the luxurious feeling of her velvety smooth box.\n\nShe had been reaching between her legs to stimulate her clit as well as press against his cock so she was in no position to block or delay his penetration.\n\n\"Ooohhh... wow! You feel so good around me.\"\n\nApril had to admit to herself that he felt so very good inside her and she was overdue for some fucking, real fucking.\n\n\"Does it feel good for you?\" he said, gripping her hips and pushing himself into her slick channel until his balls were pressed up against the nylon.\n\n\"Yesss...\" She admitted with a hiss. \"It feels very good. Now hold real still so you don't come.\" \n\nApril wanted to come however and she reached inside the waistbands to frig her clit. In a few seconds her pussy was spasming in delight around his cock and that in turn set him off.\n\n\"No! No!\" She cried out when she felt his cock swell and then begin to spurt out his prodigious load of baby batter. It splashed against her inner walls and triggered another orgasm. She had thought that if he didn't come inside her she could retain some semblance of the charade that this was not sex but now that illusion was gone.\n\n'Oh hell. In for a penny in for a pound' she thought to herself as she slid forward off his cock and flipped Ronnie onto his back.\n\nHe gasped with delight when she lowered her mouth to him and started to clean off the sticky mess they had made and kept at it until he was fully turgid again.\n\n\"Oh my God April, that feels great.\" Ronnie managed to say while she was blowing him expertly.\n\nShe then took a few moments to stand up and peel off the two pairs of pantyhose and put back on the black stockings with garter belt. She put on the sexy open toes pumps and lay on her back in the middle of the bed beckoning him to get up on top of her.\n\n\"Come on sweetie. Bring it to me. We have all afternoon and this is just one more thing we're going to have to keep between us, ok?\"\n\n\"I won't say anything.\"\n\n\"Good. Now fuck the pantyhose. Fuck me instead.\"\n\nAnd he did. All afternoon long."
    ],
    "authorname": "ualmech88",
    "tags": [
        "pantyhose",
        "mature",
        "virgin",
        "denial",
        "teasing",
        "stockings",
        "nylons",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/fucking-pantyhose"
}