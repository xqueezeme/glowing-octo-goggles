{
    "title": "Cooper Family Pride Pt. 01",
    "pages": [
        "Author's note: Please read! \n\nThis story contains themes of revenge, incest, Dominance &amp; submission, lesbianism, gay/bi-curious and, of course, mind control. And likely a lot more by the time I get to the end. It's definitely a cross genre story, but belongs in this category. If these themes offend you, please stop reading now. \n\nThis part is very lengthy. I'll likely submit the second part in a similar format and length. \n\nThis is a departure from my normal writing style. This story is by far the most absurd thing I've ever written. It is a bit over-the-top, bordering on parody/comedy at times. I consider it stupid, childish, amusing and incredibly fun to write. I realize that this may not be for everyone. \n\nLastly, all characters are over 18 years old. This is purely a work of fiction, and any resemblance to real people is purely coincidental. I encourage everyone to comment and vote. A heartfelt thank you to all my beta readers! You're all invaluable. \n\n\"I laugh at absurdity hardest, then stories, then observations, then bearded men on roller skates.\" -- T.J. Miller \n\n****** \n\nCooper Family Pride, Part 1 \n\nor, How The Coopers Learned To Stop Worrying And Love The Dick \n\nor, Danny Dugan Saves The World And Fucks Some Fine Ass Bitches \n\n****** \n\nDanny Dugan held his breath under the water as little air bubbles escaped his lips. \"Come on!\" He gurgled, his voice garbled. \n\nWhoosh! The toilet flushed draining around his head. He kicked his feet, which were being held up by two football players, Brett Dereckson and Jason Cooper. Then the water began to fill the bowl again covering his nostrils. \n\n\"Come on, Jason! What did I ever do to you? Please stop! You had your fun!\" Danny pleaded before taking a deep breath as the water covered his mouth, submerging him. \n\nWhoosh! He gasped for air. \n\n\"I saw you talking to my girl.\" Jason hissed. \"You don't get to talk her.\" \n\n\"You're so fucked, Dugan! I bet he jerks off to her at home, bro!\" Brett prodded Jason along. \n\n\"But... she's in my AP Bio class. I have to talk to her. Mr. Hutchins made her my lab partner.\" Danny tried in desperation to explain. \n\n\"No loser fucking nerd is gonna talk to my girl! You got it?!\" Jason stated more forcefully. \"Change lab partners or this is gonna be an everyday occurrence or much worse. Much, much worse.\" \n\nJason pawed at the pockets on Danny's jeans until he found his wallet. He opened it up and removed the forty-seven dollars inside, pocketing the cash. \n\n\"Aw, come on! Not my money!\" \n\n\"It's a douche tax. Don't talk to Beth, Fuckface!\" Jason laughed, throwing the wallet in the toilet as the water covered his head again. \n\nWhoosh! Danny felt the water flush one last time as his feet dropped to the tile floor. \n\nThe door slammed closed with a thud as Brett and Jason exited the restroom, laughing. Danny reached into the toilet and fished out his wallet trying to shake the water off it. He sat back on the dirty floor and cursed Jason Cooper for being such an asshole. Was it his fault that he got paired with Beth as a lab partner? It's not like she would look twice in his direction anyway. \n\nDanny used the hand dryer on the wall to dry his hair and the parts of his shirt that had gotten wet. Unfortunately, this wasn't a new experience for him. He'd been bullied his entire life. The only thing that ever changed was the creativity of his tormentors, although today wasn't as creative as usual. \n\nDanny had accepted his unremarkable life. He wasn't blessed with athletic talents like Jason Cooper. He wasn't devastatingly handsome either. Danny was an incredibly average looking kid with a thin frame and a crooked smile. He wasn't from a rich family, and instead grew up in a working class home. And as such, with so much working against him, he accepted his low social status and remained mostly introverted. \n\nHe gathered his backpack and trudged out of the bathroom already late for his next class. \n\n****** \n\nFriday night and the school bleachers were packed solid. Jason Cooper led his team on an offensive drive against Montville High. The crowd roared and cheered for their home team. Football was a big deal. And there were high expectations that Jason would help the Cougars win State this year. \n\nGreg Cooper watched from his usual seat, holding court. Everyone knew the Coopers. They were as close to royalty as a family could get. Greg made a fortune in the financial crisis buying up foreclosed homes and then another fortune in commercial real estate, building skyrises and huge apartment complexes. Despite his egregious wealth, he kept his kids in public school. It'd been good enough for him. He felt it was good to see the people that didn't have anything. The ones that were hungrier and more driven for success. \n\n\"Greg, couldn't you just talk to the coach about letting Joey get a little time on the field?\" Phil asked as politely as possible. \n\n\"We need to win this game, Phil! It's the beginning of the season! We need to make a statement that the Cougars are gonna crush this year. We can't afford to lose. I'm sorry.\" \n\n\"But... we're up 47-7 and the game is almost over...\" Phil pointed to the scoreboard. It was a massacre. \"...I'm just saying with Joey as a second string QB... he's not gonna see any playing time...\" \n\n\"He's on a winning a team! Maybe he should stop whining.\" Greg spotted the boy sitting on the bench kicking his feet along the grass, not even paying attention to the field. \"There! Look at him. He looks perfectly happy. See?\" \n\nPhil looked down at his son. Joey was now staring at the cheerleaders and making the international sign for a blowjob, moving his fist towards his mouth and sticking his tongue in his cheek. Phil cringed knowing Greg's daughter, Mandy, was the head cheerleader. \n\n\"Yeah...\" Phil said, embarrassed. \n\n\"Phil...\" Greg patted him on the shoulder. \"... if your kid so much as talks to my daughter I'll cut his dick off, okay?\" He looked back at Joey still making the motion. \"That's disgusting! Come on! My princess does not need to be corrupted by that kind of foul behavior.\" \n\n\"Sorry, Greg! He's a teenager. What do you want me to do?\" \n\n\"I'll cut his dick off.\" Greg repeated flatly, turning back to the game. \"You really want Joey to get some extra playing time? Maybe we can make a wager...\" He looked back with a playful glint in his eye. \n\nPhil threw his hands up. \"Fuck that. Everyone knows you don't bet a Cooper.\" \n\n\"Suit yourself.\" Greg said, disappointed. \n\nDanny Dugan walked behind the bleachers listening to the excitement. He didn't really like football. Most of the guys on the team picked on him. There wasn't anything else to do on a Friday night, and he didn't want to be at home with his asshole dad. That was worse. So, he usually hung out alone and watched people, imagining what their lives must be like. It was better than jerking off in his bedroom. \n\nHe made his way around to the concession stand. There was a huge line for one register. Two moms were gossiping off to the side. \n\n\"Does she even realize the irony of it?\" \n\n\"She must! And I swear she's not wearing a bra. I think she does it on purpose.\" \n\n\"I'm surprised her husband let's her wear that. Last year, when we were playing Morristown, a dad from the other team chatted her up and started flirting with her. Greg punched the guy in the face. There's being protective of your wife and then there's freakish controlling ownership. It's creepy.\" \n\nDanny glanced over to the register and saw the subject of their conversation. It was Libby Cooper, Jason's mom. She was wearing a Cougars t-shirt. It was bright red like their uniforms and had a low v-neck cut that showed some serious cleavage. She also wore tight cut off jean shorts that hugged her perfect ass. Danny understood now. She was a cougar. The irony was not lost on him. He adjusted his dick, which stirred at the mere sight of her. \n\n\"Well at least she brings in the sales.\" \n\n\"Whatever. Miss perfect. With her perfect fucking family and perfect house and perfect body. She can fuck herself. I bet she goes home and drinks a bottle of wine like the rest of us and hates her life.\" \n\nThey snickered. \n\nDanny didn't want to wait in line to get food so he walked back along the sideline toward the bleachers. The game clock only had a few minutes left. \n\n\"Hey, Danny!\" \n\nHe heard his name and looked around. No one usually talked to him. It startled him at first. Then he turned and saw Mandy Cooper in her cheerleading outfit holding her pompoms. She waved to him and ran forward. \n\nDanny looked around and then pointed at himself. \"Me?\" He asked, unsure she actually meant to speak with him. \n\nShe giggled. \"Yeah.\" She said as she got closer. \"I don't usually see you at the games.\" \n\nDanny had never spoken more than a word to her before in his whole life. She was a goddess--Jason's twin sister. He was suddenly nervous. \n\nA beautifully thrown spiral football launched through the air and found its target with perfect accuracy. Danny didn't even see it coming. The ball struck him directly in the face and knocked him off his feet. He hit his head on the edge of the bleachers on his way down. He was out cold. \n\n\"Fuckface!\" Jason waved from the field and then blew him a kiss that he never saw. \"Oh yeah! Direct hit!\" \n\nDanny opened his eyes as a random parent gently nudged him. \"Kid? Are you alright? You took that ball right to the face and smacked your head pretty good.\" \n\n\"Huh? Whaaa?\" He looked around, his eyes slowly coming into focus, realizing that everyone was staring at him. It made him burn with embarrassment. \"Uh... yeah... fine... I'm fine... thanks...\" He scrambled to his feet, unsteadily, and rushed off. \n\n\"Hey! You probably shouldn't be getting up quite yet. You should have that looked at!\" The parent called after him. \n\nThere was some mild clapping as the game resumed. Danny cut around the back of the concession stand, rubbing the back of his head, still dizzy. He could feel the lump forming. He headed along the high retaining wall on the far side of the field where the short cut was back to his house. Fucking Jason Cooper! What a fucking asshole! His vision was blurry and he tripped, slipping off the edge of the wall, falling ten feet to the ground, rolling down an embankment, and smacking his head a second time against a rock. \n\n****** \n\nDanny opened his eyes. He was laying in the dirt at the edge of the woods. The bright stadium lights around the field had been shut down. He pulled out his phone and checked the time. It'd been hours. He rubbed his head again. It was ringing loudly. Danny walked home holding a bag of ice to the now sizeable lump. He'd gotten it from a discarded Styrofoam cooler next to the field. His headache was nearly unbearable. It'd been the worst day ever. \n\nHis dad was on the couch when he finally got there. He had a six pack of Pabst blue ribbon watching some stupid show about lost Amazonian tribes. He was slightly drunk. It was a standard Friday for the most useless man ever shat into the world. \n\n\"I thought I told you to mow the fucking lawn after school.\" He slurred as soon as he heard the door shut. \"Where the fuck have you been?\" \n\nDanny's head was killing him. It'd been a really bad day, and this was not something he could handle. \n\n\"Why don't you go mow the fucking lawn, asshole!\" Danny shouted back, furious. \"And then go fuck yourself. Deadbeat!\" \n\nHe immediately regretted it and ran to his room before his dad could do his worst. He expected the door to burst open any minute. It was just a matter of time. Talking back wasn't something he did. Ever. Danny wasn't sure what came over him. It was this goddamn headache! Fuck you, Jason Cooper! \n\nTwenty minutes later, the knob turned and his mom entered. \"Everything okay, sweetheart?\" \n\n\"Bad day. That's all.\" Danny replied. \"Some shit at school. I got embarrassed in front of everyone at the football game tonight. And dad was giving me shit again.\" \n\n\"Speaking of which... Why is he mowing the lawn?\" \n\n\"What do you mean?\" Danny asked. \n\n\"He just went outside without saying anything and started mowing the lawn.\" She replied. \"It's almost midnight. That's weird, right?\" \n\n\"Yeah.\" \n\nShe looked back at the door like something wasn't right. \"Really weird.\" She repeated, shaking it off. \"Okay, well I'm sorry you had a bad day. I was worried about you. You're home late. You should call if you're going to be out this late. Do you want to talk about any of it?\" She asked with a mother's empathy. \n\n\"I'm sorry. I guess I lost track of time. I just wanted to be alone.\" Danny replied, fibbing a little. He didn't want to worry her about his head. \"Don't worry. I'll get over it.\" \n\nShe kissed his forehead. \"Love you, son. There's always better days ahead. Sleep well.\" \n\nLori quietly left and shut his door. \n\nDanny listened to the sound of the mower in the distance. It was strange. His dad always made him do the yard work. At least he wouldn't have to do it tomorrow, he thought. The noise couldn't stop him from sleeping. He was bone tired and his head throbbed, and in no time at all, he was out. \n\nHe was woken up a short time later to his mother shouting. His parents were fighting again. It sounded worse than usual. He ran down the hallway to make sure she was alright. \n\n\"What in god's name do you think you're doing? Oh my god! That is disgusting!\" \n\n\"I have to! I have to do it! You don't understand!\" \n\nDanny pushed open their bedroom door. His mom was standing next to the bed in shock while is dad was pushing a dildo up his ass. It was an awful scene. \n\n\"What do you mean you have to? Please stop! Stop it!\" \n\nHis dad looked really upset like he didn't understand what was happening. \"I had to mow the lawn and fuck myself! Mow the lawn and fuck myself!\" He cried. He actually cried. He had tears running down his face. \"Danny told me to!\" \n\n\"What?\" Danny asked, confused and disgusted. \n\nHis mother was terribly confused. \"What did you say to him?\" She bawled at her son. \"Why would you do it?\" She asked bewildered at her husband. \n\n\"I don't know! I don't know!\" His dad shouted back still pushing that latex toy into his rear. \n\n\"Just stop it!\" Danny screamed, overwhelmed. \"Stop it right now!\" \n\nHis dad slowly removed the offending object, red-faced and uncertain of why he had done it. \n\n\"What the fuck is wrong with you?\" His mom cried. \"You just stop when he says but not when I say it?\" \n\n\"I... I...\" His dad stuttered dumbly. \n\nDanny couldn't believe it. His head was searing again. What was his dad trying to say? That he had to listen to his him? It didn't make any sense. \n\n\"Everyone relax!\" He demanded. \"It's fine. Just forget about it! Stop fighting!\" \n\nLori turned to her son with an utterly confused expression. \"Danny? Is something wrong? It's late. What are you doing in our room?\" \n\nDanny was about to answer when he noticed his father buttoning his pants. His dad kept staring at the dildo with a curious expression. He reached back touching his ass. It felt like something had happened. He eyed the toy again as if it had something to do with it. He couldn't remember. But it seemed convenient that it was present and he felt like he'd been violated. It was making him increasingly uncomfortable. \n\n\"Get outta here, you little shit.\" He sputtered. \"I... I'm going out for some air.\" He walked past both of them with an awkward stride. \n\nDanny was freaking out. Had his dad been telling the truth? His dad felt compelled to do what he told him. Even now, it appeared that his simple 'forget about it' was taken literally. \n\nLori saw the dildo on her bed. She panicked. She didn't remember taking it out of her drawer or using it. But there it was! And it was in full view of her son! \n\n\"Oh my god!\" She rushed over trying to push a pillow over it. \n\n\"It's nothing. It's not a bother.\" Danny said. \"There's nothing to be embarrassed about.\" \n\nShe gave an awkward giggle. \"Sorry.\" She said picking it up. \"I left my dildo out! I didn't mean for you to see that.\" The latex toy waved in the air between them. \n\n\"No worries.\" He said. \"Go back to sleep.\" \n\nDanny saw her crawl back into bed. \n\n\"Mom?\" He asked before he turned to leave. \"How often do you use that thing anyway?\" \n\n\"My dildo? As often as I can, sweetheart.\" \n\nDanny could believe she answered that question. \"That sounds good. I'm gonna be out this weekend doing things. You don't mind, right?\" \n\n\"No, I don't mind at all.\" She replied. \n\nDanny nodded and then returned to his room where he could more comfortably freak the fuck out. It wasn't possible! Was it was possible? Maybe this was one of those vivid dreams, he thought. The ones that felt so real that it was nearly impossible to discern them from reality. What other explanation could there be? He felt the bump on the back of his head. What happened to him tonight? \n\n****** \n\nIt was Monday. Danny sat in the cafeteria alone. He'd spent the entire weekend losing his shit. It was the most incredible thing that he couldn't tell anyone. It was definitely real. He could control people. He'd proved it over and over. And then he decided that he couldn't do anything with it, not yet at least. It just kind of scared the hell out of him. So, he sat alone and kept to himself, same as always. \n\nThe social caste system of high school was on full display. Every group and subgroup of students huddled together at their own tables. The football team existed as its own cool bubble within the larger cool social circle, and Jason Cooper was its de facto leader. Danny loathed everything about him. \n\nMandy Cooper stopped at Danny's table holding her tray of food. It was the first he'd seen her since the game. She'd been blessed with all the same genetic gifts as her brother with none of his personality. Her long brunette hair fell in thick sheets down her back. She had the most innocent brown doe eyes and soft skin. Her lips were naturally plump with pink lipstick. She had on a plaid skirt that stopped just above the knee and a white knit shirt. Danny nearly groaned out loud. She made everything look like sex. \n\n\"Hey, Danny.\" She said, sweetly. \n\n\"Uh... h-hi...\" He stammered dumbly. \n\n\"I'm sorry about what my brother did at the game. It looked like you got really hurt. I'm so sorry.\" She apologized. \"He can be such a dick. You didn't deserve that.\" \n\n\"It's... uh... yeah... don't worry about it... I've had worse... you know?\" \n\nShe gave him a little smile. \"I'll try and talk to him if you want. Get him to stop picking on you.\" \n\n\"No... that's fine...\" Danny replied. \"...I'll be fine. You'll just make it worse.\" \n\n\"Okay. Well... Enjoy your lunch.\" \n\n\"Yeah... Uh... you too...\" \n\nDanny watched her walk away clearly smitten by the exchange of words until he saw Jason walking in his direction with a pissed expression on his face. \n\n\"Hey, Fuckface.\" He hissed as he approached. \"What's your malfunction? You think you can stare at my sister's ass like that?\" \n\n\"What? No. She stopped to talk to me for a second.\" \n\n\"You don't talk to her. Ever.\" \n\n\"But... that's like only the second time she ever talked to me... I didn't... ugh...\" Danny was clearly annoyed. \"Have you told her about that rule? I don't think any of these people I'm not allowed to talk to realize that I'm not allowed to talk to them.\" \n\n\"What?\" Jason asked. \"What the fuck difference does that make? I'm talking to you. I'm telling you.\" \n\n\"Just leave me alone, Jason. Please. I've never done anything to you. Why do you insist on picking on me?\" \n\nJason picked up Danny's can of soda and poured it over his tray of food soaking everything. \n\n\"Seriously?!\" Danny sighed in frustration. \"I'm asking you politely to stop.\" ",
        "\"Or what?\" \n\n\"Or I'll be forced to retaliate.\" \n\nJason laughed out loud. \"You want to fight?\" \n\n\"No. I couldn't fight you. I'm not dumb.\" \n\n\"Then what are you gonna do, Fuckface?\" \n\n\"Well...\" Danny waved him closer. He whispered ominously. \"I can fuck up your world. I can control minds.\" \n\nJason laughed so hard that he actually had tears in his eyes. \"Okay! You can use your geek mind ray on me! I'm ready!\" He held his arms outstretched as if he expected to be teleported somewhere. \n\nDanny stared back at him blankly. \"I'm just asking you to leave me alone. Okay? What's wrong with that?\" \n\n\"You're a fucking retard, Fuckface.\" Jason replied, still laughing. \"Fuck, man! That was like the funniest shit I've heard all week.\" \n\nHe turned to leave but leaned back for a moment and slapped the end of Danny's soda soaked tray flipping it onto his lap. It was a disgusting mess. The cafeteria erupted in laughter as Danny stood up and walked out dripping mashed potatoes and gravy onto the floor. \n\n****** \n\nDanny waited in the office. The nurse was checking to see if they had any pants in his size in the lost and found. His were still wet with a few clumps of mashed potato on them. He wondered if he should've said anything to Jason about his power. He felt stupid. But Jason laughed in his face anyway so maybe it wasn't a big deal. He was just so angry with him. He wanted to use it so badly. \n\nMandy walked in and checked with the receptionist before taking a seat. \n\n\"Hey, Danny!\" She smiled and then frowned when she saw his pants. \"I'm so sorry about that.\" \n\n\"Why do you always apologize for him?\" \n\n\"I don't know?\" She shrugged. \"I don't like the way he is sometimes. I feel bad that this stuff happens to you. But he's my brother. We're Coopers.\" \n\n\"Coopers.\" He snorted derisively. \"What does that even mean?\" He muttered the question and then looked at her. \"Why are you nice to me?\" \n\n\"Because you're cute and you're nice.\" She said frankly. \"So, are you telling on him? That why you're here?\" \n\n\"Nah. That only makes it worse. They're checking to see if they have some pants I can wear.\" Danny replied, heartened by her admission. \"What about you?\" \n\n\"I forgot my uniform at home. My dad is driving it over for me.\" \n\nGreg Cooper pushed open the door to the office holding a garment bag. He was dressed in a business suit and looked every bit like his reputation. He saw his daughter talking to Danny in the waiting area. He surveyed the boy noting his soiled pants and his worn sneakers. He frowned slightly without giving it much thought. \n\n\"Princess!\" He said, giving his daughter a hug. \"Your mother had it dry cleaned. You should look perfect. A Cooper always presents their best self.\" \n\nShe walked toward the door with him. \"Thanks, daddy!\" Mandy turned back. \"Bye, Danny! I hope your day gets better.\" \n\nDanny blushed, smitten. \"Bye!\" \n\n\"Who was that?\" Greg asked her. \n\n\"That's my friend Danny. I think he's kind of cute.\" She admitted shyly to her father. They shared everything. \n\nDanny stepped closer to the door, listening as they walked away. He didn't know they were friends. He didn't know he was cute either. He was really taken with her. What would it be like to date Mandy Cooper? He smiled at the thought. His heart fluttered. \n\n\"Does that look like the kind of boy you should be friends with, princess? I like keeping you and Jason in public school. But you're better than these kids. You can do better than that one. You're a Cooper, princess. Remember the Cooper family pride! Did you see how he was dressed? It says a lot about a person.\" \n\n\"I'm sorry, daddy.\" She held his arm as they walked. \"I forget sometimes.\" \n\nDanny hung his head and slumped back in his seat. Even their dad was a dick. True to his reputation. The Coopers were assholes. \n\nThe nurse handed him a pair of brown checkered pants. \"This is all we've got.\" She shrugged. \n\nThey looked like they were from the seventies. \n\n****** \n\nDanny sat in his room reading. He had his head buried in the book How To Win Friends And Influence People. Stacked on his nightstand were copies of The Art of Seduction, Art of War, The Power of Habit, among others. He was trying to understand how people think. \n\nHe hoped that things would change at school. They hadn't. The abuse continued. It was endless verbal abuse on top of the few times a week he got shoved in a locker or pushed down the stairs. He kept it bottled up and took his licks, never using his ability. \n\nWhen he got home at night, it wasn't much better. His dad continued to be the world's biggest asshole that couldn't hold a job to save his life. Although, he kept his distance from Danny. There was something about that night in the bedroom that he couldn't explain and it haunted him. \n\nTheir situation remained uncomfortable. Money was tight. His mom tried to hold everything together as best as possible. She looked tired most of the time, and that made Danny feel bad for her. She deserved better. \n\nDanny held onto his big secret. He didn't dare share it with anyone. It had only been three weeks since he discovered his ability to control people, and he'd only done what amounted to parlor tricks in safe places where nobody knew him. He wanted to be cautious, and he found that it was trickier and more nuanced than it looked. He kept studying and reading about how the mind works in his spare time. \n\nWhile he promised himself not to use his new power on people around him, he wanted Jason Cooper to suffer. He couldn't handle looking at his pompous Cooper face. As a matter of fact, it was Mr. Cooper too. Him and his Cooper family pride that said Mandy was too good for a kid like him. Fuck the Coopers. \n\nDanny listened to his parents fighting for the umpteenth night in a row. A gift like this wasn't meant to be kept hidden. It was meant to be used. He wanted a better life for him and his mom. But if he was going to use it then he was going to make sure he mastered it first and developed a concrete plan. Something satisfying and fruitful. However long that took. \n\nHe looked back at all his books and then stood up pinning a sheet of paper to his wall. He wrote down the name Cooper and underlined it. Below that he wrote out each name: Greg, Jason, Libby and Mandy. Then he wrote his dad's name too. Then Brett Dereckson. All the people that made his life miserable and contributed to his suffering. He smiled to himself. They'd all get their comeuppance. \n\n****** \n\nIt had been nine months since the cafeteria incident. The school year was nearly over. It's amazing how people forget things so easily except those that suffer the trauma. Danny imagined that no one remembered the day he trudged out covered in potatoes and gravy and soda as they watched and laughed. He did. Vividly. And he remembered every single tortuous act that came before it and after it. He had kept to himself all year. He took the abuse that got doled out without complaint. He tried talking to Mandy a few times, who had blushed a deep crimson, and admitted honestly that her dad didn't approve. So, Danny Dugan kept his head down and focused all his anger and contempt on the source of his misery. There was his dad of course, the bullies at school, but mostly he hated the Coopers! \n\n****** \n\nJason Cooper was throwing the event of the year. His parents owned a huge home\u2014mega-mansion huge. The finished basement was flooded with teens partying and dancing. Music thumped harmonically as young bodies grinded against each other. Others huddled around a bar spiking their drinks with Jack Daniels and Smirnoff and whatever else they smuggled from their parents' homes. And the festivities spilled out through the huge sliding glass doors into the backyard and around the pool. \n\nJason walked through the throngs of guests like a seasoned host soaking up praise and adoration. There was a reason people idolized him. It wasn't just his good looks and athletic prowess, he also knew how to elicit envy and use his parents' resources to his advantage. \n\n\"Great party, bro! This shit is insane! Where's Beth?\" Garret Evans asked excitedly and slightly drunk. \n\n\"She's comin' later. Pace yourself. My folks said this can go as late as I want.\" \n\n\"They are so fucking cool. You're lucky, bro. My parents would never let me throw a rager like this. No fucking chance.\" \n\n\"What can I say? They're good to me. Speaking of which my mom is making more appetizers. I should go grab 'em.\" \n\nJason pushed through the guests to the basement stairs and went up to find his parents. It was surprisingly quiet once the door was closed. Only a faint thump from the bass in the speakers penetrated the floor and that faded as he walked toward the kitchen. \n\n****** \n\nLibby Cooper pulled a tray of homemade pizza bites out of the oven and set them on a cooling rack. She walked back into the living room with a glass of ginger ale. She was a very attentive host and wanted to make sure everyone had a good time at Jason's party. Her family meant everything to her. But she'd promised not to encroach and stay out of sight, so she resigned herself to cooking as a way to contribute. \n\nShe wore a simple floral print dress that hung slightly loose on her slender frame. The way the fabric moved as she walked hinted at lovely figure and a generous bust. Unlike her children, she had blonde hair, which she fashioned in a medium tapered bob cut. She batted her cornflower blue eyes, and although it appeared intentionally flirty, it was entirely natural. \n\n\"Here you go, Danny.\" She said, as she set the glass on the table. \"Can I get you anything else?\" \n\nDanny admired her for a moment. She was slightly shorter than Mandy, but he was drawn to her identical plump lips. She was a vision for sure. \n\n\"No, Thanks, Mrs. Cooper. This is great. Thank you.\" He replied kindly. \n\nGreg Cooper, who had been entertaining Danny since he arrived, sat across from him in an arm chair. \n\n\"Why don't you go down and join everyone else?\" He suggested. \"It's a party! Have fun!\" \n\nThe man had no recollection of seeing Danny before tonight. Danny had made that small alteration in his thoughts. As a matter of fact, Danny had made quite a lot of alterations over the months. None of which had borne fruit yet. But they would, like dominos, triggering a downward spiral. \n\n\"Honestly? I have really bad social anxiety. And yes... I know how stupid that sounds. And yes... I realize I'll never get over it without inserting myself into situations that make me uncomfortable. But... I mean... coming out tonight was a big step for me... and a lot of those kids can be pretty mean...\" \n\n\"Well, I think it's wonderful that you're trying.\" Libby noted, encouragingly. \"Even if you didn't make it all the way. I'm glad we've gotten a chance to get to know each other too. With Mandy and Jason and all their sports and cheerleading and whatnot... well... you know how it can be... I'm surprised we've never seen you at an event.\" \n\nDanny nodded along. He'd been quietly pushing their thoughts since he arrived. It took him months to master it to a point where he felt comfortable. But he had a level of confidence that allowed him to continue without hesitation. He kept adding layers of conditioning. It was a science now. \n\nJason stopped at the entryway to the living room. \"What the fuck is going on?\" He screeched. \"Fuckface? What are you doing here? You weren't invited!\" \n\n\"Jason! Language!\" His mother scolded him. \"Don't be rude to your guest.\" \n\nGreg leaned forward. His large imposing frame braced on his knees in thought, his chiseled jaw drawn tight. \"Is Jason one of the kids that's mean to you?\" He asked with concern. \n\nDanny looked up at the quarterback. He could see the silent warning in the boy's eyes to keep his mouth shut. \"Oh, no!\" He said with a light laugh. \"Not at all. I mean Jason and I don't exactly travel in the same social circles... but... he's nice to me.\" \n\n\"Oh good.\" Greg relaxed. \n\n\"He can be a little insensitive sometimes... maybe. But I don't think he realizes it. You know being captain of the football team and star quarterback... it goes to your head.\" \n\n\"Shut up! Don't be a dick!\" Jason growled. \n\n\"I'm always worried about that.\" Libby sighed. \"You need to stay grounded, Jason. Focus on your schoolwork too.\" \n\n\"What? What the fuck is going on here? I came up for more pizzas and this...\" He held his tongue from using his usual term. \"... and Danny is here? And you're talking about me...\" \n\nDanny chimed in again. He was pushing their thoughts again slowly manipulating them as he spoke. \"You know not everyone lets it go to their head. The last time our school won state four years straight we had an even better quarterback.\" \n\nGreg perked up. \"Yes! We did! My golden years!\" \n\n\"And you went on to play for UCLA on scholarship.\" Danny mentioned. \n\n\"Hey!\" Greg smiled. \"You did your homework! I was a little fish in a big pond in college. But we did alright! And I got a good education and met this busty, little coed! We can't all go pro. But I think I made out just fine.\" \n\n\"I'd say so.\" Danny agreed. \"You've started your own business and grew it into a monster. You're wealthy. You've got a beautiful wife. You are the American dream. Everyone in town knows the name Cooper. Everyone knows a Cooper is synonymous with competition and winning and success. I mean you're known for never turning down a challenge or bet.\" \n\nLibby sat on the arm of the sofa. \"He loves to compete. That's true. Since the day I met him. He can't help himself.\" \n\nGreg loved hearing this young man talk about him so highly. He loved adoration in general really. He wished his son was a little more appreciative of the family name. \n\n\"Look. I'm not saying I win all the time. But I like a challenge. And I'm not dead yet. This body has still got some moves left. I can still launch the pigskin with the best of them. And I'm willing to try any sport once. I got challenged to a game of field hockey a couple years back. Field hockey! And I crushed it!\" \n\n\"I've always wanted to make a bet with you... I mean to challenge a Cooper! What an honor! But to challenge Greg Cooper!\" He paused for effect as he pushed more thoughts out into each of them. \"Well... I can't really...\" \n\n\"Why not?!\" Greg exclaimed. \"You're a good kid. Give it a shot! What's your game?\" \n\n\"Dad? For real?\" Jason couldn't understand what was happening. \n\n\"Shut up, Jason. This is how you build Cooper family pride. And Danny is good kid. A solid, young man. Maybe if you had more friends like him, you wouldn't be such an asshole.\" \n\n\"Dad!\" \n\n\"It's true, honey.\" Libby nodded at her son. \"You've been a bit of an asshole lately.\" \n\nDanny interjected. \"Yeah. I don't play sports, Mr. Cooper. I mean look at me. I'm not blessed with the athleticism of the Coopers. I was just speaking hypothetically, I guess. I couldn't stand a chance against you or Jason or anyone in your family. Even Mrs. Cooper could beat me in a game of basketball or something.\" \n\n\"I don't believe that! You're a little scrawny maybe. But you've gotta be good at something. Name it! Even if it's not sports related. You can have the advantage. Maybe it's darts. Or throwing cards. Let's get a little competition going. What is it that you've got going for you, Danny? What's your thing?\" \n\nDanny paused as if he were contemplating. Instead, he pushed more thoughts out manipulating the Coopers more than ever. He held back with Jason maintaining only a light control over him and his movements. \n\n\"I... I don't really know, Mr. Cooper. I'm not really good at anything. I guess if I had to say I've got one thing... maybe... well... I'm hung pretty well. I guess that's one thing I've got going for me.\" \n\nLibby laughed out loud and covered her mouth trying to stifle it. \n\n\"What the fuck!\" Jason shrieked. \"Come on, dad! Why are you talking to this fuckface? He's mocking you! And why are you laughing, mom?\" \n\n\"It was funny!\" She said innocently. \"Come on, Jason. Lighten up.\" \n\nGreg smirked and then laughed. \"You are one hilarious, little shit!\" He bellowed. \"Man, I like you. I like you a lot. And I'd say that's a great asset! I'm not sure how you make a bet with that though. What's your play?\" \n\nDanny shrugged. \"I didn't have a play, Mr. Cooper. I was just thinking of something I'm proud of.\" He paused again to push more thoughts out. \"But I guess if I had to think of a bet... um... well, Mrs. Cooper is really hot. And everyone knows you're successful so you two are pretty much made for each other. She must be perfect.\" \n\n\"As close as it gets!\" Greg agreed. \"And definitely hot.\" \n\nLibby smiled. \"You are too, babe!\" \n\n\"Well... I'd say that if you'd both be willing... and you seem like a generous guy... and seeing as my only asset is... you know... my cock... what if we make a bet that I fuck Mrs. Cooper and if I cum first, you win... But if she cums first, I win? It's simple enough.\" \n\n\"Holy fucking shit! Have you lost your mind, fuckface?\" Jason cried out in frustration. \"Dad, kick his ass! Don't let him insult us like that!\" He wanted to knock Danny out but for whatever reason he didn't seem to want to stand up. \n\n\"Now hold up, Jason.\" Greg rubbed his chin. \"This is interesting! Now we've never done a wager like this before! I kinda like it! Honey? What do you think?\" \n\n\"What the fuck is wrong with you?! You're not actually considering this, are you?\" Jason was apoplectic. \n\n\"Hun?\" Greg asked again. \n\nLibby grinned devilishly. \"I think he looks young and inexperienced. I think he doesn't realize that I've got a lifetime of fucking under my belt. And you're hung pretty well, babe. He couldn't be that big. I think I could drain his teenage sack.\" \n\n\"That's my girl!\" Greg hooted. \"The Cooper family is a united front! We can do this! Hell yes! We've got a game! What are we playing for? Money?\" \n\n\"Sure.\" Danny said. \"It's your wife. I'm honored to be wagering a Cooper, much less fucking your wife. You should set the price. I'm capped at $15K though.\" \n\nDanny didn't have near that much money. If fact, he didn't have any. \n\nGreg whistled and then laughed. \"High roller in the house! Let's not get crazy. I'll go to five hundred.\" \n\n\"Deal!\" \n\nDanny stood up and held out his hand. They shook on it. \n\n\"Please! Stop!\" Jason screamed out loud, waving his hands and stomping his feet. \n\nDanny, Libby and Greg all paused and looked in his direction. He was sitting in one of the other armchairs around the coffee table looking rather distressed. Once everyone was quiet, he took a deep breath to calm himself. \n\n\"Mom? Dad? I'm certain you must be playing some kind of joke. Haha! Very funny.\" He stated in the calmest voice he could muster. \"Let's just stop it now. Okay? Mom isn't really fucking Danny. You aren't paying Danny to fuck her. Or Danny's not paying you to fuck mom... whoever pays who... you know what I mean...\" The more he talked the more he began to lose it. \"... what the fuck is wrong with everyone?! Just fucking stop this shit! You've all gone crazy!\" \n\nGreg let out a long, disappointed sigh. \"You know, Jason, you've really become so self-involved. Where is your sense of family pride? We made a wager! Your mom's putting her pussy on the line! I'm trying to be supportive. And you're just whining. Who cares about the money! Let's try and win this thing for Team Cooper! I mean, damnit, Jason! This fine young man has specifically called out a Cooper. Does a Cooper back down? Hell no! Get your shit together. Have some pride in your family and cheer for your mother!\" \n\n\"You realize you're cheering for that kid to fuck mom?\" Jason yelled the question in a shaky voice. \n\n\"Stop rambling. You're becoming such a disappointment.\" Greg snipped before turning to Danny. \"So, let's get the rules down. First one to cum, loses. Anything goes? Foreplay? What are we thinking?\" ",
        "\"Yeah. First to cum is the loser. Anything goes. We stick to one position only, but I'm willing to do Mrs. Cooper's preferred position. And I'm obviously gonna need some help getting it up before we start. But that's a disadvantage for me, right? Sound good?\" \n\n\"We're on! Team Cooper!\" Greg hollered. \"Huddle up! Let's talk strategy!\" He gathered Libby and knelt down around his son's chair talking in hushed tones. \"Jason, you know this kid best. How do we get in his head?\" \n\n\"Fuckface? You can't be serious! Mom, you're not really doing this?\" Jason's face was pale. He saw their expectant, eager expressions waiting for a better response. \"Fuck. I dunno. I wanna go back to my party.\" \n\n\"Well that's not helpful, sweetie.\" Libby noted. \"I'm thinking of choosing doggystyle. He'll be doing most of the work that way. And I think he'll get deepest. I can really milk his cock like that.\" \n\n\"Good thinking, Hun! But let's start out with a slow strip. Tease him. He said he needed help getting it up. Try sucking him off until he tells you he's ready. You want to get him as far along as possible before you start fucking.\" \n\n\"I'm gonna be sick.\" Jason muttered. He looked at Danny who stood there staring back at him with a stupid smile. It made him so angry. \"If you fucking touch her I'll kill you! Do you hear me, Fuckface?! Do hear my fucking words?! If my mother so much as sees your dick, I'll fucking sever it from your goddamn body!\" \n\n\"Whoa! Whoa!\" Greg said, make a T-symbol with his hands. \"Timeout! What the hell, Jason? Flag on the play! Unsportsmanlike conduct! That is not how Coopers compete! This is a fair competition.\" \n\n\"Come on, sweetie! You love competitions!\" Libby added. \n\n\"But...\" Jason tried to protest. \n\n\"No buts, Jase. Cheer for your mother.\" Greg turned to his wife. \"You're on, hun! Let's win this one! Hands in. Cooper on three.\" He and Libby put their hands together in the middle of the huddle. Jason didn't. \"One, two, three. Cooper!\" \n\nLibby stood up and turned around to face Danny. He stood staring at them a few feet away. She walked closer to him and ran her hands through his hair. \n\n\"Are you ready, Danny?\" She asked in a husky, sultry voice. She walked around behind him and let her lips get close to his ear. \"Are you ready to fuck my pussy?\" She kissed his neck and licked his earlobe lightly. \n\n\"Y-yes, Mrs. Cooper.\" He replied. \n\n\"Oh, come on!\" Jason screeched, disgusted. \n\nShe reached down and grabbed the hem of his t-shirt and pulled it up over his head. She kept her hands moving over his chest teasingly, caressing his body. Then she moved back around and pulled the thin straps of her dress away from her shoulders and let them fall. The dress slinked to the floor in a puddle of fabric. She wasn't wearing a bra, only panties. \n\nShe held her hand up to her mouth with a surprised expression. \"Oops! Mrs. Cooper didn't wear a bra today. That's because she's a naughty girl.\" She lifted her large natural breasts and squeezed them together. \"You like my titties, Danny?\" \n\n\"Yes, Mrs. Cooper. They're... awesome!\" He grinned like a teenager. \n\n\"I love having these nipples sucked and played with, Danny. It makes my pussy so wet. They're so sensitive.\" She rolled each nipple between her thumb and forefinger. They were already getting hard and distended. Danny admired her big, light pink areolas. \n\nGreg sat on the end of his seat. \"Whoo! Yeah, hun! Shake those titties!\" He looked over at Jason and then slapped him in the back of the head. \"What's wrong with you? Show some pride! Cheer for your mother!\" \n\nJason just stared blankly. \n\nLibby turned away showing Danny her ass. \"You like my ass, Danny?\" She swayed it back and forth, slow and sexy, bending forward so it stuck out. \n\nDanny gulped. \"Yes.\" He whispered. \n\nShe hooked her fingers in her white lace panties and slowly rolled them down over her round cheeks until they were just at the crease where her ass met her thighs. She stood up straight and pulled the fabric tight and lifted it up and down causing her booty rise and drop. \n\n\"See that booty? That's a perfect booty. That's an ass that can make a cock pop, Danny!\" \n\n\"Daaa-aaamn! Cooper quality booty!\" Greg called out pumping his fist in the air. \n\nJason gave him a wide-eyed look of disbelief. \n\nLibby got on her knees with her round, firm ass sitting on her heels. \"You sell yourself short, Danny. You just need to put on some muscle. But you've got a nice lean, hard frame to start with.\" She worked the button on his jeans and then got the zipper. \"Let's see how hung you really are, Danny. You seem to be proud of yourself... but a mature woman has expectations...\" She pulled his jeans and boxers down in one tug. \"... and... holy god! Danny! That is a surprise! Now I was not expecting this.\" \n\n\"Jesus Christ.\" Jason gulped. \"Come on, dad! Seriously! Snap out of it! You're not really gonna let this happen. You're not going to let him do this, are you?\" \n\nJason's legs felt like jelly. He didn't think he could stand if he tried. He couldn't understand why his mom was doing this, or why his dad was allowing it to happen. Everyone seemed to be out of their minds. \n\nGreg put his arm around his son reassuringly. \"I know! I know! Danny really threw us a curveball with his horse cock. I mean I knew he said he was hung but dear god! It's alright though. We've still got this. You don't know your mother like I do. The woman fucks like a minx.\" He gave him another squeeze. \"Watch this!\" He pointed. \"She's a real cum guzzler! Watch how she sucks on this thing.\" \n\nJason groaned again. How could his dad have misunderstood his comment? He wasn't concerned about their chances. He was concerned that this was happening at all. Fuckface! Fuckface from school was about to shove his fat cock down his mom's eager mouth. And because he was living in a black hole or an alternate reality, his father was cheering him on. He glanced up briefly and gasped as his mom did the unthinkable. \n\nLibby held this monster in her hand. Her fist wrapped around the fat base, her fingers barely able to connect, and the front half of his cock fell half limp over her wrist. She dipped her head and sucked the tip into her mouth sucking it all the way to the back of her throat and then jacking his shaft. \n\n\"Mmmm! Mmmhmmmm!\" She groaned. \n\n\"Oh shit, Mrs. Cooper! You know how to suck cock!\" Danny moaned. Then he glanced up. \"Hey, Mr. Cooper, can I call your wife a slut?\" \n\n\"Yeah, yeah. Everything's fair game. Remember? Dirty talk included. Besides if the shoe fits!\" He chuckled at his own joke and looked to Jason who didn't find it amusing. \"You really need to lighten up! That was funny!\" \n\nDanny's cock was rock hard now. Every contour of it was visible down its length including its thick pulsing veins. Libby looked at the huge heavy balls hanging underneath and licked them while her hand glided up and down his shaft. \n\n\"Mmmmhmmm.\" She groaned some more. \"I bet you have so much delicious cum in these balls, Danny. Wouldn't you like to put that down my throat or on my titties?\" \n\n\"Nuh-uh. Nope.\" Danny tutted. \"I see what you're doing, Mrs. Cooper. You're trying to get me to cum before I even start fucking you. That's not fair play. What's the position?\" \n\n\"Doggy.\" She relented. \n\n\"Well... I'm hard. Let's get on with it.\" \n\nLibby got on her hands and knees facing her husband and son. Her heavy breasts hung down. She brought her lower back down toward the floor to lift her ass up as best as possible and presented her cunt for fucking. \n\n\"Fuck, Mrs. Cooper. You're a hot fucking slut. I'm gonna fuck this pussy.\" Danny growled hungrily. \n\nDanny had spent much of the last couple months testing his power on a couple of mature women a few towns over. He needed to be ready before tonight. Sadly, the Coopers didn't know that if he concentrated hard enough, he could control his own need to ejaculate, almost the same way he controlled their thoughts, manipulating them in small ways. Mrs. Cooper didn't stand a chance. \n\nHe lined his cock up with her wet entrance and grabbed onto her hips. He pushed slowly until the head stretched her opening and slipped inside. Then he simultaneously slammed his weight forward while pulling her hips back and buried the entirety of his cock in one shocking thrust. \n\n\"Oh fuck! Of fuck! Hmmmph!\" Libby cried out as it split her open. \"Ohmygod! Babe!\" Her eyes searched for her husband. \"Babe! We... we can't win! It's too d-d-deep!\" Danny slammed into her pussy a few times fucking her with the full length of his cock. \"Ohgod! Ohgod! It's a f-fat fucking c-cock!\" \n\nGreg looked worried. \"Come on, Libby! If you feel split open then it feels tight on him! Milk that cock! Milk that fucking cock, honey! Don't you cum! Don't dare cum!\" He smacked his son on the back of the head. \"Cheer for your mother, goddamnit!\" \n\nJason tried to look away but his eyes kept drawing back to his mother's distressed face as she got plowed by Fuckface. He hated that nerdy little fuck. But watching him fuck his mother was turning him on, and that was about the worst realization of all. He closed his eyes and tried to ignore it, but her groans and filthy words filled his ears regardless. \n\n\"Holy shit, Mrs. Cooper! You do have a tight cunt. It feels really good.\" Danny huffed as he started to pick up his pace. \n\n\"Ohgawd! Yes! Plow my cunt, Danny! Fuck my fucking cunt!\" \n\n\"Damnit, Lib!\" Greg cried out. \"Hold that cum back. Don't do it!\" \n\nDanny started fucking harder and faster and she couldn't take it. \n\n\"Ohgawd! Ohgawd! Fuck it, Danny! Oh fuck! I'm cumming! I'm cumming so fucking hard!\" Libby's chest crushed against the floor as she heaved and shook. \n\n\"Fuck!\" Greg threw his hands in the air. \"Aw, hun! We didn't lose. We got destroyed!\" \n\n\"I... I'm sorry... I just couldn't... it's so big, babe. It fucked me so good. I came so fast.\" She panted from the floor. \n\nDanny spoke up. \"You know, it's probably because she wasn't used to the size.\" His cock was still buried deep and he gave her ass cheek a slap. It elicited an oomph. \"If I left my cock inside her and let her adjust to it for a few minutes. We could go double or nothing. She might do better.\" \n\nGreg considered it for a moment. He hated to lose. It was a well-known fact. And it wasn't that he was a sore loser. On the contrary, he liked to improve. He liked to win based on merit. Danny didn't mind exploiting that fact with a gentle mental nudge. \n\n\"Babe? I'm down to try again if you are. What do ya say?\" \n\nLibby half lifted her head from the floor and attempted to blow a lock of hair from in front of her eyes. \"Yes, please.\" She whined. \"But... maybe a different position...\" \n\n\"Strategy! I like the way you think, hun! First things first, we did lose. Let me get the money in case we lose again. You take a second to get used to that monster.\" \n\n\"Un-fucking-believable!\" Jason scoffed. \"You two are un-fucking-believable! Fuckface didn't fuck mom enough? You're gonna double down?\" \n\n\"Honestly, Lib. I don't know what to do with him anymore. I'm going to get some money out of the safe.\" Greg stood up and walked out without looking at his son. \n\n\"Jason, maybe you should be more supportive of this family.\" Libby cautioned. \n\n\"Really? You're on your hands and knees stuffed full of cock right now. You realize that, right?\" He said pointing at her like she didn't have the right to lecture him. \n\n\"Of course, I do, Jason.\" She replied curtly. \"It's hard not to realize with a fat cock like Danny's.\" \n\nDanny offered a simple suggestion. \"Mrs. Cooper, why don't you lie down flat. Maybe that'll be easier while we wait.\" \n\nLibby eased forward with that big cock in her cunt. Danny moved his knees to the outside of her legs. He placed his hands on her full, round ass and shimmied until his cock settled nice and deep. She groaned. \n\n\"There that's better.\" He noted. \n\nHe could feel her moving imperceptibly trying to fuck him. She wanted that cock to fuck her so badly. In part because of the thoughts he'd pushed into her, but since she came she had her own natural urges. \n\nDanny glanced up at Jason. It was awfully quiet. He enjoyed watching the asshole's frustration over everything. \n\n\"So... uh... Jason...\" \n\n\"What, fuckface? What could you possibly have to say?\" \n\n\"Nothing. Just trying to make conversation.\" Danny replied. \"Your mom's got an amazing cunt. Respectfully, I mean.\" \n\n\"I'm going to fucking kill you.\" \n\n\"Jason!\" Libby scoffed. \"He was paying me a compliment.\" She stopped and grunted softly. \"Oh... oops.\" \n\n\"What now?\" Jason asked. \n\n\"I came by accident. Don't tell your father.\" She craned her neck backward. \"That doesn't count.\" \n\nDanny made a zipper motion on his lips and smiled. She did too. \n\n\"Although it looks like Jason got excited by that.\" Danny noted. \n\nLibby glanced up at the tent in her son's jeans. \"Jason Cooper! Did you get hard watching me cum? That's disgusting!\" \n\nAnd Danny watched as Jason hung his head low in embarrassment. \n\n\"I... I don't want to watch any of this!\" He whined. \n\nGreg came strolling back into the room with a wad of cash. He waved it in the air triumphantly. \n\n\"All set!\" He announced. \"A Cooper always pays their debts! How's your pussy, hun? Is it stretched? You ready to milk that fucker?\" \n\n\"Ready!\" Libby cooed. \n\nDanny slowly pulled his cock from her dripping snatch and let her crawl out from underneath him. \n\n\"I'm on top.\" She glanced up at her husband. \"The squat ride. It's a sure winner.\" \n\n\"Oh damn!\" Greg laughed. \"Jason, this is her best move. She doesn't ride on her knees. She keeps her feet planted firm and drops her pussy down on his cock. This shit drives me crazy.\" His son hadn't responded. \"Jason?\" He glanced over to find him rubbing his erection through his jeans. \"Oh, come on, Jase! Control yourself!\" \n\nDanny's cock was a pillar of hard flesh dripping with female cum. \"Could you clean it off first?\" He asked. \n\nLibby didn't hesitate and dove down on it, swallowing it as deep as it would go. \n\n\"Suck him, Hun! Drain him!\" Greg hollered while simultaneously smacking his son. \n\nDanny grabbed her silky, blonde hair and pushed her face down on his cock until she choked and gagged. \"She's a real nasty cocksucker, Mr. Cooper. You're a lucky guy to have such a filthy slut. I'd like to take my time and throat fuck your wife if I could. Unfortunately, I've gotta make her fuckhole cum.\" \n\n\"It's too bad. She's a cum guzzler.\" \n\n\"Seriously, dad? Can you not say things like that?\" \n\n\"Shut up, Jason. You're literally zero help. Your mother is doing her best to fuck your friend.\" \n\n\"Are you fucking kidding? Listen to yourself! And Fuckface is not my friend!\" \n\nDanny's cock was a saliva covered mess. Libby climbed on top, feet planted, hovering over his fat shaft and then dropped down slowly until he was buried inside her again. She moved her pussy deftly up and down. Her round ass rising and falling swallowing him into her hungry hole. She had more control this way. She could slow down when she felt she was getting too close to a climax. And she sped up when she thought he might be. Her right hand reached back and cradled his balls. \n\n\"Not bad for an old lady.\" She cooed as she fucked his cock harder. \"My pussy is tight, right? You like my tight pussy, Danny? You want to fill it with your creamy goodness?\" She dropped down smacking against him over and over. \"Fill me up! Fill me up, Danny! Fill my cunt!\" \n\n\"Holy shit, Mrs. Cooper!\" He squealed. \"You're such a whore! Oh god!\" \n\nJason couldn't handle it. He felt a sudden rush of need. He couldn't know that it was aided by Fuckface. He fumbled with his zipper as his mom got fucked. His eyes trained on her massive breasts bouncing and jiggling. He grabbed his cock jerking it as fast as he could, overwhelmed by his whore mother. \n\n\"Fuck him, hun! You've got this!\" Greg called out approvingly. \n\n\"Oh god!\" Jason cried as he came shooting his load in a high arc that landed on his mom's face and tits. \n\nLibby felt the warm splash of cum just as Danny fucked up into her. \"Ohgawd! Fuck! Fuckit! I'm cumming again!\" \n\n\"Motherfucker!\" Greg cursed as he watched his wife writhe on that massive cock. He smacked his son. \"What the fuck, Jason! You fucked us! She was gonna win! And why are you jerking it to your mother?\" \n\n\"I'm sorry!\" He replied sheepishly, unsure what had come over him. \"I... I...\" \n\n\"Triple or nothing!\" Greg called out. \"Don't stop!\" \n\n\"Babe!\" Libby tried to interject but she was still twitching on Danny's cock. \"I... I don't know if that's a good...\" \n\n\"You nearly had him!\" Greg retorted. \"He's gotta be right there. Fuck that load out of him.\" \n\nDanny took control and fucked hard up into her pussy. Had he not been able to control his ejaculation he would've blown it numerous times already. But he concentrated and controlled his need to release. Now he could really focus on fucking her harder. He pounded up into her sopping wet cunt with as much force as he could muster. \n\nLibby braced her hands on his chest as his thrusts got faster. Her pussy was just too sensitive now. His cock was too deep and too thick. Her third orgasm was coming fast. She couldn't hold back. She didn't want to hold back. He was fucking her so good. \n\n\"Oh fuck!\" Libby cried. \"Again! Ohgawd! I... I'm cu-cumming!\" \n\n\"Goddamit!\" Greg hollered. \"This is your fault.\" He smacked his son again. \"Why did you cum on your mother?\" \n\n\"Oh shit!\" Danny groaned. \"I'll give you two hundred back if you let me finish.\" \n\n\"Deal.\" Greg said. It was fair. And at least he got to recoup a little of the fifteen hundred cash he already lost. \n\nDanny pumped three more times and then unleashed a torrent of cum inside Mrs. Cooper. \n\n\"Ohgawd!\" She cried as it filled her up. \"Danny! There's so much!\" \n\nWhen he finally pulled out he was breathing heavily. Greg was counting hundred dollar bills on the table. \n\n\"$1300.\" He said. \"I can't say I'm happy about that.\" \n\n\"I'll give you a rematch any time, Sir.\" Danny replied. \"I thought she had me for a moment.\" \n\n\"Me too!\" Greg bemoaned. \"Until Jason started wanking it to his own mother.\" He turned toward his son. \"We'll have a talk about that later.\" \n\nMandy Cooper called out for her parents as she walked through the kitchen. She saw the mini pizzas getting cold. Her brother had disappeared from the party. It was unlike him not to soak up the spotlight. \n\n\"Mom? Dad? Jason?\" She called. \n\nDanny had pushed some thoughts into her earlier in the day at school. He was prepared for her arrival. She appeared in the entryway wearing a micro mini skirt and skimpy halter. Libby had already moved to the couch next to her husband. Her pussy leaking a heavy stream of semen. \n\n\"Whoa!\" Mandy gasped. \"What the fuck is going on here?\" \n\nGreg chimed in first. \"Just putting the Cooper family pride to the test.\" He stated. \"It didn't go so well.\" \n\n\"Fuckface fucked mom!\" Jason cried out. \"Sis, you gotta help me! Something is not right!\" \n\nHer face landed on Danny first. His huge cock wet with cum. Then it moved to her mother who cupped her pussy trying to stem the flow of semen leaking from it. Libby reached her hand up and fed it to herself for lack of any better idea. \n\n\"That's a huge cock!\" She finally said. \"Hi, Danny.\" \n\n\"Hi, Mandy. It's good to see you.\" Danny greeted her. He thought for a second and then looked at Greg. \"Oh man! That was your play, Mr. Cooper.\" \n\n\"What was?\" He asked. \n\n\"Mandy.\" He said. \"Tighter pussy, better chance I'd blow early, right?\" \n\n\"Shit! I'm so dumb!\" Greg exclaimed. \"Why didn't I think of that?\" \n\n\"No!\" Jason blurted. \"That's not a good idea at all!\" \n\n\"Wait... was there a bet?\" Mandy asked. \"Dad, were you betting again?\" \n\nGreg blushed. \"You know I can't help myself. It's Cooper family pride. Danny said he could fuck your mother and he wouldn't cum first. We lost!\" ",
        "\"Oh no!\" Mandy screeched. \"Do we get a redo?\" \n\n\"What the fuck?!\" Jason stomped his foot so hard he thought he'd broken it. \"What is wrong with you people?\" \n\n\"It was $500 a shot and we lost three times straight.\" Greg stated solemnly. \n\n\"If we lost then why is mom filled like Boston cr\u00e8me donut?\" She asked. \n\n\"He gave us $200 back if we let him finish.\" \n\n\"Oh. That makes sense.\" Mandy noted as if it were the most reasonable explanation ever given. \n\n\"No!\" Jason replied emphatically. \"That does not make sense! That makes mom a whore! He paid to fill her with cum. She's a whore! Why doesn't anyone else see that?\" \n\n\"It was a bet, Jason. It's totally different!\" Mandy sighed. \"You just don't like Danny.\" \n\n\"You think you could've won it?\" Greg asked. \n\n\"I dunno, daddy.\" Mandy said glancing Danny up and down. \"That's a huge cock!\" \n\n\"I know, princess. But it's the Cooper family name at stake.\" \n\nDanny sat back grinning as all his conditioning had taken hold. He was finally torturing his nemesis. Jason's family bent over backward to justify fucking his cock while he was forced to watch. \n\nLibby looked at her daughter while she shoveled more cum in her mouth. It was dripping all over her fingers and down her chin. She kept her legs wide and her ass on the edge of the couch with her pussy exposed, determined to get it all. \n\n\"It's a fat one, Mandy!\" She said to her daughter. \"It really fills you up. It's hard not cum on it.\" \n\n\"Jesus, mom!\" Jason gagged. \"Do you need to swallow all of that?\" \n\n\"Would you rather it dripped into the carpet, Jason?\" She asked sternly. \"Besides it's so yummy.\" \n\nDanny walked over and sat next to Mrs. Cooper. He settled into the plush sofa and kicked his feet up on the coffee table. Everything about this evening had him turned on. He wondered why he hadn't used his power right away. All those months ago, before that football knocked him out and he fell down that embankment, he was awkward and inexperienced. It was something he'd worked hard to change. He wanted to be confident and comfortable by the time he fucked the Coopers. \n\nHe didn't think what was happening was too terrible. Maybe for Jason, he thought. But the others were certainly enjoying themselves. He hadn't made them do anything too depraved. Not yet at least. He just wanted them to preserve the legendary Cooper family pride! Although, Greg Cooper coveted his wife. Before this evening, he would never consider sharing her. In fact, he might've pummeled anyone that tried. He was even more protective of his daughter\u2014his princess. The one that was too good for a guy like Danny. But that was all moot now. That was the old Greg. \n\n\"Danny?\" Greg finally said. He was standing now, pacing. \"I've got to admit that you really got us. You really did. And I'm the first to admit when I've lost a bet. I can't let it go, though. I don't have it in me. And look at you! You're still hard as marble! It's impressive. Seriously impressive. You obviously came to play. I don't think Libby could win this thing tonight. But Mandy might. What if the Coopers get two dogs in this hunt?\" \n\n\"Like a side bet?\" Danny asked. \"I mean, it wouldn't be like winning the last one. That bet was with Mrs. Cooper.\" He reached his arm around Greg's wife and grabbed her heavy breast, squeezing her nipple. \n\n\"Fuckface is not fucking my sister!\" Jason screamed at the top of his lungs. \"Do you guys hear me?! FUCKFACE. IS. NOT. FUCKING. MY. SISTER. You're all fucking insane! What the fuck?! What in the actual fuck is wrong with everyone?! Fuck!\" \n\n\"Jase, it's only a bet! And besides it's for the Cooper family pride. Mom couldn't do it. I have to try!\" Mandy justified. \n\n\"Don't bother, princess.\" Greg sighed looking at his son disapprovingly. \"He hasn't been a team player all night. We might've won if your brother didn't jerk off on your mother. He just couldn't keep it in his pants.\" \n\n\"Ew! Jason! Not on mom!\" \n\nJason had beads of sweat along his forehead. Didn't he have a party going on downstairs? Wasn't he supposed to be hosting the party of the year? Why was sitting here watching this madness? He couldn't believe his sister was talking this way. She suffered the same mental break that their parents had suffered. Maybe it was contagious. He was going to kill Fuckface. That much was certain. He was going to murder him. \n\n\"It was a fucking accident!\" He tried to clarify. \"For the love of fuck!\" \n\n\"You don't accidentally jerk off. Geez! The next thing you know you'll be wearing her panties or something.\" \n\n\"Hey! Coopers!\" Greg hollered. \"Calm down. We are off topic and infighting. We have a wager on the table.\" He turned back toward their guest. \"Danny? What do ya say? Same bet. Same terms. Except this time with Mandy.\" \n\nDanny chewed on his lip as he thought about it. He sighed exhaustively as if it were the hardest decision he'd ever had to make. His right arm was still draped over Mrs. Cooper and he pulled on her right nipple continuously, almost mindlessly, stretching it out and rolling it between his fingers. She'd leaned back into him and mewled at the pleasure like a bitch in heat. \n\n\"I just don't know.\" Danny finally said. \"I just filled this little cum bucket.\" He pulled Libby's nipple harder than ever and she moaned out loud. \"But Mandy? I really like Mandy. She's so nice to me at school. It's not like this is a normal bet Mr. Cooper. I'd have to fuck her. It was one thing when it was Mrs. Cooper. You know she's a whore. But Mandy? Are you sure?\" \n\n\"My mom is not a fucking whore! I'll fucking kill you, Fuckface!\" Jason screamed. \n\n\"Be quiet, Jase. God! You're whining like a baby. Of course, your mom is a whore! A Cooper whore!\" Greg turned back to Danny. He nodded thoughtfully. \"Danny, you're just so damned honorable. I mean I really respect it. The fact that you're concerned about my little girl.\" He placed his hand over his heart. \"It's really something. You know?\" He turned toward Mandy. \"Princess? Are you okay with it?\" \n\n\"Sure, daddy!\" Mandy squealed without hesitation. \"I'd do anything for the family. Besides, Danny's cute. I've always thought so.\" \n\n\"Well there you go!\" Greg said. \"She already likes you. And this is for Team Cooper. So, yes! You've got my blessing. Fuck my daughter, Danny! Pound Away! This is for the Cooper family pride after all.\" \n\n\"Don't do this, Mandy!\" Jason pleaded. \n\n\"Team huddle!\" Greg called. \n\nGreg and Mandy huddled around Jason's chair. Libby didn't want to join them. She wanted stay with Danny while he teased her sensitive nubs, but this was for the Coopers. She pried herself from the sofa, her nipples stiff and sensitive. She crawled between Greg and Mandy. Her tits ended up resting on Jason's thighs. He stared at them paralyzed. They looked so inviting and caused a rush of blood to his cock. He couldn't help it. \n\n\"Hun? Any advice for Mandy?\" \n\nLibby gave her a serious look. \"Sweetheart, this is not amateur hour. You are dealing with a serious piece of fuckware. Danny is big. He's long. He's thick. And he can fuck. I'm not sure what your experience level is, but I'd suggest getting on top. You can control the speed and depth better that way. Try not to let it fuck you too hard. You'll be begging to cum. This is a massive log of cockmeat...\" \n\nA high pitched squeak interrupted her as air escaped her pussy. It seemed to last forever. She'd never had that happen before. A few big globs of cum came with it and splattered into the rug beneath her. \n\n\"Oops.\" She said freezing in embarrassment. And then quietly added. \"Just... on top, I guess...\" \n\n\"On top. Okay.\" Mandy repeated, noting the advice seriously. \n\n\"And try not to let him take charge too much. If you can help it. When this guy starts drilling his meat hammer it's game over.\" Greg added. \n\n\"Don't let him hammer his meatstick. Got it.\" Mandy listened intently before looking down. \"God, Jason! Why do you have a boner right now?!\" \n\nThe three of them looked down and saw Jason's cock had inflated through his open zipper. He'd forgotten to close it after he came. And now it was rock hard again as he lusted over the huge titties on his lap. \n\n\"I dunno?\" He replied a bit stupidly. \"She put her tits on me.\" He pointed at his mother accusingly as if it were her fault. \n\n\"Damnit, Jason. What is your infatuation with fucking your mother? Everyone else is trying to make sure your sister fucks the cum out of this kid. And you're thinking about fucking mommy. Have a little respect for the namesake! You are not a part of Team Cooper right now.\" \n\nDanny stared on with amusement. The absurdity of this was sheer beauty. He stroked his cock watching Mandy glance over at him lustfully getting herself mentally prepared. He appreciated Mrs. Cooper's colorful language choices, which had gotten a little more ridiculous as the night wore on. They all were. It would only get worse. It was all very satisfying. \n\n\"Just do your best, Sweetheart.\" Her mother said kissing her cheek. \n\n\"I believe in you, Princess!\" Her father said kissing her other cheek. \n\n\"Please don't fuck Fuckface.\" Jason pleaded desperately, trying to avoid looking at the massive breasts pressing into his thighs. \n\n\"Cooper on three!\" Greg added rallying support. He placed his hand in the middle. Mandy and Libby joined and then Jason put his in as well but he seemed entirely unsure. \"One. Two. Three. Cooper!\" They called out in unison. \n\nMandy got up and turned nervously toward Danny. She didn't think to strip tease him. She pulled off her halter and hiked up her micro mini. Her left hand snapped the clasp on her bra, which she shrugged away. And then she pushed her cotton panties down to the floor. \n\nShe grabbed her breasts self-consciously. They were pert, plump nice breasts, nothing like her mom's heavy hangers. And she had dark silver dollar size areolas with short, fat nipples. Her right hand rubbed down over her pussy. It was soggy already. She had a full bush of dark pubic hair. It suddenly occurred to her that he may not find it attractive. Her mom had a neat little v-shape and was otherwise bald. \n\nDanny couldn't help but appreciate her beauty. She was smoking hot. All he'd ever wanted was to have Mandy Cooper. It was about to happen. His cock throbbed as he waited for her. \n\n\"So...\" He finally said. \"What position are we doing, Mandy?\" \n\n\"I want to be on top.\" She replied, nervously. \n\nDanny got up and walked over to her. \"Here.\" He said. \"It'll be easier if I lay down on the carpet. You're really beautiful, Mandy.\" \n\nSome part of him wanted her to know how much he admired her. It pained a little to manipulate her even though he knew her attraction was genuine. He still needed her to play the game with the rest of them. She needed to do this in front of her brother to torture him. So, he'd made those adjustments in her mind. He could tell she was nervous. \n\nShe smiled warmly. \"Thanks! You really like how I look? My hair doesn't bother you?\" She rubbed her furry bush. Her confidence was building. \n\n\"It looks delicious. Show me those cheerleading moves.\" \n\n\"Okay.\" She grinned climbing over him. \"How many girls can do this?\" \n\nMandy let her feet slide out to either side with her fingers interlaced behind her head. Her legs kept moving in perfect toned synchronization as her pussy inched closer and closer to his towering pillar of meat. She could do perfect splits. Better than any of the other girls on the squad. Finally, she felt her pussy touch the angry engorged head of his cock. She gasped. \n\nDanny felt how soaked she was, but he could barely squeeze inside her. \"You're tighter than I thought.\" He grunted. \n\n\"That's because I've never done this before!\" Mandy replied through gritted teeth. She didn't know why she hadn't thought to mention it up until now. The head forced its way into her cunt. \"Ohgod! That hurts!\" She placed her hands on Danny's chest to balance herself. \n\n\"Princess! You're a virgin?\" Greg gasped. \n\n\"Not anymore, daddy!\" She whined. \n\n\"Poor baby.\" Libby whispered. \"That's not a beginner's cock.\" \n\n\"He'll cum for sure!\" Greg predicted, excitedly. \n\n\"Mandy...\" Jason whined sadly. \"How you can let him to do this to her?\" \n\nDanny grabbed her hips and pulled her down slowly. She was sliding down his length at the speed of an iceberg. Were it not for the mental control of his climax, it would've ended right here. The head of the cheerleading squad impaled on his cock in a full split. \n\nJason had tears in his eyes. He loved his sister. As in, he actually sat up at night jerking himself off thinking about her. He'd fantasized about fucking her a thousand times. Fuckface! Fucking Fuckface was taking her cherry! The look on his sister's face was one of pain and pleasure and one that he wanted to give her. Although he always imagined that she'd lost her cherry by now. His hand stroked his cock as he watched. \n\n\"Holy shit!\" Danny grunted again. \"You're killing me, Mandy! This pussy is too good! Sooo tight!\" \n\n\"It's a huge dick!\" She huffed sinking further down. It had been minutes already and she was only now getting close to the bottom. \"You forgot something, though!\" \n\n\"What?\" Danny asked with arched eyebrow. He wondered if he forgot something in the thoughts he pushed into each of them. He'd been meticulous so as not to miss a detail. Did he overlook something? Did she have a moment of realization? \n\nMandy tried to bounce on his cock, coaxing it in further and further, desperate to bottom out at the base. \"You forgot that the Cooper family rules, Danny! My pussy will drain you dry!\" \n\n\"Yes! Yes! That's my girl!\" Greg stood up and cheered triumphantly. \"You fucking got this, princess! Give him the virgin vice grip!\" \n\n\"I wouldn't count your chickens yet, babe! I've been on that merry-go-round. It's a hell of a ride.\" Libby cautioned. \"Take it slow, sweetie!\" She coached her daughter. \"Work it out of him slowly! Don't get carried away.\" \n\nThe longer Mandy had that fuck stick buried inside her, the more confident she became. That pain she felt when she was first split open had faded. The sensation she had right now was something she'd never felt. She felt so filled up like he was touching every part of her pussy at once. She tried to bounce some more, sliding down further, until she felt her thighs touch his. She seemed more surprised than anything to have bottomed out, the whole thing inside her. \n\nDanny pulled her forward. It changed the angle so he wasn't pinned under her impressive split, and allowed him to move his cock. He started to pump. Mandy's tits crushed against his chest. She gasped feeling that massive member start to piston inside of her\u2014so deep inside of her. \n\n\"OH! Ohmygod!\" She gasped. \"Gahhh! That feels so...\" She heaved and panted. \"Fuuuck!\" \n\n\"No!\" Greg called out. \"Don't let him do that! Sit back up!\" \n\n\"Hey, Jason!\" Danny called. \"Your sister is such a good fuck!\" \n\n\"Fucking kill you!\" Jason screeched, pumping his cock. \n\n\"Now that's just wrong, Danny!\" Libby scoffed. She glanced at her son. \"Son of a bitch! Jason, stop jerking your cock! To your sister this time? What's wrong with you?\" \n\nMandy managed to get back upright but she was fucking Danny just as hard. \"Fuck that cock feels so good inside me!\" \n\n\"Princess! Slow down!\" \n\n\"I'm trying, daddy! It's so hard!\" Her ass bounced on top of him with rhythmic need. \"Fuck, daddy! I can't hold it! Oh god! Fuck! Fuck! I... I'm so tingly! Is... this what an orgasm feels like... Ohgawd! Fuck it!\" \n\n\"No! Don't do it! Slow down!\" Greg hollered. \n\n\"I... I can't stop it... Daddy, it feels too... Ohmygod! Ohmygod!\" She cried. Danny fucked up into her driving her over the edge. \"Fuuuck! I'm cumming. I'm cumming. Ohmygawwd!\" \n\nMandy's hips quaked around him. \n\n\"Damnit! Shit! Fuck!\" Greg shouted. \n\n\"Ohmygod!\" Mandy gasped. \"Is that? Are you cumming in me? Oh shit! That feels so good!\" \n\nDanny finished bucking his hips upward into her cunt. And then laid back limp and tired. \n\n\"We were that close?! Really?!\" Greg whined. \"Princess, you nearly had him!\" \n\n\"Sorry, daddy!\" Mandy whined softly. She leaned forward and kissed Danny full on the lips. \"Oh, Danny!\" She cooed. \"It felt so good! I love you! I love you and your fuckstick!\" \n\n\"No!\" Jason cursed softly. \"Mandy you can't! You can't love Fuckface! I won't allow it!\" He was still stroking his cock. \n\n\"Aw, Jason! What's wrong with you? It's sweet!\" Libby noted lovingly. \n\nGreg was counting out five more hundred dollar bills. \"Double or nothing?\" \n\n\"I can't, Mr. Cooper!\" \n\n\"Really?\" \n\n\"Look...\" Danny said seriously. \"I filled two cum dumps tonight. That's a lot! Would I like to fuck your whores again? Yes! I'd like to pound these pussies all night long. But I have limits. Besides even if I could get it up again, I'd probably last a long time the next go around. Seeing as these two little cock guzzlers drained me twice. So that wouldn't be fair for the bet would it?\" \n\nGreg pondered it. \"That's a fair point, Danny. I've gotta say, I appreciate betting against an honest man. You're a real gentleman. That's refreshing.\" \n\n\"Mandy, I'd love to stay like this all night but I think we should get up. I'm trying to talk to your dad.\" \n\n\"Sorry.\" She said, peeling herself up. As soon as she stood and massive stream of cum poured down her thighs and onto the carpet. \"Oh... crap...\" \n\nLibby crawled over on her hands and knees with her tits swinging back and forth. \"I've got it, sweetie. Let me help.\" She cupped her hand between her daughter's legs and collected Danny's semen and fed it into her mouth. \"Danny! Your second load was as big as your first! That cock is amazing!\" \n\n\"Fuck!\" Jason shouted as he watched his mom eat the cum out of his sister. His cock erupted. \"I hate all of you! Especially you, Fuckface!\" \n\nNo one paid any attention to him. Danny stood up and stretched and gathered his clothes. \n\n\"I do have to get going soon.\" He mentioned. \n\n\"When do we get another shot at this?\" Greg asked. \"We get another shot, right? The Coopers can win this thing!\" \n\n\"Tomorrow is fine. Afternoon or evening?\" \n\n\"Deal!\" \n\nThey shook on it. \n\n\"I've gotta say, Mr. Cooper. You hear people talk about the Coopers around town. I've heard stories about you and your wife. But meeting you tonight... it was a real honor, Sir. Truly.\" \n\n\"Thank you, Danny! The pleasure was all mine. If only my son had a semblance of your class.\" \n\nDanny walked back toward Mandy and gave her a kiss. \"Goodnight, Mandy. I really enjoyed taking your cherry. Can't wait to see you tomorrow!\" \n\n\"Night, Danny! I love you!\" \n\nHe looked down at Libby. \"Mrs. Cooper, your daughter left a bunch of her cum on my cock. If you wouldn't mind guzzling that off for me.\" \n\n\"Yes, of course!\" She opened wide and swallowed his fat, limp cock into her throat. The taste of her daughter only a passing thought as she devoured him. \n\n\"What a great family! The Coopers!\" He said, holding Libby's head and fucking her face. \"Yeah, that's good, Mrs. Cooper. God, it's so nice having a cock guzzler around. Mr. Cooper's a lucky guy. I mean, if you talk to Jason you'd have no idea his family was so perfect. What is it they say about people like Jase? 'They've got a lot of class. It's just all low.' Right, Mr. Cooper?\" \n\nGreg howled with laughter. \"Oh god! That's a good one, Danny! I'm gonna use that! Shit! You're funny!\" \n\nDanny slapped his cock on Mrs. Cooper's face a few times and wiped her saliva off on her cheek. Then he pulled on his clothes and tied his sneakers. \n\n\"Wait! Danny! Don't forget your money!\" Greg called after him. \"$1800.\" \n\nDanny took the cash. \"You didn't put the down payment for tomorrow, Mr. Cooper. I'm happy to give you another shot at winning the bet, but that costs money. It's a title fee. Two thousand.\" He stated, pushing some additional thoughts out. ",
        "\"Of course! I'm so forgetful!\" He counted out another two thousand dollars. \n\n\"What the fuck, dad!\" Jason screeched as he watched his father forking over more cash for seemingly nothing. \n\n\"You're giving me a ride home, Jason. Let's go!\" \n\n\"I'll come too, Jase!\" Mandy said pulling her micro mini down and grabbing her halter. \n\nLibby pawed at her daughter's pussy trying to get that last bits of her snack. \n\n\"Like hell I am, Fuckface! You're fucking crazy!\" \n\n****** \n\nJason Cooper drove his brand new BMW SUV, winding through some back roads. The car was a present for his 18<sup>th</sup> birthday. Mandy got one too. His was black, hers was silver. He was furious. Beyond furious, really. Why did Fuckface think he would drive him home? The balls on that little fuck! It would never happen! Never! \n\n\"After what you did tonight, Fuckface!\" Jason sputtered angrily. \"You have the nerve to tell me to drive you home! You're a dead man. You know that, right? I'll never do what you tell me to do! I'm not sure what fucked up shit you pulled...\" \n\nDanny sat in the back seat of the SUV with his pants around his ankles. \"Um... Jason?\" He tried to interject. \"Jason!\" \n\n\"What? What, Fuckface?! What?\" Jason spat. \n\n\"Sorry. I didn't mean to interrupt you...\" Danny said. \"... I just thought I'd point out that you are driving me home.\" \n\nJason looked down at his dashboard and steering wheel and then up at the road as the trees whizzed by in his periphery. He panicked. \n\n\"What the fuck!\" He shouted, pulling the car to the side of the road and hyperventilating. \"When did we get in the fucking car? What the fuck?!\" His hands banged on the steering wheel in frustration. \n\n\"Shhh!\" Danny said. \"Don't startle your sister. She's been dying to suck my cock all night. And you'll just upset her.\" \n\nJason turned around and looked at Danny. His sister was stark naked sucking his cock like it was an Olympic sport. \n\n\"Fucking fuck, fuck, fucking fuck!\" Jason screamed. \"I'm going to fucking kill you, Fuckface! I'm going to pull you out of the car and fucking kill you!\" \n\nMandy didn't break stride. It was as if she couldn't hear a word they spoke. She gurgled and gagged and sucked away on Danny's cock. He held her long brunette hair as her head bobbed up and down like a practiced slut. \n\n\"So why don't you?\" Danny finally asked. \"You've been saying that all night. Just do it already.\" \n\n\"I...\" Jason paused. \"I will in a just a second...\" He wanted to open his car door but he couldn't seem to do it. \"What the fuck?\" He concentrated harder, but his body just wouldn't obey. \"Goddamnit! Motherfucker!\" He turned to climb into the backseat but that didn't work either. \"What the fuck is going on?!\" \n\n\"Nothing.\" Danny said. \"Let me ask you a question. An honest question. Have I ever done anything to you? In all the years we've been in school together, have I ever insulted you? Hurt you? Done anything to you?\" \n\n\"What the fuck does that have to do with anything, Fuckface?\" \n\n\"Just answer it?\" Danny replied calmly. \n\n\"Well...\" Jason thought for a moment. \"No... I guess not... but you're a fucking nerdy retard...\" \n\n\"Exactly. I haven't done anything to you. And when I told you in the cafeteria all those months ago to leave me alone. When I said you'd had your fun, but please leave me alone. What did you do?\" \n\nJason was getting more annoyed. \"I flipped your stupid tray in your stupid lap, Fuckface.\" \n\n\"And just before that... when I said don't bother me anymore or I'd be forced to retaliate. And you asked how. What did I say?\" \n\n\"Oh yeah!\" Jason said, laughing. \"You said...\" He thought for a moment. \"...um... you said...\" Why couldn't he remember it? \"... Ugh! Come on! You said... It was really funny. I remember it being funny...\" \n\nDanny was amused. He erased that portion from his memory. \"I said that I could fuck up your world. I said that I could control minds.\" \n\n\"Oh yeah!\" Jason laughed. His laughter slowly faded as Danny allowed him a moment of true clarity, brief as it was. His eyes went wide. \"No! Wait. You couldn't. You can't actually...\" He suddenly looked more serious then scared. \n\n\"Yeah, Jason.\" He said mockingly. \"I can! Look at your twin sister slurping my cock. And I fucked your mom senseless tonight. Your dad paid me how much to do it? And I'm coming back tomorrow to do it again. Except tomorrow I'm gonna fuck your mom's asshole. Your sister's too. Did you know assholes pay double? Your dad doesn't either. Not yet.\" \n\n\"Don't you fucking dare, Fuckface!\" Jason said, fuming. \n\n\"Don't worry, Jason. You'll learn to appreciate it. Your dad loves the way I fuck your mom. He cheered me on. You will too. You'll be a great cheerleader for me at some point. Maybe you should've left me alone. But you didn't, did you? How many years did I spend trying to avoid you? How many times did you fuck with me for your own amusement? Although if you hadn't, I wouldn't have learned what amazing cum guzzlers your mom and sister are.\" \n\n\"I'll fucking kill you!\" \n\n\"You keep saying that!\" Danny laughed. \"Come on, Jeeves. Drive me home. I like having you chauffeur me while your sister sucks me off. You'll forget all about this soon enough. But I'll let you remember. I'm gonna fuck your mom's ass, Jason. And she's gonna love it. It'll be their idea too! Your dad and mom will think it's the smartest the thing ever! And then your mom will beg me to fuck her shithole. And when you see them come up with this plan, you'll remember what we talked about.\" \n\nJason was fuming. It wasn't possible. It couldn't be possible. Everything seemed muddled in his head all of a sudden. The whole night. He was trying to remember exactly how it went. By the time he thought he had it figured out, he turned back to see his sister's face covered in cum. \n\n\"Fuckface! We're here!\" Had he meant to say that? \n\n\"Thanks, Jeeves.\" \n\nDanny got out and walked toward his small one-story house. Jason could finally open his car door. He fumbled with it and then ran after him. His fists were tight. \n\n\"Fuckface!\" He shouted. \"Hey, fuckface!\" \n\nDanny stopped and turned. \"Yeah.\" \n\nJason stopped, getting right in his face. \"Enjoy my mom's asshole tomorrow, okay? I want you to really gape it!\" \n\n\"Sure thing.\" Danny replied. \n\nJason stomped his feet like a little child. That wasn't right! Why didn't that come out right? He was losing his mind. \n\n\"No! Wait! That's not what I meant to say!\" He babbled. \"I meant... I meant... Enjoy my mom and my sister's assholes tomor...\" He gasped before he even finished the sentence. \n\n\"Thanks, Jason!\" Danny patted his head. \"Get my little cum guzzler home safe. I like your sister. Tomorrow you'll start to come around. I'm sure of it. Enjoy your practice tomorrow.\" \n\nDanny disappeared inside his house. Jason stood there confused. What practice? Something was wrong. He was sure of it. But he couldn't figure it out. He felt like he said the wrong thing. Everything was so muddled. He got back in the car. \n\n\"Oh, Jase!\" Mandy squealed with delight. \"Isn't Danny amazing! Gosh, I should've asked him out forever ago. I miss him already.\" \n\nJason looked at his sister. She'd climbed into the passenger seat in front, still nude. Cum still dripped down her face. Mandy! Fuckface defiled Mandy! That was it! He hated that fucking kid. And he glanced at his sister again thinking about how badly he'd always wanted to see her naked. He loved her. But she loved Fuckface. It was the worst thing ever. Then he remembered the rest of the night. Oh yeah, he thought! How'd he forgotten it so quickly? Fuckface fucked his mother too! The world had gone mad. \n\nBy the time he finally made it home he passed the last few cars leaving his house. \n\nBrett Dereckson honked his horn and hung his head out his car window. \"Greatest party ever! Fucking epic!\" \n\n\"Shit!\" Jason said in disbelief. \"I completely forgot about the fucking party! Mandy, we missed our entire party!\" He said looking over at her, but she was lost in her thoughts with a giddy grin, sucking on her finger. \"Oh fuck! Beth is gonna kill me! Fuckface ruined everything!\" \n\n****** \n\nDanny found his mother laying on the couch, watching television. He plopped down next to her. \n\n\"You were out late.\" She said, sitting up. \"That's not like you.\" \n\n\"Yeah. I was out on a date.\" \n\nLori Dugan sat up intrigued. \"Did I hear that right? My son? Danny Dugan? On a date? With whom?\" \n\n\"Mom! Don't tease me. You probably don't know her. She was having a party.\" \n\n\"Stop the presses!\" Lori laughed. \"You were at a party too? Well this is all new. Was it supervised?\" \n\n\"Yeah! Totally. Her parents were there. I hung out with them for a bit.\" \n\n\"Oh, this sounds serious!\" Lori leaned forward. \"What was her name again?\" \n\n\"I didn't say.\" Danny replied. He groaned as he saw her arch an eyebrow and wait. \"Fine! It's Mandy Cooper.\" \n\nLori placed her hand on her son's knee. \"Danny, I just want to be a part of your life. It's been a bit strange since your dad just up and walked out. Maybe it was for the best. But if you don't want to tell me who you're seeing... I won't pry... I don't want to be that kind of mom. I know you've always been a quiet, private person...\" \n\nDanny rolled his eyes. \"Don't be so dramatic! I told you. It's Mandy Cooper.\" \n\n\"Mandy Cooper?\" Lori repeated. \"Like Mandy Cooper, head cheerleader? Mandy Cooper, whose brother is captain of the football team? Mandy Cooper, daughter of Greg Cooper? The Coopers, Mandy Cooper? That Mandy Cooper?\" \n\n\"Well... yeah.\" He said. \"You don't need to sound that surprised.\" \n\n\"That girl is gorgeous, Danny. Drop dead gorgeous. It's... It's not that I'm surprised... it's just... you know... The Coopers... they're really, really wealthy. And we're not really in that same economic... um...\" Lori paused trying to find a proper response. She really couldn't believe her son could be dating Mandy Cooper. Nor did she think it was realistic. \"... what I'm trying to say is... I think her father might not agree... you see... sometimes with those kinds of people...\" \n\n\"You mean, Greg?\" Danny asked. \"The Coop fucking loves me. We're tight.\" \n\n\"The Coop?\" \n\n\"Sorry. I mean Mr. Cooper. Oh, speaking of which...\" Danny reached in his pocket and pulled out a wad of cash. \"I'm helping Coop with some things. Sort of like a side job. He's paying me for it. I want you to use this toward the mortgage and bills.\" \n\nLori counted the cash on her lap. \"Danny! This is $3800!\" \n\n\"Yeah.\" \n\n\"I swear sometimes I'm taken aback by the number of strange things that have happened in the last so many months. I mean that thing with your dad...\" \n\n\"What about it?\" \n\n\"Who just moves to Brazil to pursue their dreams of being an Amazonian medicine man?\" \n\nDanny tried not to laugh. When he'd decided to send his dad off for good, he remembered that Nat Geo television show his old man had been watching the night he'd hit his head. It seemed appropriate. His dad loved watching dumb shit about the Amazon instead of supporting his family. \n\n\"I guess he does.\" He answered. \"But good riddance. He was a dick.\" \n\n\"I guess you're right.\" \n\n\"Don't overthink it. We'll be fine. You're certainly better off without him.\" Danny said sincerely. \"I'm tired. Night.\" \n\nDanny retired to his bedroom. He probably should've tinkered more with his mother's mind, but he didn't want to mess her up. He tried to keep everything as normal as possible. There were a few exceptions, of course. His room was off limits. \n\nHe closed the door and looked around. All four walls were a collage of news articles, pictures and facts that he'd dug up about the Coopers. One wall was a timeline. Jason's party was circled. That was the inception point, where it all began, months of work. Danny had the whole thing meticulously planned. Obsessively almost. \n\nOne thing he'd learned is that if he told someone to do something, sure they'd do it. But afterward it wouldn't make sense. They'd feel strange. It would cause panic and emotional stress. They'd seek help. They would be conscious of the fact that something was wrong. Sort of like his dad that very first night. It was dangerous and risked exposure. \n\nFor the Coopers, he was driving them to instigate events on their own. That took effort. Planting one thought\u2014a seed\u2014and letting it grow into something they assumed was their own. And then building layer upon layer upon layer, letting them create entire series of events and choices they thought were their own but were ultimately manufactured. That way, Danny didn't need to be there for the dominos to keep falling. But it also meant when he pushed a thought into their minds it had to be precisely worded. Precision was key. Or the whole charade would come tumbling down. \n\nDanny Dugan had his sights set on the Coopers. They didn't know what was coming. \n\n****** \n\nGreg Cooper was awake and showered and fired the fuck up! He had a clean shave. His close-cropped salt and pepper hair was perfect. His collared shirt was slightly tight and clung to his wide chest and thick biceps. It had an embroidered name on the chest that read: Coach Cooper. He had shorts that really hugged his thighs, and a brand new pair of Adidas sneakers laced up nice and tight. \n\nHe walked down the hallway and lifted the whistle attached to a lanyard around his neck, blowing it three times. \n\n\"Coopers! Coopers! Coopers!\" He announced in a booming voice. \"Rise and shine! Team meeting at 08:00! I need everyone to meet down in the screening room asap! Don't bother getting dressed just wear your panties, people! Let's move!\" \n\nHe seemed satisfied by the audible groans of his family rousing from a restful night sleep. Today was the day that the Cooper family vindicated themselves. Greg wanted to be ready. The Cooper Family Pride was at stake. \n\n****** \n\nThe Cooper house, if it could be considered a house as it firmly qualified as a mansion, consisted of 15,000 square feet of living space. As such, it afforded a myriad of luxuries and fine furnishings. One of which, was a fully functioning, state of the art, screening room. \n\nThis small theatre had a twenty-foot movie screen and digital film projector. The walls were fully sound proofed. The speakers provided the ultimate surround sound, theatre experience. The room was in three tiers. The upper tier, the largest of the three, was complete with a wet bar and kitchenette, en suite bathroom, popcorn machine and three large lay down uopholstered chaise lounge sofas with accent pillows for comfortable viewing. The other two levels had oversized leathers screening chairs with power reclining options and small tables separating each to place your snacks. There were five chairs in each row. \n\nGreg had moved a white board down to the front of the screening room. At the top of the board, he'd written: THE COOPER FAMILY PRIDE! And just below that he wrote: THE DANNY CONUNDRUM, DEFEATING A HORSE COCK. \n\n\"Morning, daddy!\" Mandy greeted him as she skipped into the room. She was wearing a pair of mint green bikini panties that were practically pasted to her ass cheeks. \n\n\"Hi, princess! I've got a power smoothie at your seat if you want it. We need you high energy today!\" \n\nShe crawled up on her seat in the front row and curled her legs under her, grabbing the smoothie and sipping on the end of the straw like a child. \n\nShe giggled. \"What's with the get up, daddy?\" \n\n\"Morning! Am I late?\" Libby hustled down wearing only black lace tanga panties. Her titties bounced the entire way. \n\n\"Morning, hun!\" Greg said, turning his attention back to Mandy. \"It's my old coaching outfit. From when I used to coach Jason's basketball team in middle school. And I found my old white board in the garage too! We've got the namesake on the line, girls! We need to attack this like any other competition.\" \n\nThey nodded. \n\n\"I'm so excited to see Danny again!\" Mandy sighed. \n\nLibby sat in the seat next to her and leaned in excitedly. \"Someone's in love!\" She teased. \"And who wouldn't be with all that wonderful cockmeat.\" She added seductively. \"Thick tubed fuckmeat... delicious dick du jour...\" \n\n\"Hun, you've got to milk that fuckmeat, okay? I'm glad you're excited, but this is bet I intend on winning.\" He stated. \"Speaking of which... where the hell is Jason?\" \n\nJason's head had been foggy all morning. There was something important about today. There was something important about last night. It had to do with that bet. What was it exactly? Oh yeah, the Cooper family pride was at stake! That's right! And he needed to help. That was it. Wasn't it? He thought harder. Oh yeah, he remembered! Fuckface! His mom and Mandy had to fuck the cum out of Fuckface today! \n\nHe heard his dad asking about him already. He was moving as fast as he could. It was early. He didn't sleep well. \n\n\"I'm here! Fuck! Give me a break!\" He groaned as he stumbled into the room wearing nothing but a pair of red lace thong panties. \n\n\"Jesus Christ, Jason! What the fuck are you wearing?\" Greg croaked. \n\n\"Ew!\" Mandy gagged. \n\n\"You said to come down in just our panties...\" Jason sputtered. \n\n\"The girls!\" Greg sighed. \"That was meant for the girls, Jason! Where did you even get those?\" \n\nHe hung his head low. \"I had to borrow them... from mom.\" \n\n\"Alright.\" Greg gathered himself. \"Let's start this off with a small intervention... because you're not taking this seriously, Jason. Your mom and I discussed it last night. I'm sure Mandy agrees. We feel like you aren't all in like the rest of us.\" \n\n\"I'm sorry.\" Jason said pathetically. \"I'll do better.\" \n\n\"Okay. At least your attitude is getting better. But get your shit together, okay?\" Greg seemed satisfied for the moment. \"So, you've all got a pen and pad. If you get ideas write them down. We need to come up with a strategy to get to Danny to blow his load.\" He rolled out his white board. \"Let's start with some brainstorming first. Then we'll roll the game footage to reassess last night's performance.\" \n\n\"What game footage?\" Libby asked. \n\n\"Hun? Come on! When have I not filmed a Cooper winning a bet? I had the iPhone video rolling the whole time.\" \n\n\"Oooh!\" Mandy clapped. \"I get to see mom stuffed like a turkey!\" \n\n\"Alright. Calm down.\" Greg cautioned. \"Let's start brainstorming. How about lingerie? You girls look sexy in panties. What if we kick it up a notch?\" \n\n\"I like that idea!\" Mandy agreed. \"Wait. I don't have anything.\" She pouted. \n\nGreg wrote 'lingerie' on the board. \n\n\"We can go shopping, sweetie.\" Libby said. \"We'll look hot.\" She looked back toward her husband. \"I should practice holding my whatchama-call-its... you know! My cummy cums!\" \n\n\"Excellent!\" Greg noted. \"Fuck practice and orgasm denial.\" He wrote it down. \"Jason, are you going to contribute anything?\" \n\nJason had been scribbling on his notepad and humming to himself. He looked ridiculous in his tight red panties with his otherwise perfect six pack abs and toned pecs. \n\nGreg ignored him. \n\n\"Do I get fuck practice too?\" Mandy asked. \n\n\"You can't fuck Danny again until the bet, princess. We can't have him stretching you out.\" \n\nShe pouted again. \"That's not fair! Mom gets fuck practice! I want to fuck practice!\" \n\nJason jumped up from his seat. \"I'm Cooper Duper!\" \n\n\"Jesus Christ, Jason! I swear to God! I'm going to take your car privileges or your allowance or something.\" Greg snapped. \"Have you done anything to help?\" \n\nJason couldn't understand his problem this morning. He wanted to be helpful. At least he thought he did. He couldn't seem to think clearly. \n\nGreg grabbed the notepad from his desk. \"For fuck's sake! Are you doodling? You're like a teenage girl! Panties and all! What is this supposed to be? A heart? What does this say? 'Danny hearts mom's bum bum'? You're a child, Jason! Bum bum? Not ass or butt? Bum bum?\" ",
        "Jason jumped out of his seat. \"I... I... I...\" \n\n\"You what, honey?\" Libby asked, trying to help figure out what he needed. \n\nJason started feeling very antsy. He broke into song. \"I... I... I like big butts and I cannot lie! You other brothers can't deny! When a girl walks in with an itty bitty waist. And a round thing in your face! You get sprung!\" \n\nHe completed the lyric from Sir Mix-A-Lot with a full booty quaking twerk. Then he stopped suddenly looking rather red faced. Mandy was dying of laughter. \n\n\"Don't encourage him! Goddamnit! That's it! I'm taking your allowance.\" Greg said, waving him off. He stared at the stupid pad with the stupid doodles. Then it hit him. \"Wait! Jason may have been on to something!\" \n\n\"What's that, babe!\" Libby asked. \n\nGreg got up to the white board. He drew a crude figure of woman with two small circles for tits and stringy hair. \n\n\"Maybe we've been coming at this all wrong?\" He said. \"We've been trying to maximize the amount of pleasure he gets, while minimizing yours to get him to bust his mega-nut first, right? It's not worked so far. So we've also been trying different positions, right? Except... follow me here... each time, Danny's massive manmeat missile has been pounding you girls here.\" He drew an arrow pointing between the stick figure legs. \"In your cunt-holes. But what if we switch it up and have him retarget that meat missile to stretch you here instead.\" He drew an arrow going around to a crudely drawn set of ass cheeks. He marked the rear entrance with an X. \n\n\"My butt?\" Mandy asked innocently. \n\nLibby understood it better. She smiled devilishly. \"You want Danny to fuck my ass?\" She watched him nod. \"It's brilliant, babe!\" \n\nJason had a sudden flash. He sat straight up in his seat worriedly, his mind rewinding all the way back to last night. He was in the car with Fuckface. What did that little shit say? He was controlling their minds! He said he would fuck his mom and sister in the ass today. And here it was playing out like it was all their idea! It was exactly like he said it would be! Everything that was happening was part of some big plan! Fuckface was a supervillain intent on destroying his mom's butthole! \n\nHe started sweating profusely. Why was he wearing panties? Why was his dad coaching his mom and Mandy on how to fuck Fuckface? This was worse than he thought! How did no one find this the least bit out of the ordinary! It was dire! He had to stop it. \n\nJason jumped up waving his hands desperate to get their attention. \"It's a bomb!\" He screamed at the top of his lungs. \n\n\"Goddamnit, Jason! Sit down and shut the fuck up! I've had enough!\" Greg shouted back sternly. \"We're making progress here! Butt stuff is the key!\" \n\n\"It's a bomb! It's a bomb!\" Jason screamed. He couldn't understand why his words weren't coming out right. \n\n\"Jesus Fucking Christ! I've had enough!\" \n\n\"Fuckface! Fuckface! Fuckface make Cooper go boom boom! And... And... And a pussy goes pop!\" \n\nAnd just that quickly, Jason lost all that clarity, slipping back into his fog. What was he trying to tell them? It was so important. \n\n\"That's it! I'm grounding you for the rest of the year.\" \n\n\"Waaaaah!\" Jason cried, twisting his fists at the sides of his eyes. \"But, Riiiicky!\" He said doing his best Lucille Ball. \n\n\"I swear to god!\" Greg clenched his teeth. His fists were balled up tight and he closed his eyes taking a deep breath. \"Libby...\" He said as calmly and softly as possible. \"He's a fucking retard. I'm serious. I can't deal with this shit right now. We have a goddamned bet to win...\" He threw his hand out pointing to Jason but still staring at his wife. \"When we win this thing and finally drain Danny's horse cock, I want you to take him to be tested. Until then deal with this shit or I'll fucking kill him.\" \n\nJason pouted in his chair with his arms crossed. \n\nLibby walked over and knelt in front of him. \"Jasey Wasey! Do you think you could do mommy a big favor and behave while we practice for this competition?\" He didn't answer. She grabbed her breasts and squeezed them together. \"Mommy will shake her titties in your face, if you promise to be good!\" \n\nJason looked up slowly and smiled. \n\n\"Who's my good boy!\" She cooed. \"Now your dad needs you to be a good boy and cheer for me and your sister today while we fuck some thick cockmeat. Will you do that for us? Can you help us get ready and be a good boy? And then cheer tonight?\" \n\nJason shook his head emphatically. Libby stood up and pulled his head into her cleavage and let him motorboat her. It lasted only ten seconds or so. \n\n\"Thanks, mommy!\" Jason said, his cock hard and hanging out the side of his panties. \n\n\"Gross, mom!\" Mandy gagged. \n\n\"Really, Hun?\" \n\nShe looked back at Jason who sat alert. \"It worked. Right?\" She shrugged. \"It's just a titty touch.\" \n\n\"Can we please talk about anal now?!\" Greg asked exasperated. \n\n\"Um... yeah...\" Mandy said, sipping her smoothie. \"About that... I don't think I could ever fit Danny's cock in my butt! There's no way!\" \n\n\"She's right, babe. He's way too thick for a virgin asshole! He'd tear her to pieces.\" \n\nGreg rubbed his chin in thought. \"Look, princess. I think you can really win it with your cunt.\" He knelt down and pushed her knees apart. \"Pull your panties aside for me.\" He waited as she grabbed the mint green fabric exposing herself. \"Look at that! It's magnificent! I'm surprised he didn't blow last night. It was close though. It'll probably be close again.\" \n\n\"I'm sorry, daddy! I'll try to ride his fuckstick better. I promise.\" Mandy really meant it. \n\n\"It's not your fault, princess. His fuckstick is really something. I think butt fucking is great for your mom. Her cunt-hole just can't help but cream for cock. Now her butt? Well it's a little less sensitive. She doesn't usually cum that way. We stand a chance!\" \n\nLibby nodded. \"It's true, Mandy! My cooter craves cock! And when I'm getting my pussy pumped I can't help it. Usually I can control myself a little bit better. But Danny's log of cockmeat! It's just heavenly!\" \n\n\"Princess, my point is... if the Coopers are going to be able to hold their heads high. If we're going to have that Cooper family pride... then we need to have every available resource. And if Danny makes your twat tweet before he can honk his horn... well... we may need your pooper to pull the weight! So, you need to buck up and be a three-holed cock puppet. Okay? Two holes just won't do.\" \n\n\"I'm scared.\" Mandy said truthfully. \"I'm scared it'll hurt.\" \n\nLibby put her hand on her daughter's leg. \"Maybe mommy can buy something today for you to stretch it with. And we can trim this girly bush too. Make it pretty and sexy. Cum dumps don't have furry snatches.\" \n\nMandy smiled. \"Really? Okay! I'm trying so hard! I want you both to be proud of me! I'm just not experienced.\" \n\n\"That's why we're here, princess. Mom and dad are here to help you be the best filthy cum dump ever! Remember, there's no better whore than a Cooper whore!\" \n\n\"Cooper duper!\" Jason cheered, holding his arms up in the air. \n\n\"Yes, it is, Jason.\" Greg finally agreed with his son. \"Yes it is.\" He lowered the lights. \"Let's roll the tape.\" \n\n****** \n\nTires screeched as a Maserati fishtailed around a corner at blinding speed. Gunfire bit at the buildings around it, barely missing. Two black Escalades followed close behind. Mercenaries dressed in black ops military gear hung out of the windows firing their high-powered assault weapons. \n\nDanny Dugan sped forward in his sports car. He wore a tight, bright yellow Hawaiian shirt, those brown checkered pants from the nurse's office and a mischievous smile. The city streets were streaking by in the reflection of his mirrored aviator sunglasses. \n\n\"Danny! We'll never make it!\" Mandy's head popped up from between his legs. \n\nHe shifted gears again weaving through traffic. \n\n\"Keep sucking, sugartits! I got this!\" His right hand guided her head back down on his stiff cock. \"Yeah. That's good!\" \n\nDanny jerked the wheel, spinning the Maserati sideways, skidding down the center of the street. He extended his arm through the open window and fired his Glock G41 pistol twice blowing out the tires on one vehicle. It flipped, skidding into a lamppost. He spun the wheel again bringing the car back around seamlessly. \n\nMandy gagged on his cock as she sucked it. \"What do they want?!\" She gasped, coming up for air. \n\nDanny pulled a velvet cloth from the center console. He drove with one hand as he unrolled the cloth with the other. He unveiled a gleaming crystal phallus inlaid with emeralds. It was breathtaking. \n\n\"The legendary crystal phallus of the lost tribe of Titticokmete! It's priceless!\" \n\nMandy gasped at its beauty. \"Oh! Danny!\" \n\nDanny shoved her head back on his cock. He lifted the hem of her dress as he drove. Then he slipped the crystal phallus between her legs, pressing it into her snatch. Mandy groaned. \n\n\"For safe keeping!\" He said cooly. \"We're not out of the woods yet.\" \n\n\"What about dinner with my mom?\" She asked quickly, trying to grab a breath. \n\n\"Just keeping sucking! She'll get my dick for dessert.\" \n\nDanny turned the car into a construction zone. The second Escalade still following. He saw a freight truck with a 'Wide Load' warning sign and payload of steel support beams. He fired his gun shooting the safety straps. The beams came loose tumbling down and crushing the SUV. \n\nDanny slammed the breaks just as he came. Mandy swallowed as fast as she could. \n\n\"Wide load indeed.\" He said holding her head as he filled her mouth. \n\nWords superimposed the screen as a deep, vibrato voice narrated: \n\n\"Danny Dugan is Danny Dugan, the world's most dangerous treasure hunter and practiced lothario, in this summer's hotly anticipated blockbuster release, Danny Dugan Saves The World And Fucks Some Fine Ass Bitches With His Big Ass Wang.\" \n\nA rhythmic beeping kept interrupting and otherwise perfect movie trailer. \n\nDanny batted his arm aimlessly hitting just about everything except his alarm clock, finally striking the right button and terminating the interruption. It took him a moment. Then he thought about that dream and smiled. Yeah, why not? \n\n\"Danny! Danny!\" He chanted to himself, still half asleep. \n\nHe looked at the clock. It said 10am. He glanced at his timeline. He wasn't sure how accurate it would actually be. There was no telling how all those thoughts would manifest. But if everything was going as planned, Jason should be on his way to the Pleasure Emporium about now. He chuckled. \n\nDanny had his own business to handle today. He rolled over misjudging the edge of the mattress and fell straight to the floor with a painful thud. \n\n\"Oomph. Shit.\" He groaned. \n\nHe didn't usually wake up this early on Saturdays. He could sleep until noon or even one o'clock. But that was back when he avoided his dad, and before he had interesting opportunities. \n\nHe strolled into the kitchen a short time later. \n\n\"Oh good. You're awake.\" His mom said. She sat at the kitchen table going through the finances. \"I wanted to talk to you about this Mandy Cooper thing. I'm really happy you're putting yourself out there and dating. Believe me. I'm elated! But... there's something that seems off about this.\" \n\nDanny sighed. \"Really, mom. My first girlfriend and you're throwing a penalty flag? Can't I just enjoy it?\" \n\n\"I want you to! But Mandy Cooper? No offense. You know I think you're wonderful with a lot to offer the right girl. But something doesn't feel right. I don't trust it. And I don't trust the Coopers. Libby Cooper is as fake as they come. Did you know she made me withdraw my contributions from the bake sale last year? She said she wouldn't stand back and let me sell turds in the shape of cookies. She said that! And the dad is worse! I've heard that Mandy is different. But you can't trust it. It's a den of snakes over there! I'd rain a meteor on them if I could. Besides that girl could have anyone. Why you?\" \n\n\"Are you finished?\" Danny asked. She nodded silently having gotten that off her chest. \"Maybe she likes me. Had you considered that? I'll be fine. Don't worry about it.\" \n\n\"It's my job to worry, Danny. I'm a mom. And even you have to admit that there have been some strange things happening.\" \n\n\"I think we've had some good luck. I like Mandy. And wouldn't you like to live like the Coopers? Don't you think you deserve to have it easy? I'll take whatever I can get. And if Mandy wants to spend time with me... Yes, please. And if Mr. Cooper wants to give me money... he can certainly afford it.\" \n\n\"Just be careful, Danny. You're all I've got. I don't want to see you get hurt.\" \n\n\"I'll be fine, mom.\" \n\n****** \n\nJason arrived at the Pleasure Emporium feeling awfully confused. Why was he acting so strange today? It just wasn't like him. He was Jason fucking Cooper. He was captain of the football team. He was dating Beth Fleming, the hottest girl in school. And he acted like a retard all morning. \n\nHe shook it off. \"Get it together, Cooper.\" He said aloud. \n\nJason got out of the car and walked determined into the warehouse style store. There were strange things happening and he didn't like. Not one bit. He couldn't exactly put his finger on what it was, but it was going to end now. No more fucked up confused thoughts. No more odd behavior. He was focused. He needed to buy butt plugs and dildos. And what else? He stopped and thought. Shit. He knew he should have made a list. His dad would be pissed if he got this wrong. \n\nThe Pleasure Emporium was a massive one stop shop for all levels of kinky pleasures from beginners play and gag gifts to serious bondage gear. The second Jason stepped foot inside his head went all wobbly again. Aisles and aisles of sex gear and slutty clothing stretched out before him. He stood still in the front of the store entranced by a massive display case of motorized devices. \n\n\"Welcome to the Pleasure Emporium where we make your fantasies a reality. My name is Anthony. Can I help you find anything?\" A goth kid in his twenties looked disinterested as he spouted his monotone greeting. He wore leather pants and a mesh shirt with visible nipple piercings. \n\n\"What are these?\" Jason asked with wonderment. \n\n\"That's our line of fucking machines.\" Anthony pointed. \"Everything from the handheld anal destroyer to the saddle mount Rodeo Ryder. Then there's the larger mounted ones... the LoveBots, The Jaxx Hammer, The Bang Bench. Some of them don't have names just fucking machines, I guess.\" \n\n\"Wowzers!\" He gasped in awe. \n\n\"Oh...are you interested?\" Anthony asked. He'd never seen anyone actually buy one of these since he started working here. \n\n\"Whoot! Whoot!\" Jason jerked his arm as if he were pulling a train whistle. \"Next stop, Poundtown! Load 'em up!\" \n\n\"Alright!\" Anthony perked up. \"Um... which one were you thinking...\" \n\nJason hunched his face thinking. What was he supposed to buy again? This was it, right? He glanced around the massive store. Better safe than sorry. \n\n\"All of them. I'm hunting rabbits!\" \n\n\"Alright! Wow. Someone's getting their ticket punched tonight!\" He tried to play on the train analogy but it went over Jason's head. \"Yeah... Okay... let me get those out of the back.\" \n\nJason grabbed a cart and continued shopping. He seemed determined to not disappoint his dad by showing up empty handed. He found an aisle of butt plugs. There were so many sizes. How many butts were there at home? How many did he need? He let out a sigh of frustration. This was harder than it looked. Four butts, two cunts. Did everything need to be filled? Damnit! Hadn't they gone over this already? \n\nAnthony kept stopping back and making suggestions. Jason couldn't believe how smart he was. It made him feel better having some help. \n\nThe cart was towering with toys. Nearly overflowing. Jason carefully steered back toward the register down past the costumes when something caught his eye. Oh boy! He turned back again and again in a never ending loop of purchases. \n\n****** \n\n\"Fuck my cunt, baby! Harder! Fuck it harder!\" \n\nGreg grabbed Libby's hips and really drove himself deep, sinking his cock as deep as it would go. \n\n\"Take it! Take it all!\" Greg growled. \n\n\"Come on, daddy!\" Mandy prodded him. \n\n\"Deeper, baby! Deeper!\" Libby begged. \"My fuckhole needs it deep!\" \n\nGreg pushed as hard as could slamming against her ass. \"Yes! Fuck!\" He gritted his teeth. \"Are you close? Are you almost there?\" \n\nLibby's titties were bouncing back and forth beneath her. \"Almost! Almost!\" She squealed. \"Ohgod! I'm holding it! I'm holding it!\" \n\n\"Don't cum! Don't cum!\" \n\n\"I'm trying...\" She whimpered. \n\n\"Come on, mom!\" Mandy cheered. \n\n\"I can't hold it! I can't!\" She begged. \"Please!\" \n\nGreg pulled out without finishing. Breathing hard. \"Shit! We'll have to better than that, I think. But that was better. It's getting better.\" He collapsed on the bed with his erection still throbbing. \"Do you think it's helping?\" \n\nLibby didn't say anything. \n\n\"Mom?\" Mandy asked. \"Is it?\" \n\n\"I... I don't know...\" She replied. \"You fucked me really good... but...\" \n\n\"But what?\" Greg asked. \n\n\"It's just not the same. That cock is great. But Danny's fuckstick is massive.\" Libby admitted awkwardly. \"It's hard to hold it on that hunk of meat.\" \n\nGreg conceded. \"Well... I can't compete with his meat missile. That's for sure.\" \n\n\"I love your cock, babe! It's just hard to practice for what I know is coming.\" \n\nMandy laid on the bed with them. She looked down at her dad's dick and really studied it for the first time. She knew she shouldn't. But she hadn't seen very many. She was curious. \n\n\"Daddy, I think you have a nice fuckstick. It's big. Jason's is so small compared to you and Danny.\" She said sweetly. \n\n\"Thank you, princess.\" \n\n\"Sweetie, no one compares to Danny. He's hung like a horse. Your dad has a nice, big cock.\" Libby squeezed it in her hand. \"It fucks mommy so good. But Danny's like cockzilla. His dick can destroy cities and tear up pussies. Your brother is just average. Not really small at all. Just not big. Speaking of which... what was his deal last night and this morning. It's not just me. He jerked off to you too, Mandy.\" \n\n\"I don't know.\" She shrugged. \"It's a little gross, but I don't really care.\" \n\n\"The kid has problems.\" Greg chimed in. \"This is a bet. Not a chance to get your rocks off. Where is he anyway? He should've been back by now with those butt plugs. If we're gonna get Mandy's ass stretched before tonight we need to start before you go shopping.\" \n\n\"He'll be back. I promised him another titty touch.\" Libby said. \n\n\"You've gotta stop doing that. It's just not right.\" Greg replied. \"Mandy, let's have a look at your puckered starfish and see how tight it is.\" \n\n\"You mean my butthole?\" She asked. \n\n\"Yeah, sweetie.\" Libby said. \"Show your dad what a nice job I did trimming your fuzzy snatch too.\" \n\nMandy pulled off her mint green panties and spread her legs open at the top of the bed. Her mom and dad crawled between her legs looking at her pretty pussy. \n\n\"Sweet baby Jesus, hun! You're a cunt artist. It's the most beautiful, damned pussy I've ever seen!\" He saw the perfect trimmed strip of hair above her slit. And then the smoothly waxed pussy beneath it. \"Danny is a freak if he doesn't cum just looking at it. Hell, I could cum just looking at it!\" The words didn't quite register until they'd already left his mouth. \n\n\"Babe!\" Libby yelped. \n\n\"Oh god! Does it make your fuckstick hard, daddy?\" \n\nGreg didn't know how to respond. He wasn't exactly sure how he felt. Libby noticed the moisture bead along her daughter's cunt lips. "
    ],
    "authorname": "Nicequip",
    "tags": [
        "revenge",
        "big cock",
        "mind control",
        "incest",
        "lesbian",
        "gay",
        "mature",
        "mother",
        "sister",
        "cuckold"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/cooper-family-pride-pt-01"
}