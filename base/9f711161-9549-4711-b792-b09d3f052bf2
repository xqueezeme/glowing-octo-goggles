{
    "title": "When You Know Ch. 06",
    "pages": [
        "\"Well, little one,\" Vicky said rubbing her belly, \"It's you and me now; we're in this together.\"\n\nFor the first time in a long time, perhaps ever, Vicky had no job to be at, no school assignments; no parents to please. She was free to live her life on her own terms, and for the new life growing inside her. The problem was, of course, the life she wanted desperately for both of them would always be out of her grasp now.\n\nDespite the situation, Vicky was so happy to be pregnant, more than she ever thought she'd be. She wanted to be a good mother, to not repeat the mistakes of her parents. But she was sure they said that as well when she was born, and then they went on to not only repeat mistakes, but to make new devastating ones. \n\nThe little voice in Vicky's head constantly whispered to her that she already made a big mistake, one that wasn't too late to fix, at least yet. But she ignored it; it WAS too late, and anyway it wasn't a mistake. She had to let Joe go, it was the only thing she could do.\n\nThe only event on her schedule this week was her follow-up appointment at the doctor, and her first ultrasound. Emma was going with her; along with Rebecca she was the only one currently aware that Vicky was pregnant. Vicky was going to need them, because she realized she couldn't rely on anyone else.\n\nHer parents were out, for obvious reasons. They would find out at some point, obviously, but she no longer wanted them in her life. They may have helped ruin her happiness, but they were never going to be put in the position to do the same to her own child.\n\nShe desperately wanted to tell Ken and Annie; she considered them her family now. But she couldn't, because they would tell Joe, and she knew what would happen then. Sadly, Vicky also realized they would hate her as much as Joe would when they finally found out. But it was the price she had to pay for all of them, and for Joe's success.\n\nJoe, she sighed audibly, he was always at the forefront of her thoughts. She knew his 3 month orientation in New York was ending this week, and he would be flying off to London right after that. He was probably home right now at that beautiful little house in Elmwood Park, packing his things. So many times in the last three months she pulled up his number on her phone and placed her finger on the speed dial number. Thousands of times maybe, she figured, especially since learning she was pregnant.\n\nShe knew those were the only words that needed to come out of her mouth to get him to stay. Before she even finished the sentence he would be on his way back here, to be with her. And he would no doubt say all the right things; that it wasn't just the baby, that he loved her and wanted to be with her, that no job mattered more than her. After all, he had said the last two plenty of times to her even as she was convincing him to leave.\n\nBut despite that, Vicky would never be able to shake the doubt in her own mind that he was really staying only for the baby, that otherwise he would be living his life in London and getting ready to do the great things she knew he was destined for. She would never be able to shake the feeling she trapped him, and eventually she feared he would feel the same way. Then she truly would lose him forever, and she couldn't bear that.\n\nAnd sometimes she wondered if maybe that was her plan all along, to trap him. She still couldn't quite figure out how she hadn't realized she wasn't safe that fateful weekend, when Joe came back and begged her to ask him to stay, when they made love that one final time. \n\nShe was in a mental fog, desperately unhappy and devastated that Joe was gone. But maybe a part of her understood this was a way to get him to stay. Just another reason why she couldn't tell him, she lamented.\n\nBut she had to let all this go, at least a little bit, and focus on the baby. That was her #1 priority, and she attacked it like only Vicky Mullen could; it honestly was the only thing that made her get out of bed at the present moment. \n\nShe purchased all the first time mother help books she could find and downloaded them to her Kindle. She was sitting in her kitchen reading one when she heard the doorbell ring. Her heart skipped a beat, for every time it did it held the promise that it was Joe on the other side of the door.\n\nBut of course, it wasn't Joe ringing the bell. In fact, it was her worst nightmare, she realized as she opened the door; on the other side stood her father.\n\n\"Father,\" Vicky intoned with little emotion. \"What do you want?\"\n\n\"I want to know what the hell you are doing, young lady?\" Henry started. \"Your firm called me; you turned down the full partnership and resigned? Have you gone mad?\"\n\n\"No, I'm finally thinking clearly,\" she replied. \"I hated that job; I always did and now I'm free of it.\" She moved to close the door on her father, but he stopped her.\n\n\"Don't you dare close the door on me!\" he yelled, forcing his way inside her apartment. \"After everything we've done for you, all our planning, you just throw it all away in a moment?\"\n\n\"Yes, Dad, I did,\" she yelled back. \"Because that's just it, it was your planning, yours and mothers, not mine. I didn't want this life, I never wanted it. And since you ruined the life I wanted, I decided I no longer had any interest in playing your game.\"\n\n\"Don't be dramatic, Victoria,\" Henry angrily said. \"I didn't ruin your life, or his; I only did what was best for both of you.\" \n\n\"At least you're finally admitting it,\" Vicky sneered at her father. \"And the fact that you think you actually helped us only makes me more angry!\"\n\n\"You both were living in a fantasy, I just forced you both to live in reality,\" her father sighed. \"But I should have known you quitting was all about him. What, he put you up to this? Or you think he'll come back to you if he finds out you gave up the job he hated?\"\n\n\"No, as always you're wrong about him,\" she shot back. \"You don't understand him, you never have and you never will. He only wanted me to be happy with my job. If I was, he would have always supported me even if he didn't like what I did.\"\n\n\"No, now you're just living your life for him, the way you accuse us of trying to get you to do what we want,\" her father spat out. \"So he's no better than us.\"\n\n\"Joe is nothing like you,\" Vicky retorted. \"He's wonderful, caring, he loves me.\"\n\n\"And we don't?\" her father questioned.\n\n\"No, not unless I'm doing what you want,\" Vicky replied. \"Well I'm telling you dear old dad, I'm done....with that life, and with both of you.\"\n\n\"You have one more chance, Victoria,\" her father said as calmly as he could manage. \"The other partners are giving you one last chance to change your mind, out of respect to me. There's still time to change this.\"\n\n\"No thanks, my decision is final,\" Vicky said. \"You can go now; have a great life with mother. I don't want to see you either of you again.\"\n\n\"So that's it, we're just cut out of your life?\" Henry said. \"What are you going to do, run to London and chase that boy?\"\n\n\"No, I can't,\" she said sadly. \"I can't leave now. And he has to take that job; it's the only thing you were right about. You may not believe in him, but I do and clearly his firm does. He's going to change the world.\"\n\n\"Why can't you just go with him now, Vicky?\" he asked, suddenly curious. \"You have no job, no commitments; you want nothing to do with us. Just pick up and go and ruin your life totally.\"\n\n\"He needs to do this on his own,\" Vicky said. \"Besides....\" Vicky stopped herself from saying anymore; she didn't want her father to know the real reason.\n\n\"Besides, what?\" her father pressed. \"What else is going on, Victoria? Tell me, I'm still your father.\"\n\n\"No, you've lost that right now,\" she yelled. \"You should have lost it a long time ago. You're not my father anymore; Joe's father is more of one to me than you ever were.\"\n\n\"Stop being irrational Vicky, and tell me,\" her father suddenly pleaded. Clearly something more was happening here, something he didn't know about. This was about more than just the job in London.\n\n\"Go away,\" she said, trying to pull away.\n\n\"Please, Vicky, tell me. Whatever it is I can help, I want to help!\" Henry insisted, grabbing her arms.\n\n\"I'm pregnant, OK!\" she shouted, pulling away from him. \"There, you know. Now get out before I call the police.\"\n\n\"You're...pregnant?\" Henry stammered, the fight taken out of him completely. \"Oh Vicky, that's wonderful...\" he said reaching out to his daughter again.\n\n\"No, stay away from me,\" she warned. \"I want nothing to do with you, or mother, you will not be a part of this child's life.\"\n\n\"No, Vicky, don't do that to us,\" her father said softly. \"We can help you through this, we can!\"\n\n\"I don't want any of your help,\" Vicky said firmly. \"I'll do this myself, and with Emma's help. That's all I need.\"\n\n\"Joe doesn't know?\" he questioned. \"I assume its...\"\n\n\"Yes, of course it's his,\" she shot back. \"And no, he doesn't. I can't tell him now.\"\n\n\"You know that's the one thing that will make him stay,\" her father replied.\n\n\"Yes, and that's why I can't tell him. I don't want him to stay out of obligation,\" Vicky responded holding back tears. \"I made him go because he had the opportunity of a lifetime; I couldn't live with it if he missed it because I forced his hand.\"\n\n\"Well, maybe it's for the best,\" her father started rationalizing. \"But you need us, me and your mother, now more than ever. Don't shut us out honey, please?\"\n\n\"No, I don't need you,\" she replied with certainty. \"I never needed you. I won't let you ruin this child's life. Besides, it'll save you and mother the embarrassment of having to introduce your knocked up, unmarried daughter at your next function.\"\n\n\"Please, Vicky, I swear that doesn't matter to us. I don't want to be estranged from you, from my grandchild,\" he started sobbing. Vicky had never heard her father cry before. It stunned her. \"I can't end up like Douglas and Barbara,\" he whispered, referring to Emma's parents.\n\n\"OK, I can fix this,\" Henry continued after a moment, composing himself and going into problem solving mode. \"You win; I'll even bring Joe back to you. All I have to do is make a phone call and he can lose that job in London.\"\n\n\"I don't want that!\" she yelled at him. \"You still don't get it; the great Henry Mullen can't fix this with a wave of his hand!\"\n\n\"I'll do anything, sweetie, anything you want,\" Henry begged. \"Please, tell me what I can do, what I can change to help you. There must be something!\"\n\n\"Please go, there's nothing to be done,\" Vicky said with little emotion. If her father had said these words to her six months ago, she may have given him credit. But not anymore, they were just empty promises. He wouldn't change; he couldn't at this point in his life.\n\n\"OK, I'll go,\" Henry said softly. \"But please call me if you need anything.\" He started to leave, but turned to her one last time.\n\n\"You need to tell him, Vicky, he deserves to know,\" Henry said. \"If he's half the man you say he is, that's all he'll need to hear. And I don't think you really believe he would be staying only because of the baby.\"\n\nWith that, Henry left dejectedly. Despite his daughter's belief, it was never his intention to ruin her life. But her words and revelations brought about an awful clarity in the pit of Henry Mullen's stomach. He now fully realized how deeply he had hurt his daughter. \n\nUp until now, Henry had been able to justify his actions in his mind. It was never about Joe's money or family status, at least not for Henry. The age difference is what concerned him. Joe and Vicky were just in different parts of their lives.\n\nHe worried for Vicky; Joe was only 25, just starting his career. As a lawyer, he was in for long hours in whatever job he chose. How could he make time for Vicky, for a family? And was he even ready to start one? He was barely out of school, surely he would want to live his life, enjoy his youth, before thinking of having kids.\n\nBut for Vicky, it was the opposite. She had reached a level of professional success to allow for more free time, if that's what she wanted. Also, she didn't have five or six years to wait for Joe to want kids. \n\nIt was for these reasons that Henry did what he did. He gave Joe a chance at a tremendous opportunity, so it wasn't like he was ruining the kid's life, he reasoned. The one thing he never bothered to think about until now: what Vicky or Joe thought. He made assumptions of what they wanted or needed; he dismissed everything they actually said or just ignored it to fit his own narrative of the situation. \n\nNow it was all backfiring on him; his daughter was devastated, completely unmoored. And now pregnant; and fully determined to do things on her own, without her parents.\n\nHenry had dreamed of grandchildren for the longest time. Though he would never admit it, he regretted much about how he and Caroline had raised Vicky. Neither of them were ever really there for their daughter; sure they kept track of her schooling and made sure she wanted for nothing, but he knew they were never really emotionally available to Vicky. She had grown into a remarkable woman, but Henry now wondered if that was in spite of them, rather than because of them.\n\nThis new generation would be a second chance for both of them. Henry and Caroline were at a point in life where they could see the end, even if they hoped it was still many years off. They wanted to be remembered fondly by the people they left behind more than they were remembered for how much money they earned or help raise for charity. They were determined to be with their daughter's kids in a way they never were for their mother.\n\nIt was a big reason why they had often put pressure on Vicky to find the right mate over the past few years. But again, they did it in their own way, not really thinking about their daughter's feelings. Henry now actually realized his daughter was right; they would probably end up ruining this child's life if they didn't change their thinking. He vowed to break that pattern; to figure out a way to fix this and be the kind of father Vicky needed; to be the kind of grandfather this child would need.\n\nBut for the first time in a long time, Henry felt helpless. The truth was he had no idea how to fix this. He thought of just calling Joe himself and telling him. Henry knew he made too many assumptions of what Joe wanted, and that wasn't fair. He thought enough of Joe to understand he would never leave Vicky hanging out to dry; he would be there for his child now that it was a reality.\n\nBut he knew he couldn't call Joe; Vicky would never forgive him if he did, and he knew she would probably keep that wall up, thinking Joe only came back because Henry manipulated it to happen. It wouldn't solve his problems.\n\nHenry left for home, trying to think of what to tell his wife. He didn't know what to say, frankly they hadn't been real great communicators for a long time; both were too wrapped up in their own lives, and in meddling in their daughter's.\n\nHe still loved his wife, deeply, and still saw the girl that fought for him when they were young. Caroline was so much like Vicky he sometimes was amazed they didn't realize it themselves....or perhaps they did, and it was why they couldn't figure out a way to get along.\n\nHenry realized the only thing he could do is let this play out, without interfering. As hard as that was for him, he had to allow fate to try and fix his screw ups. Henry Mullen didn't much believe in fate; so he prayed someone else could figure out a way to make this all better for his Vicky. --------------------------------------------------------------------------------------------------------------------------------- \"How's our favorite guy?\" Vicky said over the phone to her \"spy,\" as she called her, after her father left.\n\n\"How do you think?\" Annie replied, \"Miserable without you. He's coming over later to pack up his things to send to London.\"\n\n\"He's leaving on Friday, right?\" Vicky asked. She had kept up on the dates and knew his orientation was ending this week.\n\n\"Yes, but you knew that already, didn't you?\" Annie answered. \"Don't you think it's some kind of sign that you know so much about your ex-boyfriend's schedule? Like, that maybe you don't want him to be your ex-boyfriend.\"\n\n\"It's...complicated, Annie,\" Vicky said sadly. \"Sometimes the sign of being an adult is learning you can't always get what you want.\"\n\n\"Isn't that like a Beatles song or something?\" Annie questioned.\n\n\"The Stones, god you're young,\" Vicky laughed. \"Didn't Joe teach you about classic rock?\"\n\n\"Maybe, I wasn't listening,\" Annie said. \"Vicky, you know I love keeping in touch with you, but what happens when he leaves? I can't be your spy anymore.\"\n\n\"We can still talk, you're my 'little sister' too now,\" Vicky replied. \"It won't change, I promise.\"\n\n\"But do you want me to still update you about Joe?\" Annie asked. \"Like, what if he starts dating someone or something? I can't imagine he would, but what do I do then?\"\n\n\"Um, yeah maybe leave that part out,\" Vicky said, trying to shake that image out of her mind. \"We'll just talk about us from now on, you and Josh, me and my...cats.\" She almost said baby, but stopped herself in time.\n\n\"Vicky, I don't know who's more stubborn, you or my brother,\" Annie lamented. \"I'm only 19, but I'm old enough to know you're acting like children. You love him, you want to be with him; he loves you, he wants to be with you. What's the problem?\"\n\n\"Call him, Vicky, please?\" she continued. \"Before he leaves; he wants to be with you more, I know it. Forget this stupid job.\"\n\n\"We've been over this, honey,\" Vicky replied. \"He has to take this job; he'll be set for life if he does. It's a once in a lifetime opportunity; I can't be the one who keeps him from it.\"\n\n\"But what does that matter if he doesn't have you, if he's miserable?\" she pressed. \"Seems to me like a sad life, for both of you.\"\n\n\"It's...\" Vicky started, but found herself suddenly unable to give the teenager a valid answer. \"It just does.\"\n\n\"Well, if that's what being an adult is, count me out,\" Annie said. \"I want to be happy first and foremost. That's what my Mom always told me when I was young: to surround myself with happiness at all times.\"\n\n\"Well, your Mom was very smart,\" Vicky replied. \"I know it will work out for you; it's just not in the cards for me.\"\n\n\"It still could be, you have three days to make it happen,\" Annie pleaded. \"Just think about it.\"\n\n\"OK, I will,\" Vicky said. \"Take care sis, I'll talk to you soon.\"\n\n\"You better,\" Annie warned. \"Or I'll come down there and hassle you. You're not getting rid of me.\"\n\nVicky hung up the phone and stared at it, her fingers itching to press another button, to take Annie's advice. Annie was still young and a romantic though; the real world was much more complicated. She put the phone down and tried to distract herself somehow. --------------------------------------------------------------------------------------------------------------------------------- \"I guess that's everything, Dad,\" Joe said later at home, closing the last of his boxes to be sent to England. \"You OK taking care of shipping these for me?\"\n\n\"I'll be fine, it'll give me something to do,\" Ken said. He put his arm on his son's shoulder. \"I know you don't want to hear this, because I've said it so many times in the last 3 months. But I'm going to say it again, because I love you and my heart breaks a little more every time I look at your sad face. Are you sure you want to do this?\"\n\n\"I have to Dad,\" Joe replied. \"It is a great job; if all things were equal I'd be really excited about it.\"\n\n\"But all things aren't equal, are they?\" his Dad asked. \"And if you're unhappy personally, it's going to impact how you think of that job. Is that fair to anyone?\"\n\n\"I'm just in a funk now,\" Joe said. \"It'll be better when I'm there, when I can just focus on the work.\"",
        "\"OK,\" his Dad said skeptically. \"I hope you're right.\"\n\n\"I have to do it Dad, I have to,\" Joe said earnestly. \"Vicky won't respect me if I don't; her parents definitely won't. Hopefully, after this we can pick up where we left off.\"\n\n\"Three years is a long time, son,\" his father replied. \"You can't expect her to wait for you.\"\n\n\"I know, but there's always hope right?\" Joe said. \"That's the only thing that will get me through this.\"\n\nKen gave his son a hug. \"You know I want nothing but the best for you. I'll be praying everything works out, that you get everything you want. You deserve it.\"\n\n\"Thanks, Dad,\" Joe said softly.\n\n\"Annie, come up here and say goodbye to Joe, he's leaving,\" his Dad called to Annie in the living room.\n\n\"No, I don't want him to go,\" came the voice from downstairs. \"He can't until he says goodbye to me, so I won't let him say it.\"\n\n\"It doesn't work that way kid,\" her Dad replied.\n\n\"Fine,\" Annie said as she walked up the stairs. \"You're an idiot, you know that?\" she said to Joe as she walked into his bedroom.\n\n\"I'll miss you too, sis,\" Joe replied with a chuckle.\n\n\"Both you and Vicky are,\" Annie said, getting going and not thinking about what she was saying. \"It's like I just told her....\"\n\n\"Wait...\" Joe interrupted. \"Told her? You talked to Vicky?\"\n\n\"Um, no...\" Annie tried to cover.\n\n\"You just said...\" Joe started.\n\n\"OK fine, yes, I talked to her,\" Annie said. \"We've talked a lot these last three months. She's my friend too, my sister. Just because you're being an idiot doesn't mean I have to stop speaking to her.\"\n\n\"You shouldn't be bothering her, Annie,\" her Dad responded before Joe could. \"She has to move on with her life too.\"\n\n\"I don't, she calls me, at least once a week, mostly to check on Joe,\" Annie replied. \n\n\"She calls you?\" Joe asked.\n\n\"Yeah, she calls me her little 'spy,'\" Annie said with a laugh. \"She wanted to see how you were doing, but she didn't want to bother you.\"\n\n\"Sounds like Vicky,\" Joe said sadly. But was this a sign; that she couldn't let go? Would she be OK if he stayed? He looked at his father, who immediately read his son's mind.\n\n\"I can't tell you what it means son,\" Ken said. \"You have to figure that out yourself.\"\n\n\"Call her Joe, tell her that you can't live without her,\" his sister pleaded him.\n\n\"Life doesn't work that way,\" Joe replied. \"We don't live in a romance novel.\"\n\n\"Ugh, I'm sick of hearing life doesn't work that way,\" Annie yelled. \"It should...why can't it?\"\n\n\"It just can't,\" her brother replied, unable to come up with a better answer.\n\n\"See, you can't answer why either. Just like she can't,\" Annie replied with a snort. \"Tell him Dad; tell him he's an idiot.\"\n\n\"Give your brother a hug and say goodbye, dear,\" was all Ken said, even though he knew his daughter was making more than a few good points. \"We can't make those decisions for him anymore.\"\n\n\"Bye, you big dumb idiot,\" Annie said as she hugged Joe tightly. \"I love you.\"\n\n\"I love you too sis,\" Joe said. \"Thanks for always having my back.\"\n\nOn the train ride back into the city, Joe thought long and hard over what to do. In the end, he couldn't bring himself to call Vicky. She was just checking up on him, he reasoned. It didn't mean she wanted him to drop everything and run back to her. No, she wouldn't respect that, and it would be a wedge that would destroy them anyway if he stayed.\n\nTwo days later, Joe was on his firm's top floor conference room, which provided stunning views of Manhattan. The firm was holding a going away party for the members of the program, who were leaving from JFK for Heathrow that evening. Everyone was mingling and talking, excited about the coming adventure. Except for Joe, who kept staring out the south facing windows, down the Hudson River and out past the Statue of Liberty in the distance. Staring out toward Philadelphia, as if he could see it; as if he could see his Vicky.\n\nJoe did this a lot at the end of each day; he often came up here to stare out these very windows, as if looking for a sign. Philadelphia was only about 80 miles away, but it felt a million miles further when Joe thought about it in these moments.\n\nOne person saw him doing this, had seen him doing this on several occasions. He went over to talk with him.\n\n\"How are you doing, Joe?\" Mr. Reynolds asked his mentee. \"You stare out these windows a lot, have you found the answer you're looking for?\"\n\n\"Well,\" Joe said sadly. \"I know the answer already, but it's not something I can make happen.\"\n\n\"You're still thinking of her, aren't you?\" he asked Joe. David was well aware of Joe's relationship with Vicky; how they broke up so he could take this job. He hoped Joe would snap out of it, that the excitement of a new adventure in London would take his mind off what he had given up. But it wasn't happening.\n\nDavid liked Joe, a lot. He thought he was the smartest one in the program; the one who would make the most out of this. But only if he had his full attention on it; otherwise it would be a waste of everyone's time. And in this moment, David Reynolds realized Joe never would be able to do that. So he decided to make him an offer.\n\n\"Listen, Joe,\" he started. \"I think you have a bright future, and I want this firm to be part of it. But you're never going to be of use to us if you have half your brain, and all your heart, in Philadelphia. I think we need to figure out something else for you.\"\n\n\"What about London?\" Joe replied.\n\n\"You don't want to go to London, Joe,\" David replied simply. \"And I don't want to send you there. Heck, I've even talked with my wife about you recently. She loves your story; I have her begging me not to send you away from Vicky.\"\n\n\"But, it's a great opportunity...\" Joe started.\n\n\"Yes, it is,\" David replied. \"But not the right one for you. It's about time we admitted that and find what that right one is; something that will allow you to stay with Vicky.\"\n\n\"Is that possible?\" Joe said, eyes widening.\n\n\"Yes, for people we like, who we think are smart and will be great assets,\" David said. \"We have offices in Washington, where we handle a lot of government work. Or you could stay in New York. We've even had discussions of starting a satellite office in Philly. Maybe you could be a part of that; the pay probably won't be as high as if you finished this program, but it would still be enough for you to live a good life.\"\n\n\"Besides,\" David continued. \"It might work out better for us as well. So many of the people who go through the program are lured away by other firms after their commitment is up in a few years; we train you, but they take advantage of it. We've lost a lot of really talented people; you're one of those people too, someone we don't want to lose. Maybe this way, if we make you happy in life, you'll be more willing to commit your future to us long term.\"\n\nJoe thought of what Vicky would say to all this, or her parents. Would they be OK with him turning this down? No, he thought sadly, they would look at this as him chickening out, of blowing a great opportunity to take an OK one. 'Not Mullen material', how many times had he heard that from Vicky's father?\n\n\"I don't think I can sir,\" Joe told him sadly. \"Vicky will look at it as though I'm not tough enough, strong enough. So will her parents.\"\n\n\"Look, Joe, I've been married 25 years,\" David started. \"And I can tell you my wife has never thought it a bad thing for me to try to balance my life with my work. It's not always easy, but I do it the best I can, and she loves me for it. If Vicky loves you, if she truly does, she only wants you. She won't care about your job, no matter what she told you.\"\n\n\"But her parents will, and I can't come between her and them,\" Joe started.\n\n\"She will choose you over her parents every time, Joe,\" David replied. \"There's no bigger force than love. Besides, it's not like you'll be in the poor house here, I'm sure we can find you something that works for everyone.\"\n\n\"So, what are you saying?\" Joe asked.\n\n\"I'm saying get out of here, and get your butt down to Philadelphia,\" David replied with a smile. \"Go get the girl back, we can talk next week.\"\n\nJoe didn't need any more convincing; Mr. Reynolds' words served as a final capper on what he always knew but tried to bury. What Annie always tried to tell him...and his Dad in his own way. What he imagined his Mom would tell him if she were here: \"Go get the girl back.\"\n\nHe rushed to say his goodbyes to those going to London; they were all thrilled for him. Everyone is a sucker for romance. Then he made his way quickly to Penn Station and the first train back to Elmwood Park. He needed one thing from home before heading to Philadelphia.\n\n\"Dad, Annie, you here?\" he called out as he ran into the living room.\n\n\"In the kitchen, son,\" his father called out. \"Shouldn't you be over Long Island by now?\"\n\n\"I'm not going Dad,\" Joe said with a smile. \"I'm going to Philly, to get Vicky back.\"\n\n\"I knew you would!\" Annie said, running in and leaping to hug him. \"I'm so happy for you!\"\n\n\"I am too, son,\" his father smiled. \"I think you're doing the right thing. But what about the job?\"\n\n\"They're willing to work with me to find something that fits me better,\" Joe replied. \"But, right now, I need to get into the safe deposit box at the bank. I still have a few minutes, the bank closes at 5.\" \n\n\"No the bank closes at 4, son, what do you need in there?\"\n\n\"I need the ring Dad...Mom's ring,\" he said dejectedly. \"I don't want to wait until tomorrow, there has to be a way to get it.\"\n\nKen laughed when he heard that. \"That ring, huh? Yeah, I figured you might. I took it out a few weeks ago, and put it in the safe upstairs. I was about to take it back after you left the other day, but I decided to hold on to it for a little bit longer.\"\n\n\"You did?\" Joe smiled back at him. \"How did you...\"\n\n\"When you know, you know,\" Ken said with a broad grin. \"Go get it, take my car and get the hell out of here. Call us when you get a chance and let us know what happened.\"\n\nJoe retrieved the ring box from the safe, and prepared to leave for Philly, for Vicky. Before he did though, his father stopped him.\n\n\"You remember what Mom said, right?\" he asked his son. \"What she wanted you to say?\"\n\n\"Every word, Dad,\" he promised.\n\n\"Then my work here is done,\" Ken said, hugging Joe a final time. \"I'd wish you good luck, but I know you won't need it.\"\n\n\"Wish it anyway,\" Joe said nervously.\n\n\"Good luck son,\" Ken replied. \"But you won't need it. When you...\"\n\n\"I get it,\" Joe laughed. \"I think we need a new go-to phrase...\"\n\n\"Maybe, but a very smart woman I know in Philly once told me it should be our family motto,\" Ken said with a smile. \"And it's never let me down before.\"\n\nJoe drove south to Philadelphia, but not to Vicky's at first. He needed to make another stop, to her parents' house. He was going to ask their permission a final time. But, this time, if he didn't get the answer he was looking for, he was going to tell them he no longer cared. He was going to do what he wanted, what he hoped their daughter wanted, whether they liked it or not.\n\nHenry and Caroline were sitting down to dinner that Friday evening. Caroline had just come back from a charity function in Florida that afternoon. Henry was still struggling to figure out a way to explain his conversation with their daughter to her.\n\n\"I saw Vicky the other day,\" Henry started. \"She's still quite upset, over Joe.\"\n\n\"She just needs time,\" Caroline answered. \"She'll be upset for a while, but she'll move on like always.\"\n\n\"I don't think so, dear,\" Henry replied. \"In fact...\"\n\nHe was interrupted by their housekeeper, telling them someone was here to see them, it was Joe.\n\n\"Send him in,\" Henry immediately said, an astonished smile forming on his face. Maybe he should trust fate more, he thought to himself.\n\n\"What's going on?\" Caroline asked, seeing her husband's face. \"Why are you smiling?\"\n\n\"Just wait, dear,\" he said. \"We need to hear him out.\"\n\nJoe walked in shortly thereafter. Now that he was here, he suddenly lost his words. All three just stared at each other for a moment. Henry broke the silence.\n\n\"Joe, this is an unexpected visit, I thought you were on your way to London?\" he asked.\n\n\"I'm not going, I'm staying here,\" Joe finally said. \"I worked it out with the firm.\"\n\n\"That's a big opportunity you're giving up son,\" Henry replied.\n\n\"They are going to find me something else,\" Joe answered. \"Something close by...they want to work with me, they believe in me, like Vicky does. Unlike the two of you.\"\n\n\"Now Joe, that's not fair...\" Caroline started.\n\n\"Let him speak Caroline,\" Henry interjected. \"Go on, Joe.\"\n\n\"I'm asking Vicky to marry me tonight,\" Joe said firmly. \"I would like your blessing. But this time, I'm also telling you that it doesn't matter to me if you give it or not, I'm asking her either way.\"\n\n\"Well, if it doesn't matter, why ask us?\" Caroline replied. \"It's because you know it does matter. That Vicky won't marry you if we say no.\"\n\n\"No, it's not that at all,\" Joe shot back. \"Vicky will say yes, she loves me. But I want to give you the chance to give your blessing, so that we can all be a family, not estranged.\"\n\n\"Vicky would never cut us out...\" Caroline started, but was stopped again by Henry. \"Let me handle this Car,\" he told her, using a pet name he hadn't said for many years. The look in his eyes stopped his wife in her tracks.\n\n\"It's never been about your status to me, Joe,\" Henry started. \"Or your job, despite my comments I really don't give a damn what you do, as long as you can take care of my daughter. To the extent she needs anyone to take care of her.\"\n\n\"I can,\" Joe said with confidence. \"We would take care of each other, that's what couples do.\"\n\n\"It's your age, Joe,\" Henry said. \"You're only 25, don't you want to be free of any responsibilities and enjoy your life? I worry you're going to realize this in a few years, and then it'll be too late.\"\n\n\"I've had to grow up quickly, sir,\" Joe told him. \"My mother died when I was 18, and I had to help pick up the shattered pieces of my father, and an 11-year old girl who needed guidance I was not remotely qualified to give at the time. But I made it work, and we all survived, thrived even. I haven't been free of responsibilities for a long time. And I don't want to be free of them.\"\n\n\"I just want your daughter,\" Joe continued. \"Whatever comes our way, I just want her; she makes me happy. I'm not going anywhere; I could never find anything better. After everything that's happened to me, I know you have to hang on to those you love, to never let go. I know that with certainty.\"\n\n\"Vicky portrays herself as tough, in control,\" Henry said. \"But she's very, very sad right now, broken even. She quit her job, gave up the full partnership and everything.\"\n\n\"What?\" Joe and Caroline both said at the same time, shocked.\n\n\"And that is my fault, Joe,\" Henry powered through their shock. \"I thought I was doing the right thing, for both of you, but I wasn't. I see that now. You have to help me fix her; make her happy again. I can't do it, her mother can't do it; her job can't do it. Only you can.\"\n\n\"Henry, what are you saying...\" his wife asked perplexed.\n\n\"We have to get out of these kids' way,\" Henry told her. \"Your father finally did, after I made a speech much like this young man just did. And a few days ago, Vicky sounded an awful lot like you did almost 40 years ago speaking to your father.\"\n\n\"It's a totally different situation,\" Caroline replied.\n\n\"No its not, not really,\" Henry said. \"It took me a while to see it, but I do now.\"\n\n\"So you're saying what?\" Joe asked.\n\n\"I'm saying don't you have somewhere else to be?\" Henry replied with a smirk. \"It won't be easy, my daughter is a Mullen, and it's hard to convince her she's wrong when she thinks she's right.\"\n\n\"I'll do my best,\" Joe answered, still slightly confused. Was this her father's blessing? He was going to treat it as such, since he was afraid to ask for more clarification. He turned to leave, but Henry stopped him one last time.\n\n\"Joe, my daughter is afraid, not just of the job,\" he said cryptically. \"There's something else holding her back. Only she can tell you that, but you have to convince her not to worry about it. Be a Mullen tonight; don't take no for an answer, even if she gives it to you over and over again. And if you need assistance with your job, finding something you truly want, let me know if I can help.\"\n\n\"I will, sir, thanks,\" Joe told him. He then quickly left before Mr. Mullen changed his mind.\n\n\"Henry?\" his wife asked when Joe was gone. \"What's going on?\"\n\n\"She wants him, she's just afraid,\" Henry replied. \"I can't stand in their way anymore, we can't. She'll never forgive us.\"\n\n\"Over time she would,\" Caroline answered. \"There's nothing that happened that we couldn't fix ourselves.\"\n\n\"She's pregnant, Car,\" Henry said simply. \"She'll never talk to us, never let us be in the baby's life, if we try to stop this. She promised me as much a few days ago.\"\n\n\"Pregnant? Oh, Henry!\" Caroline exclaimed. \"That does change everything...a grandchild? I've wanted one for so long; I couldn't bear that, not being around, we know how tough that is.\"\n\n\"Yes, that's why we need to let it play out now,\" Henry said as he grabbed her hand. \"We have to support them. She's chosen him, loves him despite all the odds stacked against it. And if nothing else he's a good young man who loves her right back. We tried to dismiss that before, but isn't that what we always should have wanted?\"\n\nOf course, I want her to be happy; I just wanted her to have the best life possible,\" Caroline replied, head in her hands as she replayed all her awful actions over the years. She was able to justify them in the moment, but with sudden clarity all those reasons were washed away.\n\n\"Will she forgive us?\" Caroline continued, worried. \"I was so terrible to them, like my own mother. There are so many things I want a second chance on, with her and the baby.\"\n\n\"We can only hope,\" Henry responded with a frown. \"All our hopes rest on him; if he convinces her, we have a chance. If not, she'll blame us forever.\" --------------------------------------------------------------------------------------------------------------------------------- Emma brought Vicky back to her apartment after the doctor's appointment. Everything looked good so far with the baby, the ultrasound showed no abnormalities. It was too early to determine the baby's sex, but Vicky didn't want to know anyway at this point. In many ways, it was still a far off idea, almost unbelievable. And she still hadn't come to grips with the idea of doing this without Joe.\n\nVicky stared out the window when they returned, up toward New York. She did this quite a lot, she realized.\n\n\"What are you looking for?\" Emma asked, though she knew the answer. \"He can't see you from here, you know.\"\n\n\"I know, but I still look all the time,\" Vicky replied. \"He's probably getting ready to board that plane now as we speak, Ems.\"\n\n\"Look Vic, you know what I think right?\" Emma started. \"I think you should tell him everything, and stop him from leaving. Jump on the freaking runway in front of that plane if you have to.\"\n\n\"It's too late,\" Vicky replied sadly.\n\n\"It's not, but it will be soon,\" her friend told her. \"If you're not going to tell him, well then you have to let him go, and move on with your life. Your baby's going to need you, all your focus. You can't be pining for something that's unavailable.\"\n\n\"I know,\" Vicky said. \"Starting now, I'm doing just that.\"\n\n\"Sure you don't want to come over for dinner?\" Emma asked. \"You can watch my two brats for a while. It will be good practice, and help take your mind off that damned plane.\"\n\n\"No, I want to read more, maybe I'll talk to this little one in me, like the books say to do,\" Vicky said.",
        "\"Good to see you're becoming crazy like me,\" Emma laughed. \"OK, call me if you need anything.\"\n\nEmma left, and Vicky said down on her couch for a few moments. She did need something to take her mind off that damned plane. She felt strange doing this, but maybe it would help.\n\n\"I know all these books I'm reading say you can't hear me quite yet,\" Vicky said toward her stomach. \"But it's not like I have anyone else to talk with right now. They say eventually as you grow in there it will be good for you to hear the sound of my voice and bond to it. Who knows, it's worth a shot.\"\n\n\"I'm not sure what to call you though, a boy's name or a girl's name?\" she continued. \"I'll just call you baby; I like that term, I only call really special people that. Anyway, I want to tell you a few things, make a few promises. You are now the #1 thing in my life baby, and from the minute you pop out of here until the moment I'm gone from this world, I will be utterly devoted to you and your happiness.\"\n\n\"We'll probably argue at times, it would be impossible not to with me,\" she laughed. \"But I'll never do to you what my parents did to me; I'll never force you to be anything. My job is to help guide you to find your own way, to make your own happiness. For that, I will do whatever I have to.\"\n\n\"If you really are hearing me, I'm sorry, for chasing your Daddy away,\" Vicky told her unborn child sadly. \"I promise you he's not out of your life forever; I will tell him soon when the time is right. From the moment he sees you baby, he will be utterly devoted to you as well, even if he hates me for keeping you from him for a little bit. Even if you end up hating me for that. Then, you'll also meet Grandpa Ken and your Aunt Annie; they're wonderful people, the best I know. You'll be lucky to have them.\"\n\n\"I hate this too, but I have to do it, keeping your Daddy away from you. He's kind, loving, smart...brilliant, even if he doesn't fully know it. Everything I never realized I wanted, but now he's all I want, along with you of course. But I can't have him right now, we can't have him right now. We have to share him with the world first, because he's going to change it in so many good ways my sweet baby. But only if we let him.\"\n\n\"In the meantime, you'll have special people in your life, people like Aunt Emma and Uncle Jack, and their kids who will be your lifelong friends I'm sure, just like their mom and me. And we'll have other people looking over our shoulder, like your Grandma Olivia, Daddy's mommy. I never met her, but I know she'll keep watch over us until her family down here can take over for her.\"\n\n\"I can't wait to meet you baby,\" Vicky finished, beginning to cry. \"You make my life so much better, you help keep the sadness from overcoming me. I hope you look like your Daddy and get all the best parts of him. He's a much better person than I am, but you're stuck with only me for a while. I promise I won't let you down.\"\n\nWith that, the doorbell rang. Vicky's heart didn't skip this time; Joe was already on a plane to England she sadly realized. She trudged to the door, wondering if her father was coming back to argue again.\n\nWhen she opened the door, her heart did skip; it did more than that, it soared.\n\n\"Hi,\" Joe said with a nervous smile. \"Please let me in, I have things I need to say, and I'm not leaving until I say them.\"\n\nVicky stepped aside wide eyed, and waited for Joe to say something as he came inside.\n\n\"First, your 'spy' Annie says hi...you've been checking up on me?\" he said with a smirk. \"And you quit your job? You didn't do that for me, did you?\"\n\n\"No, I did it for me,\" Vicky replied. \"You were right though, about everything. I just want to be happy, and I wasn't at the firm.\"\n\n\"Well at least you're finally listening to me,\" he answered. \"You need to listen to me some more.\"\n\n\"Is that why you're here, because you heard I quit my job?\" Vicky said, figuring someone at his firm told him. \"I thought you were on a plane to London tonight?\"\n\n\"I'm not going to London, not tonight, tomorrow, or ever,\" Joe started. \"I'm staying here, whether you like it or not.\"\n\n\"Joe, we talked about this...\" Vicky started, even as half her brain screamed at her to jump in his arms and never let go.\n\n\"Shut up, OK, just shut up for once in your life and let me finish,\" Joe said, voice rising. \"I'm serious, not a word until I've said everything I came here to say.\"\n\n\"OK...\" she said.\n\n\"That was a word,\" he replied, and they both chuckled briefly. Then suddenly, he dropped to his knees in front of her and pulled out a jewelry box, large enough to fit a ring.\n\nFor once in her life, Vicky was truly speechless. She only wanted to hear what Joe said now.\n\n\"This ring...\" he started, opening the box to reveal a tiny diamond ring. \"...was my mother's. It was the first engagement ring my father gave her when he proposed. He didn't have much money at the time; the jeweler felt bad for him and gave him this for a few bucks. It's small, and the diamond has flaws.\"\n\n\"Dad was embarrassed by this ring, of not being able to afford more for Mom,\" he continued. \"After they had been married a few years and had some money, he got her a nicer ring to replace it. But my Mom still treasured this ring; she made it into a necklace and always wore it. She said it was the most important piece of jewelry she owned, that it was our family heirloom.\"\n\n\"That's beautiful,\" Vicky said through tears. Her family had lots of heirlooms, but none had as much meaning as that simple little ring, she realized.\n\n\"You promised no words,\" he said. He quickly turned sad as he told the rest of the story.\n\n\"When she was sick, really sick, at the end,\" Joe said through tears. \"She gave me this ring. It was one of the last conversations she was able to have before the pain got to be too much. She told me when I found the woman I wanted to marry, I should give her this ring, along with my engagement ring, and give that woman a message from her. Well, I don't have the engagement ring yet, so I'm going to use this tiny ring for two purposes tonight.\"\n\nVicky watched stunned as Joe pulled the ring out and grabbed her left hand to put it on. Smiling, she let him, and he began to speak again as he placed it on her left ring finger.\n\n\"Perfect fit, amazing,\" he smiled and she laughed. \"Ok, here goes,\" he said taking a long breath to steady himself. \"Vicky, this ring represents my mother giving us her blessing to get married. Even though you can never meet her, it's your proof that she has taken you into her heart as her daughter, from this moment on. She'll always be watching over you, like she is the rest of my family. Because you're her family now too.\" \n\n\"Jobs come and go, I can find them whenever. But I can't find another you; you're perfect. So, Vicky, will you marry me?\"\n\nVicky was momentarily elated, this was everything she wanted. Joe had come back to her, not out of obligation but because he wanted her. But her fears were still there; she still worried Joe was acting rashly, compulsively, without thinking, doing something he'd come to regret.\n\n\"Say something, Vic, please,\" he pleaded below her.\n\n\"I can't Joe, I'm sorry...\" she cried, taking the ring off and fleeing to the other side of the room.\n\nJoe slumped for a few seconds, then got up and started again. He was going to be a Mullen tonight, like her father said. He wasn't leaving until he got the answer he wanted.\n\n\"No, I don't accept your answer,\" Joe said, making his way to her. \"You love me, I know you do.\"\n\n\"Of course, Joe, I love you,\" Vicky replied. \"But it's not that simple...\"\n\n\"It is, it really freaking is, Vic!\" Joe insisted. \"Nothing else matters, when you know, you know.\"\n\n\"But your job, I can't be the reason you pass that up...\" Vicky started.\n\n\"I talked to Mr. Reynolds, about how miserable I was,\" Joe replied. \"He agreed, working in London wasn't the best idea for me. They like me, they want to see me happy. He said he would find something else for me, close by.\"\n\n\"Really?\" she said. Joe must have really made an impression on them to offer that. She wasn't surprised; like she told Billy that night at the bar, he had a way of doing that to people, of burrowing into their hearts. Mr. Reynolds was just another in a long list of them, starting with her of course.\n\n\"Joe, I still don't know...\" Vicky sobbed. No matter how much they liked him, they probably couldn't find something as perfect for him as the London program. He'd probably end up with the same job she had, corporate law in some big office. He'd hate that, she knew. \"...the London job was so perfect for you, what if they can't find a fit as good?\"\n\n\"It doesn't matter, then I'll find something else. I have my whole life to worry about it,\" Joe replied. \"Even your father said he would try to help me.\"\n\n\"My father?\" Vicky was shocked as she realized how Joe found out about her job. \"When did you talk to my father?\"\n\n\"Before I got here,\" Joe said. \"I went to their house and told him, both of them, I was doing this and asked for their blessing. But I told them I was still doing this even if they said no. I'm done trying to please them.\"\n\n\"What did he say?\" she asked intrigued.\n\n\"He gave me his blessing...well I think he did, he never actually used those words,\" Joe said with a quizzical laugh. \"But he told me that all he wanted was for you to be happy, and that he now realized only I could give that to you.\"\n\n\"Joe, I'm still scared, I'm really scared...\" Vicky started.\n\n\"Is this about the other thing, your father mentioned it to me,\" Joe asked. \"That you're scared about?\"\n\n\"He told you?\" Vicky said, eyes wide open in alarm. Did Joe know, was he only here because of that, she suddenly worried?\n\n\"Not what it was, he said only you could tell me,\" Joe explained, scared by the look she just gave him. \"But he said it was holding you back. Tell me Vic, nothing you can say will drive me away now.\"\n\n\"Nothing?\" she asked, beginning to sob.\n\n\"Well, unless you told me you really were seeing Richard again now,\" he said anxiously. \"For the love of Christ, tell me it's not that.\"\n\n\"You really are an idiot if you think that's it,\" she replied. \"Of course not.\"\n\n\"Then what, nothing else could possibly matter,\" he said, falling to his knees and hugging her waist. \"You want to marry me, I know you do. Just say yes, Vic.\"\n\n\"I just don't want to be the one, want us to be ones, who hold you back!\" she cried, grabbing him and pulling his head into her stomach.\n\n\"How could you hold me back?\" he asked, puzzled. Then her words hit him, and where she had pulled him. He looked up at her with those big brown puppy dog eyes she loved so much, brimming with tears. \"Us?\" he choked out.\n\n\"I'm pregnant, I'm having your baby, Joe!\" she sobbed. \"I'm sorry, I didn't mean for it to happen, it just did, and now you probably hate me.\"\n\n\"No, Vic, I don't hate you,\" Joe looked up at her in awe then kissed her stomach, all over her stomach. \"This is wonderful! I'm so happy, I'm so happy!\" he cried repeatedly as he did.\n\n\"I don't want you to stay because you feel you have to now,\" she cried.\n\n\"No, I want to stay for you, to be with you,\" he smiled. \"This is just icing on the cake, wonderful icing. Now you can't possibly get rid of me.\"\n\n\"I can't do this without you Joe, I don't want to,\" she said, continuing to stroke his head and finally surrendering to what she wanted, what she needed.\n\n\"You won't, I'm here, I'll always be here,\" he promised her as he kissed her belly some more. \"My baby, our baby,\" he whispered.\n\n\"Joe?\" Vicky said, grabbing his face in her hands with a bright smile, the biggest one in months. \"Ask me again, I'm ready now.\"\n\nHe smiled back at her, and went across the room to retrieve the ring. \"OK, take two,\" he chuckled, getting into position again and placing his mother's ring back on her finger.\n\n\"Victoria Alexandra Mullen, will you do me the honor of having me as your husband?\"\n\n\"Yes! Yes!\" she squealed. \"A thousand times, yes! I would love to be your wife!\"\n\nJoe scooped her up and kissed her passionately. He spun her around the room a few times in his arms.\n\n\"Easy, I'll get dizzy,\" she joked. \"The baby will get dizzy.\"\n\n\"Oh,\" he said, putting her down and full of concern. \"I don't want to do anything to upset the baby.\"\n\n\"You can't possibly,\" she beamed at him. \"Daddy is here, this little one is over the moon right now.\"\n\nA few hours later, Joe and Vicky lay in bed holding each other, as they had almost every night they were together since his graduation. It had been a whirlwind night, with happy phone calls to Rebecca and Emma, to Ken and Annie, even to Vicky's parents, which she did reluctantly at Joe's urging. \n\nHer father seemed genuinely happy for them, even her mother expressed her congratulations on the engagement and baby. They both also expressed regret for how they acted, and promised to only be supportive of them now. She wasn't ready to completely let them back in, but maybe the door wasn't permanently shut anymore.\n\nVicky lay on her side, as Joe continued to rub her stomach in wonder as he spooned her. He couldn't stop doing that, and she never wanted him to stop now. She kept looking at his mother's ring, still on her finger. She stared at it, and looked at it from different angles.\n\n\"I promise, I'll get you a nicer one,\" Joe said from behind her as he watched her eye the tiny ring. \"This whole thing happened so fast I didn't have time.\"\n\n\"Don't you dare, Joe Chambers,\" she said, turning her head to look him in the eyes. \"This is the only ring I ever want, I love it.\"\n\n\"You sure?\" he asked. \"Wouldn't you rather wear a nicer one? You could wear that one like my mom did, as a necklace.\"\n\n\"No, I only want this one, it's priceless to me,\" Vicky replied. \"It was to your mother too, she was just being nice to your dad, making him feel better. She would have worn this ring on her finger forever if it was up to her.\"\n\n\"And you know that how?\" he asked with a raised eyebrow.\n\n\"I just know, I can feel it,\" Vicky responded. As she told the baby earlier, she already felt like Olivia Chambers was watching over her. After what happened tonight she was now sure of it, and she felt an unbreakable kinship with this woman she had never met, but who had given her so much. She had given Vicky her one true love, and now she was never letting him go.\n\n\"Have you thought of baby names yet?\" Joe asked. \"What do you like for a boy and what do you like for a girl?\"\n\n\"I have an idea on what name to give her, but let's talk about that later baby,\" she said. \"We have all the time in the world now.\"\n\n\"Her?\" he asked, confused. \"I thought you said they couldn't tell the sex yet.\"\n\n\"I can feel it now,\" she replied looking up at the ceiling. \"I just know. And when you know, you know.\"\n\nSIX MONTHS LATER Time went quickly for Joe Chambers, in no time he found himself in a delivery room holding his wife Vicky's hand as she gave birth to their first child. She was currently in the process of breaking three of his fingers as she screamed in pain, but Joe gritted his teeth and allowed her painful squeeze to continue.\n\nThey had been officially married three months ago. It was not the high society event of the year in Southeastern Pennsylvania, just a quiet ceremony for family and friends in North Jersey, near Ken's house. It wasn't a small affair because it was a \"shotgun wedding,\" as Emma continually joked, but because that's how Vicky and Joe wanted it. \n\nNo one even was upset over missing out on a lavish wedding, even Vicky's mom. OK, maybe Caroline was a little disappointed, but she was trying her best to ignore these instincts. She wanted to be there for her daughter now, and her grandchild, in a way her mother was never there for her. And in a way she was never there for Vicky growing up; as long as you still were breathing it's never too late to change. \n\nTo be honest, Vicky remained very wary of allowing her parents back into her life completely, but Joe continued to encourage her to let the past go. He knew there would be a hole in his wife's life, and her heart, if she cut her parents out. Joe also wanted his child to know all their living grandparents, since the baby already had lost one grandmother before ever being born. \n\nHe knew they would never allow her parents to do anything to negatively impact the baby; so as long as they were showing genuine effort to change their ways he was willing to forgive. \n\nIt was not easy, they were all still Mullens, stubborn to the bone, but her parents were finally committed to building the right relationship with their daughter. Both for themselves, and for the baby; they wanted to put the past behind them and focus on giving the newest generation of the family the right start.\n\nOnce the baby was born and settled in, Vicky planned to teach; Joe had introduced her to some of his professors at Temple, and they were looking for someone to teach business law, part time first but with the promise of a tenured position down the road. She was already planning out her lessons; her first students wouldn't know what hit them.\n\nJoe was working most days out of the Washington office, taking the early Amtrak train down each morning; he wanted to spend every night with Vicky, especially as the pregnancy progressed. He was learning a lot about politics, and finding he enjoyed being involved in his firm's quest for a cleaner environment. They thought of moving to Washington, but both wanted to be as close to friends and family as they could right now, especially with the baby coming. His father-in-law already hoped a future in politics was in store for Joe, even if he was a Democrat. Henry dropped the idea immediately once he saw his daughter glaring at him icily when he casually brought it up one night. But there was plenty of time for that talk anyway down the road, Henry figured. Finally for Henry, Joe was a Mullen now too, whether the young man fully realized it yet or not.\n\nEveryone was at the hospital this night, waiting for news in the waiting room: Vicky's parents, Joe's dad and sister, Rebecca, Emma and her family. Joe had been out there an hour ago to update them on things, and walked right into a heated conversation between his sister and Emma over who got to be godmother. \n\nJoe told them they could each be the godmother, then left to return to the relative peace of his screaming wife. This baby would be loved, but it was going to be loved by a bunch of crazy people, he laughed to himself. But he wouldn't want it any other way.\n\n\"AHH-AHHHH,\" his wife screamed out a few minutes later, grabbing his hand again like a vice. \"I can't believe I let you do this to me! Never again, Joe, never again!\"\n\n\"OK, whatever you want Vic,\" he replied soothingly, trying to calm her.\n\n\"What, you don't want more? I want more, at least one maybe two,\" she immediately contradicted herself and squeezed his hand even tighter. \"She's going to want to be a big sister, I know it.\"\n\n\"Whatever you want Vic,\" he moaned out again through his own pain.\n\n\"OK, one more big push Vicky; I see the head, this is it,\" she heard her doctor call out.\n\n\"Come on, Vic, one more you can do it babe,\" Joe encouraged.\n\n\"NGHHHHHH----\" Vicky cried out and made one last great push, feeling the baby begin to come out. There was silence for a brief moment, then the wonderful sound of a baby crying. Joe kissed his wife's hand as he leaned up to see his first born child for the very first time.\n\nBack in the waiting room, everyone was enduring Round 2 of the Emma vs. Annie \"Who's the Godmother\" fight, when they all saw Joe making his way towards them, a tired but happy smile on his face.\n\n\"So, tell us?\" Annie and Emma yelled out at the same time as he approached, their fight forgotten already.\n\n\"It's a girl!\" he said happily. \"7 pounds, 6 ounces!\"",
        "Everyone cheered happily and offered their hugs and congratulations. This unlikely family was together as it had never been before, and all were thankful for that.\n\n\"So do you two have a name for my granddaughter?\" Ken asked.\n\n\"We do,\" Joe answered. \"Her name's Olivia Caroline, after her two grandmothers. Olivia Caroline Mullen Chambers.\"\n\nNaming the baby after Joe's mom was all Vicky's idea; in fact she was adamant about it. Joe needed some time to convince her to offer that olive branch to her own mother; but he felt it was the right thing to do and she finally agreed.\n\n\"That's a beautiful name,\" Ken replied through tears.\n\n\"It really is, thank you,\" Caroline said softly, reaching out to Joe. She was touched, and a little shocked, at the kind gesture of her daughter and son-in-law. She truly felt she didn't deserve it, but it made her more determined not to let that little girl down.\n\n\"Give us a little while, I'll let you know when you can see Olivia in the nursery,\" Joe said beaming.\n\n\"Take all the time you need,\" Henry answered. \"She's your daughter after all. We can wait some more while you two bond with her.\"\n\nJoe made his way back to the room. Vicky was holding Olivia to her chest, a content smile on her face as she lovingly rubbed her newborn's daughter head.\n\n\"How's it feel, Mommy?\" he excitedly asked.\n\n\"Wonderful, like nothing I've felt,\" she gushed. \"She's perfect Joe, perfect. She has your big brown eyes, baby; your mother's eyes.\"\n\n\"She has your nose,\" he replied. \"She's gonna be a heart breaker, like her mother.\"\n\n\"Let's hope not,\" she laughed. \"I want her to be a good girl.\"\n\n\"She will be,\" he assured her. \"She's got the best mother in the world to teach her the way.\"\n\n\"She's got the best Daddy too,\" Vicky said through tears. \"She'll have the best of the Mullens' and the Chambers'. We'll both make sure of it.\"\n\nJoe held his wife's hand as they both looked at Olivia with wonder before the nurses took her to get washed up. Two years ago, neither of them knew just what twists and turns life had in store for them when Vicky walked into that bar and locked eyes with Joe. \n\nBut they wouldn't change a thing; they were happy that the universe, whoever was in charge, saw fit to bring them together. They had a lifetime to live now, with little Olivia and their slightly crazy, but hopefully growing family."
    ],
    "authorname": "laf199",
    "tags": [
        "romance",
        "romance novella",
        "may-december romance"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/when-you-know-ch-06"
}