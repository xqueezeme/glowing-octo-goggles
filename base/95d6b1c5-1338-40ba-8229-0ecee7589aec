{
    "title": "Collateral Damage - Halloween Story",
    "pages": [
        "A private party at The Cantina Club gets a little out of hand when a man dressed as a pilot from the Vietnam era comes into the club. \n\nThis story involves strip-tease dancing, punishment spanking, cock sucking, cum swallowing, cunt lapping, forced orgasm on a Sybian, bullwhip punishment, an oil wrestling spike match, demons, angels, and heavenly retribution. If all of that is more than you wanted in a Halloween story, then skip this one.\n\nOr maybe just skip those parts and read how Maria finds redemption for her life one Halloween evening at The Cantina\n\n= = = = = = = = = = = = = = = = = = = =\n\nWARNING! All of my writing is intended for adults over the age of 18 ONLY. Stories may contain strong or even extreme sexual content. All people and events depicted are fictional and any resemblance to persons living or dead is purely coincidental. Actions, situations, and responses are fictional ONLY and should not be attempted in real life.\n\nIf you are under the age or 18 or do not understand the difference between fantasy and reality or if you reside in any state, province, nation, or tribal territory that prohibits the reading of acts depicted in these stories, please stop reading immediately and move to somewhere that exists in the twenty-first century.\n\nArchiving and reposting of this story is permitted, but only if acknowledgment of copyright and statement of limitation of use is included with the article. This story is copyright (c) 2016 by The Technician.\n\nIndividual readers may archive and/or print single copies of this story for personal, non-commercial use. Production of multiple copies of this story on paper, disk, or other fixed format is expressly forbidden.\n\n= = = = = = = = = = = = = = = = = = = =\n\n* * * * * * * * * * * * \n\nMaria Sanchez watched the new customer walk into the club. He paid the cashier at the entrance and then held up his invitation to the bouncer. The muscular bouncer who was guarding the door nodded and stepped aside allowing the man to walk past him into the dimly-lit club.\n\nNormally, the new man's strange garb would have made him look very out of place, but this was Halloween and everyone in the club was in strange garb. He was dressed like a soldier of some sort, but there was something slightly different about his uniform. It fit rather loosely and looked almost more like a set of coveralls than an actual uniform.\n\nHe sat down at one of Maria's assigned tables and turned his chair so he could stare at the stage. In a few moments, most of the customers would be staring at the stage watching the strippers, but it was ten o'clock and all the performers were \"on break.\" At least that is what Hector, the owner of the club, liked to call it. In reality the girls-- and guys-- were in downstairs rooms entertaining special guests who had the money and influence to do more than just get all worked up by the sexy stripper routines.\n\n\"At least I haven't fallen that far... yet,\" she thought to herself as she walked forward to greet her new customer. Maria wasn't a stripper... and she wasn't a hooker... she wasn't even a waitress... she was just a single mom with no marketable skills who, in order to feed her family, was reduced to working as what used to be called a \"B-girl.\"\n\nBehind her back, Hector would say that the B-girls were \"too clumsy to dance and too ugly to fuck.\" A B-girl's purpose was to sit with a customer and keep them happy... so they would keep buying drinks... so they would buy her drinks... so they would slowly spend all of their cash at The Cantina.\n\nIn return for that, he paid her minimum wage and let her keep any extra \"tips\" the men might give her. Of course each time he paid her, he would hint that she could make much better tips downstairs. She wasn't sure how much longer she could tell him no. With the base now all but closed, jobs were almost non-existent in the area and her daughter was getting to that age where she was starting to notice that the other girls at school didn't have to wear clothing given them by the local churches and missions.\n\n\"Hi soldier,\" she said with a forced smile as she reached his table. \"Mind if I sit down?\"\n\n\"It's airman,\" he answered, \"but you're welcome to join me.\"\n\n\"So,\" she began, \"are you here to have a Hell of a time?\"\n\nThe large poster outside the club's entrance proclaimed, \"Have a Hell of a Time at The Cantina's Hell of a Halloween Party. She Devils - Free Admission. No angels allowed. - Invitation Only - Halloween Night 'til 2:00 am.\" It then went on to explain that you could get an invitation to the party by calling or talking with Hector DeSalvo, the owner and manager of The Cantina.\n\n\"Not exactly,\" he replied. He sounded very sad as he spoke, and when he looked at her it was as if he was looking through her to something in the distance far behind her.\n\nShe had seen that look many times before back when the local base was still active. It was the thousand-yard stare that you would sometimes see in combat veterans. Now, that look was rare in town, but you still saw it once in a while.\n\nMaria knew that when such a broken man came into the club, there was nothing she could do. They didn't want company. They didn't even really want to watch the shows. They just sat staring at the stage-- like they stared at life-- and slowly drank themselves into oblivion. It was the only way they could stop seeing whatever it was that was always a thousand yards in the distance.\n\nMaria started to get up, but he put his hand on her arm and said quietly, \"No, please stay.\"\n\nShe settled back into her chair. \"What am I supposed to buy you?\" he asked.\n\n\"A highball,\" she answered unsteadily. \"Or a glass of champagne, if you are in a party mood,\" she added trying to sound a little more cheerful.\n\n\"How much time does that buy me?\" he asked flatly.\n\n\"I don't know what you mean,\" she answered.\n\n\"What's your quota?\" he asked firmly. \"How many bottles of champagne would I have to buy for you to stay here at the table with me until after midnight?\"\n\nMaria tried to give her standard answer of \"For however long you want to talk.\"\n\n\"The truth,\" he replied. His voice had a bit more of an edge to it.\n\nShe tried three more times before finally giving up and saying, \"A drink is supposed to last no more than ten minutes. A bottle, no more than a half-hour. Any more than that, and they dock my pay.\"\n\n\"So five bottles would guarantee that you are still sitting here with me at midnight,\" he said.\n\n\"Or until closing, if you want,\" she started to reply. But he was no longer facing her. He had turned so that he could catch the attention of one of the waitresses. He seemed to be looking for a particular server. Finally he found her and raised his arm to signal her to come across the room to their table.\n\nNormally waitresses were also assigned tables, but as Hector always said, \"Remember, the customer always comes first.\" He would always laugh almost maniacally whenever he said that.\n\nThe waitress walked up to the table carrying her tray, as always. It was Deanna, the only other woman at the club who refused to go downstairs. She, like Maria, was here out of desperation because she had no place else to go.\n\nWhen she arrived, the airman pulled a billfold out of one of the pockets on the front of his uniform and started peeling hundreds onto the table.\n\n\"This is for five bottles of your supposed champagne,\" he said as he set one stack on the waitresses tray. \"Tell the bartender to keep them on ice, but keep them behind the bar for now.\"\n\nHe then put two more hundreds on the tray. \"And this is for a couple of pre-flight specials.\" \n\nWhen she looked confused, he laughed slightly and said, \"Tell the bartender it's called a pre-flight special because it is three to one 7up and Coca Cola. It looks like a mixed drink, but you are still clear to fly.\"\n\nHe then took another hundred and folded it lengthwise. This one he put in the cleavage of Deanna's almost skin-tight uniform. \"This is your tip for making sure that our pre-flights are kept full until midnight.\"\n\nHe added a second bill and said, \"This is to insure that there is nothing in those pre-flights but 7up and Coca Cola.\"\n\nA third bill followed the second. His voice became very serious as he added, \"And this is incentive for you to take a cigarette break at exactly midnight.\" He sounded like an officer speaking to a soldier as he added, \"Nothing you ever do in your life will be more important than making sure that as midnight strikes, you are out behind the small wall that supports the sign where you normally go to smoke.\"\n\nThe waitress looked back at him like he was insane, but muttered, \"OK. Sure.\"\n\nA lot of weirdos came and went at The Cantina. But most of them didn't put $300 down between her tits. Deanna knew that things would probably be really wild at midnight. She also knew she wouldn't be missed if she slipped outside through the back door for a few minutes. Not that she believed this nut, but maybe he would fold some more Benjamins if he saw she did what he told her to do.\n\nA few minutes later she returned with the drinks. Maria tasted hers. \"This tastes a lot better than soda water and instant tea,\" she said quietly. \n\n\"And you don't have to tin roof the chaser,\" the airman responded just as quietly.\n\nTin roofing was a trick that the B-girls used when they had no choice but to actually drink a shot of hard liquor. You downed the shot as if you were throwing it down your throat, but in actuality, you were holding it in your tongue pressed up against the roof of your mouth. Then you took a sip of your fake drink and backwashed the alcohol back into the glass. Sometimes it became necessary to spill your fake drink to get rid of it, but you could always blame that shot going straight to your head for your clumsiness.\n\n\"Do you want to talk about it?\" she asked quietly.\n\n\"Talk about what?\" he answered.\n\n\"Whatever it is that you see when you stare,\" Maria replied.\n\n\"I see a burning building with dozens of school children running into the night,\" he answered flatly. \"Half of them are on fire. Most of them are dying. All of them are screaming.\"\n\nMaria gasped.\n\n\"You asked,\" he said with a shrug. Then he continued in his flat, expressionless voice. \"It was Halloween in '71. It was supposed to be a routine mission. We were carrying extremely accurate bombs that could be guided in by wire with absolute precision even at night. That's why we flew the mission in spite of the fact that we knew the school was close by.\"\n\nAt first Maria thought that she had heard the date wrong. She was about to ask him to repeat it but the airman looked at her... no he looked beyond her-- a thousand yards beyond her-- as he continued, \"but they had shoulder-fired missiles.\"\n\nHe took a sip of the pre-flight special before continuing, \"We took a near miss hit right as we launched the bombs. It was far enough away not to disintegrate us, but close enough to take off most of the left wing and all of my second-seater's head.\n\n\"I punched out before it started its flat spin into the ground. What was left of my ordinance man went in with the plane. I hung there under my parachute and watched both bombs go off course and slam into the school.\"\n\nHe exhaled deeply as if he had been smoking a cigarette. His eyes remained focused a thousand yards behind her. \"Luckily, with all of the chaos,\" he continued, \"I was able to get to an extraction point and get picked up by an evac team.\"\n\nHe took a sip of his drink. \"The other two planes in our group had already guided in their bombs before they were hit.\" He stared again at whatever it was that only he could see. \"But that meant they were climbing away when the missiles were fired. They were too low and slow to evade, so they each took one up the tailpipe.\"\n\nHe looked over at Maria. \"No survivors,\" he said with almost a smile... or was it a grimace. Then he tipped his drink at her and added, \"... except me.\"\n\nThe waitress arrived with two more of the pre-flight specials. The airman carefully sniffed each of them and took a small taste before sliding one of them over to Maria. \"It's been my mission, ever since then,\" he said slowly, \"to do my damnedest to prevent collateral damage.\"\n\n\"Is that why you are here?\" Maria asked.\n\n\"I wasn't supposed to tell you any of that,\" he replied. This time it was a real smile on his face.\n\nHe started to say something else, but break was evidently over because Hector, who was acting as emcee for the evening, was screaming out, \"And now, for your pleasure on this Hell of a Night, The Cantina Club proudly presents Dolores, Sandy, Juney, Vicki, Chloe, and Candi.\n\nSix young women bounced out onto the stage more or less in time with the music. Maria looked at the stage in surprise. None of these women were regular dancers from the club. In fact, she had never seen any of them before.\n\nThe six women stayed back from the front edge of the stage and shuffled around in what was supposed to be an erotic dance. As they moved in time to the music, they positioned themselves in front of six large, wooden chairs which had been set up at the back of the stage, facing the crowd. The music ended and they all dropped into their chair.\n\nAfter all six were seated, Hector yelled out,\"We are going to have a little contest this evening that everyone will enjoy.\"\n\nHe laughed and added with a shrug, \"Well, maybe not everyone. The five losers are probably not going to enjoy this at all.\" Then going back to his over-emphasized emcee yell, he shouted out, \"But all of YOU are going to enjoy it, and that is what is important.\"\n\nMusic began playing in the background as he said, \"Our first round is a dance contest. And, of course, for any contest we have to have judges.\"\n\nSix black-robed figures wearing black hoods and glowing skull masks which obscured their faces walked out and took seats at a series of small, round tables which had been set up in front of the stage. A box about six inches on each side was sitting in the middle of each table. The box lit up with a blue glow as each judge sat down. A few moments later, a white skull glowed a brighter blue on the front of each box. On the top of the box was a large red button which was also illuminated in some fashion. A separate, flat box that looked somewhat like a small keyboard sat alongside each of the glowing boxes.\n\nAfter all of the robed figures were seated, Hector yelled out, \"Aren't those the scariest judges you have ever seen?\" The crowd murmured and laughed in response.\n\nHe waited for the noise to fade and then gave a short laugh before saying, \"Their faces are hidden like executioners because these judges aren't choosing a winner...\" His laugh was long, loud, and evil-sounding before he added, \"They are choosing the losers.\"\n\nHe returned to his normal announcer exuberance as the music began to get rhythmic. \"Give a big hand,\" he shouted, \"for our first dancer... Dolores!\"\n\nDolores, despite her name was a very pale-skinned blond. She was dressed in several layers of very diaphanous pink material which she began taking off in time to the music. Her movements had a soft grace that hinted of a classical-- perhaps ballet-- training. She also repeatedly spun rapidly while keeping her head facing the audience with only a very fast snap as she twisted her head around to keep ahead of her spin.\n\nAs she shed each item of clothing, she would throw the piece outward toward the audience. The silk was so light, however, that none of them went out past the lip of the stage. Dolores would wait for each item to float slowly to the ground before she began to peel the next item from her body. Finally, she was dancing in just a small thong and an extremely tiny bra.\n\nShe began to twist. This time she didn't do the head snap to keep her head facing the stage, but instead twirled for several seconds like a skater on ice. When she came out of the spin, she was facing the crowd, and her tits were bare. There was a ripple of sound as various tables discussed where the bra might have gone.\n\nDolores then began to bounce in time to the music as she moved to stage left. She started moving back across the stage in a step that flipped back and forth from facing backstage to facing the crowd. As she moved, it was obvious that she was untying the strings for the bottoms. Somehow the tiny pieces remained in place even though the strings were now totally loose. Then, just as she made her last flip and faced the audience, the cloth was gone and she was standing, arms raised, facing the crowd.\n\nDolores bowed deeply as the crowd clapped, screamed, and whistled. She then walked back to her chair and threw a kiss to the crowd before sitting down.\n\n\"I don't think Dolores is going to lose... this round,\" Hector said as he came back on stage. As the music came up once again he said, \"Let's see how Sandy can do.\"\n\nSandy was heavily freckled with very pale reddish brown hair. Her breasts were very prominent, especially in comparison to the thinness of the rest of her body. She shed her blouse shortly after coming onto the stage, revealing long tassels hanging from glittery silver pasties.\n\nShe was nowhere near as graceful as Dolores had been, but the crowd seemed not to notice as she repeatedly set her tassels whirling between short breaks to remove other items of clothing.\n\nShe was down to nothing but the tassels with almost a minute left in the music and spent the remaining time standing near the front of the stage with her breasts bouncing wildly and the tassels spinning in opposite directions. Just as the music ended, she grabbed the spinning threads with both hands and pulled the pasties clear of her body. Evidently the rules of the contest required her to be naked when the music ended.\n\nHector strode across the stage as the crowd broke out with polite applause. \"I can assure you,\" he said solemnly, \"that every inch of Sandy is totally natural. There is no silicone in those jugs. That is all her.\" The applause increased slightly as Sandy held up her breasts and turned sideways to let the crowd see that they were, in fact, natural.\n\nAs she sat down, Hector was telling the crowd, \"I know that you will like Juney. Please welcome her to our stage.\"\n\nThere were a few shouts and catcalls as the young, darkly-skinned, Indian girl slithered to the front of the stage. There is no other way to describe her movements. She was very thin and moved as if her bones themselves were flexible.\n\nOnce the music had reached full volume, Juney began writhing in place raising and lowering her hands. She was dressed in one of the traditional costumes of India with many jewels and pieces of metal worked into the fabric. Somehow as she drew her arms back down, she was able to slip out of the bloused sleeves of her top. On the third movement upwards with her hands, she carried her blouse up over her head revealing a wrap-around style cloth brassier.\n\nShe faced the front of the stage, bent over backwards and continued bending until her face came up between her legs. She then reached up with her hands from below and grabbed the waistband of her pantaloons. Lowering herself down onto her stomach and rolling backwards, she pulled her legs upward out of the long garment and continued rolling until she had come back to a standing position with her back still bent all the way to the floor.\n\nShe then moved in her undulating fashion across the front of the stage, slowly unwinding the many layers of cloth which bound her breasts. Once they were revealed, they were rather small and conical, but the areola were very dark and the nipples themselves were at least three-quarters of an inch long.\n\nShe stood and swayed to the music for a few moments while she massaged her breasts. Amazingly, the nipples grew as they hardened under her touch until they were now well over an inch long.",
        "She once again began undulating as she unwound the layers of cloth which formed a sort of bikini bottom. Her unwinding was carefully timed so that when the song ended, she was standing stage front, totally naked, with a large bundle of cloth in her hand.\n\nThe crowd showed their appreciation with loud applause and cheers as she walked back and took her seat at the back of the stage.\n\nHector again walked to the front of the stage calling out, \"Wasn't she fantastic? And what about those nipples? You could massage the back of your throat with one of those.\"\n\nHe waited for the laughter to subside and the music to begin before shouting out, \"And now... Vicki.\"\n\nVicki's white leather outfit contrasted with her dark ebony skin. Her hair was cut short and curled close to her head. It was obvious that all of her skin-- at least all that currently showed-- was well oiled. She seemed to almost glow as stage lights of various colors reflected off her arms and legs. \n\nThe music was loud and very rhythmic as she worked her way across the stage. Soon the light was reflecting from much more of her body. Dancing energetically while coated with oil has its drawbacks, and she was soon glistening with perspiration as well as oil. It did not detract from her performance, however. In fact, the sheen of sweat made her dance even more erotic.\n\nCalling what she had on under the dress \"underwear\" is a bit inaccurate. She was wearing skin-tight white latex panties and bra. Several comments could be heard speculating whether or not they had been painted on and whether she would be able to actually remove them while dancing.\n\nThe surprise of her suddenly ripping open the concealed Velcro fasteners on her bra as she tore it from her body caused the crowd to gasp and then applaud wildly. Shouts and whistles accompanied her similar action as she tore the bottoms free and pulled them from between her legs, all the while remaining in step with the music.\n\nAs the song reached its end, she faced the back of the stage and bent completely over so that the edges of her well-formed breasts were pressed against the front of her legs and her face was upside down between her legs, smiling at the crowd. She clenched and unclenched her buttocks in time with the final heavy beat of the song so that her anus seemed to be winking at the crowd as they stood to cheer her performance.\n\n\"It looks like Vicki won't be on the hot seat on this first round either,\" Hector said with a laugh as he bounded back onto the stage. He again gave his evil laugh and added, \"But there are four more rounds after this one.\"\n\nThe music started once more and Candi came bouncing out to the front of the stage. She looked to be very young, but still had that hardened look most strippers acquire after a few years on stage. She had flaming red hair and brilliant blue eyes which seemed to light up as she smiled out at the audience.\n\nHer outfit was intended to mimic an English schoolgirl's down to the tartan skirt. Unlike the other girls, she was wearing several layers of clothing. Beneath the blouse was a top-slip and beneath the skirt was an additional loose slip. Each article of clothing was shed with many shy glances over her shoulder. To the uninitiated who did not see the underlying hardness in her face, it appeared almost as if she were doing this for the first time and was embarrassed to be showing her body.\n\nCandi was an expert at faking shyness and inexperience. At least a dozen of the men watching had paid to take her virginity. One had even paid extra for the privilege of taking it forcefully.\n\nShe made each man in the audience think that she was looking directly at them as she took off each article of clothing. There was still well over a minute of her song left when she was down to nothing but the white, cotton socks which came half-way up to her knees. After sliding several times toward the front of the stage as if she were on ice, she stood sideways to the crowd and slowly slid her hand down her leg until she reached the top of the sock. She turned slightly as she pushed the sock over her ankle and heel so that her ass was on perfect display to one half the audience. Then she suddenly stood up straight and kicked the sock out over the crowd.\n\nSeveral of the men jumped for it like over-eager bridesmaids trying for the bride's bouquet. Two men ended up on the floor tussling for it for a minute or two before the larger man stood up shouting with the sock held high above his head.\n\nCandi then danced to the other side of the stage and repeated her actions with the other sock. This time, she pulled her leg way back as if she were going to kick the sock all the way to the back of the room, but then flipped it into the middle of the table at front, stage-center.\n\nShe then walked back to her chair swinging her hips in time to the music and sitting down on exactly the last beat of the song.\n\n\"I never get tired of watching Candi dance,\" Hector said with a smile. After the crowd finally quieted down and the music came up once more, he turned to face the last dancer who was moving toward the front of the stage.\n\n\"Our final dancer is Chloe,\" he shouted out. Then, shaking his head, he said in a much softer voice, \"I wish I could say that I saved the best for last, but Chloe has been having problems living up to her contract lately. Let's hope she puts her full effort into this contest.\"\n\nChloe shuffled her way toward the front of the stage. She didn't even attempt to show the pasted-on smile common to most strippers. Her face looked more like a prisoner walking to their execution chamber. Her blond hair was obviously a wig and was just as obviously loose on her head. Her movements were fluid, but somehow not graceful and were just enough out of sync with the music to be uncomfortably noticeable.\n\nThe crowd was silent through her routine and remained silent as she slid her bottoms to the ground with a snake-like wiggle that didn't quite end in sync with the music.\n\nHector walked slowly onto the stage as she stood staring out at the crowd. He grabbed the wig from her head as she turned to go back to her seat. With obvious disgust, he threw it off stage and turned to face the crowd.\n\n\"I apologize for that,\" he said. \"But Chloe knows that she can't dance worth a shit, and I guess she has just given up.\"\n\nHe gave a very long, very loud, and very evil sounding laugh before saying, \"With so much at stake, I can't imagine anyone giving up, but when you know you can't win and are going to Hell anyway, it's hard to do your best.\"\n\nHe then returned to his normally exuberant announcer voice and said, \"I'm sure we all know who the loser is, but I think we should let the judges vote.\"\n\nThe six black-robed judges tapped on their small keyboards. Then Hector yelled out, \"Vote in three... two... one... NOW!\"\n\nAll six judges slammed their hands down on the large red buttons. Five red lights lit up on the back of Chloe's chair and she screamed loudly as her body shook and vibrated from the strong electrical pulses that were coursing through it. Evidently the chairs had large electrodes on the seats and back and arms.\n\nOne red light appeared on Sandy's chair and she screamed and jumped to her feet. Evidently the shock through her chair wasn't sufficient to freeze her muscles in place.\n\n\"Either one of our judges really hates tassels,\" Hector said with a laugh, \"or somebody pressed the wrong number on his keyboard.\"\n\n\"They put the damn labels on wrong,\" a gruff voice said from the judges' table.\n\n\"Well,\" Hector said, \"in that case we will get that corrected while Chloe receives her punishment for losing.\"\n\nWhile he was speaking, two men in grubby blue jeans walked onto the stage carrying a padded beam that looked like a gymnast's pommel horse, except it seemed to be a little shorter and it didn't have the two, big iron rings in the center of its thick padded bar. Once they set it in the middle of the stage, one of them motioned to Chloe and she walked hesitantly out to the center of the stage.\n\n\"Don't make me force you into place,\" Hector said ominously and she draped herself over the end of the padded beam. Her head hung over one end of it and her ass stuck out slightly from the other end. One of the men pulled her arms downward and strapped them to the legs of the beam. The other man bent her legs at the knee so that the lower part of her leg was in line with the other set of legs. He then strapped her ankles and knees in place. The result was that she looked somewhat like a jockey hunched over a racehorse with her head low and her ass pushed slightly up into the air.\n\nHector walked over to stand next to her. He was holding a rather large, black leather paddle in his hands. \"As much as I would like to spank this disobedient ass,\" he said lightly, \"the rules of the contest say that the non-losers punish the loser.\" He made a wiggling motion with his hand as he added, \"-- more or less.\"\n\nDolores, Sandy, Juney, Vicki, and Candi got up from their chairs and formed a line behind Hector. He handed the paddle to Dolores and said, \"Five swats from each of you.\" His face became firm and angry-looking as he added, \"Make them good. She embarrassed us all.\"\n\nDolores looked down at Chloe's quivering ass for a moment before taking a big back swing and bringing the paddle down squarely on both ass cheeks. Chloe's scream was loud enough to be heard in the parking lot. Dolores followed that with four more equally powerful swats.\n\nSandy, Juney, and Vicki followed Dolores example and laid powerful slams directly across Chloe's bucking ass while the audience cheered them on. \n\nCandi paused to rub her hand lightly across Chloe's now red and blistered skin. \"Oh,\" she said with mock surprise, \"you are finally showing some heat on stage. Maybe you will get it right eventually, honey.\" \n\nFollowing that, she swung the paddle five times very rapidly. The first swat was at the very top of Chloe's ass, almost on her back. Each swat moved downward slightly so that the last one was directly over where the curve of Chloe's ass merged into her legs. Candi's light laughter as she walked back to her seat was lost under the screams and sobs as Chloe's mind-- and body-- processed the pain which she had just endured.\n\nThe two men who had set up the padded beam returned to the stage and released Chloe from her restraints. They then lifted her and more or less dragged her back to her chair. One of them was carrying several black leather straps which they used to strap her into the chair. One strap went around her chest, holding it tight against the back. Another went over her waist holding her swollen butt firmly against the seat. Two more were used to strap her wrists in place and another two were placed just below her elbows so that her forearms were held tightly to the arms of the chair. Four straps were used in a similar fashion to hold her calves tight against the legs of the chair. A final strap was used to hold her head firmly against the top of the seat back.\n\nAs the men were strapping Chloe in place, the airman leaned in close to Maria. \"Do you know why they are willing to risk so much by taking part in this contest?\" the airman asked softly.\n\n\"No,\" answered Maria. \"I guess they are more desperate than I am.\"\n\n\"They sold themselves to the Devil many, many years ago,\" the airman said. He had returned to the totally flat voice from earlier. \"They know that this Halloween marks their time of reckoning. The Devil is to claim them tonight. This contest was their only chance that they might escape their fate.\"\n\nMaria thought for a moment and was going to ask the airman to explain further, but Hector's voice interrupted her as he cried out to the crowd, \"Are you all having a Hell of a Time?\"\n\nA thunderous \"Hell, yes!\" answered him.\n\n\"Then let's continue our contest!\" he screamed back. Lowering his voice and leaning toward the crowd he looked from side to side and then said, \"I think it's time to lock the doors and shut off the outside lights.\" There was a loud click as the front doors electronically closed and the glare of neon which had been coloring the few windows disappeared.\n\n\"Don't worry,\" he said in an attempt at a soothing tone of voice. \"If anything happens, you can still get out, but no one is going to be coming in and stopping our Halloween contests.\"\n\nThe crowd cheered in response.\n\nMaria whispered softly, \"It's this way every Halloween. They lock everything up and make it look like we're closed so they can go full illegal on stage.\"\n\n\"That's not the only reason,\" the airman replied softly.\n\n\"So...\" yelled Hector, \"now that we are alone, shall we find out which of our young ladies is the best-- or more importantly, the worst-- cocksucker?\"\n\nAgain the crowd screamed back, \"Hell, Yes!\"\n\nHector smiled out at the crowd and said, \"You are my favorite devils to be. And all of you will definitely have a real Hell of a Time soon.\" He then laughed very loudly and added, \"... very soon.\"\n\nIf anyone outside the club had heard the laugh, they would have thought it was the beginning of a grade Z horror movie. The people in the crowd, however, responded with cheers, whistles, and foot stomping.\n\nAs the deafening noise slowly died down, five naked men walked onto the stage. Two of the men would most likely be classified as brown. One was obviously from the Middle East while the other was most likely from the Indian subcontinent. The third man was jet black. His skin was oiled and reflected the lights as he walked. The fourth seemed to have olive skin with almost red overtones. And the fifth was a rather pale blond. All were very well endowed.\n\nThey walked to stage center and stood facing the audience while standing about half-way back on the stage.\n\nHector turned to face the women sitting on the stage. \"Ladies,\" he exclaimed loudly, \"you may pick the prick you are going to suck.\" He laughed softly as he added, \"... but choose wisely.\"\n\nDolores, Sandy, Juney, Vicki, and Candi got up from their chairs and walked over to stand in front of the men. Despite what Hector had said, they lined up as they were in front of the five men.\n\n\"No hands,\" Hector said loudly. \"You can use only your mouth and your tongue.\"\n\nThe five women sank to their knees.\n\n\"Speed is not the only thing that matters here,\" he continued. \"When you finish, you will return to your chair. After everyone is finished, the judges will vote.\"\n\nHe laughed his evil laugh and added, \"Of course, the last one to bring off her volunteer had better be ready for some fireworks.\" After another loud laugh he finished with, \"... because unless you do something really spectacular, you are going to be the judges' favorite.\"\n\nThe five women leaned forward and pulled the pricks into their mouths. Soon their heads were bobbing and soft slurping noises filled the club. \n\nEither Sandy was a really excellent cock sucker or the man she chose had a hair trigger. In either case, just a few moments after they began, he gave a loud groan and bent over slightly.\n\nSandy continued sucking on his cock for a just almost a full minute and then stood and walked over to where Hector was standing holding a martini glass. She bent her head and allowed her mouthful of cum to slide down into the glass.\n\nAfter a short while, both Dolores and Vicki did the same thing.\n\nThere was a much longer pause before the man Juney was sucking gave a loud groan and spurted into her mouth. The glass was about half full after she spit the spunk from her mouth and returned to her seat.\n\nCandi continued to suck and slurp for several more minutes. The man was groaning loudly and was obviously greatly enjoying what she was doing, but he had not yet popped. Finally, with almost a shriek, he erupted into her mouth.\n\nCandi's cheeks bulged and her eyes opened wide as he thrust several times and continued to pump jism into her mouth. Finally he gave a deep sigh and placed his hands on the top of her head.\n\nShe waited until he had stopped patting her before she rose and walked over to Hector. When she bent over and opened her mouth, the liquid overflowed the glass in Hector's hand.\n\nThe crowd responded with shouts and applause. Hector gave a signal of some sort and a scantily clad woman rushed onto the stage carrying a serving tray. He set the glass on the tray and wiped his hands on the towel which hung from her arm.\n\nTurning to the judges, he called out, \"Are you ready to vote?\"\n\nThe grunts from the table evidently indicated yes because Hector walked over to stand behind the chairs where the women were seated and yelled loudly, \"Then... vote!\"\n\nBoth Juney and Candi cried out as two lights flashed on their chairs. Dolores also yelped as one light lit on hers. A moment later she yelped again as a second light came on. Chloe screamed loudly as all six lights flashed on her chair.\n\n\"We seem to have a tie,\" Hector said loudly.\n\nThe gruff voice from the judges' table again called out, \"I meant to vote for Juney. I think quality is more important than speed.\" He seemed to mutter to himself for a moment before saying aloud, \"These damn buttons are confusing.\"\n\nHector looked angry, but said very quietly, \"I guess we will just have to have a re-vote. Judges, set your votes.\"\n\nHe looked up and said angrily, \"Someone help Harold with his keypad.\" After a short pause he once again said, \"Vote... NOW!\"\n\nThis time three lights lit on Juney's chair, two on Candi's and one on Dolores'. Again, all six lights lit on Chloe's chair. Both Juney and Chloe screamed loudly.\n\n\"Someone evidently doesn't like speed at all,\" Hector said with a chuckle. \"And three of you think that Candi was a better cocksucker even though she brought off her man last.\"\n\nHe looked off stage and said loudly, \"That means that Juney is our loser for this round.\"\n\nSeveral men, dressed in black, ran onto the stage and secured Juney to her chair as they had done to Chloe earlier. Hector slowly walked over to stand in front of her and signaled for the waitress with the tray to join him.\n\nHe picked up the slimy martini glass from the tray and held it in front of Juney's face. \"Open wide,\" he said cheerfully. Then he added in a much more gruff voice, \"Don't make me resort to a spacer gag.\"\n\nJuney dutifully opened her mouth and Hector poured the vile drink down her throat. He then turned to the crowd and asked, \"Do you think she's had enough?\"\n\nThe crowd roared back, \"Hell, NO!\"\n\n\"I didn't think so,\" he responded with a chuckle.\n\nThe scantily-clad waitress reappeared with her tray. This time, sitting on the tray was a very large snifter filled with cum. Hector smiled out at the crowd and said, \"Thank you to all the volunteers who contributed to tonight's program.\"\n\nHe then tipped the contents of the glass into Juney's very unwilling mouth.\n\nAfter Hector walked back to the center of the stage, one of the men who had bound Juney to the chair returned with a wide strap which he used to pull her head tight against the high back of the chair. She was now totally bound exactly as Chloe was.\n\n\"Lets remind our audience who our losers are so far,\" Hector said with a laugh. All six lights flashed brightly for several seconds on Chloe's and Juney's chairs.\n\nAs their screams-- and the applause from the audience-- slowly faded. The airman pulled a cigarette from one of his pockets and lit it. Marie started to say something about no smoking in the club, but then she realized that many of the customers tonight were openly smoking at their tables.\n\nHe blew smoke toward the stage. \"Have you noticed that the regular dancers aren't here tonight?\" He paused, pointed with his cigarette toward the bar, and said \"That's not the regular bar crew either, is it?\"\n\n\"I guess not,\" Marie answered as she looked around. Until the airman had pointed it out, she hadn't noticed that she didn't recognize any of the other staff working the party.",
        "\"Do you recognize any of the customers?\" he asked.\n\n\"N... no... I guess not,\" she said shakily, \"but it's by invitation only tonight.\"\n\nThe airman took a deep drag on his cigarette and held up his invitation. \"Do you know what one of these invitations cost?\" he asked.\n\nShe looked back at him blankly and he gave her a very strange smile. \"Your soul,\" he said quietly.\n\nOr at least that is what she thought he said. It was hard to be sure because as he was speaking, Hector had again come to the center of the stage and was bellowing out, \"Are you all having a Hell of a Time?\"\n\nOnce again, a thunderous \"Hell, yes!\" answered him.\n\n\"Then let's go deeper into Hell!\" he screamed back. \"It's time for round three!\"\n\nThe stage hands began carrying what looked like small divans onto the stage. They appeared to be rather worn, but still looked very soft. After four divans were placed across the front of the stage, four naked women walked onto the stage.\n\nThree of the four were bare between their legs. The fourth sported a huge bush of fiery red hair. As they walked onto the stage, all four of the women displayed that jaded look that comes from years of using your body for the entertainment of others. Their faces formed identical plastic smiles as they turned toward the audience and sat down on the divans.\n\nThe divans were arranged so that the short side of the backless couch was facing the audience. That allowed the women to lay back and spread their legs with their crotches right at the edge of the divan. They each did so, and the crowd roared its approval.\n\n\"We have four desperate contestants still active in our little contest,\" yelled Hector. He laughed slightly and said loudly, \"We have already established that they are pretty good cocksuckers. Let's see how good they are at cunt lapping!\"\n\nHe clapped his hands loudly and said, \"Dolores... Sandy... Vicki... Candi... get your asses out here!\" He laughed again and said, \"Or maybe I should have said get your tongues out here.\"\n\nThe four women filed slowly out to the front of the stage and knelt in front of the divans. \"Obviously,\" Hector said with a smile, \"speed is not the primary object here. For a woman, the journey is as important as the ending, no matter how happy it might be. The judges will primarily be evaluating the quality of the orgasm and the overall pleasure that the woman appears to receive.\"\n\n\"Are the judges ready?\" he asked.\n\nA chorus of grunts and yeahs came from the judges' table.\n\n\"Then begin,\" Hector yelled.\n\nVicki raised her head slightly and began running her tongue along the abdomen of the woman in front of her. The other three went directly for the slit, slurping and lapping noisily.\n\nDolores had the woman with the hairy bush. It was obvious that the thick hair was creating problems for her. Several times she pulled her head up as if she were choking, but quickly dove back between the redhead's legs.\n\nCandi seemed to be concentrating on her woman's clit. She was suckling as if it were a breast and the woman was responding with ever increasing cries of \"Oh, oh, oh, oh...\" Suddenly the woman's legs began thrashing and Candi pressed in even tighter. She was now running her tongue up the entire length of the woman's cunt as if it were a large lollipop. After just a few moments of that fevered lapping, the woman screamed out loudly and wrapped her legs around Candi's head. After several more short screams and grunts she fell back against the divan, panting heavily. Candi stood slowly and walked back to her chair. \n\nThe woman that Sandy was pleasuring was beginning to groan loudly. Sandy seemed to be trying to see how deeply into the woman's cunt she could drive her tongue. The groans were slowly morphing into cries of pleasure and the woman's hands were now on Sandy's head, pulling it tighter to her body.\n\nThe woman's cries were now, \"Ah, ah, ah, ah...\" and were in time with the thrusts of Sandy's head and tongue. Suddenly Sandy shoved upward on the woman's thighs pushing her legs over her chest. The tongue that had been thrusting deeply into the woman's cunt now zeroed in on her rosebud.\n\nA scream of \"Aiiiieeee!\" filled the room and the woman's legs, still pushed tightly against her body, thrashed wildly. Sandy switched to running her tongue from the woman's asshole all the way up through her slit to her clit, at which time she evidently clamped down with her lips to nip at that sensitive bud. The woman's cry became much louder and much more shrill as she convulsed in orgasm.\n\nAfter the woman's cries were reduced to soft moans and gasps for air, Sandy stood up and she, too, walked back over to her chair.\n\nVicki moved down from her woman's abdomen to between her legs. From the rhythmic grunts, it was apparent that she too was using her tongue as a flesh dildo to bring the woman off. She may or may not have planned to rim the woman to orgasm, but she didn't have the opportunity. The woman suddenly screamed out a very loud, very shrill scream and went over the top.\n\nMeanwhile, Dolores was still attempting work her way through the thick red bush between the legs of the woman before her. When she once again pulled up and started coughing, it was the woman who got up... and walked off the stage.\n\n\"Oh...\" Hector called out in mock sympathy, \"that doesn't look good.\"\n\nDolores rose to her feet and walked dejectedly over to her chair. There was no doubt in her mind that she had lost as she sat staring blankly out over the crowd.\n\nHector looked out at the crowd and asked loudly, \"Do we really have to vote?\"\n\nA loud, \"Hell, NO!\" came back from the audience.\n\nHector chuckled and said, \"Well, you're probably right, but I guess we should make it official. Judges, set your votes and vote... NOW!\"\n\nAll six lights flashed on Dolores' chair and she screamed loudly. She did not scream alone, however, because the six lights on Chloe's and Juney's chairs also lit just as brightly.\n\nDolores slumped in her chair almost as if she had been rendered unconscious. She slowly raised here head, however, as Hector began to speak. \n\n\"Since Dolores doesn't seem to know how to give a woman an orgasm,\" he said loudly, \"I think we should teach her what a female orgasm actually is.\"\n\nThe crowd shouted noisily. Many of the men seemed to be volunteering to show her what a good fuck was really like.\n\n\"I know that many of you could more than adequately service poor Dolores,\" Hector said slowly as he smiled at the crowd. \"But we don't want to reward her with pleasure. We want to punish her with pleasure.\"\n\nHe made a sweeping gesture toward the center of the stage and two of the stagehands quickly pushed a platform out to stage front. On the platform was a Sybian female masturbation machine.\n\nThe crowd roared its approval as Hector explained, \"Many women get pleasure from these marvelous machines, but they can also be used for torment.\" He laughed, \"It's simple. All you have to do is tie a woman to the machine and let it fuck her brains out... and then some.\"\n\nThe two men who had brought out the machine walked over to where Dolores was seated and roughly pulled her to her feet. They then frog-marched her over to the Sybian and just as roughly forced her down onto the twin dildos which stuck up from the center of the machine. After they strapped her firmly in place with several wide nylon straps, one of them then picked up the remote and twisted the vibration control to maximum.\n\nDolores immediately gave out a loud \"AAAAaaahhh!\" as the vibrations tore through the center of her body.\n\nThe man waited for several minutes and then twisted the control for the rotation of the front dildo. As it went to maximum, Dolores began crying out, \"No, no, no, no, no, no...\" Each \"No,\" however, seemed to be slightly higher and slightly breathier.\n\nAfter just a few moments she screamed out in orgasm and began pleading, \"Please, shut it off... please shut it off... shut it off... shut it off... shut it off...\"\n\nHector looked out at the crowd and asked, \"Should we shut it off?\"\n\nThey screamed back, \"Hell, NO!\"\n\nHector stood alongside Dolores at the front of the stage. Each time she screamed out in orgasm he held up one more finger. When he was holding up all of the fingers of one hand and one finger of the other, the airman again leaned in toward Maria and said softly, \"You've been here for three of these parties before. Do you remember what happens at midnight?\"\n\nMaria thought for a moment and said, \"It gets kind of weird around then. Hector times it so the final voting is exactly at midnight. All of the judges make their final vote and then all the lights go out and all you can see is the lights flashing on the losers' chairs. When the lights come back on, only the winner is on stage. Even the judges are gone. Everybody leaves after that because the party's over.\"\n\n\"Where do the losers go?\" the airman asked.\n\n\"I... I... I... don't know,\" Maria stuttered out. \"I guess I never thought of it.\"\n\n\"How do they get off stage?\"\n\n\"I don't know.\"\n\n\"What time does the party actually end?\" he almost shouted.\n\nMaria looked back at him with an expression of shock on her face. \"I don't know,\" she finally whispered. \"The last thing I can remember clearly from last year is Hector calling for the final vote of the judges.\"\n\nThe airman pulled another cigarette from his pocket and lit it with a square-looking Zippo lighter. He snapped the case shut by hitting it against his arm and then took a deep drag on the cigarette. As he slowly exhaled, he said, \"You don't remember because Hector suspends time within The Cantina at midnight and your mind can't process what is happening.\"\n\nHe gave Maria a very quick smile and said, \"He doesn't draw you into his time because he needs one or two innocents here to keep The Cantina anchored in this reality.\" The smile faded as he said, \"Tonight, with me here, you will see Hector for what he really is.\"\n\nMaria wanted to ask the airman what he meant by that, but Hector was once again yelling, \"Are you having a Hell of a time?\"\n\nThe building shook as the crowd screamed back, \"Hell, YES!\"\n\n\"Then,\" Hector said with a laugh, \"it's time for round four.\"\n\nMaria looked back over at the stage. Dolores was now bound in her chair in the same exact fashion as Chloe and Juney.\n\n\"Let's remind people who our losers are so far,\" Hector yelled out and the six lights on Chloe's, Juney's, and Dolores' chairs flashed brightly. Chloe and Juney screamed loudly. Dolores merely shook her head slightly and gave a soft groan of pain.\n\n\"Sandy, Vicki, and Candi,\" Hector shouted, \"front and center!\"\n\nThe three women scurried to the front of the stage.\n\n\"Our next contest is relatively simple,\" Hector began to explain as the stagehands noisily dragged a thick pole onto the stage. The pole was about seven feet high and was held upright on a square, wooden, platform that was a few inches high.\n\n\"The object of our little contest,\" he explained, \"is to NOT be the one who is tied to this post.\" Hector paused to laugh. \"So,\" he continued, \"all you have to do, is tie one of your opponents to the post. It doesn't matter which one. The person tied to the post is the loser. The two who walk away are the non-losers. It's that simple.\"\n\nHe then handed each of them a long length of leather. After the three women had stepped back slightly so they were equidistant from him, he shouted, \"Begin!\" and jumped out of the way.\n\nThe three women slowly moved in a large circle trying to stay out of each others clutches, while at the same time trying to grab one of the other women so that they could bind them to the post.\n\nAt one point Vicki almost had Candi in her grasp, but Candi twisted away. Sandy then made a grab at Vicki, but she was unable to hold her firm. Suddenly Candi jumped at Vicki and grabbed her firmly by the arms.\n\n\"I'll pull her over to the post,\" she said to Sandy, \"and you tie her in place.\"\n\nSandy nodded her head and Candi dragged Vicki backwards toward the post. When she reached the post, she released her grip on one of Vicki's arms for just a second so she could reach around the post and drag Vicki back against it.\n\n\"Got you, you slut,\" she screamed as she pulled Vicki tight against the post.\n\n\"No,\" Sandy screamed. \"Got You!\"\n\nBefore Candi realized what was happening, Sandy quickly wrapped the leather thong around her arms, effectively tying her face first against the post.\n\nVicki squirmed out of Candi's now trapped arms and both she and Sandy walked, laughing, back to their seats.\n\nHector's laugh rumbled through the room. Soon the entire audience was laughing with him as he stood next to Candi while she pulled frantically at her bonds.\n\n\"I guess you didn't know that Vicki and Sandy are lovers,\" he said with a laugh as he reached out and ran his hand down Candi's back and ass.\n\n\"I really wish I had time to take advantage of this,\" he said almost softly. \"I would really love to turn your ass to hamburger with my bullwhip.\"\n\nHe took a deep breath and said, \"I guess that is for some other time.\" Turning to face the judges' table, he said, \"This won't be official until you vote, so give us a minute to get Candi properly in place.\"\n\nThe stagehands rushed out, untied Candi, and dragged her over to her chair. As soon as they had her strapped in, they stepped back and Hector shouted, \"Vote now!\"\n\nSix lights lit brightly on four of the chairs and four extremely loud screams echoed through the room.\n\n\"Oh,\" Hector said sadly as he shook his head, \"I so wish that I could have reddened her ass. It is so pert and lovely that it just calls for the whip.\"\n\nHe suddenly yelled out, \"Do I own this club or not?\" He then looked out at the audience with his most evil smile and said with a chuckle, \"I'm going to change the program a little, if you don't mind.\" \n\nThe audience responded with cheers and applause.\n\nMotioning to the stagehands, Hector ordered, \"Bring her back here and hang her from the pole.\"\n\nThe two stagehands unstrapped Candi and more or less dragged her over to the tall pole. They threaded one of the leather straps through an eyebolt near the top of the pole and tied her hands in place. One of them pulled on the leather to tighten it so that she was forced to stand slightly on tip-toe.\n\nThen they used the other two pieces of leather to tie her feet to the platform which supported the pole. Evidently there were holes in the platform itself because they threaded the leather through something and pulled her feet out so that she was basically hanging from her hands.\n\n\"Now she is ready,\" Hector said with a leering smile. One of the stagehands ran to give him a large bullwhip and he cracked it noisily above the crowd.\n\n\"How many should I give her?\" he asked the crowd.\n\nCries of \"One hundred\" could be heard from several people.\n\n\"That's too many,\" Hector said loudly. \"We don't want to kill her... ... yet.\"\n\nHe then nodded his head slowly as if thinking. \"Thirty-nine would be a good number,\" he said calmly. Then his voice became almost excited as he finished with, \"But since it is Halloween, why don't we make it thirteen.\"\n\nHe then snapped the whip so that it cracked very loudly just above Candi's head. As he drew the whip back and lashed it forward once again, those who were at the right angle could see that the whip began its supersonic snap just short of Candi's ass. Then, as it went through its flip, the final two or three inches of the whip's tassel slammed against Candi's asscheek. The snap of the whip tassel and the snap of it hitting her skin and sound of her scream all seemed to happen at the same time.\n\n\"One,\" Hector said softly.\n\nThe airman handed another pre-flight special to Maria. \"Tonight,\" he said softly, \"because I am here with you, you will be able to see and hear what is going on when Hector suspends time. In what is less than a second to the outside world, he is vulnerable, and that is when he will be destroyed.\"\n\nMaria looked at the airman. Her eyes were very wide with fright. She could still hear Hector counting softly in the background, but his voice was not what scared her.\n\n\"Hector is a demon,\" the airman continued, \"... one of the highest ranking servants of the Devil running free on the earth.\"\n\nHe blew smoke over at the stage where the count was now at nine.\n\n\"The angel squadron has been after him for centuries,\" the airman explained, \"but hasn't been able to get to him because he is only vulnerable when he shows his true self to claim his victims.\" He grimaced. \"And he only does that one night each year.\"\n\nHe stopped to pick at a small piece of tobacco on his lips. Evidently his cigarettes were unfiltered. Then he continued, \"He has always been safe here within The Cantina because of the spells and enchantments he has cast on the place. But tonight, because I am already within that protective spell, the Angel Squadron will be able to enter and destroy him.\"\n\n\"Are you an angel?\" Maria asked.\n\n\"If I were,\" he answered with a short laugh, \"the demon at the door would never have allowed me to enter.\" He took another deep drag on his cigarette. \"I'm just a man... and not a very good man at that. That's why the demon let me enter.\"\n\n\"So you're here to destroy Hector?\" she asked.\n\n\"No,\" he said with a smile. \"The Angel Squadron will do that. I'm just here to prevent collateral damage.\"\n\nOnce again Maria was going to ask something but was cut off by Hector's scream of \"Are you having a Hell of a time?\"\n\nThe \"HELL, YES!\" was more thunderous than ever.\n\nMaria looked back at the stage. Candi was now restrained tightly in her chair and the stagehands were rapidly setting up a small wrestling ring in the middle of the stage. Once it was in place, Hector walked over and began squirting something on the floor of the ring from a large bottle. It looked like baby oil.\n\nLooking out at the audience and laughing, he said, \"We need to slick it up a little to make it interesting.\" He then called out loudly, \"Sandy... Vicki... Get your asses into the ring!\"\n\nThe two women hurried into the ring. Vicki had a little trouble getting over the ropes and ended up having to crawl through them. Sandy vaulted her body over with no problem. Hector met them in the middle of the ring. Maria noted that he had left himself a narrow passage on the mat which was not covered with oil.\n\nIn his hands, he was holding a large bag. He reached in and brought out two more bottles similar to what he had used to coat the ring with oil. \"Go back to your corner,\" he said, \"and use these to get yourself slick. Then come back here.\"\n\nThe two women did as he ordered. The crowd cheered and made lewd comments as they stood pouring the oil over their bodies and rubbing it into their skin. When they were finished, he tossed each of them what appeared to be a large tube of some sort of lubricant.\n\n\"You might want to be sure that you grease up your ass with that,\" Hector yelled loudly. \"Otherwise, if you lose it will be really painful.\"\n\nWhile they were smearing the grease between their ass cheeks-- and within their rosebuds-- Hector held up two strange-looking anal plugs. \"This is a spike match,\" he said loudly. He had to pause and wait for the loud cheering from the crowd to die down before continuing with a broad smile,\"If you shove your spike into your opponent's ass, you win. You don't have to pin her or even take her down. As long as this spike is firmly up her ass, she loses.\"\n\nThe two women looked at him warily as he handed each of them one of the long-handled butt plugs. \"There will be no referee,\" he said with a laugh, \"because there are no rules except to spike your opponent however you can.\"\n\nAs he began climbing over the ropes he said, \"Once I am out of the ring, I will signal you to start.\" Then he added, \"May the worst woman win.\"",
        "Once he was standing beside the ring, he raised his hand high into the air and brought it quickly down as he shouted out, \"Go!\"\n\nBoth women began moving in a slow circle toward the center of the ring. When they were within a few feet of each other, they continued to circle almost as if it were some sort of savage dance. Vicki lunged at Sandy several times, but with the amount of oil on their bodies, she was unable to do more than push her around.\n\nAfter about twenty minutes, the crowd began to get restless. Some were booing. Others were shouting \"Do something!\" Finally Hector yelled out loudly, \"In five minutes I am going to declare you BOTH losers!\"\n\nThat caused the two women to start making almost continuous lunges at each other. Vicki shifted her weight slightly as Sandy was getting ready for another attack. When Sandy lunged, Vicki not only sidestepped her, she grabbed Sandy's hair and pulled her further along. As Sandy's body passed Vicki's, Vicki reached around with spike and drove it into Sandy's ass.\n\nSandy screamed and turned to face Vicki, who was now bouncing up and down in a Rocky Balboa victory dance. The audience started to cheer, but then went silent as Sandy squatted slightly and expelled the spike from her ass. Evidently Vicki hadn't pushed it far enough up for the plug to set.\n\nSandy then launched herself at Vicki, who was still celebrating her apparent victory, and rammed her spike firmly into Vicki's ass with enough force that it almost lifted her off the ground. Vicki's loud scream was almost drowned out by the cheers and applause from the crowd.\n\n\"We definitely will have to have the judges vote on this one,\" Hector said loudly. \"Obviously, Vicki's spike wasn't <er>FIRMLY</er> in Sandy's ass, but does that mean she can shit it out and win by ramming her own spike firmly into Vicki's ass?\"\n\nHe signaled the stagehands to come forward and they took the two women back to their chairs to restrain them. As they sat Vicki in place, Hector said with a laugh, \"Now you know the purpose of the hole in the seat on those chairs.\" The stagehands had not removed the spike from Vicki's ass before putting her in her seat. In addition, they had restored the spike to Sandy's ass before putting her in place.\n\n\"Judges,\" Hector said dramatically, \"what is your decision?\"\n\nThere was soft murmuring among the hooded figures at the judges' table. One of them signaled Hector and he walked over to confer softly with them. He was still nodding his head yes as he walked back up onto the stage.\n\nThe airman leaned in close to Maria. \"When I stand up,\" he said firmly, \"drop to the floor just behind me. I will protect you. Whatever happens, stay on the floor and don't move! Don't try to stand up. Don't try to run. Just pull yourself into a ball and lay there.\" He looked directly into Maria's eyes for the first time as he said quietly, \"Only I can keep you safe.\"\n\nMaria didn't understand, but Hector was yelling, \"Judges, make your selections and vote... NOW!\"\n\nMany things happened all at once when the judges slammed their hands on the red buttons. The world around Maria began to shimmer and distort. For a moment everything became deathly quiet. Then all six women screamed loudly as the lights on all of the chairs began flashing more brightly than they had before.\n\n\"You all lose,\" Hector cried out jubilantly. \"None of you escape your contracts.\"\n\nHe faced the audience, smiled evilly, and rubbed his hands together as he said, \"That means it's suppertime.\"\n\nThe six judges rose from their seats. They didn't stand up, they rose. They floated above their chairs into the air and drifted toward the stage. As they moved their masks fell to the ground.\n\nThe faces behind the masks, with jagged teeth and red, fiery eyes, were much more horrifying than the glowing skulls had been.\n\nMeanwhile, Hector looked like he was melting. His skin flowed off his body revealing a reddish-looking lizard-being with huge teeth and eyes that seemed to sprout flames.\n\nThe six women began screaming hysterically as the lizard-being grew larger and larger. These were no longer screams of pain. They were screams of pure terror.\n\n\"You can have the bodies,\" the lizard-being growled out to the judges, \"but I get the souls.\" He then opened his mouth and put it over Sandy's head.\n\nAt that moment, the airman stood up and said loudly, \"On the floor.\"\n\nMaria dropped to the floor behind him and curled herself into fetal position.\n\nThere was a sound louder than a hundred jet airplanes taking off and suddenly everything in the club was bright white. Strange beings, brighter even than the whiteness of the room, were zooming in from all directions. The six judges turned and attempted to flee, but two of the light beings caught up with each of them. As the light beings enveloped each judge, he... or she... or it... exploded in a flash of smoke and flame.\n\nDozens of the light beings were descending on Hector-- or whatever he now was. He was batting them away like so many glowing ping-pong balls, but more were flooding over him each second.\n\nFinally he was on the ground, growling and snarling and flailing away with his long scaley tail. Then he, like the six judges before him, exploded in a flash of smoke and flame.\n\nWhen Hector exploded, so did The Cantina.\n\nMaria lay huddled on the floor watching everything through the airman's legs. The last thing she remembered was an extremely intense flash of heat and light. As the wave of fire washed over the room, the airman stood above her. His arms were stretched out wide. His strange costume was burning. His body was burning. Everything in the club was burning. Everything, that is, except for the small patch of floor directly behind the strange airman.\n\nMaria awoke on an ambulance gurney. A medic or doctor or whoever was asking her if she knew where she was. She raised herself slightly and looked around. She was in the parking lot. The club was a smoking pile of rubble. There were dark bags lying on the ground in neat rows.\n\n\"He saved us,\" a voice said from behind her.\n\nMaria turned to see Deanna standing above her swathed in a blanket.\n\n\"I was behind the wall like he told me to be when the club exploded,\" she said. \"Otherwise, I would have been toast like everybody else. The fireball even burned up all the cars in the parking lot.\"\n\nShe then looked down at Maria and asked plaintively, \"How did you survive inside?\"\n\n\"He shielded me,\" Maria said tearfully. \"He stood between me and the flames. It was like he was pulling the fire into himself.\" She started crying almost hysterically as she cried out. \"I watched him burn to death!\"\n\nBetween sobs she said shakily, \"He knew the Angel Squadron would destroy the club and everyone-- everything-- in it, but he wanted you and me to be safe.\"\n\nShe then dissolved into uncontrolled sobbing. The medic looked up at the police officer standing nearby and said, \"I think she is out of it right now. You will have to talk to her at the hospital in the morning.\"\n\n***\n\nThe next morning, Detective Rodriguez sat quietly beside Maria's hospital bed as she worked with the police sketch artist trying to create an image of the unknown airman who seemed to know in advance what was going to happen at the club.\n\n\"That's him,\" Maria finally exclaimed, and the artist turned the tablet so the detective could see what was on the screen.\n\n\"That's Lieutenant Walcowski,\" Detective Rodriguez said with obvious frustration in his voice. \"You must be remembering him from the statue.\"\n\n\"Who is he?\" Maria asked.\n\n\"Walcowski,\" the detective answered almost angrily. \"You know? ... like in Walcowski Junior High?\"\n\nWhen Maria continued to look at him in confusion, he explained, \"Way back when the base was really active, one of the jets flamed out or something and the pilot punched out. He thought it would crash in an open area on the base, but there was a strong wind and it started curving over toward the school. Walcowski was in one of the other jets and saw what was going to happen. He caught up with it and rammed both jets into the ground before it could hit the school. If he hadn't, hundreds of kids would probably have died when it hit.\"\n\nHe looked directly at Maria and said, \"They renamed the school after him.\"\n\nHe shrugged, \"Turns out he was rich,\" he said. \"In his will he set up a special fund for survivors of catastrophes-- natural or man-made. I guess he was thinking about kids because it gives grants to help them go to school or college.\"\n\nHe thought a moment and said, \"Hey, that club blowing up would qualify. After what you and Deanna have been through you could both apply.\"\n\nEpilogue\n\nMaria Sanchez stood in front of the statue in the grassy area in front of Walcowski Junior High School. She looked up at the face of the man depicted in bronze. The artist had somehow captured his face exactly, even down to the thousand-yard stare.\n\nShe held up the black folder as if she were showing the statue the contents. \"I did it,\" she said quietly. \"I got my degree.\" Her voice was sad and there were tears in her eyes, but there was a smile on her face.\n\nShe then closed the diploma folder and said softly, but firmly, \"And I now have a decent job.\" Her voice became almost hard as she added, \"I will never have to work in a place like The Cantina  ever again.\"\n\nShe stood quietly for several moments before she said \"Thank you,\" through her tears and placed a single rose on the pedestal between the legs of the statue. As she did, she noticed, for the first time, some writing carved into the base. In a script that evidently imitated the airman's signature, it said, \"Daryll Walcowski\" and beneath that in the same handwriting, \"No collateral damage!\"\n\n = = = = = = = = = = = = = = = = = = = = \n\nEND OF STORY\n\nPlease remember to vote \n\nby clicking on one of the stars at the end of the story. \n\nIf you really liked it, click 5. \n\nIf you really hated it, click 1, but please click something.\n\n= = = = = = = = = = = = = = = = = = = =\n\nPlease note: I love hearing from all of you, \n\nbut because of a few vicious trolls,\n\nI am no longer allowing anonymous posts.\n\nAny anonymous comments-- good or bad-- \n\nwill be deleted. I will-- of course-- continue to \n\nread them, but I will not leave them on the site.\n\nPlease put your name or your Literotica username\n\non your comments. Claim what you say.\n\n= = = = = = = = = = = = = = = = = = = ="
    ],
    "authorname": "The_Technician",
    "tags": [
        "halloween",
        "spanking",
        "cock sucking",
        "cum swallowing",
        "cunt lapping",
        "forced orgasm",
        "sybian",
        "oil wrestling",
        "demons",
        "angels"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/collateral-damage-halloween-story"
}