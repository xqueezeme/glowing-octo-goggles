{
    "title": "The Ensigns of Detection Ch. 05",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n*****\n\nPart 19 - Party Favors \n\n\"Whoa...\" said Cindy as she sat on the sofa after dinner. Everyone else at the dinner was sitting around, chatting about things. It was still Tuesday evening, November 24th.\n\n\"You okay?\" Teresa asked.\n\n\"Yeah... yeah.\" Cindy said. \"I just... I just felt this... very powerful vibe...\"\n\n\"What's it about?\" asked Teresa.\n\n\"It's like... I felt Don's presence at the party he was going to tonight... and it was like a 'Eureka!' moment he was having...\" said Cindy.\n\n\"Want to call him?\" Teresa asked.\n\n\"No, I didn't get the sense he was in trouble,\" Cindy said, \"like that night of the fire at the Cabin. I'll ask him about it at work tomorrow...\"\n\n* * * * * * * * * * * * * * * *\n\nMy mind was reeling, and I struggled to regain control as we moved along the reception line. As Laura and I were greeted by the Wellmans, Sally Wellman was very flirtatious with me, and I had to make an effort to return it. Dr. Wellman greeted Laura as a close friend, and he had long since given up the 'I am the great University president and you are not' attitude with me, and was friendly enough. Of course I knew Edward R. Steele as the Town & County Councilman that he was. He introduced me to his wife, whose eyes lit up at the mention of my name. And she had very perceptive eyes, I could tell.\n\n\"So you are the young man who saved my daughter.\" Professor Stephanie Steele said to me as we shook hands. \"I am ever so grateful to you.\"\n\n\"I'm glad I was able to be of service.\" I said.\n\n\"I would like to talk with you after we finish greeting the guests.\" she said. I agreed.\n\nThere were a number of people greeting Laura, nearly all of them fellow members of Academia. This was one of those receptions where there were very few people for me to talk with, so I played the role of the husband of the loveliest woman in the room. After a few moments, my mother and Chief Moynahan came up.\n\n\"Well, son,\" said my mother, \"I thought you would notice that Mrs. Steele is not Selena's birth mother, but I did not expect to see the intensity of your reaction.\"\n\n\"Really, Mom?\" I asked, shocked. \"You haven't realized what that fully means?\" My mother began thinking about it, and of course it only took a moment for her to realize the truth.\n\n\"Ahhhh,\" she said, \"I see what you mean, son. The reason the Black Widow targeted Selena. But... I'm not seeing the entire picture. You must know something that I don't.\"\n\n\"We'll have to compare notes later on.\" I said. \"Although I'm sure Elsie Gringer will get you up to speed once you're on the right path to begin with...\" Elsie Gringer was the Town Gossip, and her social column in the newspaper, and of course online in these modern times, was required and essential reading for anyone wanting to keep up with the social scene. I might add that she was an essential source, and sometimes go-between, with her niece, the KXTC reporter Bettina Wurtzburg.\n\n\"Ahhhhh... yes.\" said my mother, beginning to see the light. \"By the way, did you see who Elsie's date tonight is?\"\n\nI looked around the room, finally spotting Elsie as she went up to an older man. The shock of white hair was unmistakeable, and I would indeed be dull not to recognize my uncle, Dr. P. Harvey Eckhart, founder and great leader of 'The Vision' self-help seminar empire.\n\n\"You can go greet him, son.\" said my mother, with some degree of asperity. \"I'll introduce your new boss to the right people.\"\n\nI asked Laura to come with me, and we went over to Dr. Eckhart and Elsie Gringer. We exchanged greetings, and Dr. Eckhart's greeting for me was very warm, as if I were family... oh, wait...\n\nLaura and Elsie began chatting, both realizing that Dr. Eckhart and I wanted to talk alone. As we stepped aside for privacy, the founder and great leader of 'The Vision self-help empire said \"Ah, it's good to see you, young Donald. I'm glad to see you've been keeping well.\"\n\n\"And you, Uncle Harvey.\" I said. \"What brings you to an event like this?\"\n\n\"Ah, I've made a few small endowments to the University,\" said Eckhart, \"and so Dr. Wellman was kind enough to invite me, though I don't know if he appreciated where my money went.\"\n\n\"And you want me to ask where that money went, so I'm asking.\" I said, drawing a laugh from him.\n\n\"Yes, my young nephew, you are most perceptive.\" said Eckhart. \"One of my gifts was to your wife's Psychology School, in her name. You are indeed a fortunate man to have such a wife.\"\n\n\"I could not agree more.\" I said.\n\n\"The other endowments went to the Sir Isaac Newton Chair of Advanced Mathematics, and therefore to the father of your excellent officer Milton.\" Eckhart said. \"And lastly, an endowment to the Physics and Philosophy Schools jointly, to endow scholarships for any student who will major in those disciplines together.\"\n\n\"Ah, the John Galt Scholarship for Physics and Philosophy.\" I said, smiling.\n\n\"Not much gets by you, my young friend.\" said Eckhart. \"But let me ask you this, young Donald: when I arrived, I felt an incredibly strong mental vibration, and I realized it was coming from you. I am curious to what caused that mental energy from you.\"\n\n\"Must've been your arrival, Doctor.\" I said jokingly. \"Seriously, I didn't realize I'd done that. But I realized that I am about to solve an important aspect... of an old case.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Ladies and gentlemen,\" said Dr. Wellman to his assembled audience, \"I appreciate all of you coming tonight. Let us have an early toast to the upcoming Thanksgiving holiday, and keep in our thoughts all of the things we are thankful for. For myself, I am thankful to all of you who have chosen to teach our young minds at this University, and to those of you whose generosity have made this University and its wonderful facilities possible for the teaching of those young minds. Therefore... to Thanksgiving!\" We all toasted and drank of the excellent champagne.\n\n\"Before I present our guest of honor tonight, I'd like to introduce to you our new Town & County Police Chief, Sean Moynahan.\" announced Dr. Wellman. He had Chief Moynahan step forward. The applause was polite at best; most here in Academia were not fans nor friends of the Police.\n\n\"And we are here,\" said Dr. Wellman, \"to welcome home our Professor of Physics and Astronomy, Dr. Stephanie Steele. Stephanie, please come up.\" Dr. Steele came up, escorted by her husband.\n\n\"We have a special announcement tonight.\" said Dr. Wellman. \"Her husband and I are seeking ways to keep her here at home, and so I am pleased to announce that the Wargrave Trust has endowed the Copernicus Chair of Physics and Astronomy with a large special grant. Tonight, I'm announcing that the Copernicus Chair, and the full Professorship that goes with it, is awarded to Dr. Stephanie Steele!\" \n\nThere was loud applause for that, though I realized there was a tinge of hypocrisy and jealousy from many of the professors here, who would kill for such an endowment. I was glad my wife had no need to feel such jealousy.\n\n* * * * * * * * * * * * * * * *\n\nLater, just before we were getting ready to make our goodbyes and leave, Edward and Stephanie Steele came up to Laura and myself.\n\n\"We did not get much of an opportunity to talk with you,\" said Stephanie, \"especially about all you did for Selena.\"\n\n\"Well, you've had a busy evening.\" I said. \"And congratulations on the Copernicus Chair. That's a great honor.\"\n\n\"Ah, you're very kind.\" Stephanie said. \"I heard that you were already aware of it, even though it was a total surprise to nearly everyone here.\"\n\n\"Not much gets by my husband.\" Laura said. Edward Steele chuckled.\n\n\"Actually my mother is the knowledgeable one in this case.\" I said. \"But I do try to keep abreast of the tactical situation at all times.\"\n\n\"Yes,\" said Stephanie, who turned her light brown eyes fully upon me, 'which is why Edward and I would like to invite the two of you to a dinner party, maybe next week after all the Thanksgiving celebrations are out of the way? Perhaps next Tuesday night? I'm sure the Commander has made... observations, tonight, and we would like to explain them.\"\n\n\"That would be very good.\" I said, realizing that this perceptive woman would know that I'd observed that she was extremely likely not Selena's birth mother. \"Next Tuesday would be very good, as I'll be busy with Police Department matters going into the next weekend's Policeman's Ball. You'll both be invited to that, of course.\"\n\n\"Oh, I look forward to it.\" said Stephanie.\n\n* * * * * * * * * * * * * * * *\n\n\"If I didn't know better,\" Laura said as we arrived home, \"I'd think you set up that Copernicus Chair for Dr. Steele yourself.\"\n\n\"And what makes you know better?\" I said with a grin. Laura whirled to face me.\n\n\"You did set it up!\" she said. \"But how?\"\n\n\"Oh, that was easy.\" I said. \"My uncle Harvey, who gave a little bit of money to your Chair, I might add, gave a bit to the Wargrave Trust, with the 'suggestion' they endow the Copernicus Chair for Dr. Steele. And dominoes fell from there.\"\n\n\"So, why?\" asked Laura.\n\nI smiled again, this time more cryptically. \"Because I need all the friends I can get, in as many places as I can get, for when the time an insidiously Evil presence makes his final, desperate move against me.\" \n\n\"Well, enough of that.\" said Laura, coming up to me and wrapping her arms around me. \"A desperate woman is about to make her move to get you into bed, for an insidiously delicious night of sexual pleasure.\"\n\nShe kissed my mouth, hard. Unable to resist, I let her have her way with me...\n\n* * * * * * * * * * * * * * * *\n\nYou would not believe the pillow talk that occurs in the Troy bedroom. As Laura and I cuddled in post-coital bliss, I said \"Honey, there's something I need to let you know about... involving your profession. Are you aware of what's going on between BigPharmaCorp and the CIA's Directorate of Science and Technology?\"\n\n\"Of course.\" Laura said. \"And yes, I'm aware that your investigation has been touching upon it. We've taken the necessary precautions, and are prepared to throw your suspects under the bus, if need be.\"\n\n\"Good.\" I said. \"Because 'under the bus' is exactly where this son of a bitch belongs...\"\n\nPart 20 - Through The Finish Line \n\nWednesday, November 25th. Do I even need to say who we started our day with on TV? Why, the lovely Bettina, of course!\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News! The Town & County Police are working hard to wrap up their investigations of two recent deaths in the County before the Thanksgiving holiday. A Coroner's Inquest pertaining to the death of Dr. Laramie Wilkins will take place today, and the Police expect new developments to occur in the murder of Michael Campbell Fulton, whose body was found near the railroad tracks on the other side of the River.\"\n\nBettina continued: \"This weekend also marks the big rivalry game between the University Bulldogs and their arch-rival State Tech Engineers. The game will be played at State Tech, which is located south of the City and north of Eastphalia. However, this game is secondary in national importance to the big game of the Wildcats playing their arch-rival State U. Purple Hawks. The Wildcats are ranked Number 1 in the Nation, and two wins are all they need to put them in the National Championship game in January!\"\n\n\"So, Commander,\" said Martin Nash, needling me in his 'understated' way, \"who are you rooting for?\"\n\n\"The Wildcats, of course.\" I said.\n\n\"What about between the Bulldogs and Engineers?\" Nash persisted.\n\n\"Bulldogs.\" I said. \"I remember what happened to Nick Eastwood last year.\"\n\nTeddy Parker said \"Commander, do you think they're going to remember that on the field, and make it ugly?\" For some reason, everyone was looking at me with abnormal intensity.\n\n\"I don't know.\" I said. \"If the Bulldogs are real men and not a bunch of wimps, they'll make sure the deliberate hit on Eastwood is... properly addressed.\"\n\n\"You don't believe in forgiveness, do you Commander?\" asked Joanne Cummings. She got some looks, as I was a superior officer to her, but I let that go.\n\n\"There's forgiveness, Joanne,\" I said, \"and then there's letting someone walk all over you. But to answer your question directly: No. I do not forgive, and I do not forget. For the most part, I'm paid to have that attitude. But beyond that... when someone sets fire to my home with my baby children inside, and when one of my police officers is murdered... no, there is never forgiveness of that, and it is never forgotten in my mind.\"\n\nNothing more was said.\n\n* * * * * * * * * * * * * * * *\n\nAt 9:00am, the Federal Marshals delivered Lou Stevens to the custody of the Town & County Police Department. He was processed through booking, and a DNA cheek swab taken per a warrant secured the night before. He was placed in Interrogation-1, where his Chase, Lynch & Berry lawyer joined him.\n\nI gave the Duty Desk at Headquarters and the Desks of all the Precincts some instructions of an urgent nature, then went to watch as Nash and Parker went in to interrogate the suspect. It did not start off very well. \n\n\"First, per the ruling of the Ninth Circuit Court,\" said the lawyer, \"my client is required to make this statement openly. Go ahead, Mr. Stevens.\"\n\n\"On the advice of my counsel, I invoke my Constitutional Fifth Amendment rights and refuse to answer any of your questions.\" said Stevens with alacrity.\n\nWow, I thought to myself, he did not even wait to hear what was going on, nor have his rights read to him. That's interesting, I thought as Martin Nash read Stevens his rights from the card, then asked if Stevens understood. Stevens stared back in silence.\n\n\"My client has invoked already.\" said the legal beagle. \"Now we demand he be released immediately, or arrested and charged with a crime.\"\n\n\"Good enough.\" said Nash. \"Mr. Lou Stevens, you are under arrest for suspicion of the murder of Michael Campbell Fulton, a human being. We believe you murdered Fulton in retaliation for him raping your wife eight years ago. We'll be presenting our evidence to the Court at the proper time. My first question is: where were you on the evening of Saturday, November 21st?\"\n\n\"My client has invoked.\" said the lawyer. \"He is not answering any of your questions.\"\n\n\"You can speak for him, Counselor.\" said Nash. \"Do you want a few minutes to confer with him, get the story straight?\" The lawyer stared at Nash for a moment, seeing that Nash was serious.\n\n\"Yeah, I need to talk to him.\" the lawyer said. The room emptied, except for the legal beagle and his client.\n\nIn the anteroom, Martin Nash said to Paulina Patterson, who'd joined us, \"What do we do now?\"\n\n\"You're doing great, Martin.\" Paulina said. \"What you're going to do now is basically go in and start accusing Stevens of being in certain places, doing certain things, like we talked about before. Either the lawyer will do his job and answer, or he'll try to shut the whole thing down. If he does that, I'll come in and work him over, then we'll start prepping our case for the Grand Jury.\"\n\n\"Can you read lips, Commander?\" asked Parker, seeing me stare inside the window.\n\n\"Not very well.\" I said. \"And it's something I have tried to learn. But we can't lip-read any more than we can listen in on a privileged conversation like this, so that's not what I'm doing in the first place. I'm actually thinking about the other case, the Laramie Wilkins murder. Detective Nash is going to nail this bastard to the wall; it's Dr. Wilkins's murderer that I am going to nail to the wall...\"\n\n* * * * * * * * * * * * * * * *\n\nWhile waiting for the lawyer and Stevens to finish their conference, Chad Stevens was brought in, put through booking, and put in Interrogation-2. He'd refused a DNA cheek swab, and as we had been denied a warrant for it (insufficient probable cause), we had to do without on that.\n\n\"Martin,\" I said to Nash, \"just one piece of advice: don't mention where the body was found, nor that it was moved out of the apartment.\"\n\n\"Okay, but why not?\" Martin asked.\n\n\"It'll give the lawyer loopholes.\" I said. \"It's possible that the Stevenses did not move the body from the apartment. We'll burn that bridge later on.\"\n\n\"Yes sir.\" said Nash. He then went into I-2, with Parker, as Cindy, Paulina and I watched through the looking-glass.\n\n\"Hi Chad,\" said Nash, introducing himself and Parker. \"I'd like to ask you some questions about this past weekend.\" I looked at Chad. He was grown up now, fairly tall... and still a slender runt, maybe 160 pounds at best.\n\n\"Where's my lawyer?\" asked Chad. \"I don't want to answer any questions without a lawyer present.\"\n\n\"You're not a suspect.\" said Nash. \"We're asking you to help us out on something--\"\u2028\n\n\"Am I under arrest?\" said Chad, raising his voice.\n\n\"No, you're not.\" said Nash.\n\n\"Then I'm free to go?\"\n\n\"We'd like you to help us first, and answer some questions.\" said Nash.\n\n\"I want an attorney.\" demanded Chad. \"As I've already said, I want an attorney before I answer any questions. Am I under arrest, or am I free to go?\"\n\nNash's even temperament was being tested, and I saw his neck flush red. \"So you won't help us?\"\n\n\"Am I free to go?\" replied Chad, becoming an automaton. \"Or am I being held against my will?\" He looked up, found the video camera, and looked into it and said loudly \"I want to leave! Am I free to go?\"\n\n\"No, you're not free to go.\" Nash said. \"You are now under arrest as a person of interest in the murder of Michael Campbell Fulton.\" Nash read Chad his rights, then said \"There's a phone on the wall where you can call your attorney. Patrolman Hicks, help the suspect with the phone if he needs it.\" With that, Nash came out of I-2 and into the anteroom.\n\n\"Wow, he's really hostile.\" said Nash. \"Didn't even ask what it was about, and became non-cooperative.\"\n\n\"Don't hold that against him.\" I said firmly. \"He only insisted upon his Constitutional rights, which none of us should ever have a problem with.\"\n\n\"I wonder if he used last night to bone up on his Constitutional rights.\" said Cindy, standing up to me. \"I agree with Martin, his actions are not consistent with an innocent man, his Constitutional rights notwithstanding.\"\n\n\"What was he told last night?\" I asked.\n\n\"That he was being detained on a warrant as a material witness.\" Paulina said. \"Nance wasn't even going to require he be held and was going to revoke the warrant, but I pushed hard that he was a flight risk and that his father was also being detained. Upon hearing that, he told the judge he would stay in the County at the University Hotel and report here in the morning.\"\n\n\"All right,\" I said, moving back down to Interrogation-1 and looking in the window, where Stevens and his lawyer were still conferring. \"Nash, this one is all yours. I'm not even going to watch. I might talk to Chad if he does or says something... unexpected. But otherwise, landing this fish is on you.\"\n\n\"I've got it, sir.\" Nash said. I smiled at his confidence, despite seeing Paulina and Cindy both exhibit looks of concern. No faith in my Ensigns, I thought sadly. And if the learner didn't learn... the teacher didn't teach.\n\n* * * * * * * * * * * * * * * *\n\n\"What?!\" said the lawyer into his phone. He hung up, then said to Stevens \"Don't say a word. If they try to question you, keep stone-silent and let me know what they did.\" With that, he got up and bolted out of the room through the 'perp side' door. Patrolman Morton came in and stayed with Stevens, per requirements.",
        "The lawyer almost broke the door to I-2 down as he hurtled through it. \"What the fuck is this?!?!\" he exclaimed.\n\n\"They tried to question me without a lawyer.\" Chad said. \"They tried to hold me against my will before arresting me when I insisted on being released.\"\n\n\"The bastards!\" said the lawyer. Chase, Lynch & Berry were known to be rabidly anti-Police, and this guy was getting worked up. He grabbed the phone out of its cradle on the wall, and practically tore the unit off the wall as he furiously punched buttons.\n\n\"Get Commander Troy in here!\" he shouted. \"Get Commander Troy in I-2 now!!\" he screamed, then slammed the phone back down into the cradle.\n\n\"Well,\" I said, \"I guess I'll be speaking to Chad anyway.\" I said. \"Mr. Nash, you stay here, and be ready to go back into I-1. Ross, you are with me, and with your most Crowbar-like face on.\" With that I opened the door to I-2 and went inside.\n\n\"You bastard!\" yelled the lawyer. \"You tried to interrogate my client illegally! I am going to sue you to death over this! Now I'm taking him out of here with me, and if you try to keep him, I'll call the SBI.\"\n\n\"The phone is right there.\" I said quietly, pulling out a chair and sitting down. \"I think the videotapes will show that we have not acted improperly. But Chad is under arrest, and will remain that way until I am satisfied he had nothing to do with the murder of Michael Fulton. So... do you want to sit down, or go call the SBI?\"\n\nThe red faced lawyer sat down, as did Cindy, whose face showed a woman very ready to do some physical damage to asshole lawyers. \"Okay,\" the legal beagle said, \"what basis could you possibly have for bringing Chad into custody?\"\n\n\"Like I said, he's a person of interest in the Fulton murder.\" I said.\n\n\"And why would he kill Fulton, a man he does not even know?\" said the beagle.\n\n\"And you know they're not acquainted for sure, Counselor... how?\" I asked back, trapping the lawyer. It was obvious they'd talked the night before, while Chad was sequestered in University Hotel.\n\n\"Let me talk to my new client.\" said the lawyer.\n\nPart 21 - The Break \n\nMy Police cellphone rang. It was the Duty Desk. \"He's here, sir. And ADA Washington is also here.\" came the report.\n\n\"Good.\" I said. \"Put him in Interrogation-Alpha, and send ADA Washington back to MCD.\"\n\nA moment later, ADA Franklin Washington came into MCD. He first exchanged handshakes and greetings with his brother, Detective Theo Washington, then bantered with the other Detectives. I allowed a few seconds of that, then came in the room.\n\n\"Franklin,\" I said, \"you're with me. As are you, Detective Cummings. Parker, you can watch from the anteroom. Theo, hold down the fort here in MCD.\"\n\nWe went into Interrogation-A, where I sat down alongside ADA Washington. Joanne took the chair against the wall behind us, moving it up to where she was near the side of the table and at my right side. Cindy had followed us (of course), and was on Washington's left side, though away from the table, almost at the wall.\n\nThe man across the table, facing us, was Robin Grayson, Ph.D., Vice President and Research Director at BigPharmaCorp.\n\n\"I can't...\" started Grayson, then he faltered before regaining his composure. \"I can't let this go on. Dr. Wilkins is dead, my marriage is over. All I have left is the Truth.\"\n\n\"Franklin,\" I said, \"we'll be offering Dr. Grayson full immunity from any crimes he committed or may have committed in the cases related to the death of Dr. Laramie Wilkins, the espionage of BigPharmaCorp research materials, and related crimes... in exchange for his truthful statements here and also his testimony in Court on any issues relevant to these cases.\" Washington began writing that as I spoke to Dr. Grayson.\n\n\"First, Dr. Grayson,\" I said, showing him the picture of my sister Elizabeth, \"did Dr. Cubbard introduce this woman to you?\"\n\n\"No, his wife did.\" said Grayson. \"But he was right there when it happened.\"\n\n\"So you can testify that Dr. Tom Cubbard and this woman know each other?\"\n\n\"Oh yes, they talked like good friends all the time.\" said Grayson. I looked over at Cindy, who gave me a 'look' back.\n\n\"Okay, Dr. Grayson, thank you for that.\" I said. \"Now, let's take this from the top and unravel this whole twisted mess, shall we?...\"\n\n* * * * * * * * * * * * * * * *\n\nMartin Nash and Paulina Patterson walked into Interrogation-1. The lawyer was back with Lou Stevens, and had knocked on the glass to call them back in.\n\n\"So,\" said the lawyer, \"you think you have anything resembling a case, here? This man lives in Nextdoor County. He runs a hardware store. He's a law-abiding citizen. And you think he committed cold-blooded murder?\"\n\n\"I not only think it,\" said Martin Nash, \"I am going to give ADA Patterson here a case that will get him convicted even with the best legal help, which he does not currently have.\" Oooh, that was a shot, Paulina thought with a smile. The CLB legal beagle did not appreciate it.\n\n\"It's going to be staggeringly easy to get an acquittal.\" said the beagle. \"How are you going to prove this silly accusation?\"\n\n\"First of all,\" said Nash, bringing up a file folder, \"I have several eyewitnesses that have given affidavits, and will testify in Court, that they saw your client and the victim Fulton at the Riverside Bar on Friday night. Sat near each other, your client even bought everyone at the bar, including Fulton, a round.\"\n\n\"Friday night.\" snarled the lawyer. \"I have a Coroner's report right here that says he was killed Saturday night, maybe as late as Sunday morning.\" Paulina looked at Nash, but Nash's face was calm. Channeling his inner Crowbar, Paulina thought proudly. \n\n\"That's right, Friday night.\" said Nash. \"And here are several street camera photos, with the video on our computers, of your client driving and following Fulton to his apartment, then driving home.\"\n\nNash leaned forward and continued \"You were smart enough to not kill him right then, Mr. Stevens. So you went home, drove back into Town on Saturday, but in a different vehicle. Nice 1969 Ford truck you have here. No GPS, no 'anti-theft' tracer devices. You watched the apartment all day long, saw Fulton get home from work, followed him to the bar again... but this time you were smart enough to not go inside.\"\n\nBoth Stevens and the lawyer were glaring at Nash as he continued: \"Fulton came out of the bar after having several drinks, made his way home, was lucky not to be arrested for DUI, I might add... and went home. You then went to his apartment, found him asleep on the sofa, got behind him with the bat, woke him up, and just as he sat up, you swung that bat as hard as you could and crushed in his head.\"\n\n\"And how are you going to prove that?\" sneered the lawyer.\n\n* * * * * * * * * * * * * * * *\n\nA convoy of Town & County Police vehicles rumbled through the front gates of BigPharmaCorp, the blue LED lights flashing brilliantly against the gray sky that suggested incoming weather. My SUV was in the lead, and we came to the front door where the security desk was.\n\nAmong the several Police cruisers was a van belonging to KXTC. Bettina Wurtzburg and her cameraman Scott Turnbull quickly began setting up as I went inside with Cindy Ross and four Uniformed officers, which were Sergeant Rudistan, Sr. Patrolman Morton, and Patrolmen McGhillie and Johnson. Rudistan was almost beside himself with anticipation.\n\n\"I need to see Dr. Cubbard.\" I told the security people. \"Immediately.\" I had the warrant in my pocket, but they did not ask for it. One Security officer led my group down the long hallway, whose windows on the right side showed the front parking lot (and faced north), then around the corner and down the side of the building, the railroad tracks and grove of trees visible past the fence and down the artificially-created hill.\n\nAt the end of the corridor was the C-suite. Cubbard's secretary tried to run interference at the door of his office, saying he was in a meeting with BigPharmaCorp Board members.\n\n\"He will now be meeting with me.\" I said, showing her the warrant. \"Ready, everyone.\" That was not a question but an order, and the officers took defense postures. I opened the door and walked right on in, knowing I had my bulletproof vest on under my trenchcoat.\n\n\"What the heck is this?\" Cubbard said as we came in. There were two other men inside with him. The secretary didn't lie, I could see that they were BigPharmaCorp Board members as Cubbard screamed \"This is a meeting! Get out!\"\n\n\"Dr. Thomas Cubbard,\" I said imperiously, \"I have a warrant for your arrest on several charges, including conspiracy in the murder of Dr. Laramie Wilkins, a human being. Sergeant, would you please do the honors?\"\n\n\"Oh, yes sir!\" said Rudistan happily. He came up to Cubbard. \"Sir, please put your hands behind your back.\" Cubbard looked stunned, but did as he was told. Rudistan put the cuffs on Cubbard's wrists as he said \"Sir, you have the right to remain silent. If you waive that right, anything you say can and will be used against you in a Court of Law. You have the right to an attorney, sir, and to have an attorney with you at any and all questioning. If you so desire but cannot afford an attorney, one will be provided to you by the Court. Of course with your money and your company's, I doubt that is going to be a problem. Do you understand these rights, sir?\"\n\n\"Yeah, I know the rights.\" said Cubbard.\n\n\"What is going on here?\" growled one of the Board members.\n\n\"Why, I'm arresting your CEO, sir.\" I said, as if surprised they didn't understand. \"Oh, where are my manners? You must be Wallace Bedford, Vice Chairman of the BigPharmaCorp Board, I perceive. My name is Commander Donald Troy. I've already met Mr. Conrad King, here. The circumstances are unfortunate, Mr. King, but I'm glad to see you're doing well.\"\n\n\"Thank you, Commander.\" said King amiably. \"I can't say I'm happy to see you here, though. As you said, the circumstances are unfortunate.\"\n\n\"How do you know who I am?\" asked Bedford, his voice wary and unfriendly.\n\n\"Why, your picture appears in BigPharmaCorp literature, will come up in any google search about the BigPharmaCorp Board. And, of course, as a police officer I am able to look up information like that... which I did before arresting the CEO of one of the Nation's most powerful companies.\"\n\n\"Ah. The Iron Crowbar.\" said Bedford. \"Only you could be so bold.\"\n\n\"That would be him, Wallace.\" said Conrad King.\n\n\"I appreciate it.\" I said. \"Have a safe trip back to your New England home, Mr. Bedford, and you back to Florida, Mr. King. And might I trouble you to get Dr. Cubbard a lawyer? He's going to need the very best you can get for him.\"\n\n\"I'll be sure to do that. The very best.\" said Wallace Bedford. I took my leave of them, following the police procession down the hall.\n\nOutside, Bettina was getting the scoop of her career. She was walking beside Tom Cubbard, who was being held upright as KXTC cameras filmed his 'perp walk', and she was firing questions like 'Did you kill Dr. Wilkins, Dr. Cubbard? Why are they arresting you, Dr. Cubbard? Did you commit the crimes you're being accused of?'. It was going to be great television... I would even DVR it and save a copy to my computer...\n\n* * * * * * * * * * * * * * * *\n\n\"We have convicted for far, far less.\" said ADA Paulina Patterson.\n\n\"I'll ask again: what possible motive could my client have for murdering anyone?\" asked the lawyer, as if he had no idea of anything.\n\n\"Oh, I think you know.\" said Nash, bringing out the folder with a copy of the case file of the rape of Mabel Stevens and practically hurling it at the lawyer. Nash turned to Stevens and said \"You recognized him in that bar, didn't you? He was the man that raped your wife in front of you. He tied you up, then got into your bed and on top of your wife, and he raped her at least twice. Isn't that right, Mr. Stevens? It's a definite motive... a man raping your wife and inseminating her twice, right in front of your face, and you absolutely helpless and unable to do a thing about it but watch.\" He could see the anger welling in Stevens's eyes.\n\n\"That was over eight years ago!\" said the lawyer. \"You're going to try to connect that to this? Hell, the Statute of Limitations ran out on that years ago.\" Paulina had to laugh at that feeble try.\n\nNash said \"That makes it all the worse for your client. The Justice system would never prosecute, nor convict, Fulton for raping Mrs. Stevens while her husband lay tied up on the floor.\" He stared hard at Stevens as he said levelly \"So you took Justice into your own hands, didn't you?\"\n\n\"ADA Patterson,\" said the lawyer, \"you really need to teach your Police Officers about the law! This thing is as thin as a fashion model, it's positively anorexic!\"\n\n\"I think we have more than enough to go to trial, and to convict.\" said Paulina.\n\n\"And how are you going to explain,\" queried the lawyer, \"how this man was able to take a man as large as Mr. Fulton's body to his car, transport it out to BigPharmaCorp, and dump the body there? Explain that one, Mr. Detective!\"\n\n\"Mind your manners.\" said Nash evenly, but his voice betraying a certain menace there. \"You raise a nice point, but that is why I have Mr. Stevens's son Chad in the other interrogation room. Of course he helped his father move the body.\"\n\nThe lawyer looked stunned. Stevens barked a laugh and said \"That little runt couldn't help me stack a pile of crowbars on the shelf at the hardware store--\"\n\n\"Shut up! You've taken the Fifth!\" snarled the lawyer, who then turned and said \"That was not an admission of guilt of anything!\"\n\n\"No,\" said Paulina, \"but your client is speaking now. It's only a matter of time before reality sets in, before he realizes he's facing life in prison with out possibility of parole.\"\n\n\"Oh, please.\" said the lawyer. \"With this evidence, you can't even convict him of an illegal lane change...\"\n\nPart 22 - The Knowing \n\nIt was a fun experience, watching Dr. Tom Cubbard be processed through booking. His mug shot was taken, DNA cheek swab administered (he actually consented to it, saying he had nothing to hide), and fingerprints taken.\n\nWe had to put him into Interrogation-B. My Interrogation Rooms were filling up fast, I noted. Cubbard's lawyer arrived a few minutes later, then Cindy came in with me and and we sat down and got to business.\n\n\"Ah,\" I said to the lawyer, \"BigPharmaCorp's biggest legal gun... and once with the Gresham & Mason Law Firm in Pennsylvania, is that not right?\"\n\n\"How did you know that?--\" the legal eagle said with a visible jolt, before collecting his wits again. \"Suffice it to say I am representing Dr. Cubbard here and now. What are the charges against my client?\"\n\n\"First of all,\" I said, \"I read Dr. Cubbard his rights the other day, but will do so again.\" I read the rights from the card. Yes, the third such Miranda warning... think we're overdoing it? (No.)\n\n\"Now, Dr. Cubbard,\" I said, \"we've got rock-solid proof that your client lied to Police, a felony in this State.\"\n\n\"You... you arrested the Chief Executive Officer of BigPharmaCorp, one of the best and most powerful companies in the world, over a Class E felony?\" asked the lawyer, and he almost had me believing he was genuinely shocked, \"...that's going to be reduced to misdemeanor jaywalking if it's not dropped altogether?\"\n\nI smiled briefly. \"But it's a felony nonetheless. However, sir, it is not Dr. Cubbard's biggest problem. He will be needing to explain how he stole research from Dr. Robin Grayson, had it used to create new processes and drugs without informing Dr. Grayson, and he ultimately is going to have to explain his role in the murder of Dr. Laramie Wilkins.\"\n\n\"I had nothing to do with that.\" snarled Cubbard.\n\n\"So the rest of it is true?\" Cindy shot back. Cubbard's face turned red but he said nothing as his lawyer touched his shoulder to keep him in line.\n\n\"Tell you what,\" I said, \"why don't I just explain what has happened, and you correct me if I go astray, okay?\" Cindy's eyes gleamed; this was her favorite thing to see me do.\n\nI began: \"You have worked like a dog, like a dog, Dr. Cubbard, to get to the top. You have worked your way to the top, and you've done so by chewing up associates and subordinates and spitting them out. You've harassed the Union's membership so badly that they're all but ready to put out a contract to kill you rather than see you become the CEO of this company permanently. Still, you've made it to the top, almost. Interim CEO of BigPharmaCorp! What could be better?\"\n\n\"The Board is deeply aware of both the good and bad in you, Doctor.\" I continued. \"So they only gave you that 'interim' title, and wanted to see how you would do in the role. You've thought you've played the political game with your superiors on the way up the ladder... but in truth, you're not ready for the Big Game, at least not yet. And they know it.\"\n\n\"Is there a point to this?\" asked the lawyer.\n\n\"Oh, you bet there is.\" I said, just getting started. \"Your client had to show the Board that he could get things done, is that not right, Doctor? You had to show them that you could take this company forward. But how do you do that? Ah, new drugs! New processes!\"\n\n\"So, you and your wife start schmoozing with Dr. Robin Grayson and his wife. Mrs. Grayson is an heiress to considerable money, and she has the right social connections. And you tried to get Robin Grayson to give you and the company the rights, or at least a license, to his research on refined drugs. But... he refused to give up that work, saying it belonged to his School professor.\"\n\n\"That didn't stop you, did it, Dr. Cubbard?\" I said, pulling out a file folder. \"These NDA documents, which have your signature on them, were derived from the Grayson research. And this is your first violation of the law: you stole a man's patented work, as Dr. Grayson's school professor owns the rights to these processes. In addition, you brought the process from Pennsylvania to here, which crosses State lines. Oops, that's Federal rap No. 1.\"\n\n\"We pay a fine, we pay the man royalties.\" said Cubbard. \"Not even a bump in the road.\"\n\n\"Oh, but it gets worse, doesn't it?\" I said. \"A sample of that product was found during a Police drug raid. A sample of that refined chemical, in the hands of drug distributors being charged with crimes. Ergo, the cat is now out of the bag, and you now have another problem.\"\n\n\"And worse.\" I went on. \"Dr. Laramie Wilkins, who has objected to your cutting corners and taking others' research before, is alert to this... as well as your attempts to coerce Dr. Grayson to helping you.\"\n\n\"My partner, Captain Ross, made an astute observation.\" I said. \"A man does not just go and tell another man's wife of the husband's infidelities... without an ulterior motive. I could tell what Dr. Wilkins's motives were: first, he despised Mrs. Grayson for her treatment of Dr. Wilkins's wife. Second, he knew that Mrs. Grayson was working with you, Dr. Cubbard, to entice Dr. Grayson into your schemes.\n\n\"Grayson was not aware he was being manipulated.\" I said. \"He loved doing the research, and he did do some good things. But what he didn't realize is that while he married his wife for her money, he did love her... but that love was not reciprocated. Mrs. Grayson saw that her husband was not the ambitious man with designs of rising to the top. That was bad enough, but then his infidelities hardened her heart against him.\"\n\nI said \"And the worst of all... a horrific misfortune befell the Graysons: intruders invaded their home and did terrible things to both of them. Now even I know that the one thing a man must do to keep his wife's love is to keep her and her children feeling warm, safe, and secure, whether that is by financial means or actual physical means. When that did not happen, when she was brutally raped, and only by the Grace of God her children weren't at home when it happened... well, that was the last straw, and enough to end that relationship, so sorry.\"",
        "Out of the corner of my eye I saw Cindy's face change a little bit, and I realized why. But that would have to wait. I had an attentive audience right now, and I bore home.\n\n\"Doctor, did you have anything to do with the attack on the Graysons?\" I asked.\n\n\"No, of course not.\" said Cubbard. \"Why would I do that?\"\n\n\"Not to recover an iPad tablet the perps believed Dr. Grayson had?\"\n\n\"N... no.\" said Cubbard. \"I have no idea what you're talking about.\" I could see that he was confused, and he was therefore innocent.\n\n\"Good enough.\" I said. \"But as part of all this, it was you that suggested to Dr. Grayson to have him show my dear sister Elizabeth around the labs, and she is a devastatingly observant and quick study. It would be more appropriate to let foxes in the chicken coops, or politicians into a brothel, than allow my sister into a place like that.\n\n\"Then you and your wife had the Personnel Department hire James Douglas into the lab, from which he stole the sample that the Police recovered in his possession--\"\n\n\"Now why would I do that?\" asked Cubbard derisively. \"I could get a sample like that any time I wanted.\"\n\n\"Not really, the security protocols are too tight, and the security people would throw you under the bus in a heartbeat if they could.\" I said. \"But to your point: Captain Ross, here's where things really start getting good: as Dr. Cubbard was rising to the top, he was smart enough to know that he needed help. And so he consulted... well, a Consultant.\"\n\n\"Do tell.\" whispered Cindy, her ice-blue eyes gleaming with new understanding. By way of contrast, the looks on Cubbard and his lawyer's faces were ugly to see as I went on:\n\n\"With his guidance, Dr. Cubbard, you made it. He arranged for Donovan Donolan to help bring you up, then when Donolan was murdered, your path was further cleared by Board members with whom your Consultant had connections.\"\n\n\"However,\" I continued, staring into Cubbard's dark eyes, \"when you make a Faustian deal with the Devil himself, you know you are going to be paying a heavy, heavy price. The Consultant wanted payback, and it was not your mortal soul he was coveting. He wanted a drug sample, and the process to make it, of that highly refined heroin. He also wanted a couple of other drug processes, for drugs that cause pain, for drugs that render a person helpless to resist interrogation... things BigPharmaCorp has been working on, on behalf of the Central Intelligence Agency.\"\n\n\"Well, things were bad enough, Dr. Cubbard.\" I said. \"But when Dr. Laramie Wilkins found out what you were doing in Pennsylvania... stealing other people' research as well as making chemicals that even the CIA would kill for... and they have, I might add... you and your Consultant both knew that you had to eliminate him. So, Doctor... maybe you called Dr. Wilkins, told him to kill himself, or you would kill him and his wife... or, maybe you pulled the trigger of the gun yourself, and he let you in order to save his wife's life.\"\n\n\"No.\" said Cubbard. \"I did not kill him, nor did I have any part in his death.\"\n\n\"So who did?\" I asked. \"The Consultant himself?\"\n\n\"Maybe.\" said Cubbard. \"I just know I had nothing to do with it.\"\n\n\"You know who he is, don't you?\" I said.\n\n\"No.\" said Cubbard. \"And for my wife's life, I don't want to know.\"\n\n\"You do know.\" I said, then *WHAM!* my hand hit the table, making him jump.\n\n\"Say his name!\" I yelled.\n\n\"I don't know his name!\" yelled Cubbard.\n\nAfter the appropriate awkward silence, Cubbard said \"I've never met him personally. Haven't you figured out, Commander, that he always works only through intermediaries? He knew something like this could happen. He knows you're hot on his tail. He's got people working for him that you'd never suspect. I wish to God I could help you take him down, before he murders my wife, but I can't. I don't know enough to help you, Commander.\"\n\nI noted that the lawyer had not attempted to stop Dr. Cubbard as he pretty much confessed to his crimes. \"Tell me this much.\" I said. \"Who was the intermediary?\"\n\nCubbard remained silent, just slowly shaking his head.\n\n\"Was it Mrs. Grayson?\" I asked. \"No... it couldn't be her... oh my God!...\"\n\nA moment later, Cindy said \"Don?\", waking me from my reverie.\n\n\"Oh, Jesus Christ!\" I gasped out. I had said that more to myself than anyone else. I realized that everyone was staring at me. I grabbed a piece of paper, scrawled a note and handed it to Cindy. \"Go, get moving!\" I said hoarsely. Cindy got moving, practically running out of the Interrogation Room.\n\n\"So what do you intend to do with my client?\" asked the lawyer. \"That was a good fairy tale, but I seriously doubt you can prove very much of it. We'll have that 'lying to police' charge thrown out before you can sneeze at it.\"\n\n\"Are you kidding?\" I replied. \"Dr. Cubbard's words were a confession. You know it, I know it; hell, it's unanimous.\" I got up. \"Now I suggest that you and your client have a good, serious conversation about his future. I'll be waiting outside...\"\n\n* * * * * * * * * * * * * * * *\n\nLou Stevens had been taken to a holding cell to be fed lunch, and his attorney and Paulina Patterson were having coffee in the breakroom. Martin Nash was taking a potty break.\n\n\"Surprisingly good coffee for a Police Headquarters.\" the lawyer said. Paulina agreed. The lawyer then dropped his voice to a near-whisper.\n\n\"This is not an admission of guilt on my client's part,\" said the attorney, \"but hypothetically if he were guilty, what would be the best you could do by way of a deal?\"\n\n\"Voluntary manslaughter.\" Paulina said, already well-prepared for this question. \"Six years, he's paroled in two with good behavior, and four years of probation. The story will be that he confronted Fulton in Fulton's apartment, it escalated and he managed to get a bat onto the back of Fulton's head. If he doesn't take the deal, it'll be Murder-2, crime of passion, but still a long prison sentence.\"\n\n\"I'll see what I can do.\" said the attorney.\n\n\"Off the record, why the change of heart?\" Paulina asked.\n\n\"It scares the hell out of me,\" said the lawyer with surprising frankness, \"that the Iron Crowbar is laying off this one. He thinks that Junior Birdman in there can handle it without his needing to come in. So the Iron Crowbar must have something devastating he's holding back if the Little Leaguer can't close the deal.\"\n\nPaulina hid a grin, realizing that the Iron Crowbar's reputation was now so powerful that lawyers were fearing his not being involved. \"That's the offer,\" she said, \"but it's off the table by the end of the day.\"\n\n* * * * * * * * * * * * * * * *\n\nMy police cellphone rang. It was Cindy. \"You need to come over.\" she said simply.\n\nI arrived at the Wilkins home. Patrolman Culver did not ask for my badge number as he saw my face, and I blasted on by him in silence. Going into the house, I went upstairs to the 2nd bedroom, which looked like a child's bedroom. It was a room full of silent people.\n\nMrs. Abby Wilkins was lying on the bed, dead. Her hands were resting on her belly, and she appeared to be in peaceful repose. On the bedside table was a now empty bottle that had once contained pills.\n\n\"She left a note.\" said Technician Christian Cho, pointing out the document on the small desk on the other side of the room. It read \"I am sorry. I cannot go on without Laramie. Abby.\"\n\n\"She's been dead for several hours. I'd estimate time of death around dawn this morning.\" said Martha the M.E. \"It looks like she took a huge dose of sedatives. And an experimental BigPharmaCorp drug, too. It may have been really potent.\" She pointed at the empty bottle. I put on latex gloves and picked up the bottle, seeing the BigPharmaCorp label on the outside.\n\n\"Oh, wait...\" I said as I examined the bottle closely. \"Does someone have any tweezers?\" I was handed tweezers, and, making sure to get it videotaped, I peeled back a corner of the label. Slipping the tweezers between the label and the bottle, I was able to pull out a very thin piece of paper that had been secreted behind the label.\n\n\"It was pressed against the bottle, hard to see.\" I said.\n\n\"What does it say?\" asked Cindy, seeing my face as I read what was on the paper. I held it up with the tweezers so that she could read it.\n\nIt read: \"Dear me, Mr. Holmes, dear me.\"\n\n\"Oh my God.\" Cindy whispered. \"So that's why you had me come over here. But we were too late.\"\n\n\"Yes.\" I said. \"Too late. I was culpably slow...\"\n\nPart 23 - Solutions and Aftermath \n\n4:30pm, Wednesday, November 24th. I sat in my comfortable 'Command Chair' behind my desk, lost in contemplation. Cindy was sitting on the sofa, watching the Weather Channel. Tomorrow, Thanksgiving, looked like it would be a pretty day. Saturday would be overcast for the big game.\n\nI had let Helena go home at lunchtime. So there was a knock on the door and Paulina Patterson and Martin Nash came in. Paulina looked very happy. Nash looked like what passed for being happy for him.\n\n\"He confessed.\" said Paulina. \"He took the voluntary manslaughter deal.\"\n\n\"Good!\" I said, trying hard to sound happy. \"Congratulations, Martin. That was great work.\"\n\n\"Thank you, sir.\" said Nash. \"And thank you for letting me roll with it, though it's always good to have your help.\"\n\n\"So, what did he say?\" I asked, inviting them to sit down in the chairs. Cindy turned off the television set.\n\n\"He said he was in the Riverside Tavern when he saw Fulton at the bar.\" said Nash. \"He went up to him and Fulton looked right at him, but didn't seem to recognize him. I think that actually bothered Stevens more than anything else... that the guy didn't even remember his face.\"\n\n\"There is one issue, though.\" said Martin. \"He said that at the apartment, he ambushed and hit Fulton, then he just left the body laying there. He threw the bat into a dumpster somewhere, it's likely gone with the trash now. But he said that he did not move the body. So that of course begs the question 'Who did?'.\"\n\n\"And 'Why?'.\" replied Cindy. Everyone was looking at me.\n\n\"I don't know for sure.\" I said. \"But there are a few features of this entire case that stand out to me. The first is the removal of the body. As a 'teachable moment', I realized that Stevens did not move the body himself, nor did he have help, which is why I advised you to not mention it. It would've created a loophole for the lawyer to work with.\"\n\n\"Good call.\" said Paulina, smiling. I didn't know her smile was in remembrance of what the lawyer had said about me in the breakroom. \"The lawyer very likely would not have negotiated the deal if he'd thought about that.\"\n\n\"Probably not.\" I said. \"The second thing is that this man Fulton was able to remain virtually unnoticed for over eight years. New identity, completely off the grid, stayed clean after years of violence and fights.\"\n\n\"I see what you're saying.\" Cindy said. \"How did the barbarian stop acting like a barbarian and start acting like a civilized person for so long?\"\n\n\"He knew he needed to lay low, or else face a rape charge if he were ever caught again.\" Paulina said.\n\n\"Naw, it's more than that.\" I replied. \"Cindy's right; the leopard does not change his spots. Fulton had something occupying his time, channeling his energies during this time. Not sure what that was, and for the last few years he came to his butcher job every day.\"\n\nMartin Nash said \"You know, that might tie in to his apartment. It was lifeless, as if he had no hobbies, no pastimes, didn't collect anything. It looked like the only thing he did was watch television. But if he wasn't home during the evenings, that would explain some of it.\"\n\n\"Exactly.\" I said. \"The third thing was where they dumped the body... BigPharmaCorp, near the railroad tracks. Now why there?\"\n\n\"That's why I was thinking that these bozos from the BigPharmaCorp crimes were involved.\" Cindy said. \"Though don't ask me why just yet.\"\n\n\"Yeah, I think you're at least partly right.\" I said.\n\n\"So what is Mrs. Wilkins's suicide about?\" asked Paulina. \"Is that legit?\"\n\n\"Oh no, that's part of the overall sequence of events.\" I said. \"I personally think it was murder, though I cannot rule out suicide over... a broken heart.\" My words made Cindy sit up straight and stare at me.\n\n\"Exactly whose broken heart are we discussing?\" Cindy asked, her ice blue eyes boring into my gray-blue peepers. I just looked back at her, not needed to say anything out loud. She was onto it, I knew.\n\n\"So, Don,\" Cindy said, \"you definitely did not tell Cubbard everything. Why not tell us, now?\"\n\n\"I... was thinking of waiting until the Thanksgiving Day dinner at The Cabin.\" I said. \"So I can tell everyone at the same time. Joanne almost took off my head with my own crowbar a couple of hours ago...\"\n\n* * * * * * * * * * * * * * * *\n\nThanksgiving Day, Thursday, November 26th. It was a beautiful day, fairly cold but sunny and clear. Laura and Phyllis had done much of the preparation. I'd fried two turkeys, and very well I might add, while my mother cooked one the more traditional way: in the oven. Everyone brought other food items, including wine... and beer. The beer would be Todd's doing.\n\nPresent were: Myself, Laura, my mother Phyllis, Chief Moynahan, Cindy and Jenna, Molly, Todd and Teresa, Martin Nash and Sandra Speer, Jack Muscone, Tanya Perlman, Pete Feeley's mother Pamela, Barry Oliver, Teddy Parker, Joanne Cummings and Seth Warner, Chief Emeritus Griswold and his wife, Christopher Purvis, Lorena Rose, Grubby Paul, Myron and Mary Milton, Paulina Patterson (sans her estranged hubby), and Julie and Yvonne Newton.\n\nAnd in a rather big surprise, Daniel and Melina Allgood came, even with Todd there. In addition, of course all the babies were there: Carole, Jim, Ross, Doug, Pete, and little Daniel... watched over by the redoubtable Bowser, who looked resplendent in his collar and (Wildcat) red bandana.\n\nWe all ate lunch, and ate a lot of it. The huge feast of food disappeared completely and quickly, and we were all winding down, energy-wise. Some people watched the pro football games on TV, others sat and chatted. I'd watched to see what Todd and Melina would do, but they were very cordial to each other, and Melina talked with Teresa a good bit, as well as with Julie and Yvonne. Daniel talked with me, Chief Moynahan, and Jack Muscone.\n\nDessert was served, a number of cakes and pies and vanilla ice cream. I need not mention that Carole found the ice cream to be a good compliment for the Girl Scout cookies she was loving. As everyone finished, we all heard the musical sound of a spoon ringing a glass. Cindy Ross was gathering us all, and to hear my solution of the cases.\n\n\"Okay, where to begin?\" I said, mostly to myself.\n\n\"Try 'at the beginning'.\" said Cindy. Laughter erupted.\n\n\"Yeah, I asked for that one, didn't I?\" I replied with a sheepish grin. \"But it's not really as simple as that. So, let me just say this:\n\n\"These cases really began with the death of Emma Washburn.\" I said. \"Her murder at the hands of Cassie Sanderson is not related to these cases, but one of her sexual affairs was with Dr. Robin Grayson. Dr. Grayson had no way of knowing at the time, but a chain of events began that would drag him into this, but would also expose a lot more things.\"\n\n\"The first of those things,\" I said, \"is that the Police made a raid upon an apartment which found a sample of research similar to what Dr. Grayson worked on while in college. This could be considered a coincidence, except that Dr. Eckhart teaches in his seminars that the Universe makes no mistakes and there are no coincidences.\" Cindy smiled at that one.\n\nI continued: \"So we begin what I really thought was a simple follow-up about how a strange chemical was in the hands of a couple of low-life drug pushers. And then the obstacles start popping up all over the place. We go to simply talk to an apartment manager, he gets snotty with us, and the next thing we know he's running for the State Line being pursued by people who should not be interested in him at all.\"\n\n\"Then we see some powerful lawyers for these worthless drug punks; that really got my spidey-sense tingling.\" I said. \"And then some of those apartment buildings burn down in an obvious arson case.\"\n\n\"We also had the attack on Dr. Grayson and his wife.\" I added. \"Though the actual crime was coincidental to the drugs, we found ourselves being ever so surely drawn into a connected web of crimes... a web spun by criminal entities. I've long known of a group of smugglers in the area. The Corrigan Cell's removal did not entirely wipe this group out, and one of its members is my dear sister Elizabeth.\" My mother shook her head at the mention of her rogue daughter's name. \"More on Elizabeth later.\" I promised.\n\nI went on: \"Since Dr. Grayson worked at BigPharmaCorp, and since we had a research drug related to him as well as the attack upon his home and his wife, we naturally went to BigPharmaCorp to see what information we could get. And as the proverbial saying goes: 'that's when the fight started'.\n\n\"In my interview with Dr. Wilkins, he was very, very quick to point out that Dr. Grayson's problems involved a woman, who was the late Emma Washburn. And we also got our first glimpse of Dr. Cubbard and his, shall we say, 'concerns' about where our investigations were going. We didn't know we were about to touch upon a huge fraud and racketeering case, and maybe much worse.\"\n\n\"We barely knew what was going on, when all of a sudden the case takes a huge turn, and Dr. Laramie Wilkins comes over all dead.\" I said, continuing the narrative. \"This changed the game completely. And one thing I realized at the crime scene was that, whether he pulled the trigger himself or allowed someone else to do it, Dr. Wilkins allowed himself to be killed. \n\nHearing the gasps, I said \"By that, I mean that he was offered a choice in some way: he could take his own life, sit there and allow someone else to do it, or else things would get much worse. The obvious threat would be to his wife's life, but I'll get back to that in a few minutes.\"\n\n\"It became more apparent to me that Robin Grayson was being manipulated, and that he had no idea of the depths of the waters in which he was swimming... not to mention the alligators swimming with him. So I asked Lt. Croyle to ask him a few questions, and perhaps to mention one of her previous cases. Dr. Grayson got the hint, and he turned himself in this morning. He gave us everything he had in sworn statements, in exchange for immunity from any prosecution, which I was happy to offer.\"\n\n\"The gist of it is that Dr. Tom Cubbard and his wife arranged for Dr. Grayson to show my sister around the research labs of BigPharmaCorp. It is definitely cause and effect that soon afterward James Douglas then was hired into that lab, and further cause and effect that a lab sample from Pennsylvania disappeared before it was properly logged into the inventory at the BigPharmaCorp Town & County Plant sitting by our River in the valley below us.\"\n\n\"Ah, so Douglas got the sample for Elizabeth?\" asked Jack Muscone.\n\n\"Yes.\" I said. \"But by sheer coincidence, the Town & County Police made a little drug raid on the Douglases, and that refined drug was captured. I would imagine that Elizabeth used words she did not learn in our daddy's household when that happened.\" That made my mother chuckle.\n\n\"Anyway, the sample was not only interdicted, its existence in Police custody meant the cat was about to burst out of the bag and the can of worms opened, to use as many clich\u00e9s as I can think of. And this is where Cubbard comes in: he had arranged for Dr. Grayson's work with his professor to be purloined and used at the Pennsylvania secret research facility.\"",
        "\"I might add,\" I said, changing the tone of my voice to underlie the significance, \"that Dr. Cubbard had arranged with certain entities of the Government as well as more secret organizations to use that research to create some new drugs... drugs that my late nephew Ned had once created, drugs that would be terrible weapons in the wrong hands.\n\n\"You see, I'd said before that Dr. Cubbard was looking for a way to stay on top... but just creating new pharmaceuticals and more profits for the company is not what some on the BigPharmaCorp board were seeking. They wanted to see that Cubbard was one of them, one of the true Elites that believe they control everything in this Nation and this World. And that is what Cubbard was going to provide by stealing patented processes and using them to create new drugs for the Government... and what our simple drug raid brought crashing down.\"\n\n\"You do like to kick the biggest hornets' nest you can possibly find, don't you?\" asked Chief Griswold.\n\n\"The party is just getting started, Chief.\" I replied with a grin. \"But let's get back to this story. Dr. Grayson did not know what was going on in Pennsylvania, and while Cubbard had tried to bring him into the fold, he soon saw that Grayson was too straight-laced to truly trust. But that was nothing compared to Dr. Laramie Wilkins. Wilkins did know what was going on... and was trying hard to stop it.\n\n\"Wilkins didn't know all of the details, but he knew some things: that Cubbard and his wife were using Mrs. Grayson to cajole her husband into helping them; that Cubbard was stealing research; and that Grayson was having a relationship with Emma Washburn. So Wilkins does something that I can understand, but I think was wrong to do: he went and told Mrs. Grayson about Emma, went and told Robin Grayson to stop seeing Emma, and also told Robin that his school professor's research was being stolen.\"\n\n\"Ah, so he was trying to make Dr. Grayson distrust both his own wife and Dr. Cubbard.\" said Joanne Cummings. \"As well as expose the theft of intellectual property, and hoping the secret Government projects would be stopped.\"\n\n\"I think that was the intent.\" I said. \"But what happened is that as soon as everything was exposed, Dr. Laramie Wilkins was eliminated. He was 'talked to' in the early morning hours of the day he died. And I suspect that he did not resist as someone stood behind him and shot him dead, rather than him taking his own life.\"\n\n\"Did they threaten his wife to make him do that?\" asked Tanya Perlman.\n\n\"Possibly.\" I said. \"Or else he was told or figured out the truth, which totally broke his heart: that his own wife Abby was one of the perps, and had brutally betrayed him.\"\n\nNeedless to say, that had everyone's undivided attention, and was one of those moments I enjoyed as I looked upon their faces.\n\n\"Oh, yes.\" I said. \"Mrs. Grayson gave my Captain the clue: 'follow the money'. Abby Wilkins liked money. She had endured a lonely, unhappy marriage for years, but at least she had had her husband's money. Her husband had shown little interest in going for the big bucks or real leadership in BigPharmaCorp; he was in it for the love of the chemistry and the research, and only reluctantly took posts of authority in order to be able to continue his work without those above him fucking with him over money or pressuring him over processes to make the company money.\n\n\"So he told his wife about the stolen research, the fraud, the work for the Government that he despised happening,\" I said, \"and Abby realized that he'd be fired one day for standing in their way. Maybe she was helped to understand that by someone else, as well. She may even have been told and cajoled into thinking she'd inherit all that money if she just went along with his removal...\"\n\n\"I knew she had to be involved while observing the Wilkins crime scene.\" I said. \"How could she have not been immediately awakened by that gunshot? If there was someone else involved, how could that perp get away before she came to investigate? And why didn't the perp eliminate her as a precaution? These are not the normally stupid perps like Dirty Lennie that we're talking about, here.\"\n\n\"So when Cubbard said he had an intermediary to the leader of this group of smugglers,\" I said, \"I realized it almost had to be Abby Willkins. I immediately sent Captain Ross to her home, but I was culpably slow and we arrived way too late: she had also been eliminated.\"\n\n\"Don't even start with me on that 'too slow' business.\" warned Tanya Perlman.\n\n\"You were right about the broken heart, Cindy.\" I said to my cousin. \"But it was his heart of which I was thinking. But her heart may have also been broken by betrayal... but she was not betrayed by her husband. Ergo, the possibility of a love affair.\" \n\n\"With Dr. Cubbard?\" I heard a voice ask.\n\n\"No.\" I said. \"With Elizabeth's partner in crime, or one of them: she's part of a group of four such criminals.\"\n\n\"One of them being my sister.\" said Seth Warner. As I looked at him, wide-eyed in the shock that he knew, he said \"Commander, you are not the only one here with a wicked sister. I've known my sister Karen has been doing some very evil things, in addition to her uncontrolled nymphomania. She's one of that group, isn't she?\"\n\n\"Joanne,\" I said, \"I see why you like this guy. Brains as well as good looks.\" Joanne grinned and snuggled up with her fianc\u00e9.\n\n\"Our own 'Ken and Barbie' couple.\" said Todd with that wicked grin of his.\n\n\"Todd, you are being a bad young man!\" admonished his grandmother Phyllis. \"And yes, they are a wonderful young couple.\"\n\n\"So how does Michael Fulton relate to this case, Commander?\" asked Julie Newton.\n\n\"He doesn't.\" I said. \"First of all, Detective Nash did a fantastic job with that.\" A round of applause broke out for Nash, and he actually blushed.\n\n\"We'll have to do some cleanup in figuring out who moved Fulton's body to BigPharmaCorp.\" I said. \"I suspect the reason was an opportunity to distract or confuse us. Of course, this Police Department is wayyyy too good to be fooled so easily.\"\n\n\"Modesty is a human trait, Commander. I will excuse it.\" growled Chief Griswold, \"Of course you meant to say that this Police Department's Iron Crowbar is too good to be fooled.\" There was a loud acclaim at that.\n\n\"You mentioned the Security people helping us.\" said Joanne. \"What was that about?\"\n\n\"Ah, yes.\" I said. \"Dr. Cubbard is hated by the Union, and also the employees. The factory workers hate that man very much, and so do the Security people. They had an idea we might get Cubbard, and so gave us as much help as they surreptitiously could without being caught and hammered by him.\"\n\n\"So what's going to happen to the Graysons and the Cubbards?\" asked Cindy.\n\n\"Robin Grayson has immunity from prosecution, not that he knowingly did much.\" I said. \"But he's paid the price already, having to watch his wife be raped, himself being tortured and nearly killed, and now his wife is divorcing him.\"\n\n\"And speaking of families,\" I said, \"Lucy Covington Cubbard is trying to cut a deal with our District Attorney's office as well as the U.S. Attorneys, and appears very willing to throw her husband to the dogs, as he is no longer making money for her. Dr. Cubbard and his lawyers are working on things, as well. We'll see what happens to him.\"\n\nPart 24 - Epilogue \n\nAfter spending the early part of the day with us, Cindy was going to spend Thanksgiving evening with her father, Dr. P. Harvey Eckhart. She had invited Jenna, Teresa, and Todd to go with her, and they'd accepted.\n\nI'd also been invited by my Uncle Harvey, but had said that after hosting this big party I would need downtime... and that Molly might come due any minute. I did tell Dr. Eckhart that this would be a good chance to talk with his great-nephew Todd Burke...\n\n* * * * * * * * * * * * * * * *\n\nJack Muscone's FBI team were having dinner Thanksgiving evening, as part of a larger party thrown by Jack's boss, the DepDirector, for those that did not have other family events... or families. Jack had invited Tanya, who'd accepted; little Pete was staying at the Cabin with the rest of the kids, with my mother and Mrs. Feeley keeping overwatch. Martin Nash had accompanied his girlfriend, Special Agent Sandra Speer.\n\n\"This is going to be weird.\" said Nash as they all sat around sipping after-dinner drinks. \"I was thinking about the Commander solving this BigPharmaCorp case, and it was obvious in his explanation that he was holding stuff back.\"\n\n\"Not really.\" said Tanya. \"He even talked about stuff we can't prove yet, which is unusual for him to do.\"\n\n\"Yeah,\" said Nash, \"but I was thinking about this 'Consultant of Crime' guy, who he did not mention today. And that got me to thinking...\"\n\n\"A dangerous thing.\" said Sandra, needling him. \"Okay, seriously, what were you thinking about?\"\n\n\"I...\" said Nash, then let it out with a rush: \"Ever since that Washburn case, when the Commander had that iPad but didn't tell anyone... I understand why to an extent, but... well, then we went to see that apartment manager, and he didn't tell us he had a warrant already... I don't care what anyone else says, I think he was wrong to do that...\"\n\nThere was an awkward silence for a second, then Nash went on: \"So it got me to thinking... the Commander's sister has been a criminal for a while, yet he doesn't do anything to bring her to Justice. She turned herself in once, but actually got pardoned and is back out.\"\n\n\"So?\" asked Jack Muscone.\n\n\"Well, Chief Griswold has made efforts to get Commander Troy in with the current Governor Jared. The Governor pardoned the Commander's sister.\" said Martin. \"And in this case, Elizabeth was identified as being involved, yet the Commander seemingly does nothing about her.\"\n\n\"We need proof to charge her with anything.\" said Tanya. \"And so far we can't even really connect her to any crime at all. So what are you getting at, Martin?\"\n\n\"Just this:\" Martin said. \"What if the Commander's sister is this Consultant of Crime, and he's covering for her?\"\n\nYou could've heard a pin drop.\n\n\"Yes, he said it was someone having an affair with Emma Washburn, who was on the iPad,\" said Martin, giving away that secret, \"but what if that was a dodge? Why won't he tell us everything he knows? Why the games with that warrant, and then the apartment burns down? Why hide that iPad, and only tell me about it when Dr. Grayson and his wife were attacked?\"\n\n\"He says it's to keep others from interfering with his efforts to put together a case to bring this Consultant to Justice.\" said Muscone. \"And to keep people from getting killed.\n\n\"With all due respect, sir\" said Nash, \"how has that worked out? A lot of criminals die on us instead of being taken in.\"\n\n\"And think of it.\" said Nash. \"She and her group could've been behind a lot of these crimes, and the Commander is always leading us away from that. It's always something else, and always this mythical Shadow Man...\"\n\n* * * * * * * * * * * * * * * *\n\nFriday, November 27th, 1:30am. I was awakened from my sleep in the master bedroom of the Cabin by noises in one of the two guest bedrooms across the hall. I got up and put my pants on, and went to investigate. I found Laura in the bedroom with Molly, and in a doctor-patient kind of way.\n\n\"Darling,\" said Laura, \"would you get a towel out of the bathroom? And get dressed, we're taking Molly to the hospital...\"\n\nFinis... well, you know..."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama",
        "adultery"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-ensigns-of-detection-ch-05"
}