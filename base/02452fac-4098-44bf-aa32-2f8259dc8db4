{
    "title": "Golden Girls",
    "pages": [
        "Being a widow at 26 sucks. My husband, Josh, just had three more months until he would be out of the army and coming home. We were going to wait until then to start our family.\n\nWith the help of some inheritance, we'd just purchased a beautiful property in southern Alabama. It had almost a hundred acres out in the tall pines, a large pond, a beautiful new house, and best of all, no neighbors.\n\nThe funeral was in Dallas, his hometown. I stayed with his parents while there. When it was time, his younger sister accompanied me back to Alabama. I could tell she didn't want to, but her parents insisted that she stay with me and help me deal with things. It was summer and she was out of school. She was attending The University of Texas in Austin, and was in her second year.\n\nI didn't really know Glenda all that well, but from the topics she chose to talk about on the long drive, I got the impression she was quite a firecracker. Sex was almost all she talked about, and she'd been fairly explicit when describing some of the parties she'd been to.\n\nI wasn't accustomed to talking about sex. Josh and I had been together since Jr. High, and I hadn't even dated anyone else. Needless to say, I had no such college experiences to share. \"You mean Josh is the only man you've ever fucked?\" She asked me at one point. And when I nodded, she gasped and threw her hand to her chest. \"Oh my gawd! I can't imagine.\"\n\nIt was two a.m. when we arrived, so we decided to have one drink and then go to bed. She was only twenty, but I'd seen her drink in front of her parents several times, so I didn't think twice about her having one.\n\nI slept in the following morning until about nine. Normally I would have been up for a couple of hours by then. Our\u2014my, the thought of the master bedroom being just mine now instead of \"ours\" saddened me. It was on the ground floor, and the two guest rooms were upstairs, along with a very large room which we one day wanted to turn into a game room with a pool table and the like. Josh loved playing pool.\n\nAfter taking a quick shower and brushing my teeth, I came out of my bedroom and was stopped dead in my tracks. The living room, dining room and kitchen were all in one large room, with only the L-shaped counter separating the kitchen area. Glenda was in the kitchen fixing herself a bowl of cereal. She was totally naked.\n\nI guess I shouldn't have been so shocked. Josh and I had gone naked around the house on several occasions. The great room had large windows along the front and rear walls and we kept the blinds up to enjoy the view of the woods in front and the pond in back at the bottom of the hill. We didn't have any neighbors, and we kept the front gate locked. You couldn't see the house or pond from the road because of how the quarter mile driveway curved through the thick woods. I would even lie out in the sun nude sometimes on the hot tub deck off the back porch.\n\nI guess I was shocked simply because I never would have dreamed of walking around naked in someone else's home. Glenda looked up and saw me, she held up her bowl and said, \"I hope you don't mind.\"\n\n\"No, not at all.\" I said as she sat at the dining room table. I felt my face grow warm with a blush as I made my way to the kitchen to start a pot of coffee. I knew I had been staring at her too long.\n\nI was jealous of her body. She was very athletic, her body toned and shapely. Her short auburn hair was straight and contrasted beautifully with her tanned skin and bright blue eyes. Her breasts were magnificent. I marveled at how they defied gravity being so large and heavy looking. I guessed them to be at least a D cup if not larger. She didn't have tan lines.\n\n\"So, what's on our agenda for today?\" She asked in a cheery tone as I took my place at the table with my coffee.\n\n\"I . . . I haven't really thought about it. I don't have anything pressing.\"\n\nShe was heading to the sink with her bowl. I couldn't help but notice how her full hips jiggled with each step. After washing her bowl and placing it in the strainer, she turned around. I hadn't noticed before, but her pubic area was completely devoid of hair. She must have seen me looking. She stopped and held her hands out from her sides, \"You like?\"\n\nGawd! I thought I was going to die right there and then. \"I . . . I'm sorry. I didn't-\"\n\n\"You can look all you want. I don't mind. If I did, I wouldn't run around naked. If the roles were reversed, I can guarantee you I'd be staring at you. It's only natural to stare a little when you're seeing someone naked for the first time, male or female, it doesn't matter.\"\n\nAnd then she let out a silly giggle, \"Gawd! Beth, you're face is as red as an apple.\"\n\n\"I'm . . .\" I couldn't think of anything to say.\n\n\"You have nothing to be ashamed of. I hope you don't mind, but I plan on staying naked out here as much as I can. That's something I don't get to do at home, and I hate wearing clothes.\"\n\nI forced myself to turn my attention to my coffee cup, and she said, \"I was hoping to use the hot tub for a few minutes and then catch some sun. Is the tub useable, or does it need to be filled?\"\n\nThe hot tub was on a deck which extended out from the full wrap-around porch. Since the house was built on a hill, the front porch was only six inches off the ground, while the back porch was over twelve feet in the air. The hot tub was located such that we could walk out of the master bedroom's back door and go right into the tub. While sitting in the hot tub, we had a beautiful view of the pond and the grassy area on the other side of it.\n\n\"It should be ready to go, but I should check the chemical levels.\" I told her.\n\n\"I'd do that for you if I knew how. If you'll show me this time, I'll take care of that while I'm here.\"\n\nI poured myself another cup of coffee and we went out to the hot tub. I showed her how to use the test strips and which chemicals to use for what. After adding some, I turned on all of the jets and told her, \"You should let it circulate for ten or fifteen minutes before getting in.\"\n\n\"Okay, I'll go grab my shoes and walk down to the pond for a few minutes. Will you join me?\"\n\n\"Sure, why not.\"\n\nWhen she came back out of the house, she stopped and looked at me, \"Why aren't you naked yet?\"\n\nI didn't know that's what she'd meant when she asked me to join her. And then I thought, hell, why not. I'd been outside naked before to lie in the sun. I'd just never gone off the porch that way. It was over a hundred yards to the near side of the pond where the dock is. I shrugged, \"Okay, I'll do it.\" And I began undressing.\n\nI pulled my T-shirt over my head and reached behind me to unclasp my bra, exposing my B cup breasts to Glenda. She was just standing there watching me with a huge grin on her face that caused me to ask \"What?\"\n\n\"I'm just happy you're actually going to do it. I didn't think you would. That's all.\"\n\nI kicked out of my shorts and panties, revealing my full black bush of pubic hair. \"Okay\" she said, \"Let's go flash the fish.\" And she let out another of her charming giggles.\n\nWhen we reached the far end of the pier, Glenda stretched her arms out wide and turned in slow circles. \"Gawd! This is incredible. I never thought I'd get the chance to do this outside. Don't you just love it?\"\n\nActually, I did love it. It felt very liberating and a bit naughty too. \"Yes, yes I do. It's wonderful. I don't know why I haven't done it before.\"\n\n\"Then c'mon, let's walk around the pond and back.\"\n\nWe were just walking across the dam when I heard a helicopter approaching. I'd totally forgotten about the helicopters. Our property was in the flight path of training flights from the nearby army base. They always flew over our place just above the tops of the trees. \"Shit, an army helicopter is coming. What do we do?\" I asked in a panic.\n\nShe laughed out loud, \"Smile and wave, of course.\"\n\nThe only other option was to go down behind the dam and into the trees, and I wasn't about to risk getting poison ivy like Josh had done once. So, we both just smiled and waved like it was nothing. Of course, my heart was racing and my whole body was shaking.\n\n\"How often do they come over?\"\n\n\"Sometimes twenty-five or thirty times a day. And sometimes, they turn right over the pond.\"\n\n\"Well then, we'll just have to do our patriotic duty and entertain the troops.\" She said with a wild laugh.\n\nWhen we got back to the house, I went inside to make us some tea, and Glenda headed for the hot tub. When I got back outside, I got another shock. Glenda was on her knees in one corner of the hot tub, the corner with the two rows of jets that pulse up and down to give your back a wonderful massage. Her eyes were closed, and her face was contorted. Just as I got to her, she let out a barrage of loud moans, \"Oh Gawd, Oh Gawd, Fuck, Oh Gawd.\" And then her whole body started convulsing.\n\nI didn't want to interrupt her orgasm, so I just stood there, watching in awe. Finally, she slumped down into a normal sitting position in the corner. She was panting and gasping for air.\n\nWhen I saw her beginning to calm down, I said, \"Here's your tea.\"\n\nShe looked up at me with a very satisfied grin on her face. She took the tea and said, \"I know where I'm going to be spending a lot of time while I'm here. Those jets are fucking amazing. Why didn't you tell me about them?\"\n\n\"I . . . never tried that.\"\n\nShe looked astonished, \"Then get yourself in here and give it a go. You won't be sorry.\"\n\n\"Maybe some other time.\" I said.\n\n\"Bullshit. You're just too shy to do it in front of me, but you're going to do it, and I mean right now. Besides, unless you've been holding another man in reserve, you need something. So cut the bullshit and get in here.\"\n\nI'm not sure why I found it so difficult to say no to her. Then I rationalized it, thinking to myself: well, she had been right about it being fun to go around the pond naked, and even though it made me really nervous, the whole thing with the helicopter had been fun too. And, sad to say, I had been holding out until Josh got home, so I hadn't had an orgasm in months. So, what the hell? I crawled into the tub.\n\n\"Here, let me turn down the power on the jets for you. I'll turn them back up after you get into it.\" And she reached around me to turn the knob to just the right setting. I jumped a bit when I felt her boobs against my back, but they were gone after only five seconds or so.\n\nThe pulsating water did feel delicious, and since I hadn't had sex in almost a year, it didn't take too long before they had me moaning a bit. That's when I felt her boobs on my back again and saw her hand come around to turn the knob. The jets were at full power now, and they were driving my pussy and clit crazy. I knew it wouldn't be long before an orgasm would overtake me.\n\nThis time, after she finished adjusting the knob, she didn't back away. I felt her smash her huge boobs into my back. Before I could protest, she had her arms around me and she was pulling and twisting both of my hard nipples. That did it. I was lost in the most powerful orgasm I could remember ever having.\n\nI couldn't take the jets anymore. I had to escape them, but the only thing I could do was turn away from them and toward my sister-in-law. She understood and backed up, but just a little. When I was fully turned, she was standing close in front of me and I was staring right at her marvelous tits.\n\nShe leaned down and gave me a sisterly kiss on the cheek and then moved her mouth next to my ear so I could hear her over the sound of the jets, \"You can touch them, you know, anytime the urge hits you. I won't mind.\" And then she let herself fall back into the water and sat on the far side of the large hot tub.\n\n(.)(.)(.)(.)\n\nAfter a few minutes, she said, \"We should have a drink to celebrate your new liberation.\"\n\nI didn't know what time it was, but judging from the position of the sun, I guessed it to be around noon. \"It's early, and we haven't had lunch. I don't think-\"\n\n\"You said you don't have any plans, and I surely don't. We can eat after and then take a nap if we feel like it. Out here, time is relative. And besides, I think we're both going to want another turn on those wonderful jets, and then a nap will be very welcomed.\"\n\nSo we went inside and made us each a Screwdriver. When we returned to the hot tub, Glenda told me quite frankly, \"It's good to see you loosing up a little. Your world has been turned upside down, and the best way to get over it is not to think about it. Stay busy with new things until some time has passed.\" And then she got quiet and I could see her expression sadden, \"I miss him too, you know. I can't believe my big brother is gone.\" And then, quite unexpectedly, she began sobbing uncontrollably.\n\nI went to her and hugged her tightly, and we cried together for a very long time.\n\n(.)(.)(.)(.)\n\nFinally, Glenda shook off her grieving mood. \"I need to pee.\"\n\nI watched as she climbed out of the hot tub and squatted with her ass hanging over the edge of the deck. Josh had not installed pickets around that part of the deck. He said they would block his view. Then he went on to explain that he would install them when our first child was old enough to worry about them going off the edge.\n\nI tried not to stare, but she saw me looking and showed me a naughty grin and a wink. \"It's fun peeing outside. I don't get to do it very often.\" I'm sure I showed her a blush in return.\n\nI think I'll have another go with the jets. Will you help me this time?\"\n\n\"How?\" I asked, sincerely not knowing what I could do to help her.\n\n\"Just do what I did to you. You liked it, didn't you?\"\n\n\"Uh . . . yes, I guess it helped me get . . . you know.\"\n\n\"Good, then I'll tell you when. I like it rough, so don't be shy.\" And she knelt in front of the corner jets and turned them down some.\n\nI watched her from behind. The sight was very erotic and sexual. I felt a stirring in my loins. After only a few minutes, I saw her reach up and turn the knob. \"Now, please. I need you right now.\"\n\nI was glad she wasn't facing me. I wouldn't have been able to do what I did if she'd been looking at me. I moved up behind her, reached around her body, and found her nipples. I began tugging at them and rolling them between my fingers\u2014just like I did my own during the few times I actually masturbated.\n\n\"Harder!\" She almost screamed, \"Fuck! Harder!\"\n\nSo I increased the pressure on her nipples. Mine were pressed into her back and it was like the pleasure she was feeling was flowing through her body and into mine.\n\nShe let out several loud moans, and then her whole body started shaking. I waited until I knew she was engulfed with her orgasm before I eased up on what I was doing. When I tried to release her, she shook her head, \"No please.\" Her tone pleading. One of her hands came up and covered one of mine, forcing it to cup her breast and knead it. I voluntarily did the same with my other hand.\n\nWhen she had turned down the jets, she said, \"Whew! That was awesome. Thank you.\" But she didn't release my hand which was still holding her firm breast. \"Ummmm, that feels so nice. Please don't stop.\" So I didn't. I cupped and kneaded both of her breasts gently. I loved the feel of them, and the feel of mine pressing into the flesh of her back.\n\nFinally though, she let me release them and fall back to the other side of the hot tub.\n\nWhen she turned around and sat, she showed me that naughty, satisfied grin again. \"See, that wasn't so terrible, was it?\"\n\n\"What?\" I asked her.\n\n\"Feeling me up and helping me cum. It wasn't so bad, now was it?\"\n\n\"Ummm, no. I kind of enjoyed it.\" I admitted.\n\n\"Good, because I did too. I really, really enjoyed it.\"\n\nShe slid aside and said, \"So, what are you waiting for? I know you want to.\"\n\nI did want to. I wanted to feel the jets again, to feel her breasts pressed into my back, and to feel her hands on me. I moved into position with her sitting right beside me. \"Gawd, that feels wonderful.\"\n\nIt was probably two minutes or more before I felt my orgasm starting to build. I loved that feeling almost as much as the orgasm itself, so I moved back from the jets a little to prolong it.\n\nWhen I knew I was getting close, I moaned out loudly, \"Jets\". She understood and quickly spun the knob. She was behind me in no time, pressing herself to me, her hands on my breasts, kneading them more firmly than before. She began pulling my nipples and pinching them much harder than she had the first time.\n\nIt only took a half minute of that to rocket me into outer space. \"Gawd!\" I cried out. \"I'm . . . Oh Gawd! Oh Gawd!\" I couldn't breathe, couldn't think. I wanted to push myself back from the jets, but Glenda was still pressing me to them. She released my nipples, but continued kneading my breasts.\n\nFinally, she reached up and turned the knob until the jets stopped completely. \"That was a good one, huh?\" She asked in a sexy purr, her mouth so near my ear I could feel her warm breath on it. All I could do was nod. I was still panting too hard to speak.\n\nAs my breathing calmed and my body eased its shaking, I expected her to release me, but she didn't. \"I'm done. You can stop now.\"\n\nShe let out another of her silly giggles, but didn't release my breasts. \"I like feeling them.\" She said.\n\n\"I need to get off my knees.\"\n\nShe finally released me and backed off. When I turned around and sat though, she immediately put her hands back on my breasts and gently cupped them. \"It's okay.\" She said, \"Girls don't have to be gay to enjoy feeling another girl's tits. It's a lot different than feeling your own, and I know you liked feeling mine. You can do it again if you want. I'd like you to.\"\n\nSo I did. I simply reached up and cupped her large breasts. She was right about it being different. It made me feel giddy and very, very naughty.\n\nAfter several minutes, I said, \"We should get out. We've been in here way too long.\"\n\nShe must have agreed because she released me and backed away.\n\nAfter we'd covered the hot tub, we were caught in an awkward moment of standing, facing each other, on opposite sides of the hot tub. I felt like I needed to say something, but nothing came to mind.\n\nShe must have sensed what I was thinking, but she got it wrong. \"It's okay, Beth. What we did is okay. Don't let it fuck your head up.\"\n\nI finally shook my head, \"That's not . . . I don't know how to . . . I really enjoyed it\u2014that's all.\"\n\nShe walked over and sat on the free standing porch swing. Come over here and I'll tell you a secret.\"\n\nWhen I was sitting beside her, she turned to look me in the eyes. \"That's the first time I've done it\u2014like that, I mean. Oh sure, I've done things at parties, kissing other girls and feeling them up and stuff, but it was always just quick little things here and there to get the boys all hot and bothered. It was nothing like what we just did. I really, really enjoyed doing that with you.\"\n\nI was stunned, \"Really? I just thought-\"\n\n\"Nope. I've never touched another girl's naked tits. Actually, until you got in the hot tub, I never even thought about it, and then I just wanted to, so I did it. And I have one more confession: Not now, but soon, I want to kiss them.\"\n\nI'm sure my jaw dropped. I stared at her hard. Her eyes were pleading. And then I thought, after what we'd already done, I guess it wouldn't be that much of a stretch. It couldn't hurt, and no one would ever know. Hell, it might even be fun to be that naughty. \"I guess I'd be okay with that\u2014but you said 'not now' right?\"\n\n\"No, not right now. Right now I just want another drink.\"\n\n(.)(.)(.)(.)\n\nI fixed sandwiches while Glenda fixed our drinks. After we'd finished both, I told her I was going to go wash the chemicals off. I'd only been in the shower less than a minute when the shower door opened and Glenda asked, \"Mind if I join you?\"",
        "I just tilted my head and she stepped inside. My shower isn't that big, so there was quite a bit of innocent bumping and touching, but nothing sexual. After drying ourselves, we mixed yet another drink and went back outside to the porch swing.\n\nI didn't usually drink that much. I couldn't remember the last time I'd had three drinks in one day, but I was enjoying the numbing effects. We just chatted about all sorts of things. Every time we heard a helicopter coming, we'd hurry out to the hot tub deck as it wasn't covered like the porch. We'd smile and wave, but the tall pines near the house made me doubt the pilots could see us. Still, it was fun and naughty.\n\nThe alcohol made me drowsy, so I went inside for a nap. Glenda said she was going for another walk. \"Be careful of the Rattlesnakes.\" I warned her.\n\nI'm not sure how long I'd been asleep when I was awakened by Glenda moving across the king size bed to cuddle with me. I pretended to be still asleep. I was on my back, and she was on her side facing me. Her right leg was straight and pressed against mine. Her other leg was bent, with her knee over my thigh, and her hand was draped across my stomach. She fell asleep quickly, and I finally managed to doze back off myself. I remember thinking just before falling asleep again how nice it was to sleep next to another warm body.\n\n* * *\n\nIt was almost dark when I woke up. Glenda was still sleeping and barely stirred as I slid out from under her knee and arm. I closed the bedroom door behind me and put on some cheery music in the living room.\n\nI was just stepping into the outer bathroom when I had an idea. I turned and went out the back door instead, forgetting that the security system would loudly announce, \"Back Door Open\". \"Oh well\" I said to myself, hoping it hadn't wakened my sleeping sister-in-law.\n\nI was already feeling naughty even before reaching the spot on the hot tub deck where Glenda had peed. And I felt even naughtier as I stuck my ass over the edge. It took me a few seconds as it was awkward, but I finally began peeing. At that exact instant, the back door of the bedroom opened and Glenda yelled, \"Wait!\"\n\nIt was difficult to stop, but I managed. She walked over and squatted next to me and said with that silly giggle of hers, \"Okay, let her fly\". Again, it took me a few seconds, but I did get my flow started again. Wow! If I felt naughty before, it was nothing compared to this.\n\nWhen we were both finished and stood up, Glenda took me by the hand and led me through the bedroom and into the master bath. She rolled off some toilet paper and handed it to me, and then got some for herself. I had to chuckle when I thought what someone might think had they walked in on us.\n\n(.)(.)(.)(.) \n\nWe grilled chicken breasts on the grill, which was located on the back porch on the opposite end from the hot tub. We ate on the porch swing. Between bites, I said, \"People would think we're lesbians you know?\"\n\n\"Like I give a shit what someone else thinks. I know I'm not a lesbian, and you know you're not a lesbian. That's all that matters. We're just two girls having a little fun. What we both need is a nice hard cock.\"\n\n\"I don't think I could . . . it's too-\"\n\n\"Too soon? Now that is total bullshit.\"\n\n\"I . . . I just wouldn't feel right about being with another man this soon.\"\n\n\"Okay, so tell me. Exactly how many days, months, or years is it going to take? Josh is gone, Beth, and you abstaining from sex isn't going to bring him back. And another thing, you really need to take your wedding ring off and put it away someplace you won't see it all the time. Wearing it, seeing it, constantly twisting it around your finger, all just serve to delay your healing process. You know I'm right, don't you?\"\n\nI knew she was right, but the thought of taking my wedding ring off made me feel like I would be telling Josh I didn't love him anymore, and that was flatly untrue. I knew I would love him for the rest of my life. I let out a sigh and conceded, \"Yeah, I know.\" And then I got up and went into the house, returning to the back porch only after placing my wedding ring in my jewelry box.\n\nI showed Glenda my empty finger, and she gave me warm, tight, long hug. \"I'm very proud of you.\" She whispered in my ear. \"You're going to make it through this, and I'm going to help you. After all, that's why I'm here.\"\n\nI pulled back so I could look her in the eyes, but I couldn't help myself. I started bawling like a baby. She leaned back against the cushion and drew me to her, hugging me and stroking my hair. We stayed like that long after my tears had subsided.\n\n(.)(.)(.)(.)\n\nIt was a warm night so I told Glenda I wanted to show her something. I grabbed two towels from the bathroom, made us each a drink, and had her follow me outside.\n\nWe walked down the back steps and over to the gate that opened to under the hot tub deck. The whole thing was surrounded by lattice. I unlatched the wide gate and latched it open. She screeched, \"You didn't tell me you have an ATV.\"\n\n\"I don't use it much when Josh isn't here. We spread the towels out and I put my class in the holder, started it, and backed out.\n\n\"Where are we going?\"\n\n\"I want to show you our . . . our special place.\" I turned on the lights, and off we went. After we'd driven around the pond, and through a few trees, I pulled to a stop in a small open area. It had a beautiful view of the house all lit up, and the pond when the moon was bright.\n\nI turned off the ATV and stood looking at the view. Glenda came up beside me and said in a reverent tone, \"It's beautiful. Did the two of you come out here just for the view?\"\n\nI turned and saw her naughty grin, and I thought back to all the times Josh and I'd had sex in this clearing. \"Yes, we came here for the view\u2014and sex, of course.\"\n\n\"On the ground?\" She exclaimed.\n\n\"Nah, there are too many fire ants for that. But here, I'll show you.\" And I turned around and lowered the tailgate of the ATV. Then I showed her my own version of a naughty grin. With a blanket and a pillow, this is just the right height.\"\n\nShe was still giggling and squealing when I returned after fetching my drink. She'd set her drink down and was standing at the tailgate, pretending she was a man, her hips thrusting back and forth while her hands were holding onto imaginary legs.\n\n\"Having fun?\" I asked her with a chuckle.\n\n\"Gawd! I need a cock right now sooooooo bad.\" And then she stopped moving and patted the tailgate. She grabbed her towel from the seat and spread it over the tailgate. \"Sit up here for a minute. It's time for that little thing we talked about.\"\n\nI didn't have to ask her which thing she was referring to, so I scooted my butt up onto the towel. Then I had a better idea. \"Wait.\" I told her. \"Move out of the way for a minute.\"\n\nI got into the ATV and started it, turning it so the back was toward the pond and house. Then I shut if off and returned to the tailgate.\n\n\"Ahhh, the view, right?\"\n\n\"You got it.\"\n\nThat said, Glenda moved in and cupped my breasts, feeling them, kneading them, and gently rubbing my hard nipples between her fingers. \"Ummm, that feels really nice.\" I told her.\n\n\"Then this is going to feel even nicer.\" She said as she lowered her mouth to my left breast. \"Oh gawd! You're ooooo soooo right. That feels wonderful. I'd almost forgotten how good that feels.\"\n\n\"So you're okay with this?\" She asked while switching to my other breast.\n\n\"I would have never thought it in a million years, but I'm very, very okay with it. I want a turn though. I really do. I love your breasts. I loved feeling them today, so I know I'm going to really love kissing them.\"\n\nShe straightened and looked me in the eyes, \"Okay, get down and take your turn, but I'm not done yet. Just remember that.\"\n\nI scooted off the tailgate and she took my place. I wasted no time putting my hands on her breasts. I loved how heavy they were. After only a minute, I lowered my head and licked her nipple, still kneading her other breast. I put my lips around it and licked it some more. Then I moved to her other breast and did the same thing.\n\n\"Gawd! I wish boys knew how to do that. They're always too rough right out of the gate. I do like rough, but not at first.\"\n\nThis wasn't like sex. We weren't trying to get each other horny or produce orgasms. It was much less than that in some ways, and much more than that in others. We were just enjoying the freedom to do something we both wanted to do, and it didn't hurt that it felt nice to the one on the receiving end.\n\nI'm not sure how many times we traded places, but it must have been a dozen or more. Each time it was her turn, I just relaxed and enjoyed both the view and the wonderful feeling of her mouth and tongue on my breasts. And each time it was my turn, I would lose all track of time. I would simply become lost in touching, kissing, and most of all, admiring my sister-in-law's gorgeous breasts.\n\nWe finished by sitting side by side on the tailgate while we sipped our drinks and enjoyed the wonderful view.\n\nGlenda slept in my bed that night, and again, cuddled tightly against me.\n\n(.)(.)(.)(.)\n\nThe following morning, Glenda stirred while I was moving from under her arm. \"I need to pee.\" She announced.\n\n\"That's where I was heading.\" I told her. \"I'll turn off the alarm and meet you outside.\"\n\nWhen we were both squatted with our asses hanging over the side of the deck, just as we started peeing, Glenda said, \"Beth?\"\n\nWhen I turned to look at her, she kissed me full on the lips. It wasn't a passionate kiss. It was just warm and nice, very erotic, and very naughty. She didn't end that kiss until both of us had finished peeing.\n\nWhen we stood up, she said, \"I'm sorry, but I've wanted to do that since yesterday morning in the hot tub. Are you mad?\"\n\nI let her words soak in for several seconds while I was trying to evaluate my feelings about it. Finally, I looked her in the eyes and put a hand on each of her shoulders. \"Glenda, I know you've kissed girls before, but I haven't. So I guess I'm going to need to practice.\" I tried to maintain my serious tone and expression, but I couldn't.\"\n\n\"Well, in that case, you should practice.\" And she drew me in for another kiss, this one however, was nothing like the first. Our lips had no sooner met than her tongue was in my mouth. I thought I was going to have an orgasm right then and there.\n\nWhen we broke our long kiss, I said \"Whew! That was hot. Now let's jump into the shower and have some coffee.\" \n\n\"I've got a better idea. Let's get in the hot tub before the shower.\"\n\n\"Okay, but I'm going to put the coffee on. I can't wait that long for my morning coffee.\"\n\nWhen the coffee was made and I joined her in the hot tub, I said to her, \"It feels like we're getting pretty close to that line.\"\n\n\"The lesbian line?\" She asked with a giggle.\n\n\"Yes, that line.\" I said as I sat opposite her.\n\n\"One way to resolve that is with a big ole hard cock. I need one really bad.\"\n\nI chuckled, \"Well, you're out of luck. I don't know any single guys around here.\"\n\n\"Oh, trust me. There are always single guys around. You just have to know how to find them.\" Then she put her hands on the sides of her large breasts and jiggled them. \"And with these babies, they aren't hard to catch.\"\n\nWe both had to laugh at that one. And I knew she was right. Besides being a very sexy looking girl, I was sure she didn't have any trouble getting and holding onto the attention of the opposite sex.\n\n(.)(.)(.)(.)\n\n\"Beth?\" She asked over breakfast.\n\n\"Yes?\"\n\nShe giggled\u2014that giggle. \"Good, I was hoping your answer would be yes.\"\n\nI knotted my brows so she said, \"Do you have a video camera?\"\n\n\"Yes, why?\"\n\n\"Is the kind you can put on a tripod?\"\n\n\"Yes, we\u2014I have a tripod for it, Why, what are you wanting to do?\"\n\n\"Do you have a bikini?\"\n\n\"What's going on in that naughty brain of yours?\"\n\n\"Do you have a bikini?\" She asked more sternly.\n\n\"Yes, I have a bikini. Now, will you please tell me what this is all about?\"\n\n\"Cocks\u2014hard cocks, at least one for each of us.\"\n\n\"At least one . . . I don't understand. We're already naked, what could a bikini have to do with . . . cocks?\"\n\n\"It's a surprise. You're just going to have to trust me. I need you to help me with a few things though. First, we need to get rid of that bush of yours. You get some hot water and I'll get my razor.\"\n\n\"What?\" I exclaimed.\n\nShe was already standing, but I was still seated. She moved in front of me. \"Look at my pussy.\"\n\n\"I've seen it.\"\n\n\"Look anyway. Doesn't it look sexy totally bald?\"\n\n\"Yes it does, but I'm not sure-\"\n\n\"Okay, okay, we'll leave you a landing strip. Okay?\"\n\nJosh had shaved me once, but it really itched when it was growing back. When I mentioned that to her, she just laughed and said, \"Then don't let it grow back.\"\n\nI thought I was going to cum several times while she was shaving me, but fortunately, I didn't. When she was satisfied, she stood up and said, \"I'm going upstairs to get my bikini. You get yours, and the video camera and tripod. And put on a little makeup, but don't take all day. I'll meet you at the hot tub in ten.\"\n\nAfter obediently following her instructions, I went outside. I was carrying my bikini, but she was already wearing hers, so I put mine on. She took the tripod and set it up near the bedroom door, then affixed the camera to it and trained it on the hot tub. Then I helped her uncover the tub.\n\n\"Great, now go stand in the middle of the hot tub.\"\n\nWhen I'd complied, I watched her making some adjustments to the height of the tripod and then fiddle with the zoom. Finally, she hit record and joined me in the middle of the tub. She put her arm around my waist and said, \"Smile and wave to the camera.\"\n\n\"What, the helicopters aren't enough?\" I chuckled, but did as she asked.\n\nAfter a minute or so, she instructed me again, \"Now, turn and face me.\" When I had, she leaned in and kissed me on the mouth, but it wasn't a French kiss, more than a sisterly one though.\n\n\"Now, lose the bikini top.\"\n\n\"Wait! Who's going to see this?\"\n\n\"Nobody you know. Now get your top off.\" She said in the same stern voice she'd used earlier. She already had hers off so I sighed and did the same. \"Now face the camera, smile and wave.\"\n\nWe did that for about another minute, then she said, \"Lose the bottoms.\" When we were both totally naked, she said, \"Now face me again. Leave your arms at your sides, but press your body to mine. We don't want any tit or pussy showing for this one. Lean your head back just to let them see us smiling at each other, but not so much they can see our tits.\"\n\nThen, after a few seconds, she said, \"Now kiss me like you mean business.\" I raised a hand to put it on her shoulder, but she stopped me. \"No, it will block their view. We kissed passionately for almost a minute. When she pulled back, she announced, \"Okay, you're done, and my work is just starting. I'm sure you can find something to do for the next few hours.\"\n\nI thought for a second and then told her I would go to town and do some grocery shopping. She asked me to pick of a bottle of Patron Tequila for her. I was nervous about what she was going to do with the video, but I didn't say anything.\n\nBefore I left, she asked me for a short extension cord, so I got her one. She was out on the porch swing when I was dressed and ready to leave. She had her laptop on the wicker coffee table and was busy working on something.\n\n(.)(.)(.)(.)\n\nIt was a ten mile drive into town, and I was gone almost three hours. When I got to the front gate, total panic flooded over me. First off, it was open. I hadn't left it open. The only other person who had a key was Bama. His real name was Will, but he was a huge Alabama football fan, so we just called him Bama. He always called from the front gate to warn us that he was coming in to mow. Shit! I said aloud. Where's my phone.\n\nIf we didn't answer the phone, Bama would lay on is horn as he neared the house\u2014if he saw my car home. He didn't want to get shot, if we mistook him for an intruder. Sure enough, there he was, mowing in front of the house.\n\nGlenda was still on the porch swing working on her laptop, so I went out to tell her to put something on. She just laughed and said, \"You mean because Bama is here to mow? We've met already. It's a little late for modesty now.\"\n\n\"You met him . . . like that?\"\n\nShe giggled, \"Yes. He came around the porch and got quite a surprise. It took me five minutes to get his name out of him. The poor guy doesn't do well around women. He couldn't string two coherent words together.\n\nBama was a very, very nice young man. He was twenty-four, and had a great full-time job. He was also taking classes at Troy University, and did mowing for several people. Our place took him several days. The open area around the house and pond and up the drive was a lot of acres. It was usually soggy close to the pond, so he had to do that with a weed eater, but we paid him very well.\n\nHe was a large\u2014and I do mean very large black man. He was six foot four, and weighed three hundred and fifty pounds, and not much of that was fat. He was solid as a rock. His dad was a local sheriff's deputy.\n\n\"Well, he's still mowing, so I guess he isn't too upset.\" I told her.\n\n\"Upset? Why should he be upset? He's just the shy type. Besides, I'm sure he's going to be seeing us naked a lot, if he comes out here very often. In fact, I wouldn't be surprised if he shows up to mow more often now.\"\n\n\"I could never!\" I exclaimed.\n\n\"Sure you can. It's easy. All you have to do is get naked and let the rest take care of itself. You'll both get over it soon enough. Now, get out of your fucking clothes, or I'll send this video to everyone in the state\u2014Hell, I'll post it on my Facebook page.\"\n\nI had no response to that, so I left her and carried in the groceries. After putting them away, I went into my bedroom and undressed. I didn't want Bama seeing me through the windows. Then I slipped out the back door hoping Bama wouldn't come around the house again. And knowing what a gentleman he was, I didn't think he would\u2014now that he knew Glenda was out there naked.\n\nShe smiled when she saw me. \"There, that's not so bad, is it?\"\n\n\"I'll die if he comes around the house.\" I said.\n\n\"No one has ever died from being seen naked. You'll both survive it just fine. Now, I'm almost done. Give me another fifteen minutes and I'll show you what I've been working on.\"\n\nShit! I need to pee, and the blinds are up in the master bathroom. I could use the one in the living room, but that would mean walking through the house like this. He'd see me for sure.\n\n\"Beth. Snap out of it already. We don't pee in the house any more.\"\n\n\"Well I'm sure not going to-\"\n\n\"Sure you are. I need to pee too. Just get on the other side of me.\"\n\n\"I won't be able to go.\" I told her.\n\n\"Well then, the longer it takes you, the longer you're going to have your ass hanging out there, and increase the odds Bama will see you. A lot of guys like watching a girl pee.\"\n\n\"For God's sake why?\"\n\nShe shrugged, as she pulled me along to the deck. \"I guess for the same reason I like watching them go. I love holding their cocks for them while they pee. It's probably the taboo of it that makes it exciting.\"\n\nI had to force myself to breathe. I just looked toward the pond and tried to imagine a waterfall. That seemed to work, because I finally started peeing. I was trying to hurry, but I'd been holding it too long. It took me a long time to finish. Then I scampered quickly back to the center of the porch and used a towel that was draped over one of the wicker chairs to dry myself.\n\n\"I can't believe I just did that, and I can't imagine what Bama must think of me now.\"\n\n\"He'll think you're one very sexy, very bold lady. That's what he'll think.\"",
        "(.)(.)(.)(.) \n\nI sat and watched her work for another few minutes. Then she began showing me her project. She'd set us up a new Yahoo email account, \"4Tits4U\" I had to chuckle at that one.\n\nNext, she showed me the account she'd set up on a website. \"Oh my gawd! Is that a dating site?\"\n\n\"Sort of, but not the kind you're thinking of. It's a 'hook up' site. Do you know what that is?\"\n\n\"I've heard of hook ups, but I'm not sure how that is different from a date.\"\n\nShe rolled her eyes, \"Hook Ups are just for sex. No potential romance\u2014no bullshitting around. You find someone you're interested in having sex with. You get to know them online a little, and then you meet them in a public place. If that goes well, you go somewhere and fuck like rabbits. Then you each go your separate ways. No strings attached.\"\n\n\"Oh my!\" I couldn't imagine such a thing. \"People really do that?\"\n\n\"Sure. I've done it twice. I like it much better than the whole dating thing. There's one guy I've hooked up with several times. He's a great lay.\"\n\nThen, she showed me the \"Public Profile\" she had created. It had our ages, physical stats, and sexual interest. I almost died when I read those. She had included things like \"Mild Bondage, Mild S&M\" Which she had to explain to me. \"Mild Kink, and Fetishes.\" I didn't even want to know what those included. She had listed us as \"Bisexual\". \"Is that what we are?\" I asked her.\n\nShe laughed, \"I don't think so, but we can always have sex and see how we like it.\"\n\n\"Hum.\" I responded.\n\nNext, she showed me the still pictures she had captured from the video. There were a couple of us in our bikinis, one of us kissing in our bikinis, one of us standing with our bodies pressed together totally nude. She had blurred out our faces in the frontal views.\n\nFinally, she showed me the other photo album. You had to give someone permission to open it up. In it were a ton of pictures of us totally naked. She hadn't blurred our faces on those. Finally, she showed me the video clip she had edited. It wasn't very long. It just showed us totally naked and waving, then jumped to us totally naked and kissing passionately. \"Wow!\" Was all I could say. \n\n\"Sexy video, huh?\"\n\nI had to admit that it was. It almost looked like a professional had made it. \"Yes it is, but you're not actually going to post it, are you?\"\n\nShe laughed, \"I already have.\" Then she clicked another button and giggled. \"Our inbox is already filling up. By tonight, we should have several hundred guys to choose from.\"\n\nI heard the loud bang of Bama dropping the ramp on his trailer, then the mower fired up again. I knew he was loading up to leave. I went inside and peeked out the front window to make sure. He was just driving out. I could relax a bit now\u2014until tomorrow that is.\n\n(.)(.)(.)(.)\n\nIt was around eight p.m. when Glenda asked me to turn off the TV. We'd pulled the coffee table up close to the sofa and put her laptop up on a couple of thick books. The sofa was fairly wide, so there was room for both of us. She lay in front to reach the laptop, and I was behind her with my head propped on two pillows. I draped my arm over her waist so I could reach my drink. I made this a stout one to calm my nerves.\n\n\"First rule: We automatically blow off any guy who doesn't display a picture in his public profile. Secondly, we blow off any guy who makes a big deal, pardon the pun, out of the size of his cock. Third, we blow off any guy who just has pictures of his hard cock in his private picture album. And lastly, we blow off any guy whose pictures are selfies. If he can't find someone to take pictures of him, there's probably a good reason.\"\n\nShe'd been right. There were hundreds, from all over the place. We deleted the ones that were too far away and concentrated on those within two hundred miles. \"Any guy who isn't willing to drive two hundred miles for the best piece of ass he's ever had is a dork.\" Glenda told me.\n\nShe was drinking slowly. I wasn't. She said it was best to keep your wits about you when answering these messages. It was almost boring watching her search through the messages and profiles. She'd open one, \"Nope\" and delete it, open another, \"Not a chance, buster.\" And delete it. I was on my third drink when she opened a picture of a really cute guy. \"He's cute.\"\n\n\"Let's just check him out. He lives in Montgomery, an hour away.\" She'd put in a Troy zip code, so we had to add another ten miles from that direction, and take ten miles off those in the other direction. He didn't mention his cock until well into his profile \"a bit above average\" he'd said. He was twenty-one, six foot, one sixty-five. \"Nice\" I added my two cents. His list of sexual interests lined up fairly well with what Glenda had put in our profile, and that worried me a little. But after two and a half drinks, it was easy for me get over it. She marked his message, \"Interested\", and moved on.\n\nIt took two hours for her to find five guys she was interested in. \"Why five?\" I asked her.\n\n\"You always want to have more to choose from than you're looking for, just in case a couple of them turn out to be dorks.\"\n\n\"Gotcha.\" I slurred.\n\nNext, Glenda went back to the ones she'd marked as \"Interested\" and typed a reply to their message. She told them we were looking to party on the coming Saturday, from around noon until midnight. If it's later than midnight, they can stay the night, but they'd have to split first thing in the morning, and not to expect coffee or breakfast. She told them we were going to meet five guys at a restaurant in Troy and we'd pick two or three of them. She opened up our private photo album for each of them.\n\n\"Three?\" I questioned her.\n\n\"In case one of them can't get it up.\"\n\n\"What if they all can 'get it up'?\" I asked her.\n\n\"Then we'll have more fun. Besides, the problem with a lot of young guys is they can't hang in there long enough to take care of business. Having an extra guy or two helps.\"\n\nHer last words kept rolling around in my head, \"and extra guy or two\", or two, or two. I couldn't imagine, so I got up and poured myself another drink.\n\n\"Okay, that's the last one.\" She said. \"I have to pee\".\n\n\"Me too, but I'm afraid I might fall off the deck.\"\n\n\"There's a hose out there isn't there?\"\n\n\"Yes, why?\"\n\n\"Then c'mon, I'll show you.\"\n\nWhen we got to the railing, she turned me to face her and put her arms around my neck while pressing our breasts together. When I gave her a questioning look, she giggled, and said, \"So pee already.\" And then she kissed me passionately. She started peeing. I could hear it and feel it splashing onto my feet. I had to concentrate hard, but I finally started peeing. She kissed me until we were both finished. Then she grabbed the hose and told me to turn on the water. \"Shit, it's going to be cold.\"\n\n\"Probably not cold enough to cool down my burning pussy. Doing that with you really makes me hot\u2014especially after reading the profiles of all those guys who'd kill to fuck us.\"\n\n\"Doing what with me, kissing?\"\n\n\"Kissing you while we pee.\"\n\n\"Wow! You're one naughty girl.\"\n\n\"You have no idea . . . yet.\"\n\n(.)(.)(.)(.)\n\nBy the time we got back inside, we already had two responses to our responses.\n\nThe one whose profile name was \"MrPleaser\" wrote back that he was available all weekend and he gave his phone number.\n\nAnother one, \"JustAGuy\", said he was free all day Saturday, but would have to leave very early if he stayed the night, because he had to work Sunday. He gave us his phone number as well. \"Perfect\", Glenda said. \"We'll wait on at least two more before we call them.\"\n\nIt was already around ten thirty and I was pretty much out of it. I dozed off while cuddled up behind her, but she kept watching our inbox.\n\n\"Wake up, sleepy head. Time for bed. We have four so far.\"\n\n\"Did you call them already?\" I asked through the haze of booze and sleep.\n\n\"I texted them and told them all we'd call around eight tomorrow evening. That will still give them the night to think about us. Of course, I'm sure they already are.\"\n\n(.)(.)(.)(.)\n\nI was awakened the next morning to warm lips gently sucking my nipple. \"Good morning.\" Glenda said when I stirred.\n\n\"What time is it?\"\n\n\"Almost noon. I've been up since eight. Your coffee is ready, and I made us sausage, scrambled eggs and toast.\" And then she went right back to sucking my nipple.\n\n\"Can I please, please pee inside just this once? I don't think I-\"\n\n\"Okay, but just this once\" She said with a laugh. She got up and helped me out of bed and then followed me into the bathroom. I was too groggy, and hung-over to ponder her reason.\n\nWhen I sat on the toilet, she waited until I began to pee, and then she moved in and kissed me. She didn't stop until I'd finished. \"Gawd, girl, I haven't even brushed my teeth yet.\"\n\n\"Then next time, brush your teeth first.\"\n\nI slept off and on most of the day, at Glenda's suggestion, \"You need to be fully rested tomorrow. If everything goes right, we'll be up all night. Just remember to go easy on the booze tomorrow. I know you'll be a basket case at first, but pace yourself on the alcohol.\"\n\nI didn't need much convincing. I felt like shit.\n\n(.)(.)(.)(.)\n\n\"Hi, is this MrPleaser?\"\n\nShe had her cell on speaker so I could hear.\n\n\"The one and only. Is this the very sexy 4Tits4U?\"\n\n\"The two and only\", she giggled into the phone.\n\n\"Hi, I said, this is the one with the other two tits, the smaller ones.\"\n\n\"You have nothing to be ashamed of in that department me lady. And both of you sound as sexy as you look. Is there anything you'd like to know about me?\"\n\nGlenda answered for us, \"Not on the phone. We'll save that for the interview. Can you be at Ruby Tuesday's in Troy at ten?\"\n\n\"I'll be there at ten sharp with bells on. I am really looking forward to meeting the four\u2014ur, the two of you.\" He followed that with a chuckle.\n\n\"Okay, see you then, oh, and BYOB, bye.\"\n\n\"He sounds wonderful.\" I told her.\n\n\"Yes, and he has a quick wit. I like that.\"\n\nThe other three calls went about the same. Glenda scheduled them fifteen minutes apart. \"What if one is late?\" I asked.\n\n\"Then he gets less time.\"\n\n(.)(.)(.)(.)\n\nGlenda and I went over how we would conduct the interviews. Gawd! I couldn't believe they actually called it that. We're going to be interviewing strange men to fuck us\u2014unbelievable. The only thing I insisted on was that I got final approval on who would come to the house. I didn't like people knowing it was here, and now strangers would know there are just two women living out here in the woods like this\u2014scary. \n\n(.)(.)(.)(.)\n\nWhen it was time to head to town on Saturday morning, I was, as Glenda had so aptly predicted, a total basket case. \"Beth, I'll drive so you can have one medium strong drink on the way. And then when we get there, you can have one more. Those places make them weak anyway. But don't gulp it down. Make it last.\"\n\n\"Yes, mother.\" I snarled as I poured myself a 'medium' drink.\n\nI finished the drink just as we pulled into the parking lot. \"Are you okay?\" Glenda asked me. It sounded sincere.\n\n\"I will be . . .but I'm so fucking nervous, I may pee my pants.\"\n\n\"If you do, you'll have to sit in wet shorts. We're not leaving early.\"\n\nWe asked the greeter to put us in a booth where we would have the most privacy. It wasn't lunchtime yet, so that wasn't a problem.\n\nAt ten minutes before ten, MrPleaser came in. He looked around a bit, but he finally spotted us.\n\n\"MrPleaser, I presume.\" Glenda said when he got to us.\n\n\"Yes, Ma'am.\"\n\nGlenda moved around to sit next to me and he slid in across from us. Glenda wasted no time. \"So tell us, have you done this before?\"\n\n\"Only a couple of times.\" He replied.\n\n\"Then you're comfortable with the selection process. Good. Now, before we start asking you questions, do you have any for us?\"\n\nHe bounced his eyes from one of us to the other. \"Are you related?\"\n\n\"Sort of. She's my sister-in-law. My brother\u2014her husband was in the army and was killed overseas a very short while back. I'm staying with her to help her deal with it.\"\n\nThe waiter brought our drinks, ice tea for Glenda and a Screwdriver for me. When the waiter asked him, he waved him off, then said to us. I'm going to be here for a while, I hope. So I'll have time for a drink later.\"\n\n\"Any more questions for us?\"\n\n\"Have you two done this before? I noticed that your profile was just created the day I sent you that first message.\"\n\n\"Like you, I've done it twice . . . in Dallas, under a different account. She's never been with anyone but her husband. They were in love since Jr. High.\"\n\nHis expression told me he knew exactly what was going on\u2014that this was Glenda's way of 'helping me deal with it'. I liked that.\n\n\"I can't think of any more questions, so I'm all yours.\"\n\n\"Your profile said you're STD free. We prefer riding bareback. Is that still the case?\"\n\n\"Yes, very much so. I don't do this very often, and you'll be my first bareback experience.\"\n\n\"Does that bother you?\"\n\nHe shrugged, \"Normally it would, but I don't sense I'd be in any danger with the two of you . . . if you choose your other playmate wisely, that is.\"\n\n\"What about our profile got your interest the most?\"\n\nHe considered his answer carefully. \"What drew my attention initially was the obvious\u2014your looks, of course. But that is never a deciding factor for me. I look at the phrasing of your profile, the spelling, the grammar, and then reread it for content. I can't and won't have sex with an airhead just because she is pretty or has a nice body. Lastly, the way you described your place, and I could tell from your pictures that you were telling the truth. I'm not sure if you noticed, but when the two of you were in the hot tub, a substantial portion of the view was in the background, and I loved it.\"\n\nI had to say something, \"You mean you took your eyes off of her tits long enough to see the background?\"\n\nHe recognized it as a rhetorical question and just smiled. I liked that too.\n\nGlenda continued, \"Do you understand and agree that you will never attempt to contact either of us again? If we want to invite you back, we will contact you.\"\n\nHe nodded, \"Understood and agreed, and perfectly understandable. But also, I would like to add, you can contact me anytime afterward, even if only to change a flat tire. I don't have a one track mind . . . most of the time.\"\n\n\"Last thing. We will absolutely not tolerate any kind of disturbance. One hateful or angry word to our other guest or to us, and you'll be ask to leave immediately, which means we will toss your ass out. Understood?\"\n\n\"Ladies, I'm a lover, not a fighter. You'll get none of that from me unless it's to protect one of you.\"\n\nGod help me. I was falling in love with this total stranger. I reached over and squeezed Glenda's thigh twice. She looked at me and grinned.\n\n\"Well, it seems that you've made a great impression on my sister-in-law. She just gave me the signal that she wants you to be included in the festivities. You'll have a good wait, so I trust you'll go gentle on the alcohol.\"\n\n\"Actually, I'm not that much of a drinker, so I'll be fine. Should I wait for you somewhere in particular, or . . . oh first, one more question. I hope you noticed on my profile that I smoke. Will there be a place for that?\"\n\nI spoke up, \"My husband was a smoker. You can partake anywhere you like.\"\n\nGlenda added, \"You can wait anywhere you want. If that is in your car so you can smoke, I'm sure you'll see us come out. We won't leave without you.\"\n\n\"Well then, ladies, it's been a very, very delightful interview. I promise you won't be disappointed.\"\n\nHe'd been early, and we'd finished with him early, so we had some time. \"Oh my gawd!\" I said to Glenda, he can have me right now. I'll go wait in his car with him.\"\n\nShe let out one of her giggles, \"No fair getting a head start. We have three more to go.\"\n\nWhen Patriot-man showed up five minutes early and found us, he'd barely sat down before Glenda lit into him, \"First off, you look nothing like your photo on the site. It must be a really old one. Second, if you're twenty-five, then I'm still in fucking diapers. And lastly, you can take a hike.\"\n\n\"Good call\", I told her after he was gone.\n\n\"Do they think we're fucking idiots?\"\n\nJustAGuy was next. He looked very handsome, and he was well dressed\u2014not overdressed, but his attire showed he respected us and the selection process.\n\nThe questions were pretty much the same, and so were the answers. He wasn't as quick as MrPleaser, nor was he as smooth, but I liked him nonetheless.\n\nGlenda squeezed my thigh twice, and I returned it.\n\nMrHarlyMan was totally different than the other two we'd selected. He was thick with rippling muscles that were barely contained by his tight T-shirt. He wasn't what I would call handsome, but his looks weren't displeasing at all. He was clean, well manicured, well mannered, and well spoken, even in his deep harsh voice. I could tell by Glenda's tone that she wanted him . . . badly.\n\nIt was no surprise when she squeezed my leg twice, very firmly. When she turned my way, her eyes were pleading me to accept. I did.\n\nUnlike how we'd parted with the other two, very polite and respectable, Glenda lowered her voice, \"MrHarlyMan, you're going to get to fuck me silly today, and I'm thinking tonight as well. I hope you're up to it.\"\n\nI expected him to brag and say something like, \"Hell, little lady, I'm all you can handle and more.\" But he didn't.\n\nHe let out a deep throated chuckle, \"Hell, I hope I am too.\"\n\nI liked that.\n\n(.)(.)(.)(.)\n\nWe made our way to the parking lot and made sure all three guys saw what vehicle we got into. Then we drove off, with the convoy following us. When we barely made a light, Glenda would pull over and wait until she was sure all three were in tow before proceeding.\n\nI got out and unlocked the gate. After insuring all three were inside, I fake locked the padlock so it just looked like it was locked. I didn't want to have to get up and let them out in the morning.\n\nGlenda and I arrived at the house first, of course. And by the time they'd all gotten out of their vehicles, we were naked. \"You have to strip here, boys. We don't allow clothes on the property.\" Glenda told them while I was unlocking the door. \"I need one more mild one.\" I practically begged her.\n\n\"A very mild one.\"\n\n\"Yes, mother.\"\n\n(.)(.)(.)(.)\n\nIt was mid day, and the sun was hot. Still, Glenda suggested we show them the place, so we all walked down to the dock. Two of the three already had erections. MrHarlyMan didn't. I guessed he'd need something more to arouse him.\n\nWhen we reached the far end of the pier, I threw out a handful of fish food and we watched the huge Brim churn up the top of the water. All three of our playmates practically begged for an invitation to come out sometime to fish.\n\nA helicopter approached, and Glenda told them all, \"Smile and wave to the troops who are keeping the homeland safe.\"\n\nI had no way of knowing since the helicopters all looked the same, but I could have sworn one made three passes over the pond.\n\n\"Okay, here's the deal, guys . . . at least starting out. MrHarlyMan is going to entertain me, and the other two of you are going to do whatever you can to help my sister-in-law forget her troubles. Got it?\"\n\nThere was no argument from anyone. MrPleaser and JustAGuy took their positions on either side of me, and MrHarlyMan slid in beside Glenda.\n\nI was feeling my oats by then, so I wrapped my fingers around their two hard cocks and said, \"C'mon, boys, its hot tub time.\" When I looked back, Glenda was on her knees licking MrHarlyMan's impressive cock.\n\nWithout Glenda with me, I was much less sure of myself. As we slid into the hot tub, I tried to confess, \"Guys, I . . .\"\n\nMrPleaser spoke up, \"We know. You've never done anything like this before. Except your husband, you've never been with anyone. That's okay. We understand, don't we, bro?\"",
        "JustAGuy agreed. \"We're in no hurry. Let's just get comfortable and let happen what happens.\"\n\n\"You couldn't prove it by looking at your . . .\"\n\nMrPleaser laughed, \"Hell, it doesn't take much to do that\u2014especially not when we're accompanying such a sexy lady in the buff. But that doesn't mean we're in a hurry. We have plenty of time. Nothing is going to happen here that you don't want to happen, so just relax and enjoy. You won't be getting any pressure from us. We don't have any expectations. You are in total control. Oh, by the way, what should we call you? We can hardly address you as 4Tits4U, now can we?\"\n\n\"You can call me Gina. It's not my real name, but I wish it was. I've always loved that name.\"\n\n\"Then Gina it is. So, Gina. I'm going to go find my clothes and get a cigarette if that's okay. I'll dry off before going in the house if you'll tell me where the towels are. Of course, if you prefer, I can just stand in the sun and drip dry.\"\n\nI couldn't help but laugh. MrPleaser made me feel so warm and comfortable, even without touching me.\n\n\"Wait a minute to let most of the water drip off you, then go in that door and straight ahead to the bath. Grab all the towels you can find and bring them out.\"\n\n\"Do you two know each other?\" I asked JustAGuy after MrPleaser had gone inside.\n\n\"No, but we've chatted online before. We're very similar in our tastes and attitudes.\"\n\n\"I have a question, and I would appreciate an honest answer, okay?\"\n\n\"I always give honest answers, even when I know it's not what a lady wants to hear.\"\n\n\"Good, then why do you do this? You're a great looking guy, and you're very charming. I'm sure you don't have any problem picking up girls, so why?\"\n\n\"It's fun. That's about it. When you remove all the normal mating reticules of dating and dining and pretending, it's just more fun.\"\n\n\"That sounded like a very honest answer. Thank you. What should I call you?\"\n\n\"Dan\u2014and yes, that's my real name.\"\n\n\"I'm happy that you responded to our web thingy, Dan. It's very nice to meet you.\"\n\n\"Trust me, the pleasure is all mine . . . for the moment. I hope it's mostly yours later.\"\n\nHoly fuck! I almost came right there in the hot tub. I couldn't believe I was having this conversation with a total stranger . . . but he was nice\u2014very nice.\n\nI looked around to see Glenda still on her knees in front of MrHarlyMan.\n\n\"Don't worry about her.\" MrPleaser said as he finally emerged from the bedroom door. \"I think she likes the biker type.\"\n\n\"She just loves sex.\" I defended her honor, \"But yes, she was hot for him half way through his interview.\"\n\n\"Just like you were for me.\" MrPleaser said while looking me straight in the eyes. \"It's okay, I felt the same way about you.\"\n\n\"You weren't just thinking about getting your hands and mouth on those big tits of hers?\"\n\nHe grinned, \"Who wouldn't? But tits don't make the woman. She's sexy, but not like you. I'd choose you in a heartbeat.\"\n\n\"Me too.\" Dan agreed. \"She's a bit young for me. I had my eye on you all along.\"\n\nI'm sure I blushed, \"I'm . . . you two . . . shit! I don't know what to say.\" Then I looked at MrPleaser, \"I need a name. It doesn't have to be your real one, but I need something to call you.\"\n\n\"You can call me anything but late to dinner or sex, but my real name is Steve.\"\n\n\"Nice to meet you, Steve. This is Dan, and you can call me Gina\u2014not my real name, but I love it.\"\n\n\"Gina, I'd love to cup your beautiful breasts. May I?\" Steve asked in the most gentlemanly of ways.\n\nI hesitated. I needed to think through what I was about to tell them. Finally, I just said it straight out. \"Both of you know that I've never been with anyone other than my late husband. I'm not sure what all is going to happen here today and tonight, but please, please, don't ask me. I won't know how to answer. I just know that I want this. I truly do, so it's going to be up to the two of you to help me. Don't ask, just do. Okay?\"\n\n\"We understand. You're in good, capable, and understanding hands with us, Gina. Don't worry about a thing.\"\n\n\"Whew!\" I said, \"I'm glad that's settled. Now, will one of you kind Sirs please pour me a light Screwdriver? You find everything you need in the fridge and on the counter.\"\n\n\"I'll get it.\" Dan volunteered quickly.\n\nWhen he was gone, Steve slid over next to me in the hot tub. Then he said in the most gentle of tones, \"Why don't you start out by reaching over here and finding my cock.\" When I had, he said, \"You don't have to stroke it or anything. Just hold onto it, and when Dan comes back, take his in your other hand and just enjoy us.\"\n\nI swallowed hard and nodded. I was looking down and away from him when I said, \"Thank you.\"\n\n(.)(.)(.)(.)\n\nI took Dan's hard cock into my other hand within seconds of him returning to the hot tub. A minute after that, we heard screams of pleasure coming from the pier. We all turned to look.\n\nGlenda was bent over the railing, and MrHarleyMan was putting it to her from behind. I was a bit jealous of her so I let out a nervous chuckle, \"I hope that will be me before too long.\"\n\nDan immediately reached over and began kneading my breasts, while Steve, as if they'd rehearsed it, eased one hand to my thigh and brought it slowly upward until it rested squarely on my mound. Seconds later, there was a finger inside me, and a thumb gently moving over and around my clit.\n\nSteve then said, \"I think we should get out of this hot tub and take a quick shower. I saw a wonderful king size bed in there. I suggest we'd be more comfortable in it.\"\n\n\"Yes,\" I said, already panting slightly, \"But I have to pee first, and we have a rule, no peeing in the house. My sister-in-law insists that we pee out here. I thought it was stupid at first, but now I think it's kind of liberating, in a kinky kind of way.\"\n\nDan asked me, \"On your profile, you listed Mild Kink and Fetishes. It would help if we knew about those.\"\n\nI didn't know what name Glenda wanted to use, so I just said, \"She made the profile. All I know is the pee thing. She likes it when we pee together and kiss at the same time.\" Gawd! I couldn't believe I was telling them that.\n\n\"Well, we wouldn't want to break any of her rules, now would we?\" Dan chuckled.\n\nSo I crawled out of the hot tub, took a deep breath and squatted over the edge. I didn't look at the guys, but I assumed they were watching. When I was finished, I went inside and started the shower water.\n\n(.)(.)(.)(.)\n\nThat was perhaps the sexiest shower I'd ever taken. I had two horny guys in there with me, washing me in places I never thought another human would touch me. And after they were finished washing me, I washed them, each in turn. I left no centimeter of their bodies unwashed. And then they dried me, and then themselves. It was like they were a well rehearsed team.\n\nWhen they laid me gently on my ultra soft Cheetah skin duvet, I was in heaven within seconds. Steve's tongue was lapping at my slit and clit, and Dan was expertly licking and sucking my breasts. My whole body stiffened when Steve ran his tongue in circles over my asshole, but after a few seconds I relaxed and realized that it felt nice, and very, very naughty.\n\nAfter several minutes, I heard words coming out of my mouth that I couldn't believe came from me. \"Guys, please fuck me now. I need to be fucked.\"\n\nIt didn't take a lot of convincing. Steve pulled me to the edge of the bed and slung my legs over his arms. I reached down and positioned his hard cock at my opening. He went slowly\u2014much too slowly for my mood. \"Fuck me, fuck me now, goddamit. I need it now.\"\n\nHe obliged, plunging his ridged cock deep inside my already drenched pussy. \n\nIt was only by the grace of God that I didn't pass out. I'd needed to feel that so badly for so long. He worked himself into a steady rhythm. I came once but it was a nothing little build up pussy quiver. When the second one started to build though, I knew it was going to be better.\n\n\"I . . . feel it starting. I want it . . . I need it.\"\n\nSteve increased his tempo. Dan began kneading my breasts with more intensity and nibbling on my nipples harder.\n\nWhen I came, I screamed out \"Oh Gawd!\" I must have gushed. Through the fog of my orgasm, I could barely hear Steve say, \"Wow!\" and Dan said with awe in his voice, \"Nice\".\n\n(.)(.)(.)(.)\n\n\"I . . . the drink you made me . . . I think I left it outside.\"\n\nDan responded, \"I'll get it.\"\n\nWhen I was on my side and sipping the drink, Steve asked, \"Do you mind if I smoke?\"\n\nI reached into the bedside drawer and produced an ashtray. \"Not at all.\"\n\nAfter several minutes, I asked both of them more bluntly than I would have ever thought myself capable of, \"So now, it's your turn. What can I do for you?\"\n\nSteve responded after only a slight hesitation, \"You can relax and sip your drink and let us enjoy just being with you\u2014looking at you and knowing that we will have you in ways you've never been had. We have plenty of time.\"\n\nGawd! I was so falling in love with him.\n\nJust as I was finishing my drink, I realized that I needed to pee again, so I told them. Steve swept me up in his arms and carried me outside. Dan joined us, and soon I had an arm draped over each of their shoulders, and each held one of my legs up with their arms.\n\nSteve chuckled, \"We're going to need another shower, but we're ready.\n\nI couldn't believe how easily I started to pee. I couldn't see it, but I must have been soaking their legs and feet. I didn't care though. It was fun and naughty, and I loved it.\n\nAfter rinsing ourselves off and drying, Dan said to me, \"I want to fuck you now?\"\n\n\"I want it too. I want it bad.\" And then I looked at Steve, \"I want you too . . . in my mouth.\"\n\nI didn't have to ask twice. Soon I was being fucked hard from behind and trying my best to concentrate on the blowjob I was giving Steve. This was all foreign to me. I'd given Josh plenty of blowjobs, but not like this\u2014not with someone fucking me, and not with a cock so long and thick. It must have been over seven inches long. If I wasn't very good at it, it wasn't from the lack of effort.\n\nI stiffened again when I felt a slick finger working its way into my ass, but it felt wonderful. When I came again, it was much, much harder than before. I may have even blacked out for a few seconds. When I was in better control of my senses, I apologized, \"I'm sorry. I must have-\"\n\nSteve chuckled, \"Yes you did, but its okay. We hope it felt as good for you as it looked for us. Of course, you practically bit my cock off, but I forgive you.\"\n\n\"Oh gawd! I'm so sorry.\"\n\n\"Hey, I was just kidding.\"\n\nDan's hard cock was still inside my pussy. He asked me, \"Do you need some time, or-\"\n\n\"Gawd no, fuck me like you mean business.\" Gezzzz I felt like such a slut while saying things like that, but I enjoyed doing it. I felt like I was free to say or do anything I wanted, so I said to Steve, \"I want to make you cum.\"\n\nHe chuckled, \"That, my dear Gina, may take longer than you're prepared to spend at it. I last forever after cumming the first time, but I promise, you'll get it when it's time.\"\n\nDan picked up his pace. He had hold of my hips and was yanking me back onto his cock hard with every thrust. I couldn't remember ever being fucked so hard. I finally had to abandon my attempt to continue sucking Steve's cock.\n\nI'm not sure how many times I came. Everything was a blur. I was still recuperating when I heard one of them say, and I'm not sure which one, \"I need to pee.\"\n\n\"Outside.\" I heard myself almost order him.\n\nI stumbled out after them. When I heard one of them start to pee, I remembered vaguely Glenda telling me that she loved to hold a man's cock while he peed. I surprised myself at having the guts to make such a bold move, but I managed it. I stepped up behind Dan and slid my hand around him. Soon, I was holding the water hose as it emptied itself into the air and down the twelve feet to the ground. The feeling was intoxicating.\n\n(.)(.)(.)(.)\n\nGlenda and \"Terry\", I finally had something other than MrHarlyMan to call him, joined us in the kitchen. We were preparing steaks for the grill. Steve was using the heavy, hammer-like meat tenderizer when Terry asked, \"Still beating your meat there are you?\" That brought a laugh from all of us.\n\nWhen Glenda and I had a chance to talk away from the guys, she asked me, \"Are you enjoying yourself?\" I couldn't lie, \"Holy shit, girl. Those guys are amazing.\"\n\nShe hugged me tightly, \"I'm glad you're having fun. You deserve it. And Terry is okay. I wouldn't kick him to the curb for just any ole cock. He'll do in a pinch.\" And we both laughed out loud.\n\n\"We should probably have a quick douche.\" She suggested.\n\nI knew she was right. If we were going to play some more, and I was sure we were, freshening up was definitely called for.\n\nMy jaw dropped when I heard her call to the boys, \"Guys, we're going to wash your excellent cum out of our pussies. You should come watch.\"\n\nWhen she passed me on the way to the master bathroom, she saw my shocked expression, \"Oh grow up. It's fun to let guys watch.\"\n\nThe next thing I knew, Glenda was emptying the plastic bottle of liquid into her pussy as the four of us looked on. When it was my turn, I looked at everything but their faces. I was truly embarrassed, but I still found the whole thing to be deliciously naughty.\n\n(.)(.)(.)(.)\n\nAfter we'd eaten our fill. Glenda took over the proceedings. She didn't tell me in advance what she was going to do. \"Guys, there's something Gina and I would like to show you.\" And she pulled me into the middle of the living room and laid a very passionate kiss on me. While she was kissing me, she brought one of her hands up to my breasts, and the fingers of her other hand snaked between my legs. Before I knew what was happening, she was finger fucking me right in front of our three guests.\n\nWhen she stopped kissing me, she said to the onlookers, \"Is there anyone here who doesn't think that's hot as hell.\" All the while, her fingers were busy inside me.\n\n\"Lick her pussy.\" Terry called out.\n\nShe played coy, \"Oh, would that get your big ole cock hard again so you can fuck me good and proper?\"\n\n\"Hell yeah. Eat her pretty little pussy for us.\"\n\nEven before she made a move, I knew she was going to do it. She was not one to back down from a challenge. But all the events of the evening, spurred on by just enough alcohol to give me more courage than I would otherwise have, caused me to push her away. \"Fuck no. Not standing up like this.\" And I slumped backwards onto the sofa. \"If she's going to eat me, she'd better do it right.\" \n\nIt didn't surprise me when Glenda's mouth was on my pussy within seconds. I'd known for some time that she wanted to do it. Honestly, I wanted to reciprocate, just not with all these men watching.\n\nShe licked my pussy oh so good, and she sucked and nibbled at my clit until I thought I'd pass out for sure. After ten minutes or so, I just blurted out, \"My turn.\"\n\nGlenda looked up at me and grinned, and then she moved to the couch and I took my place between her legs. I licked her slit up and down and then ran my tongue over her clit. \"Ummmmm that feels wonderful, baby.\"\n\nAfter only a few minutes, Glenda pushed my head away and pulled me to my feet. She moved in and kissed me deeply, before whispering, \"Their all hard.\"\n\nI looked over to the guys and saw that they were indeed all three hard and waving proudly at us. She leaned in, this time not trying to hide that she was whispering something to me. \"Have you ever done anal?\"\n\n\"Gawd no!\" I accidently blurted out.\n\n\"You're about to. Trust me, you'll love it.\"\n\n\"Boys, we'd like to feel some hard cock in our asses. Are you up for that?\"\n\nYou could say all three of them responded positively. Glenda ran upstairs and returned a minute later with a jar of KY Jelly. I began shaking uncontrollably as Steve lifted me onto the bed. \"Get on your knees.\"\n\nI looked back at him, \"I . . . never.\"\n\nHe showed me that same gentle soothing look I'd seen several times from him. \"Don't worry. I know what to do. I won't hurt you. Just try to relax. It will be easier if you relax.\"\n\nI didn't know him, but I did trusted him. I looked forward and saw Glenda crawl up on her knees facing me. Terry was lubing up his huge cock with the KY. She motioned Dan over and had him lay down perpendicular in front of her, and she immediately began licking up and down his twitching cock.\n\nGawd! That was such a sexy sight, I almost forgot for a second what was about to happen to me. Terry tossed Steve the jar. It was going to happen soon, very soon, and the thought of it scared me to death.\n\nThe first thing I felt was Steve's fingers on my pussy, rubbing it gently, and then I felt his tongue touch my puckered hole. I hadn't expected that, but it felt really, really good.\n\nGlenda had to stop sucking Dan's cock. From the contorted look on her face, I could tell that Terry was working his massive cock inside her ass. I was sure it was really hurting her, and that scared me, but then she grinned at me and winked.\n\nSteve was now finger fucking my pussy while working his tongue deeper into my ass. After a couple of minutes, I felt a slick finger enter my ass, deeper and deeper. He was now finger fucking both my pussy and my ass.\n\nGlenda hadn't gone back to sucking Dan's cock yet. She was just holding it in her hand. I could tell by how close Terry's body was to her butt, that he had almost all of his big cock inside her ass.\n\nI felt Steve work another finger into my ass, and I almost passed out from the pleasure. I couldn't believe how good it felt. I'm sure I was starting to relax some, because I felt myself unconsciously pushing back against his fingers. I felt him stretching me as he finger fucked me.\n\nWhen he pulled his fingers out of my ass and pussy, I knew it was time. Terry was slowly moving in and out of Glenda's ass now. I felt the tip of Steve's cock on my now tingling hole, and I felt him apply just a little pressure. I kept telling myself, \"relax, relax, relax\".\n\nI realized that I was pushing back to Steve's cock, urging him to put it in me. He was moving it from side to side, pressing a little more firmly until it happened. The head of his cock popped inside me. It was uncomfortable, but it didn't really hurt. \"relax, relax, relax.\"\n\nTerry was fucking Glenda's ass a little faster now, and she'd gone back to licking up and down Dan's hard cock. She told Terry, \"Go slow. I want to wait on Gina, so we can do this together. Steve wasn't moving. He was just standing there with the head of his cock inside me.\n\nAfter a minute or so though, he pressed forward a little, and I could feel my ass accept a little more of his cock. He pulled back an almost imperceptible distance and then pressed forward again, this time a little farther. He continued that for a long time until I felt his body pressing against my butt. I felt so full\u2014like his cock was filling my whole body. \"Are you okay?\" He asked me.\n\n\"I'm wonderful.\" I answered.\n\nGlenda looked up at me and giggled. \"I told you you'd love it. You haven't felt anything yet. Just wait till he starts fucking you.\"\n\nAs she was saying that, I felt Steve begin to withdraw a little\u2014maybe half way, then back forward again. He repeated that several times, backing out a little more each time before moving forward again.\n\nI was ready, and I knew it. \"Steve, I'm ready. Fuck me now, please.\"\n\nHe did start fucking me, but slowly. It was another two minutes before he picked up his pace. I sensed that he felt me push back onto his cock that I really was ready, so he started fucking me even faster.\n\n\"Let's do this.\" I heard Glenda tell Terry, and she stopped sucking Dan's cock again and braced herself.\n\n\"Gawd! Oh Gawd!\" I screamed loudly as Steve began pounding his cock into my ass hard. I could feel something happening in my pussy, but I wasn't sure. The sensations in my ass were too overwhelming. ",
        "I lost all track of time. Steve was rocking my body violently forward and then jerking me back onto his cock only to thrust me forward again. Gawd I loved it, the feel of being fucked like this\u2014being used like this\u2014like a total slut whore. \"Harder!\" I gasped through my panting. \"Oh baby, fuck me. Fuck me hard. Oh gawd! I'm . . . almost . . . almost. Gawd fuck me. And then what felt like a series of orgasms flooded over me one after another, after another. \"Gawd!\"\n\nFinally I had to stop him, \"I need a minute\" I managed through my gasping and panting. \"I just . . . a minute.\"\n\nI barely heard Glenda say, \"When she's ready, DP her.\" I had no idea what that meant, but she hadn't led me astray to that point. It took me longer than a minute\u2014more like three or four. Steve just stood there, holding my hips tightly back to him, his cock buried to the hilt inside me. Terry must have cum in Glenda's ass, because they were both just leaning on the bed looking at me.\n\nWhen I told Steve I was ready again, he shocked me by pulling his cock all the way out of my ass. Dan moved around beside me, still on his back. Then Steve lifted me up and placed me over Dan, straddling him.\n\nI was starting to understand what was happening. I was going to have them both inside me at the same time. I wasn't afraid. I was excited.\n\nI lowered my pussy down onto Dan's cock. When he was fully inside me, Steve pushed my upper body forward, until I was on my hands. Then Steve put his cock back into my ass until he was all the way in. Gawd! I was so, so, so totally filled with cock. I wouldn't have thought it was possible to have that much cock in me at one time.\n\nSteve began fucking me slowly again and Dan began thrusting his hips up slowly as well, fucking my pussy. Dan reached up and began kneading my tits. Glenda moved next to me and turned my head to her. She kissed me over and over.\n\nThere were too many sensations. My whole body was just a flood of sensations. It was all wonderful, but after a few minutes, I simply couldn't take it anymore. \"Let's . . . let's save some for later. I need a break.\"\n\nEveryone in the room had a good laugh, even me.\n\nFinally, Glenda told them, \"You guys go wash up and then Gina and I will take a shower.\"\n\n(.)(.)(.)(.)\n\n\"Well?\" Glenda asked me when we were in the shower. \"What do you think?\"\n\n\"I think I'm not going to be able to walk tomorrow. That's what I think.\"\n\nAnd then she asked me, \"Is there anything you want to do that you haven't already done?\"\n\nI thought about it and then said, \"I want to get Steve off with my mouth. The rest of what I want to do will be after they leave.\"\n\n\"Are you sure you don't want to try Terry's monster cock?\"\n\n\"Nah, I'll pass. Maybe next time.\"\n\n\"Ooooo, there's going to be a next time. I like the sound of that.\"\n\n\"We'll see.\"\n\n\"Personally, I want to have all three of them at the same time. And I still want to get a little kinky with them before we're done.\"\n\n\"What kind of 'kinky'?\" I asked her, but she wouldn't tell me.\n\n\"Be my guest. I'll enjoy watching you in action\u2014just don't make Steve cum. I want that all to myself.\"\n\n\"Gotcha.\"\n\n(.)(.)(.)(.)\n\nAfter sitting and chatting for a bit, Glenda blurted out, \"You guys let me know when you're ready. I have three holes to fill. After that, I want to get my freak on, so just get ready. Steve, Gina wants your cum, so whatever you have to do, save it for her, okay?\"\n\nHe chuckled, \"Yes, Ma'am, I told her I would, and I'm a man of my word.\"\n\n\"Okay then. When you're all ready, who wants what hole?\"\n\nTerry didn't hesitate, \"I really like fucking your ass . . . nice and tight.\"\n\n\"I want your mouth. You never finished what you started earlier.\" Dan said.\n\n\"I guess that leaves me with fucking your ear.\" Steve chided.\n\nGlenda was quick, \"Oooooo, my ears are virgins. I guess it's time to pop their cherries.\" And that brought a huge round of laughter from everyone.\n\n(.)(.)(.)(.)\n\nGlenda was in a hurry, so she had all three of them stand around her and she began sucking them one after another, constantly switching off until they were all raging hard.\n\nA few minutes later, Steve was on his back on the white sheepskin rug in front of the fireplace. I remembered thinking, \"That has to be dry cleaned. What am I going to tell the people at the cleaners?\" \n\nGlenda straddled him and slid down on his hard cock. When she leaned forward, Terry knelt into position and began assaulting her asshole. When she was fully impaled on both cocks, Dan knelt beside her. She took him her mouth immediately.\n\nThey went at it like that for over thirty minutes, although Dan didn't last more than ten of it. Finally, Steve said, \"I need a break.\" So Terry and Glenda let him up, then went right back to what they were doing.\n\n\"I'll go wash up.\" Steve said to me.\n\n\"No!\" I practically yelled at him. I want to taste her on you.\"\n\nHe chuckled, \"Okay, where and how?\"\n\nI didn't care, so I asked him, \"How do you like it best?\"\n\n\"I like to be standing.\"\n\nThen come over here. When he was in front of me, I threw a pillow on the hardwood floor and knelt in front of him. \"It won't take me long now if you use your hand too.\" So I did. I stroked his wonderful cock with my hand while sucking as much of him in my mouth as I could. I swirled my tongue around the head when I backed off.\n\n\"I'm close, baby. Just tighten your grip some. Don't change anything else.\" And a few seconds later, he warned me, \"Here it comes.\" And his cock began pulsing his hot seed into my mouth. I was determined to take it all, but I couldn't. There was simply too much of it. I had to back off and let the rest spill out onto my chest, stomach and thighs. I'd never seen so much cum in my life, and I loved it, every drop of it. When he was finished, I used my fingers to scoop it up and then lick them clean.\n\n\"That was awesome.\" He told me in what sounded like a very sincere tone. \"Absolutely awesome.\"\n\nI hadn't realized that Glenda and Terry had finished until I heard her giggle and clap.\n\n(.)(.)(.)(.)\n\nA few minutes later, we were all in the hot tub, sipping drinks and laughing about nothing special. Glenda asked them, \"Okay, what's the freakiest thing you've ever done?\"\n\nTerry wasn't shy about answering, \"I did this girl in the ass in the middle of her living room floor with her parents sitting on the couch. Her mother was kind of running the show, telling us what to do. Before we were done, the bitch had her dad kneel down there so she could suck his cock.\"\n\n\"Oh my gawd!\" Glenda said, and that sentiment was pretty much shared by everyone, especially me.\n\nDan was next. I can't top that, but I did fuck a girl from behind once while she whipped her boyfriend's cock with a flyswatter. That poor guy cried like a baby.\"\n\n\"Holy shit! Can you blame him?\" Steve asked.\n\nSteve was last, \"Well, this is kind of hard to admit, since I'm not bi, but I did let a pair of twins talk me into sucking their brother while they fucked and sucked me.\"\n\nI couldn't believe what I was hearing. I was in total shock. Everyone drew in a collective gasp. \"Now that's freaky!\" Glenda said. \"Did you take is cum?\"\n\nHe cleared his throat, \"Uh, no. They took care of that.\"\n\nWhew! At least I felt some measure of relief. I didn't want to think of Steve in that way. He was my knight in shinning armor, after all.\n\nGlenda went next. \"I sucked a guys pee out of his dick, and I loved it.\"\n\nThat didn't draw nearly the reaction from the others that I was feeling. They practically gave her a pass on it. Of course, I tried to remember that all three of these guys had expressed and interest in kink, so I guess that didn't shock them that much.\n\nAll eyes turned to me. My answer was easy, \"You've all seen me as wild and crazy as I've ever been in my life. So what can I say?\"\n\n\"Okay then.\" Glenda took control, as usual. \"Time to get freaky. You guys drink as much as you can and hold out as long as you can. Gina and I want some pee fun.\"\n\nI gasped noticeably. She'd included me in that. I didn't know what she had in mind, but I wasn't sure I wanted any part of it\u2014not after she'd just admitted to sucking the pee out of a guy's dick. I wasn't about to do that. And then she turned to me, \"You'd better have another one yourself\u2014a strong one. You're going to need it.\n\n(.)(.)(.)(.)\n\nAbout thirty minutes later, Dan said, \"It's getting urgent over here.\"\n\n\"Then let the games begin. Get out and wait for us.\" Then she turned to me and said, \"Just trust me. This is going to be special.\" And she got out of the hot tub and helped me out. I didn't know what to expect, but I had a bad feeling about it.\n\nGlenda grabbed two towels, folded them, and placed them on the deck. \"Kneel down.\" She instructed me. I watched her kneel down, so I followed her lead and knelt down in front of her.\n\nShe told Dan, \"While we're kissing, pee on us.\"\n\n\"Where?\" He asked.\n\n\"Everywhere, from head to toe.\"\n\nI didn't like the sound of that, but at least if we were kissing, I shouldn't have to worry about getting it in my mouth. I could always shower afterward.\n\nAs we kissed passionately, his hot pee splashed over us. Actually, it wasn't that bad\u2014kind of different, or maybe even neat feeling, and it was definitely erotic and very naughty. It didn't displease me as much as I thought\u2014except for my hair. I hated feeling it in my hair.\n\n\"Anyone else? Or do you need another few minutes?\"\n\n\"I need a few.\" Steve said. Terry agreed, so Glenda told me, \"Turn on the hose.\"\n\nGawd! It was going to be soooooo cold, but at least it wouldn't last long. I showered her, and then she turned the hose on me. \"Get my hair good.\" I instructed her. It felt great getting back into the hot tub.\n\nWhen Terry was ready, we crawled out of the hot tub again. This time, Glenda spread the towels out more so we could sit on them. We leaned back on our hands with our knees up and spread open.\n\nWhen she kissed me, Terry obeyed her instructions to the letter. He concentrated on peeing on our pussies, alternating from hers to mine. I really liked that. It was like using the shower spray, but with the naughtiness of the kink thrown in for good measure.\n\nAgain we rinsed off and got back in the hot tub until Steve was ready. Glenda got on her knees again, and had me do the same, but this time, we were side by side, our eyes closed, and out mouths open. I protested\u2014a lot, but she insisted, so I finally submitted to her.\n\nIt wasn't as bad as I'd imagined, although I couldn't stop thinking about the cleanliness of it. It wasn't the same as rinsing your body afterward. This was going in our mouths for Christ's sake. But it was just a splash here and there. It wasn't like he was right there. He was a few feet from our faces, and his aim wasn't that good hehe. Still, it was erotic and naughty, and despite myself, I found it oddly exciting.\n\nThe three guys all having peed on us, I thought Glenda would move on to other things, but alas, I was wrong. There was one more thing she wanted us to do, and she wouldn't take no for an answer. Finally, I reluctantly agreed, but with one stipulation. \"Only with Steve.\" I whispered into her ear.\n\nBefore I knew it, Glenda was across the hot tub, straddling Steve's lap and whispering something to him. He shot me a sideways glance, and then said, \"Okay.\"\n\nWe'd been in the hot tub far, far too long, so we got out, dried ourselves, and went back into the house.\n\n(.)(.)(.)(.)\n\nIt must have been after two in the morning when Glenda told Terry and Dan they could sleep in the two bedrooms upstairs. She'd whispered something to Steve, but I didn't know what. \"Steve, will you be alright on the couch?\" He assured her that would be fine.\n\nWhen the other two were gone, she said to Steve, \"You can sleep with us tonight. Gina likes you, and I'm sure she wouldn't mind being sandwiched between us. But there's that little business we have to take care of first.\"\n\n\"Do you have any beer?\" He asked with a sly grin.\n\nI giggled, \"Yes, a few bottles of Bud Light.\"\n\n\"A few bottles should do it. Grab me three of them.\"\n\nWhen I handed him the bottles, he chugged one right after the other. I was amazed, but of course, I hadn't seen him have more than one or two drinks since he arrived. When he drained the last one, he said, \"Now all we can do is wait.\"\n\nI suggested we put on some tunes and snuggle in bed. Both Glenda and Steve seemed to like that idea, so we did.\n\nI was almost dozing off when Steve said he was ready. We went out the back bedroom door. Glenda and I knelt down on the towels and Steve stepped up in front of us. \"You'll have to wait till I get it started.\"\n\n\"You're in control.\" Glenda told him. \"Just make sure we both get our share.\"\n\nWhen he started to pee, it splashed across our thighs, but he pinched it off quickly. Glenda put her lips around the head of his cock, and he released his grip. Pee began gushing from her lips, so he pinched his cock again. I could sense that it wasn't comfortable for him, so I took him in my mouth quickly. Only a second later, I felt his powerful hot stream flood my mouth. I tried to swallow, but there was too much. I gagged and coughed and felt his pee spewing from my nose. He pinched it off again.\n\nGlenda took another turn, until it became too much for her, so I replaced her mouth on his cock with mine. This time, the flow wasn't so fierce, and I was able to take it. I sucked his flaccid cock like it was cum spewing from it instead of piss. I sucked until long after he was finished.\n\n(.)(.)(.)(.)\n\nWe were showered and in bed, Steve smoking a cigarette, me hugging close to him, and Glenda hugging me, cupping my breast, before any of us said anything. Then Glenda asked, \"Well, would you do it again?\"\n\nI contemplated her question for a while before asking, \"The whole night, or just the last part?\"\n\n\"Both.\"\n\n\"The whole night? I'm not sure yet. The last part? Definitely . . . but not with just anyone.\" And I gave Steve a little squeeze.\n\nWhen Steve snuffed out his cigarette and turned off the light, I pressed myself more firmly to him and whispered in his ear, \"My name is Beth.\"\n\n(.)(.)(.)(.) \n\nAs they had been instructed, Terry and Dan were up and gone early. The security system announced their departure. I was still holding onto Steve tightly when he began to stir.\n\n\"It's too early. We can sleep for a while.\" I whispered to him.\n\nHe whispered back, \"I need to get rid of the rest of that beer, and then I'll come back to bed.\n\n\"I'll come with you.\" So we both got out of bed. Glenda just rolled over the other way and curled up. Not wanting to wake her by opening the back door to the bedroom, we walked through the living room and went out that door.\n\n\"Still outside, huh?\" Steve asked with a chuckle.\n\nI giggled, \"Rules are rules.\"\n\nWhen he stepped to the railing, I stood beside him. I waited until he started to pee, then I reached out my hand. He knew what I wanted and moved his hand away. I quickly replaced it with mine and aimed his stream upward so it arched high in the air. \"Mmmm, I love doing this.\" I purred to him.\n\n\"It will be my pleasure to let you . . . anytime.\"\n\nWhen he was finished, I shook his flaccid cock dutifully and released him. Then I squatted over the railing. While I was peeing, I asked him, \"Will you come back sometime . . . just you, without the other guys?\" And then I added before he could answer, \"Glenda won't be here forever. She has to go back to school when it starts.\"\n\nHe smiled down at me, \"I would like that, whether she's here or not.\"\n\nMy heart jumped for joy. I really did like him, a lot. I found it difficult to believe he was just twenty-one. As I was standing up, I asked him, \"You said before that you're free all weekend. Will you stay?\"\n\n\"The night?\"\n\n\"Yes, if you can, I'd really like that?\"\n\n\"Then I'll stay, but I'll have to get up early so I can get home and change clothes for work. I have a part time summer job at a lumber company.\"\n\n\"I'm wide awake now. Do you want to get into the hot tub?\"\n\nHe chuckled, \"Okay, but not for as long as we were in there last night. I was a shriveled prune when I got out.\"\n\nI giggled as we slid the cover off, \"Not all of you was shriveled. Gawd, my ass and pussy are really sore.\"\n\n\"They earned sore.\" He said with another chuckle.\n\nJust before getting in, I thought of something. \"I'll be right back.\" And I went into the house and came back with fresh towels, his pack of cigarettes, and his lighter. I handed them to him and then pulled the ashtray from under the shelf on the side of the tub and placed it on top of the shelf. \"There, you haven't had one yet. Josh always lit one the minute he opened his eyes in the morning.\" I put the hand towel on the shelf and crawled in. \"That's to dry your hands so you won't get your cigarette wet.\" \n\nHe raised a brow, \"My, my, you think of everything.\"\n\n\"My husband smoked.\"\n\nHis expression turned serious. \"You have my condolences, Beth, but I'm glad to be here with you.\"\n\nI let out a long sigh. \"I haven't had a chance to think about him that much\u2014not with Glenda around.\"\n\nHe put his arm around me and pulled me close, \"That's a good thing.\"\n\n\"Hey, you two aren't starting without me, are you?\" Glenda said while shutting the bedroom door behind her.\n\nSteve answered, \"We're just talking.\"\n\nAs she was squatting to pee, she said, \"Talking is over rated.\" And then she began to sing the country song, \"A little less talk and a lot more action.\"\n\n* * *\n\nAfter coffee and breakfast, we were just sitting on the porch swing, talking and enjoying the view. Steve said, \"If I had a fishing pole, we'd have fresh fish for lunch.\"\n\n\"There's a whole closet full of fishing stuff upstairs, but you don't need any of it if you want to catch Brim.\"\n\n\"Really? Why is that?\"\n\n\"C'mon, I'll show you.\" And the three of us put on our shoes and headed down to the pier.\n\nJosh had cut out part of the railing and installed a board to step down on, and from there, you could step down into our small boat. It was a ten foot Pond Prowler with a trolling motor. We always left it tied to the pier. It had an automatic bilge pump to keep it from collecting rain water.\n\nI told them to climb down into the boat. There wasn't room for all three of us, so I stayed on the pier. When they were both seated in the swiveling chairs, I got a scoop of fish food from the bin and handed it down to Glenda. Then I handed Steve the long-handled fishing net. \"Put the net in the water under the pier, then throw out a handful of food.\"\n\nI saw Glenda when she threw out the fish food and heard the water start to churn. \"Holy shit!\" Steve exclaimed when he pulled the net back into the boat. He started counting. He had eleven fish. Six of them were really big ones, so he kept those and threw back the others.\n\n\"You'll find everything you need to clean them in the box by the wooden table, but you'll have to bring a water hose down from the house.\"\n\n\"This is incredible.\" He said as he helped Glenda back up onto the pier. \"This whole place is incredible.\"\n\nAll of a sudden, we heard the several long blasts of a horn. \"Shit! It's Bama. What do we do?\"\n\nGlenda laughed. \"Smile and wave, of course.\"\n\n\"Who's Bama?\" Steve asked.\n\n\"The guy who does the mowing.\"\n\nSteve started laughing with Glenda as they started waving. I joined them, but more out of embarrassment than anything else. Bama, just parked and got out of his truck. When he saw us, he just gave us a quick wave and then went about his business of unloading his mower.\n\n\"I'm going up to the house.\" I told them.\n\n\"You're going to do no such thing. We're going to stay right here and watch while Steve cleans the fish.\"\n\n\"But he's already finished the front. He'll be mowing the back today.\" I pleaded.\n\nGlenda laughed again. \"If everything is proportional on him, this could get very interesting.\"",
        "\"He's huge!\" Steve exclaimed.\n\n\"Gawd! He's such a sweet guy. I hope all this doesn't make him too uncomfortable. If he quits, I don't know who I'll get to mow all of this.\"\n\nSteve chuckled, \"It's going to make him uncomfortable alright, but not in the way you're thinking. He'll probably start mowing the place for free.\"\n\nIt was a moot point now anyway. There was no place to go. Bama was already mowing around the back of the house and getting closer to us with each pass. I resigned myself to the situation and turned to watch what Steve was doing.\n\n* * *\n\nLunch was wonderful\u2014getting to the house wasn't. I kept my eyes on the ground in front of me the whole trek up the hill.\n\nWhen I had to pee, I lied and said that I had to take a dump. Neither Glenda nor Steve exhibited and qualms about peeing off the deck, just as they had before. I stayed in the house until Bama left. That was almost six p.m.\n\nThe three of us lay out in the sun for two hours. Just after eight, I mixed myself a drink and told Steve there was something I wanted to show him. \"On the other side of the pond?\" Glenda asked me. When I nodded, she said, \"You two go on. I want to take a quick shower.\" Gawd! I loved her for that.\n\nTo my surprise, Steve took a beer from the fridge. \"It must be special if she wants to let us share it alone.\" He said as we were pulling out the ATV.\n\nI smiled at him. \"Oh, it is. It's very special.\"\n\nWhen we got to my special place, the sun was just disappearing behind the tall pines behind us. \"I can see why you like it.\" Steve told me with a hint of awe in his voice.\n\nWhile I was standing there, looking over the pond and up toward the house, Steve nuzzled up behind me. He slid his hands under my arms and around me and hugged me.\n\nMy voice was a little shaky as I leaned back into him and said with a sigh, \"Josh and I used to come here in the evenings.\" I was happy that he didn't respond. He just pulled me tighter to him.\n\nWhen my somber mood was over, we sat in the ATV and sipped our drinks. We watched in silence as it grew dark.\n\n* * *\n\nWhen we got back to the house, Glenda asked us, \"Did you two have a nice time.\"\n\nHer tone was sincere\u2014not chiding. I was sure she wasn't referring to sex.\n\nSteve answered her, \"Yes, very much so. It's a beautiful view.\"\n\nBut then Glenda was back to her normal self. \"Okay, I let the two of you have your alone time, but now I need to be fucked.\"\n\n\"Gawd, Glenda, how can you possibly? I'm so sore I can't stand the thought of sex.\"\n\n\"Just making hay while the sun shines. Who knows when we'll have another cock out here to play with.\"\n\nSteve glanced at me as if wanting me to give him some kind of signal. For some reason, the thought of him fucking Glenda didn't make me jealous at all. After all, had it not been for her, he wouldn't be here. \"You two have fun, but I'm sitting this one out. I'll be in to watch after I make myself another drink.\n\nAs I sat in my dressing chair and watched her use her mouth to get him hard, I knew there would be a time when I would want him to make love to me\u2014not just fuck me. I also knew he didn't have the same feelings for Glenda he had for me. This was just recreational sex for both of them, emotionally no different than playing tennis.\n\nI actually enjoyed the hell out of watching them go at it\u2014for over an hour. When Steve announced that he was close, Glenda told him, \"Give it to Beth.\"\n\nI was on my knees in front of him in a flash, taking his hot cum into my mouth. I loved it. The taste of Glenda on him just added to my enjoyment.\n\n* * *\n\nI set the alarm for him, and when he turned it off in the morning and slid out of bed, I got up too. I would have to go to the front gate with him in case Bama had locked it.\n\nWhen he started out the back door, I knew where he was going, so I followed him. When we got to the railing, I told him, \"Steve, this one is for me . . . my way, okay?\"\n\nHe shrugged, \"Anything you want.\"\n\nSo I turned him to me and slid my open hand under his cock, holding it up slightly. \"Can you start with me doing this?\"\n\nHe chuckled, \"I'm sure I can. It's pretty urgent.\"\n\nSure enough, it was only a matter of seconds before his hot stream spewed out onto my chest. I closed my fingers around it and sprayed it all over my tits. When the force of his stream eased, I took him inside my mouth. Much of it gushed out and added to what was already on my body, but I managed to drink a lot of it.\n\nHe made me feel better about doing it, letting me know he didn't find it disgusting when he said, \"That's it, baby, nurse me dry.\"\n\nWhen he was done, I got up and asked him, \"You don't mind me doing that, do you. I know it's weird, but I love doing it.\"\n\n\"Do I mind? I think it's sexy as hell. I love watching you do it, and it feels incredible.\"\n\n\"Great, now hose me down.\"\n\nWhen he was dressed and ready to leave, I put on a robe and drove the ATV up to the gate. After I'd opened it, he rolled down his window and asked me, \"Could I ask you for a favor before I go?\"\n\n\"Anything\u2014and I do mean anything.\"\n\n\"One kiss?\"\n\nIt hadn't dawned on me until that moment that Glenda and I had been the only ones who'd kissed since everyone arrived at the house. \"Gladly\", I told him with a bright smile. I started to lean in his window, but he stopped me. He opened his door and got out.\n\nHe reached for me but I stepped back, untied my robe and let it fall to the ground. If a car came by, they would have to look our way quickly to get even a glimpse of us at the speed they'd be going. The gate sat well back from the road. I held my arms out from my sides and said, \"I'm all yours.\"\n\nHe kissed me so wonderfully and for so long, I almost came. Then he got back into his car and drove off, with only a wave of his hand out the window.\n\n* * *\n\n\"You're not falling in love with him, are you?\" Glenda asked me the minute I got back to the house.\n\n\"No\" I answered her honestly, \"But I am falling in very deep like with him.\"\n\n\"Okay. I was just checking. I may want to fuck him again sometime.\"\n\nI went to her and put a hand on each of her shoulders. I looked her right in the eyes and said in a very serious tone, \"Glenda, even if I married him, or anyone else, for that matter, you will always be welcome to share them with me. Do you understand?\"\n\nA tear was rolling down her cheek when she hugged me.\n\n* * *\n\nThe End"
    ],
    "authorname": "Gina_B_33",
    "tags": [
        "anal",
        "lesbian",
        "pee",
        "piss",
        "group sex"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/golden-girls-1"
}