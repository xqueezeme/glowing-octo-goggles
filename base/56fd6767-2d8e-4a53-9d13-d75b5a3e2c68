{
    "title": "Lilith's Emporium Pt. 02: Night w/Nessira Ch. 02",
    "pages": [
        "Patrick could not get Nessira off of his mind after that crazy dream he had, or didn't have. He was still confused by what happened that night and wanted to go back to the shop to speak to her but he wasn't really sure if it was a good idea or not. It was an amazing experience but he wasn't sure how much of it was in his own mind or if she drugged him and then the DVD triggered a hallucination.\n\nHe finally worked up the nerve and drove himself down to Lilith's Erotic Emporium. He must have sat in the car for ten minutes at least before he finally turned the car off and headed up the stairs to the front door. He stood there reaching for the handle still doubting whether or not he should go inside but he finally opened the door and walked in. There was a scent of burning incense in inside but he didn't see Nessira anywhere. The more he looked around the stranger the items he saw were. He saw statues of penises and incense with scents like Succubus blood and Incubus musk. He still wasn't sure what half this stuff was or why he stopped in that first time.\n\n\"See something you like?\" A voice said from behind him making him jump.\n\n\"Jesus!\"\n\n\"Ha, that's payback for last time.\"\n\n\"Haha, okay you got me, um here's your DVD back.\"\n\n\"I see, did you enjoy it?\"\n\n\"I um... it was an interesting experience.\"\n\n\"So do you believe in the supernatural now?\"\n\n\"I believe there is something strange going on here.\"\n\n\"Well then, you watched my DVD so I suppose I owe you dinner, if you still want?\"\n\n\"I um,\" he said not sure if he wanted to pursue this further.\n\n\"That is if you want to see just how deep the rabbit hole goes?\"\n\n\"I, I think I do.\"\n\n\"Oh really, are you sure?\" She said stepping a few inches closer to him.\n\n\"I don't know if I am sure about anything but... yeah, let's go deeper.\"\n\n\"Okay, but I warned you.\"\n\n\"So, can I have your number or...\"\n\n\"Here you go.\" She said handing him a card for the shop.\n\n\"This is all the info for this place?\"\n\n\"Yup, I live upstairs, and it's one phone number.\"\n\n\"Oh, okay then, so are you free next...\"\n\n\"How about tonight?\" She said interrupting him.\n\n\"Really, okay yeah, I'll pick you up here at around...\"\n\n\"8:00.\"\n\n\"Okay, well I guess I'll see you tonight?\"\n\n\"Why, you have someplace to be now?\"\n\n\"No.\"\n\n\"Well then stick around, I can show you some more supernatural stuff if you want?\"\n\n\"Oh... okay then.\"\n\n\"Good, come with me.\" She said taking his hand and leading him around the store.\n\nShe showed him around telling him stories about all the different statues and ingredients they had for sale. He wasn't sure how much of it was true but the way she spoke about it was very interesting to watch. She spoke of the statues as if they were living creatures and told stories of what they were and what they were waiting for. She spoke of fairies and how they exist in other dimensions and how there are creatures that can cross over with ease.\n\nShe showed him different fragrances and incense letting him smell the different scents even spraying him in the face at one point and laughing at him. Nessira wasn't sure why but she was having fun with him. She enjoyed telling him these stories and they both seemed to be having a good time. It was strange but she continued bringing him over to the plants.\n\nShe showed him one that had a strange moist hole in it that he could only imagine what it was for. The next one had a long shaft that reassembled a cucumber or something else that crossed his mind. He saw another strange looking plant that looked similar to the first one but it was darker with red veins. He went to take a closer look at it as it snapped at his finger with what seemed to be sharp teeth inside.\n\n\"Ah, sorry about that, this one isn't for sale at the moment, not even sure how it got out here,\" Nessira said picking it up and bringing it out back. \"Now stay here like I told you to.\" He heard her said before he heard a snapping noise and Nessira say. \"Hey, knock it off before I give you a root canal!\" She said before she shut the door and walked back over to him.\n\nHe stopped when noticed something on the counter that looked familiar. It was a small foil package for condoms that looked just like the one from his dream. He read the packaging and it said: \"Succubus condoms, for extra protection.\"\n\n\"Well, I see where someone's mind is going?\" She said laughing a little.\n\n\"What... oh no, I thought... I've seen these before, Succubus condoms?\"\n\n\"These are actually new, you know what a succubus is right?\"\n\n\"Female demon who drains the life of a man by sleeping with him?\"\n\n\"There is usually very little sleeping involved.\"\n\n\"Yeah I know, I mean through sex?\"\n\n\"Bingo, the best part of these is you only have to use them once, its more like a spell than a physical condom.\" She explained as he thought back to the dream he had. \"So you want to fuck me then?\"\n\n\"Wait what, I um... we just...\"\n\n\"Ha, I love this, I'm just screwing with you.\"\n\n\"Oh, yeah of course.\"\n\n\"I mean I run a sexual artifact shop and I've been telling you about the history of sexual creatures for the last 45 minutes, why would sex be on your mind at all?\" She said stepping a little closer to him to the point he could smell her scent and it was intoxicating.\n\n\"Nessira?\" He asked suddenly feeling strange.\n\n\"Yeah?\"\n\n\"I have to ask you something.\"\n\n\"Go ahead.\"\n\n\"It's just...\"\n\n\"Ask.\" She said moving closer.\n\n\"What are you?\" He asked being very blunt.\n\n\"That depends.\" She said getting even a little closer and lowering her voice as she looked up at him.\n\n\"Depends on what?\"\n\n\"What do you want me to be?\" She said as she was now only inches from his face as if she was waiting for him to do something but he was confused and turned on and not sure what was going on.\n\nShe looked into his eyes and he found himself getting lost in her gaze. She had very beautiful eyes but there was something behind them that he couldn't see but he could feel. There was a lust, a fire behind them but also a danger that he couldn't figure out but he was being tempted by it.\n\n\"I um...\" he said as she stood there.\n\n\"Yes?\"\n\nHe pulled her in by her waist and planted a kiss on her lips as the lust came over him. He wasn't sure how she would react but it didn't take long before her hand was rubbing the side of his face and she was sticking her tongue in his mouth. Her lips were warm and she tasted incredible as he thought about Jenny and how this woman couldn't be her, there was no way it was the same person but something just felt weird about all of this. He picked her up and sat her in the counter as the lust grew almost making him lose control of his actions before he finally released his lips locking his gaze with hers again\n\n\"I uh... I have to um... go.\" He said pulling back to Nessira's surprise. \"I... I will see you at 8:00.\" He continued backing up and bumping into a shelf before heading out the door almost walking into a tall brunette who was walking in. \"Oh, I am sorry, excuse me.\"\n\n\"Who was that?\" The woman said looking at Nessira who still had a surprised look on her face while sitting on the counter.\n\n\"That was um... wait Lizeth?\"\n\n\"In the flesh!\"\n\n\"Wow, you look great.\"\n\n\"Yeah, I had to make some alterations but I like it.\"\n\n\"Really, so who was she?\"\n\n\"His wife Janice, can you believe the bitch was planning on killing him?\"\n\n\"Told you he was perfect for you.\"\n\n\"Speaking of perfect, who was the hunk on his way out?\"\n\n\"Oh, just a customer I've been having some fun with.\"\n\n\"Fun? Last time you had fun with a guy there was no room for seconds, wait, ...oh my has it happened?\"\n\n\"Huh?\"\n\n\"Oh my god, it has, the Red Witch of Raven Hill is... this is just delicious.\n\n\"No its nothing like that.\"\n\n\"Come on I could smell the protection spell on him as he walked by, you like him.\"\n\n\"Well after the evening we had together you'd like him too.\"\n\n\"Really, a mere mortal was able to satisfy Nessira the Red? No this is more than that.\"\n\n\"Bitch I will turn you back Into a statue!\"\n\n\"Ha, you know you don't have that power anymore.\"\n\n\"Shut up, besides he's too nice a guy, I'll get sick of him soon.\"\n\n\"There's a lot to be said for nice guys.\"\n\n\"That's your thing, not mine.\"\n\n\"Yes it is and let me tell you why, the nice guys are the ones who surprise you in the bedroom, they never get to try all the crazy sexual things they want so it all gets pent up inside them and once you open the door for them it is amazing.\"\n\n\"So liking the new husband I take it?\"\n\n\"Oh my yes, he knows how to please a woman.\" \n\n\"Well he was definitely better looking than your last one, you're welcome by the way.\"\n\n\"You have my thanks, but I need to return the favor with some advice.\"\n\n\"Stop, enough I will go kill him right now if it will shut you up.\"\n\n\"Nessira, I saw that kiss, that was more than just tasting an appetizer, you didn't want him to stop.\"\n\n\"I'm warning you!\"\n\n\"This is what Lilith always wanted for you, why fight it.\"\n\n\"There's nothing to fight, you know my feelings on the subject.\"\n\n\"Oh, is the Red Witch still heartbroken?\"\n\n\"As much as I love it when you call me that I really need you to stop.\"\n\n\"I'm sorry, I just want to see you happy, it's been too long.\"\n\n\"Happiness comes in small doses Lizeth, I enjoy everything I can out of life, right now it's him, tomorrow, I dunno maybe it will be my feline friend, it been a while.\"\n\n\"I get it but it's been so long, don't you think that Sebastian would...\"\n\nNessira's eyes turned red and she looked at her with fire in her eyes and anger in her voice when she said: \"DON'T EVER SAY THAT NAME TO ME!\" As the shop shook a little.\n\n\"I'm sorry, please calm down, I did not mean to offend you.\"\n\nNessira took a deep breath and returned to normal trying to relax before she said: \"it was a long time ago, leave the past where it is.\"\n\n\"I will, but I just want you to embrace a future, that's all, I'm telling you this as a friend.\"\n\n\"I know, it was good to see you, Lizeth.\"\n\n\"You as well. Anyway, enjoy dinner tonight, oh and dessert.\" Lizeth said putting on her sunglasses and walking out the door as Nessira stood there in deep thought.\n\n-----------------\n\nPatrick was on his way back to the shop nervous as hell. He wasn't sure what was going on or what this feeling inside was. He had an unnatural need for Nessira, his blood boiled with passion and he could not take his mind off of her. He thought about that kiss they shared and how she had a bit of her own passion when she kissed him back but he also couldn't stop thinking about that dream with her the other night.\n\nHe began to wonder if she was telling the truth about the items in the store. He then began to wonder if she was even human. That condom from the dream and the ones on the counter, Succubus Protection the label said. He couldn't help but wonder what he was getting himself into but he couldn't stop himself from going to her.\n\nHe pulled up out front around 7:30. He knew he was early and the store was still open but he wasn't sure if he should go in and wait inside or just stay where he was. He pondered this for a moment or two when his phone suddenly went off. He didn't recognize the number but he answered it anyway.\n\n\"Hello?\"\n\n\"The door's unlocked, why don't you come wait in here instead.\"\n\n\"Nessira? How did you?\" He stopped when he heard the phone click on the other end.\n\nHe sat for a moment before getting out of his car and headed for the door. Once inside he saw Nessira standing by the counter looking incredible in a blue dress that hugged her body. He was shocked to see her wearing blue as she usually wore black or red. He stood there not sure what to say as he stared at her.\n\n\"So are you just going to stare at me or...\"\n\n\"Sorry, you just look so.\"\n\n\"Yeah, I think we covered that already.\"\n\n\"Ha, yeah. So ready to go?\"\n\n\"Actually, I was thinking maybe we could go upstairs to my place, maybe order something and watch another one of my videos?\"\n\n\"I um... I don't...\"\n\n\"You don't what?\" She said suddenly inches away from him which surprised him a bit.\n\nShe still smelled amazing as he breathed her in. She stared into her eyes again losing himself in her stare again. He wanted to kiss her as he felt a lust building in him again. There was something about her that he couldn't figure out but he was starting to think she was not human.\n\n\"So, do you like my plan for the evening?\"\n\n\"I, I am um...\"\n\n\"I'll take that as a yes.\" She said before she grabbed him and pulled him in letting him press his lips to hers.\n\nHe broke away for a moment seemingly trying to resist her. \"Wait, we can't...\"\n\n\"Why can't we, we're both adults here so stop being the nice guy and do me.\" She said pulling his lips in again.\n\nHe felt her tongue in his mouth as he tasted her again. He did not know what his plan was for the evening anymore. He also didn't know how he ended up in her apartment but he didn't care. He had her in his arms and all that mattered was the lust between them both. Before long they had both fallen on the bed together and he realized her bedroom looked exactly like the room from his dream the other night but it didn't matter. She was underneath wrapping her leg around him as his lips began to slide down her chin and her neck as she enjoyed the feeling of his lips against her skin.\n\n\"I want you so bad!\" Nessira whispered in his ear making the hair stand up on the back of his neck.\n\nHe felt intoxicated by her as clothing began to disappear. He questioned nothing as none of it seemed important. He worked his way down her chest sucking on every inch of skin as his hand lightly caressed her face before she took his thumb and sucked on it a little. He slid it out of her mouth smearing her lipstick as he started licking her nipples which were available now as her dress was gone. She was so warm beneath him and her skin felt so soft and looked flawless.\n\nShe grabbed him by the head and pulled him back up face to face with her and spread her legs practically begging him to fuck her. He moved slightly and felt his cock slide inside her with ease before her pussy squeezed around his member. He let out a moan before her legs wrapped around him refusing to let him go as he slowly thrust himself into her. She grabbed his mouth with hers wanting to taste him and feel his cock fill her as her breasts heaved towards him. His hand slid down the side of her leg before cupping her ass. Every inch of her skin felt amazing as he was lost in her intoxicating lust that he didn't even want to fight.\n\nHe half expected her to start to transform like in his dream but she laid there looking as beautiful as ever as he continued to thrust his cock into her moist welcoming pussy. His soul felt like it was ready to explode out of him but was being restrained. He wanted to cum and give her everything he had to give. He wanted to fill her beyond his own capabilities so he continued to move his hips and shove his cock as deep as it would go inside her. Her moans grew louder and her skin began to glisten with sweat making her taste salty as his lips and tongue continued to taste her skin.\n\nHe stopped for a moment leaving his hand on her face as he stared into those eyes. Those eyes that had a fire inside them that burned him to his very core as he felt ready to pop at any moment. She grabbed his ass and pulled him in giving him just enough that he could no longer hold on and he blew his load filling her as she wrapped her arms around his head and heal him tightly as she bucks her hips and felt her own pleasure filling her body.\n\nOnce it was over he dropped his head against her shoulder as she ran her fingers through his hair letting him rest with her. She held him close and just didn't want to let him go even though she still wasn't sure why. She thought about what Lizeth had said earlier and she began to remember something that happened many years ago but she didn't want to think about so she had to get her mind off if it.\n\n\"Hey, tell me about Jenny.\"\n\n\"Huh?\"\n\n\"I'm just curious, you thought I was this girl so tell me about her, who was she?\"\n\n\"I don't... I don't think I should.\"\n\n\"Tell you what, you tell me about her and I'll tell you something about my past.\"\n\n\"Um... okay I guess, she was... she was a girl I knew years ago.\"\n\n\"I kind of figured you knew her years ago when you said Jenny it's been years, come on give me the details!\"\n\n\"Okay, we used to date.\"\n\n\"Ooh the plot thickens, tell me more.\"\n\n\"I don't really want to talk about this.\"\n\n\"Please?\" She said giving him a puppy dog pouty face.\n\n\"She... she and I were together for years, she was my first love.\"\n\n\"Oh?\" She said a little worried about where this was going now. \"Your first love?\"\n\n\"Yeah, we were very close but things... ended.\"\n\n\"Well, I can see that, what happened.\"\n\n\"Look this is tough for me so.\"\n\n\"I'm sorry, I didn't mean to push, I am just curious about this girl.\"\n\n\"It's just, she had problems, and these problems basically ended our relationship.\"\n\n\"Really? How so?\"\n\n\"She was a bit if an alcoholic.\"\n\n\"Woah really?\" She said thinking about when she and Rick saw her walking out of a bar drunk off her ass.\n\n\"Yeah, it got pretty bad, I tried to help her but...\" he said with a long pause after and she could see it was difficult for him to discuss.\n\n\"You can't help someone who doesn't want to be helped.\"\n\n\"I know, but I feel like I should have done more. Anyway, I gave her an ultimatum hoping it would finally get her to clean up but it didn't work, and when I first saw you a part of me thought you cleaned your... I'm sorry I mean cleaned herself up finally.\"\n\n\"I see.\"\n\n\"Sorry, this is all deep stuff I didn't think I'd get into tonight.\"\n\n\"What did you plan for tonight?\"\n\n\"I didn't, I really didn't have a plan, I usually just hope for the best I guess.\"\n\n\"Huh, if you skipped to the sex part you'd reel them in easily.\"\n\n\"Yeah not that easy, but hey you said you'd tell me something about you.\"\n\n\"Oh, you don't want to hear this.\"\n\n\"I really do.\"\n\n\"No, we've had enough feelings for tonight, why don't we move on to round two?\" She said rolling over and kissing him again.\n\n\"Hey, we had a deal, besides I may need some time before...\"\n\n\"I have a trick that might help that.\"\n\n\"Tempting, but we still had a deal.\"\n\n\"Fine, it's just... it was a long long time ago.\"\n\n\"Couldn't have been that long.\" \n\n\"You'd be surprised, I'm older than I look.\"\n\n\"Oh really, do you bathe in the blood of virgins?\"\n\n\"Ha, I mean um... well his name was Sebastian, and we... he was the love of my life.\"\n\n\"Really?\"\n\n\"Yeah, and he was... taken from me.\"\n\nNessira stopped as she thought about the man she knew over 200 years ago. Patrick stared at her as she was silent but he could tell she was deep in thought. He reached over and took her hand and suddenly saw something very strange like he could see through Nessira's eye's back when she was known as Nessira the Red Witch of Raven Hill. She lived in a small house with a man she had fallen in love with and was happy. It was the only time in her life when she was happy and had actually opened her heart to someone. \n\nShe had met him after he had been injured by a pack of wolves while out hunting one day. He was strong enough to fend them off but not without sustaining major injuries. As he laid on the ground in the forest bleeding and weak with a pile of dead wolves next to him he suddenly felt the hand of a beautiful red-haired woman on his shoulder. He didn't know how but he was suddenly in a house being bandaged up by this woman who used some sort of magic to heal his wounds. It was love at first sight for the both of them and they were together for many years. Nessira had placed a protection spell on him so she would not drain his life force and they could enjoy each other's embrace nightly. Lilith would check in on her often and was glad to see Nessira so blissful and happy. That would all come to a horrible end one day.",
        "Patrick could see all these things and it was very strange and he wasn't sure how it was happening. He saw how she would supply simple natural remedies for the people of a nearby village because it was Sebastian's hometown and if she had to feed she would go miles away and try not to hurt anyone they knew or cared about, but one night some of the friends and family of her victims found her home while she was away. \n\nNessira returned home to find it burnt to the ground. Her heart sank as she ran in to find Sebastian hung from a nearby tree with stab wounds long dead from his injuries. Written on the tree in Sebastian's blood were the words \"you're next witch.\" It was the worst day of her life. He then saw her going on murdering rampage killing an entire village of people who had done this. After that, she even went on to destroy the village she had been helping as her heart was broken and she didn't care about anything or anyone anymore also blaming them for not saving her love.\n\nTears began to run down her face as she remembered all of this. Patrick even saw when Lilith was holding her in the middle of a burning village. Dead bodies lined the surrounding area, bodies of men, woman and even children everywhere. Nessira bawled her eyes out in the comfort of the only mother figure she had as Lilith was heartbroken watching her suffer like this. She ran her fingers through Nessira's fiery red hair trying to comfort her the best she could and let her cry in her arms.\n\nOver time she had hoped Nessira would learn to love again but as the years went by she saw this once precious girl had changed. She would not go in killing sprees but she would delight in torturing men in their sleep showing them pleasures that would be considered sinful before snatching their life away. She took joy in taking lives and not caring who got hurt along the way. For years this went on and Lilith had no choice but to watch this once sweet girl whose heart had been tainted by rage and vengeance become a monster.\n\nShe had no choice when she took the woman whom she loved like a daughter and trapped her in a statue for over a century. It broke her heart to do it but she hoped that one day she would learn to love again and heal from her emotional wounds. Like Vampires, Succubi sometimes take long rests to escape the world for a time. While Vampires sleep Succubi and Incubi do it in the form of statues but Nessira needed to be placed in this rest by force and could not be released easily.\n\nPatrick pulled his hand away and tried to process what he had just witnessed. \"Holy shit, what the fuck just happened?\" Patrick said as Nessira sat there silent until he finally said: \"Nessira are you alright?\" \n\n\"Do you miss her?\"\n\n\"What?\"\n\n\"Do you miss her, Jenny I mean?\"\n\n\"I... sometimes I guess, I mean I haven't seen her in years and who knows she may have cleaned herself up by now, but what was all that, what are you?\"\n\n\"Isn't it obvious by now?\"\n\n\"You're a... it doesn't matter, whatever you are I... It doesn't matter to me.\"\n\n\"Don't do that.\"\n\n\"Do what exactly?\"\n\n\"I am not Jenny, she's gone and she's not coming back.\"\n\n\"I never said you were, why are you acting like this, what's wrong?\"\n\nNessira suddenly realized she had made a mistake. She was starting to like Patrick more than usual and she still wasn't even sure why. There was something about him that she couldn't help but fall for and it suddenly hit her. She was in Jenny's body and even though Jenny was gone it had to be something residual from her memories or something like that because she was his first love. There was no other explanation she could think of at the time despite the fact she could see something familiar in Patrick that she couldn't quite comprehend. She knew what she had to do but first she had to take care of something.\n\n\"Listen to me, Patrick.\" She said turning towards him. \"I am going to give you a gift.\"\n\n\"I don't think you owe me anything.\"\n\n\"No, I am going to give you the gift that nobody ever gave me.\"\n\n\"Okay?\"\n\n\"And I hope that before I... I hope one day you can forgive me, even if you don't realize it, even if it doesn't matter to me.\"\n\n\"Nessira whatever you've done, trust me when I say in time everything can be forgiven, you have to know that.\"\n\nShe looked into his eyes for a second before she said: \"you're making this more difficult.\" She wiped a tear from her eye as this was getting harder for her to do but she knew she had to so she said: \"thank you for everything, but this was never going to work, that version of me died a long time ago.\"\n\n\"Nessira?\"\n\n\"Obliviscatur\" she said before giving him a kiss.\n\nPatrick enjoyed the kiss for a moment tasting her one last time before he awoke back in his apartment confused but not even sure what had happened. He suddenly didn't remember anything that had happened since before the first time he walked into the store. Nessira the store or anything that had happened the past few days was gone from his memory. He wasn't even sure how he got home or where he even was before. He sat in his bed naked and confused by what was going on even though he wasn't even sure something was going on. It was morning and didn't take long for him to shake off the strange feeling before he got up, showered, and got ready for work.\n\nBack at her place, Nessira was in tears which is something she hadn't done in a very long time. She went from sad to angry very quickly and got up walking into her enchantment room and grabbed an empty jar. She looked at it and opened up her spell book and looked up the proper spell to fix this current problem she was having.\n\n\"I can't do this again, I'm sorry Jenny but this has got to be your fault so this has to be done.\" She said before she placed her hand on her chest and started repeating the words \"et interficiam cor meum\" over and over again before her chest began to glow. A ball of light came pouring out of her and into her hand and a few seconds later it began to take shape until she had her own still-beating heart there in front of her. She smiled and placed it inside the empty jar as she started to feel better already.\n\nNessira dried her eyes as she no longer was feeling the pain she was before and said \"that's better.\" As she turned and walked out of the room locking the door behind her.\n\nThe heart stood in the jar still beating in the as Nessira went to bed. She felt better and was happy that this whole situation with Patrick was over. What she didn't notice before she left the room was the small crack that had formed on the side of the heart. It was getting bigger but not fast enough to notice at first.\n\nThere was a blue flash of light in the corner of the room as Lilith appeared after watching all that had transpired. She walked over looking at the jar with the damaged beating heart inside as she shook her head disappointed in what she had seen. She wiped a tear from her own eye feeling heartbroken that Nessira was still this way.\n\n\"You foolish girl.\" "
    ],
    "authorname": "maestro84",
    "tags": [
        "succubus",
        "second date",
        "succubus sex",
        "magic",
        "magic kiss",
        "tragedy",
        "witch",
        "revenge"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/liliths-emporium-night-w-nessira-ch-02"
}