{
    "title": "The Commander Ch. 05",
    "pages": [
        "This is my first erotic story -- I welcome all feedback. \n\n---\n\nParis was a fantastic long weekend. We stayed at the Raphael Hotel near the Arc de Triomphe. Boissy's Caf\u00e9 was a big hit on Friday night -- our waiter remembered us from the last time Jet and Fiona were there. More likely, he remembered Fiona. We had a fabulous meal that, in true Parisian style, took hours to serve and enjoy. The Seine River boat cruise on Saturday night was even better. We had a small luxury yacht all to ourselves with a seven course dinner served on fine china and silverware while we sailed lazily down river through the heart of Paris and back over five hours. A crew of at least twelve catered to our every whim, including an on-board sommelier who paired each dinner course with its own wine. A tinted overhead glass canopy on the yacht let us watch the sights drift by while we sipped and dined, but the privacy tinting preventing onlookers from peering inwards. \n\nFiona was enthralled by the opulence and attention. \"I could really get used to this,\" she smiled as our privately hired yacht pulled into its final moorings. I silently agreed wholeheartedly.\n\n\"To the one percent,\" I toasted, clinking my crystal glass of Louis XIII Remy Martin Cognac to Fiona's 1982 Dom P\u00e9rignon Champagne. Her exquisite blue eyes sparkled in magnificent reply as we drew the last sips of our aperitifs. If I had to pin it down the exact moment, it would have to be that instant when I gazed into Fiona's eyes. It was then I began to understand Fiona's beauty transcends her stunning appearances. Beauty precariously incubated somewhere deep inside Fiona, and like a fragile seed, with the right nourishment and tender cultivation, Fiona's beauty blossomed into an unpretentious brilliance that bewitched everyone around her. But without devoted caretaking, Fiona's inner beauty withered and faltered, as it did under the old Jet. \n\nIt was on that evening I began reflecting upon King Arthur's Court of Camelot -- 'might for right' instead of 'might is right'. That was the moment I began to question my mind-transfer motives. Supposing I could use my power for good? Supposing I started with Fiona? Supposing I am saying that night was the first time I felt a compelling desire to be the guardian devoted to nourishing, cultivating, and protecting Fiona's beauty \n\nLest you fear I was going limp, I had no intention whatsoever of giving up mind-blowing sex with lots of women. It is just that I discovered within an undeniable stirring toward Fiona. After all, I was invincible, and I could have it all. \n\nWe took all of Sunday to walk just three miles from the Champ de Mars where the Eiffel Tower stands, through hundreds of the little streets and alleyways, ending up at Saint-Michel, not far from the Notre Dame Cathedral. We stopped at two of the hundreds of cafes along the way and enjoyed caf\u00e9 cr\u00e8me, baguettes, cheese, pate, and sweets. Countless boutiques captured Fiona's attention along our walk, but we were on foot, so she limited her shopping spree to things we could easily carry. That night in the Latin Quarter we found an authentic Greek restaurant where they actually tossed plates to the floor. For hours a few men working at the restaurant, who seemed to have no other purpose, smashed hundreds of plates. Late in the evening the men got up and danced around their pile of broken tableware, and soon invited Fiona to join them. Even wearing casual Jeans and a sweater, Fiona turned every head in the crowded restaurant while she laughed and giggled in a nursery-rhyme-like circular dance around the rubble while holding hands with men on either side of her who chanted Greek songs with vigor and pride. Everyone in the restaurant saw the same unpretentious beauty as I did when Fiona whirled around the broken plates with the unguarded innocence and abandoned delight of a carefree child. When at last she grew dizzy, Fiona returned to our table, leaving the love stricken men to call out \"Come back pretty lady!\" For that instant -- just that instant -- Fiona was bubbling with nothing but happiness -- at the restaurant -- at the dancing -- at the day -- at our trip -- at everything -- at life. I left a 400 Euro tip on a 200 Euro meal. You would have agreed that was an amazing deal in my favor had you seen Fiona's face that night. \n\nOn Monday we visited the Louvre. A proper viewing probably requires days, but we just stayed a few hours before we walked up the hill to Montmartre and toured the Basilica. Late in the day we took a taxi to a back street off Rue de Grenelle, not far from the Eiffel Tower. From my former life I knew of a tiny, impossible-to-find restaurant called Le Petit Paname (The Little Paris). No foreigners ever go there, but we at last found it (there are no signs for it), and we enjoyed a genuine French meal void of all the tourist trappings. There was no menu, no prices. We sat down, and over the next four unhurried hours, they served us quite simply the best meal I have ever tasted. \n\nWe caught our on-time flight on Tuesday morning and touched down Stateside Tuesday afternoon. I never had occasion to skip anyone else on our trip, although I did skip Fiona for the flight back home. Not that I could have skipped anyone in Paris anyway -- I was pretty sure I could not coherently connect with a French speaking person. My only concern was the passport check when we landed in Paris -- the check-in agent on our flight leaving America refused to board us, claiming Fiona's passport, while valid, was technically inadmissible to the EU. The boarding agent changed her mind after I skipped her. The customs official at Charles de Gaulle Airport didn't even notice the discrepancy, and he stamped our passports robotically. \n\nFiona and I made tender love every night in Paris, and every morning she kick-started my day with a deep throat blowjob. We had no three- or four-ways. It was just us. \n\nI gave Fiona a secret gift only I could offer during our car ride to the airport. I skipped her, and told her she would remain calm and relaxed, and she would not be nervous or scared about flying. It worked like a charm. As we lifted off runway 27L at Charles de Gaulle airport, Fiona took my hand, and with a heartwarming smile she told me that was the nicest weekend she ever had. \n\nFiona watched a movie on her business class entertainment system while I listened to Jet's iPod. Jet and the former me shared a small cross section of musical tastes, like Weather Report, Santana, and Dallas Green (City and Color). While I let the music weave through my thoughts, I mentally compiled a list of questions I needed answers to.\n\nWhat does Jet do? I thought he had a job, but no one has been calling to ask him where he has been since I jumped him. His financial papers don't show employment income.\n\nDoes he have social activities (sports, hobbies, friends, whatever) that will notice his absence?\n\nHow does Jet pay his bills? I just racked up over $50,000 this weekend on credit cards, and I needed to pay them off.\n\nHow did Fiona and Nicole really happen upon each other after our night at The Arc? It seemed too convenient they just bumped into each other only two days later. \n\nWhere does Jet keep his sex toys? I picked up BDSM memories from both Jet and Fiona during separate jumps, but I never found any equipment in the condo.\n\nWhat secrets does Jet have that can hurt me? He was cheating with at least one other girl -- were there more? He blackmailed Fiona into sexual slavery -- does he have a sordid or even criminal past that can catch up to him, and me?\n\nWhy isn't Jet doing anything with his money? He has millions just sitting in bonds and mutual investments, and one investment property, but he is not really making his money work for him. Is he lazy, financially stupid, risk-adverse, or are there mitigating circumstances I hadn't yet discovered?\n\nHow did Jet learn about Fiona's dash cam evidence if she wasn't even aware she had been in an accident? Did he review her dash cam videos every night? Was there damage to the Mercedes that caused Jet to investigate? \n\nBut one question came back over and over again. Every time I pushed it aside, it infiltrated the fibers of my conciseness, and wormed its way back to question number one.\n\nIs Fiona's twin sister identical, and if not, is she as smoking hot as Fiona?\n\nI had won a bet with Fiona, and my bounty was a three-way with her twin sister. I did my best to focus on just Fiona in Paris, but on the return flight I found myself obsessing on the imagery of doing two Fiona's at once. While listening to Bird Land, I started crafting a plan that would act on all my goals. \n\nWe arrived at our condo at six in the evening, which was midnight Paris time. We stayed up a few more hours to reacclimatize our body clocks to our native time zone, but by nine we were both dead on our feet, so we went to bed. As so often happens after transatlantic travel, we both woke up around four in the morning with our biorhythms straddled somewhere between Paris and our home time zones. \n\nFiona picked up a magazine and I downloaded a Michael Connelly book onto Jet's tablet. We both read in bed for about an hour. Fiona put down the magazine, turned off her bedside light, rolled over, and waited for sleep to overtake her again. Before she drifted off, I gently touched her shoulder and skipped her. \n\nI told Fiona she would answer all my questions, and she would not remember this conversation. I started with my list of questions from the airplane. \n\nI learned Jet has a job ... sort of. He started his own investment advice company, but Fiona didn't think he had any customers. I was not surprised based on his vanilla investment portfolio. She said there was an actual office somewhere -- she didn't know where the office is -- she had never been there. \n\nJet plays pick-up basketball on Thursday nights, but he was not a league where his absence would be noticed. I don't know basketball, so I Jet had seen his last free throw. He had a few friends that he never introduced to Fiona. I would have to wait for them to call me.\n\nFiona had no idea about Jet's finances -- he never discussed them with her. She had no idea of Jet's worth.\n\nNicole had walked up to Fiona in the parking lot of a shoe store. It hadn't occurred to Fiona that Nicole might have manufactured the coincidental meeting. That was a dead end. \n\nJet has a storage room in the garage of the condo building -- Fiona has never been in it, but she suspects Jet keeps all his sex toys there. I found that curious, as it indicates a certain amount of premeditation and planning to begin a BDSM scene. It takes all the spontaneity out of it. \n\nFiona didn't even know about the dash cam until Jet showed her the video. Apparently Jet had the factory installed rear view mirror replaced with a mirror with an embedded dash cam before he first gave the Mercedes to Fiona. That implied an obsession with a dominant control over Fiona -- I suspected the old Jet routinely viewed the dash cam videos, probably to spy on Fiona, and he likely happened across the accident while reviewing her videos. That implied there may be other clandestine recording devices I need to be alert to.\n\nI saved her twin sister to last. Yes, she is identical. Jocelyn lives in San Antonio, Texas near where Fiona and Jocelyn grew up. She is divorced without kids. Fiona regretted making that bet, because, while identical in looks, Jocelyn is the opposite personality of Fiona -- Jocelyn is conniving and manipulative. Fiona was convinced that, just when Jet seemed to be turning into a nice guy, Fiona will lose Jet if Jocelyn entered the picture. \n\nFiona has a lifetime of memories of Jocelyn always getting her own way through charm and sexual deception. It was not so much a way to advance her status or fortune, but more of a game -- a one-upmanship sport with a trail of broken promises and crushed hearts as trophies. Jocelyn had stolen Fiona's boyfriends before, and then just dumped them afterwards, for no other reason than she could.\n\nFiona was worried that Jocelyn expressed an unhealthy interest for Jet, even going so far as asking Jet if he ever wanted to have a three way with twin girls the first time Jocelyn met Jet. Fiona was convinced that, if Jocelyn ever stole Jet away, she would bleed his money dry and then callously toss Jet into her deep pile of relationship carcasses. \n\nFiona confessed Jet's money and divine cock were major factors in Fiona's initial attraction to him. After Jet blackmailed Fiona to service him, she hated Jet. Since Jet's transformation, she has felt an increasing desire to make the relationship work. Jocelyn threatens all that. \n\nBefore I unskipped Fiona, I left two post-hypnotic suggestions with her. From now on, every time she lied to me -- even little white lies -- Fiona would quietly, slowly make a gentle fist with her left hand, and every time I said the word \"fireplace\" she would blink twice. She would do these things without realizing it. When she said she understood, I told Fiona to lie down and go back to sleep. As Fiona started to drift off, I touched back of her neck and took away the skip. \n\nWhile Fiona slept the morning away, I searched the entire condo, inch by inch, top to bottom, but I found nothing that looked like a clandestine recording device. From my earlier life as a security professional, I was quite certain I hadn't missed anything. \n\nNext I rifled through Jet's office desk, and found a set of keys. I took the elevator to the parking garage, and started where the BMW was parked. As soon as I saw it, I realized I had missed its significance before. There, where the BMW was parked, was a sign marked '902' -- the condo unit number. I had always assumed the sign was there to reserve the parking spot, but I now realized the sign was mounted on a door painted the same color as the wall, and the BMW was parked at the door. Fiona's Mercedes was parked beside the BMW.\n\nI now realized the '902' sign identified the door to Jet's storage room. I pulled out the keys, and the third one I tried worked. Inside was a small concrete room with no windows -- about six by eight feet. Along one side wall and the back were shelves with boxes and plastic tubs. Along a third wall was a table. \n\nI turned on the light switch and closed the door. There was a laptop sitting on the table. Also on the table was a WiFi wireless hub with wired ports, and I traced an Ethernet cable to a high capacity industrial data server sitting underneath the table. A battery backup power supply protected the equipment against power failures or voltage spikes. From my security days I knew this was a serious set-up. The data server alone cost over ten thousand dollars.\n\nI tried logging in to the Windows laptop computer, but the account was password protected. Using an old trick, I rebooted the laptop computer and brought up the hidden administrator account, and tried logging into it using 'Admin' as both username and password. It was a lazy shortcut many security illiterate people use when they first set up their computer. It worked -- I was in as the root administrator, giving me access to every file in the system. \n\nThe laptop seemed to have no other purpose than to access the file server. Browsing through the files, I realized they were proprietary file types -- I didn't recognize the three-letter suffix. I double clicked on one at random, and up popped a dash cam video viewer application. The interface was more complex and informative than the video I saw on the memory chip. In addition to the exterior and interior videos, there was also a real-time map, presumably displaying the GPS encoded position of the car at the time the video was taken.\n\nI closed the application, and then browsed through all the files, and paid close attention to the date stamps, and that is when I got worried. There was one date stamp per day -- and the most recent ones came from just before we went to Paris -- long after I jumped Jet for good. \n\nThen I got it. There was a WiFi hub in this room, and both cars were parked on the other side of the door. Every night, the laptop connected to the dash cam using the WiFi, and downloaded the videos from the past 24 hours. The dash camera likely recorded only when the car is turned on, and that explained why there were some days with no files -- the car sat in the garage all day.\n\nI thought back to the time I leaped from Jake to Fiona in the spa parking lot. I remembered the Mercedes top was down -- the rearward facing camera probably saw Jake approach Fiona from behind and touch her. Then I thought to when I released her later that night in a parking lot down the road -- that was the real me! I might be on Jet's video collection. I worked backwards in my mind, and reconstructed the date that happened. I pulled up the video file from the morning after, and I sped through the dash cam video in ultra-fast forward. When I got to the spa parking lot, I slowed down to normal speed. And there was Jake -- clearly identifiable, walking up to Fiona, touching her, they talked, and then Jake went around the back of the car and got in the passenger side. I sped forward to Jake's apartment building, and then the video jumped to Fiona getting back in the car and driving home to her condo. Next the video cut to Fiona getting in the car, but it was dark. The roof was closed. She drove to a parking lot. She got out of the car. The video jumped again, and Fiona was in the car and lowered the driver's window. Someone was outside the car, I couldn't see who it was, but a voice distinctly said \"Sleep for a short while,\" and Fiona fell asleep. I saw an arm reach in, touch Fiona's arm, and the arm disappeared out the window. Finally, I saw a car pull around behind Fiona's car and honk the horn. Fiona stirred, and the car drove off.\n\nIf the old Jet saw this he would have gone ballistic -- he certainly would have confronted Fiona with it. By then Jet was probably still reeling from the emailed video from The Commander and his crushed baby finger. Is it possible he stopped looking at the dash cam videos during that time?\n\nI noticed the laptop had a file shredder icon on the Windows desktop. I dragged the video file icon for that day's dash cam video to the shredder, and permanently deleted the file beyond any hope of restoration. \n\nThen I looked for the video file on the day Fiona had her accident with the boy on the bike. It was still there. I dragged the file to the shredder. I looked for back-up and archive copies of the files, and deleted the corresponding files there, removing every copy I was aware of. \n\nFinally I looked for the day Fiona met up with Nicole while shopping. I found nothing unusual in that video, but I was still suspicious at Nicole's coincidental meeting. \n\nI finished with the laptop, and went through the shelves. I found Christmas decorations, hiking and camping equipment, ski equipment, old books, an electronic musical keyboard, some vases, lamps, and other small furniture, and a large locked wooden box. On my keychain I found the key to the padlock. An impressive collection of BDSM equipment lay inside: collars, metal handcuffs, leather cuffs, binders, spreader bars, blindfolds, gags, mouth rings, nipple and labia clamps, chains, ropes, belts, tape, harnesses, two yokes, whips, paddles, candles, and a few things I didn't recognize. I also found the white cattle prod I recognized from Fiona's memories, as well as a smaller black one, a remote controlled dog training shock collar, and a taser. What kind of sick sex was Jet having with a taser?! A smaller plastic box held dildos of various sizes, shapes, and colors. I noticed no but plugs -- Jet must have thrown out the one he used on Fiona.\n\nAt least half the items were unopened in their original packaging. There had to be thousands of dollars' worth of BDSM equipment, and most if it was brand new. ",
        "With a few mysteries solved, I locked the box back up, turned off the light, and left the storage room, locking the door behind me. Back upstairs, I went through Jet's financial papers, and found print-outs of internet banking receipts -- it looked like that is how he paid his credit card bills. Another mystery solved.\n\nI came across more documents with Jet's signature on them. I took out a blank piece of paper, and practiced Jet's signature. I had done this already for Jet's credit cards, but I was planning to sign some serious documents, so I trained my Jet signature again. It was hopeless at first, but within ten tries it was a pretty good facsimile. By twenty, I couldn't tell the difference between mine and the old Jet's signature. I threw out the practice signature paper. \n\nI made some coffee, and about 9:30 Fiona woke up and padded into the kitchen with her hair hopelessly mussed up. She was wearing the same nightshirt she wore to bed the night before. \n\n\"Morning,\" she kissed me.\n\n\"How you feeling,\" I asked her, thinking about the jet lag. \n\n\"Horny,\" she replied with a cute smile. \n\n\"I know a cure for that,\" in my best matter-of-fact tone.\n\n\"How about you cure me in the shower,\" she played along in her I-don't-care tone as she poured herself a coffee.\n\nI followed her into the bedroom where she put aside her coffee mug and pulled her nightshirt over her head. I started undoing my belt when she walked naked toward me and squatted down. She unfastened the button on my jeans and unzipped. Pulling my jeans and underpants partway down, Fiona took me into her mouth and sucked as I felt myself hardening inside her. When I was firm, she deep throated me while I multitasked and unbuttoned my shirt while I watched my whole ten inches disappear through Fiona's lips. \n\nShe drew away without a word and walked into the adjoining bathroom, leaving me with the sight of her lovely ass as I pulled off my own jeans. I heard the water running, and I found Fiona testing the shower temperature with her hand. From behind I cupped her breast in my left hand and fondled her ass with my right. Fiona bent forward slighting, pushing her ass against my hand, and I slipped my middle finger down her ass crack while I continued to massage her left breast. \n\nWhen the water reached temperature, Fiona straightened up and broke contact by walking forward into the oversized shower stall, standing under one stream of water. I followed, stood under the other stream and closed the glass door. We embraced in a long hug as we massaged each other's shoulders under the dancing water drops. \n\nI pulled away, slowly spun Fiona around so I stood behind her, and I reached around and gently caressed both breasts. She turned her head to meet mine, and we kissed passionately for a long time. At last I slipped my right hand down her tummy to her groin, and I started massaging her pussy. Recognizing my intent, Fiona widened her stance and braced herself against the wall with her left hand. I repositioned myself so that I stood beside Fiona, facing her right shoulder, giving my right hand more leverage to reach its blissful quest. She reached down with her right hand and started jerking me off, synchronizing her strokes to my massage thrusts. \n\nAs I continued bringing Fiona closer to heaven, I bent forward and began suckling her right nipple. She groaned in appreciation, and I felt her hips gently rock against my right hand. I increased the pressure and cadence of my massage, and Fiona matched my up-tempo with her jerking of my cock. After about five minutes she started heaving her breasts -- Fiona was getting close. I put my massaging hand into overdrive and pulled my fingers into her pussy even harder, knowing I was pushing her over the edge. Fiona lost focus on my cock as she felt the eruption forces building. \n\nWhen I felt Fiona start to explode, I changed my suckling to a sharp bite of her nipple between my front incisors. Fiona cried out as the nipple pain and clitoral rapture coalesced into an orgasmic ecstasy that overwhelmed her nervous system, throwing her whole body into a tremor. I wrapped my left arm around her waist for fear she would fall down. Her legs started to give out, and I reflexively kept her from falling by using the only leverage I had -- I pulled upwards with my right fingers that were already hard against her labia, and the sudden force of my hand drove deep into her clitoris, and I inadvertently sent Fiona over the edge a second time even before her first orgasm flattened out. Fiona thrashed her head backward and unleashed a long, uncontrolled wail as she utterly surrendered to compounded orgasmic convulsions. At last Fiona steadied herself without my assistance, and she returned to earth under the warm blanket of the shower water.\n\n\"Oh my fucking God,\" Fiona hoarsed out a whisper. \"That is the most amazing orgasm I've ever had.\"\n\nAfter her breathing steadied, I positioned Fiona with her butt against my cock, then I bent her forward, and told her to steady herself with her hands against the shower ledge. She kept her back straight to maximize the upward angle of her pelvis, and then invitingly set her feet wide apart. I entered Fiona's pussy from behind slowly, gingerly, until her natural lubricants permitted me to fuck her more powerfully. Fiona went up on her toes, as if she was wearing high heels, increasing the angle of her pelvis again. Her tight pussy was making short work of my endurance, especially after she had been jerking me for most of the time I massaged her to orgasm.\n\nAs I felt my balls start to churn, and I knew I was passing the point of no return, I gripped Fiona's hips harder. That was the signal she was waiting for, because Fiona suddenly pulled forward and stood up, leaving my unfulfilled dick hanging in the shower. In a single, graceful motion, Fiona spun around halfway and crouched down at the same time, executing a corkscrew maneuver, finishing with my cock in her mouth. I was yearning to explode. Fiona sucked and hand jerked a few times until I could hold back no longer. She went deep -- up to my balls -- the instant I started unloading into her mouth. She wrapped her arms around my ass and pulled me in harder against her face, burying my cock even deeper while I pumped wave after wave of jism down her throat. When at last my balls spent their last load, Fiona pulled out, and still in her crouched position, smiled up at me with those big blue eyes, and slowly, deliberately planted a hundred delicate kisses over every millimeter of my cock while the shower rained warm water down my back. \n\nAfter a minute of her cock worshiping kisses, I gently guided Fiona to stand facing me so we both felt the warm shower against our backs, and then we embraced each other, rocking side to side almost imperceptibly, for a very long while. At last we broke our embrace and returned to the mundane showing tasks -- we shampooed, lathered, rinsed, and stepped out of the shower and dried off -- all without speaking a word.\n\nAs I shaved, Fiona started brushing her hair. I broke the comfortable silence when I told Fiona I needed to get some work done today, and I was going out. She said that she we needed groceries, and then she was meeting a friend for lunch. While Fiona was getting dressed and putting makeup on, I dressed and then retrieved the relationship agreement and will from the wall safe. I left the condo, and from my car I called Gerald Torney -- a lawyer I used in my old life years ago when I had my own security business. I introduced myself as Jethro Terrance and explained I had a will and prenup I wanted to change, and could I come in this afternoon. I explained that I had been referred to him by Don Malloy. Gerald had a two o'clock free. \n\nThen I phoned the hospital -- there was both good and bad news in Don's condition -- he was responding to the heart infection treatment, but his blood chemistry started to show signs of liver impairment. The end was beginning. There was no change in his persistent unconsciousness. Don was still listed as stable, so there was no action required on my part.\n\nI ran some errands in the morning. When I met Gerald Torney that Wednesday at two, he asked me how Don is doing. I explained Don was not well -- he had pancreatic cancer and was in a coma. Gerald seemed saddened to hear the news, but admitted he and Don had lost touch years ago. Gerald then seemed confused -- how long ago did Don make the referral? I told Gerald it was about a year earlier, but I had only now decided to take action. \n\nI showed Gerald my documents. I explained what I wanted to do, and he said that would be straight forward. I understood the will might take some time, but I wanted the Relationship Agreement drafted as quickly as possible. Gerald looked at the one-page document, and said if I preferred, he could draft a new one while I waited. He asked why I hadn't gone back to the original lawyer who drafted these documents -- it would be cheaper. I told him that I had decided to make some changes, nothing serious. \n\nOn my way back home I checked in at Don's house -- my old house. I picked up the mail and paid the bills. I cancelled the newspaper subscription so they wouldn't keep piling up at my door. \n\nI got home around 4:30 on Wednesday. Fiona hadn't started supper yet. I told her I wanted to speak with her. We sat down at the dining room table.\n\n\"Now is probably as good a time as any to talk about your sister and our bet,\" I said flatly. Fiona shrunk in her chair as her shoulders fell inward. Her eyes sank to the floor. \n\n\"Do you really want to go through with this?\" she grumbled, knowing the answer already.\n\n\"Yes,\" I said, \"and I think you will too.\"\n\n\"I wish I hadn't brought her up. I never thought you'd win that stupid bet.\" I resisted the temptation to go down that path. Lecturing Fiona on the virtues of betting only what you can afford was not going to win me any points. \n\n\"As you know, the one thing I value is keeping promises. A bet is a promise.\" I let that hang there.\n\n\"I know,\" she sulked. \n\n\"Fiona, tell me what bothers you about this. We've done three-ways before. What's the difference this time?\"\n\n\"There's no difference ...\" she paused. I noticed her left hand gently close to a fist. \n\n\"There's something you're not telling me, Fiona.\" I know I could have skipped her into doing this, but I that was short sighted. I was playing a long game that could end well for Fiona, for me, for us. I wanted her to speak next, so I just waited. \n\n\"You don't know my sister,\" Fiona said at last.\n\n\"What about her?\" I was sticking to open ended questions -- make her break the ice. It was part of my long game.\n\n\"It's just that she ... she ...\" Fiona couldn't continue as a lone tear tracked down her cheek. She shuddered for a moment.\n\n\"There's something about your sister that scares you,\" I helped. Fiona nodded. \"Tell me what scares you.\" Fiona sat for a very long time, now tears flowing down both cheeks. At last she blurted out her words, her voice trembling.\n\n\"You're going to think I'm a stupid blonde. You're going to think I am just jealous. But that's not it, and you won't get it. If I tell you the real reason, you won't believe me, and then then I ... I ...\" she couldn't say the actual words. Fiona buried her face in her hands.\n\n\"You will what.\" I waited. \"Fiona, you need to say it.\"\n\n\"I will lose you!\" she shouted. And now it broke wide open. She dropped her guard, and spit venom at me. \"You've been such a fucking asshole for so long. God, you have no idea how many times I wanted to walk out, but that fucking accident video, and so I'm fucked. I'm just fucked. I just have to lie back and let you fuck me -- let you fuck other girls -- you don't even try to hide it. You never satisfy me -- ever, you fucking prick. You make me sign a prenup that fucks me up the ass, because you never will -- And all of a sudden,\" she threw her hands up in the air and raised her voice an octave, \"you change! You hammer your finger flat for me -- you care about me -- you erase the video -- you give me a choice -- you make me cum because you want to -- you turn into some Energizer Bunny super-stud -- we do fun things that you never used to -- you talk to me like I matter to you -- like you care -- we do real couple things together -- we have a weekend in Paris that rock stars only dream about -- and I actually start to like you -- I really like you,\" and she sobbed \"and now I'm going to lose you and you won't believe me.\"\n\nShe looked at me with hopeless resignation in her red, puffy eyes. Fiona believed everything in her tirade, including the part about me leaving her. Either she reneged on the bet, which is a broken promise, or Fiona lets Jocelyn in on a three-way, who then manipulates her way into my heart. In Fiona's eyes, I was already gone, and I was the last one to know it.\n\nI replied with no emotion \"your sister is a cunt who wants to get between us just for kicks.\" There it goes again -- her jaw dropped wide open. \n\n\"You ... how ... but if ...\" That was all.\n\n\"Look, Fiona, it's obvious,\" I said shrugging my shoulders. She rolled her eyes, not at me, but at herself for being so stupid.\n\n\"So, you still want to ... I don't understand.\" Her mind was whirling.\n\n\"Fiona, let me start with this.\" I waited to make sure I had her attention. \"I promise -- you know what that means,\" she nodded in understanding. \"I promise you will never lose me because of your sister.\" A ten ton weight melted off Fiona's shoulders -- she literally sat up six inches taller in her chair.\n\n\"And you still want to do this?\" She asked with deep skepticism.\n\n\"Yes, and so do you,\" I answered confidently. She opened her mouth to speak, but when nothing came out I continued. \"Fiona, this is what will happen. You sister will fly up here. We'll have a blast together, but it will be on your terms.\"\n\n\"I ... what does 'my terms' mean?\" \n\n\"It means if you want your sister to treat you with respect and doting admiration, and call you 'O Mistress of the Universe', then she will.\" That brought out a big smile in Fiona -- I could see the wheels turning.\n\n\"Anything I want?\" asked Fiona with more curiosity than skepticism now.\n\n\"If you want her to bark like a dog while wearing a men's jock strap, then guess what Jocelyn will be doing?\" I was rewarded by a big laugh. \n\n\"And why do I 'want' to do this, like you said,\" she asked.\n\n\"One word,\" I offered. \"Payback.\" I watched Fiona smile at the possibilities, and then it evaporated as the reality set in.\n\n\"Nice story,\" she said, \"but how am I going to ...\" \n\n\"You let me handle the 'how' part.\"\n\n\"You don't know my sister. You can't do it.\"\n\n\"Do you wanna bet?\" I asked coyly.\n\n\"NO FUCKING WAY!\" she shouted with smiling eyes. And then she paused before re-verifying \"You can really do this? You can make Jocelyn do anything I want?\"\n\n\"No, not everything. But I am pretty sure I can make her be nice to you -- to respect you like a sister should,\" I confirmed. After a moment's reflection, I offered \"how about this? I promise that, if I can't get Jocelyn to do this thing on your terms -- to be nice to you -- then you call it off. You say the word, and I will send her home before anything happens.\" \n\n\"What's in it for you?\" she asked.\n\n\"Are you kidding?\" I shot back incredulously. \"Do you know how smoking hot just one of you is?\" Fiona smiled warmly. Apparently Fiona had no inhibitions about the concept of a three-way with her own sister -- it was just Jocelyn she was worried about.\n\n\"Are we okay about this?\" I asked Fiona. \"I understand there are details to sort out, but are we okay in principle?\" \n\nFiona nodded. \"I don't really want payback,\" she reflected distantly.\n\n\"I know,\" I confirmed. \"You want your sister back -- the nice one you used to like.\" She stared at me expressionless, no longer surprised by anything I said. \n\n\"My life is so fucked up,\" Fiona sighed hopelessly, staring vacantly at the table.\n\n\"If you'll let me,\" I answered calmly, \"I would like to help you unfuck it,\" as I looked directly at her eyes, waiting for Fiona to lift her gaze from the table to meet mine. \n\n\"I honestly can't tell if you're an angel or the devil,\" she spoke flatly to me.\n\n\"A little of both, I hope,\" I smiled mischievously, but the double entendre humor fell flat. \n\nWe sat there in silence. I wasn't certain of the timing of my next step, but I had decided before starting this conversation that coupling these two topics together would deliver the greatest emotional impact, so I pressed on. \n\n\"All right,\" I segued, \"let's talk about our agreement,\" I said, as I pulled out the old signed Relationship Agreement from my jacket pocket, unfolded it, and put it on the table.\n\n\"What's that?\" She asked apprehensively. I had shifted gears on her quickly, and it yanked her off balance. That was my intention. \n\n\"That,\" I said, pointing to the paper, \"is the Relationship Agreement, or prenup, as you call it, that we signed.\" I took out the revised agreement Gerald drafted today from an envelope, and put in on the table beside the first one. \"This is the new one I am offering to replace the old one with.\"\n\n\"But, you won the bet,\" she said, more to remind herself.\n\n\"This isn't about the bet,\" I corrected. \"This is about us.\"\n\n\"What does the new one say?\" she asked.\n\n\"It is very simple. You should read it, but it says that if we break up for any reason, you keep everything I gave you, including the Mercedes, your clothing and jewelry, and you take away one hundred thousand dollars, and that's all you will ever get.\" I was waiting for the jaw drop, but she just looked at me blankly.\n\n\"Why are you doing this?\" she asked.\n\n\"Because it is the right thing to do,\" I answered honestly. \"And because I trust you.\" Also, I didn't say, because the old Jet was a total douche, and he owed Fiona at least that much, probably a lot more.\n\n\"So, let me get this straight,\" she continued. \"I can sign this new prenup tonight, leave you tomorrow, and I score a hundred thousand dollars, and keep everything you gave me.\"\n\n\"I wish you hadn't put it quite that way,\" I squirmed, \"but, basically, yes.\" I chose the hundred thousand dollar figure carefully. At a million dollars, I figured Fiona would take her chances and leave. She knew ten thousand dollars wouldn't support her life style for more than a few months, so that would have been an insult. One hundred thousand dollars let her start over if Fiona really wanted to leave, but she also knew there was much, much more money in it for her if Fiona stayed with me. \n\nI also knew Fiona would not dare to ask for a larger figure. She was already under a binding contract for absolute zero -- she had no bargaining leverage. She also had no idea how much wealth Jet had accrued. To Fiona, a hundred thousand dollars was a huge figure, and she probably overestimated its relative significance to Jet's net worth. She may even have assumed that was Jet's best possible offer. Even if she felt she deserved more money and knew Jet had more to give, Fiona was too emotionally disjointed from the first half of our conversation to stand her ground and risk me walking away from the table, leaving her back at square zero, or worse. I was 99% certain Fiona would accept the new proposal right away. \n\n\"And what do you get out of this?\" Fiona asked.\n\n\"Your happiness,\" I answered honestly. \"Fiona, I pray that you stay, but if things don't work out, I would never wish you to be unhappy. This helps you in that way.\"\n\nShe stared at me coldly for a long time, and then finally broke the silence. \"Who are you and what have you done with Jet?\" For the first time since I jumped Jet, I was completely flummoxed. Thankfully she didn't insist on an answer before she stood up and picked up the paper, walked away from the table, and read it by herself. I could see she read it at least twice. ",
        "A thought struck Fiona after she returned to the table and was putting the paper down. \"Wait!\" she cried. \"You were going to do this anyway?\" I nodded. She just realized she made her bet in the airport for nothing. \"You bastard!\" She smiled and started boxing me around the head, more with love taps than anything serious. I responded by standing up, wrapping my left arm around her waist, and pulled her in for a kiss while I fondled her left breast with my right hand. \n\n\"Hey!\" she yelled playfully, pushing me away. \"No touching until I sign!\"\n\n\"We need a witness,\" I remarked, \"so we might have to try abstinence for a while.\"\n\n\"Fuck that,\" she retorted. I thought she was joking, but she left the condo, leaving the door open using the deadbolt, and returned with our neighbor, Carl, in under a minute. She explained to Carl we had legal documents to sign, and we needed a witness. Carl seemed unfazed, so he agreed. We signed the document in triplicate (using my newly acquired Jet signature) in Carl's presence, and he witnessed our signatures with his own on all three copies. Fiona thanked him and walked him to our door, locking it after Carl left.\n\nAs she returned, I held up the old \"zero\" agreement to Fiona. She snatched it from my hand and ripped it up again and again and then threw the tiny shredded pieces over her shoulder with a smirk. \"Where were we?\" she asked, wrapping her arms around my neck and began kissing me again. This time I brought both my hands up and caressed her lovely breasts through her shirt. \n\nFiona broke away after a few moments and looked at me. \"Can I have some time to think about Jocelyn?\" I put my arms around her waist and replied of course she could. She hugged me for a long time, and then asked, still hugging me \"Did you change this prenup because you love me?\"\n\nI didn't want to admit it -- not yet. Believe it or not, I prepared myself for this moment -- it just came sooner than I expected. \"That's not the question I ask myself every night before I go to bed and every morning when I wake up,\" I said. She was learning to trust me a little more, so she was not concerned with my response, but she was curious enough to ask the obvious.\n\nFiona broke away from her hug and looked me in the eyes. \"What question?\"\n\n\"How could you ever learn to love me after all the bad things I've done to you.\" \n\nHer eyes welled up but she didn't cry. \"I'm trying, but it's very hard,\" she spoke softly. \"I like who you are now, but I'm still very scared of you. And parts of me are fucking angry at you. I need time.\"\n\n\"I know,\" I reflected. \n\nFiona hugged me again, and she whispered in my ear \"It might take a long time. Please don't give up on me.\" \n\n\"Let me help you, and I promise I won't give up on you.\" \n\n\"Okay,\" she agreed, and Fiona sealed the deal with a kiss my neck.\n\n--- Three Weeks Later ---\n\nAs I pulled into the airport short term parking lot, Fiona and I were talking about our first sky diving class we had just attended the night earlier. I wanted us to start doing things together outside of the bedroom. We discussed ideas a few times, and we eventually agreed sky diving was something we'd both love to try. The ground school was three evenings -- we had just finished the first class on Tuesday -- the night before.\n\nThere were about twenty people in the class. It was a typical classroom setting with desks and chairs in rows and a larger teacher's desk and a chair at the front. I noticed the instructor, a fit, short balding man in is forties, set a small potted plant on the corner of his teacher's desk before he brought the class to order. \n\nAbout an hour into class, the instructor was explaining how to pull the rip cord -- bring both arms in to your chest, grab the rip cord, and then pull both arms straight out. Then he told us how to deploy the emergency chute in the event the rip cord doesn't work -- reach behind your neck, grab the handle, and pull it up sharply.\n\nAt that point, the student sitting behind Fiona asked what to do if the emergency chute doesn't open. That's when the instructor walked over to his desk, grabbed his potted plant, and threw it straight down at the concrete floor as hard as he could, causing a thousand shards of pottery, dirt, and plant to explode across the front of the classroom. I could hear shrieks all around the classroom, and I saw Fiona put her hands up to her face defensively. \n\n\"Listen up!\" the instructor bellowed over the hubbub. \"This sport is dangerous -- it is not for the faint of heart, and it is not -- I repeat -- NOT -- for people who have trouble following instructions. If you are extremely careful every time, there is a good chance you will live. Those of you who think parachuting is the same as jumping on your bike and riding down the street should leave the class right now and get your money back, because after tonight you don't get a refund.\" I watched three people stand up, gather their belongings, and run out of the room, including the person who asked the question. They didn't return. Fiona and I stayed in our seats. \n\nAs I backed the BMW into the parking spot at the airport, we were talking about all sort of what-if's from the night before. What if the instructor had used a pumpkin or a watermelon that sprayed \"guts\" over everyone. What if they showed a video of a guy who pancaked into the ground. The conversation ground to an end as we stepped out of the car.\n\nJocelyn's San Antonio flight was routed through Chicago. We checked online before we left the condo, and it was reported on-time, and Jocelyn had texted Fiona confirming she made the flight. \n\nFiona took my hand as we walked through the parking lot to the airport terminal. We arrived at the baggage carrousel just as Jocelyn's flight touched down, so we waited about twenty minutes. I recognized Jocelyn the instant she stepped through the door from the security restricted zone. She was a true duplicate copy of Fiona. As the two women closed together for a big hug, I watched several passengers in the baggage area stare in amazement. One senior fellow, either genuinely or as a lark, took off his glasses, cleaned them, and put them back on. Everyone couldn't help but watch two identical, gorgeous, blue eyed, tall blonde girls loudly welcome each other in a hearty embrace. \n\nAs they turned walked toward me together, I was shocked at just how identical they were. I was expecting Jocelyn to be heavier or lighter, more or less tanned, or other subtle differences. I remember thinking thank God Jocelyn's hair was a few inches shorter, because without that, I feared I would have serious trouble telling them apart with their clothes off. As we waited for the luggage to loop around the carrousel, Jocelyn grabbed me in a huge hug and kissed me on the cheek. \"I knew you'd come to your senses,\" she whispered out of Fiona's earshot. I skipped her right there, and whispered back \"You will treat Fiona with respect and dignity the way a nice sister should. You will do everything I tell you to do. You will not ever try to steal me away from Fiona. And you will remember everything we do as being fun and as things you would like to do again.\"\n\nFiona shot me a look, wondering what we could be whispering to each other. \"Actually,\" I said loudly as I pulled back, \"this was Fiona's idea,\" referring to the bet she lost weeks earlier in this same airport. Later, at the condo, when Fiona had me alone, she asked what we were whispering about. I told Fiona exactly what Jocelyn whispered to me, and then I told Fiona that I whispered back that Jocelyn had to promise to treat Fiona with respect and dignity, or I would send her back home right there and then. I told Fiona I didn't want to embarrass Jocelyn by letting Fiona overhear me dressing Jocelyn down, and that's why I whispered to her. Fiona said she liked how I handled that. \n\nWe retrieved Jocelyn's luggage and walked to the car. I offered to let the girls sit in the back seat together to chat more easily, but Fiona declined, and sat in the front seat and turned her head back to talk to Jocelyn most of the time. While I drove to the condo, Fiona and Jocelyn caught up on several years the way only sisters can -- talking as if they had never spent a moment apart. Jocelyn babbled on about her house in San Antonio, how she was remodelling the kitchen, how she had just upgraded the bathroom with a Jacuzzi, and how she had the exterior completely landscaped. \n\nFiona, in turn, talked about our trip to Paris, the yacht ride, the five star hotel next to the Champs Elysees, the first class lounge, and on. I realized the girls were in a catfight over who spent more of their boyfriends' money. I stayed out of it and drove.\n\nI pulled into the condo underground parking as the girls were remembering Pete, a boy in their high school, and they were laughing hysterically at his crazy antics. Pete had released over 10,000 crickets into the school building one weekend. They had all dispersed into the crevices and ductwork by Monday morning, but students could hear the unmistakable sound of cricket chirping for years afterwards. And remember the time Pete welded Principal Badger's doors shut on his pickup truck? Or how about the time he broke into the girls' locker room during gym class, found out how to pull the entire assembly of metal lockers away from the concrete wall as one solid unit, and the lockers had no backing on them, so Pete simply reached into each locker and stole every girl's bra. Jocelyn had her bra stolen that day, but not Fiona -- she was in a different class. Jocelyn and Fiona roared about the three guys who asked Jocelyn out on a date that day after gym class!\n\nThe girls were still giggling as I opened the door into our condo. Fiona had ordered some Szechuan take-out before we went to pick up Jocelyn, so she put it in the microwave, and we ate dinner at the dining room table. I poured beer for everyone while Fiona asked Jocelyn the whereabouts and status of various people back in San Antonio. \n\nAfter dinner, the girls confided to me that they had conspired by email that there would be no three-way tonight. They girls wanted to prepare a special surprise for me tomorrow, which was fine by me. We stayed up and chatted about old times, about our lives, and about saving the world's problems as our self-proclaimed IQs inflated with each additional drink. \n\nAt two in the morning Fiona showed Jocelyn the pull-out sofa in my office, where she would sleep. I had installed an extra blow-up mattress earlier that day from the storage room to make the pull-out more comfortable. Fiona and I cleaned up the dishes while Jocelyn oriented herself to her temporary quarters, and soon after we all went to our own beds. \n\n\"That whisper you told Jocelyn sure worked,\" Fiona told me once we were in bed. \"By now Jocelyn would normally have made several mean remarks about me to make me look bad in front of you.\"\n\n\"I'm glad you approve,\" I offered. We kissed tenderly and fell asleep at three in the morning. \n\nOn Friday morning I rose and showered, shaved, dressed, and made coffee. I had plans to go to Jet's business office. I had located it two weeks earlier. I now understood why Jet had kept all his investments in cash or convertible investments. After I went through his business office papers, I discovered Jet had planned to invest nearly five million of his own dollars in his new investment advice business. As a former business owner, I am convinced Jet would have lost all his money -- he would have been wiser to put all his funds in a banking savings account. I cancelled all of Jet's business plans, and that Friday was the day I was closing the office for good. \n\nSpeaking of Jet, I had noticed over the recent weeks that my ability to access his memories was growing weaker. I found the memories more difficult to retrieve, and when I did link to a memory, it was much more fuzzy and less useful than earlier memories had been. I theorized that the legacy Jet was disappearing, and he was losing his hold on these memories as I gradually replaced them with my own. \n\nThe news on Don was as expected. His heart infection had cleared up, but his cancer was becoming critical. The doctors were saying he was nearing a point where a quality of life decision was imminent. I reiterated my instructions to the doctors on behalf of Don -- the hospital should take every measure to prolong his life. I planned to visited Don's house again that day to make sure things were normal.\n\nAt breakfast in the condo, Fiona told me she and Jocelyn had their own plans for the day. I was to be back at the condo no later than five that afternoon, and that I was to make reservations for the three of us at a nice restaurant for eight o'clock. Five o'clock gave me more time than I needed at Jet's business office, so I had no problem with that schedule.\n\nI made it back to the condo just after four-thirty. As I stepped in, I heard the girls talking, so I called out hello.\n\n\"Hi!\" Fiona shouted back. \"We're in our bedroom -- we're not decent -- you can't come in.\" I dropped on the sofa and turned the TV on. A few moments later Fiona walked out with a towel wrapped around her head and wearing her bathrobe. \"Hi, Jet,\" she smiled and came over and kissed me hello. \"We're going to be a while. Do you mind pouring us some wine?\" Fiona followed me as I went into the kitchen and poured two glasses of Chardonnay from the fridge. She kissed me again and disappeared into the bedroom with both glasses. As I watched the bedroom door close behind her, it just then occurred to me I had only assumed that was Fiona. This was promising to be an interesting night.\n\nI poured myself some red wine, and watched some recorded TV. Every once in a while I heard a burst of laughter erupt from the bedroom. I realized the girls were going to be in total control of tonight, and I found myself okay with that. \n\nJust before five in the afternoon, the bedroom door opened and someone called out that they're nearly done, and to get ready. I didn't know what I had to do to get ready, so I turned off the TV and stood there, waiting. I heard hushed words I couldn't quite make out, sounding like last minute agreements and collusions, and then they stepped out into the hallway with matching smiles. \n\nTo say I was shocked could not convey the magnitude of my astonishment. First, they were the most gorgeous pair of women I have ever laid eyes on -- and second -- they were so perfectly, exactly, flawlessly identical, it defies description. The girls had spent the day shopping together and then went to the spa together. They purchased identical outfits, including shoes and jewelry, had identical makeup professionally applied, identical fingernail treatments, and had their hair put up into identical buns. Even their eyelashes and eyebrows were identical. \n\nThey each wore a Persian blue mid-sleeve sheer top that matched their eyes perfectly, with white piping that accented their blonde hair. Underneath their sheer tops, I could see outlines of darker blue lingerie that celebrated their voluptuous figures. Black leather flare miniskirts showed off their long shapely legs, with a fine golden thread woven through the hem to accent their identical bronze tans. Each wore identical high heel shoes with a blue and black criss-cross open lattice across the top of the foot that unified their top and skirt colors. They wore matching diamond stud earrings. \n\nTheir eyes sparkled with delight and they couldn't stop smiling. On some unspoken cue, they twirled once around in unison, letting their skirts flare outwards. As they completed their pirouette, they advanced toward me. I then realized their plan was to give me no hope of telling them apart, or letting me identify which one might be Fiona. \n\nThe stood in front of me, smiling. I at last recovered my senses. \"You ladies are a vision of heaven on earth,\" is all I could muster, thinking how corny that sounded as I said it. \n\n\"You get to have us both tonight,\" said the one on the left.\n\n\"And you will never know which one was your girlfriend,\" said the one on the right. Even their voices were identical. \n\nI wasn't certain how to proceed. I was suddenly alarmed by my own indecision. I am normally so confident and in control, but I found myself having to quell my growing paralysis. I told myself doing something wrong is better than doing nothing at all, so I stepped forward, put my arms around the waists of each of them, end then I tenderly kissed the one on the left (I'll call her Fiona 1) and then the one on the right (Fiona 2). \n\n\"That makes me the luckiest man who ever lived,\" I replied to both of them, again feeling uneasy with my lame platitudes. It occurred to me we should take a moment to get into the mood, and then another thought interrupted my first. \"Do you mind if I take a picture of you two?\" I asked. They looked at each other, shrugged at each other in a way that conveyed a thousand words that could only be understood through the lifelong bond of twins, and then both nodded in agreement.\n\nI went to Jet's office, which also served as Jocelyn's bedroom, and retrieved a Canon EOS DSLR camera I found there weeks earlier. When I came back into the living room with the camera, the girls were already practicing their poses. I took several full frame pictures of both of them, along with head shots and bust shots. The girls posed in various combinations of frontal, three-quarter, profile and behind shots. At one point Fiona (I don't even know now if it was Fiona 1 or 2 -- from now on I'll just call them both Fiona), while posing for a behind shot, jutted her ass out and lifted up her skirt, revealing a naked pussy -- Fionas were not wearing underwear. \n\nFiona asked me to put the camera down, so I switched it off and set it aside. \"We have a little show to warm things up,\" other Fiona told me, and without another word, they started kissing full on the mouth as they both groped each other through the sheer fabric of their shirts. Then Fiona reach around and lifted the back of Fiona's skirt up, and started fondling her bare ass, while Fiona slipped her hands between Fiona's legs and felt upwards until she reached Fiona's pussy. The two Fionas continued kissing throughout their show. \n\nI was so mesmerized by their show that I hadn't become aware of how rock hard I had grown. \"Someone is getting excited,\" Fiona observed as she pulled away from Fiona and came down to her knees and gently kissed my shameless bulge through the fabric of my pants. The other Fiona stepped over to me and kissed me passionately on the mouth while I let my hands wander over the lovely curves of her silky blouse. \n\nKneeling Fiona started to unzip my fly, so I took that as a cue to pull standing Fiona's top off. She raised her arms agreeably, and I slipped the silky fabric over her head effortlessly. Standing Fiona was wearing a navy blue Chantilly lace stretchy camisole that hugged every contour of her perfect breasts. I slipped my hand beneath the camisole fabric and started to caress Fiona's tits while Fiona below, having already unzipped and dropped my pants, took my granite cock into her mouth. \n\nFiona sucked me gently for a minute, and then went deep the way I know only Fiona can, and I was pretty sure I had just figured out who the real Fiona was. I was so aroused I felt my balls start to churn after only a few minutes. I wanted this to last as long as I could, so I pulled out of Fiona's mouth and told the Fionas it was time to switch positions, but first I took standing Fiona's camisole off, revealing the perfect breasts I have come to know and love.\n\nTopless Fiona when down on both knees while the other Fiona stood up and took her own top and camisole off, giving me free reign over her lovely breasts. Now Fiona below took me into her mouth, and immediately deep throated me right up to my balls, and I realized it felt exactly the same as the other Fiona. Of course, standing Fiona's tits felt identical to her sister's breasts that I was feeling just a minute earlier. ",
        "Of course I had a way to differentiate the two, but that would ruin it for everyone. The mystery was part of the excitement. After another minute or two of sucking, kissing, and fondling, I suggested we retreat to the bedroom. When we got there, I took off my clothing, and the Fionas' took of their shoes and skirts. \n\nI lay down in the middle of the king sized bed. Fiona kneeled alongside of me on the bed, pointing the opposite direction -- with her ass beside my head and her head beside my cock. The other Fiona identically positioned herself on the other side of me. The two Fionas leaned their shoulders into me and started taking turns sucking me. I took advantage of the Fionas' positions, and I started fingerfucking the two Fionas with my middle fingers. As their lubricants made my job easier, I added my index fingers to fucking duties. I diddled both Fionas as they took turns sucking me, both alternating between normal and deep throat techniques. As I fingerfucked the two Fionas, I felt no difference in the tightness of their pussies. I then position my thumbs over their rosebuds and started burying another digit in there too.\n\nVery soon after I felt my balls boiling, and I alerted both Fionas to my impending climax by squeezing my anal probing thumbs closer to my pussy fucking fingers. At last my balls erupted as I unleashed my love salvos. Fiona immediately went deep on me, and after ten seconds, Fiona took over and also went deep. The two Fionas alternated deep throating my geyser as they collectively swallowed down the single longest, continuous burst of jism in the history of the male orgasm. \n\n\"I'm glad there were two of us for that one,\" one Fiona said to the other after my orgasm finished a marathon course. \"No kidding,\" was the reply. They were being careful not to use identifying phrases, as in 'I told you he could go forever,' or 'you weren't kidding when you told me he has ten inches.'\n\nAfter I had a short time to recover, I heard Fiona say \"Time to ride,\" and she straddled me, preparing to lower herself onto my still rock-hard cock.\n\n\"Sorry to be the sex police,\" I interrupted. \"I really don't know which one of you is Jocelyn, but Fiona and I have a deal that we don't have unprotected sex with outsiders.\"\n\n\"We know,\" started one Fiona. \"We have both been tested within the last three months,\" the other one finished. \"And we never\" ... \"have unprotected sex\" ... \"with outsiders,\" the two Fionas said the phrases in alternating sequence, building upon each other's sentence. I had come across Jet's and Fiona's test results in Jet's papers in his office in the weeks earlier. \n\nThe two Fionas continued in this alternating speech pattern. \"Jocelyn brought her test results with her\" ... \"and Fiona checked them\" ... \"and if you want\" ... \"you can check them too.\" These girls really rehearsed everything. \n\nI was feeling overwhelmed -- mostly in a good way. \"Just fuck me,\" I answered, and Fiona continued lowering herself onto my cock, which had thankfully not lost its prime during that sidebar. As fucking Fiona started to ride, the other Fiona straddled my mouth while facing her sister. I took the hint and started eating Fiona's pussy while I reached up and fondled her breasts. \n\nIt took me a moment to get my pussy eating rhythm. I repositioned my head and then I settled into a nice groove of massaging Fiona's clitoris with my tongue. I heard both Fionas moaning in different ways. Fucking Fiona was moaning lightly with each thrust she made, while cunnilingus Fiona would frequently let out a long moan each time I found another sweet spot. After several minutes, I could hear cunnilingus Fiona getting closer as I intensified my tongue lashing against her clitoris. She started rocking her hips gently against my face. Meanwhile her sister was increasing her fucking tempo sympathetically to the pre-orgasmic Fiona. \n\nI let go of cunnilingus Fiona's tits and brought my hands down to her thighs, pulling her torso down hard into my mouth to maximize the tongue pressure I could mount against her pussy. That did the trick, and in seconds I felt Fiona's body tense up as her moan gave way to a wail. \"Kiss me! Kiss me!\" I heard one Fiona cry to the other. I then realized, with the two Fionas facing each other, all this time they have been constantly watching each other's body language and facial expressions, and they have been empathizing and anticipating each other's mounting pleasures. \n\nWith my face buried beneath Fiona's pussy, I couldn't see it happen, but I envisioned fucking Fiona leaning forward to meet orgasmic Fiona's hungry lips and the two of them embracing with locked mouths in a forbidden sororal coupling. I had been so absorbed in bringing cunnilingus Fiona to climax that I completely lost focus on my own body, and I did not at all notice on my own gonads approaching critical mass as fucking Fiona continued to slide her amazingly tight pussy up and down my shaft. The image of the two Fionas enraptured in such an erotic intimacy while one of them convulsed orgasmicly on my face instantly nudged my already high state of arousal past the tipping point, and without any advance warning or the usual sensation of passing the point of no return, I suddenly felt my balls rupture, and I strangely heard myself bellowing a long, ungodly orgasmic growl with my mouth pressed hard against cunnilingus Fiona's pussy. I think I also heard fucking Fiona yelp, as I must have involuntarily heaved my pelvis upward, driving my rigid cock too hard into her cervix. \n\nThe two Fionas and I lay on the bed for a long while. After we recovered our energy, I got some wine for all of us. When I returned with filled glasses, one Fiona was in a downward dog position while the other one was massaging her pussy. I put wines aside for later. Downward dog Fiona said she hadn't had an orgasm yet -- so she must have been fucking Fiona. She asked me to ass fuck her while her sister massaged her to climax. \n\nI retrieved the K-Y from Fiona's bathroom drawer. \"Let me,\" said messaging Fiona as I returned, and she took the K-Y and liberally spread some on her index finger, and then she lubed downward dog Fiona's asshole by pressing her index finger in and out as deep as it would go. Then she took me into her mouth for a few minutes to restore my machine to top performance. When she deemed me fit for duty, messaging Fiona applied a little K-Y to the tip of my penis, and with that I poised my rod at downward dog's awaiting anal entrance. \n\nAs I pressed into Fiona's rectum, massage Fiona repositioned herself to get the maximum leverage on anal Fiona's pussy without getting in my way. After a few gentle trial strokes, I started seriously thrusting into anal Fiona while massaging Fiona stepped up her massage rate. \n\nAnal Fiona grunted lightly on my every thrust. Once I found my pace, I started slamming hard into anal Fiona, slapping my ball sack against her pussy. Anal Fiona's grunts turned into \"oh\" on each thrust. Meanwhile messaging Fiona worked to bring anal Fiona to her first climax of the day. \n\nDedicated only to ass fucking anal Fiona, I was much more in tune with my own orgasmic temperature this time, and after a few minutes I could feel my balls start to tense. Massage Fiona was doing her best, but the downward dog position wasn't working for anal Fiona, and she just wasn't getting the traction she needed to climb the orgasmic ladder. The girls decided to go 69, with anal Fiona on top, so I could continue ass fucking her while massaging Fiona took care of business from below. Both girls began eating each other 69 style while I resumed pumping anal Fionas' ass.\n\nOne of the Fiona's called out \"Lets all cum together,\" and so I paid more attention to the two Fiona's telltale signs of their levels of orgasmic arousal while I modulated the speed and force of my anal thrusts to match their timing. The girls each started calling out numbers from 1 to 10, 1 being no joy and 10 being in orgasm. They synchronized to each other at 8, and I sped up my thrusts. We all hit 9 at the same time, so I started stroking for the finish line. Underneath Fiona start wailing as I hit my point of not return, and I felt my own balls release wave after wave of spunk into anal Fiona's bowels just as I felt anal Fiona start to buck and shake. I slammed my erupting cock hard into anal Fiona's ass, and the mere force of my thrusts compressed anal Fiona's lungs, causing her to involuntarily grunt each time I drove my hips forward. We held that position long after our orgasms subsided. \n\nWe finally all collapsed in a heap on the bed with weary delight. By coincidence one of my hands had landed on top of Fiona's breast and the other hand was near the other Fiona's pussy. With the index fingers on both hands I faintly traced out delicate figure eights on a breast and on a pussy. After a while, first one Fiona, and then the other moved out of my figure eight tracing range and started planting delicate kisses all over my body. Eventually our post-coital intimacy gave way to fatigue from the late night before, and we all slipped under the covers and drifted off to sleep.\n\nWe woke up at 8:30. We all needed showers, and we were already half an hour late for our dinner reservation. I call the restaurant, apologized, and asked if we could change it to 9:30. They politely agreed. When I got off the phone the two Fionas were already showering without getting their hair or faces wet. I waited for them to finish, and then I showered quickly. \n\nThe girls got dressed in non-identical new dresses they bought earlier that day and touched out their makeup. We made it to the restaurant by 9:30 and enjoyed an excellent meal. I still didn't know who was who, and the Fionas truly enjoyed the power they held over me. I played along happily -- I still considered myself the luckiest man alive, and if it comes at the expense of a little teasing, bring it on!\n\nThe conversation at dinner was stifled, because the girls were still trying to use non-identifying language to keep me from determining who was who. Thankfully, they no longer resorted to speaking alternatingly in sentences. The girls admitted they had planned to have sex after dinner, but then decided the risk of letting something slip in the conversation was too great. So they decided on sex before dinner. I asked why not sex both before and after dinner? The girls looked at each other knowingly and laughed. \n\nWe were all tired when we arrived back at the condo after dinner. Even with the nap before dinner, it had been a long day. I poured a final nightcap for everyone, and then we got ready for bed. The girls finally gave up their anonymity up as they called each other by their names when we all said goodnight. As expected, Jocelyn went to her bed in the office, and Fiona came to bed with me. \n\n\"That was quite an amazing day,\" Fiona offered as we climbed into bed. \n\n\"Amazing doesn't begin to describe it,\" I followed. \n\n\"Next time we should try something with a more romantic setting.\" That's when I saw my opening.\n\n\"Like a hidden away chalet with a big fireplace,\" I agreed, looking at her unblinking eyes. \n\n\"Yeah, something like that.\"\n\nWe chit chatted a little more, and then we turned the lights out, and went to sleep. Actually, she went to sleep, I stayed awake for an hour until I was certain she sleeping.\n\nI slipped out of the bed as quietly as I could, closed the bedroom door behind me, and then tiptoed over to Jocelyn's room. I entered quietly, closed the door again, and stripped naked. She was sleeping in the fold-out bed.\n\nI slipped under the covers beside her, and she woke up. \"What?\" She was lying on her back.\n\nI put my hand on her tummy, and slipped it down, down, down, until I felt the bottom of the nightshirt, and then started bringing my hand up along her bare inner thigh. \n\n\"Jet -- what are you doing!?\" She cried.\n\n\"Shhhhhhh!\" I said quietly. \"You're sister is asleep. We don't want to wake her.\"\n\n\"But Jet!\" she whispered hoarsely. \"You shouldn't be here.\"\n\nBy now I reached her pussy with my hand, and I started massaging it knowingly. \"Oh, come on, now\" I chided, \"you know you always wanted this.\" I grabbed her hand and brought it down to my cock.\n\n\"Jet!\" She wasn't whispering any more. \"You mustn't!\"\n\n\"Don't tell me you haven't been thinking about this for years. You know it. I know it. Your sister is sleeping in the other room. She'll never know it.\" \n\n\"Oh Jet!\" she cried. It was too dark to see, but I could tell she was crying with sorrow, not with passion. \n\n\"Oh Fiona!\" I cried back mockingly. \n\n\"Uh, what?!\"\n\n\"Fiona,\" I said, \"I made you a solemn promise that your sister would never come between you and me. That includes you and me sleeping in the same bed -- together.\"\n\n\"You knew all along?!\" Fiona cried out loud, now not worrying about waking Jocelyn in Fiona's bed.\n\n\"No,\" I said, \"not until Jocelyn came to our bed and you came here. Then I knew,\"\n\n\"How?\"\n\n\"I just knew.\"\n\n\"And so you played that horrid little game with me? What if you were wrong?\" Now Fiona was angry on so many different levels. \n\n\"I wasn't wrong, and I knew I wasn't wrong,\" I affirmed. \"So how does it feel to have your own little trick thrown right back in your face?\"\n\n\"Fuck you, Jet!\" Fiona yelled, \"I thought I was dying just now! Don't ever do that to me again!\"\n\n\"I won't if you won't,\" I cautioned. That took her back at first, but then she got it. \n\n\"Okay,\" she accepted, realizing she really was the one who started this musical beds escapade. We lay in silence for a few minutes while Fiona recalibrated her emotions. \n\n\"Jet?\" Fiona said quietly.\n\n\"Yes.\"\n\n\"I'm not talking about the sex, okay?\"\n\n\"Okay.\"\n\n\"I'm having the greatest time with Jocelyn. She is being so nice, and decent, and a good sister. We are getting along so good together. We laugh and share. I just hope the rest of the week goes as well as the last two days. I am so happy we are doing this. You were right -- I did want to do this.\"\n\n\"That makes me very happy,\" I sighed. \n\n\"What does? What part makes you happy?\"\n\n\"That you are happy,\" I said softly. \n\n\"Thank you so much for helping me do this,\" Fiona whispered and kissed me on the cheek.\n\n\"Can I ask a question about what you just said?\"\n\n\"Sure.\"\n\n\"Well, you said you were happy, but not about the sex. I was just wondering ...\"\n\n\"Oh God, no!\" corrected Fiona. \"The sex was great. I really liked it. I was just trying to tell you that you were right about Jocelyn, and I am so glad you are helping me do this.\"\n\n\"Okay -- good. Thanks for telling me.\"\n\nFiona kissed me goodnight and rolled over onto her side, with her back to me. At least five minutes passed -- I thought she was sleeping -- Fiona softly called my name. \"Jet?.\"\n\n\"Yeah.\"\n\nFiona didn't move -- she remained with her back to me. \"You know that question you ask yourself every morning and every night?\"\n\n\"Yes,\" I answered cautiously.\n\n\"I'm not there yet.\"\n\n\"I know.\"\n\n\"But you're making it a lot easier.\"\n\n\"I'm trying,\" I offered.\n\nShe rolled over to face me and looked into my eyes in the darkness of the night. \"I know,\" she declared sincerely.\n\nWe kissed passionately for a long time. She put her arm over my chest, and we fell asleep.\n\n--- End of Part 5 --- "
    ],
    "authorname": "deltablonde",
    "tags": [
        "twin sister",
        "drama",
        "action adventure",
        "cruise"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-commander-ch-05"
}