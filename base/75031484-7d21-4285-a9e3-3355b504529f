{
    "title": "Let Me Help You, Good Doctor Ch. 06",
    "pages": [
        "The next couple of weeks have been a little hectic. Dominique threw herself into the wedding planning mode. She didn't know what brought on this sudden burst to work on it, but she did. She look up a couple of themes and Candy loved the red carpet theme; Dominique knew that would be easy to portray and she was a little excited about doing it. This was going to be a beautiful wedding; that is if it would happen. She was still content on getting involved with Jason. She just has been distracted lately, by Nik.\n\nNik. Nik. Nik. It seemed like her brain was focused on him 24 hours a day. The next morning after he spent the night, she woke up again his warm, safe embrace. She planted soft kisses on his lips, losing herself in the innocent gesture. He finally returned the kisses, with his own eager ones. They didn't have sex but just making out that morning was such a turn on. She didn't want to let him go and that confused her even more. When she was around him, her head went all loopy, so she purposely spent some time away from him. He called her a couple of times but she made sure not to stay on the phone long. Now was the perfect time for her to focus on Jason. \n\nShe was at the office, getting ready to see Mr. Lawson. She sighed to herself because as she was jotting down notes, her mind would go back and think about feeling Nik's arms around her and Nik's kiss, especially the ones that made butterflies flutter in her stomach and her head cloudy.\n\n\"Oh for goodness sakes, girl!\" Dominique shouted dropping her head on the desk, \"It's not that serious.\" She kept repeating in her head hoping it would catch up somewhere. \n\nShe needs to get control of herself, \"Dr. Grant, Mr. Lawson is here to see you.\" She heard Nicole through the intercom.\n\n\"Send him in.\" Dominique said as she got herself together.\n\nShe would just have to put all thoughts of Nik out of her mind. It was no use to entertain any thoughts of them. The two of them didn't belong together, there was no way. They were two different people and not only that, they were heading in two different directions. Nik just needed to find him a nice little Italian girl. She swallowed hard trying to push the idea of Nik with another girl.\n\nMr. Lawson walked in with a goofy smile on his face and he looked a lot more relaxed. Well, seems like she wasn't the only one that had a good couple of days.\n\n\"Mr. Lawson, good to see you back.\" She smiled.\n\n\"Yea, how was your vacation?\" he smiled taking a seat.\n\n\"It was good, but we are here to talk about you.\" She reminded.\n\n\"Oh well, I am good. I'm coming here to see if you do marriage counseling or can you recommend someone to me and my wife.\"\n\nDominique's mouth dropped, \"So you have been talking to your wife?\"\n\n\"Well that Nik fellow that was here, was right. I tried the ignoring thing and after three days, I came home and there was candle light dinner and my wife in sexy lingerie waiting for me. She fed me dinner and ran a bubble bath for me. You can guess what happened afterward.\" He said as a wide smile spread across his face, \"We did that for a couple of nights straight, then we started talking and I realized how much I missed the way my wife use to be. I realized I was using Angel to replace her when all I wanted was my wife. We are pretty good now, but we thought we may need to talk to someone just to see where it went wrong so it doesn't happen again.\"\n\n\"You know I think that's an excellent idea and I am so proud of you. Have you talked to Angel since?\"\n\n\"Just to apologize to her and I told her that things were going to change now. I just feel so much better doctor. Not just because of the sex but I feel like I have my loving wife back.\"\n\n\"Well, I'm glad. This is what I want you to do, talk it over with her, call my office and we can set an appointment for you both.\"\n\n\"Great, thank you so much and tell your friend I said thanks too. He must really know women.\"\n\n\"Actually I think he specializes in them.\" She walked him out to the door, shaking her head.\n\n\"Well, he was great. I will see you when Lillian and I agree on a time.\" He waved to Nicole just before jumping on the elevator.\n\n\"That was quick and he was very happy.\" Nicole smiled.\n\n\"Yea, he got his wife back. Anyway, how you do on your test?\"\n\n\"Great, I got an A and I think I know what I want to major in.\" she smiled.\n\n\"I thought you were going to be a doctor?\"\n\n\"Well, I want to be a specific type of doctor and I think I want to go into sports medicine. You know, helping athletes with injuries and things like that.\"\n\n\"I think that would be great, are you going to try for a local team?\" \n\n\"Yea or work at the university, I'm not sure yet but that's what I want to do.\"\n\n\"I think that would be a great idea. I'm glad to hear that sweetie.\"\n\nNicole smiled uncomfortably and looked off, \"Dominique, can I talk to you about something a little personal?\" she said softly and Dominique couldn't help but smile.\n\n\"Sure, let's go in my office, these shoes hurt my feet.\" Nicole laughed as they both walked in her office, \"What's on your mind?\"\n\n\"Gale. I know what she did was wrong and I pretty much forgiven her for what she did to Jade. I know she thinks that she did what was best and I still love her. She wasn't always like this, she was a little happier. I just don't want to believe what happened between her and Patrick.\"\n\n\"Well from what I heard about them, they were a very serious couple. It can be horrible to break up with someone, especially when you were engaged.\"\n\n\"It makes no sense though; he was happy and wanted to marry her. He helped us so much when he was here. When I needed him, he was there and what we couldn't afford, he helped. Not to say it was all about the money but he was very sweet and funny. I just don't understand why you would put so much effort into a relationship when you are going to break up, especially when you ask them to marry you.\"\n\nDominique chuckled to herself, \"I see you never been in a relationship before. Sometimes you put extra work into something for it to work. I don't know what was going on in his life. Did you guys?\"\n\n\"He was pretty silent about his family. We knew his dad was this big time business man in Ireland and Patrick came down here for school. Other than that, he didn't go into too much detail.\"\n\n\"It could be something his family said too. I mean we may never know. I tried to talk to Gale about it but she just shrugged it off.\"\n\n\"Well, I was thinking about trying to find him just to get some answers. I think that's the least Gale deserves.\"\n\n\"I don't know if that is such a great idea only because we don't want to step on any toes. It could be a sensitive issue with her as we see.\"\n\n\"I know but now that Gale is going through her divorce, I want her to be happy with who she truly loves.\"\n\nDominique smiled at Nicole's hopeful eyes, \"Nicole, you are too sweet. You really believe in love?\" Dominique said looking at Nicole fidget and smile.\n\n\"Well I do watch my fair share of relationships with friends and family. I love the idea of love and its wonderful thing to experience even though it may hurt. I just hope I'm lucky enough to go through it. Have you ever been in love?\"\n\n\"I have before. I had an occasion where I thought I was in love with this guy from college and he was my first. After awhile, he got on my nerves and I couldn't take it anymore. And then there is Jason; the first time I fell for him was when I was 12.\"\n\n\"It must be hard to plan his wedding.\" Dominique paused, \"Good thing you have Nik.\" Dominique nearly swallowed her tongue at that last statement, \"What? I don't have Nik. We are just friends.\"\n\n\"Really? I don't know because the way he looks at you is not very friendly.\"\n\n\"He looks at me different?\" Dominique asked in disbelief and Nicole innocently nodded, \"Well, um, we are just friends. I mean he is helping with some things right now but we are just friends.\"\n\n\"Well, I wish I had someone look at me that way. I'm use to guys ignoring me or asking me to do their homework. The only way I get some sort of attention from guys is when I run but it's mostly them cheering me to win. Some guys just suck sometimes, well accept this one.\" She said staring up dreamily. \n\n\"Nicole, do you have a crush?\" Dominique smiled and she just giggled.\n\n\"Maybe, I mean he is funny, talented and real sweet, not to mention very hot. I don't think he even looks at me that way but I find myself constantly thinking about him.\"\n\n\"Really?\" \n\n\"Yea, I sometimes wish he would grab me in his arms and just kiss me or kiss me all over.\" She said smiling brightly.\n\nDominique couldn't help but chuckle a little, \"Wow, sounds like this guy really lights a fire for you. Who is this mystery man?\" Nicole was about to open her mouth when they both turned at the knocking on the door. They both looked at each other quizzically before Nicole went over to answer the knock. Dominique didn't have any appointments scheduled now. Nicole cracked open the door.\n\n\"May I help you?\" Nicole asked the woman on the other side of the door.\n\n\"Yes, I need to speak with Dr. Dominique Grant.\" Dominique heard the familiar voice but she couldn't see her.\n\n\"Well, she doesn't really have any openings for new patients right now.\"\n\n\"Oh, I'm not a patient; it's on a personal level. I'm Harriet Sharpe.\"\n\nSharpe?! The moment Dominique heard that name she shot up off the couch. She came up behind Nicole to confirm what she had slightly feared. There on the other side was her father's wife. As soon as she saw Dominique she gave her a small smile. What was she doing here?\n\n\"Um, Nicole, why don't you go to lunch?\" \n\n\"Are you sure?\" Nicole said turning back to Dominique.\n\n\"Yea and we will talk later.\" Nicole excused herself passing by Mrs. Sharpe.\n\nThe two women stared at each other in silence for awhile before Dominique finally spoke, \"Why don't you come in?\" Dominique motioned and she stepped inside looking around her office before settling on the couch.\n\nDominique was so confused. Did he send her here to yell at her? Well she had a few choice words that she can take back to him. \n\n\"You have done quite well for yourself. Crystal has made sure you had the best despite everything.\" Dominique's mouth dropped.\n\nSo she knew about her? Dominique proudly stuck her chin out and sat down on the opposite chair. She was going have to channel her strength to get through this. Dominique cleared her throat and crossed her arms in front of her.\n\n\"Yes she did. So, you knew about me and that I wasn't lying?\" Dominique finally said.\n\n\"I always knew about you. I admit I haven't seen any recent pictures of you. I guess Crystal stopped sending them when you got older. At the restaurant, I knew it was you as soon as I saw you.\" She sighed, \"I'm so sorry for what he did.\"\n\n\"Does he think I want something from him, because I don't. I just want some sort of acknowledgement from him. Is that so hard?\"\n\n\"No, it's not. Let me tell you about him. We were dating off and on but we didn't tell anyone because I was in the military traveling all the time. I came back on Christmas of 1978 and told him I want to be serious if he was ready, if not I was moving on. He told me he loved me and wanted this to work. The next day, he moved where I was stationed.\"\n\n\"Christmas, that was when he left my mom.\" Dominique stated.\n\n\"I know. He started getting letters and things from Crystal but ignored them or threw them away. One day I happened to look into one of those letters and saw pictures of you. I confronted him about it constantly and he told me to ignore it. Finally he told me everything that happened between him and your mother. He didn't think you were his child no matter how much Crystal tried to convince him or me for that matter. So, what I did was taken a little bit of money and sent it to Crystal to help with whatever you needed.\" \n\nDominique sighed out loud running her fingers through her hair, \"Why did he do this?\"\n\n\"He was young and dumb. I don't know what else to say that will give you any kind of comfort. Any answer I give you is not going to give you the answers you need. Plus, you don't need to hear them from me.\" She stammered.\n\n\"Then why did you come?\" Dominique spatted in a tone she didn't expect to come out so harshly. \n\nIt was so vindictive and malicious. Harriet cleared her throat feeling the room temperature drop, \"I came to apologize. I hoped when he saw you in his face, he would have no choice but to accept you. If you give me some time to talk to him, maybe I can convince him otherwise.\"\n\nDominique looked into her eyes and saw the sincerity. She didn't have to come here, she didn't have to do anything and here she was trying to make this right. The only thing is it was coming from the wrong person. She took a deep breath, retracting the claws a little.\n\n\"I really appreciate you coming here and telling me this. It's just that I wish I could have heard everything from him. I have been waiting so long to hear from him but nothing. Why did you still help when you did?\"\n\nHarriet took a deep inhale and looked down at her hands before looking back up at her, \"I'm hoping my husband does finally get it and attempt a relationship with you; not only for you but for him and for our children too. I think they deserve to know their sister.\" Dominique nodded and took a deep breath, \"I really must be going though. I have a restaurant to get to.\" She stood up and Dominique stood with her.\n\n\"Thank you for everything, Mrs. Sharpe.\" She nodded.\n\n\"You are welcome. I'll leave you my number if you want to talk.\" \n\n\"I would but I don't know if that would cause problems between you and him.\" \n\n\"You let me deal with that.\" Dominique smiled as Harriet jotted down her number.\n\n\"Thanks.\" Dominique said taking the paper from her.\n\n\"You're welcome. Have a good day sweetie.\" She smiled just before leaving.\n\nDominique looked down at the number trying to decipher everything she said. She plopped down on the couch feeling a mixture of emotions: anger, hurt, every emotion was coming back. It was also a sense of relief that shook through her. She wanted to cry but her better senses told her not to shed one tear for him. \n\nShe heard a small knock at the door; probably was Nicole letting her know she was back. She walked over to the door and the first thing she saw was a pair of concerned green eyes. She knew exactly who it was.\n\n\"I was driving by and I saw his wife leaving, are you okay?\" \n\nShe opened her mouth to say something but it wouldn't come out. She just saw him standing there and it was too much for her. She flung herself into his arms holding on to him tightly.\n\n\"What's the matter? What did she say?\" he asked sensing his anger boiling.\n\n\"Just hold me please.\" She whispered and felt him tighten his hold around her.\n\nShe tried to hold back everything but couldn't any longer. She felt the first sting of tears roll down her cheek and plenty followed after like a flowing river. Nik felt her body shaking like a leaf in his arms and he held her tighter.\n\n\"What did she say to you?\" he asked again and all Dominique could do was shake her head, \"What's wrong then?\"\n\n\"She just further let me know that I don't need him.\" She said finally pulling away from his shoulder.\n\n\"Well, we knew that. What happened between you and his wife?\"\n\n\"She basically came to apologize for him and that she wishes it could be different. She left me her number but I don't think I will call her.\" She said reluctantly pulling out of his embrace.\n\n\"Why not? This could be your chance.\"\n\n\"No, everyone was right. I should not even try with him. I did my part.\"\n\n\"You have done more than enough. You just need to understand that sometimes the way you want people to be don't always live up to that. You know I know that for sure.\"\n\n\"You're talking about Gianni? Is he really getting out still?\"\n\n\"I have been talking to him since we left and he still wants out. He just may have to leave town for awhile.\"\n\n\"You see for you Gianni came around eventually.\" \n\n\"He came around himself. I didn't push him and I let him figure everything out on his own. That's what you will have to do. It's going to be hard but the pay off will be bigger.\"\n\n\"And if my parents never come around?\"\n\n\"Then you keep on the way you been. Like I told you, you have a lot of wonderful people that love and care for you.\"\n\n\"How come you always know the right thing to say?\" she said wrapping her arms around his neck and smiling up at him. \n\n\"What can I say, it's a gift.\" He smiled back.\n\nAs they stared at each other, a warm feeling spread through Dominique's body. It was that same feeling where her stomach felt queasy and her vision of everything that they have done come into her head. Oh wow, this was getting so out of hand, but she couldn't really fight the pull. Dominique was going to lean in for a kiss when her phone interrupted them. Nik let out a big sigh as she looked down at her cell phone. She groaned inward as she saw who it was. \n\n\"Hey Jason.\" As soon as she said his name, Nik moved away from her. \n\n\"Always at the wrong time.\" Nik mumbled.\n\n\"Hey Dominique, are you busy right now?\" Jason asked.\n\n\"Um, not really; I was just talking to Nik.\"\n\n\"Oh okay then you have time.\" He said and Dominique just blinked, \"I need some help tomorrow.\"\n\n\"What can I do?\"\n\n\"Well you know how I am as a dancer, right?\" Dominique started laughing thinking about when he tried to dance back when they were younger.\n\n\"You mean to tell me you still haven't learned to dance?\"\n\n\"Hey, I know I have two left feet. I want to surprise Candy and take some classes.\"\n\n\"Oh well I know a couple of places that are teaching them.\"\n\nNik watched Dominique talk on and on to that bothersome Jason. He will never understand the pull this guy has over her. Why was she so hug up over him? He has a feeling that Jason was a bit on the boring side and that Candy was his excitement. Why can't Dominique focus on another guy? One that will fit her? Oh well, he was sure that she would never find someone that will make her toes curl like him. He thought about that and it brought a cocky smile to his face. He pushed away from the wall he was leaning on and walked over to her like a predator after his meal. He wrapped his arms around her lower back, having her scent fill his nose. She turned to him wide eyed, wondering what he had planned since she was on the phone. He gave her that killer smirk before lowering his mouth to her neck, letting his tongue slowly glide across her neck.\n\nDominique bit down on her lower lip as she felt her knees start to give a little. She was lucky that he was holding her up, because she knew that she would have been on the ground. She was so caught up in what Nik was doing that she wasn't really paying attention to what Jason said.\n\n\"Dominique!\" she heard him say into the phone impatiently. \n\n\"Huh?\" she moaned.\n\n\"Are you going with me?\"\n\n\"To where?\" she said trying to push Nik away but he wasn't budging.\n\n\"The dance class; I need a partner and I want to surprise Candy.\"\n\n\"Um, what time does it start and what do I get out of it since you are taking a Saturday away from me?\"\n\n\"Well, you get my undying love and affection.\" At that moment Nik nibbled on her tender spot on her neck and before she knew it, a moan escaped her lips, \"What was that?\" Jason said.\n\n\"I said oh.\" She quickly corrected trying to push Nik away as he was laughing lightly, \"Yea sure I will go with you tomorrow.\"\n\n\"Great, I will pick you up tomorrow around one.\"\n\n\"Sure, yea, bye Jason.\" She quickly hung up the phone and pushed Nik away, \"Are you out of your mind?\"\n\n\"My brothers seemed to think so sometimes.\" He shrugged.\n\n\"I am sure now that you are a bit insane. What if he would have heard that?\"\n\n\"Then it would be okay, you told him that you were with your boyfriend. What would lunch be if I was on my best behavior?\"",
        "\"I don't know; lunch?\" she said sarcastically and Nik just shook his head.\n\n\"That's what you think. So, what are you doing on Saturday?\"\n\n\"We are just supposed to go to this class and dance, nothing special.\"\n\n\"Oh really? So you two will be dancing with each other during the whole class.\" He said going to stand by the desk.\n\n\"Yea you know, just some stupid little dance class, no biggie.\" She shrugged but Nik knew her enough to see that she was down playing the situation. \n\nShe went over to the desk and was about to sit down when Nik backed her onto the desk. She nibbled down on her bottom lip as she stared into his intense green eyes. She knew that look, that's the predator look. The look that she was trying to avoid and that's why she have been avoiding him. Now she didn't want to avoid him, a part of her inside wanted to be devoured by him. \n\n\"So, will it be like when you danced with me?\" he whispered, setting himself between her legs. She took a deep inhale at the heat that started in her nether region and course through her body, \"I don't think so.\"\n\nNik leaned in closer to her ear as he felt her body press closer to him, \"Why not?\"\n\n\"Well mainly because he can't dance. \"she smiled.\n\n\"And?\"\n\n\"And, I guess there is something about dancing with you.\" She paused, \"Is that what you wanted to hear?\"\n\n\"As long as that's the truth, then yea.\" He smiled.\n\n\"Can I admit something to you?\" she whispered back and he tilted his head, staring back at her, \"I kind of missed you.\" She said lowering her head.\n\nSomething about that little statement made something in Nik swell up inside, but why didn't she want to look at him? He hooked her chin and pulled her face up till she was eye level with him. \n\n\"Now say that again, looking at me.\" He commanded.\n\nShe smiled and swallowed hard, \"I missed you.\" She said and Nik's lips instantly attached to hers. \n\nDominique wrapped her arms around his neck as his tongue slowly moved against hers. He wanted to see how much she really missed him. He lighten his touch against her lips softly pecking and nibbling on them. Dominique sighed against his lips, wanting him to return that same pressure that he had earlier. She wanted more of that intense feeling of his lips, but he wouldn't return it. She groaned in frustration and pulled him a little closer pressing her lips harder against his. Nik smiled to himself as he felt her forcefully move her tongue into his mouth. Damn, he wanted to know what that tongue and lips could really do against his throbbing cock. Nik always felt like a bundle of raw sexuality around her. He always been a sexual person but being around her, made him crave her. She backed further onto the desk, making her skirt hike up a bit more. \n\nNik grabbed the back of her thighs and pulled her to him; his hand nearly burning from the heat of her body, \"You want me to come over tonight?\" he asked in between kisses and felt her nod, \"Talk to me.\" He whispered.\n\n\"Yes, of course I do.\" She sighed pulling away from him briefly, \"What time will you be over?\"\n\n\"I have to pull a pretty late shift tonight, that's if you feel like waiting. I know you have a big day tomorrow with your dance class and everything.\"\n\n\"I think you are trying to make fun of what's happening tomorrow.\" She said trying to push him away.\n\n\"I'm just saying that you are getting very excited about dance class.\" He smiled but there was something in his eyes that Dominique was trying to pick up.\n\nShe grabbed him by the shirt collar and pulled him to her and laid a deep kiss on him, pushing her tongue into his mouth. For a moment Nik's knees buckled as she took full control of the kiss. He knew she had a lot of passion, but wow. They pulled away from each other and Nik opened his eyes to stare into her deep dark pools. \n\n\"Officer, can you make a stop to my house when you get done? I think I need your assistance.\" She smiled and Nik couldn't help but to laugh.\n\nHis little doctor was certainly coming out of her shell, \"Will do, ma'am, I'm here to protect and serve.\" \n\nThe next day, Dominique was all ready for her day with Jason. Even though she enjoyed her time with Nik the other night, today with Jason was going to be fun. It was funny though, a part of her didn't want to get out of bed with Nik. Just having him there, holding her was so comforting and felt somewhat normal. Oh well, no use harboring on that. She decided she was going to go all out and wear her hair down. Nik couldn't keep his hands off it; he kept telling her how much he loved to see her hair down. She never really thought of her curly hair as that great, but she was starting to like it down and being out of the pinstripe suits around Nik. It was refreshing being at ease with him. \n\n\"So, are you ready to cut a rug with lawyer boy?\" Nik asked buttoning up his shirt.\n\n\"You know if I didn't know any better I would think you were a little jealous Nik.\" She teased slipping her ankle length skirt.\n\n\"Jealous? Me? Come on sweetheart, how can I be that I'm jealous of lawyer boy,\" he walked over to her and lifted her up. Her legs instantly wrapped around his waist, \"when it was my name you were screaming last night?\" he said with a brief kiss and Dominique couldn't help but smile.\n\n\"And you are getting cocky too, but I guess you were always that so.\" She shrugged and he placed her on her feet while she laughed. \n\n\"I'm not cocky, just sure of myself sweetheart. So, what else do you and lawyer boy have planned? Where is the dance class at?\"\n\n\"So far as I know that's it and he is taking me for lunch. The dance class is at Mrs. June's school of dance. I use to go there sometimes when I was younger.\"\n\n\"Really? I would picture you as a dancer too.\"\n\n\"Yea, well, my aunt could only afford so many classes and when Mrs. June heard of our situation, she agreed to teach me for half price. My aunt didn't want to ask my mom for that money.\" \n\n\"Well that was nice of her. I don't know me and the guys may stop by there to whisk the day away with you two.\"\n\n\"Nik, come on now. Don't be silly.\"\n\n\"I'm serious; James needs to learn how to dance sooner or later.\" He smiled and she just shook her head, \"I'm only kidding with you, baby. Enjoy the dance.\" \n\n\"Thank you.\"\n\n\"Oh and have you called my mom?\"\n\n\"Yea, she must have asked you about me?\"\n\n\"She did. She was wondering if you were alright and everything was good here.\"\n\n\"You know, you should take me back there soon. I wouldn't mind visiting your family again.\" She said smiling.\n\nNik stopped in his steps, \"Are you sure? You want to see them again with me?\"\n\n\"Of course Nik. I told you, I love your family.\" Nik cleared his throat and looked off, \"Right, I have to go back home and hang with the fellows.\"\n\n\"Alright then, see you later.\" She said walking him to the door, \"Thanks again Nik.\" She said leaning her head against the door.\n\n\"Hey, any time baby.\" He said kissing her briefly and left. \n\nDominique leaned her head against the door with a smile. She could still feel the touch of his lips on hers and she traced her fingers over them. She quickly shook her head, what was going on? She was getting way too wrapped up in Nik. She knew it before, but now it's really getting out of hand. She cleared her throat, grabbed her purse, headed out the door. Nothing is going on between her and Nik, it's just really good sex. She needed to hurry up and make Jason fall for her so that this thing between her and Nik could be done. \n\nJason met her downstairs with a smile as she went over to his car, \"Look at you. How are you doing?\" he asked.\n\n\"I'm good and you?\" \n\n\"Oh, are you wearing a shirt that shows your stomach.\" He said.\n\n\"It's just showing it a little. It's a comfortable shirt.\" She smiled.\n\n\"I don't know, I'm use to seeing you a bit conservative.\" Dominique's brow wrinkled.\n\n\"You don't like my clothes?\"\n\n\"Well, I'm just use to seeing you being professional.\"\n\n\"Well, I'm off today, so, this is what I wear.\" She smiled feeling a little uneasy about this conversation with Jason, \"Come on now Jason, I wasn't always in pinstripe skirts since I was a kid.\"\n\n\"No, I didn't say there was anything wrong with it, it's...\" he stammered, \"How about we just go?\"\n\nDominique nodded as they both went to the car. They made it all the way to the school without saying one word to each other. That was so unlike them; Dominique and Jason never had an odd tense moment. Dominique walked ahead of Jason not pausing to wait on him. \n\n\"Dominique.\" She heard him say and she turned around with a sigh, \"I'm sorry if I said something to make you upset. I really didn't mean to.\"\n\n\"Right Jason.\" She said shaking her head.\n\n\"I'm serious Dominique. I'm sorry, can we start dancing on a good note. Besides, it's better for you to be mad at me after I step all over your feet.\" He smiled and she couldn't help but laugh.\n\n\"Let's go.\" She sighed pulling him to the class room. \n\n\"So, have you asked her yet?\" Scott asked grabbing an apple.\n\n\"No, I haven't. I will when the time is right.\" James said looking through some files.\n\n\"I think someone has a dash of cold feet.\" Nik said sitting back in his seat.\n\n\"I am not. I am just waiting on the right time like I said. Why are you two rushing me?\" James said sitting the file down.\n\n\"No one is rushing you. It must be pretty hard to think about going through this again.\" Nik said putting his feet up on James' desk.\n\n\"Well actually,\" James came around and knocked Nik's feet off, \"it's not that hard, especially if you are really sure about the person you want to be with.\"\n\n\"Wow that sounded like you were really serious there.\"\n\n\"I'm always serious when it comes to my future wife. Now what about you father to be?\"\n\n\"Hey I am patiently waiting by my phone for that call. She is with her mom, doing mother/daughter stuff. I am worn out.\" \n\n\"Late night cravings?\" James smiled.\n\n\"Just wait till your time comes. I would love to see how you handle Jade wanting egg rolls with pickles and peanut butter at two in the morning.\" Nik and James made a disgusted face and started laughing.\n\n\"It will be a long time before we see little ones running around from me.\" James said, \"So, what girl has been on Nik's hit list?\" Nik shrugged.\n\n\"I haven't really had time for that lately.\" Nik shrugged.\n\n\"Oh that's right, you've been around Dominique, seems like you have a great time pretending.\" Scott said.\n\n\"We are just friends.\" Nik reiterated.\n\n\"Whatever, we see that glow that she has going on. Katrina is already planning couple dinner parties as soon as she has the baby.\" \n\n\"There is no couple though. We are just hanging out and enjoying each other's company.\" Nik reminded.\n\n\"I'm so sure. You don't have to admit anything to us; we see the look on your face.\" James said.\n\n\"And that look would be?\" Nik sighed.\n\n\"The look of when you really like a girl. We already know it's true. You took the girl to see your parents for a weekend.\"\n\n\"My mom wanted to meet her so I can assure her that we are just friends.\"\n\n\"Yea, and taking her to meet your mother is a really good way to prove that.\" Scott smiled. \n\n\"There is nothing going on between us, just two people having fun together.\"\n\n\"And occasionally enjoying a lot of extra in between.\" James replied and Nik just sucked on his teeth.\n\n\"Yea man, you can fool your parents, only mildly but you can't fool us. You don't give girls as much time as you have given Dominique. I swear it will be okay if you do like her. You're not going to turn into stone.\"\n\nNik shook his head, \"Alright, I do like her a little. She's nice to have around and she is really sweet. She's stuck on lawyer boy though, which I still do not understand.\"\n\n\"Really?\"\n\n\"I mean, she is basically ruling this decision on him being the one based on the wrong thing.\"\n\n\"Well, what is she basing it on?\"\n\n\"On the fact that they know each other longer and that it fits as she says. I think a majority of it is a race thing.\"\n\n\"Why you say that?\" \n\n\"I just have a feeling. I mean, you told me before Scott that race has been some what of a sensitive issue with her, especially with everything concerning her mom and dad.\"\n\n\"I mean I did say that once before, but I would think after everything that you two have been through she would have looked past that.\" Scott said scratching the back of his head. \n\n\"Yea, well I don't think she has.\" He shrugged. \n\n\"You sound upset about that Nik.\" James said.\n\n\"I mean, I'm not saying that I'm the guy for her or that I care of anything,\" He stammered, \"but don't base your decision over something as ridiculous as that. It's so pointless.\"\n\n\"Yea, when there are so many other things she can base that decision on.\" James said and they both started laughing.\n\nNik sucked at his teeth again staring at the cackling hyenas, \"That's so funny, I'm dying inside.\" Nik said sarcastically.\n\n\"Oh don't be so sensitive. I'm starting to wonder who you are now.\" James said pulling out some a cigarette.\n\n\"I'm still the Italian stallion.\" Nik smiled.\n\n\"That is almost tamed.\" James added, \"Where is your girl at now?\"\n\n\"She is not my girl and she is at some stupid dance class with lawyer boy.\" \n\n\"And you let her go?\" Scott said.\n\n\"Key word Scott, we are only pretending to be together. I don't care what she does with him.\" Nik said clearing his throat and both men stared at him in disbelief, \"What? It's only a stupid dance, nothing more or less.\" They still didn't say anything but just continued to stare at him, \"Man, let's move on to something else. I'm tired of talking about me.\" Nik finally said and they started laughing.\n\n\"Oh you are tired of talking about yourself? Mark that on your calendar James.\" Scott said as he shook his head.\n\nNik looked down at his phone tuning the guys out a little when Ramon came in talking to James. He had to admit, a little part of him wondered what they were doing now. Was he dancing close to her, touching her lower back? Was he looking into her big brown eyes noticing how they seem to sparkle? There could be a lot of things that happen during a dance, he should know himself. He shook his head almost laughing to himself. He was bugging. Why was he tripping this much? She wasn't his to claim or was she? Well, even if she wasn't, he didn't want lawyer boy to have her either. \n\n\"Hey, how about we go to your future wife's restaurant for lunch?\" Nik suggested.\n\n\"Are you hoping to catch Dominique there?\" James smiled.\n\n\"I'm hungry, they have good food, and I can put pressure on you to ask that delectable Jade to marry you before I do.\"\n\n\"Well, then I don't have anything to worry about because she don't want you.\" James smiled closing his file, \"Ramon, why don't you come too?\"\n\n\"Well, we need to leave someone here to watch over the place boss.\" He said.\n\n\"I get someone to take care of that, I want you to relax a little bit, you said you were up most of the night working on beats.\" Ramon quickly shrugged, \"You don't have to tell me twice.\" He said with his killer smile, \"Just let me wash up.\"\n\n\"That was nice of you.\" Nik said, \"Is something wrong with you?\" he joked.\n\n\"Ha ha, I just hate to see the kid work so much and hard. You know after he gets done here, he goes home and tries to make music. I want him to go out and enjoy life a little.\"\n\n\"It does seem like he likes to keep himself busy, did you ever ask him about that?\" Scott asked.\n\n\"I tried but he was just like, he likes to work. I know he is trying to save up for more music equipment, but I think it's something else.\"\n\n\"Well, until he tells you, there isn't much you can do.\" Scott said, \"Let's go get some food.\"\n\nAfter the dance class, Dominique and Jason went out to JK restaurant for some lunch. Despite the rocky start, everything went really well. They had a lot of fun and got some stuff accomplished. Jason has actually improved a lot, but what threw Dominique off the most was the way he held her. It was like he was too comfortable with having her in his arms and held her tight. It was nice but at the same time weird. It made her heart kind of skip a beat but it wasn't anything special about it. She shrugged it off and was just happy about the progress that they made.\n\n\"So, I didn't hurt your foot much, did I?\" he asked.\n\n\"No, I told you, you were great. That was definitely major progress since we were kids and you use to step all over my foot.\" She said and he started laughing.\n\n\"That's one thing about you Dominique; you were always so patient with me about that. You were patient with me about a lot of things.\" He said staring at her.\n\n\"I had no choice; you pretty much protected me through school. Without you, I would have been ducking and dodging the whole time.\"\n\n\"Yea, sometimes kids can be cruel, but look how much you grew up. You have your own practice and you are coming out with a book pretty soon. You have your own apartment and everything and you are really smart.\"\n\n\"Why Jason, I do believe you are trying to make me blush. Thank you so much for all the compliments, even though I'm not so sure why I deserve all of them.\" She giggled, feeling his eyes never leaving her face as she fork through the last of the spinach dip.\n\n\"Well, there is a lot you have done to deserve them. I mean, you even have a pretty decent relationship with that Nik fellow. When I see him look at you, I almost see what he sees in you.\" Uh oh, she immediately thought as her eyes cut to his.\n\nThis was the moment that Dominique has been waiting on, the moment that she has dreamed about, so why didn't it feel okay? \n\n\"Yea and I see what Candy sees in you too. You two are so lucky to have each other. I know with her constantly traveling, it can be a little hard.\"\n\n\"Yea it is, makes me wonder if she has the capability to be stable and sit still. We talked about it last night and she was saying that she likes traveling and seeing the world and there are still places she wants to see and things she wants to do. I thought she was ready to settle in one place but it looks like she is not completely ready. You know I done my traveling and I don't want to go anywhere else. I just wish she could be a little more stable, like you.\" He said reaching out for her hand and rubbing the back of it with his thumb, \"I never noticed that before.\"\n\n\"Noticed what?\" she swallowed nervously feeling her body tremble at his touch.\n\n\"Your eyes kind of sparkle sometimes; it's weird I never saw that before.\" \n\n\"Yea, they do that sometimes. I'm going to make a quick phone call, I'll be back.\" Dominique quickly said rushing to the back till she ran into Katrina, \"Is your office empty?\"\n\n\"Yea, are you okay?\" Katrina asked noticing the flush look on her face.\n\n\"I don't know yet, I'll be back.\" Dominique said walking past her. \n\nShe barged into the office and started pacing the floor. What to do? What to do? Was this really happening? Jason was actually coming on to her and she tried to feel happy. She tried to jump for joy, but nothing. What was going on? She turned immediately when the door swung open. She thought she was okay, but saw Jason standing on the other side.\n\n\"I just followed you in, to make sure you were okay.\" He said.\n\n\"I'm cool; just needed some breathing room.\"\n\n\"I made you feel uncomfortable.\" He said shoving his hands in his pockets.\n\n\"No, no. You know how high strung I normally am, that hasn't changed.\" He slowly walked closer to her and she was backed against the desk.\n\n\"That's too bad, because this is really going to make you high strung.\" He whispered just before she felt his lips crushing down on hers. \n\nDominique gasped against his mouth as she felt his tongue slowly coax hers. It wasn't deep or sensual like Nik's just average, but felt good. She allowed herself briefly to fall into the trance and her eyes fluttered open. She stared past him to the open door and gasped at the sight.",
        "\"Oh my God, Nik.\" She gasped as he stood there turning all shades of red.\n\nNik's eyes were huge as saucers as he saw Dominique still in his arms. What the fuck was going on? His mind boiled in rage and it zeroed in on one person. Jason turned around and was met with Nik's hard right. Dominique shrieked seeing the craze look in Nik's eyes. She never seen him like this before.\n\n\"You put your hands on mine!\" Nik shouted, punching Jason again. \n\n\"Nik! Please stop!\" Dominique said trying to pull him away from Jason, \"It didn't mean anything.\" Truthfully it really didn't. Yea it caught her off guard but it wasn't that spark she expected, maybe they need to do it again. \n\nJames and Scott rushed in the office and pulled Nik away from Jason, \"I'm sorry man. I didn't mean to do it.\"\n\n\"Well, I'm not going to mean to kick the shit out of you.\" Nik said trying to get out of his friend's hold.\n\n\"Calm down, Nik; remember lawyer.\" Scott reminded and Nik stop thrashing. \n\nNik looked down at the ground and looked back at Dominique. Her wide brown eyes didn't hide the guilt and regret. He couldn't look at her right now, not after what he saw. He just did the only thing he could think to do and left. He didn't hear his friends or Dominique calling after him, he just kept walking to his car. \n\nDominique came out just to see him pull off from the curb with his tires screeching. Damn it! She ran her nervous fingers through her hair. She had to fix this somehow, but didn't have the slightest clue how; she never had this problem before. \n\nJason came out and stood next to her, \"Dominique, I'm so sorry. I didn't...\"\n\n\"What were you thinking?! You kiss me and everything will be okay? You could have just ruined my relationship!\" She shook her head vigorously, \"I don't want to talk to you anymore right now. Just please leave me alone.\" She said and Jason just hung his head as he made his way to the car.\n\nJade came out and stood next to a frantic Dominique, \"Either you or Nik are going for the Oscars with that performance or I'm going have to kick your butt for hurting Nik.\"\n\n\"I want to kick my own butt. I didn't think he was going to kiss me. I came in there to get a breather by myself and then he pops up and Nik comes in.\"\n\n\"Isn't this what you wanted? I'm confused.\"\n\n\"I don't know. I know I don't want Nik mad at me. I need to talk to him, don't I?\"\n\n\"And fast.\" Jade added, \"I mean to see Nik lose it like that, is not that common.\" Dominique nodded, \"Can you take me home right quick please?\" \n\nJade nodded and they headed to her car. Dominique couldn't figure out what to say to him. Usually she had everything so planned, but she was really stumped. It racked her brain and also hurt her to think about what could possibly be going through Nik's mind. \n\nShe hurried out of Jade's car promising to call her and went upstairs. She stood in front of Nik's door, raising her fist and then slowly putting it down. What if he wasn't home? What if he was with another woman? He could have decided to call one of his bimbos. She took a deep breath and knocked on the door. \n\nNik opened the door and Dominique held her breath with excitement but it quickly died when he slammed it back in her face, \"Nik please open the door.\" She pleaded knocking on again.\n\n\"What do we need to talk about anymore Dominique? You got what you wanted right; lawyer boy was all over you. Why are you here?\"\n\n\"Nik, I really don't want to talk to you through this door, please.\" She pleaded again.\n\nHe swung it open and walked back into the house. She swallowed hard and walked in, closing the door. He didn't even look at her, he kept his back turned, in the kitchen. She never knew this same place could feel so cold. She felt so bad; she didn't want him to feel like this.\n\n\"Nik, let me explain what happened.\" She started\n\n\"I still don't get why you here and want to explain everything to me. You got your lawyer boy, salute.\" He said in a rich Italian accent she rarely heard.\n\n\"I don't know why he did what he did. I was in Katrina's office thinking when he came in. I didn't like entice it or anything.\" She said walking into the kitchen.\n\n\"Oh because if you would have enticed it, you two would have been on Katrina's desk.\" He said sharply, gazing briefly before walking past her.\n\n\"That's not fair. Why are you so upset about this?\"\n\n\"Hey, I'm just playing into my role.\" He swallowed. Nik put on a smile and turned to Dominique, \"I'm good, huh?\"\n\n\"No, it's something else, because you were mad at me. You really think I believe that after you punched out Jason that I would bring him to your apartment?\"\n\n\"Hey, I don't know what's going on in your mind, you lowered your standards with lawyer boy, so I'm not sure anymore. I guess that means you will be having a lot of boring sex with him now huh?\"\n\n\"You don't know what we could do and you better watch it.\" She said walking closer to him.\n\n\"Oh really? Is meek little Dominique threatening me?\" he scoffed.\n\n\"I'm saying that because you are speaking from an angry place and you when talking from there, you tend to say things you don't mean.\"\n\n\"Do you always have to be the therapist and logically think things through? You can't just let me be angry or have a response that shows your feelings, why? Because I have a damn good reason to be angry.\"\n\n\"No you do not. We made a deal that this was going to happen.\" She said following Nik to the door.\n\n\"Yea we did, so why are you still here? Why did you come all this way to make me feel better instead of tripping the night fantastic with lawyer boy?\"\n\nShe opened her mouth but nothing came out. Why was she here? She couldn't figure it out herself. Because it didn't feel right, something inside her said. He didn't make her loose herself in desire and provoked something that she didn't think was inside her. It only felt right with one person. No, that can't be it, she berated.\n\n\"Hello, I'm still waiting.\" Nik said getting angrier by the minute.\n\n\"Because we are friends and I care.\"\n\n\"Bull shit, you came because you know that lawyer boy isn't me and will never be. He won't make you feel like I do, and hit it just right.\" \n\nNik didn't anticipate the hard smack across his face; frankly neither did Dominique. She stared in shock at her own hand as if it hit the Queen of England out of her control. She quickly cleared her throat and looked as if she meant to do that, but Nik was heated. Something about the look she had on her face, the angry boiling inside of him, and the fact that she was here just made it so damn...sexy.\n\nHe grabbed her hands and pulled her against him, smashing his lips against hers. Dominique gasped against his lips and tried to pull away but found her body wouldn't move away; instead she moved closer. It was an animalistic feeling that bubbled inside of her that made her knees buckle. Luckily Nik held her up against him so that she wouldn't fall. This was also new for Nik, he never felt like this. He never felt this raw feeling of emotions and he wanted to ravish Dominique. It was so intense that his body was shaking. He yanked her shirt off her and did so with his own shirt. Her arms wrapped around him tightly as his lips stole her breath away. \n\nHe couldn't believe how turned on he was or how Dominique responded to him this way. His hands were still shaking as he reached to unbutton his pants and release his manhood. Dominique didn't mind when he pushed her against the door as long as his body was still covering hers. He lifted her up against it and she wrapped her legs around his waist. She never really been into the rough stuff, but this time she was making an exception for Nik. She wanted him; she needed to taste him; just to feel that he still wants her. She didn't even realize that she was holding her breath until she felt his fingers push her underwear to the side and him thrusting his full length inside her. \n\nThe feeling was just indescribable as her insides hugged him. Nik felt her arms tighten around him and he loved it. Her smell invaded his brain to where he couldn't focus on anything but it and her tightness. Her face stayed on his shoulder and her hot breath tickled his neck. He could hear the little moans she was making as her nails dug into his back. Dominique was in pure ecstasy as he throbbed and pulsed inside her. She never knew it could feel this good too. She was so into what he was doing inside her that she didn't notice the pain of her back scrapping on his door. She leaned her head against the door and exposed her neck to Nik. He took that time to bite down on her neck and heard Dominique, shriek.\n\n\"Oh damn!\" she screamed and felt her body started to shake and quiver.\n\nDominique pulled him away from her face by his hair looking at him as if she was trying to decipher who he was this animal. He felt her pussy tighten around him almost making him join her, but no, he wanted this to last. This was more than about pleasure, there was principle here. He sat her down on her feet and shortly parted from her warm embrace. Dominique sigh quickly died when she saw that he was still hard. Just what he expected to do with that thing, she thought to herself and he pulled her towards the couch. Oh no, she didn't know if she could take another time. He turned her so that she has her back to him and gulped as he pulled her shirt about her head. \n\n\"Nik, I think I should...\" Dominique started.\n\n\"Shut up and take it?\" he said licking the rim of her earlobe before nibbling the lobe.\n\nDominique shivered at the assault that Nik brought on. He pulled her skirt till it pooled on the floor. He rubbed his finger along her sensitive, slightly red pussy lips making Dominique shiver on contact. His fingers were coated in her wetness and she bucked against his fingers. Oh how she wish he would go ahead and just take her again. He took a hold of her hips, rubbing her erection up and down her lips. \n\n\"Nik, please.\" She moaned.\n\n\"Please what baby.\" He toyed knowing exactly what she wanted.\n\n\"I want it, Nik.\" She whined and Nik stroked himself loving their position.\n\n\"Want what? You have to speak up baby.\" He whispered.\n\nOh, he was not doing this to her. He knew what she wanted, why was he playing with her like this. Normally she would protest this, but the need was too much. \n\n\"Please fuck me Nik.\" She mewled as Nik smiled to himself.\n\nDominique screamed as he shoved his full length inside of her. He started to stroke inside of her slow, not a rhythm she wanted to keep. So Dominique did something she never thought she would do, she thrust back against him. Well, it's very rare that Dominique is in this position so she was going to enjoy it as much as possible. She turned her head to look back into his astonished face as he got the message to speed up. \n\nOh fuck, she looked so hot, Nik thought to himself as he completely sheathed himself in and out of her warm tightness. His fingers held her hips so tight that she was for sure that she was going to have bruises in the morning but that was last thing on her mind. She just wanted to feel as much of him as she could. Nik took a hold of her hair tugging her head back towards him. She rolled her eyes in the back of her head as the sensation overtook her.\n\n\"Fuck me Nik!\" she shouted and Nik couldn't believe his ears, \"Oh fuck that feels so good! I want it harder!\"\n\nNow here is the little hell cat that he's been waiting on. He plunged into her mercilessly as her screams of pleasure filled the room. Truth be told, this was so good to him too. He felt like his body was leaping all over the place and yet felt like it couldn't move; like the pleasure had him motionless. He finally felt his balls tighten as Dominique body's quivered again. She was sure she was about to pass out from this one. Nik pulled her body to his as he growled in her ear. HE spilled himself inside of her as their bodies convulsed together. Dominique's head fell back against his shoulder as her body went limp. \n\n\"Damn Dominique, I think you woke the neighbors.\" Nik breathed.\n\n\"I am the neighbor.\" She sighed and she felt his body shake with laughter as he kissed her soft lips. \n\nMan, she had him all twisted up in her little web. Nik wasn't sure what was going on with him, but he was starting to like it."
    ],
    "authorname": "Myanlass",
    "tags": [
        "interracial novella",
        "interracial drama",
        "drama",
        "romance novella"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/let-me-help-you-good-doctor-ch-06"
}