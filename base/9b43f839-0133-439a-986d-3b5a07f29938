{
    "title": "Bloodlines Ch.03",
    "pages": [
        "A week rushed by, the monotony of work and lectures only broken by sleep and food. Exams were next week, so pressure was up, even though Garth was less worried about his future after coming into his powers. He was confident he would be able to get by anyway. He kept replaying his tryst with Erica as inspiration in bed at night, though stress and long days took the edge off quite effectively.\n\nSaturday came around, blissfully free of plans, and he considered doing some more reading last minute before the exam on Monday. That would have to wait though; first he needed food and fresh air. He took off at a brisk walk towards the tiny mall a few blocks over, just next to Lisa's apartment. The black car down the road was still parked in its usual spot, he mused, wondering who around here had the money for such a nice set of wheels. No matter though, he had never seen anyone enter or leave it, and it was no concern of his in any case.\n\nQuesting out with his power was no longer an active choice; it was just something he did, like breathing or walking. It required no effort on his part unless he thought actively about it, kind of like how he had to remember to draw breath now, instead of it happening on its own. He decided his neighbors were a fairly complex mix of people, like any residential area, he supposed. Seeing their emotions did nothing to lessen the impression. There was a jungle of emotions swirling all around, practically all possible emotions like some chaotic painting, only making sense if he focused on a single person at a time. For example the lonely woman who lived a few apartments away to the right somewhere, or the couple who were very much in love next door. Several times a day, as a matter of fact, Garth mused.\n\nHe had been trying to judge how far he was able to sense people, figuring that was useful to know. By triangulating on the emotions of the old man who was always Angry, he moved around his neighborhood and decided his range was about three city blocks, or around a hundred meters. He figured there was some kind of gradual cutoff, since he could feel people outside that range by surging his power, though the tradeoff was probably not worth the cost of herbs as opposed to just closing in. The reverse was also true, to some extent. The closer he was to someone, the less effort it took to manipulate them, but rather than requiring less power, it was more about better control and resolution as he thought of it. In his apartment that still meant he had access to dozens of people to read and use for exercises, if only reading their emotions. For the most part.\n\nGarth pushed his cart down the aisle with canned goods and bags of soups and casseroles. He was by no means a bad chef, he just did not see the point in making elaborate meals for himself on weekdays. Ready meals that just needed heating was taking it one step too far, though. Usually.\n\nNow he was mostly annoyed at the kid screaming his lungs out the next aisle over, his mother having denied him some cereal or other. Garth could feel a throbbing begin behind his eyes, a headache announcing its arrival like a stampede of marching geese, the kid's scream for a fanfare. The emotions roiled off from the kid, Anger, for the most part, but as opposed to an adult's, the emotions seemed almost hollow. It was as if there was no substance to it, just hot air and flashy colors. Forming a spike of power, he prodded at the wave, only to see it burst and disappear. The kid silenced as if muted by the push of a button. Garth smiled and continued shopping in peace.\n\n\"Base, this is one-seven, come in!\" The radio gave off some static inside the car outside the mall. \"This is base, report, over.\" \"Subject four is inside the local mall, we are reading moderate activity. Do you want us to intervene?\" A few seconds of silence. \"Negative, one-seven, keep your distance and report any major changes. We are informing Mr. Schieler currently, we will use him as a means of control for now. Base out.\"\n\nAs he came back to his apartment, Garth noticed the black car was gone, though the thought was just a passing one. He glanced up towards Sophia's apartment, seeing the curtains were closed, sensing her inside. They had not seen much of each other lately, with him being away at lectures or work, though her emotions were muted pretty much all the time these days. It felt almost artificial, he thought, but that could just be his relative inexperience at interpreting people. He had just realized that they were complex, after all. He briefly considered trying to contact her, but decided against it. She was an unknown element after all, and Garth felt that he had enough stuff going on in his life as it was.\n\nSunday arrived, and with it an unusual bout of nerves. He had an exam the following afternoon, so he spent the morning reading furiously and learning little. Introductory Biochemistry was one of those subjects you either got or not. Garth was reasonably sure he got it, at least well enough, but he always messed up the pathway from Isocitrate to Succinate, always confusing where Coenzyme A belonged. Oh well, at least he could draw and name all the essential amino acids, that had to be something, right? And everyone always said there was no point reading much the day before an exam, that was too late to learn something new. Better to blow off some steam and do something relaxing or fun. He decided he could use a vent. Maybe have some fun in a controlled setting, with friends.\n\nGarth picked up the phone and dialed Lisa's number. \"Hi Lisa, it's me, Garth!\"\n\n\"Hi Garth, how are you?\" Lisa's voice came back.\n\n\"I was wondering if you had any plans tonight, I'm bouncing off the walls from tomorrow's exam and could use some company.\"\n\n\"Sure, I guess. I wasn't planning anything, but the apartment is a mess...\" She trailed off, sounding a little guarded.\n\nGarth was not taking no for an answer though. \"Great, I'll be right over. I'll bring a bottle of wine!\"\n\n\"Sure, ok, see you in a bit.\"\n\nAs he got to her front door, he quested out, finding two people inside, both familiar, both female. Lisa opened the door for him, a careful smile on her face, obviously a little uncomfortable. Reading her he found a roiling mass, Anxiety, Anticipation, Desire and others churning. A sudden insight struck Garth, adding two and two.\n\n\"Is Christa in the shower?\"\n\n\"Yeah, she...\" Lisa trailed off, caught unawares by his casual tone. \"How did you...? What...!? Oh crap!\" Realization dawned on her face. \"How much did you see?\" She was obviously referring to their little party a couple of weeks before.\n\n\"Well, not much really. When Josh started fucking Amy from behind, I saw the two of you were playing tonsil hockey, tearing each other's clothes off.\" Mortification and Embarrassment flared high. \"I figured there was no point trying anything with either of you girls, and I doubted Josh would want to spit roast Amy with me, so I went home.\"\n\nHis crude language struck a nerve and Embarrassment flared even higher with Arousal hot on its heels. Garth smiled inwardly, reaching out to Christa in the shower, feeling her comfortable, relaxed emotions. He began to tweak her, Arousal slowly simmering. Lisa got a small dose of it too, and a very subtle dampening of her Anxiety.\n\nGarth was weighing in his mind, wondering if he should say anything. His uncle had been clear that secrecy was paramount, but when he saw what his uncle had with Alyssa and Erica, he wanted something like that for himself. Something he chose, not something that was chosen for him. He knew Lisa and Christa well, they had been fast friends for years. E ven though they were shallow at times, he felt sure he could trust them. At least with parts of the truth. Maybe he could persuade the organization to let him include them as Jeff had done.\n\n\"By the way, you're welcome.\" Garth decided to take a leap of faith.\n\n\"What do you mean?\" Lisa said with confusion obvious on her face.\n\n\"You and Christa. I saw how you were both pining for the other but holding back. I nudged you to act on your desires. Lisa, I can influence your emotions.\"\n\n\"Haha, very funny.\" Scorn was heavy in her voice. He gave her a pointed look, holding her eyes with his and Garth saw Uncertainty and Nervousness.\n\n\"No way, you're messing with me.\" Her eyes flickered a little.\n\n\"You're serious? No way! Ok, prove it!\"\n\nGarth smiled, trying not to look condescending. He took hold of her Lust and yanked roughly. Her eyes flew open, pupils dilating and nostrils flaring. He pulled and pulled, her eyes starting to slide closed as she bucked a little, knees mashing together. Then he stopped abruptly, her Lust dropping like a stone. Lisa slumped like a marionette that got its string cut, air whooshing from her lungs. While she recovered he kept manipulating Christa, ramping the rate up a little.\n\n\"Shit! That was something else!\" Lisa trembled slightly, eyeing Garth carefully. \"I guess you weren't messing with me. Is this hypnosis or something?\"\n\n\"I don't know, exactly.\" He lied. \"It started a few weeks ago, it just appeared one day.\" Not a complete lie, that. Just not the whole truth either. He felt a little bad for holding back, but he wanted to gauge her reaction a little first. He opened the wine and poured two glasses, setting a third on the table between them as he told a heavily censored version of the latest events. All the while he kept working on Christa, her emotions responding nicely.\n\n\"That must have been quite a ride,\" Lisa said, wonder and awe in her voice. \"You can bend people's will. Wow! Just, wow...\" Her voice trailed off. \"I can't change emotions or control people, it's not like that,\" He said defensively. \"I can only increase or decrease something that's already there.\" Garth detected a hint of residual Lust and tugged on it very subtly, afraid she might get suspicious. Just to be on the safe side he pushed down a tiny bit on any negative emotions, keeping a steady push. Lisa did not seem to notice, her look far away in thought, though her finger twirled her hair a little.\n\n\"I wonder what's taking Christa so long. She's usually not that slow.\" She said.\n\nGarth had a very good idea what was taking her so long. Christa's emotions were roiling and pulsing in a steady rhythm, his pulling all but stopped as she kept them rising on her own in time with the pulsing. He was quite sure she was masturbating, orgasm not far off. Her Arousal spiked and they both heard a loud gasp from the bathroom. Lisa rose, Alarm and Anxiety rolling off her in waves. Garth surged his influence and tamped them down. She stopped dead, confusion apparent. \"Whaaat?\" Her voice was a little sluggish.\n\n\"Sssh, relax.\" He came up behind her, pulling her hair to the side, kissing her neck as he increased her Arousal and Lust. She sighed, her neck an erogenous zone, as he well knew. \"Christa is fine. More than fine I think.\" He let his hands roam her hips and stomach, gliding slowly up to cup her tits as he pushed and pulled, playing her like an instrument. Soon she was grinding her firm ass against his hard cock, leading his hands down towards her fly, urging him to touch her. Garth obliged, opening the button and slowly snaking a finger down towards her folds, coarse pubes parting. She groaned with pleasure as he connected with her clit, gently pressing down on it.\n\n\"Lisa! You'll never guess...\" Christa trailed off as she came face to face with Lisa, Garth's hands down her panties and on her now bared breast. Mouth opening and closing like a fish on land, she clutched a towel around her body, still moist hair cascading down over her shoulders. Garth pulled on her quite prominent Arousal and Lust, pushing down Confusion and a crest of what had to be Jealousy.\n\n\"Christa, dear, I was just showing Lisa here some tricks I've learned.\" He gave her the full force of his power, making her sway a little; her mind malleable like clay while she was off balance. \"Lose the towel and get over here, Lisa needs to have her pussy eaten.\"\n\nThe towel dropped, revealing a curvy figure Garth knew well. Heavy tits, sagging slightly and broad hips, a dark bush covering her pussy. He smiled, remembering fondly how he held those hips as he thrust into her, thumb playing with her inviting asshole. She stepped forward almost drunkenly, heavily influenced by him and fell to her knees before Lisa.\n\nGarth spread Lisa's lips open and thrust into her backside, pushing her into Christa's open mouth. They both cooed with pleasure, emotions flaring without his aid. He stepped back a little, dropping his own pants, cock springing free. He pushed it into Lisa's thigh gap, the top of his cock sliding along her wet lips and into Christa's mouth.\n\nHe grabbed Christa's head and pushed inside her mouth, cock slick with Lisa's juices. Then he began to fuck her face slowly, Lisa moaning as his cock ground against her pussy. Soon his cock was slick with saliva and pussy juice, ready for the next step.\n\nHe bent his knees, angling his cock up a little and aligned it with her open pussy. Tensing, he prepared and then thrust up, cock forcing her lips apart as he slid all the way inside in a single thrust. Lisa had always liked to fuck hard, coming extra hard when he pushed her roughly down and pulled her hair as he fucked her. Today was no exception.\n\nShe shrieked as Garth fucked her aggressively, holding her arms back, Christa mauling her tits. He was no longer manipulating their emotions, just watching them as a sea in storm. Wave after wave of Pleasure rolled off Lisa, and pretty soon she stiffened, her pussy squeezing his cock again and again.\n\n\"Christa! On your knees, now!\" Garth panted. She complied, gazing up at him adoringly, mouth open and tongue out. She was ready for him. He grabbed Lisa, lifting her stiff body off his cock, a slurping sound as it exited. He set her gently down on the couch and placed his cock in Christa's mouth. Her lips closed around it, her tongue tickling his head and slit. He groaned in pleasure and felt cum soaring up his shaft.\n\nPulling out, he came in rapid spurts all over Christa's face, glazing her in thick white cum. Then he groaned and fell down next to Lisa on the couch, cock slowly deflating. Christa purred and crawled towards them, leaning down to kiss Lisa, sharing his cum with her.\n\n\"What was that!?\" Lisa said as she recovered slightly, licking her lips to gather the last of him remaining on them. \"Did you do that?\" She looked at him.\n\n\"Yes, I'm sorry. I hadn't planned for this to happen exactly, but I got carried away by the rush. When Christa came in the shower, I lost control a little. Please don't be mad at me!?\"\n\n\"I'm not mad at you, not really. It's just. This is a little too much. What did you do to me? To us?\" She looked down at Christa who sat on her knees in front of them, not saying anything yet, just watching them. She had always been the quiet type. \"Ah, well, it's complicated,\" He began. \"Try anyway, you owe us!\" And so he told them. Everything. Almost. He obscured Erica, not wanting to talk too much about her to the girls, at least not yet. Anxious for their response, yet relieved at not keeping secrets, he realized he had formed a deeper connection with them after being intimate not only with their bodies (he had done that before, after all), but also with their minds. He trusted them, just as much as his uncle, only in a different way.\n\n\"So you're some kind of freak magician with superpowers?\" Lisa was still the one talking, Christa next to her on the couch, the second bottle of wine almost empty. \"I can remember being afraid when Christa moaned, then that fear just vanished, and that should have left me terrified. Except it didn't, I got horny instead, and then...\" She trailed off, sending him a look of mock disapproval.\n\n\"I'm sorry,\" He began. \"You looked so good, and I remembered how much you like it when I nibble on your neck.\" He reached out and pulled a little on her Lust, just enough to make it obvious. Her eyes grew wide. \"Stop it!\" She smiled as she said it. Christa winked at him from the other side of her and leaned in to nibble at her neck, at just the right spot. Garth checked his reserves, judging there to be at least another hour or so left of his herbs. Smiling, he got to work.\n\n\"Base, this is one-five, we might have a situation with subject four, please advice.\" The two men waited patiently in their car outside the apartment complex. \"One-five, this is base. We are initiating containment protocol three, teams one-six and two-one will take over surveillance of the apartment, you stay with subject four until further notice as usual.\"\n\nGarth was tired. Really tired. Last night had devolved into a proper orgy, all three of them eagerly licking, grinding, groping and fucking one another long after he had used his final reserve of power. Now, he was all but exhausted, walking the proverbial walk of shame home, clothes all wrinkled and askew. He did not mind in the slightest. But he did mind that his exam would start in only a few hours. Not his best choice of preparations, even if he was relaxed.\n\nFriday was his final exam, Morals and Ethics. He was just finishing his paper on the morality of sacrificing one to save many and the nuances of active versus passive choice; the old train problem. He was reasonably satisfied with his arguments, quite confident of passing. Sitting back he focused on his neuropathic sense, realizing with surprise that he was influencing the entire room, suppressing Nervousness and Anxiety without active thought. When had he started doing that? Had he done it before? His thoughts flickered back to the night when he had matched Lisa and Christa, had he been tweaking Amy and Josh before that as well? He really had no idea, he only remembered having his power active pretty much all the time, but no memory of doing something like this.\n\nShaken by the implications he decided to pay more attention; he was losing control too often. Lost in his own thoughts, he sat until the bell announced the end of the exam half an hour later, not really seeing or hearing anything, just trying to remember what he had done lately.\n\n\"It's a common problem for inexperienced neuros,\" Jeff explained. They were sitting in the break room at the shop. \"Imagine how that particular problem is for kines, we're quite sure that was a main contributing factor to the whole poltergeist-theory. Picture closet doors opening and closing at random.\" They both laughed at the absurdity.\n\n\"Many new to their power do this, it happens as your mind tries to adapt to the power. The process is not well described, so we don't know why it happens or what causes it. It usually passes quickly if you stay alert when ingesting herb. Now, I need you to listen carefully, this is serious.\" Garth perked up, mirth gone in a flash at his uncle's change in demeanor.\n\n\"I was approached by the organization several days ago; they are concerned with your frivolous use of power around others. They wanted me to talk to you earlier, but I got them to agree to let you finish your exams.\" Garth was confused, what was Jeff talking about? How could the organization know that? Was he being followed or something?\n\n\"What do you mean, uncle? How could anyone know that? I don't understand.\" \"You didn't think they would just let you run free, did you?\" A note of incredulity was obvious in Jeff's voice. \"These are powerful people, Garth. Many are high-ranking officials and politicians whose whole career would be ruined if this was common knowledge. They work very hard to keep a lid on this, and any threat to their position will be dealt with. Sometimes permanently.\" Jeff held Garth's eyes, imprinting the gravity with unblinking eyes.\n\nGarth felt sick. He had not really considered that, he had only been seeing things from his own perspective, and while he had been circumspect, at least in his own estimation, he started to realize others would not necessarily see it that way.",
        "\"Now, you are not going to be punished or anything, things are not that bad. You will, however, have to prove you are able to restrain yourself. You are hereby ordered to not use your power in any way for a week. I have convinced them that you will be able to do that. They have agreed to induct you formally after that. Your powers are too far advanced for them not to. And your friends, Lisa and Christa, right?\" Garth nodded. \"They will be approached and compelled to keep quiet about you and your power. They are still not sure how to handle that, and you can expect some tough questions about that at your induction. You had better be prepared to answer.\"\n\nGarth sat silently for a few minutes, absorbing the information and considering his options. Not that there were many. \"So I will be watched?\"\n\n\"Twenty four-seven. These people do not joke around. They have too much invested to risk anything like a rogue young man exposing them through ignorance or lack of discipline. There will be people watching you from time to time for years to come. Only after proving yourself to be above reproach will you be left alone. The organization's main task is keeping track of all active practitioners and possible new ones approaching their twentieth birthday. The ruling council, the four most senior members of each bloodline, rule absolute, and their justice can be harsh.\" Jeff's tone left little doubt he was perfectly sincere about the severity of the situation. Garth would have to be on his best behavior, he decided.\n\n\"I think I understand, uncle. I'll stay away from the herb until you say so.\" Garth's voice was subdued, perfectly mirroring his insides. \"What should I do now?\"\n\n\"Just go about your life as if none of this happened. Forget about your powers and make very sure you don't ingest any herb by mistake. So long as they don't get any readings of power from you, all will be good. Next Friday, after closing, we will be escorted to the induction. Lisa and Christa will be there as well.\"\n\nIn a way, Garth was secretly relieved at the prospect of not using his power. Discovering that he was influencing people subconsciously had shaken him, and he wondered what else he had done inadvertently of late. He hoped Jeff was correct in that it would pass. A break would be for the good in any case. He finished his shift at the shop, choosing to stay at home and just celebrate his exams with a few beers.\n\n\"Garth! What the FUCK!?\" Lisa was so furious his phone almost shook in his hand. \"We just got more or less ambushed by two scary guys in trench coats. Right outside the apartment!\" Uh-oh. Garth all but saw the shit as it splattered onto the fan, preparing for the coming storm. \"Lisa, I...\"\n\n\"SHUT UP!\" She shrieked. \"Do you have any idea how scary that was? How degrading? They pulled us into a van; we thought we were being kidnapped for crying out loud!\"\n\n\"I'm sorry, I...\" Lisa was not done yet, however. \"NO! You shut up and listen, I'm not done! I am so mad I don't know what I'm gonna do. I want to rip your balls off and feed them to you in pieces! Christa is still crying and shaking. They were so scary, and the things they said... Garth, why did you do this to us?\" Her steam was decreasing, that last part almost pleading.\n\n\"I'm so, so sorry,\" He began. \"I had no idea this would happen. I've been a damn fool, this is all my fault!\" \"Damn right it is!\" She muttered.\n\n\"I only learned about this today myself. Apparently they have been keeping me under surveillance the whole time, and I messed up. I never should have told you, or brought you into this. These are powerful people, and I don't want to think about what they'd do to you because of me. What did they say to you?\"\n\n\"They more or less threatened us and said we had to keep quiet. And that they would be watching us. It felt violating. I keep looking behind me, expecting to see someone watching. And they said we would have to come with you at some induction or something, next Friday. What was that about?\"\n\n\"I have been put on probation in a manner of speaking. I have to show I can control myself by abstaining from using my powers for a week. If I can do that, next Friday I will be formally inducted into the organization. I'd rather not dwell on what they might do to me, to us, if I mess up. These are powerful people, Lisa. You and Christa have to keep this quiet. I'll make this up to you, somehow.\"\n\n\"Oh, you'd better,\" Lisa said, a hint of playfulness in her tone. \"We'll think of something, I'm sure. We could use a manservant, couldn't we, Christa?\" That last in a slightly raised voice to Christa in the background. Garth smiled a little, seeing more opportunities than problems with that prospect.\n\n\"So, are we good then?\" He asked, hoping he had not ruined their friendship. \"I suppose,\" Lisa said slowly. \"We'll keep this to ourselves, it's not exactly something I'd tell Mom or Dad about, they don't even know Christa and I are living together either. But what is this induction-thing?\"\n\n\"I don't know, really, Jeff refused to tell me. I guess it's some kind of ritual or something, to mark me as a member of the organization. A practitioner, they call it. You, I don't know what they'll do about, but I promise to do everything in my power to protect you. There are way more members that don't have powers anyway, so my guess is you'll have to join and swear to keep quiet or something.\"\n\n\"We'll just have to live with that, I suppose. But if this backfires, it's coming out of your flesh. Literally!\" Lisa got some of her steam back, as if she needed to tell him was not in the clear. Not by a long shot yet.\n\n\"Of course,\" He conceded. \"And I AM very sorry, I never meant for this to happen, least of all to you. You're my best friends, and more.\" \"And more?\" Lisa was toying with him now. \"Don't you start getting all possessive on us, Garth Schieler. We're not your playthings, even if you happen to have a very nice plaything of your own. We're still mad at you, and we'll see what next Friday brings before we decide what to do to you...\" Her voice dripped with innuendo and unspoken promises. Garth hoped they were not all promises of pain.\n\nThe next week crawled by at a snail's pace. With no lectures or exams to worry about, he spent most of his days at the shop and his uncle's house. He was perusing old books and documents, learning about the history of his bloodline and the power, both from historical anecdotes and more scientific reports. Apparently the powers were measurable as a function of a certain type of brainwaves, though no one had ever been able to reproduce these waves in the lab. And how the herbs were converted to power was a black box, though some speculated they only served as a focus for some extrinsic power. One article compared it to a catalyst, though one that was consumed rather than being unreactive.\n\nIn any case, little was known or proven and the speculations differed between sources.\n\nHis research into the bloodlines proved more fruitful, at least in terms of actual, measurable knowledge. As he browsed through the family trees of both brothers, he saw a huge number of prominent figures, both living and dead, including no less than three Prime Ministers, several generals, a couple of famous musicians and a whole host of scientists of some renown. The bloodlines apparently bestowed quite a bit of opportunities to those with the powers. By association, the organization offered opportunities to the ones without power as well. This made him feel a little less guilty about dragging the girls into it. So long as they kept with the organization, this would likely provide more of an opportunity than a problem. In the back of his mind, he was already planning how to use this to the best effect. First he just had to convince them to induct Lisa and Christa as well. The alternatives were not very pleasant to consider.\n\nThe first few days without his powers was almost bliss, kind of like that feeling when a fan is turned off after hours. He enjoyed the silence, even though he felt blind at times, especially at the shop where he had started relying on his powers to read the customers and their responses to his sales pitch. It was not until the middle of the week before he found himself opening the drawer behind the counter to grab a couple of capsules, his hand reaching for them before he caught himself. He shivered at the prospect and decided to double his efforts to stay alert.\n\nThursday evening, the store was packed with regulars at nine fifty, ten minutes before closing time. Jeff was hosting an event that night and the turnout was larger than usual. He had been quite clear that Garth was not invited, yet, but that a number of members had wanted to meet him before the induction the day after. Garth got a number of long stares, most neutral or friendly, though some disapproving, if not exactly hostile. He could not fault them, he figured. He had messed up, after all. He was introduced to a number of people, none of which he could name ten minutes after, though several faces were familiar to him, likely from newspapers or such.\n\nAt ten, the group started drifting down the stairs to The Dungeon, several of them bringing various items from the shelves, not a few making Garth cringe. He waited until they had all gone down before dimming the lights, counting out the day's total and putting the money in the small safe in the storage room. After he had closed the safe he heard sounds drift up from the private room below, the sound muted by the thick floor. The sharp cracking sound of a rawhide whip was unmistakable, however. Garth shuddered slightly and left on tiptoes before closing the shop and going home. Jeff could open the doors from the inside when they were done.\n\nGarth was pacing nervously in his apartment. It was just before eight, Friday evening. Jeff had told him to go home after lunch, seeing no use for him as he was so distracted anyway. He had been rehearsing his statement for the last couple of hours, not sure what to expect, but determined to make them accept Lisa and Christa as his accomplices and someone worthy of trust. He had been able to abstain despite his almost-mishap, so he was not particularly worried for his own sake. He had felt blind and deaf at times without his extrasensory perception, though, wondering idly how he had been able to interact with anyone before he came into his power. Hopefully that would end tonight.\n\nA knock sounded on his door. Garth opened it, not really surprised at seeing two men in dark coats outside. \"Mr. Schieler, come with us please.\" One of them had a kind of badge, like a police officer, only with a yellow and a blue flower intertwining instead. They led him down outside his apartment low rise and into a black sedan parked outside, windows tinted dark. The car drove down the street, and at an intersection an identical car fell in behind them. Garth thought he saw Lisa's blonde locks inside, which made sense; the car had come from her street. They drove through town and up into the western hills, the wealthier part of town.\n\nThe car stopped outside a massive wrought-iron gate, waiting for it to open slowly by some remote signal. Off to both sides a tall brick wall enclosed the property inside. Gravel crunched as they drove down a long, winding road lined with ancient oak trees. Well-tended lawns and a small pond with a decorative bridge were visible off to the side. The property had a park-like feel to it, and everything reeked of upper class and old money.\n\nThey were shown out of the cars outside a huge brick mansion, more an institution than someone's home, Garth decided. Rows upon rows of cars were parked all around, in small lots spread out before the building. Some were expensive sports cars, others luxury brands and yet others perfectly normal family sedans. It seemed the organization spanned all layers of society, if the cars were any indication. Garth nodded to the girls and got a nervous smile back from both. Trying to project confidence, he smiled back. Their four escorts led them inside massive hardwood doors into a huge foyer where servants took their coats and jackets. \"Come with me, Mr. Schieler. Ladies.\" The lead servant indicated they follow deeper into the building. Their escorts, or guards, Garth was undecided, stayed behind, neutral looks on their faces.\n\nThe servant opened another set of doors, ushering them through. These opened up to a huge room packed with people, probably close to a hundred. Jeff stood at the front, arms wide in welcome. Garth also saw Alyssa, Erica and Dave off to the side, drinks in hand, smiling at them. \"Welcome!\" Jeff called loudly, coming to meet them. \"Good to see you, Garth. This must be Lisa and Christa?\" He gave them his best smile, and Garth smiled inwardly at their stammered responses. His uncle could be very charming when he chose to, which was pretty much all the time, come to think on it.\n\nGarth recognized some faces from the shop the night before, nodding to them and receiving nods in return, the looks noticeably more friendly today. Jeff led them into the room, introducing several people briefly as they stopped to pick up some drinks at a table. Probably a good idea to limit himself to one or two, Garth decided; it would not do to get drunk, at least not yet. The importance of the occasion started dawning on him slowly, and he felt underdressed even though several others were dressed like him, in simple pants and a shirt, top button undone.\n\nAfter completing a tour of the room and hearing lots of names Garth could not remember, Jeff led them over to Erica and the others. He wished dearly he had his powers just then, because Erica and Lisa stared at each other like stray cats, suddenly confronted and not knowing if they should fight or greet one another. Erica leaned in and kissed Garth, quite thoroughly. \"Garth, who's this?\" Lisa asked, her tone dangerously neutral. So she was allowed to be possessive, and he was not? Garth thought better of asking that, however. Without his herbs, Garth felt blind; even if he was more or less sure he would see Jealousy like a swamp all around them. A number of people turned sharply to regard the two women, and Garth saw several yellow flower tattoos.\n\n\"Lisa, Christa, this is Erica. I'm sure I mentioned her...\" Garth trailed off as he realized his mistake. \"Excuse me!?\" Erica all but spluttered. \"You're sure you mentioned me!? Garth, what is this? Who are these girls?\" Garth's head swiveled as he looked from one to the other, not knowing what to say, knowing he was in for it regardless. He chose the coward's way out and said nothing. Not that it helped much. \"Garth, who is this? What is she to you?\" Lisa asked, her voice rising a little. Garth was unsure, but he thought he heard Alyssa make a soft meowing sound under her breath, her wide grin clearly said she was enjoying the spectacle.\n\nErica grabbed his arm possessively, pulling him slightly away from Lisa and Christa. \"He's my, friend.\" Garth thought she was going to say something different for a split second. Lisa, however, grabbed Garth's other arm, pulling him back. \"Well, he's my, friend, too!\" She said heatedly, Christa joining in from the back. \"Yeah, we've known him for years!\" There was no mistaking the 'Meow!' from Alyssa this time.\n\n\"Girls, girls!\" Jeff said calmly, grabbing onto Garth's shoulders to steady him. All three girls calmed down visibly, an almost groggy look in all of their eyes. Garth could not see it of course, but he could imagine the influence spreading from his uncle as he quelled their raging emotions. \"I'm sure there's more than enough of young Garth for all of you to share. Here and now is neither the place nor the time.\" Polite applause rippled from all around, yellow tattoos visible as Jeff made a tiny stage bow. His prowess had not gone unnoticed by the other neuropaths as he defused the situation somewhat. Garth harbored no illusions he was in the clear, however. This would have to be handled delicately. Very delicately indeed.\n\nA gong sounded from the gallery above, and everyone turned to a small door off to the side. The lead servant from before stepped through as it opened. \"Mr. Schieler, Miss Andrews, Miss Newport, the High Council awaits.\" Garth felt a spike of alarm. This was it! The crowd parted, forming a straight path for them towards the door. Jeff patted him on the back, whispering loudly. \"You'll do fine, just answer truthfully.\"\n\nWhen they approached, the servant stopped them with a raised hand, palm outwards. Another servant approached from the side with a tray with three black hoods on it. \"I must insist. This is for their protection, not yours. You are not allowed to know their identities until they are satisfied you can be trusted.\" Garth looked at the girls, all three shrugged as one; in for a penny, in for a pound.\n\nThe hood smelled faintly of dust and something old, the fabric soft and comfortable, if one could ignore the temporary blindness, of course. He was led by the hand through the doorway, and Garth got the impression of a small room. There had to be several other people inside, judging from the sounds of breathing and rustling fabric. He was guided to a hard chair, and he guessed Lisa and Christa were being seated next to him.\n\n\"Mr. Schieler,\" A deep, faintly familiar voice began. \"You are of the Blood, and you are of the Power. This we know, and while that should have been enough, it is by no means a guarantee of your merit. Many before you have failed to uphold the standards we expect from a member of the Blood. It has not ended well for them.\" The statement was left to reverberate around the small chamber, his deep voice ringing. Another voice to the right spoke up next.\n\n\"It has come to our attention that you have proven less than discerning in your judgment. You have threatened that which we hold dear. That which we are. Such a threat cannot be taken lightly. What do you have to say in your defense?\"\n\nGarth began, the first words croaking from his suddenly dry throat. \"Well... Er...\" 'Great, Garth! Keep up the good work!' He berated himself. Drawing breath and swallowing, he began again. \"I showed poor judgment, for that I have no excuse. I will, however, argue that my upbringing is in part to blame for that. Just when I was approaching adulthood, my parents were taken from me, as you no doubt are aware.\" Tears stung in his eyes, but he ignored them and the pain in his chest. \"My uncle has explained that it is customary for a man to teach his son about the Blood once he reaches his majority, something I never got to experience. My uncle was given custody, true, but he is not at fault; my parents, or rather my mother, ostracized my uncle throughout my childhood.\" Garth swallowed, hoping he had not just made problems for his uncle.\n\n\"My poor judgment is my own, and I accept full responsibility for it. In the future I will show restraint and better judgment, thinking not only of my own, base needs, but also of the organization and all those of both Bloodlines. I accept any consequences you deem necessary to reinforce this pledge.\" Silence fell in the room as he sat back down, not really aware he had risen in the first place. Whispered conferences could faintly be heard as the council members argued. Minutes dragged along slowly, a trickle of nervous sweat running down his spine.\n\n\"We have considered your words, Mr. Schieler. Taking into consideration your show of restraint over the last week as well, we are satisfied with your sincerity to do better. We will consider further your willingness to accept the consequences; this is in your favor. You will be informed via your uncle what we decide shortly. Please rise.\" Garth rose as he heard a number of chairs being pushed back all around the room.\n\nA new voice, younger, intoned in a formal voice. \"Garth Schieler, of the Blood. We of the High Council have judged you and found you worthy to be accepted into our ranks as a Practitioner of the Power. You may remove your hood and leave.\" There was an air of finality to the words. He slowly removed the hood and looked around the room. Eight people stood behind a curved table, facing him and the girls who stood next to him, their hoods still in place. They were all of respectable age; the youngest appeared to be in his sixties. Four were clad in vibrant yellow robes, the other four in blue. Garth looked at their faces, all open and welcoming. He recognized the owner of the faintly familiar voice now; it was the voice of the Minister of Foreign Affairs.",
        "Garth felt bad for leaving the girls behind, but the dismissal had been clear, and he could think of no way to speak in their defense without ruining the ritual. He left through the same door as before, the servant closing it behind him, sealing the girls to their fate.\n\nAgain, Jeff stood ready, arms stretched out wide, a drink at the ready for him. \"Welcome! Again!\" Jeff laughed at his own joke, knowing it was silly. Garth could not help but smile, the reality of the situation dawning on him. He accepted the drink and a capsule of St. Johnswort from his uncle, soon reveling in the warmth and familiarity of all the emotions swirling around him. Everyone's spirits were up, though he detected a stab of Anxiety from either Lisa or Christa.\n\nErica was on him in a flash, her tongue trying to carve out his uvula, all propriety thrown overboard. Amusement surged from everyone around as he tried in vain to extricate himself from her attentions, finally giving up and grabbing her ass as he kissed her back. He tugged on her Arousal, knowing full well there was a room full of other neuropaths around him, all of them likely seeing what he was doing. Laughter rippled as she finally drew back, knees wobbly from his attentions. Erica growled at him, a low, throaty sound, and he was half afraid she would pounce on him right there in the middle of the room. He let up on his pulling, however, and soon she settled on a more controllable level of Arousal. Hot for sure, though not uncontrollable.\n\n\"Come on, this way.\" She said as she took his hand, pulling him along. Garth was not complaining, he was more than ready for a little fun with her after a dreary week. But he was a little concerned the others would think him rude. Jeff only winked, Amusement wafting from him, and from most of the other onlookers. Erica was also showing prominent Amusement, to Garth's puzzlement. Not that he was not amused himself, far from it; he just did not consider that the foremost emotion associated with sex.\n\nErica pulled him into a room off to the side, pushing him into a strange chair, kind of like one he would expect at a dentist. Then she crawled onto his lap, kissing and biting his neck as she ground her groin onto his now raging hard-on. She pushed his arm out to the side and snapped a manacle over it, locking it in place. She sat up and smiled at him, her palms resting on his chest, pelvis undulating on top of him. \"You can come on in now Chris, he's ready!\" Erica grinned evilly at him, stepping off and leaving him hanging. \"And that's for 'I thought I mentioned you'...\" She blew him a kiss and left.\n\nChris turned out to be a middle aged man with more tattoos than bare skin and a small bag of implements a tattoo artist would need. Soon he was wiping down Garth's wrist with alcohol before he started drawing on the lines of a stylized yellow flower on his wrist. All was done freehand and it was obvious he knew what he was doing. After about half an hour, the small tattoo was done, and Chris was washing away the excess ink with a damp cloth before massaging in some lotion and wrapping his wrist in cling film.\n\n\"Moisturize at least three times a day, but keep the wrapping on for the first twenty four hours. Keep it clean and don't expose it to the sun the first few months. Call a doctor if it gets red or starts swelling. The scabs should fall off in a week, two at most.\" His voice was all business, having not said a word until that.\n\nGarth walked back out into the big chamber, looking for his uncle and friends. Several people he did not know came over to congratulate, blue and yellow tattoos all over. He found Jeff talking to Lisa and Christa, though Alyssa and Erica were nowhere to be seen. Lisa greeted him a little coolly, though Christa came over and gave him a hug. \"She's still a little pissed, but don't worry about it, she's mostly over it. And she has no reason to be jealous of Erica, I'll be sure to remind her when we get home.\" \n\n\"The girls obviously made an impression on the council; they have been admitted to the organization. For now, they will be trained by a senior member, though in time they will be assigned to you as your aides. Much like Alyssa and Erica are to me. The council has also decided you are to be trained by other neuropaths in addition to me, we will know the details in the next couple of days.\" Garth nodded his understanding, still a little disappointed that Erica had left. He would have to find a way to make it up to her.\n\n\"As for your powers,\" Jeff added. \"I should not have to remind you that you need to be careful. Don't expose yourself, and if you use your power, be prepared to justify it if someone notices. You are off total surveillance, though there will be random checks quite often for the first few weeks.\" That made sense to Garth, and it was probably not a bad thing either, at least until he was fully in control.\n\n\"One more thing, I have not mentioned it before, since there were only the two of us. You will be meeting other practitioners from now on, and it's considered bad form to try and influence another one of us unless you have explicit consent. Extremely bad form actually.\" Garth nodded, his brain starting to go fuzzy at the edges from the night's many revelations and experiences.\n\nThe next morning, Garth woke feeling refreshed. He had gone straight to bed and been asleep before twelve. Now, eight hours later, he was a new and vastly improved human being. Exams and inductions were a thing of the past, and a whole summer of time off awaited him. He made coffee and a sandwich for breakfast, sick and tired of cereal, which was all he had bothered with lately. As he sat down by the counter he glanced out the window, looking across at Sophia's apartment. Her curtains were drawn back and she sat eating her own breakfast it seemed.\n\nTheir eyes met, both a little apprehensive it seemed. Her emotions seemed to be a little more vibrant today. Not that same, muted feel she had had before his hiatus. A few awkward seconds later he waved slightly, smiling carefully. The air seemed to whoosh out of her and she sank down as if she had been strung up. Joy spiked up and she smiled warmly and waved back. Not sure what to do, Garth pretended to reach for a magazine to read. He found one and put it on the counter, opening a random page. He gave her a small nod and looked down as if engrossed. She vanished out of sight shortly after.\n\nJeff informed him that afternoon that he was to be mentored by another neuropath in a small town two hour's train ride east. \"His name is Steven Schill. Our families are quite close; the Schieler and Schill branches converge around six generations back. He's like a fifth cousin or something. Steven has made a career for himself as a psychiatrist; he's very good with abnormal emotional patterns. You leave next Wednesday, all expenses covered by the organization.\" Garth nodded, half anticipating something like this. Two hours was not too bad, he would still be able to visit his friends, and it was only for a few weeks during summer break, he hoped. It did not exactly hurt that the town was famous for its beach either.\n\n\"We agreed that you should have an experienced member from the organization with you during your stay. To watch over you and keep you out of trouble.\" Jeff tried to hide a smug smile. \"Erica kindly volunteered to take on this task, onerous though it was, to quote her.\" His eyes sparkled at the joke, both of them grinning. \"I assume it's a reasonable assumption poor Alyssa will have no option but to stay at your place, then?\" Garth arched an eyebrow at his uncle, and Jeff put on an air of mock seriousness. \"Of course, who else would help her stay warm at night? You're taking her plaything away, after all.\"\n\n\"While you are in training, the organization will grant you a generous stipend, to better make you able to focus on your skills. When you eventually decide on a profession, there will be a tax to the organization, our primary income in addition to various real estate ventures. Erica will be in control of the money during your stay, as the senior representative.\" Jeff continued, though Garth was already looking forward to lazy days on the beach with Erica. He could think of worse ways to be held accountable for his poor judgement.\n\n\"I did it!\" Erica's voice bubbled with enthusiasm and she was all giddy. She was all but bouncing up and down inside the shop where Garth was restocking shelves.\n\n\"Thats. Great, I guess...\" Garth grasped at straws, his mind reeling. \"Uhm, what, exactly, did you do?\"\n\n\"I took the final one, I got all six inside!\"\n\n\"That's great! Congratulations!\" Garth nursed a silent hope but kept quiet, just enjoying the Pride and sense of accomplishment written all over her face and emotions. He had not spoken to her since the night of the induction, still not sure she was not mad at him. Her emotions seemed to say she was very excited to see him, however. She looked at him almost shyly. \"Want me to show you?\"\n\nGarth did cartwheels inside, but tried to stay calm on the outside. \"I'd love to, but I AM working.\"\n\n\"Pfft, Jeff won't mind. Besides there are no customers around.\" She grabbed his hand and pulled him along, only stopping to pick up the large Njoy plug from a velvet-lined box. \"Jeff! I need to borrow Garth for ten, no twenty minutes! Oh, and may I have the key to number two please?\"\n\nJeff smiled lewdly and tossed her a key, saying nothing. He just looked at Garth and tipped an imaginary hat to him, as if to say 'Good luck!'\n\n\"You sit right there and enjoy the show, mister!\" Her voice was commanding, brooking no argument. He sat down in the plush chair, looking around the room. He had never been inside either of the two last rooms upstairs, just called 'One' and 'Two'. A light hardwood floor contrasted the dark grey walls. Two plush armchairs faced a small dais, a large mirror behind it. Two spotlights focused on the dais to give it a stage-like appearance. Off to the side a metal pole hung on pegs, obviously meant to be erected in the middle if the stage if need be.\n\nErica squirted out a large dollop of lube from a dispenser-type bottle on a small table and kneeled on the floor, ass towards Garth. He watched, mesmerized, as she pulled her skirt up, bare ass and pussy greeting him. She deposited the lube in her crack, slowly working it into her puckered hole. Two fingers went inside, slick with lube. Working them in and out, her breathing grew labored, moisture coating her dark pink pussy lips. Garth tugged a little on her Lust and Arousal, soothing away the slight Pain as her sphincter protested a little. She purred in response, obviously feeling his attentions.\n\nWhen she had three fingers inside, she picked up the plug, coating it with lube as she supported her weight on her forehead, both hands busy around back. Working the plug slowly, she started stretching her opening a little. Soon she was pushing it almost halfway inside, increasing the pressure steadily.\n\n\"Get over here and keep pushing on it!\"\n\nIt was not a request, though Garth was happy to comply. He grabbed her hip and took hold of the signature oval ring, applying pressure. Her sphincter pushed back with surprising force. She started rocking and moaning, breath coming in gasps. Two fingers started gliding across her swollen clit, the other hand pulling her nipple piercing.\n\nHe gradually got the plug deeper, almost all the way inside now. She was panting, pussy opening and closing over and over. Her orgasm was close. Suddenly she stiffened, breath catching in her throat as her body seized up for a few seconds. Then, just as she deflated from the orgasm, she pushed back hard, an audible 'plop' as the plug slipped inside. Pain flared briefly, and Garth almost dampened it by reflex, until he saw how her Arousal and Pleasure intertwined with it, the total bringing her to a high, another small orgasm rocking her body. She groaned and breathed out through her teeth as she mastered the feeling of the large plug inside.\n\nHer Desire spiked as she looked up at him, saying. \"Tonight, your place. You make us something good to eat, I'll bring wine and lube. You don't get to say no!\" Then she kissed him and left, pulling her skirt down.\n\nGarth was trying to wipe the silly grin off his face as he re-entered the store and handed Jeff the key to room two. \"Erica said to put the large Njoy plug on her tab,\" Garth informed his uncle. \"Did she now?\" He smiled.\n\nThe rest of the day seemed to last for days, with Garth checking the time every other minute, waiting for his uncle to let him leave. He began questing out more actively to focus on something other than the clock that was obviously slowing down to annoy him. Sensing the emotions around him, he began by filtering out the familiar ones he knew by sight now, Jeff and Dave to start. Some other familiar patches were evident as well. Looking over at one, he spotted a head of platinum blond hair over by the anal toy section. The short young woman was back, only this time with her boyfriend in tow. She was pointing animatedly at the shelf, her Arousal and Lust pulsing. Her boyfriend was more Curiosity and Smugness, a little Satisfaction over a healthy dose of Lust himself. Garth smiled inwardly at the fact that he was almost two meters tall and built like a brick, easily twice her size. Before he could stop himself, he pulled slightly on her Arousal. Jeff cleared his throat and gave him a pointed look, shaking his head slightly. \"Sorry.\" Garth said, slightly embarrassed. \"I got carried away.\" \"Exactly,\" Jeff admonished. \"Stay focused.\"\n\nFinally, the clock decided to confirm it was indeed time for Garth to leave, several hours later than he would have liked. His place was reasonably tidy, but he wanted to make an impression on Erica. He wanted to make up for his blunder, but also to make sure she was pleased and relaxed. It would do well with a swipe of the vacuum and maybe a splash of soapy water, he decided. And he needed to figure at what to cook, as well as grab a shower. In short, time was at a premium.\n\nGarth was no chef. He knew that very well, so he had not gone for elegant nor refined, just simple and flavorful. The sauce was a pre-made one, all thick and smelling of tarragon. Steamed vegetables and oven baked potatoes would go well with two juicy sirloin steaks; simple yet good. His mind was mostly on dessert anyway.\n\nThe doorbell rang, and Garth tried to not run over to answer, adjusting his cock a little. Not that he needed to, they both knew what tonight was all about. \"Hi! Wow, nice place!\" Erica smiled warmly at him, holding out two bags, one clinking of bottles, the other heavy but unidentifiable. He accepted the bags and held the door for her, looking her over as she entered and removed her light coat. Her copper hair was in a loose bun, cascading artfully down her neck. It looked casual, but Garth was sure it had taken forever to fix. He swept his eyes down, her shapely body was clad in a formfitting blood red dress of some silky material, hugging her curves and showing nothing while implying all. She turned, and he looked up her flat stomach and the swell of her breasts, piercings clearly showing.\n\n\"My eyes are up here, you know...\" She said teasingly. He took in her face, artfully made up to look as if she did not have any make up on. He hastily set the bags down as she glided over to him, leaning in for a kiss. As they kissed, tongues dancing and exploring, her hand felt his now rock hard cock lightly, just barely grazing it. \"I take it that means you approve of how I look?\"\n\nHe held her at arm's length, admiring her. \"Wow! Just, wow!\" He had a hard time not drooling. Her dress ended mid-way down her thigh; bare, shapely legs ending in light summer shoes. \"You look absolutely stunning!\" His choice of a dark grey pair of pants and a light blue shirt suddenly felt simple. Her eyes told another story however. \"You don't look so bad yourself,\" She purred. \"I hope you're not particularly attached to those buttons.\" She grabbed the front of his shirt and pulled him in for another intense kiss.\n\nWith a show of supreme willpower, Garth disentangled and led her by the hand over to the counter separating his open kitchen from the living room. \"Have a seat while I start up the skillet, I didn't want to risk overcooking the steaks, how do you want yours?\" \"Rare.\" She said, crunching down on a crisp grape from his fruit bowl, licking the juice slowly from her lips as she looked at him. Garth busied himself around the kitchen, finding butter for the skillet and prepping the vegetables. He could feel her eyes on his back, her emotions wafting from her like a warm flood. He did not influence her, instead just basking in her heat.\n\n\"Would you like a drink while we wait? Food will be ready in about twenty minutes. I have white wine and beer.\" \"A beer would be nice, or we could open the red I brought.\" \"Let's save the wine for the meat,\" He said, handing her a bottle of a light summer beer. \"It's Boondock Brewery's latest, with a hint of lemon.\" He held his own bottle up in salute. \"Cheers!\" The smell of searing steaks soon spread throughout the kitchen as he juggled all the various dishes to make sure they were done at the same time.\n\nHe plated the food up and set the plates on the dining table, holding her chair out. \"A proper gentleman, who would have thought?\" She teased. As he poured the red wine her eyes were glued to him, almost making him blush. He felt like a morsel being eyed by a bird of prey. She tasted the wine, eyes never leaving his, then nodded approvingly and held her glass out to him. \"The food looks delicious, and smells even better. But what's for dessert?\" The innuendo was obvious.\n\n\"You.\" He deadpanned, her eyes narrowing in response, Arousal surging.\n\nDinner was a quick and quiet affair, both of them were famished, and even though Garth was quite pleased with his cooking skills, they only had one thing on their mind: Dessert. Garth watched her emotions swirl and ebb, like a tidal pool with a strong current. He did not have to resist influencing her, what he saw was more than intense enough. When they were done, Garth considered trying to break the silence with some small talk, but as he drew breath to speak, she leaned over and placed a finger on his lips, silencing him.\n\nShe stood slowly, thrusting her chest and hips out slightly in a languid way, slowly walking around the table towards him. He watched her intently, and her entire being oozed of raw sensuality. Pulling his chair out from the table, she sat down, straddled on his lab, faces meeting. Legs spreading wide, her dress rode up as she ground her bare pussy onto his bulge and leaned in to kiss him. Lust and Arousal roared in him, sparked by her kiss and fanned to a wildfire by her emotions as he drew them into himself. Her hands gripped his shirt and ripped it open, buttons flying, before she slid down, kissing her way down his chest.\n\nShe smiled up at him as she slowly drew the zipper down, his cock springing out; two could go without underwear. She purred as she took him in her mouth, licking and sucking, one hand gently squeezing his balls. Garth was so tense he felt like he was going to blow his load after just a few minutes. He stopped her by grabbing her head, holding her in place. On a hunch he grabbed her hair, pulling her off him, seeing how that caused several interesting emotions to rise up. He all but pulled her up to a standing position, pushing her back onto the table, plates and glasses clanking. He stood with her as he pulled her backwards, her arms supporting her on the table.\n\nHis cock connected with her pussy, bulbous head slowly parting her lips as he pushed against her, the other hand gliding across a firm breast. She whimpered slightly as he pushed more, head almost inside, lips just starting to close around his shaft. He grinned wickedly and pulled back, letting go of her, leaving her hanging. She hulked in disappointment, a pout on her lips, though it quickly vanished as he kneeled down, grabbing her hips to steady her. He latched on to her pussy, tasting her juice, twin groans coming from both.",
        "Garth reveled in her taste, sweet pussy juices flowing as he licked, bit, sucked and prodded with his lips and tongue. Reading her emotions like an open book, he quickly got her to the brink, and then held her there for several long minutes, slowing down and speeding up, keeping her close to but never over the edge. He noticed she was wearing a butt plug as he licked lower, intending to rim her. Instead of finding a puckered opening, he found a hard, faceted surface. Leaning back for a breath of air, he saw a black gem, facets sparkling. He grabbed the end of the plug, pulling lightly on it, seeing her squirm with pleasure. Diving back in, he took hold of the plug and started to pull on it as he licked her lips up and down. Just as she was getting close again, he gathered her clit between his lips and squashed down on it, trapping and holding it tight. At the same time, he ripped the plug out. She screamed as she tipped over the edge, her thighs almost crushing his head between them.\n\nThe whole table shook as she gripped the edges and spasmed, riding the powerful orgasm to the end. Through it all, he held her clit trapped, feeling how wave after wave of her orgasm washed over him, juices flowing in a steady stream down his chin and chest. As she slowly came down from her high, her legs relaxed and he released her clit. He stood and leaned in to kiss her, cock connecting with her pussy again. Her juices were all over his mouth and lower face, and as their mouths met, he pushed inside her slowly in one long, drawn-out movement. Another ripple passed through her whole body. As they kissed tenderly, he did not fuck her, he just stayed inside, enjoying the connection.\n\nShe pulled back, meeting his eyes, emotions a blur; this was more than just sex. \"I want you to be the first man to have my ass.\" Garth whooped inside, hoping but not daring to ask if that was what the lube was for. Still inside her, he cupped her face. \"I'd be honored.\" Then he kissed her again.\n\n\"Just give me few minutes to get ready.\" Erica said after he had reluctantly pulled out, letting her down from the table. He showed her to the bathroom, then spent the longest five minutes of his life clearing the table while he waited, cock like a flagpole in front of him the whole time as he walked around. A click announced the bathroom door opening, and Erica strode out. She had removed the dress and shoes, going barefoot, wearing only a black leather collar, two chains hanging down between her breasts. Nipple clamps dangled from the chains, not yet attached. She kneeled before him, looking down and adopting a meek look.\n\n\"Please, Sir. I have been bad and need to be punished. Will you please clamp me and spank me before you claim my virgin ass?\"\n\nGarth's mouth went dry. He really did not have much experience with submission, but Erica was not exactly vague in her request. He stepped up to her, his cock standing straight out still. \"Open your mouth,\" He said, trying to put on an air of confidence. She opened her mouth, tongue sticking out. Grabbing the chains, he pulled her onto his cock, pressing halfway in until he met her throat. He pushed against it, but the angle was off, so he changed approach; grabbing the back of her neck he held her in place. Then he took both clamps and placed them on her nipples, her mouth vibrating as she moaned onto his cock.\n\nGarth pulled out and grabbed the chains, using them to pull her up, her nipples stretching. Erica whimpered as he led her to the couch, pushing her against the back. He knelt behind her ass, grabbing it and pulling the cheeks apart, flicking his tongue across her puckered hole. He started licking from her pussy up to her ass, up and down, spreading her juices all over. Without warning, he slapped her ass, hard, leaving a clear palm print across the right cheek. Erica whimpered and flinched, her Pain and Arousal rising in unison. Smiling, he promptly added another palm print on the left, for symmetry of course.\n\nHe slapped her five more times in rapid order to a steady rhythm, harder each time. The sixth never fell, but Erica winced anyway, expecting it. Garth counted to three then slapped the hardest one yet, his palm stinging, the sound ricocheting off the walk. Erica yelped and shrank away, the couch blocking most of her movement. He reached out, stroking her sore buttock tenderly, and then pushed two fingers inside her sopping wet pussy, grinding her g-spot to add a counterpoint to the pain. He kept fingering her pussy slowly as he alternated slaps and kisses, bringing her back to the brink, teetering before an orgasm. When she approached the top, he slid one wet finger from her pussy up to the sphincter, gently but relentlessly pushing it in all the way. Her breath caught as he started slowly finger-fucking her ass and pussy.\n\nNot able to hold back any more, he squirted a generous dollop of lube in her crack, working it into her ass, smearing some on his cock. \"Reach back and spread your cheeks.\" It was not a request. She complied, baring it all to him as he grabbed his cock, lining it up with her back door. He pushed, seeing the skin part around him, squeezing tightly. Pushing harder he got most of the head inside, and then he stopped dead, unable to go deeper.\n\nConfused, he looked down, not understanding. Then he saw the problem; by pushing her head down on the sofa, he was essentially trying to push through her pelvis. He was hard, but not quite that hard. Grabbing her hands, he pulled her upper body up by the arms, her tits dangling in free air. As he rotated her hip, he suddenly had a straight path, cock sliding slowly but steadily into her. She gasped, then groaned deeper and deeper as he slid into her. \"So. Full!\" Her voice strained.\n\nAs his stomach met her ass, balls to pussy, he just held her there, ass clamping down on his cock. Her emotions rising like a tidal wave, slow and steady. He pulled out again, almost all the way before he started fucking her with exquisite slowness, giving her his full length with each stroke. There was no Pain, just Lust, Arousal and something more, certainly not Love, but more than simple Affection.\n\nHe was getting close, too close. He did not want to end this moment, the simple act of sliding in and out of her all that mattered. Again, he somehow fed her his Arousal, lessening his own and increasing her two-fold. That pushed her over the edge, though slowly and gradually, not violently but just as powerful. She hung limply in his arms, gasping for breath as she rode the orgasm. Holding her there, he enjoyed the way her muscles squeezed and massaged his cock, his immediate need to come gone.\n\nHe pulled out slowly, then walked her around the sofa and sat down, pulling her onto him. She straddled him on her knees across his lap and positioned his cock. Then she pushed down, her sphincter loose enough for him to slide into her. She leaned down to kiss him tenderly as she started riding, slowly at first, gradually increasing her pace. He just leaned back and enjoyed her in every way, body and mind. There was a bond forming between them, deeper with each thrust. He saw her orgasm a long way off, slowly rising like a flood again, relentless and unstoppable. Just as she was reaching the top, body seizing up and ass clamping down, he roughly yanked the nipple clamps off, twin spikes of Pain shooting up. That pushed them both over the edge, and his cock pulsed and squirted as she shook on top of him.\n\n\"Thank you!\" She whispered into his ear as she sat on his lap, cock still inside her, coming down slowly from her high. Garth just held her, his hands stroking her back from neck to ass, holding her tight.\n\nA sharp, white-hot emotion blasted through him from somewhere close by. He instinctively looked in the direction it had come from, seeing that his curtains were only halfway closed. Sophia was screaming something, pounding the window across the yard, murder in her eyes. Her emotions were impossible to sort, but all were intense and all were ugly. His first instinct was to reach out and stamp her emotions down, but he held back, not knowing if someone was watching. He rolled over and let Erica lie down on the couch, her eyes already drifting close. Then he quickly closed the curtains, not knowing what else to do.\n\nWhat just happened? Why was she so angry? How was she so angry? They had never actually met; he only knew her name from her mailbox for fuck's sake. It made no sense to him, though intellectually he saw that it had to have been Jealousy she had been feeling. It just made no sense to him at all.\n\nThe entire situation was freaking him out, but he was also too tired to care much right then. Erica was stirring on the couch, calling his name and grounding him a little. Double-checking the door was locked; he guided her step by step into his bedroom, collapsing beside her in the dark, drawing a blanket over them.\n\nJust before falling asleep, Garth felt Sophia's jumble of emotions move off to the distance, apparently walking or running down the street. He snuggled closer to Erica, spooning her as he drifted off.\n\nCarson watched the girl run down the street. She was unknown to them and besides, she came from the building across from young Mr. Schieler. \"He has been active the whole time, though not reaching out much, mostly sensing. Seems Jeff was right about him. Think he's asleep now, signal died down.\" \n\nCarson and his partner, Jones, drove slowly away, car dark with all lights off.\n\nGarth woke the next morning from the best dream he had ever had. He had dreamed about fucking Erica, in the ass even! He yawned and stretched, looking up at the white plaster ceiling. His cock throbbed as it usually did after a dream like this. Smiling, he grabbed it and started stroking slowly, savoring the feeling.\n\n\"Hey! That's my job!\" Garth jumped, whipping his head towards the door. Erica stood there, naked, two steaming mugs of coffee in her hands. Memories rushed back, pushing the dream from imagined fantasy to remembered action. It had not been a dream!\n\nErica set the mugs down on the nightstand and crawled into bed, naked body gliding against his. \"Hey there lover,\" She said between kisses, her pussy wet against his cock as she ground against it. \"Is that for me or are you expecting someone?\"\n\n\"All for you, baby, anywhere you want it.\" \"Anywhere?\" She shook her ass suggestively. Garth smiled and threw her onto her stomach, straddling her thighs, his cock between her cheeks.\n\n\"Bite down on the pillow, I'm going in dry.\"\n\nEnd of Chapter 3"
    ],
    "authorname": "MiddleAgedMan",
    "tags": [
        "neuropathy",
        "exhibitionism",
        "anal",
        "submission",
        "nonconsent",
        "spanking"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/bloodlines-ch-03"
}